// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"math"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/security/username"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/pgwire/pgcode"
	"github.com/cockroachdb/cockroach/pkg/sql/pgwire/pgerror"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treebin"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treecmp"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treewindow"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case treebin.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case treecmp.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: treecmp.ComparisonOperator{
					Symbol:             treecmp.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case treebin.BinaryOperator:

		switch op.Symbol {
		case treebin.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case treebin.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case treecmp.ComparisonOperator:
		switch op.Symbol {
		case treecmp.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:170

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() username.SQLUsername {
	return u.val.(username.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *username.SQLUsername {
	return u.val.(*username.SQLUsername)
}
func (u *sqlSymUnion) users() []username.SQLUsername {
	return u.val.([]username.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colTableDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) colDef() tree.ColumnDef {
	return u.val.(tree.ColumnDef)
}
func (u *sqlSymUnion) colDefList() tree.ColumnDefList {
	return u.val.(tree.ColumnDefList)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) storageParamKeys() []tree.Name {
	if params, ok := u.val.([]tree.Name); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) backupTargetList() tree.BackupTargetList {
	return u.val.(tree.BackupTargetList)
}
func (u *sqlSymUnion) backupTargetListPtr() *tree.BackupTargetList {
	return u.val.(*tree.BackupTargetList)
}
func (u *sqlSymUnion) grantTargetList() tree.GrantTargetList {
	return u.val.(tree.GrantTargetList)
}
func (u *sqlSymUnion) grantTargetListPtr() *tree.GrantTargetList {
	return u.val.(*tree.GrantTargetList)
}
func (u *sqlSymUnion) changefeedTargets() tree.ChangefeedTargets {
	return u.val.(tree.ChangefeedTargets)
}
func (u *sqlSymUnion) changefeedTarget() tree.ChangefeedTarget {
	return u.val.(tree.ChangefeedTarget)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() treewindow.WindowFrameExclusion {
	return u.val.(treewindow.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterChangefeedCmd() tree.AlterChangefeedCmd {
	return u.val.(tree.AlterChangefeedCmd)
}
func (u *sqlSymUnion) alterChangefeedCmds() tree.AlterChangefeedCmds {
	return u.val.(tree.AlterChangefeedCmds)
}
func (u *sqlSymUnion) backupKMS() tree.BackupKMS {
	return u.val.(tree.BackupKMS)
}
func (u *sqlSymUnion) alterBackupCmd() tree.AlterBackupCmd {
	return u.val.(tree.AlterBackupCmd)
}
func (u *sqlSymUnion) alterBackupCmds() tree.AlterBackupCmds {
	return u.val.(tree.AlterBackupCmds)
}
func (u *sqlSymUnion) alterBackupScheduleCmd() tree.AlterBackupScheduleCmd {
	return u.val.(tree.AlterBackupScheduleCmd)
}
func (u *sqlSymUnion) alterBackupScheduleCmds() tree.AlterBackupScheduleCmds {
	return u.val.(tree.AlterBackupScheduleCmds)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) relocateSubject() tree.RelocateSubject {
	return u.val.(tree.RelocateSubject)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() treecmp.ComparisonOperator {
	return u.val.(treecmp.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) showBackupDetails() tree.ShowBackupDetails {
	return u.val.(tree.ShowBackupDetails)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) scheduleLabelSpec() *tree.LabelSpec {
	return u.val.(*tree.LabelSpec)
}
func (u *sqlSymUnion) labelSpec() *tree.LabelSpec {
	return u.val.(*tree.LabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) targetObjectType() privilege.TargetObjectType {
	return u.val.(privilege.TargetObjectType)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}
func (u *sqlSymUnion) cursorSensitivity() tree.CursorSensitivity {
	return u.val.(tree.CursorSensitivity)
}
func (u *sqlSymUnion) cursorScrollOption() tree.CursorScrollOption {
	return u.val.(tree.CursorScrollOption)
}
func (u *sqlSymUnion) cursorStmt() tree.CursorStmt {
	return u.val.(tree.CursorStmt)
}
func (u *sqlSymUnion) asTenantClause() tree.TenantID {
	return u.val.(tree.TenantID)
}
func (u *sqlSymUnion) functionOptions() tree.FunctionOptions {
	return u.val.(tree.FunctionOptions)
}
func (u *sqlSymUnion) functionOption() tree.FunctionOption {
	return u.val.(tree.FunctionOption)
}
func (u *sqlSymUnion) functionArgs() tree.FuncArgs {
	return u.val.(tree.FuncArgs)
}
func (u *sqlSymUnion) functionArg() tree.FuncArg {
	return u.val.(tree.FuncArg)
}
func (u *sqlSymUnion) functionArgClass() tree.FuncArgClass {
	return u.val.(tree.FuncArgClass)
}
func (u *sqlSymUnion) stmts() tree.Statements {
	return u.val.(tree.Statements)
}
func (u *sqlSymUnion) routineBody() *tree.RoutineBody {
	return u.val.(*tree.RoutineBody)
}
func (u *sqlSymUnion) functionObj() tree.FuncObj {
	return u.val.(tree.FuncObj)
}
func (u *sqlSymUnion) functionObjs() tree.FuncObjs {
	return u.val.(tree.FuncObjs)
}

//line sql-gen.y:979
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ABSOLUTE = lexbase.ABSOLUTE
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASENSITIVE = lexbase.ASENSITIVE
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATOMIC = lexbase.ATOMIC
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BACKWARD = lexbase.BACKWARD
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CALLED = lexbase.CALLED
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const COMPLETIONS = lexbase.COMPLETIONS
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONNECTIONS = lexbase.CONNECTIONS
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COST = lexbase.COST
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEFINER = lexbase.DEFINER
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DEPENDS = lexbase.DEPENDS
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTED = lexbase.ENCRYPTED
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTERNAL = lexbase.EXTERNAL
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FORWARD = lexbase.FORWARD
const FREEZE = lexbase.FREEZE
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HEADER = lexbase.HEADER
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOLD = lexbase.HOLD
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMMUTABLE = lexbase.IMMUTABLE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INCREMENTAL_LOCATION = lexbase.INCREMENTAL_LOCATION
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INOUT = lexbase.INOUT
const INPUT = lexbase.INPUT
const INSENSITIVE = lexbase.INSENSITIVE
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const INVOKER = lexbase.INVOKER
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LABEL = lexbase.LABEL
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEAKPROOF = lexbase.LEAKPROOF
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MOVE = lexbase.MOVE
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEW_KMS = lexbase.NEW_KMS
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NOSQLLOGIN = lexbase.NOSQLLOGIN
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NONVOTERS = lexbase.NONVOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOVIEWACTIVITYREDACTED = lexbase.NOVIEWACTIVITYREDACTED
const NOVIEWCLUSTERSETTING = lexbase.NOVIEWCLUSTERSETTING
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const OLD_KMS = lexbase.OLD_KMS
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARALLEL = lexbase.PARALLEL
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIOR = lexbase.PRIOR
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const QUOTE = lexbase.QUOTE
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const RELATIVE = lexbase.RELATIVE
const RELOCATE = lexbase.RELOCATE
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTART = lexbase.RESTART
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETURN = lexbase.RETURN
const RETURNS = lexbase.RETURNS
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCROLL = lexbase.SCROLL
const SCHEMA = lexbase.SCHEMA
const SCHEMA_ONLY = lexbase.SCHEMA_ONLY
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SECONDARY = lexbase.SECONDARY
const SECURITY = lexbase.SECURITY
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETOF = lexbase.SETOF
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const SQLLOGIN = lexbase.SQLLOGIN
const STABLE = lexbase.STABLE
const START = lexbase.START
const STATE = lexbase.STATE
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SUPER = lexbase.SUPER
const SUPPORT = lexbase.SUPPORT
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TENANTS = lexbase.TENANTS
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TRANSFER = lexbase.TRANSFER
const TRANSFORM = lexbase.TRANSFORM
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLISTEN = lexbase.UNLISTEN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNSET = lexbase.UNSET
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VERIFY_BACKUP_TABLE_DATA = lexbase.VERIFY_BACKUP_TABLE_DATA
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIEWACTIVITYREDACTED = lexbase.VIEWACTIVITYREDACTED
const VIEWDEBUG = lexbase.VIEWDEBUG
const VIEWCLUSTERMETADATA = lexbase.VIEWCLUSTERMETADATA
const VIEWCLUSTERSETTING = lexbase.VIEWCLUSTERSETTING
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOLATILE = lexbase.VOLATILE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const TENANT_ALL = lexbase.TENANT_ALL
const SET_TRACING = lexbase.SET_TRACING
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const INTERVAL_SIMPLE = lexbase.INTERVAL_SIMPLE
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ABSOLUTE",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASENSITIVE",
	"ASYMMETRIC",
	"AT",
	"ATOMIC",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BACKWARD",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CALLED",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"COMPLETIONS",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONNECTIONS",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COST",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEFINER",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DEPENDS",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPERIMENTAL_RELOCATE",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTERNAL",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FORWARD",
	"FREEZE",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HEADER",
	"HIGH",
	"HISTOGRAM",
	"HOLD",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMMUTABLE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INCREMENTAL_LOCATION",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INITIALLY",
	"INNER",
	"INOUT",
	"INPUT",
	"INSENSITIVE",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"INVOKER",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LABEL",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEAKPROOF",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MOVE",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEW_KMS",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NOSQLLOGIN",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NONVOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOVIEWACTIVITYREDACTED",
	"NOVIEWCLUSTERSETTING",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"OLD_KMS",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARALLEL",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIOR",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"QUOTE",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"RELATIVE",
	"RELOCATE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTART",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETURN",
	"RETURNS",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCROLL",
	"SCHEMA",
	"SCHEMA_ONLY",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SECONDARY",
	"SECURITY",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETOF",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"SQLLOGIN",
	"STABLE",
	"START",
	"STATE",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SUPER",
	"SUPPORT",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TENANTS",
	"TESTING_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TRANSFER",
	"TRANSFORM",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLISTEN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNSET",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VERIFY_BACKUP_TABLE_DATA",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIEWACTIVITYREDACTED",
	"VIEWDEBUG",
	"VIEWCLUSTERMETADATA",
	"VIEWCLUSTERSETTING",
	"VIRTUAL",
	"VISIBLE",
	"VOLATILE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"TENANT_ALL",
	"SET_TRACING",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"INTERVAL_SIMPLE",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"';'",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:15778

//line yacctab:1
var sqlExca = [...]int16{
	-1, 0,
	1, 5,
	-2, 1907,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 64,
	284, 578,
	-2, 0,
	-1, 76,
	8, 1048,
	29, 1048,
	651, 1048,
	652, 1048,
	-2, 0,
	-1, 77,
	8, 1048,
	29, 1048,
	651, 1048,
	652, 1048,
	-2, 0,
	-1, 80,
	1, 1754,
	140, 1754,
	271, 1754,
	359, 1754,
	422, 1754,
	432, 1754,
	632, 1754,
	664, 1754,
	-2, 0,
	-1, 81,
	1, 1754,
	664, 1754,
	-2, 0,
	-1, 87,
	264, 293,
	566, 293,
	-2, 0,
	-1, 101,
	205, 479,
	250, 1628,
	266, 1628,
	284, 479,
	424, 479,
	436, 1371,
	480, 479,
	497, 1371,
	550, 1371,
	579, 479,
	608, 1371,
	-2, 0,
	-1, 108,
	142, 1907,
	259, 1907,
	591, 1907,
	592, 1907,
	-2, 0,
	-1, 126,
	162, 1878,
	183, 1878,
	196, 1878,
	262, 1878,
	298, 1878,
	372, 1878,
	383, 1878,
	585, 1878,
	-2, 1849,
	-1, 169,
	170, 1185,
	282, 1185,
	427, 1146,
	502, 1146,
	549, 1146,
	569, 1185,
	571, 1146,
	-2, 0,
	-1, 174,
	4, 1909,
	21, 1909,
	22, 1909,
	23, 1909,
	24, 1909,
	25, 1909,
	26, 1909,
	27, 1909,
	28, 1909,
	30, 1909,
	31, 1909,
	37, 1909,
	41, 1909,
	43, 1909,
	44, 1909,
	45, 1909,
	47, 1909,
	48, 1909,
	49, 1909,
	50, 1909,
	51, 1909,
	52, 1909,
	53, 1909,
	54, 1909,
	55, 1909,
	57, 1909,
	58, 1909,
	59, 1909,
	60, 1909,
	62, 1909,
	63, 1909,
	64, 1909,
	65, 1909,
	66, 1909,
	67, 1909,
	68, 1909,
	69, 1909,
	73, 1909,
	74, 1909,
	75, 1909,
	76, 1909,
	78, 1909,
	79, 1909,
	80, 1909,
	84, 1909,
	85, 1909,
	86, 1909,
	87, 1909,
	88, 1909,
	89, 1909,
	90, 1909,
	91, 1909,
	94, 1909,
	95, 1909,
	96, 1909,
	97, 1909,
	98, 1909,
	99, 1909,
	101, 1909,
	103, 1909,
	104, 1909,
	105, 1909,
	106, 1909,
	107, 1909,
	108, 1909,
	109, 1909,
	111, 1909,
	112, 1909,
	113, 1909,
	115, 1909,
	116, 1909,
	117, 1909,
	125, 1909,
	126, 1909,
	127, 1909,
	128, 1909,
	129, 1909,
	131, 1909,
	132, 1909,
	133, 1909,
	134, 1909,
	136, 1909,
	137, 1909,
	138, 1909,
	139, 1909,
	141, 1909,
	142, 1909,
	143, 1909,
	144, 1909,
	146, 1909,
	147, 1909,
	148, 1909,
	151, 1909,
	152, 1909,
	153, 1909,
	155, 1909,
	156, 1909,
	157, 1909,
	159, 1909,
	160, 1909,
	161, 1909,
	163, 1909,
	164, 1909,
	165, 1909,
	166, 1909,
	167, 1909,
	168, 1909,
	169, 1909,
	170, 1909,
	171, 1909,
	172, 1909,
	173, 1909,
	174, 1909,
	175, 1909,
	176, 1909,
	177, 1909,
	178, 1909,
	179, 1909,
	180, 1909,
	182, 1909,
	188, 1909,
	189, 1909,
	190, 1909,
	191, 1909,
	195, 1909,
	197, 1909,
	198, 1909,
	199, 1909,
	201, 1909,
	202, 1909,
	205, 1909,
	206, 1909,
	207, 1909,
	208, 1909,
	209, 1909,
	210, 1909,
	211, 1909,
	212, 1909,
	213, 1909,
	214, 1909,
	215, 1909,
	216, 1909,
	217, 1909,
	218, 1909,
	220, 1909,
	221, 1909,
	223, 1909,
	224, 1909,
	226, 1909,
	227, 1909,
	228, 1909,
	229, 1909,
	230, 1909,
	231, 1909,
	232, 1909,
	233, 1909,
	234, 1909,
	235, 1909,
	236, 1909,
	238, 1909,
	239, 1909,
	240, 1909,
	242, 1909,
	243, 1909,
	244, 1909,
	245, 1909,
	246, 1909,
	250, 1909,
	251, 1909,
	252, 1909,
	253, 1909,
	256, 1909,
	257, 1909,
	258, 1909,
	259, 1909,
	260, 1909,
	261, 1909,
	263, 1909,
	265, 1909,
	266, 1909,
	267, 1909,
	269, 1909,
	271, 1909,
	272, 1909,
	273, 1909,
	275, 1909,
	279, 1909,
	280, 1909,
	281, 1909,
	282, 1909,
	283, 1909,
	284, 1909,
	285, 1909,
	287, 1909,
	288, 1909,
	289, 1909,
	291, 1909,
	292, 1909,
	293, 1909,
	295, 1909,
	296, 1909,
	299, 1909,
	300, 1909,
	301, 1909,
	302, 1909,
	303, 1909,
	304, 1909,
	305, 1909,
	308, 1909,
	309, 1909,
	310, 1909,
	311, 1909,
	313, 1909,
	314, 1909,
	315, 1909,
	316, 1909,
	317, 1909,
	318, 1909,
	319, 1909,
	320, 1909,
	321, 1909,
	322, 1909,
	323, 1909,
	324, 1909,
	325, 1909,
	326, 1909,
	327, 1909,
	328, 1909,
	329, 1909,
	330, 1909,
	331, 1909,
	332, 1909,
	333, 1909,
	334, 1909,
	335, 1909,
	337, 1909,
	339, 1909,
	340, 1909,
	341, 1909,
	342, 1909,
	343, 1909,
	344, 1909,
	345, 1909,
	346, 1909,
	347, 1909,
	348, 1909,
	349, 1909,
	350, 1909,
	351, 1909,
	352, 1909,
	353, 1909,
	354, 1909,
	355, 1909,
	357, 1909,
	358, 1909,
	360, 1909,
	362, 1909,
	363, 1909,
	364, 1909,
	365, 1909,
	367, 1909,
	368, 1909,
	369, 1909,
	370, 1909,
	371, 1909,
	374, 1909,
	376, 1909,
	378, 1909,
	379, 1909,
	380, 1909,
	381, 1909,
	384, 1909,
	385, 1909,
	386, 1909,
	388, 1909,
	390, 1909,
	391, 1909,
	392, 1909,
	393, 1909,
	394, 1909,
	395, 1909,
	396, 1909,
	397, 1909,
	398, 1909,
	399, 1909,
	400, 1909,
	401, 1909,
	402, 1909,
	403, 1909,
	405, 1909,
	406, 1909,
	407, 1909,
	408, 1909,
	409, 1909,
	410, 1909,
	411, 1909,
	412, 1909,
	413, 1909,
	414, 1909,
	415, 1909,
	416, 1909,
	417, 1909,
	418, 1909,
	419, 1909,
	421, 1909,
	422, 1909,
	423, 1909,
	425, 1909,
	426, 1909,
	427, 1909,
	428, 1909,
	429, 1909,
	430, 1909,
	431, 1909,
	432, 1909,
	433, 1909,
	434, 1909,
	435, 1909,
	436, 1909,
	437, 1909,
	438, 1909,
	440, 1909,
	442, 1909,
	443, 1909,
	444, 1909,
	450, 1909,
	451, 1909,
	452, 1909,
	454, 1909,
	455, 1909,
	456, 1909,
	457, 1909,
	458, 1909,
	459, 1909,
	460, 1909,
	461, 1909,
	462, 1909,
	463, 1909,
	464, 1909,
	466, 1909,
	467, 1909,
	468, 1909,
	469, 1909,
	470, 1909,
	472, 1909,
	473, 1909,
	474, 1909,
	475, 1909,
	476, 1909,
	477, 1909,
	478, 1909,
	480, 1909,
	481, 1909,
	482, 1909,
	483, 1909,
	484, 1909,
	485, 1909,
	486, 1909,
	487, 1909,
	488, 1909,
	489, 1909,
	490, 1909,
	491, 1909,
	492, 1909,
	493, 1909,
	494, 1909,
	495, 1909,
	497, 1909,
	498, 1909,
	499, 1909,
	500, 1909,
	501, 1909,
	502, 1909,
	504, 1909,
	505, 1909,
	506, 1909,
	507, 1909,
	508, 1909,
	509, 1909,
	510, 1909,
	512, 1909,
	513, 1909,
	514, 1909,
	515, 1909,
	516, 1909,
	517, 1909,
	518, 1909,
	519, 1909,
	521, 1909,
	523, 1909,
	524, 1909,
	525, 1909,
	526, 1909,
	527, 1909,
	528, 1909,
	529, 1909,
	530, 1909,
	531, 1909,
	532, 1909,
	533, 1909,
	534, 1909,
	535, 1909,
	536, 1909,
	537, 1909,
	538, 1909,
	539, 1909,
	540, 1909,
	541, 1909,
	542, 1909,
	543, 1909,
	545, 1909,
	546, 1909,
	548, 1909,
	549, 1909,
	551, 1909,
	552, 1909,
	553, 1909,
	554, 1909,
	555, 1909,
	556, 1909,
	558, 1909,
	559, 1909,
	561, 1909,
	562, 1909,
	563, 1909,
	564, 1909,
	565, 1909,
	567, 1909,
	569, 1909,
	570, 1909,
	571, 1909,
	572, 1909,
	573, 1909,
	574, 1909,
	575, 1909,
	576, 1909,
	578, 1909,
	579, 1909,
	580, 1909,
	581, 1909,
	582, 1909,
	583, 1909,
	584, 1909,
	587, 1909,
	588, 1909,
	589, 1909,
	590, 1909,
	591, 1909,
	592, 1909,
	593, 1909,
	594, 1909,
	595, 1909,
	597, 1909,
	600, 1909,
	601, 1909,
	602, 1909,
	603, 1909,
	604, 1909,
	605, 1909,
	607, 1909,
	608, 1909,
	609, 1909,
	610, 1909,
	611, 1909,
	612, 1909,
	613, 1909,
	614, 1909,
	615, 1909,
	616, 1909,
	617, 1909,
	618, 1909,
	623, 1909,
	624, 1909,
	625, 1909,
	626, 1909,
	627, 1909,
	628, 1909,
	-2, 0,
	-1, 176,
	1, 1754,
	664, 1754,
	667, 1754,
	-2, 0,
	-1, 177,
	1, 1754,
	566, 1754,
	664, 1754,
	667, 1754,
	-2, 0,
	-1, 213,
	162, 1877,
	183, 1877,
	196, 1877,
	262, 1877,
	298, 1877,
	372, 1877,
	383, 1877,
	585, 1877,
	-2, 1852,
	-1, 274,
	4, 1916,
	5, 1916,
	6, 1916,
	7, 1916,
	8, 1916,
	9, 1916,
	10, 1916,
	21, 1916,
	22, 1916,
	23, 1916,
	24, 1916,
	25, 1916,
	26, 1916,
	27, 1916,
	28, 1916,
	30, 1916,
	31, 1916,
	37, 1916,
	38, 1916,
	41, 1916,
	43, 1916,
	44, 1916,
	45, 1916,
	46, 1916,
	47, 1916,
	48, 1916,
	49, 1916,
	50, 1916,
	51, 1916,
	52, 1916,
	53, 1916,
	54, 1916,
	55, 1916,
	57, 1916,
	58, 1916,
	59, 1916,
	60, 1916,
	62, 1916,
	63, 1916,
	64, 1916,
	65, 1916,
	66, 1916,
	67, 1916,
	68, 1916,
	69, 1916,
	70, 1916,
	71, 1916,
	72, 1916,
	73, 1916,
	74, 1916,
	75, 1916,
	76, 1916,
	78, 1916,
	79, 1916,
	80, 1916,
	82, 1916,
	84, 1916,
	85, 1916,
	86, 1916,
	87, 1916,
	88, 1916,
	89, 1916,
	90, 1916,
	91, 1916,
	94, 1916,
	95, 1916,
	96, 1916,
	97, 1916,
	98, 1916,
	99, 1916,
	101, 1916,
	103, 1916,
	104, 1916,
	105, 1916,
	106, 1916,
	107, 1916,
	108, 1916,
	109, 1916,
	111, 1916,
	112, 1916,
	113, 1916,
	114, 1916,
	115, 1916,
	116, 1916,
	117, 1916,
	118, 1916,
	119, 1916,
	120, 1916,
	121, 1916,
	122, 1916,
	123, 1916,
	124, 1916,
	125, 1916,
	126, 1916,
	127, 1916,
	128, 1916,
	129, 1916,
	130, 1916,
	131, 1916,
	132, 1916,
	133, 1916,
	134, 1916,
	135, 1916,
	136, 1916,
	137, 1916,
	138, 1916,
	139, 1916,
	141, 1916,
	142, 1916,
	143, 1916,
	144, 1916,
	146, 1916,
	147, 1916,
	148, 1916,
	151, 1916,
	152, 1916,
	153, 1916,
	155, 1916,
	156, 1916,
	157, 1916,
	159, 1916,
	160, 1916,
	161, 1916,
	163, 1916,
	164, 1916,
	165, 1916,
	166, 1916,
	167, 1916,
	168, 1916,
	169, 1916,
	170, 1916,
	171, 1916,
	172, 1916,
	173, 1916,
	174, 1916,
	175, 1916,
	176, 1916,
	177, 1916,
	178, 1916,
	179, 1916,
	180, 1916,
	181, 1916,
	182, 1916,
	188, 1916,
	189, 1916,
	190, 1916,
	191, 1916,
	195, 1916,
	197, 1916,
	198, 1916,
	199, 1916,
	201, 1916,
	202, 1916,
	204, 1916,
	205, 1916,
	206, 1916,
	207, 1916,
	208, 1916,
	209, 1916,
	210, 1916,
	211, 1916,
	212, 1916,
	213, 1916,
	214, 1916,
	215, 1916,
	216, 1916,
	217, 1916,
	218, 1916,
	220, 1916,
	221, 1916,
	223, 1916,
	224, 1916,
	226, 1916,
	227, 1916,
	228, 1916,
	229, 1916,
	230, 1916,
	231, 1916,
	232, 1916,
	233, 1916,
	234, 1916,
	235, 1916,
	236, 1916,
	237, 1916,
	238, 1916,
	239, 1916,
	240, 1916,
	242, 1916,
	243, 1916,
	244, 1916,
	245, 1916,
	246, 1916,
	250, 1916,
	251, 1916,
	252, 1916,
	253, 1916,
	255, 1916,
	256, 1916,
	257, 1916,
	258, 1916,
	259, 1916,
	260, 1916,
	261, 1916,
	263, 1916,
	265, 1916,
	266, 1916,
	267, 1916,
	268, 1916,
	269, 1916,
	270, 1916,
	271, 1916,
	272, 1916,
	273, 1916,
	274, 1916,
	275, 1916,
	279, 1916,
	280, 1916,
	281, 1916,
	282, 1916,
	283, 1916,
	284, 1916,
	285, 1916,
	287, 1916,
	288, 1916,
	289, 1916,
	291, 1916,
	292, 1916,
	293, 1916,
	294, 1916,
	295, 1916,
	296, 1916,
	297, 1916,
	299, 1916,
	300, 1916,
	301, 1916,
	302, 1916,
	303, 1916,
	304, 1916,
	305, 1916,
	306, 1916,
	307, 1916,
	308, 1916,
	309, 1916,
	310, 1916,
	311, 1916,
	313, 1916,
	314, 1916,
	315, 1916,
	316, 1916,
	317, 1916,
	318, 1916,
	319, 1916,
	320, 1916,
	321, 1916,
	322, 1916,
	323, 1916,
	324, 1916,
	325, 1916,
	326, 1916,
	327, 1916,
	328, 1916,
	329, 1916,
	330, 1916,
	331, 1916,
	332, 1916,
	333, 1916,
	334, 1916,
	335, 1916,
	337, 1916,
	338, 1916,
	339, 1916,
	340, 1916,
	341, 1916,
	342, 1916,
	343, 1916,
	344, 1916,
	345, 1916,
	346, 1916,
	347, 1916,
	348, 1916,
	349, 1916,
	350, 1916,
	351, 1916,
	352, 1916,
	353, 1916,
	354, 1916,
	355, 1916,
	356, 1916,
	357, 1916,
	358, 1916,
	359, 1916,
	360, 1916,
	361, 1916,
	362, 1916,
	363, 1916,
	364, 1916,
	365, 1916,
	366, 1916,
	367, 1916,
	368, 1916,
	369, 1916,
	370, 1916,
	371, 1916,
	374, 1916,
	376, 1916,
	379, 1916,
	380, 1916,
	381, 1916,
	384, 1916,
	385, 1916,
	386, 1916,
	387, 1916,
	388, 1916,
	389, 1916,
	390, 1916,
	391, 1916,
	392, 1916,
	393, 1916,
	394, 1916,
	395, 1916,
	396, 1916,
	397, 1916,
	398, 1916,
	399, 1916,
	400, 1916,
	401, 1916,
	402, 1916,
	403, 1916,
	405, 1916,
	406, 1916,
	407, 1916,
	408, 1916,
	409, 1916,
	410, 1916,
	411, 1916,
	412, 1916,
	413, 1916,
	414, 1916,
	415, 1916,
	416, 1916,
	417, 1916,
	418, 1916,
	419, 1916,
	421, 1916,
	422, 1916,
	423, 1916,
	425, 1916,
	426, 1916,
	427, 1916,
	428, 1916,
	429, 1916,
	430, 1916,
	431, 1916,
	432, 1916,
	433, 1916,
	434, 1916,
	435, 1916,
	436, 1916,
	437, 1916,
	438, 1916,
	440, 1916,
	442, 1916,
	443, 1916,
	444, 1916,
	450, 1916,
	451, 1916,
	452, 1916,
	454, 1916,
	455, 1916,
	456, 1916,
	457, 1916,
	458, 1916,
	459, 1916,
	460, 1916,
	461, 1916,
	462, 1916,
	463, 1916,
	464, 1916,
	466, 1916,
	467, 1916,
	468, 1916,
	469, 1916,
	470, 1916,
	471, 1916,
	472, 1916,
	473, 1916,
	474, 1916,
	475, 1916,
	476, 1916,
	477, 1916,
	478, 1916,
	480, 1916,
	481, 1916,
	482, 1916,
	483, 1916,
	484, 1916,
	485, 1916,
	486, 1916,
	487, 1916,
	488, 1916,
	489, 1916,
	490, 1916,
	491, 1916,
	492, 1916,
	493, 1916,
	494, 1916,
	495, 1916,
	497, 1916,
	498, 1916,
	499, 1916,
	500, 1916,
	501, 1916,
	502, 1916,
	503, 1916,
	504, 1916,
	505, 1916,
	506, 1916,
	507, 1916,
	508, 1916,
	509, 1916,
	510, 1916,
	511, 1916,
	512, 1916,
	513, 1916,
	514, 1916,
	515, 1916,
	516, 1916,
	517, 1916,
	518, 1916,
	519, 1916,
	521, 1916,
	523, 1916,
	524, 1916,
	525, 1916,
	526, 1916,
	527, 1916,
	528, 1916,
	529, 1916,
	530, 1916,
	531, 1916,
	532, 1916,
	533, 1916,
	534, 1916,
	535, 1916,
	536, 1916,
	537, 1916,
	538, 1916,
	539, 1916,
	540, 1916,
	541, 1916,
	542, 1916,
	543, 1916,
	545, 1916,
	546, 1916,
	547, 1916,
	548, 1916,
	549, 1916,
	551, 1916,
	552, 1916,
	553, 1916,
	554, 1916,
	555, 1916,
	556, 1916,
	558, 1916,
	559, 1916,
	561, 1916,
	562, 1916,
	563, 1916,
	564, 1916,
	565, 1916,
	567, 1916,
	569, 1916,
	570, 1916,
	571, 1916,
	572, 1916,
	573, 1916,
	574, 1916,
	575, 1916,
	576, 1916,
	577, 1916,
	578, 1916,
	579, 1916,
	580, 1916,
	581, 1916,
	582, 1916,
	583, 1916,
	584, 1916,
	586, 1916,
	587, 1916,
	588, 1916,
	589, 1916,
	590, 1916,
	591, 1916,
	592, 1916,
	593, 1916,
	594, 1916,
	595, 1916,
	596, 1916,
	597, 1916,
	600, 1916,
	601, 1916,
	602, 1916,
	603, 1916,
	604, 1916,
	605, 1916,
	607, 1916,
	608, 1916,
	609, 1916,
	610, 1916,
	611, 1916,
	612, 1916,
	613, 1916,
	614, 1916,
	615, 1916,
	616, 1916,
	617, 1916,
	618, 1916,
	623, 1916,
	624, 1916,
	625, 1916,
	626, 1916,
	627, 1916,
	628, 1916,
	629, 1916,
	644, 1916,
	651, 1916,
	652, 1916,
	653, 1916,
	661, 1916,
	665, 1916,
	-2, 0,
	-1, 854,
	4, 1626,
	21, 1626,
	22, 1626,
	23, 1626,
	24, 1626,
	25, 1626,
	26, 1626,
	27, 1626,
	28, 1626,
	30, 1626,
	31, 1626,
	37, 1626,
	41, 1626,
	43, 1626,
	44, 1626,
	45, 1626,
	47, 1626,
	48, 1626,
	49, 1626,
	50, 1626,
	51, 1626,
	52, 1626,
	53, 1626,
	54, 1626,
	55, 1626,
	57, 1626,
	58, 1626,
	59, 1626,
	60, 1626,
	62, 1626,
	63, 1626,
	64, 1626,
	65, 1626,
	66, 1626,
	67, 1626,
	68, 1626,
	69, 1626,
	73, 1626,
	74, 1626,
	75, 1626,
	76, 1626,
	78, 1626,
	79, 1626,
	80, 1626,
	84, 1626,
	85, 1626,
	86, 1626,
	87, 1626,
	88, 1626,
	89, 1626,
	90, 1626,
	91, 1626,
	94, 1626,
	95, 1626,
	96, 1626,
	97, 1626,
	98, 1626,
	99, 1626,
	101, 1626,
	103, 1626,
	104, 1626,
	105, 1626,
	106, 1626,
	107, 1626,
	108, 1626,
	109, 1626,
	111, 1626,
	112, 1626,
	113, 1626,
	115, 1626,
	116, 1626,
	117, 1626,
	125, 1626,
	126, 1626,
	127, 1626,
	128, 1626,
	129, 1626,
	131, 1626,
	132, 1626,
	133, 1626,
	134, 1626,
	136, 1626,
	137, 1626,
	138, 1626,
	139, 1626,
	141, 1626,
	142, 1626,
	143, 1626,
	144, 1626,
	146, 1626,
	147, 1626,
	148, 1626,
	151, 1626,
	152, 1626,
	153, 1626,
	155, 1626,
	156, 1626,
	157, 1626,
	159, 1626,
	160, 1626,
	161, 1626,
	163, 1626,
	164, 1626,
	165, 1626,
	166, 1626,
	167, 1626,
	168, 1626,
	169, 1626,
	170, 1626,
	171, 1626,
	172, 1626,
	173, 1626,
	174, 1626,
	175, 1626,
	176, 1626,
	177, 1626,
	178, 1626,
	179, 1626,
	180, 1626,
	182, 1626,
	188, 1626,
	189, 1626,
	190, 1626,
	191, 1626,
	195, 1626,
	197, 1626,
	198, 1626,
	199, 1626,
	201, 1626,
	202, 1626,
	205, 1626,
	206, 1626,
	207, 1626,
	208, 1626,
	209, 1626,
	210, 1626,
	211, 1626,
	212, 1626,
	213, 1626,
	214, 1626,
	215, 1626,
	216, 1626,
	217, 1626,
	218, 1626,
	220, 1626,
	221, 1626,
	223, 1626,
	224, 1626,
	226, 1626,
	227, 1626,
	228, 1626,
	229, 1626,
	230, 1626,
	231, 1626,
	232, 1626,
	233, 1626,
	234, 1626,
	235, 1626,
	236, 1626,
	238, 1626,
	239, 1626,
	240, 1626,
	242, 1626,
	243, 1626,
	244, 1626,
	245, 1626,
	246, 1626,
	250, 1626,
	251, 1626,
	252, 1626,
	253, 1626,
	256, 1626,
	257, 1626,
	258, 1626,
	259, 1626,
	260, 1626,
	261, 1626,
	263, 1626,
	265, 1626,
	266, 1626,
	267, 1626,
	269, 1626,
	271, 1626,
	272, 1626,
	273, 1626,
	275, 1626,
	279, 1626,
	280, 1626,
	281, 1626,
	282, 1626,
	283, 1626,
	284, 1626,
	285, 1626,
	287, 1626,
	288, 1626,
	289, 1626,
	291, 1626,
	292, 1626,
	293, 1626,
	295, 1626,
	296, 1626,
	299, 1626,
	300, 1626,
	301, 1626,
	302, 1626,
	303, 1626,
	304, 1626,
	305, 1626,
	308, 1626,
	309, 1626,
	310, 1626,
	311, 1626,
	313, 1626,
	314, 1626,
	315, 1626,
	316, 1626,
	317, 1626,
	318, 1626,
	319, 1626,
	320, 1626,
	321, 1626,
	322, 1626,
	323, 1626,
	324, 1626,
	325, 1626,
	326, 1626,
	327, 1626,
	328, 1626,
	329, 1626,
	330, 1626,
	331, 1626,
	332, 1626,
	333, 1626,
	334, 1626,
	335, 1626,
	337, 1626,
	339, 1626,
	340, 1626,
	341, 1626,
	342, 1626,
	343, 1626,
	344, 1626,
	345, 1626,
	346, 1626,
	347, 1626,
	348, 1626,
	349, 1626,
	350, 1626,
	351, 1626,
	352, 1626,
	353, 1626,
	354, 1626,
	355, 1626,
	357, 1626,
	358, 1626,
	360, 1626,
	362, 1626,
	363, 1626,
	364, 1626,
	365, 1626,
	367, 1626,
	368, 1626,
	369, 1626,
	370, 1626,
	371, 1626,
	374, 1626,
	376, 1626,
	379, 1626,
	380, 1626,
	381, 1626,
	384, 1626,
	385, 1626,
	386, 1626,
	388, 1626,
	390, 1626,
	391, 1626,
	392, 1626,
	393, 1626,
	394, 1626,
	395, 1626,
	396, 1626,
	397, 1626,
	398, 1626,
	399, 1626,
	400, 1626,
	401, 1626,
	402, 1626,
	403, 1626,
	405, 1626,
	406, 1626,
	407, 1626,
	408, 1626,
	409, 1626,
	410, 1626,
	411, 1626,
	412, 1626,
	413, 1626,
	414, 1626,
	415, 1626,
	416, 1626,
	417, 1626,
	418, 1626,
	419, 1626,
	421, 1626,
	422, 1626,
	423, 1626,
	425, 1626,
	426, 1626,
	427, 1626,
	428, 1626,
	429, 1626,
	430, 1626,
	431, 1626,
	432, 1626,
	433, 1626,
	434, 1626,
	435, 1626,
	436, 1626,
	437, 1626,
	438, 1626,
	440, 1626,
	442, 1626,
	443, 1626,
	444, 1626,
	450, 1626,
	451, 1626,
	452, 1626,
	454, 1626,
	455, 1626,
	456, 1626,
	457, 1626,
	458, 1626,
	459, 1626,
	460, 1626,
	461, 1626,
	462, 1626,
	463, 1626,
	464, 1626,
	466, 1626,
	467, 1626,
	468, 1626,
	469, 1626,
	470, 1626,
	472, 1626,
	473, 1626,
	474, 1626,
	475, 1626,
	476, 1626,
	477, 1626,
	478, 1626,
	480, 1626,
	481, 1626,
	482, 1626,
	483, 1626,
	484, 1626,
	485, 1626,
	486, 1626,
	487, 1626,
	488, 1626,
	489, 1626,
	490, 1626,
	491, 1626,
	492, 1626,
	493, 1626,
	494, 1626,
	495, 1626,
	497, 1626,
	498, 1626,
	499, 1626,
	500, 1626,
	501, 1626,
	502, 1626,
	504, 1626,
	505, 1626,
	506, 1626,
	507, 1626,
	508, 1626,
	509, 1626,
	510, 1626,
	512, 1626,
	513, 1626,
	514, 1626,
	515, 1626,
	516, 1626,
	517, 1626,
	518, 1626,
	519, 1626,
	521, 1626,
	523, 1626,
	524, 1626,
	525, 1626,
	526, 1626,
	527, 1626,
	528, 1626,
	529, 1626,
	530, 1626,
	531, 1626,
	532, 1626,
	533, 1626,
	534, 1626,
	535, 1626,
	536, 1626,
	537, 1626,
	538, 1626,
	539, 1626,
	540, 1626,
	541, 1626,
	542, 1626,
	543, 1626,
	545, 1626,
	546, 1626,
	548, 1626,
	549, 1626,
	551, 1626,
	552, 1626,
	553, 1626,
	554, 1626,
	555, 1626,
	556, 1626,
	558, 1626,
	559, 1626,
	561, 1626,
	562, 1626,
	563, 1626,
	564, 1626,
	565, 1626,
	567, 1626,
	569, 1626,
	570, 1626,
	571, 1626,
	572, 1626,
	573, 1626,
	574, 1626,
	575, 1626,
	576, 1626,
	578, 1626,
	579, 1626,
	580, 1626,
	581, 1626,
	582, 1626,
	583, 1626,
	584, 1626,
	587, 1626,
	588, 1626,
	589, 1626,
	590, 1626,
	591, 1626,
	592, 1626,
	593, 1626,
	594, 1626,
	595, 1626,
	597, 1626,
	600, 1626,
	601, 1626,
	602, 1626,
	603, 1626,
	604, 1626,
	605, 1626,
	607, 1626,
	608, 1626,
	609, 1626,
	610, 1626,
	611, 1626,
	612, 1626,
	613, 1626,
	614, 1626,
	615, 1626,
	616, 1626,
	617, 1626,
	618, 1626,
	623, 1626,
	624, 1626,
	625, 1626,
	626, 1626,
	627, 1626,
	628, 1626,
	-2, 0,
	-1, 873,
	203, 2734,
	566, 2734,
	643, 2734,
	663, 2734,
	-2, 0,
	-1, 874,
	203, 2719,
	566, 2719,
	643, 2719,
	663, 2719,
	-2, 0,
	-1, 876,
	203, 3017,
	566, 3017,
	643, 3017,
	663, 3017,
	-2, 0,
	-1, 879,
	203, 2859,
	566, 2859,
	643, 2859,
	663, 2859,
	-2, 0,
	-1, 880,
	203, 3064,
	566, 3064,
	643, 3064,
	663, 3064,
	-2, 0,
	-1, 888,
	203, 2887,
	566, 2887,
	643, 2887,
	663, 2887,
	-2, 912,
	-1, 904,
	8, 1047,
	29, 1047,
	651, 1047,
	652, 1047,
	-2, 1052,
	-1, 908,
	1, 2792,
	664, 2792,
	667, 2792,
	-2, 1052,
	-1, 909,
	1, 2846,
	664, 2846,
	667, 2846,
	-2, 1052,
	-1, 912,
	1, 2892,
	664, 2892,
	667, 2892,
	-2, 1045,
	-1, 913,
	1, 2949,
	664, 2949,
	667, 2949,
	-2, 1046,
	-1, 914,
	1, 2797,
	664, 2797,
	667, 2797,
	-2, 1049,
	-1, 915,
	1, 2705,
	664, 2705,
	667, 2705,
	-2, 1050,
	-1, 958,
	663, 2662,
	666, 2662,
	-2, 1287,
	-1, 959,
	663, 2664,
	666, 2664,
	-2, 1288,
	-1, 960,
	663, 2663,
	666, 2663,
	-2, 1289,
	-1, 961,
	666, 2586,
	-2, 1290,
	-1, 987,
	196, 327,
	-2, 0,
	-1, 1009,
	46, 2635,
	-2, 0,
	-1, 1010,
	608, 1604,
	-2, 1372,
	-1, 1027,
	4, 2064,
	21, 2064,
	22, 2064,
	23, 2064,
	24, 2064,
	25, 2064,
	26, 2064,
	27, 2064,
	28, 2064,
	30, 2064,
	31, 2064,
	37, 2064,
	41, 2064,
	43, 2064,
	44, 2064,
	45, 2064,
	47, 2064,
	48, 2064,
	49, 2064,
	50, 2064,
	51, 2064,
	52, 2064,
	53, 2064,
	54, 2064,
	55, 2064,
	57, 2064,
	58, 2064,
	59, 2064,
	60, 2064,
	62, 2064,
	63, 2064,
	64, 2064,
	65, 2064,
	66, 2064,
	67, 2064,
	68, 2064,
	69, 2064,
	73, 2064,
	74, 2064,
	75, 2064,
	76, 2064,
	78, 2064,
	79, 2064,
	80, 2064,
	84, 2064,
	85, 2064,
	86, 2064,
	87, 2064,
	88, 2064,
	89, 2064,
	90, 2064,
	91, 2064,
	94, 2064,
	95, 2064,
	96, 2064,
	97, 2064,
	98, 2064,
	99, 2064,
	101, 2064,
	103, 2064,
	104, 2064,
	105, 2064,
	106, 2064,
	107, 2064,
	108, 2064,
	109, 2064,
	111, 2064,
	112, 2064,
	113, 2064,
	115, 2064,
	116, 2064,
	117, 2064,
	125, 2064,
	126, 2064,
	127, 2064,
	128, 2064,
	129, 2064,
	131, 2064,
	132, 2064,
	133, 2064,
	134, 2064,
	136, 2064,
	137, 2064,
	138, 2064,
	139, 2064,
	141, 2064,
	142, 2064,
	143, 2064,
	144, 2064,
	146, 2064,
	147, 2064,
	148, 2064,
	151, 2064,
	152, 2064,
	153, 2064,
	155, 2064,
	156, 2064,
	157, 2064,
	159, 2064,
	160, 2064,
	161, 2064,
	163, 2064,
	164, 2064,
	165, 2064,
	166, 2064,
	167, 2064,
	168, 2064,
	169, 2064,
	170, 2064,
	171, 2064,
	172, 2064,
	173, 2064,
	174, 2064,
	175, 2064,
	176, 2064,
	177, 2064,
	178, 2064,
	179, 2064,
	180, 2064,
	182, 2064,
	188, 2064,
	189, 2064,
	190, 2064,
	191, 2064,
	195, 2064,
	197, 2064,
	198, 2064,
	199, 2064,
	201, 2064,
	202, 2064,
	205, 2064,
	206, 2064,
	207, 2064,
	208, 2064,
	209, 2064,
	210, 2064,
	211, 2064,
	212, 2064,
	213, 2064,
	214, 2064,
	215, 2064,
	216, 2064,
	217, 2064,
	218, 2064,
	220, 2064,
	221, 2064,
	223, 2064,
	224, 2064,
	226, 2064,
	227, 2064,
	228, 2064,
	229, 2064,
	230, 2064,
	231, 2064,
	232, 2064,
	233, 2064,
	234, 2064,
	235, 2064,
	236, 2064,
	238, 2064,
	239, 2064,
	240, 2064,
	242, 2064,
	243, 2064,
	244, 2064,
	245, 2064,
	246, 2064,
	250, 2064,
	251, 2064,
	252, 2064,
	253, 2064,
	256, 2064,
	257, 2064,
	258, 2064,
	259, 2064,
	260, 2064,
	261, 2064,
	263, 2064,
	265, 2064,
	266, 2064,
	267, 2064,
	269, 2064,
	271, 2064,
	272, 2064,
	273, 2064,
	275, 2064,
	279, 2064,
	280, 2064,
	281, 2064,
	282, 2064,
	283, 2064,
	284, 2064,
	285, 2064,
	287, 2064,
	288, 2064,
	289, 2064,
	291, 2064,
	292, 2064,
	293, 2064,
	295, 2064,
	296, 2064,
	299, 2064,
	300, 2064,
	301, 2064,
	302, 2064,
	303, 2064,
	304, 2064,
	305, 2064,
	308, 2064,
	309, 2064,
	310, 2064,
	311, 2064,
	313, 2064,
	314, 2064,
	315, 2064,
	316, 2064,
	317, 2064,
	318, 2064,
	319, 2064,
	320, 2064,
	321, 2064,
	322, 2064,
	323, 2064,
	324, 2064,
	325, 2064,
	326, 2064,
	327, 2064,
	328, 2064,
	329, 2064,
	330, 2064,
	331, 2064,
	332, 2064,
	333, 2064,
	334, 2064,
	335, 2064,
	337, 2064,
	339, 2064,
	340, 2064,
	341, 2064,
	342, 2064,
	343, 2064,
	344, 2064,
	345, 2064,
	346, 2064,
	347, 2064,
	348, 2064,
	349, 2064,
	350, 2064,
	351, 2064,
	352, 2064,
	353, 2064,
	354, 2064,
	355, 2064,
	357, 2064,
	358, 2064,
	360, 2064,
	362, 2064,
	363, 2064,
	364, 2064,
	365, 2064,
	367, 2064,
	368, 2064,
	369, 2064,
	370, 2064,
	371, 2064,
	374, 2064,
	376, 2064,
	379, 2064,
	380, 2064,
	381, 2064,
	384, 2064,
	385, 2064,
	386, 2064,
	388, 2064,
	390, 2064,
	391, 2064,
	392, 2064,
	393, 2064,
	394, 2064,
	395, 2064,
	396, 2064,
	397, 2064,
	398, 2064,
	399, 2064,
	400, 2064,
	401, 2064,
	402, 2064,
	403, 2064,
	405, 2064,
	406, 2064,
	407, 2064,
	408, 2064,
	409, 2064,
	410, 2064,
	411, 2064,
	412, 2064,
	413, 2064,
	414, 2064,
	415, 2064,
	416, 2064,
	417, 2064,
	418, 2064,
	419, 2064,
	421, 2064,
	422, 2064,
	423, 2064,
	425, 2064,
	426, 2064,
	427, 2064,
	428, 2064,
	429, 2064,
	430, 2064,
	431, 2064,
	432, 2064,
	433, 2064,
	434, 2064,
	435, 2064,
	436, 2064,
	437, 2064,
	438, 2064,
	440, 2064,
	442, 2064,
	443, 2064,
	444, 2064,
	450, 2064,
	451, 2064,
	452, 2064,
	454, 2064,
	455, 2064,
	456, 2064,
	457, 2064,
	458, 2064,
	459, 2064,
	460, 2064,
	461, 2064,
	462, 2064,
	463, 2064,
	464, 2064,
	466, 2064,
	467, 2064,
	468, 2064,
	469, 2064,
	470, 2064,
	472, 2064,
	473, 2064,
	474, 2064,
	475, 2064,
	476, 2064,
	477, 2064,
	478, 2064,
	480, 2064,
	481, 2064,
	482, 2064,
	483, 2064,
	484, 2064,
	485, 2064,
	486, 2064,
	487, 2064,
	488, 2064,
	489, 2064,
	490, 2064,
	491, 2064,
	492, 2064,
	493, 2064,
	494, 2064,
	495, 2064,
	497, 2064,
	498, 2064,
	499, 2064,
	500, 2064,
	501, 2064,
	502, 2064,
	504, 2064,
	505, 2064,
	506, 2064,
	507, 2064,
	508, 2064,
	509, 2064,
	510, 2064,
	512, 2064,
	513, 2064,
	514, 2064,
	515, 2064,
	516, 2064,
	517, 2064,
	518, 2064,
	519, 2064,
	521, 2064,
	523, 2064,
	524, 2064,
	525, 2064,
	526, 2064,
	527, 2064,
	528, 2064,
	529, 2064,
	530, 2064,
	531, 2064,
	532, 2064,
	533, 2064,
	534, 2064,
	535, 2064,
	536, 2064,
	537, 2064,
	538, 2064,
	539, 2064,
	540, 2064,
	541, 2064,
	542, 2064,
	543, 2064,
	545, 2064,
	546, 2064,
	548, 2064,
	549, 2064,
	551, 2064,
	552, 2064,
	553, 2064,
	554, 2064,
	555, 2064,
	556, 2064,
	558, 2064,
	559, 2064,
	561, 2064,
	562, 2064,
	563, 2064,
	564, 2064,
	565, 2064,
	567, 2064,
	569, 2064,
	570, 2064,
	571, 2064,
	572, 2064,
	573, 2064,
	574, 2064,
	575, 2064,
	576, 2064,
	578, 2064,
	579, 2064,
	580, 2064,
	581, 2064,
	582, 2064,
	583, 2064,
	584, 2064,
	587, 2064,
	588, 2064,
	589, 2064,
	590, 2064,
	591, 2064,
	592, 2064,
	593, 2064,
	594, 2064,
	595, 2064,
	597, 2064,
	600, 2064,
	601, 2064,
	602, 2064,
	603, 2064,
	604, 2064,
	605, 2064,
	607, 2064,
	608, 2064,
	609, 2064,
	610, 2064,
	611, 2064,
	612, 2064,
	613, 2064,
	614, 2064,
	615, 2064,
	616, 2064,
	617, 2064,
	618, 2064,
	623, 2064,
	624, 2064,
	625, 2064,
	626, 2064,
	627, 2064,
	628, 2064,
	-2, 0,
	-1, 1038,
	284, 578,
	-2, 0,
	-1, 1117,
	203, 1092,
	-2, 0,
	-1, 1118,
	427, 1147,
	502, 1147,
	549, 1147,
	571, 1147,
	-2, 0,
	-1, 1119,
	427, 1146,
	502, 1146,
	549, 1146,
	571, 1146,
	-2, 1065,
	-1, 1123,
	1, 1199,
	660, 1199,
	662, 1199,
	664, 1199,
	667, 1199,
	-2, 0,
	-1, 1125,
	1, 1120,
	660, 1120,
	662, 1120,
	664, 1120,
	667, 1120,
	-2, 0,
	-1, 1126,
	1, 1124,
	660, 1124,
	662, 1124,
	664, 1124,
	667, 1124,
	-2, 0,
	-1, 1127,
	1, 1276,
	196, 1276,
	660, 1276,
	662, 1276,
	664, 1276,
	667, 1276,
	-2, 0,
	-1, 1136,
	1, 1152,
	660, 1152,
	662, 1152,
	664, 1152,
	667, 1152,
	-2, 0,
	-1, 1143,
	1, 1199,
	660, 1199,
	662, 1199,
	664, 1199,
	667, 1199,
	-2, 0,
	-1, 1144,
	1, 1201,
	660, 1201,
	662, 1201,
	664, 1201,
	667, 1201,
	-2, 0,
	-1, 1145,
	1, 1204,
	660, 1204,
	662, 1204,
	664, 1204,
	667, 1204,
	-2, 0,
	-1, 1153,
	1, 1239,
	660, 1239,
	662, 1239,
	664, 1239,
	667, 1239,
	-2, 0,
	-1, 1154,
	1, 1241,
	660, 1241,
	662, 1241,
	664, 1241,
	667, 1241,
	-2, 0,
	-1, 1159,
	1, 1269,
	660, 1269,
	662, 1269,
	664, 1269,
	667, 1269,
	-2, 0,
	-1, 1211,
	183, 1920,
	196, 1920,
	298, 1920,
	372, 1920,
	-2, 1856,
	-1, 1227,
	183, 1919,
	196, 1919,
	298, 1919,
	372, 1919,
	-2, 1853,
	-1, 1256,
	663, 2661,
	-2, 920,
	-1, 1285,
	5, 2653,
	661, 2651,
	-2, 2642,
	-1, 1293,
	5, 2674,
	661, 2671,
	-2, 2662,
	-1, 1294,
	5, 2675,
	661, 2672,
	-2, 2663,
	-1, 1302,
	663, 2659,
	-2, 2641,
	-1, 1303,
	661, 3179,
	-2, 2660,
	-1, 1326,
	5, 2676,
	38, 2676,
	135, 2676,
	643, 2676,
	659, 2676,
	662, 2676,
	663, 2676,
	666, 2676,
	-2, 3178,
	-1, 1327,
	5, 2139,
	-2, 3148,
	-1, 1328,
	5, 2140,
	-2, 3149,
	-1, 1329,
	5, 2141,
	-2, 3164,
	-1, 1330,
	5, 2142,
	-2, 3126,
	-1, 1331,
	5, 2143,
	-2, 3161,
	-1, 1332,
	5, 2151,
	-2, 3139,
	-1, 1333,
	5, 2138,
	-2, 3135,
	-1, 1334,
	5, 2138,
	-2, 3134,
	-1, 1335,
	5, 2138,
	-2, 3154,
	-1, 1336,
	5, 2149,
	-2, 3128,
	-1, 1337,
	5, 2154,
	-2, 3127,
	-1, 1338,
	5, 2156,
	-2, 3174,
	-1, 1341,
	5, 2178,
	-2, 3167,
	-1, 1342,
	5, 2170,
	-2, 3168,
	-1, 1343,
	5, 2178,
	-2, 3169,
	-1, 1344,
	5, 2174,
	-2, 3170,
	-1, 1345,
	5, 2124,
	-2, 3140,
	-1, 1346,
	5, 2125,
	-2, 3141,
	-1, 1347,
	5, 2126,
	-2, 3129,
	-1, 1375,
	5, 2161,
	-2, 3175,
	-1, 1376,
	5, 2162,
	-2, 3165,
	-1, 1377,
	5, 2163,
	609, 2163,
	-2, 3130,
	-1, 1378,
	5, 2164,
	609, 2164,
	-2, 3131,
	-1, 1416,
	661, 2671,
	-2, 2662,
	-1, 1417,
	661, 2672,
	-2, 2663,
	-1, 1525,
	203, 3064,
	566, 3064,
	643, 3064,
	663, 3064,
	-2, 0,
	-1, 1530,
	1, 896,
	664, 896,
	667, 896,
	-2, 1762,
	-1, 1577,
	1, 1757,
	664, 1757,
	667, 1757,
	-2, 1762,
	-1, 1679,
	392, 2636,
	454, 2636,
	504, 2636,
	653, 2636,
	-2, 2624,
	-1, 1685,
	203, 168,
	291, 168,
	357, 168,
	618, 168,
	-2, 3059,
	-1, 1686,
	203, 169,
	291, 169,
	357, 169,
	618, 169,
	-2, 2782,
	-1, 1687,
	203, 170,
	291, 170,
	357, 170,
	618, 170,
	-2, 2972,
	-1, 1693,
	665, 2636,
	-2, 2638,
	-1, 1696,
	25, 2996,
	241, 2996,
	-2, 0,
	-1, 1718,
	1, 1601,
	459, 1555,
	504, 1555,
	635, 1555,
	640, 1555,
	660, 1601,
	662, 1601,
	664, 1601,
	667, 1601,
	-2, 1905,
	-1, 1724,
	219, 1701,
	241, 1701,
	470, 1701,
	-2, 0,
	-1, 1792,
	46, 2634,
	-2, 1334,
	-1, 1799,
	1, 1601,
	660, 1601,
	662, 1601,
	664, 1601,
	667, 1601,
	-2, 1905,
	-1, 1802,
	436, 1371,
	608, 1371,
	-2, 478,
	-1, 1808,
	4, 1626,
	21, 1626,
	22, 1626,
	23, 1626,
	24, 1626,
	25, 1626,
	26, 1626,
	27, 1626,
	28, 1626,
	30, 1626,
	31, 1626,
	37, 1626,
	41, 1626,
	43, 1626,
	44, 1626,
	45, 1626,
	47, 1626,
	48, 1626,
	49, 1626,
	50, 1626,
	51, 1626,
	52, 1626,
	53, 1626,
	54, 1626,
	55, 1626,
	57, 1626,
	58, 1626,
	59, 1626,
	60, 1626,
	62, 1626,
	63, 1626,
	64, 1626,
	65, 1626,
	66, 1626,
	67, 1626,
	68, 1626,
	69, 1626,
	73, 1626,
	74, 1626,
	75, 1626,
	76, 1626,
	78, 1626,
	79, 1626,
	80, 1626,
	84, 1626,
	85, 1626,
	86, 1626,
	87, 1626,
	88, 1626,
	89, 1626,
	90, 1626,
	91, 1626,
	94, 1626,
	95, 1626,
	96, 1626,
	97, 1626,
	98, 1626,
	99, 1626,
	101, 1626,
	103, 1626,
	104, 1626,
	105, 1626,
	106, 1626,
	107, 1626,
	108, 1626,
	109, 1626,
	111, 1626,
	112, 1626,
	113, 1626,
	115, 1626,
	116, 1626,
	117, 1626,
	125, 1626,
	126, 1626,
	127, 1626,
	128, 1626,
	129, 1626,
	131, 1626,
	132, 1626,
	133, 1626,
	134, 1626,
	136, 1626,
	137, 1626,
	138, 1626,
	139, 1626,
	141, 1626,
	142, 1626,
	143, 1626,
	144, 1626,
	146, 1626,
	147, 1626,
	148, 1626,
	151, 1626,
	152, 1626,
	153, 1626,
	155, 1626,
	156, 1626,
	157, 1626,
	159, 1626,
	160, 1626,
	161, 1626,
	163, 1626,
	164, 1626,
	165, 1626,
	166, 1626,
	167, 1626,
	168, 1626,
	169, 1626,
	170, 1626,
	171, 1626,
	172, 1626,
	173, 1626,
	174, 1626,
	175, 1626,
	176, 1626,
	177, 1626,
	178, 1626,
	179, 1626,
	180, 1626,
	188, 1626,
	189, 1626,
	190, 1626,
	191, 1626,
	195, 1626,
	197, 1626,
	198, 1626,
	199, 1626,
	201, 1626,
	202, 1626,
	205, 1626,
	206, 1626,
	207, 1626,
	208, 1626,
	209, 1626,
	210, 1626,
	211, 1626,
	212, 1626,
	213, 1626,
	214, 1626,
	215, 1626,
	216, 1626,
	217, 1626,
	218, 1626,
	220, 1626,
	221, 1626,
	223, 1626,
	224, 1626,
	226, 1626,
	227, 1626,
	228, 1626,
	229, 1626,
	230, 1626,
	231, 1626,
	232, 1626,
	233, 1626,
	234, 1626,
	235, 1626,
	236, 1626,
	238, 1626,
	239, 1626,
	240, 1626,
	242, 1626,
	243, 1626,
	244, 1626,
	245, 1626,
	246, 1626,
	251, 1626,
	252, 1626,
	253, 1626,
	256, 1626,
	257, 1626,
	258, 1626,
	259, 1626,
	260, 1626,
	261, 1626,
	263, 1626,
	265, 1626,
	266, 1626,
	267, 1626,
	269, 1626,
	271, 1626,
	272, 1626,
	273, 1626,
	275, 1626,
	279, 1626,
	280, 1626,
	281, 1626,
	282, 1626,
	283, 1626,
	284, 1626,
	285, 1626,
	287, 1626,
	288, 1626,
	289, 1626,
	291, 1626,
	292, 1626,
	293, 1626,
	295, 1626,
	296, 1626,
	299, 1626,
	300, 1626,
	301, 1626,
	302, 1626,
	303, 1626,
	304, 1626,
	305, 1626,
	308, 1626,
	309, 1626,
	310, 1626,
	311, 1626,
	313, 1626,
	314, 1626,
	315, 1626,
	316, 1626,
	317, 1626,
	318, 1626,
	319, 1626,
	320, 1626,
	321, 1626,
	322, 1626,
	323, 1626,
	324, 1626,
	325, 1626,
	326, 1626,
	327, 1626,
	328, 1626,
	329, 1626,
	330, 1626,
	331, 1626,
	332, 1626,
	333, 1626,
	334, 1626,
	335, 1626,
	337, 1626,
	339, 1626,
	340, 1626,
	341, 1626,
	342, 1626,
	343, 1626,
	344, 1626,
	345, 1626,
	346, 1626,
	347, 1626,
	348, 1626,
	349, 1626,
	350, 1626,
	351, 1626,
	352, 1626,
	353, 1626,
	354, 1626,
	355, 1626,
	357, 1626,
	358, 1626,
	362, 1626,
	363, 1626,
	364, 1626,
	365, 1626,
	367, 1626,
	368, 1626,
	369, 1626,
	370, 1626,
	371, 1626,
	374, 1626,
	376, 1626,
	377, 1626,
	379, 1626,
	380, 1626,
	381, 1626,
	384, 1626,
	385, 1626,
	386, 1626,
	388, 1626,
	390, 1626,
	391, 1626,
	392, 1626,
	393, 1626,
	394, 1626,
	395, 1626,
	396, 1626,
	397, 1626,
	398, 1626,
	399, 1626,
	400, 1626,
	401, 1626,
	402, 1626,
	403, 1626,
	405, 1626,
	406, 1626,
	407, 1626,
	408, 1626,
	409, 1626,
	410, 1626,
	411, 1626,
	412, 1626,
	413, 1626,
	414, 1626,
	415, 1626,
	416, 1626,
	417, 1626,
	418, 1626,
	419, 1626,
	421, 1626,
	422, 1626,
	423, 1626,
	425, 1626,
	426, 1626,
	427, 1626,
	428, 1626,
	429, 1626,
	430, 1626,
	431, 1626,
	432, 1626,
	433, 1626,
	434, 1626,
	435, 1626,
	436, 1626,
	437, 1626,
	438, 1626,
	440, 1626,
	442, 1626,
	443, 1626,
	444, 1626,
	450, 1626,
	451, 1626,
	452, 1626,
	454, 1626,
	455, 1626,
	456, 1626,
	457, 1626,
	458, 1626,
	459, 1626,
	460, 1626,
	461, 1626,
	462, 1626,
	463, 1626,
	464, 1626,
	466, 1626,
	467, 1626,
	468, 1626,
	469, 1626,
	470, 1626,
	472, 1626,
	473, 1626,
	474, 1626,
	475, 1626,
	476, 1626,
	477, 1626,
	478, 1626,
	480, 1626,
	481, 1626,
	482, 1626,
	483, 1626,
	484, 1626,
	485, 1626,
	486, 1626,
	487, 1626,
	488, 1626,
	489, 1626,
	490, 1626,
	491, 1626,
	492, 1626,
	493, 1626,
	494, 1626,
	495, 1626,
	497, 1626,
	498, 1626,
	499, 1626,
	500, 1626,
	501, 1626,
	502, 1626,
	504, 1626,
	505, 1626,
	506, 1626,
	507, 1626,
	508, 1626,
	509, 1626,
	510, 1626,
	512, 1626,
	513, 1626,
	514, 1626,
	515, 1626,
	516, 1626,
	517, 1626,
	518, 1626,
	519, 1626,
	521, 1626,
	523, 1626,
	524, 1626,
	525, 1626,
	526, 1626,
	527, 1626,
	528, 1626,
	529, 1626,
	530, 1626,
	531, 1626,
	532, 1626,
	533, 1626,
	534, 1626,
	535, 1626,
	536, 1626,
	537, 1626,
	538, 1626,
	539, 1626,
	540, 1626,
	541, 1626,
	542, 1626,
	543, 1626,
	545, 1626,
	546, 1626,
	548, 1626,
	549, 1626,
	551, 1626,
	552, 1626,
	553, 1626,
	554, 1626,
	555, 1626,
	556, 1626,
	558, 1626,
	559, 1626,
	561, 1626,
	562, 1626,
	563, 1626,
	564, 1626,
	565, 1626,
	567, 1626,
	569, 1626,
	570, 1626,
	571, 1626,
	572, 1626,
	573, 1626,
	574, 1626,
	575, 1626,
	576, 1626,
	578, 1626,
	579, 1626,
	580, 1626,
	581, 1626,
	582, 1626,
	583, 1626,
	584, 1626,
	587, 1626,
	588, 1626,
	589, 1626,
	590, 1626,
	591, 1626,
	592, 1626,
	593, 1626,
	594, 1626,
	595, 1626,
	597, 1626,
	600, 1626,
	601, 1626,
	602, 1626,
	603, 1626,
	604, 1626,
	605, 1626,
	607, 1626,
	608, 1626,
	609, 1626,
	610, 1626,
	611, 1626,
	612, 1626,
	613, 1626,
	614, 1626,
	615, 1626,
	616, 1626,
	617, 1626,
	618, 1626,
	623, 1626,
	624, 1626,
	625, 1626,
	626, 1626,
	627, 1626,
	628, 1626,
	-2, 0,
	-1, 1831,
	1, 722,
	660, 722,
	662, 722,
	664, 722,
	667, 722,
	-2, 1876,
	-1, 1834,
	4, 3173,
	11, 3173,
	12, 3173,
	14, 3173,
	15, 3173,
	16, 3173,
	17, 3173,
	18, 3173,
	19, 3173,
	21, 3173,
	22, 3173,
	23, 3173,
	24, 3173,
	25, 3173,
	26, 3173,
	27, 3173,
	28, 3173,
	30, 3173,
	31, 3173,
	34, 3173,
	35, 3173,
	37, 3173,
	39, 3173,
	41, 3173,
	43, 3173,
	44, 3173,
	45, 3173,
	47, 3173,
	48, 3173,
	49, 3173,
	50, 3173,
	51, 3173,
	52, 3173,
	53, 3173,
	54, 3173,
	55, 3173,
	57, 3173,
	58, 3173,
	59, 3173,
	60, 3173,
	62, 3173,
	63, 3173,
	64, 3173,
	65, 3173,
	66, 3173,
	67, 3173,
	68, 3173,
	69, 3173,
	72, 3173,
	73, 3173,
	74, 3173,
	75, 3173,
	76, 3173,
	78, 3173,
	79, 3173,
	80, 3173,
	81, 3173,
	84, 3173,
	85, 3173,
	86, 3173,
	87, 3173,
	88, 3173,
	89, 3173,
	90, 3173,
	91, 3173,
	92, 3173,
	94, 3173,
	95, 3173,
	96, 3173,
	97, 3173,
	98, 3173,
	99, 3173,
	101, 3173,
	102, 3173,
	103, 3173,
	104, 3173,
	105, 3173,
	106, 3173,
	107, 3173,
	108, 3173,
	109, 3173,
	111, 3173,
	112, 3173,
	113, 3173,
	114, 3173,
	115, 3173,
	116, 3173,
	117, 3173,
	125, 3173,
	126, 3173,
	127, 3173,
	128, 3173,
	129, 3173,
	131, 3173,
	132, 3173,
	133, 3173,
	134, 3173,
	136, 3173,
	137, 3173,
	138, 3173,
	139, 3173,
	141, 3173,
	142, 3173,
	143, 3173,
	144, 3173,
	146, 3173,
	147, 3173,
	148, 3173,
	151, 3173,
	152, 3173,
	153, 3173,
	155, 3173,
	156, 3173,
	157, 3173,
	159, 3173,
	160, 3173,
	161, 3173,
	163, 3173,
	164, 3173,
	165, 3173,
	166, 3173,
	167, 3173,
	168, 3173,
	169, 3173,
	170, 3173,
	171, 3173,
	172, 3173,
	173, 3173,
	174, 3173,
	175, 3173,
	176, 3173,
	177, 3173,
	178, 3173,
	179, 3173,
	180, 3173,
	184, 3173,
	185, 3173,
	186, 3173,
	187, 3173,
	188, 3173,
	189, 3173,
	190, 3173,
	191, 3173,
	194, 3173,
	195, 3173,
	197, 3173,
	198, 3173,
	199, 3173,
	201, 3173,
	202, 3173,
	204, 3173,
	205, 3173,
	206, 3173,
	207, 3173,
	208, 3173,
	209, 3173,
	210, 3173,
	211, 3173,
	212, 3173,
	213, 3173,
	214, 3173,
	215, 3173,
	216, 3173,
	217, 3173,
	218, 3173,
	220, 3173,
	221, 3173,
	223, 3173,
	224, 3173,
	226, 3173,
	227, 3173,
	228, 3173,
	229, 3173,
	230, 3173,
	231, 3173,
	232, 3173,
	233, 3173,
	234, 3173,
	235, 3173,
	236, 3173,
	237, 3173,
	238, 3173,
	239, 3173,
	240, 3173,
	241, 3173,
	242, 3173,
	243, 3173,
	244, 3173,
	245, 3173,
	246, 3173,
	248, 3173,
	249, 3173,
	251, 3173,
	252, 3173,
	253, 3173,
	255, 3173,
	256, 3173,
	257, 3173,
	258, 3173,
	259, 3173,
	260, 3173,
	261, 3173,
	263, 3173,
	265, 3173,
	266, 3173,
	267, 3173,
	268, 3173,
	269, 3173,
	270, 3173,
	271, 3173,
	272, 3173,
	273, 3173,
	274, 3173,
	275, 3173,
	277, 3173,
	278, 3173,
	279, 3173,
	280, 3173,
	281, 3173,
	282, 3173,
	283, 3173,
	284, 3173,
	285, 3173,
	287, 3173,
	288, 3173,
	289, 3173,
	291, 3173,
	292, 3173,
	293, 3173,
	294, 3173,
	295, 3173,
	296, 3173,
	297, 3173,
	299, 3173,
	300, 3173,
	301, 3173,
	302, 3173,
	303, 3173,
	304, 3173,
	305, 3173,
	308, 3173,
	309, 3173,
	310, 3173,
	311, 3173,
	312, 3173,
	313, 3173,
	314, 3173,
	315, 3173,
	316, 3173,
	317, 3173,
	318, 3173,
	319, 3173,
	320, 3173,
	321, 3173,
	322, 3173,
	323, 3173,
	324, 3173,
	325, 3173,
	326, 3173,
	327, 3173,
	328, 3173,
	329, 3173,
	330, 3173,
	331, 3173,
	332, 3173,
	333, 3173,
	334, 3173,
	335, 3173,
	337, 3173,
	338, 3173,
	339, 3173,
	340, 3173,
	341, 3173,
	342, 3173,
	343, 3173,
	344, 3173,
	345, 3173,
	346, 3173,
	347, 3173,
	348, 3173,
	349, 3173,
	350, 3173,
	351, 3173,
	352, 3173,
	353, 3173,
	354, 3173,
	355, 3173,
	357, 3173,
	358, 3173,
	361, 3173,
	362, 3173,
	363, 3173,
	364, 3173,
	365, 3173,
	367, 3173,
	368, 3173,
	369, 3173,
	370, 3173,
	371, 3173,
	374, 3173,
	376, 3173,
	379, 3173,
	380, 3173,
	381, 3173,
	382, 3173,
	384, 3173,
	385, 3173,
	386, 3173,
	388, 3173,
	390, 3173,
	391, 3173,
	392, 3173,
	393, 3173,
	394, 3173,
	395, 3173,
	396, 3173,
	397, 3173,
	398, 3173,
	399, 3173,
	400, 3173,
	401, 3173,
	402, 3173,
	403, 3173,
	405, 3173,
	406, 3173,
	407, 3173,
	408, 3173,
	409, 3173,
	410, 3173,
	411, 3173,
	412, 3173,
	413, 3173,
	414, 3173,
	415, 3173,
	416, 3173,
	417, 3173,
	418, 3173,
	419, 3173,
	421, 3173,
	422, 3173,
	423, 3173,
	425, 3173,
	426, 3173,
	427, 3173,
	428, 3173,
	429, 3173,
	430, 3173,
	431, 3173,
	432, 3173,
	433, 3173,
	434, 3173,
	435, 3173,
	436, 3173,
	437, 3173,
	438, 3173,
	440, 3173,
	442, 3173,
	443, 3173,
	444, 3173,
	450, 3173,
	451, 3173,
	452, 3173,
	453, 3173,
	454, 3173,
	455, 3173,
	456, 3173,
	457, 3173,
	458, 3173,
	459, 3173,
	460, 3173,
	461, 3173,
	462, 3173,
	463, 3173,
	464, 3173,
	466, 3173,
	467, 3173,
	468, 3173,
	469, 3173,
	470, 3173,
	471, 3173,
	472, 3173,
	473, 3173,
	474, 3173,
	475, 3173,
	476, 3173,
	477, 3173,
	478, 3173,
	479, 3173,
	480, 3173,
	481, 3173,
	482, 3173,
	483, 3173,
	484, 3173,
	485, 3173,
	486, 3173,
	487, 3173,
	488, 3173,
	489, 3173,
	490, 3173,
	491, 3173,
	492, 3173,
	493, 3173,
	494, 3173,
	495, 3173,
	497, 3173,
	498, 3173,
	499, 3173,
	500, 3173,
	501, 3173,
	502, 3173,
	504, 3173,
	505, 3173,
	506, 3173,
	507, 3173,
	508, 3173,
	509, 3173,
	510, 3173,
	511, 3173,
	512, 3173,
	513, 3173,
	514, 3173,
	515, 3173,
	516, 3173,
	517, 3173,
	518, 3173,
	519, 3173,
	521, 3173,
	523, 3173,
	524, 3173,
	525, 3173,
	526, 3173,
	527, 3173,
	528, 3173,
	529, 3173,
	530, 3173,
	531, 3173,
	532, 3173,
	533, 3173,
	534, 3173,
	535, 3173,
	536, 3173,
	537, 3173,
	538, 3173,
	539, 3173,
	540, 3173,
	541, 3173,
	542, 3173,
	543, 3173,
	545, 3173,
	546, 3173,
	547, 3173,
	548, 3173,
	549, 3173,
	551, 3173,
	552, 3173,
	553, 3173,
	554, 3173,
	555, 3173,
	556, 3173,
	558, 3173,
	559, 3173,
	561, 3173,
	562, 3173,
	563, 3173,
	564, 3173,
	565, 3173,
	567, 3173,
	569, 3173,
	570, 3173,
	571, 3173,
	572, 3173,
	573, 3173,
	574, 3173,
	575, 3173,
	576, 3173,
	578, 3173,
	579, 3173,
	580, 3173,
	581, 3173,
	582, 3173,
	583, 3173,
	584, 3173,
	587, 3173,
	588, 3173,
	589, 3173,
	590, 3173,
	591, 3173,
	592, 3173,
	593, 3173,
	594, 3173,
	595, 3173,
	597, 3173,
	600, 3173,
	601, 3173,
	602, 3173,
	603, 3173,
	604, 3173,
	605, 3173,
	607, 3173,
	608, 3173,
	609, 3173,
	610, 3173,
	611, 3173,
	612, 3173,
	613, 3173,
	614, 3173,
	615, 3173,
	616, 3173,
	617, 3173,
	618, 3173,
	623, 3173,
	624, 3173,
	625, 3173,
	626, 3173,
	627, 3173,
	628, 3173,
	629, 3173,
	631, 3173,
	641, 3173,
	642, 3173,
	643, 3173,
	644, 3173,
	645, 3173,
	646, 3173,
	648, 3173,
	649, 3173,
	650, 3173,
	651, 3173,
	652, 3173,
	653, 3173,
	654, 3173,
	655, 3173,
	656, 3173,
	659, 3173,
	662, 3173,
	663, 3173,
	665, 3173,
	666, 3173,
	-2, 0,
	-1, 1839,
	203, 3017,
	566, 3017,
	643, 3017,
	663, 3017,
	-2, 0,
	-1, 1887,
	203, 1093,
	-2, 3007,
	-1, 1888,
	203, 1094,
	-2, 2790,
	-1, 1889,
	203, 1095,
	-2, 2958,
	-1, 1890,
	203, 1096,
	-2, 3087,
	-1, 1895,
	427, 1147,
	502, 1147,
	549, 1147,
	571, 1147,
	-2, 0,
	-1, 1906,
	1, 1701,
	241, 1701,
	660, 1701,
	662, 1701,
	664, 1701,
	667, 1701,
	-2, 0,
	-1, 1924,
	1, 1142,
	660, 1142,
	662, 1142,
	664, 1142,
	667, 1142,
	-2, 0,
	-1, 1925,
	1, 1186,
	660, 1186,
	662, 1186,
	664, 1186,
	667, 1186,
	-2, 0,
	-1, 1926,
	1, 1194,
	660, 1194,
	662, 1194,
	664, 1194,
	667, 1194,
	-2, 0,
	-1, 1929,
	1, 1151,
	660, 1151,
	662, 1151,
	664, 1151,
	667, 1151,
	-2, 0,
	-1, 1931,
	1, 1157,
	660, 1157,
	662, 1157,
	664, 1157,
	667, 1157,
	-2, 0,
	-1, 1934,
	1, 1153,
	660, 1153,
	662, 1153,
	664, 1153,
	667, 1153,
	-2, 0,
	-1, 1939,
	1, 1167,
	660, 1167,
	662, 1167,
	664, 1167,
	667, 1167,
	-2, 0,
	-1, 1974,
	1, 2996,
	660, 2996,
	662, 2996,
	663, 2996,
	664, 2996,
	667, 2996,
	-2, 0,
	-1, 1979,
	1, 1250,
	660, 1250,
	662, 1250,
	664, 1250,
	667, 1250,
	-2, 0,
	-1, 1999,
	183, 1919,
	196, 1919,
	298, 1919,
	372, 1919,
	-2, 1857,
	-1, 2101,
	162, 1878,
	183, 1878,
	196, 1878,
	262, 1878,
	298, 1878,
	372, 1878,
	383, 1878,
	585, 1878,
	-2, 2343,
	-1, 2162,
	662, 2518,
	-2, 0,
	-1, 2199,
	162, 1878,
	183, 1878,
	196, 1878,
	262, 1878,
	298, 1878,
	372, 1878,
	383, 1878,
	585, 1878,
	-2, 2019,
	-1, 2238,
	663, 2662,
	666, 2662,
	-2, 1277,
	-1, 2239,
	663, 2664,
	666, 2664,
	-2, 1278,
	-1, 2240,
	663, 2663,
	666, 2663,
	-2, 1279,
	-1, 2241,
	666, 2586,
	-2, 1280,
	-1, 2265,
	661, 2166,
	-2, 2154,
	-1, 2297,
	203, 3014,
	663, 3014,
	666, 3014,
	-2, 0,
	-1, 2348,
	1, 898,
	664, 898,
	667, 898,
	-2, 1762,
	-1, 2551,
	241, 321,
	-2, 2670,
	-1, 2552,
	241, 322,
	-2, 386,
	-1, 2669,
	1, 1144,
	660, 1144,
	662, 1144,
	664, 1144,
	667, 1144,
	-2, 0,
	-1, 2670,
	1, 1188,
	660, 1188,
	662, 1188,
	664, 1188,
	667, 1188,
	-2, 0,
	-1, 2671,
	1, 1196,
	660, 1196,
	662, 1196,
	664, 1196,
	667, 1196,
	-2, 0,
	-1, 2672,
	1, 1252,
	660, 1252,
	662, 1252,
	664, 1252,
	667, 1252,
	-2, 0,
	-1, 2714,
	1, 1169,
	660, 1169,
	662, 1169,
	664, 1169,
	667, 1169,
	-2, 0,
	-1, 2737,
	1, 1231,
	660, 1231,
	662, 1231,
	664, 1231,
	667, 1231,
	-2, 0,
	-1, 2787,
	477, 1946,
	478, 1946,
	-2, 2199,
	-1, 2820,
	14, 0,
	15, 0,
	16, 0,
	641, 0,
	642, 0,
	643, 0,
	-2, 2219,
	-1, 2821,
	14, 0,
	15, 0,
	16, 0,
	641, 0,
	642, 0,
	643, 0,
	-2, 2220,
	-1, 2822,
	102, 0,
	277, 0,
	278, 0,
	645, 0,
	646, 0,
	-2, 2221,
	-1, 2823,
	102, 0,
	277, 0,
	278, 0,
	645, 0,
	646, 0,
	-2, 2222,
	-1, 2824,
	102, 0,
	277, 0,
	278, 0,
	645, 0,
	646, 0,
	-2, 2223,
	-1, 2825,
	102, 0,
	277, 0,
	278, 0,
	645, 0,
	646, 0,
	-2, 2224,
	-1, 2826,
	102, 0,
	277, 0,
	278, 0,
	645, 0,
	646, 0,
	-2, 2225,
	-1, 2827,
	14, 0,
	15, 0,
	16, 0,
	641, 0,
	642, 0,
	643, 0,
	-2, 2226,
	-1, 2839,
	14, 0,
	15, 0,
	16, 0,
	641, 0,
	642, 0,
	643, 0,
	-2, 2238,
	-1, 2840,
	14, 0,
	15, 0,
	16, 0,
	641, 0,
	642, 0,
	643, 0,
	-2, 2239,
	-1, 2841,
	14, 0,
	15, 0,
	16, 0,
	641, 0,
	642, 0,
	643, 0,
	-2, 2240,
	-1, 2845,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	629, 0,
	644, 0,
	-2, 2247,
	-1, 2851,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	629, 0,
	644, 0,
	-2, 2251,
	-1, 2853,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	629, 0,
	644, 0,
	-2, 2259,
	-1, 2854,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	629, 0,
	644, 0,
	-2, 2260,
	-1, 2855,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	629, 0,
	644, 0,
	-2, 2261,
	-1, 2856,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	629, 0,
	644, 0,
	-2, 2262,
	-1, 3030,
	5, 2674,
	203, 2529,
	661, 2671,
	-2, 2662,
	-1, 3031,
	203, 2530,
	-2, 3103,
	-1, 3032,
	203, 2531,
	-2, 2885,
	-1, 3033,
	203, 2532,
	-2, 2753,
	-1, 3034,
	203, 2533,
	-2, 2818,
	-1, 3035,
	203, 2534,
	-2, 2870,
	-1, 3036,
	203, 2535,
	-2, 3010,
	-1, 3037,
	203, 2536,
	-2, 2326,
	-1, 3132,
	1, 2020,
	2, 2020,
	114, 2020,
	162, 2020,
	183, 2020,
	196, 2020,
	204, 2020,
	222, 2020,
	225, 2020,
	255, 2020,
	262, 2020,
	274, 2020,
	294, 2020,
	298, 2020,
	338, 2020,
	372, 2020,
	377, 2020,
	383, 2020,
	465, 2020,
	471, 2020,
	585, 2020,
	598, 2020,
	620, 2020,
	621, 2020,
	622, 2020,
	632, 2020,
	660, 2020,
	662, 2020,
	664, 2020,
	666, 2020,
	667, 2020,
	-2, 2019,
	-1, 3148,
	661, 2643,
	-2, 2657,
	-1, 3150,
	1, 403,
	620, 403,
	667, 403,
	-2, 1905,
	-1, 3188,
	661, 2165,
	-2, 2155,
	-1, 3219,
	38, 2674,
	135, 2674,
	643, 2674,
	659, 2674,
	662, 2674,
	663, 2674,
	666, 2674,
	-2, 2671,
	-1, 3220,
	38, 2675,
	135, 2675,
	643, 2675,
	659, 2675,
	662, 2675,
	663, 2675,
	666, 2675,
	-2, 2672,
	-1, 3450,
	1, 1601,
	459, 1555,
	504, 1555,
	635, 1555,
	640, 1555,
	660, 1601,
	662, 1601,
	664, 1601,
	667, 1601,
	-2, 1905,
	-1, 3610,
	1, 1235,
	660, 1235,
	662, 1235,
	664, 1235,
	667, 1235,
	-2, 0,
	-1, 3638,
	378, 1949,
	-2, 3162,
	-1, 3639,
	378, 1950,
	-2, 2993,
	-1, 3643,
	477, 2597,
	478, 2597,
	-2, 2324,
	-1, 3644,
	477, 2601,
	478, 2601,
	-2, 2325,
	-1, 3645,
	477, 2598,
	478, 2598,
	-2, 2324,
	-1, 3646,
	477, 2602,
	478, 2602,
	-2, 2325,
	-1, 3660,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	629, 0,
	644, 0,
	-2, 2249,
	-1, 3661,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	629, 0,
	644, 0,
	-2, 2253,
	-1, 3667,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	629, 0,
	644, 0,
	-2, 2255,
	-1, 3916,
	1, 893,
	660, 893,
	662, 893,
	664, 893,
	667, 893,
	-2, 1762,
	-1, 4143,
	46, 2634,
	-2, 1335,
	-1, 4148,
	1, 1601,
	660, 1601,
	662, 1601,
	664, 1601,
	667, 1601,
	-2, 1905,
	-1, 4262,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	629, 0,
	644, 0,
	-2, 2257,
	-1, 4269,
	268, 0,
	270, 0,
	361, 0,
	-2, 2276,
	-1, 4337,
	14, 0,
	15, 0,
	16, 0,
	641, 0,
	642, 0,
	643, 0,
	-2, 2305,
	-1, 4338,
	14, 0,
	15, 0,
	16, 0,
	641, 0,
	642, 0,
	643, 0,
	-2, 2306,
	-1, 4339,
	14, 0,
	15, 0,
	16, 0,
	641, 0,
	642, 0,
	643, 0,
	-2, 2307,
	-1, 4343,
	14, 0,
	15, 0,
	16, 0,
	641, 0,
	642, 0,
	643, 0,
	-2, 2311,
	-1, 4344,
	14, 0,
	15, 0,
	16, 0,
	641, 0,
	642, 0,
	643, 0,
	-2, 2312,
	-1, 4345,
	14, 0,
	15, 0,
	16, 0,
	641, 0,
	642, 0,
	643, 0,
	-2, 2313,
	-1, 4397,
	661, 2644,
	-2, 2658,
	-1, 4642,
	663, 3280,
	-2, 1831,
	-1, 4701,
	268, 0,
	270, 0,
	361, 0,
	-2, 2277,
	-1, 4704,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	629, 0,
	644, 0,
	-2, 2280,
	-1, 4705,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	629, 0,
	644, 0,
	-2, 2282,
	-1, 4835,
	663, 2659,
	-2, 1636,
	-1, 5011,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	629, 0,
	644, 0,
	-2, 2281,
	-1, 5012,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	629, 0,
	644, 0,
	-2, 2283,
	-1, 5023,
	268, 0,
	-2, 2316,
	-1, 5227,
	268, 0,
	-2, 2317,
	-1, 5460,
	54, 0,
	237, 0,
	297, 0,
	511, 0,
	629, 0,
	644, 0,
	-2, 3125,
}

const sqlPrivate = 57344

const sqlLast = 161013

var sqlAct = [...]int16{
	316, 5391, 5678, 5390, 1506, 3800, 5657, 5649, 5590, 5273,
	3408, 3525, 3353, 5531, 5508, 5281, 5515, 1036, 6, 5446,
	1037, 10, 5324, 5459, 5473, 5342, 1236, 202, 4, 4130,
	5604, 5429, 5088, 4129, 2548, 1734, 5381, 5474, 5405, 4684,
	5540, 5475, 5195, 5402, 5159, 5172, 4614, 5421, 2408, 5145,
	4302, 1409, 1562, 5471, 5231, 4968, 4963, 1420, 4957, 4889,
	5458, 2797, 4926, 2591, 4254, 4998, 3943, 5093, 5032, 1699,
	4166, 4634, 4057, 2640, 2379, 3494, 4626, 5178, 3946, 5309,
	4832, 3873, 3652, 4534, 3279, 2642, 2205, 2868, 960, 810,
	4973, 3212, 4007, 4812, 3545, 2617, 3062, 2252, 2008, 3369,
	4597, 4114, 4160, 1857, 4582, 4580, 1497, 4099, 1399, 1228,
	3935, 2807, 885, 2330, 2417, 3949, 4387, 960, 4119, 5028,
	1583, 4193, 3482, 1498, 2798, 4195, 3514, 3930, 4111, 4092,
	4118, 3509, 2638, 4121, 4091, 202, 3409, 3856, 3511, 3278,
	1676, 3932, 3162, 3931, 4400, 3849, 3781, 2306, 3806, 3823,
	3815, 822, 4683, 3804, 1040, 4831, 3540, 3577, 1503, 3526,
	2174, 2535, 2537, 3840, 2446, 4740, 3457, 1284, 2497, 1855,
	2604, 3382, 2429, 5516, 3970, 4112, 1729, 2171, 1730, 310,
	3124, 3218, 3133, 3125, 2234, 4364, 923, 3780, 2804, 2148,
	2079, 5232, 1490, 2881, 2109, 3636, 1794, 1031, 2948, 1903,
	2588, 1501, 2495, 955, 2946, 881, 1296, 3419, 2473, 2491,
	3539, 2536, 2469, 2477, 1289, 3495, 1473, 2396, 1294, 2328,
	1577, 1545, 2400, 3210, 2175, 3211, 3059, 1400, 309, 2937,
	3168, 2865, 3105, 2375, 2378, 1564, 2786, 1560, 1476, 2769,
	1483, 2767, 3163, 1701, 858, 1797, 1832, 3519, 1790, 2521,
	2191, 2587, 5426, 3304, 2194, 1112, 3303, 5343, 1479, 125,
	1532, 2368, 3264, 5658, 962, 4122, 961, 966, 1450, 1487,
	1438, 2940, 1453, 2143, 3114, 1382, 1403, 1417, 2184, 3074,
	1257, 2918, 3026, 2093, 2009, 2992, 2768, 2010, 2770, 1939,
	213, 866, 1239, 962, 2545, 961, 966, 2684, 3127, 214,
	1924, 1823, 877, 1010, 901, 841, 129, 1830, 5532, 2526,
	5591, 1759, 1684, 1270, 815, 51, 969, 50, 48, 1380,
	1405, 39, 37, 35, 2015, 1576, 3690, 1990, 1740, 3684,
	811, 950, 824, 1134, 1557, 4378, 5693, 5681, 4379, 3802,
	3104, 4072, 2308, 1733, 1032, 969, 1011, 5667, 3874, 5665,
	5664, 5469, 2308, 3104, 3104, 797, 5624, 5468, 5060, 820,
	5092, 2308, 2308, 115, 1930, 5622, 5052, 5562, 1232, 5092,
	2308, 2557, 86, 2308, 1035, 1034, 5057, 5517, 5499, 894,
	897, 5518, 3104, 5051, 1867, 4175, 5497, 2025, 2026, 5494,
	3104, 87, 2340, 5495, 5491, 5456, 5455, 5454, 5492, 2557,
	2557, 3550, 5444, 5056, 5442, 5055, 5092, 1285, 5092, 92,
	5433, 2056, 5432, 5400, 5092, 5050, 5092, 5092, 5364, 2028,
	5357, 4950, 3179, 5356, 3104, 1397, 5347, 3104, 5323, 5320,
	2557, 5302, 2557, 5092, 5229, 4916, 5209, 5174, 3179, 3866,
	4659, 4456, 2894, 2895, 2896, 2913, 2914, 2915, 2081, 5111,
	5110, 5099, 101, 2557, 2557, 2557, 5098, 2027, 5091, 4776,
	5092, 5039, 5092, 2916, 1541, 2557, 2337, 1221, 2047, 5013,
	4983, 1541, 4951, 3179, 3550, 1233, 4072, 4884, 2044, 4176,
	4859, 3104, 4755, 2337, 3104, 4703, 4756, 4650, 4644, 3179,
	4594, 4188, 4188, 1212, 4595, 1038, 1754, 4487, 2639, 2592,
	2081, 4488, 1211, 2340, 1232, 4368, 3893, 4455, 56, 108,
	124, 4456, 1791, 4072, 4393, 2337, 108, 121, 4394, 4391,
	2906, 4371, 4286, 4392, 4282, 3104, 2557, 2557, 3104, 4187,
	2902, 3751, 3752, 4188, 3896, 3887, 3799, 4697, 3897, 2337,
	3104, 1227, 3204, 3487, 3797, 3792, 3751, 3752, 3798, 3104,
	3791, 3742, 3740, 3732, 3104, 3743, 3741, 3733, 1742, 3174,
	2050, 2051, 2052, 2053, 1435, 3730, 3699, 1383, 1383, 3104,
	2033, 3701, 3700, 3549, 3076, 3104, 3536, 3550, 1742, 3535,
	2627, 3243, 109, 2627, 3178, 3104, 3160, 3152, 3179, 1384,
	3104, 2557, 3103, 2626, 2340, 1445, 3104, 2627, 1386, 3651,
	1387, 1848, 3104, 2340, 5365, 5233, 5224, 5212, 274, 3550,
	4368, 3075, 2907, 2908, 2909, 2910, 4961, 2943, 4916, 2337,
	4860, 4659, 2901, 4596, 2055, 2057, 3751, 3752, 4589, 3769,
	3770, 3771, 3360, 3263, 2354, 2422, 2556, 3254, 2334, 3487,
	4053, 2307, 2340, 3379, 3169, 2169, 2321, 1436, 1727, 4699,
	3144, 3104, 4505, 2042, 2043, 4257, 4225, 2192, 2484, 4177,
	1748, 1905, 276, 3143, 1436, 3142, 3141, 2025, 2026, 3140,
	2058, 2059, 2060, 2069, 2070, 2071, 1388, 1385, 1220, 4178,
	5238, 1219, 1218, 1217, 1415, 1216, 1215, 1214, 2048, 1210,
	2062, 2056, 274, 3751, 3752, 1209, 3769, 3770, 3771, 2028,
	1208, 1207, 3603, 4975, 1206, 2911, 2912, 3766, 1205, 1204,
	2075, 1203, 1202, 1201, 3757, 275, 4698, 2944, 1200, 1199,
	1198, 1197, 1196, 1195, 1194, 1193, 1192, 1753, 2081, 3757,
	1191, 1190, 3751, 3752, 268, 2309, 1177, 2027, 1110, 1109,
	2904, 1108, 113, 269, 1107, 2309, 276, 1106, 2047, 1105,
	1104, 1103, 1102, 1101, 2309, 2309, 1100, 1099, 2044, 1098,
	1097, 1096, 1095, 2309, 1094, 1093, 2309, 1092, 1091, 2078,
	1090, 1089, 1088, 215, 3766, 1087, 1733, 1086, 1085, 2706,
	1741, 1871, 1084, 1083, 1082, 3504, 1081, 3689, 1080, 1079,
	1078, 1077, 1852, 1076, 1075, 1742, 1514, 1074, 1073, 275,
	1062, 211, 1061, 116, 1060, 2945, 120, 2942, 1055, 3757,
	1054, 1047, 5484, 1046, 2337, 1045, 1030, 1029, 2118, 4760,
	2337, 2337, 1028, 986, 985, 984, 983, 3751, 3752, 2054,
	982, 274, 3767, 973, 972, 971, 970, 4715, 274, 2337,
	2050, 2051, 2052, 2053, 932, 169, 1039, 3767, 931, 892,
	2033, 891, 169, 890, 872, 2049, 304, 215, 274, 1508,
	1294, 1292, 303, 302, 3271, 1235, 2337, 301, 2337, 300,
	299, 298, 297, 296, 295, 294, 3757, 293, 274, 292,
	291, 290, 4426, 3773, 3075, 276, 289, 1294, 1294, 1294,
	288, 1747, 276, 2066, 287, 286, 285, 2076, 3522, 284,
	1291, 283, 1437, 282, 2055, 2057, 281, 2905, 280, 279,
	278, 277, 276, 2078, 3487, 3757, 1447, 4383, 4229, 4189,
	174, 3751, 3752, 2080, 2072, 3852, 2073, 3767, 2078, 3712,
	4977, 3695, 276, 2042, 2043, 3686, 1586, 217, 275, 2340,
	1294, 3580, 4175, 1704, 3795, 275, 2975, 1294, 1294, 3230,
	3773, 1508, 3467, 2064, 1536, 1718, 2195, 268, 2337, 2334,
	3183, 1549, 1550, 1551, 268, 275, 269, 2307, 2048, 1436,
	2762, 3149, 3131, 269, 1742, 2080, 1294, 212, 1294, 2947,
	1294, 1932, 216, 2973, 268, 275, 2759, 2022, 1704, 3796,
	274, 2381, 2959, 269, 3767, 3271, 215, 2957, 2337, 3768,
	1536, 2339, 3766, 1033, 268, 5236, 2218, 2120, 2078, 1991,
	3757, 1268, 1508, 269, 3768, 2111, 1799, 2074, 1736, 1553,
	1419, 2045, 2041, 215, 2038, 2036, 2037, 2029, 2030, 2031,
	2032, 2034, 2035, 3767, 1704, 5483, 5480, 3075, 2063, 5457,
	5441, 1704, 5328, 215, 276, 5221, 5215, 4493, 1694, 2078,
	1294, 1731, 1294, 2151, 1689, 5213, 3506, 1704, 1436, 5083,
	2150, 202, 202, 5027, 4981, 4960, 1294, 4785, 1294, 2891,
	2892, 2893, 2917, 2903, 2897, 2078, 2899, 2900, 2898, 2885,
	2886, 2887, 2888, 2889, 2890, 1528, 2151, 4738, 4737, 4731,
	2154, 1482, 1486, 2150, 3768, 274, 4730, 275, 4729, 1494,
	4722, 1530, 4721, 4719, 3757, 4714, 4711, 4710, 4593, 2054,
	4588, 4607, 4430, 2941, 2078, 4429, 268, 4428, 1704, 4396,
	4358, 1804, 1807, 2149, 5687, 269, 4357, 4356, 3767, 4278,
	4273, 1681, 3751, 3752, 3847, 2049, 1826, 3788, 1412, 1294,
	3779, 3750, 1294, 966, 1567, 1568, 3747, 3192, 1396, 276,
	3746, 1716, 3744, 3739, 274, 215, 2607, 3738, 3737, 3734,
	2113, 3768, 1579, 3731, 1673, 1678, 3711, 2067, 3762, 3760,
	3761, 3753, 3754, 3755, 3756, 3758, 3759, 1411, 3269, 1522,
	3694, 3687, 3879, 3685, 3760, 3761, 3753, 3754, 3755, 3756,
	3758, 3759, 969, 3537, 1728, 3132, 2930, 2112, 2022, 2110,
	3768, 2564, 275, 2080, 4503, 2021, 2562, 1556, 276, 2078,
	1810, 1792, 5612, 5611, 4976, 5530, 86, 5528, 1709, 1421,
	3268, 268, 3767, 2111, 1872, 4304, 5392, 4608, 1712, 5307,
	269, 5293, 1835, 1837, 5289, 87, 5288, 5287, 5267, 1559,
	5266, 5264, 5235, 1569, 1570, 1294, 1294, 1294, 1294, 1294,
	1294, 1294, 1294, 92, 5234, 1536, 3763, 3764, 3765, 274,
	215, 275, 5207, 3762, 3760, 3761, 3753, 3754, 3755, 3756,
	3758, 3759, 2871, 274, 274, 274, 5237, 1833, 1294, 5193,
	268, 5190, 5189, 5170, 1294, 2065, 274, 3505, 1413, 269,
	274, 3793, 5169, 1233, 5107, 3768, 101, 2039, 2040, 2046,
	2068, 2045, 2041, 2078, 2038, 2036, 2037, 2029, 2030, 2031,
	2032, 2034, 2035, 276, 5078, 3757, 5025, 1824, 4725, 215,
	5008, 2000, 4724, 3763, 3764, 3765, 5007, 276, 276, 276,
	3762, 3760, 3761, 3753, 3754, 3755, 3756, 3758, 3759, 1038,
	276, 4946, 4942, 1948, 276, 4939, 4917, 4736, 4660, 4491,
	4490, 3268, 56, 4471, 124, 4470, 4468, 3268, 3841, 274,
	108, 121, 2100, 2172, 4374, 4361, 275, 4268, 2098, 1877,
	4190, 3761, 3753, 3754, 3755, 3756, 3758, 3759, 4152, 1847,
	275, 275, 275, 4142, 4033, 268, 3981, 3948, 3881, 3768,
	1294, 1294, 1294, 275, 269, 1866, 1294, 275, 4608, 268,
	268, 268, 3716, 1417, 3715, 1417, 1996, 2877, 269, 269,
	269, 3710, 268, 276, 3676, 3481, 268, 3479, 3296, 2157,
	1586, 269, 2156, 2155, 3521, 269, 109, 2152, 2144, 4949,
	3844, 2142, 1294, 202, 3190, 2240, 1508, 3189, 215, 215,
	215, 3146, 3139, 2270, 2240, 3102, 1508, 2955, 2097, 1508,
	1704, 215, 2312, 1896, 2217, 215, 2173, 2221, 2166, 2023,
	2165, 2164, 2163, 2162, 2161, 1933, 275, 3753, 3754, 3755,
	3756, 3758, 3759, 2160, 2119, 2159, 2158, 4781, 2001, 2139,
	2138, 2137, 2136, 2135, 2134, 268, 2133, 2132, 2131, 2130,
	2129, 2128, 2181, 2127, 269, 2126, 2125, 2124, 2113, 1992,
	2099, 2096, 2091, 1521, 1442, 1431, 2228, 1997, 4707, 4425,
	4390, 4377, 3698, 2025, 2026, 2005, 1508, 2004, 3137, 1829,
	5053, 4783, 1294, 4424, 215, 2112, 3181, 1212, 2233, 3877,
	2094, 3751, 3752, 2153, 4181, 1563, 1211, 1233, 1999, 2213,
	2227, 1546, 1548, 4862, 3354, 2028, 1294, 1563, 2374, 5603,
	5297, 2178, 2179, 2202, 1586, 2018, 2019, 5290, 3762, 3760,
	3761, 3753, 3754, 3755, 3756, 3758, 3759, 4590, 4980, 1563,
	4900, 4899, 4898, 4897, 4896, 4861, 4762, 4667, 4666, 4665,
	4664, 2411, 4663, 2027, 2025, 2026, 113, 5472, 4662, 4661,
	2459, 1563, 4457, 4381, 2248, 1563, 4380, 2372, 4192, 1536,
	1563, 4191, 4074, 4073, 2299, 4062, 2974, 2302, 2145, 2146,
	5476, 2243, 1561, 2241, 966, 2222, 2028, 5558, 2346, 1547,
	2243, 2319, 2241, 966, 2253, 2223, 5556, 2324, 2293, 5179,
	1541, 2326, 2345, 2195, 4611, 3417, 4255, 4525, 2331, 1994,
	2225, 3736, 2333, 2972, 1541, 211, 2336, 116, 2151, 2264,
	120, 2193, 2958, 3735, 2027, 2150, 3322, 2956, 3658, 3307,
	2203, 1544, 2360, 969, 1233, 4486, 1188, 4132, 4451, 4131,
	4452, 3950, 969, 2122, 2342, 5260, 3984, 1949, 5216, 5259,
	1383, 2200, 274, 4058, 2025, 2026, 2592, 5214, 2025, 2026,
	1039, 2481, 4023, 1829, 1541, 2322, 169, 2134, 5173, 1895,
	1904, 2170, 2134, 5260, 2538, 5505, 2659, 4601, 2056, 4958,
	3546, 4100, 1542, 4904, 1905, 2539, 2028, 4587, 5082, 4531,
	2028, 1189, 2212, 2197, 2211, 2210, 1704, 1704, 2208, 2207,
	2206, 4522, 4496, 4220, 3914, 2727, 276, 1586, 2636, 3802,
	2572, 5029, 4306, 4055, 2938, 2081, 2348, 5102, 5670, 5650,
	3704, 2249, 3367, 5074, 2027, 4149, 2943, 3305, 2027, 2478,
	2422, 4846, 4054, 1704, 174, 3188, 2458, 2033, 2167, 4843,
	2147, 2457, 46, 2600, 3755, 3756, 3758, 3759, 2608, 5481,
	1803, 217, 3356, 2493, 1723, 2465, 1517, 2344, 1478, 275,
	3376, 5496, 1704, 5493, 4876, 4872, 2454, 2482, 2463, 4171,
	1828, 3373, 3371, 4462, 2474, 1881, 5282, 1395, 268, 4964,
	1415, 5399, 1415, 3953, 4481, 3518, 1860, 269, 4083, 2522,
	5559, 212, 5560, 2468, 5105, 3579, 216, 5101, 5080, 2549,
	2554, 4249, 2024, 2226, 3878, 1024, 2420, 1704, 1238, 1704,
	5134, 1704, 4848, 1538, 4544, 2366, 2365, 215, 2468, 1563,
	2374, 2468, 5595, 3918, 4037, 3281, 2944, 5482, 2367, 1704,
	1704, 1773, 2386, 2777, 2387, 5138, 1186, 2033, 1184, 3244,
	1182, 2033, 5537, 1704, 2394, 2395, 5680, 1946, 1947, 2738,
	2720, 3920, 930, 5298, 3267, 1704, 2718, 5127, 1704, 1704,
	1704, 1704, 2428, 1766, 2416, 2388, 2389, 1725, 927, 5113,
	4909, 3265, 2392, 2393, 1548, 2631, 3267, 966, 4908, 4542,
	2361, 4541, 3459, 2240, 4533, 4511, 4060, 2620, 4510, 1237,
	4543, 2055, 2057, 3265, 1173, 4508, 1826, 2775, 2619, 4507,
	2619, 1543, 4495, 2541, 2542, 4454, 1294, 2596, 2466, 2451,
	4453, 4465, 4089, 4088, 2945, 4025, 2942, 2523, 3865, 3709,
	2660, 2543, 1025, 1179, 3708, 3707, 969, 3706, 2555, 3662,
	3415, 2601, 2504, 3414, 4059, 3394, 2078, 3392, 3378, 3366,
	3358, 3347, 3346, 2614, 1828, 1294, 2369, 3334, 3284, 3333,
	3332, 1547, 3312, 3311, 3272, 2048, 3161, 2852, 2657, 1945,
	2450, 2250, 2447, 4842, 1539, 1998, 2464, 5103, 2634, 1879,
	2988, 2987, 2472, 5075, 1540, 2665, 5651, 2809, 5210, 2168,
	3515, 4844, 1294, 1022, 1294, 1021, 2479, 4793, 864, 2528,
	4222, 1294, 2528, 2590, 1294, 2531, 2270, 2270, 1586, 2644,
	1294, 1294, 1294, 1294, 1294, 1294, 1294, 1294, 1294, 1294,
	1294, 1294, 1294, 1294, 1294, 1294, 1294, 1294, 1294, 1294,
	1294, 1294, 1294, 1294, 1294, 1294, 1294, 1294, 1294, 1294,
	1294, 1294, 1294, 1294, 1294, 1294, 2078, 1294, 2651, 1294,
	1294, 1294, 1294, 2575, 2569, 4591, 2527, 2624, 2611, 2527,
	1833, 3950, 1833, 5596, 2467, 2539, 4021, 2592, 1816, 2243,
	1815, 2241, 966, 2776, 1548, 1294, 1233, 2690, 1233, 1294,
	1294, 4056, 2757, 5538, 2371, 864, 2603, 1294, 2779, 2467,
	2730, 1294, 2467, 1294, 1294, 2766, 2421, 3251, 2947, 2616,
	1814, 1586, 1813, 5006, 2622, 2650, 3983, 1294, 1294, 1294,
	1294, 2655, 4804, 1294, 1294, 1294, 1294, 1294, 1294, 1294,
	1294, 969, 1522, 2761, 2628, 2370, 2629, 3182, 2418, 3328,
	1777, 1464, 2049, 2025, 2026, 1928, 3309, 2748, 2035, 1294,
	1294, 1294, 1294, 1294, 1294, 1294, 1294, 1294, 1768, 1294,
	2461, 1547, 1989, 1785, 1294, 2774, 3759, 2056, 1565, 1566,
	3345, 2867, 3553, 3326, 2674, 2028, 1417, 2414, 2737, 3673,
	2376, 2377, 2734, 1586, 4863, 2919, 2920, 2669, 3283, 1726,
	2349, 2680, 1417, 5598, 1541, 4803, 2867, 2805, 2806, 2919,
	2935, 2691, 1565, 1566, 2081, 2938, 3751, 3752, 1294, 1586,
	2080, 3671, 2419, 2027, 2029, 2030, 2031, 2032, 2034, 2035,
	2670, 2714, 2264, 2264, 1565, 1566, 2983, 3335, 1565, 1566,
	3151, 1928, 3198, 1565, 1566, 3598, 2803, 2791, 1897, 2790,
	4845, 1508, 2941, 2735, 2415, 3029, 3029, 3043, 2802, 2919,
	3295, 5137, 3063, 3065, 1412, 1993, 1412, 1769, 863, 3176,
	3073, 5559, 4022, 2777, 3614, 1531, 1944, 1927, 202, 1874,
	2751, 3171, 2677, 2736, 1027, 1026, 1231, 2765, 2883, 2764,
	2763, 1959, 3119, 2778, 2771, 2725, 1893, 1905, 2524, 2671,
	3337, 2712, 1508, 1411, 1520, 1411, 1212, 2934, 5599, 1212,
	1212, 3375, 3167, 3220, 3147, 2794, 1925, 2213, 2795, 2796,
	1905, 2038, 2036, 2037, 2029, 2030, 2031, 2032, 2034, 2035,
	2031, 2032, 2034, 2035, 3111, 3336, 2033, 2775, 1542, 5275,
	3634, 1508, 1508, 2985, 2668, 3238, 3649, 3374, 2986, 3917,
	2202, 2989, 3339, 2990, 2991, 863, 1233, 4840, 3372, 3370,
	3164, 2875, 4792, 1927, 3282, 5607, 1233, 4492, 2873, 1965,
	1233, 4572, 2003, 2529, 5158, 3668, 2879, 4001, 5628, 1798,
	5597, 3383, 1586, 5478, 809, 1926, 1230, 2525, 3200, 3266,
	2055, 2057, 865, 3294, 2932, 2621, 3617, 4141, 3338, 3757,
	921, 1880, 2750, 4478, 2678, 1875, 3669, 3398, 2532, 3175,
	3674, 804, 4234, 1542, 1413, 3344, 1413, 3110, 2530, 3195,
	3992, 4233, 966, 5005, 966, 3600, 2773, 1536, 2849, 5601,
	4292, 2270, 5659, 4573, 928, 2947, 928, 3194, 1181, 4002,
	1796, 3233, 3038, 3025, 3054, 3069, 3118, 2719, 3123, 3067,
	928, 3129, 3130, 2717, 2048, 3184, 3308, 2747, 3100, 3101,
	3203, 1233, 3236, 3116, 3117, 3112, 928, 3923, 1383, 1538,
	3225, 969, 5277, 969, 2153, 3170, 3229, 966, 2200, 865,
	3217, 5250, 3993, 4571, 1063, 1586, 1071, 5249, 3209, 4000,
	3240, 4907, 2376, 2377, 3648, 4509, 3454, 1704, 1963, 4506,
	3239, 1180, 3136, 2776, 4435, 4295, 4434, 1232, 4433, 4419,
	4418, 1064, 1941, 4417, 2863, 3241, 3173, 4226, 4293, 2264,
	3273, 4095, 919, 4087, 2448, 3232, 969, 3247, 5571, 2453,
	4019, 4476, 3991, 3393, 3197, 2078, 3377, 3223, 3331, 3235,
	3191, 1508, 3310, 3616, 1538, 3450, 2861, 2561, 2560, 2758,
	3249, 2430, 5582, 2145, 2146, 3258, 5581, 1543, 3455, 3641,
	3642, 3412, 1294, 1294, 1482, 1294, 1486, 3242, 3228, 2372,
	2372, 3202, 3270, 1776, 1463, 5479, 3613, 2434, 3234, 3206,
	3205, 4838, 3329, 3159, 3227, 2774, 5630, 3196, 5545, 4689,
	4688, 4227, 4096, 1415, 3250, 2422, 1508, 3368, 2078, 4841,
	3493, 3314, 5509, 3490, 3165, 2455, 4168, 4827, 3453, 1415,
	4922, 2847, 3315, 3607, 3245, 2850, 3248, 3670, 2443, 1802,
	1539, 2049, 3485, 4827, 1987, 5361, 3352, 3672, 1704, 4015,
	1540, 2308, 1543, 1513, 4169, 5376, 5150, 2264, 2431, 5605,
	1704, 3299, 1704, 4017, 5448, 4820, 5449, 5600, 1704, 4813,
	4093, 5066, 2449, 202, 1878, 3313, 1164, 3166, 3342, 1704,
	1704, 4820, 3502, 3348, 3384, 3286, 3289, 3276, 4811, 3330,
	2506, 2846, 3320, 3321, 3323, 3324, 3325, 3327, 4815, 2947,
	2444, 1225, 3462, 3664, 1339, 2534, 1508, 3464, 1508, 2080,
	2673, 5477, 2947, 3259, 3260, 1539, 3615, 3261, 3262, 3257,
	2857, 3416, 2749, 4821, 2676, 1540, 3451, 3452, 2866, 1229,
	3340, 1294, 2516, 3556, 3557, 3350, 3341, 4016, 3357, 4821,
	1425, 4014, 4168, 4013, 2858, 3564, 3565, 3566, 3567, 3364,
	2442, 2859, 4010, 3465, 2422, 2864, 966, 1427, 5283, 974,
	3355, 4060, 1704, 3547, 3937, 1798, 3544, 2533, 3543, 1739,
	4814, 1746, 3389, 1752, 1065, 1066, 2435, 3919, 5606, 4839,
	920, 3529, 1957, 3563, 862, 1422, 981, 1960, 5276, 3150,
	3405, 3497, 2425, 3541, 3406, 3407, 2713, 3551, 3402, 3403,
	1165, 2512, 1906, 1294, 3558, 969, 3559, 3538, 805, 1294,
	1294, 3460, 3575, 2029, 2030, 2031, 2032, 2034, 2035, 1724,
	5608, 1892, 1894, 5523, 1294, 4936, 3971, 1440, 2462, 1519,
	2420, 3548, 3583, 1428, 5524, 3267, 5544, 3554, 922, 1958,
	3965, 2140, 918, 1846, 3533, 1851, 3875, 1876, 2436, 2437,
	1541, 5359, 3287, 5000, 2426, 2460, 3486, 4078, 2482, 1865,
	4685, 1870, 1429, 2509, 3581, 4770, 3582, 1294, 1294, 3501,
	2667, 2412, 4771, 1294, 2874, 2432, 3753, 3754, 3755, 3756,
	3758, 3759, 3619, 3973, 3621, 2529, 1294, 1294, 3524, 4018,
	3574, 1833, 1294, 1294, 3534, 3572, 3532, 2002, 1294, 5360,
	806, 3964, 4477, 3513, 2424, 2848, 3589, 1426, 3591, 5018,
	3593, 2445, 3588, 5569, 3590, 1964, 3592, 2514, 3594, 3595,
	5410, 4094, 2460, 2433, 1072, 1541, 5151, 5318, 3045, 1931,
	2530, 4878, 5626, 830, 2929, 4769, 3115, 2090, 1961, 2462,
	5149, 3604, 3531, 1294, 1294, 1294, 3460, 4816, 5147, 1294,
	3714, 3902, 3587, 3972, 4817, 807, 5631, 808, 3665, 1294,
	1170, 1169, 2860, 4816, 3622, 4822, 1232, 3624, 3128, 1048,
	4817, 5614, 2862, 2456, 3351, 4308, 1294, 4948, 2459, 4674,
	4912, 4822, 4780, 2515, 5310, 3697, 2187, 1067, 1068, 4555,
	3938, 4420, 2439, 2485, 1446, 1444, 1053, 4690, 2492, 5311,
	4251, 5146, 3640, 4999, 4551, 3632, 5325, 5416, 4819, 1166,
	3629, 5341, 5192, 4911, 4549, 4910, 4632, 2478, 2519, 1911,
	4606, 4156, 4068, 2452, 4819, 3631, 3630, 4823, 2183, 975,
	976, 5148, 4551, 4066, 5312, 5510, 2791, 2190, 2790, 3635,
	3692, 3693, 4549, 4823, 2309, 3696, 1962, 3891, 3396, 5141,
	3688, 3158, 1486, 2586, 3650, 2482, 3113, 5543, 3657, 2438,
	2180, 2461, 1443, 4937, 1434, 796, 2013, 1412, 1294, 1294,
	1294, 1294, 2724, 4347, 4734, 4686, 2188, 1294, 1294, 1294,
	2012, 2793, 1294, 1412, 2423, 2362, 3390, 2012, 5100, 5046,
	4081, 2507, 4560, 2007, 4067, 4082, 1294, 1417, 1586, 1164,
	5522, 3663, 2517, 4553, 3857, 5314, 1411, 3397, 5636, 5201,
	2421, 5326, 2476, 3944, 2359, 5257, 2783, 4633, 2187, 2513,
	2183, 2486, 1411, 1294, 1225, 1294, 3809, 3810, 3391, 4537,
	5313, 4553, 4512, 4463, 1417, 4461, 4157, 4147, 4552, 3940,
	3503, 3387, 2475, 2401, 1167, 1423, 3496, 2440, 2402, 5315,
	2510, 1233, 1586, 3483, 2458, 5001, 2615, 2508, 2609, 2457,
	2602, 2594, 2571, 2568, 4291, 2518, 4552, 1417, 1770, 2190,
	1586, 3316, 3288, 3106, 4818, 1168, 1455, 5186, 3790, 871,
	4362, 2470, 1508, 5382, 978, 977, 3703, 4252, 2185, 2401,
	4818, 2012, 3271, 4691, 2402, 2011, 3401, 2357, 5344, 2209,
	2270, 2726, 2011, 2355, 1586, 4447, 4635, 1424, 2188, 4969,
	2187, 3480, 1465, 3109, 1508, 5165, 2419, 1413, 3850, 3811,
	5163, 4828, 4829, 1165, 5077, 1508, 4376, 3821, 3871, 3894,
	3956, 3220, 2270, 1413, 1172, 3952, 3951, 4828, 4829, 1049,
	1050, 2511, 3655, 3633, 2358, 2656, 3846, 2648, 2471, 3814,
	3813, 2637, 2186, 2189, 1171, 1935, 1934, 3108, 979, 980,
	2566, 2190, 3107, 1294, 1929, 4413, 4581, 4069, 2784, 2013,
	3157, 2403, 3156, 3155, 2479, 1294, 2013, 3851, 3154, 3153,
	2185, 1230, 3819, 4348, 2090, 2411, 1808, 4586, 4692, 2407,
	1822, 3817, 2385, 1508, 4349, 4735, 3399, 3939, 1789, 2270,
	2188, 1820, 1809, 3785, 3786, 3787, 2011, 1070, 4906, 4559,
	5270, 3892, 3859, 3860, 3861, 3862, 1294, 2403, 4927, 3820,
	3803, 2411, 3899, 3901, 3832, 3834, 4550, 5327, 5089, 3292,
	3835, 3836, 1508, 3855, 4602, 2407, 3989, 3915, 1536, 5635,
	3864, 4469, 3843, 2613, 2186, 4103, 4458, 5566, 2422, 3921,
	5167, 5064, 2498, 1508, 4550, 1508, 5062, 4004, 5061, 4006,
	2489, 3317, 3318, 910, 3908, 3818, 1791, 3578, 3458, 966,
	2404, 2409, 3885, 4223, 3895, 4217, 1287, 3890, 3889, 1294,
	1294, 3876, 2481, 1170, 1169, 2189, 3955, 1586, 4024, 3960,
	2481, 3904, 3962, 5185, 1912, 3906, 3907, 4070, 3217, 1508,
	3910, 911, 3911, 4048, 3912, 4038, 2264, 3838, 3882, 3883,
	1243, 3884, 3842, 3888, 3941, 1508, 2404, 2409, 969, 4065,
	3870, 4448, 2487, 3869, 3927, 3928, 3400, 5316, 3868, 5166,
	3867, 3552, 1166, 5317, 3463, 3461, 1508, 2264, 2264, 2641,
	4076, 3988, 5090, 3986, 2538, 3833, 3954, 1884, 5072, 3958,
	4011, 4080, 1051, 1052, 3839, 3900, 3898, 4516, 3968, 5085,
	5388, 2405, 4003, 3905, 5084, 3858, 4798, 5271, 1252, 4797,
	5396, 3909, 2488, 5379, 4741, 4365, 2954, 2189, 5049, 1913,
	3947, 1508, 1704, 4421, 1704, 3916, 4034, 1984, 1586, 5418,
	4071, 870, 5570, 4521, 4005, 960, 1704, 1704, 1986, 5073,
	3220, 1983, 4079, 3990, 1415, 2264, 3924, 2405, 4047, 2384,
	3977, 1981, 3816, 5568, 1953, 2412, 1951, 2743, 5498, 1923,
	1921, 1508, 2953, 4459, 4064, 4148, 5300, 1919, 5291, 1917,
	2716, 4040, 5059, 4042, 1915, 3825, 4046, 3974, 1908, 1417,
	4052, 1415, 5024, 4164, 4789, 4075, 4733, 4585, 4162, 3982,
	4440, 3782, 1821, 4267, 3995, 1902, 2399, 5389, 1900, 1704,
	4020, 2412, 1818, 1819, 5272, 3999, 4218, 1167, 2496, 1069,
	4137, 1704, 3975, 1704, 1415, 4146, 4215, 2410, 4026, 3886,
	3996, 3745, 202, 202, 3997, 4098, 3998, 4101, 3675, 3484,
	3365, 3359, 3306, 3193, 4029, 2756, 2752, 4036, 1168, 2658,
	2647, 4035, 2632, 2682, 2301, 2220, 2216, 1988, 4061, 4049,
	1859, 5153, 2547, 4796, 3783, 4173, 4246, 4245, 2397, 4236,
	2007, 4184, 3976, 2410, 3602, 3601, 3561, 2772, 1940, 2685,
	2567, 2300, 4085, 4039, 1586, 4155, 2298, 1586, 2123, 4097,
	3826, 4117, 1873, 3342, 4221, 1379, 4077, 4224, 5470, 4140,
	4879, 4524, 4523, 4558, 4883, 926, 4858, 1172, 5378, 4967,
	5541, 4962, 4084, 4237, 4288, 4158, 4213, 3217, 2398, 4888,
	4874, 962, 1294, 961, 966, 4871, 4809, 1171, 4808, 1294,
	1294, 3541, 4086, 1294, 1294, 1294, 4631, 1294, 3314, 4621,
	3541, 4540, 4165, 3824, 3831, 4421, 1294, 2270, 4105, 1985,
	4514, 4211, 1982, 4484, 4090, 1294, 2264, 4216, 4138, 4144,
	1294, 2745, 1980, 4482, 4143, 1952, 1586, 1950, 2744, 2406,
	1922, 1920, 4460, 969, 2715, 1294, 4151, 2707, 1918, 4163,
	1916, 3830, 4145, 1586, 4133, 1914, 3516, 929, 3508, 1907,
	3500, 3492, 4214, 2270, 2270, 1294, 1294, 2226, 1294, 1294,
	1294, 4244, 4170, 4182, 4183, 3477, 1901, 4243, 3475, 1899,
	3456, 4179, 3231, 1817, 3226, 2406, 1294, 2565, 2563, 2540,
	1294, 2483, 2270, 2270, 1294, 1294, 1294, 1294, 1294, 1294,
	1294, 1294, 1294, 1294, 1294, 1294, 1294, 1294, 1294, 1294,
	1294, 1294, 1294, 1294, 4270, 1294, 4253, 2681, 2441, 2427,
	2413, 1233, 2341, 1294, 1294, 2270, 2546, 2338, 2335, 4230,
	1294, 4231, 2332, 4232, 4320, 2327, 4321, 2325, 2320, 2314,
	2310, 4280, 4281, 1294, 4161, 5536, 5453, 4241, 2232, 3395,
	3653, 4360, 1183, 1185, 1417, 1417, 4247, 1392, 1294, 4248,
	202, 2016, 4172, 5560, 2363, 2351, 2352, 5269, 3827, 3828,
	3829, 4250, 4050, 3625, 3626, 3623, 3449, 2492, 5435, 5335,
	2755, 4982, 4895, 4795, 1393, 3542, 3922, 2380, 957, 1775,
	5203, 3267, 3267, 1586, 3293, 3610, 5196, 3172, 2253, 2741,
	4398, 1762, 1449, 4643, 1489, 2710, 1508, 1508, 3265, 3290,
	2422, 1978, 1979, 2672, 2705, 5434, 2612, 4277, 4275, 1488,
	2679, 4849, 4890, 2264, 2025, 2026, 4359, 1508, 1508, 3413,
	2753, 1224, 2240, 1898, 1508, 4287, 1558, 5223, 3220, 2270,
	899, 2270, 2025, 2026, 2805, 4311, 4303, 3297, 5087, 4298,
	4742, 4310, 4294, 4296, 4297, 3654, 2028, 4720, 3969, 3298,
	3319, 1294, 2020, 1515, 4318, 1448, 1415, 4351, 4319, 2264,
	2264, 5554, 4317, 2805, 4326, 305, 4323, 4367, 1412, 2754,
	4325, 2017, 3298, 1555, 5506, 4554, 4414, 3474, 4618, 1294,
	2595, 4536, 1526, 1223, 2027, 1164, 2350, 3373, 2264, 2264,
	4051, 3371, 4372, 4373, 1394, 1057, 4355, 1489, 3380, 4352,
	1489, 5574, 2027, 902, 902, 1412, 4535, 1411, 916, 3363,
	1225, 3361, 1294, 1294, 3302, 3300, 1956, 5387, 5366, 793,
	4443, 2264, 4444, 3362, 2498, 4369, 4370, 5333, 3301, 5329,
	5268, 5187, 5184, 4385, 5065, 4995, 4629, 4620, 1412, 4605,
	4150, 4382, 3523, 3489, 1411, 3476, 3070, 2347, 2251, 5602,
	5086, 3349, 4384, 4389, 4415, 4416, 1294, 1294, 4517, 1722,
	1224, 4464, 4081, 4395, 1294, 4081, 1721, 4082, 1715, 1226,
	4082, 3872, 5634, 3751, 3752, 4431, 4432, 1411, 2025, 2026,
	2391, 3253, 4441, 4445, 4081, 1704, 1704, 4446, 5573, 4082,
	5352, 4901, 5331, 1704, 1733, 3217, 2390, 3252, 2243, 1733,
	2241, 966, 4712, 4442, 1704, 1704, 4436, 2494, 4497, 1165,
	4427, 1883, 1732, 1733, 1704, 2949, 1733, 1882, 1413, 1508,
	4423, 3605, 2984, 4569, 2391, 4556, 4501, 2390, 5513, 1955,
	4502, 4504, 1954, 4628, 2264, 2264, 4483, 2264, 4485, 5188,
	5128, 4892, 4887, 4564, 4886, 4772, 4768, 4526, 2270, 4767,
	969, 4708, 4682, 4422, 4299, 1413, 4044, 2267, 4041, 3608,
	4532, 2117, 4519, 4520, 2116, 3628, 2760, 5619, 5583, 5439,
	5370, 5369, 1294, 5368, 4489, 5299, 5243, 4538, 5239, 3136,
	4494, 5161, 5117, 4617, 5054, 5048, 5047, 5045, 1413, 4547,
	5044, 4548, 4944, 1704, 4921, 4847, 4557, 4782, 4766, 1294,
	4765, 4655, 3314, 4649, 4636, 4592, 4480, 1417, 1294, 4472,
	4645, 4238, 4154, 4574, 4575, 4153, 1704, 3961, 3903, 4598,
	4539, 1704, 1704, 1704, 3609, 3599, 3571, 3570, 4568, 3569,
	3568, 3507, 3478, 3291, 3222, 3186, 3185, 2878, 4612, 4561,
	4584, 2746, 2711, 2704, 2703, 2702, 1704, 2553, 1704, 4577,
	2701, 1415, 1415, 4613, 1704, 4545, 1586, 2700, 2610, 2581,
	3384, 4579, 4637, 2580, 4583, 2579, 2578, 2577, 4640, 1170,
	1169, 2576, 2317, 2316, 2315, 2313, 2231, 2230, 1977, 1976,
	4652, 4567, 1909, 1784, 1783, 1782, 4600, 1781, 1586, 1780,
	4570, 1294, 1294, 4578, 1779, 1778, 4604, 1294, 1294, 2270,
	1774, 1772, 1294, 1294, 4639, 1294, 4656, 1771, 1708, 1707,
	1294, 1575, 1574, 1573, 1572, 1571, 4619, 1518, 1166, 1472,
	1471, 1294, 1470, 1469, 1468, 1467, 1466, 1460, 1302, 3947,
	1459, 1458, 4616, 1457, 1456, 1374, 4668, 1294, 2353, 1187,
	4622, 4671, 1178, 5274, 4826, 3529, 4825, 4824, 2742, 4670,
	4623, 2589, 4625, 107, 2264, 1767, 4638, 4676, 3541, 4641,
	4647, 3388, 100, 3468, 2490, 4646, 3471, 4678, 3473, 4693,
	4479, 5507, 4653, 5615, 5643, 4654, 2573, 4669, 2499, 5420,
	5419, 312, 312, 312, 5304, 799, 800, 4694, 816, 799,
	816, 828, 3207, 2311, 869, 4110, 4702, 4109, 889, 1417,
	5512, 4706, 2503, 896, 896, 896, 896, 1417, 312, 4739,
	1412, 1586, 1586, 5157, 1586, 4679, 312, 4672, 202, 2270,
	3520, 991, 4994, 3520, 1140, 1417, 1714, 4687, 5417, 1757,
	1006, 5398, 3963, 3418, 1910, 1704, 1704, 5181, 1044, 2686,
	4747, 3845, 3138, 5358, 4716, 312, 3713, 5230, 5017, 1411,
	2952, 2121, 3794, 1167, 102, 1278, 1324, 1586, 4935, 4934,
	4810, 4466, 4120, 4931, 4930, 4681, 2255, 2257, 1242, 1589,
	3078, 1508, 3080, 5447, 2364, 5625, 3850, 2373, 3187, 3028,
	2253, 1301, 1222, 1298, 1168, 2259, 2261, 1300, 1294, 1299,
	2260, 2141, 1297, 2254, 4627, 4139, 3527, 4180, 1827, 1417,
	4732, 1417, 1825, 1142, 3134, 2264, 2872, 2936, 3596, 4758,
	4750, 4752, 3702, 2114, 1258, 1280, 2933, 1441, 1269, 3822,
	3801, 4167, 3071, 4386, 2782, 1016, 1508, 4774, 4775, 3748,
	4857, 2939, 1430, 3051, 3044, 3040, 1586, 4837, 1508, 3913,
	3517, 1508, 4866, 1172, 1995, 4869, 5031, 4743, 2092, 3528,
	4833, 1552, 4833, 1262, 4746, 4748, 4853, 4854, 4749, 2870,
	1413, 1294, 4802, 1171, 1586, 4744, 4745, 2105, 3680, 2792,
	4759, 4777, 4778, 4779, 4761, 4174, 3848, 3180, 5428, 4307,
	3606, 4773, 4805, 2585, 1391, 1390, 1439, 4786, 4787, 4788,
	1389, 5404, 4791, 4851, 5401, 2480, 4938, 799, 799, 4115,
	4757, 4116, 2356, 3246, 2882, 312, 4134, 1274, 3584, 4807,
	4790, 3585, 1692, 2731, 1415, 4239, 1704, 1704, 3807, 4902,
	3220, 1294, 1294, 4799, 4800, 2264, 4603, 1786, 5094, 4794,
	4801, 1286, 2077, 3445, 4856, 3444, 5263, 4873, 1537, 1535,
	4875, 1534, 1533, 5592, 4877, 3386, 3381, 4865, 2520, 1508,
	4868, 4475, 4850, 4952, 4474, 4473, 4836, 273, 3647, 2014,
	4852, 2006, 1586, 4885, 270, 272, 271, 1704, 3967, 4399,
	3854, 1885, 5504, 4499, 4102, 27, 903, 904, 4970, 905,
	4894, 3256, 4870, 2383, 1554, 4450, 26, 25, 24, 23,
	130, 28, 1704, 1704, 1704, 1704, 1704, 1704, 1704, 49,
	30, 4919, 29, 5, 22, 1412, 1412, 173, 171, 4867,
	4891, 4956, 4893, 4959, 148, 168, 1586, 4915, 167, 140,
	4920, 4918, 4903, 166, 165, 4953, 164, 163, 1294, 1294,
	1294, 162, 170, 161, 160, 155, 4971, 159, 4914, 158,
	2267, 2267, 157, 4913, 1411, 1411, 1586, 156, 4923, 154,
	152, 1294, 153, 147, 1294, 1294, 2103, 4933, 151, 4929,
	2108, 4965, 4947, 4940, 1294, 4928, 4945, 2270, 4974, 5002,
	5003, 4941, 1294, 1294, 150, 149, 146, 145, 144, 143,
	142, 141, 139, 172, 138, 4979, 137, 3217, 218, 136,
	135, 1586, 134, 1704, 4993, 4972, 4987, 133, 132, 131,
	4991, 882, 883, 68, 67, 127, 1415, 5009, 128, 21,
	47, 16, 4985, 72, 1415, 4984, 73, 20, 15, 42,
	1508, 105, 4955, 119, 118, 117, 2264, 43, 114, 2258,
	41, 19, 1415, 18, 17, 4996, 5004, 112, 111, 110,
	40, 38, 13, 11, 1586, 44, 2204, 3122, 14, 5014,
	7, 210, 1294, 207, 206, 1413, 1413, 209, 205, 208,
	104, 204, 106, 203, 5026, 1294, 103, 36, 5040, 12,
	5041, 198, 5177, 4610, 1294, 5020, 95, 201, 200, 2270,
	199, 197, 196, 195, 192, 96, 93, 194, 99, 1294,
	98, 5071, 1294, 193, 5037, 5038, 94, 97, 34, 8,
	71, 9, 4997, 5042, 4219, 122, 1415, 123, 1415, 45,
	91, 1294, 90, 89, 1294, 88, 33, 70, 5068, 32,
	5069, 1586, 267, 265, 266, 264, 263, 1704, 1294, 188,
	1704, 1704, 243, 5097, 242, 241, 240, 239, 5120, 1508,
	238, 237, 5121, 5143, 236, 235, 230, 234, 2253, 232,
	231, 233, 229, 259, 258, 5070, 257, 5067, 2411, 256,
	255, 254, 253, 252, 5076, 246, 5116, 245, 251, 250,
	1417, 249, 248, 2264, 247, 244, 262, 84, 5058, 228,
	227, 226, 224, 220, 5133, 223, 225, 222, 221, 219,
	261, 5152, 260, 191, 5119, 85, 186, 187, 1586, 83,
	185, 1704, 184, 5114, 183, 5160, 182, 181, 5171, 5118,
	180, 5176, 5197, 5164, 179, 82, 190, 189, 31, 2,
	1, 4833, 5122, 0, 0, 0, 0, 2267, 5108, 5109,
	2401, 0, 5130, 5139, 5140, 2402, 0, 0, 1294, 1294,
	0, 0, 5202, 5183, 0, 0, 0, 0, 5142, 0,
	0, 5154, 5180, 5155, 0, 1294, 2270, 0, 5156, 5162,
	5106, 0, 0, 308, 0, 0, 0, 5129, 1412, 5131,
	5198, 5132, 0, 0, 5200, 5206, 5182, 5208, 5175, 0,
	0, 1508, 1508, 1508, 0, 2264, 1508, 1508, 1508, 2619,
	1508, 1508, 0, 0, 0, 0, 0, 5194, 5205, 0,
	5204, 5123, 0, 3978, 3979, 5199, 3980, 1411, 4974, 1294,
	5144, 1294, 0, 1294, 0, 0, 4117, 0, 0, 0,
	0, 5211, 0, 1417, 0, 5168, 0, 0, 0, 0,
	1432, 0, 0, 0, 5219, 5220, 1294, 5258, 1417, 0,
	0, 816, 0, 925, 0, 2267, 0, 0, 0, 5256,
	5218, 0, 0, 5228, 0, 816, 0, 5222, 2403, 0,
	0, 312, 0, 0, 4030, 4031, 0, 4032, 1462, 0,
	0, 0, 0, 0, 4833, 0, 2407, 0, 0, 312,
	0, 312, 312, 5254, 1493, 312, 1502, 5251, 2270, 4833,
	1697, 0, 0, 5255, 0, 0, 5285, 1516, 0, 0,
	1417, 1417, 0, 5278, 0, 889, 0, 5279, 889, 0,
	0, 0, 0, 0, 0, 0, 0, 5332, 1413, 0,
	0, 1417, 0, 5306, 1417, 5308, 0, 0, 1704, 0,
	0, 896, 0, 0, 0, 1760, 0, 2253, 1704, 5240,
	5241, 5242, 5294, 0, 5244, 5245, 5246, 0, 5247, 5248,
	0, 4833, 4833, 0, 1294, 1294, 0, 2404, 2409, 5303,
	1412, 0, 2264, 312, 1294, 312, 312, 1493, 1412, 312,
	312, 5296, 4833, 5301, 312, 4833, 0, 5319, 1502, 5305,
	5354, 5180, 5355, 0, 0, 5330, 1412, 0, 1841, 0,
	0, 0, 312, 5286, 1735, 0, 5337, 5345, 0, 1411,
	0, 5346, 0, 0, 1856, 5349, 0, 1411, 5353, 0,
	1755, 5295, 5348, 0, 0, 0, 5363, 0, 0, 1764,
	1294, 1294, 0, 5350, 1294, 1411, 0, 5351, 1704, 1508,
	0, 1508, 5367, 0, 0, 0, 1788, 0, 1502, 0,
	0, 5395, 0, 312, 312, 0, 1493, 0, 2405, 0,
	5362, 5377, 5371, 5372, 5373, 5321, 5322, 5403, 5406, 5427,
	1412, 0, 1412, 0, 0, 1886, 5431, 0, 889, 0,
	312, 312, 5385, 5386, 5393, 0, 5338, 1415, 5394, 5340,
	0, 0, 1853, 5452, 0, 0, 5412, 5450, 0, 0,
	1294, 1294, 1294, 1861, 2264, 5408, 0, 0, 1044, 1411,
	0, 1411, 2412, 5374, 5375, 0, 0, 0, 0, 0,
	1413, 0, 2258, 2258, 0, 0, 5407, 0, 1413, 0,
	5411, 5436, 0, 0, 0, 5440, 5443, 0, 0, 0,
	1294, 5413, 5451, 0, 2787, 0, 1413, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 5490, 5467, 0, 0,
	5466, 5464, 5465, 5485, 1704, 0, 0, 0, 5486, 3925,
	0, 0, 0, 0, 2410, 0, 0, 5521, 2411, 0,
	0, 5519, 0, 0, 0, 0, 0, 5430, 5520, 0,
	5487, 312, 0, 0, 5529, 5488, 0, 5414, 5527, 5415,
	5533, 1294, 0, 0, 0, 0, 5503, 0, 5511, 1508,
	1508, 0, 0, 0, 0, 0, 0, 312, 0, 3926,
	1413, 5525, 1413, 5526, 5542, 5160, 0, 0, 0, 0,
	0, 5561, 0, 5514, 5535, 0, 5501, 0, 0, 0,
	1415, 5553, 0, 5534, 0, 5548, 5549, 0, 0, 0,
	0, 1294, 0, 5557, 0, 1415, 5555, 5552, 5539, 0,
	5564, 0, 0, 5578, 0, 5563, 0, 0, 0, 1417,
	5579, 1417, 5403, 5588, 5567, 5406, 5565, 5586, 0, 2876,
	0, 5572, 0, 0, 0, 0, 0, 5576, 0, 5585,
	5577, 5580, 3046, 0, 0, 2103, 0, 0, 0, 5584,
	5500, 5594, 0, 5502, 0, 0, 0, 0, 0, 5593,
	0, 1508, 0, 0, 0, 0, 2406, 1415, 1415, 5422,
	4833, 0, 4833, 5617, 0, 0, 5618, 0, 5610, 0,
	5621, 5609, 0, 0, 0, 0, 0, 0, 1415, 0,
	0, 1415, 0, 1294, 1294, 0, 2506, 5620, 5616, 5629,
	1714, 0, 1294, 1294, 5627, 0, 0, 1714, 5623, 0,
	0, 0, 5647, 0, 0, 5641, 5632, 5550, 5551, 5655,
	5646, 0, 0, 6, 5656, 5663, 10, 5652, 5654, 5660,
	5662, 5661, 202, 5637, 5645, 0, 0, 5648, 2516, 0,
	0, 5653, 0, 5666, 5669, 5668, 0, 0, 5430, 5671,
	5674, 1508, 0, 5673, 5672, 5675, 5679, 2304, 5677, 2258,
	5676, 0, 0, 0, 0, 0, 5684, 5682, 0, 5683,
	799, 0, 0, 5686, 5587, 0, 5589, 0, 1294, 0,
	0, 5689, 0, 0, 5691, 5679, 5695, 5692, 0, 5694,
	0, 312, 4402, 312, 5685, 0, 0, 312, 5638, 5639,
	0, 0, 0, 0, 5688, 0, 0, 2512, 0, 0,
	1735, 1493, 1502, 312, 0, 312, 2229, 0, 0, 5613,
	0, 0, 0, 312, 0, 816, 0, 3529, 0, 0,
	0, 0, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1584, 0, 0, 0, 0, 0, 0,
	4403, 5640, 0, 0, 2318, 0, 314, 0, 3529, 0,
	0, 0, 0, 0, 3677, 3678, 0, 312, 0, 2509,
	0, 0, 0, 0, 5690, 0, 312, 2258, 4404, 0,
	0, 4401, 0, 0, 0, 0, 0, 0, 0, 0,
	4412, 1412, 0, 0, 0, 0, 4410, 0, 0, 0,
	0, 0, 0, 2025, 2026, 0, 0, 0, 889, 0,
	0, 0, 0, 0, 5423, 0, 0, 0, 0, 0,
	0, 0, 0, 2514, 0, 0, 0, 2056, 0, 0,
	1411, 0, 4411, 0, 0, 2028, 0, 4407, 0, 0,
	0, 2506, 0, 0, 0, 0, 896, 0, 896, 0,
	0, 0, 0, 0, 2267, 0, 1454, 0, 896, 896,
	0, 0, 4408, 0, 2081, 0, 0, 0, 0, 0,
	0, 0, 0, 2027, 1477, 0, 1477, 1477, 0, 0,
	925, 0, 0, 2516, 2047, 2267, 2267, 0, 0, 2515,
	0, 0, 0, 0, 2044, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4624, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2519, 0, 1415, 0, 1415, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1413, 0, 0, 1412, 0, 3775, 3776, 3777, 3778,
	0, 0, 2512, 2267, 0, 0, 0, 0, 0, 1412,
	0, 1679, 0, 0, 1693, 925, 0, 0, 0, 1454,
	1760, 0, 0, 0, 1256, 0, 2050, 2051, 2052, 2053,
	0, 4673, 0, 1411, 0, 0, 2033, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2507, 1411, 2593,
	0, 4405, 0, 0, 0, 0, 0, 0, 2517, 4406,
	0, 0, 312, 0, 2509, 0, 312, 0, 0, 0,
	0, 1412, 1412, 0, 0, 2513, 0, 0, 0, 0,
	0, 0, 0, 0, 3391, 0, 0, 0, 925, 925,
	2055, 2057, 1412, 0, 0, 1412, 0, 0, 2630, 0,
	0, 0, 0, 0, 0, 312, 2510, 0, 0, 0,
	1411, 1411, 0, 2508, 4409, 0, 2643, 2645, 2514, 2042,
	2043, 2518, 0, 0, 312, 0, 0, 0, 0, 0,
	2649, 1411, 0, 0, 1411, 312, 0, 0, 0, 0,
	0, 0, 312, 0, 1413, 2661, 2662, 2663, 2664, 0,
	0, 0, 0, 5424, 2048, 0, 0, 0, 312, 1413,
	312, 0, 0, 0, 799, 0, 312, 0, 2505, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 889, 0,
	0, 0, 1044, 0, 2515, 0, 0, 0, 2025, 2026,
	0, 0, 0, 0, 0, 0, 0, 2511, 0, 0,
	0, 5425, 0, 0, 2267, 0, 0, 0, 0, 0,
	0, 0, 2056, 3637, 1493, 312, 0, 2502, 0, 2519,
	2028, 1413, 1413, 0, 0, 0, 0, 0, 0, 0,
	0, 889, 0, 0, 0, 2078, 0, 0, 312, 0,
	0, 0, 1413, 0, 0, 1413, 2683, 0, 0, 2081,
	0, 312, 0, 312, 0, 312, 0, 312, 2027, 312,
	0, 312, 0, 0, 0, 0, 0, 0, 0, 2047,
	0, 1714, 0, 0, 0, 0, 0, 2219, 0, 2500,
	0, 0, 0, 0, 0, 0, 2721, 0, 0, 2722,
	0, 2723, 2507, 0, 0, 2054, 3046, 3046, 0, 0,
	0, 0, 0, 2517, 0, 0, 312, 312, 312, 312,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2513, 2049, 0, 0, 0, 0, 0, 0, 0, 2501,
	0, 0, 0, 0, 0, 0, 0, 869, 0, 0,
	0, 889, 4881, 0, 0, 0, 0, 0, 0, 0,
	0, 2510, 0, 0, 1714, 1714, 0, 0, 2508, 0,
	0, 2050, 2051, 2052, 2053, 0, 2518, 0, 0, 0,
	0, 2033, 0, 0, 0, 0, 0, 0, 86, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2080,
	0, 0, 4205, 0, 0, 0, 0, 87, 0, 0,
	0, 2267, 0, 0, 0, 0, 0, 4203, 0, 0,
	0, 2382, 0, 0, 0, 92, 0, 4196, 4943, 0,
	0, 0, 0, 0, 0, 2055, 2057, 0, 0, 0,
	1412, 0, 1412, 4954, 0, 0, 2884, 0, 0, 0,
	0, 0, 2511, 0, 0, 0, 0, 2267, 2267, 0,
	0, 0, 0, 0, 0, 0, 0, 4978, 101, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1411,
	0, 1411, 0, 0, 0, 0, 2267, 2267, 3046, 3046,
	3046, 3046, 0, 0, 0, 0, 0, 2045, 2041, 2048,
	2038, 2036, 2037, 2029, 2030, 2031, 2032, 2034, 2035, 0,
	1693, 1038, 0, 0, 0, 0, 4207, 0, 799, 2267,
	0, 3072, 0, 0, 56, 0, 124, 0, 0, 0,
	0, 0, 108, 121, 312, 4198, 0, 0, 0, 0,
	0, 0, 0, 799, 0, 0, 1714, 1714, 1714, 1714,
	312, 4197, 799, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1477, 0, 312, 0, 0, 0, 0, 0,
	0, 1693, 0, 0, 0, 0, 0, 0, 0, 0,
	2078, 0, 0, 0, 312, 1502, 2258, 0, 0, 0,
	1413, 312, 1413, 312, 1735, 0, 312, 0, 109, 0,
	0, 0, 0, 0, 2558, 0, 0, 0, 0, 0,
	4206, 0, 0, 0, 0, 0, 0, 2258, 2258, 5063,
	0, 0, 4263, 4264, 0, 0, 0, 0, 0, 0,
	0, 0, 2267, 2267, 0, 2267, 0, 0, 0, 0,
	2054, 2025, 2026, 312, 1502, 0, 312, 816, 0, 816,
	0, 4194, 0, 0, 0, 0, 312, 0, 0, 312,
	0, 0, 0, 3221, 0, 2056, 2049, 0, 0, 312,
	312, 0, 0, 2028, 312, 0, 312, 0, 0, 0,
	0, 1493, 0, 312, 312, 2258, 1502, 1502, 3237, 0,
	0, 0, 0, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 2081, 1256, 1256, 1256, 0, 0, 0, 0,
	0, 2027, 4327, 4328, 4329, 4330, 4331, 4332, 4333, 4334,
	4335, 4336, 4337, 4338, 4339, 4340, 4341, 4342, 4343, 4344,
	4345, 4346, 0, 4350, 2080, 0, 0, 896, 896, 0,
	0, 896, 896, 0, 0, 0, 0, 0, 0, 0,
	3280, 0, 1670, 0, 0, 0, 0, 0, 113, 4209,
	0, 0, 312, 0, 3385, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 0, 0, 0,
	0, 0, 0, 0, 4204, 4199, 4200, 4201, 4202, 0,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 889, 0, 0, 0, 0, 889, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 211, 0, 116,
	0, 0, 120, 0, 2033, 0, 4208, 0, 0, 0,
	0, 0, 312, 0, 0, 2038, 2036, 2037, 2029, 2030,
	2031, 2032, 2034, 2035, 0, 0, 0, 0, 0, 0,
	2574, 0, 2267, 0, 274, 0, 0, 0, 0, 0,
	0, 0, 1039, 0, 0, 0, 0, 3404, 169, 0,
	0, 0, 0, 3410, 1735, 0, 0, 4210, 2055, 2057,
	2599, 0, 0, 0, 0, 0, 2258, 0, 0, 0,
	0, 0, 0, 0, 0, 2808, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 3466, 0, 276, 0,
	0, 0, 0, 0, 0, 3555, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3562, 0, 0, 0,
	0, 0, 0, 0, 0, 1735, 174, 0, 312, 0,
	0, 3410, 2048, 0, 0, 0, 0, 0, 5292, 312,
	86, 0, 0, 217, 0, 0, 0, 0, 0, 0,
	3512, 275, 0, 0, 0, 0, 0, 0, 0, 87,
	3280, 0, 799, 0, 0, 0, 0, 0, 0, 0,
	268, 1044, 3280, 0, 0, 0, 0, 92, 2950, 269,
	0, 0, 0, 212, 0, 0, 0, 0, 216, 0,
	0, 0, 0, 2267, 312, 0, 0, 5334, 0, 3611,
	5336, 0, 0, 0, 0, 0, 0, 0, 0, 1838,
	0, 0, 0, 2078, 0, 312, 1493, 312, 0, 0,
	101, 0, 0, 0, 0, 0, 0, 3586, 312, 0,
	0, 0, 1493, 0, 1493, 0, 1493, 0, 0, 0,
	0, 0, 0, 2599, 2732, 2733, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1038, 0, 0, 0, 3436, 0, 0,
	0, 0, 0, 2258, 0, 0, 3148, 0, 124, 0,
	0, 0, 0, 0, 108, 121, 312, 312, 312, 312,
	1493, 0, 0, 1493, 3046, 3046, 312, 0, 0, 2049,
	0, 312, 3426, 3424, 0, 0, 0, 0, 0, 0,
	3428, 3430, 3420, 2267, 0, 0, 0, 0, 0, 2258,
	2258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 0, 3751, 3752, 0, 3769, 3770, 3771,
	312, 0, 5437, 0, 0, 0, 5438, 0, 2258, 2258,
	109, 0, 1714, 1714, 0, 3446, 0, 4272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2080, 0, 0,
	0, 0, 0, 0, 1249, 0, 0, 0, 0, 0,
	0, 2258, 0, 0, 3046, 3046, 3046, 3046, 3046, 3046,
	3046, 3046, 3046, 3046, 3046, 3046, 3046, 3046, 3046, 3046,
	3046, 3046, 3046, 3046, 0, 3046, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3766, 0, 0, 0, 0,
	0, 0, 0, 1279, 126, 0, 1670, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3255,
	0, 0, 1714, 1714, 1714, 1714, 1714, 1714, 1714, 1714,
	1714, 1714, 1714, 1714, 1714, 1714, 1714, 1714, 1714, 1714,
	1714, 1714, 0, 1714, 0, 0, 0, 0, 1735, 2036,
	2037, 2029, 2030, 2031, 2032, 2034, 2035, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3177,
	0, 0, 0, 0, 2258, 2258, 0, 2258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3422, 925,
	113, 0, 0, 0, 2267, 0, 0, 3757, 0, 3438,
	0, 1454, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3437, 3427, 3425, 3429, 3431, 3421, 3423,
	3439, 3441, 1256, 0, 0, 0, 0, 0, 0, 0,
	1670, 3433, 3435, 3443, 0, 0, 0, 0, 925, 211,
	0, 116, 0, 0, 120, 0, 0, 0, 0, 0,
	0, 1454, 0, 0, 1454, 0, 0, 0, 0, 0,
	0, 3773, 0, 0, 1477, 3224, 0, 0, 3447, 1477,
	0, 1477, 0, 0, 0, 0, 274, 0, 925, 925,
	0, 86, 0, 0, 1039, 312, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 1213, 0, 0, 0,
	87, 0, 0, 0, 0, 3767, 0, 0, 0, 1234,
	0, 0, 0, 0, 0, 0, 0, 0, 92, 0,
	0, 0, 312, 0, 0, 0, 0, 799, 0, 0,
	276, 2267, 799, 0, 0, 799, 0, 0, 799, 799,
	0, 0, 0, 0, 799, 0, 0, 799, 0, 0,
	0, 0, 0, 0, 0, 312, 0, 0, 174, 0,
	0, 101, 0, 0, 0, 0, 0, 312, 0, 0,
	1401, 0, 0, 0, 0, 217, 0, 0, 312, 0,
	0, 1735, 0, 275, 2258, 1679, 2078, 0, 0, 0,
	0, 0, 0, 0, 3440, 0, 178, 0, 0, 0,
	0, 0, 268, 0, 1038, 86, 0, 53, 52, 0,
	816, 269, 0, 1670, 0, 212, 0, 56, 0, 124,
	216, 0, 0, 0, 87, 108, 121, 1693, 80, 0,
	0, 0, 0, 0, 0, 312, 0, 0, 0, 312,
	312, 215, 92, 2267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 74, 0, 0, 0, 0, 0, 0,
	55, 0, 176, 0, 0, 0, 0, 0, 0, 3448,
	0, 0, 3768, 3280, 3280, 312, 0, 3933, 3936, 3432,
	3434, 0, 54, 3442, 3280, 101, 2229, 0, 0, 0,
	0, 109, 0, 0, 0, 3280, 2229, 0, 3280, 2229,
	0, 0, 2229, 0, 0, 3933, 0, 0, 0, 0,
	0, 0, 0, 57, 75, 0, 0, 312, 312, 3936,
	0, 312, 0, 58, 0, 0, 0, 0, 64, 0,
	0, 0, 0, 81, 0, 2258, 0, 0, 0, 0,
	3936, 56, 312, 124, 4009, 0, 4009, 0, 0, 108,
	121, 0, 5023, 0, 0, 0, 1493, 0, 76, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3280, 0, 3280, 0, 4045, 3280, 3936, 0, 0, 3280,
	0, 0, 0, 0, 59, 0, 0, 0, 0, 0,
	0, 4063, 3936, 4106, 4107, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 109, 0, 0, 0, 0,
	2267, 0, 1693, 3936, 0, 0, 889, 0, 0, 0,
	0, 0, 0, 925, 3763, 3764, 3765, 0, 0, 0,
	5079, 3762, 3760, 3761, 3753, 3754, 3755, 3756, 3758, 3759,
	0, 113, 0, 0, 0, 2258, 0, 0, 1493, 4205,
	0, 0, 0, 0, 0, 312, 4186, 0, 0, 0,
	0, 0, 0, 0, 4203, 0, 0, 0, 4212, 0,
	0, 0, 0, 312, 4196, 0, 4108, 0, 0, 4113,
	3280, 0, 1693, 312, 1693, 0, 0, 77, 0, 0,
	1256, 1502, 0, 0, 1670, 0, 0, 0, 0, 0,
	211, 0, 116, 0, 0, 120, 0, 312, 0, 0,
	0, 0, 3512, 0, 0, 1493, 0, 312, 0, 0,
	3280, 0, 799, 0, 0, 0, 0, 1477, 0, 3280,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 2267, 0, 0, 1039, 0, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4207, 0, 113, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4228,
	0, 0, 4198, 60, 0, 0, 0, 1670, 0, 0,
	0, 276, 0, 0, 0, 3808, 0, 0, 4197, 0,
	63, 0, 4235, 0, 0, 66, 1735, 0, 0, 0,
	0, 0, 0, 1493, 312, 78, 312, 0, 0, 174,
	0, 0, 1493, 65, 211, 1493, 116, 0, 0, 120,
	0, 0, 0, 5227, 0, 61, 217, 3751, 3752, 177,
	3769, 3770, 3771, 0, 275, 0, 2258, 62, 0, 3837,
	0, 0, 0, 0, 312, 0, 0, 4206, 0, 1670,
	4271, 274, 0, 268, 0, 0, 0, 3853, 0, 69,
	0, 0, 269, 0, 0, 169, 212, 0, 0, 0,
	0, 216, 0, 0, 0, 1670, 0, 0, 0, 5262,
	0, 0, 175, 0, 0, 2025, 2026, 0, 0, 0,
	0, 3880, 1836, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4305, 5284, 276, 0, 0, 3766, 2056,
	0, 0, 0, 0, 0, 0, 0, 2028, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 174, 126, 0, 0, 3751, 3752, 0,
	3769, 3770, 3771, 79, 0, 0, 2081, 0, 0, 0,
	217, 0, 0, 0, 0, 2027, 0, 0, 275, 0,
	0, 0, 0, 0, 0, 0, 2047, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2044, 268, 0, 0,
	0, 0, 0, 2258, 0, 0, 269, 4363, 0, 0,
	212, 0, 0, 0, 0, 216, 4209, 0, 0, 0,
	0, 0, 312, 312, 0, 0, 0, 0, 0, 0,
	3757, 0, 0, 0, 3046, 0, 215, 0, 3766, 3,
	0, 4204, 4199, 4200, 4201, 4202, 0, 799, 0, 0,
	4388, 799, 0, 0, 0, 4266, 0, 0, 1670, 799,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	126, 0, 126, 0, 126, 0, 0, 0, 2050, 2051,
	2052, 2053, 0, 4208, 0, 0, 0, 0, 2033, 0,
	0, 0, 1714, 0, 0, 0, 0, 0, 0, 0,
	312, 0, 0, 0, 3773, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2258, 0, 0, 0, 0,
	0, 0, 3046, 0, 0, 0, 0, 1234, 126, 126,
	0, 0, 0, 0, 4210, 0, 0, 0, 0, 0,
	3757, 0, 2055, 2057, 126, 0, 126, 0, 3767, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	126, 1670, 126, 0, 0, 0, 0, 0, 0, 0,
	1477, 2042, 2043, 0, 1693, 1693, 0, 0, 0, 0,
	1714, 0, 4546, 0, 0, 0, 0, 3774, 0, 0,
	0, 0, 889, 0, 0, 3853, 0, 0, 0, 0,
	0, 4562, 4563, 0, 0, 0, 2048, 0, 0, 0,
	0, 4565, 0, 0, 3773, 0, 0, 0, 2182, 4513,
	0, 0, 4515, 0, 0, 4518, 0, 0, 0, 2078,
	126, 0, 0, 4009, 0, 0, 2025, 2026, 0, 2058,
	2059, 2060, 2069, 2070, 2071, 0, 0, 0, 0, 312,
	0, 0, 0, 1693, 0, 0, 0, 0, 3767, 2062,
	2056, 0, 0, 0, 0, 0, 0, 0, 2028, 0,
	0, 0, 0, 0, 0, 0, 0, 2599, 0, 2075,
	0, 3410, 0, 0, 0, 0, 2061, 2078, 0, 0,
	0, 0, 2258, 0, 0, 0, 3936, 2081, 312, 0,
	0, 0, 816, 816, 1502, 0, 2027, 0, 0, 0,
	0, 0, 0, 4651, 0, 3768, 0, 2047, 2643, 4657,
	4658, 0, 0, 0, 0, 3046, 0, 2044, 0, 0,
	1213, 0, 312, 3512, 0, 0, 3512, 2229, 0, 2078,
	0, 4240, 312, 0, 1584, 0, 0, 2054, 0, 4615,
	0, 3410, 0, 2095, 312, 0, 0, 0, 312, 0,
	312, 0, 0, 0, 0, 312, 0, 0, 0, 0,
	0, 2101, 0, 2049, 0, 2107, 0, 0, 0, 0,
	0, 3046, 0, 1714, 3280, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1044, 3280, 0, 0,
	0, 0, 0, 0, 0, 0, 3046, 0, 0, 2050,
	2051, 2052, 2053, 0, 0, 0, 0, 0, 0, 2033,
	0, 0, 0, 4284, 2258, 3768, 0, 0, 0, 0,
	0, 312, 0, 0, 0, 3936, 1241, 0, 3237, 1714,
	4300, 2080, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 925, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2066, 0, 1714, 0, 2076, 0, 0, 0,
	0, 0, 0, 2055, 2057, 0, 0, 3763, 3764, 3765,
	1256, 0, 0, 0, 3762, 3760, 3761, 3753, 3754, 3755,
	3756, 3758, 3759, 2072, 0, 2073, 2196, 0, 2199, 0,
	126, 0, 2042, 2043, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4717, 0, 0, 0, 0, 0, 0,
	0, 0, 2064, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4763, 4764, 0, 0, 0, 2048, 0, 2045,
	2041, 0, 2038, 2036, 2037, 2029, 2030, 2031, 2032, 2034,
	2035, 0, 0, 0, 0, 0, 2061, 0, 0, 0,
	0, 1693, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 0,
	4397, 0, 0, 1735, 0, 312, 2074, 3763, 3764, 3765,
	0, 0, 0, 0, 3762, 3760, 3761, 3753, 3754, 3755,
	3756, 3758, 3759, 312, 0, 0, 0, 2063, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2078, 0,
	0, 0, 0, 0, 933, 0, 1502, 1502, 1502, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1502, 1502, 1502, 0, 312, 1502, 0, 0,
	944, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3280, 3280, 0, 3933, 0, 0, 4009, 3280,
	0, 942, 0, 0, 0, 0, 0, 4835, 2054, 4835,
	1735, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3280, 0, 2229, 0, 946, 0, 3933, 0, 1735,
	1735, 312, 3936, 0, 2049, 0, 0, 0, 0, 0,
	0, 0, 0, 2643, 0, 3936, 0, 312, 3936, 0,
	312, 0, 0, 4009, 0, 0, 4009, 0, 2061, 0,
	4009, 0, 0, 0, 0, 0, 2067, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3280,
	938, 3280, 312, 0, 1670, 2061, 0, 954, 0, 0,
	0, 0, 0, 0, 3410, 0, 0, 4905, 0, 0,
	0, 0, 2080, 943, 0, 0, 0, 0, 0, 0,
	0, 0, 2061, 0, 0, 0, 0, 0, 2061, 4986,
	0, 4988, 4989, 4990, 2061, 4992, 0, 0, 0, 0,
	0, 0, 0, 0, 3280, 3280, 0, 0, 1670, 0,
	3512, 3512, 0, 0, 0, 0, 0, 3933, 0, 0,
	0, 0, 0, 0, 0, 0, 1670, 945, 0, 0,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 0, 0, 864, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2065, 0, 0, 0, 0, 0,
	1670, 0, 0, 0, 0, 0, 2039, 2040, 2046, 2068,
	2045, 2041, 940, 2038, 2036, 2037, 2029, 2030, 2031, 2032,
	2034, 2035, 0, 2025, 2026, 0, 0, 3726, 0, 2061,
	5043, 3727, 0, 0, 2061, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2056, 2061, 0,
	0, 0, 0, 2061, 0, 2028, 0, 0, 0, 1256,
	0, 0, 0, 0, 0, 2025, 2026, 0, 0, 0,
	1234, 1256, 1234, 0, 0, 0, 953, 0, 0, 2025,
	2026, 0, 0, 0, 2081, 0, 0, 0, 0, 2056,
	0, 0, 0, 2027, 0, 0, 0, 2028, 0, 0,
	0, 0, 0, 2056, 2047, 4388, 0, 0, 0, 0,
	0, 2028, 0, 0, 2044, 0, 0, 0, 0, 0,
	0, 2061, 0, 0, 925, 0, 2081, 2061, 0, 0,
	0, 0, 0, 0, 0, 2027, 0, 0, 0, 0,
	2081, 0, 0, 0, 0, 0, 2047, 0, 0, 2027,
	0, 0, 0, 0, 0, 0, 2044, 3280, 2229, 935,
	2229, 0, 0, 4615, 5135, 0, 0, 0, 126, 0,
	0, 0, 312, 4261, 0, 0, 0, 0, 0, 0,
	0, 0, 5095, 1670, 5095, 3751, 3752, 0, 3769, 3770,
	3771, 0, 939, 0, 0, 0, 2050, 2051, 2052, 2053,
	0, 0, 0, 0, 0, 0, 2033, 0, 0, 889,
	0, 0, 0, 0, 0, 4260, 0, 0, 1511, 0,
	4009, 1735, 0, 0, 0, 1735, 0, 1493, 0, 2599,
	0, 0, 0, 0, 863, 0, 0, 0, 2050, 2051,
	2052, 2053, 0, 0, 0, 1241, 1241, 1241, 2033, 1213,
	949, 4754, 1213, 1213, 0, 0, 3936, 0, 312, 937,
	2055, 2057, 2033, 0, 0, 0, 3766, 2061, 2061, 2061,
	2061, 2061, 2061, 2061, 2061, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1670, 4615, 0, 2061, 4835, 2042,
	2043, 1735, 0, 0, 4784, 3280, 0, 0, 1683, 312,
	2061, 0, 2055, 2057, 0, 1710, 0, 0, 0, 0,
	2869, 0, 934, 5191, 0, 0, 2055, 2057, 947, 0,
	0, 0, 86, 0, 2048, 1735, 0, 0, 0, 0,
	1234, 2042, 2043, 0, 1737, 0, 1743, 0, 1749, 0,
	2101, 87, 941, 0, 2101, 0, 3050, 0, 0, 0,
	0, 0, 0, 0, 312, 312, 0, 0, 865, 92,
	0, 2061, 0, 0, 0, 0, 2048, 2061, 3757, 0,
	936, 0, 0, 0, 0, 0, 0, 0, 4305, 0,
	2048, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 951, 952,
	0, 948, 101, 0, 0, 2078, 0, 0, 1844, 0,
	1849, 0, 0, 4009, 5253, 0, 0, 0, 0, 1401,
	0, 4615, 0, 0, 1863, 0, 1868, 0, 0, 0,
	1670, 0, 0, 1670, 0, 2199, 0, 0, 0, 0,
	0, 4835, 3773, 0, 0, 1038, 0, 2078, 0, 0,
	0, 0, 0, 0, 0, 0, 4835, 0, 0, 0,
	124, 2078, 0, 0, 0, 2054, 108, 121, 0, 0,
	0, 0, 0, 0, 0, 2643, 0, 0, 0, 0,
	0, 0, 0, 312, 0, 126, 3767, 0, 0, 3751,
	3752, 2049, 3769, 3770, 3771, 0, 0, 1936, 0, 0,
	1942, 0, 816, 0, 0, 0, 0, 2054, 0, 0,
	0, 0, 1670, 0, 0, 0, 0, 0, 4835, 4835,
	0, 925, 0, 0, 0, 0, 0, 0, 0, 1670,
	0, 0, 109, 2049, 0, 0, 0, 0, 0, 4835,
	0, 312, 4835, 0, 0, 0, 0, 2049, 0, 0,
	0, 0, 2229, 1584, 0, 0, 0, 0, 0, 2080,
	0, 0, 0, 1735, 0, 1735, 0, 2078, 0, 0,
	3766, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 5015, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2599, 0, 0, 1502, 1502,
	0, 2080, 0, 2082, 2083, 2084, 2085, 2086, 2087, 2088,
	2089, 0, 0, 5383, 0, 2080, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 925, 5015, 5095,
	0, 0, 312, 0, 0, 0, 2102, 0, 0, 0,
	0, 0, 2115, 0, 0, 3021, 3022, 3023, 3024, 3017,
	3018, 3019, 3020, 3768, 0, 0, 3280, 2045, 2041, 0,
	2038, 2036, 2037, 2029, 2030, 2031, 2032, 2034, 2035, 1670,
	0, 0, 3757, 0, 0, 0, 0, 0, 0, 0,
	0, 2808, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 0, 113, 0, 0, 0, 0, 0, 0, 2045,
	2041, 0, 2038, 2036, 2037, 2029, 2030, 2031, 2032, 2034,
	2035, 0, 0, 0, 4305, 0, 0, 0, 2037, 2029,
	2030, 2031, 2032, 2034, 2035, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2997, 2998, 2999, 3000, 0,
	0, 1735, 0, 0, 0, 0, 0, 0, 2176, 2176,
	2176, 211, 0, 116, 0, 0, 120, 0, 2808, 3009,
	3010, 3011, 3012, 3005, 3006, 3007, 3008, 3013, 3014, 3015,
	3016, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 274, 0,
	3767, 0, 0, 0, 126, 0, 1039, 126, 0, 126,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3763, 3764, 3765, 0, 4615,
	0, 0, 3762, 3760, 3761, 3753, 3754, 3755, 3756, 3758,
	3759, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 2993, 2994, 2995, 2996, 3001, 3002, 3003,
	3004, 126, 0, 0, 126, 0, 0, 0, 0, 0,
	126, 0, 0, 0, 0, 0, 0, 3280, 0, 0,
	174, 2078, 0, 0, 0, 0, 0, 4835, 0, 4835,
	0, 0, 1735, 0, 0, 0, 0, 217, 0, 0,
	0, 0, 0, 2061, 0, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 1241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 2061, 0, 0, 212, 0, 0,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 126,
	0, 0, 0, 0, 0, 0, 3280, 0, 0, 0,
	0, 0, 0, 215, 0, 0, 0, 3768, 0, 0,
	0, 0, 0, 3410, 0, 0, 2061, 0, 0, 0,
	2061, 0, 0, 0, 0, 0, 0, 3280, 0, 0,
	0, 0, 0, 0, 2061, 0, 0, 0, 0, 0,
	0, 3410, 0, 0, 0, 2061, 2061, 2061, 2061, 2061,
	2061, 2061, 2061, 2061, 2061, 2061, 2061, 2061, 2061, 2061,
	2061, 2061, 2061, 2061, 2061, 2061, 2061, 2061, 2061, 2061,
	2061, 2061, 2061, 2061, 2061, 2061, 2061, 2061, 2061, 2061,
	2061, 0, 0, 0, 0, 0, 2061, 0, 2061, 2061,
	2061, 2061, 1670, 0, 0, 0, 0, 0, 0, 0,
	3050, 3050, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2061, 0, 0, 0, 0,
	0, 0, 0, 0, 1670, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2869, 0, 0, 0, 0, 0,
	1693, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2101, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2061, 0, 0, 3763,
	3764, 3765, 0, 0, 0, 0, 3762, 3760, 3761, 3753,
	3754, 3755, 3756, 3758, 3759, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2061, 0, 0, 2061,
	0, 0, 2061, 0, 0, 2061, 0, 0, 0, 0,
	0, 2061, 2061, 2061, 2061, 2061, 2061, 2061, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1670, 1670, 0,
	1670, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 925, 0,
	0, 0, 0, 0, 0, 0, 0, 2061, 0, 0,
	3772, 0, 3050, 3050, 3050, 3050, 0, 0, 2061, 0,
	2061, 0, 0, 1670, 0, 2061, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2708, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1401, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1670, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2739, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1401, 0, 0,
	1670, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2781, 0, 2785, 0, 0, 0, 0, 0, 0, 2799,
	0, 0, 1241, 0, 0, 0, 0, 0, 2810, 2811,
	2812, 2813, 2814, 2815, 2816, 2817, 2818, 2819, 2820, 2821,
	2822, 2823, 2824, 2825, 2826, 2827, 2828, 2829, 2830, 2831,
	2832, 2833, 2834, 2835, 2836, 2837, 2838, 2839, 2840, 2841,
	2842, 2843, 2844, 2845, 0, 2851, 0, 2853, 2854, 2855,
	2856, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1670, 0,
	0, 0, 0, 2880, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2102, 0, 0, 0, 2931,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2961, 2964, 2967, 2970, 0,
	0, 2976, 2977, 2978, 2979, 2980, 2981, 2982, 0, 0,
	0, 0, 1670, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3042,
	0, 3053, 3055, 3060, 0, 0, 0, 0, 0, 0,
	0, 0, 1670, 0, 126, 126, 1407, 126, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1670, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 307,
	307, 795, 0, 0, 0, 126, 126, 0, 126, 0,
	0, 0, 0, 0, 0, 0, 178, 0, 0, 0,
	0, 0, 0, 0, 0, 86, 0, 53, 52, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1670, 0, 0, 0, 87, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 92, 0, 2061, 2061, 0, 2061, 0, 0,
	0, 0, 0, 74, 0, 0, 0, 0, 0, 0,
	55, 0, 176, 0, 0, 0, 0, 0, 1256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 54, 0, 0, 101, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1670, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 57, 75, 0, 0, 0, 0, 0,
	0, 0, 0, 58, 0, 0, 0, 0, 64, 0,
	1290, 0, 0, 5644, 0, 0, 0, 0, 0, 0,
	0, 56, 1401, 124, 0, 1234, 0, 0, 0, 108,
	121, 0, 0, 0, 0, 0, 0, 0, 76, 126,
	126, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2061, 0, 1670, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 311, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 59, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 0, 0, 0, 109, 0, 0, 967, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2061, 2061, 0, 3050, 3050,
	0, 0, 2061, 0, 0, 0, 0, 967, 0, 0,
	0, 0, 3772, 3772, 0, 0, 2061, 2061, 0, 0,
	0, 0, 0, 0, 0, 0, 2061, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2061, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2061, 0, 0, 0, 0, 77, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3469, 3470, 0, 3472, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3050, 3050,
	3050, 3050, 3050, 3050, 3050, 3050, 3050, 3050, 3050, 3050,
	3050, 3050, 3050, 3050, 3050, 3050, 3050, 3050, 0, 3050,
	3772, 3772, 3772, 3772, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 113, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2061, 0, 0,
	0, 0, 0, 60, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1414, 0, 0,
	63, 0, 0, 0, 0, 66, 0, 126, 0, 0,
	0, 0, 0, 0, 0, 78, 0, 0, 0, 0,
	0, 0, 0, 65, 211, 0, 116, 1401, 1401, 120,
	0, 5510, 0, 0, 0, 61, 0, 0, 0, 177,
	0, 0, 0, 0, 0, 0, 0, 62, 0, 3597,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 69,
	0, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	2025, 2026, 0, 0, 0, 0, 0, 1256, 0, 0,
	0, 0, 175, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2056, 0, 0, 0, 0, 0,
	0, 0, 2028, 0, 0, 276, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2082, 2083, 0,
	0, 2061, 0, 0, 0, 0, 0, 0, 2025, 2026,
	0, 2081, 1241, 174, 0, 0, 0, 0, 0, 0,
	2027, 0, 0, 79, 989, 0, 0, 0, 0, 0,
	217, 2047, 2056, 0, 0, 0, 0, 0, 275, 0,
	2028, 2044, 0, 0, 0, 992, 0, 0, 0, 0,
	993, 0, 0, 0, 0, 3660, 3661, 268, 0, 0,
	0, 3667, 2061, 2061, 0, 0, 269, 0, 0, 2081,
	212, 0, 0, 0, 0, 216, 0, 0, 2027, 0,
	3681, 3682, 0, 0, 0, 0, 2931, 0, 0, 2047,
	0, 0, 0, 994, 0, 1008, 215, 0, 0, 2044,
	3666, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 995, 2050, 2051, 2052, 2053, 996, 0, 0,
	0, 3691, 0, 2033, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3705, 0, 0,
	1017, 0, 0, 0, 0, 0, 0, 997, 3659, 0,
	0, 0, 0, 0, 3717, 0, 0, 0, 0, 0,
	0, 0, 0, 1015, 0, 0, 0, 0, 0, 0,
	0, 2050, 2051, 2052, 2053, 0, 0, 2055, 2057, 0,
	0, 2033, 0, 0, 0, 0, 0, 0, 990, 988,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2042, 2043, 0, 0,
	0, 0, 998, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 0, 0, 0, 0, 1019,
	0, 0, 0, 0, 864, 2055, 2057, 0, 0, 0,
	0, 2048, 0, 0, 0, 0, 0, 0, 0, 0,
	1401, 0, 0, 0, 0, 3060, 3060, 3060, 0, 0,
	0, 0, 0, 0, 2042, 2043, 0, 0, 0, 0,
	0, 0, 0, 0, 2176, 0, 0, 0, 0, 0,
	0, 0, 0, 2061, 2061, 0, 0, 2061, 3772, 3772,
	2061, 0, 126, 0, 2061, 0, 0, 0, 0, 2048,
	0, 2061, 0, 3812, 0, 0, 0, 0, 0, 0,
	0, 1581, 0, 0, 2061, 0, 1018, 1691, 0, 0,
	0, 0, 2078, 0, 0, 0, 1013, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2061, 2061, 2061,
	2061, 2061, 0, 0, 0, 0, 0, 2061, 0, 2061,
	0, 0, 3772, 3772, 3772, 3772, 3772, 3772, 3772, 3772,
	3772, 3772, 3772, 3772, 3772, 3772, 3772, 3772, 3772, 3772,
	3772, 3772, 0, 0, 0, 3772, 0, 0, 2061, 2061,
	2078, 0, 2054, 0, 0, 0, 0, 0, 0, 0,
	0, 2061, 0, 0, 1012, 0, 0, 0, 0, 0,
	2061, 0, 0, 0, 0, 999, 0, 0, 2049, 0,
	0, 0, 0, 311, 0, 0, 0, 0, 1842, 1843,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 311, 311, 126, 0, 311, 1000, 0,
	2054, 1241, 1401, 0, 0, 0, 0, 0, 0, 0,
	1401, 0, 0, 1241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2049, 0, 0, 0,
	0, 0, 0, 0, 2061, 0, 2080, 0, 0, 0,
	0, 0, 0, 0, 863, 0, 0, 0, 0, 0,
	0, 0, 2061, 0, 3966, 0, 0, 987, 0, 0,
	1009, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1001, 0, 0, 311, 0, 311, 311, 0,
	0, 311, 311, 2061, 0, 0, 311, 0, 0, 1966,
	2025, 2026, 0, 0, 2080, 0, 2069, 2070, 2071, 0,
	0, 1007, 0, 0, 967, 0, 0, 0, 0, 0,
	0, 0, 2061, 2061, 2056, 0, 0, 4027, 4028, 0,
	1002, 0, 2028, 0, 1003, 1022, 0, 1021, 0, 0,
	0, 1004, 0, 2075, 2045, 2041, 0, 2038, 2036, 2037,
	2029, 2030, 2031, 2032, 2034, 2035, 0, 1005, 0, 0,
	0, 2081, 1014, 0, 0, 311, 311, 0, 1023, 0,
	2027, 1020, 0, 126, 0, 0, 0, 0, 865, 0,
	0, 2047, 0, 0, 0, 0, 0, 0, 0, 0,
	1326, 2044, 311, 311, 0, 0, 0, 0, 0, 0,
	0, 0, 2045, 2041, 0, 2038, 2036, 2037, 2029, 2030,
	2031, 2032, 2034, 2035, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2061, 0, 0, 0, 0, 0, 126,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 0, 0, 0, 0, 0,
	0, 0, 0, 2050, 2051, 2052, 2053, 0, 0, 0,
	0, 0, 317, 2033, 0, 0, 0, 0, 126, 0,
	2061, 2061, 0, 0, 0, 2061, 2061, 0, 0, 2061,
	2061, 0, 0, 311, 2061, 0, 0, 0, 2061, 0,
	0, 0, 0, 2061, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2066, 0, 3050, 311,
	2076, 0, 0, 0, 0, 0, 0, 2055, 2057, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2214, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2042, 2043, 0, 0,
	959, 2224, 0, 1691, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2064, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 959,
	0, 2048, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3050, 0, 0, 0,
	2799, 0, 0, 0, 0, 0, 0, 4258, 4259, 0,
	0, 4262, 0, 0, 1691, 4265, 0, 0, 0, 0,
	126, 0, 0, 0, 4269, 0, 0, 0, 0, 0,
	0, 0, 0, 4276, 0, 0, 0, 0, 3812, 0,
	0, 0, 0, 0, 0, 0, 0, 1418, 0, 0,
	0, 0, 0, 4289, 0, 0, 0, 2061, 0, 0,
	0, 0, 2078, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4312, 4313, 0, 4314, 4315, 4316, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4322, 0, 0, 0, 4324, 2061,
	2061, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2054, 0, 0, 0, 0, 0, 0, 0,
	0, 4353, 4354, 2198, 0, 1414, 0, 0, 0, 311,
	0, 0, 0, 0, 0, 0, 0, 0, 2049, 0,
	0, 4366, 0, 0, 0, 311, 2198, 311, 0, 0,
	0, 0, 0, 0, 0, 967, 4375, 0, 0, 0,
	0, 0, 0, 0, 967, 0, 0, 0, 0, 0,
	2067, 0, 0, 0, 0, 2061, 2061, 2061, 0, 0,
	0, 0, 0, 0, 0, 0, 2061, 2061, 3772, 3050,
	0, 0, 0, 0, 2869, 2061, 0, 0, 2061, 311,
	0, 0, 0, 0, 0, 0, 2080, 0, 311, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3772, 3050, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4449,
	0, 2061, 0, 0, 0, 0, 0, 0, 0, 2061,
	3050, 0, 0, 0, 0, 0, 0, 2061, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4467, 2065, 2061,
	0, 2061, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2061, 2583, 2068, 2045, 2041, 0, 2038, 2036, 2037,
	2029, 2030, 2031, 2032, 2034, 2035, 0, 0, 0, 0,
	2606, 4498, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2618, 0, 2618, 126,
	0, 0, 0, 0, 2625, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4527, 4528, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3772, 2653, 0, 0, 0, 0, 126, 0,
	0, 126, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2675, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2061, 3772, 0, 0,
	2061, 2692, 0, 2694, 0, 2696, 0, 2698, 0, 2699,
	0, 0, 0, 0, 311, 0, 0, 0, 967, 3772,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2176, 0, 0, 0, 2728, 2729, 0, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 2176, 0, 0,
	0, 0, 0, 0, 0, 0, 4648, 311, 0, 0,
	0, 0, 0, 0, 311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 311, 126, 0, 0, 0, 126, 311, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 4695,
	4696, 0, 0, 0, 0, 4700, 4701, 0, 0, 0,
	4704, 4705, 0, 0, 0, 0, 0, 0, 4709, 0,
	311, 0, 0, 0, 0, 0, 0, 0, 2061, 4713,
	0, 0, 0, 967, 0, 311, 0, 311, 0, 311,
	0, 311, 0, 311, 0, 4718, 0, 0, 0, 0,
	0, 0, 0, 0, 2061, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 311,
	311, 311, 311, 0, 0, 0, 1418, 0, 0, 0,
	0, 0, 0, 1418, 0, 0, 0, 0, 0, 2025,
	2026, 0, 2058, 2059, 2060, 2069, 2070, 2071, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3145, 2056, 0, 0, 0, 0, 0, 0,
	2061, 2028, 0, 0, 0, 0, 0, 0, 1418, 0,
	0, 0, 2075, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2081, 0, 0, 0, 0, 0, 0, 0, 0, 2027,
	0, 0, 0, 0, 0, 0, 0, 0, 1587, 0,
	2047, 0, 0, 0, 1418, 1705, 1241, 0, 2061, 0,
	2044, 1418, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1418, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1705, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2606, 0, 0, 0, 0, 0, 0, 0, 4882,
	0, 0, 0, 0, 0, 0, 0, 0, 1418, 0,
	0, 0, 2050, 2051, 2052, 2053, 1705, 0, 0, 0,
	0, 0, 2033, 1705, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1414, 0, 0, 1705,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1414, 0, 0, 0, 0, 0, 0, 4924,
	4925, 0, 0, 0, 0, 2066, 311, 0, 0, 2076,
	0, 0, 0, 0, 0, 0, 2055, 2057, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 0, 0,
	0, 0, 0, 967, 0, 967, 0, 0, 311, 0,
	1705, 0, 0, 0, 0, 2042, 2043, 0, 0, 0,
	0, 849, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2064, 0, 0, 0, 0,
	1691, 0, 833, 0, 0, 0, 0, 834, 0, 0,
	2048, 0, 0, 0, 0, 311, 0, 0, 967, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	0, 311, 0, 0, 0, 0, 5010, 5011, 5012, 0,
	0, 311, 311, 0, 0, 0, 311, 0, 311, 0,
	835, 0, 0, 0, 0, 311, 311, 0, 0, 2799,
	0, 836, 5021, 5022, 0, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	5030, 5033, 0, 0, 837, 0, 0, 0, 0, 0,
	0, 2078, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3488, 855, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2606, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	838, 0, 0, 0, 311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	0, 2054, 0, 0, 0, 839, 831, 0, 0, 0,
	0, 0, 311, 1418, 0, 1418, 0, 0, 0, 0,
	0, 0, 3560, 5096, 0, 0, 0, 2049, 0, 840,
	1418, 0, 5104, 0, 832, 0, 0, 0, 0, 0,
	0, 0, 0, 3573, 0, 3576, 0, 5112, 0, 0,
	1241, 864, 0, 2271, 311, 0, 0, 0, 0, 2067,
	1418, 0, 0, 0, 0, 0, 0, 0, 0, 5124,
	0, 0, 5126, 0, 0, 0, 0, 0, 0, 854,
	0, 0, 0, 0, 0, 0, 5136, 0, 0, 0,
	0, 0, 0, 0, 0, 2080, 0, 0, 0, 0,
	0, 0, 0, 0, 2025, 2026, 0, 2058, 2059, 2060,
	2069, 2070, 2071, 0, 3618, 1691, 3620, 1691, 0, 0,
	0, 0, 1587, 0, 3627, 0, 0, 967, 2056, 0,
	0, 0, 0, 0, 0, 0, 2028, 2239, 0, 0,
	0, 0, 0, 851, 0, 0, 2239, 2075, 0, 0,
	0, 0, 1705, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 0, 0, 1418, 2081, 0, 0, 3656, 0,
	0, 311, 0, 0, 2027, 0, 0, 2065, 0, 0,
	0, 0, 0, 0, 0, 2047, 0, 0, 0, 2039,
	2040, 2046, 2068, 2045, 2041, 2044, 2038, 2036, 2037, 2029,
	2030, 2031, 2032, 2034, 2035, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	861, 0, 842, 0, 0, 0, 311, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 311,
	0, 0, 0, 862, 0, 843, 1587, 0, 0, 0,
	311, 0, 0, 0, 0, 0, 0, 5261, 0, 0,
	0, 5265, 0, 0, 0, 0, 0, 2050, 2051, 2052,
	2053, 0, 0, 0, 0, 0, 0, 2033, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 863, 0, 0, 0, 0, 0, 0, 0, 844,
	0, 0, 0, 0, 859, 860, 0, 857, 311, 311,
	311, 311, 0, 0, 0, 0, 852, 0, 311, 845,
	2066, 0, 0, 311, 2076, 0, 1418, 1418, 0, 0,
	0, 2055, 2057, 0, 0, 0, 0, 1418, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2072, 0, 2073, 311, 0, 0, 0, 0, 0,
	2042, 2043, 311, 1418, 0, 0, 0, 846, 0, 853,
	0, 0, 0, 0, 0, 0, 0, 0, 847, 0,
	2064, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1418, 0, 848, 2048, 0, 0, 0, 856,
	0, 0, 0, 2799, 0, 0, 0, 0, 0, 0,
	0, 0, 5033, 0, 0, 865, 0, 0, 1705, 1705,
	0, 0, 0, 0, 0, 0, 0, 850, 0, 1587,
	0, 0, 0, 0, 0, 0, 0, 1418, 0, 1418,
	0, 1418, 0, 0, 2074, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1705, 0, 0, 0, 1418,
	1418, 0, 0, 0, 0, 0, 0, 0, 0, 1241,
	0, 0, 0, 1418, 0, 0, 2078, 0, 0, 0,
	0, 0, 0, 0, 1705, 1418, 0, 0, 1418, 1418,
	1418, 1418, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3863, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1705,
	0, 1705, 0, 1705, 0, 0, 2054, 0, 5463, 5463,
	5463, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1705, 1705, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2049, 0, 0, 1705, 0, 0, 0, 849,
	0, 0, 0, 0, 0, 0, 0, 1705, 5489, 0,
	1705, 1705, 1705, 1705, 0, 0, 0, 1691, 1691, 0,
	833, 0, 0, 0, 2067, 834, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2239, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3929, 0, 0, 2271, 2271, 1418, 0,
	2080, 0, 0, 0, 0, 0, 0, 1414, 835, 5463,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 836,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3985, 3987, 0, 0, 2606,
	0, 0, 837, 0, 1414, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 5575,
	0, 0, 0, 0, 0, 855, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2198, 0, 0,
	0, 0, 2065, 0, 0, 0, 0, 0, 838, 311,
	1587, 1418, 0, 0, 2039, 2040, 2046, 2068, 2045, 2041,
	967, 2038, 2036, 2037, 2029, 2030, 2031, 2032, 2034, 2035,
	0, 0, 0, 839, 831, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 840, 0, 0,
	0, 0, 832, 0, 0, 0, 0, 0, 0, 0,
	0, 5463, 5633, 0, 0, 0, 1418, 311, 0, 864,
	0, 311, 311, 1418, 0, 0, 0, 0, 0, 0,
	0, 0, 1418, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1587, 0, 0, 0, 854, 0, 1418,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4135, 0, 0, 0, 0, 0, 3079, 0, 0,
	0, 0, 0, 0, 2025, 2026, 0, 2058, 2059, 2060,
	2069, 2070, 2071, 0, 0, 0, 0, 0, 0, 311,
	311, 0, 0, 311, 0, 0, 0, 2062, 2056, 0,
	2198, 851, 3077, 0, 0, 1587, 2028, 3081, 0, 0,
	0, 0, 0, 0, 311, 0, 0, 2075, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3082,
	0, 1587, 0, 0, 0, 2081, 0, 0, 0, 0,
	0, 0, 0, 0, 2027, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2047, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2044, 0, 0, 0, 0,
	0, 3083, 0, 0, 0, 0, 0, 0, 0, 0,
	842, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4242, 0, 1691, 0, 0, 0, 0, 0,
	3084, 0, 1418, 0, 0, 0, 0, 3085, 0, 0,
	0, 862, 0, 843, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4256, 0, 0, 0, 0, 311, 0, 0,
	3086, 0, 0, 0, 0, 0, 0, 2050, 2051, 2052,
	2053, 2271, 0, 0, 0, 967, 0, 2033, 0, 863,
	0, 0, 0, 0, 0, 311, 0, 844, 0, 0,
	0, 0, 859, 860, 0, 857, 0, 0, 0, 0,
	0, 0, 0, 0, 852, 0, 0, 845, 0, 311,
	0, 0, 0, 0, 1587, 0, 0, 0, 0, 1414,
	2066, 0, 3087, 0, 2076, 1418, 0, 0, 0, 0,
	0, 2055, 2057, 0, 0, 0, 0, 1418, 0, 0,
	3088, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3089, 2072, 0, 2073, 0, 846, 0, 853, 0, 0,
	2042, 2043, 0, 0, 0, 0, 847, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3090, 0, 0, 0,
	2064, 0, 848, 0, 0, 0, 0, 856, 0, 0,
	0, 0, 0, 0, 0, 2048, 0, 0, 0, 0,
	0, 0, 0, 865, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 850, 311, 1587, 311, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1705,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2074, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 0, 0,
	0, 0, 0, 0, 0, 2063, 0, 0, 1418, 0,
	0, 0, 0, 0, 0, 0, 2078, 3091, 0, 0,
	1418, 0, 1418, 0, 0, 0, 0, 0, 1418, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1418,
	1418, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2025, 2026, 0, 2058, 2059, 2060,
	2069, 2070, 2071, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2054, 2062, 2056, 0,
	0, 0, 0, 0, 0, 0, 2028, 0, 0, 3092,
	3093, 0, 0, 0, 0, 0, 0, 2075, 0, 0,
	1705, 0, 2049, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1705, 0, 1705, 2081, 0, 0, 3094, 0,
	1705, 0, 1418, 0, 2027, 0, 0, 0, 3099, 0,
	0, 1705, 1705, 0, 2067, 2047, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2044, 0, 0, 0, 3095,
	0, 0, 0, 0, 1414, 1414, 0, 0, 0, 0,
	0, 0, 0, 0, 3096, 0, 0, 0, 0, 0,
	2080, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3097, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1705, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2606, 2050, 2051, 2052,
	2053, 0, 967, 0, 0, 0, 0, 2033, 0, 0,
	3098, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2065, 0, 0, 0, 0, 0, 0, 0,
	4599, 0, 0, 0, 2039, 2040, 2046, 2068, 2045, 2041,
	4609, 2038, 2036, 2037, 2029, 2030, 2031, 2032, 2034, 2035,
	2066, 0, 0, 0, 2076, 0, 2606, 1295, 2606, 0,
	0, 2055, 2057, 4630, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2072, 0, 2073, 0, 0, 0, 0, 0, 0,
	2042, 2043, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2064, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2048, 0, 0, 0, 4675,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2074, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2063, 0, 0, 0, 0,
	311, 0, 0, 0, 0, 0, 2078, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1418, 1418, 0,
	0, 0, 0, 0, 311, 1303, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 0, 0,
	311, 0, 311, 0, 1418, 0, 2054, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1418, 0, 0, 0, 0, 1414, 313, 313,
	313, 0, 2049, 0, 0, 0, 0, 1418, 0, 0,
	1418, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 313, 0, 0, 0, 0,
	1587, 0, 0, 313, 2067, 0, 0, 0, 0, 0,
	2271, 0, 0, 311, 1418, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 313, 0, 0, 0, 0, 0, 0, 0,
	2080, 0, 2271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1587, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1587, 0, 0, 0, 0, 0, 0, 4855,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2606, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1587, 0, 0, 2271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2065, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2039, 2040, 2046, 2068, 2045, 2041,
	0, 2038, 2036, 2037, 2029, 2030, 2031, 2032, 2034, 2035,
	0, 0, 0, 0, 0, 5384, 0, 0, 0, 1414,
	0, 0, 0, 0, 0, 0, 0, 1414, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2198, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1418, 0, 2025,
	2026, 0, 2058, 2059, 2060, 2069, 2070, 2071, 2606, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4966,
	0, 0, 2062, 2056, 0, 0, 0, 0, 311, 0,
	0, 2028, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2075, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2198,
	2081, 2198, 0, 0, 0, 0, 0, 0, 0, 2027,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2047, 0, 0, 311, 0, 0, 0, 0, 0, 1587,
	2044, 0, 1418, 0, 1418, 0, 0, 0, 1418, 311,
	0, 0, 311, 0, 0, 0, 1418, 1418, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1418,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1418,
	0, 0, 2050, 2051, 2052, 2053, 0, 0, 0, 0,
	0, 1418, 2033, 1418, 1705, 0, 1705, 0, 0, 0,
	1587, 0, 0, 0, 0, 0, 0, 959, 1705, 1705,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	5081, 0, 311, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 2066, 0, 0, 0, 2076,
	0, 0, 0, 0, 0, 0, 2055, 2057, 0, 0,
	0, 0, 0, 0, 1418, 0, 0, 1418, 0, 0,
	0, 0, 0, 0, 0, 0, 2072, 0, 2073, 0,
	0, 1705, 0, 0, 0, 2042, 2043, 0, 0, 0,
	0, 0, 0, 1705, 0, 1705, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2064, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2606, 0, 0, 0,
	2048, 0, 0, 0, 0, 0, 0, 2271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1418, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1587, 2618, 0, 1587,
	0, 0, 0, 1418, 0, 0, 0, 0, 0, 2074,
	0, 0, 0, 2271, 2271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2063, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2078, 2271, 2271, 0, 0, 0, 0, 0, 0,
	0, 0, 5217, 1691, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 2271, 0, 0, 1587, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1587, 0, 0, 0, 0,
	0, 2054, 0, 0, 1418, 1418, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2049, 0, 0,
	0, 0, 0, 1588, 0, 0, 0, 0, 0, 0,
	1706, 0, 0, 1418, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2067,
	311, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1706, 0, 0, 0, 2271,
	2198, 2271, 0, 0, 0, 2080, 0, 0, 0, 0,
	0, 311, 0, 0, 0, 0, 0, 0, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 313, 0, 313, 313,
	0, 1706, 313, 0, 0, 1587, 0, 0, 1706, 5339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1706, 0, 311, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2239, 0, 0, 2065, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2039,
	2040, 2046, 2068, 2045, 2041, 0, 2038, 2036, 2037, 2029,
	2030, 2031, 2032, 2034, 2035, 0, 0, 0, 0, 0,
	313, 1590, 313, 313, 4723, 1706, 313, 313, 1590, 0,
	0, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	5397, 0, 0, 0, 0, 0, 0, 0, 0, 313,
	0, 0, 0, 2198, 0, 1418, 1418, 0, 0, 0,
	0, 0, 0, 1418, 0, 0, 0, 0, 2198, 0,
	0, 0, 0, 1590, 1418, 1418, 0, 0, 0, 0,
	0, 0, 0, 0, 1418, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 0, 5445, 0,
	313, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2271, 1590,
	0, 0, 0, 0, 0, 0, 1590, 313, 313, 0,
	2198, 2198, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1590, 0, 0, 0, 0, 1705, 1705, 0,
	0, 2198, 0, 311, 2198, 1705, 0, 0, 0, 0,
	0, 0, 0, 1418, 0, 0, 1705, 1705, 0, 0,
	0, 0, 0, 0, 0, 0, 1705, 1418, 0, 0,
	0, 0, 0, 0, 0, 0, 1418, 0, 0, 0,
	0, 1418, 1418, 1418, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1590, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1418, 0, 1418, 0,
	0, 0, 0, 0, 1418, 0, 1418, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 313, 0,
	0, 0, 0, 0, 311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1705, 0, 0, 1418, 0,
	0, 0, 0, 0, 313, 0, 0, 0, 0, 2271,
	0, 0, 0, 0, 0, 0, 0, 0, 1705, 0,
	0, 0, 0, 1705, 1705, 1705, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 0, 0, 0, 0, 1705, 0,
	1705, 0, 0, 0, 0, 0, 1705, 0, 1587, 0,
	0, 0, 0, 0, 0, 0, 0, 1588, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1587, 0, 0, 0, 0, 0, 0, 1706, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1418,
	0, 0, 0, 0, 0, 0, 0, 1418, 0, 0,
	0, 1418, 1418, 0, 1418, 0, 0, 0, 0, 2271,
	0, 0, 0, 0, 0, 1418, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1418, 1418, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1418, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1588, 0, 0, 0, 0, 0, 0, 0, 1418,
	0, 1418, 0, 1587, 1587, 0, 1587, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2198,
	0, 2198, 0, 0, 313, 0, 0, 1705, 1705, 0,
	0, 0, 0, 0, 0, 1590, 1418, 0, 0, 0,
	313, 313, 313, 0, 0, 0, 0, 0, 0, 1587,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 313,
	0, 0, 0, 0, 1418, 1590, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1418, 1418, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1587, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1587, 0, 0, 0,
	0, 0, 1418, 1706, 1706, 0, 0, 1418, 0, 1590,
	0, 0, 0, 0, 1588, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1418, 1418, 1418, 1418, 1418, 1418, 1418, 0,
	1706, 0, 0, 0, 0, 0, 0, 0, 1705, 1705,
	0, 0, 0, 0, 0, 0, 1418, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1706,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1418, 0, 0, 0,
	0, 0, 0, 0, 1587, 0, 0, 0, 0, 1705,
	0, 0, 0, 0, 0, 0, 0, 2271, 0, 0,
	0, 0, 0, 0, 1706, 0, 1706, 0, 1706, 0,
	0, 0, 0, 0, 1705, 1705, 1705, 1705, 1705, 1705,
	1705, 1418, 0, 1418, 0, 0, 1706, 1706, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1587, 0,
	1706, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1706, 0, 0, 1706, 1706, 1706, 1706, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1587, 313,
	0, 1590, 1590, 313, 1418, 0, 0, 0, 0, 0,
	0, 0, 1590, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2025, 2026,
	0, 2058, 2059, 2060, 2069, 2070, 2071, 0, 1590, 2271,
	0, 0, 313, 1587, 0, 1705, 0, 0, 0, 0,
	0, 2062, 2056, 0, 0, 0, 0, 0, 0, 0,
	2028, 313, 0, 0, 0, 0, 0, 1590, 0, 0,
	0, 2075, 313, 0, 0, 0, 0, 0, 0, 313,
	0, 1418, 0, 0, 0, 0, 0, 1418, 0, 2081,
	1418, 1418, 0, 0, 0, 313, 1587, 313, 2027, 0,
	0, 0, 0, 313, 0, 0, 0, 0, 0, 2047,
	0, 0, 1590, 0, 1590, 0, 1590, 0, 0, 2044,
	0, 0, 0, 0, 0, 1588, 0, 0, 0, 0,
	1418, 0, 0, 0, 1590, 1590, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1590, 0,
	0, 0, 313, 0, 0, 0, 0, 0, 1418, 0,
	1590, 1418, 0, 1590, 1590, 1590, 1590, 0, 0, 0,
	0, 0, 0, 1587, 0, 313, 0, 0, 0, 1705,
	0, 0, 1705, 1705, 0, 0, 0, 0, 313, 0,
	313, 0, 313, 0, 313, 0, 313, 0, 313, 0,
	0, 2050, 2051, 2052, 2053, 0, 0, 0, 0, 0,
	0, 2033, 0, 0, 0, 0, 2271, 0, 1588, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 313, 313, 313, 313, 313, 0, 0,
	1587, 0, 0, 1705, 2066, 0, 0, 0, 2076, 0,
	0, 0, 0, 0, 0, 2055, 2057, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1418, 0, 2072, 0, 2073, 0, 0,
	1588, 0, 0, 0, 2042, 2043, 0, 0, 1418, 0,
	0, 0, 0, 1590, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2064, 0, 1588, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2048,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1418, 1418, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2074, 0,
	0, 1418, 0, 0, 1418, 0, 0, 0, 1418, 0,
	0, 0, 0, 0, 0, 0, 1590, 0, 1418, 2063,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2078, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1590, 0,
	2054, 0, 0, 0, 0, 0, 0, 0, 0, 1588,
	1705, 0, 0, 0, 0, 0, 0, 0, 1418, 0,
	1705, 313, 0, 0, 1590, 0, 2049, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 313, 0, 0, 0, 0, 0, 0, 313, 0,
	313, 0, 0, 313, 0, 0, 0, 0, 2067, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2080, 0, 0, 0, 0, 0,
	313, 0, 0, 313, 0, 0, 0, 0, 0, 0,
	1705, 0, 1588, 313, 0, 0, 313, 0, 1590, 0,
	0, 0, 0, 0, 1706, 0, 313, 313, 0, 0,
	0, 313, 0, 313, 0, 0, 0, 0, 0, 0,
	313, 313, 0, 0, 1418, 0, 0, 0, 0, 0,
	313, 2025, 2026, 0, 2058, 2059, 2060, 2069, 2070, 2071,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2062, 2056, 2065, 0, 0, 0,
	0, 0, 0, 2028, 0, 0, 0, 1590, 2039, 2040,
	2046, 2068, 2045, 2041, 2075, 2038, 2036, 2037, 2029, 2030,
	2031, 2032, 2034, 2035, 0, 0, 0, 0, 0, 2927,
	0, 0, 2081, 2928, 0, 0, 0, 0, 0, 313,
	0, 2027, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2047, 313, 0, 0, 1705, 0, 0, 0,
	0, 0, 2044, 0, 0, 0, 0, 313, 0, 1418,
	0, 1418, 0, 0, 0, 1706, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1706, 0, 1706,
	0, 0, 0, 0, 0, 1706, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1706, 1706, 0, 313,
	1590, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1590, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2050, 2051, 2052, 2053, 0, 0,
	0, 0, 0, 0, 2033, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 313, 0, 0, 0, 0, 0, 0, 1706,
	0, 0, 0, 0, 0, 0, 0, 2066, 0, 0,
	0, 2076, 0, 0, 0, 0, 0, 0, 2055, 2057,
	0, 0, 0, 0, 0, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 313, 0, 2072, 0,
	2073, 0, 0, 0, 0, 0, 0, 2042, 2043, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1590, 0, 0, 0, 2064, 0, 0,
	0, 0, 0, 0, 0, 1590, 0, 1590, 0, 0,
	0, 0, 2048, 1590, 0, 0, 0, 0, 0, 0,
	0, 313, 0, 0, 1590, 1590, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 313, 0, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 313, 0, 0, 0, 0,
	0, 2074, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2063, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2078, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1590, 0, 0,
	0, 0, 0, 313, 313, 313, 313, 0, 0, 0,
	0, 0, 0, 313, 0, 0, 0, 0, 313, 0,
	0, 2025, 2026, 0, 2058, 2059, 2060, 2069, 2070, 2071,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2054, 2062, 2056, 0, 0, 0, 313,
	0, 0, 0, 2028, 0, 0, 0, 313, 0, 0,
	0, 0, 0, 0, 2075, 0, 0, 0, 0, 2049,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2081, 0, 0, 0, 0, 0, 0, 0,
	0, 2027, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2067, 2047, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2044, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2080, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1588, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2050, 2051, 2052, 2053, 0, 0,
	0, 0, 0, 0, 2033, 0, 0, 0, 0, 1588,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2065,
	0, 0, 0, 0, 0, 0, 0, 1588, 0, 0,
	0, 2039, 2040, 2046, 2068, 2045, 2041, 0, 2038, 2036,
	2037, 2029, 2030, 2031, 2032, 2034, 2035, 2066, 0, 0,
	0, 2076, 0, 0, 0, 0, 4274, 0, 2055, 2057,
	0, 1588, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2072, 0,
	2073, 0, 0, 0, 0, 0, 0, 2042, 2043, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2064, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2048, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1590, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2025, 2026, 0, 2058, 2059, 2060, 2069,
	2070, 2071, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2062, 2056, 0, 0,
	0, 2074, 0, 0, 0, 2028, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2075, 1590, 0, 0,
	0, 0, 2063, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2078, 2081, 1590, 0, 0, 0, 0,
	0, 0, 0, 2027, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2047, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 2044, 0, 0, 0, 0, 1590,
	0, 0, 0, 0, 1588, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2054, 0, 0, 1590, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 313, 0, 0, 0, 313, 313, 0, 2049,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2050, 2051, 2052, 2053,
	0, 2067, 313, 0, 0, 0, 2033, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1706,
	0, 1706, 0, 0, 0, 1588, 0, 0, 0, 0,
	0, 0, 0, 1706, 1706, 0, 0, 2080, 0, 0,
	0, 0, 0, 0, 313, 313, 0, 0, 313, 2066,
	0, 0, 0, 2076, 0, 313, 0, 0, 0, 0,
	2055, 2057, 0, 0, 0, 0, 0, 0, 0, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2072, 0, 2073, 0, 0, 0, 0, 0, 0, 2042,
	2043, 0, 0, 0, 0, 0, 1706, 0, 0, 0,
	0, 0, 1590, 0, 0, 0, 0, 0, 1706, 2064,
	1706, 0, 0, 0, 0, 0, 0, 0, 0, 2065,
	0, 0, 0, 0, 2048, 0, 0, 0, 0, 0,
	0, 2039, 2040, 2046, 2068, 2045, 2041, 0, 2038, 2036,
	2037, 2029, 2030, 2031, 2032, 2034, 2035, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3729, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1588, 0, 2074, 1588, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 313, 0, 2063, 0, 0, 1590, 0, 1590,
	0, 0, 0, 1590, 0, 2078, 0, 0, 0, 0,
	313, 1590, 1590, 0, 0, 1590, 0, 0, 0, 0,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 1588, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2054, 0, 0, 0, 0,
	1588, 0, 0, 0, 1590, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1590, 0, 1590, 0,
	0, 2049, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2067, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2025, 2026, 0,
	2058, 2059, 2060, 2069, 2070, 2071, 0, 0, 0, 1590,
	0, 313, 1590, 313, 0, 0, 0, 0, 0, 2080,
	2062, 2056, 0, 0, 0, 0, 0, 0, 0, 2028,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2075, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 313, 0, 0, 0, 0, 0, 0, 2081, 0,
	0, 0, 0, 0, 0, 0, 0, 2027, 0, 0,
	1588, 0, 0, 0, 0, 0, 0, 0, 2047, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2044, 0,
	0, 1590, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2065, 0, 0, 0, 0, 0, 0, 1590, 0,
	0, 0, 0, 2039, 2040, 2046, 2068, 2045, 2041, 0,
	2038, 2036, 2037, 2029, 2030, 2031, 2032, 2034, 2035, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3728, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2050, 2051, 2052, 2053, 0, 0, 0, 0, 0, 0,
	2033, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2066, 0, 0, 0, 2076, 0, 0,
	0, 0, 0, 0, 2055, 2057, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1590, 0,
	0, 0, 0, 0, 2072, 0, 2073, 0, 0, 0,
	0, 0, 0, 2042, 2043, 0, 0, 0, 0, 0,
	0, 0, 1706, 1706, 0, 0, 0, 0, 0, 0,
	1706, 0, 0, 2064, 0, 0, 0, 313, 0, 0,
	0, 1706, 1706, 1590, 0, 0, 0, 0, 2048, 0,
	0, 1706, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2025, 2026, 0, 2058,
	2059, 2060, 2069, 2070, 2071, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2062,
	2056, 0, 0, 0, 0, 0, 0, 2074, 2028, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2075,
	0, 0, 0, 0, 0, 0, 0, 0, 2063, 0,
	0, 0, 0, 0, 0, 0, 0, 2081, 0, 2078,
	1706, 0, 0, 0, 0, 0, 2027, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2047, 0, 0,
	0, 0, 0, 1706, 0, 0, 0, 2044, 1706, 1706,
	1706, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1706, 0, 1706, 313, 0, 0, 2054,
	0, 1706, 0, 1588, 0, 0, 0, 0, 0, 0,
	1590, 1590, 0, 0, 0, 0, 0, 0, 1590, 0,
	0, 0, 0, 0, 0, 2049, 0, 0, 0, 1590,
	1590, 0, 0, 0, 0, 1588, 0, 0, 0, 1590,
	0, 0, 0, 0, 0, 313, 0, 0, 0, 2050,
	2051, 2052, 2053, 0, 0, 0, 0, 2067, 0, 2033,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 313,
	0, 0, 0, 2080, 0, 0, 0, 0, 0, 0,
	0, 313, 2066, 0, 0, 313, 2076, 313, 0, 0,
	0, 0, 313, 2055, 2057, 0, 0, 0, 1590, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2072, 0, 2073, 0, 0, 0, 0,
	0, 1590, 2042, 2043, 0, 0, 1590, 1590, 1590, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1588, 1588,
	0, 1588, 2064, 0, 0, 0, 0, 0, 0, 0,
	0, 1590, 0, 1590, 0, 2065, 0, 2048, 313, 1590,
	0, 1590, 1706, 1706, 0, 0, 0, 2039, 2040, 2046,
	2068, 2045, 2041, 0, 2038, 2036, 2037, 2029, 2030, 2031,
	2032, 2034, 2035, 0, 1588, 0, 0, 0, 0, 0,
	0, 0, 3725, 1590, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2074, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2063, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2078, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1588, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2025, 2026,
	0, 2058, 2059, 2060, 2069, 2070, 2071, 0, 0, 0,
	0, 1588, 0, 0, 0, 0, 0, 0, 2054, 0,
	0, 2062, 2056, 0, 0, 0, 0, 0, 0, 0,
	2028, 0, 0, 0, 0, 0, 1590, 1590, 0, 1590,
	0, 2075, 0, 0, 2049, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2081,
	1590, 1590, 0, 1706, 1706, 0, 0, 0, 2027, 0,
	0, 0, 0, 0, 0, 0, 2067, 0, 0, 2047,
	0, 0, 1590, 0, 0, 0, 0, 0, 0, 2044,
	0, 0, 0, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1588,
	0, 0, 2080, 0, 1706, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1706,
	1706, 1706, 1706, 1706, 1706, 1706, 0, 0, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1590, 0, 1588, 313, 0, 0, 313, 0, 0,
	0, 2050, 2051, 2052, 2053, 0, 0, 0, 0, 0,
	0, 2033, 0, 0, 0, 0, 0, 0, 0, 1590,
	0, 0, 0, 1588, 2065, 0, 0, 0, 0, 313,
	0, 0, 0, 0, 0, 0, 2039, 2040, 2046, 2068,
	2045, 2041, 0, 2038, 2036, 2037, 2029, 2030, 2031, 2032,
	2034, 2035, 0, 0, 2066, 0, 0, 0, 2076, 0,
	0, 3724, 0, 0, 0, 2055, 2057, 0, 1588, 0,
	1706, 1590, 1590, 0, 0, 1590, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2072, 0, 2073, 0, 0,
	0, 0, 0, 0, 2042, 2043, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 313, 0, 0,
	0, 0, 0, 0, 2064, 0, 0, 1590, 313, 0,
	0, 1588, 1590, 0, 0, 0, 0, 0, 0, 2048,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1590, 1590, 1590,
	1590, 1590, 1590, 1590, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1590, 0, 0, 0, 0, 0, 0, 2074, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1588, 2063,
	0, 1590, 0, 0, 1706, 0, 0, 1706, 1706, 0,
	2078, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1590, 0, 1590, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2054, 0, 0, 0, 0, 1588, 0, 0, 1706, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2049, 0, 0, 1590,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2067, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2080, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1590, 0, 0, 0,
	0, 0, 1590, 0, 0, 1590, 1590, 0, 0, 0,
	0, 0, 0, 0, 0, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2065, 0, 0, 0,
	0, 0, 0, 1590, 0, 0, 1590, 0, 2039, 2040,
	2046, 2068, 2045, 2041, 0, 2038, 2036, 2037, 2029, 2030,
	2031, 2032, 2034, 2035, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3723, 0, 0, 0, 0, 0, 0,
	0, 313, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1706, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1706, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1706, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 313, 0,
	0, 0, 0, 1590, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1590, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1706, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1590, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1585, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 313, 321, 322,
	324, 323, 325, 326, 327, 328, 1591, 329, 330, 1592,
	1593, 1594, 0, 1595, 739, 1596, 1597, 1598, 331, 1599,
	332, 333, 334, 1357, 335, 336, 337, 338, 339, 340,
	341, 740, 741, 0, 342, 742, 343, 743, 1600, 744,
	344, 345, 346, 347, 348, 349, 350, 1601, 1602, 0,
	351, 745, 746, 747, 1603, 352, 353, 748, 1604, 1671,
	1605, 354, 355, 356, 357, 358, 359, 360, 361, 0,
	1606, 363, 364, 365, 362, 366, 367, 1607, 368, 1590,
	369, 370, 371, 372, 373, 374, 375, 1608, 376, 377,
	378, 1358, 379, 380, 381, 1609, 1610, 1612, 1611, 1613,
	1614, 1615, 382, 383, 384, 385, 386, 0, 387, 389,
	749, 750, 1616, 392, 394, 388, 390, 1617, 393, 391,
	395, 396, 1618, 397, 398, 399, 1619, 1620, 400, 401,
	402, 1621, 403, 404, 405, 1622, 406, 407, 408, 1623,
	409, 410, 751, 411, 412, 413, 415, 417, 414, 416,
	418, 419, 420, 421, 422, 752, 753, 423, 1624, 318,
	1625, 0, 0, 0, 0, 424, 425, 426, 754, 0,
	0, 0, 427, 1626, 428, 429, 430, 1627, 431, 432,
	1628, 1359, 433, 434, 435, 755, 756, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 1629, 445, 757, 1630,
	758, 446, 1631, 447, 448, 449, 450, 451, 452, 453,
	759, 760, 761, 547, 1361, 454, 455, 456, 1632, 457,
	458, 459, 460, 461, 0, 0, 0, 319, 462, 463,
	464, 1633, 1360, 762, 465, 548, 466, 763, 764, 1634,
	765, 1635, 467, 468, 470, 1362, 766, 1363, 469, 471,
	472, 1364, 473, 0, 0, 0, 474, 475, 476, 477,
	478, 479, 480, 1636, 481, 483, 482, 1637, 485, 767,
	484, 1365, 486, 487, 1366, 1638, 488, 489, 490, 491,
	492, 493, 496, 1639, 1640, 494, 495, 497, 498, 0,
	499, 500, 502, 505, 501, 503, 504, 506, 519, 520,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 522, 0, 521, 1367, 523, 524, 525, 526,
	527, 534, 536, 537, 532, 533, 535, 538, 539, 541,
	529, 530, 531, 1368, 540, 528, 1641, 320, 1369, 542,
	543, 544, 545, 1642, 768, 546, 769, 549, 550, 1643,
	0, 551, 0, 552, 1644, 1645, 554, 555, 556, 1646,
	1647, 557, 558, 770, 1370, 559, 1371, 771, 560, 561,
	553, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 1648, 572, 573, 772, 574, 575, 576, 773, 577,
	578, 579, 774, 580, 775, 581, 582, 1649, 583, 584,
	585, 0, 586, 587, 588, 589, 590, 591, 592, 593,
	776, 594, 595, 597, 596, 598, 1650, 599, 0, 600,
	601, 602, 0, 0, 0, 0, 0, 603, 604, 606,
	0, 607, 608, 609, 610, 605, 611, 612, 613, 614,
	615, 616, 1651, 618, 619, 617, 620, 621, 1372, 622,
	623, 624, 625, 626, 777, 627, 0, 628, 629, 637,
	638, 639, 630, 631, 633, 640, 632, 641, 642, 643,
	644, 646, 645, 1652, 648, 649, 647, 650, 651, 652,
	1653, 653, 778, 654, 634, 635, 655, 656, 1373, 657,
	658, 659, 660, 661, 662, 663, 779, 0, 664, 1654,
	665, 666, 667, 668, 669, 670, 672, 636, 673, 678,
	679, 780, 674, 675, 676, 677, 781, 681, 682, 683,
	684, 1655, 685, 686, 0, 680, 671, 1656, 687, 688,
	689, 690, 691, 692, 0, 693, 694, 1657, 695, 782,
	783, 784, 785, 1658, 707, 1659, 696, 698, 699, 700,
	701, 786, 702, 787, 1660, 703, 704, 705, 706, 697,
	708, 709, 1661, 1662, 710, 711, 712, 714, 716, 717,
	713, 715, 718, 1663, 719, 1664, 0, 720, 721, 722,
	788, 789, 790, 1665, 724, 725, 723, 726, 727, 730,
	728, 729, 791, 731, 732, 733, 1666, 1667, 1668, 1669,
	734, 735, 792, 736, 737, 738, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1585,
	0, 0, 0, 0, 0, 0, 3120, 0, 0, 0,
	0, 0, 0, 0, 0, 3121, 321, 322, 324, 323,
	325, 326, 327, 328, 1591, 329, 330, 1592, 1593, 1594,
	0, 1595, 739, 1596, 1597, 1598, 331, 1599, 332, 333,
	334, 1357, 335, 336, 337, 338, 339, 340, 341, 740,
	741, 0, 342, 742, 343, 743, 1600, 744, 344, 345,
	346, 347, 348, 349, 350, 1601, 1602, 0, 351, 745,
	746, 747, 1603, 352, 353, 748, 1604, 1671, 1605, 354,
	355, 356, 357, 358, 359, 360, 361, 0, 1606, 363,
	364, 365, 362, 366, 367, 1607, 368, 0, 369, 370,
	371, 372, 373, 374, 375, 1608, 376, 377, 378, 1358,
	379, 380, 381, 1609, 1610, 1612, 1611, 1613, 1614, 1615,
	382, 383, 384, 385, 386, 0, 387, 389, 749, 750,
	1616, 392, 394, 388, 390, 1617, 393, 391, 395, 396,
	1618, 397, 398, 399, 1619, 1620, 400, 401, 402, 1621,
	403, 404, 405, 1622, 406, 407, 408, 1623, 409, 410,
	751, 411, 412, 413, 415, 417, 414, 416, 418, 419,
	420, 421, 422, 752, 753, 423, 1624, 318, 1625, 0,
	0, 0, 0, 424, 425, 426, 754, 0, 0, 0,
	427, 1626, 428, 429, 430, 1627, 431, 432, 1628, 1359,
	433, 434, 435, 755, 756, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 1629, 445, 757, 1630, 758, 446,
	1631, 447, 448, 449, 450, 451, 452, 453, 759, 760,
	761, 547, 1361, 454, 455, 456, 1632, 457, 458, 459,
	460, 461, 0, 0, 0, 319, 462, 463, 464, 1633,
	1360, 762, 465, 548, 466, 763, 764, 1634, 765, 1635,
	467, 468, 470, 1362, 766, 1363, 469, 471, 472, 1364,
	473, 0, 0, 0, 474, 475, 476, 477, 478, 479,
	480, 1636, 481, 483, 482, 1637, 485, 767, 484, 1365,
	486, 487, 1366, 1638, 488, 489, 490, 491, 492, 493,
	496, 1639, 1640, 494, 495, 497, 498, 0, 499, 500,
	502, 505, 501, 503, 504, 506, 519, 520, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	522, 0, 521, 1367, 523, 524, 525, 526, 527, 534,
	536, 537, 532, 533, 535, 538, 539, 541, 529, 530,
	531, 1368, 540, 528, 1641, 320, 1369, 542, 543, 544,
	545, 1642, 768, 546, 769, 549, 550, 1643, 0, 551,
	0, 552, 1644, 1645, 554, 555, 556, 1646, 1647, 557,
	558, 770, 1370, 559, 1371, 771, 560, 561, 553, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 1648,
	572, 573, 772, 574, 575, 576, 773, 577, 578, 579,
	774, 580, 775, 581, 582, 1649, 583, 584, 585, 0,
	586, 587, 588, 589, 590, 591, 592, 593, 776, 594,
	595, 597, 596, 598, 1650, 599, 0, 600, 601, 602,
	0, 0, 0, 0, 0, 603, 604, 606, 0, 607,
	608, 609, 610, 605, 611, 612, 613, 614, 615, 616,
	1651, 618, 619, 617, 620, 621, 1372, 622, 623, 624,
	625, 626, 777, 627, 0, 628, 629, 637, 638, 639,
	630, 631, 633, 640, 632, 641, 642, 643, 644, 646,
	645, 1652, 648, 649, 647, 650, 651, 652, 1653, 653,
	778, 654, 634, 635, 655, 656, 1373, 657, 658, 659,
	660, 661, 662, 663, 779, 0, 664, 1654, 665, 666,
	667, 668, 669, 670, 672, 636, 673, 678, 679, 780,
	674, 675, 676, 677, 781, 681, 682, 683, 684, 1655,
	685, 686, 0, 680, 671, 1656, 687, 688, 689, 690,
	691, 692, 0, 693, 694, 1657, 695, 782, 783, 784,
	785, 1658, 707, 1659, 696, 698, 699, 700, 701, 786,
	702, 787, 1660, 703, 704, 705, 706, 697, 708, 709,
	1661, 1662, 710, 711, 712, 714, 716, 717, 713, 715,
	718, 1663, 719, 1664, 0, 720, 721, 722, 788, 789,
	790, 1665, 724, 725, 723, 726, 727, 730, 728, 729,
	791, 731, 732, 733, 1666, 1667, 1668, 1669, 734, 735,
	792, 736, 737, 738, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1585, 0, 0, 0, 4283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4285, 321, 322, 324, 323, 325, 326, 327, 328, 1591,
	329, 330, 1592, 1593, 1594, 0, 1595, 739, 1596, 1597,
	1598, 331, 1599, 332, 333, 334, 1357, 335, 336, 337,
	338, 339, 340, 341, 740, 741, 0, 342, 742, 343,
	743, 1600, 744, 344, 345, 346, 347, 348, 349, 350,
	1601, 1602, 0, 351, 745, 746, 747, 1603, 352, 353,
	748, 1604, 1671, 1605, 354, 355, 356, 357, 358, 359,
	360, 361, 0, 1606, 363, 364, 365, 362, 366, 367,
	1607, 368, 0, 369, 370, 371, 372, 373, 374, 375,
	1608, 376, 377, 378, 1358, 379, 380, 381, 1609, 1610,
	1612, 1611, 1613, 1614, 1615, 382, 383, 384, 385, 386,
	0, 387, 389, 749, 750, 1616, 392, 394, 388, 390,
	1617, 393, 391, 395, 396, 1618, 397, 398, 399, 1619,
	1620, 400, 401, 402, 1621, 403, 404, 405, 1622, 406,
	407, 408, 1623, 409, 410, 751, 411, 412, 413, 415,
	417, 414, 416, 418, 419, 420, 421, 422, 752, 753,
	423, 1624, 318, 1625, 0, 0, 0, 0, 424, 425,
	426, 754, 0, 0, 0, 427, 1626, 428, 429, 430,
	1627, 431, 432, 1628, 1359, 433, 434, 435, 755, 756,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 1629,
	445, 757, 1630, 758, 446, 1631, 447, 448, 449, 450,
	451, 452, 453, 759, 760, 761, 547, 1361, 454, 455,
	456, 1632, 457, 458, 459, 460, 461, 0, 0, 0,
	319, 462, 463, 464, 1633, 1360, 762, 465, 548, 466,
	763, 764, 1634, 765, 1635, 467, 468, 470, 1362, 766,
	1363, 469, 471, 472, 1364, 473, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 480, 1636, 481, 483, 482,
	1637, 485, 767, 484, 1365, 486, 487, 1366, 1638, 488,
	489, 490, 491, 492, 493, 496, 1639, 1640, 494, 495,
	497, 498, 0, 499, 500, 502, 505, 501, 503, 504,
	506, 519, 520, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 522, 0, 521, 1367, 523,
	524, 525, 526, 527, 534, 536, 537, 532, 533, 535,
	538, 539, 541, 529, 530, 531, 1368, 540, 528, 1641,
	320, 1369, 542, 543, 544, 545, 1642, 768, 546, 769,
	549, 550, 1643, 0, 551, 0, 552, 1644, 1645, 554,
	555, 556, 1646, 1647, 557, 558, 770, 1370, 559, 1371,
	771, 560, 561, 553, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 1648, 572, 573, 772, 574, 575,
	576, 773, 577, 578, 579, 774, 580, 775, 581, 582,
	1649, 583, 584, 585, 0, 586, 587, 588, 589, 590,
	591, 592, 593, 776, 594, 595, 597, 596, 598, 1650,
	599, 0, 600, 601, 602, 0, 0, 0, 0, 0,
	603, 604, 606, 0, 607, 608, 609, 610, 605, 611,
	612, 613, 614, 615, 616, 1651, 618, 619, 617, 620,
	621, 1372, 622, 623, 624, 625, 626, 777, 627, 0,
	628, 629, 637, 638, 639, 630, 631, 633, 640, 632,
	641, 642, 643, 644, 646, 645, 1652, 648, 649, 647,
	650, 651, 652, 1653, 653, 778, 654, 634, 635, 655,
	656, 1373, 657, 658, 659, 660, 661, 662, 663, 779,
	0, 664, 1654, 665, 666, 667, 668, 669, 670, 672,
	636, 673, 678, 679, 780, 674, 675, 676, 677, 781,
	681, 682, 683, 684, 1655, 685, 686, 0, 680, 671,
	1656, 687, 688, 689, 690, 691, 692, 0, 693, 694,
	1657, 695, 782, 783, 784, 785, 1658, 707, 1659, 696,
	698, 699, 700, 701, 786, 702, 787, 1660, 703, 704,
	705, 706, 697, 708, 709, 1661, 1662, 710, 711, 712,
	714, 716, 717, 713, 715, 718, 1663, 719, 1664, 0,
	720, 721, 722, 788, 789, 790, 1665, 724, 725, 723,
	726, 727, 730, 728, 729, 791, 731, 732, 733, 1666,
	1667, 1668, 1669, 734, 735, 792, 736, 737, 738, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1585, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4753,
	321, 322, 324, 323, 325, 326, 327, 328, 1591, 329,
	330, 1592, 1593, 1594, 0, 1595, 739, 1596, 1597, 1598,
	331, 1599, 332, 333, 334, 1357, 335, 336, 337, 338,
	339, 340, 341, 740, 741, 0, 342, 742, 343, 743,
	1600, 744, 344, 345, 346, 347, 348, 349, 350, 1601,
	1602, 0, 351, 745, 746, 747, 1603, 352, 353, 748,
	1604, 1671, 1605, 354, 355, 356, 357, 358, 359, 360,
	361, 0, 1606, 363, 364, 365, 362, 366, 367, 1607,
	368, 0, 369, 370, 371, 372, 373, 374, 375, 1608,
	376, 377, 378, 1358, 379, 380, 381, 1609, 1610, 1612,
	1611, 1613, 1614, 1615, 382, 383, 384, 385, 386, 0,
	387, 389, 749, 750, 1616, 392, 394, 388, 390, 1617,
	393, 391, 395, 396, 1618, 397, 398, 399, 1619, 1620,
	400, 401, 402, 1621, 403, 404, 405, 1622, 406, 407,
	408, 1623, 409, 410, 751, 411, 412, 413, 415, 417,
	414, 416, 418, 419, 420, 421, 422, 752, 753, 423,
	1624, 318, 1625, 0, 0, 0, 0, 424, 425, 426,
	754, 0, 0, 0, 427, 1626, 428, 429, 430, 1627,
	431, 432, 1628, 1359, 433, 434, 435, 755, 756, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 1629, 445,
	757, 1630, 758, 446, 1631, 447, 448, 449, 450, 451,
	452, 453, 759, 760, 761, 547, 1361, 454, 455, 456,
	1632, 457, 458, 459, 460, 461, 0, 0, 0, 319,
	462, 463, 464, 1633, 1360, 762, 465, 548, 466, 763,
	764, 1634, 765, 1635, 467, 468, 470, 1362, 766, 1363,
	469, 471, 472, 1364, 473, 0, 0, 0, 474, 475,
	476, 477, 478, 479, 480, 1636, 481, 483, 482, 1637,
	485, 767, 484, 1365, 486, 487, 1366, 1638, 488, 489,
	490, 491, 492, 493, 496, 1639, 1640, 494, 495, 497,
	498, 0, 499, 500, 502, 505, 501, 503, 504, 506,
	519, 520, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 522, 0, 521, 1367, 523, 524,
	525, 526, 527, 534, 536, 537, 532, 533, 535, 538,
	539, 541, 529, 530, 531, 1368, 540, 528, 1641, 320,
	1369, 542, 543, 544, 545, 1642, 768, 546, 769, 549,
	550, 1643, 0, 551, 0, 552, 1644, 1645, 554, 555,
	556, 1646, 1647, 557, 558, 770, 1370, 559, 1371, 771,
	560, 561, 553, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 1648, 572, 573, 772, 574, 575, 576,
	773, 577, 578, 579, 774, 580, 775, 581, 582, 1649,
	583, 584, 585, 0, 586, 587, 588, 589, 590, 591,
	592, 593, 776, 594, 595, 597, 596, 598, 1650, 599,
	0, 600, 601, 602, 0, 0, 0, 0, 0, 603,
	604, 606, 0, 607, 608, 609, 610, 605, 611, 612,
	613, 614, 615, 616, 1651, 618, 619, 617, 620, 621,
	1372, 622, 623, 624, 625, 626, 777, 627, 0, 628,
	629, 637, 638, 639, 630, 631, 633, 640, 632, 641,
	642, 643, 644, 646, 645, 1652, 648, 649, 647, 650,
	651, 652, 1653, 653, 778, 654, 634, 635, 655, 656,
	1373, 657, 658, 659, 660, 661, 662, 663, 779, 0,
	664, 1654, 665, 666, 667, 668, 669, 670, 672, 636,
	673, 678, 679, 780, 674, 675, 676, 677, 781, 681,
	682, 683, 684, 1655, 685, 686, 0, 680, 671, 1656,
	687, 688, 689, 690, 691, 692, 0, 693, 694, 1657,
	695, 782, 783, 784, 785, 1658, 707, 1659, 696, 698,
	699, 700, 701, 786, 702, 787, 1660, 703, 704, 705,
	706, 697, 708, 709, 1661, 1662, 710, 711, 712, 714,
	716, 717, 713, 715, 718, 1663, 719, 1664, 0, 720,
	721, 722, 788, 789, 790, 1665, 724, 725, 723, 726,
	727, 730, 728, 729, 791, 731, 732, 733, 1666, 1667,
	1668, 1669, 734, 735, 792, 736, 737, 738, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4751, 321,
	322, 324, 323, 325, 326, 327, 328, 1591, 329, 330,
	1592, 1593, 1594, 0, 1595, 739, 1596, 1597, 1598, 331,
	1599, 332, 333, 334, 1357, 335, 336, 337, 338, 339,
	340, 341, 740, 741, 0, 342, 742, 343, 743, 1600,
	744, 344, 345, 346, 347, 348, 349, 350, 1601, 1602,
	0, 351, 745, 746, 747, 1603, 352, 353, 748, 1604,
	1671, 1605, 354, 355, 356, 357, 358, 359, 360, 361,
	0, 1606, 363, 364, 365, 362, 366, 367, 1607, 368,
	0, 369, 370, 371, 372, 373, 374, 375, 1608, 376,
	377, 378, 1358, 379, 380, 381, 1609, 1610, 1612, 1611,
	1613, 1614, 1615, 382, 383, 384, 385, 386, 0, 387,
	389, 749, 750, 1616, 392, 394, 388, 390, 1617, 393,
	391, 395, 396, 1618, 397, 398, 399, 1619, 1620, 400,
	401, 402, 1621, 403, 404, 405, 1622, 406, 407, 408,
	1623, 409, 410, 751, 411, 412, 413, 415, 417, 414,
	416, 418, 419, 420, 421, 422, 752, 753, 423, 1624,
	318, 1625, 0, 0, 0, 0, 424, 425, 426, 754,
	0, 0, 0, 427, 1626, 428, 429, 430, 1627, 431,
	432, 1628, 1359, 433, 434, 435, 755, 756, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 1629, 445, 757,
	1630, 758, 446, 1631, 447, 448, 449, 450, 451, 452,
	453, 759, 760, 761, 547, 1361, 454, 455, 456, 1632,
	457, 458, 459, 460, 461, 0, 0, 0, 319, 462,
	463, 464, 1633, 1360, 762, 465, 548, 466, 763, 764,
	1634, 765, 1635, 467, 468, 470, 1362, 766, 1363, 469,
	471, 472, 1364, 473, 0, 0, 0, 474, 475, 476,
	477, 478, 479, 480, 1636, 481, 483, 482, 1637, 485,
	767, 484, 1365, 486, 487, 1366, 1638, 488, 489, 490,
	491, 492, 493, 496, 1639, 1640, 494, 495, 497, 498,
	0, 499, 500, 502, 505, 501, 503, 504, 506, 519,
	520, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 522, 0, 521, 1367, 523, 524, 525,
	526, 527, 534, 536, 537, 532, 533, 535, 538, 539,
	541, 529, 530, 531, 1368, 540, 528, 1641, 320, 1369,
	542, 543, 544, 545, 1642, 768, 546, 769, 549, 550,
	1643, 0, 551, 0, 552, 1644, 1645, 554, 555, 556,
	1646, 1647, 557, 558, 770, 1370, 559, 1371, 771, 560,
	561, 553, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 1648, 572, 573, 772, 574, 575, 576, 773,
	577, 578, 579, 774, 580, 775, 581, 582, 1649, 583,
	584, 585, 0, 586, 587, 588, 589, 590, 591, 592,
	593, 776, 594, 595, 597, 596, 598, 1650, 599, 0,
	600, 601, 602, 0, 0, 0, 0, 0, 603, 604,
	606, 0, 607, 608, 609, 610, 605, 611, 612, 613,
	614, 615, 616, 1651, 618, 619, 617, 620, 621, 1372,
	622, 623, 624, 625, 626, 777, 627, 0, 628, 629,
	637, 638, 639, 630, 631, 633, 640, 632, 641, 642,
	643, 644, 646, 645, 1652, 648, 649, 647, 650, 651,
	652, 1653, 653, 778, 654, 634, 635, 655, 656, 1373,
	657, 658, 659, 660, 661, 662, 663, 779, 0, 664,
	1654, 665, 666, 667, 668, 669, 670, 672, 636, 673,
	678, 679, 780, 674, 675, 676, 677, 781, 681, 682,
	683, 684, 1655, 685, 686, 0, 680, 671, 1656, 687,
	688, 689, 690, 691, 692, 0, 693, 694, 1657, 695,
	782, 783, 784, 785, 1658, 707, 1659, 696, 698, 699,
	700, 701, 786, 702, 787, 1660, 703, 704, 705, 706,
	697, 708, 709, 1661, 1662, 710, 711, 712, 714, 716,
	717, 713, 715, 718, 1663, 719, 1664, 0, 720, 721,
	722, 788, 789, 790, 1665, 724, 725, 723, 726, 727,
	730, 728, 729, 791, 731, 732, 733, 1666, 1667, 1668,
	1669, 734, 735, 792, 736, 737, 738, 0, 0, 0,
	0, 0, 0, 0, 0, 1585, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 5016, 321, 322, 324, 323, 325, 326, 327, 328,
	1591, 329, 330, 1592, 1593, 1594, 0, 1595, 739, 1596,
	1597, 1598, 331, 1599, 332, 333, 334, 1357, 335, 336,
	337, 338, 339, 340, 341, 740, 741, 0, 342, 742,
	343, 743, 1600, 744, 344, 345, 346, 347, 348, 349,
	350, 1601, 1602, 0, 351, 745, 746, 747, 1603, 352,
	353, 748, 1604, 1671, 1605, 354, 355, 356, 357, 358,
	359, 360, 361, 0, 1606, 363, 364, 365, 362, 366,
	367, 1607, 368, 0, 369, 370, 371, 372, 373, 374,
	375, 1608, 376, 377, 378, 1358, 379, 380, 381, 1609,
	1610, 1612, 1611, 1613, 1614, 1615, 382, 383, 384, 385,
	386, 0, 387, 389, 749, 750, 1616, 392, 394, 388,
	390, 1617, 393, 391, 395, 396, 1618, 397, 398, 399,
	1619, 1620, 400, 401, 402, 1621, 403, 404, 405, 1622,
	406, 407, 408, 1623, 409, 410, 751, 411, 412, 413,
	415, 417, 414, 416, 418, 419, 420, 421, 422, 752,
	753, 423, 1624, 318, 1625, 0, 0, 0, 0, 424,
	425, 426, 754, 0, 0, 0, 427, 1626, 428, 429,
	430, 1627, 431, 432, 1628, 1359, 433, 434, 435, 755,
	756, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	1629, 445, 757, 1630, 758, 446, 1631, 447, 448, 449,
	450, 451, 452, 453, 759, 760, 761, 547, 1361, 454,
	455, 456, 1632, 457, 458, 459, 460, 461, 0, 0,
	0, 319, 462, 463, 464, 1633, 1360, 762, 465, 548,
	466, 763, 764, 1634, 765, 1635, 467, 468, 470, 1362,
	766, 1363, 469, 471, 472, 1364, 473, 0, 0, 0,
	474, 475, 476, 477, 478, 479, 480, 1636, 481, 483,
	482, 1637, 485, 767, 484, 1365, 486, 487, 1366, 1638,
	488, 489, 490, 491, 492, 493, 496, 1639, 1640, 494,
	495, 497, 498, 0, 499, 500, 502, 505, 501, 503,
	504, 506, 519, 520, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 522, 0, 521, 1367,
	523, 524, 525, 526, 527, 534, 536, 537, 532, 533,
	535, 538, 539, 541, 529, 530, 531, 1368, 540, 528,
	1641, 320, 1369, 542, 543, 544, 545, 1642, 768, 546,
	769, 549, 550, 1643, 0, 551, 0, 552, 1644, 1645,
	554, 555, 556, 1646, 1647, 557, 558, 770, 1370, 559,
	1371, 771, 560, 561, 553, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 1648, 572, 573, 772, 574,
	575, 576, 773, 577, 578, 579, 774, 580, 775, 581,
	582, 1649, 583, 584, 585, 0, 586, 587, 588, 589,
	590, 591, 592, 593, 776, 594, 595, 597, 596, 598,
	1650, 599, 0, 600, 601, 602, 0, 0, 0, 0,
	0, 603, 604, 606, 0, 607, 608, 609, 610, 605,
	611, 612, 613, 614, 615, 616, 1651, 618, 619, 617,
	620, 621, 1372, 622, 623, 624, 625, 626, 777, 627,
	0, 628, 629, 637, 638, 639, 630, 631, 633, 640,
	632, 641, 642, 643, 644, 646, 645, 1652, 648, 649,
	647, 650, 651, 652, 1653, 653, 778, 654, 634, 635,
	655, 656, 1373, 657, 658, 659, 660, 661, 662, 663,
	779, 0, 664, 1654, 665, 666, 667, 668, 669, 670,
	672, 636, 673, 678, 679, 780, 674, 675, 676, 677,
	781, 681, 682, 683, 684, 1655, 685, 686, 0, 680,
	671, 1656, 687, 688, 689, 690, 691, 692, 0, 693,
	694, 1657, 695, 782, 783, 784, 785, 1658, 707, 1659,
	696, 698, 699, 700, 701, 786, 702, 787, 1660, 703,
	704, 705, 706, 697, 708, 709, 1661, 1662, 710, 711,
	712, 714, 716, 717, 713, 715, 718, 1663, 719, 1664,
	0, 720, 721, 722, 788, 789, 790, 1665, 724, 725,
	723, 726, 727, 730, 728, 729, 791, 731, 732, 733,
	1666, 1667, 1668, 1669, 734, 735, 792, 736, 737, 738,
	0, 0, 0, 0, 0, 0, 0, 0, 1585, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4864, 321, 322, 324, 323, 325,
	326, 327, 328, 1591, 329, 330, 1592, 1593, 1594, 0,
	1595, 739, 1596, 1597, 1598, 331, 1599, 332, 333, 334,
	1357, 335, 336, 337, 338, 339, 340, 341, 740, 741,
	0, 342, 742, 343, 743, 1600, 744, 344, 345, 346,
	347, 348, 349, 350, 1601, 1602, 0, 351, 745, 746,
	747, 1603, 352, 353, 748, 1604, 1671, 1605, 354, 355,
	356, 357, 358, 359, 360, 361, 0, 1606, 363, 364,
	365, 362, 366, 367, 1607, 368, 0, 369, 370, 371,
	372, 373, 374, 375, 1608, 376, 377, 378, 1358, 379,
	380, 381, 1609, 1610, 1612, 1611, 1613, 1614, 1615, 382,
	383, 384, 385, 386, 0, 387, 389, 749, 750, 1616,
	392, 394, 388, 390, 1617, 393, 391, 395, 396, 1618,
	397, 398, 399, 1619, 1620, 400, 401, 402, 1621, 403,
	404, 405, 1622, 406, 407, 408, 1623, 409, 410, 751,
	411, 412, 413, 415, 417, 414, 416, 418, 419, 420,
	421, 422, 752, 753, 423, 1624, 318, 1625, 0, 0,
	0, 0, 424, 425, 426, 754, 0, 0, 0, 427,
	1626, 428, 429, 430, 1627, 431, 432, 1628, 1359, 433,
	434, 435, 755, 756, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 1629, 445, 757, 1630, 758, 446, 1631,
	447, 448, 449, 450, 451, 452, 453, 759, 760, 761,
	547, 1361, 454, 455, 456, 1632, 457, 458, 459, 460,
	461, 0, 0, 0, 319, 462, 463, 464, 1633, 1360,
	762, 465, 548, 466, 763, 764, 1634, 765, 1635, 467,
	468, 470, 1362, 766, 1363, 469, 471, 472, 1364, 473,
	0, 0, 0, 474, 475, 476, 477, 478, 479, 480,
	1636, 481, 483, 482, 1637, 485, 767, 484, 1365, 486,
	487, 1366, 1638, 488, 489, 490, 491, 492, 493, 496,
	1639, 1640, 494, 495, 497, 498, 0, 499, 500, 502,
	505, 501, 503, 504, 506, 519, 520, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 522,
	0, 521, 1367, 523, 524, 525, 526, 527, 534, 536,
	537, 532, 533, 535, 538, 539, 541, 529, 530, 531,
	1368, 540, 528, 1641, 320, 1369, 542, 543, 544, 545,
	1642, 768, 546, 769, 549, 550, 1643, 0, 551, 0,
	552, 1644, 1645, 554, 555, 556, 1646, 1647, 557, 558,
	770, 1370, 559, 1371, 771, 560, 561, 553, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 1648, 572,
	573, 772, 574, 575, 576, 773, 577, 578, 579, 774,
	580, 775, 581, 582, 1649, 583, 584, 585, 0, 586,
	587, 588, 589, 590, 591, 592, 593, 776, 594, 595,
	597, 596, 598, 1650, 599, 0, 600, 601, 602, 0,
	0, 0, 0, 0, 603, 604, 606, 0, 607, 608,
	609, 610, 605, 611, 612, 613, 614, 615, 616, 1651,
	618, 619, 617, 620, 621, 1372, 622, 623, 624, 625,
	626, 777, 627, 0, 628, 629, 637, 638, 639, 630,
	631, 633, 640, 632, 641, 642, 643, 644, 646, 645,
	1652, 648, 649, 647, 650, 651, 652, 1653, 653, 778,
	654, 634, 635, 655, 656, 1373, 657, 658, 659, 660,
	661, 662, 663, 779, 0, 664, 1654, 665, 666, 667,
	668, 669, 670, 672, 636, 673, 678, 679, 780, 674,
	675, 676, 677, 781, 681, 682, 683, 684, 1655, 685,
	686, 0, 680, 671, 1656, 687, 688, 689, 690, 691,
	692, 0, 693, 694, 1657, 695, 782, 783, 784, 785,
	1658, 707, 1659, 696, 698, 699, 700, 701, 786, 702,
	787, 1660, 703, 704, 705, 706, 697, 708, 709, 1661,
	1662, 710, 711, 712, 714, 716, 717, 713, 715, 718,
	1663, 719, 1664, 0, 720, 721, 722, 788, 789, 790,
	1665, 724, 725, 723, 726, 727, 730, 728, 729, 791,
	731, 732, 733, 1666, 1667, 1668, 1669, 734, 735, 792,
	736, 737, 738, 0, 0, 0, 0, 0, 0, 0,
	0, 1585, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4677, 321, 322,
	324, 323, 325, 326, 327, 328, 1591, 329, 330, 1592,
	1593, 1594, 0, 1595, 739, 1596, 1597, 1598, 331, 1599,
	332, 333, 334, 1357, 335, 336, 337, 338, 339, 340,
	341, 740, 741, 0, 342, 742, 343, 743, 1600, 744,
	344, 345, 346, 347, 348, 349, 350, 1601, 1602, 0,
	351, 745, 746, 747, 1603, 352, 353, 748, 1604, 1671,
	1605, 354, 355, 356, 357, 358, 359, 360, 361, 0,
	1606, 363, 364, 365, 362, 366, 367, 1607, 368, 0,
	369, 370, 371, 372, 373, 374, 375, 1608, 376, 377,
	378, 1358, 379, 380, 381, 1609, 1610, 1612, 1611, 1613,
	1614, 1615, 382, 383, 384, 385, 386, 0, 387, 389,
	749, 750, 1616, 392, 394, 388, 390, 1617, 393, 391,
	395, 396, 1618, 397, 398, 399, 1619, 1620, 400, 401,
	402, 1621, 403, 404, 405, 1622, 406, 407, 408, 1623,
	409, 410, 751, 411, 412, 413, 415, 417, 414, 416,
	418, 419, 420, 421, 422, 752, 753, 423, 1624, 318,
	1625, 0, 0, 0, 0, 424, 425, 426, 754, 0,
	0, 0, 427, 1626, 428, 429, 430, 1627, 431, 432,
	1628, 1359, 433, 434, 435, 755, 756, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 1629, 445, 757, 1630,
	758, 446, 1631, 447, 448, 449, 450, 451, 452, 453,
	759, 760, 761, 547, 1361, 454, 455, 456, 1632, 457,
	458, 459, 460, 461, 0, 0, 0, 319, 462, 463,
	464, 1633, 1360, 762, 465, 548, 466, 763, 764, 1634,
	765, 1635, 467, 468, 470, 1362, 766, 1363, 469, 471,
	472, 1364, 473, 0, 0, 0, 474, 475, 476, 477,
	478, 479, 480, 1636, 481, 483, 482, 1637, 485, 767,
	484, 1365, 486, 487, 1366, 1638, 488, 489, 490, 491,
	492, 493, 496, 1639, 1640, 494, 495, 497, 498, 0,
	499, 500, 502, 505, 501, 503, 504, 506, 519, 520,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 522, 0, 521, 1367, 523, 524, 525, 526,
	527, 534, 536, 537, 532, 533, 535, 538, 539, 541,
	529, 530, 531, 1368, 540, 528, 1641, 320, 1369, 542,
	543, 544, 545, 1642, 768, 546, 769, 549, 550, 1643,
	0, 551, 0, 552, 1644, 1645, 554, 555, 556, 1646,
	1647, 557, 558, 770, 1370, 559, 1371, 771, 560, 561,
	553, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 1648, 572, 573, 772, 574, 575, 576, 773, 577,
	578, 579, 774, 580, 775, 581, 582, 1649, 583, 584,
	585, 0, 586, 587, 588, 589, 590, 591, 592, 593,
	776, 594, 595, 597, 596, 598, 1650, 599, 0, 600,
	601, 602, 0, 0, 0, 0, 0, 603, 604, 606,
	0, 607, 608, 609, 610, 605, 611, 612, 613, 614,
	615, 616, 1651, 618, 619, 617, 620, 621, 1372, 622,
	623, 624, 625, 626, 777, 627, 0, 628, 629, 637,
	638, 639, 630, 631, 633, 640, 632, 641, 642, 643,
	644, 646, 645, 1652, 648, 649, 647, 650, 651, 652,
	1653, 653, 778, 654, 634, 635, 655, 656, 1373, 657,
	658, 659, 660, 661, 662, 663, 779, 0, 664, 1654,
	665, 666, 667, 668, 669, 670, 672, 636, 673, 678,
	679, 780, 674, 675, 676, 677, 781, 681, 682, 683,
	684, 1655, 685, 686, 0, 680, 671, 1656, 687, 688,
	689, 690, 691, 692, 0, 693, 694, 1657, 695, 782,
	783, 784, 785, 1658, 707, 1659, 696, 698, 699, 700,
	701, 786, 702, 787, 1660, 703, 704, 705, 706, 697,
	708, 709, 1661, 1662, 710, 711, 712, 714, 716, 717,
	713, 715, 718, 1663, 719, 1664, 0, 720, 721, 722,
	788, 789, 790, 1665, 724, 725, 723, 726, 727, 730,
	728, 729, 791, 731, 732, 733, 1666, 1667, 1668, 1669,
	734, 735, 792, 736, 737, 738, 0, 0, 0, 0,
	0, 0, 0, 0, 1585, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4301, 321, 322, 324, 323, 325, 326, 327, 328, 1591,
	329, 330, 1592, 1593, 1594, 0, 1595, 739, 1596, 1597,
	1598, 331, 1599, 332, 333, 334, 1357, 335, 336, 337,
	338, 339, 340, 341, 740, 741, 0, 342, 742, 343,
	743, 1600, 744, 344, 345, 346, 347, 348, 349, 350,
	1601, 1602, 0, 351, 745, 746, 747, 1603, 352, 353,
	748, 1604, 1671, 1605, 354, 355, 356, 357, 358, 359,
	360, 361, 0, 1606, 363, 364, 365, 362, 366, 367,
	1607, 368, 0, 369, 370, 371, 372, 373, 374, 375,
	1608, 376, 377, 378, 1358, 379, 380, 381, 1609, 1610,
	1612, 1611, 1613, 1614, 1615, 382, 383, 384, 385, 386,
	0, 387, 389, 749, 750, 1616, 392, 394, 388, 390,
	1617, 393, 391, 395, 396, 1618, 397, 398, 399, 1619,
	1620, 400, 401, 402, 1621, 403, 404, 405, 1622, 406,
	407, 408, 1623, 409, 410, 751, 411, 412, 413, 415,
	417, 414, 416, 418, 419, 420, 421, 422, 752, 753,
	423, 1624, 318, 1625, 0, 0, 0, 0, 424, 425,
	426, 754, 0, 0, 0, 427, 1626, 428, 429, 430,
	1627, 431, 432, 1628, 1359, 433, 434, 435, 755, 756,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 1629,
	445, 757, 1630, 758, 446, 1631, 447, 448, 449, 450,
	451, 452, 453, 759, 760, 761, 547, 1361, 454, 455,
	456, 1632, 457, 458, 459, 460, 461, 0, 0, 0,
	319, 462, 463, 464, 1633, 1360, 762, 465, 548, 466,
	763, 764, 1634, 765, 1635, 467, 468, 470, 1362, 766,
	1363, 469, 471, 472, 1364, 473, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 480, 1636, 481, 483, 482,
	1637, 485, 767, 484, 1365, 486, 487, 1366, 1638, 488,
	489, 490, 491, 492, 493, 496, 1639, 1640, 494, 495,
	497, 498, 0, 499, 500, 502, 505, 501, 503, 504,
	506, 519, 520, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 522, 0, 521, 1367, 523,
	524, 525, 526, 527, 534, 536, 537, 532, 533, 535,
	538, 539, 541, 529, 530, 531, 1368, 540, 528, 1641,
	320, 1369, 542, 543, 544, 545, 1642, 768, 546, 769,
	549, 550, 1643, 0, 551, 0, 552, 1644, 1645, 554,
	555, 556, 1646, 1647, 557, 558, 770, 1370, 559, 1371,
	771, 560, 561, 553, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 1648, 572, 573, 772, 574, 575,
	576, 773, 577, 578, 579, 774, 580, 775, 581, 582,
	1649, 583, 584, 585, 0, 586, 587, 588, 589, 590,
	591, 592, 593, 776, 594, 595, 597, 596, 598, 1650,
	599, 0, 600, 601, 602, 0, 0, 0, 0, 0,
	603, 604, 606, 0, 607, 608, 609, 610, 605, 611,
	612, 613, 614, 615, 616, 1651, 618, 619, 617, 620,
	621, 1372, 622, 623, 624, 625, 626, 777, 627, 0,
	628, 629, 637, 638, 639, 630, 631, 633, 640, 632,
	641, 642, 643, 644, 646, 645, 1652, 648, 649, 647,
	650, 651, 652, 1653, 653, 778, 654, 634, 635, 655,
	656, 1373, 657, 658, 659, 660, 661, 662, 663, 779,
	0, 664, 1654, 665, 666, 667, 668, 669, 670, 672,
	636, 673, 678, 679, 780, 674, 675, 676, 677, 781,
	681, 682, 683, 684, 1655, 685, 686, 0, 680, 671,
	1656, 687, 688, 689, 690, 691, 692, 0, 693, 694,
	1657, 695, 782, 783, 784, 785, 1658, 707, 1659, 696,
	698, 699, 700, 701, 786, 702, 787, 1660, 703, 704,
	705, 706, 697, 708, 709, 1661, 1662, 710, 711, 712,
	714, 716, 717, 713, 715, 718, 1663, 719, 1664, 0,
	720, 721, 722, 788, 789, 790, 1665, 724, 725, 723,
	726, 727, 730, 728, 729, 791, 731, 732, 733, 1666,
	1667, 1668, 1669, 734, 735, 792, 736, 737, 738, 0,
	0, 0, 0, 0, 0, 0, 0, 1585, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4104, 321, 322, 324, 323, 325, 326,
	327, 328, 1591, 329, 330, 1592, 1593, 1594, 0, 1595,
	739, 1596, 1597, 1598, 331, 1599, 332, 333, 334, 1357,
	335, 336, 337, 338, 339, 340, 341, 740, 741, 0,
	342, 742, 343, 743, 1600, 744, 344, 345, 346, 347,
	348, 349, 350, 1601, 1602, 0, 351, 745, 746, 747,
	1603, 352, 353, 748, 1604, 1671, 1605, 354, 355, 356,
	357, 358, 359, 360, 361, 0, 1606, 363, 364, 365,
	362, 366, 367, 1607, 368, 0, 369, 370, 371, 372,
	373, 374, 375, 1608, 376, 377, 378, 1358, 379, 380,
	381, 1609, 1610, 1612, 1611, 1613, 1614, 1615, 382, 383,
	384, 385, 386, 0, 387, 389, 749, 750, 1616, 392,
	394, 388, 390, 1617, 393, 391, 395, 396, 1618, 397,
	398, 399, 1619, 1620, 400, 401, 402, 1621, 403, 404,
	405, 1622, 406, 407, 408, 1623, 409, 410, 751, 411,
	412, 413, 415, 417, 414, 416, 418, 419, 420, 421,
	422, 752, 753, 423, 1624, 318, 1625, 0, 0, 0,
	0, 424, 425, 426, 754, 0, 0, 0, 427, 1626,
	428, 429, 430, 1627, 431, 432, 1628, 1359, 433, 434,
	435, 755, 756, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 1629, 445, 757, 1630, 758, 446, 1631, 447,
	448, 449, 450, 451, 452, 453, 759, 760, 761, 547,
	1361, 454, 455, 456, 1632, 457, 458, 459, 460, 461,
	0, 0, 0, 319, 462, 463, 464, 1633, 1360, 762,
	465, 548, 466, 763, 764, 1634, 765, 1635, 467, 468,
	470, 1362, 766, 1363, 469, 471, 472, 1364, 473, 0,
	0, 0, 474, 475, 476, 477, 478, 479, 480, 1636,
	481, 483, 482, 1637, 485, 767, 484, 1365, 486, 487,
	1366, 1638, 488, 489, 490, 491, 492, 493, 496, 1639,
	1640, 494, 495, 497, 498, 0, 499, 500, 502, 505,
	501, 503, 504, 506, 519, 520, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 522, 0,
	521, 1367, 523, 524, 525, 526, 527, 534, 536, 537,
	532, 533, 535, 538, 539, 541, 529, 530, 531, 1368,
	540, 528, 1641, 320, 1369, 542, 543, 544, 545, 1642,
	768, 546, 769, 549, 550, 1643, 0, 551, 0, 552,
	1644, 1645, 554, 555, 556, 1646, 1647, 557, 558, 770,
	1370, 559, 1371, 771, 560, 561, 553, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 1648, 572, 573,
	772, 574, 575, 576, 773, 577, 578, 579, 774, 580,
	775, 581, 582, 1649, 583, 584, 585, 0, 586, 587,
	588, 589, 590, 591, 592, 593, 776, 594, 595, 597,
	596, 598, 1650, 599, 0, 600, 601, 602, 0, 0,
	0, 0, 0, 603, 604, 606, 0, 607, 608, 609,
	610, 605, 611, 612, 613, 614, 615, 616, 1651, 618,
	619, 617, 620, 621, 1372, 622, 623, 624, 625, 626,
	777, 627, 0, 628, 629, 637, 638, 639, 630, 631,
	633, 640, 632, 641, 642, 643, 644, 646, 645, 1652,
	648, 649, 647, 650, 651, 652, 1653, 653, 778, 654,
	634, 635, 655, 656, 1373, 657, 658, 659, 660, 661,
	662, 663, 779, 0, 664, 1654, 665, 666, 667, 668,
	669, 670, 672, 636, 673, 678, 679, 780, 674, 675,
	676, 677, 781, 681, 682, 683, 684, 1655, 685, 686,
	0, 680, 671, 1656, 687, 688, 689, 690, 691, 692,
	0, 693, 694, 1657, 695, 782, 783, 784, 785, 1658,
	707, 1659, 696, 698, 699, 700, 701, 786, 702, 787,
	1660, 703, 704, 705, 706, 697, 708, 709, 1661, 1662,
	710, 711, 712, 714, 716, 717, 713, 715, 718, 1663,
	719, 1664, 0, 720, 721, 722, 788, 789, 790, 1665,
	724, 725, 723, 726, 727, 730, 728, 729, 791, 731,
	732, 733, 1666, 1667, 1668, 1669, 734, 735, 792, 736,
	737, 738, 0, 0, 0, 0, 0, 0, 0, 0,
	1585, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2951, 321, 322, 324,
	323, 325, 326, 327, 328, 1591, 329, 330, 1592, 1593,
	1594, 0, 1595, 739, 1596, 1597, 1598, 331, 1599, 332,
	333, 334, 1357, 335, 336, 337, 338, 339, 340, 341,
	740, 741, 0, 342, 742, 343, 743, 1600, 744, 344,
	345, 346, 347, 348, 349, 350, 1601, 1602, 0, 351,
	745, 746, 747, 1603, 352, 353, 748, 1604, 1671, 1605,
	354, 355, 356, 357, 358, 359, 360, 361, 0, 1606,
	363, 364, 365, 362, 366, 367, 1607, 368, 0, 369,
	370, 371, 372, 373, 374, 375, 1608, 376, 377, 378,
	1358, 379, 380, 381, 1609, 1610, 1612, 1611, 1613, 1614,
	1615, 382, 383, 384, 385, 386, 0, 387, 389, 749,
	750, 1616, 392, 394, 388, 390, 1617, 393, 391, 395,
	396, 1618, 397, 398, 399, 1619, 1620, 400, 401, 402,
	1621, 403, 404, 405, 1622, 406, 407, 408, 1623, 409,
	410, 751, 411, 412, 413, 415, 417, 414, 416, 418,
	419, 420, 421, 422, 752, 753, 423, 1624, 318, 1625,
	0, 0, 0, 0, 424, 425, 426, 754, 0, 0,
	0, 427, 1626, 428, 429, 430, 1627, 431, 432, 1628,
	1359, 433, 434, 435, 755, 756, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 1629, 445, 757, 1630, 758,
	446, 1631, 447, 448, 449, 450, 451, 452, 453, 759,
	760, 761, 547, 1361, 454, 455, 456, 1632, 457, 458,
	459, 460, 461, 0, 0, 0, 319, 462, 463, 464,
	1633, 1360, 762, 465, 548, 466, 763, 764, 1634, 765,
	1635, 467, 468, 470, 1362, 766, 1363, 469, 471, 472,
	1364, 473, 0, 0, 0, 474, 475, 476, 477, 478,
	479, 480, 1636, 481, 483, 482, 1637, 485, 767, 484,
	1365, 486, 487, 1366, 1638, 488, 489, 490, 491, 492,
	493, 496, 1639, 1640, 494, 495, 497, 498, 0, 499,
	500, 502, 505, 501, 503, 504, 506, 519, 520, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 522, 0, 521, 1367, 523, 524, 525, 526, 527,
	534, 536, 537, 532, 533, 535, 538, 539, 541, 529,
	530, 531, 1368, 540, 528, 1641, 320, 1369, 542, 543,
	544, 545, 1642, 768, 546, 769, 549, 550, 1643, 0,
	551, 0, 552, 1644, 1645, 554, 555, 556, 1646, 1647,
	557, 558, 770, 1370, 559, 1371, 771, 560, 561, 553,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	1648, 572, 573, 772, 574, 575, 576, 773, 577, 578,
	579, 774, 580, 775, 581, 582, 1649, 583, 584, 585,
	0, 586, 587, 588, 589, 590, 591, 592, 593, 776,
	594, 595, 597, 596, 598, 1650, 599, 0, 600, 601,
	602, 0, 0, 0, 0, 0, 603, 604, 606, 0,
	607, 608, 609, 610, 605, 611, 612, 613, 614, 615,
	616, 1651, 618, 619, 617, 620, 621, 1372, 622, 623,
	624, 625, 626, 777, 627, 0, 628, 629, 637, 638,
	639, 630, 631, 633, 640, 632, 641, 642, 643, 644,
	646, 645, 1652, 648, 649, 647, 650, 651, 652, 1653,
	653, 778, 654, 634, 635, 655, 656, 1373, 657, 658,
	659, 660, 661, 662, 663, 779, 0, 664, 1654, 665,
	666, 667, 668, 669, 670, 672, 636, 673, 678, 679,
	780, 674, 675, 676, 677, 781, 681, 682, 683, 684,
	1655, 685, 686, 0, 680, 671, 1656, 687, 688, 689,
	690, 691, 692, 0, 693, 694, 1657, 695, 782, 783,
	784, 785, 1658, 707, 1659, 696, 698, 699, 700, 701,
	786, 702, 787, 1660, 703, 704, 705, 706, 697, 708,
	709, 1661, 1662, 710, 711, 712, 714, 716, 717, 713,
	715, 718, 1663, 719, 1664, 0, 720, 721, 722, 788,
	789, 790, 1665, 724, 725, 723, 726, 727, 730, 728,
	729, 791, 731, 732, 733, 1666, 1667, 1668, 1669, 734,
	735, 792, 736, 737, 738, 0, 0, 0, 0, 0,
	0, 1582, 0, 1585, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2559,
	321, 322, 324, 323, 325, 326, 327, 328, 1591, 329,
	330, 1592, 1593, 1594, 0, 1595, 739, 1596, 1597, 1598,
	331, 1599, 332, 333, 334, 1357, 335, 336, 337, 338,
	339, 340, 341, 740, 741, 0, 342, 742, 343, 743,
	1600, 744, 344, 345, 346, 347, 348, 349, 350, 1601,
	1602, 0, 351, 745, 746, 747, 1603, 352, 353, 748,
	1604, 1671, 1605, 354, 355, 356, 357, 358, 359, 360,
	361, 0, 1606, 363, 364, 365, 362, 366, 367, 1607,
	368, 0, 369, 370, 371, 372, 373, 374, 375, 1608,
	376, 377, 378, 1358, 379, 380, 381, 1609, 1610, 1612,
	1611, 1613, 1614, 1615, 382, 383, 384, 385, 386, 0,
	387, 389, 749, 750, 1616, 392, 394, 388, 390, 1617,
	393, 391, 395, 396, 1618, 397, 398, 399, 1619, 1620,
	400, 401, 402, 1621, 403, 404, 405, 1622, 406, 407,
	408, 1623, 409, 410, 751, 411, 412, 413, 415, 417,
	414, 416, 418, 419, 420, 421, 422, 752, 753, 423,
	1624, 318, 1625, 0, 0, 0, 0, 424, 425, 426,
	754, 0, 0, 0, 427, 1626, 428, 429, 430, 1627,
	431, 432, 1628, 1359, 433, 434, 435, 755, 756, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 1629, 445,
	757, 1630, 758, 446, 1631, 447, 448, 449, 450, 451,
	452, 453, 759, 760, 761, 547, 1361, 454, 455, 456,
	1632, 457, 458, 459, 460, 461, 0, 0, 0, 319,
	462, 463, 464, 1633, 1360, 762, 465, 548, 466, 763,
	764, 1634, 765, 1635, 467, 468, 470, 1362, 766, 1363,
	469, 471, 472, 1364, 473, 0, 0, 0, 474, 475,
	476, 477, 478, 479, 480, 1636, 481, 483, 482, 1637,
	485, 767, 484, 1365, 486, 487, 1366, 1638, 488, 489,
	490, 491, 492, 493, 496, 1639, 1640, 494, 495, 497,
	498, 0, 499, 500, 502, 505, 501, 503, 504, 506,
	519, 520, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 522, 0, 521, 1367, 523, 524,
	525, 526, 527, 534, 536, 537, 532, 533, 535, 538,
	539, 541, 529, 530, 531, 1368, 540, 528, 1641, 320,
	1369, 542, 543, 544, 545, 1642, 768, 546, 769, 549,
	550, 1643, 0, 551, 0, 552, 1644, 1645, 554, 555,
	556, 1646, 1647, 557, 558, 770, 1370, 559, 1371, 771,
	560, 561, 553, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 1648, 572, 573, 772, 574, 575, 576,
	773, 577, 578, 579, 774, 580, 775, 581, 582, 1649,
	583, 584, 585, 0, 586, 587, 588, 589, 590, 591,
	592, 593, 776, 594, 595, 597, 596, 598, 1650, 599,
	0, 600, 601, 602, 0, 0, 0, 0, 0, 603,
	604, 606, 0, 607, 608, 609, 610, 605, 611, 612,
	613, 614, 615, 616, 1651, 618, 619, 617, 620, 621,
	1372, 622, 623, 624, 625, 626, 777, 627, 0, 628,
	629, 637, 638, 639, 630, 631, 633, 640, 632, 641,
	642, 643, 644, 646, 645, 1652, 648, 649, 647, 650,
	651, 652, 1653, 653, 778, 654, 634, 635, 655, 656,
	1373, 657, 658, 659, 660, 661, 662, 663, 779, 0,
	664, 1654, 665, 666, 667, 668, 669, 670, 672, 636,
	673, 678, 679, 780, 674, 675, 676, 677, 781, 681,
	682, 683, 684, 1655, 685, 686, 0, 680, 671, 1656,
	687, 688, 689, 690, 691, 692, 0, 693, 694, 1657,
	695, 782, 783, 784, 785, 1658, 707, 1659, 696, 698,
	699, 700, 701, 786, 702, 787, 1660, 703, 704, 705,
	706, 697, 708, 709, 1661, 1662, 710, 711, 712, 714,
	716, 717, 713, 715, 718, 1663, 719, 1664, 0, 720,
	721, 722, 788, 789, 790, 1665, 724, 725, 723, 726,
	727, 730, 728, 729, 791, 731, 732, 733, 1666, 1667,
	1668, 1669, 734, 735, 792, 736, 737, 738, 1585, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 322, 324, 323, 325,
	326, 327, 328, 1591, 329, 330, 1592, 1593, 1594, 0,
	1595, 739, 1596, 1597, 1598, 331, 1599, 332, 333, 334,
	1357, 335, 336, 337, 338, 339, 340, 341, 740, 741,
	0, 342, 742, 343, 743, 1600, 744, 344, 345, 346,
	347, 348, 349, 350, 1601, 1602, 0, 351, 745, 746,
	747, 1603, 352, 353, 748, 1604, 1671, 1605, 354, 355,
	356, 357, 358, 359, 360, 361, 0, 1606, 363, 364,
	365, 362, 366, 367, 1607, 368, 0, 369, 370, 371,
	372, 373, 374, 375, 1608, 376, 377, 378, 1358, 379,
	380, 381, 1609, 1610, 1612, 1611, 1613, 1614, 1615, 382,
	383, 384, 385, 386, 0, 387, 389, 749, 750, 1616,
	392, 394, 388, 390, 1617, 393, 391, 395, 396, 1618,
	397, 398, 399, 1619, 1620, 400, 401, 402, 1621, 403,
	404, 405, 1622, 406, 407, 408, 1623, 409, 410, 751,
	411, 412, 413, 415, 417, 414, 416, 418, 419, 420,
	421, 422, 752, 753, 423, 1624, 318, 1625, 0, 0,
	0, 0, 424, 425, 426, 754, 0, 0, 0, 427,
	1626, 428, 429, 430, 1627, 431, 432, 1628, 1359, 433,
	434, 435, 755, 756, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 1629, 445, 757, 1630, 758, 446, 1631,
	447, 448, 449, 450, 451, 452, 453, 759, 760, 761,
	547, 1361, 454, 455, 456, 1632, 457, 458, 459, 460,
	461, 0, 0, 0, 319, 462, 463, 464, 1633, 1360,
	762, 465, 548, 466, 763, 764, 1634, 765, 1635, 467,
	468, 470, 1362, 766, 1363, 469, 471, 472, 1364, 473,
	0, 0, 0, 474, 475, 476, 477, 478, 479, 480,
	1636, 481, 483, 482, 1637, 485, 767, 484, 1365, 486,
	487, 1366, 1638, 488, 489, 490, 491, 492, 493, 496,
	1639, 1640, 494, 495, 497, 498, 0, 499, 500, 502,
	505, 501, 503, 504, 506, 519, 520, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 522,
	0, 521, 1367, 523, 524, 525, 526, 527, 534, 536,
	537, 532, 533, 535, 538, 539, 541, 529, 530, 531,
	1368, 540, 528, 1641, 320, 1369, 542, 543, 544, 545,
	1642, 768, 546, 769, 549, 550, 1643, 0, 551, 0,
	552, 1644, 1645, 554, 555, 556, 1646, 1647, 557, 558,
	770, 1370, 559, 1371, 771, 560, 561, 553, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 1648, 572,
	573, 772, 574, 575, 576, 773, 577, 578, 579, 774,
	580, 775, 581, 582, 1649, 583, 584, 585, 0, 586,
	587, 588, 589, 590, 591, 592, 593, 776, 594, 595,
	597, 596, 598, 1650, 599, 0, 600, 601, 602, 0,
	0, 0, 0, 0, 603, 604, 606, 0, 607, 608,
	609, 610, 605, 611, 612, 613, 614, 615, 616, 1651,
	618, 619, 617, 620, 621, 1372, 622, 623, 624, 625,
	626, 777, 627, 0, 628, 629, 637, 638, 639, 630,
	631, 633, 640, 632, 641, 642, 643, 644, 646, 645,
	1652, 648, 649, 647, 650, 651, 652, 1653, 653, 778,
	654, 634, 635, 655, 656, 1373, 657, 658, 659, 660,
	661, 662, 663, 779, 0, 664, 1654, 665, 666, 667,
	668, 669, 670, 672, 636, 673, 678, 679, 780, 674,
	675, 676, 677, 781, 681, 682, 683, 684, 1655, 685,
	686, 0, 680, 671, 1656, 687, 688, 689, 690, 691,
	692, 0, 693, 694, 1657, 695, 782, 783, 784, 785,
	1658, 707, 1659, 696, 698, 699, 700, 701, 786, 702,
	787, 1660, 703, 704, 705, 706, 697, 708, 709, 1661,
	1662, 710, 711, 712, 714, 716, 717, 713, 715, 718,
	1663, 719, 1664, 0, 720, 721, 722, 788, 789, 790,
	1665, 724, 725, 723, 726, 727, 730, 728, 729, 791,
	731, 732, 733, 1666, 1667, 1668, 1669, 734, 735, 792,
	736, 737, 738, 2926, 0, 1293, 1265, 1266, 1267, 1263,
	1264, 1276, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 321, 322, 324, 323, 325, 326, 327, 328,
	2923, 329, 330, 0, 0, 0, 0, 0, 1317, 1281,
	0, 0, 331, 0, 332, 333, 334, 1357, 335, 336,
	337, 338, 339, 340, 341, 740, 1330, 0, 342, 1337,
	343, 1336, 0, 1347, 344, 345, 346, 347, 348, 349,
	350, 1283, 1316, 1248, 351, 1377, 1378, 747, 0, 352,
	353, 1323, 0, 1304, 0, 354, 355, 356, 357, 358,
	359, 360, 361, 0, 0, 363, 364, 365, 362, 366,
	367, 0, 368, 0, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 378, 1358, 379, 380, 381, 1307,
	1305, 1306, 1313, 1309, 1308, 1312, 382, 383, 384, 385,
	386, 1340, 387, 389, 1334, 1333, 1253, 392, 394, 388,
	390, 0, 393, 391, 395, 396, 0, 397, 398, 399,
	2924, 0, 400, 1325, 402, 0, 403, 404, 405, 0,
	406, 407, 408, 0, 409, 410, 1259, 411, 412, 413,
	415, 417, 414, 416, 418, 419, 420, 421, 422, 1348,
	1349, 423, 1272, 318, 0, 0, 0, 0, 0, 424,
	425, 426, 1332, 0, 0, 0, 427, 0, 428, 429,
	430, 0, 431, 432, 0, 1359, 433, 434, 435, 1345,
	1346, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	0, 445, 1355, 0, 1282, 446, 0, 447, 448, 449,
	450, 451, 452, 453, 1318, 1319, 1322, 547, 1361, 454,
	455, 456, 0, 457, 458, 459, 460, 461, 0, 0,
	0, 319, 462, 463, 464, 0, 1360, 762, 465, 548,
	466, 1327, 1328, 0, 1288, 0, 467, 468, 470, 1362,
	1320, 1363, 469, 471, 472, 1364, 473, 0, 0, 0,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 483,
	482, 0, 485, 1356, 484, 1365, 486, 487, 1366, 0,
	488, 489, 490, 491, 492, 493, 496, 1311, 1310, 494,
	495, 497, 498, 0, 499, 500, 502, 505, 501, 503,
	504, 506, 519, 520, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 522, 0, 521, 1367,
	523, 524, 525, 526, 527, 534, 536, 537, 532, 533,
	535, 538, 539, 541, 529, 530, 531, 1368, 540, 528,
	1250, 320, 1369, 542, 543, 544, 545, 1273, 1321, 546,
	1335, 549, 550, 0, 0, 551, 0, 552, 0, 0,
	554, 555, 556, 0, 0, 557, 558, 770, 1370, 559,
	1371, 1350, 560, 561, 1260, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 0, 572, 573, 772, 574,
	575, 576, 773, 577, 578, 579, 1351, 580, 775, 581,
	582, 0, 583, 584, 585, 0, 586, 587, 588, 589,
	590, 591, 592, 593, 1331, 594, 595, 597, 596, 598,
	0, 599, 0, 600, 601, 602, 0, 0, 0, 0,
	0, 603, 604, 606, 0, 607, 608, 609, 610, 605,
	611, 612, 613, 614, 615, 616, 0, 618, 619, 617,
	620, 621, 1372, 622, 623, 624, 625, 626, 1261, 627,
	0, 628, 629, 637, 638, 639, 630, 631, 633, 640,
	632, 641, 642, 643, 644, 646, 645, 0, 648, 649,
	647, 650, 651, 652, 1314, 653, 778, 654, 634, 635,
	655, 656, 1373, 657, 658, 659, 660, 661, 662, 663,
	1329, 0, 664, 0, 665, 666, 667, 668, 669, 670,
	672, 636, 673, 678, 679, 1376, 674, 675, 676, 677,
	1352, 681, 682, 683, 684, 0, 685, 686, 1247, 680,
	671, 0, 687, 688, 689, 690, 691, 692, 0, 693,
	694, 0, 695, 1341, 1342, 1343, 1344, 0, 707, 0,
	696, 698, 699, 700, 701, 1353, 702, 1354, 1271, 703,
	704, 705, 706, 697, 708, 709, 0, 1254, 710, 711,
	712, 714, 716, 717, 713, 715, 718, 1315, 719, 0,
	0, 720, 721, 722, 788, 1338, 1375, 2922, 724, 725,
	723, 726, 727, 730, 728, 729, 791, 731, 732, 733,
	0, 0, 0, 0, 734, 735, 792, 736, 737, 738,
	1251, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1246, 0, 0, 0, 0,
	0, 0, 1244, 1245, 2925, 0, 0, 0, 0, 0,
	0, 0, 1277, 2921, 0, 1235, 1275, 1293, 1265, 1266,
	1267, 1263, 1264, 1276, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 324, 323, 325, 326,
	327, 328, 0, 329, 330, 0, 0, 0, 0, 0,
	1317, 1281, 0, 0, 331, 0, 332, 333, 334, 1357,
	335, 336, 337, 338, 339, 340, 341, 740, 1330, 0,
	342, 1337, 343, 1336, 0, 1347, 344, 345, 346, 347,
	348, 349, 350, 1283, 1316, 1248, 351, 1377, 1378, 747,
	0, 352, 353, 1323, 0, 1304, 0, 354, 355, 356,
	357, 358, 359, 360, 361, 0, 0, 363, 364, 365,
	362, 366, 367, 0, 368, 0, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 378, 1358, 379, 380,
	381, 1307, 1305, 1306, 1313, 1309, 1308, 1312, 382, 383,
	384, 385, 386, 1340, 387, 389, 1334, 1333, 1253, 392,
	394, 388, 390, 0, 393, 391, 395, 396, 0, 397,
	398, 399, 0, 0, 400, 1325, 402, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 1259, 411,
	412, 413, 415, 417, 414, 416, 418, 419, 420, 421,
	422, 1348, 1349, 423, 1272, 318, 0, 0, 0, 0,
	0, 424, 425, 426, 1332, 0, 0, 0, 427, 0,
	428, 429, 430, 0, 431, 432, 0, 1359, 433, 434,
	435, 1345, 1346, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 0, 445, 1355, 0, 1282, 446, 0, 447,
	448, 449, 450, 451, 452, 453, 1318, 1319, 1322, 547,
	1361, 454, 455, 456, 0, 457, 458, 459, 460, 461,
	0, 0, 0, 319, 462, 463, 464, 0, 1360, 762,
	465, 548, 466, 1327, 1328, 0, 1288, 0, 467, 468,
	470, 1362, 1320, 1363, 469, 471, 472, 1364, 473, 0,
	0, 0, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 483, 482, 0, 485, 1356, 484, 1365, 486, 487,
	1366, 0, 488, 489, 490, 491, 492, 493, 496, 1311,
	1310, 494, 495, 497, 498, 0, 499, 500, 502, 505,
	501, 503, 504, 506, 519, 520, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 522, 0,
	521, 1367, 523, 524, 525, 526, 527, 534, 536, 537,
	532, 533, 535, 538, 539, 541, 529, 530, 531, 1368,
	540, 528, 1250, 320, 1369, 542, 543, 544, 545, 1273,
	1321, 546, 1335, 549, 550, 0, 0, 551, 0, 552,
	0, 0, 554, 555, 556, 0, 0, 557, 558, 770,
	1370, 559, 1371, 1350, 560, 561, 1260, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 0, 572, 573,
	772, 574, 575, 576, 773, 577, 578, 579, 1351, 580,
	775, 581, 582, 0, 583, 584, 585, 0, 586, 587,
	588, 589, 590, 591, 592, 593, 1331, 594, 595, 597,
	596, 598, 0, 599, 0, 600, 601, 602, 0, 0,
	0, 0, 0, 603, 604, 606, 0, 607, 608, 609,
	610, 605, 611, 612, 613, 614, 615, 616, 0, 618,
	619, 617, 620, 621, 1372, 622, 623, 624, 625, 626,
	1261, 627, 0, 628, 629, 637, 638, 639, 630, 631,
	633, 640, 632, 641, 642, 643, 644, 646, 645, 274,
	648, 649, 647, 650, 651, 652, 1314, 653, 778, 654,
	634, 635, 655, 656, 1373, 657, 658, 659, 660, 661,
	662, 663, 1329, 0, 664, 0, 665, 666, 667, 668,
	669, 670, 672, 636, 673, 678, 679, 1376, 674, 675,
	676, 677, 1352, 681, 682, 683, 684, 0, 685, 686,
	1247, 680, 671, 276, 687, 688, 689, 690, 691, 692,
	0, 693, 694, 0, 695, 1341, 1342, 1343, 1344, 0,
	707, 0, 696, 698, 699, 700, 701, 1353, 702, 1354,
	1271, 703, 704, 705, 706, 697, 708, 709, 0, 1254,
	710, 711, 712, 714, 716, 717, 713, 715, 718, 1315,
	719, 0, 0, 720, 721, 722, 1834, 1338, 1375, 0,
	724, 725, 723, 726, 727, 730, 728, 729, 791, 731,
	732, 733, 0, 0, 0, 268, 734, 735, 792, 736,
	737, 738, 1251, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1246, 0, 0,
	0, 0, 0, 0, 1244, 1245, 1293, 1265, 1266, 1267,
	1263, 1264, 1276, 0, 2106, 2104, 0, 0, 1275, 0,
	0, 0, 0, 321, 322, 324, 323, 325, 326, 327,
	328, 0, 329, 330, 0, 0, 0, 0, 0, 1317,
	1281, 0, 0, 331, 0, 332, 333, 334, 1357, 335,
	336, 337, 338, 339, 340, 341, 740, 1330, 0, 342,
	1337, 343, 1336, 0, 1347, 344, 345, 346, 347, 348,
	349, 350, 1283, 1316, 1248, 351, 1377, 1378, 747, 0,
	352, 353, 1323, 0, 1304, 0, 354, 355, 356, 357,
	358, 359, 360, 361, 0, 0, 363, 364, 365, 362,
	366, 367, 0, 368, 0, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 377, 378, 1358, 379, 380, 381,
	1307, 1305, 1306, 1313, 1309, 1308, 1312, 382, 383, 384,
	385, 386, 1340, 387, 389, 1334, 1333, 1253, 392, 394,
	388, 390, 0, 393, 391, 395, 396, 0, 397, 398,
	399, 0, 0, 400, 1325, 402, 0, 403, 404, 405,
	0, 406, 407, 408, 0, 409, 410, 1259, 411, 412,
	413, 415, 417, 414, 416, 418, 419, 420, 421, 422,
	1348, 1349, 423, 1272, 318, 0, 0, 0, 0, 0,
	424, 425, 426, 1332, 0, 0, 0, 427, 0, 428,
	429, 430, 0, 431, 432, 0, 1359, 433, 434, 435,
	1345, 1346, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 0, 445, 1355, 0, 1282, 446, 0, 447, 448,
	449, 450, 451, 452, 453, 1318, 1319, 1322, 547, 1361,
	454, 455, 456, 0, 457, 458, 459, 460, 461, 0,
	0, 0, 319, 462, 463, 464, 0, 1360, 762, 465,
	548, 466, 1327, 1328, 0, 1288, 0, 467, 468, 470,
	1362, 1320, 1363, 469, 471, 472, 1364, 473, 0, 0,
	0, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	483, 482, 0, 485, 1356, 484, 1365, 486, 487, 1366,
	0, 488, 489, 490, 491, 492, 493, 496, 1311, 1310,
	494, 495, 497, 498, 0, 499, 500, 502, 505, 501,
	503, 504, 506, 519, 520, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 522, 0, 521,
	1367, 523, 524, 525, 526, 527, 534, 536, 537, 532,
	533, 535, 538, 539, 541, 529, 530, 531, 1368, 540,
	528, 1250, 320, 1369, 542, 543, 544, 545, 1273, 1321,
	546, 1335, 549, 550, 0, 0, 551, 0, 552, 0,
	0, 554, 555, 556, 0, 0, 557, 558, 770, 1370,
	559, 1371, 1350, 560, 561, 1260, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 0, 572, 573, 772,
	574, 575, 576, 773, 577, 578, 579, 1351, 580, 775,
	581, 582, 0, 583, 584, 585, 0, 586, 587, 588,
	589, 590, 591, 592, 593, 1331, 594, 595, 597, 596,
	598, 0, 599, 0, 600, 601, 602, 0, 0, 0,
	0, 0, 603, 604, 606, 0, 607, 608, 609, 610,
	605, 611, 612, 613, 614, 615, 616, 0, 618, 619,
	617, 620, 621, 1372, 622, 623, 624, 625, 626, 1261,
	627, 0, 628, 629, 637, 638, 639, 630, 631, 633,
	640, 632, 641, 642, 643, 644, 646, 645, 274, 648,
	649, 647, 650, 651, 652, 1314, 653, 778, 654, 634,
	635, 655, 656, 1373, 657, 658, 659, 660, 661, 662,
	663, 1329, 0, 664, 0, 665, 666, 667, 668, 669,
	670, 672, 636, 673, 678, 679, 1376, 674, 675, 676,
	677, 1352, 681, 682, 683, 684, 0, 685, 686, 1247,
	680, 671, 276, 687, 688, 689, 690, 691, 692, 0,
	693, 694, 0, 695, 1341, 1342, 1343, 1344, 0, 707,
	0, 696, 698, 699, 700, 701, 1353, 702, 1354, 1271,
	703, 704, 705, 706, 697, 708, 709, 0, 1254, 710,
	711, 712, 714, 716, 717, 713, 715, 718, 1315, 719,
	0, 0, 720, 721, 722, 1834, 1338, 1375, 0, 724,
	725, 723, 726, 727, 730, 728, 729, 791, 731, 732,
	733, 0, 0, 0, 268, 734, 735, 792, 736, 737,
	738, 1251, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1246, 0, 0, 0,
	0, 0, 0, 1244, 1245, 1293, 1265, 1266, 1267, 1263,
	1264, 1276, 0, 2106, 3679, 0, 0, 1275, 0, 0,
	0, 0, 321, 322, 324, 323, 325, 326, 327, 328,
	0, 329, 330, 0, 0, 0, 0, 0, 1317, 1281,
	0, 0, 331, 0, 332, 333, 334, 1357, 335, 336,
	337, 338, 339, 340, 341, 740, 1330, 0, 342, 1337,
	343, 1336, 0, 1347, 344, 345, 346, 347, 348, 349,
	350, 1283, 1316, 1248, 351, 1377, 1378, 747, 0, 352,
	353, 1323, 0, 1304, 0, 354, 355, 356, 357, 358,
	359, 360, 361, 0, 0, 363, 364, 365, 362, 366,
	367, 0, 368, 0, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 378, 1358, 379, 380, 381, 1307,
	1305, 1306, 1313, 1309, 1308, 1312, 382, 383, 384, 385,
	386, 1340, 387, 389, 1334, 1333, 1253, 392, 394, 388,
	390, 0, 393, 391, 395, 396, 0, 397, 398, 399,
	0, 0, 400, 1325, 402, 0, 403, 404, 405, 0,
	406, 407, 408, 0, 409, 410, 1259, 411, 412, 413,
	415, 417, 414, 416, 418, 419, 420, 421, 422, 1348,
	1349, 423, 1272, 318, 0, 0, 0, 0, 0, 424,
	425, 426, 1332, 0, 0, 0, 427, 0, 428, 429,
	430, 0, 431, 432, 0, 1359, 433, 434, 435, 1345,
	1346, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	0, 445, 1355, 0, 1282, 446, 0, 447, 448, 449,
	450, 451, 452, 453, 1318, 1319, 1322, 547, 1361, 454,
	455, 456, 0, 457, 458, 459, 460, 461, 0, 0,
	0, 319, 462, 463, 464, 0, 1360, 762, 465, 548,
	466, 1327, 1328, 0, 1288, 0, 467, 468, 470, 1362,
	1320, 1363, 469, 471, 472, 1364, 473, 0, 0, 0,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 483,
	482, 0, 485, 1356, 484, 1365, 486, 487, 1366, 0,
	488, 489, 490, 491, 492, 493, 496, 1311, 1310, 494,
	495, 497, 498, 0, 499, 500, 502, 505, 501, 503,
	504, 506, 519, 520, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 522, 0, 521, 1367,
	523, 524, 525, 526, 527, 534, 536, 537, 532, 533,
	535, 538, 539, 541, 529, 530, 531, 1368, 540, 528,
	1250, 320, 1369, 542, 543, 544, 545, 1273, 1321, 546,
	1335, 549, 550, 0, 0, 551, 0, 552, 0, 0,
	554, 555, 556, 0, 0, 557, 558, 770, 1370, 559,
	1371, 1350, 560, 561, 1260, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 0, 572, 573, 772, 574,
	575, 576, 773, 577, 578, 579, 1351, 580, 775, 581,
	582, 0, 583, 584, 585, 0, 586, 587, 588, 589,
	590, 591, 592, 593, 1331, 594, 595, 597, 596, 598,
	0, 599, 0, 600, 601, 602, 0, 0, 0, 0,
	0, 603, 604, 606, 0, 607, 608, 609, 610, 605,
	611, 612, 613, 614, 615, 616, 0, 618, 619, 617,
	620, 621, 1372, 622, 623, 624, 625, 626, 1261, 627,
	0, 628, 629, 637, 638, 639, 630, 631, 633, 640,
	632, 641, 642, 643, 644, 646, 645, 274, 648, 649,
	647, 650, 651, 652, 1314, 653, 778, 654, 634, 635,
	655, 656, 1373, 657, 658, 659, 660, 661, 662, 663,
	1329, 0, 664, 0, 665, 666, 667, 668, 669, 670,
	672, 636, 673, 678, 679, 1376, 674, 675, 676, 677,
	1352, 681, 682, 683, 684, 0, 685, 686, 1247, 680,
	671, 276, 687, 688, 689, 690, 691, 692, 0, 693,
	694, 0, 695, 1341, 1342, 1343, 1344, 0, 707, 0,
	696, 698, 699, 700, 701, 1353, 702, 1354, 1271, 703,
	704, 705, 706, 697, 708, 709, 0, 1254, 710, 711,
	712, 714, 716, 717, 713, 715, 718, 1315, 719, 0,
	0, 720, 721, 722, 1834, 1338, 1375, 0, 724, 725,
	723, 726, 727, 730, 728, 729, 791, 731, 732, 733,
	0, 0, 0, 268, 734, 735, 792, 736, 737, 738,
	1251, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1246, 0, 0, 0, 0,
	0, 0, 1244, 1245, 1293, 1265, 1266, 1267, 1263, 1264,
	1276, 0, 2106, 2104, 0, 0, 1275, 0, 0, 0,
	0, 321, 322, 324, 323, 325, 326, 327, 328, 0,
	329, 330, 0, 0, 0, 0, 0, 1317, 1281, 0,
	0, 331, 0, 332, 333, 334, 1357, 335, 336, 337,
	338, 339, 340, 341, 740, 1330, 0, 342, 1337, 343,
	1336, 3056, 1347, 344, 345, 346, 347, 348, 349, 350,
	1283, 1316, 1248, 351, 1377, 1378, 747, 0, 352, 353,
	1323, 0, 1304, 0, 354, 355, 356, 357, 358, 359,
	360, 361, 0, 0, 363, 364, 365, 362, 366, 367,
	0, 368, 0, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 378, 1358, 379, 380, 381, 1307, 1305,
	1306, 1313, 1309, 1308, 1312, 382, 383, 384, 385, 386,
	1340, 387, 389, 1334, 1333, 1253, 392, 394, 388, 390,
	0, 393, 391, 395, 396, 0, 397, 398, 399, 0,
	0, 400, 1325, 402, 0, 403, 404, 405, 0, 406,
	407, 408, 0, 409, 410, 1259, 411, 412, 413, 415,
	417, 414, 416, 418, 419, 420, 421, 422, 1348, 1349,
	423, 1272, 318, 0, 0, 0, 0, 0, 424, 425,
	426, 1332, 0, 0, 0, 427, 0, 428, 429, 430,
	0, 431, 432, 3061, 1359, 433, 434, 435, 1345, 1346,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 0,
	445, 1355, 0, 1282, 446, 0, 447, 448, 449, 450,
	451, 452, 453, 1318, 1319, 1322, 547, 1361, 454, 455,
	456, 0, 457, 458, 459, 460, 461, 0, 0, 0,
	319, 462, 463, 464, 0, 1360, 762, 465, 548, 466,
	1327, 1328, 0, 1288, 0, 467, 468, 470, 1362, 1320,
	1363, 469, 471, 472, 1364, 473, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 483, 482,
	3057, 485, 1356, 484, 1365, 486, 487, 1366, 0, 488,
	489, 490, 491, 492, 493, 496, 1311, 1310, 494, 495,
	497, 498, 0, 499, 500, 502, 505, 501, 503, 504,
	506, 519, 520, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 522, 0, 521, 1367, 523,
	524, 525, 526, 527, 534, 536, 537, 532, 533, 535,
	538, 539, 541, 529, 530, 531, 1368, 540, 528, 1250,
	320, 1369, 542, 543, 544, 545, 1273, 1321, 546, 1335,
	549, 550, 0, 0, 551, 0, 552, 0, 0, 554,
	555, 556, 0, 0, 557, 558, 770, 1370, 559, 1371,
	1350, 560, 561, 1260, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 0, 572, 573, 772, 574, 575,
	576, 773, 577, 578, 579, 1351, 580, 775, 581, 582,
	0, 583, 584, 585, 0, 586, 587, 588, 589, 590,
	591, 592, 593, 1331, 594, 595, 597, 596, 598, 0,
	599, 0, 600, 601, 602, 0, 0, 0, 0, 0,
	603, 604, 606, 0, 607, 608, 609, 610, 605, 611,
	612, 613, 614, 615, 616, 0, 618, 619, 617, 620,
	621, 1372, 622, 623, 624, 625, 626, 1261, 627, 0,
	628, 629, 637, 638, 639, 630, 631, 633, 640, 632,
	641, 642, 643, 644, 646, 645, 0, 648, 649, 647,
	650, 651, 652, 1314, 653, 778, 654, 634, 635, 655,
	656, 1373, 657, 658, 659, 660, 661, 662, 663, 1329,
	0, 664, 0, 665, 666, 667, 668, 669, 670, 672,
	636, 673, 678, 679, 1376, 674, 675, 676, 677, 1352,
	681, 682, 683, 684, 0, 685, 686, 1247, 680, 671,
	0, 687, 688, 689, 690, 691, 692, 0, 693, 694,
	0, 695, 1341, 1342, 1343, 1344, 0, 707, 3058, 696,
	698, 699, 700, 701, 1353, 702, 1354, 1271, 703, 704,
	705, 706, 697, 708, 709, 0, 1254, 710, 711, 712,
	714, 716, 717, 713, 715, 718, 1315, 719, 0, 0,
	720, 721, 722, 788, 1338, 1375, 0, 724, 725, 723,
	726, 727, 730, 728, 729, 791, 731, 732, 733, 0,
	0, 0, 0, 734, 735, 792, 736, 737, 738, 1251,
	0, 0, 0, 0, 2971, 0, 1293, 1265, 1266, 1267,
	1263, 1264, 1276, 0, 1246, 0, 0, 0, 0, 0,
	0, 1244, 1245, 321, 322, 324, 323, 325, 326, 327,
	328, 1277, 329, 330, 0, 1275, 0, 0, 0, 1317,
	1281, 0, 0, 331, 0, 332, 333, 334, 1357, 335,
	336, 337, 338, 339, 340, 341, 740, 1330, 0, 342,
	1337, 343, 1336, 0, 1347, 344, 345, 346, 347, 348,
	349, 350, 1283, 1316, 1248, 351, 1377, 1378, 747, 0,
	352, 353, 1323, 0, 1304, 0, 354, 355, 356, 357,
	358, 359, 360, 361, 0, 0, 363, 364, 365, 362,
	366, 367, 0, 368, 0, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 377, 378, 1358, 379, 380, 381,
	1307, 1305, 1306, 1313, 1309, 1308, 1312, 382, 383, 384,
	385, 386, 1340, 387, 389, 1334, 1333, 1253, 392, 394,
	388, 390, 0, 393, 391, 395, 396, 0, 397, 398,
	399, 0, 0, 400, 1325, 402, 0, 403, 404, 405,
	0, 406, 407, 408, 0, 409, 410, 1259, 411, 412,
	413, 415, 417, 414, 416, 418, 419, 420, 421, 422,
	1348, 1349, 423, 1272, 318, 0, 0, 0, 0, 0,
	424, 425, 426, 1332, 0, 0, 0, 427, 0, 428,
	429, 430, 0, 431, 432, 0, 1359, 433, 434, 435,
	1345, 1346, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 0, 445, 1355, 0, 1282, 446, 0, 447, 448,
	449, 450, 451, 452, 453, 1318, 1319, 1322, 547, 1361,
	454, 455, 456, 0, 457, 458, 459, 460, 461, 0,
	0, 0, 319, 462, 463, 464, 0, 1360, 762, 465,
	548, 466, 1327, 1328, 0, 1288, 0, 467, 468, 470,
	1362, 1320, 1363, 469, 471, 472, 1364, 473, 0, 0,
	0, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	483, 482, 0, 485, 1356, 484, 1365, 486, 487, 1366,
	0, 488, 489, 490, 491, 492, 493, 496, 1311, 1310,
	494, 495, 497, 498, 0, 499, 500, 502, 505, 501,
	503, 504, 506, 519, 520, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 522, 0, 521,
	1367, 523, 524, 525, 526, 527, 534, 536, 537, 532,
	533, 535, 538, 539, 541, 529, 530, 531, 1368, 540,
	528, 1250, 320, 1369, 542, 543, 544, 545, 1273, 1321,
	546, 1335, 549, 550, 0, 0, 551, 0, 552, 0,
	0, 554, 555, 556, 0, 0, 557, 558, 770, 1370,
	559, 1371, 1350, 560, 561, 1260, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 0, 572, 573, 772,
	574, 575, 576, 773, 577, 578, 579, 1351, 580, 775,
	581, 582, 0, 583, 584, 585, 0, 586, 587, 588,
	589, 590, 591, 592, 593, 1331, 594, 595, 597, 596,
	598, 0, 599, 0, 600, 601, 602, 0, 0, 0,
	0, 0, 603, 604, 606, 0, 607, 608, 609, 610,
	605, 611, 612, 613, 614, 615, 616, 0, 618, 619,
	617, 620, 621, 1372, 622, 623, 624, 625, 626, 1261,
	627, 0, 628, 629, 637, 638, 639, 630, 631, 633,
	640, 632, 641, 642, 643, 644, 646, 645, 0, 648,
	649, 647, 650, 651, 652, 1314, 653, 778, 654, 634,
	635, 655, 656, 1373, 657, 658, 659, 660, 661, 662,
	663, 1329, 0, 664, 0, 665, 666, 667, 668, 669,
	670, 672, 636, 673, 678, 679, 1376, 674, 675, 676,
	677, 1352, 681, 682, 683, 684, 0, 685, 686, 1247,
	680, 671, 0, 687, 688, 689, 690, 691, 692, 0,
	693, 694, 0, 695, 1341, 1342, 1343, 1344, 0, 707,
	0, 696, 698, 699, 700, 701, 1353, 702, 1354, 1271,
	703, 704, 705, 706, 697, 708, 709, 0, 1254, 710,
	711, 712, 714, 716, 717, 713, 715, 718, 1315, 719,
	0, 0, 720, 721, 722, 788, 1338, 1375, 0, 724,
	725, 723, 726, 727, 730, 728, 729, 791, 731, 732,
	733, 0, 0, 0, 0, 734, 735, 792, 736, 737,
	738, 1251, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1246, 0, 0, 0,
	0, 0, 0, 1244, 1245, 0, 0, 0, 0, 0,
	0, 0, 0, 1277, 2969, 0, 2968, 1275, 1293, 1265,
	1266, 1267, 1263, 1264, 1276, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 322, 324, 323, 325,
	326, 327, 328, 0, 329, 330, 0, 0, 0, 0,
	0, 1317, 1281, 0, 0, 331, 0, 332, 333, 334,
	1357, 335, 336, 337, 338, 339, 340, 341, 740, 1330,
	0, 342, 1337, 343, 1336, 0, 1347, 344, 345, 346,
	347, 348, 349, 350, 1283, 1316, 1248, 351, 1377, 1378,
	747, 0, 352, 353, 1323, 0, 1304, 0, 354, 355,
	356, 357, 358, 359, 360, 361, 0, 0, 363, 364,
	365, 362, 366, 367, 0, 368, 0, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 378, 1358, 379,
	380, 381, 1307, 1305, 1306, 1313, 1309, 1308, 1312, 382,
	383, 384, 385, 386, 1340, 387, 389, 1334, 1333, 1253,
	392, 394, 388, 390, 0, 393, 391, 395, 396, 0,
	397, 398, 399, 0, 0, 400, 1325, 402, 0, 403,
	404, 405, 0, 406, 407, 408, 0, 409, 410, 1259,
	411, 412, 413, 415, 417, 414, 416, 418, 419, 420,
	421, 422, 1348, 1349, 423, 1272, 318, 0, 0, 0,
	0, 0, 424, 425, 426, 1332, 0, 0, 0, 427,
	0, 428, 429, 430, 0, 431, 432, 0, 1359, 433,
	434, 435, 1345, 1346, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 0, 445, 1355, 0, 1282, 446, 0,
	447, 448, 449, 450, 451, 452, 453, 1318, 1319, 1322,
	547, 1361, 454, 455, 456, 0, 457, 458, 459, 460,
	461, 0, 0, 0, 319, 462, 463, 464, 0, 1360,
	762, 465, 548, 466, 1327, 1328, 0, 1288, 0, 467,
	468, 470, 1362, 1320, 1363, 469, 471, 472, 1364, 473,
	0, 0, 0, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 483, 482, 0, 485, 1356, 484, 1365, 486,
	487, 1366, 0, 488, 489, 490, 491, 492, 493, 496,
	1311, 1310, 494, 495, 497, 498, 0, 499, 500, 502,
	505, 501, 503, 504, 506, 519, 520, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 522,
	0, 521, 1367, 523, 524, 525, 526, 527, 534, 536,
	537, 532, 533, 535, 538, 539, 541, 529, 530, 531,
	1368, 540, 528, 1250, 320, 1369, 542, 543, 544, 545,
	1273, 1321, 546, 1335, 549, 550, 0, 0, 551, 0,
	552, 0, 0, 554, 555, 556, 0, 0, 557, 558,
	770, 1370, 559, 1371, 1350, 560, 561, 1260, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 0, 572,
	573, 772, 574, 575, 576, 773, 577, 578, 579, 1351,
	580, 775, 581, 582, 0, 583, 584, 585, 0, 586,
	587, 588, 589, 590, 591, 592, 593, 1331, 594, 595,
	597, 596, 598, 0, 599, 0, 600, 601, 602, 0,
	0, 0, 0, 0, 603, 604, 606, 0, 607, 608,
	609, 610, 605, 611, 612, 613, 614, 615, 616, 0,
	618, 619, 617, 620, 621, 1372, 622, 623, 624, 625,
	626, 1261, 627, 0, 628, 629, 637, 638, 639, 630,
	631, 633, 640, 632, 641, 642, 643, 644, 646, 645,
	0, 648, 649, 647, 650, 651, 652, 1314, 653, 778,
	654, 634, 635, 655, 656, 1373, 657, 658, 659, 660,
	661, 662, 663, 1329, 0, 664, 0, 665, 666, 667,
	668, 669, 670, 672, 636, 673, 678, 679, 1376, 674,
	675, 676, 677, 1352, 681, 682, 683, 684, 0, 685,
	686, 1247, 680, 671, 0, 687, 688, 689, 690, 691,
	692, 0, 693, 694, 0, 695, 1341, 1342, 1343, 1344,
	0, 707, 0, 696, 698, 699, 700, 701, 1353, 702,
	1354, 1271, 703, 704, 705, 706, 697, 708, 709, 0,
	1254, 710, 711, 712, 714, 716, 717, 713, 715, 718,
	1315, 719, 0, 0, 720, 721, 722, 788, 1338, 1375,
	0, 724, 725, 723, 726, 727, 730, 728, 729, 791,
	731, 732, 733, 0, 0, 0, 0, 734, 735, 792,
	736, 737, 738, 1251, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1246, 0,
	0, 0, 0, 0, 0, 1244, 1245, 0, 0, 0,
	0, 0, 0, 0, 0, 1277, 2966, 0, 2965, 1275,
	1293, 1265, 1266, 1267, 1263, 1264, 1276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 322, 324,
	323, 325, 326, 327, 328, 0, 329, 330, 0, 0,
	0, 0, 0, 1317, 1281, 0, 0, 331, 0, 332,
	333, 334, 1357, 335, 336, 337, 338, 339, 340, 341,
	740, 1330, 0, 342, 1337, 343, 1336, 0, 1347, 344,
	345, 346, 347, 348, 349, 350, 1283, 1316, 1248, 351,
	1377, 1378, 747, 0, 352, 353, 1323, 0, 1304, 0,
	354, 355, 356, 357, 358, 359, 360, 361, 0, 0,
	363, 364, 365, 362, 366, 367, 0, 368, 0, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 378,
	1358, 379, 380, 381, 1307, 1305, 1306, 1313, 1309, 1308,
	1312, 382, 383, 384, 385, 386, 1340, 387, 389, 1334,
	1333, 1253, 392, 394, 388, 390, 0, 393, 391, 395,
	396, 0, 397, 398, 399, 0, 0, 400, 1325, 402,
	0, 403, 404, 405, 0, 406, 407, 408, 0, 409,
	410, 1259, 411, 412, 413, 415, 417, 414, 416, 418,
	419, 420, 421, 422, 1348, 1349, 423, 1272, 318, 0,
	0, 0, 0, 0, 424, 425, 426, 1332, 0, 0,
	0, 427, 0, 428, 429, 430, 0, 431, 432, 0,
	1359, 433, 434, 435, 1345, 1346, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 0, 445, 1355, 0, 1282,
	446, 0, 447, 448, 449, 450, 451, 452, 453, 1318,
	1319, 1322, 547, 1361, 454, 455, 456, 0, 457, 458,
	459, 460, 461, 0, 0, 0, 319, 462, 463, 464,
	0, 1360, 762, 465, 548, 466, 1327, 1328, 0, 1288,
	0, 467, 468, 470, 1362, 1320, 1363, 469, 471, 472,
	1364, 473, 0, 0, 0, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 483, 482, 0, 485, 1356, 484,
	1365, 486, 487, 1366, 0, 488, 489, 490, 491, 492,
	493, 496, 1311, 1310, 494, 495, 497, 498, 0, 499,
	500, 502, 505, 501, 503, 504, 506, 519, 520, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 522, 0, 521, 1367, 523, 524, 525, 526, 527,
	534, 536, 537, 532, 533, 535, 538, 539, 541, 529,
	530, 531, 1368, 540, 528, 1250, 320, 1369, 542, 543,
	544, 545, 1273, 1321, 546, 1335, 549, 550, 0, 0,
	551, 0, 552, 0, 0, 554, 555, 556, 0, 0,
	557, 558, 770, 1370, 559, 1371, 1350, 560, 561, 1260,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	0, 572, 573, 772, 574, 575, 576, 773, 577, 578,
	579, 1351, 580, 775, 581, 582, 0, 583, 584, 585,
	0, 586, 587, 588, 589, 590, 591, 592, 593, 1331,
	594, 595, 597, 596, 598, 0, 599, 0, 600, 601,
	602, 0, 0, 0, 0, 0, 603, 604, 606, 0,
	607, 608, 609, 610, 605, 611, 612, 613, 614, 615,
	616, 0, 618, 619, 617, 620, 621, 1372, 622, 623,
	624, 625, 626, 1261, 627, 0, 628, 629, 637, 638,
	639, 630, 631, 633, 640, 632, 641, 642, 643, 644,
	646, 645, 0, 648, 649, 647, 650, 651, 652, 1314,
	653, 778, 654, 634, 635, 655, 656, 1373, 657, 658,
	659, 660, 661, 662, 663, 1329, 0, 664, 0, 665,
	666, 667, 668, 669, 670, 672, 636, 673, 678, 679,
	1376, 674, 675, 676, 677, 1352, 681, 682, 683, 684,
	0, 685, 686, 1247, 680, 671, 0, 687, 688, 689,
	690, 691, 692, 0, 693, 694, 0, 695, 1341, 1342,
	1343, 1344, 0, 707, 0, 696, 698, 699, 700, 701,
	1353, 702, 1354, 1271, 703, 704, 705, 706, 697, 708,
	709, 0, 1254, 710, 711, 712, 714, 716, 717, 713,
	715, 718, 1315, 719, 0, 0, 720, 721, 722, 788,
	1338, 1375, 0, 724, 725, 723, 726, 727, 730, 728,
	729, 791, 731, 732, 733, 0, 0, 0, 0, 734,
	735, 792, 736, 737, 738, 1251, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1246, 0, 0, 0, 0, 0, 0, 1244, 1245, 0,
	0, 0, 0, 0, 0, 0, 0, 1277, 2963, 0,
	2962, 1275, 1293, 1265, 1266, 1267, 1263, 1264, 1276, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 321,
	322, 324, 323, 325, 326, 327, 328, 0, 329, 330,
	0, 0, 0, 0, 0, 1317, 1281, 0, 0, 331,
	0, 332, 333, 334, 1357, 335, 336, 337, 338, 339,
	340, 341, 740, 1330, 0, 342, 1337, 343, 1336, 0,
	1347, 344, 345, 346, 347, 348, 349, 350, 1283, 1316,
	1248, 351, 1377, 1378, 747, 0, 352, 353, 1323, 0,
	1304, 0, 354, 355, 356, 357, 358, 359, 360, 361,
	0, 0, 363, 364, 365, 362, 366, 367, 0, 368,
	0, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 378, 1358, 379, 380, 381, 1307, 1305, 1306, 1313,
	1309, 1308, 1312, 382, 383, 384, 385, 386, 1340, 387,
	389, 1334, 1333, 1253, 392, 394, 388, 390, 0, 393,
	391, 395, 396, 0, 397, 398, 399, 0, 0, 400,
	1325, 402, 0, 403, 404, 405, 0, 406, 407, 408,
	0, 409, 410, 1259, 411, 412, 413, 415, 417, 414,
	416, 418, 419, 420, 421, 422, 1348, 1349, 423, 1272,
	318, 0, 0, 0, 0, 0, 424, 425, 426, 1332,
	0, 0, 0, 427, 0, 428, 429, 430, 0, 431,
	432, 0, 1359, 433, 434, 435, 1345, 1346, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 0, 445, 1355,
	0, 1282, 446, 0, 447, 448, 449, 450, 451, 452,
	453, 1318, 1319, 1322, 547, 1361, 454, 455, 456, 0,
	457, 458, 459, 460, 461, 0, 0, 0, 319, 462,
	463, 464, 0, 1360, 762, 465, 548, 466, 1327, 1328,
	0, 1288, 0, 467, 468, 470, 1362, 1320, 1363, 469,
	471, 472, 1364, 473, 0, 0, 0, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 483, 482, 0, 485,
	1356, 484, 1365, 486, 487, 1366, 0, 488, 489, 490,
	491, 492, 493, 496, 1311, 1310, 494, 495, 497, 498,
	0, 499, 500, 502, 505, 501, 503, 504, 506, 519,
	520, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 522, 0, 521, 1367, 523, 524, 525,
	526, 527, 534, 536, 537, 532, 533, 535, 538, 539,
	541, 529, 530, 531, 1368, 540, 528, 1250, 320, 1369,
	542, 543, 544, 545, 1273, 1321, 546, 1335, 549, 550,
	0, 0, 551, 0, 552, 0, 0, 554, 555, 556,
	0, 0, 557, 558, 770, 1370, 559, 1371, 1350, 560,
	561, 1260, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 0, 572, 573, 772, 574, 575, 576, 773,
	577, 578, 579, 1351, 580, 775, 581, 582, 0, 583,
	584, 585, 0, 586, 587, 588, 589, 590, 591, 592,
	593, 1331, 594, 595, 597, 596, 598, 0, 599, 0,
	600, 601, 602, 0, 0, 0, 0, 0, 603, 604,
	606, 0, 607, 608, 609, 610, 605, 611, 612, 613,
	614, 615, 616, 0, 618, 619, 617, 620, 621, 1372,
	622, 623, 624, 625, 626, 1261, 627, 0, 628, 629,
	637, 638, 639, 630, 631, 633, 640, 632, 641, 642,
	643, 644, 646, 645, 0, 648, 649, 647, 650, 651,
	652, 1314, 653, 778, 654, 634, 635, 655, 656, 1373,
	657, 658, 659, 660, 661, 662, 663, 1329, 0, 664,
	0, 665, 666, 667, 668, 669, 670, 672, 636, 673,
	678, 679, 1376, 674, 675, 676, 677, 1352, 681, 682,
	683, 684, 0, 685, 686, 1247, 680, 671, 0, 687,
	688, 689, 690, 691, 692, 0, 693, 694, 0, 695,
	1341, 1342, 1343, 1344, 0, 707, 0, 696, 698, 699,
	700, 701, 1353, 702, 1354, 1271, 703, 704, 705, 706,
	697, 708, 709, 0, 1254, 710, 711, 712, 714, 716,
	717, 713, 715, 718, 1315, 719, 0, 0, 720, 721,
	722, 788, 1338, 1375, 0, 724, 725, 723, 726, 727,
	730, 728, 729, 791, 731, 732, 733, 0, 0, 0,
	0, 734, 735, 792, 736, 737, 738, 1251, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1246, 0, 0, 0, 0, 0, 0, 1244,
	1245, 0, 0, 0, 0, 0, 0, 0, 0, 1277,
	2960, 0, 1938, 1275, 1293, 1265, 1266, 1267, 1263, 1264,
	1276, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 324, 323, 325, 326, 327, 328, 0,
	329, 330, 0, 0, 0, 0, 0, 1317, 1281, 0,
	0, 331, 0, 332, 333, 334, 1357, 335, 336, 337,
	338, 339, 340, 341, 740, 1330, 0, 342, 1337, 343,
	1336, 0, 1347, 344, 345, 346, 347, 348, 349, 350,
	1283, 1316, 1248, 351, 1377, 1378, 747, 0, 352, 353,
	1323, 0, 1304, 0, 354, 355, 356, 357, 358, 359,
	360, 361, 0, 0, 363, 364, 365, 362, 366, 367,
	0, 368, 0, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 378, 1358, 379, 380, 381, 1307, 1305,
	1306, 1313, 1309, 1308, 1312, 382, 383, 384, 385, 386,
	1340, 387, 389, 1334, 1333, 1253, 392, 394, 388, 390,
	0, 393, 391, 395, 396, 0, 397, 398, 399, 0,
	0, 400, 1325, 402, 0, 403, 404, 405, 0, 406,
	407, 408, 0, 409, 410, 1259, 411, 412, 413, 415,
	417, 414, 416, 418, 419, 420, 421, 422, 1348, 1349,
	423, 1272, 318, 0, 0, 0, 0, 0, 424, 425,
	426, 1332, 0, 0, 0, 427, 0, 428, 429, 430,
	0, 431, 432, 0, 1359, 433, 434, 435, 1345, 1346,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 0,
	445, 1355, 0, 1282, 446, 0, 447, 448, 449, 450,
	451, 452, 453, 1318, 1319, 1322, 547, 1361, 454, 455,
	456, 0, 457, 458, 459, 460, 461, 0, 0, 0,
	319, 462, 463, 464, 0, 1360, 762, 465, 548, 466,
	1327, 1328, 0, 1288, 0, 467, 468, 470, 1362, 1320,
	1363, 469, 471, 472, 1364, 473, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 483, 482,
	0, 485, 1356, 484, 1365, 486, 487, 1366, 0, 488,
	489, 490, 491, 492, 493, 496, 1311, 1310, 494, 495,
	497, 498, 0, 499, 500, 502, 505, 501, 503, 504,
	506, 519, 520, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 522, 0, 521, 1367, 523,
	524, 525, 526, 527, 534, 536, 537, 532, 533, 535,
	538, 539, 541, 529, 530, 531, 1368, 540, 528, 1250,
	320, 1369, 542, 543, 544, 545, 1273, 1321, 546, 1335,
	549, 550, 0, 0, 551, 0, 552, 0, 0, 554,
	555, 556, 0, 0, 557, 558, 770, 1370, 559, 1371,
	1350, 560, 561, 1260, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 0, 572, 573, 772, 574, 575,
	576, 773, 577, 578, 579, 1351, 580, 775, 581, 582,
	0, 583, 584, 585, 0, 586, 587, 588, 589, 590,
	591, 592, 593, 1331, 594, 595, 597, 596, 598, 0,
	599, 0, 600, 601, 602, 0, 0, 0, 0, 0,
	603, 604, 606, 0, 607, 608, 609, 610, 605, 611,
	612, 613, 614, 615, 616, 0, 618, 619, 617, 620,
	621, 1372, 622, 623, 624, 625, 626, 1261, 627, 0,
	628, 629, 637, 638, 639, 630, 631, 633, 640, 632,
	641, 642, 643, 644, 646, 645, 0, 648, 649, 647,
	650, 651, 652, 1314, 653, 778, 654, 634, 635, 655,
	656, 1373, 657, 658, 659, 660, 661, 662, 663, 1329,
	0, 664, 0, 665, 666, 667, 668, 669, 670, 672,
	636, 673, 678, 679, 1376, 674, 675, 676, 677, 1352,
	681, 682, 683, 684, 0, 685, 686, 1247, 680, 671,
	0, 687, 688, 689, 690, 691, 692, 0, 693, 694,
	0, 695, 1341, 1342, 1343, 1344, 0, 707, 0, 696,
	698, 699, 700, 701, 1353, 702, 1354, 1271, 703, 704,
	705, 706, 697, 708, 709, 0, 1254, 710, 711, 712,
	714, 716, 717, 713, 715, 718, 1315, 719, 0, 0,
	720, 721, 722, 788, 1338, 1375, 0, 724, 725, 723,
	726, 727, 730, 728, 729, 791, 731, 732, 733, 1937,
	0, 0, 0, 734, 735, 792, 736, 737, 738, 1251,
	0, 0, 0, 0, 1240, 0, 1293, 1265, 1266, 1267,
	1263, 1264, 1276, 0, 1246, 0, 0, 0, 0, 0,
	0, 1244, 1245, 321, 322, 324, 323, 325, 326, 327,
	328, 1277, 329, 330, 0, 1275, 0, 0, 0, 1317,
	1281, 0, 0, 331, 0, 332, 333, 334, 1357, 335,
	336, 337, 338, 339, 340, 341, 740, 1330, 0, 342,
	1337, 343, 1336, 0, 1347, 344, 345, 346, 347, 348,
	349, 350, 1283, 1316, 1248, 351, 1377, 1378, 747, 0,
	352, 353, 1323, 0, 1304, 0, 354, 355, 356, 357,
	358, 359, 360, 361, 0, 0, 363, 364, 365, 362,
	366, 367, 0, 368, 0, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 377, 378, 1358, 379, 380, 381,
	1307, 1305, 1306, 1313, 1309, 1308, 1312, 382, 383, 384,
	385, 386, 1340, 387, 389, 1334, 1333, 1253, 392, 394,
	388, 390, 0, 393, 391, 395, 396, 0, 397, 398,
	399, 0, 0, 400, 1325, 402, 0, 403, 404, 405,
	0, 406, 407, 408, 0, 409, 410, 1259, 411, 412,
	413, 415, 417, 414, 416, 418, 419, 420, 421, 422,
	1348, 1349, 423, 1272, 318, 0, 0, 0, 0, 0,
	424, 425, 426, 1332, 0, 0, 0, 427, 0, 428,
	429, 430, 0, 431, 432, 0, 1359, 433, 434, 435,
	1345, 1346, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 0, 445, 1355, 0, 1282, 446, 0, 447, 448,
	449, 450, 451, 452, 453, 1318, 1319, 1322, 547, 1361,
	454, 455, 456, 0, 457, 458, 459, 460, 461, 0,
	0, 0, 319, 462, 463, 464, 0, 1360, 762, 465,
	548, 466, 1327, 1328, 0, 1288, 0, 467, 468, 470,
	1362, 1320, 1363, 469, 471, 472, 1364, 473, 0, 0,
	0, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	483, 482, 0, 485, 1356, 484, 1365, 486, 487, 1366,
	0, 488, 489, 490, 491, 492, 493, 496, 1311, 1310,
	494, 495, 497, 498, 0, 499, 500, 502, 505, 501,
	503, 504, 506, 519, 520, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 522, 0, 521,
	1367, 523, 524, 525, 526, 527, 534, 536, 537, 532,
	533, 535, 538, 539, 541, 529, 530, 531, 1368, 540,
	528, 1250, 320, 1369, 542, 543, 544, 545, 1273, 1321,
	546, 1335, 549, 550, 0, 0, 551, 0, 552, 1255,
	0, 554, 555, 556, 0, 0, 557, 558, 770, 1370,
	559, 1371, 1350, 560, 561, 1260, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 0, 572, 573, 772,
	574, 575, 576, 773, 577, 578, 579, 1351, 580, 775,
	581, 582, 0, 583, 584, 585, 0, 586, 587, 588,
	589, 590, 591, 592, 593, 1331, 594, 595, 597, 596,
	598, 0, 599, 0, 600, 601, 602, 0, 0, 0,
	0, 0, 603, 604, 606, 0, 607, 608, 609, 610,
	605, 611, 612, 613, 614, 615, 616, 0, 618, 619,
	617, 620, 621, 1372, 622, 623, 624, 625, 626, 1261,
	627, 0, 628, 629, 637, 638, 639, 630, 631, 633,
	640, 632, 641, 642, 643, 644, 646, 645, 0, 648,
	649, 647, 650, 651, 652, 1314, 653, 778, 654, 634,
	635, 655, 656, 1373, 657, 658, 659, 660, 661, 662,
	663, 1329, 0, 664, 0, 665, 666, 667, 668, 669,
	670, 672, 636, 673, 678, 679, 1376, 674, 675, 676,
	677, 1352, 681, 682, 683, 684, 0, 685, 686, 1247,
	680, 671, 0, 687, 688, 689, 690, 691, 692, 0,
	693, 694, 0, 695, 1341, 1342, 1343, 1344, 0, 707,
	0, 696, 698, 699, 700, 701, 1353, 702, 1354, 1271,
	703, 704, 705, 706, 697, 708, 709, 0, 1254, 710,
	711, 712, 714, 716, 717, 713, 715, 718, 1315, 719,
	0, 0, 720, 721, 722, 788, 1338, 1375, 0, 724,
	725, 723, 726, 727, 730, 728, 729, 791, 731, 732,
	733, 0, 0, 0, 0, 734, 735, 792, 736, 737,
	738, 1251, 0, 0, 0, 0, 0, 0, 1293, 1265,
	1266, 1267, 1263, 1264, 1276, 0, 1246, 0, 0, 0,
	0, 0, 0, 1244, 1245, 321, 322, 324, 323, 325,
	326, 327, 328, 1277, 329, 330, 0, 1275, 0, 0,
	0, 1317, 1281, 0, 0, 331, 0, 332, 333, 334,
	1357, 335, 336, 337, 338, 339, 340, 341, 740, 1330,
	0, 342, 1337, 343, 1336, 0, 1347, 344, 345, 346,
	347, 348, 349, 350, 1283, 1316, 1248, 351, 1377, 1378,
	747, 0, 352, 353, 1323, 0, 1304, 0, 354, 355,
	356, 357, 358, 359, 360, 361, 0, 0, 363, 364,
	365, 362, 366, 367, 0, 368, 0, 369, 370, 371,
	372, 5409, 374, 375, 0, 376, 377, 378, 1358, 379,
	380, 381, 1307, 1305, 1306, 1313, 1309, 1308, 1312, 382,
	383, 384, 385, 386, 1340, 387, 389, 1334, 1333, 1253,
	392, 394, 388, 390, 0, 393, 391, 395, 396, 0,
	397, 398, 399, 0, 0, 400, 1325, 402, 0, 403,
	404, 405, 0, 406, 407, 408, 0, 409, 410, 1259,
	411, 412, 413, 415, 417, 414, 416, 418, 419, 420,
	421, 422, 1348, 1349, 423, 1272, 318, 0, 0, 0,
	0, 0, 424, 425, 426, 1332, 0, 0, 0, 427,
	0, 428, 429, 430, 0, 431, 432, 0, 1359, 433,
	434, 435, 1345, 1346, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 0, 445, 1355, 0, 1282, 446, 0,
	447, 448, 449, 450, 451, 452, 453, 1318, 1319, 1322,
	547, 1361, 454, 455, 456, 0, 457, 458, 459, 460,
	461, 0, 0, 0, 319, 462, 463, 464, 0, 1360,
	762, 465, 548, 466, 1327, 1328, 0, 1288, 0, 467,
	468, 470, 1362, 1320, 1363, 469, 471, 472, 1364, 473,
	0, 0, 0, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 483, 482, 0, 485, 1356, 484, 1365, 486,
	487, 1366, 0, 488, 489, 490, 491, 492, 493, 496,
	1311, 1310, 494, 495, 497, 498, 0, 499, 500, 502,
	505, 501, 503, 504, 506, 519, 520, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 522,
	0, 521, 1367, 523, 524, 525, 526, 527, 534, 536,
	537, 532, 533, 535, 538, 539, 541, 529, 530, 531,
	1368, 540, 528, 1250, 320, 1369, 542, 543, 544, 545,
	1273, 1321, 546, 1335, 549, 550, 0, 0, 551, 0,
	552, 1255, 0, 554, 555, 556, 0, 0, 557, 558,
	770, 1370, 559, 1371, 1350, 560, 561, 1260, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 0, 572,
	573, 772, 574, 575, 576, 773, 577, 578, 579, 1351,
	580, 775, 581, 582, 0, 583, 584, 585, 0, 586,
	587, 588, 589, 590, 591, 592, 593, 1331, 594, 595,
	597, 596, 598, 0, 599, 0, 600, 601, 602, 0,
	0, 0, 0, 0, 603, 604, 606, 0, 607, 608,
	609, 610, 605, 611, 612, 613, 614, 615, 616, 0,
	618, 619, 617, 620, 621, 1372, 622, 623, 624, 625,
	626, 1261, 627, 0, 628, 629, 637, 638, 639, 630,
	631, 633, 640, 632, 641, 642, 643, 644, 646, 645,
	0, 648, 649, 647, 650, 651, 652, 1314, 653, 778,
	654, 634, 635, 655, 656, 1373, 657, 658, 659, 660,
	661, 662, 663, 1329, 0, 664, 0, 665, 666, 667,
	668, 669, 670, 672, 636, 673, 678, 679, 1376, 674,
	675, 676, 677, 1352, 681, 682, 683, 684, 0, 685,
	686, 1247, 680, 671, 0, 687, 688, 689, 690, 691,
	692, 0, 693, 694, 0, 695, 1341, 1342, 1343, 1344,
	0, 707, 0, 696, 698, 699, 700, 701, 1353, 702,
	1354, 1271, 703, 704, 705, 706, 697, 708, 709, 0,
	1254, 710, 711, 712, 714, 716, 717, 713, 715, 718,
	1315, 719, 0, 0, 720, 721, 722, 788, 1338, 1375,
	0, 724, 725, 723, 726, 727, 730, 728, 729, 791,
	731, 732, 733, 0, 0, 0, 0, 734, 735, 792,
	736, 737, 738, 1251, 0, 0, 0, 0, 0, 0,
	1293, 1265, 1266, 1267, 1263, 1264, 1276, 0, 1246, 0,
	0, 0, 0, 0, 0, 1244, 1245, 321, 322, 324,
	323, 325, 326, 327, 328, 1277, 329, 330, 0, 1275,
	0, 0, 0, 1317, 1281, 0, 0, 331, 0, 332,
	333, 334, 1357, 335, 336, 337, 338, 339, 340, 341,
	740, 1330, 0, 342, 1337, 343, 1336, 0, 1347, 344,
	345, 346, 347, 348, 349, 350, 1283, 1316, 1248, 351,
	1377, 1378, 747, 0, 352, 353, 1323, 0, 1304, 0,
	354, 355, 356, 357, 358, 359, 360, 361, 0, 0,
	363, 364, 365, 362, 366, 367, 0, 368, 0, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 378,
	1358, 379, 380, 381, 1307, 1305, 1306, 1313, 1309, 1308,
	1312, 382, 383, 384, 385, 386, 1340, 387, 389, 1334,
	1333, 1253, 392, 394, 388, 390, 0, 393, 391, 395,
	396, 0, 397, 398, 399, 0, 0, 400, 1325, 402,
	0, 403, 404, 405, 0, 406, 407, 408, 0, 409,
	410, 1259, 411, 412, 413, 415, 417, 414, 416, 418,
	419, 420, 421, 422, 1348, 1349, 423, 1272, 318, 0,
	0, 0, 0, 0, 424, 425, 426, 1332, 0, 0,
	0, 427, 0, 428, 429, 430, 0, 431, 432, 0,
	1359, 433, 434, 435, 1345, 1346, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 0, 445, 1355, 0, 1282,
	446, 0, 447, 448, 449, 450, 451, 452, 453, 1318,
	1319, 1322, 547, 1361, 454, 455, 456, 0, 457, 458,
	459, 460, 461, 0, 0, 0, 2801, 462, 463, 464,
	0, 1360, 762, 465, 548, 466, 1327, 1328, 0, 1288,
	0, 467, 468, 470, 1362, 1320, 1363, 469, 471, 472,
	1364, 473, 0, 0, 0, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 483, 482, 0, 485, 1356, 484,
	1365, 486, 487, 1366, 0, 488, 489, 490, 491, 492,
	493, 496, 1311, 1310, 494, 495, 497, 498, 0, 499,
	500, 502, 505, 501, 503, 504, 506, 519, 520, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 522, 0, 521, 1367, 523, 524, 525, 526, 527,
	534, 536, 537, 532, 533, 535, 538, 539, 541, 529,
	530, 531, 1368, 540, 528, 1250, 320, 1369, 542, 543,
	544, 545, 1273, 1321, 546, 1335, 549, 550, 0, 0,
	551, 0, 552, 0, 0, 554, 555, 556, 0, 0,
	557, 558, 770, 1370, 559, 1371, 1350, 560, 561, 1260,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	0, 572, 573, 772, 574, 575, 576, 773, 577, 578,
	579, 1351, 580, 775, 581, 582, 2800, 583, 584, 585,
	0, 586, 587, 588, 589, 590, 591, 592, 593, 1331,
	594, 595, 597, 596, 598, 0, 599, 0, 600, 601,
	602, 0, 0, 0, 0, 0, 603, 604, 606, 0,
	607, 608, 609, 610, 605, 611, 612, 613, 614, 615,
	616, 0, 618, 619, 617, 620, 621, 1372, 622, 623,
	624, 625, 626, 1261, 627, 0, 628, 629, 637, 638,
	639, 630, 631, 633, 640, 632, 641, 642, 643, 644,
	646, 645, 0, 648, 649, 647, 650, 651, 652, 1314,
	653, 778, 654, 634, 635, 655, 656, 1373, 657, 658,
	659, 660, 661, 662, 663, 1329, 0, 664, 0, 665,
	666, 667, 668, 669, 670, 672, 636, 673, 678, 679,
	1376, 674, 675, 676, 677, 1352, 681, 682, 683, 684,
	0, 685, 686, 1247, 680, 671, 0, 687, 688, 689,
	690, 691, 692, 0, 693, 694, 0, 695, 1341, 1342,
	1343, 1344, 0, 707, 0, 696, 698, 699, 700, 701,
	1353, 702, 1354, 1271, 703, 704, 705, 706, 697, 708,
	709, 0, 1254, 710, 711, 712, 714, 716, 717, 713,
	715, 718, 1315, 719, 0, 0, 720, 721, 722, 788,
	1338, 1375, 0, 724, 725, 723, 726, 727, 730, 728,
	729, 791, 731, 732, 733, 0, 0, 0, 0, 734,
	735, 792, 736, 737, 738, 1251, 0, 0, 0, 0,
	0, 0, 1293, 1265, 1266, 1267, 1263, 1264, 1276, 0,
	1246, 0, 0, 0, 0, 0, 0, 1244, 1245, 321,
	322, 324, 323, 325, 326, 327, 328, 1277, 329, 330,
	0, 1275, 0, 0, 0, 1317, 1281, 0, 0, 331,
	0, 332, 333, 334, 1357, 335, 336, 337, 338, 339,
	340, 341, 740, 1330, 0, 342, 1337, 343, 1336, 0,
	1347, 344, 345, 346, 347, 348, 349, 350, 1283, 1316,
	1248, 351, 1377, 1378, 747, 0, 352, 353, 1323, 0,
	1304, 0, 354, 355, 356, 357, 358, 359, 360, 361,
	0, 0, 363, 364, 365, 362, 366, 367, 0, 368,
	0, 369, 370, 371, 372, 5115, 374, 375, 0, 376,
	377, 378, 1358, 379, 380, 381, 1307, 1305, 1306, 1313,
	1309, 1308, 1312, 382, 383, 384, 385, 386, 1340, 387,
	389, 1334, 1333, 1253, 392, 394, 388, 390, 0, 393,
	391, 395, 396, 0, 397, 398, 399, 0, 0, 400,
	1325, 402, 0, 403, 404, 405, 0, 406, 407, 408,
	0, 409, 410, 1259, 411, 412, 413, 415, 417, 414,
	416, 418, 419, 420, 421, 422, 1348, 1349, 423, 1272,
	318, 0, 0, 0, 0, 0, 424, 425, 426, 1332,
	0, 0, 0, 427, 0, 428, 429, 430, 0, 431,
	432, 0, 1359, 433, 434, 435, 1345, 1346, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 0, 445, 1355,
	0, 1282, 446, 0, 447, 448, 449, 450, 451, 452,
	453, 1318, 1319, 1322, 547, 1361, 454, 455, 456, 0,
	457, 458, 459, 460, 461, 0, 0, 0, 319, 462,
	463, 464, 0, 1360, 762, 465, 548, 466, 1327, 1328,
	0, 1288, 0, 467, 468, 470, 1362, 1320, 1363, 469,
	471, 472, 1364, 473, 0, 0, 0, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 483, 482, 0, 485,
	1356, 484, 1365, 486, 487, 1366, 0, 488, 489, 490,
	491, 492, 493, 496, 1311, 1310, 494, 495, 497, 498,
	0, 499, 500, 502, 505, 501, 503, 504, 506, 519,
	520, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 522, 0, 521, 1367, 523, 524, 525,
	526, 527, 534, 536, 537, 532, 533, 535, 538, 539,
	541, 529, 530, 531, 1368, 540, 528, 1250, 320, 1369,
	542, 543, 544, 545, 1273, 1321, 546, 1335, 549, 550,
	0, 0, 551, 0, 552, 1255, 0, 554, 555, 556,
	0, 0, 557, 558, 770, 1370, 559, 1371, 1350, 560,
	561, 1260, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 0, 572, 573, 772, 574, 575, 576, 773,
	577, 578, 579, 1351, 580, 775, 581, 582, 0, 583,
	584, 585, 0, 586, 587, 588, 589, 590, 591, 592,
	593, 1331, 594, 595, 597, 596, 598, 0, 599, 0,
	600, 601, 602, 0, 0, 0, 0, 0, 603, 604,
	606, 0, 607, 608, 609, 610, 605, 611, 612, 613,
	614, 615, 616, 0, 618, 619, 617, 620, 621, 1372,
	622, 623, 624, 625, 626, 1261, 627, 0, 628, 629,
	637, 638, 639, 630, 631, 633, 640, 632, 641, 642,
	643, 644, 646, 645, 0, 648, 649, 647, 650, 651,
	652, 1314, 653, 778, 654, 634, 635, 655, 656, 1373,
	657, 658, 659, 660, 661, 662, 663, 1329, 0, 664,
	0, 665, 666, 667, 668, 669, 670, 672, 636, 673,
	678, 679, 1376, 674, 675, 676, 677, 1352, 681, 682,
	683, 684, 0, 685, 686, 1247, 680, 671, 0, 687,
	688, 689, 690, 691, 692, 0, 693, 694, 0, 695,
	1341, 1342, 1343, 1344, 0, 707, 0, 696, 698, 699,
	700, 701, 1353, 702, 1354, 1271, 703, 704, 705, 706,
	697, 708, 709, 0, 1254, 710, 711, 712, 714, 716,
	717, 713, 715, 718, 1315, 719, 0, 0, 720, 721,
	722, 788, 1338, 1375, 0, 724, 725, 723, 726, 727,
	730, 728, 729, 791, 731, 732, 733, 0, 0, 0,
	0, 734, 735, 792, 736, 737, 738, 1251, 0, 0,
	0, 0, 0, 0, 1293, 1265, 1266, 1267, 1263, 1264,
	1276, 0, 1246, 0, 0, 0, 0, 0, 0, 1244,
	1245, 321, 322, 324, 323, 325, 326, 327, 328, 1277,
	329, 330, 0, 1275, 0, 0, 0, 1317, 1281, 0,
	0, 331, 0, 332, 333, 334, 1357, 335, 336, 337,
	338, 339, 340, 341, 740, 1330, 0, 342, 1337, 343,
	1336, 0, 1347, 344, 345, 346, 347, 348, 349, 350,
	1283, 1316, 1248, 351, 1377, 1378, 747, 0, 352, 353,
	1323, 0, 1304, 0, 354, 355, 356, 357, 358, 359,
	360, 361, 0, 0, 363, 364, 365, 362, 366, 367,
	0, 368, 0, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 378, 1358, 379, 380, 381, 1307, 1305,
	1306, 1313, 1309, 1308, 1312, 382, 383, 384, 385, 386,
	1340, 387, 389, 1334, 1333, 1253, 392, 394, 388, 390,
	0, 393, 391, 395, 396, 0, 397, 398, 399, 0,
	0, 400, 1325, 402, 0, 403, 404, 405, 0, 406,
	407, 408, 0, 409, 410, 1259, 411, 412, 413, 415,
	417, 414, 416, 418, 419, 420, 421, 422, 1348, 1349,
	423, 1272, 318, 0, 0, 0, 0, 0, 424, 425,
	426, 1332, 0, 0, 0, 427, 0, 428, 429, 430,
	0, 431, 432, 0, 1359, 433, 434, 435, 1345, 1346,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 0,
	445, 1355, 0, 1282, 446, 0, 447, 448, 449, 450,
	451, 452, 453, 1318, 1319, 1322, 547, 1361, 454, 455,
	456, 0, 457, 458, 459, 460, 461, 0, 0, 0,
	319, 462, 463, 464, 0, 1360, 762, 465, 548, 466,
	1327, 1328, 0, 1288, 0, 467, 468, 470, 1362, 1320,
	1363, 469, 471, 472, 1364, 473, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 483, 482,
	0, 485, 1356, 484, 1365, 486, 487, 1366, 0, 488,
	489, 490, 491, 492, 493, 496, 1311, 1310, 494, 495,
	497, 498, 0, 499, 500, 502, 505, 501, 503, 504,
	506, 519, 520, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 522, 0, 521, 1367, 523,
	524, 525, 526, 527, 534, 536, 537, 532, 533, 535,
	538, 539, 541, 529, 530, 531, 1368, 540, 528, 1250,
	320, 1369, 542, 543, 544, 545, 1273, 1321, 546, 1335,
	549, 550, 0, 0, 551, 0, 552, 1255, 0, 554,
	555, 556, 0, 0, 557, 558, 770, 1370, 559, 1371,
	1350, 560, 561, 1260, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 0, 572, 573, 772, 574, 575,
	576, 773, 577, 578, 579, 1351, 580, 775, 581, 582,
	0, 583, 584, 585, 0, 586, 587, 588, 589, 590,
	591, 592, 593, 1331, 594, 595, 597, 596, 598, 0,
	599, 0, 600, 601, 602, 0, 0, 0, 0, 0,
	603, 604, 606, 0, 607, 608, 609, 610, 605, 611,
	612, 613, 614, 615, 616, 0, 618, 619, 617, 620,
	621, 1372, 622, 623, 624, 625, 626, 1261, 627, 0,
	628, 629, 637, 638, 639, 630, 631, 633, 640, 632,
	641, 642, 643, 644, 646, 645, 0, 648, 649, 647,
	650, 651, 652, 1314, 653, 778, 654, 634, 635, 655,
	656, 1373, 657, 658, 659, 660, 661, 662, 663, 1329,
	0, 664, 0, 665, 666, 667, 668, 669, 670, 672,
	636, 673, 678, 679, 1376, 674, 675, 676, 677, 1352,
	681, 682, 683, 684, 0, 685, 686, 1247, 680, 671,
	0, 687, 688, 689, 690, 691, 692, 0, 693, 694,
	0, 695, 1341, 1342, 1343, 1344, 0, 707, 0, 696,
	698, 699, 700, 701, 1353, 702, 1354, 1271, 703, 704,
	705, 706, 697, 708, 709, 0, 1254, 710, 711, 712,
	714, 716, 717, 713, 715, 718, 1315, 719, 0, 0,
	720, 721, 722, 788, 1338, 1375, 0, 724, 725, 723,
	726, 727, 730, 728, 729, 791, 731, 732, 733, 0,
	0, 0, 0, 734, 735, 792, 736, 737, 738, 1251,
	0, 0, 0, 0, 0, 0, 1293, 1265, 1266, 1267,
	1263, 1264, 1276, 0, 1246, 0, 0, 0, 0, 0,
	0, 1244, 1245, 321, 322, 324, 323, 325, 326, 327,
	328, 1277, 329, 330, 0, 1275, 0, 0, 0, 1317,
	1281, 0, 0, 331, 0, 332, 333, 334, 1357, 335,
	336, 337, 338, 339, 340, 341, 740, 1330, 0, 342,
	1337, 343, 1336, 0, 1347, 344, 345, 346, 347, 348,
	349, 350, 1283, 1316, 1248, 351, 1377, 1378, 747, 0,
	352, 353, 1323, 0, 1304, 0, 354, 355, 356, 357,
	358, 359, 360, 361, 0, 0, 363, 364, 365, 362,
	366, 367, 0, 368, 0, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 377, 378, 1358, 379, 380, 381,
	1307, 1305, 1306, 1313, 1309, 1308, 1312, 382, 383, 384,
	385, 386, 1340, 387, 389, 1334, 1333, 1253, 392, 394,
	388, 390, 0, 393, 391, 395, 396, 0, 397, 398,
	399, 0, 0, 400, 1325, 402, 0, 403, 404, 405,
	0, 406, 407, 408, 0, 409, 410, 1259, 411, 412,
	413, 415, 417, 414, 416, 418, 419, 420, 421, 422,
	1348, 1349, 423, 1272, 318, 0, 0, 0, 0, 0,
	424, 425, 426, 1332, 0, 0, 0, 427, 0, 428,
	429, 430, 0, 431, 432, 0, 1359, 433, 434, 435,
	1345, 1346, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 0, 445, 1355, 0, 1282, 446, 0, 447, 448,
	449, 450, 451, 452, 453, 1318, 1319, 1322, 547, 1361,
	454, 455, 456, 0, 457, 458, 459, 460, 461, 0,
	0, 0, 319, 462, 463, 464, 0, 1360, 762, 465,
	548, 466, 1327, 1328, 0, 1288, 0, 467, 468, 470,
	1362, 1320, 1363, 469, 471, 472, 1364, 473, 0, 0,
	0, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	483, 482, 0, 485, 1356, 484, 1365, 486, 487, 1366,
	0, 488, 489, 490, 491, 492, 493, 496, 1311, 1310,
	494, 495, 497, 498, 0, 499, 500, 502, 505, 501,
	503, 504, 506, 519, 520, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 522, 0, 521,
	1367, 523, 524, 525, 526, 527, 534, 536, 537, 532,
	533, 535, 538, 539, 541, 529, 530, 531, 1368, 540,
	528, 1250, 4642, 1369, 542, 543, 544, 545, 1273, 1321,
	546, 1335, 549, 550, 0, 0, 551, 0, 552, 0,
	0, 554, 555, 556, 0, 0, 557, 558, 770, 1370,
	559, 1371, 1350, 560, 561, 1260, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 0, 572, 573, 772,
	574, 575, 576, 773, 577, 578, 579, 1351, 580, 775,
	581, 582, 0, 583, 584, 585, 0, 586, 587, 588,
	589, 590, 591, 592, 593, 1331, 594, 595, 597, 596,
	598, 0, 599, 0, 600, 601, 602, 0, 0, 0,
	0, 0, 603, 604, 606, 0, 607, 608, 609, 610,
	605, 611, 612, 613, 614, 615, 616, 0, 618, 619,
	617, 620, 621, 1372, 622, 623, 624, 625, 626, 1261,
	627, 0, 628, 629, 637, 638, 639, 630, 631, 633,
	640, 632, 641, 642, 643, 644, 646, 645, 0, 648,
	649, 647, 650, 651, 652, 1314, 653, 778, 654, 634,
	635, 655, 656, 1373, 657, 658, 659, 660, 661, 662,
	663, 1329, 0, 664, 0, 665, 666, 667, 668, 669,
	670, 672, 636, 673, 678, 679, 1376, 674, 675, 676,
	677, 1352, 681, 682, 683, 684, 0, 685, 686, 1247,
	680, 671, 0, 687, 688, 689, 690, 691, 692, 0,
	693, 694, 0, 695, 1341, 1342, 1343, 1344, 0, 707,
	0, 696, 698, 699, 700, 701, 1353, 702, 1354, 1271,
	703, 704, 705, 706, 697, 708, 709, 0, 1254, 710,
	711, 712, 714, 716, 717, 713, 715, 718, 1315, 719,
	0, 0, 720, 721, 722, 788, 1338, 1375, 0, 724,
	725, 723, 726, 727, 730, 728, 729, 791, 731, 732,
	733, 0, 0, 0, 0, 734, 735, 792, 736, 737,
	738, 1251, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1246, 0, 0, 0,
	0, 0, 0, 1244, 1245, 2177, 1293, 1265, 1266, 1267,
	1263, 1264, 1276, 1277, 0, 0, 0, 1275, 0, 0,
	0, 0, 0, 321, 322, 324, 323, 325, 326, 327,
	328, 0, 329, 330, 0, 0, 0, 0, 0, 1317,
	1281, 0, 0, 331, 0, 332, 333, 334, 1357, 335,
	336, 337, 338, 339, 340, 341, 740, 1330, 0, 342,
	1337, 343, 1336, 0, 1347, 344, 345, 346, 347, 348,
	349, 350, 1283, 1316, 1248, 351, 1377, 1378, 747, 0,
	352, 353, 1323, 0, 1304, 0, 354, 355, 356, 357,
	358, 359, 360, 361, 0, 0, 363, 364, 365, 362,
	366, 367, 0, 368, 0, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 377, 378, 1358, 379, 380, 381,
	1307, 1305, 1306, 1313, 1309, 1308, 1312, 382, 383, 384,
	385, 386, 1340, 387, 389, 1334, 1333, 1253, 392, 394,
	388, 390, 0, 393, 391, 395, 396, 0, 397, 398,
	399, 0, 0, 400, 1325, 402, 0, 403, 404, 405,
	0, 406, 407, 408, 0, 409, 410, 1259, 411, 412,
	413, 415, 417, 414, 416, 418, 419, 420, 421, 422,
	1348, 1349, 423, 1272, 318, 0, 0, 0, 0, 0,
	424, 425, 426, 1332, 0, 0, 0, 427, 0, 428,
	429, 430, 0, 431, 432, 0, 1359, 433, 434, 435,
	1345, 1346, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 0, 445, 1355, 0, 1282, 446, 0, 447, 448,
	449, 450, 451, 452, 453, 1318, 1319, 1322, 547, 1361,
	454, 455, 456, 0, 457, 458, 459, 460, 461, 0,
	0, 0, 319, 462, 463, 464, 0, 1360, 762, 465,
	548, 466, 1327, 1328, 0, 1288, 0, 467, 468, 470,
	1362, 1320, 1363, 469, 471, 472, 1364, 473, 0, 0,
	0, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	483, 482, 0, 485, 1356, 484, 1365, 486, 487, 1366,
	0, 488, 489, 490, 491, 492, 493, 496, 1311, 1310,
	494, 495, 497, 498, 0, 499, 500, 502, 505, 501,
	503, 504, 506, 519, 520, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 522, 0, 521,
	1367, 523, 524, 525, 526, 527, 534, 536, 537, 532,
	533, 535, 538, 539, 541, 529, 530, 531, 1368, 540,
	528, 1250, 320, 1369, 542, 543, 544, 545, 1273, 1321,
	546, 1335, 549, 550, 0, 0, 551, 0, 552, 0,
	0, 554, 555, 556, 0, 0, 557, 558, 770, 1370,
	559, 1371, 1350, 560, 561, 1260, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 0, 572, 573, 772,
	574, 575, 576, 773, 577, 578, 579, 1351, 580, 775,
	581, 582, 0, 583, 584, 585, 0, 586, 587, 588,
	589, 590, 591, 592, 593, 1331, 594, 595, 597, 596,
	598, 0, 599, 0, 600, 601, 602, 0, 0, 0,
	0, 0, 603, 604, 606, 0, 607, 608, 609, 610,
	605, 611, 612, 613, 614, 615, 616, 0, 618, 619,
	617, 620, 621, 1372, 622, 623, 624, 625, 626, 1261,
	627, 0, 628, 629, 637, 638, 639, 630, 631, 633,
	640, 632, 641, 642, 643, 644, 646, 645, 0, 648,
	649, 647, 650, 651, 652, 1314, 653, 778, 654, 634,
	635, 655, 656, 1373, 657, 658, 659, 660, 661, 662,
	663, 1329, 0, 664, 0, 665, 666, 667, 668, 669,
	670, 672, 636, 673, 678, 679, 1376, 674, 675, 676,
	677, 1352, 681, 682, 683, 684, 0, 685, 686, 1247,
	680, 671, 0, 687, 688, 689, 690, 691, 692, 0,
	693, 694, 0, 695, 1341, 1342, 1343, 1344, 0, 707,
	0, 696, 698, 699, 700, 701, 1353, 702, 1354, 1271,
	703, 704, 705, 706, 697, 708, 709, 0, 1254, 710,
	711, 712, 714, 716, 717, 713, 715, 718, 1315, 719,
	0, 0, 720, 721, 722, 788, 1338, 1375, 0, 724,
	725, 723, 726, 727, 730, 728, 729, 791, 731, 732,
	733, 0, 0, 0, 0, 734, 735, 792, 736, 737,
	738, 1251, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1246, 0, 0, 0,
	0, 0, 0, 1244, 1245, 2177, 1293, 1265, 1266, 1267,
	1263, 1264, 1276, 1277, 0, 0, 0, 1275, 0, 0,
	0, 0, 0, 321, 322, 324, 323, 325, 326, 327,
	328, 0, 329, 330, 0, 0, 0, 0, 0, 1317,
	1281, 0, 0, 331, 0, 332, 333, 334, 1357, 335,
	336, 337, 338, 339, 340, 341, 740, 1330, 0, 342,
	1337, 343, 1336, 0, 1347, 344, 345, 346, 347, 348,
	349, 350, 1283, 1316, 1248, 351, 1377, 1378, 747, 0,
	352, 353, 1323, 0, 1304, 0, 354, 355, 356, 357,
	358, 359, 360, 361, 0, 0, 363, 364, 365, 362,
	366, 367, 0, 368, 0, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 377, 378, 1358, 379, 380, 381,
	1307, 1305, 1306, 1313, 1309, 1308, 1312, 382, 383, 384,
	385, 386, 1340, 387, 389, 1334, 1333, 1253, 392, 394,
	388, 390, 0, 393, 391, 395, 396, 0, 397, 398,
	399, 0, 0, 400, 1325, 402, 0, 403, 404, 405,
	0, 406, 407, 408, 0, 409, 410, 1259, 411, 412,
	413, 415, 417, 414, 416, 418, 419, 420, 421, 422,
	1348, 1349, 423, 1272, 318, 0, 0, 0, 0, 0,
	424, 425, 426, 1332, 0, 0, 0, 427, 0, 428,
	429, 430, 0, 431, 432, 0, 1359, 433, 434, 435,
	1345, 1346, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 0, 445, 1355, 0, 1282, 446, 0, 447, 448,
	449, 450, 451, 452, 453, 1318, 1319, 1322, 547, 1361,
	454, 455, 456, 0, 457, 458, 459, 460, 461, 0,
	0, 0, 319, 462, 463, 464, 0, 1360, 762, 465,
	548, 466, 1327, 1328, 0, 1288, 0, 467, 468, 470,
	1362, 1320, 1363, 469, 471, 472, 1364, 473, 0, 0,
	0, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	483, 482, 0, 485, 1356, 484, 1365, 486, 487, 1366,
	0, 488, 489, 490, 491, 492, 493, 496, 1311, 1310,
	494, 495, 497, 498, 0, 499, 500, 502, 505, 501,
	503, 504, 506, 519, 520, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 522, 0, 521,
	1367, 523, 524, 525, 526, 527, 534, 536, 537, 532,
	533, 535, 538, 539, 541, 529, 530, 531, 1368, 540,
	528, 1250, 320, 1369, 542, 543, 544, 545, 1273, 1321,
	546, 1335, 549, 550, 0, 0, 551, 0, 552, 0,
	0, 554, 555, 556, 0, 0, 557, 558, 770, 1370,
	559, 1371, 1350, 560, 561, 1260, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 0, 572, 573, 772,
	574, 575, 576, 773, 577, 578, 579, 1351, 580, 775,
	581, 582, 0, 583, 584, 585, 0, 586, 587, 588,
	589, 590, 591, 592, 593, 1331, 594, 595, 597, 596,
	598, 0, 599, 0, 600, 601, 602, 0, 0, 0,
	0, 0, 603, 604, 606, 0, 607, 608, 609, 610,
	605, 611, 612, 613, 614, 615, 616, 0, 618, 619,
	617, 620, 621, 1372, 622, 623, 624, 625, 626, 1261,
	627, 0, 628, 629, 637, 638, 639, 630, 631, 633,
	640, 632, 641, 642, 643, 644, 646, 645, 0, 648,
	649, 647, 650, 651, 652, 1314, 653, 778, 654, 634,
	635, 655, 656, 1373, 657, 658, 659, 660, 661, 662,
	663, 1329, 0, 664, 0, 665, 666, 667, 668, 669,
	670, 672, 636, 673, 678, 679, 1376, 674, 675, 676,
	677, 1352, 681, 682, 683, 684, 0, 685, 686, 1247,
	680, 671, 0, 687, 688, 689, 690, 691, 692, 0,
	693, 694, 0, 695, 1341, 1342, 1343, 1344, 0, 707,
	0, 696, 698, 699, 700, 701, 1353, 702, 1354, 1271,
	703, 704, 705, 706, 697, 708, 709, 0, 1254, 710,
	711, 712, 714, 716, 717, 713, 715, 718, 1315, 719,
	0, 0, 720, 721, 722, 788, 1338, 1375, 4279, 724,
	725, 723, 726, 727, 730, 728, 729, 791, 731, 732,
	733, 0, 0, 0, 0, 734, 735, 792, 736, 737,
	738, 1251, 0, 0, 0, 0, 0, 0, 1293, 1265,
	1266, 1267, 1263, 1264, 1276, 0, 1246, 0, 0, 0,
	0, 0, 0, 1244, 1245, 321, 322, 324, 323, 325,
	326, 327, 328, 1277, 329, 330, 0, 1275, 0, 0,
	0, 1317, 1281, 0, 0, 331, 0, 332, 333, 334,
	1357, 335, 336, 337, 338, 339, 340, 341, 740, 1330,
	0, 342, 1337, 343, 1336, 0, 1347, 344, 345, 346,
	347, 348, 349, 350, 1283, 1316, 1248, 351, 1377, 1378,
	747, 0, 352, 353, 1323, 0, 1304, 0, 354, 355,
	356, 357, 358, 359, 360, 361, 0, 0, 363, 364,
	365, 362, 366, 367, 0, 368, 0, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 378, 1358, 379,
	380, 381, 1307, 1305, 1306, 1313, 1309, 1308, 1312, 382,
	383, 384, 385, 386, 1340, 387, 389, 1334, 1333, 1253,
	392, 394, 388, 390, 0, 393, 391, 395, 396, 0,
	397, 398, 399, 0, 0, 400, 1325, 402, 0, 403,
	404, 405, 0, 406, 407, 408, 0, 409, 410, 1259,
	411, 412, 413, 415, 417, 414, 416, 418, 419, 420,
	421, 422, 1348, 1349, 423, 1272, 318, 0, 0, 0,
	0, 0, 424, 425, 426, 1332, 0, 0, 0, 427,
	0, 428, 429, 430, 0, 431, 432, 3061, 1359, 433,
	434, 435, 1345, 1346, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 0, 445, 1355, 0, 1282, 446, 0,
	447, 448, 449, 450, 451, 452, 453, 1318, 1319, 1322,
	547, 1361, 454, 455, 456, 0, 457, 458, 459, 460,
	461, 0, 0, 0, 319, 462, 463, 464, 0, 1360,
	762, 465, 548, 466, 1327, 1328, 0, 1288, 0, 467,
	468, 470, 1362, 1320, 1363, 469, 471, 472, 1364, 473,
	0, 0, 0, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 483, 482, 0, 485, 1356, 484, 1365, 486,
	487, 1366, 0, 488, 489, 490, 491, 492, 493, 496,
	1311, 1310, 494, 495, 497, 498, 0, 499, 500, 502,
	505, 501, 503, 504, 506, 519, 520, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 522,
	0, 521, 1367, 523, 524, 525, 526, 527, 534, 536,
	537, 532, 533, 535, 538, 539, 541, 529, 530, 531,
	1368, 540, 528, 1250, 320, 1369, 542, 543, 544, 545,
	1273, 1321, 546, 1335, 549, 550, 0, 0, 551, 0,
	552, 0, 0, 554, 555, 556, 0, 0, 557, 558,
	770, 1370, 559, 1371, 1350, 560, 561, 1260, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 0, 572,
	573, 772, 574, 575, 576, 773, 577, 578, 579, 1351,
	580, 775, 581, 582, 0, 583, 584, 585, 0, 586,
	587, 588, 589, 590, 591, 592, 593, 1331, 594, 595,
	597, 596, 598, 0, 599, 0, 600, 601, 602, 0,
	0, 0, 0, 0, 603, 604, 606, 0, 607, 608,
	609, 610, 605, 611, 612, 613, 614, 615, 616, 0,
	618, 619, 617, 620, 621, 1372, 622, 623, 624, 625,
	626, 1261, 627, 0, 628, 629, 637, 638, 639, 630,
	631, 633, 640, 632, 641, 642, 643, 644, 646, 645,
	0, 648, 649, 647, 650, 651, 652, 1314, 653, 778,
	654, 634, 635, 655, 656, 1373, 657, 658, 659, 660,
	661, 662, 663, 1329, 0, 664, 0, 665, 666, 667,
	668, 669, 670, 672, 636, 673, 678, 679, 1376, 674,
	675, 676, 677, 1352, 681, 682, 683, 684, 0, 685,
	686, 1247, 680, 671, 0, 687, 688, 689, 690, 691,
	692, 0, 693, 694, 0, 695, 1341, 1342, 1343, 1344,
	0, 707, 0, 696, 698, 699, 700, 701, 1353, 702,
	1354, 1271, 703, 704, 705, 706, 697, 708, 709, 0,
	1254, 710, 711, 712, 714, 716, 717, 713, 715, 718,
	1315, 719, 0, 0, 720, 721, 722, 788, 1338, 1375,
	0, 724, 725, 723, 726, 727, 730, 728, 729, 791,
	731, 732, 733, 0, 0, 0, 0, 734, 735, 792,
	736, 737, 738, 1251, 0, 0, 0, 0, 0, 0,
	1293, 1265, 1266, 1267, 1263, 1264, 1276, 0, 1246, 0,
	0, 0, 0, 0, 0, 1244, 1245, 321, 322, 324,
	323, 325, 326, 327, 328, 1277, 329, 330, 0, 1275,
	0, 0, 0, 1317, 1281, 0, 0, 331, 0, 332,
	333, 334, 1357, 335, 336, 337, 338, 339, 340, 341,
	740, 1330, 0, 342, 1337, 343, 1336, 0, 1347, 344,
	345, 346, 347, 348, 349, 350, 1283, 1316, 1248, 351,
	1377, 1378, 747, 0, 352, 353, 1323, 0, 1304, 0,
	354, 355, 356, 357, 358, 359, 360, 361, 0, 0,
	363, 364, 365, 362, 366, 367, 0, 368, 0, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 378,
	1358, 379, 380, 381, 1307, 1305, 1306, 1313, 1309, 1308,
	1312, 382, 383, 384, 385, 386, 1340, 387, 389, 1334,
	1333, 1253, 392, 394, 388, 390, 0, 393, 391, 395,
	396, 0, 397, 398, 399, 0, 0, 400, 1325, 402,
	0, 403, 404, 405, 0, 406, 407, 408, 0, 409,
	410, 1259, 411, 412, 413, 415, 417, 414, 416, 418,
	419, 420, 421, 422, 1348, 1349, 423, 1272, 318, 0,
	0, 0, 0, 0, 424, 425, 426, 1332, 0, 0,
	0, 427, 0, 428, 429, 430, 0, 431, 432, 0,
	1359, 433, 434, 435, 1345, 1346, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 0, 445, 1355, 0, 1282,
	446, 0, 447, 448, 449, 450, 451, 452, 453, 1318,
	1319, 1322, 547, 1361, 454, 455, 456, 0, 457, 458,
	459, 460, 461, 0, 0, 0, 319, 462, 463, 464,
	0, 1360, 762, 465, 548, 466, 1327, 1328, 0, 1288,
	0, 467, 468, 470, 1362, 1320, 1363, 469, 471, 472,
	1364, 473, 0, 0, 0, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 483, 482, 0, 485, 1356, 484,
	1365, 486, 487, 1366, 0, 488, 489, 490, 491, 492,
	493, 496, 1311, 1310, 494, 495, 497, 498, 0, 499,
	500, 502, 505, 501, 503, 504, 506, 519, 520, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 522, 0, 521, 1367, 523, 524, 525, 526, 527,
	534, 536, 537, 532, 533, 535, 538, 539, 541, 529,
	530, 531, 1368, 540, 528, 1250, 320, 1369, 542, 543,
	544, 545, 1273, 1321, 546, 1335, 549, 550, 0, 0,
	551, 0, 552, 0, 0, 554, 555, 556, 0, 0,
	557, 558, 770, 1370, 559, 1371, 1350, 560, 561, 1260,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	0, 572, 573, 772, 574, 575, 576, 773, 577, 578,
	579, 1351, 580, 775, 581, 582, 0, 583, 584, 585,
	0, 586, 587, 588, 589, 590, 591, 592, 593, 1331,
	594, 595, 597, 596, 598, 0, 599, 0, 600, 601,
	602, 0, 0, 0, 0, 0, 603, 604, 606, 0,
	607, 608, 609, 610, 605, 611, 612, 613, 614, 615,
	616, 0, 618, 619, 617, 620, 621, 1372, 622, 623,
	624, 625, 626, 1261, 627, 0, 628, 629, 637, 638,
	639, 630, 631, 633, 640, 632, 641, 642, 643, 644,
	646, 645, 0, 648, 649, 647, 650, 651, 652, 1314,
	653, 778, 654, 634, 635, 655, 656, 1373, 657, 658,
	659, 660, 661, 662, 663, 1329, 0, 664, 0, 665,
	666, 667, 668, 669, 670, 672, 636, 673, 678, 679,
	1376, 674, 675, 676, 677, 1352, 681, 682, 683, 684,
	0, 685, 686, 1247, 680, 671, 0, 687, 688, 689,
	690, 691, 692, 0, 693, 694, 0, 695, 1341, 1342,
	1343, 1344, 0, 707, 0, 696, 698, 699, 700, 701,
	1353, 702, 1354, 1271, 703, 704, 705, 706, 697, 708,
	709, 0, 1254, 710, 711, 712, 714, 716, 717, 713,
	715, 718, 1315, 719, 0, 0, 720, 721, 722, 788,
	1338, 1375, 0, 724, 725, 723, 726, 727, 730, 728,
	729, 791, 731, 732, 733, 0, 0, 0, 0, 734,
	735, 792, 736, 737, 738, 1251, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1246, 0, 0, 0, 0, 0, 0, 1244, 1245, 0,
	0, 0, 0, 0, 0, 0, 0, 1277, 2104, 0,
	3066, 1275, 1293, 1265, 1266, 1267, 1263, 1264, 1276, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 321,
	322, 324, 323, 325, 326, 327, 328, 0, 329, 330,
	0, 0, 0, 0, 0, 1317, 1281, 0, 0, 331,
	0, 332, 333, 334, 1357, 335, 336, 337, 338, 339,
	340, 341, 740, 1330, 0, 342, 1337, 343, 1336, 0,
	1347, 344, 345, 346, 347, 348, 349, 350, 1283, 1316,
	1248, 351, 1377, 1378, 747, 0, 352, 353, 1323, 0,
	1304, 0, 354, 355, 356, 357, 358, 359, 360, 361,
	0, 0, 363, 364, 365, 362, 366, 367, 0, 368,
	0, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 378, 1358, 379, 380, 381, 1307, 1305, 1306, 1313,
	1309, 1308, 1312, 382, 383, 384, 385, 386, 1340, 387,
	389, 1334, 1333, 1253, 392, 394, 388, 390, 0, 393,
	391, 395, 396, 0, 397, 398, 399, 0, 0, 400,
	1325, 402, 0, 403, 404, 405, 0, 406, 407, 408,
	0, 409, 410, 1259, 411, 412, 413, 415, 417, 414,
	416, 418, 419, 420, 421, 422, 1348, 1349, 423, 1272,
	318, 0, 0, 0, 0, 0, 424, 425, 426, 1332,
	0, 0, 0, 427, 0, 428, 429, 430, 0, 431,
	432, 0, 1359, 433, 434, 435, 1345, 1346, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 0, 445, 1355,
	0, 1282, 446, 0, 447, 448, 449, 450, 451, 452,
	453, 1318, 1319, 1322, 547, 1361, 454, 455, 456, 0,
	457, 458, 459, 460, 461, 0, 0, 0, 319, 462,
	463, 464, 0, 1360, 762, 465, 548, 466, 1327, 1328,
	0, 1288, 0, 467, 468, 470, 1362, 1320, 1363, 469,
	471, 472, 1364, 473, 0, 0, 0, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 483, 482, 0, 485,
	1356, 484, 1365, 486, 487, 1366, 0, 488, 489, 490,
	491, 492, 493, 496, 1311, 1310, 494, 495, 497, 498,
	0, 499, 500, 502, 505, 501, 503, 504, 506, 519,
	520, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 522, 0, 521, 1367, 523, 524, 525,
	526, 527, 534, 536, 537, 532, 533, 535, 538, 539,
	541, 529, 530, 531, 1368, 540, 528, 1250, 320, 1369,
	542, 543, 544, 545, 1273, 1321, 546, 1335, 549, 550,
	0, 0, 551, 0, 552, 0, 0, 554, 555, 556,
	0, 0, 557, 558, 770, 1370, 559, 1371, 1350, 560,
	561, 1260, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 0, 572, 573, 772, 574, 575, 576, 773,
	577, 578, 579, 1351, 580, 775, 581, 582, 0, 583,
	584, 585, 0, 586, 587, 588, 589, 590, 591, 592,
	593, 1331, 594, 595, 597, 596, 598, 0, 599, 0,
	600, 601, 602, 0, 0, 0, 0, 0, 603, 604,
	606, 0, 607, 608, 609, 610, 605, 611, 612, 613,
	614, 615, 616, 0, 618, 619, 617, 620, 621, 1372,
	622, 623, 624, 625, 626, 1261, 627, 0, 628, 629,
	637, 638, 639, 630, 631, 633, 640, 632, 641, 642,
	643, 644, 646, 645, 0, 648, 649, 647, 650, 651,
	652, 1314, 653, 778, 654, 634, 635, 655, 656, 1373,
	657, 658, 659, 660, 661, 662, 663, 1329, 0, 664,
	0, 665, 666, 667, 668, 669, 670, 672, 636, 673,
	678, 679, 1376, 674, 675, 676, 677, 1352, 681, 682,
	683, 684, 0, 685, 686, 1247, 680, 671, 0, 687,
	688, 689, 690, 691, 692, 0, 693, 694, 0, 695,
	1341, 1342, 1343, 1344, 0, 707, 0, 696, 698, 699,
	700, 701, 1353, 702, 1354, 1271, 703, 704, 705, 706,
	697, 708, 709, 0, 1254, 710, 711, 712, 714, 716,
	717, 713, 715, 718, 1315, 719, 0, 0, 720, 721,
	722, 788, 1338, 1375, 0, 724, 725, 723, 726, 727,
	730, 728, 729, 791, 731, 732, 733, 0, 0, 0,
	0, 734, 735, 792, 736, 737, 738, 1251, 0, 0,
	0, 0, 3064, 0, 1293, 1265, 1266, 1267, 1263, 1264,
	1276, 0, 1246, 0, 0, 0, 0, 0, 0, 1244,
	1245, 321, 322, 324, 323, 325, 326, 327, 328, 1277,
	329, 330, 0, 1275, 0, 0, 0, 1317, 1281, 0,
	0, 331, 0, 332, 333, 334, 1357, 335, 336, 337,
	338, 339, 340, 341, 740, 1330, 0, 342, 1337, 343,
	1336, 0, 1347, 344, 345, 346, 347, 348, 349, 350,
	1283, 1316, 1248, 351, 1377, 1378, 747, 0, 352, 353,
	1323, 0, 1304, 0, 354, 355, 356, 357, 358, 359,
	360, 361, 0, 0, 363, 364, 365, 362, 366, 367,
	0, 368, 0, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 378, 1358, 379, 380, 381, 1307, 1305,
	1306, 1313, 1309, 1308, 1312, 382, 383, 384, 385, 386,
	1340, 387, 389, 1334, 1333, 1253, 392, 394, 388, 390,
	0, 393, 391, 395, 396, 0, 397, 398, 399, 0,
	0, 400, 1325, 402, 0, 403, 404, 405, 0, 406,
	407, 408, 0, 409, 410, 1259, 411, 412, 413, 415,
	417, 414, 416, 418, 419, 420, 421, 422, 1348, 1349,
	423, 1272, 318, 0, 0, 0, 0, 0, 424, 425,
	426, 1332, 0, 0, 0, 427, 0, 428, 429, 430,
	0, 431, 432, 0, 1359, 433, 434, 435, 1345, 1346,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 0,
	445, 1355, 0, 1282, 446, 0, 447, 448, 449, 450,
	451, 452, 453, 1318, 1319, 1322, 547, 1361, 454, 455,
	456, 0, 457, 458, 459, 460, 461, 0, 0, 0,
	319, 462, 463, 464, 0, 1360, 762, 465, 548, 466,
	1327, 1328, 0, 1288, 0, 467, 468, 470, 1362, 1320,
	1363, 469, 471, 472, 1364, 473, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 483, 482,
	0, 485, 1356, 484, 1365, 486, 487, 1366, 0, 488,
	489, 490, 491, 492, 493, 496, 1311, 1310, 494, 495,
	497, 498, 0, 499, 500, 502, 505, 501, 503, 504,
	506, 519, 520, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 522, 0, 521, 1367, 523,
	524, 525, 526, 527, 534, 536, 537, 532, 533, 535,
	538, 539, 541, 529, 530, 531, 1368, 540, 528, 1250,
	320, 1369, 542, 543, 544, 545, 1273, 1321, 546, 1335,
	549, 550, 0, 0, 551, 0, 552, 0, 0, 554,
	555, 556, 0, 0, 557, 558, 770, 1370, 559, 1371,
	1350, 560, 561, 1260, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 0, 572, 573, 772, 574, 575,
	576, 773, 577, 578, 579, 1351, 580, 775, 581, 582,
	0, 583, 584, 585, 0, 586, 587, 588, 589, 590,
	591, 592, 593, 1331, 594, 595, 597, 596, 598, 0,
	599, 0, 600, 601, 602, 0, 0, 0, 0, 0,
	603, 604, 606, 0, 607, 608, 609, 610, 605, 611,
	612, 613, 614, 615, 616, 0, 618, 619, 617, 620,
	621, 1372, 622, 623, 624, 625, 626, 1261, 627, 0,
	628, 629, 637, 638, 639, 630, 631, 633, 640, 632,
	641, 642, 643, 644, 646, 645, 0, 648, 649, 647,
	650, 651, 652, 1314, 653, 778, 654, 634, 635, 655,
	656, 1373, 657, 658, 659, 660, 661, 662, 663, 1329,
	0, 664, 0, 665, 666, 667, 668, 669, 670, 672,
	636, 673, 678, 679, 1376, 674, 675, 676, 677, 1352,
	681, 682, 683, 684, 0, 685, 686, 1247, 680, 671,
	0, 687, 688, 689, 690, 691, 692, 0, 693, 694,
	0, 695, 1341, 1342, 1343, 1344, 0, 707, 0, 696,
	698, 699, 700, 701, 1353, 702, 1354, 1271, 703, 704,
	705, 706, 697, 708, 709, 0, 1254, 710, 711, 712,
	714, 716, 717, 713, 715, 718, 1315, 719, 0, 0,
	720, 721, 722, 788, 1338, 1375, 0, 724, 725, 723,
	726, 727, 730, 728, 729, 791, 731, 732, 733, 0,
	0, 0, 0, 734, 735, 792, 736, 737, 738, 1251,
	0, 0, 0, 0, 3052, 0, 1293, 1265, 1266, 1267,
	1263, 1264, 1276, 0, 1246, 0, 0, 0, 0, 0,
	0, 1244, 1245, 321, 322, 324, 323, 325, 326, 327,
	328, 1277, 329, 330, 0, 1275, 0, 0, 0, 1317,
	1281, 0, 0, 331, 0, 332, 333, 334, 1357, 335,
	336, 337, 338, 339, 340, 341, 740, 1330, 0, 342,
	1337, 343, 1336, 0, 1347, 344, 345, 346, 347, 348,
	349, 350, 1283, 1316, 1248, 351, 1377, 1378, 747, 0,
	352, 353, 1323, 0, 1304, 0, 354, 355, 356, 357,
	358, 359, 360, 361, 0, 0, 363, 364, 365, 362,
	366, 367, 0, 368, 0, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 377, 378, 1358, 379, 380, 381,
	1307, 1305, 1306, 1313, 1309, 1308, 1312, 382, 383, 384,
	385, 386, 1340, 387, 389, 1334, 1333, 1253, 392, 394,
	388, 390, 0, 393, 391, 395, 396, 0, 397, 398,
	399, 0, 0, 400, 1325, 402, 0, 403, 404, 405,
	0, 406, 407, 408, 0, 409, 410, 1259, 411, 412,
	413, 415, 417, 414, 416, 418, 419, 420, 421, 422,
	1348, 1349, 423, 1272, 318, 0, 0, 0, 0, 0,
	424, 425, 426, 1332, 0, 0, 0, 427, 0, 428,
	429, 430, 0, 431, 432, 0, 1359, 433, 434, 435,
	1345, 1346, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 0, 445, 1355, 0, 1282, 446, 0, 447, 448,
	449, 450, 451, 452, 453, 1318, 1319, 1322, 547, 1361,
	454, 455, 456, 0, 457, 458, 459, 460, 461, 0,
	0, 0, 319, 462, 463, 464, 0, 1360, 762, 465,
	548, 466, 1327, 1328, 0, 1288, 0, 467, 468, 470,
	1362, 1320, 1363, 469, 471, 472, 1364, 473, 0, 0,
	0, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	483, 482, 0, 485, 1356, 484, 1365, 486, 487, 1366,
	0, 488, 489, 490, 491, 492, 493, 496, 1311, 1310,
	494, 495, 497, 498, 0, 499, 500, 502, 505, 501,
	503, 504, 506, 519, 520, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 522, 0, 521,
	1367, 523, 524, 525, 526, 527, 534, 536, 537, 532,
	533, 535, 538, 539, 541, 529, 530, 531, 1368, 540,
	528, 1250, 320, 1369, 542, 543, 544, 545, 1273, 1321,
	546, 1335, 549, 550, 0, 0, 551, 0, 552, 0,
	0, 554, 555, 556, 0, 0, 557, 558, 770, 1370,
	559, 1371, 1350, 560, 561, 1260, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 0, 572, 573, 772,
	574, 575, 576, 773, 577, 578, 579, 1351, 580, 775,
	581, 582, 0, 583, 584, 585, 0, 586, 587, 588,
	589, 590, 591, 592, 593, 1331, 594, 595, 597, 596,
	598, 0, 599, 0, 600, 601, 602, 0, 0, 0,
	0, 0, 603, 604, 606, 0, 607, 608, 609, 610,
	605, 611, 612, 613, 614, 615, 616, 0, 618, 619,
	617, 620, 621, 1372, 622, 623, 624, 625, 626, 1261,
	627, 0, 628, 629, 637, 638, 639, 630, 631, 633,
	640, 632, 641, 642, 643, 644, 646, 645, 0, 648,
	649, 647, 650, 651, 652, 1314, 653, 778, 654, 634,
	635, 655, 656, 1373, 657, 658, 659, 660, 661, 662,
	663, 1329, 0, 664, 0, 665, 666, 667, 668, 669,
	670, 672, 636, 673, 678, 679, 1376, 674, 675, 676,
	677, 1352, 681, 682, 683, 684, 0, 685, 686, 1247,
	680, 671, 0, 687, 688, 689, 690, 691, 692, 0,
	693, 694, 0, 695, 1341, 1342, 1343, 1344, 0, 707,
	0, 696, 698, 699, 700, 701, 1353, 702, 1354, 1271,
	703, 704, 705, 706, 697, 708, 709, 0, 1254, 710,
	711, 712, 714, 716, 717, 713, 715, 718, 1315, 719,
	0, 0, 720, 721, 722, 788, 1338, 1375, 0, 724,
	725, 723, 726, 727, 730, 728, 729, 791, 731, 732,
	733, 0, 0, 0, 0, 734, 735, 792, 736, 737,
	738, 1251, 0, 0, 0, 0, 3041, 0, 1293, 1265,
	1266, 1267, 1263, 1264, 1276, 0, 1246, 0, 0, 0,
	0, 0, 0, 1244, 1245, 321, 322, 324, 323, 325,
	326, 327, 328, 1277, 329, 330, 0, 1275, 0, 0,
	0, 1317, 1281, 0, 0, 331, 0, 332, 333, 334,
	1357, 335, 336, 337, 338, 339, 340, 341, 740, 1330,
	0, 342, 1337, 343, 1336, 0, 1347, 344, 345, 346,
	347, 348, 349, 350, 1283, 1316, 1248, 351, 1377, 1378,
	747, 0, 352, 353, 1323, 0, 1304, 0, 354, 355,
	356, 357, 358, 359, 360, 361, 0, 0, 363, 364,
	365, 362, 366, 367, 0, 368, 0, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 378, 1358, 379,
	380, 381, 1307, 1305, 1306, 1313, 1309, 1308, 1312, 382,
	383, 384, 385, 386, 1340, 387, 389, 1334, 1333, 1253,
	392, 394, 388, 390, 0, 393, 391, 395, 396, 0,
	397, 398, 399, 0, 0, 400, 1325, 402, 0, 403,
	404, 405, 0, 406, 407, 408, 0, 409, 410, 1259,
	411, 412, 413, 415, 417, 414, 416, 418, 419, 420,
	421, 422, 1348, 1349, 423, 1272, 318, 0, 0, 0,
	0, 0, 424, 425, 426, 1332, 0, 0, 0, 427,
	0, 428, 429, 430, 0, 431, 432, 0, 1359, 433,
	434, 435, 1345, 1346, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 0, 445, 1355, 0, 1282, 446, 0,
	447, 448, 449, 450, 451, 452, 453, 1318, 1319, 1322,
	547, 1361, 454, 455, 456, 0, 457, 458, 459, 460,
	461, 0, 0, 0, 319, 462, 463, 464, 0, 1360,
	762, 465, 548, 466, 1327, 1328, 0, 1288, 0, 467,
	468, 470, 1362, 1320, 1363, 469, 471, 472, 1364, 473,
	0, 0, 0, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 483, 482, 0, 485, 1356, 484, 1365, 486,
	487, 1366, 0, 488, 489, 490, 491, 492, 493, 496,
	1311, 1310, 494, 495, 497, 498, 0, 499, 500, 502,
	505, 501, 503, 504, 506, 519, 520, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 522,
	0, 521, 1367, 523, 524, 525, 526, 527, 534, 536,
	537, 532, 533, 535, 538, 539, 541, 529, 530, 531,
	1368, 540, 528, 1250, 320, 1369, 542, 543, 544, 545,
	1273, 1321, 546, 1335, 549, 550, 0, 0, 551, 0,
	552, 0, 0, 554, 555, 556, 0, 0, 557, 558,
	770, 1370, 559, 1371, 1350, 560, 561, 1260, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 0, 572,
	573, 772, 574, 575, 576, 773, 577, 578, 579, 1351,
	580, 775, 581, 582, 0, 583, 584, 585, 0, 586,
	587, 588, 589, 590, 591, 592, 593, 1331, 594, 595,
	597, 596, 598, 0, 599, 0, 600, 601, 602, 0,
	0, 0, 0, 0, 603, 604, 606, 0, 607, 608,
	609, 610, 605, 611, 612, 613, 614, 615, 616, 0,
	618, 619, 617, 620, 621, 1372, 622, 623, 624, 625,
	626, 1261, 627, 0, 628, 629, 637, 638, 639, 630,
	631, 633, 640, 632, 641, 642, 643, 644, 646, 645,
	0, 648, 649, 647, 650, 651, 652, 1314, 653, 778,
	654, 634, 635, 655, 656, 1373, 657, 658, 659, 660,
	661, 662, 663, 1329, 0, 664, 0, 665, 666, 667,
	668, 669, 670, 672, 636, 673, 678, 679, 1376, 674,
	675, 676, 677, 1352, 681, 682, 683, 684, 0, 685,
	686, 1247, 680, 671, 0, 687, 688, 689, 690, 691,
	692, 0, 693, 694, 0, 695, 1341, 1342, 1343, 1344,
	0, 707, 0, 696, 698, 699, 700, 701, 1353, 702,
	1354, 1271, 703, 704, 705, 706, 697, 708, 709, 0,
	1254, 710, 711, 712, 714, 716, 717, 713, 715, 718,
	1315, 719, 0, 0, 720, 721, 722, 788, 1338, 1375,
	0, 724, 725, 723, 726, 727, 730, 728, 729, 791,
	731, 732, 733, 0, 0, 0, 0, 734, 735, 792,
	736, 737, 738, 1251, 0, 0, 0, 0, 3039, 0,
	3030, 3037, 1266, 1267, 1263, 1264, 1276, 0, 1246, 0,
	0, 0, 0, 0, 0, 1244, 1245, 321, 322, 324,
	323, 325, 326, 327, 328, 1277, 329, 330, 0, 1275,
	0, 0, 0, 1317, 1281, 0, 0, 331, 0, 332,
	333, 334, 1357, 335, 336, 337, 338, 339, 340, 341,
	740, 1330, 0, 342, 1337, 343, 1336, 0, 1347, 344,
	345, 346, 347, 348, 349, 350, 1283, 1316, 1248, 351,
	1377, 1378, 747, 0, 352, 353, 1323, 0, 1304, 0,
	354, 355, 356, 357, 358, 359, 360, 361, 0, 0,
	363, 364, 365, 362, 366, 367, 0, 368, 0, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 378,
	1358, 379, 380, 381, 1307, 1305, 1306, 1313, 1309, 1308,
	1312, 382, 383, 384, 385, 386, 1340, 3033, 389, 1334,
	1333, 1253, 392, 394, 388, 390, 0, 393, 391, 395,
	396, 0, 397, 398, 399, 0, 0, 400, 1325, 402,
	0, 403, 404, 405, 0, 406, 407, 408, 0, 409,
	410, 1259, 411, 412, 413, 415, 417, 414, 416, 418,
	419, 420, 421, 422, 1348, 1349, 423, 1272, 318, 0,
	0, 0, 0, 0, 424, 425, 426, 1332, 0, 0,
	0, 427, 0, 428, 429, 430, 0, 431, 432, 0,
	1359, 433, 434, 435, 1345, 1346, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 0, 445, 1355, 0, 1282,
	446, 0, 447, 448, 449, 450, 451, 3034, 453, 1318,
	1319, 1322, 547, 1361, 454, 455, 456, 0, 457, 458,
	459, 460, 461, 0, 0, 0, 319, 462, 463, 464,
	0, 1360, 762, 465, 548, 466, 1327, 1328, 0, 1288,
	0, 467, 468, 470, 1362, 1320, 1363, 469, 471, 472,
	1364, 473, 0, 0, 0, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 483, 482, 0, 485, 1356, 484,
	1365, 486, 487, 1366, 0, 488, 489, 490, 491, 492,
	493, 496, 1311, 1310, 494, 495, 497, 498, 0, 499,
	500, 502, 505, 501, 503, 3035, 506, 3032, 520, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 522, 0, 521, 1367, 523, 524, 525, 526, 527,
	534, 536, 537, 532, 533, 535, 538, 539, 541, 529,
	530, 531, 1368, 540, 528, 1250, 320, 1369, 542, 543,
	544, 545, 1273, 1321, 546, 1335, 549, 550, 0, 0,
	551, 0, 552, 0, 0, 554, 555, 556, 0, 0,
	557, 558, 770, 1370, 559, 1371, 1350, 560, 561, 1260,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	0, 572, 573, 772, 574, 575, 576, 773, 577, 578,
	579, 1351, 580, 775, 581, 582, 0, 583, 584, 585,
	0, 586, 587, 588, 589, 590, 591, 592, 593, 1331,
	594, 595, 597, 596, 598, 0, 599, 0, 600, 601,
	602, 0, 0, 0, 0, 0, 603, 604, 606, 0,
	607, 608, 609, 610, 605, 611, 612, 613, 614, 615,
	616, 0, 618, 619, 617, 620, 621, 1372, 622, 623,
	624, 625, 626, 1261, 627, 0, 628, 629, 637, 638,
	639, 630, 631, 633, 640, 632, 641, 642, 643, 3036,
	646, 645, 0, 648, 649, 647, 650, 651, 652, 1314,
	653, 778, 654, 634, 635, 655, 656, 1373, 657, 658,
	659, 660, 661, 662, 663, 1329, 0, 664, 0, 665,
	666, 667, 668, 669, 670, 672, 636, 673, 678, 679,
	1376, 674, 675, 676, 677, 1352, 681, 682, 683, 684,
	0, 685, 686, 1247, 680, 671, 0, 687, 688, 689,
	690, 691, 692, 0, 693, 694, 0, 695, 1341, 1342,
	1343, 1344, 0, 707, 0, 696, 698, 699, 700, 701,
	1353, 702, 1354, 1271, 703, 704, 705, 706, 697, 708,
	709, 0, 1254, 710, 711, 712, 714, 716, 717, 713,
	715, 718, 1315, 719, 0, 0, 720, 721, 722, 788,
	1338, 1375, 0, 724, 725, 723, 726, 727, 730, 728,
	729, 791, 731, 732, 733, 0, 0, 0, 0, 734,
	735, 792, 736, 3031, 738, 1251, 0, 0, 0, 0,
	3027, 0, 3030, 3037, 1266, 1267, 1263, 1264, 1276, 0,
	1246, 0, 0, 0, 0, 0, 0, 1244, 1245, 321,
	322, 324, 323, 325, 326, 327, 328, 1277, 329, 330,
	0, 1275, 0, 0, 0, 1317, 1281, 0, 0, 331,
	0, 332, 333, 334, 1357, 335, 336, 337, 338, 339,
	340, 341, 740, 1330, 0, 342, 1337, 343, 1336, 0,
	1347, 344, 345, 346, 347, 348, 349, 350, 1283, 1316,
	1248, 351, 1377, 1378, 747, 0, 352, 353, 1323, 0,
	1304, 0, 354, 355, 356, 357, 358, 359, 360, 361,
	0, 0, 363, 364, 365, 362, 366, 367, 0, 368,
	0, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 378, 1358, 379, 380, 381, 1307, 1305, 1306, 1313,
	1309, 1308, 1312, 382, 383, 384, 385, 386, 1340, 3033,
	389, 1334, 1333, 1253, 392, 394, 388, 390, 0, 393,
	391, 395, 396, 0, 397, 398, 399, 0, 0, 400,
	1325, 402, 0, 403, 404, 405, 0, 406, 407, 408,
	0, 409, 410, 1259, 411, 412, 413, 415, 417, 414,
	416, 418, 419, 420, 421, 422, 1348, 1349, 423, 1272,
	318, 0, 0, 0, 0, 0, 424, 425, 426, 1332,
	0, 0, 0, 427, 0, 428, 429, 430, 0, 431,
	432, 0, 1359, 433, 434, 435, 1345, 1346, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 0, 445, 1355,
	0, 1282, 446, 0, 447, 448, 449, 450, 451, 3034,
	453, 1318, 1319, 1322, 547, 1361, 454, 455, 456, 0,
	457, 458, 459, 460, 461, 0, 0, 0, 319, 462,
	463, 464, 0, 1360, 762, 465, 548, 466, 1327, 1328,
	0, 1288, 0, 467, 468, 470, 1362, 1320, 1363, 469,
	471, 472, 1364, 473, 0, 0, 0, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 483, 482, 0, 485,
	1356, 484, 1365, 486, 487, 1366, 0, 488, 489, 490,
	491, 492, 493, 496, 1311, 1310, 494, 495, 497, 498,
	0, 499, 500, 502, 505, 501, 503, 3035, 506, 3032,
	520, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 522, 0, 521, 1367, 523, 524, 525,
	526, 527, 534, 536, 537, 532, 533, 535, 538, 539,
	541, 529, 530, 531, 1368, 540, 528, 1250, 320, 1369,
	542, 543, 544, 545, 1273, 1321, 546, 1335, 549, 550,
	0, 0, 551, 0, 552, 0, 0, 554, 555, 556,
	0, 0, 557, 558, 770, 1370, 559, 1371, 1350, 560,
	561, 1260, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 0, 572, 573, 772, 574, 575, 576, 773,
	577, 578, 579, 1351, 580, 775, 581, 582, 0, 583,
	584, 585, 0, 586, 587, 588, 589, 590, 591, 592,
	593, 1331, 594, 595, 597, 596, 598, 0, 599, 0,
	600, 601, 602, 0, 0, 0, 0, 0, 603, 604,
	606, 0, 607, 608, 609, 610, 605, 611, 612, 613,
	614, 615, 616, 0, 618, 619, 617, 620, 621, 1372,
	622, 623, 624, 625, 626, 1261, 627, 0, 628, 629,
	637, 638, 639, 630, 631, 633, 640, 632, 641, 642,
	643, 3036, 646, 645, 0, 648, 649, 647, 650, 651,
	652, 1314, 653, 778, 654, 634, 635, 655, 656, 1373,
	657, 658, 659, 660, 661, 662, 663, 1329, 0, 664,
	0, 665, 666, 667, 668, 669, 670, 672, 636, 673,
	678, 679, 1376, 674, 675, 676, 677, 1352, 681, 682,
	683, 684, 0, 685, 686, 1247, 680, 671, 0, 687,
	688, 689, 690, 691, 692, 0, 693, 694, 0, 695,
	1341, 1342, 1343, 1344, 0, 707, 0, 696, 698, 699,
	700, 701, 1353, 702, 1354, 1271, 703, 704, 705, 706,
	697, 708, 709, 0, 1254, 710, 711, 712, 714, 716,
	717, 713, 715, 718, 1315, 719, 0, 0, 720, 721,
	722, 788, 1338, 1375, 0, 724, 725, 723, 726, 727,
	730, 728, 729, 791, 731, 732, 733, 0, 0, 0,
	0, 734, 735, 792, 736, 3031, 738, 1251, 0, 0,
	0, 0, 0, 0, 1293, 1265, 1266, 1267, 1263, 1264,
	1276, 0, 1246, 0, 0, 0, 0, 0, 0, 1244,
	1245, 321, 322, 324, 323, 325, 326, 327, 328, 1277,
	329, 330, 0, 1275, 0, 0, 0, 1317, 1281, 0,
	0, 331, 0, 332, 333, 334, 1357, 335, 336, 337,
	338, 339, 340, 341, 740, 1330, 0, 342, 1337, 343,
	1336, 0, 1347, 344, 345, 346, 347, 348, 349, 350,
	1283, 1316, 1248, 351, 1377, 1378, 747, 0, 352, 353,
	1323, 0, 1304, 0, 354, 355, 356, 357, 358, 359,
	360, 361, 0, 0, 363, 364, 365, 362, 366, 367,
	0, 368, 0, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 378, 1358, 379, 380, 381, 1307, 1305,
	1306, 1313, 1309, 1308, 1312, 382, 383, 384, 385, 386,
	1340, 387, 389, 1334, 1333, 1253, 392, 394, 388, 390,
	0, 393, 391, 395, 396, 0, 397, 398, 399, 0,
	0, 400, 1325, 402, 0, 403, 404, 405, 0, 406,
	407, 408, 0, 409, 410, 1259, 411, 412, 413, 415,
	417, 414, 416, 418, 419, 420, 421, 422, 1348, 1349,
	423, 1272, 318, 0, 0, 0, 0, 0, 424, 425,
	426, 1332, 0, 0, 0, 427, 0, 428, 429, 430,
	0, 431, 432, 0, 1359, 433, 434, 435, 1345, 1346,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 0,
	445, 1355, 0, 1282, 446, 0, 447, 448, 449, 450,
	451, 452, 453, 1318, 1319, 1322, 547, 1361, 454, 455,
	456, 0, 457, 458, 459, 460, 461, 0, 0, 0,
	319, 462, 463, 464, 0, 1360, 762, 465, 548, 466,
	1327, 1328, 0, 1288, 0, 467, 468, 470, 1362, 1320,
	1363, 469, 471, 472, 1364, 473, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 483, 482,
	0, 485, 1356, 484, 1365, 486, 487, 1366, 0, 488,
	489, 490, 491, 492, 493, 496, 1311, 1310, 494, 495,
	497, 498, 0, 499, 500, 502, 505, 501, 503, 504,
	506, 519, 520, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 522, 0, 521, 1367, 523,
	524, 525, 526, 527, 534, 536, 537, 532, 533, 535,
	538, 539, 541, 529, 530, 531, 1368, 540, 528, 1250,
	320, 1369, 542, 543, 544, 545, 1273, 1321, 546, 1335,
	549, 550, 0, 0, 551, 0, 552, 0, 0, 554,
	555, 556, 0, 0, 557, 558, 770, 1370, 559, 1371,
	1350, 560, 561, 1260, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 0, 572, 573, 772, 574, 575,
	576, 773, 577, 578, 579, 1351, 580, 775, 581, 582,
	0, 583, 584, 585, 0, 586, 587, 588, 589, 590,
	591, 592, 593, 1331, 594, 595, 597, 596, 598, 0,
	599, 0, 600, 601, 602, 0, 0, 0, 0, 0,
	603, 604, 606, 0, 607, 608, 609, 610, 605, 611,
	612, 613, 614, 615, 616, 0, 618, 619, 617, 620,
	621, 1372, 622, 623, 624, 625, 626, 1261, 627, 0,
	628, 629, 637, 638, 639, 630, 631, 633, 640, 632,
	641, 642, 643, 644, 646, 645, 0, 648, 649, 647,
	650, 651, 652, 1314, 653, 778, 654, 634, 635, 655,
	656, 1373, 657, 658, 659, 660, 661, 662, 663, 1329,
	0, 664, 0, 665, 666, 667, 668, 669, 670, 672,
	636, 673, 678, 679, 1376, 674, 675, 676, 677, 1352,
	681, 682, 683, 684, 0, 685, 686, 1247, 680, 671,
	0, 687, 688, 689, 690, 691, 692, 0, 693, 694,
	0, 695, 1341, 1342, 1343, 1344, 0, 707, 0, 696,
	698, 699, 700, 701, 1353, 702, 1354, 1271, 703, 704,
	705, 706, 697, 708, 709, 0, 1254, 710, 711, 712,
	714, 716, 717, 713, 715, 718, 1315, 719, 0, 0,
	720, 721, 722, 788, 1338, 1375, 0, 724, 725, 723,
	726, 727, 730, 728, 729, 791, 731, 732, 733, 0,
	0, 0, 0, 734, 735, 792, 736, 737, 738, 1251,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1246, 0, 0, 0, 0, 0,
	0, 1244, 1245, 0, 0, 0, 0, 0, 0, 2112,
	0, 1277, 0, 0, 0, 1275, 1293, 1265, 1266, 1267,
	1263, 1264, 1276, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 321, 322, 324, 323, 325, 326, 327,
	328, 2780, 329, 330, 0, 0, 0, 0, 0, 1317,
	1281, 0, 0, 331, 0, 332, 333, 334, 1357, 335,
	336, 337, 338, 339, 340, 341, 740, 1330, 0, 342,
	1337, 343, 1336, 0, 1347, 344, 345, 346, 347, 348,
	349, 350, 1283, 1316, 1248, 351, 1377, 1378, 747, 0,
	352, 353, 1323, 0, 1304, 0, 354, 355, 356, 357,
	358, 359, 360, 361, 0, 0, 363, 364, 365, 362,
	366, 367, 0, 368, 0, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 377, 378, 1358, 379, 380, 381,
	1307, 1305, 1306, 1313, 1309, 1308, 1312, 382, 383, 384,
	385, 386, 1340, 387, 389, 1334, 1333, 1253, 392, 394,
	388, 390, 0, 393, 391, 395, 396, 0, 397, 398,
	399, 0, 0, 400, 1325, 402, 0, 403, 404, 405,
	0, 406, 407, 408, 0, 409, 410, 1259, 411, 412,
	413, 415, 417, 414, 416, 418, 419, 420, 421, 422,
	1348, 1349, 423, 1272, 318, 0, 0, 0, 0, 0,
	424, 425, 426, 1332, 0, 0, 0, 427, 0, 428,
	429, 430, 0, 431, 432, 0, 1359, 433, 434, 435,
	1345, 1346, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 0, 445, 1355, 0, 1282, 446, 0, 447, 448,
	449, 450, 451, 452, 453, 1318, 1319, 1322, 547, 1361,
	454, 455, 456, 0, 457, 458, 459, 460, 461, 0,
	0, 0, 319, 462, 463, 464, 0, 1360, 762, 465,
	548, 466, 1327, 1328, 0, 1288, 0, 467, 468, 470,
	1362, 1320, 1363, 469, 471, 472, 1364, 473, 0, 0,
	0, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	483, 482, 0, 485, 1356, 484, 1365, 486, 487, 1366,
	0, 488, 489, 490, 491, 492, 493, 496, 1311, 1310,
	494, 495, 497, 498, 0, 499, 500, 502, 505, 501,
	503, 504, 506, 519, 520, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 522, 0, 521,
	1367, 523, 524, 525, 526, 527, 534, 536, 537, 532,
	533, 535, 538, 539, 541, 529, 530, 531, 1368, 540,
	528, 1250, 320, 1369, 542, 543, 544, 545, 1273, 1321,
	546, 1335, 549, 550, 0, 0, 551, 0, 552, 0,
	0, 554, 555, 556, 0, 0, 557, 558, 770, 1370,
	559, 1371, 1350, 560, 561, 1260, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 0, 572, 573, 772,
	574, 575, 576, 773, 577, 578, 579, 1351, 580, 775,
	581, 582, 0, 583, 584, 585, 0, 586, 587, 588,
	589, 590, 591, 592, 593, 1331, 594, 595, 597, 596,
	598, 0, 599, 0, 600, 601, 602, 0, 0, 0,
	0, 0, 603, 604, 606, 0, 607, 608, 609, 610,
	605, 611, 612, 613, 614, 615, 616, 0, 618, 619,
	617, 620, 621, 1372, 622, 623, 624, 625, 626, 1261,
	627, 0, 628, 629, 637, 638, 639, 630, 631, 633,
	640, 632, 641, 642, 643, 644, 646, 645, 0, 648,
	649, 647, 650, 651, 652, 1314, 653, 778, 654, 634,
	635, 655, 656, 1373, 657, 658, 659, 660, 661, 662,
	663, 1329, 0, 664, 0, 665, 666, 667, 668, 669,
	670, 672, 636, 673, 678, 679, 1376, 674, 675, 676,
	677, 1352, 681, 682, 683, 684, 0, 685, 686, 1247,
	680, 671, 0, 687, 688, 689, 690, 691, 692, 0,
	693, 694, 0, 695, 1341, 1342, 1343, 1344, 0, 707,
	0, 696, 698, 699, 700, 701, 1353, 702, 1354, 1271,
	703, 704, 705, 706, 697, 708, 709, 0, 1254, 710,
	711, 712, 714, 716, 717, 713, 715, 718, 1315, 719,
	0, 0, 720, 721, 722, 788, 1338, 1375, 0, 724,
	725, 723, 726, 727, 730, 728, 729, 791, 731, 732,
	733, 0, 0, 0, 0, 734, 735, 792, 736, 737,
	738, 1251, 0, 0, 0, 0, 2740, 0, 1293, 1265,
	1266, 1267, 1263, 1264, 1276, 0, 1246, 0, 0, 0,
	0, 0, 0, 1244, 1245, 321, 322, 324, 323, 325,
	326, 327, 328, 1277, 329, 330, 0, 1275, 0, 0,
	0, 1317, 1281, 0, 0, 331, 0, 332, 333, 334,
	1357, 335, 336, 337, 338, 339, 340, 341, 740, 1330,
	0, 342, 1337, 343, 1336, 0, 1347, 344, 345, 346,
	347, 348, 349, 350, 1283, 1316, 1248, 351, 1377, 1378,
	747, 0, 352, 353, 1323, 0, 1304, 0, 354, 355,
	356, 357, 358, 359, 360, 361, 0, 0, 363, 364,
	365, 362, 366, 367, 0, 368, 0, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 378, 1358, 379,
	380, 381, 1307, 1305, 1306, 1313, 1309, 1308, 1312, 382,
	383, 384, 385, 386, 1340, 387, 389, 1334, 1333, 1253,
	392, 394, 388, 390, 0, 393, 391, 395, 396, 0,
	397, 398, 399, 0, 0, 400, 1325, 402, 0, 403,
	404, 405, 0, 406, 407, 408, 0, 409, 410, 1259,
	411, 412, 413, 415, 417, 414, 416, 418, 419, 420,
	421, 422, 1348, 1349, 423, 1272, 318, 0, 0, 0,
	0, 0, 424, 425, 426, 1332, 0, 0, 0, 427,
	0, 428, 429, 430, 0, 431, 432, 0, 1359, 433,
	434, 435, 1345, 1346, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 0, 445, 1355, 0, 1282, 446, 0,
	447, 448, 449, 450, 451, 452, 453, 1318, 1319, 1322,
	547, 1361, 454, 455, 456, 0, 457, 458, 459, 460,
	461, 0, 0, 0, 319, 462, 463, 464, 0, 1360,
	762, 465, 548, 466, 1327, 1328, 0, 1288, 0, 467,
	468, 470, 1362, 1320, 1363, 469, 471, 472, 1364, 473,
	0, 0, 0, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 483, 482, 0, 485, 1356, 484, 1365, 486,
	487, 1366, 0, 488, 489, 490, 491, 492, 493, 496,
	1311, 1310, 494, 495, 497, 498, 0, 499, 500, 502,
	505, 501, 503, 504, 506, 519, 520, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 522,
	0, 521, 1367, 523, 524, 525, 526, 527, 534, 536,
	537, 532, 533, 535, 538, 539, 541, 529, 530, 531,
	1368, 540, 528, 1250, 320, 1369, 542, 543, 544, 545,
	1273, 1321, 546, 1335, 549, 550, 0, 0, 551, 0,
	552, 0, 0, 554, 555, 556, 0, 0, 557, 558,
	770, 1370, 559, 1371, 1350, 560, 561, 1260, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 0, 572,
	573, 772, 574, 575, 576, 773, 577, 578, 579, 1351,
	580, 775, 581, 582, 0, 583, 584, 585, 0, 586,
	587, 588, 589, 590, 591, 592, 593, 1331, 594, 595,
	597, 596, 598, 0, 599, 0, 600, 601, 602, 0,
	0, 0, 0, 0, 603, 604, 606, 0, 607, 608,
	609, 610, 605, 611, 612, 613, 614, 615, 616, 0,
	618, 619, 617, 620, 621, 1372, 622, 623, 624, 625,
	626, 1261, 627, 0, 628, 629, 637, 638, 639, 630,
	631, 633, 640, 632, 641, 642, 643, 644, 646, 645,
	0, 648, 649, 647, 650, 651, 652, 1314, 653, 778,
	654, 634, 635, 655, 656, 1373, 657, 658, 659, 660,
	661, 662, 663, 1329, 0, 664, 0, 665, 666, 667,
	668, 669, 670, 672, 636, 673, 678, 679, 1376, 674,
	675, 676, 677, 1352, 681, 682, 683, 684, 0, 685,
	686, 1247, 680, 671, 0, 687, 688, 689, 690, 691,
	692, 0, 693, 694, 0, 695, 1341, 1342, 1343, 1344,
	0, 707, 0, 696, 698, 699, 700, 701, 1353, 702,
	1354, 1271, 703, 704, 705, 706, 697, 708, 709, 0,
	1254, 710, 711, 712, 714, 716, 717, 713, 715, 718,
	1315, 719, 0, 0, 720, 721, 722, 788, 1338, 1375,
	0, 724, 725, 723, 726, 727, 730, 728, 729, 791,
	731, 732, 733, 0, 0, 0, 0, 734, 735, 792,
	736, 737, 738, 1251, 0, 0, 0, 0, 2709, 0,
	1293, 1265, 1266, 1267, 1263, 1264, 1276, 0, 1246, 0,
	0, 0, 0, 0, 0, 1244, 1245, 321, 322, 324,
	323, 325, 326, 327, 328, 1277, 329, 330, 0, 1275,
	0, 0, 0, 1317, 1281, 0, 0, 331, 0, 332,
	333, 334, 1357, 335, 336, 337, 338, 339, 340, 341,
	740, 1330, 0, 342, 1337, 343, 1336, 0, 1347, 344,
	345, 346, 347, 348, 349, 350, 1283, 1316, 1248, 351,
	1377, 1378, 747, 0, 352, 353, 1323, 0, 1304, 0,
	354, 355, 356, 357, 358, 359, 360, 361, 0, 0,
	363, 364, 365, 362, 366, 367, 0, 368, 0, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 378,
	1358, 379, 380, 381, 1307, 1305, 1306, 1313, 1309, 1308,
	1312, 382, 383, 384, 385, 386, 1340, 387, 389, 1334,
	1333, 1253, 392, 394, 388, 390, 0, 393, 391, 395,
	396, 0, 397, 398, 399, 0, 0, 400, 1325, 402,
	0, 403, 404, 405, 0, 406, 407, 408, 0, 409,
	410, 1259, 411, 412, 413, 415, 417, 414, 416, 418,
	419, 420, 421, 422, 1348, 1349, 423, 1272, 318, 0,
	0, 0, 0, 0, 424, 425, 426, 1332, 0, 0,
	0, 427, 0, 428, 429, 430, 0, 431, 432, 0,
	1359, 433, 434, 435, 1345, 1346, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 0, 445, 1355, 0, 1282,
	446, 0, 447, 448, 449, 450, 451, 452, 453, 1318,
	1319, 1322, 547, 1361, 454, 455, 456, 0, 457, 458,
	459, 460, 461, 0, 0, 0, 319, 462, 463, 464,
	0, 1360, 762, 465, 548, 466, 1327, 1328, 0, 1288,
	0, 467, 468, 470, 1362, 1320, 1363, 469, 471, 472,
	1364, 473, 0, 0, 0, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 483, 482, 0, 485, 1356, 484,
	1365, 486, 487, 1366, 0, 488, 489, 490, 491, 492,
	493, 496, 1311, 1310, 494, 495, 497, 498, 0, 499,
	500, 502, 505, 501, 503, 504, 506, 519, 520, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 522, 0, 521, 1367, 523, 524, 525, 526, 527,
	534, 536, 537, 532, 533, 535, 538, 539, 541, 529,
	530, 531, 1368, 540, 528, 1250, 320, 1369, 542, 543,
	544, 545, 1273, 1321, 546, 1335, 549, 550, 0, 0,
	551, 0, 552, 0, 0, 554, 555, 556, 0, 0,
	557, 558, 770, 1370, 559, 1371, 1350, 560, 561, 1260,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	0, 572, 573, 772, 574, 575, 576, 773, 577, 578,
	579, 1351, 580, 775, 581, 582, 0, 583, 584, 585,
	0, 586, 587, 588, 589, 590, 591, 592, 593, 1331,
	594, 595, 597, 596, 598, 0, 599, 0, 600, 601,
	602, 0, 0, 0, 0, 0, 603, 604, 606, 0,
	607, 608, 609, 610, 605, 611, 612, 613, 614, 615,
	616, 0, 618, 619, 617, 620, 621, 1372, 622, 623,
	624, 625, 626, 1261, 627, 0, 628, 629, 637, 638,
	639, 630, 631, 633, 640, 632, 641, 642, 643, 644,
	646, 645, 0, 648, 649, 647, 650, 651, 652, 1314,
	653, 778, 654, 634, 635, 655, 656, 1373, 657, 658,
	659, 660, 661, 662, 663, 1329, 0, 664, 0, 665,
	666, 667, 668, 669, 670, 672, 636, 673, 678, 679,
	1376, 674, 675, 676, 677, 1352, 681, 682, 683, 684,
	0, 685, 686, 1247, 680, 671, 0, 687, 688, 689,
	690, 691, 692, 0, 693, 694, 0, 695, 1341, 1342,
	1343, 1344, 0, 707, 0, 696, 698, 699, 700, 701,
	1353, 702, 1354, 1271, 703, 704, 705, 706, 697, 708,
	709, 0, 1254, 710, 711, 712, 714, 716, 717, 713,
	715, 718, 1315, 719, 0, 0, 720, 721, 722, 788,
	1338, 1375, 0, 724, 725, 723, 726, 727, 730, 728,
	729, 791, 731, 732, 733, 0, 0, 0, 0, 734,
	735, 792, 736, 737, 738, 1251, 0, 0, 0, 0,
	1943, 0, 1293, 1265, 1266, 1267, 1263, 1264, 1276, 0,
	1246, 0, 0, 0, 0, 0, 0, 1244, 1245, 321,
	322, 324, 323, 325, 326, 327, 328, 1277, 329, 330,
	0, 1275, 0, 0, 0, 1317, 1281, 0, 0, 331,
	0, 332, 333, 334, 1357, 335, 336, 337, 338, 339,
	340, 341, 740, 1330, 0, 342, 1337, 343, 1336, 0,
	1347, 344, 345, 346, 347, 348, 349, 350, 1283, 1316,
	1248, 351, 1377, 1378, 747, 0, 352, 353, 1323, 0,
	1304, 0, 354, 355, 356, 357, 358, 359, 360, 361,
	0, 0, 363, 364, 365, 362, 366, 367, 0, 368,
	0, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 378, 1358, 379, 380, 381, 1307, 1305, 1306, 1313,
	1309, 1308, 1312, 382, 383, 384, 385, 386, 1340, 387,
	389, 1334, 1333, 1253, 392, 394, 388, 390, 0, 393,
	391, 395, 396, 0, 397, 398, 399, 0, 0, 400,
	1325, 402, 0, 403, 404, 405, 0, 406, 407, 408,
	0, 409, 410, 1259, 411, 412, 413, 415, 417, 414,
	416, 418, 419, 420, 421, 422, 1348, 1349, 423, 1272,
	318, 0, 0, 0, 0, 0, 424, 425, 426, 1332,
	0, 0, 0, 427, 0, 428, 429, 430, 0, 431,
	432, 0, 1359, 433, 434, 435, 1345, 1346, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 0, 445, 1355,
	0, 1282, 446, 0, 447, 448, 449, 450, 451, 452,
	453, 1318, 1319, 1322, 547, 1361, 454, 455, 456, 0,
	457, 458, 459, 460, 461, 0, 0, 0, 319, 462,
	463, 464, 0, 1360, 762, 465, 548, 466, 1327, 1328,
	0, 1288, 0, 467, 468, 470, 1362, 1320, 1363, 469,
	471, 472, 1364, 473, 0, 0, 0, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 483, 482, 0, 485,
	1356, 484, 1365, 486, 487, 1366, 0, 488, 489, 490,
	491, 492, 493, 496, 1311, 1310, 494, 495, 497, 498,
	0, 499, 500, 502, 505, 501, 503, 504, 506, 519,
	520, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 522, 0, 521, 1367, 523, 524, 525,
	526, 527, 534, 536, 537, 532, 533, 535, 538, 539,
	541, 529, 530, 531, 1368, 540, 528, 1250, 320, 1369,
	542, 543, 544, 545, 1273, 1321, 546, 1335, 549, 550,
	0, 0, 551, 0, 552, 0, 0, 554, 555, 556,
	0, 0, 557, 558, 770, 1370, 559, 1371, 1350, 560,
	561, 1260, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 0, 572, 573, 772, 574, 575, 576, 773,
	577, 578, 579, 1351, 580, 775, 581, 582, 0, 583,
	584, 585, 0, 586, 587, 588, 589, 590, 591, 592,
	593, 1331, 594, 595, 597, 596, 598, 0, 599, 0,
	600, 601, 602, 0, 0, 0, 0, 0, 603, 604,
	606, 0, 607, 608, 609, 610, 605, 611, 612, 613,
	614, 615, 616, 0, 618, 619, 617, 620, 621, 1372,
	622, 623, 624, 625, 626, 1261, 627, 0, 628, 629,
	637, 638, 639, 630, 631, 633, 640, 632, 641, 642,
	643, 644, 646, 645, 0, 648, 649, 647, 650, 651,
	652, 1314, 653, 778, 654, 634, 635, 655, 656, 1373,
	657, 658, 659, 660, 661, 662, 663, 1329, 0, 664,
	0, 665, 666, 667, 668, 669, 670, 672, 636, 673,
	678, 679, 1376, 674, 675, 676, 677, 1352, 681, 682,
	683, 684, 0, 685, 686, 1247, 680, 671, 0, 687,
	688, 689, 690, 691, 692, 0, 693, 694, 0, 695,
	1341, 1342, 1343, 1344, 0, 707, 0, 696, 698, 699,
	700, 701, 1353, 702, 1354, 1271, 703, 704, 705, 706,
	697, 708, 709, 0, 1254, 710, 711, 712, 714, 716,
	717, 713, 715, 718, 1315, 719, 0, 0, 720, 721,
	722, 788, 1338, 1375, 0, 724, 725, 723, 726, 727,
	730, 728, 729, 791, 731, 732, 733, 0, 0, 0,
	0, 734, 735, 792, 736, 737, 738, 1251, 0, 0,
	0, 0, 1869, 0, 1293, 1265, 1266, 1267, 1263, 1264,
	1276, 0, 1246, 0, 0, 0, 0, 0, 0, 1244,
	1245, 321, 322, 324, 323, 325, 326, 327, 328, 1277,
	329, 330, 0, 1275, 0, 0, 0, 1317, 1281, 0,
	0, 331, 0, 332, 333, 334, 1357, 335, 336, 337,
	338, 339, 340, 341, 740, 1330, 0, 342, 1337, 343,
	1336, 0, 1347, 344, 345, 346, 347, 348, 349, 350,
	1283, 1316, 1248, 351, 1377, 1378, 747, 0, 352, 353,
	1323, 0, 1304, 0, 354, 355, 356, 357, 358, 359,
	360, 361, 0, 0, 363, 364, 365, 362, 366, 367,
	0, 368, 0, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 378, 1358, 379, 380, 381, 1307, 1305,
	1306, 1313, 1309, 1308, 1312, 382, 383, 384, 385, 386,
	1340, 387, 389, 1334, 1333, 1253, 392, 394, 388, 390,
	0, 393, 391, 395, 396, 0, 397, 398, 399, 0,
	0, 400, 1325, 402, 0, 403, 404, 405, 0, 406,
	407, 408, 0, 409, 410, 1259, 411, 412, 413, 415,
	417, 414, 416, 418, 419, 420, 421, 422, 1348, 1349,
	423, 1272, 318, 0, 0, 0, 0, 0, 424, 425,
	426, 1332, 0, 0, 0, 427, 0, 428, 429, 430,
	0, 431, 432, 0, 1359, 433, 434, 435, 1345, 1346,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 0,
	445, 1355, 0, 1282, 446, 0, 447, 448, 449, 450,
	451, 452, 453, 1318, 1319, 1322, 547, 1361, 454, 455,
	456, 0, 457, 458, 459, 460, 461, 0, 0, 0,
	319, 462, 463, 464, 0, 1360, 762, 465, 548, 466,
	1327, 1328, 0, 1288, 0, 467, 468, 470, 1362, 1320,
	1363, 469, 471, 472, 1364, 473, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 483, 482,
	0, 485, 1356, 484, 1365, 486, 487, 1366, 0, 488,
	489, 490, 491, 492, 493, 496, 1311, 1310, 494, 495,
	497, 498, 0, 499, 500, 502, 505, 501, 503, 504,
	506, 519, 520, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 522, 0, 521, 1367, 523,
	524, 525, 526, 527, 534, 536, 537, 532, 533, 535,
	538, 539, 541, 529, 530, 531, 1368, 540, 528, 1250,
	320, 1369, 542, 543, 544, 545, 1273, 1321, 546, 1335,
	549, 550, 0, 0, 551, 0, 552, 0, 0, 554,
	555, 556, 0, 0, 557, 558, 770, 1370, 559, 1371,
	1350, 560, 561, 1260, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 0, 572, 573, 772, 574, 575,
	576, 773, 577, 578, 579, 1351, 580, 775, 581, 582,
	0, 583, 584, 585, 0, 586, 587, 588, 589, 590,
	591, 592, 593, 1331, 594, 595, 597, 596, 598, 0,
	599, 0, 600, 601, 602, 0, 0, 0, 0, 0,
	603, 604, 606, 0, 607, 608, 609, 610, 605, 611,
	612, 613, 614, 615, 616, 0, 618, 619, 617, 620,
	621, 1372, 622, 623, 624, 625, 626, 1261, 627, 0,
	628, 629, 637, 638, 639, 630, 631, 633, 640, 632,
	641, 642, 643, 644, 646, 645, 0, 648, 649, 647,
	650, 651, 652, 1314, 653, 778, 654, 634, 635, 655,
	656, 1373, 657, 658, 659, 660, 661, 662, 663, 1329,
	0, 664, 0, 665, 666, 667, 668, 669, 670, 672,
	636, 673, 678, 679, 1376, 674, 675, 676, 677, 1352,
	681, 682, 683, 684, 0, 685, 686, 1247, 680, 671,
	0, 687, 688, 689, 690, 691, 692, 0, 693, 694,
	0, 695, 1341, 1342, 1343, 1344, 0, 707, 0, 696,
	698, 699, 700, 701, 1353, 702, 1354, 1271, 703, 704,
	705, 706, 697, 708, 709, 0, 1254, 710, 711, 712,
	714, 716, 717, 713, 715, 718, 1315, 719, 0, 0,
	720, 721, 722, 788, 1338, 1375, 0, 724, 725, 723,
	726, 727, 730, 728, 729, 791, 731, 732, 733, 0,
	0, 0, 0, 734, 735, 792, 736, 737, 738, 1251,
	0, 0, 0, 0, 1864, 0, 1293, 1265, 1266, 1267,
	1263, 1264, 1276, 0, 1246, 0, 0, 0, 0, 0,
	0, 1244, 1245, 321, 322, 324, 323, 325, 326, 327,
	328, 1277, 329, 330, 0, 1275, 0, 0, 0, 1317,
	1281, 0, 0, 331, 0, 332, 333, 334, 1357, 335,
	336, 337, 338, 339, 340, 341, 740, 1330, 0, 342,
	1337, 343, 1336, 0, 1347, 344, 345, 346, 347, 348,
	349, 350, 1283, 1316, 1248, 351, 1377, 1378, 747, 0,
	352, 353, 1323, 0, 1304, 0, 354, 355, 356, 357,
	358, 359, 360, 361, 0, 0, 363, 364, 365, 362,
	366, 367, 0, 368, 0, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 377, 378, 1358, 379, 380, 381,
	1307, 1305, 1306, 1313, 1309, 1308, 1312, 382, 383, 384,
	385, 386, 1340, 387, 389, 1334, 1333, 1253, 392, 394,
	388, 390, 0, 393, 391, 395, 396, 0, 397, 398,
	399, 0, 0, 400, 1325, 402, 0, 403, 404, 405,
	0, 406, 407, 408, 0, 409, 410, 1259, 411, 412,
	413, 415, 417, 414, 416, 418, 419, 420, 421, 422,
	1348, 1349, 423, 1272, 318, 0, 0, 0, 0, 0,
	424, 425, 426, 1332, 0, 0, 0, 427, 0, 428,
	429, 430, 0, 431, 432, 0, 1359, 433, 434, 435,
	1345, 1346, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 0, 445, 1355, 0, 1282, 446, 0, 447, 448,
	449, 450, 451, 452, 453, 1318, 1319, 1322, 547, 1361,
	454, 455, 456, 0, 457, 458, 459, 460, 461, 0,
	0, 0, 319, 462, 463, 464, 0, 1360, 762, 465,
	548, 466, 1327, 1328, 0, 1288, 0, 467, 468, 470,
	1362, 1320, 1363, 469, 471, 472, 1364, 473, 0, 0,
	0, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	483, 482, 0, 485, 1356, 484, 1365, 486, 487, 1366,
	0, 488, 489, 490, 491, 492, 493, 496, 1311, 1310,
	494, 495, 497, 498, 0, 499, 500, 502, 505, 501,
	503, 504, 506, 519, 520, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 522, 0, 521,
	1367, 523, 524, 525, 526, 527, 534, 536, 537, 532,
	533, 535, 538, 539, 541, 529, 530, 531, 1368, 540,
	528, 1250, 320, 1369, 542, 543, 544, 545, 1273, 1321,
	546, 1335, 549, 550, 0, 0, 551, 0, 552, 0,
	0, 554, 555, 556, 0, 0, 557, 558, 770, 1370,
	559, 1371, 1350, 560, 561, 1260, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 0, 572, 573, 772,
	574, 575, 576, 773, 577, 578, 579, 1351, 580, 775,
	581, 582, 0, 583, 584, 585, 0, 586, 587, 588,
	589, 590, 591, 592, 593, 1331, 594, 595, 597, 596,
	598, 0, 599, 0, 600, 601, 602, 0, 0, 0,
	0, 0, 603, 604, 606, 0, 607, 608, 609, 610,
	605, 611, 612, 613, 614, 615, 616, 0, 618, 619,
	617, 620, 621, 1372, 622, 623, 624, 625, 626, 1261,
	627, 0, 628, 629, 637, 638, 639, 630, 631, 633,
	640, 632, 641, 642, 643, 644, 646, 645, 0, 648,
	649, 647, 650, 651, 652, 1314, 653, 778, 654, 634,
	635, 655, 656, 1373, 657, 658, 659, 660, 661, 662,
	663, 1329, 0, 664, 0, 665, 666, 667, 668, 669,
	670, 672, 636, 673, 678, 679, 1376, 674, 675, 676,
	677, 1352, 681, 682, 683, 684, 0, 685, 686, 1247,
	680, 671, 0, 687, 688, 689, 690, 691, 692, 0,
	693, 694, 0, 695, 1341, 1342, 1343, 1344, 0, 707,
	0, 696, 698, 699, 700, 701, 1353, 702, 1354, 1271,
	703, 704, 705, 706, 697, 708, 709, 0, 1254, 710,
	711, 712, 714, 716, 717, 713, 715, 718, 1315, 719,
	0, 0, 720, 721, 722, 788, 1338, 1375, 0, 724,
	725, 723, 726, 727, 730, 728, 729, 791, 731, 732,
	733, 0, 0, 0, 0, 734, 735, 792, 736, 737,
	738, 1251, 0, 0, 0, 0, 1850, 0, 1293, 1265,
	1266, 1267, 1263, 1264, 1276, 0, 1246, 0, 0, 0,
	0, 0, 0, 1244, 1245, 321, 322, 324, 323, 325,
	326, 327, 328, 1277, 329, 330, 0, 1275, 0, 0,
	0, 1317, 1281, 0, 0, 331, 0, 332, 333, 334,
	1357, 335, 336, 337, 338, 339, 340, 341, 740, 1330,
	0, 342, 1337, 343, 1336, 0, 1347, 344, 345, 346,
	347, 348, 349, 350, 1283, 1316, 1248, 351, 1377, 1378,
	747, 0, 352, 353, 1323, 0, 1304, 0, 354, 355,
	356, 357, 358, 359, 360, 361, 0, 0, 363, 364,
	365, 362, 366, 367, 0, 368, 0, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 378, 1358, 379,
	380, 381, 1307, 1305, 1306, 1313, 1309, 1308, 1312, 382,
	383, 384, 385, 386, 1340, 387, 389, 1334, 1333, 1253,
	392, 394, 388, 390, 0, 393, 391, 395, 396, 0,
	397, 398, 399, 0, 0, 400, 1325, 402, 0, 403,
	404, 405, 0, 406, 407, 408, 0, 409, 410, 1259,
	411, 412, 413, 415, 417, 414, 416, 418, 419, 420,
	421, 422, 1348, 1349, 423, 1272, 318, 0, 0, 0,
	0, 0, 424, 425, 426, 1332, 0, 0, 0, 427,
	0, 428, 429, 430, 0, 431, 432, 0, 1359, 433,
	434, 435, 1345, 1346, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 0, 445, 1355, 0, 1282, 446, 0,
	447, 448, 449, 450, 451, 452, 453, 1318, 1319, 1322,
	547, 1361, 454, 455, 456, 0, 457, 458, 459, 460,
	461, 0, 0, 0, 319, 462, 463, 464, 0, 1360,
	762, 465, 548, 466, 1327, 1328, 0, 1288, 0, 467,
	468, 470, 1362, 1320, 1363, 469, 471, 472, 1364, 473,
	0, 0, 0, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 483, 482, 0, 485, 1356, 484, 1365, 486,
	487, 1366, 0, 488, 489, 490, 491, 492, 493, 496,
	1311, 1310, 494, 495, 497, 498, 0, 499, 500, 502,
	505, 501, 503, 504, 506, 519, 520, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 522,
	0, 521, 1367, 523, 524, 525, 526, 527, 534, 536,
	537, 532, 533, 535, 538, 539, 541, 529, 530, 531,
	1368, 540, 528, 1250, 320, 1369, 542, 543, 544, 545,
	1273, 1321, 546, 1335, 549, 550, 0, 0, 551, 0,
	552, 0, 0, 554, 555, 556, 0, 0, 557, 558,
	770, 1370, 559, 1371, 1350, 560, 561, 1260, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 0, 572,
	573, 772, 574, 575, 576, 773, 577, 578, 579, 1351,
	580, 775, 581, 582, 0, 583, 584, 585, 0, 586,
	587, 588, 589, 590, 591, 592, 593, 1331, 594, 595,
	597, 596, 598, 0, 599, 0, 600, 601, 602, 0,
	0, 0, 0, 0, 603, 604, 606, 0, 607, 608,
	609, 610, 605, 611, 612, 613, 614, 615, 616, 0,
	618, 619, 617, 620, 621, 1372, 622, 623, 624, 625,
	626, 1261, 627, 0, 628, 629, 637, 638, 639, 630,
	631, 633, 640, 632, 641, 642, 643, 644, 646, 645,
	0, 648, 649, 647, 650, 651, 652, 1314, 653, 778,
	654, 634, 635, 655, 656, 1373, 657, 658, 659, 660,
	661, 662, 663, 1329, 0, 664, 0, 665, 666, 667,
	668, 669, 670, 672, 636, 673, 678, 679, 1376, 674,
	675, 676, 677, 1352, 681, 682, 683, 684, 0, 685,
	686, 1247, 680, 671, 0, 687, 688, 689, 690, 691,
	692, 0, 693, 694, 0, 695, 1341, 1342, 1343, 1344,
	0, 707, 0, 696, 698, 699, 700, 701, 1353, 702,
	1354, 1271, 703, 704, 705, 706, 697, 708, 709, 0,
	1254, 710, 711, 712, 714, 716, 717, 713, 715, 718,
	1315, 719, 0, 0, 720, 721, 722, 788, 1338, 1375,
	0, 724, 725, 723, 726, 727, 730, 728, 729, 791,
	731, 732, 733, 0, 0, 0, 0, 734, 735, 792,
	736, 737, 738, 1251, 0, 0, 0, 0, 1845, 0,
	1293, 1265, 1266, 1267, 1263, 1264, 1276, 0, 1246, 0,
	0, 0, 0, 0, 0, 1244, 1245, 321, 322, 324,
	323, 325, 326, 327, 328, 1277, 329, 330, 0, 1275,
	0, 0, 0, 1317, 1281, 0, 0, 331, 0, 332,
	333, 334, 1357, 335, 336, 337, 338, 339, 340, 341,
	740, 1330, 0, 342, 1337, 343, 1336, 0, 1347, 344,
	345, 346, 347, 348, 349, 350, 1283, 1316, 1248, 351,
	1377, 1378, 747, 0, 352, 353, 1323, 0, 1304, 0,
	354, 355, 356, 357, 358, 359, 360, 361, 0, 0,
	363, 364, 365, 362, 366, 367, 0, 368, 0, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 378,
	1358, 379, 380, 381, 1307, 1305, 1306, 1313, 1309, 1308,
	1312, 382, 383, 384, 385, 386, 1340, 387, 389, 1334,
	1333, 1253, 392, 394, 388, 390, 0, 393, 391, 395,
	396, 0, 397, 398, 399, 0, 0, 400, 1325, 402,
	0, 403, 404, 405, 0, 406, 407, 408, 0, 409,
	410, 1259, 411, 412, 413, 415, 417, 414, 416, 418,
	419, 420, 421, 422, 1348, 1349, 423, 1272, 318, 0,
	0, 0, 0, 0, 424, 425, 426, 1332, 0, 0,
	0, 427, 0, 428, 429, 430, 0, 431, 432, 0,
	1359, 433, 434, 435, 1345, 1346, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 0, 445, 1355, 0, 1282,
	446, 0, 447, 448, 449, 450, 451, 452, 453, 1318,
	1319, 1322, 547, 1361, 454, 455, 456, 0, 457, 458,
	459, 460, 461, 0, 0, 0, 319, 462, 463, 464,
	0, 1360, 762, 465, 548, 466, 1327, 1328, 0, 1288,
	0, 467, 468, 470, 1362, 1320, 1363, 469, 471, 472,
	1364, 473, 0, 0, 0, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 483, 482, 0, 485, 1356, 484,
	1365, 486, 487, 1366, 0, 488, 489, 490, 491, 492,
	493, 496, 1311, 1310, 494, 495, 497, 498, 0, 499,
	500, 502, 505, 501, 503, 504, 506, 519, 520, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 522, 0, 521, 1367, 523, 524, 525, 526, 527,
	534, 536, 537, 532, 533, 535, 538, 539, 541, 529,
	530, 531, 1368, 540, 528, 1250, 320, 1369, 542, 543,
	544, 545, 1273, 1321, 546, 1335, 549, 550, 0, 0,
	551, 0, 552, 0, 0, 554, 555, 556, 0, 0,
	557, 558, 770, 1370, 559, 1371, 1350, 560, 561, 1260,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	0, 572, 573, 772, 574, 575, 576, 773, 577, 578,
	579, 1351, 580, 775, 581, 582, 0, 583, 584, 585,
	0, 586, 587, 588, 589, 590, 591, 592, 593, 1331,
	594, 595, 597, 596, 598, 0, 599, 0, 600, 601,
	602, 0, 0, 0, 0, 0, 603, 604, 606, 0,
	607, 608, 609, 610, 605, 611, 612, 613, 614, 615,
	616, 0, 618, 619, 617, 620, 621, 1372, 622, 623,
	624, 625, 626, 1261, 627, 0, 628, 629, 637, 638,
	639, 630, 631, 633, 640, 632, 641, 642, 643, 644,
	646, 645, 0, 648, 649, 647, 650, 651, 652, 1314,
	653, 778, 654, 634, 635, 655, 656, 1373, 657, 658,
	659, 660, 661, 662, 663, 1329, 0, 664, 0, 665,
	666, 667, 668, 669, 670, 672, 636, 673, 678, 679,
	1376, 674, 675, 676, 677, 1352, 681, 682, 683, 684,
	0, 685, 686, 1247, 680, 671, 0, 687, 688, 689,
	690, 691, 692, 0, 693, 694, 0, 695, 1341, 1342,
	1343, 1344, 0, 707, 0, 696, 698, 699, 700, 701,
	1353, 702, 1354, 1271, 703, 704, 705, 706, 697, 708,
	709, 0, 1254, 710, 711, 712, 714, 716, 717, 713,
	715, 718, 1315, 719, 0, 0, 720, 721, 722, 788,
	1338, 1375, 0, 724, 725, 723, 726, 727, 730, 728,
	729, 791, 731, 732, 733, 0, 0, 0, 0, 734,
	735, 792, 736, 737, 738, 1251, 0, 0, 0, 0,
	1751, 0, 1293, 1265, 1266, 1267, 1263, 1264, 1276, 0,
	1246, 0, 0, 0, 0, 0, 0, 1244, 1245, 321,
	322, 324, 323, 325, 326, 327, 328, 1277, 329, 330,
	0, 1275, 0, 0, 0, 1317, 1281, 0, 0, 331,
	0, 332, 333, 334, 1357, 335, 336, 337, 338, 339,
	340, 341, 740, 1330, 0, 342, 1337, 343, 1336, 0,
	1347, 344, 345, 346, 347, 348, 349, 350, 1283, 1316,
	1248, 351, 1377, 1378, 747, 0, 352, 353, 1323, 0,
	1304, 0, 354, 355, 356, 357, 358, 359, 360, 361,
	0, 0, 363, 364, 365, 362, 366, 367, 0, 368,
	0, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 378, 1358, 379, 380, 381, 1307, 1305, 1306, 1313,
	1309, 1308, 1312, 382, 383, 384, 385, 386, 1340, 387,
	389, 1334, 1333, 1253, 392, 394, 388, 390, 0, 393,
	391, 395, 396, 0, 397, 398, 399, 0, 0, 400,
	1325, 402, 0, 403, 404, 405, 0, 406, 407, 408,
	0, 409, 410, 1259, 411, 412, 413, 415, 417, 414,
	416, 418, 419, 420, 421, 422, 1348, 1349, 423, 1272,
	318, 0, 0, 0, 0, 0, 424, 425, 426, 1332,
	0, 0, 0, 427, 0, 428, 429, 430, 0, 431,
	432, 0, 1359, 433, 434, 435, 1345, 1346, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 0, 445, 1355,
	0, 1282, 446, 0, 447, 448, 449, 450, 451, 452,
	453, 1750, 1319, 1322, 547, 1361, 454, 455, 456, 0,
	457, 458, 459, 460, 461, 0, 0, 0, 319, 462,
	463, 464, 0, 1360, 762, 465, 548, 466, 1327, 1328,
	0, 1288, 0, 467, 468, 470, 1362, 1320, 1363, 469,
	471, 472, 1364, 473, 0, 0, 0, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 483, 482, 0, 485,
	1356, 484, 1365, 486, 487, 1366, 0, 488, 489, 490,
	491, 492, 493, 496, 1311, 1310, 494, 495, 497, 498,
	0, 499, 500, 502, 505, 501, 503, 504, 506, 519,
	520, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 522, 0, 521, 1367, 523, 524, 525,
	526, 527, 534, 536, 537, 532, 533, 535, 538, 539,
	541, 529, 530, 531, 1368, 540, 528, 1250, 320, 1369,
	542, 543, 544, 545, 1273, 1321, 546, 1335, 549, 550,
	0, 0, 551, 0, 552, 0, 0, 554, 555, 556,
	0, 0, 557, 558, 770, 1370, 559, 1371, 1350, 560,
	561, 1260, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 0, 572, 573, 772, 574, 575, 576, 773,
	577, 578, 579, 1351, 580, 775, 581, 582, 0, 583,
	584, 585, 0, 586, 587, 588, 589, 590, 591, 592,
	593, 1331, 594, 595, 597, 596, 598, 0, 599, 0,
	600, 601, 602, 0, 0, 0, 0, 0, 603, 604,
	606, 0, 607, 608, 609, 610, 605, 611, 612, 613,
	614, 615, 616, 0, 618, 619, 617, 620, 621, 1372,
	622, 623, 624, 625, 626, 1261, 627, 0, 628, 629,
	637, 638, 639, 630, 631, 633, 640, 632, 641, 642,
	643, 644, 646, 645, 0, 648, 649, 647, 650, 651,
	652, 1314, 653, 778, 654, 634, 635, 655, 656, 1373,
	657, 658, 659, 660, 661, 662, 663, 1329, 0, 664,
	0, 665, 666, 667, 668, 669, 670, 672, 636, 673,
	678, 679, 1376, 674, 675, 676, 677, 1352, 681, 682,
	683, 684, 0, 685, 686, 1247, 680, 671, 0, 687,
	688, 689, 690, 691, 692, 0, 693, 694, 0, 695,
	1341, 1342, 1343, 1344, 0, 707, 0, 696, 698, 699,
	700, 701, 1353, 702, 1354, 1271, 703, 704, 705, 706,
	697, 708, 709, 0, 1254, 710, 711, 712, 714, 716,
	717, 713, 715, 718, 1315, 719, 0, 0, 720, 721,
	722, 788, 1338, 1375, 0, 724, 725, 723, 726, 727,
	730, 728, 729, 791, 731, 732, 733, 0, 0, 0,
	0, 734, 735, 792, 736, 737, 738, 1251, 0, 0,
	0, 0, 1745, 0, 1293, 1265, 1266, 1267, 1263, 1264,
	1276, 0, 1246, 0, 0, 0, 0, 0, 0, 1244,
	1245, 321, 322, 324, 323, 325, 326, 327, 328, 1277,
	329, 330, 0, 1275, 0, 0, 0, 1317, 1281, 0,
	0, 331, 0, 332, 333, 334, 1357, 335, 336, 337,
	338, 339, 340, 341, 740, 1330, 0, 342, 1337, 343,
	1336, 0, 1347, 344, 345, 346, 347, 348, 349, 350,
	1283, 1316, 1248, 351, 1377, 1378, 747, 0, 352, 353,
	1323, 0, 1304, 0, 354, 355, 356, 357, 358, 359,
	360, 361, 0, 0, 363, 364, 365, 362, 366, 367,
	0, 368, 0, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 378, 1358, 379, 380, 381, 1307, 1305,
	1306, 1313, 1309, 1308, 1312, 382, 383, 384, 385, 386,
	1340, 387, 389, 1334, 1333, 1253, 392, 394, 388, 390,
	0, 393, 391, 395, 396, 0, 397, 398, 399, 0,
	0, 400, 1325, 402, 0, 403, 404, 405, 0, 406,
	407, 408, 0, 409, 410, 1259, 411, 412, 413, 415,
	417, 414, 416, 418, 419, 420, 421, 422, 1348, 1349,
	423, 1272, 318, 0, 0, 0, 0, 0, 424, 425,
	426, 1332, 0, 0, 0, 427, 0, 428, 429, 430,
	0, 431, 432, 0, 1359, 433, 434, 435, 1345, 1346,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 0,
	445, 1355, 0, 1282, 446, 0, 447, 448, 449, 450,
	451, 452, 453, 1744, 1319, 1322, 547, 1361, 454, 455,
	456, 0, 457, 458, 459, 460, 461, 0, 0, 0,
	319, 462, 463, 464, 0, 1360, 762, 465, 548, 466,
	1327, 1328, 0, 1288, 0, 467, 468, 470, 1362, 1320,
	1363, 469, 471, 472, 1364, 473, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 483, 482,
	0, 485, 1356, 484, 1365, 486, 487, 1366, 0, 488,
	489, 490, 491, 492, 493, 496, 1311, 1310, 494, 495,
	497, 498, 0, 499, 500, 502, 505, 501, 503, 504,
	506, 519, 520, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 522, 0, 521, 1367, 523,
	524, 525, 526, 527, 534, 536, 537, 532, 533, 535,
	538, 539, 541, 529, 530, 531, 1368, 540, 528, 1250,
	320, 1369, 542, 543, 544, 545, 1273, 1321, 546, 1335,
	549, 550, 0, 0, 551, 0, 552, 0, 0, 554,
	555, 556, 0, 0, 557, 558, 770, 1370, 559, 1371,
	1350, 560, 561, 1260, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 0, 572, 573, 772, 574, 575,
	576, 773, 577, 578, 579, 1351, 580, 775, 581, 582,
	0, 583, 584, 585, 0, 586, 587, 588, 589, 590,
	591, 592, 593, 1331, 594, 595, 597, 596, 598, 0,
	599, 0, 600, 601, 602, 0, 0, 0, 0, 0,
	603, 604, 606, 0, 607, 608, 609, 610, 605, 611,
	612, 613, 614, 615, 616, 0, 618, 619, 617, 620,
	621, 1372, 622, 623, 624, 625, 626, 1261, 627, 0,
	628, 629, 637, 638, 639, 630, 631, 633, 640, 632,
	641, 642, 643, 644, 646, 645, 0, 648, 649, 647,
	650, 651, 652, 1314, 653, 778, 654, 634, 635, 655,
	656, 1373, 657, 658, 659, 660, 661, 662, 663, 1329,
	0, 664, 0, 665, 666, 667, 668, 669, 670, 672,
	636, 673, 678, 679, 1376, 674, 675, 676, 677, 1352,
	681, 682, 683, 684, 0, 685, 686, 1247, 680, 671,
	0, 687, 688, 689, 690, 691, 692, 0, 693, 694,
	0, 695, 1341, 1342, 1343, 1344, 0, 707, 0, 696,
	698, 699, 700, 701, 1353, 702, 1354, 1271, 703, 704,
	705, 706, 697, 708, 709, 0, 1254, 710, 711, 712,
	714, 716, 717, 713, 715, 718, 1315, 719, 0, 0,
	720, 721, 722, 788, 1338, 1375, 0, 724, 725, 723,
	726, 727, 730, 728, 729, 791, 731, 732, 733, 0,
	0, 0, 0, 734, 735, 792, 736, 737, 738, 1251,
	0, 0, 0, 0, 1738, 0, 1293, 1265, 1266, 1267,
	1263, 1264, 1276, 0, 1246, 0, 0, 0, 0, 0,
	0, 1244, 1245, 321, 322, 324, 323, 325, 326, 327,
	328, 1277, 329, 330, 0, 1275, 0, 0, 0, 1317,
	1281, 0, 0, 331, 0, 332, 333, 334, 1357, 335,
	336, 337, 338, 339, 340, 341, 740, 1330, 0, 342,
	1337, 343, 1336, 0, 1347, 344, 345, 346, 347, 348,
	349, 350, 1283, 1316, 1248, 351, 1377, 1378, 747, 0,
	352, 353, 1323, 0, 1304, 0, 354, 355, 356, 357,
	358, 359, 360, 361, 0, 0, 363, 364, 365, 362,
	366, 367, 0, 368, 0, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 377, 378, 1358, 379, 380, 381,
	1307, 1305, 1306, 1313, 1309, 1308, 1312, 382, 383, 384,
	385, 386, 1340, 387, 389, 1334, 1333, 1253, 392, 394,
	388, 390, 0, 393, 391, 395, 396, 0, 397, 398,
	399, 0, 0, 400, 1325, 402, 0, 403, 404, 405,
	0, 406, 407, 408, 0, 409, 410, 1259, 411, 412,
	413, 415, 417, 414, 416, 418, 419, 420, 421, 422,
	1348, 1349, 423, 1272, 318, 0, 0, 0, 0, 0,
	424, 425, 426, 1332, 0, 0, 0, 427, 0, 428,
	429, 430, 0, 431, 432, 0, 1359, 433, 434, 435,
	1345, 1346, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 0, 445, 1355, 0, 1282, 446, 0, 447, 448,
	449, 450, 451, 452, 453, 1318, 1319, 1322, 547, 1361,
	454, 455, 456, 0, 457, 458, 459, 460, 461, 0,
	0, 0, 319, 462, 463, 464, 0, 1360, 762, 465,
	548, 466, 1327, 1328, 0, 1288, 0, 467, 468, 470,
	1362, 1320, 1363, 469, 471, 472, 1364, 473, 0, 0,
	0, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	483, 482, 0, 485, 1356, 484, 1365, 486, 487, 1366,
	0, 488, 489, 490, 491, 492, 493, 496, 1311, 1310,
	494, 495, 497, 498, 0, 499, 500, 502, 505, 501,
	503, 504, 506, 519, 520, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 522, 0, 521,
	1367, 523, 524, 525, 526, 527, 534, 536, 537, 532,
	533, 535, 538, 539, 541, 529, 530, 531, 1368, 540,
	528, 1250, 320, 1369, 542, 543, 544, 545, 1273, 1321,
	546, 1335, 549, 550, 0, 0, 551, 0, 552, 0,
	0, 554, 555, 556, 0, 0, 557, 558, 770, 1370,
	559, 1371, 1350, 560, 561, 1260, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 0, 572, 573, 772,
	574, 575, 576, 773, 577, 578, 579, 1351, 580, 775,
	581, 582, 0, 583, 584, 585, 0, 586, 587, 588,
	589, 590, 591, 592, 593, 1331, 594, 595, 597, 596,
	598, 0, 599, 0, 600, 601, 602, 0, 0, 0,
	0, 0, 603, 604, 606, 0, 607, 608, 609, 610,
	605, 611, 612, 613, 614, 615, 616, 0, 618, 619,
	617, 620, 621, 1372, 622, 623, 624, 625, 626, 1261,
	627, 0, 628, 629, 637, 638, 639, 630, 631, 633,
	640, 632, 641, 642, 643, 644, 646, 645, 0, 648,
	649, 647, 650, 651, 652, 1314, 653, 778, 654, 634,
	635, 655, 656, 1373, 657, 658, 659, 660, 661, 662,
	663, 1329, 0, 664, 0, 665, 666, 667, 668, 669,
	670, 672, 636, 673, 678, 679, 1376, 674, 675, 676,
	677, 1352, 681, 682, 683, 684, 0, 685, 686, 1247,
	680, 671, 0, 687, 688, 689, 690, 691, 692, 0,
	693, 694, 0, 695, 1341, 1342, 1343, 1344, 0, 707,
	0, 696, 698, 699, 700, 701, 1353, 702, 1354, 1271,
	703, 704, 705, 706, 697, 708, 709, 0, 1254, 710,
	711, 712, 714, 716, 717, 713, 715, 718, 1315, 719,
	0, 0, 720, 721, 722, 788, 1338, 1375, 0, 724,
	725, 723, 726, 727, 730, 728, 729, 791, 731, 732,
	733, 0, 0, 0, 0, 734, 735, 792, 736, 737,
	738, 1251, 0, 0, 0, 0, 1711, 0, 1293, 1265,
	1266, 1267, 1263, 1264, 1276, 0, 1246, 0, 0, 0,
	0, 0, 0, 1244, 1245, 321, 322, 324, 323, 325,
	326, 327, 328, 1277, 329, 330, 0, 1275, 0, 0,
	0, 1317, 1281, 0, 0, 331, 0, 332, 333, 334,
	1357, 335, 336, 337, 338, 339, 340, 341, 740, 1330,
	0, 342, 1337, 343, 1336, 0, 1347, 344, 345, 346,
	347, 348, 349, 350, 1283, 1316, 1248, 351, 1377, 1378,
	747, 0, 352, 353, 1323, 0, 1304, 0, 354, 355,
	356, 357, 358, 359, 360, 361, 0, 0, 363, 364,
	365, 362, 366, 367, 0, 368, 0, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 378, 1358, 379,
	380, 381, 1307, 1305, 1306, 1313, 1309, 1308, 1312, 382,
	383, 384, 385, 386, 1340, 387, 389, 1334, 1333, 1253,
	392, 394, 388, 390, 0, 393, 391, 395, 396, 0,
	397, 398, 399, 0, 0, 400, 1325, 402, 0, 403,
	404, 405, 0, 406, 407, 408, 0, 409, 410, 1259,
	411, 412, 413, 415, 417, 414, 416, 418, 419, 420,
	421, 422, 1348, 1349, 423, 1272, 318, 0, 0, 0,
	0, 0, 424, 425, 426, 1332, 0, 0, 0, 427,
	0, 428, 429, 430, 0, 431, 432, 0, 1359, 433,
	434, 435, 1345, 1346, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 0, 445, 1355, 0, 1282, 446, 0,
	447, 448, 449, 450, 451, 452, 453, 1318, 1319, 1322,
	547, 1361, 454, 455, 456, 0, 457, 458, 459, 460,
	461, 0, 0, 0, 319, 462, 463, 464, 0, 1360,
	762, 465, 548, 466, 1327, 1328, 0, 1288, 0, 467,
	468, 470, 1362, 1320, 1363, 469, 471, 472, 1364, 473,
	0, 0, 0, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 483, 482, 0, 485, 1356, 484, 1365, 486,
	487, 1366, 0, 488, 489, 490, 491, 492, 493, 496,
	1311, 1310, 494, 495, 497, 498, 0, 499, 500, 502,
	505, 501, 503, 504, 506, 519, 520, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 522,
	0, 521, 1367, 523, 524, 525, 526, 527, 534, 536,
	537, 532, 533, 535, 538, 539, 541, 529, 530, 531,
	1368, 540, 528, 1250, 320, 1369, 542, 543, 544, 545,
	1273, 1321, 546, 1335, 549, 550, 0, 0, 551, 0,
	552, 0, 0, 554, 555, 556, 0, 0, 557, 558,
	770, 1370, 559, 1371, 1350, 560, 561, 1260, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 0, 572,
	573, 772, 574, 575, 576, 773, 577, 578, 579, 1351,
	580, 775, 581, 582, 0, 583, 584, 585, 0, 586,
	587, 588, 589, 590, 591, 592, 593, 1331, 594, 595,
	597, 596, 598, 0, 599, 0, 600, 601, 602, 0,
	0, 0, 0, 0, 603, 604, 606, 0, 607, 608,
	609, 610, 605, 611, 612, 613, 614, 615, 616, 0,
	618, 619, 617, 620, 621, 1372, 622, 623, 624, 625,
	626, 1261, 627, 0, 628, 629, 637, 638, 639, 630,
	631, 633, 640, 632, 641, 642, 643, 644, 646, 645,
	0, 648, 649, 647, 650, 651, 652, 1314, 653, 778,
	654, 634, 635, 655, 656, 1373, 657, 658, 659, 660,
	661, 662, 663, 1329, 0, 664, 0, 665, 666, 667,
	668, 669, 670, 672, 636, 673, 678, 679, 1376, 674,
	675, 676, 677, 1352, 681, 682, 683, 684, 0, 685,
	686, 1247, 680, 671, 0, 687, 688, 689, 690, 691,
	692, 0, 693, 694, 0, 695, 1341, 1342, 1343, 1344,
	0, 707, 0, 696, 698, 699, 700, 701, 1353, 702,
	1354, 1271, 703, 704, 705, 706, 697, 708, 709, 0,
	1254, 710, 711, 712, 714, 716, 717, 713, 715, 718,
	1315, 719, 0, 0, 720, 721, 722, 788, 1338, 1375,
	0, 724, 725, 723, 726, 727, 730, 728, 729, 791,
	731, 732, 733, 0, 0, 0, 0, 734, 735, 792,
	736, 737, 738, 1251, 0, 0, 0, 0, 1682, 0,
	1293, 1265, 1266, 1267, 1263, 1264, 1276, 0, 1246, 0,
	0, 0, 0, 0, 0, 1244, 1245, 321, 322, 324,
	323, 325, 326, 327, 328, 1277, 329, 330, 0, 1275,
	0, 0, 0, 1317, 1281, 0, 0, 331, 0, 332,
	333, 334, 1357, 335, 336, 337, 338, 339, 340, 341,
	740, 1330, 0, 342, 1337, 343, 1336, 0, 1347, 344,
	345, 346, 347, 348, 349, 350, 1283, 1316, 1248, 351,
	1377, 1378, 747, 0, 352, 353, 1323, 0, 1304, 0,
	354, 355, 356, 357, 358, 359, 360, 361, 0, 0,
	363, 364, 365, 362, 366, 367, 0, 368, 0, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 378,
	1358, 379, 380, 381, 1307, 1305, 1306, 1313, 1309, 1308,
	1312, 382, 383, 384, 385, 386, 1340, 387, 389, 1334,
	1333, 1253, 392, 394, 388, 390, 0, 393, 391, 395,
	396, 0, 397, 398, 399, 0, 0, 400, 1325, 402,
	0, 403, 404, 405, 0, 406, 407, 408, 0, 409,
	410, 1259, 411, 412, 413, 415, 417, 414, 1686, 418,
	419, 420, 421, 422, 1348, 1349, 423, 1272, 318, 0,
	0, 0, 0, 0, 424, 425, 426, 1332, 0, 0,
	0, 427, 0, 428, 429, 430, 0, 431, 432, 0,
	1359, 433, 434, 435, 1345, 1346, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 0, 445, 1355, 0, 1282,
	446, 0, 447, 448, 449, 450, 451, 452, 453, 1318,
	1319, 1322, 547, 1361, 454, 455, 456, 0, 457, 458,
	459, 460, 461, 0, 0, 0, 319, 462, 463, 464,
	0, 1360, 762, 465, 548, 466, 1327, 1328, 0, 1288,
	0, 467, 468, 470, 1362, 1320, 1363, 469, 471, 472,
	1364, 473, 0, 0, 0, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 483, 482, 0, 485, 1356, 484,
	1365, 486, 487, 1366, 0, 488, 489, 490, 491, 492,
	493, 496, 1311, 1310, 494, 495, 497, 498, 0, 499,
	500, 502, 505, 501, 503, 504, 506, 519, 520, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 522, 0, 521, 1367, 523, 524, 525, 526, 527,
	534, 536, 537, 532, 533, 535, 538, 539, 541, 529,
	530, 531, 1368, 540, 528, 1250, 320, 1369, 542, 543,
	544, 545, 1273, 1321, 546, 1335, 549, 550, 0, 0,
	551, 0, 552, 0, 0, 554, 555, 556, 0, 0,
	557, 558, 770, 1370, 559, 1371, 1350, 560, 561, 1260,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	0, 572, 573, 772, 574, 575, 576, 773, 577, 578,
	579, 1351, 580, 775, 581, 582, 0, 583, 584, 585,
	0, 586, 587, 588, 589, 590, 591, 592, 593, 1331,
	594, 595, 597, 596, 598, 0, 599, 0, 600, 601,
	602, 0, 0, 0, 0, 0, 603, 604, 1687, 0,
	607, 608, 609, 610, 605, 611, 612, 613, 614, 615,
	616, 0, 618, 619, 617, 620, 621, 1372, 622, 623,
	624, 625, 626, 1261, 627, 0, 628, 629, 637, 638,
	639, 630, 631, 633, 640, 632, 641, 642, 643, 644,
	646, 645, 0, 648, 649, 647, 650, 651, 652, 1314,
	653, 778, 654, 634, 635, 655, 656, 1373, 657, 658,
	659, 660, 661, 662, 663, 1329, 0, 664, 0, 665,
	666, 667, 668, 669, 670, 672, 636, 673, 678, 679,
	1376, 674, 675, 676, 677, 1352, 681, 682, 683, 684,
	0, 685, 686, 1247, 680, 671, 0, 687, 688, 689,
	690, 691, 692, 0, 1685, 694, 0, 695, 1341, 1342,
	1343, 1344, 0, 707, 0, 696, 698, 699, 700, 701,
	1353, 702, 1354, 1271, 703, 704, 705, 706, 697, 708,
	709, 0, 1254, 710, 711, 712, 714, 716, 717, 713,
	715, 718, 1315, 719, 0, 0, 720, 721, 722, 788,
	1338, 1375, 0, 724, 725, 723, 726, 727, 730, 728,
	729, 791, 731, 732, 733, 0, 0, 0, 0, 734,
	735, 792, 736, 737, 738, 1251, 0, 0, 0, 0,
	1512, 0, 1293, 1265, 1266, 1267, 1263, 1264, 1276, 0,
	1246, 0, 0, 0, 0, 0, 0, 1244, 1245, 321,
	322, 324, 323, 325, 326, 327, 328, 1277, 329, 330,
	0, 1275, 0, 0, 0, 1317, 1281, 0, 0, 331,
	0, 332, 333, 334, 1357, 335, 336, 337, 338, 339,
	340, 341, 740, 1330, 0, 342, 1337, 343, 1336, 0,
	1347, 344, 345, 346, 347, 348, 349, 350, 1283, 1316,
	1248, 351, 1377, 1378, 747, 0, 352, 353, 1323, 0,
	1304, 0, 354, 355, 356, 357, 358, 359, 360, 361,
	0, 0, 363, 364, 365, 362, 366, 367, 0, 368,
	0, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 378, 1358, 379, 380, 381, 1307, 1305, 1306, 1313,
	1309, 1308, 1312, 382, 383, 384, 385, 386, 1340, 387,
	389, 1334, 1333, 1253, 392, 394, 388, 390, 0, 393,
	391, 395, 396, 0, 397, 398, 399, 0, 0, 400,
	1325, 402, 0, 403, 404, 405, 0, 406, 407, 408,
	0, 409, 410, 1259, 411, 412, 413, 415, 417, 414,
	416, 418, 419, 420, 421, 422, 1348, 1349, 423, 1272,
	318, 0, 0, 0, 0, 0, 424, 425, 426, 1332,
	0, 0, 0, 427, 0, 428, 429, 430, 0, 431,
	432, 0, 1359, 433, 434, 435, 1345, 1346, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 0, 445, 1355,
	0, 1282, 446, 0, 447, 448, 449, 450, 451, 452,
	453, 1318, 1319, 1322, 547, 1361, 454, 455, 456, 0,
	457, 458, 459, 460, 461, 0, 0, 0, 319, 462,
	463, 464, 0, 1360, 762, 465, 548, 466, 1327, 1328,
	0, 1288, 0, 467, 468, 470, 1362, 1320, 1363, 469,
	471, 472, 1364, 473, 0, 0, 0, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 483, 482, 0, 485,
	1356, 484, 1365, 486, 487, 1366, 0, 488, 489, 490,
	491, 492, 493, 496, 1311, 1310, 494, 495, 497, 498,
	0, 499, 500, 502, 505, 501, 503, 504, 506, 519,
	520, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 522, 0, 521, 1367, 523, 524, 525,
	526, 527, 534, 536, 537, 532, 533, 535, 538, 539,
	541, 529, 530, 531, 1368, 540, 528, 1250, 320, 1369,
	542, 543, 544, 545, 1273, 1321, 546, 1335, 549, 550,
	0, 0, 551, 0, 552, 0, 0, 554, 555, 556,
	0, 0, 557, 558, 770, 1370, 559, 1371, 1350, 560,
	561, 1260, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 0, 572, 573, 772, 574, 575, 576, 773,
	577, 578, 579, 1351, 580, 775, 581, 582, 0, 583,
	584, 585, 0, 586, 587, 588, 589, 590, 591, 592,
	593, 1331, 594, 595, 597, 596, 598, 0, 599, 0,
	600, 601, 602, 0, 0, 0, 0, 0, 603, 604,
	606, 0, 607, 608, 609, 610, 605, 611, 612, 613,
	614, 615, 616, 0, 618, 619, 617, 620, 621, 1372,
	622, 623, 624, 625, 626, 1261, 627, 0, 628, 629,
	637, 638, 639, 630, 631, 633, 640, 632, 641, 642,
	643, 644, 646, 645, 0, 648, 649, 647, 650, 651,
	652, 1314, 653, 778, 654, 634, 635, 655, 656, 1373,
	657, 658, 659, 660, 661, 662, 663, 1329, 0, 664,
	0, 665, 666, 667, 668, 669, 670, 672, 636, 673,
	678, 679, 1376, 674, 675, 676, 677, 1352, 681, 682,
	683, 684, 0, 685, 686, 1247, 680, 671, 0, 687,
	688, 689, 690, 691, 692, 0, 693, 694, 0, 695,
	1341, 1342, 1343, 1344, 0, 707, 0, 696, 698, 699,
	700, 701, 1353, 702, 1354, 1271, 703, 704, 705, 706,
	697, 708, 709, 0, 1254, 710, 711, 712, 714, 716,
	717, 713, 715, 718, 1315, 719, 0, 0, 720, 721,
	722, 788, 1338, 1375, 0, 724, 725, 723, 726, 727,
	730, 728, 729, 791, 731, 732, 733, 0, 0, 0,
	0, 734, 735, 792, 736, 737, 738, 1251, 0, 0,
	0, 0, 0, 0, 1293, 1265, 1266, 1267, 1263, 1264,
	1276, 0, 1246, 0, 0, 0, 0, 0, 0, 1244,
	1245, 321, 322, 324, 323, 325, 326, 327, 328, 1277,
	329, 330, 0, 1275, 0, 0, 0, 1317, 1281, 0,
	0, 331, 0, 332, 333, 334, 1357, 335, 336, 337,
	338, 339, 340, 341, 740, 1330, 0, 342, 1337, 343,
	1336, 0, 1347, 344, 345, 346, 347, 348, 349, 350,
	1283, 1316, 1248, 351, 1377, 1378, 747, 0, 352, 353,
	1323, 0, 1304, 0, 354, 355, 356, 357, 358, 359,
	360, 361, 0, 0, 363, 364, 365, 362, 366, 367,
	0, 368, 0, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 378, 1358, 379, 380, 381, 1307, 1305,
	1306, 1313, 1309, 1308, 1312, 382, 383, 384, 385, 386,
	1340, 387, 389, 1334, 1333, 1253, 392, 394, 388, 390,
	0, 393, 391, 395, 396, 0, 397, 398, 399, 0,
	0, 400, 1325, 402, 0, 403, 404, 405, 0, 406,
	407, 408, 0, 409, 410, 1259, 411, 412, 413, 415,
	417, 414, 416, 418, 419, 420, 421, 422, 1348, 1349,
	423, 1272, 318, 0, 0, 0, 0, 0, 424, 425,
	426, 1332, 0, 0, 0, 427, 0, 428, 429, 430,
	0, 431, 432, 0, 1359, 433, 434, 435, 1345, 1346,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 0,
	445, 1355, 0, 1282, 446, 0, 447, 448, 449, 450,
	451, 452, 453, 1318, 1319, 1322, 547, 1361, 454, 455,
	456, 0, 457, 458, 459, 460, 461, 0, 0, 0,
	319, 462, 463, 464, 0, 1360, 762, 465, 548, 466,
	1327, 1328, 0, 1288, 0, 467, 468, 470, 1362, 1320,
	1363, 469, 471, 472, 1364, 473, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 483, 482,
	0, 485, 1356, 484, 1365, 486, 487, 1366, 0, 488,
	489, 490, 491, 492, 493, 496, 1311, 1310, 494, 495,
	497, 498, 0, 499, 500, 502, 505, 501, 503, 504,
	506, 519, 520, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 522, 0, 521, 1367, 523,
	524, 525, 526, 527, 534, 536, 537, 532, 533, 535,
	538, 539, 541, 529, 530, 531, 1368, 540, 528, 1250,
	320, 1369, 542, 543, 544, 545, 1273, 1321, 546, 1335,
	549, 550, 0, 0, 551, 0, 552, 0, 0, 554,
	555, 556, 0, 0, 557, 558, 770, 1370, 559, 1371,
	1350, 560, 561, 1260, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 0, 572, 573, 772, 574, 575,
	576, 773, 577, 578, 579, 1351, 580, 775, 581, 582,
	0, 583, 584, 585, 0, 586, 587, 588, 589, 590,
	591, 592, 593, 1331, 594, 595, 597, 596, 598, 0,
	599, 0, 600, 601, 602, 0, 0, 0, 0, 0,
	603, 604, 606, 0, 607, 608, 609, 610, 605, 611,
	612, 613, 614, 615, 616, 0, 618, 619, 617, 620,
	621, 1372, 622, 623, 624, 625, 626, 1261, 627, 0,
	628, 629, 637, 638, 639, 630, 631, 633, 640, 632,
	641, 642, 643, 644, 646, 645, 0, 648, 649, 647,
	650, 651, 652, 1314, 653, 778, 654, 634, 635, 655,
	656, 1373, 657, 658, 659, 660, 661, 662, 663, 1329,
	0, 664, 0, 665, 666, 667, 668, 669, 670, 672,
	636, 673, 678, 679, 1376, 674, 675, 676, 677, 1352,
	681, 682, 683, 684, 0, 685, 686, 1247, 680, 671,
	0, 687, 688, 689, 690, 691, 692, 0, 693, 694,
	0, 695, 1341, 1342, 1343, 1344, 0, 707, 0, 696,
	698, 699, 700, 701, 1353, 702, 1354, 1271, 703, 704,
	705, 706, 697, 708, 709, 0, 1254, 710, 711, 712,
	714, 716, 717, 713, 715, 718, 1315, 719, 0, 0,
	720, 721, 722, 788, 1338, 1375, 0, 724, 725, 723,
	726, 727, 730, 728, 729, 791, 731, 732, 733, 0,
	0, 0, 0, 734, 735, 792, 736, 737, 738, 1251,
	0, 0, 0, 0, 0, 0, 1293, 1265, 1266, 1267,
	1263, 1264, 1276, 0, 1246, 0, 0, 0, 0, 0,
	0, 1244, 1245, 321, 322, 324, 323, 325, 326, 327,
	328, 1277, 329, 330, 0, 1275, 0, 0, 0, 1317,
	1281, 0, 0, 331, 0, 332, 333, 334, 1357, 335,
	336, 337, 338, 339, 340, 341, 740, 1330, 0, 342,
	1337, 343, 1336, 0, 1347, 344, 345, 346, 347, 348,
	349, 350, 1283, 1316, 1248, 351, 1377, 1378, 747, 0,
	352, 353, 1323, 0, 1304, 0, 354, 355, 356, 357,
	358, 359, 360, 361, 0, 0, 363, 364, 365, 362,
	366, 367, 0, 368, 0, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 377, 378, 1358, 379, 380, 5462,
	1307, 1305, 1306, 1313, 1309, 1308, 1312, 382, 383, 384,
	385, 386, 1340, 387, 389, 1334, 1333, 1253, 392, 394,
	388, 390, 0, 393, 391, 395, 396, 0, 397, 398,
	399, 0, 0, 400, 1325, 402, 0, 403, 404, 405,
	0, 406, 407, 408, 0, 409, 410, 1259, 411, 412,
	413, 415, 417, 414, 416, 418, 419, 420, 421, 422,
	1348, 1349, 423, 1272, 318, 0, 0, 0, 0, 0,
	424, 425, 426, 1332, 0, 0, 0, 427, 0, 428,
	429, 430, 0, 431, 432, 0, 1359, 433, 434, 435,
	1345, 1346, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 0, 445, 1355, 0, 1282, 446, 0, 447, 448,
	449, 450, 451, 452, 453, 1318, 1319, 1322, 547, 1361,
	454, 455, 456, 0, 457, 458, 459, 460, 461, 0,
	0, 0, 319, 462, 463, 464, 0, 1360, 762, 465,
	548, 466, 1327, 1328, 0, 1288, 0, 467, 468, 470,
	1362, 1320, 1363, 469, 471, 472, 1364, 473, 0, 0,
	0, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	483, 482, 0, 485, 1356, 484, 1365, 486, 487, 1366,
	0, 488, 489, 490, 491, 492, 493, 496, 1311, 1310,
	494, 495, 497, 498, 0, 499, 500, 502, 505, 501,
	503, 504, 506, 519, 520, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 522, 0, 521,
	1367, 523, 524, 525, 526, 527, 534, 536, 537, 532,
	533, 535, 538, 539, 541, 529, 530, 531, 1368, 540,
	528, 1250, 320, 1369, 542, 543, 544, 545, 1273, 1321,
	546, 1335, 549, 550, 0, 0, 551, 0, 552, 0,
	0, 554, 555, 556, 0, 0, 557, 558, 770, 1370,
	559, 1371, 1350, 560, 561, 1260, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 0, 572, 573, 772,
	574, 575, 576, 773, 577, 578, 579, 1351, 580, 775,
	581, 582, 0, 583, 584, 585, 0, 586, 587, 588,
	589, 590, 591, 592, 593, 1331, 594, 595, 597, 596,
	598, 0, 599, 0, 600, 601, 602, 0, 0, 0,
	0, 0, 603, 604, 606, 0, 607, 608, 609, 610,
	605, 611, 612, 613, 614, 615, 616, 0, 618, 619,
	617, 620, 621, 1372, 622, 623, 624, 625, 626, 1261,
	627, 0, 628, 629, 637, 638, 639, 630, 631, 633,
	640, 632, 641, 642, 643, 644, 646, 645, 0, 648,
	649, 647, 650, 651, 652, 1314, 653, 778, 654, 634,
	635, 655, 656, 1373, 657, 658, 659, 660, 661, 662,
	663, 1329, 0, 664, 0, 665, 666, 667, 668, 669,
	670, 672, 636, 673, 678, 679, 1376, 674, 675, 676,
	677, 1352, 681, 682, 683, 684, 0, 685, 686, 1247,
	680, 671, 0, 687, 688, 689, 690, 691, 692, 0,
	693, 694, 0, 695, 1341, 1342, 1343, 1344, 0, 707,
	0, 696, 698, 699, 700, 701, 1353, 702, 1354, 1271,
	703, 704, 705, 706, 697, 5461, 709, 0, 1254, 710,
	711, 712, 714, 716, 717, 713, 715, 718, 1315, 719,
	0, 0, 720, 721, 722, 788, 1338, 1375, 0, 724,
	725, 723, 726, 727, 730, 728, 729, 791, 731, 732,
	733, 0, 0, 0, 0, 734, 735, 792, 736, 737,
	738, 1251, 0, 0, 0, 0, 0, 0, 1293, 1265,
	1266, 1267, 1263, 1264, 1276, 0, 1246, 0, 0, 0,
	0, 0, 0, 1244, 1245, 321, 322, 324, 323, 325,
	326, 327, 328, 1277, 329, 330, 0, 1275, 0, 0,
	0, 1317, 1281, 0, 0, 331, 0, 332, 333, 334,
	1357, 335, 336, 337, 338, 339, 340, 341, 5460, 1330,
	0, 342, 1337, 343, 1336, 0, 1347, 344, 345, 346,
	347, 348, 349, 350, 1283, 1316, 1248, 351, 1377, 1378,
	747, 0, 352, 353, 1323, 0, 1304, 0, 354, 355,
	356, 357, 358, 359, 360, 361, 0, 0, 363, 364,
	365, 362, 366, 367, 0, 368, 0, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 378, 1358, 379,
	380, 5462, 1307, 1305, 1306, 1313, 1309, 1308, 1312, 382,
	383, 384, 385, 386, 1340, 387, 389, 1334, 1333, 1253,
	392, 394, 388, 390, 0, 393, 391, 395, 396, 0,
	397, 398, 399, 0, 0, 400, 1325, 402, 0, 403,
	404, 405, 0, 406, 407, 408, 0, 409, 410, 1259,
	411, 412, 413, 415, 417, 414, 416, 418, 419, 420,
	421, 422, 1348, 1349, 423, 1272, 318, 0, 0, 0,
	0, 0, 424, 425, 426, 1332, 0, 0, 0, 427,
	0, 428, 429, 430, 0, 431, 432, 0, 1359, 433,
	434, 435, 1345, 1346, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 0, 445, 1355, 0, 1282, 446, 0,
	447, 448, 449, 450, 451, 452, 453, 1318, 1319, 1322,
	547, 1361, 454, 455, 456, 0, 457, 458, 459, 460,
	461, 0, 0, 0, 319, 462, 463, 464, 0, 1360,
	762, 465, 548, 466, 1327, 1328, 0, 1288, 0, 467,
	468, 470, 1362, 1320, 1363, 469, 471, 472, 1364, 473,
	0, 0, 0, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 483, 482, 0, 485, 1356, 484, 1365, 486,
	487, 1366, 0, 488, 489, 490, 491, 492, 493, 496,
	1311, 1310, 494, 495, 497, 498, 0, 499, 500, 502,
	505, 501, 503, 504, 506, 519, 520, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 522,
	0, 521, 1367, 523, 524, 525, 526, 527, 534, 536,
	537, 532, 533, 535, 538, 539, 541, 529, 530, 531,
	1368, 540, 528, 1250, 320, 1369, 542, 543, 544, 545,
	1273, 1321, 546, 1335, 549, 550, 0, 0, 551, 0,
	552, 0, 0, 554, 555, 556, 0, 0, 557, 558,
	770, 1370, 559, 1371, 1350, 560, 561, 1260, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 0, 572,
	573, 772, 574, 575, 576, 773, 577, 578, 579, 1351,
	580, 775, 581, 582, 0, 583, 584, 585, 0, 586,
	587, 588, 589, 590, 591, 592, 593, 1331, 594, 595,
	597, 596, 598, 0, 599, 0, 600, 601, 602, 0,
	0, 0, 0, 0, 603, 604, 606, 0, 607, 608,
	609, 610, 605, 611, 612, 613, 614, 615, 616, 0,
	618, 619, 617, 620, 621, 1372, 622, 623, 624, 625,
	626, 1261, 627, 0, 628, 629, 637, 638, 639, 630,
	631, 633, 640, 632, 641, 642, 643, 644, 646, 645,
	0, 648, 649, 647, 650, 651, 652, 1314, 653, 778,
	654, 634, 635, 655, 656, 1373, 657, 658, 659, 660,
	661, 662, 663, 1329, 0, 664, 0, 665, 666, 667,
	668, 669, 670, 672, 636, 673, 678, 679, 1376, 674,
	675, 676, 677, 1352, 681, 682, 683, 684, 0, 685,
	686, 1247, 680, 671, 0, 687, 688, 689, 690, 691,
	692, 0, 693, 694, 0, 695, 1341, 1342, 1343, 1344,
	0, 707, 0, 696, 698, 699, 700, 701, 1353, 702,
	1354, 1271, 703, 704, 705, 706, 697, 5461, 709, 0,
	1254, 710, 711, 712, 714, 716, 717, 713, 715, 718,
	1315, 719, 0, 0, 720, 721, 722, 788, 1338, 1375,
	0, 724, 725, 723, 726, 727, 730, 728, 729, 791,
	731, 732, 733, 0, 0, 0, 0, 734, 735, 792,
	736, 737, 738, 1251, 0, 0, 0, 0, 0, 0,
	1293, 1265, 1266, 1267, 1263, 1264, 1276, 0, 1246, 0,
	0, 0, 0, 0, 0, 1244, 1245, 321, 322, 324,
	323, 325, 326, 327, 328, 1277, 329, 330, 0, 1275,
	0, 0, 0, 1317, 1281, 0, 0, 331, 0, 332,
	333, 334, 1357, 335, 336, 337, 338, 339, 340, 341,
	740, 1330, 0, 342, 1337, 343, 1336, 0, 1347, 344,
	345, 346, 347, 348, 349, 350, 1283, 1316, 1248, 351,
	1377, 1378, 747, 0, 352, 353, 1323, 0, 1304, 0,
	354, 355, 356, 357, 358, 359, 360, 361, 0, 0,
	363, 364, 365, 362, 366, 367, 0, 368, 0, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 378,
	1358, 379, 5035, 381, 1307, 1305, 1306, 1313, 1309, 1308,
	1312, 382, 383, 384, 385, 386, 1340, 387, 389, 1334,
	1333, 1253, 392, 394, 388, 390, 0, 393, 391, 395,
	396, 0, 397, 398, 399, 0, 0, 400, 1325, 402,
	0, 403, 404, 405, 0, 406, 407, 408, 0, 409,
	410, 1259, 411, 412, 413, 415, 417, 414, 416, 418,
	419, 420, 421, 422, 1348, 1349, 423, 1272, 318, 0,
	0, 0, 0, 0, 424, 425, 426, 1332, 0, 0,
	0, 427, 0, 428, 429, 430, 0, 431, 432, 0,
	1359, 433, 434, 435, 1345, 1346, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 0, 445, 1355, 0, 5036,
	446, 0, 447, 448, 449, 450, 451, 452, 453, 1318,
	1319, 1322, 547, 1361, 454, 455, 456, 0, 457, 458,
	459, 460, 461, 0, 0, 0, 319, 462, 463, 464,
	0, 1360, 762, 465, 548, 466, 1327, 1328, 0, 1288,
	0, 467, 468, 470, 1362, 1320, 1363, 469, 471, 472,
	1364, 473, 0, 0, 0, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 483, 482, 0, 485, 1356, 484,
	1365, 486, 487, 1366, 0, 488, 489, 490, 491, 492,
	493, 496, 1311, 1310, 494, 495, 497, 498, 0, 499,
	500, 502, 505, 501, 503, 504, 506, 519, 520, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 522, 0, 521, 1367, 523, 524, 525, 526, 527,
	534, 536, 537, 532, 533, 535, 538, 539, 541, 529,
	530, 531, 1368, 540, 528, 1250, 320, 1369, 542, 543,
	544, 545, 1273, 1321, 546, 1335, 549, 550, 0, 0,
	551, 0, 552, 0, 0, 554, 555, 556, 0, 0,
	557, 558, 770, 1370, 559, 1371, 1350, 560, 561, 1260,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	0, 572, 573, 772, 574, 575, 576, 773, 577, 578,
	579, 1351, 580, 775, 581, 582, 0, 583, 584, 585,
	0, 586, 587, 588, 589, 590, 591, 592, 593, 1331,
	594, 595, 597, 596, 598, 0, 599, 0, 600, 601,
	602, 0, 0, 0, 0, 0, 603, 604, 606, 0,
	607, 608, 609, 610, 605, 611, 612, 613, 614, 615,
	616, 0, 618, 619, 617, 620, 621, 1372, 622, 623,
	624, 5034, 626, 1261, 627, 0, 628, 629, 637, 638,
	639, 630, 631, 633, 640, 632, 641, 642, 643, 644,
	646, 645, 0, 648, 649, 647, 650, 651, 652, 1314,
	653, 778, 654, 634, 635, 655, 656, 1373, 657, 658,
	659, 660, 661, 662, 663, 1329, 0, 664, 0, 665,
	666, 667, 668, 669, 670, 672, 636, 673, 678, 679,
	1376, 674, 675, 676, 677, 1352, 681, 682, 683, 684,
	0, 685, 686, 1247, 680, 671, 0, 687, 688, 689,
	690, 691, 692, 0, 693, 694, 0, 695, 1341, 1342,
	1343, 1344, 0, 707, 0, 696, 698, 699, 700, 701,
	1353, 702, 1354, 1271, 703, 704, 705, 706, 697, 708,
	709, 0, 1254, 710, 711, 712, 714, 716, 717, 713,
	715, 718, 1315, 719, 0, 0, 720, 721, 722, 788,
	1338, 1375, 0, 724, 725, 723, 726, 727, 730, 728,
	729, 791, 731, 732, 733, 0, 0, 0, 0, 734,
	735, 792, 736, 737, 738, 1251, 0, 0, 0, 0,
	0, 0, 1293, 1265, 1266, 1267, 3645, 3646, 1276, 0,
	1246, 0, 0, 0, 0, 0, 0, 1244, 1245, 321,
	322, 324, 323, 325, 326, 327, 328, 1277, 329, 330,
	0, 1275, 0, 0, 0, 1317, 1281, 0, 0, 331,
	0, 332, 333, 334, 1357, 335, 336, 337, 338, 339,
	340, 341, 740, 1330, 0, 342, 1337, 343, 1336, 0,
	1347, 344, 345, 346, 347, 348, 349, 350, 1283, 1316,
	1248, 351, 1377, 1378, 747, 0, 352, 353, 1323, 0,
	1304, 0, 354, 355, 356, 357, 358, 359, 360, 361,
	0, 0, 363, 364, 365, 362, 366, 367, 0, 368,
	0, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 378, 1358, 379, 380, 381, 1307, 1305, 1306, 1313,
	1309, 1308, 1312, 382, 383, 384, 385, 386, 1340, 387,
	389, 1334, 1333, 1253, 392, 394, 388, 390, 0, 393,
	391, 395, 396, 0, 397, 398, 399, 0, 0, 400,
	1325, 402, 0, 403, 404, 405, 0, 406, 407, 408,
	0, 409, 410, 1259, 411, 412, 413, 415, 417, 414,
	416, 418, 419, 420, 421, 422, 1348, 1349, 423, 1272,
	318, 0, 0, 0, 0, 0, 424, 425, 426, 1332,
	0, 0, 0, 427, 0, 428, 429, 430, 0, 431,
	432, 0, 1359, 433, 434, 435, 1345, 1346, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 0, 445, 1355,
	0, 1282, 446, 0, 447, 448, 449, 450, 451, 452,
	453, 1318, 1319, 1322, 547, 1361, 454, 455, 456, 0,
	457, 458, 459, 460, 461, 0, 0, 0, 319, 462,
	463, 464, 0, 1360, 762, 465, 548, 466, 1327, 1328,
	0, 1288, 0, 467, 468, 470, 1362, 1320, 1363, 469,
	471, 472, 1364, 473, 0, 0, 0, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 483, 482, 0, 485,
	1356, 484, 1365, 486, 487, 1366, 0, 488, 489, 490,
	491, 492, 493, 496, 1311, 1310, 494, 495, 497, 498,
	0, 499, 500, 502, 505, 501, 503, 504, 506, 519,
	520, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 522, 0, 521, 1367, 523, 524, 525,
	526, 527, 534, 536, 537, 532, 533, 535, 538, 539,
	541, 529, 530, 531, 1368, 540, 528, 1250, 320, 1369,
	542, 543, 544, 545, 1273, 1321, 546, 1335, 549, 550,
	0, 0, 551, 0, 552, 0, 0, 554, 555, 556,
	0, 0, 557, 558, 770, 1370, 559, 1371, 1350, 560,
	561, 1260, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 0, 572, 573, 772, 574, 575, 576, 773,
	577, 578, 579, 1351, 580, 775, 581, 582, 0, 583,
	584, 585, 0, 586, 587, 588, 589, 590, 591, 592,
	593, 1331, 594, 595, 597, 596, 598, 0, 599, 0,
	600, 601, 602, 0, 0, 0, 0, 0, 603, 604,
	606, 0, 607, 608, 609, 610, 605, 611, 612, 613,
	614, 615, 616, 0, 618, 619, 617, 620, 621, 1372,
	622, 623, 624, 625, 626, 1261, 627, 0, 628, 629,
	637, 638, 639, 630, 631, 633, 640, 632, 641, 642,
	643, 644, 646, 645, 0, 648, 649, 647, 650, 651,
	652, 1314, 653, 778, 654, 634, 635, 655, 656, 1373,
	657, 658, 659, 660, 661, 662, 663, 1329, 0, 664,
	0, 665, 666, 667, 668, 669, 670, 672, 636, 673,
	678, 679, 1376, 674, 675, 676, 677, 1352, 681, 682,
	683, 684, 0, 685, 686, 1247, 680, 671, 0, 687,
	688, 689, 690, 691, 692, 0, 693, 694, 0, 695,
	1341, 1342, 1343, 1344, 0, 707, 0, 696, 698, 699,
	700, 701, 1353, 702, 1354, 1271, 703, 704, 705, 706,
	697, 708, 709, 0, 1254, 710, 711, 712, 714, 716,
	717, 713, 715, 718, 1315, 719, 0, 0, 720, 721,
	722, 788, 1338, 1375, 0, 724, 725, 723, 726, 727,
	730, 728, 729, 791, 731, 732, 733, 0, 0, 0,
	0, 734, 735, 792, 736, 737, 738, 1251, 0, 0,
	0, 0, 0, 0, 1293, 1265, 1266, 1267, 3643, 3644,
	1276, 0, 1246, 0, 0, 0, 0, 0, 0, 1244,
	1245, 321, 322, 324, 323, 325, 326, 327, 328, 1277,
	329, 330, 0, 1275, 0, 0, 0, 1317, 1281, 0,
	0, 331, 0, 332, 333, 334, 1357, 335, 336, 337,
	338, 339, 340, 341, 740, 1330, 0, 342, 1337, 343,
	1336, 0, 1347, 344, 345, 346, 347, 348, 349, 350,
	1283, 1316, 1248, 351, 1377, 1378, 747, 0, 352, 353,
	1323, 0, 1304, 0, 354, 355, 356, 357, 358, 359,
	360, 361, 0, 0, 363, 364, 365, 362, 366, 367,
	0, 368, 0, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 378, 1358, 379, 380, 381, 1307, 1305,
	1306, 1313, 1309, 1308, 1312, 382, 383, 384, 385, 386,
	1340, 387, 389, 1334, 1333, 1253, 392, 394, 388, 390,
	0, 393, 391, 395, 396, 0, 397, 398, 399, 0,
	0, 400, 1325, 402, 0, 403, 404, 405, 0, 406,
	407, 408, 0, 409, 410, 1259, 411, 412, 413, 415,
	417, 414, 416, 418, 419, 420, 421, 422, 1348, 1349,
	423, 1272, 318, 0, 0, 0, 0, 0, 424, 425,
	426, 1332, 0, 0, 0, 427, 0, 428, 429, 430,
	0, 431, 432, 0, 1359, 433, 434, 435, 1345, 1346,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 0,
	445, 1355, 0, 1282, 446, 0, 447, 448, 449, 450,
	451, 452, 453, 1318, 1319, 1322, 547, 1361, 454, 455,
	456, 0, 457, 458, 459, 460, 461, 0, 0, 0,
	319, 462, 463, 464, 0, 1360, 762, 465, 548, 466,
	1327, 1328, 0, 1288, 0, 467, 468, 470, 1362, 1320,
	1363, 469, 471, 472, 1364, 473, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 483, 482,
	0, 485, 1356, 484, 1365, 486, 487, 1366, 0, 488,
	489, 490, 491, 492, 493, 496, 1311, 1310, 494, 495,
	497, 498, 0, 499, 500, 502, 505, 501, 503, 504,
	506, 519, 520, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 522, 0, 521, 1367, 523,
	524, 525, 526, 527, 534, 536, 537, 532, 533, 535,
	538, 539, 541, 529, 530, 531, 1368, 540, 528, 1250,
	320, 1369, 542, 543, 544, 545, 1273, 1321, 546, 1335,
	549, 550, 0, 0, 551, 0, 552, 0, 0, 554,
	555, 556, 0, 0, 557, 558, 770, 1370, 559, 1371,
	1350, 560, 561, 1260, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 0, 572, 573, 772, 574, 575,
	576, 773, 577, 578, 579, 1351, 580, 775, 581, 582,
	0, 583, 584, 585, 0, 586, 587, 588, 589, 590,
	591, 592, 593, 1331, 594, 595, 597, 596, 598, 0,
	599, 0, 600, 601, 602, 0, 0, 0, 0, 0,
	603, 604, 606, 0, 607, 608, 609, 610, 605, 611,
	612, 613, 614, 615, 616, 0, 618, 619, 617, 620,
	621, 1372, 622, 623, 624, 625, 626, 1261, 627, 0,
	628, 629, 637, 638, 639, 630, 631, 633, 640, 632,
	641, 642, 643, 644, 646, 645, 0, 648, 649, 647,
	650, 651, 652, 1314, 653, 778, 654, 634, 635, 655,
	656, 1373, 657, 658, 659, 660, 661, 662, 663, 1329,
	0, 664, 0, 665, 666, 667, 668, 669, 670, 672,
	636, 673, 678, 679, 1376, 674, 675, 676, 677, 1352,
	681, 682, 683, 684, 0, 685, 686, 1247, 680, 671,
	0, 687, 688, 689, 690, 691, 692, 0, 693, 694,
	0, 695, 1341, 1342, 1343, 1344, 0, 707, 0, 696,
	698, 699, 700, 701, 1353, 702, 1354, 1271, 703, 704,
	705, 706, 697, 708, 709, 0, 1254, 710, 711, 712,
	714, 716, 717, 713, 715, 718, 1315, 719, 0, 0,
	720, 721, 722, 788, 1338, 1375, 0, 724, 725, 723,
	726, 727, 730, 728, 729, 791, 731, 732, 733, 0,
	0, 0, 0, 734, 735, 792, 736, 737, 738, 1251,
	0, 0, 0, 0, 0, 0, 1293, 1265, 1266, 1267,
	1263, 1264, 1276, 0, 1246, 0, 0, 0, 0, 0,
	0, 1244, 1245, 321, 322, 324, 323, 325, 326, 327,
	328, 1277, 329, 330, 0, 1275, 0, 0, 0, 1317,
	1281, 0, 0, 331, 0, 332, 333, 334, 1357, 335,
	336, 337, 338, 339, 340, 341, 740, 1330, 0, 342,
	1337, 343, 1336, 0, 1347, 344, 345, 346, 347, 348,
	349, 350, 1283, 1316, 1248, 351, 1377, 1378, 747, 0,
	352, 353, 1323, 0, 1304, 0, 354, 355, 356, 357,
	358, 359, 360, 361, 0, 0, 363, 364, 365, 362,
	366, 367, 0, 368, 0, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 377, 378, 1358, 379, 380, 381,
	1307, 1305, 1306, 1313, 1309, 1308, 1312, 382, 383, 384,
	385, 386, 1340, 387, 389, 1334, 1333, 1253, 392, 394,
	388, 390, 0, 393, 391, 395, 396, 0, 397, 398,
	399, 0, 0, 400, 1325, 402, 0, 403, 404, 405,
	0, 406, 407, 408, 0, 409, 410, 1259, 411, 412,
	413, 415, 417, 414, 416, 418, 419, 420, 421, 422,
	1348, 1349, 423, 1272, 318, 0, 0, 0, 0, 0,
	424, 425, 426, 1332, 0, 0, 0, 427, 0, 428,
	429, 430, 0, 431, 432, 0, 1359, 433, 434, 435,
	1345, 1346, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 0, 445, 1355, 0, 1282, 446, 0, 447, 448,
	449, 450, 451, 452, 453, 1318, 1319, 1322, 547, 1361,
	454, 455, 456, 0, 457, 458, 459, 460, 461, 0,
	0, 0, 319, 462, 463, 464, 0, 1360, 762, 465,
	548, 466, 1327, 1328, 0, 1288, 0, 467, 468, 470,
	1362, 1320, 1363, 469, 471, 472, 1364, 473, 0, 0,
	0, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	483, 482, 0, 485, 1356, 484, 1365, 486, 487, 1366,
	0, 488, 489, 490, 491, 492, 493, 496, 1311, 1310,
	494, 495, 497, 498, 0, 499, 500, 502, 505, 501,
	503, 504, 506, 519, 520, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 522, 0, 521,
	1367, 523, 524, 525, 526, 527, 534, 536, 537, 532,
	533, 535, 538, 539, 541, 529, 530, 531, 1368, 540,
	528, 1250, 320, 1369, 542, 543, 544, 545, 1273, 1321,
	546, 1335, 549, 550, 0, 0, 551, 0, 552, 0,
	0, 554, 555, 556, 0, 0, 557, 558, 770, 1370,
	559, 1371, 1350, 560, 561, 1260, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 0, 572, 573, 772,
	574, 575, 576, 773, 577, 578, 579, 1351, 580, 775,
	581, 582, 0, 583, 584, 585, 0, 586, 587, 588,
	589, 590, 591, 592, 593, 1331, 594, 595, 597, 596,
	598, 0, 599, 0, 600, 601, 602, 0, 0, 0,
	0, 0, 603, 604, 606, 0, 607, 608, 609, 610,
	605, 611, 612, 613, 614, 615, 616, 0, 618, 619,
	617, 620, 621, 1372, 622, 623, 624, 625, 626, 1261,
	627, 0, 628, 629, 637, 638, 639, 630, 631, 633,
	640, 632, 641, 642, 643, 644, 646, 645, 0, 648,
	649, 647, 650, 651, 652, 1314, 653, 778, 654, 634,
	635, 655, 656, 1373, 657, 658, 659, 660, 661, 662,
	663, 1329, 0, 664, 0, 665, 666, 667, 668, 669,
	670, 672, 636, 673, 678, 679, 1376, 674, 675, 676,
	677, 1352, 681, 682, 683, 684, 0, 685, 686, 1247,
	680, 671, 0, 687, 688, 689, 690, 691, 692, 0,
	693, 694, 0, 695, 1341, 1342, 1343, 1344, 0, 707,
	0, 696, 698, 699, 700, 701, 1353, 702, 1354, 1271,
	703, 704, 705, 706, 697, 708, 709, 0, 1254, 710,
	711, 712, 714, 716, 717, 713, 715, 718, 1315, 719,
	0, 0, 720, 721, 722, 788, 1338, 1375, 0, 724,
	725, 723, 726, 727, 730, 728, 729, 791, 731, 732,
	733, 0, 0, 0, 0, 734, 735, 792, 736, 737,
	738, 1251, 0, 0, 0, 0, 0, 0, 1293, 1265,
	1266, 1267, 1263, 1264, 1276, 0, 1246, 0, 0, 0,
	0, 0, 0, 2788, 2789, 321, 322, 324, 323, 325,
	326, 327, 328, 1277, 329, 330, 0, 1275, 0, 0,
	0, 1317, 1281, 0, 0, 331, 0, 332, 333, 334,
	1357, 335, 336, 337, 338, 339, 340, 341, 740, 1330,
	0, 342, 1337, 343, 1336, 0, 1347, 344, 345, 346,
	347, 348, 349, 350, 1283, 1316, 0, 351, 1377, 1378,
	747, 0, 352, 353, 1323, 0, 1304, 0, 354, 355,
	356, 357, 358, 359, 360, 361, 0, 0, 363, 364,
	365, 362, 366, 367, 0, 368, 0, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 378, 1358, 379,
	380, 381, 1307, 1305, 1306, 1313, 1309, 1308, 1312, 382,
	383, 384, 385, 386, 1340, 387, 389, 1334, 1333, 0,
	392, 394, 388, 390, 0, 393, 391, 395, 396, 0,
	397, 398, 399, 0, 0, 400, 1325, 402, 0, 403,
	404, 405, 0, 406, 407, 408, 0, 409, 410, 1259,
	411, 412, 413, 415, 417, 414, 416, 418, 419, 420,
	421, 422, 1348, 1349, 423, 1272, 318, 0, 0, 0,
	0, 0, 424, 425, 426, 1332, 0, 0, 0, 427,
	0, 428, 429, 430, 0, 431, 432, 0, 1359, 433,
	434, 435, 1345, 1346, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 0, 445, 1355, 0, 1282, 446, 0,
	447, 448, 449, 450, 451, 452, 453, 1318, 1319, 1322,
	547, 1361, 454, 455, 456, 0, 457, 458, 459, 460,
	461, 0, 0, 0, 319, 462, 463, 464, 0, 1360,
	762, 465, 548, 466, 1327, 1328, 0, 1288, 0, 467,
	468, 470, 1362, 1320, 1363, 469, 471, 472, 1364, 473,
	0, 0, 0, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 483, 482, 0, 485, 1356, 484, 1365, 486,
	487, 1366, 0, 488, 489, 490, 491, 492, 493, 496,
	1311, 1310, 494, 495, 497, 498, 0, 499, 500, 502,
	505, 501, 503, 504, 506, 519, 520, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 522,
	0, 521, 1367, 523, 524, 525, 526, 527, 534, 536,
	537, 532, 533, 535, 538, 539, 541, 529, 530, 531,
	1368, 540, 528, 0, 320, 1369, 542, 543, 544, 545,
	1273, 1321, 546, 1335, 549, 550, 0, 0, 551, 0,
	552, 0, 0, 554, 555, 556, 0, 0, 557, 558,
	770, 1370, 559, 1371, 1350, 560, 561, 1260, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 0, 572,
	573, 772, 574, 575, 576, 773, 577, 578, 579, 1351,
	580, 775, 581, 582, 0, 583, 584, 585, 0, 586,
	587, 588, 589, 590, 591, 592, 593, 1331, 594, 595,
	597, 596, 598, 0, 599, 0, 600, 601, 602, 0,
	0, 0, 0, 0, 603, 604, 606, 0, 607, 608,
	609, 610, 605, 611, 612, 613, 614, 615, 616, 0,
	618, 619, 617, 620, 621, 1372, 622, 623, 624, 625,
	626, 1261, 627, 0, 628, 629, 637, 638, 639, 630,
	631, 633, 640, 632, 641, 642, 643, 644, 646, 645,
	0, 648, 649, 647, 650, 651, 652, 1314, 653, 778,
	654, 634, 635, 655, 656, 1373, 657, 658, 659, 660,
	661, 662, 663, 1329, 0, 664, 0, 665, 666, 667,
	668, 669, 670, 672, 636, 673, 678, 679, 1376, 674,
	675, 676, 677, 1352, 681, 682, 683, 684, 0, 685,
	686, 0, 680, 671, 0, 687, 688, 689, 690, 691,
	692, 0, 693, 694, 0, 695, 1341, 1342, 1343, 1344,
	0, 707, 0, 696, 698, 699, 700, 701, 1353, 702,
	1354, 1271, 703, 704, 705, 706, 697, 708, 709, 0,
	0, 710, 711, 712, 714, 716, 717, 713, 715, 718,
	1315, 719, 0, 0, 720, 721, 722, 788, 1338, 1375,
	0, 724, 725, 723, 726, 727, 730, 728, 729, 791,
	731, 732, 733, 0, 0, 0, 0, 734, 735, 792,
	736, 737, 738, 0, 0, 0, 0, 0, 0, 0,
	1293, 1265, 1266, 1267, 1263, 1264, 1276, 0, 3049, 0,
	0, 0, 0, 0, 0, 3047, 3048, 321, 322, 324,
	323, 325, 326, 327, 328, 1277, 329, 330, 0, 1275,
	0, 0, 0, 1317, 1281, 0, 0, 331, 0, 332,
	333, 334, 1357, 335, 336, 337, 338, 339, 340, 341,
	740, 1330, 0, 342, 1337, 343, 1336, 0, 1347, 344,
	345, 346, 347, 348, 349, 350, 1283, 1316, 0, 351,
	1377, 1378, 747, 0, 352, 353, 1323, 0, 1304, 0,
	354, 355, 356, 357, 358, 359, 360, 361, 0, 0,
	363, 364, 365, 362, 366, 367, 0, 368, 0, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 378,
	1358, 379, 380, 381, 1307, 1305, 1306, 1313, 1309, 1308,
	1312, 382, 383, 384, 385, 386, 1340, 387, 389, 1334,
	1333, 0, 392, 394, 388, 390, 0, 393, 391, 395,
	396, 0, 397, 398, 399, 0, 0, 400, 1325, 402,
	0, 403, 404, 405, 0, 406, 407, 408, 0, 409,
	410, 1259, 411, 412, 413, 415, 417, 414, 416, 418,
	419, 420, 421, 422, 1348, 1349, 423, 1272, 318, 0,
	0, 0, 0, 0, 424, 425, 426, 1332, 0, 0,
	0, 427, 0, 428, 429, 430, 0, 431, 432, 0,
	1359, 433, 434, 435, 1345, 1346, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 0, 445, 1355, 0, 1282,
	446, 0, 447, 448, 449, 450, 451, 452, 453, 1318,
	1319, 1322, 547, 1361, 454, 455, 456, 0, 457, 458,
	459, 460, 461, 0, 0, 0, 319, 462, 463, 464,
	0, 1360, 762, 465, 548, 466, 1327, 1328, 0, 1288,
	0, 467, 468, 470, 1362, 1320, 1363, 469, 471, 472,
	1364, 473, 0, 0, 0, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 483, 482, 0, 485, 1356, 484,
	1365, 486, 487, 1366, 0, 488, 489, 490, 491, 492,
	493, 496, 1311, 1310, 494, 495, 497, 498, 0, 499,
	500, 502, 505, 501, 503, 504, 506, 519, 520, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 522, 0, 521, 1367, 523, 524, 525, 526, 527,
	534, 536, 537, 532, 533, 535, 538, 539, 541, 529,
	530, 531, 1368, 540, 528, 0, 320, 1369, 542, 543,
	544, 545, 1273, 1321, 546, 1335, 549, 550, 0, 0,
	551, 0, 552, 0, 0, 554, 555, 556, 0, 0,
	557, 558, 770, 1370, 559, 1371, 1350, 560, 561, 553,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	0, 572, 573, 772, 574, 575, 576, 773, 577, 578,
	579, 1351, 580, 775, 581, 582, 0, 583, 584, 585,
	0, 586, 587, 588, 589, 590, 591, 592, 593, 1331,
	594, 595, 597, 596, 598, 0, 599, 0, 600, 601,
	602, 0, 0, 0, 0, 0, 603, 604, 606, 0,
	607, 608, 609, 610, 605, 611, 612, 613, 614, 615,
	616, 0, 618, 619, 617, 620, 621, 1372, 622, 623,
	624, 625, 626, 3638, 3639, 0, 628, 629, 637, 638,
	639, 630, 631, 633, 640, 632, 641, 642, 643, 644,
	646, 645, 0, 648, 649, 647, 650, 651, 652, 1314,
	653, 778, 654, 634, 635, 655, 656, 1373, 657, 658,
	659, 660, 661, 662, 663, 1329, 0, 664, 0, 665,
	666, 667, 668, 669, 670, 672, 636, 673, 678, 679,
	1376, 674, 675, 676, 677, 1352, 681, 682, 683, 684,
	0, 685, 686, 0, 680, 671, 0, 687, 688, 689,
	690, 691, 692, 0, 693, 694, 0, 695, 1341, 1342,
	1343, 1344, 0, 707, 0, 696, 698, 699, 700, 701,
	1353, 702, 1354, 1271, 703, 704, 705, 706, 697, 708,
	709, 0, 0, 710, 711, 712, 714, 716, 717, 713,
	715, 718, 1315, 719, 0, 0, 720, 721, 722, 788,
	1338, 1375, 0, 724, 725, 723, 726, 727, 730, 728,
	729, 791, 731, 732, 733, 0, 0, 0, 0, 734,
	735, 792, 736, 737, 738, 0, 0, 0, 0, 0,
	0, 0, 1293, 1265, 1266, 1267, 1263, 1264, 1276, 0,
	0, 0, 0, 0, 0, 0, 0, 2376, 2377, 321,
	322, 324, 323, 325, 326, 327, 328, 1277, 329, 330,
	0, 1275, 0, 0, 0, 1317, 1281, 0, 0, 331,
	0, 332, 333, 334, 1357, 335, 336, 337, 338, 339,
	340, 341, 0, 1330, 0, 342, 1337, 343, 1336, 0,
	1347, 344, 345, 346, 347, 348, 349, 350, 1283, 1316,
	1248, 351, 1377, 1378, 747, 0, 352, 353, 1323, 0,
	1304, 0, 354, 355, 356, 357, 358, 359, 360, 361,
	0, 0, 363, 364, 365, 362, 366, 367, 0, 368,
	0, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 378, 1358, 379, 380, 5462, 1307, 1305, 1306, 1313,
	1309, 1308, 1312, 382, 383, 384, 385, 386, 1340, 387,
	389, 1334, 1333, 1253, 392, 394, 388, 390, 0, 393,
	391, 395, 396, 0, 397, 398, 399, 0, 0, 400,
	1325, 402, 0, 403, 404, 405, 0, 406, 407, 408,
	0, 409, 410, 1259, 411, 412, 413, 415, 417, 414,
	416, 418, 419, 420, 421, 422, 1348, 1349, 423, 1272,
	318, 0, 0, 0, 0, 0, 424, 425, 426, 1332,
	0, 0, 0, 427, 0, 428, 429, 430, 0, 431,
	432, 0, 1359, 433, 434, 435, 1345, 1346, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 0, 445, 1355,
	0, 1282, 446, 0, 447, 448, 449, 450, 451, 452,
	453, 1318, 1319, 1322, 547, 0, 454, 455, 456, 0,
	457, 458, 459, 460, 461, 0, 0, 0, 319, 462,
	463, 464, 0, 1360, 762, 465, 548, 466, 1327, 1328,
	0, 1288, 0, 467, 468, 470, 0, 1320, 0, 469,
	471, 472, 1364, 473, 0, 0, 0, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 483, 482, 0, 485,
	1356, 484, 1365, 486, 487, 0, 0, 488, 489, 490,
	491, 492, 493, 496, 1311, 1310, 494, 495, 497, 498,
	0, 499, 500, 502, 505, 501, 503, 504, 506, 519,
	520, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 522, 0, 521, 1367, 523, 524, 525,
	526, 527, 534, 536, 537, 532, 533, 535, 538, 539,
	541, 529, 530, 531, 1368, 540, 528, 1250, 320, 0,
	542, 543, 544, 545, 1273, 1321, 546, 1335, 549, 550,
	0, 0, 551, 0, 552, 0, 0, 554, 555, 556,
	0, 0, 557, 558, 770, 1370, 559, 1371, 1350, 560,
	561, 1260, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 0, 572, 573, 772, 574, 575, 576, 773,
	577, 578, 579, 1351, 580, 775, 581, 582, 0, 583,
	584, 585, 0, 586, 587, 588, 589, 590, 591, 592,
	593, 1331, 594, 595, 597, 596, 598, 0, 599, 0,
	600, 601, 602, 0, 0, 0, 0, 0, 603, 604,
	606, 0, 607, 608, 609, 610, 605, 611, 612, 613,
	614, 615, 616, 0, 618, 619, 617, 620, 621, 1372,
	622, 623, 624, 625, 626, 1261, 627, 0, 628, 629,
	637, 638, 639, 630, 631, 633, 640, 632, 641, 642,
	643, 644, 646, 645, 0, 648, 649, 647, 650, 651,
	652, 1314, 653, 778, 654, 634, 635, 655, 656, 0,
	657, 658, 659, 660, 661, 662, 663, 1329, 0, 664,
	0, 665, 666, 667, 668, 669, 670, 672, 636, 673,
	678, 679, 1376, 674, 675, 676, 677, 1352, 681, 682,
	683, 684, 0, 685, 686, 1247, 680, 671, 0, 687,
	688, 689, 690, 691, 692, 0, 693, 694, 0, 695,
	1341, 1342, 1343, 1344, 0, 707, 0, 696, 698, 699,
	700, 701, 1353, 702, 1354, 1271, 703, 704, 705, 706,
	697, 5461, 709, 0, 1254, 710, 711, 712, 714, 716,
	717, 713, 715, 718, 1315, 719, 0, 0, 720, 721,
	722, 788, 1338, 1375, 0, 724, 725, 723, 726, 727,
	730, 728, 729, 791, 731, 732, 733, 0, 0, 0,
	0, 734, 735, 792, 736, 737, 738, 0, 0, 0,
	0, 0, 3068, 0, 1293, 1265, 1266, 1267, 1263, 1264,
	1276, 0, 0, 0, 0, 0, 0, 0, 0, 1244,
	1245, 321, 322, 324, 323, 325, 326, 327, 328, 1277,
	329, 330, 0, 1275, 0, 0, 0, 1317, 1281, 0,
	0, 331, 0, 332, 333, 334, 1357, 335, 336, 337,
	338, 339, 340, 341, 740, 1330, 0, 342, 1337, 343,
	1336, 0, 1347, 344, 345, 346, 347, 348, 349, 350,
	0, 1316, 0, 351, 1377, 1378, 747, 0, 352, 353,
	1323, 0, 1304, 0, 354, 355, 356, 357, 358, 359,
	360, 361, 0, 0, 363, 364, 365, 362, 366, 367,
	0, 368, 0, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 378, 1358, 379, 380, 381, 1307, 1305,
	1306, 1313, 1309, 1308, 1312, 382, 383, 384, 385, 386,
	1340, 387, 389, 1334, 1333, 0, 392, 394, 388, 390,
	0, 393, 391, 395, 396, 0, 397, 398, 399, 0,
	0, 400, 1325, 402, 0, 403, 404, 405, 0, 406,
	407, 408, 0, 409, 410, 751, 411, 412, 413, 415,
	417, 414, 416, 418, 419, 420, 421, 422, 1348, 1349,
	423, 1272, 318, 0, 0, 0, 0, 0, 424, 425,
	426, 1332, 0, 0, 0, 427, 0, 428, 429, 430,
	0, 431, 432, 0, 1359, 433, 434, 435, 1345, 1346,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 0,
	445, 1355, 0, 1282, 446, 0, 447, 448, 449, 450,
	451, 452, 453, 1318, 1319, 1322, 547, 1361, 454, 455,
	456, 0, 457, 458, 459, 460, 461, 0, 0, 0,
	319, 462, 463, 464, 0, 1360, 762, 465, 548, 466,
	1327, 1328, 0, 1288, 0, 467, 468, 470, 1362, 1320,
	1363, 469, 471, 472, 1364, 473, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 483, 482,
	0, 485, 1356, 484, 1365, 486, 487, 1366, 0, 488,
	489, 490, 491, 492, 493, 496, 1311, 1310, 494, 495,
	497, 498, 0, 499, 500, 502, 505, 501, 503, 504,
	506, 519, 520, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 522, 0, 521, 1367, 523,
	524, 525, 526, 527, 534, 536, 537, 532, 533, 535,
	538, 539, 541, 529, 530, 531, 1368, 540, 528, 0,
	320, 1369, 542, 543, 544, 545, 1273, 1321, 546, 1335,
	549, 550, 0, 0, 551, 0, 552, 0, 0, 554,
	555, 556, 0, 0, 557, 558, 770, 1370, 559, 1371,
	1350, 560, 561, 553, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 0, 572, 573, 772, 574, 575,
	576, 773, 577, 578, 579, 1351, 580, 775, 581, 582,
	0, 583, 584, 585, 0, 586, 587, 588, 589, 590,
	591, 592, 593, 1331, 594, 595, 597, 596, 598, 0,
	599, 0, 600, 601, 602, 0, 0, 0, 0, 0,
	603, 604, 606, 0, 607, 608, 609, 610, 605, 611,
	612, 613, 614, 615, 616, 0, 618, 619, 617, 620,
	621, 1372, 622, 623, 624, 625, 626, 1261, 627, 0,
	628, 629, 637, 638, 639, 630, 631, 633, 640, 632,
	641, 642, 643, 644, 646, 645, 0, 648, 649, 647,
	650, 651, 652, 1314, 653, 778, 654, 634, 635, 655,
	656, 1373, 657, 658, 659, 660, 661, 662, 663, 1329,
	0, 664, 0, 665, 666, 667, 668, 669, 670, 672,
	636, 673, 678, 679, 1376, 674, 675, 676, 677, 1352,
	681, 682, 683, 684, 0, 685, 686, 0, 680, 671,
	0, 687, 688, 689, 690, 691, 692, 0, 693, 694,
	0, 695, 1341, 1342, 1343, 1344, 0, 707, 0, 696,
	698, 699, 700, 701, 1353, 702, 1354, 1271, 703, 704,
	705, 706, 697, 708, 709, 0, 0, 710, 711, 712,
	714, 716, 717, 713, 715, 718, 1315, 719, 0, 0,
	720, 721, 722, 788, 1338, 1375, 0, 724, 725, 723,
	726, 727, 730, 728, 729, 791, 731, 732, 733, 0,
	0, 0, 0, 734, 735, 792, 736, 737, 738, 0,
	0, 1713, 0, 1293, 1265, 1266, 1267, 1263, 1264, 1276,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	321, 322, 324, 323, 325, 326, 327, 328, 0, 329,
	330, 1277, 0, 0, 0, 1275, 1317, 1281, 0, 0,
	331, 0, 332, 333, 334, 1357, 335, 336, 337, 338,
	339, 340, 341, 740, 1330, 0, 342, 1337, 343, 1336,
	0, 1347, 344, 345, 346, 347, 348, 349, 350, 0,
	1316, 0, 351, 1377, 1378, 747, 0, 352, 353, 1323,
	0, 1304, 0, 354, 355, 356, 357, 358, 359, 360,
	361, 0, 0, 363, 364, 365, 362, 366, 367, 0,
	368, 0, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 377, 378, 1358, 379, 380, 381, 1307, 1305, 1306,
	1313, 1309, 1308, 1312, 382, 383, 384, 385, 386, 1340,
	387, 389, 1334, 1333, 0, 392, 394, 388, 390, 0,
	393, 391, 395, 396, 0, 397, 398, 399, 0, 0,
	400, 1325, 402, 0, 403, 404, 405, 0, 406, 407,
	408, 0, 409, 410, 751, 411, 412, 413, 415, 417,
	414, 416, 418, 419, 420, 421, 422, 1348, 1349, 423,
	1272, 318, 0, 0, 0, 0, 0, 424, 425, 426,
	1332, 0, 0, 0, 427, 0, 428, 429, 430, 0,
	431, 432, 0, 1359, 433, 434, 435, 1345, 1346, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 0, 445,
	1355, 0, 1282, 446, 0, 447, 448, 449, 450, 451,
	452, 453, 1318, 1319, 1322, 547, 1361, 454, 455, 456,
	0, 457, 458, 459, 460, 461, 0, 0, 0, 319,
	462, 463, 464, 0, 1360, 762, 465, 548, 466, 1327,
	1328, 0, 1288, 0, 467, 468, 470, 1362, 1320, 1363,
	469, 471, 472, 1364, 473, 0, 0, 0, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 483, 482, 0,
	485, 1356, 484, 1365, 486, 487, 1366, 0, 488, 489,
	490, 491, 492, 493, 496, 1311, 1310, 494, 495, 497,
	498, 0, 499, 500, 502, 505, 501, 503, 504, 506,
	519, 520, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 522, 0, 521, 1367, 523, 524,
	525, 526, 527, 534, 536, 537, 532, 533, 535, 538,
	539, 541, 529, 530, 531, 1368, 540, 528, 0, 320,
	1369, 542, 543, 544, 545, 1273, 1321, 546, 1335, 549,
	550, 0, 0, 551, 0, 552, 0, 0, 554, 555,
	556, 0, 0, 557, 558, 770, 1370, 559, 1371, 1350,
	560, 561, 553, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 0, 572, 573, 772, 574, 575, 576,
	773, 577, 578, 579, 1351, 580, 775, 581, 582, 0,
	583, 584, 585, 0, 586, 587, 588, 589, 590, 591,
	592, 593, 1331, 594, 595, 597, 596, 598, 0, 599,
	0, 600, 601, 602, 0, 0, 0, 0, 0, 603,
	604, 606, 0, 607, 608, 609, 610, 605, 611, 612,
	613, 614, 615, 616, 0, 618, 619, 617, 620, 621,
	1372, 622, 623, 624, 625, 626, 1261, 627, 0, 628,
	629, 637, 638, 639, 630, 631, 633, 640, 632, 641,
	642, 643, 644, 646, 645, 0, 648, 649, 647, 650,
	651, 652, 1314, 653, 778, 654, 634, 635, 655, 656,
	1373, 657, 658, 659, 660, 661, 662, 663, 1329, 0,
	664, 0, 665, 666, 667, 668, 669, 670, 672, 636,
	673, 678, 679, 1376, 674, 675, 676, 677, 1352, 681,
	682, 683, 684, 0, 685, 686, 0, 680, 671, 0,
	687, 688, 689, 690, 691, 692, 0, 693, 694, 0,
	695, 1341, 1342, 1343, 1344, 0, 707, 0, 696, 698,
	699, 700, 701, 1353, 702, 1354, 1271, 703, 704, 705,
	706, 697, 708, 709, 0, 0, 710, 711, 712, 714,
	716, 717, 713, 715, 718, 1315, 719, 0, 0, 720,
	721, 722, 788, 1338, 1375, 0, 724, 725, 723, 726,
	727, 730, 728, 729, 791, 731, 732, 733, 0, 0,
	0, 0, 734, 735, 792, 736, 737, 738, 1235, 0,
	1416, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 322, 324,
	323, 325, 326, 327, 328, 0, 329, 330, 0, 0,
	1277, 0, 0, 1317, 1275, 0, 0, 331, 0, 332,
	333, 334, 1357, 335, 336, 337, 338, 339, 340, 341,
	740, 741, 0, 342, 742, 343, 743, 0, 744, 344,
	345, 346, 347, 348, 349, 350, 0, 1316, 0, 351,
	745, 746, 747, 0, 352, 353, 1323, 0, 1304, 0,
	354, 355, 356, 357, 358, 359, 360, 361, 0, 0,
	363, 364, 365, 362, 366, 367, 0, 368, 0, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 378,
	1358, 379, 380, 381, 1307, 1305, 1306, 1313, 1309, 1308,
	1312, 382, 383, 384, 385, 386, 0, 387, 389, 749,
	750, 0, 392, 394, 388, 390, 0, 393, 391, 395,
	396, 0, 397, 398, 399, 0, 0, 400, 401, 402,
	0, 403, 404, 405, 0, 406, 407, 408, 0, 409,
	410, 751, 411, 412, 413, 415, 417, 414, 416, 418,
	419, 420, 421, 422, 1348, 1349, 423, 0, 318, 0,
	0, 0, 0, 0, 424, 425, 426, 754, 0, 0,
	0, 427, 0, 428, 429, 430, 0, 431, 432, 0,
	1359, 433, 434, 435, 755, 756, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 0, 445, 1355, 0, 758,
	446, 0, 447, 448, 449, 450, 451, 452, 453, 1318,
	1319, 1322, 547, 1361, 454, 455, 456, 0, 457, 458,
	459, 460, 461, 0, 0, 0, 319, 462, 463, 464,
	0, 1360, 762, 465, 548, 466, 763, 764, 0, 765,
	0, 467, 468, 470, 1362, 1320, 1363, 469, 471, 472,
	1364, 473, 0, 0, 0, 474, 475, 476, 477, 478,
	479, 480, 1402, 481, 483, 482, 0, 485, 1356, 484,
	1365, 486, 487, 1366, 0, 488, 489, 490, 491, 492,
	493, 496, 1311, 1310, 494, 495, 497, 498, 0, 499,
	500, 502, 505, 501, 503, 504, 506, 519, 520, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 522, 0, 521, 1367, 523, 524, 525, 526, 527,
	534, 536, 537, 532, 533, 535, 538, 539, 541, 529,
	530, 531, 1368, 540, 528, 0, 320, 1369, 542, 543,
	544, 545, 0, 1321, 546, 769, 549, 550, 0, 0,
	551, 0, 552, 0, 1408, 554, 555, 556, 0, 0,
	557, 558, 770, 1370, 559, 1371, 1350, 560, 561, 553,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	0, 572, 573, 772, 574, 575, 576, 773, 577, 578,
	579, 1351, 580, 775, 581, 582, 0, 583, 584, 585,
	0, 586, 587, 588, 589, 590, 591, 592, 593, 776,
	594, 595, 597, 596, 598, 0, 599, 0, 600, 601,
	602, 0, 0, 0, 0, 0, 603, 604, 606, 0,
	607, 608, 609, 610, 605, 611, 612, 613, 614, 615,
	616, 0, 618, 619, 617, 620, 621, 1372, 622, 623,
	624, 625, 626, 777, 1410, 0, 628, 629, 637, 638,
	639, 630, 631, 633, 640, 632, 641, 642, 643, 644,
	646, 645, 274, 648, 649, 647, 650, 651, 652, 1314,
	653, 778, 654, 634, 635, 655, 656, 1373, 657, 658,
	659, 660, 661, 662, 663, 779, 0, 664, 0, 665,
	666, 667, 668, 669, 670, 672, 636, 673, 678, 679,
	780, 674, 675, 676, 677, 1352, 681, 682, 683, 684,
	0, 685, 686, 0, 680, 671, 276, 687, 688, 689,
	690, 691, 692, 0, 693, 694, 0, 695, 782, 783,
	784, 785, 0, 707, 0, 696, 698, 699, 700, 701,
	1353, 702, 1354, 0, 703, 704, 705, 706, 697, 708,
	709, 0, 0, 710, 711, 712, 714, 716, 717, 713,
	715, 718, 1315, 719, 0, 0, 720, 721, 722, 1834,
	789, 790, 0, 724, 725, 723, 726, 727, 730, 728,
	729, 791, 731, 732, 733, 0, 0, 0, 268, 734,
	735, 792, 736, 737, 738, 1416, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 321, 322, 324, 323, 325, 326, 327, 328,
	0, 329, 330, 0, 0, 1406, 0, 2201, 1317, 0,
	0, 0, 331, 0, 332, 333, 334, 1357, 335, 336,
	337, 338, 339, 340, 341, 740, 741, 0, 342, 742,
	343, 743, 0, 744, 344, 345, 346, 347, 348, 349,
	350, 0, 1316, 0, 351, 745, 746, 747, 0, 352,
	353, 1323, 0, 1304, 0, 354, 355, 356, 357, 358,
	359, 360, 361, 0, 0, 363, 364, 365, 362, 366,
	367, 0, 368, 0, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 378, 1358, 379, 380, 381, 1307,
	1305, 1306, 1313, 1309, 1308, 1312, 382, 383, 384, 385,
	386, 0, 387, 389, 749, 750, 0, 392, 394, 388,
	390, 0, 393, 391, 395, 396, 0, 397, 398, 399,
	0, 0, 400, 401, 402, 0, 403, 404, 405, 0,
	406, 407, 408, 0, 409, 410, 751, 411, 412, 413,
	415, 417, 414, 416, 418, 419, 420, 421, 422, 1348,
	1349, 423, 0, 318, 0, 0, 0, 0, 0, 424,
	425, 426, 754, 0, 0, 0, 427, 0, 428, 429,
	430, 0, 431, 432, 0, 1359, 433, 434, 435, 755,
	756, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	0, 445, 1355, 0, 758, 446, 0, 447, 448, 449,
	450, 451, 452, 453, 1318, 1319, 1322, 547, 1361, 454,
	455, 456, 0, 457, 458, 459, 460, 461, 0, 0,
	0, 319, 462, 463, 464, 0, 1360, 762, 465, 548,
	466, 763, 764, 0, 765, 0, 467, 468, 470, 1362,
	1320, 1363, 469, 471, 472, 1364, 473, 0, 0, 0,
	474, 475, 476, 477, 478, 479, 480, 1402, 481, 483,
	482, 0, 485, 1356, 484, 1365, 486, 487, 1366, 0,
	488, 489, 490, 491, 492, 493, 496, 1311, 1310, 494,
	495, 497, 498, 0, 499, 500, 502, 505, 501, 503,
	504, 506, 519, 520, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 522, 0, 521, 1367,
	523, 524, 525, 526, 527, 534, 536, 537, 532, 533,
	535, 538, 539, 541, 529, 530, 531, 1368, 540, 528,
	0, 320, 1369, 542, 543, 544, 545, 0, 1321, 546,
	769, 549, 550, 0, 0, 551, 0, 552, 0, 1408,
	554, 555, 556, 0, 0, 557, 558, 770, 1370, 559,
	1371, 1350, 560, 561, 553, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 0, 572, 573, 772, 574,
	575, 576, 773, 577, 578, 579, 1351, 580, 775, 581,
	582, 0, 583, 584, 585, 0, 586, 587, 588, 589,
	590, 591, 592, 593, 776, 594, 595, 597, 596, 598,
	0, 599, 0, 600, 601, 602, 0, 0, 0, 0,
	0, 603, 604, 606, 0, 607, 608, 609, 610, 605,
	611, 612, 613, 614, 615, 616, 0, 618, 619, 617,
	620, 621, 1372, 622, 623, 624, 625, 626, 777, 1410,
	0, 628, 629, 637, 638, 639, 630, 631, 633, 640,
	632, 641, 642, 643, 644, 646, 645, 274, 648, 649,
	647, 650, 651, 652, 1314, 653, 778, 654, 634, 635,
	655, 656, 1373, 657, 658, 659, 660, 661, 662, 663,
	779, 0, 664, 0, 665, 666, 667, 668, 669, 670,
	672, 636, 673, 678, 679, 780, 674, 675, 676, 677,
	1352, 681, 682, 683, 684, 0, 685, 686, 0, 680,
	671, 276, 687, 688, 689, 690, 691, 692, 0, 693,
	694, 0, 695, 782, 783, 784, 785, 0, 707, 0,
	696, 698, 699, 700, 701, 1353, 702, 1354, 0, 703,
	704, 705, 706, 697, 708, 709, 0, 0, 710, 711,
	712, 714, 716, 717, 713, 715, 718, 1315, 719, 0,
	0, 720, 721, 722, 1834, 789, 790, 0, 724, 725,
	723, 726, 727, 730, 728, 729, 791, 731, 732, 733,
	0, 0, 0, 268, 734, 735, 792, 736, 737, 738,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3805, 0, 1416, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1406, 0, 2201, 321, 322, 324, 323, 325, 326, 327,
	328, 0, 329, 330, 0, 0, 0, 0, 0, 1317,
	0, 0, 0, 331, 0, 332, 333, 334, 1357, 335,
	336, 337, 338, 339, 340, 341, 740, 741, 0, 342,
	742, 343, 743, 0, 744, 344, 345, 346, 347, 348,
	349, 350, 0, 1316, 0, 351, 745, 746, 747, 0,
	352, 353, 1323, 0, 1304, 0, 354, 355, 356, 357,
	358, 359, 360, 361, 0, 0, 363, 364, 365, 362,
	366, 367, 0, 368, 0, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 377, 378, 1358, 379, 380, 381,
	1307, 1305, 1306, 1313, 1309, 1308, 1312, 382, 383, 384,
	385, 386, 0, 387, 389, 749, 750, 0, 392, 394,
	388, 390, 0, 393, 391, 395, 396, 0, 397, 398,
	399, 0, 0, 400, 401, 402, 0, 403, 404, 405,
	0, 406, 407, 408, 0, 409, 410, 751, 411, 412,
	413, 415, 417, 414, 416, 418, 419, 420, 421, 422,
	1348, 1349, 423, 0, 318, 0, 0, 0, 0, 0,
	424, 425, 426, 754, 0, 0, 0, 427, 0, 428,
	429, 430, 0, 431, 432, 0, 1359, 433, 434, 435,
	755, 756, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 0, 445, 1355, 0, 758, 446, 0, 447, 448,
	449, 450, 451, 452, 453, 1318, 1319, 1322, 547, 1361,
	454, 455, 456, 0, 457, 458, 459, 460, 461, 0,
	0, 0, 319, 462, 463, 464, 0, 1360, 762, 465,
	548, 466, 763, 764, 0, 765, 0, 467, 468, 470,
	1362, 1320, 1363, 469, 471, 472, 1364, 473, 0, 0,
	0, 474, 475, 476, 477, 478, 479, 480, 1402, 481,
	483, 482, 0, 485, 1356, 484, 1365, 486, 487, 1366,
	0, 488, 489, 490, 491, 492, 493, 496, 1311, 1310,
	494, 495, 497, 498, 0, 499, 500, 502, 505, 501,
	503, 504, 506, 519, 520, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 522, 0, 521,
	1367, 523, 524, 525, 526, 527, 534, 536, 537, 532,
	533, 535, 538, 539, 541, 529, 530, 531, 1368, 540,
	528, 0, 320, 1369, 542, 543, 544, 545, 0, 1321,
	546, 769, 549, 550, 0, 0, 551, 0, 552, 0,
	1408, 554, 555, 556, 0, 0, 557, 558, 770, 1370,
	559, 1371, 1350, 560, 561, 553, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 0, 572, 573, 772,
	574, 575, 576, 773, 577, 578, 579, 1351, 580, 775,
	581, 582, 0, 583, 584, 585, 0, 586, 587, 588,
	589, 590, 591, 592, 593, 776, 594, 595, 597, 596,
	598, 0, 599, 0, 600, 601, 602, 0, 0, 0,
	0, 0, 603, 604, 606, 0, 607, 608, 609, 610,
	605, 611, 612, 613, 614, 615, 616, 0, 618, 619,
	617, 620, 621, 1372, 622, 623, 624, 625, 626, 777,
	1410, 0, 628, 629, 637, 638, 639, 630, 631, 633,
	640, 632, 641, 642, 643, 644, 646, 645, 0, 648,
	649, 647, 650, 651, 652, 1314, 653, 778, 654, 634,
	635, 655, 656, 1373, 657, 658, 659, 660, 661, 662,
	663, 779, 0, 664, 0, 665, 666, 667, 668, 669,
	670, 672, 636, 673, 678, 679, 780, 674, 675, 676,
	677, 1352, 681, 682, 683, 684, 0, 685, 686, 0,
	680, 671, 0, 687, 688, 689, 690, 691, 692, 0,
	693, 694, 0, 695, 782, 783, 784, 785, 0, 707,
	0, 696, 698, 699, 700, 701, 1353, 702, 1354, 0,
	703, 704, 705, 706, 697, 708, 709, 0, 0, 710,
	711, 712, 714, 716, 717, 713, 715, 718, 1315, 719,
	0, 0, 720, 721, 722, 788, 789, 790, 0, 724,
	725, 723, 726, 727, 730, 728, 729, 791, 731, 732,
	733, 0, 0, 0, 0, 734, 735, 792, 736, 737,
	738, 1398, 0, 1416, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	321, 322, 324, 323, 325, 326, 327, 328, 0, 329,
	330, 1406, 0, 1404, 0, 0, 1317, 0, 0, 0,
	331, 0, 332, 333, 334, 1357, 335, 336, 337, 338,
	339, 340, 341, 740, 741, 0, 342, 742, 343, 743,
	0, 744, 344, 345, 346, 347, 348, 349, 350, 0,
	1316, 0, 351, 745, 746, 747, 0, 352, 353, 1323,
	0, 1304, 0, 354, 355, 356, 357, 358, 359, 360,
	361, 0, 0, 363, 364, 365, 362, 366, 367, 0,
	368, 0, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 377, 378, 1358, 379, 380, 381, 1307, 1305, 1306,
	1313, 1309, 1308, 1312, 382, 383, 384, 385, 386, 0,
	387, 389, 749, 750, 0, 392, 394, 388, 390, 0,
	393, 391, 395, 396, 0, 397, 398, 399, 0, 0,
	400, 401, 402, 0, 403, 404, 405, 0, 406, 407,
	408, 0, 409, 410, 751, 411, 412, 413, 415, 417,
	414, 416, 418, 419, 420, 421, 422, 1348, 1349, 423,
	0, 318, 0, 0, 0, 0, 0, 424, 425, 426,
	754, 0, 0, 0, 427, 0, 428, 429, 430, 0,
	431, 432, 0, 1359, 433, 434, 435, 755, 756, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 0, 445,
	1355, 0, 758, 446, 0, 447, 448, 449, 450, 451,
	452, 453, 1318, 1319, 1322, 547, 1361, 454, 455, 456,
	0, 457, 458, 459, 460, 461, 0, 0, 0, 319,
	462, 463, 464, 0, 1360, 762, 465, 548, 466, 763,
	764, 0, 765, 0, 467, 468, 470, 1362, 1320, 1363,
	469, 471, 472, 1364, 473, 0, 0, 0, 474, 475,
	476, 477, 478, 479, 480, 1402, 481, 483, 482, 0,
	485, 1356, 484, 1365, 486, 487, 1366, 0, 488, 489,
	490, 491, 492, 493, 496, 1311, 1310, 494, 495, 497,
	498, 0, 499, 500, 502, 505, 501, 503, 504, 506,
	519, 520, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 522, 0, 521, 1367, 523, 524,
	525, 526, 527, 534, 536, 537, 532, 533, 535, 538,
	539, 541, 529, 530, 531, 1368, 540, 528, 0, 320,
	1369, 542, 543, 544, 545, 0, 1321, 546, 769, 549,
	550, 0, 0, 551, 0, 552, 0, 1408, 554, 555,
	556, 0, 0, 557, 558, 770, 1370, 559, 1371, 1350,
	560, 561, 553, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 0, 572, 573, 772, 574, 575, 576,
	773, 577, 578, 579, 1351, 580, 775, 581, 582, 0,
	583, 584, 585, 0, 586, 587, 588, 589, 590, 591,
	592, 593, 776, 594, 595, 597, 596, 598, 0, 599,
	0, 600, 601, 602, 0, 0, 0, 0, 0, 603,
	604, 606, 0, 607, 608, 609, 610, 605, 611, 612,
	613, 614, 615, 616, 0, 618, 619, 617, 620, 621,
	1372, 622, 623, 624, 625, 626, 777, 1410, 0, 628,
	629, 637, 638, 639, 630, 631, 633, 640, 632, 641,
	642, 643, 644, 646, 645, 0, 648, 649, 647, 650,
	651, 652, 1314, 653, 778, 654, 634, 635, 655, 656,
	1373, 657, 658, 659, 660, 661, 662, 663, 779, 0,
	664, 0, 665, 666, 667, 668, 669, 670, 672, 636,
	673, 678, 679, 780, 674, 675, 676, 677, 1352, 681,
	682, 683, 684, 0, 685, 686, 0, 680, 671, 0,
	687, 688, 689, 690, 691, 692, 0, 693, 694, 0,
	695, 782, 783, 784, 785, 0, 707, 0, 696, 698,
	699, 700, 701, 1353, 702, 1354, 0, 703, 704, 705,
	706, 697, 708, 709, 0, 0, 710, 711, 712, 714,
	716, 717, 713, 715, 718, 1315, 719, 0, 0, 720,
	721, 722, 788, 789, 790, 0, 724, 725, 723, 726,
	727, 730, 728, 729, 791, 731, 732, 733, 0, 0,
	0, 0, 734, 735, 792, 736, 737, 738, 1416, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 322, 324, 323, 325,
	326, 327, 328, 0, 329, 330, 0, 0, 1406, 0,
	1404, 1317, 0, 0, 0, 331, 0, 332, 333, 334,
	1357, 335, 336, 337, 338, 339, 340, 341, 740, 741,
	0, 342, 742, 343, 743, 0, 744, 344, 345, 346,
	347, 348, 349, 350, 0, 1316, 0, 351, 745, 746,
	747, 0, 352, 353, 1323, 0, 1304, 0, 354, 355,
	356, 357, 358, 359, 360, 361, 0, 0, 363, 364,
	365, 362, 366, 367, 0, 368, 0, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 378, 1358, 379,
	380, 381, 1307, 1305, 1306, 1313, 1309, 1308, 1312, 382,
	383, 384, 385, 386, 0, 387, 389, 749, 750, 0,
	392, 394, 388, 390, 0, 393, 391, 395, 396, 0,
	397, 398, 399, 0, 0, 400, 401, 402, 0, 403,
	404, 405, 0, 406, 407, 408, 0, 409, 410, 751,
	411, 412, 413, 415, 417, 414, 416, 418, 419, 420,
	421, 422, 1348, 1349, 423, 0, 318, 0, 0, 0,
	0, 0, 424, 425, 426, 754, 0, 0, 0, 427,
	0, 428, 429, 430, 0, 431, 432, 0, 1359, 433,
	434, 435, 755, 756, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 0, 445, 1355, 0, 758, 446, 0,
	447, 448, 449, 450, 451, 452, 453, 1318, 1319, 1322,
	547, 1361, 454, 455, 456, 0, 457, 458, 459, 460,
	461, 0, 0, 0, 319, 462, 463, 464, 0, 1360,
	762, 465, 548, 466, 763, 764, 0, 765, 0, 467,
	468, 470, 1362, 1320, 1363, 469, 471, 472, 1364, 473,
	0, 0, 0, 474, 475, 476, 477, 478, 479, 480,
	1402, 481, 483, 482, 0, 485, 1356, 484, 1365, 486,
	487, 1366, 0, 488, 489, 490, 491, 492, 493, 496,
	1311, 1310, 494, 495, 497, 498, 0, 499, 500, 502,
	505, 501, 503, 504, 506, 519, 520, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 522,
	0, 521, 1367, 523, 524, 525, 526, 527, 534, 536,
	537, 532, 533, 535, 538, 539, 541, 529, 530, 531,
	1368, 540, 528, 0, 320, 1369, 542, 543, 544, 545,
	0, 1321, 546, 769, 549, 550, 0, 0, 551, 0,
	552, 0, 1408, 554, 555, 556, 0, 0, 557, 558,
	770, 1370, 559, 1371, 1350, 560, 561, 553, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 0, 572,
	573, 772, 574, 575, 576, 773, 577, 578, 579, 1351,
	580, 775, 581, 582, 0, 583, 584, 585, 0, 586,
	587, 588, 589, 590, 591, 592, 593, 776, 594, 595,
	597, 596, 598, 0, 599, 0, 600, 601, 602, 0,
	0, 0, 0, 0, 603, 604, 606, 0, 607, 608,
	609, 610, 605, 611, 612, 613, 614, 615, 616, 0,
	618, 619, 617, 620, 621, 1372, 622, 623, 624, 625,
	626, 777, 1410, 0, 628, 629, 637, 638, 639, 630,
	631, 633, 640, 632, 641, 642, 643, 644, 646, 645,
	0, 648, 649, 647, 650, 651, 652, 1314, 653, 778,
	654, 634, 635, 655, 656, 1373, 657, 658, 659, 660,
	661, 662, 663, 779, 0, 664, 0, 665, 666, 667,
	668, 669, 670, 672, 636, 673, 678, 679, 780, 674,
	675, 676, 677, 1352, 681, 682, 683, 684, 0, 685,
	686, 0, 680, 671, 0, 687, 688, 689, 690, 691,
	692, 0, 693, 694, 0, 695, 782, 783, 784, 785,
	0, 707, 0, 696, 698, 699, 700, 701, 1353, 702,
	1354, 0, 703, 704, 705, 706, 697, 708, 709, 0,
	0, 710, 711, 712, 714, 716, 717, 713, 715, 718,
	1315, 719, 0, 0, 720, 721, 722, 788, 789, 790,
	0, 724, 725, 723, 726, 727, 730, 728, 729, 791,
	731, 732, 733, 0, 0, 0, 0, 734, 735, 792,
	736, 737, 738, 1416, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	321, 322, 324, 323, 325, 326, 327, 328, 0, 329,
	330, 0, 0, 1406, 0, 1404, 1317, 0, 0, 0,
	331, 0, 332, 333, 334, 1357, 335, 336, 337, 338,
	339, 340, 341, 740, 741, 0, 342, 742, 343, 743,
	0, 744, 344, 345, 346, 347, 348, 349, 350, 0,
	1316, 0, 351, 745, 746, 747, 0, 352, 353, 1323,
	0, 1304, 0, 354, 355, 356, 357, 358, 359, 360,
	361, 0, 0, 363, 364, 365, 362, 366, 367, 0,
	368, 0, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 377, 378, 1358, 379, 380, 381, 1307, 1305, 1306,
	1313, 1309, 1308, 1312, 382, 383, 384, 385, 386, 0,
	387, 389, 749, 750, 0, 392, 394, 388, 390, 0,
	393, 391, 395, 396, 0, 397, 398, 399, 0, 0,
	400, 401, 402, 0, 403, 404, 405, 0, 406, 407,
	408, 0, 409, 410, 751, 411, 412, 413, 415, 417,
	414, 416, 418, 419, 420, 421, 422, 1348, 1349, 423,
	0, 318, 0, 0, 0, 0, 0, 424, 425, 426,
	754, 0, 0, 0, 427, 0, 428, 429, 430, 0,
	431, 432, 0, 1359, 433, 434, 435, 755, 756, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 0, 445,
	1355, 0, 758, 446, 0, 447, 448, 449, 450, 451,
	452, 453, 1318, 1319, 1322, 547, 1361, 454, 455, 456,
	0, 457, 458, 459, 460, 461, 0, 0, 0, 319,
	462, 463, 464, 0, 1360, 762, 465, 548, 466, 763,
	764, 0, 765, 0, 467, 468, 470, 1362, 1320, 1363,
	469, 471, 472, 1364, 473, 0, 0, 0, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 483, 482, 0,
	485, 1356, 484, 1365, 486, 487, 1366, 0, 488, 489,
	490, 491, 492, 493, 496, 1311, 1310, 494, 495, 497,
	498, 0, 499, 500, 502, 505, 501, 503, 504, 506,
	519, 520, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 522, 0, 521, 1367, 523, 524,
	525, 526, 527, 534, 536, 537, 532, 533, 535, 538,
	539, 541, 529, 530, 531, 1368, 540, 528, 0, 320,
	1369, 542, 543, 544, 545, 0, 1321, 546, 769, 549,
	550, 0, 0, 551, 0, 552, 0, 0, 554, 555,
	556, 0, 0, 557, 558, 770, 1370, 559, 1371, 1350,
	560, 561, 553, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 0, 572, 573, 772, 574, 575, 576,
	773, 577, 578, 579, 1351, 580, 775, 581, 582, 0,
	583, 584, 585, 0, 586, 587, 588, 589, 590, 591,
	592, 593, 776, 594, 595, 597, 596, 598, 0, 599,
	0, 600, 601, 602, 0, 0, 0, 0, 0, 603,
	604, 606, 0, 607, 608, 609, 610, 605, 611, 612,
	613, 614, 615, 616, 0, 618, 619, 617, 620, 621,
	1372, 622, 623, 624, 625, 626, 777, 627, 0, 628,
	629, 637, 638, 639, 630, 631, 633, 640, 632, 641,
	642, 643, 644, 646, 645, 0, 648, 649, 647, 650,
	651, 652, 1314, 653, 778, 654, 634, 635, 655, 656,
	1373, 657, 658, 659, 660, 661, 662, 663, 779, 0,
	664, 0, 665, 666, 667, 668, 669, 670, 672, 636,
	673, 678, 679, 780, 674, 675, 676, 677, 1352, 681,
	682, 683, 684, 0, 685, 686, 0, 680, 671, 0,
	687, 688, 689, 690, 691, 692, 0, 693, 694, 0,
	695, 782, 783, 784, 785, 0, 707, 0, 696, 698,
	699, 700, 701, 1353, 702, 1354, 0, 703, 704, 705,
	706, 697, 708, 709, 0, 0, 710, 711, 712, 714,
	716, 717, 713, 715, 718, 1315, 719, 0, 0, 720,
	721, 722, 788, 789, 790, 0, 724, 725, 723, 726,
	727, 730, 728, 729, 791, 731, 732, 733, 0, 0,
	0, 0, 734, 735, 792, 736, 737, 738, 1416, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 322, 324, 323, 325,
	326, 327, 328, 0, 329, 330, 0, 0, 0, 0,
	4834, 1317, 0, 0, 0, 331, 0, 332, 333, 334,
	1357, 335, 336, 337, 338, 339, 340, 341, 740, 741,
	0, 342, 742, 343, 743, 0, 744, 344, 345, 346,
	347, 348, 349, 350, 0, 1316, 0, 351, 745, 746,
	747, 0, 352, 353, 1323, 0, 1304, 0, 354, 355,
	356, 357, 358, 359, 360, 361, 0, 0, 363, 364,
	365, 362, 366, 367, 0, 368, 0, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 378, 1358, 379,
	380, 381, 1307, 1305, 1306, 1313, 1309, 1308, 1312, 382,
	383, 384, 385, 386, 0, 387, 389, 749, 750, 0,
	392, 394, 388, 390, 0, 393, 391, 395, 396, 0,
	397, 398, 399, 0, 0, 400, 401, 402, 0, 403,
	404, 405, 0, 406, 407, 408, 0, 409, 410, 751,
	411, 412, 413, 415, 417, 414, 416, 418, 419, 420,
	421, 422, 1348, 1349, 423, 0, 318, 0, 0, 0,
	0, 0, 424, 425, 426, 754, 0, 0, 0, 427,
	0, 428, 429, 430, 0, 431, 432, 0, 1359, 433,
	434, 435, 755, 756, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 0, 445, 1355, 0, 758, 446, 0,
	447, 448, 449, 450, 451, 452, 453, 1318, 1319, 1322,
	547, 1361, 454, 455, 456, 0, 457, 458, 459, 460,
	461, 0, 0, 0, 319, 462, 463, 464, 0, 1360,
	762, 465, 548, 466, 763, 764, 0, 765, 0, 467,
	468, 470, 1362, 1320, 1363, 469, 471, 472, 1364, 473,
	0, 0, 0, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 483, 482, 0, 485, 1356, 484, 1365, 486,
	487, 1366, 0, 488, 489, 490, 491, 492, 493, 496,
	1311, 1310, 494, 495, 497, 498, 0, 499, 500, 502,
	505, 501, 503, 504, 506, 519, 520, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 522,
	0, 521, 1367, 523, 524, 525, 526, 527, 534, 536,
	537, 532, 533, 535, 538, 539, 541, 529, 530, 531,
	1368, 540, 528, 0, 320, 1369, 542, 543, 544, 545,
	0, 1321, 546, 769, 549, 550, 0, 0, 551, 0,
	552, 0, 0, 554, 555, 556, 0, 0, 557, 558,
	770, 1370, 559, 1371, 1350, 560, 561, 553, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 0, 572,
	573, 772, 574, 575, 576, 773, 577, 578, 579, 1351,
	580, 775, 581, 582, 0, 583, 584, 585, 0, 586,
	587, 588, 589, 590, 591, 592, 593, 776, 594, 595,
	597, 596, 598, 0, 599, 0, 600, 601, 602, 0,
	0, 0, 0, 0, 603, 604, 606, 0, 607, 608,
	609, 610, 605, 611, 612, 613, 614, 615, 616, 0,
	618, 619, 617, 620, 621, 1372, 622, 623, 624, 625,
	626, 777, 1410, 0, 628, 629, 637, 638, 639, 630,
	631, 633, 640, 632, 641, 642, 643, 644, 646, 645,
	0, 648, 649, 647, 650, 651, 652, 1314, 653, 778,
	654, 634, 635, 655, 656, 1373, 657, 658, 659, 660,
	661, 662, 663, 779, 0, 664, 0, 665, 666, 667,
	668, 669, 670, 672, 636, 673, 678, 679, 780, 674,
	675, 676, 677, 1352, 681, 682, 683, 684, 0, 685,
	686, 0, 680, 671, 0, 687, 688, 689, 690, 691,
	692, 0, 693, 694, 0, 695, 782, 783, 784, 785,
	0, 707, 0, 696, 698, 699, 700, 701, 1353, 702,
	1354, 0, 703, 704, 705, 706, 697, 708, 709, 0,
	0, 710, 711, 712, 714, 716, 717, 713, 715, 718,
	1315, 719, 0, 0, 720, 721, 722, 788, 789, 790,
	0, 724, 725, 723, 726, 727, 730, 728, 729, 791,
	731, 732, 733, 315, 0, 0, 0, 734, 735, 792,
	736, 737, 738, 2894, 2895, 2896, 2913, 2914, 2915, 0,
	321, 322, 324, 323, 325, 326, 327, 328, 0, 329,
	330, 0, 0, 0, 2916, 0, 739, 0, 0, 0,
	331, 0, 332, 333, 334, 2096, 335, 336, 337, 338,
	339, 340, 341, 740, 741, 0, 342, 742, 343, 743,
	0, 744, 344, 345, 346, 347, 348, 349, 350, 0,
	0, 2081, 351, 745, 746, 747, 0, 352, 353, 748,
	0, 0, 0, 354, 355, 356, 357, 358, 359, 360,
	361, 2906, 0, 363, 364, 365, 362, 366, 367, 0,
	368, 2902, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 381, 0, 0, 0,
	0, 0, 0, 0, 382, 383, 384, 385, 386, 0,
	387, 389, 749, 750, 0, 392, 394, 388, 390, 0,
	393, 391, 395, 396, 0, 397, 398, 399, 0, 0,
	400, 401, 402, 0, 403, 404, 405, 0, 406, 407,
	408, 0, 409, 410, 751, 411, 412, 413, 415, 417,
	414, 416, 418, 419, 420, 421, 422, 752, 753, 423,
	0, 0, 0, 2907, 2908, 2909, 2910, 424, 425, 426,
	754, 0, 0, 2901, 427, 0, 428, 429, 430, 0,
	431, 432, 0, 0, 433, 434, 435, 755, 756, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 0, 445,
	757, 0, 758, 446, 0, 447, 448, 449, 450, 451,
	452, 453, 759, 760, 761, 547, 0, 454, 455, 456,
	0, 457, 458, 459, 460, 461, 0, 0, 0, 0,
	462, 463, 464, 0, 0, 762, 465, 548, 466, 763,
	764, 0, 765, 0, 467, 468, 470, 0, 766, 0,
	469, 471, 472, 0, 473, 0, 2911, 2912, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 483, 482, 0,
	485, 767, 484, 0, 486, 487, 0, 0, 488, 489,
	490, 491, 492, 493, 496, 0, 0, 494, 495, 497,
	498, 2904, 499, 500, 502, 505, 501, 503, 504, 506,
	519, 520, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 522, 0, 521, 0, 523, 524,
	525, 526, 527, 534, 536, 537, 532, 533, 535, 538,
	539, 541, 529, 530, 531, 0, 540, 528, 0, 0,
	0, 542, 543, 544, 545, 0, 768, 546, 769, 549,
	550, 0, 0, 551, 0, 552, 0, 0, 554, 555,
	556, 0, 0, 557, 558, 770, 0, 559, 0, 771,
	560, 561, 553, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 0, 572, 573, 772, 574, 575, 576,
	773, 577, 578, 579, 774, 580, 775, 581, 582, 0,
	583, 584, 585, 0, 586, 587, 588, 589, 590, 591,
	592, 593, 776, 594, 595, 597, 596, 598, 0, 599,
	0, 600, 601, 602, 0, 0, 0, 0, 0, 603,
	604, 606, 0, 607, 608, 609, 610, 605, 611, 612,
	613, 614, 615, 616, 0, 618, 619, 617, 620, 621,
	0, 622, 623, 624, 625, 626, 777, 627, 2905, 628,
	629, 637, 638, 639, 630, 631, 633, 640, 632, 641,
	642, 643, 644, 646, 645, 0, 648, 649, 647, 650,
	651, 652, 0, 653, 778, 654, 634, 635, 655, 656,
	0, 657, 658, 659, 660, 661, 662, 663, 779, 0,
	664, 0, 665, 666, 667, 668, 669, 670, 672, 636,
	673, 678, 679, 780, 674, 675, 676, 677, 781, 681,
	682, 683, 684, 0, 685, 686, 2080, 680, 671, 0,
	687, 688, 689, 690, 691, 692, 0, 693, 694, 0,
	695, 782, 783, 784, 785, 0, 707, 0, 696, 698,
	699, 700, 701, 786, 702, 787, 0, 703, 704, 705,
	706, 697, 708, 709, 0, 0, 710, 711, 712, 714,
	716, 717, 713, 715, 718, 0, 719, 0, 0, 720,
	721, 722, 788, 789, 790, 0, 724, 725, 723, 726,
	727, 730, 728, 729, 791, 731, 732, 733, 0, 0,
	0, 0, 734, 735, 792, 736, 737, 738, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1235, 0, 1703,
	2891, 2892, 2893, 2917, 2903, 2897, 0, 2899, 2900, 2898,
	2885, 2886, 2887, 2888, 2889, 2890, 321, 322, 324, 323,
	325, 326, 327, 328, 0, 329, 330, 0, 0, 0,
	0, 0, 739, 0, 0, 0, 331, 0, 332, 333,
	334, 1357, 335, 336, 337, 338, 339, 340, 341, 740,
	741, 0, 342, 742, 343, 743, 0, 744, 344, 345,
	346, 347, 348, 349, 350, 0, 0, 0, 351, 745,
	746, 747, 0, 352, 353, 748, 0, 1671, 0, 354,
	355, 356, 357, 358, 359, 360, 361, 0, 0, 363,
	364, 365, 362, 366, 367, 0, 368, 0, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 378, 1358,
	379, 380, 381, 0, 0, 0, 0, 0, 0, 0,
	382, 383, 384, 385, 386, 0, 387, 389, 749, 750,
	0, 392, 394, 388, 390, 0, 393, 391, 395, 396,
	0, 397, 398, 399, 0, 0, 400, 401, 402, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	751, 411, 412, 413, 415, 417, 414, 416, 418, 419,
	420, 421, 422, 752, 753, 423, 0, 318, 0, 0,
	0, 0, 0, 424, 425, 426, 754, 0, 0, 0,
	427, 0, 428, 429, 430, 0, 431, 432, 0, 1359,
	433, 434, 435, 755, 756, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 0, 445, 757, 0, 758, 446,
	0, 447, 448, 449, 450, 451, 452, 453, 759, 760,
	761, 547, 1361, 454, 455, 456, 0, 457, 458, 459,
	460, 461, 0, 0, 0, 0, 462, 463, 464, 0,
	1360, 762, 465, 548, 466, 763, 764, 0, 765, 0,
	467, 468, 470, 1362, 766, 1363, 469, 471, 472, 1364,
	473, 0, 0, 0, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 483, 482, 0, 485, 767, 484, 1365,
	486, 487, 1366, 0, 488, 489, 490, 491, 492, 493,
	496, 0, 0, 494, 495, 497, 498, 0, 499, 500,
	502, 505, 501, 503, 504, 506, 519, 520, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	522, 0, 521, 1367, 523, 524, 525, 526, 527, 534,
	536, 537, 532, 533, 535, 538, 539, 541, 529, 530,
	531, 1368, 540, 528, 0, 0, 1369, 542, 543, 544,
	545, 0, 768, 546, 769, 549, 550, 0, 0, 551,
	0, 552, 0, 0, 554, 555, 556, 0, 0, 557,
	558, 770, 1370, 559, 1371, 771, 560, 561, 553, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 0,
	572, 573, 772, 574, 575, 576, 773, 577, 578, 579,
	774, 580, 775, 581, 582, 0, 583, 584, 585, 0,
	586, 587, 588, 589, 590, 591, 592, 593, 776, 594,
	595, 597, 596, 598, 0, 599, 0, 600, 601, 602,
	0, 0, 0, 0, 0, 603, 604, 606, 0, 607,
	608, 609, 610, 605, 611, 612, 613, 614, 615, 616,
	0, 618, 619, 617, 620, 621, 1372, 622, 623, 624,
	625, 626, 777, 627, 0, 628, 629, 637, 638, 639,
	630, 631, 633, 640, 632, 641, 642, 643, 644, 646,
	645, 274, 648, 649, 647, 650, 651, 652, 0, 653,
	778, 654, 634, 635, 655, 656, 1373, 657, 658, 659,
	660, 661, 662, 663, 779, 0, 664, 0, 665, 666,
	667, 668, 669, 670, 672, 636, 673, 678, 679, 780,
	674, 675, 676, 677, 781, 681, 682, 683, 684, 0,
	685, 686, 0, 680, 671, 276, 687, 688, 689, 690,
	691, 692, 0, 693, 694, 0, 695, 782, 783, 784,
	785, 0, 707, 0, 696, 698, 699, 700, 701, 786,
	702, 787, 0, 703, 704, 705, 706, 697, 708, 709,
	0, 0, 710, 711, 712, 714, 716, 717, 713, 715,
	718, 0, 719, 0, 0, 720, 721, 722, 1834, 789,
	790, 0, 724, 725, 723, 726, 727, 730, 728, 729,
	791, 731, 732, 733, 0, 0, 0, 268, 734, 735,
	792, 736, 737, 738, 0, 1831, 269, 1703, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 324, 323, 325, 326,
	327, 328, 0, 329, 330, 0, 215, 0, 0, 0,
	739, 0, 0, 0, 331, 0, 332, 333, 334, 1357,
	335, 336, 337, 338, 339, 340, 341, 740, 741, 0,
	342, 742, 343, 743, 0, 744, 344, 345, 346, 347,
	348, 349, 350, 0, 0, 0, 351, 745, 746, 747,
	0, 352, 353, 748, 0, 1671, 0, 354, 355, 356,
	357, 358, 359, 360, 361, 0, 0, 363, 364, 365,
	362, 366, 367, 0, 368, 0, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 378, 1358, 379, 380,
	381, 0, 0, 0, 0, 0, 0, 0, 382, 383,
	384, 385, 386, 0, 387, 389, 749, 750, 0, 392,
	394, 388, 390, 0, 393, 391, 395, 396, 0, 397,
	398, 399, 0, 0, 400, 401, 402, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 751, 411,
	412, 413, 415, 417, 414, 416, 418, 419, 420, 421,
	422, 752, 753, 423, 0, 318, 0, 0, 0, 0,
	0, 424, 425, 426, 754, 0, 0, 0, 427, 0,
	428, 429, 430, 0, 431, 432, 0, 1359, 433, 434,
	435, 755, 756, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 0, 445, 757, 0, 758, 446, 0, 447,
	448, 449, 450, 451, 452, 453, 759, 760, 761, 547,
	1361, 454, 455, 456, 0, 457, 458, 459, 460, 461,
	0, 0, 0, 0, 462, 463, 464, 0, 1360, 762,
	465, 548, 466, 763, 764, 0, 765, 0, 467, 468,
	470, 1362, 766, 1363, 469, 471, 472, 1364, 473, 0,
	0, 0, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 483, 482, 0, 485, 767, 484, 1365, 486, 487,
	1366, 0, 488, 489, 490, 491, 492, 493, 496, 0,
	0, 494, 495, 497, 498, 0, 499, 500, 502, 505,
	501, 503, 504, 506, 519, 520, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 522, 0,
	521, 1367, 523, 524, 525, 526, 527, 534, 536, 537,
	532, 533, 535, 538, 539, 541, 529, 530, 531, 1368,
	540, 528, 0, 0, 1369, 542, 543, 544, 545, 0,
	768, 546, 769, 549, 550, 0, 0, 551, 0, 552,
	0, 0, 554, 555, 556, 0, 0, 557, 558, 770,
	1370, 559, 1371, 771, 560, 561, 553, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 0, 572, 573,
	772, 574, 575, 576, 773, 577, 578, 579, 774, 580,
	775, 581, 582, 0, 583, 584, 585, 0, 586, 587,
	588, 589, 590, 591, 592, 593, 776, 594, 595, 597,
	596, 598, 0, 599, 0, 600, 601, 602, 0, 0,
	0, 0, 0, 603, 604, 606, 0, 607, 608, 609,
	610, 605, 611, 612, 613, 614, 615, 616, 0, 618,
	619, 617, 620, 621, 1372, 622, 623, 624, 625, 626,
	777, 627, 0, 628, 629, 637, 638, 639, 630, 631,
	633, 640, 632, 641, 642, 643, 644, 646, 645, 274,
	648, 649, 647, 650, 651, 652, 0, 653, 778, 654,
	634, 635, 655, 656, 1373, 657, 658, 659, 660, 661,
	662, 663, 779, 0, 664, 0, 665, 666, 667, 668,
	669, 670, 672, 636, 673, 678, 679, 780, 674, 675,
	676, 677, 781, 681, 682, 683, 684, 0, 685, 686,
	0, 680, 671, 276, 687, 688, 689, 690, 691, 692,
	0, 693, 694, 0, 695, 782, 783, 784, 785, 0,
	707, 0, 696, 698, 699, 700, 701, 786, 702, 787,
	0, 703, 704, 705, 706, 697, 708, 709, 0, 0,
	710, 711, 712, 714, 716, 717, 713, 715, 718, 0,
	719, 0, 0, 720, 721, 722, 1834, 789, 790, 0,
	724, 725, 723, 726, 727, 730, 728, 729, 791, 731,
	732, 733, 0, 0, 0, 268, 734, 735, 792, 736,
	737, 738, 1703, 1702, 269, 0, 0, 0, 1700, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 321,
	322, 324, 323, 325, 326, 327, 328, 0, 329, 330,
	0, 0, 0, 0, 215, 739, 0, 0, 0, 331,
	0, 332, 333, 334, 1357, 335, 336, 337, 338, 339,
	340, 341, 740, 741, 0, 342, 742, 343, 743, 0,
	744, 344, 345, 346, 347, 348, 349, 350, 0, 0,
	0, 351, 745, 746, 747, 0, 352, 353, 748, 0,
	1671, 0, 354, 355, 356, 357, 358, 359, 360, 361,
	0, 0, 363, 364, 365, 362, 366, 367, 0, 368,
	0, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 378, 1358, 379, 380, 381, 0, 0, 0, 0,
	0, 0, 0, 382, 383, 384, 385, 386, 0, 387,
	389, 749, 750, 0, 392, 394, 388, 390, 0, 393,
	391, 395, 396, 0, 397, 398, 399, 0, 0, 400,
	401, 402, 0, 403, 404, 405, 0, 406, 407, 408,
	0, 409, 410, 751, 411, 412, 413, 415, 417, 414,
	416, 418, 419, 420, 421, 422, 752, 753, 423, 0,
	318, 0, 0, 0, 0, 0, 424, 425, 426, 754,
	0, 0, 0, 427, 0, 428, 429, 430, 0, 431,
	432, 0, 1359, 433, 434, 435, 755, 756, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 0, 445, 757,
	0, 758, 446, 0, 447, 448, 449, 450, 451, 452,
	453, 759, 760, 761, 547, 1361, 454, 455, 456, 0,
	457, 458, 459, 460, 461, 0, 0, 0, 0, 462,
	463, 464, 0, 1360, 762, 465, 548, 466, 763, 764,
	0, 765, 0, 467, 468, 470, 1362, 766, 1363, 469,
	471, 472, 1364, 473, 0, 0, 0, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 483, 482, 0, 485,
	767, 484, 1365, 486, 487, 1366, 0, 488, 489, 490,
	491, 492, 493, 496, 0, 0, 494, 495, 497, 498,
	0, 499, 500, 502, 505, 501, 503, 504, 506, 519,
	520, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 522, 0, 521, 1367, 523, 524, 525,
	526, 527, 534, 536, 537, 532, 533, 535, 538, 539,
	541, 529, 530, 531, 1368, 540, 528, 0, 0, 1369,
	542, 543, 544, 545, 0, 768, 546, 769, 549, 550,
	0, 0, 551, 0, 552, 0, 0, 554, 555, 556,
	0, 0, 557, 558, 770, 1370, 559, 1371, 771, 560,
	561, 553, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 0, 572, 573, 772, 574, 575, 576, 773,
	577, 578, 579, 774, 580, 775, 581, 582, 0, 583,
	584, 585, 0, 586, 587, 588, 589, 590, 591, 592,
	593, 776, 594, 595, 597, 596, 598, 0, 599, 0,
	600, 601, 602, 0, 0, 0, 0, 0, 603, 604,
	606, 0, 607, 608, 609, 610, 605, 611, 612, 613,
	614, 615, 616, 0, 618, 619, 617, 620, 621, 1372,
	622, 623, 624, 625, 626, 777, 627, 0, 628, 629,
	637, 638, 639, 630, 631, 633, 640, 632, 641, 642,
	643, 644, 646, 645, 0, 648, 649, 647, 650, 651,
	652, 0, 653, 778, 654, 634, 635, 655, 656, 1373,
	657, 658, 659, 660, 661, 662, 663, 779, 0, 664,
	0, 665, 666, 667, 668, 669, 670, 672, 636, 673,
	678, 679, 780, 674, 675, 676, 677, 781, 681, 682,
	683, 684, 0, 685, 686, 0, 680, 671, 0, 687,
	688, 689, 690, 691, 692, 0, 693, 694, 0, 695,
	782, 783, 784, 785, 0, 707, 0, 696, 698, 699,
	700, 701, 786, 702, 787, 0, 703, 704, 705, 706,
	697, 708, 709, 0, 0, 710, 711, 712, 714, 716,
	717, 713, 715, 718, 0, 719, 0, 0, 720, 721,
	722, 788, 789, 790, 0, 724, 725, 723, 726, 727,
	730, 728, 729, 791, 731, 732, 733, 0, 0, 0,
	0, 734, 735, 792, 736, 737, 738, 1703, 1702, 0,
	0, 0, 0, 1700, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 324, 323, 325, 326,
	327, 328, 0, 329, 330, 0, 0, 0, 0, 1858,
	739, 0, 0, 0, 331, 0, 332, 333, 334, 1357,
	335, 336, 337, 338, 339, 340, 341, 740, 741, 0,
	342, 742, 343, 743, 0, 744, 344, 345, 346, 347,
	348, 349, 350, 0, 0, 0, 351, 745, 746, 747,
	0, 352, 353, 748, 0, 1671, 0, 354, 355, 356,
	357, 358, 359, 360, 361, 0, 0, 363, 364, 365,
	362, 366, 367, 0, 368, 0, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 378, 1358, 379, 380,
	381, 0, 0, 0, 0, 0, 0, 0, 382, 383,
	384, 385, 386, 0, 387, 389, 749, 750, 0, 392,
	394, 388, 390, 0, 393, 391, 395, 396, 0, 397,
	398, 399, 0, 0, 400, 401, 402, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 751, 411,
	412, 413, 415, 417, 414, 416, 418, 419, 420, 421,
	422, 752, 753, 423, 0, 318, 0, 0, 0, 0,
	0, 424, 425, 426, 754, 0, 0, 0, 427, 0,
	428, 429, 430, 0, 431, 432, 0, 1359, 433, 434,
	435, 755, 756, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 0, 445, 757, 0, 758, 446, 0, 447,
	448, 449, 450, 451, 452, 453, 759, 760, 761, 547,
	1361, 454, 455, 456, 0, 457, 458, 459, 460, 461,
	0, 0, 0, 0, 462, 463, 464, 0, 1360, 762,
	465, 548, 466, 763, 764, 0, 765, 0, 467, 468,
	470, 1362, 766, 1363, 469, 471, 472, 1364, 473, 0,
	0, 0, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 483, 482, 0, 485, 767, 484, 1365, 486, 487,
	1366, 0, 488, 489, 490, 491, 492, 493, 496, 0,
	0, 494, 495, 497, 498, 0, 499, 500, 502, 505,
	501, 503, 504, 506, 519, 520, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 522, 0,
	521, 1367, 523, 524, 525, 526, 527, 534, 536, 537,
	532, 533, 535, 538, 539, 541, 529, 530, 531, 1368,
	540, 528, 0, 0, 1369, 542, 543, 544, 545, 0,
	768, 546, 769, 549, 550, 0, 0, 551, 0, 552,
	0, 0, 554, 555, 556, 0, 0, 557, 558, 770,
	1370, 559, 1371, 771, 560, 561, 553, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 0, 572, 573,
	772, 574, 575, 576, 773, 577, 578, 579, 774, 580,
	775, 581, 582, 0, 583, 584, 585, 0, 586, 587,
	588, 589, 590, 591, 592, 593, 776, 594, 595, 597,
	596, 598, 0, 599, 0, 600, 601, 602, 0, 0,
	0, 0, 0, 603, 604, 606, 0, 607, 608, 609,
	610, 605, 611, 612, 613, 614, 615, 616, 0, 618,
	619, 617, 620, 621, 1372, 622, 623, 624, 625, 626,
	777, 627, 0, 628, 629, 637, 638, 639, 630, 631,
	633, 640, 632, 641, 642, 643, 644, 646, 645, 0,
	648, 649, 647, 650, 651, 652, 0, 653, 778, 654,
	634, 635, 655, 656, 1373, 657, 658, 659, 660, 661,
	662, 663, 779, 0, 664, 0, 665, 666, 667, 668,
	669, 670, 672, 636, 673, 678, 679, 780, 674, 675,
	676, 677, 781, 681, 682, 683, 684, 0, 685, 686,
	0, 680, 671, 0, 687, 688, 689, 690, 691, 692,
	0, 693, 694, 0, 695, 782, 783, 784, 785, 0,
	707, 0, 696, 698, 699, 700, 701, 786, 702, 787,
	0, 703, 704, 705, 706, 697, 708, 709, 0, 0,
	710, 711, 712, 714, 716, 717, 713, 715, 718, 0,
	719, 0, 0, 720, 721, 722, 788, 789, 790, 0,
	724, 725, 723, 726, 727, 730, 728, 729, 791, 731,
	732, 733, 0, 0, 0, 0, 734, 735, 792, 736,
	737, 738, 1703, 1702, 0, 0, 0, 0, 1700, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 321,
	322, 324, 323, 325, 326, 327, 328, 0, 329, 330,
	0, 0, 0, 0, 4185, 739, 0, 0, 0, 331,
	0, 332, 333, 334, 1357, 335, 336, 337, 338, 339,
	340, 341, 740, 741, 0, 342, 742, 343, 743, 0,
	744, 344, 345, 346, 347, 348, 349, 350, 0, 0,
	0, 351, 745, 746, 747, 0, 352, 353, 748, 0,
	1671, 0, 354, 355, 356, 357, 358, 359, 360, 361,
	0, 0, 363, 364, 365, 362, 366, 367, 0, 368,
	0, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 378, 1358, 379, 380, 381, 0, 0, 0, 0,
	0, 0, 0, 382, 383, 384, 385, 386, 0, 387,
	389, 749, 750, 0, 392, 394, 388, 390, 0, 393,
	391, 395, 396, 0, 397, 398, 399, 0, 0, 400,
	401, 402, 0, 403, 404, 405, 0, 406, 407, 408,
	0, 409, 410, 751, 411, 412, 413, 415, 417, 414,
	416, 418, 419, 420, 421, 422, 752, 753, 423, 0,
	318, 0, 0, 0, 0, 0, 424, 425, 426, 754,
	0, 0, 0, 427, 0, 428, 429, 430, 0, 431,
	432, 0, 1359, 433, 434, 435, 755, 756, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 0, 445, 757,
	0, 758, 446, 0, 447, 448, 449, 450, 451, 452,
	453, 759, 760, 761, 547, 1361, 454, 455, 456, 0,
	457, 458, 459, 460, 461, 0, 0, 0, 0, 462,
	463, 464, 0, 1360, 762, 465, 548, 466, 763, 764,
	0, 765, 0, 467, 468, 470, 1362, 766, 1363, 469,
	471, 472, 1364, 473, 0, 0, 0, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 483, 482, 0, 485,
	767, 484, 1365, 486, 487, 1366, 0, 488, 489, 490,
	491, 492, 493, 496, 0, 0, 494, 495, 497, 498,
	0, 499, 500, 502, 505, 501, 503, 504, 506, 519,
	520, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 522, 0, 521, 1367, 523, 524, 525,
	526, 527, 534, 536, 537, 532, 533, 535, 538, 539,
	541, 529, 530, 531, 1368, 540, 528, 0, 0, 1369,
	542, 543, 544, 545, 0, 768, 546, 769, 549, 550,
	0, 0, 551, 0, 552, 0, 0, 554, 555, 556,
	0, 0, 557, 558, 770, 1370, 559, 1371, 771, 560,
	561, 553, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 0, 572, 573, 772, 574, 575, 576, 773,
	577, 578, 579, 774, 580, 775, 581, 582, 0, 583,
	584, 585, 0, 586, 587, 588, 589, 590, 591, 592,
	593, 776, 594, 595, 597, 596, 598, 0, 599, 0,
	600, 601, 602, 0, 0, 0, 0, 0, 603, 604,
	606, 0, 607, 608, 609, 2646, 605, 611, 612, 613,
	614, 615, 616, 0, 618, 619, 617, 620, 621, 1372,
	622, 623, 624, 625, 626, 777, 627, 0, 628, 629,
	637, 638, 639, 630, 631, 633, 640, 632, 641, 642,
	643, 644, 646, 645, 0, 648, 649, 647, 650, 651,
	652, 0, 653, 778, 654, 634, 635, 655, 656, 1373,
	657, 658, 659, 660, 661, 662, 663, 779, 0, 664,
	0, 665, 666, 667, 668, 669, 670, 672, 636, 673,
	678, 679, 780, 674, 675, 676, 677, 781, 681, 682,
	683, 684, 0, 685, 686, 0, 680, 671, 0, 687,
	688, 689, 690, 691, 692, 0, 693, 694, 0, 695,
	782, 783, 784, 785, 0, 707, 0, 696, 698, 699,
	700, 701, 786, 702, 787, 0, 703, 704, 705, 706,
	697, 708, 709, 0, 0, 710, 711, 712, 714, 716,
	717, 713, 715, 718, 0, 719, 0, 0, 720, 721,
	722, 788, 789, 790, 0, 724, 725, 723, 726, 727,
	730, 728, 729, 791, 731, 732, 733, 0, 0, 0,
	0, 734, 735, 792, 736, 737, 738, 1703, 2551, 0,
	0, 0, 0, 2552, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 324, 323, 325, 326,
	327, 328, 0, 329, 330, 0, 0, 0, 0, 1858,
	739, 0, 0, 0, 331, 0, 332, 333, 334, 1357,
	335, 336, 337, 338, 339, 340, 341, 740, 741, 0,
	342, 742, 343, 743, 0, 744, 344, 345, 346, 347,
	348, 349, 350, 0, 0, 0, 351, 745, 746, 747,
	0, 352, 353, 748, 0, 1671, 0, 354, 355, 356,
	357, 358, 359, 360, 361, 0, 0, 363, 364, 365,
	362, 366, 367, 0, 368, 0, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 378, 1358, 379, 380,
	381, 0, 0, 0, 0, 0, 0, 0, 382, 383,
	384, 385, 386, 0, 387, 389, 749, 750, 0, 392,
	394, 388, 390, 0, 393, 391, 395, 396, 0, 397,
	398, 399, 0, 0, 400, 401, 402, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 751, 411,
	412, 413, 415, 417, 414, 416, 418, 419, 420, 421,
	422, 752, 753, 423, 0, 318, 0, 0, 0, 0,
	0, 424, 425, 426, 754, 0, 0, 0, 427, 0,
	428, 429, 430, 0, 431, 432, 0, 1359, 433, 434,
	435, 755, 756, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 0, 445, 757, 0, 758, 446, 0, 447,
	448, 449, 450, 451, 452, 453, 759, 760, 761, 547,
	1361, 454, 455, 456, 0, 457, 458, 459, 460, 461,
	0, 0, 0, 0, 462, 463, 464, 0, 1360, 762,
	465, 548, 466, 763, 764, 0, 765, 0, 467, 468,
	470, 1362, 766, 1363, 469, 471, 472, 1364, 473, 0,
	0, 0, 474, 475, 476, 477, 478, 479, 480, 0,
	2550, 483, 482, 0, 485, 767, 484, 1365, 486, 487,
	1366, 0, 488, 489, 490, 491, 492, 493, 496, 0,
	0, 494, 495, 497, 498, 0, 499, 500, 502, 505,
	501, 503, 504, 506, 519, 520, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 522, 0,
	521, 1367, 523, 524, 525, 526, 527, 534, 536, 537,
	532, 533, 535, 538, 539, 541, 529, 530, 531, 1368,
	540, 528, 0, 0, 1369, 542, 543, 544, 545, 0,
	768, 546, 769, 549, 550, 0, 0, 551, 0, 552,
	0, 0, 554, 555, 556, 0, 0, 557, 558, 770,
	1370, 559, 1371, 771, 560, 561, 553, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 0, 572, 573,
	772, 574, 575, 576, 773, 577, 578, 579, 774, 580,
	775, 581, 582, 0, 583, 584, 585, 0, 586, 587,
	588, 589, 590, 591, 592, 593, 776, 594, 595, 597,
	596, 598, 0, 599, 0, 600, 601, 602, 0, 0,
	0, 0, 0, 603, 604, 606, 0, 607, 608, 609,
	610, 605, 611, 612, 613, 614, 615, 616, 0, 618,
	619, 617, 620, 621, 1372, 622, 623, 624, 625, 626,
	777, 627, 0, 628, 629, 637, 638, 639, 630, 631,
	633, 640, 632, 641, 642, 643, 644, 646, 645, 0,
	648, 649, 647, 650, 651, 652, 0, 653, 778, 654,
	634, 635, 655, 656, 1373, 657, 658, 659, 660, 661,
	662, 663, 779, 0, 664, 0, 665, 666, 667, 668,
	669, 670, 672, 636, 673, 678, 679, 780, 674, 675,
	676, 677, 781, 681, 682, 683, 684, 0, 685, 686,
	0, 680, 671, 0, 687, 688, 689, 690, 691, 692,
	0, 693, 694, 0, 695, 782, 783, 784, 785, 0,
	707, 0, 696, 698, 699, 700, 701, 786, 702, 787,
	0, 703, 704, 705, 706, 697, 708, 709, 0, 0,
	710, 711, 712, 714, 716, 717, 713, 715, 718, 0,
	719, 0, 0, 720, 721, 722, 788, 789, 790, 0,
	724, 725, 723, 726, 727, 730, 728, 729, 791, 731,
	732, 733, 0, 0, 0, 0, 734, 735, 792, 736,
	737, 738, 1703, 1702, 0, 0, 0, 0, 1700, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 321,
	322, 324, 323, 325, 326, 327, 328, 0, 329, 330,
	0, 0, 0, 0, 1858, 739, 0, 0, 0, 331,
	0, 332, 333, 334, 1357, 335, 336, 337, 338, 339,
	340, 341, 740, 741, 0, 342, 742, 343, 743, 0,
	744, 344, 345, 346, 347, 348, 349, 350, 0, 0,
	0, 351, 745, 746, 747, 0, 352, 353, 748, 0,
	1671, 0, 354, 355, 356, 357, 358, 359, 360, 361,
	0, 0, 363, 364, 365, 362, 366, 367, 0, 368,
	0, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 378, 1358, 379, 380, 381, 0, 0, 0, 0,
	0, 0, 0, 382, 383, 384, 385, 386, 0, 387,
	389, 749, 750, 0, 392, 394, 388, 390, 0, 393,
	391, 395, 396, 0, 397, 398, 399, 0, 0, 400,
	401, 402, 0, 403, 404, 405, 0, 406, 407, 408,
	0, 409, 410, 751, 411, 412, 413, 415, 417, 414,
	416, 418, 419, 420, 421, 422, 752, 753, 423, 0,
	318, 0, 0, 0, 0, 0, 424, 425, 426, 754,
	0, 0, 0, 427, 0, 428, 429, 430, 0, 431,
	432, 0, 1359, 433, 434, 435, 755, 756, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 0, 445, 757,
	0, 758, 446, 0, 447, 448, 449, 450, 451, 452,
	453, 759, 760, 761, 547, 1361, 454, 455, 456, 0,
	457, 458, 459, 460, 461, 0, 0, 0, 0, 462,
	463, 464, 0, 1360, 762, 465, 548, 466, 763, 764,
	0, 765, 0, 467, 468, 470, 1362, 766, 1363, 469,
	471, 472, 1364, 473, 0, 0, 0, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 483, 482, 0, 485,
	767, 484, 1365, 486, 487, 1366, 0, 488, 489, 490,
	491, 492, 493, 496, 0, 0, 494, 495, 497, 498,
	0, 499, 500, 502, 505, 501, 503, 504, 506, 519,
	520, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 522, 0, 521, 1367, 523, 524, 525,
	526, 527, 534, 536, 537, 532, 533, 535, 538, 539,
	541, 529, 530, 531, 1368, 540, 528, 0, 0, 1369,
	542, 543, 544, 545, 0, 768, 546, 769, 549, 550,
	0, 0, 551, 0, 552, 0, 0, 554, 555, 556,
	0, 0, 557, 558, 770, 1370, 559, 1371, 771, 560,
	561, 553, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 0, 572, 573, 772, 574, 575, 576, 773,
	577, 578, 579, 774, 580, 775, 581, 582, 0, 583,
	584, 585, 0, 586, 587, 588, 589, 590, 591, 592,
	593, 776, 594, 595, 597, 596, 598, 0, 599, 0,
	600, 601, 602, 0, 0, 0, 0, 0, 603, 604,
	606, 0, 607, 608, 609, 610, 605, 611, 612, 613,
	614, 615, 616, 0, 618, 619, 617, 620, 621, 1372,
	622, 623, 624, 625, 626, 777, 627, 0, 628, 629,
	637, 638, 639, 630, 631, 633, 640, 632, 641, 642,
	643, 644, 646, 645, 0, 648, 649, 647, 650, 651,
	652, 0, 653, 778, 654, 634, 635, 655, 656, 1373,
	657, 658, 659, 660, 661, 662, 663, 779, 0, 664,
	0, 665, 666, 667, 668, 669, 670, 672, 636, 673,
	678, 679, 780, 674, 675, 676, 677, 781, 681, 682,
	683, 684, 0, 685, 686, 0, 680, 671, 0, 687,
	688, 689, 690, 691, 692, 0, 693, 694, 0, 695,
	782, 783, 784, 785, 0, 707, 0, 696, 698, 699,
	700, 701, 786, 702, 787, 0, 703, 704, 705, 706,
	697, 708, 709, 0, 0, 710, 711, 712, 714, 716,
	717, 713, 715, 718, 0, 719, 0, 0, 720, 721,
	722, 788, 789, 790, 0, 724, 725, 723, 726, 727,
	730, 728, 729, 791, 731, 732, 733, 0, 0, 0,
	0, 734, 735, 792, 736, 737, 738, 1235, 0, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 324, 323,
	325, 326, 327, 328, 0, 329, 330, 0, 0, 1840,
	0, 0, 739, 0, 0, 0, 331, 0, 332, 333,
	334, 0, 335, 336, 337, 338, 339, 340, 341, 740,
	741, 0, 342, 742, 343, 743, 0, 744, 344, 345,
	346, 347, 348, 349, 350, 0, 0, 0, 351, 745,
	746, 747, 0, 352, 353, 748, 0, 0, 0, 354,
	355, 356, 357, 358, 359, 360, 361, 0, 0, 363,
	364, 365, 362, 366, 367, 0, 368, 0, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 381, 0, 0, 0, 0, 0, 0, 0,
	382, 383, 384, 385, 386, 0, 387, 389, 749, 750,
	0, 392, 394, 388, 390, 0, 393, 391, 395, 396,
	0, 397, 398, 399, 0, 0, 400, 401, 402, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	751, 411, 412, 413, 415, 417, 414, 416, 418, 419,
	420, 421, 422, 752, 753, 423, 0, 0, 0, 0,
	0, 0, 0, 424, 425, 426, 754, 0, 0, 0,
	427, 0, 428, 429, 430, 0, 431, 432, 0, 0,
	433, 434, 435, 755, 756, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 0, 445, 757, 0, 758, 446,
	0, 447, 448, 449, 450, 451, 452, 453, 759, 760,
	761, 547, 0, 454, 455, 456, 0, 457, 458, 459,
	460, 461, 0, 0, 0, 0, 462, 463, 464, 0,
	0, 762, 465, 548, 466, 763, 764, 0, 765, 0,
	467, 468, 470, 0, 766, 0, 469, 471, 472, 0,
	473, 0, 0, 0, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 483, 482, 0, 485, 767, 484, 0,
	486, 487, 0, 0, 488, 489, 490, 491, 492, 493,
	496, 0, 0, 494, 495, 497, 498, 0, 499, 500,
	502, 505, 501, 503, 504, 506, 519, 520, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	522, 0, 521, 0, 523, 524, 525, 526, 527, 534,
	536, 537, 532, 533, 535, 538, 539, 541, 529, 530,
	531, 0, 540, 528, 0, 0, 0, 542, 543, 544,
	545, 0, 768, 546, 769, 549, 550, 0, 0, 551,
	0, 552, 0, 0, 554, 555, 556, 0, 0, 557,
	558, 770, 0, 559, 0, 771, 560, 561, 553, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 0,
	572, 573, 772, 574, 575, 576, 773, 577, 578, 579,
	774, 580, 775, 581, 582, 0, 583, 584, 585, 0,
	586, 587, 588, 589, 590, 591, 592, 593, 776, 594,
	595, 597, 596, 598, 0, 599, 0, 600, 601, 602,
	0, 0, 0, 0, 0, 603, 604, 606, 0, 607,
	608, 609, 610, 605, 611, 612, 613, 614, 615, 616,
	0, 618, 619, 617, 620, 621, 0, 622, 623, 624,
	625, 626, 777, 627, 0, 628, 629, 637, 638, 639,
	630, 631, 633, 640, 632, 641, 642, 643, 644, 646,
	645, 274, 648, 649, 647, 650, 651, 652, 0, 653,
	778, 654, 634, 635, 655, 656, 0, 657, 658, 659,
	660, 661, 662, 663, 779, 0, 664, 0, 665, 666,
	667, 668, 669, 670, 672, 636, 673, 678, 679, 780,
	674, 675, 676, 677, 781, 681, 682, 683, 684, 0,
	685, 686, 0, 680, 671, 276, 687, 688, 689, 690,
	691, 692, 0, 693, 694, 0, 695, 782, 783, 784,
	785, 0, 707, 0, 696, 698, 699, 700, 701, 786,
	702, 787, 0, 703, 704, 705, 706, 697, 708, 709,
	0, 0, 710, 711, 712, 714, 716, 717, 713, 715,
	718, 0, 719, 0, 0, 720, 721, 722, 1834, 789,
	790, 0, 724, 725, 723, 726, 727, 730, 728, 729,
	791, 731, 732, 733, 315, 0, 0, 268, 734, 735,
	792, 736, 737, 738, 0, 0, 269, 0, 0, 0,
	0, 321, 322, 324, 323, 325, 326, 327, 328, 0,
	329, 330, 0, 0, 0, 0, 0, 739, 0, 0,
	0, 331, 0, 332, 333, 334, 215, 335, 336, 337,
	338, 339, 340, 341, 740, 741, 0, 342, 742, 343,
	743, 0, 744, 344, 345, 346, 347, 348, 349, 350,
	0, 0, 0, 351, 745, 746, 747, 0, 352, 353,
	748, 0, 0, 0, 354, 355, 356, 357, 358, 359,
	360, 361, 0, 0, 363, 364, 365, 362, 366, 367,
	0, 368, 0, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 381, 0, 0,
	0, 0, 0, 0, 0, 382, 383, 384, 385, 386,
	0, 387, 389, 749, 750, 0, 392, 394, 388, 390,
	0, 393, 391, 395, 396, 0, 397, 398, 399, 0,
	0, 400, 401, 402, 0, 403, 404, 405, 0, 406,
	407, 408, 0, 409, 410, 751, 411, 412, 413, 415,
	417, 414, 416, 418, 419, 420, 421, 422, 752, 753,
	423, 0, 318, 0, 0, 0, 0, 0, 424, 425,
	426, 754, 0, 0, 0, 427, 0, 428, 429, 430,
	0, 431, 432, 0, 0, 433, 434, 435, 755, 756,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 0,
	445, 757, 0, 758, 446, 0, 447, 448, 449, 450,
	451, 452, 453, 759, 760, 761, 547, 0, 454, 455,
	456, 0, 457, 458, 459, 460, 461, 0, 0, 0,
	319, 462, 463, 464, 0, 0, 762, 465, 548, 466,
	763, 764, 0, 765, 0, 467, 468, 470, 0, 766,
	0, 469, 471, 472, 0, 473, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 483, 482,
	0, 485, 767, 484, 0, 486, 487, 0, 0, 488,
	489, 490, 491, 492, 493, 496, 0, 0, 494, 495,
	497, 498, 0, 499, 500, 502, 505, 501, 503, 504,
	506, 519, 520, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 522, 0, 521, 0, 523,
	524, 525, 526, 527, 534, 536, 537, 532, 533, 535,
	538, 539, 541, 529, 530, 531, 0, 540, 528, 0,
	320, 0, 542, 543, 544, 545, 0, 768, 546, 769,
	549, 550, 0, 0, 551, 0, 552, 0, 0, 554,
	555, 556, 0, 0, 557, 558, 770, 0, 559, 0,
	771, 560, 561, 553, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 0, 572, 573, 772, 574, 575,
	576, 773, 577, 578, 579, 774, 580, 775, 581, 582,
	0, 583, 584, 585, 0, 586, 587, 588, 589, 590,
	591, 592, 593, 776, 594, 595, 597, 596, 598, 0,
	599, 0, 600, 601, 602, 0, 0, 0, 0, 0,
	603, 604, 606, 0, 607, 608, 609, 610, 605, 611,
	612, 613, 614, 615, 616, 0, 618, 619, 617, 620,
	621, 0, 622, 623, 624, 625, 626, 777, 627, 0,
	628, 629, 637, 638, 639, 630, 631, 633, 640, 632,
	641, 642, 643, 644, 646, 645, 0, 648, 649, 647,
	650, 651, 652, 0, 653, 778, 654, 634, 635, 655,
	656, 0, 657, 658, 659, 660, 661, 662, 663, 779,
	0, 664, 0, 665, 666, 667, 668, 669, 670, 672,
	636, 673, 678, 679, 780, 674, 675, 676, 677, 781,
	681, 682, 683, 684, 0, 685, 686, 0, 680, 671,
	0, 687, 688, 689, 690, 691, 692, 0, 693, 694,
	0, 695, 782, 783, 784, 785, 0, 707, 0, 696,
	698, 699, 700, 701, 786, 702, 787, 0, 703, 704,
	705, 706, 697, 708, 709, 0, 0, 710, 711, 712,
	714, 716, 717, 713, 715, 718, 0, 719, 0, 0,
	720, 721, 722, 788, 789, 790, 0, 724, 725, 723,
	726, 727, 730, 728, 729, 791, 731, 732, 733, 315,
	3411, 0, 0, 734, 735, 792, 736, 737, 738, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 324, 323,
	325, 326, 327, 328, 0, 329, 330, 0, 0, 0,
	0, 0, 739, 0, 0, 0, 331, 0, 332, 333,
	334, 2215, 335, 336, 337, 338, 339, 340, 341, 740,
	741, 0, 342, 742, 343, 743, 0, 744, 344, 345,
	346, 347, 348, 349, 350, 0, 0, 0, 351, 745,
	746, 747, 0, 352, 353, 748, 0, 0, 0, 354,
	355, 356, 357, 358, 359, 360, 361, 0, 0, 363,
	364, 365, 362, 366, 367, 0, 368, 0, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 381, 0, 0, 0, 0, 0, 0, 0,
	382, 383, 384, 385, 386, 0, 387, 389, 749, 750,
	0, 392, 394, 388, 390, 0, 393, 391, 395, 396,
	0, 397, 398, 399, 0, 0, 400, 401, 402, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	751, 411, 412, 413, 415, 417, 414, 416, 418, 419,
	420, 421, 422, 752, 753, 423, 0, 0, 0, 0,
	0, 0, 0, 424, 425, 426, 754, 0, 0, 0,
	427, 0, 428, 429, 430, 0, 431, 432, 0, 0,
	433, 434, 435, 755, 756, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 0, 445, 757, 0, 758, 446,
	0, 447, 448, 449, 450, 451, 452, 453, 759, 760,
	761, 547, 0, 454, 455, 456, 0, 457, 458, 459,
	460, 461, 0, 0, 0, 0, 462, 463, 464, 0,
	0, 762, 465, 548, 466, 763, 764, 0, 765, 0,
	467, 468, 470, 0, 766, 0, 469, 471, 472, 0,
	473, 0, 0, 0, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 483, 482, 0, 485, 767, 484, 0,
	486, 487, 0, 0, 488, 489, 490, 491, 492, 493,
	496, 0, 0, 494, 495, 497, 498, 0, 499, 500,
	502, 505, 501, 503, 504, 506, 519, 520, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	522, 0, 521, 0, 523, 524, 525, 526, 527, 534,
	536, 537, 532, 533, 535, 538, 539, 541, 529, 530,
	531, 0, 540, 528, 0, 0, 0, 542, 543, 544,
	545, 0, 768, 546, 769, 549, 550, 0, 0, 551,
	0, 552, 0, 0, 554, 555, 556, 0, 0, 557,
	558, 770, 0, 559, 0, 771, 560, 561, 553, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 0,
	572, 573, 772, 574, 575, 576, 773, 577, 578, 579,
	774, 580, 775, 581, 582, 0, 583, 584, 585, 0,
	586, 587, 588, 589, 590, 591, 592, 593, 776, 594,
	595, 597, 596, 598, 0, 599, 0, 600, 601, 602,
	0, 0, 0, 0, 0, 603, 604, 606, 0, 607,
	608, 609, 610, 605, 611, 612, 613, 614, 615, 616,
	0, 618, 619, 617, 620, 621, 0, 622, 623, 624,
	625, 626, 777, 627, 0, 628, 629, 637, 638, 639,
	630, 631, 633, 640, 632, 641, 642, 643, 644, 646,
	645, 0, 648, 649, 647, 650, 651, 652, 0, 653,
	778, 654, 634, 635, 655, 656, 0, 657, 658, 659,
	660, 661, 662, 663, 779, 0, 664, 0, 665, 666,
	667, 668, 669, 670, 672, 636, 673, 678, 679, 780,
	674, 675, 676, 677, 781, 681, 682, 683, 684, 0,
	685, 686, 0, 680, 671, 0, 687, 688, 689, 690,
	691, 692, 0, 693, 694, 0, 695, 782, 783, 784,
	785, 0, 707, 0, 696, 698, 699, 700, 701, 786,
	702, 787, 0, 703, 704, 705, 706, 697, 708, 709,
	0, 0, 710, 711, 712, 714, 716, 717, 713, 715,
	718, 0, 719, 0, 0, 720, 721, 722, 788, 789,
	790, 0, 724, 725, 723, 726, 727, 730, 728, 729,
	791, 731, 732, 733, 315, 0, 0, 0, 734, 735,
	792, 736, 737, 738, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 324, 323, 325, 326, 327, 328, 0,
	329, 330, 0, 0, 0, 0, 0, 739, 0, 0,
	0, 331, 0, 332, 333, 334, 5642, 335, 336, 337,
	338, 339, 340, 341, 740, 741, 0, 342, 742, 343,
	743, 0, 744, 344, 345, 346, 347, 348, 349, 350,
	0, 0, 0, 351, 745, 746, 747, 0, 352, 353,
	748, 0, 0, 0, 354, 355, 356, 357, 358, 359,
	360, 361, 0, 0, 363, 364, 365, 362, 366, 367,
	0, 368, 0, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 381, 0, 0,
	0, 0, 0, 0, 0, 382, 383, 384, 385, 386,
	0, 387, 389, 749, 750, 0, 392, 394, 388, 390,
	0, 393, 391, 395, 396, 0, 397, 398, 399, 0,
	0, 400, 401, 402, 0, 403, 404, 405, 0, 406,
	407, 408, 0, 409, 410, 751, 411, 412, 413, 415,
	417, 414, 416, 418, 419, 420, 421, 422, 752, 753,
	423, 0, 318, 0, 0, 0, 0, 0, 424, 425,
	426, 754, 0, 0, 0, 427, 0, 428, 429, 430,
	0, 431, 432, 0, 0, 433, 434, 435, 755, 756,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 0,
	445, 757, 0, 758, 446, 0, 447, 448, 449, 450,
	451, 452, 453, 759, 760, 761, 547, 0, 454, 455,
	456, 0, 457, 458, 459, 460, 461, 0, 0, 0,
	319, 462, 463, 464, 0, 0, 762, 465, 548, 466,
	763, 764, 0, 765, 0, 467, 468, 470, 0, 766,
	0, 469, 471, 472, 0, 473, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 483, 482,
	0, 485, 767, 484, 0, 486, 487, 0, 0, 488,
	489, 490, 491, 492, 493, 496, 0, 0, 494, 495,
	497, 498, 0, 499, 500, 502, 505, 501, 503, 504,
	506, 519, 520, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 522, 0, 521, 0, 523,
	524, 525, 526, 527, 534, 536, 537, 532, 533, 535,
	538, 539, 541, 529, 530, 531, 0, 540, 528, 0,
	320, 0, 542, 543, 544, 545, 0, 768, 546, 769,
	549, 550, 0, 0, 551, 0, 552, 0, 0, 554,
	555, 556, 0, 0, 557, 558, 770, 0, 559, 0,
	771, 560, 561, 553, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 0, 572, 573, 772, 574, 575,
	576, 773, 577, 578, 579, 774, 580, 775, 581, 582,
	0, 583, 584, 585, 0, 586, 587, 588, 589, 590,
	591, 592, 593, 776, 594, 595, 597, 596, 598, 0,
	599, 0, 600, 601, 602, 0, 0, 0, 0, 0,
	603, 604, 606, 0, 607, 608, 609, 610, 605, 611,
	612, 613, 614, 615, 616, 0, 618, 619, 617, 620,
	621, 0, 622, 623, 624, 625, 626, 777, 627, 0,
	628, 629, 637, 638, 639, 630, 631, 633, 640, 632,
	641, 642, 643, 644, 646, 645, 0, 648, 649, 647,
	650, 651, 652, 0, 653, 778, 654, 634, 635, 655,
	656, 0, 657, 658, 659, 660, 661, 662, 663, 779,
	0, 664, 0, 665, 666, 667, 668, 669, 670, 672,
	636, 673, 678, 679, 780, 674, 675, 676, 677, 781,
	681, 682, 683, 684, 0, 685, 686, 0, 680, 671,
	0, 687, 688, 689, 690, 691, 692, 0, 693, 694,
	0, 695, 782, 783, 784, 785, 0, 707, 0, 696,
	698, 699, 700, 701, 786, 702, 787, 0, 703, 704,
	705, 706, 697, 708, 709, 0, 0, 710, 711, 712,
	714, 716, 717, 713, 715, 718, 0, 719, 0, 0,
	720, 721, 722, 788, 789, 790, 0, 724, 725, 723,
	726, 727, 730, 728, 729, 791, 731, 732, 733, 0,
	0, 315, 0, 734, 735, 792, 736, 737, 738, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 321, 322,
	324, 323, 325, 326, 327, 328, 0, 329, 330, 0,
	0, 0, 0, 0, 739, 0, 0, 0, 331, 1828,
	332, 333, 334, 0, 335, 336, 337, 338, 339, 340,
	341, 740, 741, 0, 342, 742, 343, 743, 0, 744,
	344, 345, 346, 347, 348, 349, 350, 0, 0, 0,
	351, 745, 746, 747, 0, 352, 353, 748, 0, 0,
	0, 354, 355, 356, 357, 358, 359, 360, 361, 0,
	0, 363, 364, 365, 362, 366, 367, 0, 368, 0,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 381, 0, 0, 0, 0, 0,
	0, 0, 382, 383, 384, 385, 386, 0, 387, 389,
	749, 750, 0, 392, 394, 388, 390, 0, 393, 391,
	395, 396, 0, 397, 398, 399, 0, 0, 400, 401,
	402, 0, 403, 404, 405, 0, 406, 407, 408, 0,
	409, 410, 751, 411, 412, 413, 415, 417, 414, 416,
	418, 419, 420, 421, 422, 752, 753, 423, 0, 318,
	0, 0, 0, 0, 0, 424, 425, 426, 754, 0,
	0, 0, 427, 0, 428, 429, 430, 0, 431, 432,
	0, 0, 433, 434, 435, 755, 756, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 0, 445, 757, 0,
	758, 446, 0, 447, 448, 449, 450, 451, 452, 453,
	759, 760, 761, 547, 0, 454, 455, 456, 0, 457,
	458, 459, 460, 461, 0, 0, 0, 319, 462, 463,
	464, 0, 0, 762, 465, 548, 466, 763, 764, 0,
	765, 0, 467, 468, 470, 0, 766, 0, 469, 471,
	472, 0, 473, 0, 0, 0, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 483, 482, 0, 485, 767,
	484, 0, 486, 487, 0, 0, 488, 489, 490, 491,
	492, 493, 496, 0, 0, 494, 495, 497, 498, 0,
	499, 500, 502, 505, 501, 503, 504, 506, 519, 520,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 522, 0, 521, 0, 523, 524, 525, 526,
	527, 534, 536, 537, 532, 533, 535, 538, 539, 541,
	529, 530, 531, 0, 540, 528, 0, 320, 0, 542,
	543, 544, 545, 0, 768, 546, 769, 549, 550, 0,
	0, 551, 0, 552, 0, 0, 554, 555, 556, 0,
	0, 557, 558, 770, 0, 559, 0, 771, 560, 561,
	553, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 0, 572, 573, 772, 574, 575, 576, 773, 577,
	578, 579, 774, 580, 775, 581, 582, 0, 583, 584,
	585, 0, 586, 587, 588, 589, 590, 591, 592, 593,
	776, 594, 595, 597, 596, 598, 0, 599, 0, 600,
	601, 602, 0, 0, 0, 0, 0, 603, 604, 606,
	0, 607, 608, 609, 610, 605, 611, 612, 613, 614,
	615, 616, 0, 618, 619, 617, 620, 621, 0, 622,
	623, 624, 625, 626, 777, 627, 0, 628, 629, 637,
	638, 639, 630, 631, 633, 640, 632, 641, 642, 643,
	644, 646, 645, 0, 648, 649, 647, 650, 651, 652,
	0, 653, 778, 654, 634, 635, 655, 656, 0, 657,
	658, 659, 660, 661, 662, 663, 779, 0, 664, 0,
	665, 666, 667, 668, 669, 670, 672, 636, 673, 678,
	679, 780, 674, 675, 676, 677, 781, 681, 682, 683,
	684, 0, 685, 686, 0, 680, 671, 0, 687, 688,
	689, 690, 691, 692, 0, 693, 694, 0, 695, 782,
	783, 784, 785, 0, 707, 0, 696, 698, 699, 700,
	701, 786, 702, 787, 0, 703, 704, 705, 706, 697,
	708, 709, 0, 0, 710, 711, 712, 714, 716, 717,
	713, 715, 718, 0, 719, 0, 0, 720, 721, 722,
	788, 789, 790, 0, 724, 725, 723, 726, 727, 730,
	728, 729, 791, 731, 732, 733, 0, 0, 3219, 0,
	734, 735, 792, 736, 737, 738, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 322, 324, 323, 325,
	326, 327, 328, 0, 329, 330, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 331, 4136, 332, 333, 334,
	1357, 335, 336, 337, 338, 339, 340, 341, 0, 2275,
	0, 342, 2265, 343, 2281, 0, 2288, 344, 345, 346,
	347, 348, 349, 350, 0, 0, 0, 351, 2291, 2292,
	0, 0, 352, 353, 0, 0, 1671, 0, 354, 355,
	356, 357, 358, 359, 360, 361, 0, 0, 363, 364,
	365, 362, 366, 367, 0, 368, 0, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 378, 1358, 379,
	380, 381, 0, 0, 0, 0, 0, 0, 0, 382,
	383, 384, 385, 386, 1340, 387, 389, 2279, 2278, 0,
	392, 394, 388, 390, 0, 393, 391, 395, 396, 0,
	397, 398, 399, 0, 0, 400, 1325, 402, 0, 403,
	404, 405, 0, 406, 407, 408, 0, 409, 410, 0,
	411, 412, 413, 415, 417, 414, 416, 418, 419, 420,
	421, 422, 0, 0, 423, 0, 318, 0, 0, 0,
	0, 0, 424, 425, 426, 2277, 0, 0, 0, 427,
	0, 428, 429, 430, 0, 431, 432, 0, 1359, 433,
	434, 435, 2286, 2287, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 0, 445, 0, 0, 0, 446, 0,
	447, 448, 449, 450, 451, 452, 453, 0, 0, 0,
	547, 1361, 454, 455, 456, 3213, 457, 458, 459, 460,
	461, 0, 0, 0, 0, 462, 463, 464, 0, 1360,
	3215, 465, 548, 466, 2272, 2273, 0, 2268, 0, 467,
	468, 470, 1362, 0, 1363, 469, 471, 472, 1364, 473,
	0, 0, 0, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 483, 482, 0, 485, 0, 484, 1365, 486,
	487, 1366, 0, 488, 489, 490, 491, 492, 493, 496,
	0, 0, 494, 495, 497, 498, 0, 499, 500, 502,
	505, 501, 503, 504, 506, 519, 520, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 522,
	0, 521, 1367, 523, 524, 525, 526, 527, 534, 536,
	537, 532, 533, 535, 538, 539, 541, 529, 530, 531,
	1368, 540, 528, 0, 0, 1369, 542, 543, 544, 545,
	0, 0, 546, 2280, 549, 550, 0, 0, 551, 0,
	552, 0, 0, 554, 555, 556, 0, 0, 557, 558,
	3214, 1370, 559, 1371, 0, 560, 561, 553, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 0, 572,
	573, 2262, 574, 575, 576, 2263, 577, 578, 579, 0,
	580, 0, 581, 582, 0, 583, 584, 585, 0, 586,
	587, 588, 589, 590, 591, 592, 593, 2276, 594, 595,
	597, 596, 598, 0, 599, 0, 600, 601, 602, 0,
	0, 0, 0, 0, 603, 604, 606, 0, 607, 608,
	609, 610, 605, 611, 612, 613, 614, 615, 616, 0,
	618, 619, 617, 620, 621, 1372, 622, 623, 624, 625,
	626, 0, 627, 0, 628, 629, 637, 638, 639, 630,
	631, 633, 640, 632, 641, 642, 643, 644, 646, 645,
	0, 648, 649, 647, 650, 651, 652, 0, 653, 0,
	654, 634, 635, 655, 656, 1373, 657, 658, 659, 660,
	661, 662, 663, 2274, 0, 664, 0, 665, 666, 667,
	668, 669, 670, 672, 636, 673, 678, 679, 2290, 674,
	675, 676, 677, 0, 681, 682, 683, 684, 0, 685,
	686, 0, 680, 671, 0, 687, 688, 689, 690, 691,
	692, 0, 693, 694, 0, 695, 2282, 2283, 2284, 2285,
	0, 707, 0, 696, 698, 699, 700, 701, 0, 702,
	0, 0, 703, 704, 705, 706, 697, 708, 709, 0,
	0, 710, 711, 712, 714, 716, 717, 713, 715, 718,
	0, 719, 0, 0, 720, 721, 722, 0, 2266, 2289,
	3216, 724, 725, 723, 726, 727, 730, 728, 729, 0,
	731, 732, 733, 0, 0, 0, 0, 734, 735, 0,
	736, 737, 738, 0, 315, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 324, 323, 325, 326, 327, 328, 0,
	329, 330, 0, 0, 0, 0, 3208, 739, 0, 2256,
	0, 331, 0, 332, 333, 334, 0, 335, 336, 337,
	338, 339, 340, 341, 740, 741, 0, 342, 742, 343,
	743, 0, 744, 344, 345, 346, 347, 348, 349, 350,
	0, 0, 0, 351, 745, 746, 747, 0, 352, 353,
	748, 0, 0, 0, 354, 355, 356, 357, 358, 359,
	360, 361, 0, 0, 363, 364, 365, 362, 366, 367,
	0, 368, 0, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 381, 0, 0,
	0, 0, 0, 0, 0, 382, 383, 384, 385, 386,
	0, 387, 389, 749, 750, 0, 392, 394, 388, 390,
	0, 393, 391, 395, 396, 0, 397, 398, 399, 0,
	0, 400, 401, 402, 0, 403, 404, 405, 0, 406,
	407, 408, 0, 409, 410, 751, 411, 412, 413, 415,
	417, 414, 416, 418, 419, 420, 421, 422, 752, 753,
	423, 0, 0, 0, 0, 0, 0, 0, 424, 425,
	426, 754, 0, 0, 0, 427, 0, 428, 429, 430,
	0, 431, 432, 0, 0, 433, 434, 435, 755, 756,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 0,
	445, 757, 0, 758, 446, 0, 447, 448, 449, 450,
	451, 452, 453, 759, 760, 761, 547, 0, 454, 455,
	456, 0, 457, 458, 459, 460, 461, 0, 0, 0,
	0, 462, 463, 464, 0, 0, 762, 465, 548, 466,
	763, 764, 0, 765, 0, 467, 468, 470, 0, 766,
	0, 469, 471, 472, 0, 473, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 483, 482,
	0, 485, 767, 484, 0, 486, 487, 0, 0, 488,
	489, 490, 491, 492, 493, 496, 0, 0, 494, 495,
	497, 498, 0, 499, 500, 502, 505, 501, 503, 504,
	506, 519, 520, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 522, 0, 521, 0, 523,
	524, 525, 526, 527, 534, 536, 537, 532, 533, 535,
	538, 539, 541, 529, 530, 531, 0, 540, 528, 0,
	0, 0, 542, 543, 544, 545, 0, 768, 546, 769,
	549, 550, 0, 0, 551, 0, 552, 0, 0, 554,
	555, 556, 0, 0, 557, 558, 770, 0, 559, 0,
	771, 560, 561, 553, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 0, 572, 573, 772, 574, 575,
	576, 773, 577, 578, 579, 774, 580, 775, 581, 582,
	0, 583, 584, 585, 0, 586, 587, 588, 589, 590,
	591, 592, 593, 776, 594, 595, 597, 596, 598, 0,
	599, 0, 600, 601, 602, 0, 0, 0, 0, 0,
	603, 604, 606, 0, 607, 608, 609, 610, 605, 611,
	612, 613, 614, 615, 616, 0, 618, 619, 617, 620,
	621, 0, 622, 623, 624, 625, 626, 777, 627, 0,
	628, 629, 637, 638, 639, 630, 631, 633, 640, 632,
	641, 642, 643, 644, 646, 645, 0, 648, 649, 647,
	650, 651, 652, 0, 653, 778, 654, 634, 635, 655,
	656, 0, 657, 658, 659, 660, 661, 662, 663, 779,
	0, 664, 0, 665, 666, 667, 668, 669, 670, 672,
	636, 673, 678, 679, 780, 674, 675, 676, 677, 781,
	681, 682, 683, 684, 0, 685, 686, 0, 680, 671,
	0, 687, 688, 689, 690, 691, 692, 0, 693, 694,
	0, 695, 782, 783, 784, 785, 0, 707, 0, 696,
	698, 699, 700, 701, 786, 702, 787, 0, 703, 704,
	705, 706, 697, 708, 709, 0, 0, 710, 711, 712,
	714, 716, 717, 713, 715, 718, 0, 719, 0, 0,
	720, 721, 722, 788, 789, 790, 0, 724, 725, 723,
	726, 727, 730, 728, 729, 791, 731, 732, 733, 0,
	0, 0, 0, 734, 735, 792, 736, 737, 738, 3219,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 324, 323,
	325, 326, 327, 328, 0, 329, 330, 0, 0, 0,
	0, 3530, 0, 0, 0, 0, 331, 0, 332, 333,
	334, 1357, 335, 336, 337, 338, 339, 340, 341, 0,
	2275, 0, 342, 2265, 343, 2281, 0, 2288, 344, 345,
	346, 347, 348, 349, 350, 0, 0, 0, 351, 2291,
	2292, 0, 0, 352, 353, 0, 0, 1671, 0, 354,
	355, 356, 357, 358, 359, 360, 361, 0, 0, 363,
	364, 365, 362, 366, 367, 0, 368, 0, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 378, 1358,
	379, 380, 381, 0, 0, 0, 0, 0, 0, 0,
	382, 383, 384, 385, 386, 1340, 387, 389, 2279, 2278,
	0, 392, 394, 388, 390, 0, 393, 391, 395, 396,
	0, 397, 398, 399, 0, 0, 400, 1325, 402, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	0, 411, 412, 413, 415, 417, 414, 416, 418, 419,
	420, 421, 422, 0, 0, 423, 0, 318, 0, 0,
	0, 0, 0, 424, 425, 426, 2277, 0, 0, 0,
	427, 0, 428, 429, 430, 0, 431, 432, 0, 1359,
	433, 434, 435, 2286, 2287, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 0, 445, 0, 0, 0, 446,
	0, 447, 448, 449, 450, 451, 452, 453, 0, 0,
	0, 547, 1361, 454, 455, 456, 3213, 457, 458, 459,
	460, 461, 0, 0, 0, 0, 462, 463, 464, 0,
	1360, 3215, 465, 548, 466, 2272, 2273, 0, 2268, 0,
	467, 468, 470, 1362, 0, 1363, 469, 471, 472, 1364,
	473, 0, 0, 0, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 483, 482, 0, 485, 0, 484, 1365,
	486, 487, 1366, 0, 488, 489, 490, 491, 492, 493,
	496, 0, 0, 494, 495, 497, 498, 0, 499, 500,
	502, 505, 501, 503, 504, 506, 519, 520, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	522, 0, 521, 1367, 523, 524, 525, 526, 527, 534,
	536, 537, 532, 533, 535, 538, 539, 541, 529, 530,
	531, 1368, 540, 528, 0, 0, 1369, 542, 543, 544,
	545, 0, 0, 546, 2280, 549, 550, 0, 0, 551,
	0, 552, 0, 0, 554, 555, 556, 0, 0, 557,
	558, 3214, 1370, 559, 1371, 0, 560, 561, 553, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 0,
	572, 573, 2262, 574, 575, 576, 2263, 577, 578, 579,
	0, 580, 0, 581, 582, 0, 583, 584, 585, 0,
	586, 587, 588, 589, 590, 591, 592, 593, 2276, 594,
	595, 597, 596, 598, 0, 599, 0, 600, 601, 602,
	0, 0, 0, 0, 0, 603, 604, 606, 0, 607,
	608, 609, 610, 605, 611, 612, 613, 614, 615, 616,
	0, 618, 619, 617, 620, 621, 1372, 622, 623, 624,
	625, 626, 0, 627, 0, 628, 629, 637, 638, 639,
	630, 631, 633, 640, 632, 641, 642, 643, 644, 646,
	645, 0, 648, 649, 647, 650, 651, 652, 0, 653,
	0, 654, 634, 635, 655, 656, 1373, 657, 658, 659,
	660, 661, 662, 663, 2274, 0, 664, 0, 665, 666,
	667, 668, 669, 670, 672, 636, 673, 678, 679, 2290,
	674, 675, 676, 677, 0, 681, 682, 683, 684, 0,
	685, 686, 0, 680, 671, 0, 687, 688, 689, 690,
	691, 692, 0, 693, 694, 0, 695, 2282, 2283, 2284,
	2285, 0, 707, 0, 696, 698, 699, 700, 701, 0,
	702, 0, 0, 703, 704, 705, 706, 697, 708, 709,
	0, 0, 710, 711, 712, 714, 716, 717, 713, 715,
	718, 0, 719, 0, 0, 720, 721, 722, 0, 2266,
	2289, 3216, 724, 725, 723, 726, 727, 730, 728, 729,
	0, 731, 732, 733, 0, 0, 0, 0, 734, 735,
	0, 736, 737, 738, 315, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 324, 323, 325, 326, 327, 328, 0,
	329, 330, 0, 0, 0, 0, 0, 739, 0, 0,
	2256, 331, 0, 332, 333, 334, 0, 335, 336, 337,
	338, 339, 340, 341, 740, 741, 0, 342, 742, 343,
	743, 0, 744, 344, 345, 346, 347, 348, 349, 350,
	0, 0, 0, 351, 745, 746, 747, 0, 352, 353,
	748, 0, 0, 0, 354, 355, 356, 357, 358, 359,
	360, 361, 0, 0, 363, 364, 365, 362, 366, 367,
	0, 368, 0, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 381, 0, 0,
	0, 0, 0, 0, 0, 382, 383, 384, 385, 386,
	0, 387, 389, 749, 750, 0, 392, 394, 388, 390,
	0, 393, 391, 395, 396, 0, 397, 398, 399, 0,
	0, 400, 401, 402, 0, 403, 404, 405, 0, 406,
	407, 408, 0, 409, 410, 751, 411, 412, 413, 415,
	417, 414, 416, 418, 419, 420, 421, 422, 752, 753,
	423, 0, 0, 0, 0, 0, 0, 0, 424, 425,
	426, 754, 0, 0, 0, 427, 0, 428, 429, 430,
	0, 431, 432, 0, 0, 433, 434, 435, 755, 756,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 0,
	445, 757, 0, 758, 446, 0, 447, 448, 449, 450,
	451, 452, 453, 759, 760, 761, 547, 0, 454, 455,
	456, 0, 457, 458, 459, 460, 461, 0, 0, 0,
	0, 462, 463, 464, 0, 0, 762, 465, 548, 466,
	763, 764, 0, 765, 0, 467, 468, 470, 0, 766,
	0, 469, 471, 472, 0, 473, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 483, 482,
	0, 485, 767, 484, 0, 486, 487, 0, 0, 488,
	489, 490, 491, 492, 493, 496, 0, 0, 494, 495,
	497, 498, 0, 499, 500, 502, 505, 501, 503, 504,
	506, 519, 520, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 522, 0, 521, 0, 523,
	524, 525, 526, 527, 534, 536, 537, 532, 533, 535,
	538, 539, 541, 529, 530, 531, 0, 540, 528, 0,
	0, 0, 542, 543, 544, 545, 0, 768, 546, 769,
	549, 550, 0, 0, 551, 0, 552, 0, 0, 554,
	555, 556, 0, 0, 557, 558, 770, 0, 559, 0,
	771, 560, 561, 553, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 0, 572, 573, 772, 574, 575,
	576, 773, 577, 578, 579, 774, 580, 775, 581, 582,
	0, 583, 584, 585, 0, 586, 587, 588, 589, 590,
	591, 592, 593, 776, 594, 595, 597, 596, 598, 0,
	599, 0, 600, 601, 602, 0, 0, 0, 0, 0,
	603, 604, 606, 0, 607, 608, 609, 610, 605, 611,
	612, 613, 614, 615, 616, 0, 618, 619, 617, 620,
	621, 0, 622, 623, 624, 625, 626, 777, 627, 0,
	628, 629, 637, 638, 639, 630, 631, 633, 640, 632,
	641, 642, 643, 644, 646, 645, 0, 648, 649, 647,
	650, 651, 652, 0, 653, 778, 654, 634, 635, 655,
	656, 0, 657, 658, 659, 660, 661, 662, 663, 779,
	0, 664, 0, 665, 666, 667, 668, 669, 670, 672,
	636, 673, 678, 679, 780, 674, 675, 676, 677, 781,
	681, 682, 683, 684, 0, 685, 686, 0, 680, 671,
	0, 687, 688, 689, 690, 691, 692, 0, 693, 694,
	0, 695, 782, 783, 784, 785, 0, 707, 0, 696,
	698, 699, 700, 701, 786, 702, 787, 0, 703, 704,
	705, 706, 697, 708, 709, 0, 0, 710, 711, 712,
	714, 716, 717, 713, 715, 718, 0, 719, 0, 0,
	720, 721, 722, 788, 789, 790, 0, 724, 725, 723,
	726, 727, 730, 728, 729, 791, 731, 732, 733, 315,
	0, 0, 0, 734, 735, 792, 736, 737, 738, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 324, 323,
	325, 326, 327, 328, 0, 329, 330, 0, 0, 0,
	0, 0, 739, 0, 0, 0, 331, 0, 332, 333,
	334, 4304, 335, 336, 337, 338, 339, 340, 341, 740,
	741, 0, 342, 742, 343, 743, 0, 744, 344, 345,
	346, 347, 348, 349, 350, 0, 0, 0, 351, 745,
	746, 747, 0, 352, 353, 748, 0, 0, 0, 354,
	355, 356, 357, 358, 359, 360, 361, 0, 0, 363,
	364, 365, 362, 366, 367, 0, 368, 0, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 381, 0, 0, 0, 0, 0, 0, 0,
	382, 383, 384, 385, 386, 0, 387, 389, 749, 750,
	0, 392, 394, 388, 390, 0, 393, 391, 395, 396,
	0, 397, 398, 399, 0, 0, 400, 401, 402, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	751, 411, 412, 413, 415, 417, 414, 416, 418, 419,
	420, 421, 422, 752, 753, 423, 0, 0, 0, 0,
	0, 0, 0, 424, 425, 426, 754, 0, 0, 0,
	427, 0, 428, 429, 430, 0, 431, 432, 0, 0,
	433, 434, 435, 755, 756, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 0, 445, 757, 0, 758, 446,
	0, 447, 448, 449, 450, 451, 452, 453, 759, 760,
	761, 547, 0, 454, 455, 456, 0, 457, 458, 459,
	460, 461, 0, 0, 0, 0, 462, 463, 464, 0,
	0, 762, 465, 548, 466, 763, 764, 0, 765, 0,
	467, 468, 470, 0, 766, 0, 469, 471, 472, 0,
	473, 0, 0, 0, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 483, 482, 0, 485, 767, 484, 0,
	486, 487, 0, 0, 488, 489, 490, 491, 492, 493,
	496, 0, 0, 494, 495, 497, 498, 0, 499, 500,
	502, 505, 501, 503, 504, 506, 519, 520, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	522, 0, 521, 0, 523, 524, 525, 526, 527, 534,
	536, 537, 532, 533, 535, 538, 539, 541, 529, 530,
	531, 0, 540, 528, 0, 0, 0, 542, 543, 544,
	545, 0, 768, 546, 769, 549, 550, 0, 0, 551,
	0, 552, 0, 0, 554, 555, 556, 0, 0, 557,
	558, 770, 0, 559, 0, 771, 560, 561, 553, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 0,
	572, 573, 772, 574, 575, 576, 773, 577, 578, 579,
	774, 580, 775, 581, 582, 0, 583, 584, 585, 0,
	586, 587, 588, 589, 590, 591, 592, 593, 776, 594,
	595, 597, 596, 598, 0, 599, 0, 600, 601, 602,
	0, 0, 0, 0, 0, 603, 604, 606, 0, 607,
	608, 609, 610, 605, 611, 612, 613, 614, 615, 616,
	0, 618, 619, 617, 620, 621, 0, 622, 623, 624,
	625, 626, 777, 627, 0, 628, 629, 637, 638, 639,
	630, 631, 633, 640, 632, 641, 642, 643, 644, 646,
	645, 0, 648, 649, 647, 650, 651, 652, 0, 653,
	778, 654, 634, 635, 655, 656, 0, 657, 658, 659,
	660, 661, 662, 663, 779, 0, 664, 0, 665, 666,
	667, 668, 669, 670, 672, 636, 673, 678, 679, 780,
	674, 675, 676, 677, 781, 681, 682, 683, 684, 0,
	685, 686, 0, 680, 671, 0, 687, 688, 689, 690,
	691, 692, 0, 693, 694, 0, 695, 782, 783, 784,
	785, 0, 707, 0, 696, 698, 699, 700, 701, 786,
	702, 787, 0, 703, 704, 705, 706, 697, 708, 709,
	0, 0, 710, 711, 712, 714, 716, 717, 713, 715,
	718, 0, 719, 0, 0, 720, 721, 722, 788, 789,
	790, 0, 724, 725, 723, 726, 727, 730, 728, 729,
	791, 731, 732, 733, 0, 0, 0, 0, 734, 735,
	792, 736, 737, 738, 1416, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 324, 323, 325, 326, 327, 328, 0,
	329, 330, 0, 0, 0, 0, 2633, 1317, 0, 0,
	0, 331, 0, 332, 333, 334, 1357, 335, 336, 337,
	338, 339, 340, 341, 740, 741, 0, 342, 742, 343,
	743, 0, 744, 344, 345, 346, 347, 348, 349, 350,
	0, 1316, 0, 351, 745, 746, 747, 0, 352, 353,
	1323, 0, 1304, 0, 354, 355, 356, 357, 358, 359,
	360, 361, 0, 0, 363, 364, 365, 362, 366, 367,
	0, 368, 0, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 378, 1358, 379, 380, 381, 1307, 1305,
	1306, 1313, 1309, 1308, 1312, 382, 383, 384, 385, 386,
	0, 387, 389, 749, 750, 0, 392, 394, 388, 390,
	0, 393, 391, 395, 396, 0, 397, 398, 399, 0,
	0, 400, 401, 402, 0, 403, 404, 405, 0, 406,
	407, 408, 0, 409, 410, 751, 411, 412, 413, 415,
	417, 414, 416, 418, 419, 420, 421, 422, 1348, 1349,
	423, 0, 318, 0, 0, 0, 0, 0, 424, 425,
	426, 754, 0, 0, 0, 427, 0, 428, 429, 430,
	0, 431, 432, 0, 1359, 433, 434, 435, 755, 756,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 0,
	445, 1355, 0, 758, 446, 0, 447, 448, 449, 450,
	451, 452, 453, 1318, 1319, 1322, 547, 1361, 454, 455,
	456, 0, 457, 458, 459, 460, 461, 0, 0, 0,
	319, 462, 463, 464, 0, 1360, 762, 465, 548, 466,
	763, 764, 0, 765, 0, 467, 468, 470, 1362, 1320,
	1363, 469, 471, 472, 1364, 473, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 483, 482,
	0, 485, 1356, 484, 1365, 486, 487, 1366, 0, 488,
	489, 490, 491, 492, 493, 496, 1311, 1310, 494, 495,
	497, 498, 0, 499, 500, 502, 505, 501, 503, 504,
	506, 519, 520, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 522, 0, 521, 1367, 523,
	524, 525, 526, 527, 534, 536, 537, 532, 533, 535,
	538, 539, 541, 529, 530, 531, 1368, 540, 528, 0,
	320, 1369, 542, 543, 544, 545, 0, 1321, 546, 769,
	549, 550, 0, 0, 551, 0, 552, 0, 0, 554,
	555, 556, 0, 0, 557, 558, 770, 1370, 559, 1371,
	1350, 560, 561, 553, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 0, 572, 573, 772, 574, 575,
	576, 773, 577, 578, 579, 1351, 580, 775, 581, 582,
	0, 583, 584, 585, 0, 586, 587, 588, 589, 590,
	591, 592, 593, 776, 594, 595, 597, 596, 598, 0,
	599, 0, 600, 601, 602, 0, 0, 0, 0, 0,
	603, 604, 606, 0, 607, 608, 609, 610, 605, 611,
	612, 613, 614, 615, 616, 0, 618, 619, 617, 620,
	621, 1372, 622, 623, 624, 625, 626, 777, 627, 0,
	628, 629, 637, 638, 639, 630, 631, 633, 640, 632,
	641, 642, 643, 644, 646, 645, 0, 648, 649, 647,
	650, 651, 652, 1314, 653, 778, 654, 634, 635, 655,
	656, 1373, 657, 658, 659, 660, 661, 662, 663, 779,
	0, 664, 0, 665, 666, 667, 668, 669, 670, 672,
	636, 673, 678, 679, 780, 674, 675, 676, 677, 1352,
	681, 682, 683, 684, 0, 685, 686, 0, 680, 671,
	0, 687, 688, 689, 690, 691, 692, 0, 693, 694,
	0, 695, 782, 783, 784, 785, 0, 707, 0, 696,
	698, 699, 700, 701, 1353, 702, 1354, 0, 703, 704,
	705, 706, 697, 708, 709, 0, 0, 710, 711, 712,
	714, 716, 717, 713, 715, 718, 1315, 719, 0, 0,
	720, 721, 722, 788, 789, 790, 0, 724, 725, 723,
	726, 727, 730, 728, 729, 791, 731, 732, 733, 2269,
	0, 0, 0, 734, 735, 792, 736, 737, 738, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 324, 323,
	325, 326, 327, 328, 0, 329, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 331, 0, 332, 333,
	334, 1357, 335, 336, 337, 338, 339, 340, 341, 0,
	2275, 0, 342, 2265, 343, 2281, 0, 2288, 344, 345,
	346, 347, 348, 349, 350, 0, 0, 0, 351, 2291,
	2292, 0, 0, 352, 353, 0, 0, 1671, 0, 354,
	355, 356, 357, 358, 359, 360, 361, 0, 0, 363,
	364, 365, 362, 366, 367, 0, 368, 0, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 378, 1358,
	379, 380, 381, 0, 0, 0, 0, 0, 0, 0,
	382, 383, 384, 385, 386, 1340, 387, 389, 2279, 2278,
	0, 392, 394, 388, 390, 0, 393, 391, 395, 396,
	0, 397, 398, 399, 0, 0, 400, 1325, 402, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	0, 411, 412, 413, 415, 417, 414, 416, 418, 419,
	420, 421, 422, 0, 0, 423, 0, 0, 0, 0,
	0, 0, 0, 424, 425, 426, 2277, 0, 0, 0,
	427, 0, 428, 429, 430, 0, 431, 432, 0, 1359,
	433, 434, 435, 2286, 2287, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 0, 445, 0, 0, 0, 446,
	0, 447, 448, 449, 450, 451, 452, 453, 0, 0,
	0, 547, 1361, 454, 455, 456, 3213, 457, 458, 459,
	460, 461, 0, 0, 0, 0, 462, 463, 464, 0,
	1360, 3215, 465, 548, 466, 2272, 2273, 0, 2268, 0,
	467, 468, 470, 1362, 0, 1363, 469, 471, 472, 1364,
	473, 0, 0, 0, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 483, 482, 0, 485, 0, 484, 1365,
	486, 487, 1366, 0, 488, 489, 490, 491, 492, 493,
	496, 0, 0, 494, 495, 497, 498, 0, 499, 500,
	502, 505, 501, 503, 504, 506, 519, 520, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	522, 0, 521, 1367, 523, 524, 525, 526, 527, 534,
	536, 537, 532, 533, 535, 538, 539, 541, 529, 530,
	531, 1368, 540, 528, 0, 0, 1369, 542, 543, 544,
	545, 0, 0, 546, 2280, 549, 550, 0, 0, 551,
	0, 552, 0, 0, 554, 555, 556, 0, 0, 557,
	558, 3214, 1370, 559, 1371, 0, 560, 561, 553, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 0,
	572, 573, 2262, 574, 575, 576, 2263, 577, 578, 579,
	0, 580, 0, 581, 582, 0, 583, 584, 585, 0,
	586, 587, 588, 589, 590, 591, 592, 593, 2276, 594,
	595, 597, 596, 598, 0, 599, 0, 600, 601, 602,
	0, 0, 0, 0, 0, 603, 604, 606, 0, 607,
	608, 609, 610, 605, 611, 612, 613, 614, 615, 616,
	0, 618, 619, 617, 620, 621, 1372, 622, 623, 624,
	625, 626, 0, 627, 0, 628, 629, 637, 638, 639,
	630, 631, 633, 640, 632, 641, 642, 643, 644, 646,
	645, 0, 648, 649, 647, 650, 651, 652, 0, 653,
	0, 654, 634, 635, 655, 656, 1373, 657, 658, 659,
	660, 661, 662, 663, 2274, 0, 664, 0, 665, 666,
	667, 668, 669, 670, 672, 636, 673, 678, 679, 2290,
	674, 675, 676, 677, 0, 681, 682, 683, 684, 0,
	685, 686, 0, 680, 671, 0, 687, 688, 689, 690,
	691, 692, 0, 693, 694, 0, 695, 2282, 2283, 2284,
	2285, 0, 707, 0, 696, 698, 699, 700, 701, 0,
	702, 0, 0, 703, 704, 705, 706, 697, 708, 709,
	0, 0, 710, 711, 712, 714, 716, 717, 713, 715,
	718, 0, 719, 0, 0, 720, 721, 722, 0, 2266,
	2289, 3216, 724, 725, 723, 726, 727, 730, 728, 729,
	0, 731, 732, 733, 0, 0, 0, 0, 734, 735,
	0, 736, 737, 738, 1059, 0, 958, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 321, 322, 324, 323, 325, 326, 327,
	328, 0, 329, 330, 0, 0, 0, 0, 0, 739,
	2256, 0, 0, 331, 0, 332, 333, 334, 0, 335,
	336, 337, 338, 339, 340, 341, 740, 741, 0, 342,
	742, 343, 743, 0, 744, 344, 345, 346, 347, 348,
	349, 350, 0, 0, 0, 351, 745, 746, 747, 0,
	352, 353, 748, 0, 0, 0, 354, 355, 356, 357,
	358, 359, 360, 361, 0, 0, 363, 364, 365, 362,
	366, 367, 0, 368, 0, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 381,
	0, 0, 0, 0, 0, 0, 0, 382, 383, 384,
	965, 386, 0, 387, 389, 749, 750, 0, 392, 394,
	388, 390, 0, 393, 391, 395, 396, 0, 397, 398,
	399, 0, 0, 400, 401, 402, 0, 403, 404, 405,
	0, 406, 407, 408, 0, 409, 410, 751, 411, 412,
	413, 415, 417, 414, 416, 418, 419, 420, 421, 422,
	752, 753, 423, 0, 318, 0, 0, 0, 0, 0,
	424, 425, 426, 754, 0, 0, 0, 427, 0, 428,
	429, 430, 0, 431, 432, 1056, 0, 433, 434, 435,
	755, 756, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 0, 445, 757, 0, 758, 446, 0, 447, 448,
	449, 450, 451, 452, 453, 759, 760, 761, 547, 0,
	454, 455, 456, 0, 457, 458, 459, 460, 461, 0,
	0, 0, 319, 462, 463, 464, 0, 0, 762, 465,
	548, 466, 763, 764, 0, 765, 0, 467, 468, 470,
	0, 766, 0, 469, 471, 472, 0, 473, 0, 0,
	0, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	483, 482, 0, 485, 767, 484, 0, 486, 487, 0,
	0, 488, 489, 490, 491, 492, 493, 496, 0, 0,
	494, 495, 497, 498, 0, 499, 500, 502, 505, 501,
	503, 504, 506, 519, 520, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 522, 0, 521,
	0, 523, 524, 525, 526, 527, 534, 536, 537, 532,
	533, 535, 538, 539, 541, 529, 530, 531, 0, 540,
	528, 0, 320, 0, 542, 543, 544, 545, 0, 768,
	546, 769, 549, 550, 0, 0, 551, 0, 552, 0,
	0, 554, 555, 556, 0, 0, 557, 558, 770, 0,
	559, 0, 771, 560, 561, 553, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 0, 572, 573, 772,
	574, 575, 576, 773, 577, 578, 579, 774, 580, 775,
	581, 582, 0, 583, 584, 585, 0, 586, 587, 588,
	589, 590, 591, 592, 593, 776, 594, 595, 597, 596,
	598, 0, 599, 0, 600, 601, 602, 0, 0, 0,
	0, 0, 603, 604, 606, 0, 607, 608, 609, 610,
	605, 611, 612, 613, 614, 615, 616, 0, 618, 619,
	617, 620, 621, 0, 622, 623, 624, 625, 626, 777,
	627, 0, 628, 629, 637, 638, 639, 630, 631, 633,
	640, 632, 641, 642, 643, 644, 646, 645, 0, 648,
	649, 647, 650, 651, 652, 0, 653, 778, 654, 634,
	635, 655, 656, 0, 657, 658, 659, 660, 661, 662,
	663, 779, 0, 664, 0, 665, 666, 667, 668, 669,
	670, 672, 636, 673, 678, 679, 780, 674, 675, 676,
	677, 781, 681, 682, 683, 684, 0, 685, 1058, 0,
	680, 671, 963, 687, 688, 689, 690, 691, 964, 0,
	693, 694, 0, 695, 782, 783, 784, 785, 0, 707,
	0, 696, 698, 699, 700, 701, 786, 702, 787, 0,
	703, 704, 705, 706, 697, 708, 709, 0, 0, 710,
	711, 712, 714, 716, 717, 713, 715, 718, 0, 719,
	0, 0, 720, 721, 722, 788, 789, 790, 0, 724,
	725, 723, 726, 727, 730, 728, 729, 791, 731, 732,
	733, 2238, 0, 0, 0, 734, 735, 792, 736, 737,
	738, 0, 0, 0, 0, 0, 0, 0, 321, 322,
	324, 323, 325, 326, 327, 328, 4439, 329, 330, 0,
	0, 0, 0, 0, 739, 968, 0, 0, 331, 0,
	332, 333, 334, 0, 335, 336, 337, 338, 339, 340,
	341, 740, 741, 0, 342, 742, 343, 743, 0, 744,
	344, 345, 346, 347, 348, 349, 350, 0, 0, 0,
	351, 745, 746, 747, 0, 352, 353, 748, 0, 0,
	0, 354, 355, 356, 357, 358, 359, 360, 361, 0,
	0, 363, 364, 365, 362, 366, 367, 0, 368, 0,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 381, 0, 0, 0, 0, 0,
	0, 0, 382, 383, 384, 2245, 386, 0, 387, 389,
	749, 750, 0, 392, 394, 388, 390, 0, 393, 391,
	395, 396, 0, 397, 398, 399, 0, 0, 400, 401,
	402, 0, 403, 404, 405, 0, 406, 407, 408, 0,
	409, 410, 751, 411, 412, 413, 415, 417, 414, 416,
	418, 419, 420, 421, 2246, 752, 753, 423, 0, 318,
	0, 0, 0, 0, 0, 424, 425, 426, 754, 0,
	0, 0, 427, 0, 428, 429, 430, 0, 431, 432,
	0, 0, 2247, 434, 435, 755, 756, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 0, 445, 757, 0,
	758, 446, 0, 447, 448, 449, 450, 451, 452, 453,
	759, 760, 761, 547, 0, 454, 455, 456, 0, 457,
	458, 459, 460, 461, 0, 0, 0, 319, 462, 463,
	464, 0, 0, 762, 465, 548, 466, 763, 764, 0,
	765, 0, 467, 468, 470, 0, 766, 0, 469, 471,
	472, 0, 473, 0, 0, 0, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 483, 482, 0, 485, 767,
	484, 0, 486, 487, 0, 0, 488, 489, 490, 491,
	492, 493, 496, 0, 0, 494, 495, 497, 498, 0,
	499, 500, 502, 505, 501, 503, 504, 506, 519, 520,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 522, 0, 521, 0, 523, 524, 525, 526,
	527, 534, 536, 537, 532, 533, 535, 538, 539, 541,
	529, 530, 531, 0, 540, 528, 0, 320, 0, 542,
	543, 544, 545, 0, 768, 546, 769, 549, 550, 0,
	0, 551, 0, 552, 0, 0, 554, 555, 556, 0,
	0, 557, 558, 770, 0, 559, 0, 771, 560, 561,
	553, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 0, 572, 573, 772, 574, 575, 576, 773, 577,
	578, 579, 774, 580, 775, 581, 582, 0, 583, 584,
	585, 0, 586, 587, 588, 589, 590, 591, 592, 593,
	776, 594, 595, 597, 596, 598, 0, 599, 0, 600,
	601, 602, 0, 0, 0, 0, 0, 603, 604, 606,
	0, 607, 608, 609, 610, 605, 611, 612, 613, 614,
	615, 616, 0, 618, 619, 617, 620, 621, 0, 622,
	623, 624, 625, 626, 777, 627, 0, 628, 629, 637,
	638, 639, 630, 631, 633, 4438, 632, 641, 642, 643,
	644, 646, 645, 0, 2242, 649, 647, 650, 651, 652,
	0, 653, 778, 654, 634, 635, 655, 656, 0, 657,
	658, 659, 660, 661, 662, 663, 779, 0, 664, 0,
	665, 666, 667, 668, 669, 670, 672, 636, 673, 678,
	679, 780, 674, 675, 676, 677, 781, 681, 682, 683,
	684, 0, 685, 686, 0, 680, 671, 2244, 687, 688,
	689, 690, 691, 692, 0, 693, 694, 0, 695, 782,
	783, 784, 785, 0, 707, 0, 696, 698, 699, 700,
	701, 786, 702, 787, 0, 703, 704, 4437, 706, 697,
	708, 709, 0, 0, 710, 711, 712, 714, 716, 717,
	713, 715, 718, 0, 719, 0, 0, 720, 721, 722,
	788, 789, 790, 0, 724, 725, 723, 726, 727, 730,
	728, 729, 791, 731, 732, 733, 2238, 0, 0, 0,
	734, 735, 792, 736, 737, 738, 0, 0, 0, 0,
	0, 0, 0, 321, 322, 324, 323, 325, 326, 327,
	328, 2296, 329, 330, 0, 0, 0, 0, 0, 739,
	968, 0, 0, 331, 0, 332, 333, 334, 0, 335,
	336, 337, 338, 339, 340, 341, 740, 741, 0, 342,
	742, 343, 743, 0, 744, 344, 345, 346, 347, 348,
	349, 350, 0, 0, 0, 351, 745, 746, 747, 0,
	352, 353, 748, 0, 0, 0, 354, 355, 356, 357,
	358, 359, 360, 361, 0, 0, 363, 364, 365, 362,
	366, 367, 0, 368, 0, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 381,
	0, 0, 0, 0, 0, 0, 0, 382, 383, 384,
	2245, 386, 0, 387, 389, 749, 750, 0, 392, 394,
	388, 390, 0, 393, 391, 395, 396, 0, 397, 398,
	399, 0, 0, 400, 401, 402, 0, 403, 404, 405,
	0, 406, 407, 408, 0, 409, 410, 751, 411, 412,
	413, 415, 417, 414, 416, 418, 419, 420, 421, 2246,
	752, 753, 423, 0, 318, 0, 0, 0, 0, 0,
	424, 425, 426, 754, 0, 0, 0, 427, 0, 428,
	429, 430, 0, 431, 432, 0, 0, 2247, 434, 435,
	755, 756, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 0, 445, 757, 0, 758, 446, 0, 447, 448,
	449, 450, 451, 452, 453, 759, 760, 761, 547, 0,
	454, 455, 456, 0, 457, 458, 459, 460, 461, 0,
	0, 0, 319, 462, 463, 464, 0, 0, 762, 465,
	548, 466, 763, 764, 0, 765, 0, 467, 468, 470,
	0, 766, 0, 469, 471, 472, 0, 473, 0, 0,
	0, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	483, 482, 0, 485, 767, 484, 0, 486, 487, 0,
	0, 488, 489, 490, 491, 492, 493, 496, 0, 0,
	494, 495, 497, 498, 0, 499, 500, 502, 505, 501,
	503, 504, 506, 519, 520, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 522, 0, 521,
	0, 523, 524, 525, 526, 527, 534, 536, 537, 532,
	533, 535, 538, 539, 541, 529, 530, 531, 0, 540,
	528, 0, 320, 0, 542, 543, 544, 545, 0, 768,
	546, 769, 549, 550, 0, 0, 551, 0, 552, 0,
	0, 554, 555, 556, 0, 0, 557, 558, 770, 0,
	559, 0, 771, 560, 561, 553, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 0, 572, 573, 772,
	574, 575, 576, 773, 577, 578, 579, 774, 580, 775,
	581, 582, 0, 583, 584, 585, 0, 586, 587, 588,
	589, 590, 591, 592, 593, 776, 594, 595, 597, 596,
	598, 0, 599, 0, 600, 601, 602, 0, 0, 0,
	0, 0, 603, 604, 606, 0, 607, 608, 609, 610,
	605, 611, 612, 613, 614, 615, 616, 0, 618, 619,
	617, 620, 621, 0, 622, 623, 624, 625, 626, 777,
	627, 0, 628, 629, 637, 638, 639, 630, 631, 633,
	2295, 632, 641, 642, 643, 644, 646, 645, 0, 2297,
	649, 647, 650, 651, 652, 0, 653, 778, 654, 634,
	635, 655, 656, 0, 657, 658, 659, 660, 661, 662,
	663, 779, 0, 664, 0, 665, 666, 667, 668, 669,
	670, 672, 636, 673, 678, 679, 780, 674, 675, 676,
	677, 781, 681, 682, 683, 684, 0, 685, 686, 0,
	680, 671, 2244, 687, 688, 689, 690, 691, 692, 0,
	693, 694, 0, 695, 782, 783, 784, 785, 0, 707,
	0, 696, 698, 699, 700, 701, 786, 702, 787, 0,
	703, 704, 2294, 706, 697, 708, 709, 0, 0, 710,
	711, 712, 714, 716, 717, 713, 715, 718, 0, 719,
	0, 0, 720, 721, 722, 788, 789, 790, 0, 724,
	725, 723, 726, 727, 730, 728, 729, 791, 731, 732,
	733, 2238, 0, 0, 0, 734, 735, 792, 736, 737,
	738, 0, 0, 0, 0, 0, 0, 0, 321, 322,
	324, 323, 325, 326, 327, 328, 2237, 329, 330, 0,
	0, 0, 0, 0, 739, 968, 0, 0, 331, 0,
	332, 333, 334, 0, 335, 336, 337, 338, 339, 340,
	341, 740, 741, 0, 342, 742, 343, 743, 0, 744,
	344, 345, 346, 347, 348, 349, 350, 0, 0, 0,
	351, 745, 746, 747, 0, 352, 353, 748, 0, 0,
	0, 354, 355, 356, 357, 358, 359, 360, 361, 0,
	0, 363, 364, 365, 362, 366, 367, 0, 368, 0,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 381, 0, 0, 0, 0, 0,
	0, 0, 382, 383, 384, 2245, 386, 0, 387, 389,
	749, 750, 0, 392, 394, 388, 390, 0, 393, 391,
	395, 396, 0, 397, 398, 399, 0, 0, 400, 401,
	402, 0, 403, 404, 405, 0, 406, 407, 408, 0,
	409, 410, 751, 411, 412, 413, 415, 417, 414, 416,
	418, 419, 420, 421, 2246, 752, 753, 423, 0, 318,
	0, 0, 0, 0, 0, 424, 425, 426, 754, 0,
	0, 0, 427, 0, 428, 429, 430, 0, 431, 432,
	0, 0, 2247, 434, 435, 755, 756, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 0, 445, 757, 0,
	758, 446, 0, 447, 448, 449, 450, 451, 452, 453,
	759, 760, 761, 547, 0, 454, 455, 456, 0, 457,
	458, 459, 460, 461, 0, 0, 0, 319, 462, 463,
	464, 0, 0, 762, 465, 548, 466, 763, 764, 0,
	765, 0, 467, 468, 470, 0, 766, 0, 469, 471,
	472, 0, 473, 0, 0, 0, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 483, 482, 0, 485, 767,
	484, 0, 486, 487, 0, 0, 488, 489, 490, 491,
	492, 493, 496, 0, 0, 494, 495, 497, 498, 0,
	499, 500, 502, 505, 501, 503, 504, 506, 519, 520,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 522, 0, 521, 0, 523, 524, 525, 526,
	527, 534, 536, 537, 532, 533, 535, 538, 539, 541,
	529, 530, 531, 0, 540, 528, 0, 320, 0, 542,
	543, 544, 545, 0, 768, 546, 769, 549, 550, 0,
	0, 551, 0, 552, 0, 0, 554, 555, 556, 0,
	0, 557, 558, 770, 0, 559, 0, 771, 560, 561,
	553, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 0, 572, 573, 772, 574, 575, 576, 773, 577,
	578, 579, 774, 580, 775, 581, 582, 0, 583, 584,
	585, 0, 586, 587, 588, 589, 590, 591, 592, 593,
	776, 594, 595, 597, 596, 598, 0, 599, 0, 600,
	601, 602, 0, 0, 0, 0, 0, 603, 604, 606,
	0, 607, 608, 609, 610, 605, 611, 612, 613, 614,
	615, 616, 0, 618, 619, 617, 620, 621, 0, 622,
	623, 624, 625, 626, 777, 627, 0, 628, 629, 637,
	638, 639, 630, 631, 633, 2236, 632, 641, 642, 643,
	644, 646, 645, 0, 2242, 649, 647, 650, 651, 652,
	0, 653, 778, 654, 634, 635, 655, 656, 0, 657,
	658, 659, 660, 661, 662, 663, 779, 0, 664, 0,
	665, 666, 667, 668, 669, 670, 672, 636, 673, 678,
	679, 780, 674, 675, 676, 677, 781, 681, 682, 683,
	684, 0, 685, 686, 0, 680, 671, 2244, 687, 688,
	689, 690, 691, 692, 0, 693, 694, 0, 695, 782,
	783, 784, 785, 0, 707, 0, 696, 698, 699, 700,
	701, 786, 702, 787, 0, 703, 704, 2235, 706, 697,
	708, 709, 0, 0, 710, 711, 712, 714, 716, 717,
	713, 715, 718, 0, 719, 0, 0, 720, 721, 722,
	788, 789, 790, 0, 724, 725, 723, 726, 727, 730,
	728, 729, 791, 731, 732, 733, 956, 0, 958, 0,
	734, 735, 792, 736, 737, 738, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 322, 324, 323, 325,
	326, 327, 328, 0, 329, 330, 0, 0, 0, 0,
	968, 739, 0, 0, 0, 331, 0, 332, 333, 334,
	0, 335, 336, 337, 338, 339, 340, 341, 740, 741,
	0, 342, 742, 343, 743, 0, 744, 344, 345, 346,
	347, 348, 349, 350, 0, 0, 0, 351, 745, 746,
	747, 0, 352, 353, 748, 0, 0, 0, 354, 355,
	356, 357, 358, 359, 360, 361, 0, 0, 363, 364,
	365, 362, 366, 367, 0, 368, 0, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 381, 0, 0, 0, 0, 0, 0, 0, 382,
	383, 384, 965, 386, 0, 387, 389, 749, 750, 0,
	392, 394, 388, 390, 0, 393, 391, 395, 396, 0,
	397, 398, 399, 0, 0, 400, 401, 402, 0, 403,
	404, 405, 0, 406, 407, 408, 0, 409, 410, 751,
	411, 412, 413, 415, 417, 414, 416, 418, 419, 420,
	421, 422, 752, 753, 423, 0, 318, 0, 0, 0,
	0, 0, 424, 425, 426, 754, 0, 0, 0, 427,
	0, 428, 429, 430, 0, 431, 432, 0, 0, 433,
	434, 435, 755, 756, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 0, 445, 757, 0, 758, 446, 0,
	447, 448, 449, 450, 451, 452, 453, 759, 760, 761,
	547, 0, 454, 455, 456, 0, 457, 458, 459, 460,
	461, 0, 0, 0, 319, 462, 463, 464, 0, 0,
	762, 465, 548, 466, 763, 764, 0, 765, 0, 467,
	468, 470, 0, 766, 0, 469, 471, 472, 0, 473,
	0, 0, 0, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 483, 482, 0, 485, 767, 484, 0, 486,
	487, 0, 0, 488, 489, 490, 491, 492, 493, 496,
	0, 0, 494, 495, 497, 498, 0, 499, 500, 502,
	505, 501, 503, 504, 506, 519, 520, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 522,
	0, 521, 0, 523, 524, 525, 526, 527, 534, 536,
	537, 532, 533, 535, 538, 539, 541, 529, 530, 531,
	0, 540, 528, 0, 320, 0, 542, 543, 544, 545,
	0, 768, 546, 769, 549, 550, 0, 0, 551, 0,
	552, 0, 0, 554, 555, 556, 0, 0, 557, 558,
	770, 0, 559, 0, 771, 560, 561, 553, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 0, 572,
	573, 772, 574, 575, 576, 773, 577, 578, 579, 774,
	580, 775, 581, 582, 0, 583, 584, 585, 0, 586,
	587, 588, 589, 590, 591, 592, 593, 776, 594, 595,
	597, 596, 598, 0, 599, 0, 600, 601, 602, 0,
	0, 0, 0, 0, 603, 604, 606, 0, 607, 608,
	609, 610, 605, 611, 612, 613, 614, 615, 616, 0,
	618, 619, 617, 620, 621, 0, 622, 623, 624, 625,
	626, 777, 627, 0, 628, 629, 637, 638, 639, 630,
	631, 633, 640, 632, 641, 642, 643, 644, 646, 645,
	0, 648, 649, 647, 650, 651, 652, 0, 653, 778,
	654, 634, 635, 655, 656, 0, 657, 658, 659, 660,
	661, 662, 663, 779, 0, 664, 0, 665, 666, 667,
	668, 669, 670, 672, 636, 673, 678, 679, 780, 674,
	675, 676, 677, 781, 681, 682, 683, 684, 0, 685,
	686, 0, 680, 671, 963, 687, 688, 689, 690, 691,
	964, 0, 693, 694, 0, 695, 782, 783, 784, 785,
	0, 707, 0, 696, 698, 699, 700, 701, 786, 702,
	787, 0, 703, 704, 705, 706, 697, 708, 709, 0,
	0, 710, 711, 712, 714, 716, 717, 713, 715, 718,
	0, 719, 0, 0, 720, 721, 722, 788, 789, 790,
	0, 724, 725, 723, 726, 727, 730, 728, 729, 791,
	731, 732, 733, 958, 0, 0, 0, 734, 735, 792,
	736, 737, 738, 0, 0, 0, 0, 0, 0, 0,
	321, 322, 324, 323, 325, 326, 327, 328, 0, 329,
	330, 0, 0, 0, 0, 0, 739, 968, 0, 0,
	331, 0, 332, 333, 334, 0, 335, 336, 337, 338,
	339, 340, 341, 740, 741, 0, 342, 742, 343, 743,
	0, 744, 344, 345, 346, 347, 348, 349, 350, 0,
	0, 0, 351, 745, 746, 747, 0, 352, 353, 748,
	0, 0, 0, 354, 355, 356, 357, 358, 359, 360,
	361, 0, 0, 363, 364, 365, 362, 366, 367, 0,
	368, 0, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 381, 0, 0, 0,
	0, 0, 0, 0, 382, 383, 384, 965, 386, 0,
	387, 389, 749, 750, 0, 392, 394, 388, 390, 0,
	393, 391, 395, 396, 0, 397, 398, 399, 0, 0,
	400, 401, 402, 0, 403, 404, 405, 0, 406, 407,
	408, 0, 409, 410, 751, 411, 412, 413, 415, 417,
	414, 416, 418, 419, 420, 421, 422, 752, 753, 423,
	0, 318, 0, 0, 0, 0, 0, 424, 425, 426,
	754, 0, 0, 0, 427, 0, 428, 429, 430, 0,
	431, 432, 0, 0, 433, 434, 435, 755, 756, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 0, 445,
	757, 0, 758, 446, 0, 447, 448, 449, 450, 451,
	452, 453, 759, 760, 761, 547, 0, 454, 455, 456,
	0, 457, 458, 459, 460, 461, 0, 0, 0, 319,
	462, 463, 464, 0, 0, 762, 465, 548, 466, 763,
	764, 0, 765, 0, 467, 468, 470, 0, 766, 0,
	469, 471, 472, 0, 473, 0, 0, 0, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 483, 482, 0,
	485, 767, 484, 0, 486, 487, 0, 0, 488, 489,
	490, 491, 492, 493, 496, 0, 0, 494, 495, 497,
	498, 0, 499, 500, 502, 505, 501, 503, 504, 506,
	519, 520, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 522, 0, 521, 0, 523, 524,
	525, 526, 527, 534, 536, 537, 532, 533, 535, 538,
	539, 541, 529, 530, 531, 0, 540, 528, 0, 320,
	0, 542, 543, 544, 545, 0, 768, 546, 769, 549,
	550, 0, 0, 551, 0, 552, 0, 0, 554, 555,
	556, 0, 0, 557, 558, 770, 0, 559, 0, 771,
	560, 561, 553, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 0, 572, 573, 772, 574, 575, 576,
	773, 577, 578, 579, 774, 580, 775, 581, 582, 0,
	583, 584, 585, 0, 586, 587, 588, 589, 590, 591,
	592, 593, 776, 594, 595, 597, 596, 598, 0, 599,
	0, 600, 601, 602, 0, 0, 0, 0, 0, 603,
	604, 606, 0, 607, 608, 609, 610, 605, 611, 612,
	613, 614, 615, 616, 0, 618, 619, 617, 620, 621,
	0, 622, 623, 624, 625, 626, 777, 627, 0, 628,
	629, 637, 638, 639, 630, 631, 633, 640, 632, 641,
	642, 643, 644, 646, 645, 0, 648, 649, 647, 650,
	651, 652, 0, 653, 778, 654, 634, 635, 655, 656,
	0, 657, 658, 659, 660, 661, 662, 663, 779, 0,
	664, 0, 665, 666, 667, 668, 669, 670, 672, 636,
	673, 678, 679, 780, 674, 675, 676, 677, 781, 681,
	682, 683, 684, 0, 685, 686, 0, 680, 671, 963,
	687, 688, 689, 690, 691, 964, 0, 693, 694, 0,
	695, 782, 783, 784, 785, 0, 707, 0, 696, 698,
	699, 700, 701, 786, 702, 787, 0, 703, 704, 705,
	706, 697, 708, 709, 0, 0, 710, 711, 712, 714,
	716, 717, 713, 715, 718, 0, 719, 0, 0, 720,
	721, 722, 788, 789, 790, 0, 724, 725, 723, 726,
	727, 730, 728, 729, 791, 731, 732, 733, 3219, 0,
	0, 0, 734, 735, 792, 736, 737, 738, 0, 0,
	0, 0, 0, 0, 0, 321, 322, 324, 323, 325,
	326, 327, 328, 0, 329, 330, 0, 0, 0, 0,
	0, 0, 968, 0, 0, 331, 0, 332, 333, 334,
	1357, 335, 336, 337, 338, 339, 340, 341, 0, 2275,
	0, 342, 2265, 343, 2281, 0, 2288, 344, 345, 346,
	347, 348, 349, 350, 0, 0, 0, 351, 2291, 2292,
	0, 0, 352, 353, 0, 0, 1671, 0, 354, 355,
	356, 357, 358, 359, 360, 361, 0, 0, 363, 364,
	365, 362, 366, 367, 0, 368, 0, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 378, 1358, 379,
	380, 381, 0, 0, 0, 0, 0, 0, 0, 382,
	383, 384, 385, 386, 1340, 387, 389, 2279, 2278, 0,
	392, 394, 388, 390, 0, 393, 391, 395, 396, 0,
	397, 398, 399, 0, 0, 400, 1325, 402, 0, 403,
	404, 405, 0, 406, 407, 408, 0, 409, 410, 0,
	411, 412, 413, 415, 417, 414, 416, 418, 419, 420,
	421, 422, 0, 0, 423, 0, 318, 0, 0, 0,
	0, 0, 424, 425, 426, 2277, 0, 0, 0, 427,
	0, 428, 429, 430, 0, 431, 432, 0, 1359, 433,
	434, 435, 2286, 2287, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 0, 445, 0, 0, 0, 446, 0,
	447, 448, 449, 450, 451, 452, 453, 0, 0, 0,
	547, 1361, 454, 455, 456, 0, 457, 458, 459, 460,
	461, 0, 0, 0, 0, 462, 463, 464, 0, 1360,
	0, 465, 548, 466, 2272, 2273, 0, 2268, 0, 467,
	468, 470, 1362, 0, 1363, 469, 471, 472, 1364, 473,
	0, 0, 0, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 483, 482, 0, 485, 0, 484, 1365, 486,
	487, 1366, 0, 488, 489, 490, 491, 492, 493, 496,
	0, 0, 494, 495, 497, 498, 0, 499, 500, 502,
	505, 501, 503, 504, 506, 519, 520, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 522,
	0, 521, 1367, 523, 524, 525, 526, 527, 534, 536,
	537, 532, 533, 535, 538, 539, 541, 529, 530, 531,
	1368, 540, 528, 0, 0, 1369, 542, 543, 544, 545,
	0, 0, 546, 2280, 549, 550, 0, 0, 551, 0,
	552, 0, 0, 554, 555, 556, 0, 0, 557, 558,
	0, 1370, 559, 1371, 0, 560, 561, 553, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 0, 572,
	573, 2262, 574, 575, 576, 2263, 577, 578, 579, 0,
	580, 0, 581, 582, 0, 583, 584, 585, 0, 586,
	587, 588, 589, 590, 591, 592, 593, 2276, 594, 595,
	597, 596, 598, 0, 599, 0, 600, 601, 602, 0,
	0, 0, 0, 0, 603, 604, 606, 0, 607, 608,
	609, 610, 605, 611, 612, 613, 614, 615, 616, 0,
	618, 619, 617, 620, 621, 1372, 622, 623, 624, 625,
	626, 0, 627, 0, 628, 629, 637, 638, 639, 630,
	631, 633, 640, 632, 641, 642, 643, 644, 646, 645,
	0, 648, 649, 647, 650, 651, 652, 0, 653, 0,
	654, 634, 635, 655, 656, 1373, 657, 658, 659, 660,
	661, 662, 663, 2274, 0, 664, 0, 665, 666, 667,
	668, 669, 670, 672, 636, 673, 678, 679, 2290, 674,
	675, 676, 677, 0, 681, 682, 683, 684, 0, 685,
	686, 0, 680, 671, 0, 687, 688, 689, 690, 691,
	692, 0, 693, 694, 0, 695, 2282, 2283, 2284, 2285,
	0, 707, 0, 696, 698, 699, 700, 701, 0, 702,
	0, 0, 703, 704, 705, 706, 697, 708, 709, 0,
	0, 710, 711, 712, 714, 716, 717, 713, 715, 718,
	0, 719, 0, 0, 720, 721, 722, 0, 2266, 2289,
	0, 724, 725, 723, 726, 727, 730, 728, 729, 0,
	731, 732, 733, 0, 0, 0, 0, 734, 735, 0,
	736, 737, 738, 3199, 0, 315, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 321, 322, 324, 323, 325, 326, 327, 328,
	0, 329, 330, 0, 0, 0, 0, 0, 739, 2256,
	0, 0, 331, 0, 332, 333, 334, 0, 335, 336,
	337, 338, 339, 340, 341, 740, 741, 0, 342, 742,
	343, 743, 0, 744, 344, 345, 346, 347, 348, 349,
	350, 0, 0, 0, 351, 745, 746, 747, 0, 352,
	353, 748, 0, 0, 0, 354, 355, 356, 357, 358,
	359, 360, 361, 0, 0, 363, 364, 365, 362, 366,
	367, 0, 368, 0, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 381, 0,
	0, 0, 0, 0, 0, 0, 382, 383, 384, 385,
	386, 0, 387, 389, 749, 750, 0, 392, 394, 388,
	390, 0, 393, 391, 395, 396, 0, 397, 398, 399,
	0, 0, 400, 401, 402, 0, 403, 404, 405, 0,
	406, 407, 408, 0, 409, 410, 751, 411, 412, 413,
	415, 417, 414, 416, 418, 419, 420, 421, 422, 752,
	753, 423, 0, 318, 0, 0, 0, 0, 0, 424,
	425, 426, 754, 0, 0, 0, 427, 0, 428, 429,
	430, 0, 431, 432, 0, 0, 433, 434, 435, 755,
	756, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	0, 445, 757, 0, 758, 446, 0, 447, 448, 449,
	450, 451, 452, 453, 759, 760, 761, 547, 0, 454,
	455, 456, 0, 457, 458, 459, 460, 461, 0, 0,
	0, 319, 462, 463, 464, 0, 0, 762, 465, 548,
	466, 763, 764, 0, 765, 0, 467, 468, 470, 0,
	766, 0, 469, 471, 472, 0, 473, 0, 0, 0,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 483,
	482, 0, 485, 767, 484, 0, 486, 487, 0, 0,
	488, 489, 490, 491, 492, 493, 496, 0, 0, 494,
	495, 497, 498, 0, 499, 500, 502, 505, 501, 503,
	504, 506, 519, 520, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 522, 0, 521, 0,
	523, 524, 525, 526, 527, 534, 536, 537, 532, 533,
	535, 538, 539, 541, 529, 530, 531, 0, 540, 528,
	0, 320, 0, 542, 543, 544, 545, 0, 768, 546,
	769, 549, 550, 0, 0, 551, 0, 552, 0, 0,
	554, 555, 556, 0, 0, 557, 558, 770, 0, 559,
	0, 771, 560, 561, 553, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 0, 572, 573, 772, 574,
	575, 576, 773, 577, 578, 579, 774, 580, 775, 581,
	582, 0, 583, 584, 585, 0, 586, 587, 588, 589,
	590, 591, 592, 593, 776, 594, 595, 597, 596, 598,
	0, 599, 0, 600, 601, 602, 0, 0, 0, 0,
	0, 603, 604, 606, 0, 607, 608, 609, 610, 605,
	611, 612, 613, 614, 615, 616, 0, 618, 619, 617,
	620, 621, 0, 622, 623, 624, 625, 626, 777, 627,
	0, 628, 629, 637, 638, 639, 630, 631, 633, 640,
	632, 641, 642, 643, 644, 646, 645, 0, 648, 649,
	647, 650, 651, 652, 0, 653, 778, 654, 634, 635,
	655, 656, 0, 657, 658, 659, 660, 661, 662, 663,
	779, 0, 664, 0, 665, 666, 667, 668, 669, 670,
	672, 636, 673, 678, 679, 780, 674, 675, 676, 677,
	781, 681, 682, 683, 684, 0, 685, 686, 0, 680,
	671, 0, 687, 688, 689, 690, 691, 692, 0, 693,
	694, 0, 695, 782, 783, 784, 785, 0, 707, 0,
	696, 698, 699, 700, 701, 786, 702, 787, 0, 703,
	704, 705, 706, 697, 708, 709, 0, 0, 710, 711,
	712, 714, 716, 717, 713, 715, 718, 0, 719, 0,
	0, 720, 721, 722, 788, 789, 790, 0, 724, 725,
	723, 726, 727, 730, 728, 729, 791, 731, 732, 733,
	2238, 0, 0, 0, 734, 735, 792, 736, 737, 738,
	0, 0, 0, 0, 0, 0, 0, 321, 322, 324,
	323, 325, 326, 327, 328, 0, 329, 330, 0, 0,
	0, 0, 0, 739, 968, 0, 0, 331, 0, 332,
	333, 334, 0, 335, 336, 337, 338, 339, 340, 341,
	740, 741, 0, 342, 742, 343, 743, 0, 744, 344,
	345, 346, 347, 348, 349, 350, 0, 0, 0, 351,
	745, 746, 747, 0, 352, 353, 748, 0, 0, 0,
	354, 355, 356, 357, 358, 359, 360, 361, 0, 0,
	363, 364, 365, 362, 366, 367, 0, 368, 0, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 381, 0, 0, 0, 0, 0, 0,
	0, 382, 383, 384, 2245, 386, 0, 387, 389, 749,
	750, 0, 392, 394, 388, 390, 0, 393, 391, 395,
	396, 0, 397, 398, 399, 0, 0, 400, 401, 402,
	0, 403, 404, 405, 0, 406, 407, 408, 0, 409,
	410, 751, 411, 412, 413, 415, 417, 414, 416, 418,
	419, 420, 421, 2246, 752, 753, 423, 0, 318, 0,
	0, 0, 0, 0, 424, 425, 426, 754, 0, 0,
	0, 427, 0, 428, 429, 430, 0, 431, 432, 0,
	0, 2247, 434, 435, 755, 756, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 0, 445, 757, 0, 758,
	446, 0, 447, 448, 449, 450, 451, 452, 453, 759,
	760, 761, 547, 0, 454, 455, 456, 0, 457, 458,
	459, 460, 461, 0, 0, 0, 319, 462, 463, 464,
	0, 0, 762, 465, 548, 466, 763, 764, 0, 765,
	0, 467, 468, 470, 0, 766, 0, 469, 471, 472,
	0, 473, 0, 0, 0, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 483, 482, 0, 485, 767, 484,
	0, 486, 487, 0, 0, 488, 489, 490, 491, 492,
	493, 496, 0, 0, 494, 495, 497, 498, 0, 499,
	500, 502, 505, 501, 503, 504, 506, 519, 520, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 522, 0, 521, 0, 523, 524, 525, 526, 527,
	534, 536, 537, 532, 533, 535, 538, 539, 541, 529,
	530, 531, 0, 540, 528, 0, 320, 0, 542, 543,
	544, 545, 0, 768, 546, 769, 549, 550, 0, 0,
	551, 0, 552, 0, 0, 554, 555, 556, 0, 0,
	557, 558, 770, 0, 559, 0, 771, 560, 561, 553,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	0, 572, 573, 772, 574, 575, 576, 773, 577, 578,
	579, 774, 580, 775, 581, 582, 0, 583, 584, 585,
	0, 586, 587, 588, 589, 590, 591, 592, 593, 776,
	594, 595, 597, 596, 598, 0, 599, 0, 600, 601,
	602, 0, 0, 0, 0, 0, 603, 604, 606, 0,
	607, 608, 609, 610, 605, 611, 612, 613, 614, 615,
	616, 0, 618, 619, 617, 620, 621, 0, 2687, 623,
	624, 625, 626, 777, 627, 0, 628, 629, 637, 638,
	639, 630, 631, 633, 2688, 632, 641, 642, 643, 644,
	646, 645, 0, 2242, 649, 647, 650, 651, 652, 0,
	653, 778, 654, 634, 635, 655, 656, 0, 657, 658,
	659, 660, 661, 662, 663, 779, 0, 664, 0, 665,
	666, 667, 668, 669, 670, 672, 636, 673, 678, 679,
	780, 674, 675, 676, 677, 781, 681, 682, 683, 684,
	0, 685, 686, 0, 680, 671, 2244, 687, 688, 689,
	690, 691, 692, 0, 693, 694, 0, 695, 782, 783,
	784, 785, 0, 707, 0, 696, 698, 699, 700, 701,
	786, 702, 787, 0, 703, 704, 2689, 706, 697, 708,
	709, 0, 0, 710, 711, 712, 714, 716, 717, 713,
	715, 718, 0, 719, 0, 0, 720, 721, 722, 788,
	789, 790, 0, 724, 725, 723, 726, 727, 730, 728,
	729, 791, 731, 732, 733, 2269, 0, 0, 0, 734,
	735, 792, 736, 737, 738, 0, 0, 0, 0, 0,
	0, 0, 321, 322, 324, 323, 325, 326, 327, 328,
	0, 329, 330, 0, 0, 0, 0, 0, 0, 968,
	0, 0, 331, 0, 332, 333, 334, 1357, 335, 336,
	337, 338, 339, 340, 341, 0, 2275, 0, 342, 2265,
	343, 2281, 0, 2288, 344, 345, 346, 347, 348, 349,
	350, 0, 0, 0, 351, 2291, 2292, 0, 0, 352,
	353, 0, 0, 1671, 0, 354, 355, 356, 357, 358,
	359, 360, 361, 0, 0, 363, 364, 365, 362, 366,
	367, 0, 368, 0, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 378, 1358, 379, 380, 381, 0,
	0, 0, 0, 0, 0, 0, 382, 383, 384, 385,
	386, 1340, 387, 389, 2279, 2278, 0, 392, 394, 388,
	390, 0, 393, 391, 395, 396, 0, 397, 398, 399,
	0, 0, 400, 1325, 402, 0, 403, 404, 405, 0,
	406, 407, 408, 0, 409, 410, 0, 411, 412, 413,
	415, 417, 414, 416, 418, 419, 420, 421, 422, 0,
	0, 423, 0, 0, 0, 0, 0, 0, 0, 424,
	425, 426, 2277, 0, 0, 0, 427, 0, 428, 429,
	430, 0, 431, 432, 0, 1359, 433, 434, 435, 2286,
	2287, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	0, 445, 0, 0, 0, 446, 0, 447, 448, 449,
	450, 451, 452, 453, 0, 0, 0, 547, 1361, 454,
	455, 456, 0, 457, 458, 459, 460, 461, 0, 0,
	0, 0, 462, 463, 464, 0, 1360, 0, 465, 548,
	466, 2272, 2273, 0, 2268, 0, 467, 468, 470, 1362,
	0, 1363, 469, 471, 472, 1364, 473, 0, 0, 0,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 483,
	482, 0, 485, 0, 484, 1365, 486, 487, 1366, 0,
	488, 489, 490, 491, 492, 493, 496, 0, 0, 494,
	495, 497, 498, 0, 499, 500, 502, 505, 501, 503,
	504, 506, 519, 520, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 522, 0, 521, 1367,
	523, 524, 525, 526, 527, 534, 536, 537, 532, 533,
	535, 538, 539, 541, 529, 530, 531, 1368, 540, 528,
	0, 0, 1369, 542, 543, 544, 545, 0, 0, 546,
	2280, 549, 550, 0, 0, 551, 0, 552, 0, 0,
	554, 555, 556, 0, 0, 557, 558, 0, 1370, 559,
	1371, 0, 560, 561, 553, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 0, 572, 573, 2262, 574,
	575, 576, 2263, 577, 578, 579, 0, 580, 0, 581,
	582, 0, 583, 584, 585, 0, 586, 587, 588, 589,
	590, 591, 592, 593, 2276, 594, 595, 597, 596, 598,
	0, 599, 0, 600, 601, 602, 0, 0, 0, 0,
	0, 603, 604, 606, 0, 607, 608, 609, 610, 605,
	611, 612, 613, 614, 615, 616, 0, 618, 619, 617,
	620, 621, 1372, 622, 623, 624, 625, 626, 0, 627,
	0, 628, 629, 637, 638, 639, 630, 631, 633, 640,
	632, 641, 642, 643, 644, 646, 645, 0, 648, 649,
	647, 650, 651, 652, 0, 653, 0, 654, 634, 635,
	655, 656, 1373, 657, 658, 659, 660, 661, 662, 663,
	2274, 0, 664, 0, 665, 666, 667, 668, 669, 670,
	672, 636, 673, 678, 679, 2290, 674, 675, 676, 677,
	0, 681, 682, 683, 684, 0, 685, 686, 0, 680,
	671, 0, 687, 688, 689, 690, 691, 692, 0, 693,
	694, 0, 695, 2282, 2283, 2284, 2285, 0, 707, 0,
	696, 698, 699, 700, 701, 0, 702, 0, 0, 703,
	704, 705, 706, 697, 708, 709, 0, 0, 710, 711,
	712, 714, 716, 717, 713, 715, 718, 0, 719, 0,
	0, 720, 721, 722, 0, 2266, 2289, 0, 724, 725,
	723, 726, 727, 730, 728, 729, 0, 731, 732, 733,
	0, 0, 0, 0, 734, 735, 0, 736, 737, 738,
	315, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 322, 324,
	323, 325, 326, 327, 328, 0, 329, 330, 0, 0,
	0, 0, 0, 739, 0, 0, 2256, 331, 0, 332,
	333, 334, 0, 335, 336, 337, 338, 339, 340, 341,
	740, 741, 0, 342, 742, 343, 743, 0, 744, 344,
	345, 346, 347, 348, 349, 350, 0, 0, 0, 351,
	745, 746, 747, 0, 352, 353, 748, 0, 0, 0,
	354, 355, 356, 357, 358, 359, 360, 361, 0, 0,
	363, 364, 365, 362, 366, 367, 0, 368, 0, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 381, 0, 0, 0, 0, 0, 0,
	0, 382, 383, 384, 385, 386, 0, 387, 389, 749,
	750, 0, 392, 394, 388, 390, 0, 393, 391, 395,
	396, 0, 397, 398, 399, 0, 0, 400, 401, 402,
	0, 403, 404, 405, 0, 406, 407, 408, 0, 409,
	410, 751, 411, 412, 413, 415, 417, 414, 416, 418,
	419, 420, 421, 422, 752, 753, 423, 0, 318, 0,
	0, 0, 0, 0, 424, 425, 426, 754, 0, 0,
	0, 427, 0, 428, 429, 430, 0, 431, 432, 0,
	0, 433, 434, 435, 755, 756, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 0, 445, 757, 0, 758,
	446, 0, 447, 448, 449, 450, 451, 452, 453, 759,
	760, 761, 547, 0, 454, 455, 456, 0, 457, 458,
	459, 460, 461, 0, 0, 0, 319, 462, 463, 464,
	0, 0, 762, 465, 548, 466, 763, 764, 0, 765,
	0, 467, 468, 470, 0, 766, 0, 469, 471, 472,
	0, 473, 0, 0, 0, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 483, 482, 0, 485, 767, 484,
	0, 486, 487, 0, 0, 488, 489, 490, 491, 492,
	493, 496, 0, 0, 494, 495, 497, 498, 0, 499,
	500, 502, 505, 501, 503, 504, 506, 519, 520, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 522, 0, 521, 0, 523, 524, 525, 526, 527,
	534, 536, 537, 532, 533, 535, 538, 539, 541, 529,
	530, 531, 0, 540, 528, 0, 320, 0, 542, 543,
	544, 545, 0, 768, 546, 769, 549, 550, 0, 0,
	551, 0, 552, 0, 0, 554, 555, 556, 0, 0,
	557, 558, 770, 0, 559, 0, 771, 560, 561, 553,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	0, 572, 573, 772, 574, 575, 576, 773, 577, 578,
	579, 774, 580, 775, 581, 582, 0, 583, 584, 585,
	0, 586, 587, 588, 589, 590, 591, 592, 593, 776,
	594, 595, 597, 596, 598, 0, 599, 0, 600, 601,
	602, 0, 0, 0, 0, 0, 603, 604, 606, 0,
	607, 608, 609, 610, 605, 611, 612, 613, 614, 615,
	616, 0, 618, 619, 617, 620, 621, 0, 622, 623,
	624, 625, 626, 777, 627, 0, 628, 629, 637, 638,
	639, 630, 631, 633, 640, 632, 641, 642, 643, 644,
	646, 645, 0, 648, 649, 647, 650, 651, 652, 0,
	653, 778, 654, 634, 635, 655, 656, 0, 657, 658,
	659, 660, 661, 662, 663, 779, 0, 664, 0, 665,
	666, 667, 668, 669, 670, 672, 636, 673, 678, 679,
	780, 674, 675, 676, 677, 781, 681, 682, 683, 684,
	0, 685, 686, 0, 680, 671, 0, 687, 688, 689,
	690, 691, 692, 0, 693, 694, 0, 695, 782, 783,
	784, 785, 0, 707, 0, 696, 698, 699, 700, 701,
	786, 702, 787, 0, 703, 704, 705, 706, 697, 708,
	709, 0, 0, 710, 711, 712, 714, 716, 717, 713,
	715, 718, 0, 719, 0, 0, 720, 721, 722, 788,
	789, 790, 0, 724, 725, 723, 726, 727, 730, 728,
	729, 791, 731, 732, 733, 315, 0, 0, 0, 734,
	735, 792, 736, 737, 738, 0, 0, 0, 0, 0,
	0, 0, 321, 322, 324, 323, 325, 326, 327, 328,
	0, 329, 330, 0, 0, 0, 0, 0, 739, 968,
	0, 0, 331, 0, 332, 333, 334, 0, 335, 336,
	337, 338, 339, 340, 341, 740, 741, 0, 342, 742,
	343, 743, 0, 744, 344, 345, 346, 347, 348, 349,
	350, 0, 0, 0, 351, 745, 746, 747, 0, 352,
	353, 748, 0, 0, 0, 354, 355, 356, 357, 358,
	359, 360, 361, 0, 0, 363, 364, 365, 362, 366,
	367, 0, 368, 0, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 381, 0,
	0, 0, 0, 0, 0, 0, 382, 383, 384, 385,
	386, 0, 387, 389, 749, 750, 0, 392, 394, 388,
	390, 0, 393, 391, 395, 396, 0, 397, 398, 399,
	0, 0, 400, 401, 402, 0, 403, 404, 405, 0,
	406, 407, 408, 0, 409, 410, 751, 411, 412, 413,
	415, 417, 414, 416, 418, 419, 420, 421, 422, 752,
	753, 423, 0, 318, 0, 0, 0, 0, 0, 424,
	425, 426, 754, 0, 0, 0, 427, 0, 428, 429,
	430, 0, 431, 432, 0, 0, 433, 434, 435, 755,
	756, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	0, 445, 757, 0, 758, 446, 0, 447, 448, 449,
	450, 451, 452, 453, 759, 760, 761, 547, 0, 454,
	455, 456, 0, 457, 458, 459, 460, 461, 0, 0,
	0, 319, 462, 463, 464, 0, 0, 762, 465, 548,
	466, 763, 764, 0, 765, 0, 467, 468, 470, 0,
	766, 0, 469, 471, 472, 0, 473, 0, 0, 0,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 483,
	482, 0, 485, 767, 484, 0, 486, 487, 0, 0,
	488, 489, 490, 491, 492, 493, 496, 0, 0, 494,
	495, 497, 498, 0, 499, 500, 502, 505, 501, 503,
	504, 506, 519, 520, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 522, 0, 521, 0,
	523, 524, 525, 526, 527, 534, 536, 537, 532, 533,
	535, 538, 539, 541, 529, 530, 531, 0, 540, 528,
	0, 320, 0, 542, 543, 544, 545, 0, 768, 546,
	769, 549, 550, 0, 0, 551, 0, 552, 0, 0,
	554, 555, 556, 0, 0, 557, 558, 770, 0, 559,
	0, 771, 560, 561, 553, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 0, 572, 573, 772, 574,
	575, 576, 773, 577, 578, 579, 774, 580, 775, 581,
	582, 0, 583, 584, 585, 0, 586, 587, 588, 589,
	590, 591, 592, 593, 776, 594, 595, 597, 596, 598,
	0, 599, 0, 600, 601, 602, 0, 0, 0, 0,
	0, 603, 604, 606, 0, 607, 608, 609, 610, 605,
	611, 612, 613, 614, 615, 616, 0, 618, 619, 617,
	620, 621, 0, 622, 623, 624, 625, 626, 777, 627,
	0, 628, 629, 637, 638, 639, 630, 631, 633, 640,
	632, 641, 642, 643, 644, 646, 645, 0, 648, 649,
	647, 650, 651, 652, 0, 653, 778, 654, 634, 635,
	655, 656, 0, 657, 658, 659, 660, 661, 662, 663,
	779, 0, 664, 0, 665, 666, 667, 668, 669, 670,
	672, 636, 673, 678, 679, 780, 674, 675, 676, 677,
	781, 681, 682, 683, 684, 0, 685, 686, 0, 680,
	671, 0, 687, 688, 689, 690, 691, 692, 0, 693,
	694, 0, 695, 782, 783, 784, 785, 0, 707, 0,
	696, 698, 699, 700, 701, 786, 702, 787, 0, 703,
	704, 705, 706, 697, 708, 709, 0, 0, 710, 711,
	712, 714, 716, 717, 713, 715, 718, 0, 719, 0,
	0, 720, 721, 722, 788, 789, 790, 0, 724, 725,
	723, 726, 727, 730, 728, 729, 791, 731, 732, 733,
	315, 0, 0, 0, 734, 735, 792, 736, 737, 738,
	0, 0, 0, 0, 0, 0, 0, 321, 322, 324,
	323, 325, 326, 327, 328, 0, 329, 330, 0, 0,
	0, 0, 0, 739, 924, 0, 0, 331, 0, 332,
	333, 334, 0, 335, 336, 337, 338, 339, 340, 341,
	740, 741, 0, 342, 742, 343, 743, 0, 744, 344,
	345, 346, 347, 348, 349, 350, 0, 0, 0, 351,
	745, 746, 747, 0, 352, 353, 748, 0, 0, 0,
	354, 355, 356, 357, 358, 359, 360, 361, 0, 0,
	363, 364, 365, 362, 366, 367, 0, 368, 0, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 381, 0, 0, 0, 0, 0, 0,
	0, 382, 383, 384, 385, 386, 0, 387, 389, 749,
	750, 0, 392, 394, 388, 390, 0, 393, 391, 395,
	396, 0, 397, 398, 399, 0, 0, 400, 401, 402,
	0, 403, 404, 405, 0, 406, 407, 408, 0, 409,
	410, 751, 411, 412, 413, 415, 417, 414, 416, 418,
	419, 420, 421, 422, 752, 753, 423, 0, 0, 0,
	0, 0, 0, 0, 424, 425, 426, 754, 0, 0,
	0, 427, 0, 428, 429, 430, 0, 431, 432, 0,
	0, 433, 434, 435, 755, 756, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 0, 445, 757, 0, 758,
	446, 0, 447, 448, 449, 450, 451, 452, 453, 759,
	760, 761, 547, 0, 454, 455, 456, 0, 457, 458,
	459, 460, 461, 0, 0, 0, 0, 462, 463, 464,
	0, 0, 762, 465, 548, 466, 763, 764, 0, 765,
	0, 467, 468, 470, 0, 766, 0, 469, 471, 472,
	0, 473, 0, 0, 0, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 483, 482, 0, 485, 767, 484,
	0, 486, 487, 0, 0, 488, 489, 490, 491, 492,
	493, 496, 0, 0, 494, 495, 497, 498, 0, 499,
	500, 502, 505, 501, 503, 504, 506, 519, 520, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 522, 0, 521, 0, 523, 524, 525, 526, 527,
	534, 536, 537, 532, 533, 535, 538, 539, 541, 529,
	530, 531, 0, 540, 528, 0, 0, 0, 542, 543,
	544, 545, 0, 768, 546, 769, 549, 550, 0, 0,
	551, 0, 552, 0, 0, 554, 555, 556, 0, 0,
	557, 558, 770, 0, 559, 0, 771, 560, 561, 553,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	0, 572, 573, 772, 574, 575, 576, 773, 577, 578,
	579, 774, 580, 775, 581, 582, 0, 583, 584, 585,
	0, 586, 587, 588, 589, 590, 591, 592, 593, 776,
	594, 595, 597, 596, 598, 0, 599, 0, 600, 601,
	602, 0, 0, 0, 0, 0, 603, 604, 606, 0,
	607, 608, 609, 610, 605, 611, 612, 613, 614, 615,
	616, 0, 618, 619, 617, 620, 621, 0, 622, 623,
	624, 625, 626, 777, 627, 0, 628, 629, 637, 638,
	639, 630, 631, 633, 640, 632, 641, 642, 643, 644,
	646, 645, 0, 648, 649, 647, 650, 651, 652, 0,
	653, 778, 654, 634, 635, 655, 656, 0, 657, 658,
	659, 660, 661, 662, 663, 779, 0, 664, 0, 665,
	666, 667, 668, 669, 670, 672, 636, 673, 678, 679,
	780, 674, 675, 676, 677, 781, 681, 682, 683, 684,
	0, 685, 686, 0, 680, 671, 0, 687, 688, 689,
	690, 691, 692, 0, 693, 694, 0, 695, 782, 783,
	784, 785, 0, 707, 0, 696, 698, 699, 700, 701,
	786, 702, 787, 0, 703, 704, 705, 706, 697, 708,
	709, 0, 0, 710, 711, 712, 714, 716, 717, 713,
	715, 718, 0, 719, 0, 0, 720, 721, 722, 788,
	789, 790, 0, 724, 725, 723, 726, 727, 730, 728,
	729, 791, 731, 732, 733, 0, 0, 0, 0, 734,
	735, 792, 736, 737, 738, 0, 0, 0, 0, 0,
	0, 0, 0, 1703, 1702, 0, 0, 0, 0, 1700,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4680,
	321, 322, 324, 323, 325, 326, 327, 328, 0, 329,
	330, 0, 0, 0, 0, 0, 739, 0, 0, 0,
	331, 0, 332, 333, 334, 1357, 335, 336, 337, 338,
	339, 340, 341, 740, 741, 0, 342, 742, 343, 743,
	0, 744, 344, 345, 346, 347, 348, 349, 350, 0,
	0, 0, 351, 745, 746, 747, 0, 352, 353, 748,
	0, 1671, 0, 354, 355, 356, 357, 358, 359, 360,
	361, 0, 0, 363, 364, 365, 362, 366, 367, 0,
	368, 0, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 377, 378, 1358, 379, 380, 381, 0, 0, 0,
	0, 0, 0, 0, 382, 383, 384, 385, 386, 0,
	387, 389, 749, 750, 0, 392, 394, 388, 390, 0,
	393, 391, 395, 396, 0, 397, 398, 399, 0, 0,
	400, 401, 402, 0, 403, 404, 405, 0, 406, 407,
	408, 0, 409, 410, 751, 411, 412, 413, 415, 417,
	414, 416, 418, 419, 420, 421, 422, 752, 753, 423,
	0, 318, 0, 0, 0, 0, 0, 424, 425, 426,
	754, 0, 0, 0, 427, 0, 428, 429, 430, 0,
	431, 432, 0, 1359, 433, 434, 435, 755, 756, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 0, 445,
	757, 0, 758, 446, 0, 447, 448, 449, 450, 451,
	452, 453, 759, 760, 761, 547, 1361, 454, 455, 456,
	0, 457, 458, 459, 460, 461, 0, 0, 0, 0,
	462, 463, 464, 0, 1360, 762, 465, 548, 466, 763,
	764, 0, 765, 0, 467, 468, 470, 1362, 766, 1363,
	469, 471, 472, 1364, 473, 0, 0, 0, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 483, 482, 0,
	485, 767, 484, 1365, 486, 487, 1366, 0, 488, 489,
	490, 491, 492, 493, 496, 0, 0, 494, 495, 497,
	498, 0, 499, 500, 502, 505, 501, 503, 504, 506,
	519, 520, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 522, 0, 521, 1367, 523, 524,
	525, 526, 527, 534, 536, 537, 532, 533, 535, 538,
	539, 541, 529, 530, 531, 1368, 540, 528, 0, 0,
	1369, 542, 543, 544, 545, 4566, 768, 546, 769, 549,
	550, 0, 0, 551, 0, 552, 0, 0, 554, 555,
	556, 0, 0, 557, 558, 770, 1370, 559, 1371, 771,
	560, 561, 553, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 0, 572, 573, 772, 574, 575, 576,
	773, 577, 578, 579, 774, 580, 775, 581, 582, 0,
	583, 584, 585, 0, 586, 587, 588, 589, 590, 591,
	592, 593, 776, 594, 595, 597, 596, 598, 0, 599,
	0, 600, 601, 602, 0, 0, 0, 0, 0, 603,
	604, 606, 0, 607, 608, 609, 610, 605, 611, 612,
	613, 614, 615, 616, 0, 618, 619, 617, 620, 621,
	1372, 622, 623, 624, 625, 626, 777, 627, 0, 628,
	629, 637, 638, 639, 630, 631, 633, 640, 632, 641,
	642, 643, 644, 646, 645, 0, 648, 649, 647, 650,
	651, 652, 0, 653, 778, 654, 634, 635, 655, 656,
	1373, 657, 658, 659, 660, 661, 662, 663, 779, 0,
	664, 0, 665, 666, 667, 668, 669, 670, 672, 636,
	673, 678, 679, 780, 674, 675, 676, 677, 781, 681,
	682, 683, 684, 0, 685, 686, 0, 680, 671, 0,
	687, 688, 689, 690, 691, 692, 0, 693, 694, 0,
	695, 782, 783, 784, 785, 0, 707, 0, 696, 698,
	699, 700, 701, 786, 702, 787, 0, 703, 704, 705,
	706, 697, 708, 709, 0, 0, 710, 711, 712, 714,
	716, 717, 713, 715, 718, 0, 719, 0, 0, 720,
	721, 722, 788, 789, 790, 0, 724, 725, 723, 726,
	727, 730, 728, 729, 791, 731, 732, 733, 0, 0,
	0, 0, 734, 735, 792, 736, 737, 738, 3612, 0,
	1703, 1702, 0, 0, 0, 0, 1700, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 322, 324,
	323, 325, 326, 327, 328, 0, 329, 330, 0, 0,
	0, 0, 0, 739, 0, 0, 0, 331, 0, 332,
	333, 334, 1357, 335, 336, 337, 338, 339, 340, 341,
	740, 741, 0, 342, 742, 343, 743, 0, 744, 344,
	345, 346, 347, 348, 349, 350, 0, 0, 0, 351,
	745, 746, 747, 0, 352, 353, 748, 0, 1671, 0,
	354, 355, 356, 357, 358, 359, 360, 361, 0, 0,
	363, 364, 365, 362, 366, 367, 0, 368, 0, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 378,
	1358, 379, 380, 381, 0, 0, 0, 0, 0, 0,
	0, 382, 383, 384, 385, 386, 0, 387, 389, 749,
	750, 0, 392, 394, 388, 390, 0, 393, 391, 395,
	396, 0, 397, 398, 399, 0, 0, 400, 401, 402,
	0, 403, 404, 405, 0, 406, 407, 408, 0, 409,
	410, 751, 411, 412, 413, 415, 417, 414, 416, 418,
	419, 420, 421, 422, 752, 753, 423, 0, 318, 0,
	0, 0, 0, 0, 424, 425, 426, 754, 0, 0,
	0, 427, 0, 428, 429, 430, 0, 431, 432, 0,
	1359, 433, 434, 435, 755, 756, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 0, 445, 757, 0, 758,
	446, 0, 447, 448, 449, 450, 451, 452, 453, 759,
	760, 761, 547, 1361, 454, 455, 456, 0, 457, 458,
	459, 460, 461, 0, 0, 0, 0, 462, 463, 464,
	0, 1360, 762, 465, 548, 466, 763, 764, 0, 765,
	0, 467, 468, 470, 1362, 766, 1363, 469, 471, 472,
	1364, 473, 0, 0, 0, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 483, 482, 0, 485, 767, 484,
	1365, 486, 487, 1366, 0, 488, 489, 490, 491, 492,
	493, 496, 0, 0, 494, 495, 497, 498, 0, 499,
	500, 502, 505, 501, 503, 504, 506, 519, 520, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 522, 0, 521, 1367, 523, 524, 525, 526, 527,
	534, 536, 537, 532, 533, 535, 538, 539, 541, 529,
	530, 531, 1368, 540, 528, 0, 0, 1369, 542, 543,
	544, 545, 0, 768, 546, 769, 549, 550, 0, 0,
	551, 0, 552, 0, 0, 554, 555, 556, 0, 0,
	557, 558, 770, 1370, 559, 1371, 771, 560, 561, 553,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	0, 572, 573, 772, 574, 575, 576, 773, 577, 578,
	579, 774, 580, 775, 581, 582, 0, 583, 584, 585,
	0, 586, 587, 588, 589, 590, 591, 592, 593, 776,
	594, 595, 597, 596, 598, 0, 599, 0, 600, 601,
	602, 0, 0, 0, 0, 0, 603, 604, 606, 0,
	607, 608, 609, 610, 605, 611, 612, 613, 614, 615,
	616, 0, 618, 619, 617, 620, 621, 1372, 622, 623,
	624, 625, 626, 777, 627, 0, 628, 629, 637, 638,
	639, 630, 631, 633, 640, 632, 641, 642, 643, 644,
	646, 645, 0, 648, 649, 647, 650, 651, 652, 0,
	653, 778, 654, 634, 635, 655, 656, 1373, 657, 658,
	659, 660, 661, 662, 663, 779, 0, 664, 0, 665,
	666, 667, 668, 669, 670, 672, 636, 673, 678, 679,
	780, 674, 675, 676, 677, 781, 681, 682, 683, 684,
	0, 685, 686, 0, 680, 671, 0, 687, 688, 689,
	690, 691, 692, 0, 693, 694, 0, 695, 782, 783,
	784, 785, 0, 707, 0, 696, 698, 699, 700, 701,
	786, 702, 787, 0, 703, 704, 705, 706, 697, 708,
	709, 0, 0, 710, 711, 712, 714, 716, 717, 713,
	715, 718, 0, 719, 0, 0, 720, 721, 722, 788,
	789, 790, 0, 724, 725, 723, 726, 727, 730, 728,
	729, 791, 731, 732, 733, 0, 0, 0, 0, 734,
	735, 792, 736, 737, 738, 2570, 0, 1703, 1702, 0,
	0, 0, 0, 1700, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 324, 323, 325, 326,
	327, 328, 0, 329, 330, 0, 0, 0, 0, 0,
	739, 0, 0, 0, 331, 0, 332, 333, 334, 1357,
	335, 336, 337, 338, 339, 340, 341, 740, 741, 0,
	342, 742, 343, 743, 0, 744, 344, 345, 346, 347,
	348, 349, 350, 0, 0, 0, 351, 745, 746, 747,
	0, 352, 353, 748, 0, 1671, 0, 354, 355, 356,
	357, 358, 359, 360, 361, 0, 0, 363, 364, 365,
	362, 366, 367, 0, 368, 0, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 378, 1358, 379, 380,
	381, 0, 0, 0, 0, 0, 0, 0, 382, 383,
	384, 385, 386, 0, 387, 389, 749, 750, 0, 392,
	394, 388, 390, 0, 393, 391, 395, 396, 0, 397,
	398, 399, 0, 0, 400, 401, 402, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 751, 411,
	412, 413, 415, 417, 414, 416, 418, 419, 420, 421,
	422, 752, 753, 423, 0, 318, 0, 0, 0, 0,
	0, 424, 425, 426, 754, 0, 0, 0, 427, 0,
	428, 429, 430, 0, 431, 432, 0, 1359, 433, 434,
	435, 755, 756, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 0, 445, 757, 0, 758, 446, 0, 447,
	448, 449, 450, 451, 452, 453, 1761, 760, 761, 547,
	1361, 454, 455, 456, 0, 457, 458, 459, 460, 461,
	0, 0, 0, 0, 462, 463, 464, 0, 1360, 762,
	465, 548, 466, 763, 764, 0, 765, 0, 467, 468,
	470, 1362, 766, 1363, 469, 471, 472, 1364, 473, 0,
	0, 0, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 483, 482, 0, 485, 767, 484, 1365, 486, 487,
	1366, 0, 488, 489, 490, 491, 492, 493, 496, 0,
	0, 494, 495, 497, 498, 0, 499, 500, 502, 505,
	501, 503, 504, 506, 519, 520, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 522, 0,
	521, 1367, 523, 524, 525, 526, 527, 534, 536, 537,
	532, 533, 535, 538, 539, 541, 529, 530, 531, 1368,
	540, 528, 0, 0, 1369, 542, 543, 544, 545, 0,
	768, 546, 769, 549, 550, 0, 0, 551, 0, 552,
	0, 0, 554, 555, 556, 0, 0, 557, 558, 770,
	1370, 559, 1371, 771, 560, 561, 553, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 0, 572, 573,
	772, 574, 575, 576, 773, 577, 578, 579, 774, 580,
	775, 581, 582, 0, 583, 584, 585, 0, 586, 587,
	588, 589, 590, 591, 592, 593, 776, 594, 595, 597,
	596, 598, 0, 599, 0, 600, 601, 602, 0, 0,
	0, 0, 0, 603, 604, 606, 0, 607, 608, 609,
	610, 605, 611, 612, 613, 614, 615, 616, 0, 618,
	619, 617, 620, 621, 1372, 622, 623, 624, 625, 626,
	777, 627, 0, 628, 629, 637, 638, 639, 630, 631,
	633, 640, 632, 641, 642, 643, 644, 646, 645, 0,
	648, 649, 647, 650, 651, 652, 0, 653, 778, 654,
	634, 635, 655, 656, 1373, 657, 658, 659, 660, 661,
	662, 663, 779, 0, 664, 0, 665, 666, 667, 668,
	669, 670, 672, 636, 673, 678, 679, 780, 674, 675,
	676, 677, 781, 681, 682, 683, 684, 0, 685, 686,
	0, 680, 671, 0, 687, 688, 689, 690, 691, 692,
	0, 693, 694, 0, 695, 782, 783, 784, 785, 0,
	707, 0, 696, 698, 699, 700, 701, 786, 702, 787,
	0, 703, 704, 705, 706, 697, 708, 709, 0, 0,
	710, 711, 712, 714, 716, 717, 713, 715, 718, 0,
	719, 0, 0, 720, 721, 722, 788, 789, 790, 0,
	724, 725, 723, 726, 727, 730, 728, 729, 791, 731,
	732, 733, 0, 0, 0, 0, 734, 735, 792, 736,
	737, 738, 2305, 0, 1703, 1702, 0, 0, 0, 0,
	1700, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 324, 323, 325, 326, 327, 328, 0,
	329, 330, 0, 0, 0, 0, 0, 739, 0, 0,
	0, 331, 0, 332, 333, 334, 1357, 335, 336, 337,
	338, 339, 340, 341, 740, 741, 0, 342, 742, 343,
	743, 0, 744, 344, 345, 346, 347, 348, 349, 350,
	0, 0, 0, 351, 745, 746, 747, 0, 352, 353,
	748, 0, 1671, 0, 354, 355, 356, 357, 358, 359,
	360, 361, 0, 0, 363, 364, 365, 362, 366, 367,
	0, 368, 0, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 378, 1358, 379, 380, 381, 0, 0,
	0, 0, 0, 0, 0, 382, 383, 384, 385, 386,
	0, 387, 389, 749, 750, 0, 392, 394, 388, 390,
	0, 393, 391, 395, 396, 0, 397, 398, 399, 0,
	0, 400, 401, 402, 0, 403, 404, 405, 0, 406,
	407, 408, 0, 409, 410, 751, 411, 412, 413, 415,
	417, 414, 416, 418, 419, 420, 421, 422, 752, 753,
	423, 0, 318, 0, 0, 0, 0, 0, 424, 425,
	426, 754, 0, 0, 0, 427, 0, 428, 429, 430,
	0, 431, 432, 0, 1359, 433, 434, 435, 755, 756,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 0,
	445, 757, 0, 758, 446, 0, 447, 448, 449, 450,
	451, 452, 453, 759, 760, 761, 547, 1361, 454, 455,
	456, 0, 457, 458, 459, 460, 461, 0, 0, 0,
	0, 462, 463, 464, 0, 1360, 762, 465, 548, 466,
	763, 764, 0, 765, 0, 467, 468, 470, 1362, 766,
	1363, 469, 471, 472, 1364, 473, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 483, 482,
	0, 485, 767, 484, 1365, 486, 487, 1366, 0, 488,
	489, 490, 491, 492, 493, 496, 0, 0, 494, 495,
	497, 498, 0, 499, 500, 502, 505, 501, 503, 504,
	506, 519, 520, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 522, 0, 521, 1367, 523,
	524, 525, 526, 527, 534, 536, 537, 532, 533, 535,
	538, 539, 541, 529, 530, 531, 1368, 540, 528, 0,
	0, 1369, 542, 543, 544, 545, 0, 768, 546, 769,
	549, 550, 0, 0, 551, 0, 552, 0, 0, 554,
	555, 556, 0, 0, 557, 558, 770, 1370, 559, 1371,
	771, 560, 561, 553, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 0, 572, 573, 772, 574, 575,
	576, 773, 577, 578, 579, 774, 580, 775, 581, 582,
	0, 583, 584, 585, 0, 586, 587, 588, 589, 590,
	591, 592, 593, 776, 594, 595, 597, 596, 598, 0,
	599, 0, 600, 601, 602, 0, 0, 0, 0, 0,
	603, 604, 606, 0, 607, 608, 609, 610, 605, 611,
	612, 613, 614, 615, 616, 0, 618, 619, 617, 620,
	621, 1372, 622, 623, 624, 625, 626, 777, 627, 0,
	628, 629, 637, 638, 639, 630, 631, 633, 640, 632,
	641, 642, 643, 644, 646, 645, 0, 648, 649, 647,
	650, 651, 652, 0, 653, 778, 654, 634, 635, 655,
	656, 1373, 657, 658, 659, 660, 661, 662, 663, 779,
	0, 664, 0, 665, 666, 667, 668, 669, 670, 672,
	636, 673, 678, 679, 780, 674, 675, 676, 677, 781,
	681, 682, 683, 684, 0, 685, 686, 0, 680, 671,
	0, 687, 688, 689, 690, 691, 692, 0, 693, 694,
	0, 695, 782, 783, 784, 785, 0, 707, 0, 696,
	698, 699, 700, 701, 786, 702, 787, 0, 703, 704,
	705, 706, 697, 708, 709, 0, 0, 710, 711, 712,
	714, 716, 717, 713, 715, 718, 0, 719, 0, 0,
	720, 721, 722, 788, 789, 790, 0, 724, 725, 723,
	726, 727, 730, 728, 729, 791, 731, 732, 733, 0,
	0, 0, 0, 734, 735, 792, 736, 737, 738, 1891,
	0, 1703, 1702, 0, 0, 0, 0, 1700, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 321, 322,
	324, 323, 325, 326, 327, 328, 0, 329, 330, 0,
	0, 0, 0, 0, 739, 0, 0, 0, 331, 0,
	332, 333, 334, 1357, 335, 336, 337, 338, 339, 340,
	341, 740, 741, 0, 342, 742, 343, 743, 0, 744,
	344, 345, 346, 347, 348, 349, 350, 0, 0, 0,
	351, 745, 746, 747, 0, 352, 353, 748, 0, 1671,
	0, 354, 355, 356, 357, 358, 359, 360, 361, 0,
	0, 363, 364, 365, 362, 366, 367, 0, 368, 0,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 377,
	378, 1358, 379, 380, 381, 0, 0, 0, 0, 0,
	0, 0, 382, 383, 384, 385, 386, 0, 387, 389,
	749, 750, 0, 392, 394, 388, 390, 0, 393, 391,
	395, 396, 0, 397, 398, 399, 0, 0, 400, 401,
	402, 0, 403, 404, 405, 0, 406, 407, 408, 0,
	409, 410, 751, 411, 412, 413, 415, 417, 414, 416,
	418, 419, 420, 421, 422, 752, 753, 423, 0, 318,
	0, 0, 0, 0, 0, 1888, 425, 426, 754, 0,
	0, 0, 427, 0, 428, 429, 430, 0, 431, 432,
	0, 1359, 433, 434, 435, 755, 756, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 0, 445, 757, 0,
	758, 446, 0, 447, 448, 449, 450, 451, 452, 453,
	759, 760, 761, 547, 1361, 454, 455, 456, 0, 457,
	458, 459, 460, 461, 0, 0, 0, 0, 462, 463,
	464, 0, 1360, 762, 465, 548, 466, 763, 764, 0,
	765, 0, 467, 468, 470, 1362, 766, 1363, 469, 471,
	472, 1364, 473, 0, 0, 0, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 483, 482, 0, 485, 767,
	484, 1365, 486, 487, 1366, 0, 488, 489, 490, 491,
	492, 493, 496, 0, 0, 494, 495, 497, 498, 0,
	499, 500, 502, 505, 501, 503, 504, 506, 519, 520,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 522, 0, 521, 1367, 523, 524, 525, 526,
	527, 534, 536, 537, 532, 533, 535, 538, 539, 541,
	529, 530, 531, 1368, 540, 528, 0, 0, 1369, 542,
	543, 544, 545, 0, 768, 546, 769, 549, 550, 0,
	0, 551, 0, 552, 0, 0, 554, 555, 556, 0,
	0, 557, 558, 770, 1370, 559, 1371, 771, 560, 561,
	553, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 0, 572, 573, 772, 574, 575, 576, 773, 577,
	578, 579, 774, 580, 775, 581, 582, 0, 583, 584,
	585, 0, 586, 587, 588, 589, 590, 591, 1889, 593,
	776, 594, 595, 597, 596, 598, 0, 599, 0, 600,
	601, 602, 0, 0, 0, 0, 0, 603, 604, 606,
	0, 607, 608, 609, 610, 605, 611, 612, 613, 614,
	615, 616, 0, 618, 619, 617, 620, 621, 1372, 622,
	623, 624, 625, 626, 777, 627, 0, 628, 629, 637,
	638, 639, 630, 631, 633, 640, 632, 1887, 642, 643,
	644, 646, 645, 0, 648, 649, 647, 650, 651, 652,
	0, 653, 778, 654, 634, 635, 655, 656, 1373, 657,
	658, 659, 660, 661, 662, 663, 779, 0, 664, 0,
	665, 666, 667, 668, 669, 670, 672, 636, 673, 678,
	679, 780, 674, 675, 676, 677, 781, 681, 682, 683,
	684, 0, 685, 686, 0, 680, 671, 0, 687, 688,
	689, 690, 691, 692, 0, 693, 694, 0, 695, 782,
	783, 784, 785, 0, 707, 0, 696, 698, 699, 700,
	701, 786, 702, 787, 0, 703, 704, 705, 706, 697,
	708, 709, 0, 0, 710, 711, 712, 714, 716, 717,
	713, 715, 718, 0, 719, 0, 0, 720, 1890, 722,
	788, 789, 790, 0, 724, 725, 723, 726, 727, 730,
	728, 729, 791, 731, 732, 733, 0, 0, 0, 0,
	734, 735, 792, 736, 737, 738, 1758, 0, 1703, 1702,
	0, 0, 0, 0, 1700, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 322, 324, 323, 325,
	326, 327, 328, 0, 329, 330, 0, 0, 0, 0,
	0, 739, 0, 0, 0, 331, 0, 332, 333, 334,
	1357, 335, 336, 337, 338, 339, 340, 341, 740, 741,
	0, 342, 742, 343, 743, 0, 744, 344, 345, 346,
	347, 348, 349, 350, 0, 0, 0, 351, 745, 746,
	747, 0, 352, 353, 748, 0, 1671, 0, 354, 355,
	356, 357, 358, 359, 360, 361, 0, 0, 363, 364,
	365, 362, 366, 367, 0, 368, 0, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 378, 1358, 379,
	380, 381, 0, 0, 0, 0, 0, 0, 0, 382,
	383, 384, 385, 386, 0, 387, 389, 749, 750, 0,
	392, 394, 388, 390, 0, 393, 391, 395, 396, 0,
	397, 398, 399, 0, 0, 400, 401, 402, 0, 403,
	404, 405, 0, 406, 407, 408, 0, 409, 410, 751,
	411, 412, 413, 415, 417, 414, 416, 418, 419, 420,
	421, 422, 752, 753, 423, 0, 318, 0, 0, 0,
	0, 0, 424, 425, 426, 754, 0, 0, 0, 427,
	0, 428, 429, 430, 0, 431, 432, 0, 1359, 433,
	434, 435, 755, 756, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 0, 445, 757, 0, 758, 446, 0,
	447, 448, 449, 450, 451, 452, 453, 1761, 760, 761,
	547, 1361, 454, 455, 456, 0, 457, 458, 459, 460,
	461, 0, 0, 0, 0, 462, 463, 464, 0, 1360,
	762, 465, 548, 466, 763, 764, 0, 765, 0, 467,
	468, 470, 1362, 766, 1363, 469, 471, 472, 1364, 473,
	0, 0, 0, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 483, 482, 0, 485, 767, 484, 1365, 486,
	487, 1366, 0, 488, 489, 490, 491, 492, 493, 496,
	0, 0, 494, 495, 497, 498, 0, 499, 500, 502,
	505, 501, 503, 504, 506, 519, 520, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 522,
	0, 521, 1367, 523, 524, 525, 526, 527, 534, 536,
	537, 532, 533, 535, 538, 539, 541, 529, 530, 531,
	1368, 540, 528, 0, 0, 1369, 542, 543, 544, 545,
	0, 768, 546, 769, 549, 550, 0, 0, 551, 0,
	552, 0, 0, 554, 555, 556, 0, 0, 557, 558,
	770, 1370, 559, 1371, 771, 560, 561, 553, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 0, 572,
	573, 772, 574, 575, 576, 773, 577, 578, 579, 774,
	580, 775, 581, 582, 0, 583, 584, 585, 0, 586,
	587, 588, 589, 590, 591, 592, 593, 776, 594, 595,
	597, 596, 598, 0, 599, 0, 600, 601, 602, 0,
	0, 0, 0, 0, 603, 604, 606, 0, 607, 608,
	609, 610, 605, 611, 612, 613, 614, 615, 616, 0,
	618, 619, 617, 620, 621, 1372, 622, 623, 624, 625,
	626, 777, 627, 0, 628, 629, 637, 638, 639, 630,
	631, 633, 640, 632, 641, 642, 643, 644, 646, 645,
	0, 648, 649, 647, 650, 651, 652, 0, 653, 778,
	654, 634, 635, 655, 656, 1373, 657, 658, 659, 660,
	661, 662, 663, 779, 0, 664, 0, 665, 666, 667,
	668, 669, 670, 672, 636, 673, 678, 679, 780, 674,
	675, 676, 677, 781, 681, 682, 683, 684, 0, 685,
	686, 0, 680, 671, 0, 687, 688, 689, 690, 691,
	692, 0, 693, 694, 0, 695, 782, 783, 784, 785,
	0, 707, 0, 696, 698, 699, 700, 701, 786, 702,
	787, 0, 703, 704, 705, 706, 697, 708, 709, 0,
	0, 710, 711, 712, 714, 716, 717, 713, 715, 718,
	0, 719, 0, 0, 720, 721, 722, 788, 789, 790,
	0, 724, 725, 723, 726, 727, 730, 728, 729, 791,
	731, 732, 733, 0, 0, 0, 0, 734, 735, 792,
	736, 737, 738, 1698, 0, 1703, 1702, 0, 0, 0,
	0, 1700, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 321, 322, 324, 323, 325, 326, 327, 328,
	0, 329, 330, 0, 0, 0, 0, 0, 739, 0,
	0, 0, 331, 0, 332, 333, 334, 1357, 335, 336,
	337, 338, 339, 340, 341, 740, 741, 0, 342, 742,
	343, 743, 0, 744, 344, 345, 346, 347, 348, 349,
	350, 0, 0, 0, 351, 745, 746, 747, 0, 352,
	353, 748, 0, 1671, 0, 354, 355, 356, 357, 358,
	359, 360, 361, 0, 0, 363, 364, 365, 362, 366,
	367, 0, 368, 0, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 378, 1358, 379, 380, 381, 0,
	0, 0, 0, 0, 0, 0, 382, 383, 384, 385,
	386, 0, 387, 389, 749, 750, 0, 392, 394, 388,
	390, 0, 393, 391, 395, 396, 0, 397, 398, 399,
	0, 0, 400, 401, 402, 0, 403, 404, 405, 0,
	406, 407, 408, 0, 409, 410, 751, 411, 412, 413,
	415, 417, 414, 416, 418, 419, 420, 421, 422, 752,
	753, 423, 0, 318, 0, 0, 0, 0, 0, 424,
	425, 426, 754, 0, 0, 0, 427, 0, 428, 429,
	430, 0, 431, 432, 0, 1359, 433, 434, 435, 755,
	756, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	0, 445, 757, 0, 758, 446, 0, 447, 448, 449,
	450, 451, 452, 453, 759, 760, 761, 547, 1361, 454,
	455, 456, 0, 457, 458, 459, 460, 461, 0, 0,
	0, 0, 462, 463, 464, 0, 1360, 762, 465, 548,
	466, 763, 764, 0, 765, 0, 467, 468, 470, 1362,
	766, 1363, 469, 471, 472, 1364, 473, 0, 0, 0,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 483,
	482, 0, 485, 767, 484, 1365, 486, 487, 1366, 0,
	488, 489, 490, 491, 492, 493, 496, 0, 0, 494,
	495, 497, 498, 0, 499, 500, 502, 505, 501, 503,
	504, 506, 519, 520, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 522, 0, 521, 1367,
	523, 524, 525, 526, 527, 534, 536, 537, 532, 533,
	535, 538, 539, 541, 529, 530, 531, 1368, 540, 528,
	0, 0, 1369, 542, 543, 544, 545, 0, 768, 546,
	769, 549, 550, 0, 0, 551, 0, 552, 0, 0,
	554, 555, 556, 0, 0, 557, 558, 770, 1370, 559,
	1371, 771, 560, 561, 553, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 0, 572, 573, 772, 574,
	575, 576, 773, 577, 578, 579, 774, 580, 775, 581,
	582, 0, 583, 584, 585, 0, 586, 587, 588, 589,
	590, 591, 592, 593, 776, 594, 595, 597, 596, 598,
	0, 599, 0, 600, 601, 602, 0, 0, 0, 0,
	0, 603, 604, 606, 0, 607, 608, 609, 610, 605,
	611, 612, 613, 614, 615, 616, 0, 618, 619, 617,
	620, 621, 1372, 622, 623, 624, 625, 626, 777, 627,
	0, 628, 629, 637, 638, 639, 1696, 631, 633, 640,
	632, 641, 642, 643, 644, 646, 645, 0, 648, 649,
	647, 650, 651, 652, 0, 653, 778, 654, 634, 635,
	655, 656, 1373, 657, 658, 659, 660, 661, 662, 663,
	779, 0, 664, 0, 665, 666, 667, 668, 669, 670,
	672, 636, 673, 678, 679, 780, 674, 675, 676, 677,
	781, 681, 682, 683, 684, 0, 685, 686, 0, 680,
	671, 0, 687, 688, 689, 690, 691, 692, 0, 693,
	694, 0, 695, 782, 783, 784, 785, 0, 707, 0,
	696, 698, 699, 700, 701, 786, 702, 787, 0, 703,
	704, 705, 706, 697, 708, 709, 0, 0, 710, 711,
	712, 714, 716, 717, 713, 715, 718, 0, 719, 0,
	0, 720, 721, 722, 788, 789, 790, 0, 724, 725,
	723, 726, 727, 730, 728, 729, 791, 731, 732, 733,
	0, 0, 0, 0, 734, 735, 792, 736, 737, 738,
	1703, 1702, 0, 0, 0, 0, 1700, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 322, 324,
	323, 325, 326, 327, 328, 0, 329, 330, 0, 0,
	0, 0, 0, 739, 0, 0, 0, 331, 0, 332,
	333, 334, 1357, 335, 336, 337, 338, 339, 340, 341,
	740, 741, 0, 342, 742, 343, 743, 0, 744, 344,
	345, 346, 347, 348, 349, 350, 0, 0, 0, 351,
	745, 746, 747, 0, 352, 353, 748, 0, 1671, 0,
	354, 355, 356, 357, 358, 359, 360, 361, 0, 0,
	363, 364, 365, 362, 366, 367, 0, 368, 0, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 378,
	1358, 379, 380, 381, 0, 0, 0, 0, 0, 0,
	0, 382, 383, 384, 385, 386, 0, 387, 389, 749,
	750, 0, 392, 394, 388, 390, 0, 393, 391, 395,
	396, 0, 397, 398, 399, 0, 0, 400, 401, 402,
	0, 403, 404, 405, 0, 406, 407, 408, 0, 409,
	410, 751, 411, 412, 413, 415, 417, 414, 416, 418,
	419, 420, 421, 422, 752, 753, 423, 0, 318, 0,
	0, 0, 0, 0, 424, 425, 426, 754, 0, 0,
	0, 427, 0, 428, 429, 430, 0, 431, 432, 0,
	1359, 433, 434, 435, 755, 756, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 0, 445, 757, 0, 758,
	446, 0, 447, 448, 449, 450, 451, 452, 453, 759,
	760, 761, 547, 1361, 454, 455, 456, 0, 457, 458,
	459, 460, 461, 0, 0, 0, 0, 462, 463, 464,
	0, 1360, 762, 465, 548, 466, 763, 764, 0, 765,
	0, 467, 468, 470, 1362, 766, 1363, 469, 471, 472,
	1364, 473, 0, 0, 0, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 483, 482, 0, 485, 767, 484,
	1365, 486, 487, 1366, 0, 488, 489, 490, 491, 492,
	493, 496, 0, 0, 494, 495, 497, 498, 0, 499,
	500, 502, 505, 501, 503, 504, 506, 519, 520, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 522, 0, 521, 1367, 523, 524, 525, 526, 527,
	534, 536, 537, 532, 533, 535, 538, 539, 541, 529,
	530, 531, 1368, 540, 528, 0, 0, 1369, 542, 543,
	544, 545, 0, 768, 546, 769, 549, 550, 0, 0,
	551, 0, 552, 0, 0, 554, 555, 556, 0, 0,
	557, 558, 770, 1370, 559, 1371, 771, 560, 561, 553,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	0, 572, 573, 772, 574, 575, 576, 773, 577, 578,
	579, 774, 580, 775, 581, 582, 0, 583, 584, 585,
	0, 586, 587, 588, 589, 590, 591, 592, 593, 776,
	594, 595, 597, 596, 598, 0, 599, 0, 600, 601,
	602, 0, 0, 0, 0, 0, 603, 604, 606, 0,
	607, 608, 609, 610, 605, 611, 612, 613, 614, 615,
	616, 0, 618, 619, 617, 620, 621, 1372, 622, 623,
	624, 625, 626, 777, 627, 0, 628, 629, 637, 638,
	639, 630, 631, 633, 640, 632, 641, 642, 643, 644,
	646, 645, 0, 648, 649, 647, 650, 651, 652, 0,
	653, 778, 654, 634, 635, 655, 656, 1373, 657, 658,
	659, 660, 661, 662, 663, 779, 0, 664, 0, 665,
	666, 667, 668, 669, 670, 672, 636, 673, 678, 679,
	780, 674, 675, 676, 677, 781, 681, 682, 683, 684,
	0, 685, 686, 0, 680, 671, 0, 687, 688, 689,
	690, 691, 692, 0, 693, 694, 0, 695, 782, 783,
	784, 785, 0, 707, 0, 696, 698, 699, 700, 701,
	786, 702, 787, 0, 703, 704, 705, 706, 697, 708,
	709, 0, 0, 710, 711, 712, 714, 716, 717, 713,
	715, 718, 0, 719, 0, 0, 720, 721, 722, 788,
	789, 790, 0, 724, 725, 723, 726, 727, 730, 728,
	729, 791, 731, 732, 733, 1703, 1702, 0, 0, 734,
	735, 792, 736, 737, 738, 0, 0, 0, 0, 0,
	0, 0, 321, 322, 324, 323, 325, 326, 327, 328,
	0, 329, 330, 0, 0, 0, 0, 0, 739, 0,
	0, 0, 331, 0, 332, 333, 334, 1357, 335, 336,
	337, 338, 339, 340, 341, 740, 741, 0, 342, 742,
	343, 743, 0, 744, 344, 345, 346, 347, 348, 349,
	350, 0, 0, 0, 351, 745, 746, 747, 0, 352,
	353, 748, 0, 1671, 0, 354, 355, 356, 357, 358,
	359, 360, 361, 0, 0, 363, 364, 365, 362, 366,
	367, 0, 368, 0, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 378, 1358, 379, 380, 381, 0,
	0, 0, 0, 0, 0, 0, 382, 383, 384, 385,
	386, 0, 387, 389, 749, 750, 0, 392, 394, 388,
	390, 0, 393, 391, 395, 396, 0, 397, 398, 399,
	0, 0, 400, 401, 402, 0, 403, 404, 405, 0,
	406, 407, 408, 0, 409, 410, 751, 411, 412, 413,
	415, 417, 414, 416, 418, 419, 420, 421, 422, 752,
	753, 423, 0, 318, 0, 0, 0, 0, 0, 424,
	425, 426, 754, 0, 0, 0, 427, 0, 428, 429,
	430, 0, 431, 432, 0, 1359, 433, 434, 435, 755,
	756, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	0, 445, 757, 0, 758, 446, 0, 447, 448, 449,
	450, 451, 452, 453, 759, 760, 761, 547, 1361, 454,
	455, 456, 0, 457, 458, 459, 460, 461, 0, 0,
	0, 0, 462, 463, 464, 0, 1360, 762, 465, 548,
	466, 763, 764, 0, 765, 0, 467, 468, 470, 1362,
	766, 1363, 469, 471, 472, 1364, 473, 0, 0, 0,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 483,
	482, 0, 485, 767, 484, 1365, 486, 487, 1366, 0,
	488, 489, 490, 491, 492, 493, 496, 0, 0, 494,
	495, 497, 498, 0, 499, 500, 502, 505, 501, 503,
	504, 506, 519, 520, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 522, 0, 521, 1367,
	523, 524, 525, 526, 527, 534, 536, 537, 532, 533,
	535, 538, 539, 541, 529, 530, 531, 1368, 540, 528,
	0, 0, 1369, 542, 543, 544, 545, 0, 768, 546,
	769, 549, 550, 0, 0, 551, 0, 552, 0, 0,
	554, 555, 556, 0, 0, 557, 558, 770, 1370, 559,
	1371, 771, 560, 561, 553, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 0, 572, 573, 772, 574,
	575, 576, 773, 577, 578, 579, 774, 580, 775, 581,
	582, 0, 583, 584, 585, 0, 586, 587, 588, 589,
	590, 591, 592, 593, 776, 594, 595, 597, 596, 598,
	0, 599, 0, 600, 601, 602, 0, 0, 0, 0,
	0, 603, 604, 606, 0, 607, 608, 609, 610, 605,
	611, 612, 613, 614, 615, 616, 0, 618, 619, 617,
	620, 621, 1372, 622, 623, 624, 625, 626, 777, 627,
	0, 628, 629, 637, 638, 639, 630, 631, 633, 640,
	632, 641, 642, 643, 644, 646, 645, 0, 648, 649,
	647, 650, 651, 652, 0, 653, 778, 654, 634, 635,
	655, 656, 1373, 657, 658, 659, 660, 661, 662, 663,
	779, 0, 664, 0, 665, 666, 667, 668, 669, 670,
	672, 636, 673, 678, 679, 780, 674, 675, 676, 677,
	781, 681, 682, 683, 684, 0, 685, 686, 0, 680,
	671, 0, 687, 688, 689, 690, 691, 692, 0, 693,
	694, 0, 695, 782, 783, 784, 785, 0, 707, 0,
	696, 698, 699, 700, 701, 786, 702, 787, 0, 703,
	704, 705, 706, 697, 708, 709, 0, 0, 710, 711,
	712, 714, 716, 717, 713, 715, 718, 0, 719, 0,
	0, 720, 721, 722, 788, 789, 790, 0, 724, 725,
	723, 726, 727, 730, 728, 729, 791, 731, 732, 733,
	1703, 0, 0, 0, 734, 735, 792, 736, 737, 738,
	0, 0, 0, 0, 0, 0, 0, 321, 322, 324,
	323, 325, 326, 327, 328, 0, 329, 330, 0, 0,
	0, 0, 0, 739, 0, 0, 0, 331, 0, 332,
	333, 334, 1357, 335, 336, 337, 338, 339, 340, 341,
	740, 741, 0, 342, 742, 343, 743, 0, 744, 344,
	345, 346, 347, 348, 349, 350, 0, 0, 0, 351,
	745, 746, 747, 0, 352, 353, 748, 0, 1671, 0,
	354, 355, 356, 357, 358, 359, 360, 361, 0, 0,
	363, 364, 365, 362, 366, 367, 0, 368, 0, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 378,
	1358, 379, 380, 381, 0, 0, 0, 0, 0, 0,
	0, 382, 383, 384, 385, 386, 0, 387, 389, 749,
	750, 0, 392, 394, 388, 390, 0, 393, 391, 395,
	396, 0, 397, 398, 399, 0, 0, 400, 401, 402,
	0, 403, 404, 405, 0, 406, 407, 408, 0, 409,
	410, 751, 411, 412, 413, 415, 417, 414, 416, 418,
	419, 420, 421, 422, 752, 753, 423, 0, 318, 0,
	0, 0, 0, 0, 424, 425, 426, 754, 0, 0,
	0, 427, 0, 428, 429, 430, 0, 431, 432, 0,
	1359, 433, 434, 435, 755, 756, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 0, 445, 757, 0, 758,
	446, 0, 447, 448, 449, 450, 451, 452, 453, 759,
	760, 761, 547, 1361, 454, 455, 456, 0, 457, 458,
	459, 460, 461, 0, 0, 0, 0, 462, 463, 464,
	0, 1360, 762, 465, 548, 466, 763, 764, 0, 765,
	0, 467, 468, 470, 1362, 766, 1363, 469, 471, 472,
	1364, 473, 0, 0, 0, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 483, 482, 0, 485, 767, 484,
	1365, 486, 487, 1366, 0, 488, 489, 490, 491, 492,
	493, 496, 0, 0, 494, 495, 497, 498, 0, 499,
	500, 502, 505, 501, 503, 504, 506, 519, 520, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 522, 0, 521, 1367, 523, 524, 525, 526, 527,
	534, 536, 537, 532, 533, 535, 538, 539, 541, 529,
	530, 531, 1368, 540, 528, 0, 0, 1369, 542, 543,
	544, 545, 0, 768, 546, 769, 549, 550, 0, 0,
	551, 0, 552, 0, 0, 554, 555, 556, 0, 0,
	557, 558, 770, 1370, 559, 1371, 771, 560, 561, 553,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	0, 572, 573, 772, 574, 575, 576, 773, 577, 578,
	579, 774, 580, 775, 581, 582, 0, 583, 584, 585,
	0, 586, 587, 588, 589, 590, 591, 592, 593, 776,
	594, 595, 597, 596, 598, 0, 599, 0, 600, 601,
	602, 0, 0, 0, 0, 0, 603, 604, 606, 0,
	607, 608, 609, 610, 605, 611, 612, 613, 614, 615,
	616, 0, 618, 619, 617, 620, 621, 1372, 622, 623,
	624, 625, 626, 777, 627, 0, 628, 629, 637, 638,
	639, 630, 631, 633, 640, 632, 641, 642, 643, 644,
	646, 645, 0, 648, 649, 647, 650, 651, 652, 0,
	653, 778, 654, 634, 635, 655, 656, 1373, 657, 658,
	659, 660, 661, 662, 663, 779, 0, 664, 0, 665,
	666, 667, 668, 669, 670, 672, 636, 673, 678, 679,
	780, 674, 675, 676, 677, 781, 681, 682, 683, 684,
	0, 685, 686, 0, 680, 671, 0, 687, 688, 689,
	690, 691, 692, 0, 693, 694, 0, 695, 782, 783,
	784, 785, 0, 707, 0, 696, 698, 699, 700, 701,
	786, 702, 787, 0, 703, 704, 705, 706, 697, 708,
	709, 0, 0, 710, 711, 712, 714, 716, 717, 713,
	715, 718, 0, 719, 0, 0, 720, 721, 722, 788,
	789, 790, 0, 724, 725, 723, 726, 727, 730, 728,
	729, 791, 731, 732, 733, 315, 0, 0, 0, 734,
	735, 792, 736, 737, 738, 0, 0, 0, 0, 0,
	0, 0, 321, 322, 324, 323, 325, 326, 327, 328,
	0, 329, 330, 0, 0, 0, 0, 0, 739, 0,
	0, 0, 331, 0, 332, 333, 334, 0, 335, 336,
	337, 338, 339, 340, 341, 740, 741, 0, 342, 742,
	343, 743, 0, 744, 344, 345, 346, 347, 348, 349,
	350, 0, 0, 0, 351, 745, 746, 747, 3281, 352,
	353, 748, 0, 0, 0, 354, 355, 356, 357, 358,
	359, 360, 361, 0, 0, 363, 364, 365, 362, 366,
	367, 4128, 368, 0, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 381, 0,
	0, 0, 0, 0, 0, 0, 382, 383, 384, 385,
	386, 0, 387, 389, 749, 750, 0, 392, 394, 388,
	390, 0, 393, 391, 395, 396, 0, 397, 398, 399,
	0, 0, 400, 401, 402, 0, 403, 404, 405, 0,
	406, 407, 408, 0, 3285, 410, 751, 411, 412, 413,
	415, 417, 414, 416, 418, 419, 420, 421, 422, 752,
	753, 423, 0, 4127, 0, 0, 0, 0, 0, 424,
	425, 426, 754, 0, 0, 0, 427, 0, 428, 429,
	430, 3284, 431, 432, 0, 0, 433, 434, 435, 755,
	756, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	0, 445, 757, 0, 758, 446, 0, 447, 448, 449,
	450, 451, 452, 453, 759, 760, 761, 547, 0, 454,
	455, 456, 0, 457, 458, 459, 460, 461, 0, 0,
	0, 4124, 462, 463, 464, 0, 0, 762, 465, 548,
	466, 763, 764, 0, 765, 0, 467, 4126, 470, 0,
	766, 0, 469, 471, 472, 0, 473, 0, 0, 0,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 483,
	482, 0, 485, 767, 484, 0, 486, 487, 4123, 0,
	488, 489, 490, 491, 492, 493, 496, 0, 0, 494,
	495, 497, 498, 0, 499, 500, 502, 505, 501, 503,
	504, 506, 519, 520, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 522, 0, 521, 0,
	523, 524, 525, 526, 527, 534, 536, 537, 532, 533,
	535, 538, 539, 541, 529, 530, 531, 0, 540, 528,
	0, 0, 0, 542, 543, 544, 545, 0, 768, 546,
	769, 549, 550, 0, 0, 551, 0, 552, 0, 0,
	554, 555, 556, 0, 0, 557, 558, 770, 0, 559,
	0, 771, 560, 561, 553, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 0, 572, 573, 772, 574,
	575, 576, 773, 577, 578, 579, 774, 580, 775, 581,
	582, 3283, 583, 584, 585, 0, 586, 587, 588, 589,
	590, 591, 592, 593, 776, 594, 595, 597, 596, 598,
	0, 599, 0, 600, 601, 602, 0, 0, 0, 0,
	0, 603, 604, 606, 0, 607, 608, 609, 610, 605,
	611, 612, 613, 614, 615, 616, 0, 618, 619, 617,
	620, 621, 0, 622, 623, 624, 625, 626, 777, 627,
	0, 628, 629, 637, 638, 639, 630, 631, 633, 640,
	632, 641, 642, 643, 644, 646, 645, 0, 648, 649,
	647, 650, 651, 652, 0, 653, 778, 654, 634, 635,
	655, 656, 0, 657, 658, 659, 660, 661, 662, 663,
	779, 0, 664, 0, 665, 666, 667, 668, 669, 670,
	672, 636, 673, 678, 679, 780, 674, 675, 676, 677,
	781, 681, 682, 683, 684, 0, 685, 686, 0, 680,
	671, 0, 687, 688, 689, 690, 691, 692, 0, 693,
	694, 0, 695, 782, 783, 784, 785, 0, 707, 0,
	696, 698, 699, 700, 701, 786, 702, 787, 0, 703,
	704, 705, 706, 697, 708, 709, 0, 4125, 710, 711,
	712, 714, 716, 717, 713, 715, 718, 0, 719, 0,
	0, 720, 721, 722, 788, 789, 790, 0, 724, 725,
	723, 726, 727, 730, 728, 729, 791, 731, 732, 733,
	315, 0, 0, 0, 734, 735, 792, 736, 737, 738,
	0, 0, 0, 0, 0, 0, 0, 321, 322, 324,
	323, 325, 326, 327, 328, 0, 329, 330, 0, 0,
	0, 0, 0, 739, 0, 0, 0, 331, 0, 332,
	333, 334, 0, 335, 336, 337, 338, 339, 340, 341,
	740, 741, 0, 342, 742, 343, 743, 0, 744, 344,
	345, 346, 347, 348, 349, 350, 0, 0, 0, 351,
	745, 746, 747, 3281, 352, 353, 748, 0, 0, 3275,
	354, 355, 356, 357, 358, 359, 360, 361, 0, 0,
	363, 364, 365, 362, 366, 367, 3277, 368, 0, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 381, 0, 0, 0, 0, 0, 0,
	0, 382, 383, 384, 385, 386, 0, 387, 389, 749,
	750, 0, 392, 394, 388, 390, 0, 393, 391, 395,
	396, 0, 397, 398, 399, 0, 0, 400, 401, 402,
	0, 403, 404, 405, 0, 406, 407, 408, 0, 3285,
	410, 751, 411, 412, 413, 415, 417, 414, 416, 418,
	419, 420, 421, 422, 752, 753, 423, 0, 0, 0,
	0, 0, 0, 0, 424, 425, 426, 754, 0, 0,
	0, 427, 0, 428, 429, 430, 3284, 431, 432, 0,
	0, 433, 434, 435, 755, 756, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 0, 445, 757, 0, 758,
	446, 0, 447, 448, 449, 450, 451, 452, 453, 3274,
	760, 761, 547, 0, 454, 455, 456, 0, 457, 458,
	459, 460, 461, 0, 0, 0, 0, 462, 463, 464,
	0, 0, 762, 465, 548, 466, 763, 764, 0, 765,
	0, 467, 468, 470, 0, 766, 0, 469, 471, 472,
	0, 473, 0, 0, 0, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 483, 482, 0, 485, 767, 484,
	0, 486, 487, 0, 0, 488, 489, 490, 491, 492,
	493, 496, 0, 0, 494, 495, 497, 498, 0, 499,
	500, 502, 505, 501, 503, 504, 506, 519, 520, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 522, 0, 521, 0, 523, 524, 525, 526, 527,
	534, 536, 537, 532, 533, 535, 538, 539, 541, 529,
	530, 531, 0, 540, 528, 0, 0, 0, 542, 543,
	544, 545, 0, 768, 546, 769, 549, 550, 0, 0,
	551, 0, 552, 0, 0, 554, 555, 556, 0, 0,
	557, 558, 770, 0, 559, 0, 771, 560, 561, 553,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	0, 572, 573, 772, 574, 575, 576, 773, 577, 578,
	579, 774, 580, 775, 581, 582, 3283, 583, 584, 585,
	0, 586, 587, 588, 589, 590, 591, 592, 593, 776,
	594, 595, 597, 596, 598, 0, 599, 0, 600, 601,
	602, 0, 0, 0, 0, 0, 603, 604, 606, 0,
	607, 608, 609, 610, 605, 611, 612, 613, 614, 615,
	616, 0, 618, 619, 617, 620, 621, 0, 622, 623,
	624, 625, 626, 777, 627, 0, 628, 629, 637, 638,
	639, 630, 631, 633, 640, 632, 641, 642, 643, 644,
	646, 645, 0, 648, 649, 647, 650, 651, 652, 0,
	653, 778, 654, 634, 635, 655, 656, 0, 657, 658,
	659, 660, 661, 662, 663, 779, 0, 664, 0, 665,
	666, 667, 668, 669, 670, 672, 636, 673, 678, 679,
	780, 674, 675, 676, 677, 781, 681, 682, 683, 684,
	0, 685, 686, 0, 680, 671, 0, 687, 688, 689,
	690, 691, 692, 0, 693, 694, 0, 695, 782, 783,
	784, 785, 0, 707, 0, 696, 698, 699, 700, 701,
	786, 702, 787, 0, 703, 704, 705, 706, 697, 708,
	709, 0, 3282, 710, 711, 712, 714, 716, 717, 713,
	715, 718, 0, 719, 0, 0, 720, 721, 722, 788,
	789, 790, 0, 724, 725, 723, 726, 727, 730, 728,
	729, 791, 731, 732, 733, 1973, 0, 315, 0, 734,
	735, 792, 736, 737, 738, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 324, 323, 325, 326,
	327, 328, 1972, 329, 330, 0, 0, 0, 0, 0,
	739, 0, 0, 0, 331, 0, 332, 333, 334, 0,
	335, 336, 337, 338, 339, 340, 341, 740, 741, 0,
	342, 742, 343, 743, 0, 744, 344, 345, 346, 347,
	348, 349, 350, 0, 0, 0, 351, 745, 746, 747,
	0, 352, 353, 748, 0, 0, 0, 354, 355, 356,
	357, 358, 359, 360, 361, 0, 0, 363, 364, 365,
	362, 366, 367, 0, 368, 0, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	381, 0, 0, 0, 0, 0, 0, 0, 382, 383,
	384, 1970, 386, 0, 387, 389, 749, 750, 0, 392,
	394, 388, 390, 0, 393, 391, 395, 396, 0, 397,
	398, 399, 0, 0, 400, 401, 402, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 751, 411,
	412, 413, 415, 417, 414, 416, 418, 419, 420, 421,
	1975, 752, 753, 423, 0, 318, 0, 0, 0, 0,
	0, 424, 425, 426, 754, 0, 0, 0, 427, 0,
	428, 429, 430, 0, 431, 432, 0, 0, 1971, 434,
	435, 755, 756, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 0, 445, 757, 0, 758, 446, 0, 447,
	448, 449, 450, 451, 452, 453, 759, 760, 761, 547,
	0, 454, 455, 456, 0, 457, 458, 459, 460, 461,
	0, 0, 0, 319, 462, 463, 464, 0, 0, 762,
	465, 548, 466, 763, 764, 0, 765, 0, 467, 468,
	470, 0, 766, 0, 469, 471, 472, 0, 473, 0,
	0, 0, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 483, 482, 0, 485, 767, 484, 0, 486, 487,
	0, 0, 488, 489, 490, 491, 492, 493, 496, 0,
	0, 494, 495, 497, 498, 0, 499, 500, 502, 505,
	501, 503, 504, 506, 519, 520, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 522, 0,
	521, 0, 523, 524, 525, 526, 527, 534, 536, 537,
	532, 533, 535, 538, 539, 541, 529, 530, 531, 0,
	540, 528, 0, 320, 0, 542, 543, 544, 545, 0,
	768, 546, 769, 549, 550, 0, 0, 551, 0, 552,
	0, 0, 554, 555, 556, 0, 0, 557, 558, 770,
	0, 559, 0, 771, 560, 561, 553, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 0, 572, 573,
	772, 574, 575, 576, 773, 577, 578, 579, 774, 580,
	775, 581, 582, 0, 583, 584, 585, 0, 586, 587,
	588, 589, 590, 591, 592, 593, 776, 594, 595, 597,
	596, 598, 0, 599, 0, 600, 601, 602, 0, 0,
	0, 0, 0, 603, 604, 606, 0, 607, 608, 609,
	610, 605, 611, 612, 613, 614, 615, 616, 0, 618,
	619, 617, 620, 621, 0, 622, 623, 624, 625, 626,
	777, 627, 0, 628, 629, 637, 638, 639, 1974, 631,
	633, 640, 632, 641, 642, 643, 644, 646, 645, 0,
	1969, 649, 647, 650, 651, 652, 0, 653, 778, 654,
	634, 635, 655, 656, 0, 657, 658, 659, 660, 661,
	662, 663, 779, 0, 664, 0, 665, 666, 667, 668,
	669, 670, 672, 636, 673, 678, 679, 780, 674, 675,
	676, 677, 781, 681, 682, 683, 684, 0, 685, 686,
	0, 680, 671, 1967, 687, 688, 689, 690, 691, 692,
	0, 693, 694, 0, 695, 782, 783, 784, 785, 0,
	707, 0, 696, 698, 699, 700, 701, 786, 702, 787,
	0, 703, 704, 705, 706, 697, 708, 709, 0, 0,
	710, 711, 712, 714, 716, 717, 713, 715, 718, 0,
	719, 0, 0, 720, 721, 722, 788, 789, 790, 0,
	724, 1968, 723, 726, 727, 730, 728, 729, 791, 731,
	732, 733, 1675, 0, 315, 0, 734, 735, 792, 736,
	737, 738, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 324, 323, 325, 326, 327, 328, 0,
	329, 330, 0, 0, 0, 0, 0, 739, 0, 0,
	0, 331, 0, 332, 333, 334, 0, 335, 336, 337,
	338, 339, 340, 341, 740, 741, 0, 342, 742, 343,
	743, 0, 744, 344, 345, 346, 347, 348, 349, 350,
	0, 0, 0, 351, 745, 746, 747, 0, 352, 353,
	748, 0, 0, 0, 354, 355, 356, 357, 358, 359,
	360, 361, 0, 0, 363, 364, 365, 362, 366, 367,
	0, 368, 0, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 381, 0, 0,
	0, 0, 0, 0, 0, 382, 383, 384, 385, 386,
	0, 387, 389, 749, 750, 0, 392, 394, 388, 390,
	0, 393, 391, 395, 396, 0, 397, 398, 399, 0,
	0, 400, 401, 402, 0, 403, 404, 405, 0, 406,
	407, 408, 0, 409, 410, 751, 411, 412, 413, 415,
	417, 414, 416, 418, 419, 420, 421, 422, 752, 753,
	423, 0, 318, 0, 0, 0, 0, 0, 424, 425,
	426, 754, 0, 0, 0, 427, 0, 428, 429, 430,
	0, 431, 432, 0, 0, 433, 434, 435, 755, 756,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 0,
	445, 757, 0, 758, 446, 0, 447, 448, 449, 450,
	451, 452, 453, 1677, 760, 761, 547, 0, 454, 455,
	456, 0, 457, 458, 459, 460, 461, 0, 0, 0,
	319, 462, 463, 464, 0, 0, 762, 465, 548, 466,
	763, 764, 0, 765, 0, 467, 468, 470, 0, 766,
	0, 469, 471, 472, 0, 473, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 483, 482,
	0, 485, 767, 484, 0, 486, 487, 0, 0, 488,
	489, 490, 491, 492, 493, 496, 0, 0, 494, 495,
	497, 498, 0, 499, 500, 502, 505, 501, 503, 504,
	506, 519, 520, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 522, 0, 521, 0, 523,
	524, 525, 526, 527, 534, 536, 537, 532, 533, 535,
	538, 539, 541, 529, 530, 531, 0, 540, 528, 0,
	320, 0, 542, 543, 544, 545, 0, 768, 546, 769,
	549, 550, 0, 0, 551, 0, 552, 0, 1408, 554,
	555, 556, 0, 0, 557, 558, 770, 0, 559, 0,
	771, 560, 561, 553, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 0, 572, 573, 772, 574, 575,
	576, 773, 577, 578, 579, 774, 580, 775, 581, 582,
	0, 583, 584, 585, 0, 586, 587, 588, 589, 590,
	591, 592, 593, 776, 594, 595, 597, 596, 598, 0,
	599, 0, 600, 601, 602, 0, 0, 0, 0, 0,
	603, 604, 606, 0, 607, 608, 609, 610, 605, 611,
	612, 613, 614, 615, 616, 0, 618, 619, 617, 620,
	621, 0, 622, 623, 624, 625, 626, 777, 627, 0,
	628, 629, 637, 638, 639, 630, 631, 633, 640, 632,
	641, 642, 643, 644, 646, 645, 0, 648, 649, 647,
	650, 651, 652, 0, 653, 778, 654, 634, 635, 655,
	656, 0, 657, 658, 659, 660, 661, 662, 663, 779,
	0, 664, 0, 665, 666, 667, 668, 669, 670, 672,
	636, 673, 678, 679, 780, 674, 675, 676, 677, 781,
	681, 682, 683, 684, 0, 685, 686, 0, 680, 671,
	0, 687, 688, 689, 690, 691, 692, 0, 693, 694,
	0, 695, 782, 783, 784, 785, 0, 707, 0, 696,
	698, 699, 700, 701, 786, 702, 787, 0, 703, 704,
	705, 706, 697, 708, 709, 0, 0, 710, 711, 712,
	714, 716, 717, 713, 715, 718, 0, 719, 0, 0,
	720, 721, 722, 788, 789, 790, 0, 724, 725, 723,
	726, 727, 730, 728, 729, 791, 731, 732, 733, 1672,
	0, 315, 0, 734, 735, 792, 736, 737, 738, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 321, 322,
	324, 323, 325, 326, 327, 328, 0, 329, 330, 0,
	0, 0, 0, 0, 739, 0, 0, 0, 331, 0,
	332, 333, 334, 0, 335, 336, 337, 338, 339, 340,
	341, 740, 741, 0, 342, 742, 343, 743, 0, 744,
	344, 345, 346, 347, 348, 349, 350, 0, 0, 0,
	351, 745, 746, 747, 0, 352, 353, 748, 0, 0,
	0, 354, 355, 356, 357, 358, 359, 360, 361, 0,
	0, 363, 364, 365, 362, 366, 367, 0, 368, 0,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 381, 0, 0, 0, 0, 0,
	0, 0, 382, 383, 384, 385, 386, 0, 387, 389,
	749, 750, 0, 392, 394, 388, 390, 0, 393, 391,
	395, 396, 0, 397, 398, 399, 0, 0, 400, 401,
	402, 0, 403, 404, 405, 0, 406, 407, 408, 0,
	409, 410, 751, 411, 412, 413, 415, 417, 414, 416,
	418, 419, 420, 421, 422, 752, 753, 423, 0, 318,
	0, 0, 0, 0, 0, 424, 425, 426, 754, 0,
	0, 0, 427, 0, 428, 429, 430, 0, 431, 432,
	0, 0, 433, 434, 435, 755, 756, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 0, 445, 757, 0,
	758, 446, 0, 447, 448, 449, 450, 451, 452, 453,
	1674, 760, 761, 547, 0, 454, 455, 456, 0, 457,
	458, 459, 460, 461, 0, 0, 0, 319, 462, 463,
	464, 0, 0, 762, 465, 548, 466, 763, 764, 0,
	765, 0, 467, 468, 470, 0, 766, 0, 469, 471,
	472, 0, 473, 0, 0, 0, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 483, 482, 0, 485, 767,
	484, 0, 486, 487, 0, 0, 488, 489, 490, 491,
	492, 493, 496, 0, 0, 494, 495, 497, 498, 0,
	499, 500, 502, 505, 501, 503, 504, 506, 519, 520,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 522, 0, 521, 0, 523, 524, 525, 526,
	527, 534, 536, 537, 532, 533, 535, 538, 539, 541,
	529, 530, 531, 0, 540, 528, 0, 320, 0, 542,
	543, 544, 545, 0, 768, 546, 769, 549, 550, 0,
	0, 551, 0, 552, 0, 1408, 554, 555, 556, 0,
	0, 557, 558, 770, 0, 559, 0, 771, 560, 561,
	553, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 0, 572, 573, 772, 574, 575, 576, 773, 577,
	578, 579, 774, 580, 775, 581, 582, 0, 583, 584,
	585, 0, 586, 587, 588, 589, 590, 591, 592, 593,
	776, 594, 595, 597, 596, 598, 0, 599, 0, 600,
	601, 602, 0, 0, 0, 0, 0, 603, 604, 606,
	0, 607, 608, 609, 610, 605, 611, 612, 613, 614,
	615, 616, 0, 618, 619, 617, 620, 621, 0, 622,
	623, 624, 625, 626, 777, 627, 0, 628, 629, 637,
	638, 639, 630, 631, 633, 640, 632, 641, 642, 643,
	644, 646, 645, 0, 648, 649, 647, 650, 651, 652,
	0, 653, 778, 654, 634, 635, 655, 656, 0, 657,
	658, 659, 660, 661, 662, 663, 779, 0, 664, 0,
	665, 666, 667, 668, 669, 670, 672, 636, 673, 678,
	679, 780, 674, 675, 676, 677, 781, 681, 682, 683,
	684, 0, 685, 686, 0, 680, 671, 0, 687, 688,
	689, 690, 691, 692, 0, 693, 694, 0, 695, 782,
	783, 784, 785, 0, 707, 0, 696, 698, 699, 700,
	701, 786, 702, 787, 0, 703, 704, 705, 706, 697,
	708, 709, 0, 0, 710, 711, 712, 714, 716, 717,
	713, 715, 718, 0, 719, 0, 0, 720, 721, 722,
	788, 789, 790, 0, 724, 725, 723, 726, 727, 730,
	728, 729, 791, 731, 732, 733, 1578, 0, 315, 0,
	734, 735, 792, 736, 737, 738, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 322, 324, 323, 325,
	326, 327, 328, 0, 329, 330, 0, 0, 0, 0,
	0, 739, 0, 0, 0, 331, 0, 332, 333, 334,
	0, 335, 336, 337, 338, 339, 340, 341, 740, 741,
	0, 342, 742, 343, 743, 0, 744, 344, 345, 346,
	347, 348, 349, 350, 0, 0, 0, 351, 745, 746,
	747, 0, 352, 353, 748, 0, 0, 0, 354, 355,
	356, 357, 358, 359, 360, 361, 0, 0, 363, 364,
	365, 362, 366, 367, 0, 368, 0, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 381, 0, 0, 0, 0, 0, 0, 0, 382,
	383, 384, 385, 386, 0, 387, 389, 749, 750, 0,
	392, 394, 388, 390, 0, 393, 391, 395, 396, 0,
	397, 398, 399, 0, 0, 400, 401, 402, 0, 403,
	404, 405, 0, 406, 407, 408, 0, 409, 410, 751,
	411, 412, 413, 415, 417, 414, 416, 418, 419, 420,
	421, 422, 752, 753, 423, 0, 318, 0, 0, 0,
	0, 0, 424, 425, 426, 754, 0, 0, 0, 427,
	0, 428, 429, 430, 0, 431, 432, 0, 0, 433,
	434, 435, 755, 756, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 0, 445, 757, 0, 758, 446, 0,
	447, 448, 449, 450, 451, 452, 453, 1580, 760, 761,
	547, 0, 454, 455, 456, 0, 457, 458, 459, 460,
	461, 0, 0, 0, 319, 462, 463, 464, 0, 0,
	762, 465, 548, 466, 763, 764, 0, 765, 0, 467,
	468, 470, 0, 766, 0, 469, 471, 472, 0, 473,
	0, 0, 0, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 483, 482, 0, 485, 767, 484, 0, 486,
	487, 0, 0, 488, 489, 490, 491, 492, 493, 496,
	0, 0, 494, 495, 497, 498, 0, 499, 500, 502,
	505, 501, 503, 504, 506, 519, 520, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 522,
	0, 521, 0, 523, 524, 525, 526, 527, 534, 536,
	537, 532, 533, 535, 538, 539, 541, 529, 530, 531,
	0, 540, 528, 0, 320, 0, 542, 543, 544, 545,
	0, 768, 546, 769, 549, 550, 0, 0, 551, 0,
	552, 0, 1408, 554, 555, 556, 0, 0, 557, 558,
	770, 0, 559, 0, 771, 560, 561, 553, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 0, 572,
	573, 772, 574, 575, 576, 773, 577, 578, 579, 774,
	580, 775, 581, 582, 0, 583, 584, 585, 0, 586,
	587, 588, 589, 590, 591, 592, 593, 776, 594, 595,
	597, 596, 598, 0, 599, 0, 600, 601, 602, 0,
	0, 0, 0, 0, 603, 604, 606, 0, 607, 608,
	609, 610, 605, 611, 612, 613, 614, 615, 616, 0,
	618, 619, 617, 620, 621, 0, 622, 623, 624, 625,
	626, 777, 627, 0, 628, 629, 637, 638, 639, 630,
	631, 633, 640, 632, 641, 642, 643, 644, 646, 645,
	0, 648, 649, 647, 650, 651, 652, 0, 653, 778,
	654, 634, 635, 655, 656, 0, 657, 658, 659, 660,
	661, 662, 663, 779, 0, 664, 0, 665, 666, 667,
	668, 669, 670, 672, 636, 673, 678, 679, 780, 674,
	675, 676, 677, 781, 681, 682, 683, 684, 0, 685,
	686, 0, 680, 671, 0, 687, 688, 689, 690, 691,
	692, 0, 693, 694, 0, 695, 782, 783, 784, 785,
	0, 707, 0, 696, 698, 699, 700, 701, 786, 702,
	787, 0, 703, 704, 705, 706, 697, 708, 709, 0,
	0, 710, 711, 712, 714, 716, 717, 713, 715, 718,
	0, 719, 0, 0, 720, 721, 722, 788, 789, 790,
	0, 724, 725, 723, 726, 727, 730, 728, 729, 791,
	731, 732, 733, 827, 0, 315, 0, 734, 735, 792,
	736, 737, 738, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 321, 322, 324, 323, 325, 825, 327, 328,
	814, 329, 330, 0, 0, 0, 0, 0, 739, 0,
	0, 0, 331, 0, 332, 333, 334, 0, 335, 336,
	337, 338, 339, 340, 341, 740, 741, 0, 342, 742,
	343, 743, 0, 744, 344, 345, 346, 347, 348, 349,
	350, 0, 0, 0, 351, 745, 746, 747, 0, 352,
	353, 748, 0, 0, 0, 354, 355, 356, 357, 358,
	359, 360, 361, 0, 0, 363, 364, 365, 362, 366,
	367, 0, 368, 0, 369, 370, 371, 372, 373, 374,
	375, 817, 376, 377, 378, 0, 379, 380, 381, 0,
	0, 0, 0, 0, 0, 0, 382, 383, 384, 385,
	386, 0, 387, 389, 749, 750, 0, 392, 394, 388,
	390, 0, 393, 391, 395, 396, 0, 397, 398, 399,
	0, 0, 400, 401, 402, 0, 403, 404, 405, 0,
	406, 407, 408, 0, 409, 410, 751, 411, 412, 413,
	415, 417, 414, 416, 418, 419, 420, 421, 422, 752,
	753, 423, 0, 0, 0, 0, 0, 0, 0, 424,
	425, 426, 754, 0, 0, 0, 427, 0, 428, 429,
	430, 0, 431, 432, 0, 0, 433, 434, 435, 755,
	756, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	823, 445, 757, 0, 758, 446, 0, 447, 448, 449,
	450, 451, 452, 453, 759, 760, 761, 547, 0, 454,
	455, 456, 0, 457, 458, 459, 460, 461, 0, 0,
	0, 0, 462, 463, 464, 0, 0, 762, 465, 548,
	466, 763, 764, 0, 765, 0, 467, 468, 470, 0,
	766, 0, 469, 471, 472, 0, 473, 0, 0, 0,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 483,
	482, 0, 485, 767, 484, 0, 486, 487, 0, 0,
	488, 489, 490, 491, 492, 493, 496, 0, 0, 494,
	495, 497, 498, 0, 499, 500, 502, 505, 501, 503,
	504, 506, 519, 520, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 522, 0, 521, 0,
	523, 524, 525, 526, 527, 534, 536, 537, 532, 533,
	535, 538, 539, 541, 529, 530, 531, 0, 540, 528,
	0, 0, 0, 542, 543, 544, 545, 0, 768, 546,
	769, 549, 550, 0, 0, 551, 0, 552, 0, 0,
	554, 555, 556, 0, 0, 557, 558, 770, 0, 559,
	0, 771, 560, 561, 553, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 0, 572, 573, 772, 574,
	575, 576, 773, 577, 578, 579, 774, 580, 775, 581,
	582, 0, 583, 584, 585, 0, 586, 587, 588, 589,
	590, 591, 592, 593, 776, 594, 595, 597, 596, 598,
	0, 599, 0, 600, 601, 602, 0, 0, 0, 0,
	0, 603, 604, 606, 0, 607, 608, 609, 610, 605,
	611, 612, 613, 614, 615, 616, 0, 618, 619, 617,
	620, 621, 0, 622, 623, 624, 625, 626, 777, 627,
	0, 628, 629, 637, 638, 639, 630, 631, 633, 640,
	632, 641, 642, 643, 644, 646, 645, 819, 648, 649,
	647, 650, 651, 652, 0, 653, 778, 654, 634, 635,
	655, 656, 0, 657, 658, 659, 660, 661, 662, 663,
	779, 0, 664, 0, 665, 666, 667, 668, 669, 670,
	672, 636, 673, 678, 679, 780, 674, 675, 676, 677,
	781, 681, 682, 683, 684, 0, 685, 826, 0, 680,
	671, 0, 687, 688, 689, 690, 691, 692, 0, 693,
	694, 0, 695, 782, 783, 784, 785, 0, 707, 0,
	696, 698, 699, 700, 701, 786, 702, 787, 0, 703,
	704, 705, 706, 697, 708, 709, 0, 0, 710, 711,
	712, 714, 716, 717, 713, 715, 718, 0, 719, 0,
	0, 720, 721, 722, 788, 789, 790, 0, 724, 725,
	723, 726, 727, 730, 728, 729, 791, 731, 732, 733,
	813, 0, 315, 0, 734, 735, 792, 736, 737, 738,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 321,
	322, 324, 323, 325, 326, 327, 328, 814, 329, 330,
	0, 0, 0, 0, 0, 739, 0, 0, 0, 331,
	0, 332, 333, 334, 0, 335, 336, 337, 338, 339,
	340, 341, 740, 741, 0, 342, 742, 343, 743, 0,
	744, 344, 345, 346, 347, 348, 349, 350, 0, 0,
	0, 351, 745, 746, 747, 0, 352, 353, 748, 0,
	0, 0, 354, 355, 356, 357, 358, 359, 360, 361,
	0, 0, 363, 364, 365, 362, 366, 367, 0, 368,
	0, 369, 370, 371, 372, 373, 374, 375, 817, 376,
	377, 378, 0, 379, 380, 381, 0, 0, 0, 0,
	0, 0, 0, 382, 383, 384, 385, 386, 0, 387,
	389, 749, 750, 0, 392, 394, 388, 390, 0, 393,
	391, 395, 396, 0, 397, 398, 399, 0, 0, 400,
	401, 402, 0, 403, 404, 405, 0, 406, 407, 408,
	0, 409, 410, 751, 411, 412, 413, 415, 417, 414,
	416, 418, 419, 420, 421, 422, 752, 753, 423, 0,
	0, 0, 0, 0, 0, 0, 424, 425, 426, 754,
	0, 0, 0, 427, 0, 428, 429, 430, 0, 431,
	432, 0, 0, 433, 434, 435, 755, 756, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 818, 445, 757,
	0, 758, 446, 0, 447, 448, 449, 450, 451, 452,
	453, 759, 760, 761, 547, 0, 454, 455, 456, 0,
	457, 458, 459, 460, 461, 0, 0, 0, 0, 462,
	463, 464, 0, 0, 762, 465, 548, 466, 763, 764,
	0, 765, 0, 467, 468, 470, 0, 766, 0, 469,
	471, 472, 0, 473, 0, 0, 0, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 483, 482, 0, 485,
	767, 484, 0, 486, 487, 0, 0, 488, 489, 490,
	491, 492, 493, 496, 0, 0, 494, 495, 497, 498,
	0, 499, 500, 502, 505, 501, 503, 504, 506, 519,
	520, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 522, 0, 521, 0, 523, 524, 525,
	526, 527, 534, 536, 537, 532, 533, 535, 538, 539,
	541, 529, 530, 531, 0, 540, 528, 0, 0, 0,
	542, 543, 544, 545, 0, 768, 546, 769, 549, 550,
	0, 0, 551, 0, 552, 0, 0, 554, 555, 556,
	0, 0, 557, 558, 770, 0, 559, 0, 771, 560,
	561, 553, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 0, 572, 573, 772, 574, 575, 576, 773,
	577, 578, 579, 774, 580, 775, 581, 582, 0, 583,
	584, 585, 0, 586, 587, 588, 589, 590, 591, 592,
	593, 776, 594, 595, 597, 596, 598, 0, 599, 0,
	600, 601, 602, 0, 0, 0, 0, 0, 603, 604,
	606, 0, 607, 608, 609, 610, 605, 611, 612, 613,
	614, 615, 616, 0, 618, 619, 617, 620, 621, 0,
	622, 623, 624, 625, 626, 777, 627, 0, 628, 629,
	637, 638, 639, 630, 631, 633, 640, 632, 641, 642,
	643, 644, 646, 645, 819, 648, 649, 647, 650, 651,
	652, 0, 653, 778, 654, 634, 635, 655, 656, 0,
	657, 658, 659, 660, 661, 662, 663, 779, 0, 664,
	0, 665, 666, 667, 668, 669, 670, 672, 636, 673,
	678, 679, 780, 674, 675, 676, 677, 781, 681, 682,
	683, 684, 0, 685, 812, 0, 680, 671, 0, 687,
	688, 689, 690, 691, 692, 0, 693, 694, 0, 695,
	782, 783, 784, 785, 0, 707, 0, 696, 698, 699,
	700, 701, 786, 702, 787, 0, 703, 704, 705, 706,
	697, 708, 709, 0, 0, 710, 711, 712, 714, 716,
	717, 713, 715, 718, 0, 719, 0, 0, 720, 721,
	722, 788, 789, 790, 0, 724, 725, 723, 726, 727,
	730, 728, 729, 791, 731, 732, 733, 315, 0, 0,
	0, 734, 735, 792, 736, 737, 738, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 324, 323, 325, 326,
	327, 328, 814, 329, 330, 0, 0, 0, 0, 0,
	739, 0, 0, 0, 331, 0, 332, 333, 334, 0,
	335, 336, 337, 338, 339, 340, 341, 740, 741, 0,
	342, 742, 343, 743, 0, 744, 344, 345, 346, 347,
	348, 349, 350, 0, 0, 0, 351, 745, 746, 747,
	0, 352, 353, 748, 0, 0, 0, 354, 355, 356,
	357, 358, 359, 360, 361, 0, 0, 363, 364, 365,
	362, 366, 367, 0, 368, 0, 369, 370, 371, 372,
	373, 374, 375, 817, 376, 377, 378, 0, 379, 380,
	381, 0, 0, 0, 0, 0, 0, 0, 382, 383,
	384, 385, 386, 0, 387, 389, 749, 750, 0, 392,
	394, 388, 390, 0, 393, 391, 395, 396, 0, 397,
	398, 399, 0, 0, 400, 401, 402, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 751, 411,
	412, 413, 415, 417, 414, 416, 418, 419, 420, 421,
	422, 752, 753, 423, 0, 0, 0, 0, 0, 0,
	0, 424, 425, 426, 754, 0, 0, 0, 427, 0,
	428, 429, 430, 0, 431, 432, 0, 0, 433, 434,
	435, 755, 756, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 818, 445, 757, 0, 758, 446, 0, 447,
	448, 449, 450, 451, 452, 453, 759, 760, 761, 547,
	0, 454, 455, 456, 0, 457, 458, 459, 460, 461,
	0, 0, 0, 0, 462, 463, 464, 0, 0, 762,
	465, 548, 466, 763, 764, 0, 765, 0, 467, 468,
	470, 0, 766, 0, 469, 471, 472, 0, 473, 0,
	0, 0, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 483, 482, 0, 485, 767, 484, 0, 486, 487,
	0, 0, 488, 489, 490, 491, 492, 493, 496, 0,
	0, 494, 495, 497, 498, 0, 499, 500, 502, 505,
	501, 503, 504, 506, 519, 520, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 522, 0,
	521, 0, 523, 524, 525, 526, 527, 534, 536, 537,
	532, 533, 535, 538, 539, 541, 529, 530, 531, 0,
	540, 528, 0, 0, 0, 542, 543, 544, 545, 0,
	768, 546, 769, 549, 550, 0, 0, 551, 0, 552,
	0, 0, 554, 555, 556, 0, 0, 557, 558, 770,
	0, 559, 0, 771, 560, 561, 553, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 0, 572, 573,
	772, 574, 575, 576, 773, 577, 578, 579, 774, 580,
	775, 581, 582, 0, 583, 584, 585, 0, 586, 587,
	588, 589, 590, 591, 592, 593, 776, 594, 595, 597,
	596, 598, 0, 599, 0, 600, 601, 602, 0, 0,
	0, 0, 0, 603, 604, 606, 0, 607, 608, 609,
	610, 605, 611, 612, 613, 614, 615, 616, 0, 618,
	619, 617, 620, 621, 0, 622, 623, 624, 625, 626,
	777, 627, 0, 628, 629, 637, 638, 639, 630, 631,
	633, 640, 632, 641, 642, 643, 644, 646, 645, 819,
	648, 649, 647, 650, 651, 652, 0, 653, 778, 654,
	634, 635, 655, 656, 0, 657, 658, 659, 660, 661,
	662, 663, 779, 0, 664, 0, 665, 666, 667, 668,
	669, 670, 672, 636, 673, 678, 679, 780, 674, 675,
	676, 677, 781, 681, 682, 683, 684, 0, 685, 686,
	0, 680, 671, 0, 687, 688, 689, 690, 691, 692,
	0, 693, 694, 0, 695, 782, 783, 784, 785, 0,
	707, 0, 696, 698, 699, 700, 701, 786, 702, 787,
	0, 703, 704, 705, 706, 697, 708, 709, 0, 0,
	710, 711, 712, 714, 716, 717, 713, 715, 718, 0,
	719, 0, 0, 720, 721, 722, 788, 789, 790, 0,
	724, 725, 723, 726, 727, 730, 728, 729, 791, 731,
	732, 733, 315, 0, 0, 0, 734, 735, 792, 736,
	737, 738, 0, 0, 0, 0, 0, 0, 0, 321,
	322, 324, 323, 325, 326, 327, 328, 814, 329, 330,
	0, 0, 0, 0, 0, 739, 0, 0, 0, 331,
	0, 332, 333, 334, 0, 335, 336, 337, 338, 339,
	340, 341, 740, 741, 0, 342, 742, 343, 743, 0,
	744, 344, 345, 346, 347, 348, 349, 350, 0, 0,
	0, 351, 745, 746, 747, 0, 352, 353, 748, 0,
	0, 0, 354, 355, 356, 357, 358, 359, 360, 361,
	0, 0, 363, 364, 365, 362, 366, 367, 0, 368,
	0, 369, 370, 371, 372, 373, 374, 375, 817, 376,
	377, 378, 0, 379, 380, 381, 0, 0, 0, 0,
	0, 0, 0, 382, 383, 384, 385, 386, 0, 387,
	389, 749, 750, 0, 392, 394, 388, 390, 0, 393,
	391, 395, 396, 0, 397, 398, 399, 0, 0, 400,
	401, 402, 0, 403, 404, 405, 0, 406, 407, 408,
	0, 409, 410, 751, 411, 412, 413, 415, 417, 414,
	416, 418, 419, 420, 421, 422, 752, 753, 423, 0,
	0, 0, 0, 0, 0, 0, 424, 425, 426, 754,
	0, 0, 0, 427, 0, 428, 429, 430, 0, 431,
	432, 0, 0, 433, 434, 435, 755, 756, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 4576, 445, 757,
	0, 758, 446, 0, 447, 448, 449, 450, 451, 452,
	453, 759, 760, 761, 547, 0, 454, 455, 456, 0,
	457, 458, 459, 460, 461, 0, 0, 0, 0, 462,
	463, 464, 0, 0, 762, 465, 548, 466, 763, 764,
	0, 765, 0, 467, 468, 470, 0, 766, 0, 469,
	471, 472, 0, 473, 0, 0, 0, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 483, 482, 0, 485,
	767, 484, 0, 486, 487, 0, 0, 488, 489, 490,
	491, 492, 493, 496, 0, 0, 494, 495, 497, 498,
	0, 499, 500, 502, 505, 501, 503, 504, 506, 519,
	520, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 522, 0, 521, 0, 523, 524, 525,
	526, 527, 534, 536, 537, 532, 533, 535, 538, 539,
	541, 529, 530, 531, 0, 540, 528, 0, 0, 0,
	542, 543, 544, 545, 0, 768, 546, 769, 549, 550,
	0, 0, 551, 0, 552, 0, 0, 554, 555, 556,
	0, 0, 557, 558, 770, 0, 559, 0, 771, 560,
	561, 553, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 0, 572, 573, 772, 574, 575, 576, 773,
	577, 578, 579, 774, 580, 775, 581, 582, 0, 583,
	584, 585, 0, 586, 587, 588, 589, 590, 591, 592,
	593, 776, 594, 595, 597, 596, 598, 0, 599, 0,
	600, 601, 602, 0, 0, 0, 0, 0, 603, 604,
	606, 0, 607, 608, 609, 610, 605, 611, 612, 613,
	614, 615, 616, 0, 618, 619, 617, 620, 621, 0,
	622, 623, 624, 625, 626, 777, 627, 0, 628, 629,
	637, 638, 639, 630, 631, 633, 640, 632, 641, 642,
	643, 644, 646, 645, 819, 648, 649, 647, 650, 651,
	652, 0, 653, 778, 654, 634, 635, 655, 656, 0,
	657, 658, 659, 660, 661, 662, 663, 779, 0, 664,
	0, 665, 666, 667, 668, 669, 670, 672, 636, 673,
	678, 679, 780, 674, 675, 676, 677, 781, 681, 682,
	683, 684, 0, 685, 686, 0, 680, 671, 0, 687,
	688, 689, 690, 691, 692, 0, 693, 694, 0, 695,
	782, 783, 784, 785, 0, 707, 0, 696, 698, 699,
	700, 701, 786, 702, 787, 0, 703, 704, 705, 706,
	697, 708, 709, 0, 0, 710, 711, 712, 714, 716,
	717, 713, 715, 718, 0, 719, 0, 0, 720, 721,
	722, 788, 789, 790, 0, 724, 725, 723, 726, 727,
	730, 728, 729, 791, 731, 732, 733, 315, 0, 0,
	0, 734, 735, 792, 736, 737, 738, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 324, 323, 325, 326,
	327, 328, 0, 329, 330, 0, 0, 0, 0, 0,
	739, 0, 0, 0, 331, 0, 332, 333, 334, 0,
	335, 336, 337, 338, 339, 340, 341, 740, 741, 0,
	342, 742, 343, 743, 0, 744, 344, 345, 346, 347,
	348, 349, 350, 0, 0, 0, 351, 745, 746, 747,
	0, 352, 353, 748, 0, 0, 0, 354, 355, 356,
	357, 358, 359, 360, 361, 0, 0, 363, 364, 365,
	362, 366, 367, 0, 368, 0, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	381, 0, 0, 0, 0, 0, 0, 0, 382, 383,
	384, 385, 386, 0, 387, 389, 749, 750, 0, 392,
	394, 388, 390, 0, 393, 391, 395, 396, 0, 397,
	398, 399, 0, 0, 400, 401, 402, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 751, 411,
	412, 413, 415, 417, 414, 416, 418, 419, 420, 421,
	422, 752, 753, 423, 0, 318, 0, 0, 0, 0,
	0, 424, 425, 426, 754, 0, 0, 0, 427, 0,
	428, 429, 430, 0, 431, 432, 0, 0, 433, 434,
	435, 755, 756, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 0, 445, 757, 0, 758, 446, 0, 447,
	448, 449, 450, 451, 452, 453, 759, 760, 761, 547,
	0, 454, 455, 456, 0, 457, 458, 459, 460, 461,
	0, 0, 0, 319, 462, 463, 464, 0, 0, 762,
	465, 548, 466, 763, 764, 0, 765, 0, 467, 468,
	470, 0, 766, 0, 469, 471, 472, 0, 473, 0,
	0, 0, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 483, 482, 0, 485, 767, 484, 0, 486, 487,
	0, 0, 488, 489, 490, 491, 492, 493, 496, 0,
	0, 494, 495, 497, 498, 0, 499, 500, 502, 505,
	501, 503, 504, 506, 519, 520, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 522, 0,
	521, 0, 523, 524, 525, 526, 527, 534, 536, 537,
	532, 533, 535, 538, 539, 541, 529, 530, 531, 0,
	540, 528, 0, 320, 0, 542, 543, 544, 545, 0,
	768, 546, 769, 549, 550, 0, 0, 551, 0, 552,
	0, 1408, 554, 555, 556, 0, 0, 557, 558, 770,
	0, 559, 0, 771, 560, 561, 553, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 0, 572, 573,
	772, 574, 575, 576, 773, 577, 578, 579, 774, 580,
	775, 581, 582, 0, 583, 584, 585, 0, 586, 587,
	588, 589, 590, 591, 592, 593, 776, 594, 595, 597,
	596, 598, 0, 599, 0, 600, 601, 602, 0, 0,
	0, 0, 0, 603, 604, 606, 0, 607, 608, 609,
	610, 605, 611, 612, 613, 614, 615, 616, 0, 618,
	619, 617, 620, 621, 0, 622, 623, 624, 625, 626,
	777, 627, 0, 628, 629, 637, 638, 639, 630, 631,
	633, 640, 632, 641, 642, 643, 644, 646, 645, 0,
	648, 649, 647, 650, 651, 652, 0, 653, 778, 654,
	634, 635, 655, 656, 0, 657, 658, 659, 660, 661,
	662, 663, 779, 0, 664, 0, 665, 666, 667, 668,
	669, 670, 672, 636, 673, 678, 679, 780, 674, 675,
	676, 677, 781, 681, 682, 683, 684, 0, 685, 686,
	0, 680, 671, 0, 687, 688, 689, 690, 691, 692,
	0, 693, 694, 0, 695, 782, 783, 784, 785, 0,
	707, 0, 696, 698, 699, 700, 701, 786, 702, 787,
	0, 703, 704, 705, 706, 697, 708, 709, 0, 0,
	710, 711, 712, 714, 716, 717, 713, 715, 718, 0,
	719, 0, 0, 720, 721, 722, 788, 789, 790, 0,
	724, 725, 723, 726, 727, 730, 728, 729, 791, 731,
	732, 733, 315, 0, 0, 0, 734, 735, 792, 736,
	737, 738, 0, 0, 0, 0, 0, 0, 0, 321,
	322, 324, 323, 325, 326, 327, 328, 0, 329, 330,
	0, 0, 0, 0, 0, 739, 0, 0, 0, 331,
	0, 332, 333, 334, 0, 335, 336, 337, 338, 339,
	340, 341, 740, 741, 0, 342, 742, 343, 743, 0,
	744, 344, 345, 346, 347, 348, 349, 350, 0, 0,
	0, 351, 745, 746, 747, 0, 352, 353, 748, 0,
	0, 0, 354, 355, 356, 357, 358, 359, 360, 361,
	0, 0, 363, 364, 365, 362, 366, 367, 0, 368,
	0, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 381, 0, 0, 0, 0,
	0, 0, 0, 382, 383, 384, 385, 386, 0, 387,
	389, 749, 750, 0, 392, 394, 388, 390, 0, 393,
	391, 395, 396, 0, 397, 398, 399, 0, 0, 400,
	401, 402, 0, 403, 404, 405, 0, 406, 407, 408,
	0, 409, 410, 751, 411, 412, 413, 415, 417, 414,
	416, 418, 419, 420, 421, 422, 752, 753, 423, 0,
	318, 0, 0, 0, 0, 0, 424, 425, 426, 754,
	0, 0, 0, 427, 0, 428, 429, 430, 0, 431,
	432, 0, 0, 433, 434, 435, 755, 756, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 0, 445, 757,
	0, 758, 446, 0, 447, 448, 449, 450, 451, 452,
	453, 759, 760, 761, 547, 0, 454, 455, 456, 0,
	457, 458, 459, 460, 461, 0, 0, 0, 319, 462,
	463, 464, 0, 0, 762, 465, 548, 466, 763, 764,
	0, 765, 0, 467, 468, 470, 0, 766, 0, 469,
	471, 472, 0, 473, 0, 0, 0, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 483, 482, 0, 485,
	767, 484, 0, 486, 487, 0, 0, 488, 489, 490,
	491, 492, 493, 496, 0, 0, 494, 495, 497, 498,
	0, 499, 500, 502, 505, 501, 503, 504, 506, 519,
	520, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 522, 0, 521, 0, 523, 524, 525,
	526, 527, 534, 536, 537, 532, 533, 535, 538, 539,
	541, 529, 530, 531, 3994, 540, 528, 0, 320, 0,
	542, 543, 544, 545, 0, 768, 546, 769, 549, 550,
	0, 0, 551, 0, 552, 0, 0, 554, 555, 556,
	0, 0, 557, 558, 770, 0, 559, 0, 771, 560,
	561, 553, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 0, 572, 573, 772, 574, 575, 576, 773,
	577, 578, 579, 774, 580, 775, 581, 582, 0, 583,
	584, 585, 0, 586, 587, 588, 589, 590, 591, 592,
	593, 776, 594, 595, 597, 596, 598, 0, 599, 0,
	600, 601, 602, 0, 0, 0, 0, 0, 603, 604,
	606, 0, 607, 608, 609, 610, 605, 611, 612, 613,
	614, 615, 616, 0, 618, 619, 617, 620, 621, 0,
	622, 623, 624, 625, 626, 777, 627, 0, 628, 629,
	637, 638, 639, 630, 631, 633, 640, 632, 641, 642,
	643, 644, 646, 645, 0, 648, 649, 647, 650, 651,
	652, 0, 653, 778, 654, 634, 635, 655, 656, 0,
	657, 658, 659, 660, 661, 662, 663, 779, 0, 664,
	0, 665, 666, 667, 668, 669, 670, 672, 636, 673,
	678, 679, 780, 674, 675, 676, 677, 781, 681, 682,
	683, 684, 0, 685, 686, 0, 680, 671, 0, 687,
	688, 689, 690, 691, 692, 0, 693, 694, 0, 695,
	782, 783, 784, 785, 0, 707, 0, 696, 698, 699,
	700, 701, 786, 702, 787, 0, 703, 704, 705, 706,
	697, 708, 709, 0, 0, 710, 711, 712, 714, 716,
	717, 713, 715, 718, 0, 719, 0, 0, 720, 721,
	722, 788, 789, 790, 0, 724, 725, 723, 726, 727,
	730, 728, 729, 791, 731, 732, 733, 3499, 0, 315,
	0, 734, 735, 792, 736, 737, 738, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 324, 323,
	325, 326, 327, 328, 0, 329, 330, 0, 0, 0,
	0, 0, 739, 0, 0, 0, 331, 0, 332, 333,
	334, 0, 335, 336, 337, 338, 339, 340, 341, 740,
	741, 0, 342, 742, 343, 743, 0, 744, 344, 345,
	346, 347, 348, 349, 350, 0, 0, 0, 351, 745,
	746, 747, 0, 352, 353, 748, 0, 0, 0, 354,
	355, 356, 357, 358, 359, 360, 361, 0, 0, 363,
	364, 365, 362, 366, 367, 0, 368, 0, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 381, 0, 0, 0, 0, 0, 0, 0,
	382, 383, 384, 385, 386, 0, 387, 389, 749, 750,
	0, 392, 394, 388, 390, 0, 393, 391, 395, 396,
	0, 397, 398, 399, 0, 0, 400, 401, 402, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	751, 411, 412, 413, 415, 417, 414, 416, 418, 419,
	420, 421, 422, 752, 753, 423, 0, 318, 0, 0,
	0, 0, 0, 424, 425, 426, 754, 0, 0, 0,
	427, 0, 428, 429, 430, 0, 431, 432, 0, 0,
	433, 434, 435, 755, 756, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 0, 445, 757, 0, 758, 446,
	0, 447, 448, 449, 450, 451, 452, 453, 3498, 760,
	761, 547, 0, 454, 455, 456, 0, 457, 458, 459,
	460, 461, 0, 0, 0, 319, 462, 463, 464, 0,
	0, 762, 465, 548, 466, 763, 764, 0, 765, 0,
	467, 468, 470, 0, 766, 0, 469, 471, 472, 0,
	473, 0, 0, 0, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 483, 482, 0, 485, 767, 484, 0,
	486, 487, 0, 0, 488, 489, 490, 491, 492, 493,
	496, 0, 0, 494, 495, 497, 498, 0, 499, 500,
	502, 505, 501, 503, 504, 506, 519, 520, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	522, 0, 521, 0, 523, 524, 525, 526, 527, 534,
	536, 537, 532, 533, 535, 538, 539, 541, 529, 530,
	531, 0, 540, 528, 0, 320, 0, 542, 543, 544,
	545, 0, 768, 546, 769, 549, 550, 0, 0, 551,
	0, 552, 0, 0, 554, 555, 556, 0, 0, 557,
	558, 770, 0, 559, 0, 771, 560, 561, 553, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 0,
	572, 573, 772, 574, 575, 576, 773, 577, 578, 579,
	774, 580, 775, 581, 582, 0, 583, 584, 585, 0,
	586, 587, 588, 589, 590, 591, 592, 593, 776, 594,
	595, 597, 596, 598, 0, 599, 0, 600, 601, 602,
	0, 0, 0, 0, 0, 603, 604, 606, 0, 607,
	608, 609, 610, 605, 611, 612, 613, 614, 615, 616,
	0, 618, 619, 617, 620, 621, 0, 622, 623, 624,
	625, 626, 777, 627, 0, 628, 629, 637, 638, 639,
	630, 631, 633, 640, 632, 641, 642, 643, 644, 646,
	645, 0, 648, 649, 647, 650, 651, 652, 0, 653,
	778, 654, 634, 635, 655, 656, 0, 657, 658, 659,
	660, 661, 662, 663, 779, 0, 664, 0, 665, 666,
	667, 668, 669, 670, 672, 636, 673, 678, 679, 780,
	674, 675, 676, 677, 781, 681, 682, 683, 684, 0,
	685, 686, 0, 680, 671, 0, 687, 688, 689, 690,
	691, 692, 0, 693, 694, 0, 695, 782, 783, 784,
	785, 0, 707, 0, 696, 698, 699, 700, 701, 786,
	702, 787, 0, 703, 704, 705, 706, 697, 708, 709,
	0, 0, 710, 711, 712, 714, 716, 717, 713, 715,
	718, 0, 719, 0, 0, 720, 721, 722, 788, 789,
	790, 0, 724, 725, 723, 726, 727, 730, 728, 729,
	791, 731, 732, 733, 315, 0, 0, 0, 734, 735,
	792, 736, 737, 738, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 324, 323, 325, 326, 327, 328, 814,
	329, 330, 0, 0, 0, 0, 0, 739, 0, 0,
	0, 331, 0, 332, 333, 334, 0, 335, 336, 337,
	338, 339, 340, 341, 740, 741, 0, 342, 742, 343,
	743, 0, 744, 344, 345, 346, 347, 348, 349, 350,
	0, 0, 0, 351, 745, 746, 747, 0, 352, 353,
	748, 0, 0, 0, 354, 355, 356, 357, 358, 359,
	360, 361, 0, 0, 363, 364, 365, 362, 366, 367,
	0, 368, 0, 369, 370, 371, 372, 373, 374, 375,
	817, 376, 377, 378, 0, 379, 380, 381, 0, 0,
	0, 0, 0, 0, 0, 382, 383, 384, 385, 386,
	0, 387, 389, 749, 750, 0, 392, 394, 388, 390,
	0, 393, 391, 395, 396, 0, 397, 398, 399, 0,
	0, 400, 401, 402, 0, 403, 404, 405, 0, 406,
	407, 408, 0, 409, 410, 751, 411, 412, 413, 415,
	417, 414, 416, 418, 419, 420, 421, 422, 752, 753,
	423, 0, 0, 0, 0, 0, 0, 0, 424, 425,
	426, 754, 0, 0, 0, 427, 0, 428, 429, 430,
	0, 431, 432, 0, 0, 433, 434, 435, 755, 756,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 818,
	445, 757, 0, 758, 446, 0, 447, 448, 449, 450,
	451, 452, 453, 759, 760, 761, 547, 0, 454, 455,
	456, 0, 457, 458, 459, 460, 461, 0, 0, 0,
	0, 462, 463, 464, 0, 0, 762, 465, 548, 466,
	763, 764, 0, 765, 0, 467, 468, 470, 0, 766,
	0, 469, 471, 472, 0, 473, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 483, 482,
	0, 485, 767, 484, 0, 486, 487, 0, 0, 488,
	489, 490, 491, 492, 493, 496, 0, 0, 494, 495,
	497, 498, 0, 499, 500, 502, 505, 501, 503, 504,
	506, 519, 520, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 522, 0, 521, 0, 523,
	524, 525, 526, 527, 534, 536, 537, 532, 533, 535,
	538, 539, 541, 529, 530, 531, 0, 540, 528, 0,
	0, 0, 542, 543, 544, 545, 0, 768, 546, 769,
	549, 550, 0, 0, 551, 0, 552, 0, 0, 554,
	555, 556, 0, 0, 557, 558, 770, 0, 559, 0,
	771, 560, 561, 553, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 0, 572, 573, 772, 574, 575,
	576, 773, 577, 578, 579, 774, 580, 775, 581, 582,
	0, 583, 584, 585, 0, 586, 587, 588, 589, 590,
	591, 592, 593, 776, 594, 595, 597, 596, 598, 0,
	599, 0, 600, 601, 602, 0, 0, 0, 0, 0,
	603, 604, 606, 0, 607, 608, 609, 610, 605, 611,
	612, 613, 614, 615, 616, 0, 618, 619, 617, 620,
	621, 0, 622, 623, 624, 625, 626, 777, 627, 0,
	628, 629, 637, 638, 639, 630, 631, 633, 640, 632,
	641, 642, 643, 644, 646, 645, 819, 648, 649, 647,
	650, 651, 652, 0, 653, 778, 654, 634, 635, 655,
	656, 0, 657, 658, 659, 660, 661, 662, 663, 779,
	0, 664, 0, 665, 666, 667, 668, 669, 670, 672,
	636, 673, 678, 679, 780, 674, 675, 676, 677, 781,
	681, 682, 683, 684, 0, 685, 3201, 0, 680, 671,
	0, 687, 688, 689, 690, 691, 692, 0, 693, 694,
	0, 695, 782, 783, 784, 785, 0, 707, 0, 696,
	698, 699, 700, 701, 786, 702, 787, 0, 703, 704,
	705, 706, 697, 708, 709, 0, 0, 710, 711, 712,
	714, 716, 717, 713, 715, 718, 0, 719, 0, 0,
	720, 721, 722, 788, 789, 790, 0, 724, 725, 723,
	726, 727, 730, 728, 729, 791, 731, 732, 733, 2654,
	0, 315, 0, 734, 735, 792, 736, 737, 738, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 321, 322,
	324, 323, 325, 326, 327, 328, 0, 329, 330, 0,
	0, 0, 0, 0, 739, 0, 0, 0, 331, 0,
	332, 333, 334, 0, 335, 336, 337, 338, 339, 340,
	341, 740, 741, 0, 342, 742, 343, 743, 0, 744,
	344, 345, 346, 347, 348, 349, 350, 0, 0, 0,
	351, 745, 746, 747, 0, 352, 353, 748, 0, 0,
	0, 354, 355, 356, 357, 358, 359, 360, 361, 0,
	0, 363, 364, 365, 362, 366, 367, 0, 368, 0,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 381, 0, 0, 0, 0, 0,
	0, 0, 382, 383, 384, 385, 386, 0, 387, 389,
	749, 750, 0, 392, 394, 388, 390, 0, 393, 391,
	395, 396, 0, 397, 398, 399, 0, 0, 400, 401,
	402, 0, 403, 404, 405, 0, 406, 407, 408, 0,
	409, 410, 751, 411, 412, 413, 415, 417, 414, 416,
	418, 419, 420, 421, 422, 752, 753, 423, 0, 318,
	0, 0, 0, 0, 0, 424, 425, 426, 754, 0,
	0, 0, 427, 0, 428, 429, 430, 0, 431, 432,
	0, 0, 433, 434, 435, 755, 756, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 0, 445, 757, 0,
	758, 446, 0, 447, 448, 449, 450, 451, 452, 453,
	759, 760, 761, 547, 0, 454, 455, 456, 0, 457,
	458, 459, 460, 461, 0, 0, 0, 319, 462, 463,
	464, 0, 0, 762, 465, 548, 466, 763, 764, 0,
	765, 0, 467, 468, 470, 0, 766, 0, 469, 471,
	472, 0, 473, 0, 0, 0, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 483, 482, 0, 485, 767,
	484, 0, 486, 487, 0, 0, 488, 489, 490, 491,
	492, 493, 496, 0, 0, 494, 495, 497, 498, 0,
	499, 500, 502, 505, 501, 503, 504, 506, 519, 520,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 522, 0, 521, 0, 523, 524, 525, 526,
	527, 534, 536, 537, 532, 533, 535, 538, 539, 541,
	529, 530, 531, 0, 540, 528, 0, 320, 0, 542,
	543, 544, 545, 0, 768, 546, 769, 549, 550, 0,
	0, 551, 0, 552, 0, 0, 554, 555, 556, 0,
	0, 557, 558, 770, 0, 559, 0, 771, 560, 561,
	553, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 0, 572, 573, 772, 574, 575, 576, 773, 577,
	578, 579, 774, 580, 775, 581, 582, 0, 583, 584,
	585, 0, 586, 587, 588, 589, 590, 591, 592, 593,
	776, 594, 595, 597, 596, 598, 0, 599, 0, 600,
	601, 602, 0, 0, 0, 0, 0, 603, 604, 606,
	0, 607, 608, 609, 610, 605, 611, 612, 613, 614,
	615, 616, 0, 618, 619, 617, 620, 621, 0, 622,
	623, 624, 625, 626, 777, 627, 0, 628, 629, 637,
	638, 639, 630, 631, 633, 640, 632, 641, 642, 643,
	644, 646, 645, 0, 648, 649, 647, 650, 651, 652,
	0, 653, 778, 654, 634, 635, 655, 656, 0, 657,
	658, 659, 660, 661, 662, 663, 779, 0, 664, 0,
	665, 666, 667, 668, 669, 670, 672, 636, 673, 678,
	679, 780, 674, 675, 676, 677, 781, 681, 682, 683,
	684, 0, 685, 686, 0, 680, 671, 0, 687, 688,
	689, 690, 691, 692, 0, 693, 694, 0, 695, 782,
	783, 784, 785, 0, 707, 0, 696, 698, 699, 700,
	701, 786, 702, 787, 0, 703, 704, 705, 706, 697,
	708, 709, 0, 0, 710, 711, 712, 714, 716, 717,
	713, 715, 718, 0, 719, 0, 0, 720, 721, 722,
	788, 789, 790, 0, 724, 725, 723, 726, 727, 730,
	728, 729, 791, 731, 732, 733, 2598, 0, 315, 0,
	734, 735, 792, 736, 737, 738, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 322, 324, 323, 325,
	326, 327, 328, 0, 329, 330, 0, 0, 0, 0,
	0, 739, 0, 0, 0, 331, 0, 332, 333, 334,
	0, 335, 336, 337, 338, 339, 340, 341, 740, 741,
	0, 342, 742, 343, 743, 0, 744, 344, 345, 346,
	347, 348, 349, 350, 0, 0, 0, 351, 745, 746,
	747, 0, 352, 353, 748, 0, 0, 0, 354, 355,
	356, 357, 358, 359, 360, 361, 0, 0, 363, 364,
	365, 362, 366, 367, 0, 368, 0, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 381, 0, 0, 0, 0, 0, 0, 0, 382,
	383, 384, 385, 386, 0, 387, 389, 749, 750, 0,
	392, 394, 388, 390, 0, 393, 391, 395, 396, 0,
	397, 398, 399, 0, 0, 400, 401, 402, 0, 403,
	404, 405, 0, 406, 407, 408, 0, 409, 410, 751,
	411, 412, 413, 415, 417, 414, 416, 418, 419, 420,
	421, 422, 752, 753, 423, 0, 318, 0, 0, 0,
	0, 0, 424, 425, 426, 754, 0, 0, 0, 427,
	0, 428, 429, 430, 0, 431, 432, 0, 0, 433,
	434, 435, 755, 756, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 0, 445, 757, 0, 758, 446, 0,
	447, 448, 449, 450, 451, 452, 453, 2597, 760, 761,
	547, 0, 454, 455, 456, 0, 457, 458, 459, 460,
	461, 0, 0, 0, 319, 462, 463, 464, 0, 0,
	762, 465, 548, 466, 763, 764, 0, 765, 0, 467,
	468, 470, 0, 766, 0, 469, 471, 472, 0, 473,
	0, 0, 0, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 483, 482, 0, 485, 767, 484, 0, 486,
	487, 0, 0, 488, 489, 490, 491, 492, 493, 496,
	0, 0, 494, 495, 497, 498, 0, 499, 500, 502,
	505, 501, 503, 504, 506, 519, 520, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 522,
	0, 521, 0, 523, 524, 525, 526, 527, 534, 536,
	537, 532, 533, 535, 538, 539, 541, 529, 530, 531,
	0, 540, 528, 0, 320, 0, 542, 543, 544, 545,
	0, 768, 546, 769, 549, 550, 0, 0, 551, 0,
	552, 0, 0, 554, 555, 556, 0, 0, 557, 558,
	770, 0, 559, 0, 771, 560, 561, 553, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 0, 572,
	573, 772, 574, 575, 576, 773, 577, 578, 579, 774,
	580, 775, 581, 582, 0, 583, 584, 585, 0, 586,
	587, 588, 589, 590, 591, 592, 593, 776, 594, 595,
	597, 596, 598, 0, 599, 0, 600, 601, 602, 0,
	0, 0, 0, 0, 603, 604, 606, 0, 607, 608,
	609, 610, 605, 611, 612, 613, 614, 615, 616, 0,
	618, 619, 617, 620, 621, 0, 622, 623, 624, 625,
	626, 777, 627, 0, 628, 629, 637, 638, 639, 630,
	631, 633, 640, 632, 641, 642, 643, 644, 646, 645,
	0, 648, 649, 647, 650, 651, 652, 0, 653, 778,
	654, 634, 635, 655, 656, 0, 657, 658, 659, 660,
	661, 662, 663, 779, 0, 664, 0, 665, 666, 667,
	668, 669, 670, 672, 636, 673, 678, 679, 780, 674,
	675, 676, 677, 781, 681, 682, 683, 684, 0, 685,
	686, 0, 680, 671, 0, 687, 688, 689, 690, 691,
	692, 0, 693, 694, 0, 695, 782, 783, 784, 785,
	0, 707, 0, 696, 698, 699, 700, 701, 786, 702,
	787, 0, 703, 704, 705, 706, 697, 708, 709, 0,
	0, 710, 711, 712, 714, 716, 717, 713, 715, 718,
	0, 719, 0, 0, 720, 721, 722, 788, 789, 790,
	0, 724, 725, 723, 726, 727, 730, 728, 729, 791,
	731, 732, 733, 2582, 0, 315, 0, 734, 735, 792,
	736, 737, 738, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 321, 322, 324, 323, 325, 326, 327, 328,
	0, 329, 330, 0, 0, 0, 0, 0, 739, 0,
	0, 0, 331, 0, 332, 333, 334, 0, 335, 336,
	337, 338, 339, 340, 341, 740, 741, 0, 342, 742,
	343, 743, 0, 744, 344, 345, 346, 347, 348, 349,
	350, 0, 0, 0, 351, 745, 746, 747, 0, 352,
	353, 748, 0, 0, 0, 354, 355, 356, 357, 358,
	359, 360, 361, 0, 0, 363, 364, 365, 362, 366,
	367, 0, 368, 0, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 381, 0,
	0, 0, 0, 0, 0, 0, 382, 383, 384, 385,
	386, 0, 387, 389, 749, 750, 0, 392, 394, 388,
	390, 0, 393, 391, 395, 396, 0, 397, 398, 399,
	0, 0, 400, 401, 402, 0, 403, 404, 405, 0,
	406, 407, 408, 0, 409, 410, 751, 411, 412, 413,
	415, 417, 414, 416, 418, 419, 420, 421, 422, 752,
	753, 423, 0, 318, 0, 0, 0, 0, 0, 424,
	425, 426, 754, 0, 0, 0, 427, 0, 428, 429,
	430, 0, 431, 432, 0, 0, 433, 434, 435, 755,
	756, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	0, 445, 757, 0, 758, 446, 0, 447, 448, 449,
	450, 451, 452, 453, 2584, 760, 761, 547, 0, 454,
	455, 456, 0, 457, 458, 459, 460, 461, 0, 0,
	0, 319, 462, 463, 464, 0, 0, 762, 465, 548,
	466, 763, 764, 0, 765, 0, 467, 468, 470, 0,
	766, 0, 469, 471, 472, 0, 473, 0, 0, 0,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 483,
	482, 0, 485, 767, 484, 0, 486, 487, 0, 0,
	488, 489, 490, 491, 492, 493, 496, 0, 0, 494,
	495, 497, 498, 0, 499, 500, 502, 505, 501, 503,
	504, 506, 519, 520, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 522, 0, 521, 0,
	523, 524, 525, 526, 527, 534, 536, 537, 532, 533,
	535, 538, 539, 541, 529, 530, 531, 0, 540, 528,
	0, 320, 0, 542, 543, 544, 545, 0, 768, 546,
	769, 549, 550, 0, 0, 551, 0, 552, 0, 0,
	554, 555, 556, 0, 0, 557, 558, 770, 0, 559,
	0, 771, 560, 561, 553, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 0, 572, 573, 772, 574,
	575, 576, 773, 577, 578, 579, 774, 580, 775, 581,
	582, 0, 583, 584, 585, 0, 586, 587, 588, 589,
	590, 591, 592, 593, 776, 594, 595, 597, 596, 598,
	0, 599, 0, 600, 601, 602, 0, 0, 0, 0,
	0, 603, 604, 606, 0, 607, 608, 609, 610, 605,
	611, 612, 613, 614, 615, 616, 0, 618, 619, 617,
	620, 621, 0, 622, 623, 624, 625, 626, 777, 627,
	0, 628, 629, 637, 638, 639, 630, 631, 633, 640,
	632, 641, 642, 643, 644, 646, 645, 0, 648, 649,
	647, 650, 651, 652, 0, 653, 778, 654, 634, 635,
	655, 656, 0, 657, 658, 659, 660, 661, 662, 663,
	779, 0, 664, 0, 665, 666, 667, 668, 669, 670,
	672, 636, 673, 678, 679, 780, 674, 675, 676, 677,
	781, 681, 682, 683, 684, 0, 685, 686, 0, 680,
	671, 0, 687, 688, 689, 690, 691, 692, 0, 693,
	694, 0, 695, 782, 783, 784, 785, 0, 707, 0,
	696, 698, 699, 700, 701, 786, 702, 787, 0, 703,
	704, 705, 706, 697, 708, 709, 0, 0, 710, 711,
	712, 714, 716, 717, 713, 715, 718, 0, 719, 0,
	0, 720, 721, 722, 788, 789, 790, 0, 724, 725,
	723, 726, 727, 730, 728, 729, 791, 731, 732, 733,
	315, 0, 0, 0, 734, 735, 792, 736, 737, 738,
	0, 0, 0, 0, 0, 0, 0, 321, 322, 324,
	323, 325, 326, 327, 328, 0, 329, 330, 0, 0,
	0, 0, 0, 739, 0, 0, 0, 331, 0, 332,
	333, 334, 0, 335, 336, 337, 338, 339, 340, 341,
	740, 741, 0, 342, 742, 343, 743, 0, 744, 344,
	345, 346, 347, 348, 349, 350, 0, 0, 0, 351,
	745, 746, 747, 0, 352, 353, 748, 0, 0, 0,
	354, 355, 356, 357, 358, 359, 360, 361, 0, 0,
	363, 364, 365, 362, 366, 367, 0, 368, 0, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 381, 0, 0, 0, 0, 0, 0,
	0, 382, 383, 384, 385, 386, 0, 387, 389, 749,
	750, 0, 392, 394, 388, 390, 0, 393, 391, 395,
	396, 0, 397, 398, 399, 0, 0, 400, 401, 402,
	0, 403, 404, 405, 0, 406, 407, 408, 0, 409,
	410, 751, 411, 412, 413, 415, 417, 414, 416, 418,
	419, 420, 421, 422, 752, 753, 423, 0, 318, 0,
	0, 0, 0, 0, 424, 425, 426, 754, 0, 0,
	0, 427, 0, 428, 429, 430, 0, 431, 432, 0,
	0, 433, 434, 435, 755, 756, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 0, 445, 757, 0, 758,
	446, 0, 447, 448, 449, 450, 451, 452, 453, 2544,
	760, 761, 547, 0, 454, 455, 456, 0, 457, 458,
	459, 460, 461, 0, 0, 0, 319, 462, 463, 464,
	0, 0, 762, 465, 548, 466, 763, 764, 0, 765,
	0, 467, 468, 470, 0, 766, 0, 469, 471, 472,
	0, 473, 0, 0, 0, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 483, 482, 0, 485, 767, 484,
	0, 486, 487, 0, 0, 488, 489, 490, 491, 492,
	493, 496, 0, 0, 494, 495, 497, 498, 0, 499,
	500, 502, 505, 501, 503, 504, 506, 519, 520, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 522, 0, 521, 0, 523, 524, 525, 526, 527,
	534, 536, 537, 532, 533, 535, 538, 539, 541, 529,
	530, 531, 0, 540, 528, 0, 320, 0, 542, 543,
	544, 545, 0, 768, 546, 769, 549, 550, 0, 0,
	551, 0, 552, 0, 1408, 554, 555, 556, 0, 0,
	557, 558, 770, 0, 559, 0, 771, 560, 561, 553,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	0, 572, 573, 772, 574, 575, 576, 773, 577, 578,
	579, 774, 580, 775, 581, 582, 0, 583, 584, 585,
	0, 586, 587, 588, 589, 590, 591, 592, 593, 776,
	594, 595, 597, 596, 598, 0, 599, 0, 600, 601,
	602, 0, 0, 0, 0, 0, 603, 604, 606, 0,
	607, 608, 609, 610, 605, 611, 612, 613, 614, 615,
	616, 0, 618, 619, 617, 620, 621, 0, 622, 623,
	624, 625, 626, 777, 627, 0, 628, 629, 637, 638,
	639, 630, 631, 633, 640, 632, 641, 642, 643, 644,
	646, 645, 0, 648, 649, 647, 650, 651, 652, 0,
	653, 778, 654, 634, 635, 655, 656, 0, 657, 658,
	659, 660, 661, 662, 663, 779, 0, 664, 0, 665,
	666, 667, 668, 669, 670, 672, 636, 673, 678, 679,
	780, 674, 675, 676, 677, 781, 681, 682, 683, 684,
	0, 685, 686, 0, 680, 671, 0, 687, 688, 689,
	690, 691, 692, 0, 693, 694, 0, 695, 782, 783,
	784, 785, 0, 707, 0, 696, 698, 699, 700, 701,
	786, 702, 787, 0, 703, 704, 705, 706, 697, 708,
	709, 0, 0, 710, 711, 712, 714, 716, 717, 713,
	715, 718, 0, 719, 0, 0, 720, 721, 722, 788,
	789, 790, 0, 724, 725, 723, 726, 727, 730, 728,
	729, 791, 731, 732, 733, 1806, 0, 315, 0, 734,
	735, 792, 736, 737, 738, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 324, 323, 325, 326,
	327, 328, 0, 329, 330, 0, 0, 0, 0, 0,
	739, 0, 0, 0, 331, 0, 332, 333, 334, 0,
	335, 336, 337, 338, 339, 340, 341, 740, 741, 0,
	342, 742, 343, 743, 0, 744, 344, 345, 346, 347,
	348, 349, 350, 0, 0, 0, 351, 745, 746, 747,
	0, 352, 353, 748, 0, 0, 0, 354, 355, 356,
	357, 358, 359, 360, 361, 0, 0, 363, 364, 365,
	362, 366, 367, 0, 368, 0, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	381, 0, 0, 0, 0, 0, 0, 0, 382, 383,
	384, 385, 386, 0, 387, 389, 749, 750, 0, 392,
	394, 388, 390, 0, 393, 391, 395, 396, 0, 397,
	398, 399, 0, 0, 400, 401, 402, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 751, 411,
	412, 413, 415, 417, 414, 416, 418, 419, 420, 421,
	422, 752, 753, 423, 0, 318, 0, 0, 0, 0,
	0, 424, 425, 426, 754, 0, 0, 0, 427, 0,
	428, 429, 430, 0, 431, 432, 0, 0, 433, 434,
	435, 755, 756, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 0, 445, 757, 0, 758, 446, 0, 447,
	448, 449, 450, 451, 452, 453, 1805, 760, 761, 547,
	0, 454, 455, 456, 0, 457, 458, 459, 460, 461,
	0, 0, 0, 319, 462, 463, 464, 0, 0, 762,
	465, 548, 466, 763, 764, 0, 765, 0, 467, 468,
	470, 0, 766, 0, 469, 471, 472, 0, 473, 0,
	0, 0, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 483, 482, 0, 485, 767, 484, 0, 486, 487,
	0, 0, 488, 489, 490, 491, 492, 493, 496, 0,
	0, 494, 495, 497, 498, 0, 499, 500, 502, 505,
	501, 503, 504, 506, 519, 520, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 522, 0,
	521, 0, 523, 524, 525, 526, 527, 534, 536, 537,
	532, 533, 535, 538, 539, 541, 529, 530, 531, 0,
	540, 528, 0, 320, 0, 542, 543, 544, 545, 0,
	768, 546, 769, 549, 550, 0, 0, 551, 0, 552,
	0, 0, 554, 555, 556, 0, 0, 557, 558, 770,
	0, 559, 0, 771, 560, 561, 553, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 0, 572, 573,
	772, 574, 575, 576, 773, 577, 578, 579, 774, 580,
	775, 581, 582, 0, 583, 584, 585, 0, 586, 587,
	588, 589, 590, 591, 592, 593, 776, 594, 595, 597,
	596, 598, 0, 599, 0, 600, 601, 602, 0, 0,
	0, 0, 0, 603, 604, 606, 0, 607, 608, 609,
	610, 605, 611, 612, 613, 614, 615, 616, 0, 618,
	619, 617, 620, 621, 0, 622, 623, 624, 625, 626,
	777, 627, 0, 628, 629, 637, 638, 639, 630, 631,
	633, 640, 632, 641, 642, 643, 644, 646, 645, 0,
	648, 649, 647, 650, 651, 652, 0, 653, 778, 654,
	634, 635, 655, 656, 0, 657, 658, 659, 660, 661,
	662, 663, 779, 0, 664, 0, 665, 666, 667, 668,
	669, 670, 672, 636, 673, 678, 679, 780, 674, 675,
	676, 677, 781, 681, 682, 683, 684, 0, 685, 686,
	0, 680, 671, 0, 687, 688, 689, 690, 691, 692,
	0, 693, 694, 0, 695, 782, 783, 784, 785, 0,
	707, 0, 696, 698, 699, 700, 701, 786, 702, 787,
	0, 703, 704, 705, 706, 697, 708, 709, 0, 0,
	710, 711, 712, 714, 716, 717, 713, 715, 718, 0,
	719, 0, 0, 720, 721, 722, 788, 789, 790, 0,
	724, 725, 723, 726, 727, 730, 728, 729, 791, 731,
	732, 733, 1695, 0, 315, 0, 734, 735, 792, 736,
	737, 738, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 324, 323, 325, 326, 327, 328, 0,
	329, 330, 0, 0, 0, 0, 0, 739, 0, 0,
	0, 331, 0, 332, 333, 334, 0, 335, 336, 337,
	338, 339, 340, 341, 740, 741, 0, 342, 742, 343,
	743, 0, 744, 344, 345, 346, 347, 348, 349, 350,
	0, 0, 0, 351, 745, 746, 747, 0, 352, 353,
	748, 0, 0, 0, 354, 355, 356, 357, 358, 359,
	360, 361, 0, 0, 363, 364, 365, 362, 366, 367,
	0, 368, 0, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 381, 0, 0,
	0, 0, 0, 0, 0, 382, 383, 384, 385, 386,
	0, 387, 389, 749, 750, 0, 392, 394, 388, 390,
	0, 393, 391, 395, 396, 0, 397, 398, 399, 0,
	0, 400, 401, 402, 0, 403, 404, 405, 0, 406,
	407, 408, 0, 409, 410, 751, 411, 412, 413, 415,
	417, 414, 416, 418, 419, 420, 421, 422, 752, 753,
	423, 0, 318, 0, 0, 0, 0, 0, 424, 425,
	426, 754, 0, 0, 0, 427, 0, 428, 429, 430,
	0, 431, 432, 0, 0, 433, 434, 435, 755, 756,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 0,
	445, 757, 0, 758, 446, 0, 447, 448, 449, 450,
	451, 452, 453, 759, 760, 761, 547, 0, 454, 455,
	456, 0, 457, 458, 459, 460, 461, 0, 0, 0,
	319, 462, 463, 464, 0, 0, 762, 465, 548, 466,
	763, 764, 0, 765, 0, 467, 468, 470, 0, 766,
	0, 469, 471, 472, 0, 473, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 483, 482,
	0, 485, 767, 484, 0, 486, 487, 0, 0, 488,
	489, 490, 491, 492, 493, 496, 0, 0, 494, 495,
	497, 498, 0, 499, 500, 502, 505, 501, 503, 504,
	506, 519, 520, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 522, 0, 521, 0, 523,
	524, 525, 526, 527, 534, 536, 537, 532, 533, 535,
	538, 539, 541, 529, 530, 531, 0, 540, 528, 0,
	320, 0, 542, 543, 544, 545, 0, 768, 546, 769,
	549, 550, 0, 0, 551, 0, 552, 0, 0, 554,
	555, 556, 0, 0, 557, 558, 770, 0, 559, 0,
	771, 560, 561, 553, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 0, 572, 573, 772, 574, 575,
	576, 773, 577, 578, 579, 774, 580, 775, 581, 582,
	0, 583, 584, 585, 0, 586, 587, 588, 589, 590,
	591, 592, 593, 776, 594, 595, 597, 596, 598, 0,
	599, 0, 600, 601, 602, 0, 0, 0, 0, 0,
	603, 604, 606, 0, 607, 608, 609, 610, 605, 611,
	612, 613, 614, 615, 616, 0, 618, 619, 617, 620,
	621, 0, 622, 623, 624, 625, 626, 777, 627, 0,
	628, 629, 637, 638, 639, 630, 631, 633, 640, 632,
	641, 642, 643, 644, 646, 645, 0, 648, 649, 647,
	650, 651, 652, 0, 653, 778, 654, 634, 635, 655,
	656, 0, 657, 658, 659, 660, 661, 662, 663, 779,
	0, 664, 0, 665, 666, 667, 668, 669, 670, 672,
	636, 673, 678, 679, 780, 674, 675, 676, 677, 781,
	681, 682, 683, 684, 0, 685, 686, 0, 680, 671,
	0, 687, 688, 689, 690, 691, 692, 0, 693, 694,
	0, 695, 782, 783, 784, 785, 0, 707, 0, 696,
	698, 699, 700, 701, 786, 702, 787, 0, 703, 704,
	705, 706, 697, 708, 709, 0, 0, 710, 711, 712,
	714, 716, 717, 713, 715, 718, 0, 719, 0, 0,
	720, 721, 722, 788, 789, 790, 0, 724, 725, 723,
	726, 727, 730, 728, 729, 791, 731, 732, 733, 1688,
	0, 315, 0, 734, 735, 792, 736, 737, 738, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 321, 322,
	324, 323, 325, 326, 327, 328, 0, 329, 330, 0,
	0, 0, 0, 0, 739, 0, 0, 0, 331, 0,
	332, 333, 334, 0, 335, 336, 337, 338, 339, 340,
	341, 740, 741, 0, 342, 742, 343, 743, 0, 744,
	344, 345, 346, 347, 348, 349, 350, 0, 0, 0,
	351, 745, 746, 747, 0, 352, 353, 748, 0, 0,
	0, 354, 355, 356, 357, 358, 359, 360, 361, 0,
	0, 363, 364, 365, 362, 366, 367, 0, 368, 0,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 381, 0, 0, 0, 0, 0,
	0, 0, 382, 383, 384, 385, 386, 0, 387, 389,
	749, 750, 0, 392, 394, 388, 390, 0, 393, 391,
	395, 396, 0, 397, 398, 399, 0, 0, 400, 401,
	402, 0, 403, 404, 405, 0, 406, 407, 408, 0,
	409, 410, 751, 411, 412, 413, 415, 417, 414, 416,
	418, 419, 420, 421, 422, 752, 753, 423, 0, 318,
	0, 0, 0, 0, 0, 424, 425, 426, 754, 0,
	0, 0, 427, 0, 428, 429, 430, 0, 431, 432,
	0, 0, 433, 434, 435, 755, 756, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 0, 445, 757, 0,
	758, 446, 0, 447, 448, 449, 450, 451, 452, 453,
	1690, 760, 761, 547, 0, 454, 455, 456, 0, 457,
	458, 459, 460, 461, 0, 0, 0, 319, 462, 463,
	464, 0, 0, 762, 465, 548, 466, 763, 764, 0,
	765, 0, 467, 468, 470, 0, 766, 0, 469, 471,
	472, 0, 473, 0, 0, 0, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 483, 482, 0, 485, 767,
	484, 0, 486, 487, 0, 0, 488, 489, 490, 491,
	492, 493, 496, 0, 0, 494, 495, 497, 498, 0,
	499, 500, 502, 505, 501, 503, 504, 506, 519, 520,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 522, 0, 521, 0, 523, 524, 525, 526,
	527, 534, 536, 537, 532, 533, 535, 538, 539, 541,
	529, 530, 531, 0, 540, 528, 0, 320, 0, 542,
	543, 544, 545, 0, 768, 546, 769, 549, 550, 0,
	0, 551, 0, 552, 0, 0, 554, 555, 556, 0,
	0, 557, 558, 770, 0, 559, 0, 771, 560, 561,
	553, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 0, 572, 573, 772, 574, 575, 576, 773, 577,
	578, 579, 774, 580, 775, 581, 582, 0, 583, 584,
	585, 0, 586, 587, 588, 589, 590, 591, 592, 593,
	776, 594, 595, 597, 596, 598, 0, 599, 0, 600,
	601, 602, 0, 0, 0, 0, 0, 603, 604, 606,
	0, 607, 608, 609, 610, 605, 611, 612, 613, 614,
	615, 616, 0, 618, 619, 617, 620, 621, 0, 622,
	623, 624, 625, 626, 777, 627, 0, 628, 629, 637,
	638, 639, 630, 631, 633, 640, 632, 641, 642, 643,
	644, 646, 645, 0, 648, 649, 647, 650, 651, 652,
	0, 653, 778, 654, 634, 635, 655, 656, 0, 657,
	658, 659, 660, 661, 662, 663, 779, 0, 664, 0,
	665, 666, 667, 668, 669, 670, 672, 636, 673, 678,
	679, 780, 674, 675, 676, 677, 781, 681, 682, 683,
	684, 0, 685, 686, 0, 680, 671, 0, 687, 688,
	689, 690, 691, 692, 0, 693, 694, 0, 695, 782,
	783, 784, 785, 0, 707, 0, 696, 698, 699, 700,
	701, 786, 702, 787, 0, 703, 704, 705, 706, 697,
	708, 709, 0, 0, 710, 711, 712, 714, 716, 717,
	713, 715, 718, 0, 719, 0, 0, 720, 721, 722,
	788, 789, 790, 0, 724, 725, 723, 726, 727, 730,
	728, 729, 791, 731, 732, 733, 1496, 0, 315, 0,
	734, 735, 792, 736, 737, 738, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 322, 324, 323, 325,
	326, 327, 328, 0, 329, 330, 0, 0, 0, 0,
	0, 739, 0, 0, 0, 331, 0, 332, 333, 334,
	0, 335, 336, 337, 338, 339, 340, 341, 740, 741,
	0, 342, 742, 343, 743, 0, 744, 344, 345, 346,
	347, 348, 349, 350, 0, 0, 0, 351, 745, 746,
	747, 0, 352, 353, 748, 0, 0, 0, 354, 355,
	356, 357, 358, 359, 360, 361, 0, 0, 363, 364,
	365, 362, 366, 367, 0, 368, 0, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 381, 0, 0, 0, 0, 0, 0, 0, 382,
	383, 384, 385, 386, 0, 387, 389, 749, 750, 0,
	392, 394, 388, 390, 0, 393, 391, 395, 396, 0,
	397, 398, 399, 0, 0, 400, 401, 402, 0, 403,
	404, 405, 0, 406, 407, 408, 0, 409, 410, 751,
	411, 412, 413, 415, 417, 414, 416, 418, 419, 420,
	421, 422, 752, 753, 423, 0, 318, 0, 0, 0,
	0, 0, 424, 425, 426, 754, 0, 0, 0, 427,
	0, 428, 429, 430, 0, 431, 432, 0, 0, 433,
	434, 435, 755, 756, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 0, 445, 757, 0, 758, 446, 0,
	447, 448, 449, 450, 451, 452, 453, 1495, 760, 761,
	547, 0, 454, 455, 456, 0, 457, 458, 459, 460,
	461, 0, 0, 0, 319, 462, 463, 464, 0, 0,
	762, 465, 548, 466, 763, 764, 0, 765, 0, 467,
	468, 470, 0, 766, 0, 469, 471, 472, 0, 473,
	0, 0, 0, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 483, 482, 0, 485, 767, 484, 0, 486,
	487, 0, 0, 488, 489, 490, 491, 492, 493, 496,
	0, 0, 494, 495, 497, 498, 0, 499, 500, 502,
	505, 501, 503, 504, 506, 519, 520, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 522,
	0, 521, 0, 523, 524, 525, 526, 527, 534, 536,
	537, 532, 533, 535, 538, 539, 541, 529, 530, 531,
	0, 540, 528, 0, 320, 0, 542, 543, 544, 545,
	0, 768, 546, 769, 549, 550, 0, 0, 551, 0,
	552, 0, 0, 554, 555, 556, 0, 0, 557, 558,
	770, 0, 559, 0, 771, 560, 561, 553, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 0, 572,
	573, 772, 574, 575, 576, 773, 577, 578, 579, 774,
	580, 775, 581, 582, 0, 583, 584, 585, 0, 586,
	587, 588, 589, 590, 591, 592, 593, 776, 594, 595,
	597, 596, 598, 0, 599, 0, 600, 601, 602, 0,
	0, 0, 0, 0, 603, 604, 606, 0, 607, 608,
	609, 610, 605, 611, 612, 613, 614, 615, 616, 0,
	618, 619, 617, 620, 621, 0, 622, 623, 624, 625,
	626, 777, 627, 0, 628, 629, 637, 638, 639, 630,
	631, 633, 640, 632, 641, 642, 643, 644, 646, 645,
	0, 648, 649, 647, 650, 651, 652, 0, 653, 778,
	654, 634, 635, 655, 656, 0, 657, 658, 659, 660,
	661, 662, 663, 779, 0, 664, 0, 665, 666, 667,
	668, 669, 670, 672, 636, 673, 678, 679, 780, 674,
	675, 676, 677, 781, 681, 682, 683, 684, 0, 685,
	686, 0, 680, 671, 0, 687, 688, 689, 690, 691,
	692, 0, 693, 694, 0, 695, 782, 783, 784, 785,
	0, 707, 0, 696, 698, 699, 700, 701, 786, 702,
	787, 0, 703, 704, 705, 706, 697, 708, 709, 0,
	0, 710, 711, 712, 714, 716, 717, 713, 715, 718,
	0, 719, 0, 0, 720, 721, 722, 788, 789, 790,
	0, 724, 725, 723, 726, 727, 730, 728, 729, 791,
	731, 732, 733, 1485, 0, 315, 0, 734, 735, 792,
	736, 737, 738, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 321, 322, 324, 323, 325, 326, 327, 328,
	0, 329, 330, 0, 0, 0, 0, 0, 739, 0,
	0, 0, 331, 0, 332, 333, 334, 0, 335, 336,
	337, 338, 339, 340, 341, 740, 741, 0, 342, 742,
	343, 743, 0, 744, 344, 345, 346, 347, 348, 349,
	350, 0, 0, 0, 351, 745, 746, 747, 0, 352,
	353, 748, 0, 0, 0, 354, 355, 356, 357, 358,
	359, 360, 361, 0, 0, 363, 364, 365, 362, 366,
	367, 0, 368, 0, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 381, 0,
	0, 0, 0, 0, 0, 0, 382, 383, 384, 385,
	386, 0, 387, 389, 749, 750, 0, 392, 394, 388,
	390, 0, 393, 391, 395, 396, 0, 397, 398, 399,
	0, 0, 400, 401, 402, 0, 403, 404, 405, 0,
	406, 407, 408, 0, 409, 410, 751, 411, 412, 413,
	415, 417, 414, 416, 418, 419, 420, 421, 422, 752,
	753, 423, 0, 318, 0, 0, 0, 0, 0, 424,
	425, 426, 754, 0, 0, 0, 427, 0, 428, 429,
	430, 0, 431, 432, 0, 0, 433, 434, 435, 755,
	756, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	0, 445, 757, 0, 758, 446, 0, 447, 448, 449,
	450, 451, 452, 453, 1484, 760, 761, 547, 0, 454,
	455, 456, 0, 457, 458, 459, 460, 461, 0, 0,
	0, 319, 462, 463, 464, 0, 0, 762, 465, 548,
	466, 763, 764, 0, 765, 0, 467, 468, 470, 0,
	766, 0, 469, 471, 472, 0, 473, 0, 0, 0,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 483,
	482, 0, 485, 767, 484, 0, 486, 487, 0, 0,
	488, 489, 490, 491, 492, 493, 496, 0, 0, 494,
	495, 497, 498, 0, 499, 500, 502, 505, 501, 503,
	504, 506, 519, 520, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 522, 0, 521, 0,
	523, 524, 525, 526, 527, 534, 536, 537, 532, 533,
	535, 538, 539, 541, 529, 530, 531, 0, 540, 528,
	0, 320, 0, 542, 543, 544, 545, 0, 768, 546,
	769, 549, 550, 0, 0, 551, 0, 552, 0, 0,
	554, 555, 556, 0, 0, 557, 558, 770, 0, 559,
	0, 771, 560, 561, 553, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 0, 572, 573, 772, 574,
	575, 576, 773, 577, 578, 579, 774, 580, 775, 581,
	582, 0, 583, 584, 585, 0, 586, 587, 588, 589,
	590, 591, 592, 593, 776, 594, 595, 597, 596, 598,
	0, 599, 0, 600, 601, 602, 0, 0, 0, 0,
	0, 603, 604, 606, 0, 607, 608, 609, 610, 605,
	611, 612, 613, 614, 615, 616, 0, 618, 619, 617,
	620, 621, 0, 622, 623, 624, 625, 626, 777, 627,
	0, 628, 629, 637, 638, 639, 630, 631, 633, 640,
	632, 641, 642, 643, 644, 646, 645, 0, 648, 649,
	647, 650, 651, 652, 0, 653, 778, 654, 634, 635,
	655, 656, 0, 657, 658, 659, 660, 661, 662, 663,
	779, 0, 664, 0, 665, 666, 667, 668, 669, 670,
	672, 636, 673, 678, 679, 780, 674, 675, 676, 677,
	781, 681, 682, 683, 684, 0, 685, 686, 0, 680,
	671, 0, 687, 688, 689, 690, 691, 692, 0, 693,
	694, 0, 695, 782, 783, 784, 785, 0, 707, 0,
	696, 698, 699, 700, 701, 786, 702, 787, 0, 703,
	704, 705, 706, 697, 708, 709, 0, 0, 710, 711,
	712, 714, 716, 717, 713, 715, 718, 0, 719, 0,
	0, 720, 721, 722, 788, 789, 790, 0, 724, 725,
	723, 726, 727, 730, 728, 729, 791, 731, 732, 733,
	1481, 0, 315, 0, 734, 735, 792, 736, 737, 738,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 321,
	322, 324, 323, 325, 326, 327, 328, 0, 329, 330,
	0, 0, 0, 0, 0, 739, 0, 0, 0, 331,
	0, 332, 333, 334, 0, 335, 336, 337, 338, 339,
	340, 341, 740, 741, 0, 342, 742, 343, 743, 0,
	744, 344, 345, 346, 347, 348, 349, 350, 0, 0,
	0, 351, 745, 746, 747, 0, 352, 353, 748, 0,
	0, 0, 354, 355, 356, 357, 358, 359, 360, 361,
	0, 0, 363, 364, 365, 362, 366, 367, 0, 368,
	0, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 381, 0, 0, 0, 0,
	0, 0, 0, 382, 383, 384, 385, 386, 0, 387,
	389, 749, 750, 0, 392, 394, 388, 390, 0, 393,
	391, 395, 396, 0, 397, 398, 399, 0, 0, 400,
	401, 402, 0, 403, 404, 405, 0, 406, 407, 408,
	0, 409, 410, 751, 411, 412, 413, 415, 417, 414,
	416, 418, 419, 420, 421, 422, 752, 753, 423, 0,
	318, 0, 0, 0, 0, 0, 424, 425, 426, 754,
	0, 0, 0, 427, 0, 428, 429, 430, 0, 431,
	432, 0, 0, 433, 434, 435, 755, 756, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 0, 445, 757,
	0, 758, 446, 0, 447, 448, 449, 450, 451, 452,
	453, 1480, 760, 761, 547, 0, 454, 455, 456, 0,
	457, 458, 459, 460, 461, 0, 0, 0, 319, 462,
	463, 464, 0, 0, 762, 465, 548, 466, 763, 764,
	0, 765, 0, 467, 468, 470, 0, 766, 0, 469,
	471, 472, 0, 473, 0, 0, 0, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 483, 482, 0, 485,
	767, 484, 0, 486, 487, 0, 0, 488, 489, 490,
	491, 492, 493, 496, 0, 0, 494, 495, 497, 498,
	0, 499, 500, 502, 505, 501, 503, 504, 506, 519,
	520, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 522, 0, 521, 0, 523, 524, 525,
	526, 527, 534, 536, 537, 532, 533, 535, 538, 539,
	541, 529, 530, 531, 0, 540, 528, 0, 320, 0,
	542, 543, 544, 545, 0, 768, 546, 769, 549, 550,
	0, 0, 551, 0, 552, 0, 0, 554, 555, 556,
	0, 0, 557, 558, 770, 0, 559, 0, 771, 560,
	561, 553, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 0, 572, 573, 772, 574, 575, 576, 773,
	577, 578, 579, 774, 580, 775, 581, 582, 0, 583,
	584, 585, 0, 586, 587, 588, 589, 590, 591, 592,
	593, 776, 594, 595, 597, 596, 598, 0, 599, 0,
	600, 601, 602, 0, 0, 0, 0, 0, 603, 604,
	606, 0, 607, 608, 609, 610, 605, 611, 612, 613,
	614, 615, 616, 0, 618, 619, 617, 620, 621, 0,
	622, 623, 624, 625, 626, 777, 627, 0, 628, 629,
	637, 638, 639, 630, 631, 633, 640, 632, 641, 642,
	643, 644, 646, 645, 0, 648, 649, 647, 650, 651,
	652, 0, 653, 778, 654, 634, 635, 655, 656, 0,
	657, 658, 659, 660, 661, 662, 663, 779, 0, 664,
	0, 665, 666, 667, 668, 669, 670, 672, 636, 673,
	678, 679, 780, 674, 675, 676, 677, 781, 681, 682,
	683, 684, 0, 685, 686, 0, 680, 671, 0, 687,
	688, 689, 690, 691, 692, 0, 693, 694, 0, 695,
	782, 783, 784, 785, 0, 707, 0, 696, 698, 699,
	700, 701, 786, 702, 787, 0, 703, 704, 705, 706,
	697, 708, 709, 0, 0, 710, 711, 712, 714, 716,
	717, 713, 715, 718, 0, 719, 0, 0, 720, 721,
	722, 788, 789, 790, 0, 724, 725, 723, 726, 727,
	730, 728, 729, 791, 731, 732, 733, 1475, 0, 315,
	0, 734, 735, 792, 736, 737, 738, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 324, 323,
	325, 326, 327, 328, 0, 329, 330, 0, 0, 0,
	0, 0, 739, 0, 0, 0, 331, 0, 332, 333,
	334, 0, 335, 336, 337, 338, 339, 340, 341, 740,
	741, 0, 342, 742, 343, 743, 0, 744, 344, 345,
	346, 347, 348, 349, 350, 0, 0, 0, 351, 745,
	746, 747, 0, 352, 353, 748, 0, 0, 0, 354,
	355, 356, 357, 358, 359, 360, 361, 0, 0, 363,
	364, 365, 362, 366, 367, 0, 368, 0, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 381, 0, 0, 0, 0, 0, 0, 0,
	382, 383, 384, 385, 386, 0, 387, 389, 749, 750,
	0, 392, 394, 388, 390, 0, 393, 391, 395, 396,
	0, 397, 398, 399, 0, 0, 400, 401, 402, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	751, 411, 412, 413, 415, 417, 414, 416, 418, 419,
	420, 421, 422, 752, 753, 423, 0, 318, 0, 0,
	0, 0, 0, 424, 425, 426, 754, 0, 0, 0,
	427, 0, 428, 429, 430, 0, 431, 432, 0, 0,
	433, 434, 435, 755, 756, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 0, 445, 757, 0, 758, 446,
	0, 447, 448, 449, 450, 451, 452, 453, 1474, 760,
	761, 547, 0, 454, 455, 456, 0, 457, 458, 459,
	460, 461, 0, 0, 0, 319, 462, 463, 464, 0,
	0, 762, 465, 548, 466, 763, 764, 0, 765, 0,
	467, 468, 470, 0, 766, 0, 469, 471, 472, 0,
	473, 0, 0, 0, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 483, 482, 0, 485, 767, 484, 0,
	486, 487, 0, 0, 488, 489, 490, 491, 492, 493,
	496, 0, 0, 494, 495, 497, 498, 0, 499, 500,
	502, 505, 501, 503, 504, 506, 519, 520, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	522, 0, 521, 0, 523, 524, 525, 526, 527, 534,
	536, 537, 532, 533, 535, 538, 539, 541, 529, 530,
	531, 0, 540, 528, 0, 320, 0, 542, 543, 544,
	545, 0, 768, 546, 769, 549, 550, 0, 0, 551,
	0, 552, 0, 0, 554, 555, 556, 0, 0, 557,
	558, 770, 0, 559, 0, 771, 560, 561, 553, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 0,
	572, 573, 772, 574, 575, 576, 773, 577, 578, 579,
	774, 580, 775, 581, 582, 0, 583, 584, 585, 0,
	586, 587, 588, 589, 590, 591, 592, 593, 776, 594,
	595, 597, 596, 598, 0, 599, 0, 600, 601, 602,
	0, 0, 0, 0, 0, 603, 604, 606, 0, 607,
	608, 609, 610, 605, 611, 612, 613, 614, 615, 616,
	0, 618, 619, 617, 620, 621, 0, 622, 623, 624,
	625, 626, 777, 627, 0, 628, 629, 637, 638, 639,
	630, 631, 633, 640, 632, 641, 642, 643, 644, 646,
	645, 0, 648, 649, 647, 650, 651, 652, 0, 653,
	778, 654, 634, 635, 655, 656, 0, 657, 658, 659,
	660, 661, 662, 663, 779, 0, 664, 0, 665, 666,
	667, 668, 669, 670, 672, 636, 673, 678, 679, 780,
	674, 675, 676, 677, 781, 681, 682, 683, 684, 0,
	685, 686, 0, 680, 671, 0, 687, 688, 689, 690,
	691, 692, 0, 693, 694, 0, 695, 782, 783, 784,
	785, 0, 707, 0, 696, 698, 699, 700, 701, 786,
	702, 787, 0, 703, 704, 705, 706, 697, 708, 709,
	0, 0, 710, 711, 712, 714, 716, 717, 713, 715,
	718, 0, 719, 0, 0, 720, 721, 722, 788, 789,
	790, 0, 724, 725, 723, 726, 727, 730, 728, 729,
	791, 731, 732, 733, 1452, 0, 315, 0, 734, 735,
	792, 736, 737, 738, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 321, 322, 324, 323, 325, 326, 327,
	328, 0, 329, 330, 0, 0, 0, 0, 0, 739,
	0, 0, 0, 331, 0, 332, 333, 334, 0, 335,
	336, 337, 338, 339, 340, 341, 740, 741, 0, 342,
	742, 343, 743, 0, 744, 344, 345, 346, 347, 348,
	349, 350, 0, 0, 0, 351, 745, 746, 747, 0,
	352, 353, 748, 0, 0, 0, 354, 355, 356, 357,
	358, 359, 360, 361, 0, 0, 363, 364, 365, 362,
	366, 367, 0, 368, 0, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 381,
	0, 0, 0, 0, 0, 0, 0, 382, 383, 384,
	385, 386, 0, 387, 389, 749, 750, 0, 392, 394,
	388, 390, 0, 393, 391, 395, 396, 0, 397, 398,
	399, 0, 0, 400, 401, 402, 0, 403, 404, 405,
	0, 406, 407, 408, 0, 409, 410, 751, 411, 412,
	413, 415, 417, 414, 416, 418, 419, 420, 421, 422,
	752, 753, 423, 0, 318, 0, 0, 0, 0, 0,
	424, 425, 426, 754, 0, 0, 0, 427, 0, 428,
	429, 430, 0, 431, 432, 0, 0, 433, 434, 435,
	755, 756, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 0, 445, 757, 0, 758, 446, 0, 447, 448,
	449, 450, 451, 452, 453, 1451, 760, 761, 547, 0,
	454, 455, 456, 0, 457, 458, 459, 460, 461, 0,
	0, 0, 319, 462, 463, 464, 0, 0, 762, 465,
	548, 466, 763, 764, 0, 765, 0, 467, 468, 470,
	0, 766, 0, 469, 471, 472, 0, 473, 0, 0,
	0, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	483, 482, 0, 485, 767, 484, 0, 486, 487, 0,
	0, 488, 489, 490, 491, 492, 493, 496, 0, 0,
	494, 495, 497, 498, 0, 499, 500, 502, 505, 501,
	503, 504, 506, 519, 520, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 522, 0, 521,
	0, 523, 524, 525, 526, 527, 534, 536, 537, 532,
	533, 535, 538, 539, 541, 529, 530, 531, 0, 540,
	528, 0, 320, 0, 542, 543, 544, 545, 0, 768,
	546, 769, 549, 550, 0, 0, 551, 0, 552, 0,
	0, 554, 555, 556, 0, 0, 557, 558, 770, 0,
	559, 0, 771, 560, 561, 553, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 0, 572, 573, 772,
	574, 575, 576, 773, 577, 578, 579, 774, 580, 775,
	581, 582, 0, 583, 584, 585, 0, 586, 587, 588,
	589, 590, 591, 592, 593, 776, 594, 595, 597, 596,
	598, 0, 599, 0, 600, 601, 602, 0, 0, 0,
	0, 0, 603, 604, 606, 0, 607, 608, 609, 610,
	605, 611, 612, 613, 614, 615, 616, 0, 618, 619,
	617, 620, 621, 0, 622, 623, 624, 625, 626, 777,
	627, 0, 628, 629, 637, 638, 639, 630, 631, 633,
	640, 632, 641, 642, 643, 644, 646, 645, 0, 648,
	649, 647, 650, 651, 652, 0, 653, 778, 654, 634,
	635, 655, 656, 0, 657, 658, 659, 660, 661, 662,
	663, 779, 0, 664, 0, 665, 666, 667, 668, 669,
	670, 672, 636, 673, 678, 679, 780, 674, 675, 676,
	677, 781, 681, 682, 683, 684, 0, 685, 686, 0,
	680, 671, 0, 687, 688, 689, 690, 691, 692, 0,
	693, 694, 0, 695, 782, 783, 784, 785, 0, 707,
	0, 696, 698, 699, 700, 701, 786, 702, 787, 0,
	703, 704, 705, 706, 697, 708, 709, 0, 0, 710,
	711, 712, 714, 716, 717, 713, 715, 718, 0, 719,
	0, 0, 720, 721, 722, 788, 789, 790, 0, 724,
	725, 723, 726, 727, 730, 728, 729, 791, 731, 732,
	733, 794, 0, 315, 0, 734, 735, 792, 736, 737,
	738, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	321, 322, 324, 323, 325, 326, 327, 328, 0, 329,
	330, 0, 0, 0, 0, 0, 739, 0, 0, 0,
	331, 0, 332, 333, 334, 0, 335, 336, 337, 338,
	339, 340, 341, 740, 741, 0, 342, 742, 343, 743,
	0, 744, 344, 345, 346, 347, 348, 349, 350, 0,
	0, 0, 351, 745, 746, 747, 0, 352, 353, 748,
	0, 0, 0, 354, 355, 356, 357, 358, 359, 360,
	361, 0, 0, 363, 364, 365, 362, 366, 367, 0,
	368, 0, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 381, 0, 0, 0,
	0, 0, 0, 0, 382, 383, 384, 385, 386, 0,
	387, 389, 749, 750, 0, 392, 394, 388, 390, 0,
	393, 391, 395, 396, 0, 397, 398, 399, 0, 0,
	400, 401, 402, 0, 403, 404, 405, 0, 406, 407,
	408, 0, 409, 410, 751, 411, 412, 413, 415, 417,
	414, 416, 418, 419, 420, 421, 422, 752, 753, 423,
	0, 318, 0, 0, 0, 0, 0, 424, 425, 426,
	754, 0, 0, 0, 427, 0, 428, 429, 430, 0,
	431, 432, 0, 0, 433, 434, 435, 755, 756, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 0, 445,
	757, 0, 758, 446, 0, 447, 448, 449, 450, 451,
	452, 453, 759, 760, 761, 547, 0, 454, 455, 456,
	0, 457, 458, 459, 460, 461, 0, 0, 0, 319,
	462, 463, 464, 0, 0, 762, 465, 548, 466, 763,
	764, 0, 765, 0, 467, 468, 470, 0, 766, 0,
	469, 471, 472, 0, 473, 0, 0, 0, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 483, 482, 0,
	485, 767, 484, 0, 486, 487, 0, 0, 488, 489,
	490, 491, 492, 493, 496, 0, 0, 494, 495, 497,
	498, 0, 499, 500, 502, 505, 501, 503, 504, 506,
	519, 520, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 522, 0, 521, 0, 523, 524,
	525, 526, 527, 534, 536, 537, 532, 533, 535, 538,
	539, 541, 529, 530, 531, 0, 540, 528, 0, 320,
	0, 542, 543, 544, 545, 0, 768, 546, 769, 549,
	550, 0, 0, 551, 0, 552, 0, 0, 554, 555,
	556, 0, 0, 557, 558, 770, 0, 559, 0, 771,
	560, 561, 553, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 0, 572, 573, 772, 574, 575, 576,
	773, 577, 578, 579, 774, 580, 775, 581, 582, 0,
	583, 584, 585, 0, 586, 587, 588, 589, 590, 591,
	592, 593, 776, 594, 595, 597, 596, 598, 0, 599,
	0, 600, 601, 602, 0, 0, 0, 0, 0, 603,
	604, 606, 0, 607, 608, 609, 610, 605, 611, 612,
	613, 614, 615, 616, 0, 618, 619, 617, 620, 621,
	0, 622, 623, 624, 625, 626, 777, 627, 0, 628,
	629, 637, 638, 639, 630, 631, 633, 640, 632, 641,
	642, 643, 644, 646, 645, 0, 648, 649, 647, 650,
	651, 652, 0, 653, 778, 654, 634, 635, 655, 656,
	0, 657, 658, 659, 660, 661, 662, 663, 779, 0,
	664, 0, 665, 666, 667, 668, 669, 670, 672, 636,
	673, 678, 679, 780, 674, 675, 676, 677, 781, 681,
	682, 683, 684, 0, 685, 686, 0, 680, 671, 0,
	687, 688, 689, 690, 691, 692, 0, 693, 694, 0,
	695, 782, 783, 784, 785, 0, 707, 0, 696, 698,
	699, 700, 701, 786, 702, 787, 0, 703, 704, 705,
	706, 697, 708, 709, 0, 0, 710, 711, 712, 714,
	716, 717, 713, 715, 718, 0, 719, 0, 0, 720,
	721, 722, 788, 789, 790, 0, 724, 725, 723, 726,
	727, 730, 728, 729, 791, 731, 732, 733, 306, 0,
	315, 0, 734, 735, 792, 736, 737, 738, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 322, 324,
	323, 325, 326, 327, 328, 0, 329, 330, 0, 0,
	0, 0, 0, 739, 0, 0, 0, 331, 0, 332,
	333, 334, 0, 335, 336, 337, 338, 339, 340, 341,
	740, 741, 0, 342, 742, 343, 743, 0, 744, 344,
	345, 346, 347, 348, 349, 350, 0, 0, 0, 351,
	745, 746, 747, 0, 352, 353, 748, 0, 0, 0,
	354, 355, 356, 357, 358, 359, 360, 361, 0, 0,
	363, 364, 365, 362, 366, 367, 0, 368, 0, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 381, 0, 0, 0, 0, 0, 0,
	0, 382, 383, 384, 385, 386, 0, 387, 389, 749,
	750, 0, 392, 394, 388, 390, 0, 393, 391, 395,
	396, 0, 397, 398, 399, 0, 0, 400, 401, 402,
	0, 403, 404, 405, 0, 406, 407, 408, 0, 409,
	410, 751, 411, 412, 413, 415, 417, 414, 416, 418,
	419, 420, 421, 422, 752, 753, 423, 0, 318, 0,
	0, 0, 0, 0, 424, 425, 426, 754, 0, 0,
	0, 427, 0, 428, 429, 430, 0, 431, 432, 0,
	0, 433, 434, 435, 755, 756, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 0, 445, 757, 0, 758,
	446, 0, 447, 448, 449, 450, 451, 452, 453, 759,
	760, 761, 547, 0, 454, 455, 456, 0, 457, 458,
	459, 460, 461, 0, 0, 0, 319, 462, 463, 464,
	0, 0, 762, 465, 548, 466, 763, 764, 0, 765,
	0, 467, 468, 470, 0, 766, 0, 469, 471, 472,
	0, 473, 0, 0, 0, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 483, 482, 0, 485, 767, 484,
	0, 486, 487, 0, 0, 488, 489, 490, 491, 492,
	493, 496, 0, 0, 494, 495, 497, 498, 0, 499,
	500, 502, 505, 501, 503, 504, 506, 519, 520, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 522, 0, 521, 0, 523, 524, 525, 526, 527,
	534, 536, 537, 532, 533, 535, 538, 539, 541, 529,
	530, 531, 0, 540, 528, 0, 320, 0, 542, 543,
	544, 545, 0, 768, 546, 769, 549, 550, 0, 0,
	551, 0, 552, 0, 0, 554, 555, 556, 0, 0,
	557, 558, 770, 0, 559, 0, 771, 560, 561, 553,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	0, 572, 573, 772, 574, 575, 576, 773, 577, 578,
	579, 774, 580, 775, 581, 582, 0, 583, 584, 585,
	0, 586, 587, 588, 589, 590, 591, 592, 593, 776,
	594, 595, 597, 596, 598, 0, 599, 0, 600, 601,
	602, 0, 0, 0, 0, 0, 603, 604, 606, 0,
	607, 608, 609, 610, 605, 611, 612, 613, 614, 615,
	616, 0, 618, 619, 617, 620, 621, 0, 622, 623,
	624, 625, 626, 777, 627, 0, 628, 629, 637, 638,
	639, 630, 631, 633, 640, 632, 641, 642, 643, 644,
	646, 645, 0, 648, 649, 647, 650, 651, 652, 0,
	653, 778, 654, 634, 635, 655, 656, 0, 657, 658,
	659, 660, 661, 662, 663, 779, 0, 664, 0, 665,
	666, 667, 668, 669, 670, 672, 636, 673, 678, 679,
	780, 674, 675, 676, 677, 781, 681, 682, 683, 684,
	0, 685, 686, 0, 680, 671, 0, 687, 688, 689,
	690, 691, 692, 0, 693, 694, 0, 695, 782, 783,
	784, 785, 0, 707, 0, 696, 698, 699, 700, 701,
	786, 702, 787, 0, 703, 704, 705, 706, 697, 708,
	709, 0, 0, 710, 711, 712, 714, 716, 717, 713,
	715, 718, 0, 719, 0, 0, 720, 721, 722, 788,
	789, 790, 0, 724, 725, 723, 726, 727, 730, 728,
	729, 791, 731, 732, 733, 315, 0, 0, 0, 734,
	735, 792, 736, 737, 738, 0, 0, 0, 0, 0,
	0, 0, 321, 322, 324, 323, 325, 326, 327, 328,
	0, 329, 330, 0, 0, 0, 0, 0, 739, 0,
	0, 0, 331, 0, 332, 333, 334, 0, 335, 336,
	337, 338, 339, 340, 341, 740, 741, 0, 342, 742,
	343, 743, 0, 744, 344, 345, 346, 347, 348, 349,
	350, 0, 0, 0, 351, 745, 746, 747, 0, 352,
	353, 748, 0, 0, 0, 354, 355, 356, 357, 358,
	359, 360, 361, 0, 0, 363, 364, 365, 362, 366,
	367, 0, 368, 0, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 381, 0,
	0, 0, 0, 0, 0, 0, 382, 383, 384, 385,
	386, 0, 387, 389, 749, 750, 0, 392, 394, 388,
	390, 0, 393, 391, 395, 396, 0, 397, 398, 399,
	0, 0, 400, 401, 402, 0, 403, 404, 405, 0,
	406, 407, 408, 0, 409, 410, 751, 411, 412, 413,
	415, 417, 414, 416, 418, 419, 420, 421, 422, 752,
	753, 423, 0, 318, 0, 0, 0, 0, 0, 424,
	425, 426, 754, 0, 0, 0, 427, 0, 428, 429,
	430, 0, 431, 432, 0, 0, 433, 434, 435, 755,
	756, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	0, 445, 757, 0, 758, 446, 0, 447, 448, 449,
	450, 451, 452, 453, 759, 760, 761, 547, 0, 454,
	455, 456, 0, 457, 458, 459, 460, 461, 0, 0,
	0, 319, 462, 463, 464, 0, 0, 762, 465, 548,
	466, 763, 764, 0, 765, 0, 467, 468, 470, 0,
	766, 0, 469, 471, 472, 0, 473, 0, 0, 0,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 483,
	482, 0, 485, 767, 484, 0, 486, 487, 0, 0,
	488, 489, 490, 491, 492, 493, 496, 0, 0, 494,
	495, 497, 498, 0, 499, 500, 502, 505, 501, 503,
	504, 506, 519, 520, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 522, 0, 521, 0,
	523, 524, 525, 526, 527, 534, 536, 537, 532, 533,
	535, 538, 539, 541, 529, 530, 531, 0, 540, 528,
	0, 320, 0, 542, 543, 544, 545, 0, 768, 546,
	769, 549, 550, 0, 0, 551, 0, 552, 0, 0,
	554, 555, 556, 0, 0, 557, 558, 770, 0, 559,
	0, 771, 560, 561, 553, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 0, 572, 573, 772, 574,
	575, 576, 773, 577, 578, 579, 774, 580, 775, 581,
	582, 0, 583, 584, 585, 0, 586, 587, 588, 589,
	590, 591, 592, 593, 776, 594, 595, 597, 596, 598,
	0, 599, 0, 600, 601, 602, 0, 0, 0, 0,
	0, 603, 604, 606, 0, 607, 608, 609, 610, 605,
	611, 612, 613, 614, 615, 616, 0, 618, 619, 617,
	620, 621, 0, 622, 623, 624, 625, 626, 777, 627,
	0, 628, 629, 637, 638, 639, 630, 631, 633, 640,
	632, 641, 642, 643, 644, 646, 645, 0, 648, 649,
	647, 650, 651, 652, 0, 653, 778, 654, 634, 635,
	655, 656, 0, 657, 658, 659, 660, 661, 662, 663,
	779, 0, 664, 0, 665, 666, 667, 668, 669, 670,
	672, 636, 673, 678, 679, 780, 674, 675, 676, 677,
	781, 681, 682, 683, 684, 0, 685, 686, 0, 680,
	671, 0, 687, 688, 689, 690, 691, 692, 0, 693,
	694, 0, 695, 782, 783, 784, 785, 0, 707, 0,
	696, 698, 699, 700, 701, 786, 702, 787, 0, 703,
	704, 705, 706, 697, 708, 709, 0, 0, 710, 711,
	712, 714, 716, 717, 713, 715, 718, 0, 719, 0,
	0, 720, 721, 722, 788, 789, 790, 0, 724, 725,
	723, 726, 727, 730, 728, 729, 791, 731, 732, 733,
	315, 0, 0, 0, 734, 735, 792, 736, 737, 738,
	0, 0, 0, 0, 0, 0, 0, 321, 322, 324,
	323, 325, 326, 327, 328, 0, 329, 330, 0, 0,
	0, 0, 0, 739, 0, 0, 0, 331, 0, 332,
	333, 334, 0, 335, 336, 337, 338, 339, 340, 341,
	740, 741, 0, 342, 742, 343, 743, 0, 744, 344,
	345, 346, 347, 348, 349, 350, 0, 0, 0, 351,
	745, 746, 747, 0, 352, 353, 748, 0, 0, 0,
	354, 355, 356, 357, 358, 359, 360, 361, 0, 0,
	363, 364, 365, 362, 366, 367, 0, 368, 0, 369,
	370, 371, 372, 373, 374, 375, 817, 376, 377, 378,
	0, 379, 380, 381, 0, 0, 0, 0, 0, 0,
	0, 382, 383, 384, 385, 386, 0, 387, 389, 749,
	750, 0, 392, 394, 388, 390, 0, 393, 391, 395,
	396, 0, 397, 398, 399, 0, 0, 400, 401, 402,
	0, 403, 404, 405, 0, 406, 407, 408, 0, 409,
	410, 751, 411, 412, 413, 415, 417, 414, 416, 418,
	419, 420, 421, 422, 752, 753, 423, 0, 0, 0,
	0, 0, 0, 0, 424, 425, 426, 754, 0, 0,
	0, 427, 0, 428, 429, 430, 0, 431, 432, 0,
	0, 433, 434, 435, 755, 756, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 818, 445, 757, 0, 758,
	446, 0, 447, 448, 449, 450, 451, 452, 453, 759,
	760, 761, 547, 0, 454, 455, 456, 0, 457, 458,
	459, 460, 461, 0, 0, 0, 0, 462, 463, 464,
	0, 0, 762, 465, 548, 466, 763, 764, 0, 765,
	0, 467, 468, 470, 0, 766, 0, 469, 471, 472,
	0, 473, 0, 0, 0, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 483, 482, 0, 485, 767, 484,
	0, 486, 487, 0, 0, 488, 489, 490, 491, 492,
	493, 496, 0, 0, 494, 495, 497, 498, 0, 499,
	500, 502, 505, 501, 503, 504, 506, 519, 520, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 522, 0, 521, 0, 523, 524, 525, 526, 527,
	534, 536, 537, 532, 533, 535, 538, 539, 541, 529,
	530, 531, 0, 540, 528, 0, 0, 0, 542, 543,
	544, 545, 0, 768, 546, 769, 549, 550, 0, 0,
	551, 0, 552, 0, 0, 554, 555, 556, 0, 0,
	557, 558, 770, 0, 559, 0, 771, 560, 561, 553,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	0, 572, 573, 772, 574, 575, 576, 773, 577, 578,
	579, 774, 580, 775, 581, 582, 0, 583, 584, 585,
	0, 586, 587, 588, 589, 590, 591, 592, 593, 776,
	594, 595, 597, 596, 598, 0, 599, 0, 600, 601,
	602, 0, 0, 0, 0, 0, 603, 604, 606, 0,
	607, 608, 609, 610, 605, 611, 612, 613, 614, 615,
	616, 0, 618, 619, 617, 620, 621, 0, 622, 623,
	624, 625, 626, 777, 627, 0, 628, 629, 637, 638,
	639, 630, 631, 633, 640, 632, 641, 642, 643, 644,
	646, 645, 819, 648, 649, 647, 650, 651, 652, 0,
	653, 778, 654, 634, 635, 655, 656, 0, 657, 658,
	659, 660, 661, 662, 663, 779, 0, 664, 0, 665,
	666, 667, 668, 669, 670, 672, 636, 673, 678, 679,
	780, 674, 675, 676, 677, 781, 681, 682, 683, 684,
	0, 685, 686, 0, 680, 671, 0, 687, 688, 689,
	690, 691, 692, 0, 693, 694, 0, 695, 782, 783,
	784, 785, 0, 707, 0, 696, 698, 699, 700, 701,
	786, 702, 787, 0, 703, 704, 705, 706, 697, 708,
	709, 0, 0, 710, 711, 712, 714, 716, 717, 713,
	715, 718, 0, 719, 0, 0, 720, 721, 722, 788,
	789, 790, 0, 724, 725, 723, 726, 727, 730, 728,
	729, 791, 731, 732, 733, 315, 0, 0, 0, 734,
	735, 792, 736, 737, 738, 0, 0, 0, 0, 0,
	0, 0, 321, 322, 324, 323, 325, 326, 327, 328,
	0, 329, 330, 0, 0, 0, 0, 0, 739, 0,
	0, 0, 331, 0, 332, 333, 334, 0, 335, 336,
	337, 338, 339, 340, 341, 740, 741, 0, 342, 742,
	343, 743, 0, 744, 344, 345, 346, 347, 348, 349,
	350, 0, 0, 0, 351, 745, 746, 747, 0, 352,
	353, 748, 0, 0, 0, 354, 355, 356, 357, 358,
	359, 360, 361, 0, 0, 363, 364, 365, 362, 366,
	367, 0, 368, 0, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 381, 0,
	0, 0, 0, 0, 0, 0, 382, 383, 384, 2697,
	386, 0, 387, 389, 749, 750, 0, 392, 394, 388,
	390, 0, 393, 391, 395, 396, 0, 397, 398, 399,
	0, 0, 400, 401, 402, 0, 403, 404, 405, 0,
	406, 407, 408, 0, 409, 410, 751, 411, 412, 413,
	415, 417, 414, 416, 418, 419, 420, 421, 422, 752,
	753, 423, 0, 318, 0, 0, 0, 0, 0, 424,
	425, 426, 754, 0, 0, 0, 427, 0, 428, 429,
	430, 0, 431, 432, 0, 0, 433, 434, 435, 755,
	756, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	0, 445, 757, 0, 758, 446, 0, 447, 448, 449,
	450, 451, 452, 453, 759, 760, 761, 547, 0, 454,
	455, 456, 0, 457, 458, 459, 460, 461, 0, 0,
	0, 319, 462, 463, 464, 0, 0, 762, 465, 548,
	466, 763, 764, 0, 765, 0, 467, 468, 470, 0,
	766, 0, 469, 471, 472, 0, 473, 0, 0, 0,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 483,
	482, 0, 485, 767, 484, 0, 486, 487, 0, 0,
	488, 489, 490, 491, 492, 493, 496, 0, 0, 494,
	495, 497, 498, 0, 499, 500, 502, 505, 501, 503,
	504, 506, 519, 520, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 522, 0, 521, 0,
	523, 524, 525, 526, 527, 534, 536, 537, 532, 533,
	535, 538, 539, 541, 529, 530, 531, 0, 540, 528,
	0, 320, 0, 542, 543, 544, 545, 0, 768, 546,
	769, 549, 550, 0, 0, 551, 0, 552, 0, 0,
	554, 555, 556, 0, 0, 557, 558, 770, 0, 559,
	0, 771, 560, 561, 553, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 0, 572, 573, 772, 574,
	575, 576, 773, 577, 578, 579, 774, 580, 775, 581,
	582, 0, 583, 584, 585, 0, 586, 587, 588, 589,
	590, 591, 592, 593, 776, 594, 595, 597, 596, 598,
	0, 599, 0, 600, 601, 602, 0, 0, 0, 0,
	0, 603, 604, 606, 0, 607, 608, 609, 610, 605,
	611, 612, 613, 614, 615, 616, 0, 618, 619, 617,
	620, 621, 0, 622, 623, 624, 625, 626, 777, 627,
	0, 628, 629, 637, 638, 639, 630, 631, 633, 640,
	632, 641, 642, 643, 644, 646, 645, 0, 648, 649,
	647, 650, 651, 652, 0, 653, 778, 654, 634, 635,
	655, 656, 0, 657, 658, 659, 660, 661, 662, 663,
	779, 0, 664, 0, 665, 666, 667, 668, 669, 670,
	672, 636, 673, 678, 679, 780, 674, 675, 676, 677,
	781, 681, 682, 683, 684, 0, 685, 686, 0, 680,
	671, 0, 687, 688, 689, 690, 691, 692, 0, 693,
	694, 0, 695, 782, 783, 784, 785, 0, 707, 0,
	696, 698, 699, 700, 701, 786, 702, 787, 0, 703,
	704, 705, 706, 697, 708, 709, 0, 0, 710, 711,
	712, 714, 716, 717, 713, 715, 718, 0, 719, 0,
	0, 720, 721, 722, 788, 789, 790, 0, 724, 725,
	723, 726, 727, 730, 728, 729, 791, 731, 732, 733,
	315, 0, 0, 0, 734, 735, 792, 736, 737, 738,
	0, 0, 0, 0, 0, 0, 0, 321, 322, 324,
	323, 325, 326, 327, 328, 0, 329, 330, 0, 0,
	0, 0, 0, 739, 0, 0, 0, 331, 0, 332,
	333, 334, 0, 335, 336, 337, 338, 339, 340, 341,
	740, 741, 0, 342, 742, 343, 743, 0, 744, 344,
	345, 346, 347, 348, 349, 350, 0, 0, 0, 351,
	745, 746, 747, 0, 352, 353, 748, 0, 0, 0,
	354, 355, 356, 357, 358, 359, 360, 361, 0, 0,
	363, 364, 365, 362, 366, 367, 0, 368, 0, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 381, 0, 0, 0, 0, 0, 0,
	0, 382, 383, 384, 2695, 386, 0, 387, 389, 749,
	750, 0, 392, 394, 388, 390, 0, 393, 391, 395,
	396, 0, 397, 398, 399, 0, 0, 400, 401, 402,
	0, 403, 404, 405, 0, 406, 407, 408, 0, 409,
	410, 751, 411, 412, 413, 415, 417, 414, 416, 418,
	419, 420, 421, 422, 752, 753, 423, 0, 318, 0,
	0, 0, 0, 0, 424, 425, 426, 754, 0, 0,
	0, 427, 0, 428, 429, 430, 0, 431, 432, 0,
	0, 433, 434, 435, 755, 756, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 0, 445, 757, 0, 758,
	446, 0, 447, 448, 449, 450, 451, 452, 453, 759,
	760, 761, 547, 0, 454, 455, 456, 0, 457, 458,
	459, 460, 461, 0, 0, 0, 319, 462, 463, 464,
	0, 0, 762, 465, 548, 466, 763, 764, 0, 765,
	0, 467, 468, 470, 0, 766, 0, 469, 471, 472,
	0, 473, 0, 0, 0, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 483, 482, 0, 485, 767, 484,
	0, 486, 487, 0, 0, 488, 489, 490, 491, 492,
	493, 496, 0, 0, 494, 495, 497, 498, 0, 499,
	500, 502, 505, 501, 503, 504, 506, 519, 520, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 522, 0, 521, 0, 523, 524, 525, 526, 527,
	534, 536, 537, 532, 533, 535, 538, 539, 541, 529,
	530, 531, 0, 540, 528, 0, 320, 0, 542, 543,
	544, 545, 0, 768, 546, 769, 549, 550, 0, 0,
	551, 0, 552, 0, 0, 554, 555, 556, 0, 0,
	557, 558, 770, 0, 559, 0, 771, 560, 561, 553,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	0, 572, 573, 772, 574, 575, 576, 773, 577, 578,
	579, 774, 580, 775, 581, 582, 0, 583, 584, 585,
	0, 586, 587, 588, 589, 590, 591, 592, 593, 776,
	594, 595, 597, 596, 598, 0, 599, 0, 600, 601,
	602, 0, 0, 0, 0, 0, 603, 604, 606, 0,
	607, 608, 609, 610, 605, 611, 612, 613, 614, 615,
	616, 0, 618, 619, 617, 620, 621, 0, 622, 623,
	624, 625, 626, 777, 627, 0, 628, 629, 637, 638,
	639, 630, 631, 633, 640, 632, 641, 642, 643, 644,
	646, 645, 0, 648, 649, 647, 650, 651, 652, 0,
	653, 778, 654, 634, 635, 655, 656, 0, 657, 658,
	659, 660, 661, 662, 663, 779, 0, 664, 0, 665,
	666, 667, 668, 669, 670, 672, 636, 673, 678, 679,
	780, 674, 675, 676, 677, 781, 681, 682, 683, 684,
	0, 685, 686, 0, 680, 671, 0, 687, 688, 689,
	690, 691, 692, 0, 693, 694, 0, 695, 782, 783,
	784, 785, 0, 707, 0, 696, 698, 699, 700, 701,
	786, 702, 787, 0, 703, 704, 705, 706, 697, 708,
	709, 0, 0, 710, 711, 712, 714, 716, 717, 713,
	715, 718, 0, 719, 0, 0, 720, 721, 722, 788,
	789, 790, 0, 724, 725, 723, 726, 727, 730, 728,
	729, 791, 731, 732, 733, 315, 0, 0, 0, 734,
	735, 792, 736, 737, 738, 0, 0, 0, 0, 0,
	0, 0, 321, 322, 324, 323, 325, 326, 327, 328,
	0, 329, 330, 0, 0, 0, 0, 0, 739, 0,
	0, 0, 331, 0, 332, 333, 334, 0, 335, 336,
	337, 338, 339, 340, 341, 740, 741, 0, 342, 742,
	343, 743, 0, 744, 344, 345, 346, 347, 348, 349,
	350, 0, 0, 0, 351, 745, 746, 747, 0, 352,
	353, 748, 0, 0, 0, 354, 355, 356, 357, 358,
	359, 360, 361, 0, 0, 363, 364, 365, 362, 366,
	367, 0, 368, 0, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 381, 0,
	0, 0, 0, 0, 0, 0, 382, 383, 384, 2693,
	386, 0, 387, 389, 749, 750, 0, 392, 394, 388,
	390, 0, 393, 391, 395, 396, 0, 397, 398, 399,
	0, 0, 400, 401, 402, 0, 403, 404, 405, 0,
	406, 407, 408, 0, 409, 410, 751, 411, 412, 413,
	415, 417, 414, 416, 418, 419, 420, 421, 422, 752,
	753, 423, 0, 318, 0, 0, 0, 0, 0, 424,
	425, 426, 754, 0, 0, 0, 427, 0, 428, 429,
	430, 0, 431, 432, 0, 0, 433, 434, 435, 755,
	756, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	0, 445, 757, 0, 758, 446, 0, 447, 448, 449,
	450, 451, 452, 453, 759, 760, 761, 547, 0, 454,
	455, 456, 0, 457, 458, 459, 460, 461, 0, 0,
	0, 319, 462, 463, 464, 0, 0, 762, 465, 548,
	466, 763, 764, 0, 765, 0, 467, 468, 470, 0,
	766, 0, 469, 471, 472, 0, 473, 0, 0, 0,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 483,
	482, 0, 485, 767, 484, 0, 486, 487, 0, 0,
	488, 489, 490, 491, 492, 493, 496, 0, 0, 494,
	495, 497, 498, 0, 499, 500, 502, 505, 501, 503,
	504, 506, 519, 520, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 522, 0, 521, 0,
	523, 524, 525, 526, 527, 534, 536, 537, 532, 533,
	535, 538, 539, 541, 529, 530, 531, 0, 540, 528,
	0, 320, 0, 542, 543, 544, 545, 0, 768, 546,
	769, 549, 550, 0, 0, 551, 0, 552, 0, 0,
	554, 555, 556, 0, 0, 557, 558, 770, 0, 559,
	0, 771, 560, 561, 553, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 0, 572, 573, 772, 574,
	575, 576, 773, 577, 578, 579, 774, 580, 775, 581,
	582, 0, 583, 584, 585, 0, 586, 587, 588, 589,
	590, 591, 592, 593, 776, 594, 595, 597, 596, 598,
	0, 599, 0, 600, 601, 602, 0, 0, 0, 0,
	0, 603, 604, 606, 0, 607, 608, 609, 610, 605,
	611, 612, 613, 614, 615, 616, 0, 618, 619, 617,
	620, 621, 0, 622, 623, 624, 625, 626, 777, 627,
	0, 628, 629, 637, 638, 639, 630, 631, 633, 640,
	632, 641, 642, 643, 644, 646, 645, 0, 648, 649,
	647, 650, 651, 652, 0, 653, 778, 654, 634, 635,
	655, 656, 0, 657, 658, 659, 660, 661, 662, 663,
	779, 0, 664, 0, 665, 666, 667, 668, 669, 670,
	672, 636, 673, 678, 679, 780, 674, 675, 676, 677,
	781, 681, 682, 683, 684, 0, 685, 686, 0, 680,
	671, 0, 687, 688, 689, 690, 691, 692, 0, 693,
	694, 0, 695, 782, 783, 784, 785, 0, 707, 0,
	696, 698, 699, 700, 701, 786, 702, 787, 0, 703,
	704, 705, 706, 697, 708, 709, 0, 0, 710, 711,
	712, 714, 716, 717, 713, 715, 718, 0, 719, 0,
	0, 720, 721, 722, 788, 789, 790, 0, 724, 725,
	723, 726, 727, 730, 728, 729, 791, 731, 732, 733,
	315, 0, 0, 0, 734, 735, 792, 736, 737, 738,
	0, 0, 0, 0, 0, 0, 0, 321, 322, 324,
	323, 325, 326, 327, 328, 0, 329, 330, 0, 0,
	0, 0, 0, 739, 0, 0, 0, 331, 0, 332,
	333, 334, 0, 335, 336, 337, 338, 339, 340, 341,
	740, 741, 0, 342, 742, 343, 743, 0, 744, 344,
	345, 346, 347, 348, 349, 350, 0, 0, 0, 351,
	745, 746, 747, 0, 352, 353, 748, 0, 0, 0,
	354, 355, 356, 357, 358, 359, 360, 361, 0, 0,
	363, 364, 365, 362, 366, 367, 0, 368, 0, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 381, 0, 0, 0, 0, 0, 0,
	0, 382, 383, 384, 385, 386, 0, 387, 389, 749,
	750, 0, 392, 394, 388, 390, 0, 393, 391, 395,
	396, 0, 397, 398, 399, 0, 0, 400, 401, 402,
	0, 403, 404, 405, 0, 406, 407, 408, 0, 409,
	410, 751, 411, 412, 413, 415, 417, 414, 416, 418,
	419, 420, 421, 422, 752, 753, 423, 0, 318, 0,
	0, 0, 0, 0, 424, 425, 426, 754, 0, 0,
	0, 427, 0, 428, 429, 430, 0, 431, 432, 0,
	0, 433, 434, 435, 755, 756, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 0, 445, 757, 0, 758,
	446, 0, 447, 448, 449, 450, 451, 452, 453, 2605,
	760, 761, 547, 0, 454, 455, 456, 0, 457, 458,
	459, 460, 461, 0, 0, 0, 319, 462, 463, 464,
	0, 0, 762, 465, 548, 466, 763, 764, 0, 765,
	0, 467, 468, 470, 0, 766, 0, 469, 471, 472,
	0, 473, 0, 0, 0, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 483, 482, 0, 485, 767, 484,
	0, 486, 487, 0, 0, 488, 489, 490, 491, 492,
	493, 496, 0, 0, 494, 495, 497, 498, 0, 499,
	500, 502, 505, 501, 503, 504, 506, 519, 520, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 522, 0, 521, 0, 523, 524, 525, 526, 527,
	534, 536, 537, 532, 533, 535, 538, 539, 541, 529,
	530, 531, 0, 540, 528, 0, 320, 0, 542, 543,
	544, 545, 0, 768, 546, 769, 549, 550, 0, 0,
	551, 0, 552, 0, 0, 554, 555, 556, 0, 0,
	557, 558, 770, 0, 559, 0, 771, 560, 561, 553,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	0, 572, 573, 772, 574, 575, 576, 773, 577, 578,
	579, 774, 580, 775, 581, 582, 0, 583, 584, 585,
	0, 586, 587, 588, 589, 590, 591, 592, 593, 776,
	594, 595, 597, 596, 598, 0, 599, 0, 600, 601,
	602, 0, 0, 0, 0, 0, 603, 604, 606, 0,
	607, 608, 609, 610, 605, 611, 612, 613, 614, 615,
	616, 0, 618, 619, 617, 620, 621, 0, 622, 623,
	624, 625, 626, 777, 627, 0, 628, 629, 637, 638,
	639, 630, 631, 633, 640, 632, 641, 642, 643, 644,
	646, 645, 0, 648, 649, 647, 650, 651, 652, 0,
	653, 778, 654, 634, 635, 655, 656, 0, 657, 658,
	659, 660, 661, 662, 663, 779, 0, 664, 0, 665,
	666, 667, 668, 669, 670, 672, 636, 673, 678, 679,
	780, 674, 675, 676, 677, 781, 681, 682, 683, 684,
	0, 685, 686, 0, 680, 671, 0, 687, 688, 689,
	690, 691, 692, 0, 693, 694, 0, 695, 782, 783,
	784, 785, 0, 707, 0, 696, 698, 699, 700, 701,
	786, 702, 787, 0, 703, 704, 705, 706, 697, 708,
	709, 0, 0, 710, 711, 712, 714, 716, 717, 713,
	715, 718, 0, 719, 0, 0, 720, 721, 722, 788,
	789, 790, 0, 724, 725, 723, 726, 727, 730, 728,
	729, 791, 731, 732, 733, 315, 0, 0, 0, 734,
	735, 792, 736, 737, 738, 0, 0, 0, 0, 0,
	0, 0, 321, 322, 324, 323, 325, 326, 327, 328,
	0, 329, 330, 0, 0, 0, 0, 0, 739, 0,
	0, 0, 331, 0, 332, 333, 334, 0, 335, 336,
	337, 338, 339, 340, 341, 740, 741, 0, 342, 742,
	343, 743, 0, 744, 344, 345, 346, 347, 348, 349,
	350, 0, 0, 0, 351, 745, 746, 747, 0, 352,
	353, 748, 0, 0, 0, 354, 355, 356, 357, 358,
	359, 360, 361, 0, 0, 363, 364, 365, 362, 366,
	367, 0, 368, 0, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 381, 0,
	0, 0, 0, 0, 0, 0, 382, 383, 384, 385,
	386, 0, 387, 389, 749, 750, 0, 392, 394, 388,
	390, 0, 393, 391, 395, 396, 0, 397, 398, 399,
	0, 0, 400, 401, 402, 0, 403, 404, 405, 0,
	406, 407, 408, 0, 409, 410, 751, 411, 412, 413,
	415, 417, 414, 416, 418, 419, 420, 421, 422, 752,
	753, 423, 0, 318, 0, 0, 0, 0, 0, 424,
	425, 426, 754, 0, 0, 0, 427, 0, 428, 429,
	430, 0, 431, 432, 0, 0, 433, 434, 435, 755,
	756, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	0, 445, 757, 0, 758, 446, 0, 447, 448, 449,
	450, 451, 452, 453, 2329, 760, 761, 547, 0, 454,
	455, 456, 0, 457, 458, 459, 460, 461, 0, 0,
	0, 319, 462, 463, 464, 0, 0, 762, 465, 548,
	466, 763, 764, 0, 765, 0, 467, 468, 470, 0,
	766, 0, 469, 471, 472, 0, 473, 0, 0, 0,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 483,
	482, 0, 485, 767, 484, 0, 486, 487, 0, 0,
	488, 489, 490, 491, 492, 493, 496, 0, 0, 494,
	495, 497, 498, 0, 499, 500, 502, 505, 501, 503,
	504, 506, 519, 520, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 522, 0, 521, 0,
	523, 524, 525, 526, 527, 534, 536, 537, 532, 533,
	535, 538, 539, 541, 529, 530, 531, 0, 540, 528,
	0, 320, 0, 542, 543, 544, 545, 0, 768, 546,
	769, 549, 550, 0, 0, 551, 0, 552, 0, 0,
	554, 555, 556, 0, 0, 557, 558, 770, 0, 559,
	0, 771, 560, 561, 553, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 0, 572, 573, 772, 574,
	575, 576, 773, 577, 578, 579, 774, 580, 775, 581,
	582, 0, 583, 584, 585, 0, 586, 587, 588, 589,
	590, 591, 592, 593, 776, 594, 595, 597, 596, 598,
	0, 599, 0, 600, 601, 602, 0, 0, 0, 0,
	0, 603, 604, 606, 0, 607, 608, 609, 610, 605,
	611, 612, 613, 614, 615, 616, 0, 618, 619, 617,
	620, 621, 0, 622, 623, 624, 625, 626, 777, 627,
	0, 628, 629, 637, 638, 639, 630, 631, 633, 640,
	632, 641, 642, 643, 644, 646, 645, 0, 648, 649,
	647, 650, 651, 652, 0, 653, 778, 654, 634, 635,
	655, 656, 0, 657, 658, 659, 660, 661, 662, 663,
	779, 0, 664, 0, 665, 666, 667, 668, 669, 670,
	672, 636, 673, 678, 679, 780, 674, 675, 676, 677,
	781, 681, 682, 683, 684, 0, 685, 686, 0, 680,
	671, 0, 687, 688, 689, 690, 691, 692, 0, 693,
	694, 0, 695, 782, 783, 784, 785, 0, 707, 0,
	696, 698, 699, 700, 701, 786, 702, 787, 0, 703,
	704, 705, 706, 697, 708, 709, 0, 0, 710, 711,
	712, 714, 716, 717, 713, 715, 718, 0, 719, 0,
	0, 720, 721, 722, 788, 789, 790, 0, 724, 725,
	723, 726, 727, 730, 728, 729, 791, 731, 732, 733,
	315, 0, 0, 0, 734, 735, 792, 736, 737, 738,
	0, 0, 0, 0, 0, 0, 0, 321, 322, 324,
	323, 325, 326, 327, 328, 0, 329, 330, 0, 0,
	0, 0, 0, 739, 0, 0, 0, 331, 0, 332,
	333, 334, 0, 335, 336, 337, 338, 339, 340, 341,
	740, 741, 0, 342, 742, 343, 743, 0, 744, 344,
	345, 346, 347, 348, 349, 350, 0, 0, 0, 351,
	745, 746, 747, 0, 352, 353, 748, 0, 0, 0,
	354, 355, 356, 357, 358, 359, 360, 361, 0, 0,
	363, 364, 365, 362, 366, 367, 0, 368, 0, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 381, 0, 0, 0, 0, 0, 0,
	0, 382, 383, 384, 385, 386, 0, 387, 389, 749,
	750, 0, 392, 394, 388, 390, 0, 393, 391, 395,
	396, 0, 397, 398, 399, 0, 0, 400, 401, 402,
	0, 403, 404, 405, 0, 406, 407, 408, 0, 409,
	410, 751, 411, 412, 413, 415, 417, 414, 416, 418,
	419, 420, 421, 422, 752, 753, 423, 0, 318, 0,
	0, 0, 0, 0, 424, 425, 426, 754, 0, 0,
	0, 427, 0, 428, 429, 430, 0, 431, 432, 0,
	0, 433, 434, 435, 755, 756, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 0, 445, 757, 0, 758,
	446, 0, 447, 448, 449, 450, 451, 452, 453, 2323,
	760, 761, 547, 0, 454, 455, 456, 0, 457, 458,
	459, 460, 461, 0, 0, 0, 319, 462, 463, 464,
	0, 0, 762, 465, 548, 466, 763, 764, 0, 765,
	0, 467, 468, 470, 0, 766, 0, 469, 471, 472,
	0, 473, 0, 0, 0, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 483, 482, 0, 485, 767, 484,
	0, 486, 487, 0, 0, 488, 489, 490, 491, 492,
	493, 496, 0, 0, 494, 495, 497, 498, 0, 499,
	500, 502, 505, 501, 503, 504, 506, 519, 520, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 522, 0, 521, 0, 523, 524, 525, 526, 527,
	534, 536, 537, 532, 533, 535, 538, 539, 541, 529,
	530, 531, 0, 540, 528, 0, 320, 0, 542, 543,
	544, 545, 0, 768, 546, 769, 549, 550, 0, 0,
	551, 0, 552, 0, 0, 554, 555, 556, 0, 0,
	557, 558, 770, 0, 559, 0, 771, 560, 561, 553,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	0, 572, 573, 772, 574, 575, 576, 773, 577, 578,
	579, 774, 580, 775, 581, 582, 0, 583, 584, 585,
	0, 586, 587, 588, 589, 590, 591, 592, 593, 776,
	594, 595, 597, 596, 598, 0, 599, 0, 600, 601,
	602, 0, 0, 0, 0, 0, 603, 604, 606, 0,
	607, 608, 609, 610, 605, 611, 612, 613, 614, 615,
	616, 0, 618, 619, 617, 620, 621, 0, 622, 623,
	624, 625, 626, 777, 627, 0, 628, 629, 637, 638,
	639, 630, 631, 633, 640, 632, 641, 642, 643, 644,
	646, 645, 0, 648, 649, 647, 650, 651, 652, 0,
	653, 778, 654, 634, 635, 655, 656, 0, 657, 658,
	659, 660, 661, 662, 663, 779, 0, 664, 0, 665,
	666, 667, 668, 669, 670, 672, 636, 673, 678, 679,
	780, 674, 675, 676, 677, 781, 681, 682, 683, 684,
	0, 685, 686, 0, 680, 671, 0, 687, 688, 689,
	690, 691, 692, 0, 693, 694, 0, 695, 782, 783,
	784, 785, 0, 707, 0, 696, 698, 699, 700, 701,
	786, 702, 787, 0, 703, 704, 705, 706, 697, 708,
	709, 0, 0, 710, 711, 712, 714, 716, 717, 713,
	715, 718, 0, 719, 0, 0, 720, 721, 722, 788,
	789, 790, 0, 724, 725, 723, 726, 727, 730, 728,
	729, 791, 731, 732, 733, 1043, 0, 315, 0, 734,
	735, 792, 736, 737, 738, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 324, 323, 325, 326,
	327, 328, 0, 329, 330, 0, 0, 0, 0, 0,
	739, 0, 0, 0, 331, 0, 332, 333, 334, 0,
	335, 336, 337, 338, 339, 340, 341, 740, 741, 0,
	342, 742, 343, 743, 0, 744, 344, 345, 346, 347,
	348, 349, 350, 0, 0, 0, 351, 745, 746, 747,
	0, 352, 353, 748, 0, 0, 0, 354, 355, 356,
	357, 358, 359, 360, 361, 0, 0, 363, 364, 365,
	362, 366, 367, 0, 368, 0, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	381, 0, 0, 0, 0, 0, 0, 0, 382, 383,
	384, 385, 386, 0, 387, 389, 749, 750, 0, 392,
	394, 388, 390, 0, 393, 391, 395, 396, 0, 397,
	398, 399, 0, 0, 400, 401, 402, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 751, 411,
	412, 413, 415, 417, 414, 416, 418, 419, 420, 421,
	422, 752, 753, 423, 0, 0, 0, 0, 0, 0,
	0, 424, 425, 426, 754, 0, 0, 0, 427, 0,
	428, 429, 430, 0, 431, 432, 0, 0, 433, 434,
	435, 755, 756, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 0, 445, 757, 0, 758, 446, 0, 447,
	448, 449, 450, 451, 452, 453, 759, 760, 761, 547,
	0, 454, 455, 456, 0, 457, 458, 459, 460, 461,
	0, 0, 0, 0, 462, 463, 464, 0, 0, 762,
	465, 548, 466, 763, 764, 0, 765, 1042, 467, 468,
	470, 0, 766, 0, 469, 471, 472, 0, 473, 0,
	0, 0, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 483, 482, 0, 485, 767, 484, 0, 486, 487,
	0, 0, 488, 489, 490, 491, 492, 493, 496, 0,
	0, 494, 495, 497, 498, 0, 499, 500, 502, 505,
	501, 503, 504, 506, 519, 520, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 522, 0,
	521, 0, 523, 524, 525, 526, 527, 534, 536, 537,
	532, 533, 535, 538, 539, 541, 529, 530, 531, 0,
	540, 528, 0, 0, 0, 542, 543, 544, 545, 0,
	768, 546, 769, 549, 550, 0, 0, 551, 0, 552,
	0, 0, 554, 555, 556, 0, 0, 557, 558, 770,
	0, 559, 0, 771, 560, 561, 553, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 0, 572, 573,
	772, 574, 575, 576, 773, 577, 578, 579, 774, 580,
	775, 581, 582, 0, 583, 584, 585, 0, 586, 587,
	588, 589, 590, 591, 592, 593, 776, 594, 595, 597,
	596, 598, 0, 599, 0, 600, 601, 602, 0, 0,
	0, 0, 0, 603, 604, 606, 0, 607, 608, 609,
	610, 605, 611, 612, 613, 614, 615, 616, 0, 618,
	619, 617, 620, 621, 0, 622, 623, 624, 625, 626,
	777, 627, 0, 628, 629, 637, 638, 639, 630, 631,
	633, 640, 632, 641, 642, 643, 644, 646, 645, 0,
	648, 649, 647, 650, 651, 652, 0, 653, 778, 654,
	634, 635, 655, 656, 0, 657, 658, 659, 660, 661,
	662, 663, 779, 0, 664, 0, 665, 666, 667, 668,
	669, 670, 672, 636, 673, 678, 679, 780, 674, 675,
	676, 677, 781, 681, 682, 683, 684, 0, 685, 686,
	0, 680, 671, 1041, 687, 688, 689, 690, 691, 692,
	0, 693, 694, 0, 695, 782, 783, 784, 785, 0,
	707, 0, 696, 698, 699, 700, 701, 786, 702, 787,
	0, 703, 704, 705, 706, 697, 708, 709, 0, 0,
	710, 711, 712, 714, 716, 717, 713, 715, 718, 0,
	719, 0, 0, 720, 721, 722, 788, 789, 790, 0,
	724, 725, 723, 726, 727, 730, 728, 729, 791, 731,
	732, 733, 917, 0, 315, 0, 734, 735, 792, 736,
	737, 738, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 906, 324, 323, 325, 326, 327, 328, 0,
	329, 330, 0, 0, 0, 0, 0, 739, 0, 0,
	0, 331, 0, 332, 333, 334, 0, 335, 336, 337,
	338, 915, 340, 341, 740, 741, 0, 342, 742, 343,
	743, 0, 744, 344, 345, 346, 347, 348, 349, 350,
	0, 0, 0, 351, 745, 746, 747, 0, 352, 353,
	748, 0, 0, 0, 354, 355, 356, 357, 358, 359,
	360, 361, 0, 0, 363, 364, 365, 362, 366, 367,
	0, 368, 0, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 381, 0, 0,
	0, 0, 0, 0, 0, 382, 383, 384, 385, 386,
	0, 387, 389, 749, 750, 0, 392, 394, 388, 390,
	0, 393, 391, 395, 396, 0, 397, 398, 399, 0,
	0, 400, 401, 402, 0, 403, 404, 405, 0, 406,
	407, 408, 0, 409, 410, 751, 411, 412, 413, 415,
	417, 414, 416, 418, 419, 420, 421, 422, 752, 753,
	423, 0, 0, 0, 0, 0, 0, 0, 424, 425,
	908, 754, 0, 0, 0, 427, 0, 428, 429, 430,
	0, 914, 432, 910, 0, 433, 434, 435, 755, 756,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 0,
	445, 757, 0, 758, 446, 0, 447, 448, 449, 450,
	451, 452, 453, 759, 760, 761, 547, 0, 454, 455,
	456, 911, 457, 458, 459, 460, 461, 0, 0, 0,
	0, 462, 463, 464, 0, 0, 762, 465, 548, 466,
	763, 764, 0, 765, 0, 467, 468, 470, 0, 766,
	0, 469, 471, 472, 0, 473, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 909, 0, 481, 483, 482,
	0, 485, 767, 484, 0, 486, 487, 0, 0, 488,
	489, 490, 491, 492, 493, 496, 0, 0, 494, 495,
	497, 498, 0, 499, 500, 502, 505, 501, 503, 504,
	506, 519, 520, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 522, 0, 521, 0, 523,
	524, 525, 912, 527, 534, 536, 537, 532, 533, 535,
	538, 539, 541, 529, 530, 531, 0, 540, 528, 0,
	0, 0, 542, 543, 544, 545, 0, 768, 546, 769,
	549, 550, 0, 0, 551, 0, 552, 0, 0, 554,
	555, 556, 0, 0, 557, 558, 770, 0, 559, 0,
	771, 560, 561, 553, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 0, 572, 573, 772, 574, 575,
	576, 773, 577, 578, 579, 774, 580, 775, 581, 582,
	0, 913, 584, 585, 0, 586, 587, 588, 589, 590,
	591, 592, 593, 776, 594, 595, 597, 596, 598, 0,
	599, 0, 600, 601, 602, 0, 0, 0, 0, 0,
	603, 907, 606, 0, 607, 608, 609, 610, 605, 611,
	612, 613, 614, 615, 616, 0, 618, 619, 617, 620,
	621, 0, 622, 623, 624, 625, 626, 777, 627, 0,
	628, 629, 637, 638, 639, 630, 631, 633, 640, 632,
	641, 642, 643, 644, 646, 645, 0, 648, 649, 647,
	650, 651, 652, 0, 653, 778, 654, 634, 635, 655,
	656, 0, 657, 658, 659, 660, 661, 662, 663, 779,
	0, 664, 0, 665, 666, 667, 668, 669, 670, 672,
	636, 673, 678, 679, 780, 674, 675, 676, 677, 781,
	681, 682, 683, 684, 0, 685, 686, 0, 680, 671,
	0, 687, 688, 689, 690, 691, 692, 0, 693, 694,
	0, 695, 782, 783, 784, 785, 0, 707, 0, 696,
	698, 699, 700, 701, 786, 702, 787, 0, 703, 704,
	705, 706, 697, 708, 709, 0, 0, 710, 711, 712,
	714, 716, 717, 713, 715, 718, 0, 719, 0, 0,
	720, 721, 722, 788, 789, 790, 0, 724, 725, 723,
	726, 727, 730, 728, 729, 791, 731, 732, 733, 900,
	0, 315, 0, 734, 735, 792, 736, 737, 738, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 321, 906,
	324, 323, 325, 326, 327, 328, 0, 329, 330, 0,
	0, 0, 0, 0, 739, 0, 0, 0, 331, 0,
	332, 333, 334, 0, 335, 336, 337, 338, 915, 340,
	341, 740, 741, 0, 342, 742, 343, 743, 0, 744,
	344, 345, 346, 347, 348, 349, 350, 0, 0, 0,
	351, 745, 746, 747, 0, 352, 353, 748, 0, 0,
	0, 354, 355, 356, 357, 358, 359, 360, 361, 0,
	0, 363, 364, 365, 362, 366, 367, 0, 368, 0,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 381, 0, 0, 0, 0, 0,
	0, 0, 382, 383, 384, 385, 386, 0, 387, 389,
	749, 750, 0, 392, 394, 388, 390, 0, 393, 391,
	395, 396, 0, 397, 398, 399, 0, 0, 400, 401,
	402, 0, 403, 404, 405, 0, 406, 407, 408, 0,
	409, 410, 751, 411, 412, 413, 415, 417, 414, 416,
	418, 419, 420, 421, 422, 752, 753, 423, 0, 0,
	0, 0, 0, 0, 0, 424, 425, 908, 754, 0,
	0, 0, 427, 0, 428, 429, 430, 0, 914, 432,
	910, 0, 433, 434, 435, 755, 756, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 0, 445, 757, 0,
	758, 446, 0, 447, 448, 449, 450, 451, 452, 453,
	759, 760, 761, 547, 0, 454, 455, 456, 911, 457,
	458, 459, 460, 461, 0, 0, 0, 0, 462, 463,
	464, 0, 0, 762, 465, 548, 466, 763, 764, 0,
	765, 0, 467, 468, 470, 0, 766, 0, 469, 471,
	472, 0, 473, 0, 0, 0, 474, 475, 476, 477,
	478, 479, 909, 0, 481, 483, 482, 0, 485, 767,
	484, 0, 486, 487, 0, 0, 488, 489, 490, 491,
	492, 493, 496, 0, 0, 494, 495, 497, 498, 0,
	499, 500, 502, 505, 501, 503, 504, 506, 519, 520,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 522, 0, 521, 0, 523, 524, 525, 912,
	527, 534, 536, 537, 532, 533, 535, 538, 539, 541,
	529, 530, 531, 0, 540, 528, 0, 0, 0, 542,
	543, 544, 545, 0, 768, 546, 769, 549, 550, 0,
	0, 551, 0, 552, 0, 0, 554, 555, 556, 0,
	0, 557, 558, 770, 0, 559, 0, 771, 560, 561,
	553, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 0, 572, 573, 772, 574, 575, 576, 773, 577,
	578, 579, 774, 580, 775, 581, 582, 0, 913, 584,
	585, 0, 586, 587, 588, 589, 590, 591, 592, 593,
	776, 594, 595, 597, 596, 598, 0, 599, 0, 600,
	601, 602, 0, 0, 0, 0, 0, 603, 907, 606,
	0, 607, 608, 609, 610, 605, 611, 612, 613, 614,
	615, 616, 0, 618, 619, 617, 620, 621, 0, 622,
	623, 624, 625, 626, 777, 627, 0, 628, 629, 637,
	638, 639, 630, 631, 633, 640, 632, 641, 642, 643,
	644, 646, 645, 0, 648, 649, 647, 650, 651, 652,
	0, 653, 778, 654, 634, 635, 655, 656, 0, 657,
	658, 659, 660, 661, 662, 663, 779, 0, 664, 0,
	665, 666, 667, 668, 669, 670, 672, 636, 673, 678,
	679, 780, 674, 675, 676, 677, 781, 681, 682, 683,
	684, 0, 685, 686, 0, 680, 671, 0, 687, 688,
	689, 690, 691, 692, 0, 693, 694, 0, 695, 782,
	783, 784, 785, 0, 707, 0, 696, 698, 699, 700,
	701, 786, 702, 787, 0, 703, 704, 705, 706, 697,
	708, 709, 0, 0, 710, 711, 712, 714, 716, 717,
	713, 715, 718, 0, 719, 0, 0, 720, 721, 722,
	788, 789, 790, 0, 724, 725, 723, 726, 727, 730,
	728, 729, 791, 731, 732, 733, 315, 0, 0, 0,
	734, 735, 792, 736, 737, 738, 0, 0, 0, 0,
	0, 0, 0, 321, 322, 324, 323, 325, 326, 327,
	328, 0, 329, 330, 0, 0, 0, 0, 0, 739,
	0, 0, 0, 331, 0, 332, 333, 334, 0, 335,
	336, 337, 338, 339, 340, 341, 740, 741, 0, 342,
	742, 343, 743, 0, 744, 344, 345, 346, 347, 348,
	349, 350, 0, 0, 0, 351, 745, 746, 747, 0,
	352, 353, 748, 0, 0, 0, 354, 355, 356, 357,
	358, 359, 360, 361, 0, 0, 363, 364, 365, 362,
	366, 367, 0, 368, 0, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 381,
	0, 0, 0, 0, 0, 0, 0, 382, 383, 384,
	385, 386, 0, 387, 389, 749, 750, 0, 392, 394,
	388, 390, 0, 393, 391, 395, 396, 0, 397, 398,
	399, 0, 0, 400, 401, 402, 0, 403, 404, 405,
	0, 406, 407, 408, 0, 409, 410, 751, 411, 412,
	413, 415, 417, 414, 416, 418, 419, 420, 421, 422,
	752, 753, 423, 0, 4127, 0, 0, 0, 0, 0,
	424, 425, 426, 754, 0, 0, 0, 427, 0, 428,
	429, 430, 0, 431, 432, 0, 0, 433, 434, 435,
	755, 756, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 0, 445, 757, 0, 758, 446, 0, 447, 448,
	449, 450, 451, 452, 453, 759, 760, 761, 547, 0,
	454, 455, 456, 0, 457, 458, 459, 460, 461, 0,
	0, 0, 0, 462, 463, 464, 0, 0, 762, 465,
	548, 466, 763, 764, 0, 765, 0, 467, 468, 470,
	0, 766, 0, 469, 471, 472, 0, 473, 0, 0,
	0, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	483, 482, 0, 485, 767, 484, 0, 486, 487, 0,
	0, 488, 489, 490, 491, 492, 493, 496, 0, 0,
	494, 495, 497, 498, 0, 499, 500, 502, 505, 501,
	503, 504, 506, 519, 520, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 522, 0, 521,
	0, 523, 524, 525, 526, 527, 534, 536, 537, 532,
	533, 535, 538, 539, 541, 529, 530, 531, 0, 540,
	528, 0, 0, 0, 542, 543, 544, 545, 0, 768,
	546, 769, 549, 550, 0, 0, 551, 0, 552, 0,
	0, 554, 555, 556, 0, 0, 557, 558, 770, 0,
	559, 0, 771, 560, 561, 553, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 0, 572, 573, 772,
	574, 575, 576, 773, 577, 578, 579, 774, 580, 775,
	581, 582, 4932, 583, 584, 585, 0, 586, 587, 588,
	589, 590, 591, 592, 593, 776, 594, 595, 597, 596,
	598, 0, 599, 0, 600, 601, 602, 0, 0, 0,
	0, 0, 603, 604, 606, 0, 607, 608, 609, 610,
	605, 611, 612, 613, 614, 615, 616, 0, 618, 619,
	617, 620, 621, 0, 622, 623, 624, 625, 626, 777,
	627, 0, 628, 629, 637, 638, 639, 630, 631, 633,
	640, 632, 641, 642, 643, 644, 646, 645, 0, 648,
	649, 647, 650, 651, 652, 0, 653, 778, 654, 634,
	635, 655, 656, 0, 657, 658, 659, 660, 661, 662,
	663, 779, 0, 664, 0, 665, 666, 667, 668, 669,
	670, 672, 636, 673, 678, 679, 780, 674, 675, 676,
	677, 781, 681, 682, 683, 684, 0, 685, 686, 0,
	680, 671, 0, 687, 688, 689, 690, 691, 692, 0,
	693, 694, 0, 695, 782, 783, 784, 785, 0, 707,
	0, 696, 698, 699, 700, 701, 786, 702, 787, 0,
	703, 704, 705, 706, 697, 708, 709, 0, 0, 710,
	711, 712, 714, 716, 717, 713, 715, 718, 0, 719,
	0, 0, 720, 721, 722, 788, 789, 790, 0, 724,
	725, 723, 726, 727, 730, 728, 729, 791, 731, 732,
	733, 1523, 0, 315, 0, 734, 735, 792, 736, 737,
	738, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	321, 322, 324, 323, 325, 326, 327, 328, 0, 329,
	330, 0, 0, 0, 0, 0, 739, 0, 0, 0,
	331, 0, 332, 333, 334, 1526, 335, 336, 337, 338,
	339, 340, 341, 740, 741, 0, 342, 742, 343, 743,
	0, 744, 344, 345, 346, 347, 348, 349, 350, 0,
	0, 0, 351, 745, 746, 1524, 0, 352, 353, 748,
	0, 0, 0, 354, 355, 356, 357, 358, 359, 360,
	361, 0, 0, 363, 364, 365, 362, 366, 367, 0,
	368, 0, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 381, 0, 0, 0,
	0, 0, 0, 0, 382, 383, 384, 385, 386, 0,
	387, 389, 749, 750, 0, 392, 394, 388, 390, 0,
	393, 391, 395, 396, 0, 397, 398, 399, 0, 0,
	400, 401, 402, 0, 403, 404, 405, 0, 406, 407,
	408, 0, 409, 410, 751, 411, 412, 413, 415, 417,
	414, 416, 418, 419, 420, 421, 422, 752, 753, 423,
	0, 0, 0, 0, 0, 0, 0, 424, 425, 426,
	754, 0, 0, 0, 427, 0, 428, 429, 430, 0,
	431, 432, 0, 0, 433, 434, 435, 755, 756, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 0, 445,
	757, 0, 758, 446, 0, 447, 448, 449, 450, 451,
	452, 453, 759, 760, 761, 547, 0, 454, 455, 456,
	0, 457, 458, 459, 460, 461, 0, 0, 0, 0,
	462, 463, 464, 0, 0, 762, 465, 548, 466, 763,
	764, 0, 765, 0, 467, 468, 470, 0, 766, 0,
	469, 471, 472, 0, 473, 0, 0, 0, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 483, 482, 0,
	485, 767, 484, 0, 486, 487, 0, 0, 488, 489,
	490, 491, 492, 493, 496, 0, 0, 494, 495, 497,
	498, 0, 499, 500, 502, 505, 501, 503, 504, 506,
	519, 520, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 522, 0, 888, 0, 523, 524,
	525, 526, 527, 534, 536, 537, 532, 533, 535, 538,
	539, 541, 529, 530, 531, 0, 540, 528, 0, 0,
	0, 542, 543, 544, 545, 0, 768, 546, 769, 549,
	550, 0, 0, 551, 0, 552, 0, 0, 554, 555,
	556, 0, 0, 557, 558, 770, 0, 559, 0, 771,
	560, 561, 553, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 0, 572, 573, 772, 574, 575, 576,
	773, 577, 578, 579, 774, 580, 775, 581, 582, 0,
	583, 584, 585, 0, 586, 587, 588, 589, 590, 591,
	592, 593, 776, 594, 595, 597, 596, 598, 0, 599,
	0, 600, 601, 602, 0, 0, 0, 0, 0, 603,
	604, 606, 0, 607, 608, 609, 610, 605, 611, 612,
	613, 614, 615, 616, 0, 618, 619, 617, 620, 621,
	0, 887, 623, 624, 625, 626, 777, 627, 0, 628,
	629, 637, 638, 639, 630, 631, 633, 886, 632, 641,
	642, 643, 644, 646, 645, 0, 648, 649, 647, 650,
	1527, 652, 0, 653, 778, 654, 634, 635, 655, 656,
	0, 657, 658, 659, 660, 661, 662, 663, 779, 0,
	664, 0, 665, 666, 667, 668, 669, 670, 672, 636,
	673, 678, 679, 780, 674, 675, 676, 677, 781, 681,
	682, 683, 684, 0, 685, 686, 0, 680, 671, 0,
	687, 688, 689, 690, 691, 692, 0, 693, 694, 0,
	695, 884, 783, 784, 785, 0, 707, 0, 696, 698,
	699, 700, 701, 786, 702, 787, 0, 703, 704, 705,
	706, 697, 708, 709, 0, 0, 710, 711, 712, 714,
	716, 717, 713, 715, 718, 0, 719, 0, 0, 720,
	721, 722, 788, 789, 790, 0, 724, 725, 723, 726,
	727, 730, 728, 729, 791, 731, 732, 733, 1523, 0,
	315, 0, 734, 735, 792, 736, 737, 738, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 322, 324,
	323, 325, 326, 327, 328, 0, 329, 330, 0, 0,
	0, 0, 0, 739, 0, 0, 0, 331, 0, 332,
	333, 334, 1526, 335, 336, 337, 338, 339, 340, 341,
	740, 741, 0, 342, 742, 343, 743, 0, 744, 344,
	345, 346, 347, 348, 349, 350, 0, 0, 0, 351,
	745, 746, 1524, 0, 352, 353, 748, 0, 0, 0,
	354, 355, 356, 357, 358, 359, 360, 361, 0, 0,
	363, 364, 365, 362, 366, 367, 0, 368, 0, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 381, 0, 0, 0, 0, 0, 0,
	0, 382, 383, 384, 385, 386, 0, 387, 389, 749,
	750, 0, 392, 394, 388, 390, 0, 393, 391, 395,
	396, 0, 397, 398, 399, 0, 0, 400, 401, 402,
	0, 403, 404, 405, 0, 406, 407, 408, 0, 409,
	410, 751, 411, 412, 413, 415, 417, 414, 416, 418,
	419, 420, 421, 422, 752, 753, 423, 0, 0, 0,
	0, 0, 0, 0, 424, 425, 426, 754, 0, 0,
	0, 427, 0, 428, 429, 430, 0, 431, 432, 0,
	0, 433, 434, 435, 755, 756, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 0, 445, 757, 0, 758,
	446, 0, 447, 448, 449, 450, 451, 452, 453, 759,
	760, 761, 547, 0, 454, 455, 456, 0, 457, 458,
	459, 460, 461, 0, 0, 0, 0, 462, 463, 464,
	0, 0, 762, 465, 548, 466, 763, 764, 0, 765,
	0, 467, 468, 470, 0, 766, 0, 469, 471, 472,
	0, 473, 0, 0, 0, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 483, 482, 0, 485, 767, 484,
	0, 486, 487, 0, 0, 488, 489, 490, 491, 492,
	493, 496, 0, 0, 494, 495, 497, 498, 0, 499,
	500, 502, 505, 501, 503, 504, 506, 519, 520, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 522, 0, 888, 0, 523, 524, 525, 526, 527,
	534, 536, 537, 532, 533, 535, 538, 539, 541, 529,
	530, 531, 0, 540, 528, 0, 0, 0, 542, 543,
	544, 545, 0, 768, 546, 769, 549, 550, 0, 0,
	551, 0, 552, 0, 0, 554, 555, 556, 0, 0,
	557, 558, 770, 0, 559, 0, 771, 560, 561, 553,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	0, 572, 573, 772, 574, 575, 576, 773, 577, 578,
	579, 774, 580, 775, 581, 582, 0, 583, 584, 585,
	0, 586, 587, 588, 589, 590, 591, 592, 593, 776,
	594, 595, 597, 596, 598, 0, 599, 0, 600, 601,
	602, 0, 0, 0, 0, 0, 603, 604, 606, 0,
	607, 608, 609, 610, 605, 611, 612, 613, 614, 615,
	616, 0, 618, 619, 617, 620, 621, 0, 887, 623,
	624, 625, 626, 777, 627, 0, 628, 629, 637, 638,
	639, 630, 631, 633, 886, 632, 641, 642, 643, 644,
	646, 645, 0, 648, 649, 647, 650, 1527, 652, 0,
	653, 778, 654, 634, 635, 655, 656, 0, 657, 658,
	659, 660, 661, 662, 663, 779, 0, 664, 0, 665,
	666, 667, 668, 669, 670, 672, 636, 673, 678, 679,
	780, 674, 675, 676, 677, 781, 681, 682, 683, 684,
	0, 685, 686, 0, 680, 671, 0, 687, 688, 689,
	690, 691, 692, 0, 693, 694, 0, 695, 884, 783,
	784, 785, 0, 707, 0, 696, 1525, 699, 700, 701,
	786, 702, 787, 0, 703, 704, 705, 706, 697, 708,
	709, 0, 0, 710, 711, 712, 714, 716, 717, 713,
	715, 718, 0, 719, 0, 0, 720, 721, 722, 788,
	789, 790, 0, 724, 725, 723, 726, 727, 730, 728,
	729, 791, 731, 732, 733, 895, 0, 315, 0, 734,
	735, 792, 736, 737, 738, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 324, 323, 325, 326,
	327, 328, 893, 329, 330, 0, 0, 0, 0, 0,
	739, 0, 0, 0, 331, 0, 332, 333, 334, 0,
	335, 336, 337, 338, 339, 340, 341, 740, 741, 0,
	342, 742, 343, 743, 0, 744, 344, 345, 346, 347,
	348, 349, 350, 0, 0, 0, 351, 745, 746, 747,
	0, 352, 353, 748, 0, 0, 0, 354, 355, 356,
	357, 358, 359, 360, 361, 0, 0, 363, 364, 365,
	362, 366, 367, 0, 368, 0, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	381, 0, 0, 0, 0, 0, 0, 0, 382, 383,
	384, 385, 386, 0, 387, 389, 749, 750, 0, 392,
	394, 388, 390, 0, 393, 391, 395, 396, 0, 397,
	398, 399, 0, 0, 400, 401, 402, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 751, 411,
	412, 413, 415, 417, 414, 416, 418, 419, 420, 421,
	422, 752, 753, 423, 0, 0, 0, 0, 0, 0,
	0, 424, 425, 426, 754, 0, 0, 0, 427, 0,
	428, 429, 430, 0, 431, 432, 0, 0, 433, 434,
	435, 755, 756, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 0, 445, 757, 0, 758, 446, 0, 447,
	448, 449, 450, 451, 452, 453, 759, 760, 761, 547,
	0, 454, 455, 456, 0, 457, 458, 459, 460, 461,
	0, 0, 0, 0, 462, 463, 464, 0, 0, 762,
	465, 548, 466, 763, 764, 0, 765, 0, 467, 468,
	470, 0, 766, 0, 469, 471, 472, 0, 473, 0,
	0, 0, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 483, 482, 0, 485, 767, 484, 0, 486, 487,
	0, 0, 488, 489, 490, 491, 492, 493, 496, 0,
	0, 494, 495, 497, 498, 0, 499, 500, 502, 505,
	501, 503, 504, 506, 519, 520, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 522, 0,
	521, 0, 523, 524, 525, 526, 527, 534, 536, 537,
	532, 533, 535, 538, 539, 541, 529, 530, 531, 0,
	540, 528, 0, 0, 0, 542, 543, 544, 545, 0,
	768, 546, 769, 549, 550, 0, 0, 551, 0, 552,
	0, 0, 554, 555, 556, 0, 0, 557, 558, 770,
	0, 559, 0, 771, 560, 561, 553, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 0, 572, 573,
	772, 574, 575, 576, 773, 577, 578, 579, 774, 580,
	775, 581, 582, 0, 583, 584, 585, 0, 586, 587,
	588, 589, 590, 591, 592, 593, 776, 594, 595, 597,
	596, 598, 0, 599, 0, 600, 601, 602, 0, 0,
	0, 0, 0, 603, 604, 606, 0, 607, 608, 609,
	610, 605, 611, 612, 613, 614, 615, 616, 0, 618,
	619, 617, 620, 621, 0, 622, 623, 624, 625, 626,
	777, 627, 0, 628, 629, 637, 638, 639, 630, 631,
	633, 640, 632, 641, 642, 643, 644, 646, 645, 0,
	648, 649, 647, 650, 651, 652, 0, 653, 778, 654,
	634, 635, 655, 656, 0, 657, 658, 659, 660, 661,
	662, 663, 779, 0, 664, 0, 665, 666, 667, 668,
	669, 670, 672, 636, 673, 678, 679, 780, 674, 675,
	676, 677, 781, 681, 682, 683, 684, 0, 685, 686,
	0, 680, 671, 0, 687, 688, 689, 690, 691, 692,
	0, 693, 694, 0, 695, 782, 783, 784, 785, 0,
	707, 0, 696, 698, 699, 700, 701, 786, 702, 787,
	0, 703, 704, 705, 706, 697, 708, 709, 0, 0,
	710, 711, 712, 714, 716, 717, 713, 715, 718, 0,
	719, 0, 0, 720, 721, 722, 788, 789, 790, 0,
	724, 725, 723, 726, 727, 730, 728, 729, 791, 731,
	732, 733, 803, 0, 315, 0, 734, 735, 792, 736,
	737, 738, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 324, 323, 325, 326, 327, 328, 802,
	329, 330, 0, 0, 0, 0, 0, 739, 0, 0,
	0, 331, 0, 332, 333, 334, 0, 335, 336, 337,
	338, 339, 340, 341, 740, 741, 0, 342, 742, 343,
	743, 0, 744, 344, 345, 346, 347, 348, 349, 350,
	0, 0, 0, 351, 745, 746, 747, 0, 352, 353,
	748, 0, 0, 0, 354, 355, 356, 357, 358, 359,
	360, 361, 0, 0, 363, 364, 365, 362, 366, 367,
	0, 368, 0, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 381, 0, 0,
	0, 0, 0, 0, 0, 382, 383, 384, 385, 386,
	0, 387, 389, 749, 750, 0, 392, 394, 388, 390,
	0, 393, 391, 395, 396, 0, 397, 398, 399, 0,
	0, 400, 401, 402, 0, 403, 404, 405, 0, 406,
	407, 408, 0, 409, 410, 751, 411, 412, 413, 415,
	417, 414, 416, 418, 419, 420, 421, 422, 752, 753,
	423, 0, 0, 0, 0, 0, 0, 0, 424, 425,
	426, 754, 0, 0, 0, 427, 0, 428, 429, 430,
	0, 431, 432, 0, 0, 433, 434, 435, 755, 756,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 0,
	445, 757, 0, 758, 446, 0, 447, 448, 449, 450,
	451, 452, 453, 759, 760, 761, 547, 0, 454, 455,
	456, 0, 457, 458, 459, 460, 461, 0, 0, 0,
	0, 462, 463, 464, 0, 0, 762, 465, 548, 466,
	763, 764, 0, 765, 0, 467, 468, 470, 0, 766,
	0, 469, 471, 472, 0, 473, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 483, 482,
	0, 485, 767, 484, 0, 486, 487, 0, 0, 488,
	489, 490, 491, 492, 493, 496, 0, 0, 494, 495,
	497, 498, 0, 499, 500, 502, 505, 501, 503, 504,
	506, 519, 520, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 522, 0, 521, 0, 523,
	524, 525, 526, 527, 534, 536, 537, 532, 533, 535,
	538, 539, 541, 529, 530, 531, 0, 540, 528, 0,
	0, 0, 542, 543, 544, 545, 0, 768, 546, 769,
	549, 550, 0, 0, 551, 0, 552, 0, 0, 554,
	555, 556, 0, 0, 557, 558, 770, 0, 559, 0,
	771, 560, 561, 553, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 0, 572, 573, 772, 574, 575,
	576, 773, 577, 578, 579, 774, 580, 775, 801, 582,
	0, 583, 584, 585, 0, 586, 587, 588, 589, 590,
	591, 592, 593, 776, 594, 595, 597, 596, 598, 0,
	599, 0, 600, 601, 602, 0, 0, 0, 0, 0,
	603, 604, 606, 0, 607, 608, 609, 610, 605, 611,
	612, 613, 614, 615, 616, 0, 618, 619, 617, 620,
	621, 0, 622, 623, 624, 625, 626, 777, 627, 0,
	628, 629, 637, 638, 639, 630, 631, 633, 640, 632,
	641, 642, 643, 644, 646, 645, 0, 648, 649, 647,
	650, 651, 652, 0, 653, 778, 654, 634, 635, 655,
	656, 0, 657, 658, 659, 660, 661, 662, 663, 779,
	0, 664, 0, 665, 666, 667, 668, 669, 670, 672,
	636, 673, 678, 679, 780, 674, 675, 676, 677, 781,
	681, 682, 683, 684, 0, 685, 686, 0, 680, 671,
	0, 687, 688, 689, 690, 691, 692, 0, 693, 694,
	0, 695, 782, 783, 784, 785, 0, 707, 0, 696,
	698, 699, 700, 701, 786, 702, 787, 0, 703, 704,
	705, 706, 697, 708, 709, 0, 0, 710, 711, 712,
	714, 716, 717, 713, 715, 718, 0, 719, 0, 0,
	720, 721, 722, 788, 789, 790, 0, 724, 725, 723,
	726, 727, 730, 728, 729, 791, 731, 732, 733, 315,
	3411, 0, 0, 734, 735, 792, 736, 737, 738, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 324, 323,
	325, 326, 327, 328, 0, 329, 330, 0, 0, 0,
	0, 0, 739, 0, 0, 0, 331, 0, 332, 333,
	334, 0, 335, 336, 337, 338, 339, 340, 341, 740,
	741, 0, 342, 742, 343, 743, 0, 744, 344, 345,
	346, 347, 348, 349, 350, 0, 0, 0, 351, 745,
	746, 747, 0, 352, 353, 748, 0, 0, 0, 354,
	355, 356, 357, 358, 359, 360, 361, 0, 0, 363,
	364, 365, 362, 366, 367, 0, 368, 0, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 381, 0, 0, 0, 0, 0, 0, 0,
	382, 383, 384, 385, 386, 0, 387, 389, 749, 750,
	0, 392, 394, 388, 390, 0, 393, 391, 395, 396,
	0, 397, 398, 399, 0, 0, 400, 401, 402, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	751, 411, 412, 413, 415, 417, 414, 416, 418, 419,
	420, 421, 422, 752, 753, 423, 0, 0, 0, 0,
	0, 0, 0, 424, 425, 426, 754, 0, 0, 0,
	427, 0, 428, 429, 430, 0, 431, 432, 0, 0,
	433, 434, 435, 755, 756, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 0, 445, 757, 0, 758, 446,
	0, 447, 448, 449, 450, 451, 452, 453, 759, 760,
	761, 547, 0, 454, 455, 456, 0, 457, 458, 459,
	460, 461, 0, 0, 0, 0, 462, 463, 464, 0,
	0, 762, 465, 548, 466, 763, 764, 0, 765, 0,
	467, 468, 470, 0, 766, 0, 469, 471, 472, 0,
	473, 0, 0, 0, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 483, 482, 0, 485, 767, 484, 0,
	486, 487, 0, 0, 488, 489, 490, 491, 492, 493,
	496, 0, 0, 494, 495, 497, 498, 0, 499, 500,
	502, 505, 501, 503, 504, 506, 519, 520, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	522, 0, 521, 0, 523, 524, 525, 526, 527, 534,
	536, 537, 532, 533, 535, 538, 539, 541, 529, 530,
	531, 0, 540, 528, 0, 0, 0, 542, 543, 544,
	545, 0, 768, 546, 769, 549, 550, 0, 0, 551,
	0, 552, 0, 0, 554, 555, 556, 0, 0, 557,
	558, 770, 0, 559, 0, 771, 560, 561, 553, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 0,
	572, 573, 772, 574, 575, 576, 773, 577, 578, 579,
	774, 580, 775, 581, 582, 0, 583, 584, 585, 0,
	586, 587, 588, 589, 590, 591, 592, 593, 776, 594,
	595, 597, 596, 598, 0, 599, 0, 600, 601, 602,
	0, 0, 0, 0, 0, 603, 604, 606, 0, 607,
	608, 609, 610, 605, 611, 612, 613, 614, 615, 616,
	0, 618, 619, 617, 620, 621, 0, 622, 623, 624,
	625, 626, 777, 627, 0, 628, 629, 637, 638, 639,
	630, 631, 633, 640, 632, 641, 642, 643, 644, 646,
	645, 0, 648, 649, 647, 650, 651, 652, 0, 653,
	778, 654, 634, 635, 655, 656, 0, 657, 658, 659,
	660, 661, 662, 663, 779, 0, 664, 0, 665, 666,
	667, 668, 669, 670, 672, 636, 673, 678, 679, 780,
	674, 675, 676, 677, 781, 681, 682, 683, 684, 0,
	685, 686, 0, 680, 671, 0, 687, 688, 689, 690,
	691, 692, 0, 693, 694, 0, 695, 782, 783, 784,
	785, 0, 707, 0, 696, 698, 699, 700, 701, 786,
	702, 787, 0, 703, 704, 705, 706, 697, 708, 709,
	0, 0, 710, 711, 712, 714, 716, 717, 713, 715,
	718, 0, 719, 0, 0, 720, 721, 722, 788, 789,
	790, 0, 724, 725, 723, 726, 727, 730, 728, 729,
	791, 731, 732, 733, 315, 0, 0, 0, 734, 735,
	792, 736, 737, 738, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 324, 323, 325, 326, 327, 328, 0,
	329, 330, 0, 0, 0, 0, 0, 739, 0, 0,
	0, 331, 0, 332, 333, 334, 0, 335, 336, 337,
	338, 339, 340, 341, 740, 741, 0, 342, 742, 343,
	743, 0, 744, 344, 345, 346, 347, 348, 349, 350,
	0, 0, 0, 351, 745, 746, 747, 0, 352, 353,
	748, 0, 0, 0, 354, 355, 356, 357, 358, 359,
	360, 361, 0, 0, 363, 364, 365, 362, 366, 367,
	0, 368, 0, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 381, 0, 0,
	0, 0, 0, 0, 0, 382, 383, 384, 385, 386,
	0, 387, 389, 749, 750, 0, 392, 394, 388, 390,
	0, 393, 391, 395, 396, 0, 397, 398, 399, 0,
	0, 400, 401, 402, 0, 403, 404, 405, 0, 406,
	407, 408, 0, 409, 410, 751, 411, 412, 413, 415,
	417, 414, 416, 418, 419, 420, 421, 422, 752, 753,
	423, 0, 0, 0, 0, 0, 0, 0, 424, 425,
	426, 754, 0, 0, 0, 427, 0, 428, 429, 430,
	0, 431, 432, 0, 0, 433, 434, 435, 755, 756,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 0,
	445, 757, 0, 758, 446, 0, 447, 448, 449, 450,
	451, 452, 453, 759, 760, 761, 547, 0, 454, 455,
	456, 0, 457, 458, 459, 460, 461, 0, 0, 0,
	0, 462, 463, 464, 0, 0, 762, 465, 548, 466,
	763, 764, 0, 765, 0, 467, 468, 470, 0, 766,
	0, 469, 471, 472, 0, 473, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 483, 482,
	0, 485, 767, 484, 0, 486, 487, 0, 0, 488,
	489, 490, 491, 492, 493, 496, 0, 0, 494, 495,
	497, 498, 0, 499, 500, 502, 505, 501, 503, 504,
	506, 519, 520, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 522, 0, 521, 0, 523,
	524, 525, 526, 527, 534, 536, 537, 532, 533, 535,
	538, 539, 541, 529, 530, 531, 0, 540, 528, 0,
	0, 0, 542, 543, 544, 545, 0, 768, 546, 769,
	549, 550, 0, 0, 551, 0, 552, 0, 0, 554,
	555, 556, 0, 0, 557, 558, 770, 0, 559, 0,
	771, 560, 561, 553, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 0, 572, 573, 772, 574, 575,
	576, 773, 577, 578, 579, 774, 580, 775, 581, 582,
	5252, 583, 584, 585, 0, 586, 587, 588, 589, 590,
	591, 592, 593, 776, 594, 595, 597, 596, 598, 0,
	599, 0, 600, 601, 602, 0, 0, 0, 0, 0,
	603, 604, 606, 0, 607, 608, 609, 610, 605, 611,
	612, 613, 614, 615, 616, 0, 618, 619, 617, 620,
	621, 0, 622, 623, 624, 625, 626, 777, 627, 0,
	628, 629, 637, 638, 639, 630, 631, 633, 640, 632,
	641, 642, 643, 644, 646, 645, 0, 648, 649, 647,
	650, 651, 652, 0, 653, 778, 654, 634, 635, 655,
	656, 0, 657, 658, 659, 660, 661, 662, 663, 779,
	0, 664, 0, 665, 666, 667, 668, 669, 670, 672,
	636, 673, 678, 679, 780, 674, 675, 676, 677, 781,
	681, 682, 683, 684, 0, 685, 686, 0, 680, 671,
	0, 687, 688, 689, 690, 691, 692, 0, 693, 694,
	0, 695, 782, 783, 784, 785, 0, 707, 0, 696,
	698, 699, 700, 701, 786, 702, 787, 0, 703, 704,
	705, 706, 697, 708, 709, 0, 0, 710, 711, 712,
	714, 716, 717, 713, 715, 718, 0, 719, 0, 0,
	720, 721, 722, 788, 789, 790, 0, 724, 725, 723,
	726, 727, 730, 728, 729, 791, 731, 732, 733, 315,
	3934, 0, 0, 734, 735, 792, 736, 737, 738, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 324, 323,
	325, 326, 327, 328, 0, 329, 330, 0, 0, 0,
	0, 0, 739, 0, 0, 0, 331, 0, 332, 333,
	334, 0, 335, 336, 337, 338, 339, 340, 341, 740,
	741, 0, 342, 742, 343, 743, 0, 744, 344, 345,
	346, 347, 348, 349, 350, 0, 0, 0, 351, 745,
	746, 747, 0, 352, 353, 748, 0, 0, 0, 354,
	355, 356, 357, 358, 359, 360, 361, 0, 0, 363,
	364, 365, 362, 366, 367, 0, 368, 0, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 381, 0, 0, 0, 0, 0, 0, 0,
	382, 383, 384, 385, 386, 0, 387, 389, 749, 750,
	0, 392, 394, 388, 390, 0, 393, 391, 395, 396,
	0, 397, 398, 399, 0, 0, 400, 401, 402, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	751, 411, 412, 413, 415, 417, 414, 416, 418, 419,
	420, 421, 422, 752, 753, 423, 0, 0, 0, 0,
	0, 0, 0, 424, 425, 426, 754, 0, 0, 0,
	427, 0, 428, 429, 430, 0, 431, 432, 0, 0,
	433, 434, 435, 755, 756, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 0, 445, 757, 0, 758, 446,
	0, 447, 448, 449, 450, 451, 452, 453, 759, 760,
	761, 547, 0, 454, 455, 456, 0, 457, 458, 459,
	460, 461, 0, 0, 0, 0, 462, 463, 464, 0,
	0, 762, 465, 548, 466, 763, 764, 0, 765, 0,
	467, 468, 470, 0, 766, 0, 469, 471, 472, 0,
	473, 0, 0, 0, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 483, 482, 0, 485, 767, 484, 0,
	486, 487, 0, 0, 488, 489, 490, 491, 492, 493,
	496, 0, 0, 494, 495, 497, 498, 0, 499, 500,
	502, 505, 501, 503, 504, 506, 519, 520, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	522, 0, 521, 0, 523, 524, 525, 526, 527, 534,
	536, 537, 532, 533, 535, 538, 539, 541, 529, 530,
	531, 0, 540, 528, 0, 0, 0, 542, 543, 544,
	545, 0, 768, 546, 769, 549, 550, 0, 0, 551,
	0, 552, 0, 0, 554, 555, 556, 0, 0, 557,
	558, 770, 0, 559, 0, 771, 560, 561, 553, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 0,
	572, 573, 772, 574, 575, 576, 773, 577, 578, 579,
	774, 580, 775, 581, 582, 0, 583, 584, 585, 0,
	586, 587, 588, 589, 590, 591, 592, 593, 776, 594,
	595, 597, 596, 598, 0, 599, 0, 600, 601, 602,
	0, 0, 0, 0, 0, 603, 604, 606, 0, 607,
	608, 609, 610, 605, 611, 612, 613, 614, 615, 616,
	0, 618, 619, 617, 620, 621, 0, 622, 623, 624,
	625, 626, 777, 627, 0, 628, 629, 637, 638, 639,
	630, 631, 633, 640, 632, 641, 642, 643, 644, 646,
	645, 0, 648, 649, 647, 650, 651, 652, 0, 653,
	778, 654, 634, 635, 655, 656, 0, 657, 658, 659,
	660, 661, 662, 663, 779, 0, 664, 0, 665, 666,
	667, 668, 669, 670, 672, 636, 673, 678, 679, 780,
	674, 675, 676, 677, 781, 681, 682, 683, 684, 0,
	685, 686, 0, 680, 671, 0, 687, 688, 689, 690,
	691, 692, 0, 693, 694, 0, 695, 782, 783, 784,
	785, 0, 707, 0, 696, 698, 699, 700, 701, 786,
	702, 787, 0, 703, 704, 705, 706, 697, 708, 709,
	0, 0, 710, 711, 712, 714, 716, 717, 713, 715,
	718, 0, 719, 0, 0, 720, 721, 722, 788, 789,
	790, 0, 724, 725, 723, 726, 727, 730, 728, 729,
	791, 731, 732, 733, 315, 0, 0, 0, 734, 735,
	792, 736, 737, 738, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 324, 323, 325, 326, 327, 328, 0,
	329, 330, 0, 0, 0, 0, 0, 739, 0, 0,
	0, 331, 0, 332, 333, 334, 0, 335, 336, 337,
	338, 339, 340, 341, 740, 741, 0, 342, 742, 343,
	743, 0, 744, 344, 345, 346, 347, 348, 349, 350,
	0, 0, 0, 351, 745, 746, 747, 0, 352, 353,
	748, 0, 0, 0, 354, 355, 356, 357, 358, 359,
	360, 361, 0, 0, 363, 364, 365, 362, 366, 367,
	0, 368, 0, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 381, 0, 0,
	0, 0, 0, 0, 0, 382, 383, 384, 385, 386,
	0, 387, 389, 749, 750, 0, 392, 394, 388, 390,
	0, 393, 391, 395, 396, 0, 397, 398, 399, 0,
	0, 400, 401, 402, 0, 403, 404, 405, 0, 406,
	407, 408, 0, 409, 410, 751, 411, 412, 413, 415,
	417, 414, 416, 418, 419, 420, 421, 422, 752, 753,
	423, 0, 0, 0, 0, 0, 0, 0, 424, 425,
	426, 754, 0, 0, 0, 427, 0, 428, 429, 430,
	0, 431, 432, 0, 0, 433, 434, 435, 755, 756,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 0,
	445, 757, 0, 758, 446, 0, 447, 448, 449, 450,
	451, 452, 453, 759, 760, 761, 547, 0, 454, 455,
	456, 0, 457, 458, 459, 460, 461, 0, 0, 0,
	0, 462, 463, 464, 0, 0, 762, 465, 548, 466,
	763, 764, 0, 765, 0, 467, 468, 470, 0, 766,
	0, 469, 471, 472, 0, 473, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 483, 482,
	0, 485, 767, 484, 0, 486, 487, 0, 0, 488,
	489, 490, 491, 492, 493, 496, 0, 0, 494, 495,
	497, 498, 0, 499, 500, 502, 505, 501, 503, 504,
	506, 519, 520, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 522, 0, 521, 0, 523,
	524, 525, 526, 527, 534, 536, 537, 532, 533, 535,
	538, 539, 541, 529, 530, 531, 0, 540, 528, 0,
	0, 0, 542, 543, 544, 545, 0, 768, 546, 769,
	549, 550, 0, 0, 551, 0, 552, 0, 0, 554,
	555, 556, 0, 0, 557, 558, 770, 0, 559, 0,
	771, 560, 561, 553, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 0, 572, 573, 772, 574, 575,
	576, 773, 577, 578, 579, 774, 580, 775, 581, 582,
	4806, 583, 584, 585, 0, 586, 587, 588, 589, 590,
	591, 592, 593, 776, 594, 595, 597, 596, 598, 0,
	599, 0, 600, 601, 602, 0, 0, 0, 0, 0,
	603, 604, 606, 0, 607, 608, 609, 610, 605, 611,
	612, 613, 614, 615, 616, 0, 618, 619, 617, 620,
	621, 0, 622, 623, 624, 625, 626, 777, 627, 0,
	628, 629, 637, 638, 639, 630, 631, 633, 640, 632,
	641, 642, 643, 644, 646, 645, 0, 648, 649, 647,
	650, 651, 652, 0, 653, 778, 654, 634, 635, 655,
	656, 0, 657, 658, 659, 660, 661, 662, 663, 779,
	0, 664, 0, 665, 666, 667, 668, 669, 670, 672,
	636, 673, 678, 679, 780, 674, 675, 676, 677, 781,
	681, 682, 683, 684, 0, 685, 686, 0, 680, 671,
	0, 687, 688, 689, 690, 691, 692, 0, 693, 694,
	0, 695, 782, 783, 784, 785, 0, 707, 0, 696,
	698, 699, 700, 701, 786, 702, 787, 0, 703, 704,
	705, 706, 697, 708, 709, 0, 0, 710, 711, 712,
	714, 716, 717, 713, 715, 718, 0, 719, 0, 0,
	720, 721, 722, 788, 789, 790, 0, 724, 725, 723,
	726, 727, 730, 728, 729, 791, 731, 732, 733, 315,
	0, 0, 0, 734, 735, 792, 736, 737, 738, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 324, 323,
	325, 326, 327, 328, 0, 329, 330, 0, 0, 0,
	0, 0, 739, 0, 0, 0, 331, 0, 332, 333,
	334, 0, 335, 336, 337, 338, 339, 340, 341, 740,
	741, 0, 342, 742, 343, 743, 0, 744, 344, 345,
	346, 347, 348, 349, 350, 0, 0, 0, 351, 745,
	746, 747, 0, 352, 353, 748, 0, 0, 0, 354,
	355, 356, 357, 358, 359, 360, 361, 0, 0, 363,
	364, 365, 362, 366, 367, 0, 368, 0, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 381, 0, 0, 0, 0, 0, 0, 0,
	382, 383, 384, 385, 386, 0, 387, 389, 749, 750,
	4500, 392, 394, 388, 390, 0, 393, 391, 395, 396,
	0, 397, 398, 399, 0, 0, 400, 401, 402, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	751, 411, 412, 413, 415, 417, 414, 416, 418, 419,
	420, 421, 422, 752, 753, 423, 0, 0, 0, 0,
	0, 0, 0, 424, 425, 426, 754, 0, 0, 0,
	427, 0, 428, 429, 430, 0, 431, 432, 0, 0,
	433, 434, 435, 755, 756, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 0, 445, 757, 0, 758, 446,
	0, 447, 448, 449, 450, 451, 452, 453, 759, 760,
	761, 547, 0, 454, 455, 456, 0, 457, 458, 459,
	460, 461, 0, 0, 0, 0, 462, 463, 464, 0,
	0, 762, 465, 548, 466, 763, 764, 0, 765, 0,
	467, 468, 470, 0, 766, 0, 469, 471, 472, 0,
	473, 0, 0, 0, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 483, 482, 0, 485, 767, 484, 0,
	486, 487, 0, 0, 488, 489, 490, 491, 492, 493,
	496, 0, 0, 494, 495, 497, 498, 0, 499, 500,
	502, 505, 501, 503, 504, 506, 519, 520, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	522, 0, 521, 0, 523, 524, 525, 526, 527, 534,
	536, 537, 532, 533, 535, 538, 539, 541, 529, 530,
	531, 0, 540, 528, 0, 0, 0, 542, 543, 544,
	545, 0, 768, 546, 769, 549, 550, 0, 0, 551,
	0, 552, 0, 0, 554, 555, 556, 0, 0, 557,
	558, 770, 0, 559, 0, 771, 560, 561, 553, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 0,
	572, 573, 772, 574, 575, 576, 773, 577, 578, 579,
	774, 580, 775, 581, 582, 0, 583, 584, 585, 0,
	586, 587, 588, 589, 590, 591, 592, 593, 776, 594,
	595, 597, 596, 598, 0, 599, 0, 600, 601, 602,
	0, 0, 0, 0, 0, 603, 604, 606, 0, 607,
	608, 609, 610, 605, 611, 612, 613, 614, 615, 616,
	0, 618, 619, 617, 620, 621, 0, 622, 623, 624,
	625, 626, 777, 627, 0, 628, 629, 637, 638, 639,
	630, 631, 633, 640, 632, 641, 642, 643, 644, 646,
	645, 0, 648, 649, 647, 650, 651, 652, 0, 653,
	778, 654, 634, 635, 655, 656, 0, 657, 658, 659,
	660, 661, 662, 663, 779, 0, 664, 0, 665, 666,
	667, 668, 669, 670, 672, 636, 673, 678, 679, 780,
	674, 675, 676, 677, 781, 681, 682, 683, 684, 0,
	685, 686, 0, 680, 671, 0, 687, 688, 689, 690,
	691, 692, 0, 693, 694, 0, 695, 782, 783, 784,
	785, 0, 707, 0, 696, 698, 699, 700, 701, 786,
	702, 787, 0, 703, 704, 705, 706, 697, 708, 709,
	0, 0, 710, 711, 712, 714, 716, 717, 713, 715,
	718, 0, 719, 0, 0, 720, 721, 722, 788, 789,
	790, 0, 724, 725, 723, 726, 727, 730, 728, 729,
	791, 731, 732, 733, 315, 0, 0, 0, 734, 735,
	792, 736, 737, 738, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 324, 323, 325, 326, 327, 328, 0,
	329, 330, 0, 0, 0, 0, 0, 739, 0, 3135,
	0, 331, 0, 332, 333, 334, 0, 335, 336, 337,
	338, 339, 340, 341, 740, 741, 0, 342, 742, 343,
	743, 0, 744, 344, 345, 346, 347, 348, 349, 350,
	0, 0, 0, 351, 745, 746, 747, 0, 352, 353,
	748, 0, 0, 0, 354, 355, 356, 357, 358, 359,
	360, 361, 0, 0, 363, 364, 365, 362, 366, 367,
	0, 368, 0, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 381, 0, 0,
	0, 0, 0, 0, 0, 382, 383, 384, 385, 386,
	0, 387, 389, 749, 750, 0, 392, 394, 388, 390,
	0, 393, 391, 395, 396, 0, 397, 398, 399, 0,
	0, 400, 401, 402, 0, 403, 404, 405, 0, 406,
	407, 408, 0, 409, 410, 751, 411, 412, 413, 415,
	417, 414, 416, 418, 419, 420, 421, 422, 752, 753,
	423, 0, 0, 0, 0, 0, 0, 0, 424, 425,
	426, 754, 0, 0, 0, 427, 0, 428, 429, 430,
	0, 431, 432, 0, 0, 433, 434, 435, 755, 756,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 0,
	445, 757, 0, 758, 446, 0, 447, 448, 449, 450,
	451, 452, 453, 759, 760, 761, 547, 0, 454, 455,
	456, 0, 457, 458, 459, 460, 461, 0, 0, 0,
	0, 462, 463, 464, 0, 0, 762, 465, 548, 466,
	763, 764, 0, 765, 0, 467, 468, 470, 0, 766,
	0, 469, 471, 472, 0, 473, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 483, 482,
	0, 485, 767, 484, 0, 486, 487, 0, 0, 488,
	489, 490, 491, 492, 493, 496, 0, 0, 494, 495,
	497, 498, 0, 499, 500, 502, 505, 501, 503, 504,
	506, 519, 520, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 522, 0, 521, 0, 523,
	524, 525, 526, 527, 534, 536, 537, 532, 533, 535,
	538, 539, 541, 529, 530, 531, 0, 540, 528, 0,
	0, 0, 542, 543, 544, 545, 0, 768, 546, 769,
	549, 550, 0, 0, 551, 0, 552, 0, 0, 554,
	555, 556, 0, 0, 557, 558, 770, 0, 559, 0,
	771, 560, 561, 553, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 0, 572, 573, 772, 574, 575,
	576, 773, 577, 578, 579, 774, 580, 775, 581, 582,
	0, 583, 584, 585, 0, 586, 587, 588, 589, 590,
	591, 592, 593, 776, 594, 595, 597, 596, 598, 0,
	599, 0, 600, 601, 602, 0, 0, 0, 0, 0,
	603, 604, 606, 0, 607, 608, 609, 610, 605, 611,
	612, 613, 614, 615, 616, 0, 618, 619, 617, 620,
	621, 0, 622, 623, 624, 625, 626, 777, 627, 0,
	628, 629, 637, 638, 639, 630, 631, 633, 640, 632,
	641, 642, 643, 644, 646, 645, 0, 648, 649, 647,
	650, 651, 652, 0, 653, 778, 654, 634, 635, 655,
	656, 0, 657, 658, 659, 660, 661, 662, 663, 779,
	0, 664, 0, 665, 666, 667, 668, 669, 670, 672,
	636, 673, 678, 679, 780, 674, 675, 676, 677, 781,
	681, 682, 683, 684, 0, 685, 686, 0, 680, 671,
	0, 687, 688, 689, 690, 691, 692, 0, 693, 694,
	0, 695, 782, 783, 784, 785, 0, 707, 0, 696,
	698, 699, 700, 701, 786, 702, 787, 0, 703, 704,
	705, 706, 697, 708, 709, 0, 0, 710, 711, 712,
	714, 716, 717, 713, 715, 718, 0, 719, 0, 0,
	720, 721, 722, 788, 789, 790, 0, 724, 725, 723,
	726, 727, 730, 728, 729, 791, 731, 732, 733, 315,
	0, 0, 0, 734, 735, 792, 736, 737, 738, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 324, 323,
	325, 326, 327, 328, 0, 329, 330, 0, 0, 0,
	0, 0, 739, 0, 3126, 0, 331, 0, 332, 333,
	334, 0, 335, 336, 337, 338, 339, 340, 341, 740,
	741, 0, 342, 742, 343, 743, 0, 744, 344, 345,
	346, 347, 348, 349, 350, 0, 0, 0, 351, 745,
	746, 747, 0, 352, 353, 748, 0, 0, 0, 354,
	355, 356, 357, 358, 359, 360, 361, 0, 0, 363,
	364, 365, 362, 366, 367, 0, 368, 0, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 381, 0, 0, 0, 0, 0, 0, 0,
	382, 383, 384, 385, 386, 0, 387, 389, 749, 750,
	0, 392, 394, 388, 390, 0, 393, 391, 395, 396,
	0, 397, 398, 399, 0, 0, 400, 401, 402, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	751, 411, 412, 413, 415, 417, 414, 416, 418, 419,
	420, 421, 422, 752, 753, 423, 0, 0, 0, 0,
	0, 0, 0, 424, 425, 426, 754, 0, 0, 0,
	427, 0, 428, 429, 430, 0, 431, 432, 0, 0,
	433, 434, 435, 755, 756, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 0, 445, 757, 0, 758, 446,
	0, 447, 448, 449, 450, 451, 452, 453, 759, 760,
	761, 547, 0, 454, 455, 456, 0, 457, 458, 459,
	460, 461, 0, 0, 0, 0, 462, 463, 464, 0,
	0, 762, 465, 548, 466, 763, 764, 0, 765, 0,
	467, 468, 470, 0, 766, 0, 469, 471, 472, 0,
	473, 0, 0, 0, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 483, 482, 0, 485, 767, 484, 0,
	486, 487, 0, 0, 488, 489, 490, 491, 492, 493,
	496, 0, 0, 494, 495, 497, 498, 0, 499, 500,
	502, 505, 501, 503, 504, 506, 519, 520, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	522, 0, 521, 0, 523, 524, 525, 526, 527, 534,
	536, 537, 532, 533, 535, 538, 539, 541, 529, 530,
	531, 0, 540, 528, 0, 0, 0, 542, 543, 544,
	545, 0, 768, 546, 769, 549, 550, 0, 0, 551,
	0, 552, 0, 0, 554, 555, 556, 0, 0, 557,
	558, 770, 0, 559, 0, 771, 560, 561, 553, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 0,
	572, 573, 772, 574, 575, 576, 773, 577, 578, 579,
	774, 580, 775, 581, 582, 0, 583, 584, 585, 0,
	586, 587, 588, 589, 590, 591, 592, 593, 776, 594,
	595, 597, 596, 598, 0, 599, 0, 600, 601, 602,
	0, 0, 0, 0, 0, 603, 604, 606, 0, 607,
	608, 609, 610, 605, 611, 612, 613, 614, 615, 616,
	0, 618, 619, 617, 620, 621, 0, 622, 623, 624,
	625, 626, 777, 627, 0, 628, 629, 637, 638, 639,
	630, 631, 633, 640, 632, 641, 642, 643, 644, 646,
	645, 0, 648, 649, 647, 650, 651, 652, 0, 653,
	778, 654, 634, 635, 655, 656, 0, 657, 658, 659,
	660, 661, 662, 663, 779, 0, 664, 0, 665, 666,
	667, 668, 669, 670, 672, 636, 673, 678, 679, 780,
	674, 675, 676, 677, 781, 681, 682, 683, 684, 0,
	685, 686, 0, 680, 671, 0, 687, 688, 689, 690,
	691, 692, 0, 693, 694, 0, 695, 782, 783, 784,
	785, 0, 707, 0, 696, 698, 699, 700, 701, 786,
	702, 787, 0, 703, 704, 705, 706, 697, 708, 709,
	0, 0, 710, 711, 712, 714, 716, 717, 713, 715,
	718, 0, 719, 0, 0, 720, 721, 722, 788, 789,
	790, 0, 724, 725, 723, 726, 727, 730, 728, 729,
	791, 731, 732, 733, 315, 3411, 0, 0, 734, 735,
	792, 736, 737, 738, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 324, 323, 325, 326, 327, 328, 0,
	329, 330, 0, 0, 0, 0, 0, 739, 0, 0,
	0, 331, 0, 332, 333, 334, 0, 335, 336, 337,
	338, 339, 340, 341, 740, 741, 0, 342, 742, 343,
	743, 0, 744, 344, 345, 346, 347, 348, 349, 350,
	0, 0, 0, 351, 745, 746, 747, 0, 352, 353,
	748, 0, 0, 0, 354, 355, 356, 357, 358, 359,
	360, 361, 0, 0, 363, 364, 365, 362, 366, 367,
	0, 368, 0, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 381, 0, 0,
	0, 0, 0, 0, 0, 382, 383, 384, 385, 386,
	0, 387, 389, 749, 750, 0, 392, 394, 388, 390,
	0, 393, 391, 395, 396, 0, 397, 398, 399, 0,
	0, 400, 401, 402, 0, 403, 404, 405, 0, 406,
	407, 408, 0, 409, 410, 751, 411, 412, 413, 415,
	417, 414, 416, 418, 419, 420, 421, 422, 752, 753,
	423, 0, 0, 0, 0, 0, 0, 0, 424, 425,
	426, 754, 0, 0, 0, 427, 0, 428, 429, 430,
	0, 431, 432, 0, 0, 433, 434, 435, 755, 756,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 0,
	445, 757, 0, 758, 446, 0, 447, 448, 449, 450,
	451, 452, 453, 759, 760, 761, 547, 0, 454, 455,
	456, 0, 457, 458, 459, 460, 461, 0, 0, 0,
	0, 462, 463, 464, 0, 0, 762, 465, 548, 466,
	763, 764, 0, 765, 0, 467, 468, 470, 0, 766,
	0, 469, 471, 472, 0, 473, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 483, 482,
	0, 485, 767, 484, 0, 486, 487, 0, 0, 488,
	489, 490, 491, 492, 493, 496, 0, 0, 494, 495,
	497, 498, 0, 499, 500, 502, 505, 501, 503, 504,
	506, 519, 520, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 522, 0, 521, 0, 523,
	524, 525, 526, 527, 534, 536, 537, 532, 533, 535,
	538, 539, 541, 529, 530, 531, 0, 540, 528, 0,
	0, 0, 542, 543, 544, 545, 0, 768, 546, 769,
	549, 550, 0, 0, 551, 0, 552, 0, 0, 554,
	555, 3491, 0, 0, 557, 558, 770, 0, 559, 0,
	771, 560, 561, 553, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 0, 572, 573, 772, 574, 575,
	576, 773, 577, 578, 579, 774, 580, 775, 581, 582,
	0, 583, 584, 585, 0, 586, 587, 588, 589, 590,
	591, 592, 593, 776, 594, 595, 597, 596, 598, 0,
	599, 0, 600, 601, 602, 0, 0, 0, 0, 0,
	603, 604, 606, 0, 607, 608, 609, 610, 605, 611,
	612, 613, 614, 615, 616, 0, 618, 619, 617, 620,
	621, 0, 622, 623, 624, 625, 626, 777, 627, 0,
	628, 629, 637, 638, 639, 630, 631, 633, 640, 632,
	641, 642, 643, 644, 646, 645, 0, 648, 649, 647,
	650, 651, 652, 0, 653, 778, 654, 634, 635, 655,
	656, 0, 657, 658, 659, 660, 661, 662, 663, 779,
	0, 664, 0, 665, 666, 667, 668, 669, 670, 672,
	636, 673, 678, 679, 780, 674, 675, 676, 677, 781,
	681, 682, 683, 684, 0, 685, 686, 0, 680, 671,
	0, 687, 688, 689, 690, 691, 692, 0, 693, 694,
	0, 695, 782, 783, 784, 785, 0, 707, 0, 696,
	698, 699, 700, 701, 786, 702, 787, 0, 703, 704,
	705, 706, 697, 708, 709, 0, 0, 710, 711, 712,
	714, 716, 717, 713, 715, 718, 0, 719, 0, 0,
	720, 721, 722, 788, 789, 790, 0, 724, 725, 723,
	726, 727, 730, 728, 729, 791, 731, 732, 733, 315,
	0, 0, 0, 734, 735, 792, 736, 737, 738, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 324, 323,
	325, 326, 327, 328, 0, 329, 330, 0, 0, 0,
	0, 0, 739, 0, 0, 0, 331, 0, 332, 333,
	334, 0, 335, 336, 337, 338, 339, 340, 341, 740,
	741, 0, 342, 742, 343, 743, 0, 744, 344, 345,
	346, 347, 348, 349, 350, 0, 0, 0, 351, 745,
	746, 747, 0, 352, 353, 748, 0, 0, 0, 354,
	355, 356, 357, 358, 359, 360, 361, 0, 0, 363,
	364, 365, 362, 366, 367, 0, 368, 0, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 381, 0, 0, 0, 0, 0, 0, 0,
	382, 383, 384, 385, 386, 0, 387, 389, 749, 750,
	0, 392, 394, 388, 390, 0, 393, 391, 395, 396,
	0, 397, 398, 399, 0, 0, 400, 401, 402, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	751, 411, 412, 413, 415, 417, 414, 416, 418, 419,
	420, 421, 422, 752, 753, 423, 0, 0, 0, 0,
	0, 0, 0, 424, 425, 426, 754, 0, 0, 0,
	427, 0, 428, 429, 430, 0, 431, 432, 0, 0,
	433, 434, 435, 755, 756, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 0, 445, 757, 0, 758, 446,
	0, 447, 448, 449, 450, 451, 452, 453, 759, 760,
	761, 547, 0, 454, 455, 456, 0, 457, 458, 459,
	460, 461, 0, 0, 0, 0, 462, 463, 464, 0,
	0, 762, 465, 548, 466, 763, 764, 0, 765, 0,
	467, 468, 470, 0, 766, 0, 469, 471, 472, 0,
	473, 0, 0, 0, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 483, 482, 0, 485, 767, 484, 0,
	486, 487, 0, 0, 488, 489, 490, 491, 492, 493,
	496, 0, 0, 494, 495, 497, 498, 0, 499, 500,
	502, 505, 501, 503, 504, 506, 519, 520, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	522, 0, 521, 0, 523, 524, 525, 526, 527, 534,
	536, 537, 532, 533, 535, 538, 539, 541, 529, 530,
	531, 0, 540, 528, 0, 0, 0, 542, 543, 544,
	545, 0, 768, 546, 769, 549, 550, 0, 0, 551,
	0, 552, 0, 0, 554, 555, 556, 0, 0, 557,
	558, 770, 0, 559, 0, 771, 560, 561, 553, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 0,
	572, 573, 772, 574, 575, 576, 773, 577, 578, 579,
	774, 580, 775, 581, 582, 2462, 583, 584, 585, 0,
	586, 587, 588, 589, 590, 591, 592, 593, 776, 594,
	595, 597, 596, 598, 0, 599, 0, 600, 601, 602,
	0, 0, 0, 0, 0, 603, 604, 606, 0, 607,
	608, 609, 610, 605, 611, 612, 613, 614, 615, 616,
	0, 618, 619, 617, 620, 621, 0, 887, 623, 624,
	625, 626, 777, 627, 0, 628, 629, 637, 638, 639,
	630, 631, 633, 886, 632, 641, 642, 643, 644, 3343,
	645, 0, 648, 649, 647, 650, 651, 652, 0, 653,
	778, 654, 634, 635, 655, 656, 0, 657, 658, 659,
	660, 661, 662, 663, 779, 0, 664, 0, 665, 666,
	667, 668, 669, 670, 672, 636, 673, 678, 679, 780,
	674, 675, 676, 677, 781, 681, 682, 683, 684, 0,
	685, 686, 0, 680, 671, 0, 687, 688, 689, 690,
	691, 692, 0, 693, 694, 0, 695, 884, 783, 784,
	785, 0, 707, 0, 696, 698, 699, 700, 701, 786,
	702, 787, 0, 703, 704, 705, 706, 697, 708, 709,
	0, 0, 710, 711, 712, 714, 716, 717, 713, 715,
	718, 0, 719, 0, 0, 720, 721, 722, 788, 789,
	790, 0, 724, 725, 723, 726, 727, 730, 728, 729,
	791, 731, 732, 733, 315, 0, 0, 0, 734, 735,
	792, 736, 737, 738, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 324, 323, 325, 326, 327, 328, 2666,
	329, 330, 0, 0, 0, 0, 0, 739, 0, 0,
	0, 331, 0, 332, 333, 334, 0, 335, 336, 337,
	338, 339, 340, 341, 740, 741, 0, 342, 742, 343,
	743, 0, 744, 344, 345, 346, 347, 348, 349, 350,
	0, 0, 0, 351, 745, 746, 747, 0, 352, 353,
	748, 0, 0, 0, 354, 355, 356, 357, 358, 359,
	360, 361, 0, 0, 363, 364, 365, 362, 366, 367,
	0, 368, 0, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 381, 0, 0,
	0, 0, 0, 0, 0, 382, 383, 384, 385, 386,
	0, 387, 389, 749, 750, 0, 392, 394, 388, 390,
	0, 393, 391, 395, 396, 0, 397, 398, 399, 0,
	0, 400, 401, 402, 0, 403, 404, 405, 0, 406,
	407, 408, 0, 409, 410, 751, 411, 412, 413, 415,
	417, 414, 416, 418, 419, 420, 421, 422, 752, 753,
	423, 0, 0, 0, 0, 0, 0, 0, 424, 425,
	426, 754, 0, 0, 0, 427, 0, 428, 429, 430,
	0, 431, 432, 0, 0, 433, 434, 435, 755, 756,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 0,
	445, 757, 0, 758, 446, 0, 447, 448, 449, 450,
	451, 452, 453, 759, 760, 761, 547, 0, 454, 455,
	456, 0, 457, 458, 459, 460, 461, 0, 0, 0,
	0, 462, 463, 464, 0, 0, 762, 465, 548, 466,
	763, 764, 0, 765, 0, 467, 468, 470, 0, 766,
	0, 469, 471, 472, 0, 473, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 483, 482,
	0, 485, 767, 484, 0, 486, 487, 0, 0, 488,
	489, 490, 491, 492, 493, 496, 0, 0, 494, 495,
	497, 498, 0, 499, 500, 502, 505, 501, 503, 504,
	506, 519, 520, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 522, 0, 521, 0, 523,
	524, 525, 526, 527, 534, 536, 537, 532, 533, 535,
	538, 539, 541, 529, 530, 531, 0, 540, 528, 0,
	0, 0, 542, 543, 544, 545, 0, 768, 546, 769,
	549, 550, 0, 0, 551, 0, 552, 0, 0, 554,
	555, 556, 0, 0, 557, 558, 770, 0, 559, 0,
	771, 560, 561, 553, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 0, 572, 573, 772, 574, 575,
	576, 773, 577, 578, 579, 774, 580, 775, 581, 582,
	0, 583, 584, 585, 0, 586, 587, 588, 589, 590,
	591, 592, 593, 776, 594, 595, 597, 596, 598, 0,
	599, 0, 600, 601, 602, 0, 0, 0, 0, 0,
	603, 604, 606, 0, 607, 608, 609, 610, 605, 611,
	612, 613, 614, 615, 616, 0, 618, 619, 617, 620,
	621, 0, 622, 623, 624, 625, 626, 777, 627, 0,
	628, 629, 637, 638, 639, 630, 631, 633, 640, 632,
	641, 642, 643, 644, 646, 645, 0, 648, 649, 647,
	650, 651, 652, 0, 653, 778, 654, 634, 635, 655,
	656, 0, 657, 658, 659, 660, 661, 662, 663, 779,
	0, 664, 0, 665, 666, 667, 668, 669, 670, 672,
	636, 673, 678, 679, 780, 674, 675, 676, 677, 781,
	681, 682, 683, 684, 0, 685, 686, 0, 680, 671,
	0, 687, 688, 689, 690, 691, 692, 0, 693, 694,
	0, 695, 782, 783, 784, 785, 0, 707, 0, 696,
	698, 699, 700, 701, 786, 702, 787, 0, 703, 704,
	705, 706, 697, 708, 709, 0, 0, 710, 711, 712,
	714, 716, 717, 713, 715, 718, 0, 719, 0, 0,
	720, 721, 722, 788, 789, 790, 0, 724, 725, 723,
	726, 727, 730, 728, 729, 791, 731, 732, 733, 2652,
	0, 315, 0, 734, 735, 792, 736, 737, 738, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 321, 322,
	324, 323, 325, 326, 327, 328, 0, 329, 330, 0,
	0, 0, 0, 0, 739, 0, 0, 0, 331, 0,
	332, 333, 334, 0, 335, 336, 337, 338, 339, 340,
	341, 740, 741, 0, 342, 742, 343, 743, 0, 744,
	344, 345, 346, 347, 348, 349, 350, 0, 0, 0,
	351, 745, 746, 747, 0, 352, 353, 748, 0, 0,
	0, 354, 355, 356, 357, 358, 359, 360, 361, 0,
	0, 363, 364, 365, 362, 366, 367, 0, 368, 0,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 381, 0, 0, 0, 0, 0,
	0, 0, 382, 383, 384, 385, 386, 0, 387, 389,
	749, 750, 0, 392, 394, 388, 390, 0, 393, 391,
	395, 396, 0, 397, 398, 399, 0, 0, 400, 401,
	402, 0, 403, 404, 405, 0, 406, 407, 408, 0,
	409, 410, 751, 411, 412, 413, 415, 417, 414, 416,
	418, 419, 420, 421, 422, 752, 753, 423, 0, 0,
	0, 0, 0, 0, 0, 424, 425, 426, 754, 0,
	0, 0, 427, 0, 428, 429, 430, 0, 431, 432,
	0, 0, 433, 434, 435, 755, 756, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 0, 445, 757, 0,
	758, 446, 0, 447, 448, 449, 450, 451, 452, 453,
	759, 760, 761, 547, 0, 454, 455, 456, 0, 457,
	458, 459, 460, 461, 0, 0, 0, 0, 462, 463,
	464, 0, 0, 762, 465, 548, 466, 763, 764, 0,
	765, 0, 467, 468, 470, 0, 766, 0, 469, 471,
	472, 0, 473, 0, 0, 0, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 483, 482, 0, 485, 767,
	484, 0, 486, 487, 0, 0, 488, 489, 490, 491,
	492, 493, 496, 0, 0, 494, 495, 497, 498, 0,
	499, 500, 502, 505, 501, 503, 504, 506, 519, 520,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 522, 0, 521, 0, 523, 524, 525, 526,
	527, 534, 536, 537, 532, 533, 535, 538, 539, 541,
	529, 530, 531, 0, 540, 528, 0, 0, 0, 542,
	543, 544, 545, 0, 768, 546, 769, 549, 550, 0,
	0, 551, 0, 552, 0, 0, 554, 555, 556, 0,
	0, 557, 558, 770, 0, 559, 0, 771, 560, 561,
	553, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 0, 572, 573, 772, 574, 575, 576, 773, 577,
	578, 579, 774, 580, 775, 581, 582, 0, 583, 584,
	585, 0, 586, 587, 588, 589, 590, 591, 592, 593,
	776, 594, 595, 597, 596, 598, 0, 599, 0, 600,
	601, 602, 0, 0, 0, 0, 0, 603, 604, 606,
	0, 607, 608, 609, 610, 605, 611, 612, 613, 614,
	615, 616, 0, 618, 619, 617, 620, 621, 0, 622,
	623, 624, 625, 626, 777, 627, 0, 628, 629, 637,
	638, 639, 630, 631, 633, 640, 632, 641, 642, 643,
	644, 646, 645, 0, 648, 649, 647, 650, 651, 652,
	0, 653, 778, 654, 634, 635, 655, 656, 0, 657,
	658, 659, 660, 661, 662, 663, 779, 0, 664, 0,
	665, 666, 667, 668, 669, 670, 672, 636, 673, 678,
	679, 780, 674, 675, 676, 677, 781, 681, 682, 683,
	684, 0, 685, 686, 0, 680, 671, 0, 687, 688,
	689, 690, 691, 692, 0, 693, 694, 0, 695, 782,
	783, 784, 785, 0, 707, 0, 696, 698, 699, 700,
	701, 786, 702, 787, 0, 703, 704, 705, 706, 697,
	708, 709, 0, 0, 710, 711, 712, 714, 716, 717,
	713, 715, 718, 0, 719, 0, 0, 720, 721, 722,
	788, 789, 790, 0, 724, 725, 723, 726, 727, 730,
	728, 729, 791, 731, 732, 733, 1862, 0, 315, 0,
	734, 735, 792, 736, 737, 738, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 322, 324, 323, 325,
	326, 327, 328, 0, 329, 330, 0, 0, 0, 0,
	0, 739, 0, 0, 0, 331, 0, 332, 333, 334,
	0, 335, 336, 337, 338, 339, 340, 341, 740, 741,
	0, 342, 742, 343, 743, 0, 744, 344, 345, 346,
	347, 348, 349, 350, 0, 0, 0, 351, 745, 746,
	747, 0, 352, 353, 748, 0, 0, 0, 354, 355,
	356, 357, 358, 359, 360, 361, 0, 0, 363, 364,
	365, 362, 366, 367, 0, 368, 0, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 381, 0, 0, 0, 0, 0, 0, 0, 382,
	383, 384, 385, 386, 0, 387, 389, 749, 750, 0,
	392, 394, 388, 390, 0, 393, 391, 395, 396, 0,
	397, 398, 399, 0, 0, 400, 401, 402, 0, 403,
	404, 405, 0, 406, 407, 408, 0, 409, 410, 751,
	411, 412, 413, 415, 417, 414, 416, 418, 419, 420,
	421, 422, 752, 753, 423, 0, 0, 0, 0, 0,
	0, 0, 424, 425, 426, 754, 0, 0, 0, 427,
	0, 428, 429, 430, 0, 431, 432, 0, 0, 433,
	434, 435, 755, 756, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 0, 445, 757, 0, 758, 446, 0,
	447, 448, 449, 450, 451, 452, 453, 759, 760, 761,
	547, 0, 454, 455, 456, 0, 457, 458, 459, 460,
	461, 0, 0, 0, 0, 462, 463, 464, 0, 0,
	762, 465, 548, 466, 763, 764, 0, 765, 0, 467,
	468, 470, 0, 766, 0, 469, 471, 472, 0, 473,
	0, 0, 0, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 483, 482, 0, 485, 767, 484, 0, 486,
	487, 0, 0, 488, 489, 490, 491, 492, 493, 496,
	0, 0, 494, 495, 497, 498, 0, 499, 500, 502,
	505, 501, 503, 504, 506, 519, 520, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 522,
	0, 521, 0, 523, 524, 525, 526, 527, 534, 536,
	537, 532, 533, 535, 538, 539, 541, 529, 530, 531,
	0, 540, 528, 0, 0, 0, 542, 543, 544, 545,
	0, 768, 546, 769, 549, 550, 0, 0, 551, 0,
	552, 0, 0, 554, 555, 556, 0, 0, 557, 558,
	770, 0, 559, 0, 771, 560, 561, 553, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 0, 572,
	573, 772, 574, 575, 576, 773, 577, 578, 579, 774,
	580, 775, 581, 582, 0, 583, 584, 585, 0, 586,
	587, 588, 589, 590, 591, 592, 593, 776, 594, 595,
	597, 596, 598, 0, 599, 0, 600, 601, 602, 0,
	0, 0, 0, 0, 603, 604, 606, 0, 607, 608,
	609, 610, 605, 611, 612, 613, 614, 615, 616, 0,
	618, 619, 617, 620, 621, 0, 622, 623, 624, 625,
	626, 777, 627, 0, 628, 629, 637, 638, 639, 630,
	631, 633, 640, 632, 641, 642, 643, 644, 646, 645,
	0, 648, 649, 647, 650, 651, 652, 0, 653, 778,
	654, 634, 635, 655, 656, 0, 657, 658, 659, 660,
	661, 662, 663, 779, 0, 664, 0, 665, 666, 667,
	668, 669, 670, 672, 636, 673, 678, 679, 780, 674,
	675, 676, 677, 781, 681, 682, 683, 684, 0, 685,
	686, 0, 680, 671, 0, 687, 688, 689, 690, 691,
	692, 0, 693, 694, 0, 695, 782, 783, 784, 785,
	0, 707, 0, 696, 698, 699, 700, 701, 786, 702,
	787, 0, 703, 704, 705, 706, 697, 708, 709, 0,
	0, 710, 711, 712, 714, 716, 717, 713, 715, 718,
	0, 719, 0, 0, 720, 721, 722, 788, 789, 790,
	0, 724, 725, 723, 726, 727, 730, 728, 729, 791,
	731, 732, 733, 1854, 0, 315, 0, 734, 735, 792,
	736, 737, 738, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 321, 322, 324, 323, 325, 326, 327, 328,
	0, 329, 330, 0, 0, 0, 0, 0, 739, 0,
	0, 0, 331, 0, 332, 333, 334, 0, 335, 336,
	337, 338, 339, 340, 341, 740, 741, 0, 342, 742,
	343, 743, 0, 744, 344, 345, 346, 347, 348, 349,
	350, 0, 0, 0, 351, 745, 746, 747, 0, 352,
	353, 748, 0, 0, 0, 354, 355, 356, 357, 358,
	359, 360, 361, 0, 0, 363, 364, 365, 362, 366,
	367, 0, 368, 0, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 381, 0,
	0, 0, 0, 0, 0, 0, 382, 383, 384, 385,
	386, 0, 387, 389, 749, 750, 0, 392, 394, 388,
	390, 0, 393, 391, 395, 396, 0, 397, 398, 399,
	0, 0, 400, 401, 402, 0, 403, 404, 405, 0,
	406, 407, 408, 0, 409, 410, 751, 411, 412, 413,
	415, 417, 414, 416, 418, 419, 420, 421, 422, 752,
	753, 423, 0, 0, 0, 0, 0, 0, 0, 424,
	425, 426, 754, 0, 0, 0, 427, 0, 428, 429,
	430, 0, 431, 432, 0, 0, 433, 434, 435, 755,
	756, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	0, 445, 757, 0, 758, 446, 0, 447, 448, 449,
	450, 451, 452, 453, 759, 760, 761, 547, 0, 454,
	455, 456, 0, 457, 458, 459, 460, 461, 0, 0,
	0, 0, 462, 463, 464, 0, 0, 762, 465, 548,
	466, 763, 764, 0, 765, 0, 467, 468, 470, 0,
	766, 0, 469, 471, 472, 0, 473, 0, 0, 0,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 483,
	482, 0, 485, 767, 484, 0, 486, 487, 0, 0,
	488, 489, 490, 491, 492, 493, 496, 0, 0, 494,
	495, 497, 498, 0, 499, 500, 502, 505, 501, 503,
	504, 506, 519, 520, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 522, 0, 521, 0,
	523, 524, 525, 526, 527, 534, 536, 537, 532, 533,
	535, 538, 539, 541, 529, 530, 531, 0, 540, 528,
	0, 0, 0, 542, 543, 544, 545, 0, 768, 546,
	769, 549, 550, 0, 0, 551, 0, 552, 0, 0,
	554, 555, 556, 0, 0, 557, 558, 770, 0, 559,
	0, 771, 560, 561, 553, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 0, 572, 573, 772, 574,
	575, 576, 773, 577, 578, 579, 774, 580, 775, 581,
	582, 0, 583, 584, 585, 0, 586, 587, 588, 589,
	590, 591, 592, 593, 776, 594, 595, 597, 596, 598,
	0, 599, 0, 600, 601, 602, 0, 0, 0, 0,
	0, 603, 604, 606, 0, 607, 608, 609, 610, 605,
	611, 612, 613, 614, 615, 616, 0, 618, 619, 617,
	620, 621, 0, 622, 623, 624, 625, 626, 777, 627,
	0, 628, 629, 637, 638, 639, 630, 631, 633, 640,
	632, 641, 642, 643, 644, 646, 645, 0, 648, 649,
	647, 650, 651, 652, 0, 653, 778, 654, 634, 635,
	655, 656, 0, 657, 658, 659, 660, 661, 662, 663,
	779, 0, 664, 0, 665, 666, 667, 668, 669, 670,
	672, 636, 673, 678, 679, 780, 674, 675, 676, 677,
	781, 681, 682, 683, 684, 0, 685, 686, 0, 680,
	671, 0, 687, 688, 689, 690, 691, 692, 0, 693,
	694, 0, 695, 782, 783, 784, 785, 0, 707, 0,
	696, 698, 699, 700, 701, 786, 702, 787, 0, 703,
	704, 705, 706, 697, 708, 709, 0, 0, 710, 711,
	712, 714, 716, 717, 713, 715, 718, 0, 719, 0,
	0, 720, 721, 722, 788, 789, 790, 0, 724, 725,
	723, 726, 727, 730, 728, 729, 791, 731, 732, 733,
	878, 0, 315, 0, 734, 735, 792, 736, 737, 738,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 321,
	322, 324, 323, 325, 326, 327, 328, 0, 329, 330,
	0, 0, 0, 0, 0, 739, 0, 0, 0, 331,
	0, 332, 333, 334, 0, 335, 336, 337, 338, 339,
	340, 341, 740, 741, 0, 342, 742, 343, 743, 0,
	744, 344, 345, 346, 347, 348, 349, 350, 0, 0,
	0, 351, 745, 746, 747, 0, 352, 874, 748, 0,
	0, 0, 354, 355, 356, 357, 358, 359, 360, 361,
	0, 0, 363, 364, 365, 362, 366, 367, 0, 368,
	0, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 381, 0, 0, 0, 0,
	0, 0, 0, 382, 383, 384, 385, 386, 0, 387,
	389, 749, 750, 0, 392, 394, 388, 390, 0, 393,
	391, 395, 396, 0, 397, 398, 399, 0, 0, 400,
	401, 402, 0, 403, 404, 405, 0, 406, 407, 408,
	0, 409, 410, 751, 411, 412, 413, 415, 417, 414,
	416, 418, 419, 420, 421, 422, 752, 753, 423, 0,
	0, 0, 0, 0, 0, 0, 424, 425, 426, 754,
	0, 0, 0, 427, 0, 428, 429, 430, 0, 431,
	432, 0, 0, 433, 434, 435, 755, 756, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 0, 445, 757,
	0, 758, 446, 0, 447, 448, 449, 450, 451, 452,
	453, 759, 760, 761, 547, 0, 454, 455, 456, 0,
	457, 458, 459, 460, 461, 0, 0, 0, 0, 462,
	463, 464, 0, 0, 762, 465, 548, 466, 763, 764,
	0, 765, 0, 467, 468, 470, 0, 766, 0, 469,
	471, 472, 0, 473, 0, 0, 0, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 483, 482, 0, 485,
	767, 484, 0, 486, 487, 0, 0, 488, 489, 490,
	491, 492, 879, 496, 0, 0, 494, 495, 497, 498,
	0, 499, 500, 502, 505, 501, 503, 504, 506, 519,
	520, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 522, 0, 888, 0, 523, 524, 525,
	526, 527, 534, 536, 537, 532, 533, 535, 538, 539,
	541, 529, 530, 531, 0, 540, 528, 0, 0, 0,
	542, 543, 544, 545, 0, 768, 546, 769, 549, 550,
	0, 0, 551, 0, 552, 0, 0, 554, 555, 556,
	0, 0, 557, 558, 770, 0, 559, 0, 771, 560,
	561, 553, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 0, 572, 573, 772, 574, 575, 576, 773,
	577, 578, 579, 774, 580, 775, 581, 582, 0, 583,
	584, 585, 0, 586, 587, 588, 589, 590, 591, 592,
	593, 776, 594, 595, 597, 596, 598, 0, 599, 0,
	600, 601, 602, 0, 0, 0, 0, 0, 603, 604,
	606, 0, 607, 608, 609, 610, 605, 611, 612, 613,
	614, 615, 616, 0, 618, 619, 617, 620, 621, 0,
	887, 623, 624, 625, 626, 777, 627, 0, 628, 629,
	637, 638, 639, 630, 631, 633, 886, 632, 641, 642,
	643, 644, 646, 645, 0, 648, 649, 647, 650, 1839,
	652, 0, 653, 778, 654, 634, 635, 655, 656, 0,
	657, 658, 659, 660, 661, 662, 663, 779, 0, 664,
	0, 665, 666, 667, 668, 669, 670, 672, 636, 673,
	678, 679, 780, 674, 675, 676, 677, 781, 681, 682,
	683, 684, 0, 685, 686, 0, 680, 671, 0, 687,
	688, 689, 690, 691, 692, 0, 693, 694, 0, 695,
	884, 783, 784, 785, 0, 707, 0, 696, 698, 699,
	700, 701, 786, 702, 787, 0, 703, 704, 705, 706,
	697, 708, 709, 0, 0, 710, 711, 712, 714, 716,
	717, 713, 715, 718, 0, 719, 0, 0, 720, 721,
	722, 788, 789, 790, 0, 724, 725, 723, 726, 727,
	730, 728, 729, 791, 731, 732, 733, 1812, 0, 315,
	0, 734, 735, 792, 736, 737, 738, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 324, 323,
	325, 326, 327, 328, 0, 329, 330, 0, 0, 0,
	0, 0, 739, 0, 0, 0, 331, 0, 332, 333,
	334, 0, 335, 336, 337, 338, 339, 340, 341, 740,
	741, 0, 342, 742, 343, 743, 0, 744, 344, 345,
	346, 347, 348, 349, 350, 0, 0, 0, 351, 745,
	746, 747, 0, 352, 353, 748, 0, 0, 0, 354,
	355, 356, 357, 358, 359, 360, 361, 0, 0, 363,
	364, 365, 362, 366, 367, 0, 368, 0, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 381, 0, 0, 0, 0, 0, 0, 0,
	382, 383, 384, 385, 386, 0, 387, 389, 749, 750,
	0, 392, 394, 388, 390, 0, 393, 391, 395, 396,
	0, 397, 398, 399, 0, 0, 400, 401, 402, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	751, 411, 412, 413, 415, 417, 414, 416, 418, 419,
	420, 421, 422, 752, 753, 423, 0, 0, 0, 0,
	0, 0, 0, 424, 425, 426, 754, 0, 0, 0,
	427, 0, 428, 429, 430, 0, 431, 432, 0, 0,
	433, 434, 435, 755, 756, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 0, 445, 757, 0, 758, 446,
	0, 447, 448, 449, 450, 451, 452, 453, 1811, 760,
	761, 547, 0, 454, 455, 456, 0, 457, 458, 459,
	460, 461, 0, 0, 0, 0, 462, 463, 464, 0,
	0, 762, 465, 548, 466, 763, 764, 0, 765, 0,
	467, 468, 470, 0, 766, 0, 469, 471, 472, 0,
	473, 0, 0, 0, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 483, 482, 0, 485, 767, 484, 0,
	486, 487, 0, 0, 488, 489, 490, 491, 492, 493,
	496, 0, 0, 494, 495, 497, 498, 0, 499, 500,
	502, 505, 501, 503, 504, 506, 519, 520, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	522, 0, 521, 0, 523, 524, 525, 526, 527, 534,
	536, 537, 532, 533, 535, 538, 539, 541, 529, 530,
	531, 0, 540, 528, 0, 0, 0, 542, 543, 544,
	545, 0, 768, 546, 769, 549, 550, 0, 0, 551,
	0, 552, 0, 0, 554, 555, 556, 0, 0, 557,
	558, 770, 0, 559, 0, 771, 560, 561, 553, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 0,
	572, 573, 772, 574, 575, 576, 773, 577, 578, 579,
	774, 580, 775, 581, 582, 0, 583, 584, 585, 0,
	586, 587, 588, 589, 590, 591, 592, 593, 776, 594,
	595, 597, 596, 598, 0, 599, 0, 600, 601, 602,
	0, 0, 0, 0, 0, 603, 604, 606, 0, 607,
	608, 609, 610, 605, 611, 612, 613, 614, 615, 616,
	0, 618, 619, 617, 620, 621, 0, 622, 623, 624,
	625, 626, 777, 627, 0, 628, 629, 637, 638, 639,
	630, 631, 633, 640, 632, 641, 642, 643, 644, 646,
	645, 0, 648, 649, 647, 650, 651, 652, 0, 653,
	778, 654, 634, 635, 655, 656, 0, 657, 658, 659,
	660, 661, 662, 663, 779, 0, 664, 0, 665, 666,
	667, 668, 669, 670, 672, 636, 673, 678, 679, 780,
	674, 675, 676, 677, 781, 681, 682, 683, 684, 0,
	685, 686, 0, 680, 671, 0, 687, 688, 689, 690,
	691, 692, 0, 693, 694, 0, 695, 782, 783, 784,
	785, 0, 707, 0, 696, 698, 699, 700, 701, 786,
	702, 787, 0, 703, 704, 705, 706, 697, 708, 709,
	0, 0, 710, 711, 712, 714, 716, 717, 713, 715,
	718, 0, 719, 0, 0, 720, 721, 722, 788, 789,
	790, 0, 724, 725, 723, 726, 727, 730, 728, 729,
	791, 731, 732, 733, 1795, 0, 315, 0, 734, 735,
	792, 736, 737, 738, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 321, 322, 324, 323, 325, 326, 327,
	328, 0, 329, 330, 0, 0, 0, 0, 0, 739,
	0, 0, 0, 331, 0, 332, 333, 334, 0, 335,
	336, 337, 338, 339, 340, 341, 740, 741, 0, 342,
	742, 343, 743, 0, 744, 344, 345, 346, 347, 348,
	349, 350, 0, 0, 0, 351, 745, 746, 747, 0,
	352, 353, 748, 0, 0, 0, 354, 355, 356, 357,
	358, 359, 360, 361, 0, 0, 363, 364, 365, 362,
	366, 367, 0, 368, 0, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 381,
	0, 0, 0, 0, 0, 0, 0, 382, 383, 384,
	385, 386, 0, 387, 389, 749, 750, 0, 392, 394,
	388, 390, 0, 393, 391, 395, 396, 0, 397, 398,
	399, 0, 0, 400, 401, 402, 0, 403, 404, 405,
	0, 406, 407, 408, 0, 409, 410, 751, 411, 412,
	413, 415, 417, 414, 416, 418, 419, 420, 421, 422,
	752, 753, 423, 0, 0, 0, 0, 0, 0, 0,
	424, 425, 426, 754, 0, 0, 0, 427, 0, 428,
	429, 430, 0, 431, 432, 0, 0, 433, 434, 435,
	755, 756, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 0, 445, 757, 0, 758, 446, 0, 447, 448,
	449, 450, 451, 452, 453, 1793, 760, 761, 547, 0,
	454, 455, 456, 0, 457, 458, 459, 460, 461, 0,
	0, 0, 0, 462, 463, 464, 0, 0, 762, 465,
	548, 466, 763, 764, 0, 765, 0, 467, 468, 470,
	0, 766, 0, 469, 471, 472, 0, 473, 0, 0,
	0, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	483, 482, 0, 485, 767, 484, 0, 486, 487, 0,
	0, 488, 489, 490, 491, 492, 493, 496, 0, 0,
	494, 495, 497, 498, 0, 499, 500, 502, 505, 501,
	503, 504, 506, 519, 520, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 522, 0, 521,
	0, 523, 524, 525, 526, 527, 534, 536, 537, 532,
	533, 535, 538, 539, 541, 529, 530, 531, 0, 540,
	528, 0, 0, 0, 542, 543, 544, 545, 0, 768,
	546, 769, 549, 550, 0, 0, 551, 0, 552, 0,
	0, 554, 555, 556, 0, 0, 557, 558, 770, 0,
	559, 0, 771, 560, 561, 553, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 0, 572, 573, 772,
	574, 575, 576, 773, 577, 578, 579, 774, 580, 775,
	581, 582, 0, 583, 584, 585, 0, 586, 587, 588,
	589, 590, 591, 592, 593, 776, 594, 595, 597, 596,
	598, 0, 599, 0, 600, 601, 602, 0, 0, 0,
	0, 0, 603, 604, 606, 0, 607, 608, 609, 610,
	605, 611, 612, 613, 614, 615, 616, 0, 618, 619,
	617, 620, 621, 0, 622, 623, 624, 625, 626, 777,
	627, 0, 628, 629, 637, 638, 639, 630, 631, 633,
	640, 632, 641, 642, 643, 644, 646, 645, 0, 648,
	649, 647, 650, 651, 652, 0, 653, 778, 654, 634,
	635, 655, 656, 0, 657, 658, 659, 660, 661, 662,
	663, 779, 0, 664, 0, 665, 666, 667, 668, 669,
	670, 672, 636, 673, 678, 679, 780, 674, 675, 676,
	677, 781, 681, 682, 683, 684, 0, 685, 686, 0,
	680, 671, 0, 687, 688, 689, 690, 691, 692, 0,
	693, 694, 0, 695, 782, 783, 784, 785, 0, 707,
	0, 696, 698, 699, 700, 701, 786, 702, 787, 0,
	703, 704, 705, 706, 697, 708, 709, 0, 0, 710,
	711, 712, 714, 716, 717, 713, 715, 718, 0, 719,
	0, 0, 720, 721, 722, 788, 789, 790, 0, 724,
	725, 723, 726, 727, 730, 728, 729, 791, 731, 732,
	733, 1787, 0, 315, 0, 734, 735, 792, 736, 737,
	738, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	321, 322, 324, 323, 325, 326, 327, 328, 0, 329,
	330, 0, 0, 0, 0, 0, 739, 0, 0, 0,
	331, 0, 332, 333, 334, 0, 335, 336, 337, 338,
	339, 340, 341, 740, 741, 0, 342, 742, 343, 743,
	0, 744, 344, 345, 346, 347, 348, 349, 350, 0,
	0, 0, 351, 745, 746, 747, 0, 352, 353, 748,
	0, 0, 0, 354, 355, 356, 357, 358, 359, 360,
	361, 0, 0, 363, 364, 365, 362, 366, 367, 0,
	368, 0, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 381, 0, 0, 0,
	0, 0, 0, 0, 382, 383, 384, 385, 386, 0,
	387, 389, 749, 750, 0, 392, 394, 388, 390, 0,
	393, 391, 395, 396, 0, 397, 398, 399, 0, 0,
	400, 401, 402, 0, 403, 404, 405, 0, 406, 407,
	408, 0, 409, 410, 751, 411, 412, 413, 415, 417,
	414, 416, 418, 419, 420, 421, 422, 752, 753, 423,
	0, 0, 0, 0, 0, 0, 0, 424, 425, 426,
	754, 0, 0, 0, 427, 0, 428, 429, 430, 0,
	431, 432, 0, 0, 433, 434, 435, 755, 756, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 0, 445,
	757, 0, 758, 446, 0, 447, 448, 449, 450, 451,
	452, 453, 759, 760, 761, 547, 0, 454, 455, 456,
	0, 457, 458, 459, 460, 461, 0, 0, 0, 0,
	462, 463, 464, 0, 0, 762, 465, 548, 466, 763,
	764, 0, 765, 0, 467, 468, 470, 0, 766, 0,
	469, 471, 472, 0, 473, 0, 0, 0, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 483, 482, 0,
	485, 767, 484, 0, 486, 487, 0, 0, 488, 489,
	490, 491, 492, 493, 496, 0, 0, 494, 495, 497,
	498, 0, 499, 500, 502, 505, 501, 503, 504, 506,
	519, 520, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 522, 0, 521, 0, 523, 524,
	525, 526, 527, 534, 536, 537, 532, 533, 535, 538,
	539, 541, 529, 530, 531, 0, 540, 528, 0, 0,
	0, 542, 543, 544, 545, 0, 768, 546, 769, 549,
	550, 0, 0, 551, 0, 552, 0, 0, 554, 555,
	556, 0, 0, 557, 558, 770, 0, 559, 0, 771,
	560, 561, 553, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 0, 572, 573, 772, 574, 575, 576,
	773, 577, 578, 579, 774, 580, 775, 581, 582, 0,
	583, 584, 585, 0, 586, 587, 588, 589, 590, 591,
	592, 593, 776, 594, 595, 597, 596, 598, 0, 599,
	0, 600, 601, 602, 0, 0, 0, 0, 0, 603,
	604, 606, 0, 607, 608, 609, 610, 605, 611, 612,
	613, 614, 615, 616, 0, 618, 619, 617, 620, 621,
	0, 622, 623, 624, 625, 626, 777, 627, 0, 628,
	629, 637, 638, 639, 630, 631, 633, 640, 632, 641,
	642, 643, 644, 646, 645, 0, 648, 649, 647, 650,
	651, 652, 0, 653, 778, 654, 634, 635, 655, 656,
	0, 657, 658, 659, 660, 661, 662, 663, 779, 0,
	664, 0, 665, 666, 667, 668, 669, 670, 672, 636,
	673, 678, 679, 780, 674, 675, 676, 677, 781, 681,
	682, 683, 684, 0, 685, 686, 0, 680, 671, 0,
	687, 688, 689, 690, 691, 692, 0, 693, 694, 0,
	695, 782, 783, 784, 785, 0, 707, 0, 696, 698,
	699, 700, 701, 786, 702, 787, 0, 703, 704, 705,
	706, 697, 708, 709, 0, 0, 710, 711, 712, 714,
	716, 717, 713, 715, 718, 0, 719, 0, 0, 720,
	721, 722, 788, 789, 790, 0, 724, 725, 723, 726,
	727, 730, 728, 729, 791, 731, 732, 733, 1765, 0,
	315, 0, 734, 735, 792, 736, 737, 738, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 322, 324,
	323, 325, 326, 327, 328, 0, 329, 330, 0, 0,
	0, 0, 0, 739, 0, 0, 0, 331, 0, 332,
	333, 334, 0, 335, 336, 337, 338, 339, 340, 341,
	740, 741, 0, 342, 742, 343, 743, 0, 744, 344,
	345, 346, 347, 348, 349, 350, 0, 0, 0, 351,
	745, 746, 747, 0, 352, 353, 748, 0, 0, 0,
	354, 355, 356, 357, 358, 359, 360, 361, 0, 0,
	363, 364, 365, 362, 366, 367, 0, 368, 0, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 381, 0, 0, 0, 0, 0, 0,
	0, 382, 383, 384, 385, 386, 0, 387, 389, 749,
	750, 0, 392, 394, 388, 390, 0, 393, 391, 395,
	396, 0, 397, 398, 399, 0, 0, 400, 401, 402,
	0, 403, 404, 405, 0, 406, 407, 408, 0, 409,
	410, 751, 411, 412, 413, 415, 417, 414, 416, 418,
	419, 420, 421, 422, 752, 753, 423, 0, 0, 0,
	0, 0, 0, 0, 424, 425, 426, 754, 0, 0,
	0, 427, 0, 428, 429, 430, 0, 431, 432, 0,
	0, 433, 434, 435, 755, 756, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 0, 445, 757, 0, 758,
	446, 0, 447, 448, 449, 450, 451, 452, 453, 1763,
	760, 761, 547, 0, 454, 455, 456, 0, 457, 458,
	459, 460, 461, 0, 0, 0, 0, 462, 463, 464,
	0, 0, 762, 465, 548, 466, 763, 764, 0, 765,
	0, 467, 468, 470, 0, 766, 0, 469, 471, 472,
	0, 473, 0, 0, 0, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 483, 482, 0, 485, 767, 484,
	0, 486, 487, 0, 0, 488, 489, 490, 491, 492,
	493, 496, 0, 0, 494, 495, 497, 498, 0, 499,
	500, 502, 505, 501, 503, 504, 506, 519, 520, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 522, 0, 521, 0, 523, 524, 525, 526, 527,
	534, 536, 537, 532, 533, 535, 538, 539, 541, 529,
	530, 531, 0, 540, 528, 0, 0, 0, 542, 543,
	544, 545, 0, 768, 546, 769, 549, 550, 0, 0,
	551, 0, 552, 0, 0, 554, 555, 556, 0, 0,
	557, 558, 770, 0, 559, 0, 771, 560, 561, 553,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	0, 572, 573, 772, 574, 575, 576, 773, 577, 578,
	579, 774, 580, 775, 581, 582, 0, 583, 584, 585,
	0, 586, 587, 588, 589, 590, 591, 592, 593, 776,
	594, 595, 597, 596, 598, 0, 599, 0, 600, 601,
	602, 0, 0, 0, 0, 0, 603, 604, 606, 0,
	607, 608, 609, 610, 605, 611, 612, 613, 614, 615,
	616, 0, 618, 619, 617, 620, 621, 0, 622, 623,
	624, 625, 626, 777, 627, 0, 628, 629, 637, 638,
	639, 630, 631, 633, 640, 632, 641, 642, 643, 644,
	646, 645, 0, 648, 649, 647, 650, 651, 652, 0,
	653, 778, 654, 634, 635, 655, 656, 0, 657, 658,
	659, 660, 661, 662, 663, 779, 0, 664, 0, 665,
	666, 667, 668, 669, 670, 672, 636, 673, 678, 679,
	780, 674, 675, 676, 677, 781, 681, 682, 683, 684,
	0, 685, 686, 0, 680, 671, 0, 687, 688, 689,
	690, 691, 692, 0, 693, 694, 0, 695, 782, 783,
	784, 785, 0, 707, 0, 696, 698, 699, 700, 701,
	786, 702, 787, 0, 703, 704, 705, 706, 697, 708,
	709, 0, 0, 710, 711, 712, 714, 716, 717, 713,
	715, 718, 0, 719, 0, 0, 720, 721, 722, 788,
	789, 790, 0, 724, 725, 723, 726, 727, 730, 728,
	729, 791, 731, 732, 733, 1756, 0, 315, 0, 734,
	735, 792, 736, 737, 738, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 324, 323, 325, 326,
	327, 328, 0, 329, 330, 0, 0, 0, 0, 0,
	739, 0, 0, 0, 331, 0, 332, 333, 334, 0,
	335, 336, 337, 338, 339, 340, 341, 740, 741, 0,
	342, 742, 343, 743, 0, 744, 344, 345, 346, 347,
	348, 349, 350, 0, 0, 0, 351, 745, 746, 747,
	0, 352, 353, 748, 0, 0, 0, 354, 355, 356,
	357, 358, 359, 360, 361, 0, 0, 363, 364, 365,
	362, 366, 367, 0, 368, 0, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	381, 0, 0, 0, 0, 0, 0, 0, 382, 383,
	384, 385, 386, 0, 387, 389, 749, 750, 0, 392,
	394, 388, 390, 0, 393, 391, 395, 396, 0, 397,
	398, 399, 0, 0, 400, 401, 402, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 751, 411,
	412, 413, 415, 417, 414, 416, 418, 419, 420, 421,
	422, 752, 753, 423, 0, 0, 0, 0, 0, 0,
	0, 424, 425, 426, 754, 0, 0, 0, 427, 0,
	428, 429, 430, 0, 431, 432, 0, 0, 433, 434,
	435, 755, 756, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 0, 445, 757, 0, 758, 446, 0, 447,
	448, 449, 450, 451, 452, 453, 759, 760, 761, 547,
	0, 454, 455, 456, 0, 457, 458, 459, 460, 461,
	0, 0, 0, 0, 462, 463, 464, 0, 0, 762,
	465, 548, 466, 763, 764, 0, 765, 0, 467, 468,
	470, 0, 766, 0, 469, 471, 472, 0, 473, 0,
	0, 0, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 483, 482, 0, 485, 767, 484, 0, 486, 487,
	0, 0, 488, 489, 490, 491, 492, 493, 496, 0,
	0, 494, 495, 497, 498, 0, 499, 500, 502, 505,
	501, 503, 504, 506, 519, 520, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 522, 0,
	521, 0, 523, 524, 525, 526, 527, 534, 536, 537,
	532, 533, 535, 538, 539, 541, 529, 530, 531, 0,
	540, 528, 0, 0, 0, 542, 543, 544, 545, 0,
	768, 546, 769, 549, 550, 0, 0, 551, 0, 552,
	0, 0, 554, 555, 556, 0, 0, 557, 558, 770,
	0, 559, 0, 771, 560, 561, 553, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 0, 572, 573,
	772, 574, 575, 576, 773, 577, 578, 579, 774, 580,
	775, 581, 582, 0, 583, 584, 585, 0, 586, 587,
	588, 589, 590, 591, 592, 593, 776, 594, 595, 597,
	596, 598, 0, 599, 0, 600, 601, 602, 0, 0,
	0, 0, 0, 603, 604, 606, 0, 607, 608, 609,
	610, 605, 611, 612, 613, 614, 615, 616, 0, 618,
	619, 617, 620, 621, 0, 622, 623, 624, 625, 626,
	777, 627, 0, 628, 629, 637, 638, 639, 630, 631,
	633, 640, 632, 641, 642, 643, 644, 646, 645, 0,
	648, 649, 647, 650, 651, 652, 0, 653, 778, 654,
	634, 635, 655, 656, 0, 657, 658, 659, 660, 661,
	662, 663, 779, 0, 664, 0, 665, 666, 667, 668,
	669, 670, 672, 636, 673, 678, 679, 780, 674, 675,
	676, 677, 781, 681, 682, 683, 684, 0, 685, 686,
	0, 680, 671, 0, 687, 688, 689, 690, 691, 692,
	0, 693, 694, 0, 695, 782, 783, 784, 785, 0,
	707, 0, 696, 698, 699, 700, 701, 786, 702, 787,
	0, 703, 704, 705, 706, 697, 708, 709, 0, 0,
	710, 711, 712, 714, 716, 717, 713, 715, 718, 0,
	719, 0, 0, 720, 721, 722, 788, 789, 790, 0,
	724, 725, 723, 726, 727, 730, 728, 729, 791, 731,
	732, 733, 1717, 0, 315, 0, 734, 735, 792, 736,
	737, 738, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 324, 323, 325, 326, 327, 328, 0,
	329, 330, 0, 0, 0, 0, 0, 739, 0, 0,
	0, 331, 0, 332, 333, 334, 0, 335, 336, 337,
	338, 339, 340, 341, 740, 741, 0, 342, 742, 343,
	743, 0, 744, 344, 345, 346, 347, 348, 349, 350,
	0, 0, 0, 351, 745, 746, 747, 0, 352, 353,
	748, 0, 0, 0, 354, 355, 356, 357, 358, 359,
	360, 361, 0, 0, 363, 364, 365, 362, 366, 367,
	0, 368, 0, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 381, 0, 0,
	0, 0, 0, 0, 0, 382, 383, 384, 385, 386,
	0, 387, 389, 749, 750, 0, 392, 394, 388, 390,
	0, 393, 391, 395, 396, 0, 397, 398, 399, 0,
	0, 400, 401, 402, 0, 403, 404, 405, 0, 406,
	407, 408, 0, 409, 410, 751, 411, 412, 413, 415,
	417, 414, 416, 418, 419, 420, 421, 422, 752, 753,
	423, 0, 0, 0, 0, 0, 0, 0, 424, 425,
	426, 754, 0, 0, 0, 427, 0, 428, 429, 430,
	0, 431, 432, 0, 0, 433, 434, 435, 755, 756,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 0,
	445, 757, 0, 758, 446, 0, 447, 448, 449, 450,
	451, 452, 453, 759, 760, 761, 547, 0, 454, 455,
	456, 0, 457, 458, 459, 460, 461, 0, 0, 0,
	0, 462, 463, 464, 0, 0, 762, 465, 548, 466,
	763, 764, 0, 765, 0, 467, 468, 470, 0, 766,
	0, 469, 471, 472, 0, 473, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 483, 482,
	0, 485, 767, 484, 0, 486, 487, 0, 0, 488,
	489, 490, 491, 492, 493, 496, 0, 0, 494, 495,
	497, 498, 0, 499, 500, 502, 505, 501, 503, 504,
	506, 519, 520, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 522, 0, 521, 0, 523,
	524, 525, 526, 527, 534, 536, 537, 532, 533, 535,
	538, 539, 541, 529, 530, 531, 0, 540, 528, 0,
	0, 0, 542, 543, 544, 545, 0, 768, 546, 769,
	549, 550, 0, 0, 551, 0, 552, 0, 0, 554,
	555, 556, 0, 0, 557, 558, 770, 0, 559, 0,
	771, 560, 561, 553, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 0, 572, 573, 772, 574, 575,
	576, 773, 577, 578, 579, 774, 580, 775, 581, 582,
	0, 583, 584, 585, 0, 586, 587, 588, 589, 590,
	591, 592, 593, 776, 594, 595, 597, 596, 598, 0,
	599, 0, 600, 601, 602, 0, 0, 0, 0, 0,
	603, 604, 606, 0, 607, 608, 609, 610, 605, 611,
	612, 613, 614, 615, 616, 0, 618, 619, 617, 620,
	621, 0, 622, 623, 624, 625, 626, 777, 627, 0,
	628, 629, 637, 638, 639, 630, 631, 633, 640, 632,
	641, 642, 643, 644, 646, 645, 0, 648, 649, 647,
	650, 651, 652, 0, 653, 778, 654, 634, 635, 655,
	656, 0, 657, 658, 659, 660, 661, 662, 663, 779,
	0, 664, 0, 665, 666, 667, 668, 669, 670, 672,
	636, 673, 678, 679, 780, 674, 675, 676, 677, 781,
	681, 682, 683, 684, 0, 685, 686, 0, 680, 671,
	0, 687, 688, 689, 690, 691, 692, 0, 693, 694,
	0, 695, 782, 783, 784, 785, 0, 707, 0, 696,
	698, 699, 700, 701, 786, 702, 787, 0, 703, 704,
	705, 706, 697, 708, 709, 0, 0, 710, 711, 712,
	714, 716, 717, 713, 715, 718, 0, 719, 0, 0,
	720, 721, 722, 788, 789, 790, 0, 724, 725, 723,
	726, 727, 730, 728, 729, 791, 731, 732, 733, 1680,
	0, 315, 0, 734, 735, 792, 736, 737, 738, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 321, 322,
	324, 323, 325, 326, 327, 328, 0, 329, 330, 0,
	0, 0, 0, 0, 739, 0, 0, 0, 331, 0,
	332, 333, 334, 0, 335, 336, 337, 338, 339, 340,
	341, 740, 741, 0, 342, 742, 343, 743, 0, 744,
	344, 345, 346, 347, 348, 349, 350, 0, 0, 0,
	351, 745, 746, 747, 0, 352, 353, 748, 0, 0,
	0, 354, 355, 356, 357, 358, 359, 360, 361, 0,
	0, 363, 364, 365, 362, 366, 367, 0, 368, 0,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 381, 0, 0, 0, 0, 0,
	0, 0, 382, 383, 384, 385, 386, 0, 387, 389,
	749, 750, 0, 392, 394, 388, 390, 0, 393, 391,
	395, 396, 0, 397, 398, 399, 0, 0, 400, 401,
	402, 0, 403, 404, 405, 0, 406, 407, 408, 0,
	409, 410, 751, 411, 412, 413, 415, 417, 414, 416,
	418, 419, 420, 421, 422, 752, 753, 423, 0, 0,
	0, 0, 0, 0, 0, 424, 425, 426, 754, 0,
	0, 0, 427, 0, 428, 429, 430, 0, 431, 432,
	0, 0, 433, 434, 435, 755, 756, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 0, 445, 757, 0,
	758, 446, 0, 447, 448, 449, 450, 451, 452, 453,
	759, 760, 761, 547, 0, 454, 455, 456, 0, 457,
	458, 459, 460, 461, 0, 0, 0, 0, 462, 463,
	464, 0, 0, 762, 465, 548, 466, 763, 764, 0,
	765, 0, 467, 468, 470, 0, 766, 0, 469, 471,
	472, 0, 473, 0, 0, 0, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 483, 482, 0, 485, 767,
	484, 0, 486, 487, 0, 0, 488, 489, 490, 491,
	492, 493, 496, 0, 0, 494, 495, 497, 498, 0,
	499, 500, 502, 505, 501, 503, 504, 506, 519, 520,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 522, 0, 521, 0, 523, 524, 525, 526,
	527, 534, 536, 537, 532, 533, 535, 538, 539, 541,
	529, 530, 531, 0, 540, 528, 0, 0, 0, 542,
	543, 544, 545, 0, 768, 546, 769, 549, 550, 0,
	0, 551, 0, 552, 0, 0, 554, 555, 556, 0,
	0, 557, 558, 770, 0, 559, 0, 771, 560, 561,
	553, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 0, 572, 573, 772, 574, 575, 576, 773, 577,
	578, 579, 774, 580, 775, 581, 582, 0, 583, 584,
	585, 0, 586, 587, 588, 589, 590, 591, 592, 593,
	776, 594, 595, 597, 596, 598, 0, 599, 0, 600,
	601, 602, 0, 0, 0, 0, 0, 603, 604, 606,
	0, 607, 608, 609, 610, 605, 611, 612, 613, 614,
	615, 616, 0, 618, 619, 617, 620, 621, 0, 622,
	623, 624, 625, 626, 777, 627, 0, 628, 629, 637,
	638, 639, 630, 631, 633, 640, 632, 641, 642, 643,
	644, 646, 645, 0, 648, 649, 647, 650, 651, 652,
	0, 653, 778, 654, 634, 635, 655, 656, 0, 657,
	658, 659, 660, 661, 662, 663, 779, 0, 664, 0,
	665, 666, 667, 668, 669, 670, 672, 636, 673, 678,
	679, 780, 674, 675, 676, 677, 781, 681, 682, 683,
	684, 0, 685, 686, 0, 680, 671, 0, 687, 688,
	689, 690, 691, 692, 0, 693, 694, 0, 695, 782,
	783, 784, 785, 0, 707, 0, 696, 698, 699, 700,
	701, 786, 702, 787, 0, 703, 704, 705, 706, 697,
	708, 709, 0, 0, 710, 711, 712, 714, 716, 717,
	713, 715, 718, 0, 719, 0, 0, 720, 721, 722,
	788, 789, 790, 0, 724, 725, 723, 726, 727, 730,
	728, 729, 791, 731, 732, 733, 1529, 0, 315, 0,
	734, 735, 792, 736, 737, 738, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 322, 324, 323, 325,
	326, 327, 328, 0, 329, 330, 0, 0, 0, 0,
	0, 739, 0, 0, 0, 331, 0, 332, 333, 334,
	0, 335, 336, 337, 338, 339, 340, 341, 740, 741,
	0, 342, 742, 343, 743, 0, 744, 344, 345, 346,
	347, 348, 349, 350, 0, 0, 0, 351, 745, 746,
	747, 0, 352, 353, 748, 0, 0, 0, 354, 355,
	356, 357, 358, 359, 360, 361, 0, 0, 363, 364,
	365, 362, 366, 367, 0, 368, 0, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 381, 0, 0, 0, 0, 0, 0, 0, 382,
	383, 384, 385, 386, 0, 387, 389, 749, 750, 0,
	392, 394, 388, 390, 0, 393, 391, 395, 396, 0,
	397, 398, 399, 0, 0, 400, 401, 402, 0, 403,
	404, 405, 0, 406, 407, 408, 0, 409, 410, 751,
	411, 412, 413, 415, 417, 414, 416, 418, 419, 420,
	421, 422, 752, 753, 423, 0, 0, 0, 0, 0,
	0, 0, 424, 425, 426, 754, 0, 0, 0, 427,
	0, 428, 429, 430, 0, 431, 432, 0, 0, 433,
	434, 435, 755, 756, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 0, 445, 757, 0, 758, 446, 0,
	447, 448, 449, 450, 451, 452, 453, 759, 760, 761,
	547, 0, 454, 455, 456, 0, 457, 458, 459, 460,
	461, 0, 0, 0, 0, 462, 463, 464, 0, 0,
	762, 465, 548, 466, 763, 764, 0, 765, 0, 467,
	468, 470, 0, 766, 0, 469, 471, 472, 0, 473,
	0, 0, 0, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 483, 482, 0, 485, 767, 484, 0, 486,
	487, 0, 0, 488, 489, 490, 491, 492, 493, 496,
	0, 0, 494, 495, 497, 498, 0, 499, 500, 502,
	505, 501, 503, 504, 506, 519, 520, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 522,
	0, 521, 0, 523, 524, 525, 526, 527, 534, 536,
	537, 532, 533, 535, 538, 539, 541, 529, 530, 531,
	0, 540, 528, 0, 0, 0, 542, 543, 544, 545,
	0, 768, 546, 769, 549, 550, 0, 0, 551, 0,
	552, 0, 0, 554, 555, 556, 0, 0, 557, 558,
	770, 0, 559, 0, 771, 560, 561, 553, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 0, 572,
	573, 772, 574, 575, 576, 773, 577, 578, 579, 774,
	580, 775, 581, 582, 0, 583, 584, 585, 0, 586,
	587, 588, 589, 590, 591, 592, 593, 776, 594, 595,
	597, 596, 598, 0, 599, 0, 600, 601, 602, 0,
	0, 0, 0, 0, 603, 604, 606, 0, 607, 608,
	609, 610, 605, 611, 612, 613, 614, 615, 616, 0,
	618, 619, 617, 620, 621, 0, 887, 623, 624, 625,
	626, 777, 627, 0, 628, 629, 637, 638, 639, 630,
	631, 633, 886, 632, 641, 642, 643, 644, 646, 645,
	0, 648, 649, 647, 650, 651, 652, 0, 653, 778,
	654, 634, 635, 655, 656, 0, 657, 658, 659, 660,
	661, 662, 663, 779, 0, 664, 0, 665, 666, 667,
	668, 669, 670, 672, 636, 673, 678, 679, 780, 674,
	675, 676, 677, 781, 681, 682, 683, 684, 0, 685,
	686, 0, 680, 671, 0, 687, 688, 689, 690, 691,
	692, 0, 693, 694, 0, 695, 884, 783, 784, 785,
	0, 707, 0, 696, 698, 699, 700, 701, 786, 702,
	787, 0, 703, 704, 705, 706, 697, 708, 709, 0,
	0, 710, 711, 712, 714, 716, 717, 713, 715, 718,
	0, 719, 0, 0, 720, 721, 722, 788, 789, 790,
	0, 724, 725, 723, 726, 727, 730, 728, 729, 791,
	731, 732, 733, 1500, 0, 315, 0, 734, 735, 792,
	736, 737, 738, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 321, 322, 324, 323, 325, 326, 327, 328,
	0, 329, 330, 0, 0, 0, 0, 0, 739, 0,
	0, 0, 331, 0, 332, 333, 334, 0, 335, 336,
	337, 338, 339, 340, 341, 740, 741, 0, 342, 742,
	343, 743, 0, 744, 344, 345, 346, 347, 348, 349,
	350, 0, 0, 0, 351, 745, 746, 747, 0, 352,
	353, 748, 0, 0, 0, 354, 355, 356, 357, 358,
	359, 360, 361, 0, 0, 363, 364, 365, 362, 366,
	367, 0, 368, 0, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 381, 0,
	0, 0, 0, 0, 0, 0, 382, 383, 384, 385,
	386, 0, 387, 389, 749, 750, 0, 392, 394, 388,
	390, 0, 393, 391, 395, 396, 0, 397, 398, 399,
	0, 0, 400, 401, 402, 0, 403, 404, 405, 0,
	406, 407, 408, 0, 409, 410, 751, 411, 412, 413,
	415, 417, 414, 416, 418, 419, 420, 421, 422, 752,
	753, 423, 0, 0, 0, 0, 0, 0, 0, 424,
	425, 426, 754, 0, 0, 0, 427, 0, 428, 429,
	430, 0, 431, 432, 0, 0, 433, 434, 435, 755,
	756, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	0, 445, 757, 0, 758, 446, 0, 447, 448, 449,
	450, 451, 452, 453, 1499, 760, 761, 547, 0, 454,
	455, 456, 0, 457, 458, 459, 460, 461, 0, 0,
	0, 0, 462, 463, 464, 0, 0, 762, 465, 548,
	466, 763, 764, 0, 765, 0, 467, 468, 470, 0,
	766, 0, 469, 471, 472, 0, 473, 0, 0, 0,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 483,
	482, 0, 485, 767, 484, 0, 486, 487, 0, 0,
	488, 489, 490, 491, 492, 493, 496, 0, 0, 494,
	495, 497, 498, 0, 499, 500, 502, 505, 501, 503,
	504, 506, 519, 520, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 522, 0, 521, 0,
	523, 524, 525, 526, 527, 534, 536, 537, 532, 533,
	535, 538, 539, 541, 529, 530, 531, 0, 540, 528,
	0, 0, 0, 542, 543, 544, 545, 0, 768, 546,
	769, 549, 550, 0, 0, 551, 0, 552, 0, 0,
	554, 555, 556, 0, 0, 557, 558, 770, 0, 559,
	0, 771, 560, 561, 553, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 0, 572, 573, 772, 574,
	575, 576, 773, 577, 578, 579, 774, 580, 775, 581,
	582, 0, 583, 584, 585, 0, 586, 587, 588, 589,
	590, 591, 592, 593, 776, 594, 595, 597, 596, 598,
	0, 599, 0, 600, 601, 602, 0, 0, 0, 0,
	0, 603, 604, 606, 0, 607, 608, 609, 610, 605,
	611, 612, 613, 614, 615, 616, 0, 618, 619, 617,
	620, 621, 0, 622, 623, 624, 625, 626, 777, 627,
	0, 628, 629, 637, 638, 639, 630, 631, 633, 640,
	632, 641, 642, 643, 644, 646, 645, 0, 648, 649,
	647, 650, 651, 652, 0, 653, 778, 654, 634, 635,
	655, 656, 0, 657, 658, 659, 660, 661, 662, 663,
	779, 0, 664, 0, 665, 666, 667, 668, 669, 670,
	672, 636, 673, 678, 679, 780, 674, 675, 676, 677,
	781, 681, 682, 683, 684, 0, 685, 686, 0, 680,
	671, 0, 687, 688, 689, 690, 691, 692, 0, 693,
	694, 0, 695, 782, 783, 784, 785, 0, 707, 0,
	696, 698, 699, 700, 701, 786, 702, 787, 0, 703,
	704, 705, 706, 697, 708, 709, 0, 0, 710, 711,
	712, 714, 716, 717, 713, 715, 718, 0, 719, 0,
	0, 720, 721, 722, 788, 789, 790, 0, 724, 725,
	723, 726, 727, 730, 728, 729, 791, 731, 732, 733,
	1492, 0, 315, 0, 734, 735, 792, 736, 737, 738,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 321,
	322, 324, 323, 325, 326, 327, 328, 0, 329, 330,
	0, 0, 0, 0, 0, 739, 0, 0, 0, 331,
	0, 332, 333, 334, 0, 335, 336, 337, 338, 339,
	340, 341, 740, 741, 0, 342, 742, 343, 743, 0,
	744, 344, 345, 346, 347, 348, 349, 350, 0, 0,
	0, 351, 745, 746, 747, 0, 352, 353, 748, 0,
	0, 0, 354, 355, 356, 357, 358, 359, 360, 361,
	0, 0, 363, 364, 365, 362, 366, 367, 0, 368,
	0, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 381, 0, 0, 0, 0,
	0, 0, 0, 382, 383, 384, 385, 386, 0, 387,
	389, 749, 750, 0, 392, 394, 388, 390, 0, 393,
	391, 395, 396, 0, 397, 398, 399, 0, 0, 400,
	401, 402, 0, 403, 404, 405, 0, 406, 407, 408,
	0, 409, 410, 751, 411, 412, 413, 415, 417, 414,
	416, 418, 419, 420, 421, 422, 752, 753, 423, 0,
	0, 0, 0, 0, 0, 0, 424, 425, 426, 754,
	0, 0, 0, 427, 0, 428, 429, 430, 0, 431,
	432, 0, 0, 433, 434, 435, 755, 756, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 0, 445, 757,
	0, 758, 446, 0, 447, 448, 449, 450, 451, 452,
	453, 1491, 760, 761, 547, 0, 454, 455, 456, 0,
	457, 458, 459, 460, 461, 0, 0, 0, 0, 462,
	463, 464, 0, 0, 762, 465, 548, 466, 763, 764,
	0, 765, 0, 467, 468, 470, 0, 766, 0, 469,
	471, 472, 0, 473, 0, 0, 0, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 483, 482, 0, 485,
	767, 484, 0, 486, 487, 0, 0, 488, 489, 490,
	491, 492, 493, 496, 0, 0, 494, 495, 497, 498,
	0, 499, 500, 502, 505, 501, 503, 504, 506, 519,
	520, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 522, 0, 521, 0, 523, 524, 525,
	526, 527, 534, 536, 537, 532, 533, 535, 538, 539,
	541, 529, 530, 531, 0, 540, 528, 0, 0, 0,
	542, 543, 544, 545, 0, 768, 546, 769, 549, 550,
	0, 0, 551, 0, 552, 0, 0, 554, 555, 556,
	0, 0, 557, 558, 770, 0, 559, 0, 771, 560,
	561, 553, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 0, 572, 573, 772, 574, 575, 576, 773,
	577, 578, 579, 774, 580, 775, 581, 582, 0, 583,
	584, 585, 0, 586, 587, 588, 589, 590, 591, 592,
	593, 776, 594, 595, 597, 596, 598, 0, 599, 0,
	600, 601, 602, 0, 0, 0, 0, 0, 603, 604,
	606, 0, 607, 608, 609, 610, 605, 611, 612, 613,
	614, 615, 616, 0, 618, 619, 617, 620, 621, 0,
	622, 623, 624, 625, 626, 777, 627, 0, 628, 629,
	637, 638, 639, 630, 631, 633, 640, 632, 641, 642,
	643, 644, 646, 645, 0, 648, 649, 647, 650, 651,
	652, 0, 653, 778, 654, 634, 635, 655, 656, 0,
	657, 658, 659, 660, 661, 662, 663, 779, 0, 664,
	0, 665, 666, 667, 668, 669, 670, 672, 636, 673,
	678, 679, 780, 674, 675, 676, 677, 781, 681, 682,
	683, 684, 0, 685, 686, 0, 680, 671, 0, 687,
	688, 689, 690, 691, 692, 0, 693, 694, 0, 695,
	782, 783, 784, 785, 0, 707, 0, 696, 698, 699,
	700, 701, 786, 702, 787, 0, 703, 704, 705, 706,
	697, 708, 709, 0, 0, 710, 711, 712, 714, 716,
	717, 713, 715, 718, 0, 719, 0, 0, 720, 721,
	722, 788, 789, 790, 0, 724, 725, 723, 726, 727,
	730, 728, 729, 791, 731, 732, 733, 315, 0, 0,
	0, 734, 735, 792, 736, 737, 738, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 324, 323, 325, 326,
	327, 328, 1433, 329, 330, 0, 0, 0, 0, 0,
	739, 0, 0, 0, 331, 0, 332, 333, 334, 0,
	335, 336, 337, 338, 339, 340, 341, 740, 741, 0,
	342, 742, 343, 743, 0, 744, 344, 345, 346, 347,
	348, 349, 350, 0, 0, 0, 351, 745, 746, 747,
	0, 352, 353, 748, 0, 0, 0, 354, 355, 356,
	357, 358, 359, 360, 361, 0, 0, 363, 364, 365,
	362, 366, 367, 0, 368, 0, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	381, 0, 0, 0, 0, 0, 0, 0, 382, 383,
	384, 385, 386, 0, 387, 389, 749, 750, 0, 392,
	394, 388, 390, 0, 393, 391, 395, 396, 0, 397,
	398, 399, 0, 0, 400, 401, 402, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 751, 411,
	412, 413, 415, 417, 414, 416, 418, 419, 420, 421,
	422, 752, 753, 423, 0, 0, 0, 0, 0, 0,
	0, 424, 425, 426, 754, 0, 0, 0, 427, 0,
	428, 429, 430, 0, 431, 432, 0, 0, 433, 434,
	435, 755, 756, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 0, 445, 757, 0, 758, 446, 0, 447,
	448, 449, 450, 451, 452, 453, 759, 760, 761, 547,
	0, 454, 455, 456, 0, 457, 458, 459, 460, 461,
	0, 0, 0, 0, 462, 463, 464, 0, 0, 762,
	465, 548, 466, 763, 764, 0, 765, 0, 467, 468,
	470, 0, 766, 0, 469, 471, 472, 0, 473, 0,
	0, 0, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 483, 482, 0, 485, 767, 484, 0, 486, 487,
	0, 0, 488, 489, 490, 491, 492, 493, 496, 0,
	0, 494, 495, 497, 498, 0, 499, 500, 502, 505,
	501, 503, 504, 506, 519, 520, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 522, 0,
	521, 0, 523, 524, 525, 526, 527, 534, 536, 537,
	532, 533, 535, 538, 539, 541, 529, 530, 531, 0,
	540, 528, 0, 0, 0, 542, 543, 544, 545, 0,
	768, 546, 769, 549, 550, 0, 0, 551, 0, 552,
	0, 0, 554, 555, 556, 0, 0, 557, 558, 770,
	0, 559, 0, 771, 560, 561, 553, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 0, 572, 573,
	772, 574, 575, 576, 773, 577, 578, 579, 774, 580,
	775, 581, 582, 0, 583, 584, 585, 0, 586, 587,
	588, 589, 590, 591, 592, 593, 776, 594, 595, 597,
	596, 598, 0, 599, 0, 600, 601, 602, 0, 0,
	0, 0, 0, 603, 604, 606, 0, 607, 608, 609,
	610, 605, 611, 612, 613, 614, 615, 616, 0, 618,
	619, 617, 620, 621, 0, 622, 623, 624, 625, 626,
	777, 627, 0, 628, 629, 637, 638, 639, 630, 631,
	633, 640, 632, 641, 642, 643, 644, 646, 645, 0,
	648, 649, 647, 650, 651, 652, 0, 653, 778, 654,
	634, 635, 655, 656, 0, 657, 658, 659, 660, 661,
	662, 663, 779, 0, 664, 0, 665, 666, 667, 668,
	669, 670, 672, 636, 673, 678, 679, 780, 674, 675,
	676, 677, 781, 681, 682, 683, 684, 0, 685, 686,
	0, 680, 671, 0, 687, 688, 689, 690, 691, 692,
	0, 693, 694, 0, 695, 782, 783, 784, 785, 0,
	707, 0, 696, 698, 699, 700, 701, 786, 702, 787,
	0, 703, 704, 705, 706, 697, 708, 709, 0, 0,
	710, 711, 712, 714, 716, 717, 713, 715, 718, 0,
	719, 0, 0, 720, 721, 722, 788, 789, 790, 0,
	724, 725, 723, 726, 727, 730, 728, 729, 791, 731,
	732, 733, 898, 0, 315, 0, 734, 735, 792, 736,
	737, 738, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 324, 323, 325, 326, 327, 328, 0,
	329, 330, 0, 0, 0, 0, 0, 739, 0, 0,
	0, 331, 0, 332, 333, 334, 0, 335, 336, 337,
	338, 339, 340, 341, 740, 741, 0, 342, 742, 343,
	743, 0, 744, 344, 345, 346, 347, 348, 349, 350,
	0, 0, 0, 351, 745, 746, 747, 0, 352, 353,
	748, 0, 0, 0, 354, 355, 356, 357, 358, 359,
	360, 361, 0, 0, 363, 364, 365, 362, 366, 367,
	0, 368, 0, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 381, 0, 0,
	0, 0, 0, 0, 0, 382, 383, 384, 385, 386,
	0, 387, 389, 749, 750, 0, 392, 394, 388, 390,
	0, 393, 391, 395, 396, 0, 397, 398, 399, 0,
	0, 400, 401, 402, 0, 403, 404, 405, 0, 406,
	407, 408, 0, 409, 410, 751, 411, 412, 413, 415,
	417, 414, 416, 418, 419, 420, 421, 422, 752, 753,
	423, 0, 0, 0, 0, 0, 0, 0, 424, 425,
	426, 754, 0, 0, 0, 427, 0, 428, 429, 430,
	0, 431, 432, 0, 0, 433, 434, 435, 755, 756,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 0,
	445, 757, 0, 758, 446, 0, 447, 448, 449, 450,
	451, 452, 453, 759, 760, 761, 547, 0, 454, 455,
	456, 0, 457, 458, 459, 460, 461, 0, 0, 0,
	0, 462, 463, 464, 0, 0, 762, 465, 548, 466,
	763, 764, 0, 765, 0, 467, 468, 470, 0, 766,
	0, 469, 471, 472, 0, 473, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 483, 482,
	0, 485, 767, 484, 0, 486, 487, 0, 0, 488,
	489, 490, 491, 492, 493, 496, 0, 0, 494, 495,
	497, 498, 0, 499, 500, 502, 505, 501, 503, 504,
	506, 519, 520, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 522, 0, 521, 0, 523,
	524, 525, 526, 527, 534, 536, 537, 532, 533, 535,
	538, 539, 541, 529, 530, 531, 0, 540, 528, 0,
	0, 0, 542, 543, 544, 545, 0, 768, 546, 769,
	549, 550, 0, 0, 551, 0, 552, 0, 0, 554,
	555, 556, 0, 0, 557, 558, 770, 0, 559, 0,
	771, 560, 561, 553, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 0, 572, 573, 772, 574, 575,
	576, 773, 577, 578, 579, 774, 580, 775, 581, 582,
	0, 583, 584, 585, 0, 586, 587, 588, 589, 590,
	591, 592, 593, 776, 594, 595, 597, 596, 598, 0,
	599, 0, 600, 601, 602, 0, 0, 0, 0, 0,
	603, 604, 606, 0, 607, 608, 609, 610, 605, 611,
	612, 613, 614, 615, 616, 0, 618, 619, 617, 620,
	621, 0, 622, 623, 624, 625, 626, 777, 627, 0,
	628, 629, 637, 638, 639, 630, 631, 633, 640, 632,
	641, 642, 643, 644, 646, 645, 0, 648, 649, 647,
	650, 651, 652, 0, 653, 778, 654, 634, 635, 655,
	656, 0, 657, 658, 659, 660, 661, 662, 663, 779,
	0, 664, 0, 665, 666, 667, 668, 669, 670, 672,
	636, 673, 678, 679, 780, 674, 675, 676, 677, 781,
	681, 682, 683, 684, 0, 685, 686, 0, 680, 671,
	0, 687, 688, 689, 690, 691, 692, 0, 693, 694,
	0, 695, 782, 783, 784, 785, 0, 707, 0, 696,
	698, 699, 700, 701, 786, 702, 787, 0, 703, 704,
	705, 706, 697, 708, 709, 0, 0, 710, 711, 712,
	714, 716, 717, 713, 715, 718, 0, 719, 0, 0,
	720, 721, 722, 788, 789, 790, 0, 724, 725, 723,
	726, 727, 730, 728, 729, 791, 731, 732, 733, 878,
	0, 315, 0, 734, 735, 792, 736, 737, 738, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 321, 322,
	324, 323, 325, 326, 327, 328, 0, 329, 330, 0,
	0, 0, 0, 0, 739, 0, 0, 0, 331, 0,
	332, 333, 334, 0, 335, 336, 337, 338, 339, 340,
	341, 740, 741, 0, 342, 742, 343, 743, 0, 744,
	344, 345, 346, 347, 348, 349, 350, 0, 0, 0,
	351, 745, 746, 747, 0, 352, 874, 748, 0, 0,
	0, 354, 355, 356, 357, 358, 359, 360, 361, 0,
	0, 363, 364, 365, 362, 366, 367, 0, 873, 0,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 381, 0, 0, 0, 0, 0,
	0, 0, 382, 383, 384, 385, 386, 0, 387, 389,
	749, 750, 0, 392, 394, 388, 390, 0, 393, 391,
	395, 396, 0, 397, 398, 399, 0, 0, 400, 401,
	402, 0, 403, 404, 405, 0, 406, 407, 408, 0,
	409, 410, 751, 411, 412, 413, 415, 417, 414, 416,
	418, 419, 420, 421, 422, 752, 753, 423, 0, 0,
	0, 0, 0, 0, 0, 424, 425, 426, 754, 0,
	0, 0, 427, 0, 428, 429, 430, 0, 431, 432,
	0, 0, 433, 434, 435, 755, 756, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 0, 445, 757, 0,
	758, 446, 0, 447, 448, 449, 450, 451, 452, 453,
	759, 760, 761, 547, 0, 454, 455, 456, 0, 457,
	458, 459, 460, 461, 0, 0, 0, 0, 462, 463,
	464, 0, 0, 762, 465, 548, 466, 763, 764, 0,
	765, 0, 467, 468, 470, 0, 766, 0, 469, 471,
	472, 0, 473, 0, 0, 0, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 483, 482, 0, 485, 767,
	484, 0, 486, 487, 0, 0, 488, 489, 490, 491,
	492, 879, 496, 0, 0, 494, 495, 497, 498, 0,
	499, 500, 502, 505, 501, 503, 504, 506, 519, 520,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 522, 0, 888, 0, 523, 524, 525, 526,
	527, 534, 536, 537, 532, 533, 535, 538, 539, 541,
	529, 530, 531, 0, 540, 528, 0, 0, 0, 542,
	543, 544, 545, 0, 768, 546, 769, 549, 550, 0,
	0, 551, 0, 552, 0, 0, 554, 555, 556, 0,
	0, 557, 558, 770, 0, 559, 0, 771, 560, 561,
	553, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 0, 572, 573, 772, 574, 575, 576, 773, 577,
	578, 579, 774, 580, 775, 581, 582, 0, 583, 584,
	585, 0, 586, 587, 588, 589, 590, 591, 592, 593,
	776, 594, 595, 597, 596, 598, 0, 599, 0, 600,
	601, 602, 0, 0, 0, 0, 0, 603, 604, 606,
	0, 607, 608, 609, 610, 605, 611, 612, 613, 614,
	615, 616, 0, 618, 619, 617, 620, 621, 0, 887,
	623, 624, 625, 626, 875, 627, 0, 628, 629, 637,
	638, 639, 630, 631, 633, 886, 632, 641, 642, 643,
	644, 646, 645, 0, 648, 649, 647, 650, 876, 652,
	0, 653, 778, 654, 634, 635, 655, 656, 0, 657,
	658, 659, 660, 661, 662, 663, 779, 0, 664, 0,
	665, 666, 667, 668, 669, 670, 672, 636, 673, 678,
	679, 780, 674, 675, 676, 677, 781, 681, 682, 683,
	684, 0, 685, 686, 0, 680, 671, 0, 687, 688,
	689, 690, 691, 692, 0, 693, 694, 0, 695, 884,
	783, 784, 785, 0, 707, 0, 696, 880, 699, 700,
	701, 786, 702, 787, 0, 703, 704, 705, 706, 697,
	708, 709, 0, 0, 710, 711, 712, 714, 716, 717,
	713, 715, 718, 0, 719, 0, 0, 720, 721, 722,
	788, 789, 790, 0, 724, 725, 723, 726, 727, 730,
	728, 729, 791, 731, 732, 733, 867, 0, 315, 0,
	734, 735, 792, 736, 737, 738, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 322, 324, 323, 325,
	326, 327, 328, 0, 329, 330, 0, 0, 0, 0,
	0, 739, 0, 0, 0, 331, 0, 332, 333, 334,
	0, 335, 336, 337, 338, 339, 340, 341, 740, 741,
	0, 342, 742, 343, 743, 0, 744, 344, 345, 346,
	347, 348, 349, 350, 0, 0, 0, 351, 745, 746,
	747, 0, 352, 353, 748, 0, 0, 0, 354, 355,
	356, 357, 358, 359, 360, 361, 0, 0, 363, 364,
	365, 362, 366, 367, 0, 368, 0, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 381, 0, 0, 0, 0, 0, 0, 0, 382,
	383, 384, 385, 386, 0, 387, 389, 749, 750, 0,
	392, 394, 388, 390, 0, 393, 391, 395, 396, 0,
	397, 398, 399, 0, 0, 400, 401, 402, 0, 403,
	404, 405, 0, 406, 407, 408, 0, 409, 410, 751,
	411, 412, 413, 415, 417, 414, 416, 418, 419, 420,
	421, 422, 752, 753, 423, 0, 0, 0, 0, 0,
	0, 0, 424, 425, 426, 754, 0, 0, 0, 427,
	0, 428, 429, 430, 0, 431, 432, 0, 0, 433,
	434, 435, 755, 756, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 0, 445, 757, 0, 758, 446, 0,
	447, 448, 449, 450, 451, 452, 453, 759, 760, 761,
	547, 0, 454, 455, 456, 0, 457, 458, 459, 460,
	461, 0, 0, 0, 0, 462, 463, 464, 0, 0,
	762, 465, 548, 466, 763, 764, 0, 765, 0, 467,
	468, 470, 0, 766, 0, 469, 471, 472, 0, 473,
	0, 0, 0, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 483, 482, 0, 485, 767, 484, 0, 486,
	487, 0, 0, 488, 489, 490, 491, 492, 493, 496,
	0, 0, 494, 495, 497, 498, 0, 499, 500, 502,
	505, 501, 503, 504, 506, 519, 520, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 522,
	0, 521, 0, 523, 524, 525, 526, 527, 534, 536,
	537, 532, 533, 535, 538, 539, 541, 529, 530, 531,
	0, 540, 528, 0, 0, 0, 542, 543, 544, 545,
	0, 768, 546, 769, 549, 550, 0, 0, 551, 0,
	552, 0, 0, 554, 555, 556, 0, 0, 557, 558,
	770, 0, 559, 0, 771, 560, 561, 553, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 0, 572,
	573, 772, 574, 575, 576, 773, 577, 578, 579, 774,
	580, 775, 581, 582, 0, 583, 584, 585, 0, 586,
	587, 588, 589, 590, 591, 592, 593, 776, 594, 595,
	597, 596, 598, 0, 599, 0, 600, 601, 602, 0,
	0, 0, 0, 0, 603, 604, 606, 0, 607, 608,
	609, 610, 605, 611, 612, 613, 614, 615, 616, 0,
	618, 619, 617, 620, 621, 0, 622, 623, 624, 625,
	626, 777, 627, 0, 628, 629, 868, 638, 639, 630,
	631, 633, 640, 632, 641, 642, 643, 644, 646, 645,
	0, 648, 649, 647, 650, 651, 652, 0, 653, 778,
	654, 634, 635, 655, 656, 0, 657, 658, 659, 660,
	661, 662, 663, 779, 0, 664, 0, 665, 666, 667,
	668, 669, 670, 672, 636, 673, 678, 679, 780, 674,
	675, 676, 677, 781, 681, 682, 683, 684, 0, 685,
	686, 0, 680, 671, 0, 687, 688, 689, 690, 691,
	692, 0, 693, 694, 0, 695, 782, 783, 784, 785,
	0, 707, 0, 696, 698, 699, 700, 701, 786, 702,
	787, 0, 703, 704, 705, 706, 697, 708, 709, 0,
	0, 710, 711, 712, 714, 716, 717, 713, 715, 718,
	0, 719, 0, 0, 720, 721, 722, 788, 789, 790,
	0, 724, 725, 723, 726, 727, 730, 728, 729, 791,
	731, 732, 733, 829, 0, 315, 0, 734, 735, 792,
	736, 737, 738, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 321, 322, 324, 323, 325, 326, 327, 328,
	0, 329, 330, 0, 0, 0, 0, 0, 739, 0,
	0, 0, 331, 0, 332, 333, 334, 0, 335, 336,
	337, 338, 339, 340, 341, 740, 741, 0, 342, 742,
	343, 743, 0, 744, 344, 345, 346, 347, 348, 349,
	350, 0, 0, 0, 351, 745, 746, 747, 0, 352,
	353, 748, 0, 0, 0, 354, 355, 356, 357, 358,
	359, 360, 361, 0, 0, 363, 364, 365, 362, 366,
	367, 0, 368, 0, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 381, 0,
	0, 0, 0, 0, 0, 0, 382, 383, 384, 385,
	386, 0, 387, 389, 749, 750, 0, 392, 394, 388,
	390, 0, 393, 391, 395, 396, 0, 397, 398, 399,
	0, 0, 400, 401, 402, 0, 403, 404, 405, 0,
	406, 407, 408, 0, 409, 410, 751, 411, 412, 413,
	415, 417, 414, 416, 418, 419, 420, 421, 422, 752,
	753, 423, 0, 0, 0, 0, 0, 0, 0, 424,
	425, 426, 754, 0, 0, 0, 427, 0, 428, 429,
	430, 0, 431, 432, 0, 0, 433, 434, 435, 755,
	756, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	0, 445, 757, 0, 758, 446, 0, 447, 448, 449,
	450, 451, 452, 453, 759, 760, 761, 547, 0, 454,
	455, 456, 0, 457, 458, 459, 460, 461, 0, 0,
	0, 0, 462, 463, 464, 0, 0, 762, 465, 548,
	466, 763, 764, 0, 765, 0, 467, 468, 470, 0,
	766, 0, 469, 471, 472, 0, 473, 0, 0, 0,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 483,
	482, 0, 485, 767, 484, 0, 486, 487, 0, 0,
	488, 489, 490, 491, 492, 493, 496, 0, 0, 494,
	495, 497, 498, 0, 499, 500, 502, 505, 501, 503,
	504, 506, 519, 520, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 522, 0, 521, 0,
	523, 524, 525, 526, 527, 534, 536, 537, 532, 533,
	535, 538, 539, 541, 529, 530, 531, 0, 540, 528,
	0, 0, 0, 542, 543, 544, 545, 0, 768, 546,
	769, 549, 550, 0, 0, 551, 0, 552, 0, 0,
	554, 555, 556, 0, 0, 557, 558, 770, 0, 559,
	0, 771, 560, 561, 553, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 0, 572, 573, 772, 574,
	575, 576, 773, 577, 578, 579, 774, 580, 775, 581,
	582, 0, 583, 584, 585, 0, 586, 587, 588, 589,
	590, 591, 592, 593, 776, 594, 595, 597, 596, 598,
	0, 599, 0, 600, 601, 602, 0, 0, 0, 0,
	0, 603, 604, 606, 0, 607, 608, 609, 610, 605,
	611, 612, 613, 614, 615, 616, 0, 618, 619, 617,
	620, 621, 0, 622, 623, 624, 625, 626, 777, 627,
	0, 628, 629, 637, 638, 639, 630, 631, 633, 640,
	632, 641, 642, 643, 644, 646, 645, 0, 648, 649,
	647, 650, 651, 652, 0, 653, 778, 654, 634, 635,
	655, 656, 0, 657, 658, 659, 660, 661, 662, 663,
	779, 0, 664, 0, 665, 666, 667, 668, 669, 670,
	672, 636, 673, 678, 679, 780, 674, 675, 676, 677,
	781, 681, 682, 683, 684, 0, 685, 686, 0, 680,
	671, 0, 687, 688, 689, 690, 691, 692, 0, 693,
	694, 0, 695, 782, 783, 784, 785, 0, 707, 0,
	696, 698, 699, 700, 701, 786, 702, 787, 0, 703,
	704, 705, 706, 697, 708, 709, 0, 0, 710, 711,
	712, 714, 716, 717, 713, 715, 718, 0, 719, 0,
	0, 720, 721, 722, 788, 789, 790, 0, 724, 725,
	723, 726, 727, 730, 728, 729, 791, 731, 732, 733,
	821, 0, 315, 0, 734, 735, 792, 736, 737, 738,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 321,
	322, 324, 323, 325, 326, 327, 328, 0, 329, 330,
	0, 0, 0, 0, 0, 739, 0, 0, 0, 331,
	0, 332, 333, 334, 0, 335, 336, 337, 338, 339,
	340, 341, 740, 741, 0, 342, 742, 343, 743, 0,
	744, 344, 345, 346, 347, 348, 349, 350, 0, 0,
	0, 351, 745, 746, 747, 0, 352, 353, 748, 0,
	0, 0, 354, 355, 356, 357, 358, 359, 360, 361,
	0, 0, 363, 364, 365, 362, 366, 367, 0, 368,
	0, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 381, 0, 0, 0, 0,
	0, 0, 0, 382, 383, 384, 385, 386, 0, 387,
	389, 749, 750, 0, 392, 394, 388, 390, 0, 393,
	391, 395, 396, 0, 397, 398, 399, 0, 0, 400,
	401, 402, 0, 403, 404, 405, 0, 406, 407, 408,
	0, 409, 410, 751, 411, 412, 413, 415, 417, 414,
	416, 418, 419, 420, 421, 422, 752, 753, 423, 0,
	0, 0, 0, 0, 0, 0, 424, 425, 426, 754,
	0, 0, 0, 427, 0, 428, 429, 430, 0, 431,
	432, 0, 0, 433, 434, 435, 755, 756, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 0, 445, 757,
	0, 758, 446, 0, 447, 448, 449, 450, 451, 452,
	453, 759, 760, 761, 547, 0, 454, 455, 456, 0,
	457, 458, 459, 460, 461, 0, 0, 0, 0, 462,
	463, 464, 0, 0, 762, 465, 548, 466, 763, 764,
	0, 765, 0, 467, 468, 470, 0, 766, 0, 469,
	471, 472, 0, 473, 0, 0, 0, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 483, 482, 0, 485,
	767, 484, 0, 486, 487, 0, 0, 488, 489, 490,
	491, 492, 493, 496, 0, 0, 494, 495, 497, 498,
	0, 499, 500, 502, 505, 501, 503, 504, 506, 519,
	520, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 522, 0, 521, 0, 523, 524, 525,
	526, 527, 534, 536, 537, 532, 533, 535, 538, 539,
	541, 529, 530, 531, 0, 540, 528, 0, 0, 0,
	542, 543, 544, 545, 0, 768, 546, 769, 549, 550,
	0, 0, 551, 0, 552, 0, 0, 554, 555, 556,
	0, 0, 557, 558, 770, 0, 559, 0, 771, 560,
	561, 553, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 0, 572, 573, 772, 574, 575, 576, 773,
	577, 578, 579, 774, 580, 775, 581, 582, 0, 583,
	584, 585, 0, 586, 587, 588, 589, 590, 591, 592,
	593, 776, 594, 595, 597, 596, 598, 0, 599, 0,
	600, 601, 602, 0, 0, 0, 0, 0, 603, 604,
	606, 0, 607, 608, 609, 610, 605, 611, 612, 613,
	614, 615, 616, 0, 618, 619, 617, 620, 621, 0,
	622, 623, 624, 625, 626, 777, 627, 0, 628, 629,
	637, 638, 639, 630, 631, 633, 640, 632, 641, 642,
	643, 644, 646, 645, 0, 648, 649, 647, 650, 651,
	652, 0, 653, 778, 654, 634, 635, 655, 656, 0,
	657, 658, 659, 660, 661, 662, 663, 779, 0, 664,
	0, 665, 666, 667, 668, 669, 670, 672, 636, 673,
	678, 679, 780, 674, 675, 676, 677, 781, 681, 682,
	683, 684, 0, 685, 686, 0, 680, 671, 0, 687,
	688, 689, 690, 691, 692, 0, 693, 694, 0, 695,
	782, 783, 784, 785, 0, 707, 0, 696, 698, 699,
	700, 701, 786, 702, 787, 0, 703, 704, 705, 706,
	697, 708, 709, 0, 0, 710, 711, 712, 714, 716,
	717, 713, 715, 718, 0, 719, 0, 0, 720, 721,
	722, 788, 789, 790, 0, 724, 725, 723, 726, 727,
	730, 728, 729, 791, 731, 732, 733, 798, 0, 315,
	0, 734, 735, 792, 736, 737, 738, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 324, 323,
	325, 326, 327, 328, 0, 329, 330, 0, 0, 0,
	0, 0, 739, 0, 0, 0, 331, 0, 332, 333,
	334, 0, 335, 336, 337, 338, 339, 340, 341, 740,
	741, 0, 342, 742, 343, 743, 0, 744, 344, 345,
	346, 347, 348, 349, 350, 0, 0, 0, 351, 745,
	746, 747, 0, 352, 353, 748, 0, 0, 0, 354,
	355, 356, 357, 358, 359, 360, 361, 0, 0, 363,
	364, 365, 362, 366, 367, 0, 368, 0, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 381, 0, 0, 0, 0, 0, 0, 0,
	382, 383, 384, 385, 386, 0, 387, 389, 749, 750,
	0, 392, 394, 388, 390, 0, 393, 391, 395, 396,
	0, 397, 398, 399, 0, 0, 400, 401, 402, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	751, 411, 412, 413, 415, 417, 414, 416, 418, 419,
	420, 421, 422, 752, 753, 423, 0, 0, 0, 0,
	0, 0, 0, 424, 425, 426, 754, 0, 0, 0,
	427, 0, 428, 429, 430, 0, 431, 432, 0, 0,
	433, 434, 435, 755, 756, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 0, 445, 757, 0, 758, 446,
	0, 447, 448, 449, 450, 451, 452, 453, 759, 760,
	761, 547, 0, 454, 455, 456, 0, 457, 458, 459,
	460, 461, 0, 0, 0, 0, 462, 463, 464, 0,
	0, 762, 465, 548, 466, 763, 764, 0, 765, 0,
	467, 468, 470, 0, 766, 0, 469, 471, 472, 0,
	473, 0, 0, 0, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 483, 482, 0, 485, 767, 484, 0,
	486, 487, 0, 0, 488, 489, 490, 491, 492, 493,
	496, 0, 0, 494, 495, 497, 498, 0, 499, 500,
	502, 505, 501, 503, 504, 506, 519, 520, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	522, 0, 521, 0, 523, 524, 525, 526, 527, 534,
	536, 537, 532, 533, 535, 538, 539, 541, 529, 530,
	531, 0, 540, 528, 0, 0, 0, 542, 543, 544,
	545, 0, 768, 546, 769, 549, 550, 0, 0, 551,
	0, 552, 0, 0, 554, 555, 556, 0, 0, 557,
	558, 770, 0, 559, 0, 771, 560, 561, 553, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 0,
	572, 573, 772, 574, 575, 576, 773, 577, 578, 579,
	774, 580, 775, 581, 582, 0, 583, 584, 585, 0,
	586, 587, 588, 589, 590, 591, 592, 593, 776, 594,
	595, 597, 596, 598, 0, 599, 0, 600, 601, 602,
	0, 0, 0, 0, 0, 603, 604, 606, 0, 607,
	608, 609, 610, 605, 611, 612, 613, 614, 615, 616,
	0, 618, 619, 617, 620, 621, 0, 622, 623, 624,
	625, 626, 777, 627, 0, 628, 629, 637, 638, 639,
	630, 631, 633, 640, 632, 641, 642, 643, 644, 646,
	645, 0, 648, 649, 647, 650, 651, 652, 0, 653,
	778, 654, 634, 635, 655, 656, 0, 657, 658, 659,
	660, 661, 662, 663, 779, 0, 664, 0, 665, 666,
	667, 668, 669, 670, 672, 636, 673, 678, 679, 780,
	674, 675, 676, 677, 781, 681, 682, 683, 684, 0,
	685, 686, 0, 680, 671, 0, 687, 688, 689, 690,
	691, 692, 0, 693, 694, 0, 695, 782, 783, 784,
	785, 0, 707, 0, 696, 698, 699, 700, 701, 786,
	702, 787, 0, 703, 704, 705, 706, 697, 708, 709,
	0, 0, 710, 711, 712, 714, 716, 717, 713, 715,
	718, 0, 719, 0, 0, 720, 721, 722, 788, 789,
	790, 0, 724, 725, 723, 726, 727, 730, 728, 729,
	791, 731, 732, 733, 315, 0, 0, 0, 734, 735,
	792, 736, 737, 738, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 324, 323, 325, 326, 327, 328, 0,
	329, 330, 0, 0, 0, 0, 0, 739, 0, 0,
	0, 331, 0, 332, 333, 334, 0, 335, 336, 337,
	338, 339, 340, 341, 740, 741, 0, 342, 742, 343,
	743, 0, 744, 344, 345, 346, 347, 348, 349, 350,
	0, 0, 0, 351, 745, 746, 747, 0, 352, 353,
	748, 0, 0, 0, 354, 355, 356, 357, 358, 359,
	360, 361, 0, 0, 363, 364, 365, 362, 366, 367,
	0, 368, 0, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 381, 0, 0,
	0, 0, 0, 0, 0, 382, 383, 384, 385, 386,
	0, 387, 389, 749, 750, 0, 392, 394, 388, 390,
	0, 393, 391, 395, 396, 0, 397, 398, 399, 0,
	0, 400, 401, 402, 0, 403, 404, 405, 0, 406,
	407, 408, 0, 409, 410, 751, 411, 412, 413, 415,
	417, 414, 416, 418, 419, 420, 421, 422, 752, 753,
	423, 0, 0, 0, 0, 0, 0, 0, 424, 425,
	426, 754, 0, 0, 0, 427, 0, 428, 429, 430,
	0, 431, 432, 0, 0, 433, 434, 435, 755, 756,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 0,
	445, 757, 0, 758, 446, 0, 447, 448, 449, 450,
	451, 452, 453, 759, 760, 761, 547, 0, 454, 455,
	456, 0, 457, 458, 459, 460, 461, 0, 0, 0,
	0, 462, 463, 464, 0, 0, 762, 465, 548, 466,
	763, 764, 0, 765, 0, 467, 468, 470, 0, 766,
	0, 469, 471, 472, 0, 473, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 483, 482,
	0, 485, 767, 484, 0, 486, 487, 0, 0, 488,
	489, 490, 491, 492, 493, 496, 0, 0, 494, 495,
	497, 498, 0, 499, 500, 502, 505, 501, 503, 504,
	506, 519, 520, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 522, 0, 521, 0, 523,
	524, 525, 526, 527, 534, 536, 537, 532, 533, 535,
	538, 539, 541, 529, 530, 531, 0, 540, 528, 0,
	0, 0, 542, 543, 544, 545, 0, 768, 546, 769,
	549, 550, 0, 0, 551, 0, 552, 0, 0, 554,
	555, 556, 0, 0, 557, 558, 770, 0, 559, 0,
	771, 560, 561, 553, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 0, 572, 573, 772, 574, 575,
	576, 773, 577, 578, 579, 774, 580, 775, 581, 582,
	0, 583, 584, 585, 0, 586, 587, 588, 589, 590,
	591, 592, 593, 776, 594, 595, 597, 596, 598, 0,
	599, 0, 600, 601, 602, 0, 0, 0, 0, 0,
	603, 604, 606, 0, 607, 608, 609, 610, 605, 611,
	612, 613, 614, 615, 616, 0, 618, 619, 617, 620,
	621, 0, 622, 623, 624, 625, 626, 777, 627, 0,
	628, 629, 637, 638, 639, 630, 631, 633, 640, 632,
	641, 642, 643, 644, 646, 645, 0, 648, 649, 647,
	650, 651, 652, 0, 653, 778, 654, 634, 635, 655,
	656, 0, 657, 658, 659, 660, 661, 662, 663, 779,
	0, 664, 0, 665, 666, 667, 668, 669, 670, 672,
	636, 673, 678, 679, 780, 674, 675, 676, 677, 781,
	681, 682, 683, 684, 0, 685, 686, 0, 680, 671,
	0, 687, 688, 689, 690, 691, 692, 0, 693, 694,
	0, 695, 782, 783, 784, 785, 0, 707, 0, 696,
	698, 699, 700, 701, 786, 702, 787, 0, 703, 704,
	705, 706, 697, 708, 709, 0, 0, 710, 711, 712,
	714, 716, 717, 713, 715, 718, 0, 719, 0, 0,
	720, 721, 722, 788, 789, 790, 0, 724, 725, 723,
	726, 727, 730, 728, 729, 791, 731, 732, 733, 315,
	0, 0, 0, 734, 735, 792, 736, 737, 738, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 324, 323,
	325, 326, 327, 328, 0, 329, 330, 0, 0, 0,
	0, 0, 739, 0, 0, 0, 331, 0, 332, 333,
	334, 0, 335, 336, 337, 338, 339, 340, 341, 740,
	741, 0, 342, 742, 343, 743, 0, 744, 344, 345,
	346, 347, 348, 349, 350, 0, 0, 0, 351, 745,
	746, 747, 0, 352, 353, 748, 0, 0, 0, 354,
	355, 356, 357, 358, 359, 360, 361, 0, 0, 363,
	364, 365, 362, 366, 367, 0, 368, 0, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 381, 0, 0, 0, 0, 0, 0, 0,
	382, 383, 384, 385, 386, 0, 387, 389, 749, 750,
	0, 392, 394, 388, 390, 0, 393, 391, 395, 396,
	0, 397, 398, 399, 0, 0, 400, 401, 402, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	751, 411, 412, 413, 415, 417, 414, 416, 418, 419,
	420, 421, 422, 752, 753, 423, 0, 0, 0, 0,
	0, 0, 0, 424, 425, 426, 754, 0, 0, 0,
	427, 0, 428, 429, 430, 0, 431, 432, 0, 0,
	433, 434, 435, 755, 756, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 0, 445, 757, 0, 758, 446,
	0, 447, 448, 449, 450, 451, 452, 453, 4159, 760,
	761, 547, 0, 454, 455, 456, 0, 457, 458, 459,
	460, 461, 0, 0, 0, 0, 462, 463, 464, 0,
	0, 762, 465, 548, 466, 763, 764, 0, 765, 0,
	467, 468, 470, 0, 766, 0, 469, 471, 472, 0,
	473, 0, 0, 0, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 483, 482, 0, 485, 767, 484, 0,
	486, 487, 0, 0, 488, 489, 490, 491, 492, 493,
	496, 0, 0, 494, 495, 497, 498, 0, 499, 500,
	502, 505, 501, 503, 504, 506, 519, 520, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	522, 0, 521, 0, 523, 524, 525, 526, 527, 534,
	536, 537, 532, 533, 535, 538, 539, 541, 529, 530,
	531, 0, 540, 528, 0, 0, 0, 542, 543, 544,
	545, 0, 768, 546, 769, 549, 550, 0, 0, 551,
	0, 552, 0, 0, 554, 555, 556, 0, 0, 557,
	558, 770, 0, 559, 0, 771, 560, 561, 553, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 0,
	572, 573, 772, 574, 575, 576, 773, 577, 578, 579,
	774, 580, 775, 581, 582, 0, 583, 584, 585, 0,
	586, 587, 588, 589, 590, 591, 592, 593, 776, 594,
	595, 597, 596, 598, 0, 599, 0, 600, 601, 602,
	0, 0, 0, 0, 0, 603, 604, 606, 0, 607,
	608, 609, 610, 605, 611, 612, 613, 614, 615, 616,
	0, 618, 619, 617, 620, 621, 0, 622, 623, 624,
	625, 626, 777, 627, 0, 628, 629, 637, 638, 639,
	630, 631, 633, 640, 632, 641, 642, 643, 644, 646,
	645, 0, 648, 649, 647, 650, 651, 652, 0, 653,
	778, 654, 634, 635, 655, 656, 0, 657, 658, 659,
	660, 661, 662, 663, 779, 0, 664, 0, 665, 666,
	667, 668, 669, 670, 672, 636, 673, 678, 679, 780,
	674, 675, 676, 677, 781, 681, 682, 683, 684, 0,
	685, 686, 0, 680, 671, 0, 687, 688, 689, 690,
	691, 692, 0, 693, 694, 0, 695, 782, 783, 784,
	785, 0, 707, 0, 696, 698, 699, 700, 701, 786,
	702, 787, 0, 703, 704, 705, 706, 697, 708, 709,
	0, 0, 710, 711, 712, 714, 716, 717, 713, 715,
	718, 0, 719, 0, 0, 720, 721, 722, 788, 789,
	790, 0, 724, 725, 723, 726, 727, 730, 728, 729,
	791, 731, 732, 733, 315, 0, 0, 0, 734, 735,
	792, 736, 737, 738, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 324, 323, 325, 326, 327, 328, 0,
	329, 330, 0, 0, 0, 0, 0, 739, 0, 0,
	0, 331, 0, 332, 333, 334, 0, 335, 336, 337,
	338, 339, 340, 341, 740, 741, 0, 342, 742, 343,
	743, 0, 744, 344, 345, 346, 347, 348, 349, 350,
	0, 0, 0, 351, 745, 746, 747, 0, 352, 353,
	748, 0, 0, 0, 354, 355, 356, 357, 358, 359,
	360, 361, 0, 0, 363, 364, 365, 362, 366, 367,
	0, 368, 0, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 381, 0, 0,
	0, 0, 0, 0, 0, 382, 383, 384, 385, 386,
	0, 387, 389, 749, 750, 0, 392, 394, 388, 390,
	0, 393, 391, 395, 396, 0, 397, 398, 399, 0,
	0, 400, 401, 402, 0, 403, 404, 405, 0, 406,
	407, 408, 0, 409, 410, 751, 411, 412, 413, 415,
	417, 414, 416, 418, 419, 420, 421, 422, 752, 753,
	423, 0, 0, 0, 0, 0, 0, 0, 424, 425,
	426, 754, 0, 0, 0, 427, 0, 428, 429, 430,
	0, 431, 432, 0, 0, 433, 434, 435, 755, 756,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 0,
	445, 757, 0, 758, 446, 0, 447, 448, 449, 450,
	451, 452, 453, 759, 760, 761, 547, 0, 454, 455,
	456, 0, 457, 458, 459, 460, 461, 0, 0, 0,
	0, 462, 463, 464, 0, 0, 762, 465, 548, 466,
	763, 764, 0, 765, 0, 467, 468, 470, 0, 766,
	0, 469, 471, 472, 0, 473, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 483, 482,
	0, 485, 767, 484, 0, 486, 487, 0, 0, 488,
	489, 490, 491, 492, 493, 496, 0, 0, 494, 495,
	497, 498, 0, 499, 500, 502, 505, 501, 503, 504,
	506, 519, 520, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 522, 0, 521, 0, 523,
	524, 525, 526, 527, 534, 536, 537, 532, 533, 535,
	538, 539, 541, 529, 530, 531, 0, 540, 528, 0,
	0, 0, 542, 543, 544, 545, 0, 768, 546, 769,
	549, 550, 0, 0, 551, 0, 552, 0, 0, 554,
	555, 556, 0, 0, 557, 558, 770, 0, 559, 0,
	771, 560, 561, 553, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 0, 572, 573, 772, 574, 575,
	576, 773, 577, 578, 579, 774, 580, 775, 581, 582,
	0, 583, 584, 585, 0, 586, 587, 588, 589, 590,
	591, 592, 593, 776, 594, 595, 597, 596, 598, 0,
	599, 0, 600, 601, 602, 0, 0, 0, 0, 0,
	603, 604, 606, 0, 607, 608, 609, 610, 605, 611,
	612, 613, 614, 615, 616, 0, 618, 619, 617, 620,
	621, 0, 887, 623, 624, 625, 626, 777, 627, 0,
	628, 629, 637, 638, 639, 630, 631, 633, 886, 632,
	641, 642, 643, 644, 646, 645, 0, 648, 649, 647,
	650, 651, 652, 0, 653, 778, 654, 634, 635, 655,
	656, 0, 657, 658, 659, 660, 661, 662, 663, 779,
	0, 664, 0, 665, 666, 667, 668, 669, 670, 672,
	636, 673, 678, 679, 780, 674, 675, 676, 677, 781,
	681, 682, 683, 684, 0, 685, 686, 0, 680, 671,
	0, 687, 688, 689, 690, 691, 692, 0, 693, 694,
	0, 695, 884, 783, 784, 785, 0, 707, 0, 696,
	698, 699, 700, 701, 786, 702, 787, 0, 703, 704,
	705, 706, 697, 708, 709, 0, 0, 710, 711, 712,
	714, 716, 717, 713, 715, 718, 0, 719, 0, 0,
	720, 721, 722, 788, 789, 790, 0, 724, 725, 723,
	726, 727, 730, 728, 729, 791, 731, 732, 733, 315,
	0, 0, 0, 734, 735, 792, 736, 737, 738, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 324, 323,
	325, 326, 327, 328, 0, 329, 330, 0, 0, 0,
	0, 0, 739, 0, 0, 0, 331, 0, 332, 333,
	334, 0, 335, 336, 337, 338, 339, 340, 341, 740,
	741, 0, 342, 742, 343, 743, 0, 744, 344, 345,
	346, 347, 348, 349, 350, 0, 0, 0, 351, 745,
	746, 747, 0, 352, 353, 748, 0, 0, 0, 354,
	355, 356, 357, 358, 359, 360, 361, 0, 0, 363,
	364, 365, 362, 366, 367, 0, 368, 0, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 381, 0, 0, 0, 0, 0, 0, 0,
	382, 383, 384, 385, 386, 0, 387, 389, 749, 750,
	0, 392, 394, 388, 390, 0, 393, 391, 395, 396,
	0, 397, 398, 399, 0, 0, 400, 401, 402, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	751, 411, 412, 413, 415, 417, 414, 416, 418, 419,
	420, 421, 422, 752, 753, 423, 0, 0, 0, 0,
	0, 0, 0, 424, 425, 426, 754, 0, 0, 0,
	427, 0, 428, 429, 430, 0, 431, 432, 0, 0,
	433, 434, 435, 755, 756, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 0, 445, 757, 0, 758, 446,
	0, 447, 448, 449, 450, 451, 452, 453, 4043, 760,
	761, 547, 0, 454, 455, 456, 0, 457, 458, 459,
	460, 461, 0, 0, 0, 0, 462, 463, 464, 0,
	0, 762, 465, 548, 466, 763, 764, 0, 765, 0,
	467, 468, 470, 0, 766, 0, 469, 471, 472, 0,
	473, 0, 0, 0, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 483, 482, 0, 485, 767, 484, 0,
	486, 487, 0, 0, 488, 489, 490, 491, 492, 493,
	496, 0, 0, 494, 495, 497, 498, 0, 499, 500,
	502, 505, 501, 503, 504, 506, 519, 520, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	522, 0, 521, 0, 523, 524, 525, 526, 527, 534,
	536, 537, 532, 533, 535, 538, 539, 541, 529, 530,
	531, 0, 540, 528, 0, 0, 0, 542, 543, 544,
	545, 0, 768, 546, 769, 549, 550, 0, 0, 551,
	0, 552, 0, 0, 554, 555, 556, 0, 0, 557,
	558, 770, 0, 559, 0, 771, 560, 561, 553, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 0,
	572, 573, 772, 574, 575, 576, 773, 577, 578, 579,
	774, 580, 775, 581, 582, 0, 583, 584, 585, 0,
	586, 587, 588, 589, 590, 591, 592, 593, 776, 594,
	595, 597, 596, 598, 0, 599, 0, 600, 601, 602,
	0, 0, 0, 0, 0, 603, 604, 606, 0, 607,
	608, 609, 610, 605, 611, 612, 613, 614, 615, 616,
	0, 618, 619, 617, 620, 621, 0, 622, 623, 624,
	625, 626, 777, 627, 0, 628, 629, 637, 638, 639,
	630, 631, 633, 640, 632, 641, 642, 643, 644, 646,
	645, 0, 648, 649, 647, 650, 651, 652, 0, 653,
	778, 654, 634, 635, 655, 656, 0, 657, 658, 659,
	660, 661, 662, 663, 779, 0, 664, 0, 665, 666,
	667, 668, 669, 670, 672, 636, 673, 678, 679, 780,
	674, 675, 676, 677, 781, 681, 682, 683, 684, 0,
	685, 686, 0, 680, 671, 0, 687, 688, 689, 690,
	691, 692, 0, 693, 694, 0, 695, 782, 783, 784,
	785, 0, 707, 0, 696, 698, 699, 700, 701, 786,
	702, 787, 0, 703, 704, 705, 706, 697, 708, 709,
	0, 0, 710, 711, 712, 714, 716, 717, 713, 715,
	718, 0, 719, 0, 0, 720, 721, 722, 788, 789,
	790, 0, 724, 725, 723, 726, 727, 730, 728, 729,
	791, 731, 732, 733, 315, 0, 0, 0, 734, 735,
	792, 736, 737, 738, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 324, 323, 325, 326, 327, 328, 0,
	329, 330, 0, 0, 0, 0, 0, 739, 0, 0,
	0, 331, 0, 332, 333, 334, 0, 335, 336, 337,
	338, 339, 340, 341, 740, 741, 0, 342, 742, 343,
	743, 0, 744, 344, 345, 346, 347, 348, 349, 350,
	0, 0, 0, 351, 745, 746, 747, 0, 352, 353,
	748, 0, 0, 0, 354, 355, 356, 357, 358, 359,
	360, 361, 0, 0, 363, 364, 365, 362, 366, 367,
	0, 368, 0, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 381, 0, 0,
	0, 0, 0, 0, 0, 382, 383, 384, 385, 386,
	0, 387, 389, 749, 750, 0, 392, 394, 388, 390,
	0, 393, 391, 395, 396, 0, 397, 398, 399, 0,
	0, 400, 401, 402, 0, 403, 404, 405, 0, 406,
	407, 408, 0, 409, 410, 751, 411, 412, 413, 415,
	417, 414, 416, 418, 419, 420, 421, 422, 752, 753,
	423, 0, 0, 0, 0, 0, 0, 0, 424, 425,
	426, 754, 0, 0, 0, 427, 0, 428, 429, 430,
	0, 431, 432, 0, 0, 433, 434, 435, 755, 756,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 0,
	445, 757, 0, 758, 446, 0, 447, 448, 449, 450,
	451, 452, 453, 4012, 760, 761, 547, 0, 454, 455,
	456, 0, 457, 458, 459, 460, 461, 0, 0, 0,
	0, 462, 463, 464, 0, 0, 762, 465, 548, 466,
	763, 764, 0, 765, 0, 467, 468, 470, 0, 766,
	0, 469, 471, 472, 0, 473, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 483, 482,
	0, 485, 767, 484, 0, 486, 487, 0, 0, 488,
	489, 490, 491, 492, 493, 496, 0, 0, 494, 495,
	497, 498, 0, 499, 500, 502, 505, 501, 503, 504,
	506, 519, 520, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 522, 0, 521, 0, 523,
	524, 525, 526, 527, 534, 536, 537, 532, 533, 535,
	538, 539, 541, 529, 530, 531, 0, 540, 528, 0,
	0, 0, 542, 543, 544, 545, 0, 768, 546, 769,
	549, 550, 0, 0, 551, 0, 552, 0, 0, 554,
	555, 556, 0, 0, 557, 558, 770, 0, 559, 0,
	771, 560, 561, 553, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 0, 572, 573, 772, 574, 575,
	576, 773, 577, 578, 579, 774, 580, 775, 581, 582,
	0, 583, 584, 585, 0, 586, 587, 588, 589, 590,
	591, 592, 593, 776, 594, 595, 597, 596, 598, 0,
	599, 0, 600, 601, 602, 0, 0, 0, 0, 0,
	603, 604, 606, 0, 607, 608, 609, 610, 605, 611,
	612, 613, 614, 615, 616, 0, 618, 619, 617, 620,
	621, 0, 622, 623, 624, 625, 626, 777, 627, 0,
	628, 629, 637, 638, 639, 630, 631, 633, 640, 632,
	641, 642, 643, 644, 646, 645, 0, 648, 649, 647,
	650, 651, 652, 0, 653, 778, 654, 634, 635, 655,
	656, 0, 657, 658, 659, 660, 661, 662, 663, 779,
	0, 664, 0, 665, 666, 667, 668, 669, 670, 672,
	636, 673, 678, 679, 780, 674, 675, 676, 677, 781,
	681, 682, 683, 684, 0, 685, 686, 0, 680, 671,
	0, 687, 688, 689, 690, 691, 692, 0, 693, 694,
	0, 695, 782, 783, 784, 785, 0, 707, 0, 696,
	698, 699, 700, 701, 786, 702, 787, 0, 703, 704,
	705, 706, 697, 708, 709, 0, 0, 710, 711, 712,
	714, 716, 717, 713, 715, 718, 0, 719, 0, 0,
	720, 721, 722, 788, 789, 790, 0, 724, 725, 723,
	726, 727, 730, 728, 729, 791, 731, 732, 733, 315,
	0, 0, 0, 734, 735, 792, 736, 737, 738, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 324, 323,
	325, 326, 327, 328, 0, 329, 330, 0, 0, 0,
	0, 0, 739, 0, 0, 0, 331, 0, 332, 333,
	334, 0, 335, 336, 337, 338, 339, 340, 341, 740,
	741, 0, 342, 742, 343, 743, 0, 744, 344, 345,
	346, 347, 348, 349, 350, 0, 0, 0, 351, 745,
	746, 747, 0, 352, 353, 748, 0, 0, 0, 354,
	355, 356, 357, 358, 359, 360, 361, 0, 0, 363,
	364, 365, 362, 366, 367, 0, 368, 0, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 381, 0, 0, 0, 0, 0, 0, 0,
	382, 383, 384, 385, 386, 0, 387, 389, 749, 750,
	0, 392, 394, 388, 390, 0, 393, 391, 395, 396,
	0, 397, 398, 399, 0, 0, 400, 401, 402, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	751, 411, 412, 413, 415, 417, 414, 416, 418, 419,
	420, 421, 422, 752, 753, 423, 0, 0, 0, 0,
	0, 0, 0, 424, 425, 426, 754, 0, 0, 0,
	427, 0, 428, 429, 430, 0, 431, 432, 0, 0,
	433, 434, 435, 755, 756, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 0, 445, 757, 0, 758, 446,
	0, 447, 448, 449, 450, 451, 452, 453, 4008, 760,
	761, 547, 0, 454, 455, 456, 0, 457, 458, 459,
	460, 461, 0, 0, 0, 0, 462, 463, 464, 0,
	0, 762, 465, 548, 466, 763, 764, 0, 765, 0,
	467, 468, 470, 0, 766, 0, 469, 471, 472, 0,
	473, 0, 0, 0, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 483, 482, 0, 485, 767, 484, 0,
	486, 487, 0, 0, 488, 489, 490, 491, 492, 493,
	496, 0, 0, 494, 495, 497, 498, 0, 499, 500,
	502, 505, 501, 503, 504, 506, 519, 520, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	522, 0, 521, 0, 523, 524, 525, 526, 527, 534,
	536, 537, 532, 533, 535, 538, 539, 541, 529, 530,
	531, 0, 540, 528, 0, 0, 0, 542, 543, 544,
	545, 0, 768, 546, 769, 549, 550, 0, 0, 551,
	0, 552, 0, 0, 554, 555, 556, 0, 0, 557,
	558, 770, 0, 559, 0, 771, 560, 561, 553, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 0,
	572, 573, 772, 574, 575, 576, 773, 577, 578, 579,
	774, 580, 775, 581, 582, 0, 583, 584, 585, 0,
	586, 587, 588, 589, 590, 591, 592, 593, 776, 594,
	595, 597, 596, 598, 0, 599, 0, 600, 601, 602,
	0, 0, 0, 0, 0, 603, 604, 606, 0, 607,
	608, 609, 610, 605, 611, 612, 613, 614, 615, 616,
	0, 618, 619, 617, 620, 621, 0, 622, 623, 624,
	625, 626, 777, 627, 0, 628, 629, 637, 638, 639,
	630, 631, 633, 640, 632, 641, 642, 643, 644, 646,
	645, 0, 648, 649, 647, 650, 651, 652, 0, 653,
	778, 654, 634, 635, 655, 656, 0, 657, 658, 659,
	660, 661, 662, 663, 779, 0, 664, 0, 665, 666,
	667, 668, 669, 670, 672, 636, 673, 678, 679, 780,
	674, 675, 676, 677, 781, 681, 682, 683, 684, 0,
	685, 686, 0, 680, 671, 0, 687, 688, 689, 690,
	691, 692, 0, 693, 694, 0, 695, 782, 783, 784,
	785, 0, 707, 0, 696, 698, 699, 700, 701, 786,
	702, 787, 0, 703, 704, 705, 706, 697, 708, 709,
	0, 0, 710, 711, 712, 714, 716, 717, 713, 715,
	718, 0, 719, 0, 0, 720, 721, 722, 788, 789,
	790, 0, 724, 725, 723, 726, 727, 730, 728, 729,
	791, 731, 732, 733, 315, 0, 0, 0, 734, 735,
	792, 736, 737, 738, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 324, 323, 325, 326, 327, 328, 0,
	329, 330, 0, 0, 0, 0, 0, 739, 0, 0,
	0, 331, 0, 332, 333, 334, 0, 335, 336, 337,
	338, 339, 340, 341, 740, 741, 0, 342, 742, 343,
	743, 0, 744, 344, 345, 346, 347, 348, 349, 350,
	0, 0, 0, 351, 745, 746, 747, 0, 352, 353,
	748, 0, 0, 0, 354, 355, 356, 357, 358, 359,
	360, 361, 0, 0, 363, 364, 365, 362, 366, 367,
	0, 368, 0, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 381, 0, 0,
	0, 0, 0, 0, 0, 382, 383, 384, 385, 386,
	0, 387, 389, 749, 750, 0, 392, 394, 388, 390,
	0, 393, 391, 395, 396, 0, 397, 398, 399, 0,
	0, 400, 401, 402, 0, 403, 404, 405, 0, 406,
	407, 408, 0, 409, 410, 751, 411, 412, 413, 415,
	417, 414, 416, 418, 419, 420, 421, 422, 752, 753,
	423, 0, 0, 0, 0, 0, 0, 0, 424, 425,
	426, 754, 0, 0, 0, 427, 0, 428, 429, 430,
	0, 431, 432, 0, 0, 433, 434, 435, 755, 756,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 0,
	445, 757, 0, 758, 446, 0, 447, 448, 449, 450,
	451, 452, 453, 3959, 760, 761, 547, 0, 454, 455,
	456, 0, 457, 458, 459, 460, 461, 0, 0, 0,
	0, 462, 463, 464, 0, 0, 762, 465, 548, 466,
	763, 764, 0, 765, 0, 467, 468, 470, 0, 766,
	0, 469, 471, 472, 0, 473, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 483, 482,
	0, 485, 767, 484, 0, 486, 487, 0, 0, 488,
	489, 490, 491, 492, 493, 496, 0, 0, 494, 495,
	497, 498, 0, 499, 500, 502, 505, 501, 503, 504,
	506, 519, 520, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 522, 0, 521, 0, 523,
	524, 525, 526, 527, 534, 536, 537, 532, 533, 535,
	538, 539, 541, 529, 530, 531, 0, 540, 528, 0,
	0, 0, 542, 543, 544, 545, 0, 768, 546, 769,
	549, 550, 0, 0, 551, 0, 552, 0, 0, 554,
	555, 556, 0, 0, 557, 558, 770, 0, 559, 0,
	771, 560, 561, 553, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 0, 572, 573, 772, 574, 575,
	576, 773, 577, 578, 579, 774, 580, 775, 581, 582,
	0, 583, 584, 585, 0, 586, 587, 588, 589, 590,
	591, 592, 593, 776, 594, 595, 597, 596, 598, 0,
	599, 0, 600, 601, 602, 0, 0, 0, 0, 0,
	603, 604, 606, 0, 607, 608, 609, 610, 605, 611,
	612, 613, 614, 615, 616, 0, 618, 619, 617, 620,
	621, 0, 622, 623, 624, 625, 626, 777, 627, 0,
	628, 629, 637, 638, 639, 630, 631, 633, 640, 632,
	641, 642, 643, 644, 646, 645, 0, 648, 649, 647,
	650, 651, 652, 0, 653, 778, 654, 634, 635, 655,
	656, 0, 657, 658, 659, 660, 661, 662, 663, 779,
	0, 664, 0, 665, 666, 667, 668, 669, 670, 672,
	636, 673, 678, 679, 780, 674, 675, 676, 677, 781,
	681, 682, 683, 684, 0, 685, 686, 0, 680, 671,
	0, 687, 688, 689, 690, 691, 692, 0, 693, 694,
	0, 695, 782, 783, 784, 785, 0, 707, 0, 696,
	698, 699, 700, 701, 786, 702, 787, 0, 703, 704,
	705, 706, 697, 708, 709, 0, 0, 710, 711, 712,
	714, 716, 717, 713, 715, 718, 0, 719, 0, 0,
	720, 721, 722, 788, 789, 790, 0, 724, 725, 723,
	726, 727, 730, 728, 729, 791, 731, 732, 733, 315,
	0, 0, 0, 734, 735, 792, 736, 737, 738, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 324, 323,
	325, 326, 327, 328, 0, 329, 330, 0, 0, 0,
	0, 0, 739, 0, 0, 0, 331, 0, 332, 333,
	334, 0, 335, 336, 337, 338, 339, 340, 341, 740,
	741, 0, 342, 742, 343, 743, 0, 744, 344, 345,
	346, 347, 348, 349, 350, 0, 0, 0, 351, 745,
	746, 747, 0, 352, 353, 748, 0, 0, 0, 354,
	355, 356, 357, 358, 359, 360, 361, 0, 0, 363,
	364, 365, 362, 366, 367, 0, 368, 0, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 381, 0, 0, 0, 0, 0, 0, 0,
	382, 383, 384, 385, 386, 0, 387, 389, 749, 750,
	0, 392, 394, 388, 390, 0, 393, 391, 395, 396,
	0, 397, 398, 399, 0, 0, 400, 401, 402, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	751, 411, 412, 413, 415, 417, 414, 416, 418, 419,
	420, 421, 422, 752, 753, 423, 0, 0, 0, 0,
	0, 0, 0, 424, 425, 426, 754, 0, 0, 0,
	427, 0, 428, 429, 430, 0, 431, 432, 0, 0,
	433, 434, 435, 755, 756, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 0, 445, 757, 0, 758, 446,
	0, 447, 448, 449, 450, 451, 452, 453, 3957, 760,
	761, 547, 0, 454, 455, 456, 0, 457, 458, 459,
	460, 461, 0, 0, 0, 0, 462, 463, 464, 0,
	0, 762, 465, 548, 466, 763, 764, 0, 765, 0,
	467, 468, 470, 0, 766, 0, 469, 471, 472, 0,
	473, 0, 0, 0, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 483, 482, 0, 485, 767, 484, 0,
	486, 487, 0, 0, 488, 489, 490, 491, 492, 493,
	496, 0, 0, 494, 495, 497, 498, 0, 499, 500,
	502, 505, 501, 503, 504, 506, 519, 520, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	522, 0, 521, 0, 523, 524, 525, 526, 527, 534,
	536, 537, 532, 533, 535, 538, 539, 541, 529, 530,
	531, 0, 540, 528, 0, 0, 0, 542, 543, 544,
	545, 0, 768, 546, 769, 549, 550, 0, 0, 551,
	0, 552, 0, 0, 554, 555, 556, 0, 0, 557,
	558, 770, 0, 559, 0, 771, 560, 561, 553, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 0,
	572, 573, 772, 574, 575, 576, 773, 577, 578, 579,
	774, 580, 775, 581, 582, 0, 583, 584, 585, 0,
	586, 587, 588, 589, 590, 591, 592, 593, 776, 594,
	595, 597, 596, 598, 0, 599, 0, 600, 601, 602,
	0, 0, 0, 0, 0, 603, 604, 606, 0, 607,
	608, 609, 610, 605, 611, 612, 613, 614, 615, 616,
	0, 618, 619, 617, 620, 621, 0, 622, 623, 624,
	625, 626, 777, 627, 0, 628, 629, 637, 638, 639,
	630, 631, 633, 640, 632, 641, 642, 643, 644, 646,
	645, 0, 648, 649, 647, 650, 651, 652, 0, 653,
	778, 654, 634, 635, 655, 656, 0, 657, 658, 659,
	660, 661, 662, 663, 779, 0, 664, 0, 665, 666,
	667, 668, 669, 670, 672, 636, 673, 678, 679, 780,
	674, 675, 676, 677, 781, 681, 682, 683, 684, 0,
	685, 686, 0, 680, 671, 0, 687, 688, 689, 690,
	691, 692, 0, 693, 694, 0, 695, 782, 783, 784,
	785, 0, 707, 0, 696, 698, 699, 700, 701, 786,
	702, 787, 0, 703, 704, 705, 706, 697, 708, 709,
	0, 0, 710, 711, 712, 714, 716, 717, 713, 715,
	718, 0, 719, 0, 0, 720, 721, 722, 788, 789,
	790, 0, 724, 725, 723, 726, 727, 730, 728, 729,
	791, 731, 732, 733, 315, 0, 0, 0, 734, 735,
	792, 736, 737, 738, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 324, 323, 325, 326, 327, 328, 0,
	329, 330, 0, 0, 0, 0, 0, 739, 0, 0,
	0, 331, 0, 332, 333, 334, 0, 335, 336, 337,
	338, 339, 340, 341, 740, 741, 0, 342, 742, 343,
	743, 0, 744, 344, 345, 346, 347, 348, 349, 350,
	0, 0, 0, 351, 745, 746, 747, 0, 352, 353,
	748, 0, 0, 0, 354, 355, 356, 357, 358, 359,
	360, 361, 0, 0, 363, 364, 365, 362, 366, 367,
	0, 368, 0, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 381, 0, 0,
	0, 0, 0, 0, 0, 382, 383, 384, 385, 386,
	0, 387, 389, 749, 750, 0, 392, 394, 388, 390,
	0, 393, 391, 395, 396, 0, 397, 398, 399, 0,
	0, 400, 401, 402, 0, 403, 404, 405, 0, 406,
	407, 408, 0, 409, 410, 751, 411, 412, 413, 415,
	417, 414, 416, 418, 419, 420, 421, 422, 752, 753,
	423, 0, 0, 0, 0, 0, 0, 0, 424, 425,
	426, 754, 0, 0, 0, 427, 0, 428, 429, 430,
	0, 431, 432, 0, 0, 433, 434, 435, 755, 756,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 0,
	445, 757, 0, 758, 446, 0, 447, 448, 449, 450,
	451, 452, 453, 3945, 760, 761, 547, 0, 454, 455,
	456, 0, 457, 458, 459, 460, 461, 0, 0, 0,
	0, 462, 463, 464, 0, 0, 762, 465, 548, 466,
	763, 764, 0, 765, 0, 467, 468, 470, 0, 766,
	0, 469, 471, 472, 0, 473, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 483, 482,
	0, 485, 767, 484, 0, 486, 487, 0, 0, 488,
	489, 490, 491, 492, 493, 496, 0, 0, 494, 495,
	497, 498, 0, 499, 500, 502, 505, 501, 503, 504,
	506, 519, 520, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 522, 0, 521, 0, 523,
	524, 525, 526, 527, 534, 536, 537, 532, 533, 535,
	538, 539, 541, 529, 530, 531, 0, 540, 528, 0,
	0, 0, 542, 543, 544, 545, 0, 768, 546, 769,
	549, 550, 0, 0, 551, 0, 552, 0, 0, 554,
	555, 556, 0, 0, 557, 558, 770, 0, 559, 0,
	771, 560, 561, 553, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 0, 572, 573, 772, 574, 575,
	576, 773, 577, 578, 579, 774, 580, 775, 581, 582,
	0, 583, 584, 585, 0, 586, 587, 588, 589, 590,
	591, 592, 593, 776, 594, 595, 597, 596, 598, 0,
	599, 0, 600, 601, 602, 0, 0, 0, 0, 0,
	603, 604, 606, 0, 607, 608, 609, 610, 605, 611,
	612, 613, 614, 615, 616, 0, 618, 619, 617, 620,
	621, 0, 622, 623, 624, 625, 626, 777, 627, 0,
	628, 629, 637, 638, 639, 630, 631, 633, 640, 632,
	641, 642, 643, 644, 646, 645, 0, 648, 649, 647,
	650, 651, 652, 0, 653, 778, 654, 634, 635, 655,
	656, 0, 657, 658, 659, 660, 661, 662, 663, 779,
	0, 664, 0, 665, 666, 667, 668, 669, 670, 672,
	636, 673, 678, 679, 780, 674, 675, 676, 677, 781,
	681, 682, 683, 684, 0, 685, 686, 0, 680, 671,
	0, 687, 688, 689, 690, 691, 692, 0, 693, 694,
	0, 695, 782, 783, 784, 785, 0, 707, 0, 696,
	698, 699, 700, 701, 786, 702, 787, 0, 703, 704,
	705, 706, 697, 708, 709, 0, 0, 710, 711, 712,
	714, 716, 717, 713, 715, 718, 0, 719, 0, 0,
	720, 721, 722, 788, 789, 790, 0, 724, 725, 723,
	726, 727, 730, 728, 729, 791, 731, 732, 733, 315,
	0, 0, 0, 734, 735, 792, 736, 737, 738, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 324, 323,
	325, 326, 327, 328, 0, 329, 330, 0, 0, 0,
	0, 0, 739, 0, 0, 0, 331, 0, 332, 333,
	334, 0, 335, 336, 337, 338, 339, 340, 341, 740,
	741, 0, 342, 742, 343, 743, 0, 744, 344, 345,
	346, 347, 348, 349, 350, 0, 0, 0, 351, 745,
	746, 747, 0, 352, 353, 748, 0, 0, 0, 354,
	355, 356, 357, 358, 359, 360, 361, 0, 0, 363,
	364, 365, 362, 366, 367, 0, 368, 0, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 381, 0, 0, 0, 0, 0, 0, 0,
	382, 383, 384, 385, 386, 0, 387, 389, 749, 750,
	0, 392, 394, 388, 390, 0, 393, 391, 395, 396,
	0, 397, 398, 399, 0, 0, 400, 401, 402, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	751, 411, 412, 413, 415, 417, 414, 416, 418, 419,
	420, 421, 422, 752, 753, 423, 0, 0, 0, 0,
	0, 0, 0, 424, 425, 426, 754, 0, 0, 0,
	427, 0, 428, 429, 430, 0, 431, 432, 0, 0,
	433, 434, 435, 755, 756, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 0, 445, 757, 0, 758, 446,
	0, 447, 448, 449, 450, 451, 452, 453, 3942, 760,
	761, 547, 0, 454, 455, 456, 0, 457, 458, 459,
	460, 461, 0, 0, 0, 0, 462, 463, 464, 0,
	0, 762, 465, 548, 466, 763, 764, 0, 765, 0,
	467, 468, 470, 0, 766, 0, 469, 471, 472, 0,
	473, 0, 0, 0, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 483, 482, 0, 485, 767, 484, 0,
	486, 487, 0, 0, 488, 489, 490, 491, 492, 493,
	496, 0, 0, 494, 495, 497, 498, 0, 499, 500,
	502, 505, 501, 503, 504, 506, 519, 520, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	522, 0, 521, 0, 523, 524, 525, 526, 527, 534,
	536, 537, 532, 533, 535, 538, 539, 541, 529, 530,
	531, 0, 540, 528, 0, 0, 0, 542, 543, 544,
	545, 0, 768, 546, 769, 549, 550, 0, 0, 551,
	0, 552, 0, 0, 554, 555, 556, 0, 0, 557,
	558, 770, 0, 559, 0, 771, 560, 561, 553, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 0,
	572, 573, 772, 574, 575, 576, 773, 577, 578, 579,
	774, 580, 775, 581, 582, 0, 583, 584, 585, 0,
	586, 587, 588, 589, 590, 591, 592, 593, 776, 594,
	595, 597, 596, 598, 0, 599, 0, 600, 601, 602,
	0, 0, 0, 0, 0, 603, 604, 606, 0, 607,
	608, 609, 610, 605, 611, 612, 613, 614, 615, 616,
	0, 618, 619, 617, 620, 621, 0, 622, 623, 624,
	625, 626, 777, 627, 0, 628, 629, 637, 638, 639,
	630, 631, 633, 640, 632, 641, 642, 643, 644, 646,
	645, 0, 648, 649, 647, 650, 651, 652, 0, 653,
	778, 654, 634, 635, 655, 656, 0, 657, 658, 659,
	660, 661, 662, 663, 779, 0, 664, 0, 665, 666,
	667, 668, 669, 670, 672, 636, 673, 678, 679, 780,
	674, 675, 676, 677, 781, 681, 682, 683, 684, 0,
	685, 686, 0, 680, 671, 0, 687, 688, 689, 690,
	691, 692, 0, 693, 694, 0, 695, 782, 783, 784,
	785, 0, 707, 0, 696, 698, 699, 700, 701, 786,
	702, 787, 0, 703, 704, 705, 706, 697, 708, 709,
	0, 0, 710, 711, 712, 714, 716, 717, 713, 715,
	718, 0, 719, 0, 0, 720, 721, 722, 788, 789,
	790, 0, 724, 725, 723, 726, 727, 730, 728, 729,
	791, 731, 732, 733, 315, 0, 0, 0, 734, 735,
	792, 736, 737, 738, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 324, 323, 325, 326, 327, 328, 0,
	329, 330, 0, 0, 0, 0, 0, 739, 0, 0,
	0, 331, 0, 332, 333, 334, 0, 335, 336, 337,
	338, 339, 340, 341, 740, 741, 0, 342, 742, 343,
	743, 0, 744, 344, 345, 346, 347, 348, 349, 350,
	0, 0, 0, 351, 745, 746, 747, 0, 352, 353,
	748, 0, 0, 0, 354, 355, 356, 357, 358, 359,
	360, 361, 0, 0, 363, 364, 365, 362, 366, 367,
	0, 368, 0, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 381, 0, 0,
	0, 0, 0, 0, 0, 382, 383, 384, 385, 386,
	0, 387, 389, 749, 750, 0, 392, 394, 388, 390,
	0, 393, 391, 395, 396, 0, 397, 398, 399, 0,
	0, 400, 401, 402, 0, 403, 404, 405, 0, 406,
	407, 408, 0, 409, 410, 751, 411, 412, 413, 415,
	417, 414, 416, 418, 419, 420, 421, 422, 752, 753,
	423, 0, 0, 0, 0, 0, 0, 0, 424, 425,
	426, 754, 0, 0, 0, 427, 0, 428, 429, 430,
	0, 431, 432, 0, 0, 433, 434, 435, 755, 756,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 0,
	445, 757, 0, 758, 446, 0, 447, 448, 449, 450,
	451, 452, 453, 3510, 760, 761, 547, 0, 454, 455,
	456, 0, 457, 458, 459, 460, 461, 0, 0, 0,
	0, 462, 463, 464, 0, 0, 762, 465, 548, 466,
	763, 764, 0, 765, 0, 467, 468, 470, 0, 766,
	0, 469, 471, 472, 0, 473, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 483, 482,
	0, 485, 767, 484, 0, 486, 487, 0, 0, 488,
	489, 490, 491, 492, 493, 496, 0, 0, 494, 495,
	497, 498, 0, 499, 500, 502, 505, 501, 503, 504,
	506, 519, 520, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 522, 0, 521, 0, 523,
	524, 525, 526, 527, 534, 536, 537, 532, 533, 535,
	538, 539, 541, 529, 530, 531, 0, 540, 528, 0,
	0, 0, 542, 543, 544, 545, 0, 768, 546, 769,
	549, 550, 0, 0, 551, 0, 552, 0, 0, 554,
	555, 556, 0, 0, 557, 558, 770, 0, 559, 0,
	771, 560, 561, 553, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 0, 572, 573, 772, 574, 575,
	576, 773, 577, 578, 579, 774, 580, 775, 581, 582,
	0, 583, 584, 585, 0, 586, 587, 588, 589, 590,
	591, 592, 593, 776, 594, 595, 597, 596, 598, 0,
	599, 0, 600, 601, 602, 0, 0, 0, 0, 0,
	603, 604, 606, 0, 607, 608, 609, 610, 605, 611,
	612, 613, 614, 615, 616, 0, 618, 619, 617, 620,
	621, 0, 622, 623, 624, 625, 626, 777, 627, 0,
	628, 629, 637, 638, 639, 630, 631, 633, 640, 632,
	641, 642, 643, 644, 646, 645, 0, 648, 649, 647,
	650, 651, 652, 0, 653, 778, 654, 634, 635, 655,
	656, 0, 657, 658, 659, 660, 661, 662, 663, 779,
	0, 664, 0, 665, 666, 667, 668, 669, 670, 672,
	636, 673, 678, 679, 780, 674, 675, 676, 677, 781,
	681, 682, 683, 684, 0, 685, 686, 0, 680, 671,
	0, 687, 688, 689, 690, 691, 692, 0, 693, 694,
	0, 695, 782, 783, 784, 785, 0, 707, 0, 696,
	698, 699, 700, 701, 786, 702, 787, 0, 703, 704,
	705, 706, 697, 708, 709, 0, 0, 710, 711, 712,
	714, 716, 717, 713, 715, 718, 0, 719, 0, 0,
	720, 721, 722, 788, 789, 790, 0, 724, 725, 723,
	726, 727, 730, 728, 729, 791, 731, 732, 733, 315,
	0, 0, 0, 734, 735, 792, 736, 737, 738, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 324, 323,
	325, 326, 327, 328, 0, 329, 330, 0, 0, 0,
	0, 0, 739, 0, 0, 0, 331, 0, 332, 333,
	334, 0, 335, 336, 337, 338, 339, 340, 341, 740,
	741, 0, 342, 742, 343, 743, 0, 744, 344, 345,
	346, 347, 348, 349, 350, 0, 0, 0, 351, 745,
	746, 747, 0, 352, 353, 748, 0, 0, 0, 354,
	355, 356, 357, 358, 359, 360, 361, 0, 0, 363,
	364, 365, 362, 366, 367, 0, 368, 0, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 381, 0, 0, 0, 0, 0, 0, 0,
	382, 383, 384, 385, 386, 0, 387, 389, 749, 750,
	0, 392, 394, 388, 390, 0, 393, 391, 395, 396,
	0, 397, 398, 399, 0, 0, 400, 401, 402, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	751, 411, 412, 413, 415, 417, 414, 416, 418, 419,
	420, 421, 422, 752, 753, 423, 0, 0, 0, 0,
	0, 0, 0, 424, 425, 426, 754, 0, 0, 0,
	427, 0, 428, 429, 430, 0, 431, 432, 0, 0,
	433, 434, 435, 755, 756, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 0, 445, 757, 0, 758, 446,
	0, 447, 448, 449, 450, 451, 452, 453, 759, 760,
	761, 547, 0, 454, 455, 456, 0, 457, 458, 459,
	460, 461, 0, 0, 0, 0, 462, 463, 464, 0,
	0, 762, 465, 548, 466, 763, 764, 0, 765, 0,
	467, 468, 470, 0, 766, 0, 469, 471, 472, 0,
	473, 0, 0, 0, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 483, 482, 0, 485, 767, 484, 0,
	486, 487, 0, 0, 488, 489, 490, 491, 492, 493,
	496, 0, 0, 494, 495, 497, 498, 0, 499, 500,
	502, 505, 501, 503, 504, 506, 519, 520, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	522, 0, 521, 0, 523, 524, 525, 526, 527, 534,
	536, 537, 532, 533, 535, 538, 539, 541, 529, 530,
	531, 0, 540, 528, 0, 0, 0, 542, 543, 544,
	545, 0, 768, 546, 769, 549, 550, 0, 0, 551,
	0, 552, 0, 0, 554, 555, 556, 0, 0, 557,
	558, 770, 0, 559, 0, 771, 560, 561, 553, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 0,
	572, 573, 772, 574, 575, 576, 773, 577, 578, 579,
	774, 580, 775, 581, 582, 0, 583, 584, 585, 0,
	586, 587, 588, 589, 590, 591, 592, 593, 776, 594,
	595, 597, 596, 598, 0, 599, 0, 600, 601, 602,
	0, 0, 0, 0, 0, 603, 604, 606, 0, 607,
	608, 609, 610, 605, 611, 612, 613, 614, 615, 616,
	0, 618, 619, 617, 620, 621, 0, 622, 623, 624,
	625, 626, 777, 627, 0, 628, 629, 868, 638, 639,
	630, 631, 633, 640, 632, 641, 642, 643, 644, 646,
	645, 0, 648, 649, 647, 650, 651, 652, 0, 653,
	778, 654, 634, 635, 655, 656, 0, 657, 658, 659,
	660, 661, 662, 663, 779, 0, 664, 0, 665, 666,
	667, 668, 669, 670, 672, 636, 673, 678, 679, 780,
	674, 675, 676, 677, 781, 681, 682, 683, 684, 0,
	685, 686, 0, 680, 671, 0, 687, 688, 689, 690,
	691, 692, 0, 693, 694, 0, 695, 782, 783, 784,
	785, 0, 707, 0, 696, 698, 699, 700, 701, 786,
	702, 787, 0, 703, 704, 705, 706, 697, 708, 709,
	0, 0, 710, 711, 712, 714, 716, 717, 713, 715,
	718, 0, 719, 0, 0, 720, 721, 722, 788, 789,
	790, 0, 724, 725, 723, 726, 727, 730, 728, 729,
	791, 731, 732, 733, 315, 0, 0, 0, 734, 735,
	792, 736, 737, 738, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 324, 323, 325, 326, 327, 328, 0,
	329, 330, 0, 0, 0, 0, 0, 739, 0, 2623,
	0, 331, 0, 332, 333, 334, 0, 335, 336, 337,
	338, 339, 340, 341, 740, 741, 0, 342, 742, 343,
	743, 0, 744, 344, 345, 346, 347, 348, 349, 350,
	0, 0, 0, 351, 745, 746, 747, 0, 352, 353,
	748, 0, 0, 0, 354, 355, 356, 357, 358, 359,
	360, 361, 0, 0, 363, 364, 365, 362, 366, 367,
	0, 368, 0, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 381, 0, 0,
	0, 0, 0, 0, 0, 382, 383, 384, 385, 386,
	0, 387, 389, 749, 750, 0, 392, 394, 388, 390,
	0, 393, 391, 395, 396, 0, 397, 398, 399, 0,
	0, 400, 401, 402, 0, 403, 404, 405, 0, 406,
	407, 408, 0, 409, 410, 751, 411, 412, 413, 415,
	417, 414, 416, 418, 419, 420, 421, 422, 752, 753,
	423, 0, 0, 0, 0, 0, 0, 0, 424, 425,
	426, 754, 0, 0, 0, 427, 0, 428, 429, 430,
	0, 431, 432, 0, 0, 433, 434, 435, 755, 756,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 0,
	445, 757, 0, 758, 446, 0, 447, 448, 449, 450,
	451, 452, 453, 759, 760, 761, 547, 0, 454, 455,
	456, 0, 457, 458, 459, 460, 461, 0, 0, 0,
	0, 462, 463, 464, 0, 0, 762, 465, 548, 466,
	763, 764, 0, 765, 0, 467, 468, 470, 0, 766,
	0, 469, 471, 472, 0, 473, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 483, 482,
	0, 485, 767, 484, 0, 486, 487, 0, 0, 488,
	489, 490, 491, 492, 493, 496, 0, 0, 494, 495,
	497, 498, 0, 499, 500, 502, 505, 501, 503, 504,
	506, 519, 520, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 522, 0, 521, 0, 523,
	524, 525, 526, 527, 534, 536, 537, 532, 533, 535,
	538, 539, 541, 529, 530, 531, 0, 540, 528, 0,
	0, 0, 542, 543, 544, 545, 0, 768, 546, 769,
	549, 550, 0, 0, 551, 0, 552, 0, 0, 554,
	555, 556, 0, 0, 557, 558, 770, 0, 559, 0,
	771, 560, 561, 553, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 0, 572, 573, 772, 574, 575,
	576, 773, 577, 578, 579, 774, 580, 775, 581, 582,
	0, 583, 584, 585, 0, 586, 587, 588, 589, 590,
	591, 592, 593, 776, 594, 595, 597, 596, 598, 0,
	599, 0, 600, 601, 602, 0, 0, 0, 0, 0,
	603, 604, 606, 0, 607, 608, 609, 610, 605, 611,
	612, 613, 614, 615, 616, 0, 618, 619, 617, 620,
	621, 0, 622, 623, 624, 625, 626, 777, 627, 0,
	628, 629, 637, 638, 639, 630, 631, 633, 640, 632,
	641, 642, 643, 644, 646, 645, 0, 648, 649, 647,
	650, 651, 652, 0, 0, 778, 654, 634, 635, 655,
	656, 0, 657, 658, 659, 660, 661, 662, 663, 779,
	0, 664, 0, 665, 666, 667, 668, 669, 670, 672,
	636, 673, 678, 679, 780, 674, 675, 676, 677, 781,
	681, 682, 683, 684, 0, 685, 686, 0, 680, 671,
	0, 687, 688, 689, 690, 691, 692, 0, 693, 694,
	0, 695, 782, 783, 784, 785, 0, 707, 0, 696,
	698, 699, 700, 701, 786, 702, 787, 0, 703, 704,
	705, 706, 697, 708, 709, 0, 0, 710, 711, 712,
	714, 716, 717, 713, 715, 718, 0, 719, 0, 0,
	720, 721, 722, 788, 789, 790, 0, 724, 725, 723,
	726, 727, 730, 728, 729, 791, 731, 732, 733, 315,
	0, 0, 0, 734, 735, 792, 736, 737, 738, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 324, 323,
	325, 326, 327, 328, 0, 329, 330, 0, 0, 0,
	0, 0, 739, 0, 0, 0, 331, 0, 332, 333,
	334, 0, 335, 336, 337, 338, 339, 340, 341, 740,
	741, 0, 342, 742, 343, 743, 0, 744, 344, 345,
	346, 347, 348, 349, 350, 0, 0, 0, 351, 745,
	746, 747, 0, 352, 353, 748, 0, 0, 0, 354,
	355, 356, 357, 358, 359, 360, 361, 0, 0, 363,
	364, 365, 362, 366, 367, 0, 368, 0, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 381, 0, 0, 0, 0, 0, 0, 0,
	382, 383, 384, 385, 386, 0, 387, 389, 749, 750,
	0, 392, 394, 388, 390, 0, 393, 391, 395, 396,
	0, 397, 398, 399, 0, 0, 400, 401, 402, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	751, 411, 412, 413, 415, 417, 414, 416, 418, 419,
	420, 421, 422, 752, 753, 423, 0, 0, 0, 0,
	0, 0, 0, 424, 425, 426, 754, 0, 0, 0,
	427, 0, 428, 429, 430, 0, 431, 432, 0, 0,
	433, 434, 435, 755, 756, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 0, 445, 757, 0, 758, 446,
	0, 447, 448, 449, 450, 451, 452, 453, 1461, 760,
	761, 547, 0, 454, 455, 456, 0, 457, 458, 459,
	460, 461, 0, 0, 0, 0, 462, 463, 464, 0,
	0, 762, 465, 548, 466, 763, 764, 0, 765, 0,
	467, 468, 470, 0, 766, 0, 469, 471, 472, 0,
	473, 0, 0, 0, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 483, 482, 0, 485, 767, 484, 0,
	486, 487, 0, 0, 488, 489, 490, 491, 492, 493,
	496, 0, 0, 494, 495, 497, 498, 0, 499, 500,
	502, 505, 501, 503, 504, 506, 519, 520, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	522, 0, 521, 0, 523, 524, 525, 526, 527, 534,
	536, 537, 532, 533, 535, 538, 539, 541, 529, 530,
	531, 0, 540, 528, 0, 0, 0, 542, 543, 544,
	545, 0, 768, 546, 769, 549, 550, 0, 0, 551,
	0, 552, 0, 0, 554, 555, 556, 0, 0, 557,
	558, 770, 0, 559, 0, 771, 560, 561, 553, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 0,
	572, 573, 772, 574, 575, 576, 773, 577, 578, 579,
	774, 580, 775, 581, 582, 0, 583, 584, 585, 0,
	586, 587, 588, 589, 590, 591, 592, 593, 776, 594,
	595, 597, 596, 598, 0, 599, 0, 600, 601, 602,
	0, 0, 0, 0, 0, 603, 604, 606, 0, 607,
	608, 609, 610, 605, 611, 612, 613, 614, 615, 616,
	0, 618, 619, 617, 620, 621, 0, 622, 623, 624,
	625, 626, 777, 627, 0, 628, 629, 637, 638, 639,
	630, 631, 633, 640, 632, 641, 642, 643, 644, 646,
	645, 0, 648, 649, 647, 650, 651, 652, 0, 653,
	778, 654, 634, 635, 655, 656, 0, 657, 658, 659,
	660, 661, 662, 663, 779, 0, 664, 0, 665, 666,
	667, 668, 669, 670, 672, 636, 673, 678, 679, 780,
	674, 675, 676, 677, 781, 681, 682, 683, 684, 0,
	685, 686, 0, 680, 671, 0, 687, 688, 689, 690,
	691, 692, 0, 693, 694, 0, 695, 782, 783, 784,
	785, 0, 707, 0, 696, 698, 699, 700, 701, 786,
	702, 787, 0, 703, 704, 705, 706, 697, 708, 709,
	0, 0, 710, 711, 712, 714, 716, 717, 713, 715,
	718, 0, 719, 0, 0, 720, 721, 722, 788, 789,
	790, 0, 724, 725, 723, 726, 727, 730, 728, 729,
	791, 731, 732, 733, 315, 0, 0, 0, 734, 735,
	792, 736, 737, 738, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 324, 323, 325, 326, 327, 328, 0,
	329, 330, 0, 0, 0, 0, 0, 739, 0, 0,
	0, 331, 0, 332, 333, 334, 0, 335, 336, 337,
	338, 339, 340, 341, 740, 741, 0, 342, 742, 343,
	743, 0, 744, 344, 345, 346, 347, 348, 349, 350,
	0, 0, 0, 351, 745, 746, 747, 0, 352, 353,
	748, 0, 0, 0, 354, 355, 356, 357, 358, 359,
	360, 361, 0, 0, 363, 364, 365, 362, 366, 367,
	0, 368, 0, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 381, 0, 0,
	0, 0, 0, 0, 0, 382, 383, 384, 385, 386,
	0, 387, 389, 749, 750, 0, 392, 394, 388, 390,
	0, 393, 391, 395, 396, 0, 397, 398, 399, 0,
	0, 400, 401, 402, 0, 403, 404, 405, 0, 406,
	407, 408, 0, 409, 410, 751, 411, 412, 413, 415,
	417, 414, 416, 418, 419, 420, 421, 422, 752, 753,
	423, 0, 0, 0, 0, 0, 0, 0, 424, 425,
	426, 754, 0, 0, 0, 427, 0, 428, 429, 430,
	0, 431, 432, 0, 0, 433, 434, 435, 755, 756,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 0,
	445, 757, 0, 758, 446, 0, 447, 448, 449, 450,
	451, 452, 453, 759, 760, 761, 547, 0, 454, 455,
	456, 0, 457, 458, 459, 460, 461, 0, 0, 0,
	0, 462, 463, 464, 0, 0, 762, 465, 548, 466,
	763, 764, 0, 765, 0, 467, 468, 470, 0, 766,
	0, 469, 471, 472, 0, 473, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 483, 482,
	0, 485, 767, 484, 0, 486, 487, 0, 0, 488,
	489, 490, 491, 492, 493, 496, 0, 0, 494, 495,
	497, 498, 0, 499, 500, 502, 505, 501, 503, 504,
	506, 519, 520, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 522, 0, 521, 0, 523,
	524, 525, 526, 527, 534, 536, 537, 532, 533, 535,
	538, 539, 541, 529, 530, 531, 0, 540, 528, 0,
	0, 0, 542, 543, 544, 545, 0, 768, 546, 769,
	549, 550, 0, 0, 551, 0, 552, 0, 0, 554,
	555, 556, 0, 0, 557, 558, 770, 0, 559, 0,
	771, 560, 561, 553, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 0, 572, 573, 772, 574, 575,
	576, 773, 577, 578, 579, 774, 580, 775, 581, 582,
	0, 583, 584, 585, 0, 586, 587, 588, 589, 590,
	591, 592, 593, 776, 594, 595, 1381, 596, 598, 0,
	599, 0, 600, 601, 602, 0, 0, 0, 0, 0,
	603, 604, 606, 0, 607, 608, 609, 610, 605, 611,
	612, 613, 614, 615, 616, 0, 618, 619, 617, 620,
	621, 0, 622, 623, 624, 625, 626, 777, 627, 0,
	628, 629, 637, 638, 639, 630, 631, 633, 640, 632,
	641, 642, 643, 644, 646, 645, 0, 648, 649, 647,
	650, 651, 652, 0, 653, 778, 654, 634, 635, 655,
	656, 0, 657, 658, 659, 660, 661, 662, 663, 779,
	0, 664, 0, 665, 666, 667, 668, 669, 670, 672,
	636, 673, 678, 679, 780, 674, 675, 676, 677, 781,
	681, 682, 683, 684, 0, 685, 686, 0, 680, 671,
	0, 687, 688, 689, 690, 691, 692, 0, 693, 694,
	0, 695, 782, 783, 784, 785, 0, 707, 0, 696,
	698, 699, 700, 701, 786, 702, 787, 0, 703, 704,
	705, 706, 697, 708, 709, 0, 0, 710, 711, 712,
	714, 716, 717, 713, 715, 718, 0, 719, 0, 0,
	720, 721, 722, 788, 789, 790, 0, 724, 725, 723,
	726, 727, 730, 728, 729, 791, 731, 732, 733, 315,
	0, 0, 0, 734, 735, 792, 736, 737, 738, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 324, 323,
	325, 326, 327, 328, 0, 329, 330, 0, 0, 0,
	0, 0, 739, 0, 0, 0, 331, 0, 332, 333,
	334, 0, 335, 336, 337, 338, 339, 340, 341, 740,
	741, 0, 342, 742, 343, 743, 0, 744, 344, 345,
	346, 347, 348, 349, 350, 0, 0, 0, 351, 745,
	746, 747, 0, 352, 353, 748, 0, 0, 0, 354,
	355, 356, 357, 358, 359, 360, 361, 0, 0, 363,
	364, 365, 362, 366, 367, 0, 368, 0, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 381, 0, 0, 0, 0, 0, 0, 0,
	382, 383, 384, 385, 386, 0, 387, 389, 749, 750,
	0, 392, 394, 388, 390, 0, 393, 391, 395, 396,
	0, 397, 398, 399, 0, 0, 400, 401, 402, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	751, 411, 412, 413, 415, 417, 414, 416, 418, 419,
	420, 421, 422, 752, 753, 423, 0, 0, 0, 0,
	0, 0, 0, 424, 425, 426, 754, 0, 0, 0,
	427, 0, 428, 429, 430, 0, 431, 432, 0, 0,
	433, 434, 435, 755, 756, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 0, 445, 757, 0, 758, 0,
	0, 447, 448, 449, 450, 451, 452, 453, 759, 760,
	761, 547, 0, 454, 455, 456, 0, 457, 458, 459,
	460, 461, 0, 0, 0, 0, 462, 463, 464, 0,
	0, 762, 465, 548, 466, 763, 764, 0, 765, 0,
	467, 468, 470, 0, 766, 0, 469, 471, 472, 0,
	473, 0, 0, 0, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 483, 482, 0, 485, 767, 484, 0,
	486, 487, 0, 0, 488, 489, 490, 491, 492, 493,
	496, 0, 0, 494, 495, 497, 498, 0, 499, 500,
	502, 505, 501, 503, 504, 506, 519, 520, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	522, 0, 521, 0, 523, 524, 525, 526, 527, 534,
	536, 537, 532, 533, 535, 538, 539, 541, 529, 530,
	531, 0, 540, 528, 0, 0, 0, 542, 543, 544,
	545, 0, 768, 546, 769, 549, 550, 0, 0, 551,
	0, 552, 0, 0, 554, 555, 556, 0, 0, 557,
	558, 770, 0, 559, 0, 771, 560, 561, 553, 562,
	563, 564, 0, 566, 567, 568, 569, 570, 571, 0,
	572, 573, 772, 574, 575, 576, 773, 577, 578, 579,
	774, 580, 775, 581, 582, 0, 583, 584, 585, 0,
	586, 587, 588, 589, 590, 0, 592, 593, 776, 594,
	595, 597, 596, 598, 0, 599, 0, 600, 601, 602,
	0, 0, 0, 0, 0, 603, 604, 606, 0, 607,
	608, 609, 610, 605, 611, 612, 613, 614, 615, 616,
	0, 618, 619, 617, 620, 621, 0, 622, 623, 624,
	625, 626, 777, 0, 0, 628, 629, 637, 638, 639,
	630, 631, 633, 640, 632, 641, 642, 643, 644, 646,
	645, 0, 648, 649, 647, 650, 651, 652, 0, 653,
	778, 654, 634, 635, 655, 656, 0, 657, 658, 659,
	660, 661, 662, 663, 779, 0, 664, 0, 665, 666,
	667, 668, 669, 670, 672, 636, 673, 678, 679, 780,
	674, 675, 676, 677, 781, 681, 682, 683, 684, 0,
	685, 686, 0, 680, 671, 0, 687, 688, 689, 690,
	691, 692, 0, 693, 694, 0, 695, 782, 783, 784,
	785, 0, 707, 0, 696, 698, 699, 700, 701, 786,
	702, 787, 0, 703, 704, 705, 706, 697, 708, 709,
	0, 0, 710, 711, 712, 714, 716, 717, 713, 715,
	718, 0, 719, 0, 0, 720, 721, 722, 788, 789,
	790, 0, 724, 725, 723, 726, 727, 730, 728, 729,
	791, 731, 732, 733, 1801, 0, 1507, 0, 734, 735,
	792, 736, 737, 738, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 321, 322, 324, 323, 325, 326, 327,
	328, 0, 329, 330, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 331, 0, 332, 333, 334, 0, 335,
	336, 337, 338, 339, 340, 341, 0, 0, 0, 342,
	0, 343, 0, 0, 0, 344, 345, 346, 347, 348,
	349, 350, 0, 0, 0, 351, 0, 0, 0, 0,
	352, 353, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 359, 360, 361, 0, 0, 363, 364, 365, 362,
	366, 367, 0, 368, 0, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 381,
	0, 0, 0, 0, 0, 0, 1509, 382, 383, 384,
	385, 386, 0, 387, 389, 0, 0, 0, 392, 394,
	388, 390, 0, 393, 391, 395, 396, 0, 397, 398,
	399, 0, 0, 400, 401, 402, 0, 403, 404, 405,
	0, 406, 407, 408, 0, 409, 410, 0, 411, 412,
	413, 415, 417, 414, 416, 418, 419, 420, 421, 422,
	0, 0, 423, 0, 0, 0, 0, 0, 0, 0,
	424, 425, 426, 0, 0, 0, 0, 427, 0, 428,
	429, 430, 0, 431, 432, 0, 0, 433, 434, 435,
	0, 0, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 0, 445, 0, 0, 0, 446, 0, 447, 448,
	449, 450, 451, 452, 453, 1800, 0, 0, 547, 0,
	454, 455, 456, 0, 457, 458, 459, 460, 461, 0,
	0, 0, 0, 462, 463, 464, 0, 0, 0, 465,
	548, 466, 0, 0, 0, 0, 0, 467, 468, 470,
	0, 0, 0, 469, 471, 472, 0, 473, 0, 0,
	0, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	483, 482, 0, 485, 0, 484, 0, 486, 487, 0,
	0, 488, 489, 490, 491, 492, 493, 496, 0, 0,
	494, 495, 497, 498, 0, 499, 500, 502, 505, 501,
	503, 504, 506, 519, 520, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 522, 0, 521,
	0, 523, 524, 525, 526, 527, 534, 536, 537, 532,
	533, 535, 538, 539, 541, 529, 530, 531, 0, 540,
	528, 0, 0, 0, 542, 543, 544, 545, 0, 0,
	546, 0, 549, 550, 0, 0, 551, 0, 552, 0,
	0, 554, 555, 556, 0, 0, 557, 558, 0, 0,
	559, 0, 0, 560, 561, 553, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 0, 572, 573, 0,
	574, 575, 576, 0, 577, 578, 579, 0, 580, 0,
	581, 582, 0, 583, 584, 585, 0, 586, 587, 588,
	589, 590, 591, 592, 593, 0, 594, 595, 597, 596,
	598, 0, 599, 0, 600, 601, 602, 0, 0, 0,
	0, 0, 603, 604, 606, 0, 607, 608, 609, 610,
	605, 611, 612, 613, 614, 615, 616, 0, 618, 619,
	617, 620, 621, 0, 622, 623, 624, 625, 626, 0,
	627, 0, 628, 629, 637, 638, 639, 630, 631, 633,
	640, 632, 641, 642, 643, 644, 646, 645, 0, 648,
	649, 647, 650, 651, 652, 1510, 653, 0, 654, 634,
	635, 655, 656, 0, 657, 658, 659, 660, 661, 662,
	663, 0, 0, 664, 0, 665, 666, 667, 668, 669,
	670, 672, 636, 673, 678, 679, 0, 674, 675, 676,
	677, 0, 681, 682, 683, 684, 0, 685, 686, 0,
	680, 671, 0, 687, 688, 689, 690, 691, 692, 0,
	693, 694, 0, 695, 0, 0, 0, 0, 0, 707,
	0, 696, 698, 699, 700, 701, 0, 702, 0, 0,
	703, 704, 705, 706, 697, 708, 709, 0, 0, 710,
	711, 712, 714, 716, 717, 713, 715, 718, 0, 719,
	0, 0, 720, 721, 722, 0, 0, 0, 0, 724,
	725, 723, 726, 727, 730, 728, 729, 0, 731, 732,
	733, 1720, 0, 1507, 0, 734, 735, 0, 736, 737,
	738, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	321, 322, 324, 323, 325, 326, 327, 328, 0, 329,
	330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	331, 0, 332, 333, 334, 0, 335, 336, 337, 338,
	339, 340, 341, 0, 0, 0, 342, 0, 343, 0,
	0, 0, 344, 345, 346, 347, 348, 349, 350, 0,
	0, 0, 351, 0, 0, 0, 0, 352, 353, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 359, 360,
	361, 0, 0, 363, 364, 365, 362, 366, 367, 0,
	368, 0, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 381, 0, 0, 0,
	0, 0, 0, 1509, 382, 383, 384, 385, 386, 0,
	387, 389, 0, 0, 0, 392, 394, 388, 390, 0,
	393, 391, 395, 396, 0, 397, 398, 399, 0, 0,
	400, 401, 402, 0, 403, 404, 405, 0, 406, 407,
	408, 0, 409, 410, 0, 411, 412, 413, 415, 417,
	414, 416, 418, 419, 420, 421, 422, 0, 0, 423,
	0, 0, 0, 0, 0, 0, 0, 424, 425, 426,
	0, 0, 0, 0, 427, 0, 428, 429, 430, 0,
	431, 432, 0, 0, 433, 434, 435, 0, 0, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 0, 445,
	0, 0, 0, 446, 0, 447, 448, 449, 450, 451,
	452, 453, 1719, 0, 0, 547, 0, 454, 455, 456,
	0, 457, 458, 459, 460, 461, 0, 0, 0, 0,
	462, 463, 464, 0, 0, 0, 465, 548, 466, 0,
	0, 0, 0, 0, 467, 468, 470, 0, 0, 0,
	469, 471, 472, 0, 473, 0, 0, 0, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 483, 482, 0,
	485, 0, 484, 0, 486, 487, 0, 0, 488, 489,
	490, 491, 492, 493, 496, 0, 0, 494, 495, 497,
	498, 0, 499, 500, 502, 505, 501, 503, 504, 506,
	519, 520, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 522, 0, 521, 0, 523, 524,
	525, 526, 527, 534, 536, 537, 532, 533, 535, 538,
	539, 541, 529, 530, 531, 0, 540, 528, 0, 0,
	0, 542, 543, 544, 545, 0, 0, 546, 0, 549,
	550, 0, 0, 551, 0, 552, 0, 0, 554, 555,
	556, 0, 0, 557, 558, 0, 0, 559, 0, 0,
	560, 561, 553, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 0, 572, 573, 0, 574, 575, 576,
	0, 577, 578, 579, 0, 580, 0, 581, 582, 0,
	583, 584, 585, 0, 586, 587, 588, 589, 590, 591,
	592, 593, 0, 594, 595, 597, 596, 598, 0, 599,
	0, 600, 601, 602, 0, 0, 0, 0, 0, 603,
	604, 606, 0, 607, 608, 609, 610, 605, 611, 612,
	613, 614, 615, 616, 0, 618, 619, 617, 620, 621,
	0, 622, 623, 624, 625, 626, 0, 627, 0, 628,
	629, 637, 638, 639, 630, 631, 633, 640, 632, 641,
	642, 643, 644, 646, 645, 0, 648, 649, 647, 650,
	651, 652, 1510, 653, 0, 654, 634, 635, 655, 656,
	0, 657, 658, 659, 660, 661, 662, 663, 0, 0,
	664, 0, 665, 666, 667, 668, 669, 670, 672, 636,
	673, 678, 679, 0, 674, 675, 676, 677, 0, 681,
	682, 683, 684, 0, 685, 686, 0, 680, 671, 0,
	687, 688, 689, 690, 691, 692, 0, 693, 694, 0,
	695, 0, 0, 0, 0, 0, 707, 0, 696, 698,
	699, 700, 701, 0, 702, 0, 0, 703, 704, 705,
	706, 697, 708, 709, 0, 0, 710, 711, 712, 714,
	716, 717, 713, 715, 718, 0, 719, 0, 0, 720,
	721, 722, 0, 0, 0, 0, 724, 725, 723, 726,
	727, 730, 728, 729, 0, 731, 732, 733, 1505, 0,
	1507, 0, 734, 735, 0, 736, 737, 738, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 322, 324,
	323, 325, 326, 327, 328, 0, 329, 330, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 331, 0, 332,
	333, 334, 0, 335, 336, 337, 338, 339, 340, 341,
	0, 0, 0, 342, 0, 343, 0, 0, 0, 344,
	345, 346, 347, 348, 349, 350, 0, 0, 0, 351,
	0, 0, 0, 0, 352, 353, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 359, 360, 361, 0, 0,
	363, 364, 365, 362, 366, 367, 0, 368, 0, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 381, 0, 0, 0, 0, 0, 0,
	1509, 382, 383, 384, 385, 386, 0, 387, 389, 0,
	0, 0, 392, 394, 388, 390, 0, 393, 391, 395,
	396, 0, 397, 398, 399, 0, 0, 400, 401, 402,
	0, 403, 404, 405, 0, 406, 407, 408, 0, 409,
	410, 0, 411, 412, 413, 415, 417, 414, 416, 418,
	419, 420, 421, 422, 0, 0, 423, 0, 0, 0,
	0, 0, 0, 0, 424, 425, 426, 0, 0, 0,
	0, 427, 0, 428, 429, 430, 0, 431, 432, 0,
	0, 433, 434, 435, 0, 0, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 0, 445, 0, 0, 0,
	446, 0, 447, 448, 449, 450, 451, 452, 453, 1504,
	0, 0, 547, 0, 454, 455, 456, 0, 457, 458,
	459, 460, 461, 0, 0, 0, 0, 462, 463, 464,
	0, 0, 0, 465, 548, 466, 0, 0, 0, 0,
	0, 467, 468, 470, 0, 0, 0, 469, 471, 472,
	0, 473, 0, 0, 0, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 483, 482, 0, 485, 0, 484,
	0, 486, 487, 0, 0, 488, 489, 490, 491, 492,
	493, 496, 0, 0, 494, 495, 497, 498, 0, 499,
	500, 502, 505, 501, 503, 504, 506, 519, 520, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 522, 0, 521, 0, 523, 524, 525, 526, 527,
	534, 536, 537, 532, 533, 535, 538, 539, 541, 529,
	530, 531, 0, 540, 528, 0, 0, 0, 542, 543,
	544, 545, 0, 0, 546, 0, 549, 550, 0, 0,
	551, 0, 552, 0, 0, 554, 555, 556, 0, 0,
	557, 558, 0, 0, 559, 0, 0, 560, 561, 553,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	0, 572, 573, 0, 574, 575, 576, 0, 577, 578,
	579, 0, 580, 0, 581, 582, 0, 583, 584, 585,
	0, 586, 587, 588, 589, 590, 591, 592, 593, 0,
	594, 595, 597, 596, 598, 0, 599, 0, 600, 601,
	602, 0, 0, 0, 0, 0, 603, 604, 606, 0,
	607, 608, 609, 610, 605, 611, 612, 613, 614, 615,
	616, 0, 618, 619, 617, 620, 621, 0, 622, 623,
	624, 625, 626, 0, 627, 0, 628, 629, 637, 638,
	639, 630, 631, 633, 640, 632, 641, 642, 643, 644,
	646, 645, 0, 648, 649, 647, 650, 651, 652, 1510,
	653, 0, 654, 634, 635, 655, 656, 0, 657, 658,
	659, 660, 661, 662, 663, 0, 0, 664, 0, 665,
	666, 667, 668, 669, 670, 672, 636, 673, 678, 679,
	0, 674, 675, 676, 677, 0, 681, 682, 683, 684,
	0, 685, 686, 0, 680, 671, 0, 687, 688, 689,
	690, 691, 692, 0, 693, 694, 0, 695, 0, 0,
	0, 0, 0, 707, 0, 696, 698, 699, 700, 701,
	0, 702, 0, 0, 703, 704, 705, 706, 697, 708,
	709, 0, 0, 710, 711, 712, 714, 716, 717, 713,
	715, 718, 0, 719, 0, 0, 720, 721, 722, 0,
	0, 0, 0, 724, 725, 723, 726, 727, 730, 728,
	729, 0, 731, 732, 733, 2343, 0, 1507, 0, 734,
	735, 0, 736, 737, 738, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 324, 323, 325, 326,
	327, 328, 0, 329, 330, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 331, 0, 332, 333, 334, 0,
	335, 336, 337, 338, 339, 340, 341, 0, 0, 0,
	342, 0, 343, 0, 0, 0, 344, 345, 346, 347,
	348, 349, 350, 0, 0, 0, 351, 0, 0, 0,
	0, 352, 353, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 359, 360, 361, 0, 0, 363, 364, 365,
	362, 366, 367, 0, 368, 0, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	381, 0, 0, 0, 0, 0, 0, 1509, 382, 383,
	384, 385, 386, 0, 387, 389, 0, 0, 0, 392,
	394, 388, 390, 0, 393, 391, 395, 396, 0, 397,
	398, 399, 0, 0, 400, 401, 402, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 0, 411,
	412, 413, 415, 417, 414, 416, 418, 419, 420, 421,
	422, 0, 0, 423, 0, 0, 0, 0, 0, 0,
	0, 424, 425, 426, 0, 0, 0, 0, 427, 0,
	428, 429, 430, 0, 431, 432, 0, 0, 433, 434,
	435, 0, 0, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 0, 445, 0, 0, 0, 446, 0, 447,
	448, 449, 450, 451, 452, 453, 0, 0, 0, 547,
	0, 454, 455, 456, 0, 457, 458, 459, 460, 461,
	0, 0, 0, 0, 462, 463, 464, 0, 0, 0,
	465, 548, 466, 0, 0, 0, 0, 0, 467, 468,
	470, 0, 0, 0, 469, 471, 472, 0, 473, 0,
	0, 0, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 483, 482, 0, 485, 0, 484, 0, 486, 487,
	0, 0, 488, 489, 490, 491, 492, 493, 496, 0,
	0, 494, 495, 497, 498, 0, 499, 500, 502, 505,
	501, 503, 504, 506, 519, 520, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 522, 0,
	521, 0, 523, 524, 525, 526, 527, 534, 536, 537,
	532, 533, 535, 538, 539, 541, 529, 530, 531, 0,
	540, 528, 0, 0, 0, 542, 543, 544, 545, 0,
	0, 546, 0, 549, 550, 0, 0, 551, 0, 552,
	0, 0, 554, 555, 556, 0, 0, 557, 558, 0,
	0, 559, 0, 0, 560, 561, 553, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 0, 572, 573,
	0, 574, 575, 576, 0, 577, 578, 579, 0, 580,
	0, 581, 582, 0, 583, 584, 585, 0, 586, 587,
	588, 589, 590, 591, 592, 593, 0, 594, 595, 597,
	596, 598, 0, 599, 0, 600, 601, 602, 0, 0,
	0, 0, 0, 603, 604, 606, 0, 607, 608, 609,
	610, 605, 611, 612, 613, 614, 615, 616, 0, 618,
	619, 617, 620, 621, 0, 622, 623, 624, 625, 626,
	0, 627, 0, 628, 629, 637, 638, 639, 630, 631,
	633, 640, 632, 641, 642, 643, 644, 646, 645, 0,
	648, 649, 647, 650, 651, 652, 1510, 653, 0, 654,
	634, 635, 655, 656, 0, 657, 658, 659, 660, 661,
	662, 663, 0, 0, 664, 0, 665, 666, 667, 668,
	669, 670, 672, 636, 673, 678, 679, 0, 674, 675,
	676, 677, 0, 681, 682, 683, 684, 0, 685, 686,
	0, 680, 671, 0, 687, 688, 689, 690, 691, 692,
	0, 693, 694, 0, 695, 0, 0, 0, 0, 0,
	707, 0, 696, 698, 699, 700, 701, 0, 702, 0,
	0, 703, 704, 705, 706, 697, 708, 709, 0, 0,
	710, 711, 712, 714, 716, 717, 713, 715, 718, 0,
	719, 0, 0, 720, 721, 722, 0, 0, 0, 0,
	724, 725, 723, 726, 727, 730, 728, 729, 0, 731,
	732, 733, 2303, 0, 1507, 0, 734, 735, 0, 736,
	737, 738, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 324, 323, 325, 326, 327, 328, 0,
	329, 330, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 331, 0, 332, 333, 334, 0, 335, 336, 337,
	338, 339, 340, 341, 0, 0, 0, 342, 0, 343,
	0, 0, 0, 344, 345, 346, 347, 348, 349, 350,
	0, 0, 0, 351, 0, 0, 0, 0, 352, 353,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 359,
	360, 361, 0, 0, 363, 364, 365, 362, 366, 367,
	0, 368, 0, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 381, 0, 0,
	0, 0, 0, 0, 1509, 382, 383, 384, 385, 386,
	0, 387, 389, 0, 0, 0, 392, 394, 388, 390,
	0, 393, 391, 395, 396, 0, 397, 398, 399, 0,
	0, 400, 401, 402, 0, 403, 404, 405, 0, 406,
	407, 408, 0, 409, 410, 0, 411, 412, 413, 415,
	417, 414, 416, 418, 419, 420, 421, 422, 0, 0,
	423, 0, 0, 0, 0, 0, 0, 0, 424, 425,
	426, 0, 0, 0, 0, 427, 0, 428, 429, 430,
	0, 431, 432, 0, 0, 433, 434, 435, 0, 0,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 0,
	445, 0, 0, 0, 446, 0, 447, 448, 449, 450,
	451, 452, 453, 0, 0, 0, 547, 0, 454, 455,
	456, 0, 457, 458, 459, 460, 461, 0, 0, 0,
	0, 462, 463, 464, 0, 0, 0, 465, 548, 466,
	0, 0, 0, 0, 0, 467, 468, 470, 0, 0,
	0, 469, 471, 472, 0, 473, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 483, 482,
	0, 485, 0, 484, 0, 486, 487, 0, 0, 488,
	489, 490, 491, 492, 493, 496, 0, 0, 494, 495,
	497, 498, 0, 499, 500, 502, 505, 501, 503, 504,
	506, 519, 520, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 522, 0, 521, 0, 523,
	524, 525, 526, 527, 534, 536, 537, 532, 533, 535,
	538, 539, 541, 529, 530, 531, 0, 540, 528, 0,
	0, 0, 542, 543, 544, 545, 0, 0, 546, 0,
	549, 550, 0, 0, 551, 0, 552, 0, 0, 554,
	555, 556, 0, 0, 557, 558, 0, 0, 559, 0,
	0, 560, 561, 553, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 0, 572, 573, 0, 574, 575,
	576, 0, 577, 578, 579, 0, 580, 0, 581, 582,
	0, 583, 584, 585, 0, 586, 587, 588, 589, 590,
	591, 592, 593, 0, 594, 595, 597, 596, 598, 0,
	599, 0, 600, 601, 602, 0, 0, 0, 0, 0,
	603, 604, 606, 0, 607, 608, 609, 610, 605, 611,
	612, 613, 614, 615, 616, 0, 618, 619, 617, 620,
	621, 0, 622, 623, 624, 625, 626, 0, 627, 0,
	628, 629, 637, 638, 639, 630, 631, 633, 640, 632,
	641, 642, 643, 644, 646, 645, 0, 648, 649, 647,
	650, 651, 652, 1510, 653, 0, 654, 634, 635, 655,
	656, 0, 657, 658, 659, 660, 661, 662, 663, 0,
	0, 664, 0, 665, 666, 667, 668, 669, 670, 672,
	636, 673, 678, 679, 0, 674, 675, 676, 677, 0,
	681, 682, 683, 684, 0, 685, 686, 0, 680, 671,
	0, 687, 688, 689, 690, 691, 692, 0, 693, 694,
	0, 695, 0, 0, 0, 0, 0, 707, 0, 696,
	698, 699, 700, 701, 0, 702, 0, 0, 703, 704,
	705, 706, 697, 708, 709, 0, 0, 710, 711, 712,
	714, 716, 717, 713, 715, 718, 0, 719, 0, 0,
	720, 721, 722, 0, 0, 0, 0, 724, 725, 723,
	726, 727, 730, 728, 729, 1507, 731, 732, 733, 0,
	0, 0, 0, 734, 735, 0, 736, 737, 738, 0,
	0, 0, 321, 322, 324, 323, 325, 326, 327, 328,
	0, 329, 330, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 331, 0, 332, 333, 334, 0, 335, 336,
	337, 338, 339, 340, 341, 0, 0, 0, 342, 0,
	343, 0, 0, 0, 344, 345, 346, 347, 348, 349,
	350, 0, 0, 0, 351, 0, 0, 0, 0, 352,
	353, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	359, 360, 361, 0, 0, 363, 364, 365, 362, 366,
	367, 0, 368, 0, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 381, 0,
	0, 0, 0, 0, 0, 1509, 382, 383, 384, 385,
	386, 0, 387, 389, 0, 0, 0, 392, 394, 388,
	390, 0, 393, 391, 395, 396, 0, 397, 398, 399,
	0, 0, 400, 401, 402, 0, 403, 404, 405, 0,
	406, 407, 408, 0, 409, 410, 0, 411, 412, 413,
	415, 417, 414, 416, 418, 419, 420, 421, 422, 0,
	0, 423, 0, 0, 0, 0, 0, 0, 0, 424,
	425, 426, 0, 0, 0, 0, 427, 0, 428, 429,
	430, 0, 431, 432, 0, 0, 433, 434, 435, 0,
	0, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	0, 445, 0, 0, 0, 446, 0, 447, 448, 449,
	450, 451, 452, 453, 0, 0, 0, 547, 0, 454,
	455, 456, 0, 457, 458, 459, 460, 461, 0, 0,
	0, 0, 462, 463, 464, 0, 0, 0, 465, 548,
	466, 0, 0, 0, 0, 0, 467, 468, 470, 0,
	0, 0, 469, 471, 472, 0, 473, 0, 0, 0,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 483,
	482, 0, 485, 0, 484, 0, 486, 487, 0, 0,
	488, 489, 490, 491, 492, 493, 496, 0, 0, 494,
	495, 497, 498, 0, 499, 500, 502, 505, 501, 503,
	504, 506, 519, 520, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 522, 0, 521, 0,
	523, 524, 525, 526, 527, 534, 536, 537, 532, 533,
	535, 538, 539, 541, 529, 530, 531, 0, 540, 528,
	0, 0, 0, 542, 543, 544, 545, 0, 0, 546,
	0, 549, 550, 0, 0, 551, 0, 552, 0, 0,
	554, 555, 556, 0, 0, 557, 558, 0, 0, 559,
	0, 0, 560, 561, 553, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 0, 572, 573, 0, 574,
	575, 576, 0, 577, 578, 579, 0, 580, 0, 581,
	582, 0, 583, 584, 585, 0, 586, 587, 588, 589,
	590, 591, 592, 593, 0, 594, 595, 597, 596, 598,
	0, 599, 0, 600, 601, 602, 0, 0, 0, 0,
	0, 603, 604, 606, 0, 607, 608, 609, 610, 605,
	611, 612, 613, 614, 615, 616, 0, 618, 619, 617,
	620, 621, 0, 622, 623, 624, 625, 626, 0, 627,
	0, 628, 629, 637, 638, 639, 630, 631, 633, 640,
	632, 641, 642, 643, 644, 646, 645, 0, 648, 649,
	647, 650, 651, 652, 1510, 653, 0, 654, 634, 635,
	655, 656, 0, 657, 658, 659, 660, 661, 662, 663,
	0, 0, 664, 0, 665, 666, 667, 668, 669, 670,
	672, 636, 673, 678, 679, 0, 674, 675, 676, 677,
	0, 681, 682, 683, 684, 0, 685, 686, 0, 680,
	671, 0, 687, 688, 689, 690, 691, 692, 0, 693,
	694, 0, 695, 0, 0, 0, 0, 0, 707, 0,
	696, 698, 699, 700, 701, 0, 702, 0, 0, 703,
	704, 705, 706, 697, 708, 709, 0, 0, 710, 711,
	712, 714, 716, 717, 713, 715, 718, 0, 719, 0,
	0, 720, 721, 722, 0, 0, 0, 0, 724, 725,
	723, 726, 727, 730, 728, 729, 0, 731, 732, 733,
	0, 0, 0, 0, 734, 735, 0, 736, 737, 738,
	2025, 2026, 0, 2058, 2059, 2060, 2069, 2070, 2071, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2062, 2056, 0, 0, 0, 0, 0,
	0, 0, 2028, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2075, 0, 2025, 2026, 0, 2058, 2059,
	2060, 2069, 2070, 2071, 0, 0, 0, 0, 0, 0,
	0, 2081, 0, 0, 0, 0, 0, 0, 2062, 2056,
	2027, 0, 0, 0, 0, 0, 0, 2028, 0, 0,
	0, 2047, 0, 0, 0, 0, 0, 0, 2075, 0,
	0, 2044, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2081, 0, 0, 0,
	0, 0, 0, 0, 0, 2027, 0, 2025, 2026, 0,
	2058, 2059, 2060, 2069, 2070, 2071, 2047, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2044, 0, 0, 0,
	2062, 2056, 0, 0, 0, 0, 0, 0, 0, 2028,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2075, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2050, 2051, 2052, 2053, 0, 2081, 0,
	0, 0, 0, 2033, 0, 0, 0, 2027, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2047, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2044, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2050, 2051,
	2052, 2053, 0, 0, 0, 0, 2066, 0, 2033, 0,
	2076, 0, 0, 0, 0, 0, 0, 2055, 2057, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2072, 0, 2073,
	0, 0, 0, 0, 0, 0, 2042, 2043, 0, 0,
	0, 2066, 0, 0, 0, 2076, 0, 0, 0, 0,
	0, 0, 2055, 2057, 0, 0, 2064, 0, 0, 0,
	2050, 2051, 2052, 2053, 0, 0, 0, 0, 0, 0,
	2033, 2048, 2072, 0, 2073, 0, 0, 0, 0, 0,
	0, 2042, 2043, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2064, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2066, 0, 0, 2048, 2076, 0, 0,
	2074, 0, 0, 0, 2055, 2057, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2063, 0, 0, 2072, 0, 2073, 0, 0, 0,
	0, 0, 2078, 2042, 2043, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2074, 0, 0, 0, 0,
	0, 0, 0, 2064, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2063, 0, 2048, 0,
	0, 0, 0, 0, 0, 0, 0, 2078, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2054, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2074, 2049, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2054, 2063, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2078,
	2067, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2049, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2080, 0, 0, 0,
	0, 0, 0, 0, 0, 2067, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2054,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2080, 0, 0, 0, 2049, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2067, 2065, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2039, 2040, 2046, 2068, 2045, 2041, 0, 2038, 2036, 2037,
	2029, 2030, 2031, 2032, 2034, 2035, 0, 0, 0, 0,
	0, 0, 0, 2080, 0, 2928, 0, 0, 0, 0,
	0, 0, 0, 2065, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2039, 2040, 2046, 2068, 2045,
	2041, 0, 2038, 2036, 2037, 2029, 2030, 2031, 2032, 2034,
	2035, 0, 0, 0, 0, 0, 5380, 0, 0, 0,
	0, 0, 2025, 2026, 0, 2058, 2059, 2060, 2069, 2070,
	2071, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2062, 2056, 0, 0, 0,
	0, 0, 0, 0, 2028, 2065, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2075, 0, 2039, 2040, 2046,
	2068, 2045, 2041, 0, 2038, 2036, 2037, 2029, 2030, 2031,
	2032, 2034, 2035, 2081, 0, 0, 0, 0, 5280, 0,
	0, 0, 2027, 0, 2025, 2026, 0, 2058, 2059, 2060,
	2069, 2070, 2071, 2047, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2044, 0, 0, 0, 2062, 2056, 0,
	0, 0, 0, 0, 0, 0, 2028, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2075, 0, 2025,
	2026, 0, 2058, 2059, 2060, 2069, 2070, 2071, 0, 0,
	0, 0, 0, 0, 0, 2081, 0, 0, 0, 0,
	0, 0, 2062, 2056, 2027, 0, 0, 0, 0, 0,
	0, 2028, 0, 0, 0, 2047, 0, 0, 0, 0,
	0, 0, 2075, 0, 0, 2044, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2050, 2051, 2052, 2053, 0,
	2081, 0, 0, 0, 0, 2033, 0, 0, 0, 2027,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2047, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2044, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2066, 0,
	0, 0, 2076, 0, 0, 0, 0, 0, 0, 2055,
	2057, 0, 0, 0, 0, 0, 0, 2050, 2051, 2052,
	2053, 0, 0, 0, 0, 0, 0, 2033, 0, 2072,
	0, 2073, 0, 0, 0, 0, 0, 0, 2042, 2043,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2064, 0,
	0, 0, 2050, 2051, 2052, 2053, 0, 0, 0, 0,
	2066, 0, 2033, 2048, 2076, 0, 0, 0, 0, 0,
	0, 2055, 2057, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2072, 0, 2073, 0, 0, 0, 0, 0, 0,
	2042, 2043, 0, 0, 0, 2066, 0, 0, 0, 2076,
	0, 0, 2074, 0, 0, 0, 2055, 2057, 0, 0,
	2064, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2063, 0, 2048, 2072, 0, 2073, 0,
	0, 0, 0, 0, 2078, 2042, 2043, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2064, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2048, 0, 0, 0, 2074, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2054, 2063, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2078, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2074,
	2049, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2063, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2078, 2067, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2054, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2080, 0,
	0, 0, 2049, 0, 0, 0, 0, 2025, 2026, 0,
	2058, 2059, 2060, 2069, 2070, 2071, 0, 0, 0, 0,
	0, 2054, 0, 0, 0, 0, 0, 0, 0, 0,
	2062, 2056, 0, 0, 2067, 0, 0, 0, 0, 2028,
	0, 0, 0, 0, 0, 0, 0, 2049, 0, 0,
	2075, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2081, 0,
	2080, 0, 0, 0, 0, 0, 0, 2027, 0, 2067,
	2065, 0, 0, 0, 0, 0, 0, 0, 2047, 0,
	0, 0, 2039, 2040, 2046, 2068, 2045, 2041, 2044, 2038,
	2036, 2037, 2029, 2030, 2031, 2032, 2034, 2035, 0, 0,
	0, 0, 0, 5226, 0, 2080, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2065, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2039, 2040, 2046, 2068, 2045, 2041,
	0, 2038, 2036, 2037, 2029, 2030, 2031, 2032, 2034, 2035,
	2050, 2051, 2052, 2053, 0, 5225, 0, 0, 0, 0,
	2033, 0, 0, 0, 0, 0, 0, 2065, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2039,
	2040, 2046, 2068, 2045, 2041, 0, 2038, 2036, 2037, 2029,
	2030, 2031, 2032, 2034, 2035, 0, 0, 0, 0, 0,
	5019, 0, 0, 2066, 0, 2025, 2026, 2076, 2058, 2059,
	2060, 2069, 2070, 2071, 2055, 2057, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2062, 2056,
	0, 0, 0, 0, 2072, 0, 2073, 2028, 0, 0,
	0, 0, 0, 2042, 2043, 0, 0, 0, 2075, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2064, 0, 0, 2081, 0, 0, 0,
	0, 0, 0, 0, 0, 2027, 0, 0, 2048, 0,
	0, 0, 0, 0, 0, 0, 2047, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2044, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2074, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2063, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2078,
	0, 0, 0, 0, 0, 0, 2025, 2026, 0, 2058,
	2059, 2060, 2069, 2070, 2071, 0, 0, 0, 2050, 2051,
	2052, 2053, 0, 0, 0, 0, 0, 0, 2033, 2062,
	2056, 0, 0, 0, 0, 0, 0, 0, 2028, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2075,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2054,
	0, 0, 0, 0, 0, 0, 0, 2081, 0, 0,
	0, 2066, 0, 0, 0, 2076, 2027, 0, 0, 0,
	0, 0, 2055, 2057, 0, 2049, 0, 2047, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2044, 0, 0,
	0, 0, 2072, 0, 2073, 0, 0, 0, 0, 0,
	0, 2042, 2043, 0, 0, 0, 0, 2067, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2064, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2048, 0, 0, 0,
	0, 0, 0, 2080, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2050,
	2051, 2052, 2053, 0, 0, 0, 0, 0, 0, 2033,
	0, 0, 0, 0, 0, 2074, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2063, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2078, 0, 0,
	0, 0, 2066, 0, 0, 2065, 2076, 0, 0, 0,
	0, 0, 0, 2055, 2057, 0, 0, 2039, 2040, 2046,
	2068, 2045, 2041, 0, 2038, 2036, 2037, 2029, 2030, 2031,
	2032, 2034, 2035, 2072, 0, 2073, 0, 0, 4830, 0,
	0, 0, 2042, 2043, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2054, 0, 0,
	0, 0, 2064, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2048, 0, 0,
	0, 0, 0, 2049, 0, 0, 0, 0, 0, 2025,
	2026, 0, 2058, 2059, 2060, 2069, 2070, 2071, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2062, 2056, 0, 2067, 0, 0, 0, 0,
	0, 2028, 0, 0, 0, 0, 2074, 0, 0, 0,
	0, 0, 2075, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2063, 0, 0,
	2081, 2080, 0, 0, 0, 0, 0, 0, 2078, 2027,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2047, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2044, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2025, 2026,
	0, 2058, 2059, 2060, 2069, 2070, 2071, 0, 2054, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2062, 2056, 2065, 0, 0, 0, 0, 0, 0,
	2028, 0, 0, 0, 2049, 2039, 2040, 2046, 2068, 2045,
	2041, 2075, 2038, 2036, 2037, 2029, 2030, 2031, 2032, 2034,
	2035, 0, 2050, 2051, 2052, 2053, 4728, 0, 0, 2081,
	0, 0, 2033, 0, 0, 0, 2067, 0, 2027, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2047,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2044,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2080, 0, 0, 2066, 0, 0, 0, 2076,
	0, 0, 0, 0, 0, 0, 2055, 2057, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2072, 0, 2073, 0,
	0, 0, 0, 0, 0, 2042, 2043, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2064, 0, 0, 0, 0,
	0, 2050, 2051, 2052, 2053, 0, 0, 0, 0, 0,
	2048, 2033, 0, 0, 2065, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2039, 2040, 2046, 2068,
	2045, 2041, 0, 2038, 2036, 2037, 2029, 2030, 2031, 2032,
	2034, 2035, 0, 0, 0, 0, 0, 4727, 0, 0,
	0, 0, 0, 0, 2066, 0, 0, 0, 2076, 2074,
	0, 0, 0, 0, 0, 2055, 2057, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2063, 0, 0, 0, 0, 2072, 0, 2073, 0, 0,
	0, 2078, 0, 0, 2042, 2043, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2064, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2048,
	0, 2025, 2026, 0, 2058, 2059, 2060, 2069, 2070, 2071,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2054, 0, 0, 2062, 2056, 0, 0, 0, 0,
	0, 0, 0, 2028, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2075, 0, 0, 2049, 2074, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2081, 0, 0, 0, 0, 0, 0, 2063,
	0, 2027, 0, 0, 0, 0, 0, 0, 0, 2067,
	2078, 0, 2047, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2044, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2080, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2054, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2049, 0, 0, 0,
	0, 0, 0, 0, 2050, 2051, 2052, 2053, 0, 0,
	0, 0, 0, 0, 2033, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2065, 2067, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2039,
	2040, 2046, 2068, 2045, 2041, 0, 2038, 2036, 2037, 2029,
	2030, 2031, 2032, 2034, 2035, 0, 0, 2066, 0, 0,
	4726, 2076, 0, 0, 2080, 0, 0, 0, 2055, 2057,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2072, 0,
	2073, 0, 0, 0, 0, 0, 0, 2042, 2043, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2064, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2048, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2065, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2039, 2040,
	2046, 2068, 2045, 2041, 0, 2038, 2036, 2037, 2029, 2030,
	2031, 2032, 2034, 2035, 0, 0, 0, 0, 0, 4309,
	0, 2074, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2063, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2078, 0, 0, 0, 0, 0, 0,
	2025, 2026, 0, 2058, 2059, 2060, 2069, 2070, 2071, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2062, 2056, 0, 0, 0, 0, 0,
	0, 0, 2028, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2075, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2054, 0, 0, 0, 0, 0, 0,
	0, 2081, 0, 0, 0, 0, 0, 0, 0, 0,
	2027, 0, 0, 0, 0, 0, 0, 0, 0, 2049,
	0, 2047, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2044, 0, 0, 0, 0, 0, 0, 0, 0,
	2025, 2026, 0, 2058, 2059, 2060, 2069, 2070, 2071, 0,
	0, 2067, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2062, 2056, 0, 0, 0, 0, 0,
	0, 0, 2028, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2075, 0, 0, 0, 2080, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2081, 0, 0, 0, 0, 0, 0, 0, 0,
	2027, 0, 0, 2050, 2051, 2052, 2053, 0, 0, 0,
	0, 2047, 0, 2033, 0, 0, 0, 0, 0, 0,
	0, 2044, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2066, 0, 0, 2065,
	2076, 0, 0, 0, 0, 0, 0, 2055, 2057, 0,
	0, 2039, 2040, 2046, 2068, 2045, 2041, 0, 2038, 2036,
	2037, 2029, 2030, 2031, 2032, 2034, 2035, 2072, 0, 2073,
	0, 0, 3721, 0, 0, 0, 2042, 2043, 0, 0,
	0, 0, 0, 2050, 2051, 2052, 2053, 0, 0, 0,
	0, 0, 0, 2033, 0, 0, 2064, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2048, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2066, 0, 0, 0,
	2076, 0, 0, 0, 0, 0, 0, 2055, 2057, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2074, 0, 0, 0, 0, 0, 0, 2072, 0, 2073,
	0, 0, 0, 0, 0, 0, 2042, 2043, 0, 0,
	0, 2063, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2078, 0, 0, 0, 2064, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2048, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2025, 2026, 0, 2058, 2059, 2060, 2069, 2070, 2071, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2054, 2062, 2056, 0, 0, 0, 0, 0,
	2074, 0, 2028, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2075, 0, 0, 0, 0, 2049, 0,
	0, 2063, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2081, 2078, 0, 0, 0, 0, 0, 0, 0,
	2027, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2067, 2047, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2044, 0, 0, 0, 0, 0, 0, 0, 0,
	2025, 2026, 0, 2058, 2059, 2060, 2069, 2070, 2071, 0,
	0, 0, 0, 0, 0, 0, 2080, 0, 0, 0,
	0, 0, 2054, 2062, 2056, 0, 0, 0, 0, 0,
	0, 0, 2028, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2075, 0, 0, 0, 0, 2049, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2081, 0, 0, 0, 0, 0, 0, 0, 0,
	2027, 0, 0, 2050, 2051, 2052, 2053, 0, 0, 0,
	2067, 2047, 0, 2033, 0, 0, 0, 0, 0, 0,
	0, 2044, 0, 0, 0, 0, 0, 0, 2065, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2039, 2040, 2046, 2068, 2045, 2041, 2080, 2038, 2036, 2037,
	2029, 2030, 2031, 2032, 2034, 2035, 2066, 0, 0, 0,
	2076, 3720, 0, 0, 0, 0, 0, 2055, 2057, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2072, 0, 2073,
	0, 0, 0, 0, 0, 0, 2042, 2043, 0, 0,
	0, 0, 0, 2050, 2051, 2052, 2053, 0, 0, 0,
	0, 0, 0, 2033, 0, 0, 2064, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2065, 0,
	0, 2048, 0, 0, 0, 0, 0, 0, 0, 0,
	2039, 2040, 2046, 2068, 2045, 2041, 0, 2038, 2036, 2037,
	2029, 2030, 2031, 2032, 2034, 2035, 2066, 0, 0, 0,
	2076, 3719, 0, 0, 0, 0, 0, 2055, 2057, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2074, 0, 0, 0, 0, 0, 0, 2072, 0, 2073,
	0, 0, 0, 0, 0, 0, 2042, 2043, 0, 0,
	0, 2063, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2078, 0, 0, 0, 2064, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2048, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2025, 2026, 0, 2058, 2059, 2060, 2069, 2070, 2071, 0,
	0, 0, 0, 0, 2522, 0, 0, 0, 0, 0,
	0, 0, 2054, 2062, 2056, 0, 0, 0, 0, 0,
	2074, 0, 2028, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2075, 0, 0, 0, 0, 2049, 0,
	0, 2063, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2081, 2078, 0, 0, 0, 0, 0, 0, 0,
	2027, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2067, 2047, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2044, 0, 0, 0, 0, 0, 0, 0, 0,
	2025, 2026, 0, 2058, 2059, 2060, 2069, 2070, 2071, 0,
	0, 0, 0, 0, 0, 0, 2080, 0, 0, 0,
	0, 0, 2054, 2062, 2056, 0, 0, 0, 0, 0,
	0, 0, 2028, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2523, 2075, 0, 0, 0, 0, 2049, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2081, 0, 0, 0, 0, 0, 0, 0, 0,
	2027, 0, 0, 2050, 2051, 2052, 2053, 0, 0, 0,
	2067, 2047, 0, 2033, 0, 2422, 0, 0, 0, 0,
	0, 2044, 0, 0, 0, 0, 0, 0, 2065, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2039, 2040, 2046, 2068, 2045, 2041, 2080, 2038, 2036, 2037,
	2029, 2030, 2031, 2032, 2034, 2035, 2066, 0, 0, 0,
	2076, 3718, 0, 0, 0, 0, 0, 2055, 2057, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2072, 0, 2073,
	0, 2420, 0, 0, 0, 0, 2042, 2043, 0, 0,
	0, 0, 0, 2050, 2051, 2052, 2053, 0, 0, 0,
	0, 0, 0, 2033, 0, 0, 2064, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2065, 0,
	0, 2048, 0, 0, 0, 0, 0, 0, 0, 0,
	2039, 2040, 2046, 2068, 2045, 2041, 0, 2038, 2036, 2037,
	2029, 2030, 2031, 2032, 2034, 2035, 2066, 0, 0, 3683,
	2076, 0, 0, 0, 0, 0, 0, 2055, 2057, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2074, 0, 0, 0, 0, 0, 0, 2072, 0, 2073,
	0, 0, 0, 0, 0, 0, 2042, 2043, 0, 0,
	0, 2063, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2078, 0, 0, 0, 2064, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2048, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2025, 2026, 0, 2058, 2059, 2060, 2069, 2070, 2071, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2054, 2062, 2056, 0, 0, 0, 0, 0,
	2074, 0, 2028, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2075, 0, 0, 0, 0, 2049, 0,
	0, 2063, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2081, 2078, 0, 0, 0, 0, 0, 0, 0,
	2027, 0, 0, 2524, 0, 0, 0, 0, 0, 0,
	2067, 2047, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2044, 0, 0, 0, 0, 0, 0, 0, 0,
	2025, 2026, 0, 2058, 2059, 2060, 2069, 2070, 2071, 0,
	0, 0, 0, 0, 0, 0, 2080, 0, 0, 0,
	0, 2421, 2054, 2062, 2056, 0, 0, 0, 0, 0,
	0, 0, 2028, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2075, 0, 0, 0, 0, 2049, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2081, 2525, 0, 0, 0, 0, 0, 0, 0,
	2027, 0, 0, 2050, 2051, 2052, 2053, 0, 0, 0,
	2067, 2047, 0, 2033, 5547, 0, 0, 0, 0, 0,
	0, 2044, 0, 0, 0, 0, 0, 0, 2065, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2039, 2040, 2046, 2068, 2045, 2041, 2080, 2038, 2036, 2037,
	2029, 2030, 2031, 2032, 2034, 2035, 2066, 2419, 0, 0,
	2076, 0, 0, 0, 0, 0, 0, 2055, 2057, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2072, 0, 2073,
	0, 0, 0, 0, 0, 0, 2042, 2043, 0, 0,
	0, 0, 0, 2050, 2051, 2052, 2053, 0, 0, 0,
	0, 0, 0, 2033, 0, 3783, 2064, 0, 0, 0,
	0, 0, 3782, 0, 0, 0, 0, 0, 2065, 0,
	0, 2048, 0, 0, 0, 0, 0, 0, 0, 0,
	2039, 2040, 2046, 2068, 2045, 2041, 0, 2038, 2036, 2037,
	2029, 2030, 2031, 2032, 2034, 2035, 2066, 0, 0, 0,
	2076, 0, 0, 0, 0, 0, 0, 2055, 2057, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2074, 0, 0, 0, 0, 0, 0, 2072, 0, 2073,
	0, 0, 0, 0, 0, 0, 2042, 2043, 0, 0,
	0, 2063, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2078, 0, 0, 0, 2064, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2048, 0, 0, 0, 5546, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2025, 2026, 0, 2058, 2059, 2060, 2069, 2070, 2071, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2054, 2062, 2056, 0, 0, 0, 0, 3653,
	2074, 0, 2028, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2075, 0, 0, 0, 0, 2049, 0,
	0, 2063, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2081, 2078, 0, 0, 0, 0, 0, 0, 0,
	2027, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2067, 2047, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2044, 0, 0, 0, 0, 0, 0, 0, 0,
	2025, 2026, 0, 2058, 2059, 2060, 2069, 2070, 2071, 0,
	0, 0, 0, 0, 0, 0, 2080, 0, 0, 0,
	0, 0, 2054, 2062, 2056, 0, 0, 0, 0, 0,
	0, 0, 2028, 0, 3654, 0, 0, 0, 0, 0,
	0, 0, 0, 2075, 0, 0, 0, 0, 2049, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2081, 0, 0, 0, 0, 0, 0, 0, 0,
	2027, 0, 0, 2050, 2051, 2052, 2053, 0, 0, 0,
	2067, 2047, 0, 2033, 0, 0, 0, 0, 0, 0,
	0, 2044, 0, 0, 0, 0, 0, 0, 2065, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2039, 2040, 2046, 2068, 2045, 2041, 2080, 2038, 2036, 2037,
	2029, 2030, 2031, 2032, 2034, 2035, 2066, 0, 0, 0,
	2076, 0, 0, 0, 0, 0, 0, 2055, 2057, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2072, 0, 2073,
	0, 0, 0, 0, 0, 0, 2042, 2043, 0, 0,
	0, 0, 0, 2050, 2051, 2052, 2053, 0, 0, 0,
	0, 0, 0, 2033, 0, 5125, 2064, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2065, 0,
	0, 2048, 0, 0, 0, 0, 0, 0, 0, 0,
	2039, 2040, 2046, 2068, 2045, 2041, 0, 2038, 2036, 2037,
	2029, 2030, 2031, 2032, 2034, 2035, 2066, 0, 0, 0,
	2076, 0, 0, 0, 0, 0, 0, 2055, 2057, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2074, 0, 0, 0, 0, 0, 0, 2072, 0, 2073,
	0, 0, 0, 0, 0, 0, 2042, 2043, 0, 0,
	0, 2063, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2078, 0, 0, 0, 2064, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2048, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2025, 2026, 0, 2058, 2059, 2060, 2069, 2070, 2071, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2054, 2062, 2056, 0, 0, 0, 0, 0,
	2074, 0, 2028, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2075, 0, 0, 0, 0, 2049, 0,
	0, 2063, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2081, 2078, 0, 0, 0, 0, 0, 0, 0,
	2027, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2067, 2047, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2044, 0, 0, 0, 0, 0, 0, 0, 0,
	2025, 2026, 0, 2058, 2059, 2060, 2069, 2070, 2071, 0,
	0, 0, 0, 0, 0, 0, 2080, 0, 0, 0,
	0, 0, 2054, 2062, 2056, 0, 0, 0, 0, 0,
	0, 0, 2028, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2075, 0, 0, 0, 0, 2049, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2081, 0, 0, 0, 0, 0, 0, 0, 0,
	2027, 0, 0, 2050, 2051, 2052, 2053, 0, 0, 0,
	2067, 2047, 0, 2033, 0, 0, 0, 0, 0, 0,
	0, 2044, 0, 0, 0, 0, 0, 0, 2065, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2039, 2040, 2046, 2068, 2045, 2041, 2080, 2038, 2036, 2037,
	2029, 2030, 2031, 2032, 2034, 2035, 2066, 0, 0, 0,
	2076, 0, 0, 0, 0, 0, 0, 2055, 2057, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2072, 0, 2073,
	0, 0, 0, 0, 0, 0, 2042, 2043, 0, 0,
	0, 0, 0, 2050, 2051, 2052, 2053, 0, 0, 0,
	0, 0, 0, 2033, 0, 0, 2064, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2065, 0,
	0, 2048, 0, 0, 0, 0, 0, 0, 0, 0,
	2039, 2040, 2046, 2068, 2045, 2041, 0, 2038, 2036, 2037,
	2029, 2030, 2031, 2032, 2034, 2035, 2066, 0, 0, 0,
	2076, 0, 0, 0, 0, 0, 0, 2055, 2057, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2074, 0, 0, 0, 0, 0, 0, 2072, 0, 2073,
	0, 0, 0, 0, 0, 0, 2042, 2043, 0, 0,
	0, 2063, 1232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2078, 0, 0, 0, 2064, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2048, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2025, 2026, 0, 2058, 2059, 2060, 2069, 2070, 2071, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2054, 2062, 2056, 0, 0, 0, 0, 0,
	2074, 0, 2028, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2075, 0, 0, 0, 0, 2049, 0,
	0, 2063, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2081, 2078, 0, 0, 0, 0, 0, 0, 0,
	2027, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2067, 2047, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2044, 0, 0, 0, 0, 0, 0, 0, 0,
	2025, 2026, 0, 2058, 2059, 2060, 2069, 2070, 2071, 0,
	0, 0, 0, 0, 0, 0, 2080, 0, 0, 0,
	0, 0, 2054, 2062, 2056, 0, 0, 0, 0, 0,
	0, 0, 2028, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2075, 0, 0, 0, 0, 2049, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2081, 0, 0, 0, 0, 0, 0, 0, 0,
	2027, 0, 0, 2050, 2051, 2052, 2053, 0, 0, 0,
	2067, 2047, 0, 2033, 0, 0, 0, 0, 0, 0,
	0, 2044, 0, 0, 0, 0, 0, 0, 2065, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2039, 2040, 2046, 2068, 2045, 2041, 2080, 2038, 2036, 2037,
	2029, 2030, 2031, 2032, 2034, 2035, 2066, 0, 0, 0,
	2076, 0, 0, 0, 0, 4880, 0, 2055, 2057, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2072, 0, 2073,
	0, 0, 0, 0, 0, 0, 2042, 2043, 0, 0,
	0, 0, 0, 2050, 2051, 2052, 2053, 0, 0, 0,
	0, 0, 0, 2033, 0, 4529, 2064, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2065, 0,
	0, 2048, 0, 0, 0, 0, 0, 0, 0, 0,
	2039, 2040, 2046, 2068, 2045, 2041, 0, 2038, 2036, 2037,
	2029, 2030, 2031, 2032, 2034, 2035, 2066, 0, 0, 0,
	2076, 0, 0, 0, 0, 0, 0, 2055, 2057, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2074, 0, 0, 0, 0, 0, 0, 2072, 0, 2073,
	0, 0, 0, 0, 0, 0, 2042, 2043, 0, 0,
	0, 2063, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2078, 0, 0, 0, 2064, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2048, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2025, 2026, 0, 2058, 2059, 2060, 2069, 2070, 2071, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2054, 2062, 2056, 0, 0, 0, 0, 0,
	2074, 0, 2028, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2075, 0, 0, 0, 0, 2049, 0,
	0, 2063, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2081, 2078, 0, 0, 0, 0, 0, 0, 0,
	2027, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2067, 2047, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2044, 0, 0, 0, 0, 0, 0, 0, 0,
	2025, 2026, 0, 2058, 2059, 2060, 2069, 2070, 2071, 0,
	0, 0, 0, 0, 0, 0, 2080, 0, 0, 0,
	0, 0, 2054, 2062, 2056, 0, 0, 0, 0, 0,
	0, 0, 2028, 0, 0, 4530, 0, 0, 0, 0,
	0, 0, 0, 2075, 0, 0, 0, 0, 2049, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2081, 0, 0, 0, 0, 0, 0, 0, 0,
	2027, 0, 0, 2050, 2051, 2052, 2053, 0, 0, 0,
	2067, 2047, 0, 2033, 0, 0, 0, 0, 0, 0,
	0, 2044, 0, 0, 0, 0, 0, 0, 2065, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2039, 2040, 2046, 2068, 2045, 2041, 2080, 2038, 2036, 2037,
	2029, 2030, 2031, 2032, 2034, 2035, 2066, 0, 0, 0,
	2076, 0, 0, 0, 0, 0, 0, 2055, 2057, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2072, 0, 2073,
	0, 0, 0, 0, 0, 0, 2042, 2043, 0, 0,
	0, 0, 0, 2050, 2051, 2052, 2053, 0, 0, 0,
	0, 0, 0, 2033, 0, 0, 2064, 0, 0, 0,
	0, 0, 3789, 0, 0, 0, 0, 0, 2065, 0,
	0, 2048, 0, 0, 0, 0, 0, 0, 0, 0,
	2039, 2040, 2046, 2068, 2045, 2041, 0, 2038, 2036, 2037,
	2029, 2030, 2031, 2032, 2034, 2035, 2066, 0, 0, 0,
	2076, 0, 0, 0, 0, 0, 0, 2055, 2057, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2074, 0, 0, 0, 0, 0, 0, 2072, 0, 2073,
	0, 0, 0, 0, 0, 0, 2042, 2043, 0, 0,
	0, 2063, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2078, 0, 0, 0, 2064, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2048, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2025, 2026, 0, 2058, 2059, 2060, 2069, 2070, 2071, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2054, 2062, 2056, 0, 0, 0, 3784, 0,
	2074, 0, 2028, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2075, 0, 0, 0, 0, 2049, 0,
	0, 2063, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2081, 2078, 0, 0, 0, 0, 0, 0, 0,
	2027, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2067, 2047, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2044, 0, 0, 0, 0, 0, 0, 0, 0,
	2025, 2026, 0, 2058, 2059, 2060, 2069, 2070, 2071, 0,
	0, 0, 0, 0, 0, 0, 2080, 0, 0, 0,
	0, 0, 2054, 2062, 2056, 0, 0, 0, 0, 4290,
	0, 0, 2028, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2075, 0, 0, 0, 0, 2049, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2081, 0, 0, 0, 0, 0, 0, 0, 0,
	2027, 0, 0, 2050, 2051, 2052, 2053, 0, 0, 0,
	2067, 2047, 0, 2033, 0, 0, 0, 0, 0, 0,
	0, 2044, 0, 0, 0, 0, 0, 0, 2065, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2039, 2040, 2046, 2068, 2045, 2041, 2080, 2038, 2036, 2037,
	2029, 2030, 2031, 2032, 2034, 2035, 2066, 0, 0, 0,
	2076, 0, 0, 0, 0, 0, 0, 2055, 2057, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2072, 0, 2073,
	0, 0, 0, 0, 0, 0, 2042, 2043, 0, 0,
	0, 0, 0, 2050, 2051, 2052, 2053, 0, 0, 0,
	0, 0, 0, 2033, 0, 0, 2064, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2065, 0,
	0, 2048, 0, 0, 0, 0, 0, 0, 0, 0,
	2039, 2040, 2046, 2068, 2045, 2041, 0, 2038, 2036, 2037,
	2029, 2030, 2031, 2032, 2034, 2035, 2066, 0, 0, 0,
	2076, 0, 0, 0, 0, 0, 0, 2055, 2057, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2074, 0, 0, 0, 0, 0, 0, 2072, 0, 2073,
	0, 0, 0, 0, 0, 0, 2042, 2043, 0, 0,
	0, 2063, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2078, 0, 0, 0, 2064, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2048, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2025, 2026, 0, 2058, 2059, 2060, 2069, 2070, 2071, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2054, 2062, 2056, 0, 0, 0, 3722, 0,
	2074, 0, 2028, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2075, 0, 0, 0, 0, 2049, 0,
	0, 2063, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2081, 2078, 0, 0, 0, 0, 0, 0, 0,
	2027, 0, 0, 3749, 0, 0, 0, 0, 0, 0,
	2067, 2047, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2044, 0, 0, 0, 0, 0, 0, 0, 0,
	2025, 2026, 0, 2058, 2059, 2060, 2069, 2070, 2071, 0,
	0, 0, 0, 0, 0, 0, 2080, 0, 0, 0,
	0, 0, 2054, 2062, 2056, 0, 0, 0, 0, 0,
	0, 0, 2028, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2075, 0, 0, 0, 0, 2049, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2081, 0, 0, 0, 0, 0, 0, 0, 0,
	2027, 0, 0, 2050, 2051, 2052, 2053, 0, 0, 0,
	2067, 2047, 0, 2033, 0, 0, 0, 0, 0, 0,
	0, 2044, 0, 0, 0, 0, 0, 0, 2065, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2039, 2040, 2046, 2068, 2045, 2041, 2080, 2038, 2036, 2037,
	2029, 2030, 2031, 2032, 2034, 2035, 2066, 0, 0, 0,
	2076, 0, 0, 0, 0, 0, 0, 2055, 2057, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2072, 0, 2073,
	0, 0, 0, 0, 0, 0, 2042, 2043, 0, 0,
	0, 0, 0, 2050, 2051, 2052, 2053, 0, 0, 0,
	0, 0, 0, 2033, 0, 0, 2064, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2065, 0,
	0, 2048, 0, 0, 0, 0, 0, 0, 0, 0,
	2039, 2040, 2046, 2068, 2045, 2041, 0, 2038, 2036, 2037,
	2029, 2030, 2031, 2032, 2034, 2035, 2066, 0, 0, 0,
	2076, 0, 0, 0, 0, 0, 0, 2055, 2057, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2074, 0, 0, 0, 0, 0, 0, 2072, 0, 2073,
	0, 0, 0, 0, 0, 0, 2042, 2043, 0, 0,
	0, 2063, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2078, 0, 0, 0, 2064, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2048, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2025, 2026, 0, 2058, 2059, 2060, 2069, 2070, 2071, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2054, 2062, 2056, 0, 0, 0, 0, 0,
	2074, 0, 2028, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2075, 0, 0, 0, 0, 2049, 0,
	0, 2063, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2081, 2078, 0, 0, 0, 0, 0, 0, 0,
	2027, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2067, 2047, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2044, 0, 0, 0, 0, 0, 0, 0, 0,
	2025, 2026, 0, 2058, 2059, 2060, 2069, 2070, 2071, 0,
	0, 0, 0, 0, 0, 0, 2080, 0, 0, 0,
	0, 0, 2054, 2062, 2056, 0, 0, 0, 0, 0,
	0, 0, 2028, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2075, 0, 0, 0, 0, 2049, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2081, 0, 0, 0, 0, 0, 0, 0, 0,
	2027, 0, 0, 2050, 2051, 2052, 2053, 0, 0, 0,
	2067, 2047, 0, 2033, 0, 0, 0, 0, 0, 0,
	0, 2044, 0, 0, 0, 0, 0, 0, 2065, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2039, 2040, 2046, 2068, 2045, 2041, 2080, 2038, 2036, 2037,
	2029, 2030, 2031, 2032, 2034, 2035, 2066, 0, 0, 0,
	2076, 0, 0, 0, 0, 0, 0, 2055, 2057, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2072, 0, 2073,
	0, 0, 0, 0, 0, 0, 2042, 2043, 0, 0,
	0, 0, 0, 2050, 2051, 2052, 2053, 0, 0, 0,
	0, 0, 0, 2033, 0, 0, 2064, 0, 0, 0,
	0, 2635, 0, 0, 0, 0, 0, 0, 2065, 0,
	0, 2048, 0, 0, 0, 0, 0, 0, 0, 0,
	2039, 2040, 2046, 2068, 2045, 2041, 0, 2038, 2036, 2037,
	2029, 2030, 2031, 2032, 2034, 2035, 2066, 0, 0, 0,
	2076, 0, 0, 0, 0, 0, 0, 2055, 2057, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2074, 0, 0, 0, 0, 0, 0, 2072, 0, 2073,
	0, 0, 0, 0, 0, 0, 2042, 2043, 0, 0,
	0, 2063, 0, 0, 0, 0, 1111, 0, 1164, 0,
	0, 0, 2078, 0, 0, 0, 2064, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2048, 0, 1119, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1135, 0, 1117, 1116, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2054, 0, 0, 0, 0, 1137, 0, 0,
	2074, 0, 0, 1118, 0, 0, 0, 0, 1121, 0,
	0, 0, 0, 1176, 0, 1147, 0, 0, 2049, 0,
	0, 0, 0, 0, 1132, 1133, 0, 0, 0, 0,
	0, 0, 2078, 0, 1152, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2067, 0, 1165, 1123, 0, 0, 0, 0, 0, 1124,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1125, 0, 2080, 0, 0, 0,
	0, 0, 2054, 1162, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2049, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1163, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1127, 0, 0, 0, 0, 0,
	2067, 0, 0, 1115, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2065, 0,
	0, 0, 0, 0, 1129, 1130, 0, 0, 0, 0,
	2039, 2040, 2046, 2068, 2045, 2041, 2080, 2038, 2036, 2037,
	2029, 2030, 2031, 2032, 2034, 2035, 1138, 1136, 0, 0,
	0, 0, 0, 0, 1131, 0, 0, 0, 0, 1148,
	0, 0, 1170, 1169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1173, 1161,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1166, 0, 0, 0, 0, 0, 0, 2065, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2039, 2040, 2046, 2068, 2045, 2041, 0, 2038, 2036, 2037,
	2029, 2030, 2031, 2032, 2034, 2035, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1122, 0, 0, 1175, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1120,
	0, 0, 0, 0, 1156, 1157, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1159, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1167, 1154, 0, 0,
	0, 0, 0, 0, 0, 1174, 1149, 0, 0, 1141,
	1139, 0, 0, 0, 1144, 0, 0, 0, 0, 0,
	0, 0, 1145, 0, 0, 1113, 0, 1168, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1114, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1160, 0, 0, 1158, 0, 1146,
	1128, 0, 0, 0, 0, 1143, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1172, 0, 0, 0,
	0, 0, 0, 0, 1150, 0, 1151, 0, 0, 0,
	0, 0, 0, 0, 0, 1126, 1171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1153, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1155,
}

var sqlPact = [...]int32{
	7465, -1000, -1000, -1000, -1000, -1000, -1000, 247, -1000, -1000,
	246, 245, 244, 242, 239, 237, 235, 232, 231, 230,
	226, -1000, -1000, 222, 217, 216, 215, -1000, -1000, 213,
	211, -1000, 210, -1000, -1000, 209, -1000, 208, 207, 206,
	-1000, -1000, 205, -1000, 203, -1000, -1000, -1000, -1000, 199,
	198, 192, 109926, 109309, 110541, 2668, 138885, 119780, 2382, 97598,
	138268, 96981, 137651, 2522, 12949, 137034, 3157, 190, -1000, 136417,
	189, 187, 185, -1000, 119163, 135800, 116697, 116080, 2272, 85801,
	1896, 1880, -1000, 184, 180, -1000, 8712, 81474, 172, 171,
	170, 169, 2737, 166, -1000, 162, 161, -1000, 160, 159,
	-1000, 11122, 1693, -1000, 158, 153, 152, -1000, 342, 115463,
	151, 149, 147, 2947, 146, 144, 79012, 140, 138, 136,
	2482, 3285, -1000, -1000, 2413, -1000, -1000, 134, 133, 130,
	129, 127, 126, 125, 124, 122, 120, 119, 118, 114,
	113, -1000, 111, 108, 107, 106, 104, -1000, 103, 101,
	100, -1000, 98, -1000, 97, 96, 95, 93, 92, 89,
	88, 87, 86, 85, 83, 80, 77, 75, 74, 160384,
	-1000, -1000, 72, -1000, 1951, 1868, 1866, 1864, 1096, 67,
	66, 62, 61, 60, 59, 58, 57, 56, 55, 54,
	49, -1000, 48, 47, 45, 44, 40, 37, 36, 31,
	25, -1000, 196, 23, 22, 21, 19, 18, 17, 14,
	-1000, 3951, 4010, -1000, 2124, 863, 1337, 34912, 3429, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 148110, 139500,
	13, -66, 12, -1000, 3815, 1146, 64069, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 357, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 558, 2637, 844, -1000, -1000,
	-1000, 135183, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2667, -2, 98213, -1000, 2384, -1000, -1000, -1000, -1000, -1000,
	843, -1000, 2665, 2595, 392, 2594, 98213, -1000, -1000, -1000,
	3861, 3764, 108692, 2838, 4302, 4301, 4299, 4298, 4295, 147495,
	2024, 2908, 4294, 4293, 4292, 4291, 4290, 4288, 4287, -1000,
	108075, 1180, 107458, 106841, 3877, 134568, 106224, 133951, 150576, 53968,
	794, 3859, -1000, -1000, -1000, -1000, -1000, -1000, 139500, -1000,
	1178, -1000, -1000, 4285, 2302, 842, 118546, -1000, -1000, 133334,
	2273, -1000, -1000, -1000, 1033, 1338, 37440, 37440, 37440, 356,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 3886, -1000, -1000,
	-1000, -1000, 139500, 3140, 3140, 1583, 1587, 1587, 3140, 3140,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 4283, 4282,
	4281, 4280, 4279, -1000, -1000, -1000, 1572, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 96364, 27139, 95747, 95130, 132717, 53336,
	105607, 104990, 90811, 4277, 4276, 110541, 52704, 61549, 4009, 132100,
	149959, 4007, 4000, 1176, 2376, 1633, -1000, -1000, -1000, -1000,
	-1000, -1000, -18, 85186, 4078, 139500, -1000, 355, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 52072, 778, 51440, 658, 50808,
	494, 131483, -1000, -1000, -1000, -1000, -1000, 90184, 3763, -1000,
	130866, 1688, 2830, 4275, 4269, 1286, 4268, 3744, 2023, 4263,
	4262, 4257, 4255, 4253, 4252, 4251, 1623, 130249, 3082, 129632,
	1943, 149342, 2163, 1172, 104373, 110541, 3016, 129015, 1567, 1535,
	-1000, -1000, -1000, -1000, 3540, 3279, 3268, 1315, -1000, -1000,
	-1000, -1000, -1000, 67823, 7341, 6308, -1000, -1000, 13697, 128398,
	70948, 110541, 110541, -1000, -1000, -1000, -1000, -1000, -1000, 50176,
	599, 49544, 790, 127781, -1000, -1000, 68448, 3387, 1219, -1000,
	-1000, -1000, -1000, -1000, 127164, 48912, 382, 48280, 779, 139500,
	-1000, 3426, 2277, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2652, 1803, 4079, 3186, 89557, 2294, 1620,
	3814, 3536, 3533, 1698, 2359, 3516, 4250, 2997, 3239, 3512,
	3507, 3505, 3498, 3497, 1814, 2971, 362, 2963, 34280, 3412,
	2026, 47648, 1707, 1675, 3494, 3492, 4097, 3943, 2334, 2289,
	2496, 2367, 94513, 4247, 4246, 3777, 3489, 3479, 3249, 3476,
	2180, -1000, 3384, 1622, 346, -1000, -1000, -1000, -1000, -1000,
	-1000, 346, 1637, -1000, -1000, -1000, -1000, -1000, 99443, -1000,
	-1000, 1572, -1000, -1000, -1000, 1429, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2124, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 3075, -1000, 2370, -1000, -1000, -1000, 2877, 3792,
	3792, 3792, 3858, 543, 536, -1000, 196, 976, 1250, -1000,
	-1000, 159999, -1000, -1000, 54600, 54600, 54600, 54600, 54600, 54600,
	54600, 54600, 2528, -1000, 841, -1000, -1000, 871, -1000, 840,
	787, 707, -1000, -1000, -1000, -1000, -1000, -1000, 839, -1000,
	-1000, -1000, -1000, -1000, -1000, 4061, -1000, 30351, -1000, -1000,
	-1000, 538, 837, 54600, -1000, -1000, 4129, 4126, 813, -1000,
	344, 1050, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 3422, 836, 835, -1000, 834, 832,
	830, 829, 828, -1000, 827, -1000, 826, 825, 823, 822,
	821, 820, 819, 818, -1000, 2404, -1000, -1000, -1000, -1000,
	-1000, -1000, 770, 767, 767, 767, -1000, 1161, -1000, -1000,
	-1000, 462, 766, 429, 762, 761, 758, -1000, 815, 814,
	812, 803, 802, 801, 800, 799, 797, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1159, -1000, -1000, -1000, -1000, 1453,
	-21, 139500, -1000, 702, -21, -1000, -1000, 795, -1000, 38722,
	38722, 38722, -1000, -1000, 2663, 54600, -1000, 2986, -1000, -8,
	-8, 1002, 65944, -1000, 62801, 1002, 335, 886, 72190, -1000,
	3383, -1000, -1000, 793, 343, -1000, -1000, -1000, -1000, 27764,
	3382, 139500, 139500, 139500, 110541, 110541, 110541, 139500, 4245, 4244,
	3660, 54600, -1000, -1000, 80857, 152421, 111156, 1425, -19, -1000,
	-1000, 3979, 84561, 80242, 3420, 152421, 3415, 3381, 151810, 88930,
	301, 3635, -1000, -1000, 791, 4243, -1000, -1000, -1000, -1000,
	-1000, 3634, 4242, 4241, 4240, 139500, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2562, 3633, -1000, -20, -1000, 114846, 2562,
	3632, -1000, -20, 2562, 3630, -1000, -20, 114231, -1000, -1000,
	2562, 3627, -1000, -1000, 293, 3623, -1000, -1000, 292, 3622,
	-1000, -1000, 338, -72, 3617, -1000, -1000, -1000, -1000, -1000,
	-1000, 159999, -1000, -1000, -1000, 151193, -1000, 3771, -1000, 139500,
	-1000, 54600, -1000, -1000, 3978, 2198, 3821, 3906, -1000, -1000,
	-32, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2887, 2866,
	1284, 2695, -1000, 3684, 1841, 37440, 3730, -1000, -1000, -1000,
	-1000, -1000, 328, 27764, 3231, -1000, -1000, 139500, -1000, 139500,
	3140, 3140, -1000, -1000, -1000, 4089, 4086, 3140, 3140, 139500,
	139500, -1000, -1000, -1000, -1000, -1000, -1000, -32, -1000, 3144,
	3615, 1664, -1000, 2694, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2380, 3614, -1000, 2512, 3613, 2226, -1000,
	-1000, 2499, -1000, 156739, 1494, -1000, -1000, -1000, -1000, 2638,
	3586, -7, -1000, -1000, 2948, -1000, 4075, 3307, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 5785,
	156639, -1000, 1914, -1000, -1000, 2406, 2293, -1000, 1463, 3584,
	-1000, 3183, 3183, 103756, 3590, 70323, 68448, 85186, -30, -1000,
	-1000, -1000, -1000, -1000, -139, -1000, 26506, 159999, -1000, -1000,
	-1000, -1000, 2062, 159999, 1041, -1000, -1000, 3583, -1000, 159999,
	1036, -1000, -1000, 3582, -1000, 2967, -1000, 3414, -1000, -1000,
	-1000, 2784, 88303, 2783, 1118, -1000, 110541, 2340, 4239, -1000,
	4235, -1000, -1000, 4234, -1000, 4233, 4231, 4227, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 103141, 2656, -1000, -1000, 1473,
	1064, 91436, -1000, 2782, 3904, -1000, 102524, 1165, -1000, 1093,
	2781, -1000, 1460, 113616, 1117, 2779, -1000, 4226, 3874, 3073,
	1093, 2777, -1000, -1000, -1000, -1000, -1000, 1141, -1000, 73420,
	-1000, 73420, -1000, 1891, -1000, 146880, -8, 110541, 4061, -1000,
	-69, -1000, -1000, -1000, 1146, -1000, 67195, -1000, 67195, 117929,
	91436, 1064, 3379, 77145, 159679, -1000, 1116, -1000, -1000, 159999,
	-1000, -1000, -1000, 2958, -1000, -168, 3178, -1000, 91436, 69698,
	3377, 2954, -1000, 159999, -1000, -1000, -1000, -1000, 159999, -1000,
	-1000, -1000, 91436, 1473, -1000, 126547, 101907, -1000, -1000, 1581,
	2950, -1000, -1000, -1000, 68448, 3376, 1465, 91436, 91436, 91436,
	91436, -1000, 125930, -1000, -1000, 2342, 1728, 3778, 2182, 110541,
	-1000, 2154, -1000, -1000, -1000, 3795, 3581, 139500, -1000, -1000,
	3413, -1000, 83946, 3413, 113001, -1000, 112386, -1000, 111771, -1000,
	110541, -1000, 110541, -1000, 4225, 4218, 4213, -1000, -1000, 4212,
	-1000, 4211, 3784, -1000, 777, 47016, 159999, 3775, -1000, 4210,
	2252, 3412, 159999, -1000, 3508, 1884, 1878, 139500, -1000, -1000,
	139500, -1000, 139500, -1000, -1000, -1000, 2680, 1766, -1000, -1000,
	2885, -1000, -1000, -1000, 1113, -1000, -1000, 110541, 110541, 110541,
	110541, 110541, 1702, -1000, 46384, 3761, -1000, -1000, 3495, 4209,
	1907, -1000, 2152, -1000, 3373, 3811, -1000, 3372, 1552, 2066,
	323, 4132, 323, -1000, -1000, 304, -1000, -1000, 146265, -1000,
	2877, -1000, 139500, -1000, 2884, 3404, 3411, 1994, 2674, 2988,
	-1000, 45752, 2906, 58392, 2691, 196, -1000, -1000, 196, 196,
	36176, -1000, -1000, 37440, 976, 84561, 84561, 27764, 1445, 54600,
	54600, 54600, 54600, 54600, 54600, 54600, 54600, 54600, 54600, 54600,
	54600, 54600, 54600, 54600, 54600, 54600, 54600, 54600, 54600, 54600,
	54600, 54600, 54600, 54600, 54600, 54600, 54600, 54600, 54600, 54600,
	54600, 54600, 54600, 54600, 54600, 2374, 54600, 1421, 54600, 54600,
	54600, 54600, 2365, -1000, -1000, 2164, 611, 2332, 787, -1000,
	-1000, -1000, 4037, 4037, 4037, 1573, 1573, 1573, 13213, 13213,
	746, 4205, 871, -1000, 54600, -1000, 112, 66559, 54600, 28391,
	-1000, 536, 16557, 2875, -1000, 534, 29053, -1000, -1000, -1000,
	30351, 707, 45090, 54600, 1125, 159999, -1000, -1000, 1625, 4077,
	25873, 3313, 3234, 786, 995, 990, 33618, 32956, 32294, 31632,
	981, 944, 54600, 54600, 54600, 54600, 54600, 54600, 54600, 54600,
	-1000, -1000, 4084, -1000, 4077, -1000, -1000, -1000, -1000, 4077,
	1439, 1438, 4077, -1000, 4077, 4077, 9386, 9386, 44458, 43826,
	43194, 59024, 42562, 54600, 31000, 41930, 41298, -1000, 60920, 139500,
	-21, 3977, 139500, 54600, 371, -1000, 13973, -1000, 371, 371,
	784, -70, 159999, 2927, 2927, 64694, 2762, 2529, 2529, 2529,
	-1000, 1002, 20137, 1002, 124085, 2564, 1002, 1002, 309, 325,
	533, 62176, 2986, 123470, 858, 781, 5, 2, 1, -1000,
	-1000, -1, -14, -1000, -1000, 110541, 780, 28391, 27764, 308,
	2238, -75, 2991, 2990, 2985, 2984, -1000, 2982, 2654, -1000,
	-1000, -1000, 2105, -76, 1420, 110541, 139500, 2106, -1000, -1000,
	-1000, -1000, 85186, -22, 85186, 139500, 3759, 110541, -63, -1000,
	152421, 6870, -78, -1000, 1488, 297, 4077, -1000, -1000, -1000,
	-1000, -1000, 4204, 4203, -1000, 1156, 776, 773, 486, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 770, 767, 767,
	767, -1000, 462, 766, 429, 762, 761, 758, -1000, -1000,
	-1000, -1000, -1000, 3370, 110541, 139500, 2036, 83331, 101290, -72,
	111156, 152421, -24, -1000, -1000, -1000, -1000, 110541, -1000, -1000,
	110541, -1000, 74654, -1000, 139500, -1000, -1000, -1000, 4202, -1000,
	110541, 110541, 2562, 3579, -1000, 110541, -1000, 110541, 283, 3577,
	-1000, -1000, 139500, -1000, 110541, 110541, -1000, 139500, 139500, 139500,
	152421, 152421, 273, -1000, 110541, 976, -81, 1299, -32, -1000,
	-1000, -1000, -1000, 1572, -1000, 2095, -1000, -1000, -1000, -1000,
	-1000, -1000, 1571, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 813, -1000, -1000, -1000, -1000, 4058, 4042, -29, -1000,
	-1000, 27764, -1000, 2212, -1000, -1000, -1000, -1000, 139500, 139500,
	-1000, -1000, 139500, 139500, -1000, -1000, -33, 1823, 690, 1418,
	-1000, 93896, 2732, 3769, 4201, 3057, 3754, 1889, -1000, 1731,
	757, -1000, 3878, 99443, 3942, 3955, 1466, -1000, 3369, -1000,
	-1000, -1000, 1031, 1906, 2054, 1417, 1416, 99443, 2512, -1000,
	84561, -1000, 3025, 3856, 1587, 1592, 1587, 1587, 1561, 1527,
	-1000, 99443, 2050, 1414, 1413, 1411, -1000, -1000, 1795, 1858,
	-1000, -1000, 125315, 1875, -1000, 1406, 1405, 140730, 3992, 3075,
	2491, 901, 2298, -1000, 1491, 1404, 3368, -1000, -1000, -34,
	3938, 3950, 1466, -1000, -1000, 3367, 1403, -1000, 1136, -1000,
	-1000, -1000, 3855, 110541, 27764, 1757, 1756, 1745, 2048, 1402,
	-23, -1000, 3923, 1877, -1000, 3969, 91436, -1000, 2780, 2604,
	1401, 2045, 1399, 3665, -1000, -1000, 2651, 2721, -1000, -1000,
	-1000, -1000, 1912, 3139, -1000, 2883, 1539, 1539, 139500, -1000,
	1794, -1000, 1473, 1473, 120395, 139500, -1000, -1000, -1000, 3812,
	3810, -1000, -1000, 1397, 1394, -1000, 1131, 6959, 3708, -1000,
	152421, 1131, 1131, 2104, 3575, 3107, 1883, -1000, 3174, 998,
	3173, -1000, -1000, -1000, 998, -30, 85186, 139500, 289, -1000,
	112, 54600, 54600, 112, 54600, 112, -1000, 3898, 3573, 3976,
	-1000, 3570, 4200, 756, -1000, 2907, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 754, 2774, 3366, 139500, 248, -1000, 110541,
	-1000, 3974, 124700, -1000, 3556, 152421, 2512, 2767, -1000, -1000,
	100675, -1000, 3555, 2309, 558, 2761, -1000, 626, 4199, 3553,
	-1000, 145650, -1000, 3771, 1456, 3551, 1217, 763, 3973, -1000,
	763, 75280, -1000, 139500, -1000, -8, 1186, 92666, -83, -86,
	531, -1000, 139500, 139500, 3718, 2314, 2312, -1000, 1088, 68448,
	-1000, 68448, -89, -1000, -168, 3170, 1650, 68448, -1000, 1064,
	-123, 998, -1000, 998, -1000, 110541, 3410, -1000, 91436, 68448,
	-1000, 1064, 1064, 1064, 1064, -1000, -1000, -1000, -1000, 4198,
	4197, 4195, 4194, -1000, -1000, 1092, 110541, 139500, 110541, -1000,
	3106, 1796, -1000, 278, -1000, 152421, -1000, 152421, 139500, 110541,
	-1000, -1000, 1092, 139500, 1092, 139500, 1092, 139500, 1092, 1092,
	-1000, -1000, -1000, -1000, -1000, 112, -1000, -1000, 159999, -1000,
	54600, -1000, -1000, 1716, 4193, 1924, -1000, 3409, -1000, 3408,
	-1000, 39, -1000, -1000, 4083, 2148, -1000, 4124, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 4192, 3756, 159999,
	-1000, 87676, 2146, -1000, -1000, -1000, -1000, 110541, 110541, 110541,
	110541, 139500, 3707, -1000, 139500, 3704, 3706, 110541, -1000, 4131,
	-1000, -1000, 99443, -1000, 2884, 3404, -1000, -1000, -1000, -1000,
	-1000, -1000, 1584, 2607, -1000, 2944, -1000, 1831, -1000, -1000,
	-1000, 159999, 59656, -1000, -1000, 159999, 2082, -1000, 57760, 57128,
	-1000, -1000, 1981, 110541, 2999, -1000, 2999, -67, -1000, 157479,
	2943, 110541, -29, 37440, -1000, -1000, -1000, -1000, -1000, 1030,
	1677, 1677, 1502, 1502, 1502, 1502, 3873, 9018, 2142, 6580,
	11629, 11629, 6137, 6137, 6137, 6137, 6137, 11629, 1673, 1573,
	1573, 1673, 1673, 1673, 1673, 1673, 1573, 1573, 1573, 11629,
	11629, 11629, 1573, 13213, 160099, 11097, 54600, 54600, 1393, 2139,
	611, 11039, 54600, 5802, 5802, 5802, 5802, -1000, 2040, -1000,
	-1000, -1000, -1000, 3365, 753, 59024, 59024, -1000, -1000, -1000,
	-1000, 29702, 54600, -1000, -1000, -1000, -1000, 40636, -1000, -1000,
	156319, -341, 521, -1000, 272, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 519, -64,
	121, -1000, 54600, 54600, 54600, 518, -1000, 268, 54600, 139500,
	-1000, 153039, 852, -94, -1000, -91, 1596, -1000, 54600, -1000,
	-1000, 1391, -1000, 1389, 1388, 1383, -1000, 750, 504, -1000,
	266, -1000, 2542, 743, 741, 54600, -1000, -1000, -1000, -1000,
	-1000, 156219, -1000, -1000, 155899, -1000, -1000, 155799, -1000, -1000,
	155410, -1000, -1000, -1000, -1000, -1000, 159579, 19147, 18725, 18406,
	8315, 17892, 17570, -97, 501, -109, 497, 1025, 1013, 496,
	495, 491, -110, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -111, 490, -1000, 3358, -64,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 488, -1000,
	484, -1000, 159259, -64, 479, 8036, -1000, 59024, 59024, 59024,
	59024, 478, -1000, 157159, -1000, 159159, 40004, 40004, 40004, 475,
	158839, 54600, -64, -112, -1000, -117, -1000, -1000, -1000, -1000,
	630, -118, -1000, -126, 1119, 38722, 63442, 27764, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1119, 1119, 54600, -1000, 54600, 2956, -1000, -1000, -1000, -1000,
	2955, 2894, 2927, 64694, -1000, -1000, -1000, -1000, 124085, -1000,
	4061, 3475, -1000, 124085, -1000, -1000, 139500, 702, -1000, 124085,
	124085, 27764, 1002, -1000, -1000, 139500, 697, 1002, 124085, 768,
	-1000, -1000, -1000, -1000, -1000, 472, 77770, 121, 262, 27764,
	1093, -1000, -1000, 3079, 3079, 3079, 3079, 3079, 110541, -1000,
	-1000, 152421, 1382, -28, -127, 3169, 3167, 3162, -30, 85186,
	-30, -139, 139500, -25, 4015, -274, -1000, 2421, -1000, 84561,
	-1000, 870, 1174, 27764, -1000, -1000, -1000, 727, -1000, 4077,
	4077, -1000, 4077, 152421, 3356, 332, 3152, 3117, 3116, -1000,
	2650, 98213, 303, -72, 152421, -1000, 301, -128, -1000, -1000,
	82704, 78385, -1000, 2545, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 4186, -1000, 2562, -1000, -1000, 110541, 2562, 2562, -1000,
	110541, 110541, 2562, -1000, 293, -1000, 292, -1000, -1000, -72,
	-1000, 1112, 37440, -1000, 1572, -1000, -1000, 1765, -1000, 2325,
	-1000, 1319, -1000, -1000, 37440, -1000, 3721, -1000, 1980, -1000,
	-1000, -1000, -1000, 4975, 139500, 139500, 110541, -1000, 121625, 139500,
	-1000, 2527, 152421, -1000, 2760, 145035, 2734, 144420, 84561, -1000,
	-1000, 726, 1047, 2937, 2936, 1215, 139500, 139500, 2931, 143805,
	143190, -1000, 4185, 139500, 2449, 54600, 121625, 3854, 2503, 3098,
	112, 112, -1000, 112, -1000, -1000, 725, 1528, 110541, 110541,
	139500, 152421, 110541, 2028, -1000, -1000, -1000, -1000, -1000, 100058,
	-1000, -1000, 1587, -1000, -1000, -1000, 1587, -1000, 1587, 2512,
	1985, 139500, 152421, 110541, 152421, 142575, 2290, 141960, 2281, 2279,
	-1000, -1000, -1000, 2187, 2275, 2426, 2042, 139500, -1000, -1000,
	-1000, -1000, -1000, 1644, -1000, 901, 1379, 3355, 54600, 54600,
	2441, 112, 112, -1000, 112, 723, 27764, -1000, 1400, -1000,
	3380, 139500, 4123, 141345, 4121, 139500, 139500, 139500, 152421, 3807,
	139500, -26, -1000, 1479, -1000, 3969, -1000, 962, -1000, -1000,
	-1000, -1000, 139500, 139500, 152421, 2636, 2708, 2625, 3110, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -123, -27, -153, -1000,
	960, 959, -139, 2302, 139500, 152421, -1000, 140730, 6959, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2438, 3065, 1224, 139500,
	1463, -1000, -1000, 2035, 1377, 1376, 99443, 2431, 2033, 2119,
	152421, 68448, 1089, 68448, 3080, -1000, -1000, 25240, -1000, 159999,
	159999, -1000, 159999, -1000, 82089, 91436, 91436, 139500, -1000, 75905,
	139500, 93281, 1045, 3549, 74037, -139, 1064, 1473, 3447, 1901,
	-153, 722, 139500, -1000, -1000, 2512, 3547, 558, 2758, -1000,
	152421, 1147, 3971, 3541, 717, 4183, 4180, -1000, 110541, 2624,
	2757, -1000, -1000, 140115, 3649, 901, 139500, 1119, 64694, 2257,
	-1000, 71575, 1196, 139500, 2141, 276, -1000, -1000, -1000, 16,
	139500, -1000, 881, -1000, -1000, 1186, 1186, 1064, 69073, -133,
	-1000, 256, 709, 958, 955, -1000, 6220, -1000, -168, -1000,
	91436, 1088, 68448, 3353, -168, 3114, 3343, -1000, -1000, 1111,
	1064, 1470, 3112, 1064, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -9, -1000, 2029, 2118,
	139500, -72, -72, -47, -1000, -1000, 255, -28, -1000, 1092,
	-1000, 1092, -1000, 1092, -1000, -1000, -1000, 159999, -1000, -1000,
	-1000, 1920, 1911, 139500, -1000, 3403, -1000, 139500, -1000, -1000,
	4179, -1000, -1000, 27764, 139500, 110541, 27764, 110541, 3401, 3400,
	-1000, -1000, -1000, 139500, -1000, -1000, 139500, -1000, -1000, -1000,
	-1000, -1000, -1000, 1240, -1000, 2082, 2602, -1000, 707, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2859, -1000,
	-1000, 36176, 1006, -1000, -1000, 110541, -10, -29, 54600, 54600,
	9004, 8962, 54600, 59024, 59024, -1000, 54600, 7984, -1000, -1000,
	-1000, -1000, -1000, 3330, 706, 54600, 84561, 7926, 7083, -1000,
	468, 17150, 1673, -1000, 54600, -1000, 428, -1000, 467, 39372,
	-1000, 157899, -15, -138, -1000, 20785, -64, -140, -1000, -1000,
	866, -1000, 3486, -1000, 54600, 158739, 2823, 2199, 2186, 1942,
	4077, 4119, 24607, -1000, 76530, 1122, 2572, 155107, -1000, -1000,
	-1000, -1000, 84561, 84561, 54600, 54600, -1000, 54600, 54600, 54600,
	-1000, -1000, -1000, 4077, 1024, -1000, -1000, -1000, 1024, -1000,
	-1000, 1587, -1000, 1587, -1000, 54600, -1000, -1000, 3328, 54600,
	-1000, 84561, 84561, 59024, 59024, 59024, 59024, 59024, 59024, 59024,
	59024, 59024, 59024, 59024, 59024, 59024, 59024, 59024, 59024, 59024,
	59024, 59024, 59024, 2904, 59024, 4032, 4032, 4032, 2205, -1000,
	3398, 3328, 54600, 54600, 84561, 465, 464, 458, -1000, 54600,
	-64, -1000, -1000, 9242, 704, -1000, 2846, -1000, 139500, -1000,
	3233, -1000, 54600, -1000, -161, -1000, 2986, -1000, -1000, 3233,
	3233, -141, 159999, 64694, 64694, -1000, 703, 54600, 2932, -1000,
	-1000, 851, -331, -1000, 953, -1000, -1000, -1000, -1000, -1000,
	-1000, 950, -1000, 702, -1000, -1000, -1000, 254, 124085, 697,
	-1000, 139500, 124085, 850, -1000, -143, -1000, -1000, -148, -1000,
	123470, 457, 27764, -1000, 1119, 5645, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2977, -274, 152421, 152421, 2025, 2022, 2021,
	-30, -139, 2591, -1000, 3244, 4118, -1000, 4082, 864, 849,
	219, 4077, 455, 453, 450, -72, 152421, 152421, 2020, 2018,
	2016, 79627, 3327, 152421, -1000, -1000, -1000, 75905, 84561, -1000,
	84561, -1000, -1000, -1000, -1000, 2562, -1000, -1000, -1000, 283,
	-1000, -1000, -1000, -1000, 3058, -1000, -32, -1000, -1000, -1000,
	54600, -1000, 1046, -1000, -1000, 3768, 696, 1374, 1369, -1000,
	-155, -1000, 949, -1000, -1000, -1000, -1000, -1000, 3262, -1000,
	3537, -1000, 2756, -1000, 1203, 2754, 1778, -1000, 54600, 695,
	3071, 694, 692, 4177, 2378, 4174, 1216, 3528, 2562, 3518,
	2562, -1000, -1000, -1000, 1039, -1000, 159999, -165, -1000, 2503,
	-1000, 689, 688, -1000, -33, 1801, 559, 1366, 1110, -1000,
	-1000, 54600, 54600, 122855, -1000, 539, 3774, -13, -1000, -1000,
	-1000, 2011, 1363, 1359, -1000, -1000, -1000, -1000, -1000, 2512,
	2007, 1352, 1349, -1000, -1000, -1000, -1000, -1000, 2753, -1000,
	139500, -1000, 3515, 139500, 3204, 901, 139500, 3774, 3232, 1109,
	-1000, 3452, 3451, 1009, 139500, 54600, 54600, 158419, 158319, -1000,
	1097, -1000, -1000, 54600, -1000, -34, -1000, 1348, 3924, 2750,
	110541, -1000, 2562, 3506, 1345, -1000, 1343, -1000, -1000, -1000,
	3916, 3912, 1340, 1877, 91436, 68448, 2837, -1000, 3896, 2589,
	4049, 3969, 68448, -1000, -1000, -1000, 3457, 3032, 2706, -1000,
	-1000, -1000, 120395, 91436, 91436, -1000, -1000, -1000, 4049, -1000,
	-1000, -1000, -1000, 87049, -1000, -1000, 1131, 139500, 152421, 110541,
	1979, -1000, -1000, 98213, 98828, 139500, 3107, -72, 998, -1000,
	2865, 998, 1089, 3324, -1000, 3003, -1000, -1000, 1095, 448,
	-38, -1000, 1432, 4173, 446, -172, -43, 84561, -1000, -1000,
	-1000, -1000, 2734, 110541, 139500, 1457, 3064, 139500, 139500, 3970,
	-1000, 2626, 737, 110541, 1012, -1000, 4061, -1000, -1000, -1000,
	139500, 38722, 120395, -1000, 3902, 110541, 3968, 3504, 1093, 110541,
	112, 110541, 4098, -1000, -1000, 3967, 110541, 3501, 2619, 2738,
	2897, 901, 92051, 1093, 2563, -56, -1000, 2141, 38072, 3766,
	-174, -1000, -1000, -1000, 1119, 75280, 64694, 54600, 4171, -175,
	-1000, -1000, -1000, -1000, -1000, 91436, 1064, 139500, 139500, 4169,
	91436, 91436, 91436, -45, 687, -1000, 946, 945, 939, -1000,
	-1000, -1000, -1000, -1000, -1000, 937, 936, 935, 934, -1000,
	-1000, 1088, -1000, -1000, -168, 68448, 1088, 68448, 112, -1000,
	2578, -1000, 110541, 68448, -1000, 23974, 139500, 3106, -1000, 86416,
	-1000, -1000, -1000, -1000, -1000, 1092, 4117, -139, -1000, -1000,
	-1000, -1000, 2443, 2685, 2443, 2113, 2112, -1000, -1000, -1000,
	2599, -1000, -1000, -1000, -1000, 2983, 3770, 27764, 3891, 5802,
	54600, 54600, 376, 682, 615, 5802, 54600, 54600, 84561, 12668,
	-177, 54600, 54600, -1000, 54600, 848, 159999, -1000, 4116, 54600,
	445, 444, -1000, -1000, -1000, 4064, -1000, -1000, -1000, 159999,
	54600, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 443, -1000,
	174, -1000, -1000, -1000, 148725, -1000, 54600, 441, 3853, -1000,
	440, 438, 15088, 656, 154988, 154675, 154514, 436, -1000, -1000,
	434, 427, 159999, 3398, 159999, -1000, -1000, 1121, 1121, 1520,
	1520, 1520, 1520, 4032, 721, 816, 535, 910, 910, 910,
	520, 2205, 2205, 910, 910, 910, 2205, 3323, 2905, 686,
	9124, -1000, -1000, 159999, 159999, 426, -1000, -1000, -1000, -64,
	425, 9242, -1000, -1000, 3229, 3846, 159999, -1000, 64694, 3229,
	3229, -1000, -1000, 2894, 139500, 159999, 64694, -1000, 3475, -1000,
	22069, 21430, -1000, 27764, -1000, -1000, -180, -1000, 84561, -1000,
	-1000, -1000, 4061, -1000, 77770, -1000, -1000, 156, -1000, 5645,
	-1000, 933, -1000, -1000, 91436, 91436, 4168, 4166, -1000, 4114,
	4111, 2486, 4110, 3079, -1000, -274, -163, 139500, 139500, 139500,
	-1000, 2582, -1000, 817, 4165, 862, 27764, 405, -1000, -1000,
	-1000, -72, -72, 139500, 139500, 139500, 3321, 110541, 139500, 1811,
	152421, -72, -1000, -1000, -1000, -1000, -1000, -1000, 3716, 159999,
	3397, 3219, 3216, 139500, 139500, -1000, 121625, 37440, 1655, 122240,
	139500, 3493, -1000, 3491, -1000, 1215, 2568, 154286, 65319, -1000,
	65319, 139500, -1000, -1000, -1000, -1000, 2222, 1634, 4163, 1262,
	-1000, 3797, 139500, -1000, 139500, -1000, -1000, -1000, 121625, -1000,
	139500, 139500, 110541, 139500, -1000, 152421, 3463, -182, 159999, -46,
	-1000, 932, -1000, 1541, -1000, 23341, 139500, 152421, 110541, 139500,
	152421, 110541, 3490, 1192, 139500, -1000, 3485, 139500, 1191, -1000,
	-1000, 139500, 2516, -1000, -1000, 3450, -1000, 159999, 157999, 112,
	54600, 3461, -185, 27764, -1000, 4109, 4107, 3484, 3801, -1000,
	139500, 4106, 139500, 110541, 3715, -1000, -1000, -1000, -1000, 931,
	930, 929, 928, 927, 4030, 120395, -1000, 1091, 139500, -1000,
	3031, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2003, 1342, 1334, 2618, 2616, 2580, -47, 2431, 1089,
	-48, 685, -1000, 1089, -1000, 91436, 68448, 4162, 2143, 75905,
	54600, 54600, -1000, 3046, -1000, 117312, 93281, 2623, -1000, -1000,
	684, 139500, 139500, 681, -1000, 112, -1000, 4160, 121625, 680,
	-1000, 2576, -1000, 769, -1000, -1000, 218, -190, 152421, 2512,
	112, 110541, -1000, 558, 1087, 558, 403, -50, -1000, 3482,
	1211, 27764, 110541, 3474, 2901, 901, 92051, -1000, 1456, 2988,
	-1000, -55, -1000, 553, 112, 2563, -1000, -56, 159999, -1000,
	925, 402, -1000, 3714, -1000, -1000, -192, -1000, -1000, 7617,
	7617, 91436, 68448, 91436, 91436, 91436, 68448, 91436, -1000, 1088,
	3966, -1000, -168, -1000, 2733, 1064, 1064, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 27764, 1873, -1000, 665, 659,
	-1000, -1000, -1000, -1000, 3770, 5802, 5802, 54600, 54600, 54600,
	5802, 12668, -193, -1000, 5802, 5802, -64, -1000, -1000, 157899,
	-1000, -1000, -1000, 159999, -1000, 22708, 2492, -1000, 153858, -1000,
	36176, -1000, -1000, 54600, 54600, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 59024, 3319, 655, 84561, -1000, -1000, 401,
	1120, 54600, 56496, 2986, 1120, 1120, -1000, -201, -1000, -1000,
	-1000, 4061, -1000, 4061, 156, -1000, 139500, -1000, -1000, -1000,
	27764, -1000, 91436, -1000, -1000, -1000, -1000, -1000, 4158, 4155,
	2703, 4154, 4153, -1000, -1000, -1000, 3456, -151, -183, -200,
	-1000, 861, -1000, 4152, -1000, -1000, 202, 200, 173, 152421,
	3309, 155, 3097, 3095, -72, -1000, 112, -1000, -1000, -1000,
	-1000, -1000, -1000, 3090, 3965, -1000, 2209, -1000, 139500, 139500,
	-1000, 139500, -1000, 27764, 139500, 3246, 1387, -1000, 1047, 2925,
	653, 59024, 1237, 110541, 1057, 3212, 3207, -1000, 3989, 3844,
	3168, -204, -1000, 139500, 54600, 139500, -206, -211, 2702, -1000,
	-1000, 1236, 1381, 54600, 1233, -1000, -1000, -1000, 84561, 633,
	2562, 2562, -1000, -212, -213, -1000, -1000, -1000, 54600, 1333,
	139500, 36808, -1000, 4150, 3774, -1000, -1000, -1000, -1000, -1000,
	-1000, 139500, 139500, -1000, -1000, -1000, 139500, 3774, 139500, -1000,
	54600, -1000, 157579, 54600, 1321, -1000, -1000, -1000, 4105, 2562,
	27764, 2562, -1000, 2562, 3801, 1260, 91436, 54600, 1684, 68448,
	68448, -1000, -1000, -1000, 2653, -1000, -1000, 139500, 152421, 110541,
	2430, 2430, 3395, -1000, -1000, -1000, 2837, 2837, -1000, -57,
	1089, -1000, 1869, -1000, 159999, 159999, 2454, 4149, -1000, -1000,
	-1000, -1000, 2921, -1000, -1000, -1000, 139500, 2916, 3166, 65319,
	631, 622, 139500, 1076, -1000, -225, 93281, 1045, 1062, -1000,
	73420, -1000, -1000, -1000, -1000, 558, 3963, -1000, 3030, 3962,
	-1000, 4104, 621, 620, 139500, 2615, 618, 27764, 3758, 901,
	92051, -1000, 3649, 2141, -1000, 2729, 139500, 3750, -1000, 2988,
	611, 1064, 601, 1064, -1000, -226, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1452, 1088, -59, -1000, 1026,
	1017, -1000, -1000, -1000, -1000, 110541, 110541, 54600, 54600, -1000,
	5802, 5802, 5802, -1000, 383, -1000, -1000, 2563, 3833, -1000,
	-60, 153813, 153741, 9428, 59024, 84561, -228, -1000, -1000, 139500,
	159999, -61, -1000, 159999, 593, 581, 499, -1000, -1000, -1000,
	616, 20, -1000, -1000, -1000, -1000, 4146, -1000, -1000, -1000,
	152421, 152421, 152421, 4144, -1000, 152421, 152421, 152421, -72, 152421,
	152421, 1999, 1993, -1000, 121010, 139500, -1000, -1000, 1778, 2584,
	-1000, -1000, 139500, 2736, -1000, -1000, -1000, 1081, 54600, 9124,
	59024, 580, 54600, -1000, 579, 577, 3961, 3692, -1000, 3036,
	3306, 2230, 65319, -1000, 3770, -1000, 153156, -1000, 1208, 2299,
	-1000, -1000, -1000, -1000, 159999, 59024, 3801, 65319, -1000, -1000,
	576, 575, 159999, 573, 914, 3305, -1000, -1000, -1000, -1000,
	-139, -139, -1000, -1000, 159999, 112, 159999, 570, 3924, -1000,
	-1000, -1000, -1000, 2562, 110541, -1000, 159999, -1000, -1000, -1000,
	-1000, 907, -1000, -1000, -1000, 1317, -1000, -1000, -1000, -1000,
	-1000, 4143, 3303, 98213, -1000, -231, 2304, 84561, -1000, 1045,
	-1000, -1000, 2623, 568, -1000, 1053, 2878, 2878, -233, 65319,
	65319, -234, 2609, 2964, -1000, 380, 3960, 1062, -1000, 4053,
	-1000, 1119, -1000, 3958, 112, 3712, -1000, 112, -1000, 4098,
	65319, -1000, 110541, 65319, 2614, 2388, 2880, 92051, -1000, 2897,
	-1000, -1000, -236, 139500, 2141, -1000, -1000, 91436, -1000, -1000,
	4056, -1000, 2733, -1000, 139500, -1000, 139500, -1000, -1000, -239,
	-242, -1000, 2401, 54600, 36176, -1000, -1000, 9428, -244, -1000,
	-62, -1000, 3949, 56496, 4141, 4139, 4138, -1000, -1000, -1000,
	-274, -274, -274, -1000, -72, -72, -72, -72, -72, 139500,
	139500, -1000, 2193, -1000, 2734, -1000, -1000, 3473, -1000, 3227,
	566, 153084, 9124, 2850, 139500, 14393, 2512, 2512, -1000, 3948,
	3299, -1000, -1000, 2441, 565, -1000, -1000, -1000, -1000, 1006,
	139500, 1053, 3224, 110541, 9124, 1213, -249, 2443, 2443, 54600,
	35544, 2505, -1000, 54600, -1000, -1000, 3801, 68448, 152421, -1000,
	152421, 2610, -1000, 3265, 5540, -1000, 2609, 139500, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1208, -250, -252, -1000, -1000, 3788, -1000, 3711, 3046, 112,
	-1000, -1000, -1000, 112, -1000, 4137, 1087, 378, -258, 1211,
	-260, 110541, 2202, -1000, 901, -1000, 2901, 1119, 3656, -1000,
	-265, -1000, -1000, -1000, -266, -267, -1000, -1000, 377, 55864,
	55864, 55864, -64, -67, -1000, 139500, 564, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 154, 148, -1000, -1000, 3446, 956,
	-1000, 972, 2179, 374, 1242, 373, 150, -1000, -1000, -1000,
	3168, -1000, 139500, -1000, -1000, -1000, 956, 558, -1000, 54600,
	1208, -268, -1000, 1190, -273, -1000, 1188, -276, -1000, 3295,
	-1000, -284, 2562, -1000, -274, 273, 2430, 1083, 3895, 2549,
	5540, -1000, 4093, 92051, -1000, -1000, -1000, 2867, -285, -1000,
	-1000, 2230, 1208, 2441, 2661, -1000, 2454, 1076, -1000, -1000,
	-1000, -1000, 1208, 556, 2230, 554, 1628, 901, -1000, -1000,
	1587, 3758, 3655, 1512, 1064, -1000, -1000, -1000, 3477, -1000,
	60288, 2621, 2111, 157059, 3477, 3477, -1000, -1000, 152421, 152421,
	139500, 1053, 3872, -1000, 988, 979, 1680, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1119, -295, -1000, 2850, 159999,
	1053, -1000, 2443, 3086, -1000, 2443, 3290, -1000, 2498, -1000,
	-1000, -1000, -1000, 3269, -1000, 2043, 4027, -1000, -1000, 3927,
	54600, -1000, -1000, -1000, -1000, -1000, -1000, 1053, 139500, 2441,
	2230, 1053, 2078, 2074, 4136, 1045, 2609, 2230, 65319, 2441,
	65319, 2432, -1000, 139500, -1000, 2388, 1492, -1000, 1876, -1000,
	-1000, 2086, 3985, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-72, -72, -1000, -1000, 906, -1000, 3681, -1000, 1229, 2296,
	2296, -1000, -1000, 972, -1000, -1000, 552, -1000, 551, -1000,
	152421, 2570, -1000, -1000, -1000, 159999, -1000, -1000, 1053, 2441,
	1119, -1000, 4135, -1000, 2609, -1000, 2441, -297, 1053, -306,
	2520, -1000, -1000, -139, 2202, -1000, 1874, 75280, 2109, -1000,
	-1000, 2551, 55232, 54600, -1000, 4018, -1000, -1000, 2953, -1000,
	3168, 54600, 54600, 273, 72805, 10535, 1119, 1053, 1390, -1000,
	2867, 1053, 1208, 1119, 2230, 1938, 901, 1628, 75280, -281,
	-1000, -1000, -1000, 159999, -1000, -1000, -1000, -1000, -312, -313,
	-1000, -153, 120395, -320, -1000, -1000, -1000, 1390, 1119, -1000,
	1132, -1000, -1000, 1119, 2230, 1390, 2441, -1000, -1000, 2187,
	152421, 2432, -281, -1000, 2441, 1310, -325, -1000, -1000, 1390,
	-1000, 1390, 2441, -1000, 1053, -1000, 1938, -1000, -1000, -1000,
	463, -1000, -1000, -1000, 1053, 1119, -1000, 54600, 1119, 1390,
	-326, 1390, -1000, 2441, -1000, -1000,
}

var sqlPgo = [...]int16{
	0, 4990, 4989, 28, 4988, 4987, 4986, 4985, 4984, 4980,
	4977, 4976, 4974, 4972, 4970, 4969, 164, 4967, 4966, 4965,
	4963, 4962, 4960, 4959, 4958, 4957, 4956, 4955, 4953, 4952,
	4951, 4950, 4949, 4947, 4946, 4945, 4944, 4942, 4941, 4939,
	4938, 4937, 4935, 4933, 4932, 4931, 4930, 4929, 4926, 4924,
	4923, 4922, 4921, 4920, 4919, 4917, 4916, 4915, 4914, 4911,
	4910, 4907, 4906, 4905, 4904, 4902, 4899, 4896, 4895, 4894,
	4893, 4892, 4889, 4887, 4886, 4885, 4883, 4882, 4880, 4879,
	4877, 4875, 4874, 4872, 65, 4871, 4870, 4869, 4868, 4867,
	4866, 4863, 4860, 4858, 4857, 4856, 4855, 4854, 4853, 4852,
	4851, 4850, 4848, 4847, 4846, 4843, 4842, 77, 4841, 323,
	4839, 4837, 4836, 4833, 4832, 4831, 4830, 4829, 4828, 4827,
	4824, 4823, 4821, 4820, 322, 4818, 17, 197, 4816, 4815,
	20, 4813, 4812, 321, 4811, 4810, 4809, 4808, 4807, 328,
	4804, 4803, 4801, 4800, 4798, 363, 4797, 4795, 4794, 4793,
	4791, 4789, 103, 169, 4788, 4787, 1772, 4786, 4783, 4781,
	4780, 4779, 4778, 4775, 306, 309, 4774, 4773, 4772, 302,
	205, 4771, 318, 4769, 4768, 4767, 4762, 4760, 4759, 4758,
	4756, 4754, 4753, 4752, 4751, 4750, 4749, 4748, 4747, 4746,
	4745, 4744, 4728, 4723, 4722, 4720, 4719, 4717, 4712, 4709,
	4707, 4705, 4704, 4703, 4702, 4701, 4697, 4696, 4694, 4693,
	4689, 4688, 4685, 4684, 4678, 4677, 300, 255, 137, 4674,
	4673, 4672, 4670, 4669, 4661, 317, 315, 4660, 4659, 4658,
	4657, 4656, 3900, 4655, 4654, 4653, 4651, 4649, 4647, 4646,
	4645, 4644, 136, 10, 63, 4643, 4642, 107, 104, 105,
	94, 125, 121, 4641, 4640, 144, 4639, 154, 141, 4638,
	143, 127, 33, 29, 259, 299, 7183, 290, 4636, 4635,
	4634, 288, 239, 4631, 287, 4629, 4628, 4627, 4625, 4624,
	4621, 82, 64, 249, 4618, 171, 4616, 4615, 168, 202,
	222, 217, 213, 212, 147, 66, 126, 102, 71, 55,
	19, 92, 257, 25, 263, 6, 8, 310, 4613, 308,
	13, 173, 16, 42, 4612, 4611, 4609, 4608, 4298, 138,
	4606, 314, 291, 207, 4605, 4603, 4602, 1011, 4601, 4598,
	59, 304, 192, 99, 131, 139, 156, 4597, 191, 211,
	46, 4596, 298, 78, 4588, 4585, 120, 111, 10690, 10486,
	4583, 4582, 140, 106, 170, 5033, 228, 179, 242, 110,
	157, 201, 196, 4581, 123, 4578, 176, 178, 214, 407,
	4577, 95, 4576, 3935, 113, 219, 190, 7134, 4574, 4573,
	4572, 101, 4571, 122, 4569, 4566, 79, 22, 2, 1,
	174, 44, 48, 3, 4565, 39, 152, 62, 43, 4564,
	38, 4561, 4560, 4556, 4555, 58, 4554, 57, 210, 4553,
	4550, 326, 4549, 109, 61, 155, 4548, 35, 270, 4547,
	279, 153, 4546, 4545, 230, 238, 240, 216, 258, 4539,
	96, 281, 4538, 4537, 4529, 4523, 4521, 327, 160, 11,
	159, 4519, 4518, 185, 4516, 68, 286, 241, 4514, 70,
	4510, 4509, 215, 75, 172, 324, 199, 274, 150, 278,
	232, 282, 4505, 4504, 4503, 226, 4502, 4501, 271, 204,
	4499, 4495, 269, 333, 115, 56, 7, 208, 98, 284,
	90, 236, 195, 4494, 247, 163, 4493, 177, 4492, 116,
	4491, 325, 220, 260, 53, 15, 9, 118, 130, 4490,
	5, 283, 193, 250, 149, 4489, 8308, 2908, 3390, 280,
	4488, 187, 146, 87, 165, 194, 313, 97, 4487, 4486,
	3448, 4485, 4484, 4483, 4482, 229, 4477, 4476, 261, 183,
	180, 4474, 182, 254, 4473, 124, 80, 67, 31, 148,
	108, 320, 145, 276, 227, 301, 4472, 4468, 4467, 224,
	4466, 73, 132, 248, 4465, 246, 307, 76, 4464, 181,
	4463, 188, 3356, 83, 189, 4462, 273, 4461, 4460, 4459,
	4457, 4456, 4455, 4453, 2684, 285, 4451, 4449, 4448, 52,
	235, 4447, 233, 198, 237, 86, 74, 234, 112, 4817,
	167, 206, 243, 69, 4, 4445, 158, 4444, 4217, 85,
	4443, 0, 14637, 11730, 14815, 4442, 4440, 11822, 4439, 5766,
	4438, 4437, 4436, 265, 84, 4434, 4433, 4432, 133, 4431,
	100, 4430, 4429, 93, 4428, 36, 24, 30, 41, 37,
	900, 861, 4426, 4425, 51, 162, 26, 4424, 319, 275,
	4422, 4421, 4420, 4418, 119, 4417, 54, 4416, 50, 4414,
	4413, 60, 23, 40, 4412, 4411, 251, 200, 3848, 203,
	184, 4409, 142, 4407, 4404, 297, 89, 161, 4403, 4402,
	312, 256, 253, 114, 4401, 303, 4400, 244, 4399, 72,
	34, 4398, 4394, 289, 134, 129, 81, 294, 166, 49,
	4392, 4391, 4383, 4372, 225, 4370, 4367, 4365, 4363, 4362,
	128, 175, 4354, 91, 4350, 4349, 4348, 47, 252, 223,
	4346, 14, 4344, 4343, 4341, 272, 268, 311, 221, 262,
	4340, 4334, 209, 4332, 4331, 4325, 305, 4323, 4321, 3896,
	334, 4318, 45, 4317, 4316, 4314, 32, 4313, 4312, 245,
	3635, 4309, 4308, 12, 4305, 231,
}

var sqlR1 = [...]int16{
	0, 1, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 4, 4, 4, 4, 4,
	4, 4, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 8,
	8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
	14, 14, 10, 10, 10, 10, 11, 11, 11, 11,
	11, 63, 63, 12, 12, 12, 12, 12, 12, 12,
	12, 12, 12, 12, 12, 12, 12, 12, 12, 20,
	20, 20, 20, 20, 20, 42, 44, 43, 37, 37,
	38, 38, 39, 40, 40, 45, 47, 46, 48, 49,
	49, 50, 50, 50, 13, 13, 13, 9, 9, 9,
	9, 9, 9, 9, 9, 9, 23, 23, 51, 51,
	24, 24, 53, 53, 25, 25, 54, 54, 670, 670,
	670, 671, 671, 672, 672, 672, 28, 56, 58, 58,
	477, 477, 21, 22, 22, 22, 22, 673, 673, 673,
	673, 41, 29, 57, 34, 34, 34, 34, 34, 245,
	245, 245, 245, 27, 27, 52, 52, 291, 291, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 669,
	669, 293, 293, 292, 278, 278, 279, 279, 280, 280,
	674, 674, 294, 294, 294, 295, 295, 17, 17, 17,
	17, 17, 17, 17, 17, 17, 17, 563, 563, 563,
	594, 594, 594, 594, 596, 596, 721, 721, 722, 722,
	722, 722, 722, 155, 155, 451, 451, 451, 72, 72,
	72, 72, 72, 659, 659, 247, 247, 247, 249, 249,
	248, 248, 248, 248, 248, 248, 248, 248, 96, 96,
	97, 97, 286, 286, 285, 285, 285, 285, 285, 285,
	285, 680, 680, 679, 717, 717, 678, 678, 681, 681,
	681, 246, 246, 246, 93, 93, 114, 114, 151, 151,
	151, 151, 151, 151, 151, 151, 152, 152, 153, 153,
	690, 690, 690, 250, 250, 250, 252, 252, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 257, 19, 19, 134, 134, 134, 134,
	134, 134, 134, 129, 129, 598, 598, 599, 599, 241,
	241, 242, 242, 242, 242, 243, 243, 244, 244, 244,
	87, 87, 254, 254, 256, 256, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
	74, 74, 74, 74, 74, 74, 74, 74, 74, 75,
	75, 75, 75, 75, 76, 76, 76, 76, 76, 76,
	77, 77, 77, 77, 77, 77, 78, 78, 85, 85,
	85, 85, 85, 85, 85, 85, 218, 218, 88, 88,
	88, 88, 88, 88, 88, 88, 88, 88, 88, 88,
	88, 88, 92, 92, 92, 92, 92, 103, 691, 691,
	692, 692, 710, 696, 696, 697, 697, 700, 700, 700,
	701, 701, 701, 701, 701, 709, 709, 709, 709, 709,
	703, 702, 704, 704, 705, 705, 707, 707, 707, 707,
	707, 708, 708, 708, 708, 708, 708, 708, 708, 708,
	708, 708, 708, 708, 708, 708, 708, 708, 695, 711,
	712, 712, 713, 713, 714, 714, 714, 122, 122, 716,
	716, 715, 715, 698, 698, 699, 699, 67, 706, 706,
	724, 724, 68, 69, 70, 71, 693, 693, 723, 723,
	723, 723, 723, 723, 723, 723, 723, 723, 723, 723,
	723, 723, 723, 723, 723, 725, 725, 726, 726, 727,
	727, 727, 727, 727, 727, 727, 727, 727, 727, 727,
	727, 727, 727, 727, 727, 727, 727, 727, 90, 90,
	90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
	90, 90, 90, 90, 90, 90, 104, 104, 409, 409,
	372, 372, 105, 105, 105, 106, 106, 107, 107, 89,
	89, 89, 656, 656, 657, 663, 728, 728, 554, 554,
	553, 553, 109, 109, 450, 450, 110, 110, 110, 110,
	110, 110, 111, 111, 111, 111, 111, 111, 111, 111,
	111, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 120, 120, 120, 120,
	120, 121, 121, 121, 118, 118, 118, 115, 115, 115,
	113, 113, 113, 119, 119, 119, 662, 358, 358, 117,
	117, 117, 116, 116, 116, 425, 425, 426, 428, 427,
	123, 123, 123, 123, 373, 124, 124, 124, 124, 124,
	124, 124, 124, 127, 127, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 556, 556,
	5, 5, 284, 284, 283, 283, 283, 283, 6, 6,
	6, 289, 289, 288, 287, 125, 125, 125, 518, 518,
	130, 130, 130, 466, 466, 131, 131, 131, 131, 131,
	132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
	132, 154, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 666, 666,
	418, 418, 321, 321, 321, 321, 143, 143, 143, 143,
	144, 144, 144, 144, 145, 145, 227, 227, 161, 161,
	161, 161, 160, 160, 160, 160, 160, 160, 160, 160,
	79, 79, 79, 80, 80, 81, 81, 82, 82, 83,
	83, 84, 84, 84, 84, 84, 164, 164, 33, 33,
	33, 33, 165, 165, 718, 718, 167, 163, 163, 163,
	163, 163, 163, 163, 162, 162, 166, 166, 166, 166,
	168, 170, 170, 170, 170, 170, 169, 169, 169, 169,
	169, 171, 171, 588, 588, 436, 436, 586, 586, 610,
	610, 587, 587, 379, 379, 379, 379, 379, 380, 380,
	380, 597, 597, 597, 597, 597, 597, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 228, 228, 228, 229, 229,
	234, 234, 235, 235, 235, 236, 236, 236, 233, 233,
	233, 230, 230, 231, 231, 232, 232, 232, 232, 232,
	232, 232, 232, 232, 232, 239, 239, 237, 237, 238,
	238, 730, 730, 729, 729, 240, 240, 240, 240, 240,
	199, 199, 199, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 437, 437, 202, 202,
	202, 186, 186, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 253, 253, 253, 253, 253, 179, 179, 179,
	179, 179, 179, 179, 179, 180, 180, 180, 174, 174,
	188, 188, 188, 188, 188, 181, 181, 182, 182, 182,
	183, 183, 183, 183, 210, 210, 185, 185, 185, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 175, 175,
	175, 175, 190, 190, 190, 190, 473, 473, 473, 216,
	216, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 213, 213, 213,
	213, 213, 213, 682, 682, 683, 683, 683, 206, 206,
	206, 206, 206, 206, 534, 534, 200, 200, 200, 200,
	205, 205, 205, 205, 208, 208, 208, 208, 456, 456,
	197, 197, 197, 198, 198, 198, 203, 203, 215, 204,
	410, 410, 201, 201, 207, 207, 207, 207, 209, 209,
	209, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 177, 177, 177, 177, 178, 178, 178, 178, 211,
	211, 196, 196, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 731, 731, 192, 192, 192, 191,
	191, 191, 191, 194, 194, 195, 195, 195, 195, 195,
	195, 195, 193, 184, 214, 664, 664, 660, 660, 660,
	660, 660, 660, 660, 660, 660, 660, 658, 658, 658,
	658, 658, 658, 658, 658, 658, 661, 661, 661, 661,
	661, 665, 665, 135, 135, 135, 135, 135, 135, 135,
	146, 146, 146, 146, 146, 146, 146, 149, 149, 136,
	136, 136, 136, 136, 136, 136, 139, 139, 137, 137,
	137, 137, 138, 138, 98, 98, 98, 98, 98, 18,
	18, 18, 99, 99, 312, 312, 262, 262, 262, 397,
	397, 263, 263, 387, 387, 387, 387, 258, 258, 259,
	259, 260, 261, 261, 100, 100, 732, 732, 732, 675,
	675, 675, 676, 676, 676, 676, 676, 676, 381, 381,
	382, 382, 498, 498, 498, 498, 498, 385, 385, 385,
	386, 386, 386, 386, 386, 386, 386, 386, 386, 395,
	396, 396, 388, 388, 394, 393, 393, 392, 392, 391,
	391, 389, 390, 390, 390, 399, 399, 398, 401, 401,
	400, 497, 619, 619, 621, 621, 621, 621, 621, 621,
	621, 623, 623, 623, 623, 623, 623, 623, 623, 623,
	623, 623, 623, 623, 623, 623, 623, 623, 474, 474,
	733, 733, 734, 735, 617, 617, 617, 618, 613, 613,
	614, 614, 614, 614, 614, 383, 383, 384, 384, 384,
	384, 615, 616, 416, 416, 538, 620, 620, 622, 622,
	624, 736, 736, 736, 736, 736, 736, 737, 737, 737,
	496, 496, 495, 495, 494, 494, 407, 407, 625, 625,
	625, 625, 626, 626, 626, 626, 626, 629, 628, 627,
	627, 627, 627, 627, 102, 102, 102, 453, 453, 452,
	452, 454, 454, 454, 454, 454, 454, 454, 454, 454,
	454, 454, 454, 454, 454, 454, 454, 454, 454, 223,
	223, 324, 324, 324, 95, 95, 95, 15, 15, 15,
	15, 15, 15, 15, 339, 339, 16, 16, 16, 16,
	677, 677, 677, 101, 101, 101, 101, 101, 101, 405,
	405, 405, 323, 323, 323, 323, 323, 323, 323, 323,
	323, 323, 323, 323, 323, 323, 323, 323, 323, 323,
	323, 323, 323, 323, 323, 323, 323, 323, 668, 668,
	667, 667, 325, 325, 739, 739, 108, 108, 108, 108,
	108, 108, 108, 108, 557, 557, 558, 558, 94, 94,
	94, 94, 94, 475, 475, 472, 472, 471, 471, 415,
	415, 536, 536, 536, 537, 329, 329, 330, 330, 281,
	281, 281, 476, 476, 476, 36, 35, 26, 26, 30,
	30, 31, 31, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 32, 32, 60, 60, 60, 60, 61, 61,
	61, 61, 64, 64, 65, 65, 59, 59, 59, 59,
	62, 62, 55, 55, 66, 66, 66, 66, 66, 684,
	686, 686, 685, 685, 689, 689, 689, 689, 689, 689,
	687, 687, 360, 360, 688, 688, 719, 719, 720, 720,
	142, 142, 147, 147, 147, 147, 147, 148, 148, 148,
	148, 150, 150, 150, 150, 159, 159, 219, 219, 219,
	219, 219, 219, 219, 73, 73, 86, 86, 157, 741,
	741, 741, 158, 158, 158, 220, 220, 220, 220, 221,
	221, 222, 222, 740, 740, 322, 322, 491, 491, 492,
	492, 742, 742, 493, 493, 493, 493, 493, 315, 314,
	316, 316, 317, 317, 91, 91, 91, 303, 303, 302,
	305, 305, 304, 306, 306, 307, 307, 300, 300, 600,
	600, 309, 309, 309, 310, 310, 296, 296, 297, 297,
	298, 298, 299, 299, 313, 313, 595, 595, 743, 743,
	133, 133, 133, 226, 226, 371, 371, 371, 484, 484,
	484, 408, 408, 336, 336, 490, 490, 490, 490, 490,
	449, 449, 449, 225, 225, 423, 423, 439, 439, 440,
	440, 550, 550, 441, 140, 140, 141, 141, 156, 156,
	266, 266, 264, 264, 264, 264, 264, 264, 264, 264,
	271, 271, 272, 272, 273, 273, 274, 275, 275, 275,
	275, 429, 429, 276, 276, 276, 265, 265, 265, 267,
	267, 267, 267, 267, 267, 267, 270, 270, 270, 270,
	277, 277, 277, 269, 269, 636, 636, 636, 638, 638,
	640, 640, 639, 639, 635, 635, 637, 637, 738, 738,
	455, 455, 455, 404, 406, 402, 402, 403, 403, 413,
	413, 411, 412, 412, 414, 414, 535, 535, 535, 282,
	282, 282, 446, 446, 446, 446, 447, 447, 480, 480,
	478, 478, 478, 478, 479, 479, 481, 481, 481, 482,
	482, 483, 483, 443, 443, 444, 444, 445, 445, 445,
	445, 514, 514, 268, 268, 268, 420, 420, 420, 421,
	421, 504, 504, 504, 504, 504, 504, 504, 504, 504,
	504, 504, 505, 505, 503, 503, 503, 503, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 540, 541, 541,
	422, 422, 542, 487, 487, 488, 488, 485, 485, 486,
	486, 489, 489, 654, 654, 654, 655, 655, 533, 533,
	543, 543, 543, 543, 543, 543, 529, 529, 530, 530,
	531, 531, 532, 532, 551, 552, 552, 459, 459, 459,
	459, 457, 457, 460, 460, 460, 460, 460, 458, 458,
	544, 544, 544, 544, 448, 448, 224, 224, 545, 545,
	545, 545, 546, 547, 547, 548, 548, 499, 500, 500,
	559, 559, 559, 559, 561, 419, 419, 419, 419, 419,
	612, 611, 611, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 575, 575, 575, 575, 575, 575, 575, 575,
	575, 575, 575, 575, 575, 575, 575, 575, 575, 575,
	575, 575, 575, 575, 575, 575, 575, 575, 575, 575,
	575, 575, 575, 575, 576, 576, 576, 576, 576, 576,
	576, 562, 562, 562, 562, 562, 566, 566, 566, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	567, 567, 572, 572, 573, 573, 573, 568, 569, 574,
	574, 574, 574, 744, 744, 578, 578, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 564, 564, 564, 571,
	571, 571, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 467, 467, 469, 469, 506,
	506, 506, 506, 506, 506, 506, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 506, 506, 506, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	508, 508, 508, 508, 509, 509, 509, 509, 509, 509,
	509, 509, 509, 509, 509, 509, 509, 509, 509, 509,
	509, 509, 509, 509, 509, 509, 509, 509, 509, 630,
	630, 630, 630, 630, 630, 630, 630, 510, 510, 633,
	633, 634, 634, 631, 631, 631, 631, 631, 631, 631,
	631, 631, 631, 631, 631, 631, 631, 631, 631, 631,
	631, 631, 631, 631, 631, 631, 632, 632, 632, 632,
	632, 632, 632, 632, 632, 632, 632, 632, 632, 632,
	632, 632, 632, 632, 632, 632, 632, 632, 632, 632,
	632, 632, 632, 632, 632, 632, 632, 632, 632, 632,
	632, 632, 632, 632, 641, 641, 642, 642, 644, 644,
	645, 645, 646, 647, 647, 647, 648, 649, 649, 643,
	643, 650, 650, 650, 650, 651, 651, 652, 652, 652,
	652, 652, 653, 653, 653, 653, 653, 520, 520, 521,
	521, 527, 527, 527, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 376, 378,
	378, 377, 326, 326, 326, 326, 326, 326, 434, 434,
	432, 432, 432, 435, 435, 433, 433, 431, 431, 430,
	430, 517, 517, 515, 515, 519, 519, 461, 461, 577,
	577, 577, 577, 577, 577, 577, 577, 462, 462, 462,
	470, 463, 463, 464, 464, 464, 464, 464, 511, 512,
	465, 465, 465, 513, 513, 522, 526, 526, 525, 524,
	524, 523, 523, 501, 501, 502, 502, 442, 442, 745,
	745, 438, 438, 549, 549, 549, 549, 606, 606, 375,
	375, 424, 424, 374, 374, 366, 366, 367, 367, 367,
	367, 417, 417, 528, 528, 579, 579, 580, 580, 581,
	581, 582, 582, 583, 584, 585, 516, 516, 347, 346,
	333, 334, 345, 344, 343, 332, 335, 340, 341, 342,
	337, 338, 354, 353, 352, 301, 308, 359, 361, 361,
	364, 364, 365, 363, 362, 362, 349, 350, 351, 555,
	331, 368, 368, 369, 369, 369, 370, 370, 370, 370,
	327, 327, 328, 328, 355, 355, 356, 357, 357, 348,
	348, 348, 318, 318, 318, 319, 319, 320, 320, 593,
	593, 590, 590, 590, 591, 591, 591, 694, 592, 592,
	592, 592, 589, 589, 589, 589, 589, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 605, 605, 605, 605, 605,
	605, 605, 605, 605, 605, 605, 605, 605, 605, 605,
	605, 605, 605, 605, 607, 607, 607, 607, 607, 607,
	607, 607, 607, 607, 607, 607, 607, 607, 607, 607,
	607, 607, 607, 607, 607, 607, 607, 607, 607, 607,
	607, 607, 607, 607, 607, 607, 607, 607, 607, 607,
	607, 607, 607, 607, 607, 607, 607, 607, 607, 607,
	607, 607, 607, 607, 607, 607, 607, 607, 602, 602,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 604, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 609,
	609,
}

var sqlR2 = [...]int8{
	0, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 3, 1, 1, 1, 3, 1, 1, 1, 1,
	3, 4, 6, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 6, 4, 4, 6, 9,
	6, 8, 4, 4, 5, 9, 7, 9, 5, 6,
	8, 7, 7, 9, 1, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 4, 6, 4, 6,
	6, 9, 6, 9, 6, 5, 6, 5, 1, 1,
	1, 1, 1, 1, 0, 1, 6, 6, 4, 6,
	2, 1, 4, 8, 7, 10, 9, 4, 4, 4,
	3, 4, 4, 4, 7, 7, 9, 8, 9, 5,
	3, 5, 7, 4, 12, 4, 12, 1, 3, 5,
	5, 2, 5, 3, 6, 4, 4, 4, 6, 5,
	6, 5, 6, 4, 8, 3, 8, 4, 2, 3,
	10, 3, 6, 4, 3, 1, 3, 4, 4, 2,
	1, 1, 3, 1, 3, 2, 4, 3, 2, 3,
	2, 0, 1, 1, 0, 2, 0, 7, 10, 6,
	8, 6, 6, 6, 9, 4, 3, 2, 2, 0,
	1, 1, 1, 1, 1, 3, 1, 3, 6, 4,
	6, 7, 9, 6, 2, 2, 3, 0, 8, 6,
	8, 7, 2, 0, 1, 2, 5, 0, 1, 3,
	3, 1, 3, 1, 3, 3, 3, 3, 12, 3,
	5, 4, 1, 3, 3, 3, 3, 2, 4, 4,
	4, 1, 1, 2, 1, 4, 1, 0, 3, 3,
	0, 4, 6, 0, 6, 4, 4, 4, 5, 7,
	6, 8, 7, 9, 8, 2, 1, 3, 1, 3,
	3, 3, 0, 2, 5, 0, 1, 3, 3, 3,
	3, 1, 1, 1, 1, 1, 1, 3, 3, 3,
	3, 1, 1, 1, 3, 3, 6, 4, 9, 7,
	12, 9, 2, 7, 2, 1, 1, 1, 3, 3,
	0, 3, 1, 3, 1, 1, 3, 2, 5, 0,
	7, 5, 2, 0, 1, 2, 3, 1, 1, 2,
	2, 2, 2, 1, 2, 3, 3, 4, 3, 3,
	1, 2, 1, 2, 1, 2, 1, 2, 2, 3,
	3, 3, 3, 3, 3, 5, 3, 3, 5, 3,
	3, 5, 3, 3, 5, 3, 4, 3, 6, 6,
	6, 6, 6, 8, 4, 4, 1, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 6, 3, 8, 5, 3, 12, 2, 0,
	1, 0, 1, 1, 0, 1, 3, 1, 3, 3,
	3, 3, 2, 2, 1, 1, 1, 1, 2, 1,
	1, 1, 1, 0, 1, 2, 2, 2, 1, 1,
	1, 4, 5, 1, 1, 1, 1, 3, 3, 2,
	2, 1, 2, 2, 2, 2, 1, 1, 1, 2,
	1, 1, 3, 0, 1, 4, 0, 4, 6, 1,
	3, 2, 1, 3, 2, 1, 3, 5, 1, 2,
	1, 0, 6, 6, 6, 8, 1, 0, 4, 3,
	3, 4, 3, 4, 4, 4, 7, 3, 3, 4,
	3, 3, 3, 3, 3, 1, 0, 1, 0, 4,
	3, 3, 3, 3, 3, 6, 4, 4, 4, 3,
	5, 3, 3, 3, 3, 3, 3, 3, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 4, 1,
	2, 1, 2, 1, 2, 1, 7, 3, 2, 0,
	1, 3, 3, 1, 0, 1, 2, 2, 1, 6,
	10, 5, 1, 3, 3, 1, 1, 0, 2, 0,
	2, 0, 9, 3, 2, 0, 2, 2, 2, 2,
	2, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 4, 6, 5, 7,
	3, 4, 6, 3, 4, 6, 3, 5, 7, 3,
	4, 6, 3, 4, 6, 3, 1, 1, 3, 4,
	6, 3, 3, 5, 3, 1, 3, 1, 1, 1,
	2, 2, 2, 2, 1, 2, 2, 5, 3, 3,
	6, 6, 3, 1, 1, 1, 1, 2, 1, 1,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 2, 1, 1, 2, 1, 1, 1, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 1, 2, 1, 2, 1, 3,
	4, 3, 1, 2, 3, 2, 2, 2, 4, 6,
	3, 1, 2, 2, 7, 5, 7, 2, 3, 0,
	3, 5, 2, 3, 0, 2, 3, 2, 3, 2,
	7, 4, 7, 8, 8, 9, 11, 11, 11, 6,
	2, 6, 9, 4, 7, 7, 10, 7, 10, 10,
	10, 13, 10, 13, 5, 8, 5, 2, 2, 1,
	1, 3, 1, 1, 1, 1, 1, 2, 1, 2,
	2, 3, 2, 2, 4, 3, 2, 2, 1, 2,
	1, 3, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 3, 5, 4, 6, 4, 3, 0, 1,
	3, 2, 4, 2, 4, 1, 6, 3, 4, 4,
	3, 4, 1, 1, 1, 1, 5, 4, 5, 3,
	3, 2, 2, 6, 3, 3, 3, 3, 4, 4,
	3, 1, 3, 3, 2, 2, 1, 3, 3, 3,
	1, 2, 1, 1, 2, 2, 3, 1, 1, 1,
	1, 1, 3, 2, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 2,
	1, 1, 1, 2, 1, 2, 2, 2, 9, 2,
	1, 0, 1, 1, 0, 1, 2, 0, 2, 2,
	0, 2, 2, 2, 2, 1, 2, 3, 3, 4,
	4, 4, 4, 3, 3, 1, 1, 1, 0, 1,
	1, 1, 0, 1, 1, 3, 3, 3, 3, 3,
	2, 3, 3, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 2, 2, 3, 6, 8,
	3, 3, 3, 4, 8, 6, 4, 5, 5, 5,
	5, 3, 0, 1, 1, 1, 1, 4, 4, 3,
	4, 4, 3, 4, 4, 1, 4, 4, 5, 3,
	5, 5, 5, 7, 3, 3, 3, 5, 7, 4,
	2, 6, 4, 3, 2, 3, 4, 4, 3, 5,
	3, 6, 5, 6, 3, 5, 6, 3, 5, 3,
	5, 3, 3, 4, 4, 5, 0, 1, 1, 1,
	1, 3, 2, 3, 4, 3, 4, 3, 5, 3,
	4, 4, 3, 4, 5, 3, 4, 3, 4, 4,
	5, 3, 3, 1, 1, 0, 2, 3, 5, 4,
	6, 4, 6, 4, 1, 0, 3, 4, 4, 5,
	7, 5, 3, 3, 3, 4, 4, 5, 2, 0,
	4, 2, 3, 4, 2, 3, 3, 3, 7, 5,
	2, 0, 3, 3, 4, 3, 3, 3, 5, 3,
	3, 3, 4, 4, 4, 4, 4, 4, 4, 4,
	3, 4, 5, 4, 4, 5, 6, 5, 5, 2,
	3, 2, 3, 6, 6, 7, 9, 7, 9, 4,
	3, 4, 4, 5, 1, 1, 10, 10, 3, 5,
	5, 5, 3, 5, 6, 4, 4, 5, 5, 2,
	6, 3, 2, 5, 4, 2, 0, 1, 1, 1,
	1, 2, 3, 2, 2, 3, 2, 1, 1, 1,
	1, 3, 2, 2, 2, 2, 2, 2, 2, 2,
	1, 2, 0, 1, 2, 1, 2, 1, 2, 2,
	1, 2, 1, 2, 1, 2, 2, 4, 3, 3,
	7, 3, 3, 7, 3, 3, 3, 3, 3, 3,
	3, 3, 4, 3, 3, 6, 5, 8, 3, 6,
	6, 3, 12, 15, 1, 0, 1, 2, 3, 0,
	2, 0, 4, 0, 4, 5, 4, 1, 1, 1,
	3, 3, 1, 3, 10, 13, 0, 2, 3, 1,
	1, 0, 1, 2, 2, 2, 2, 1, 1, 0,
	1, 3, 1, 1, 1, 2, 3, 3, 3, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	1, 0, 1, 0, 1, 1, 0, 1, 4, 1,
	0, 3, 7, 7, 1, 1, 3, 7, 1, 3,
	11, 3, 2, 0, 3, 1, 2, 2, 3, 2,
	6, 2, 1, 2, 2, 3, 6, 4, 2, 3,
	5, 5, 5, 2, 5, 5, 2, 2, 2, 0,
	1, 1, 3, 4, 11, 12, 10, 5, 3, 1,
	5, 9, 7, 11, 3, 3, 0, 2, 4, 3,
	3, 1, 6, 1, 3, 1, 2, 0, 1, 2,
	3, 0, 1, 3, 3, 2, 2, 1, 1, 1,
	4, 0, 3, 0, 4, 0, 3, 0, 2, 2,
	2, 0, 1, 1, 2, 2, 0, 3, 3, 2,
	1, 1, 2, 2, 5, 8, 4, 1, 0, 1,
	2, 2, 1, 2, 3, 3, 2, 2, 3, 2,
	2, 2, 2, 2, 3, 1, 2, 3, 1, 4,
	2, 3, 2, 2, 4, 7, 3, 4, 6, 5,
	7, 5, 5, 3, 3, 0, 2, 2, 2, 2,
	1, 1, 1, 8, 10, 11, 8, 11, 5, 4,
	2, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 0, 3, 3, 0, 1, 8, 11, 3, 6,
	6, 5, 3, 4, 1, 0, 1, 3, 17, 20,
	16, 19, 4, 2, 0, 1, 0, 1, 0, 1,
	3, 2, 4, 2, 3, 1, 0, 2, 0, 1,
	1, 0, 2, 1, 0, 9, 6, 6, 8, 6,
	8, 5, 7, 2, 6, 7, 4, 4, 5, 2,
	4, 6, 6, 8, 6, 7, 8, 9, 6, 7,
	8, 9, 6, 8, 6, 8, 6, 7, 8, 9,
	6, 8, 6, 8, 6, 6, 8, 8, 4, 7,
	3, 0, 7, 10, 1, 1, 1, 1, 1, 2,
	3, 0, 3, 0, 3, 0, 1, 0, 2, 0,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 1, 2, 1,
	2, 1, 2, 1, 3, 2, 2, 2, 2, 1,
	1, 0, 2, 4, 2, 1, 2, 1, 2, 3,
	2, 2, 2, 1, 0, 2, 1, 1, 0, 1,
	3, 1, 0, 1, 1, 1, 1, 1, 2, 3,
	2, 2, 1, 2, 15, 17, 3, 1, 0, 4,
	1, 0, 4, 1, 0, 2, 2, 3, 0, 1,
	1, 4, 4, 5, 1, 0, 3, 0, 3, 0,
	3, 0, 3, 0, 4, 0, 3, 0, 1, 0,
	6, 7, 3, 6, 3, 1, 3, 1, 1, 4,
	2, 1, 3, 1, 3, 4, 8, 11, 7, 10,
	2, 2, 0, 10, 3, 2, 0, 1, 3, 1,
	1, 3, 3, 5, 6, 4, 5, 4, 1, 1,
	3, 3, 1, 2, 4, 4, 2, 3, 5, 5,
	1, 3, 1, 0, 1, 2, 3, 2, 4, 2,
	3, 0, 2, 0, 2, 1, 2, 1, 1, 1,
	2, 1, 2, 1, 2, 1, 8, 8, 8, 2,
	4, 4, 4, 2, 2, 2, 2, 3, 1, 3,
	1, 2, 6, 7, 1, 0, 1, 0, 1, 0,
	1, 1, 0, 1, 5, 1, 0, 1, 0, 1,
	0, 3, 3, 5, 1, 3, 3, 4, 5, 2,
	2, 0, 2, 2, 1, 1, 1, 0, 1, 0,
	2, 2, 5, 4, 2, 3, 1, 1, 1, 1,
	1, 1, 1, 3, 0, 1, 3, 1, 3, 3,
	3, 2, 0, 4, 2, 5, 3, 2, 0, 1,
	3, 3, 5, 1, 1, 1, 1, 1, 1, 1,
	3, 5, 1, 3, 2, 4, 4, 0, 4, 4,
	3, 4, 1, 5, 3, 4, 5, 5, 1, 5,
	1, 3, 2, 3, 0, 1, 3, 0, 3, 1,
	3, 1, 2, 0, 2, 3, 1, 3, 2, 0,
	3, 5, 6, 4, 6, 4, 3, 2, 1, 0,
	3, 2, 1, 0, 5, 1, 0, 2, 2, 2,
	1, 1, 0, 1, 1, 1, 1, 0, 4, 2,
	1, 2, 2, 4, 1, 3, 2, 2, 1, 2,
	3, 2, 4, 1, 0, 1, 0, 2, 1, 0,
	2, 5, 7, 2, 1, 2, 4, 3, 5, 0,
	1, 3, 5, 1, 2, 1, 1, 1, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 4, 6,
	6, 1, 1, 1, 1, 1, 3, 5, 0, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 2, 1,
	3, 0, 5, 4, 1, 2, 1, 4, 1, 1,
	2, 1, 1, 1, 1, 1, 0, 1, 2, 5,
	1, 4, 2, 5, 1, 4, 3, 3, 0, 1,
	2, 4, 1, 1, 1, 1, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 1, 0, 1, 4, 1,
	3, 3, 3, 5, 2, 2, 2, 2, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 3, 3, 3, 2, 2, 3, 5, 4,
	6, 3, 5, 4, 6, 4, 6, 5, 7, 3,
	3, 3, 3, 3, 4, 3, 2, 4, 2, 3,
	3, 4, 3, 4, 3, 4, 5, 6, 6, 7,
	6, 7, 6, 7, 3, 4, 4, 1, 3, 1,
	3, 3, 2, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 3, 5, 6, 6, 7,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 6,
	1, 1, 1, 1, 1, 1, 2, 1, 5, 5,
	6, 3, 1, 1, 1, 2, 2, 2, 4, 3,
	5, 6, 8, 6, 5, 4, 3, 2, 2, 4,
	1, 1, 1, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 6, 6, 8, 8, 6,
	4, 6, 6, 6, 4, 1, 3, 3, 3, 3,
	3, 4, 3, 3, 4, 3, 3, 4, 3, 3,
	4, 3, 3, 3, 3, 3, 4, 3, 4, 3,
	4, 3, 4, 4, 3, 6, 5, 5, 5, 4,
	4, 3, 4, 3, 5, 0, 5, 0, 2, 0,
	1, 3, 3, 2, 2, 0, 6, 1, 0, 3,
	0, 3, 3, 3, 0, 1, 4, 2, 2, 2,
	2, 2, 3, 2, 2, 3, 0, 4, 1, 1,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 4, 1, 1, 1, 2, 1, 2, 2, 3,
	1, 2, 3, 2, 3, 2, 3, 1, 0, 1,
	3, 1, 3, 3, 3, 1, 3, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 3, 1,
	2, 3, 0, 3, 3, 2, 2, 1, 2, 2,
	3, 2, 1, 1, 1, 5, 1, 2, 4, 2,
	0, 1, 0, 3, 5, 1, 0, 1, 2, 1,
	0, 1, 3, 3, 2, 1, 1, 1, 1, 1,
	3, 1, 3, 3, 1, 1, 1, 1, 5, 3,
	1, 1, 3, 1, 1, 1, 1, 2, 2, 1,
	1, 2, 2, 1, 1, 1, 3, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 3, 1, 3, 1, 0, 1, 1, 1, 1,
	1, 1, 1, 3, 5, 7, 1, 7, 5, 3,
	1, 1, 1, 1, 1, 1, 1, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 0, 3, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1,
}

var sqlChk = [...]int16{
	-1000, -1, -2, 664, -3, -220, -126, -123, -87, -85,
	-130, -131, -110, -132, -125, -154, -159, -140, -141, -142,
	-155, -161, -219, -228, -229, -230, -231, -240, -224, -221,
	-222, -4, -72, -74, -88, -109, -111, -124, -134, -133,
	-135, -143, -151, -146, -129, -79, -156, -160, -172, -223,
	-225, -226, 33, 32, 107, 85, 166, 138, 148, 219,
	418, 470, 482, 435, 153, 458, 440, -166, -167, 504,
	-73, -86, -158, -157, 78, 139, 183, 322, 450, 588,
	53, 158, -7, -15, -33, -19, 30, 49, -75, -76,
	-77, -78, 67, -95, -90, -104, -96, -89, -92, -93,
	-723, 110, -637, -112, -116, -150, -114, -727, 174, 240,
	-136, -137, -138, 400, -144, -145, 461, -147, -148, -149,
	464, 175, -81, -80, 168, -264, -266, -163, -162, -164,
	-227, -173, -174, -175, -176, -177, -178, -180, -181, -183,
	-210, -184, -185, -186, -187, -188, -189, -193, -213, -190,
	-191, -192, -195, -194, -196, -201, -197, -198, -199, -200,
	-202, -203, -205, -206, -207, -208, -209, -211, -212, 510,
	-204, -214, -182, -215, 578, 527, 87, 474, 21, -8,
	-9, -10, -11, -12, -13, -14, -18, -17, -66, -5,
	-6, -20, -97, -91, -94, -98, -99, -100, -108, -101,
	-102, -103, -636, -113, -115, -118, -120, -121, -117, -119,
	-122, 459, 635, -267, -265, 661, 640, 595, -179, -23,
	-28, -24, -25, -27, -29, -26, -30, -31, -32, -51,
	-56, -53, -54, -52, -55, -57, -58, -59, -60, -61,
	-62, -63, -64, -65, -35, -41, -42, -36, -37, -38,
	-39, -40, -43, -44, -45, -46, -47, -48, -49, -50,
	-21, -22, -34, -67, -68, -70, -69, -71, 622, 631,
	-270, -268, -269, -277, 496, 603, 550, 664, 664, 664,
	664, 664, 664, 664, 664, 664, 664, 664, 664, 664,
	664, 664, 664, 664, 664, 664, 664, 664, 664, 664,
	664, 664, 664, 664, 664, -373, 2, -349, -355, -356,
	-357, -348, -318, -604, -609, 4, -601, -607, 182, 250,
	360, 21, 22, 24, 23, 25, 26, 27, 28, 30,
	31, 41, 43, 44, 45, 47, 48, 49, 50, 51,
	52, 53, 57, 59, 63, 64, 65, 66, 67, 68,
	69, 73, 78, 79, 84, 85, 86, 87, 88, 89,
	90, 91, 97, 94, 95, 96, 98, 99, 101, 103,
	104, 105, 106, 107, 108, 109, 111, 112, 113, 115,
	116, 117, 125, 126, 127, 128, 129, 131, 138, 132,
	139, 142, 136, 141, 137, 143, 144, 146, 147, 148,
	151, 152, 153, 155, 156, 157, 159, 160, 161, 163,
	164, 166, 167, 168, 171, 169, 172, 170, 173, 174,
	175, 176, 177, 180, 188, 189, 190, 195, 197, 198,
	199, 201, 202, 205, 206, 207, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 220, 224, 226, 227, 228,
	229, 230, 231, 232, 238, 239, 240, 242, 243, 244,
	245, 246, 251, 252, 253, 257, 259, 265, 266, 271,
	267, 272, 273, 275, 279, 280, 281, 282, 283, 284,
	285, 287, 289, 288, 293, 291, 295, 296, 299, 300,
	301, 302, 303, 304, 308, 309, 305, 310, 311, 313,
	314, 317, 315, 318, 319, 316, 320, 323, 324, 325,
	326, 327, 328, 329, 330, 331, 332, 333, 334, 321,
	322, 337, 335, 339, 340, 341, 342, 343, 358, 353,
	354, 355, 347, 348, 344, 349, 345, 346, 350, 351,
	357, 352, 362, 363, 364, 365, 368, 236, 258, 370,
	371, 374, 376, 393, 379, 380, 381, 384, 385, 388,
	391, 392, 394, 395, 396, 397, 398, 399, 400, 401,
	402, 403, 405, 406, 408, 409, 410, 412, 413, 414,
	416, 418, 419, 421, 422, 423, 425, 426, 427, 428,
	429, 430, 431, 432, 434, 435, 437, 436, 438, 440,
	442, 443, 444, 450, 451, 458, 452, 454, 455, 456,
	457, 459, 460, 461, 462, 463, 464, 468, 466, 467,
	469, 470, 472, 473, 474, 475, 476, 478, 480, 481,
	485, 486, 489, 487, 507, 508, 530, 482, 483, 484,
	488, 490, 491, 492, 493, 495, 494, 499, 497, 498,
	500, 501, 502, 504, 506, 509, 510, 512, 513, 514,
	515, 516, 517, 518, 521, 523, 524, 525, 526, 527,
	528, 549, 529, 531, 535, 536, 537, 538, 532, 533,
	548, 540, 541, 542, 543, 545, 546, 551, 552, 553,
	554, 555, 556, 558, 559, 561, 569, 582, 570, 571,
	572, 573, 575, 578, 579, 580, 581, 567, 583, 584,
	587, 588, 589, 593, 590, 594, 591, 592, 595, 597,
	600, 601, 602, 609, 607, 608, 610, 611, 613, 614,
	612, 616, 617, 618, 623, 624, 626, 627, 628, 37,
	54, 55, 58, 60, 62, 74, 75, 76, 80, 133,
	134, 165, 178, 179, 191, 208, 209, 221, 223, 233,
	234, 235, 256, 260, 261, 263, 269, 292, 367, 369,
	386, 390, 407, 411, 415, 417, 433, 477, 505, 519,
	534, 539, 562, 563, 564, 565, 574, 576, 603, 604,
	605, 615, 625, -373, 2, -349, 377, -342, 2, -318,
	-318, 418, 29, 2, 29, 406, 498, 553, 555, 2,
	-666, -418, 546, 2, 29, -321, -318, 110, 219, 496,
	-342, 2, -666, 219, -418, 26, 546, 2, -318, 2,
	391, 177, 205, 23, 28, 71, 82, 105, 151, 176,
	200, -726, 393, 426, 480, 500, 548, 559, 575, 2,
	608, 314, 497, 550, 250, 128, 580, 488, -677, 485,
	486, 391, 424, 472, 222, 596, -322, 2, 482, -318,
	314, 2, 664, 101, 79, 477, 501, -169, 2, 304,
	570, -170, -171, -168, 562, -588, 488, 472, 337, -318,
	664, 664, 664, 29, -331, 2, -318, -331, 2, -232,
	2, -331, -729, -239, -238, -237, 22, 451, 190, 285,
	203, 241, 342, 421, 201, 51, -232, 2, 550, 250,
	488, 128, 546, -353, 653, -355, -740, 2, 570, -740,
	2, 664, 664, 2, 550, 397, 608, 497, 128, 430,
	250, 580, 49, 151, 28, 205, 73, 556, 639, 488,
	-677, 636, 637, 314, 135, -659, 2, -658, 4, -607,
	-601, -367, -366, 550, 556, 128, -357, -348, 653, -356,
	664, 664, 664, 664, 2, 272, 273, 428, 427, 501,
	502, 29, 664, 664, 664, 664, 664, 485, 177, 2,
	176, -691, 23, 28, 71, 100, 105, 135, 200, 393,
	426, 500, 548, 552, 559, 575, -676, 529, 73, 488,
	-675, -677, 382, 314, 580, 151, -471, 128, 304, 217,
	589, 555, 553, 586, 142, 259, 592, 591, 664, 664,
	664, -127, 2, 661, 33, 32, -126, -130, 153, 504,
	-257, 550, 264, 2, -318, 664, 664, 664, 2, 272,
	273, 485, 486, 29, 664, 664, 203, -658, 546, 2,
	664, 664, 664, 2, 29, 272, 273, 485, 486, 264,
	2, 73, 491, 664, 664, 664, 664, 664, 664, 664,
	664, 664, 664, 664, 664, 664, 664, 664, 664, 664,
	664, 664, 664, 664, 664, 664, 664, 664, 664, 664,
	664, 664, 664, 664, 664, 664, 664, 664, 664, 664,
	664, 2, -217, 501, 529, 229, 50, 49, 79, 29,
	425, 84, 398, 129, 135, 160, 581, 220, 546, 250,
	251, 280, 100, 101, -473, 47, 273, 73, 272, 486,
	-682, 485, -534, 551, 490, 498, 545, 91, 285, 482,
	570, 572, 110, 597, 473, 628, 430, 431, 543, 444,
	540, 305, 169, 204, 4, 128, 337, 472, 503, 289,
	288, 582, 562, 304, 481, 401, 89, 664, -738, 2,
	550, 570, 2, -740, 2, -740, 2, -741, 570, 625,
	664, 664, 664, 664, 664, 664, 664, 664, 664, 664,
	664, 664, 664, 664, 664, 664, 664, 664, 664, 664,
	664, -265, -267, -266, 664, 664, 664, 664, 664, 664,
	664, -217, 501, 2, 79, 29, 29, -411, -413, 585,
	262, 162, 383, -264, -266, 2, -636, 582, 501, -586,
	2, -506, -610, -508, 651, 652, 644, 547, 72, -377,
	359, 629, -520, 135, 586, 377, -609, -509, -522, 165,
	393, 477, -435, 8, 9, 5, 6, 7, -327, -510,
	-516, 577, 181, 366, -370, 665, 10, 661, -633, -266,
	-521, 38, 223, 70, -590, -369, -328, -562, 263, -368,
	-348, -630, -631, 4, -601, -602, -591, -565, -573, -569,
	-570, -576, -318, -604, 82, 119, 120, 118, 123, 122,
	307, 306, 124, 121, 503, 596, 71, 37, 233, 234,
	269, 367, 235, 80, -632, 152, -603, 260, 261, 519,
	55, 433, 191, 134, 133, 369, 60, 58, 604, -574,
	130, 562, 563, 564, 565, 208, 209, 62, 178, 179,
	390, 415, 539, 574, 576, 221, 292, 46, 114, 204,
	255, 237, 268, 270, 274, 294, 297, 338, 356, 361,
	387, 389, 471, 511, -744, 605, 534, 74, 75, 196,
	-638, 436, -639, -342, -638, 664, 664, 666, 664, -402,
	-404, -406, 2, 29, 149, 661, 2, -539, 2, -540,
	-544, -266, 286, -543, 661, -541, 659, -349, 378, -634,
	478, -630, -631, -327, -348, -369, 4, -601, -603, 663,
	-407, 661, 128, 488, 550, 83, 250, 100, 176, 205,
	-466, 661, -318, 29, 377, 566, 666, -666, -418, -403,
	423, -518, 661, 377, 380, 203, 380, -666, 64, 98,
	-716, 233, 2, -715, -355, 318, 2, 2, 2, 2,
	2, 233, -318, 550, 127, 284, 2, 2, 2, 2,
	2, 2, 2, -427, 233, 2, -425, -355, 608, -428,
	233, 2, -425, -426, 233, 2, -425, -472, 2, 93,
	-332, 233, 2, -318, -358, 233, 2, -353, -364, 233,
	2, -361, -318, -596, 233, 2, -594, 4, -601, 124,
	503, -506, 2, -156, 2, 64, -318, 608, 2, 507,
	2, 661, -169, 2, 76, 570, 46, 501, -170, 2,
	-492, 2, -493, -314, -315, -316, -551, -317, 271, 422,
	432, 632, 140, 359, 628, -718, 203, 643, 566, -586,
	-586, -586, -436, 663, -234, 57, -331, -730, -729, -730,
	-584, 29, -579, 8, -580, 651, 652, -584, -584, -730,
	-730, 2, 2, 2, 2, 2, -491, -492, 2, -544,
	233, -349, 2, -346, -589, 4, -601, -607, -602, -608,
	-604, 29, 32, 33, 34, 36, 38, 39, 40, 42,
	61, 70, 71, 77, 81, 83, 93, 100, 110, 118,
	119, 121, 120, 122, 123, 124, 135, 140, 145, 149,
	150, 154, 158, 162, 181, 183, 196, 200, 203, 219,
	222, 225, 241, 254, 262, 264, 286, 290, 298, 306,
	307, 359, 366, 372, 377, 378, 382, 383, 404, 420,
	439, 465, 496, 503, 522, 544, 550, 560, 566, 568,
	577, 585, 586, 596, 598, 606, 619, 620, 621, 622,
	-609, 82, 2, -544, 233, 2, -352, 233, -544, -355,
	2, -332, 2, -506, -670, 558, 172, 452, 2, -374,
	233, -349, -351, -355, -353, 2, 485, -598, 2, -593,
	10, -592, 5, 4, -601, -607, -602, 2, 2, -715,
	-506, 2, -509, 2, -520, 29, -361, 2, -594, 233,
	2, 29, 29, 608, 423, 264, 566, 666, -424, -366,
	-367, -585, 4, 8, -417, -318, 663, -506, 2, -156,
	-139, 2, 196, -506, 233, 2, -156, 233, 2, -506,
	233, 2, -156, 233, 2, -318, 2, -678, 2, -717,
	-598, 233, 98, 233, -318, 2, 205, -725, 480, 579,
	318, 2, 2, 575, 2, 105, 550, 127, 2, 2,
	2, 2, 2, 2, 2, 550, -337, 2, -318, 196,
	-553, 264, -361, 233, -362, 2, 497, -739, 436, -594,
	233, 2, 456, 608, -353, 233, 2, -353, 250, 266,
	-332, 233, 2, 555, 553, 555, 553, 203, 2, 264,
	2, 264, 2, -545, 2, -546, -540, -547, 659, 378,
	-556, 2, -555, -592, 603, -127, 661, -127, 661, 501,
	661, -598, -349, -349, -506, 2, -156, -139, 2, -506,
	2, -156, 2, -318, 2, -153, -598, -152, 661, 203,
	597, -318, 2, -506, 2, -156, -139, 2, -506, 2,
	-156, 2, -257, 196, 2, 128, 550, -217, 2, 196,
	598, 2, 8, 2, 241, -253, -598, 490, 188, 431,
	601, 2, 507, 2, 508, 79, -473, 628, 79, 203,
	2, 203, 2, -456, 2, 622, 423, 203, 2, 2,
	-664, 2, 377, 220, 203, 2, 203, 2, 203, 2,
	203, 2, 203, 2, -216, 502, 571, 549, 427, 273,
	2, -156, 619, -139, 273, 272, -506, 619, 2, -683,
	196, 486, -506, 2, 569, 282, 170, 203, -456, 2,
	203, 2, 203, 2, 5, 2, 43, 428, 530, 2,
	271, 422, 530, 2, 528, 2, -349, 550, 608, 497,
	128, 205, 29, 2, 485, 177, 2, 2, 94, 95,
	203, 2, 203, 2, 218, 203, 2, 444, 203, 550,
	-437, 663, -437, 628, 2, -448, -544, -491, 566, -411,
	-413, -217, 507, 2, -271, -446, -273, 196, -478, -479,
	-274, 298, 183, 372, -275, -455, 29, 149, -455, -455,
	64, 662, 662, -718, 582, 11, 12, 81, 43, 651,
	652, 653, 654, 194, 655, 656, 649, 650, 648, 641,
	642, 646, 277, 278, 102, 645, 643, 92, 312, 479,
	184, 185, 186, 187, 453, 248, 35, 249, 14, 15,
	16, -377, 34, 382, 297, 629, 237, 511, 644, 17,
	18, 19, 268, 270, 361, 54, 241, -326, 393, -376,
	547, 72, -506, -506, -506, -506, -506, -506, -506, -506,
	389, 661, -442, -501, 659, -266, 661, 661, 661, 661,
	-585, -266, -506, -520, 662, -433, 661, -266, -520, -515,
	661, 477, 659, 661, -523, -506, 5, 5, 5, 661,
	663, -641, 623, 196, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	417, -567, 661, -566, 661, -566, -566, 609, -564, 661,
	631, 624, 661, -564, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 609, 556, 666,
	-638, -487, 661, 661, -438, -549, -506, 653, -438, -438,
	377, -430, -506, 114, -459, 274, 338, 204, 294, 471,
	255, -503, 665, -503, -533, 631, -266, -541, -348, -266,
	-543, 661, -539, -533, -128, -585, -109, -124, -133, -156,
	-172, -225, -226, 653, -349, 661, 203, 661, 663, -589,
	203, -417, -332, -361, -349, -368, -369, -374, -343, -318,
	2, 2, 148, -430, -660, 580, 488, 29, 4, -607,
	-601, -367, 497, -366, 550, 128, 177, 205, -596, -321,
	566, 39, -517, -559, -560, -612, 665, -611, -562, -572,
	-568, -571, 407, 411, -591, 58, 604, -574, 263, 4,
	-601, -603, 260, 261, 519, 55, 433, 191, 134, 133,
	369, 60, 562, 563, 564, 565, 208, 209, 62, 605,
	534, 74, 75, -660, 580, 488, 29, 497, 196, -596,
	196, 203, -596, 2, -598, 2, -294, 666, 69, 462,
	165, -698, 661, 2, 165, 2, 2, 2, -318, -294,
	165, 666, -427, 233, -294, 165, -294, 165, -375, 233,
	-374, -294, 165, -294, 666, 165, -294, 666, 165, 663,
	666, 165, -596, 2, -472, -588, -430, 39, -492, 2,
	135, 4, 5, -742, 666, 296, -380, 311, 358, 228,
	378, 626, 370, 140, -597, 5, 4, -516, -528, 135,
	304, 263, -579, -581, 9, -582, 651, 652, -587, -586,
	117, 663, -589, -235, 258, 41, -331, -331, -730, -730,
	8, 8, -730, -730, -331, -331, -291, 454, 504, 392,
	-290, 25, 30, 153, 252, 343, 601, 171, -392, 253,
	459, -389, 397, 165, 523, 590, -670, -673, 484, 558,
	172, 452, 96, 370, 504, 392, 454, 165, -452, -454,
	39, 126, 343, 391, 65, 244, 316, 317, 527, 460,
	615, 165, 504, 392, 454, 392, -16, -307, 25, 153,
	-309, -302, 504, 30, -673, 106, 454, 640, 635, 459,
	403, 542, 420, -673, -670, 291, -672, 618, 357, -293,
	523, 590, -670, -477, -673, 484, 454, -292, 359, 616,
	-394, -389, 397, 165, 665, 25, 153, 454, 504, 392,
	-721, -722, 30, -585, 2, -289, 241, -288, 25, -706,
	454, 504, 392, -693, -708, 343, 66, 467, 533, 239,
	526, 617, 177, 495, 293, 359, 108, 478, 541, 394,
	-284, -283, 25, 153, 504, 593, -165, -145, -164, 459,
	504, -165, 2, 454, 392, -667, -339, -635, 241, 622,
	165, -339, -339, -544, 233, -687, 196, 2, -680, -152,
	287, 5, 10, -598, -152, -424, 666, 666, -589, 653,
	486, 485, 165, 165, 165, 165, 273, 196, 359, -717,
	2, 359, 622, -710, -355, -726, 2, 2, 2, 2,
	2, 2, 2, -349, 233, -409, 377, -656, -657, -728,
	550, -244, 622, -598, 359, 46, -352, 233, 2, -355,
	608, -667, 359, -675, -354, 233, -349, 39, 661, 359,
	2, -472, 2, 250, -635, 359, -545, -371, -349, -540,
	-371, 504, -342, 39, -503, -349, 662, 666, -556, -556,
	-598, -244, 203, 661, -257, 622, 622, 273, -552, 666,
	-551, 241, -599, -598, -153, -598, 457, 203, 273, -598,
	-656, -332, 2, -349, 2, 550, 275, -152, 203, 241,
	-244, -598, -598, -598, -598, -588, 29, 508, 2, -216,
	502, 571, 95, 508, 2, -349, 550, 128, 250, 85,
	-687, 196, 2, -318, -665, 196, -661, 472, 488, 580,
	-660, -665, -349, 128, -349, 128, -349, 128, -349, -349,
	2, 2, 2, 2, 2, 90, 2, -156, -506, 2,
	90, 2, 49, 524, -683, 196, 2, 569, 2, 569,
	2, -318, -318, -318, 372, 529, 296, 622, -349, -349,
	-352, -350, -355, -355, 490, 551, 581, 486, 177, -506,
	2, 98, -731, 2, 203, 196, 2, 550, 250, 550,
	250, 128, 203, 79, 128, 29, 203, 550, 483, 663,
	4, -294, 666, -322, -271, -446, -588, -447, -446, -272,
	-271, -274, 196, 432, 591, 343, 509, 279, -479, -478,
	29, -506, -483, 190, 342, -506, -481, -508, 651, 652,
	-580, -582, -429, 370, -265, -265, -265, -414, -535, -506,
	420, 250, -587, -718, -561, -559, -559, -347, -589, 562,
	-506, -506, -506, -506, -506, -506, -506, -506, -506, -506,
	-506, -506, -506, -506, -506, -506, -506, -506, -506, -506,
	-506, -506, -506, -506, -506, -506, -506, -506, -506, -506,
	-506, -506, -506, -506, -506, -506, 297, 237, 511, 54,
	241, -506, 566, -506, -506, -506, -506, 335, 359, 366,
	577, 181, 587, 149, 370, -745, 544, 42, -513, -266,
	-434, 661, -527, 36, 522, 29, -520, 661, 2, -501,
	-506, -502, -378, -376, -318, 651, 652, 653, 654, 655,
	656, 641, 642, 643, 14, 15, 16, 646, 650, 648,
	649, 194, 102, 645, 312, 479, 92, 184, 185, 186,
	187, 277, 278, 17, 18, 19, 35, 644, -431, -430,
	-430, 662, 606, 29, 149, 653, 2, 662, 666, 39,
	662, -506, -431, -519, -515, -430, -526, -525, 619, -467,
	-468, 627, 321, 131, 231, 319, -469, 493, -583, 8,
	-589, 653, -642, 189, 222, 661, 662, 2, 662, 2,
	662, -506, 2, 662, -506, 2, 662, -506, 2, 662,
	-506, 2, 662, 2, 662, 2, -506, -506, -506, -506,
	-506, -506, -506, -430, 8, -583, -583, 562, 562, -583,
	-583, -583, -575, 407, 408, 409, 410, 299, 300, 301,
	302, 411, 412, 413, 414, 327, 328, 329, 330, 323,
	324, 325, 326, 331, 332, 333, 334, 213, 214, 215,
	216, 209, 210, 211, 212, -575, -461, 2, -577, -430,
	4, 627, 321, 131, 231, 319, 493, 5, -461, 2,
	-462, 2, -506, -430, -463, -507, -508, 651, 652, 644,
	-377, -464, 2, -506, -431, -506, 61, 290, 568, -465,
	-506, 203, -430, -430, 2, -430, 2, -509, 2, -639,
	39, -488, -318, -430, -420, 666, 203, 39, -606, 4,
	-605, 44, 66, 108, 137, 144, 177, 239, 257, 267,
	293, 394, 466, 467, 495, 526, 541, 573, 617, 505,
	-420, -420, 661, 662, 666, -460, 226, 315, 310, 266,
	-460, -539, -459, 274, -457, 387, -457, -457, -533, -333,
	659, 668, -589, -533, -530, -529, 39, -342, 384, -533,
	-533, 663, 662, -532, -531, 39, -342, 660, -654, 661,
	664, 664, 664, 664, 664, -349, 661, -430, -589, 663,
	531, 2, 662, 268, 268, 268, 268, 268, 377, 478,
	662, 566, -662, -358, -364, 498, 551, 206, -424, 666,
	-424, -417, 98, -716, 622, -596, -126, 379, 662, 666,
	-419, 38, 659, 663, -583, 2, 2, -578, 609, 661,
	661, -468, 661, 203, -662, -364, 551, 498, 206, 2,
	-666, 546, -418, -596, 566, -715, -716, -699, 662, -701,
	-709, -694, -703, 241, 386, 256, 606, -590, -559, 4,
	-601, -318, 2, -427, -355, -294, 165, -428, -426, -294,
	666, 165, -332, -353, -358, -361, -364, -318, -594, -596,
	-294, -354, -718, 662, 570, -493, -379, 432, 521, 455,
	499, 546, 9, 9, 666, -589, -236, 487, 343, -331,
	-331, -331, -331, 666, -719, 100, 566, 83, 661, 488,
	-311, 305, 566, -497, 233, 83, -613, 100, -335, -614,
	-318, 77, 586, 420, 200, 163, -719, 100, 420, -719,
	100, 2, 252, 100, 504, 529, 661, 29, 64, -544,
	43, 43, 29, -671, -672, 291, 203, 628, 550, 250,
	488, 566, 566, -544, -454, -559, 126, 316, 317, 64,
	-584, -584, 64, -584, -584, -584, 622, -584, 622, -352,
	-544, 488, 566, 566, 566, 442, 540, 442, 540, 494,
	-302, -304, -170, 494, 540, 305, 566, 566, -170, 29,
	-217, 463, 135, -743, 643, 442, 291, -672, 566, 203,
	666, 43, 43, 29, -671, 203, 566, 616, -374, -333,
	602, 45, 602, 45, 602, 566, 45, 488, 566, 666,
	45, -286, -285, 504, -288, -598, -287, 341, -724, -708,
	462, 504, 566, 488, 566, 144, 377, 366, 495, 137,
	267, 293, -528, -528, -318, -283, -656, -656, -243, -242,
	-318, 5, -417, 79, 566, 566, -16, 504, -668, -323,
	113, 349, 309, 350, 104, 346, 103, 345, 111, 347,
	112, 348, 610, 362, 611, 363, 68, 344, 320, 351,
	525, 352, 614, 364, -324, -325, 156, 399, 600, 128,
	-594, -16, -16, 504, 392, 454, 165, -688, 241, 29,
	-677, 241, -552, 241, -552, -366, -318, 663, -156, -506,
	-506, -156, -506, -156, 49, 165, 39, 165, 2, 661,
	284, 661, -383, 359, 203, -417, -553, 666, -349, 39,
	-243, 381, 165, -594, -453, -452, 359, -354, 233, 2,
	165, -739, -407, 359, 159, 661, 430, 2, 165, -334,
	233, -319, -318, -472, -296, 554, 165, -450, 598, -484,
	-156, 661, 135, 39, -484, -439, -440, -550, -441, -335,
	661, -342, -503, -127, -555, 662, 662, 662, -257, -408,
	-336, -335, 127, 434, 434, -250, 622, -152, -153, 662,
	666, -552, 241, 532, -153, -598, -244, -244, -552, -552,
	-349, 196, -598, -152, -244, -244, -244, -244, 2, 2,
	2, 2, -456, -349, -332, -374, -349, -360, 241, 29,
	663, -596, -596, -364, -365, -363, -318, -358, -456, -332,
	-456, -332, -456, -332, -456, -456, -156, -506, 529, 2,
	501, 196, 196, 663, -456, 8, -410, 465, 5, 2,
	99, -598, 2, 430, 128, 550, 397, 250, -349, -374,
	-349, -374, -332, 128, -332, 129, 128, -349, 4, -544,
	-447, -272, 378, 279, 509, -481, -482, -508, 477, 478,
	-482, 477, 478, 8, 9, 8, 9, -276, 513, 365,
	-426, 666, -281, 40, 145, 279, -349, -587, 628, 161,
	-506, -506, 566, -745, 544, -513, 161, -506, 335, 366,
	577, 181, 587, 149, 370, 203, 661, -507, -507, 662,
	-432, -506, -506, 660, 670, 662, 663, 662, -413, 666,
	-411, -506, -430, -430, 662, 663, -430, -417, 660, 660,
	666, 662, -524, -525, 154, -506, 566, 566, 566, 566,
	661, 662, 663, -647, 388, 661, 661, -506, 662, 662,
	662, 662, 39, 666, 666, 666, 662, 666, 666, 666,
	662, 662, 662, 666, 662, 628, 628, 662, 662, 662,
	662, 666, 662, 666, 662, 203, 662, 662, -470, 404,
	662, 11, 12, 651, 652, 653, 654, 194, 655, 656,
	649, 650, 648, 641, 642, 643, 92, 312, 479, 14,
	15, 16, -377, 268, 241, -507, -507, -507, -507, 662,
	-511, -512, 203, 196, 39, -465, -465, -465, 662, 203,
	-430, 662, 662, 661, -640, 314, 359, 662, 666, 662,
	-500, -499, 620, -549, -421, 2, -539, -344, -589, -500,
	-500, -430, -506, 274, 274, -458, 598, 377, -460, -539,
	-530, -585, -505, -504, 198, 40, 145, 353, 354, 355,
	236, 199, -530, -342, -487, -530, -530, -589, -533, -342,
	-485, 661, -533, -529, 662, -655, -585, 662, -422, -542,
	-634, -413, 663, -589, -254, -635, -218, 5, 366, -218,
	-218, -218, -218, -349, -596, 566, 566, 241, 241, 241,
	-424, -417, 26, -686, 622, 405, -559, 659, 660, 8,
	-589, 661, -583, -583, -583, -596, 203, 203, 241, 241,
	241, 377, -666, 203, -594, -294, 662, 666, -694, -703,
	-709, -703, 386, 2, -294, -427, -294, -294, -374, -375,
	-294, -294, -294, -451, 622, -586, -492, 584, 88, 432,
	562, -586, 125, 487, -290, 454, 504, -335, -335, -349,
	-261, -260, -258, -318, 5, -359, -318, 217, 443, -594,
	359, -497, 233, -295, 359, 233, -343, -559, 661, -474,
	624, 279, 279, 598, -335, -343, 279, 233, -335, 233,
	-343, 2, -343, -669, 432, 371, -506, -259, -258, 64,
	-390, 303, 430, 360, -291, 454, 504, 392, -156, -156,
	-156, 661, -718, 598, 148, -349, -374, -349, -359, -594,
	-354, 504, 392, 454, 356, -368, -584, -584, -584, -452,
	504, 392, 454, -359, -594, -352, -594, -301, 233, -318,
	442, -301, 233, 442, 442, 442, 442, 217, 443, 488,
	-332, 442, 628, 48, -743, 566, 203, -506, -506, -292,
	-156, -156, -156, 661, -333, -293, -477, 454, 5, 233,
	-335, 5, -335, 233, 5, -318, -335, -359, -594, -722,
	25, 153, -335, 666, 283, 264, 622, -679, 204, 485,
	437, -289, 643, -318, -359, -594, 377, 366, 377, 137,
	267, -244, 666, 643, 643, -359, -594, -323, 399, -680,
	366, 5, 10, 594, -332, -667, -339, 488, 566, 566,
	-544, -684, -685, 219, 470, 488, 473, -596, -152, -247,
	622, -152, -241, 245, 653, -659, -598, -598, -318, -696,
	-697, -700, -701, -318, -381, -384, -382, -335, -498, -497,
	-617, -618, -613, 297, 250, 586, 266, 182, 100, -262,
	-263, 624, 622, 165, -372, -349, 659, -244, -657, -554,
	182, 496, 661, -361, -362, 165, -407, 359, -594, 608,
	39, 165, 661, 2, 2, -353, 377, 359, -334, 233,
	-297, 155, -743, -332, -500, -421, -449, -490, 465, 377,
	-408, 603, -342, -449, -423, 666, 203, 643, 663, -408,
	-548, 653, -127, -127, -244, 661, -598, 662, 666, 663,
	661, 643, 643, -252, 381, -251, 157, 281, 265, 515,
	516, 517, 518, 147, 514, 132, 340, 246, 556, 489,
	607, -552, -598, -250, -153, 203, -552, 241, 203, -82,
	622, -244, 550, 241, -244, 665, 488, 473, -318, 663,
	-456, -456, -456, 501, 501, -318, 196, -417, 2, -345,
	-589, -332, -349, -346, -374, 196, 196, -332, -332, 591,
	-482, 378, 308, -535, -282, 630, -349, 665, -506, -506,
	161, 161, -506, -507, -507, -506, 161, 203, 661, -506,
	-517, 34, 34, 662, 666, -502, -506, -376, 662, 606,
	-413, -413, 662, 653, -589, 665, 662, -515, 158, -506,
	560, 321, 231, 319, -469, 319, -469, -469, -583, 5,
	-589, 653, -648, -338, 661, -318, 620, -412, 383, 662,
	-561, -559, -506, -506, -506, -506, -506, -583, -564, -564,
	-579, -579, -506, -511, -506, -561, -559, -507, -507, -507,
	-507, -507, -507, -507, -507, -507, -507, -507, -507, -507,
	-507, -507, -507, -507, -507, -507, -507, 149, 359, 370,
	-507, -512, -511, -506, -506, -559, 662, 662, 662, -430,
	-126, 661, 314, -318, -443, 222, -506, -552, 666, -443,
	-443, 662, -539, -539, 661, -506, 274, 660, 666, 669,
	643, 643, -487, 663, -529, -485, -486, -489, -318, -530,
	660, 662, 666, 662, 666, -532, 662, -589, -500, -256,
	-255, 146, 57, 115, 143, 366, 374, 202, 227, 429,
	161, 197, 155, 268, -686, -596, -596, 488, 488, 488,
	380, 219, 5, 8, 659, 660, 663, -583, 662, 662,
	662, -596, -596, 488, 488, 488, -660, 580, 488, 29,
	203, -596, -701, -703, -703, -294, -294, 127, 343, -506,
	-233, 622, 624, 566, 566, 662, 666, 643, 64, 241,
	165, 359, 600, 359, -614, 163, -619, -506, 661, 250,
	661, 661, 2, -278, -279, -280, 153, 504, 25, -720,
	2, 598, 165, -294, 165, -294, 626, 662, 666, -390,
	661, 661, 566, 488, -311, 566, 622, -430, -506, -245,
	135, -588, -673, 665, -673, 665, 488, 566, 566, 488,
	566, 566, 359, -318, 165, -318, 233, -743, -318, -673,
	-673, 241, 622, 180, 180, 628, -301, -506, -506, 196,
	566, 622, -430, 566, -563, 52, 27, 359, -353, -294,
	165, 566, 566, 580, 504, -285, -598, -152, -248, 157,
	469, 147, 281, 246, 49, 380, -680, -152, 176, 257,
	366, -242, -598, -598, -680, -598, 366, -16, -359, -594,
	-354, 504, 392, 454, -666, -666, 219, -364, -688, -552,
	-249, 381, -248, -552, -247, 203, 264, 622, 662, 666,
	135, 643, 2, 662, 662, 666, 666, -620, -295, -349,
	-334, 250, 250, -341, -319, 39, 374, 374, 661, -349,
	-105, 622, -551, -585, -340, -318, -438, -243, 46, -352,
	39, 165, -667, -354, -156, -354, -557, -558, 5, 39,
	-349, 165, 377, 359, -298, 289, -743, -593, -635, -413,
	-449, -438, 360, 97, 662, -500, -440, -421, -506, 2,
	662, -598, -244, -257, -336, 2, -599, -598, -598, 666,
	661, 643, 643, 643, 643, 643, 643, 643, -250, -552,
	-152, -250, -153, -156, 381, -349, -152, 653, -359, -360,
	653, -456, 5, -396, -395, 397, 370, -396, 477, 477,
	378, 190, 285, -281, -333, -506, -506, 161, 34, 34,
	-506, -506, -517, 662, -506, -506, -430, 660, 5, -506,
	662, 662, 8, -506, 662, 663, -649, -318, -506, 662,
	64, 662, 662, 666, 666, 662, 662, 662, 662, 662,
	662, 662, -512, 203, 149, 370, 661, 662, 662, -126,
	-514, 225, 64, -539, -514, -514, -458, -417, -539, -504,
	-333, 659, -333, 659, -589, 662, 666, -559, -585, -542,
	663, -255, 643, -598, -598, 2, 2, 5, 5, 429,
	359, 366, 5, -218, -686, -686, 622, -364, -364, -364,
	380, 660, 2, 659, -589, 662, -364, -364, -364, 203,
	-662, -364, 551, 206, -596, 127, 196, 230, 230, -335,
	-335, -260, -586, 550, 477, -301, 420, -497, 165, 165,
	-621, 100, -623, 81, 182, 110, 359, 366, 586, 420,
	77, 135, 377, 439, -733, -734, -735, 39, 633, 634,
	662, -415, -536, -634, 661, -318, -415, -417, 359, 537,
	135, 377, 359, 135, 377, 616, 127, 2, 580, 84,
	-335, -343, -258, -417, -417, -349, -359, -594, 173, 662,
	666, 643, 2, 653, 653, -359, -594, -354, -359, -594,
	-352, 165, 603, -301, 165, -301, 603, -301, 395, 180,
	566, -156, -506, 173, 662, -333, 5, 5, 165, -330,
	81, -335, 5, -335, -353, 127, 643, 643, 643, 643,
	643, 31, -680, -242, 622, -318, 257, 488, 566, 566,
	377, 377, 380, -684, -685, -247, 666, 661, -247, -599,
	-152, 2, 467, -700, -506, -506, -397, 252, -335, -618,
	-615, -616, 420, -498, -622, -624, 182, 420, -385, 661,
	-334, -319, 661, -156, 2, -261, 661, -383, 381, 660,
	203, 662, -594, -453, -156, -354, -407, -405, 622, -407,
	662, 666, 159, -475, 598, -333, -349, 165, -299, 288,
	-743, -593, -296, -480, -478, 150, 661, 377, -156, -413,
	643, 662, 127, 662, -251, -252, -598, -152, -598, -598,
	-598, -152, -598, -250, -690, 39, -552, -83, -84, 250,
	100, 402, -244, -244, -346, 550, 250, 661, 661, -281,
	-506, -506, -506, 662, -413, -589, 653, -643, 397, 662,
	-535, -506, -506, -507, 203, 661, -517, 662, -644, 621,
	-506, -444, -445, -506, 475, 116, 223, -644, -644, 662,
	-585, -585, -489, -598, 2, 2, 366, 2, 2, 2,
	566, 566, 566, 659, 2, 203, 203, 203, -596, 203,
	203, 241, 241, -156, 241, 39, 442, -497, -343, -343,
	-347, -340, 182, 233, 366, 616, -474, 279, 661, -507,
	591, -349, 661, 2, 232, 232, 31, 64, -736, 140,
	254, 662, 666, -537, -329, -318, -506, -537, 662, 662,
	366, 591, 366, 616, -506, 591, -559, 661, -294, -294,
	662, 662, -506, 566, -588, 107, -586, 2, -673, -301,
	-417, -417, -673, -332, -506, 196, -506, 566, 5, -294,
	-347, -294, -294, -330, 580, -598, -506, 577, 181, -152,
	-152, 376, -359, -594, -354, -689, 551, 498, 581, 490,
	206, 476, -689, 196, -248, -249, -247, -692, 505, -391,
	-392, 2, -620, 279, -340, 279, 243, 164, -415, 661,
	661, -417, -732, 622, 662, -381, -262, -106, -107, 567,
	-551, -663, -371, -407, 39, 343, 127, 39, 5, 661,
	661, -318, 377, 661, -333, -313, 98, -743, -593, -297,
	-449, 360, -417, 100, -480, -513, -244, 661, -244, 662,
	556, -250, 666, 29, 661, 29, 661, -349, -374, -430,
	-430, 662, -413, 64, 666, 662, 662, -507, -517, 662,
	-645, -646, -338, 666, 661, 661, 506, 660, 660, 2,
	-596, -596, -596, 2, -596, -596, -596, -596, -596, 488,
	488, -301, 420, -318, -614, -623, -340, 359, -263, 598,
	622, -506, -507, -320, 661, -506, 661, 661, 39, 135,
	254, 141, 238, -496, -737, 109, 538, 242, -536, -281,
	662, -495, 598, 439, -507, -330, -415, 661, 661, 661,
	643, 203, -156, 661, -563, -294, -353, 643, 566, 2,
	203, -666, 662, -679, -702, -703, -262, 661, -263, -386,
	86, 101, 136, 232, 207, 251, 529, 535, 29, -386,
	662, -415, -415, 662, -387, 377, 127, 343, 662, 39,
	-107, 9, -500, 39, -156, 127, -156, -557, -415, -349,
	-415, 377, -303, -302, 298, -593, -298, 662, -343, -449,
	-599, -585, 4, -84, -417, -417, 662, 662, -650, 430,
	478, 224, -430, -414, 662, 666, 39, -445, 2, 2,
	2, -686, -686, -686, -364, -364, 442, -295, 165, 226,
	662, -625, 313, -318, 662, -453, -453, 39, 141, 238,
	-393, -389, 661, -282, -537, -263, 226, -349, -674, 598,
	662, -399, -398, -395, -401, -400, -395, -430, -586, 107,
	395, -430, -330, -152, -596, -596, 377, -681, 204, -704,
	-705, -707, 39, 284, 573, 621, -708, -387, -416, -538,
	-335, -495, 662, 662, 87, 127, -397, -156, -156, 2,
	-405, 662, 662, -475, 662, -349, -300, -600, 442, 444,
	-743, -299, -500, 150, 662, 662, 662, 662, -651, -652,
	54, 583, 117, -506, -651, -651, -646, -648, 203, 203,
	182, -494, 631, -626, -629, -628, 638, 512, 204, 396,
	662, 537, 615, 662, 662, -736, -417, -494, -407, -506,
	-495, 662, 666, 603, 662, 666, 603, 662, 203, 662,
	-294, -686, -294, -689, -246, 622, 49, -714, -711, 53,
	466, -707, -695, 5, -593, -312, -311, 662, 666, -496,
	-495, -393, 419, 142, 153, -391, -732, -495, 661, -496,
	661, -310, -309, -743, -579, -313, 150, 360, 591, -244,
	-653, 163, -652, 416, 195, 477, 416, 195, -653, -653,
	-596, -596, -340, -263, 59, -628, 638, -629, 638, 591,
	142, -500, 662, -625, -263, -398, 241, -400, 203, 395,
	203, 485, -680, 31, 44, -506, -263, -538, -393, -496,
	-263, 478, 478, 2, -262, -387, -496, -415, -393, -415,
	-306, -307, -308, -417, -303, 360, 591, 504, 117, 222,
	561, 343, 34, 643, -627, 343, 462, 69, 504, -627,
	-626, 661, 661, -596, 381, -713, -263, -393, -500, 2,
	-387, -393, 662, -263, 662, -595, 392, -300, 504, -439,
	477, 385, -652, -506, 24, 366, 135, -736, -430, -430,
	-294, -243, 661, -712, 158, -3, -711, -500, -263, -476,
	359, 616, -312, -263, -495, -500, -496, -305, -304, 494,
	-743, -310, -439, -500, 662, 662, -243, 667, -476, -500,
	616, -500, -496, -476, -393, -594, -306, -500, -388, -389,
	566, 662, -476, -476, -393, -263, -305, 661, -263, -500,
	-430, -500, -476, 662, -476, -388,
}

var sqlDef = [...]int16{
	-2, -2, 1, 2, 3, 4, 6, 7, 9, 10,
	11, 13, 15, 17, 19, 21, 23, 25, 27, 29,
	31, 33, 34, 35, 37, 39, 41, 43, 44, 1745,
	1747, 725, 726, 728, 729, 730, 732, 733, 735, 737,
	739, 740, 741, 743, 744, 746, 747, 748, 749, 750,
	752, 754, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, -2, 0, 0, 848, 850, 0,
	1727, 1729, 1731, 1733, 0, 0, -2, -2, 0, 0,
	-2, -2, 45, 46, 48, 50, 0, -2, 420, 422,
	424, 426, 0, 458, 460, 461, 463, 465, 466, 468,
	470, -2, 0, 652, 653, 655, 657, 659, -2, 0,
	1303, 1305, 1307, 0, 836, 838, 0, 1310, 1312, 1314,
	0, 0, 860, 861, 0, 1848, -2, 852, 854, 856,
	858, 937, 939, 941, 943, 945, 947, 949, 951, 953,
	955, 957, 958, 960, 962, 964, 966, 968, 969, 971,
	973, 975, 976, 978, 979, 981, 983, 985, 987, 989,
	991, 993, 995, 997, 999, 1001, 1003, 1005, 1007, -2,
	1010, 1011, 1012, 1014, -2, 0, -2, -2, 1741, 52,
	54, 56, 58, 60, 62, 64, 66, 68, 70, 72,
	74, 76, 77, 598, 600, 602, 604, 606, 609, 611,
	613, 615, 1906, 661, 663, 665, 667, 669, 671, 673,
	675, 0, 0, -2, 1920, 0, 0, 0, 1105, 79,
	80, 81, 82, 83, 84, 85, 86, 87, 88, 147,
	148, 149, 150, 151, 152, 153, 154, 92, 93, 94,
	96, 97, 98, 99, 103, 104, 105, 106, 107, 108,
	109, 110, 111, 112, 113, 114, 115, 116, 117, 118,
	144, 145, 90, 119, 120, 121, 122, 123, 0, 0,
	1879, 1881, 1883, 1885, -2, 0, 0, 8, 12, 14,
	16, 18, 20, 22, 24, 26, 28, 30, 32, 36,
	38, 40, 42, 1746, 1748, 727, 731, 734, 736, 738,
	742, 745, 751, 753, 755, 710, 711, 714, 2636, 2654,
	2655, 2656, 2659, 2660, 2661, 2662, 2663, 2664, 3198, 3279,
	3280, 2687, 2688, 2689, 2690, 2691, 2692, 2693, 2694, 2695,
	2696, 2697, 2698, 2699, 2700, 2701, 2702, 2703, 2704, 2705,
	2706, 2707, 2708, 2709, 2710, 2711, 2712, 2713, 2714, 2715,
	2716, 2717, 2718, 2719, 2720, 2721, 2722, 2723, 2724, 2725,
	2726, 2727, 2728, 2729, 2730, 2731, 2732, 2733, 2734, 2735,
	2736, 2737, 2738, 2739, 2740, 2741, 2742, 2743, 2744, 2745,
	2746, 2747, 2748, 2749, 2750, 2751, 2752, 2753, 2754, 2755,
	2756, 2757, 2758, 2759, 2760, 2761, 2762, 2763, 2764, 2765,
	2766, 2767, 2768, 2769, 2770, 2771, 2772, 2773, 2774, 2775,
	2776, 2777, 2778, 2779, 2780, 2781, 2782, 2783, 2784, 2785,
	2786, 2787, 2788, 2789, 2790, 2791, 2792, 2793, 2794, 2795,
	2796, 2797, 2798, 2799, 2800, 2801, 2802, 2803, 2804, 2805,
	2806, 2807, 2808, 2809, 2810, 2811, 2812, 2813, 2814, 2815,
	2816, 2817, 2818, 2819, 2820, 2821, 2822, 2823, 2824, 2825,
	2826, 2827, 2828, 2829, 2830, 2831, 2832, 2833, 2834, 2835,
	2836, 2837, 2838, 2839, 2840, 2841, 2842, 2843, 2844, 2845,
	2846, 2847, 2848, 2849, 2850, 2851, 2852, 2853, 2854, 2855,
	2856, 2857, 2858, 2859, 2860, 2861, 2862, 2863, 2864, 2865,
	2866, 2867, 2868, 2869, 2870, 2871, 2872, 2873, 2874, 2875,
	2876, 2877, 2878, 2879, 2880, 2881, 2882, 2883, 2884, 2885,
	2886, 2887, 2888, 2889, 2890, 2891, 2892, 2893, 2894, 2895,
	2896, 2897, 2898, 2899, 2900, 2901, 2902, 2903, 2904, 2905,
	2906, 2907, 2908, 2909, 2910, 2911, 2912, 2913, 2914, 2915,
	2916, 2917, 2918, 2919, 2920, 2921, 2922, 2923, 2924, 2925,
	2926, 2927, 2928, 2929, 2930, 2931, 2932, 2933, 2934, 2935,
	2936, 2937, 2938, 2939, 2940, 2941, 2942, 2943, 2944, 2945,
	2946, 2947, 2948, 2949, 2950, 2951, 2952, 2953, 2954, 2955,
	2956, 2957, 2958, 2959, 2960, 2961, 2962, 2963, 2964, 2965,
	2966, 2967, 2968, 2969, 2970, 2971, 2972, 2973, 2974, 2975,
	2976, 2977, 2978, 2979, 2980, 2981, 2982, 2983, 2984, 2985,
	2986, 2987, 2988, 2989, 2990, 2991, 2992, 2993, 2994, 2995,
	2996, 2997, 2998, 2999, 3000, 3001, 3002, 3003, 3004, 3005,
	3006, 3007, 3008, 3009, 3010, 3011, 3012, 3013, 3014, 3015,
	3016, 3017, 3018, 3019, 3020, 3021, 3022, 3023, 3024, 3025,
	3026, 3027, 3028, 3029, 3030, 3031, 3032, 3033, 3034, 3035,
	3036, 3037, 3038, 3039, 3040, 3041, 3042, 3043, 3044, 3045,
	3046, 3047, 3048, 3049, 3050, 3051, 3052, 3053, 3054, 3055,
	3056, 3057, 3058, 3059, 3060, 3061, 3062, 3063, 3064, 3065,
	3066, 3067, 3068, 3069, 3070, 3071, 3072, 3073, 3074, 3075,
	3076, 3077, 3078, 3079, 3080, 3081, 3082, 3083, 3084, 3085,
	3086, 3087, 3088, 3089, 3090, 3091, 3092, 3093, 3094, 3095,
	3096, 3097, 3098, 3099, 3100, 3101, 3102, 3103, 3104, 3124,
	3125, 3126, 3127, 3128, 3129, 3130, 3131, 3132, 3133, 3134,
	3135, 3136, 3137, 3138, 3139, 3140, 3141, 3142, 3143, 3144,
	3145, 3146, 3147, 3148, 3149, 3150, 3151, 3152, 3153, 3154,
	3155, 3156, 3157, 3158, 3159, 3160, 3161, 3162, 3163, 3164,
	3165, 3166, 3167, 3168, 3169, 3170, 3171, 3172, 3173, 3174,
	3175, 3176, 3177, 712, 713, 1497, 0, 794, 792, 2619,
	795, 2947, 797, 799, 646, 647, 648, 649, 650, 651,
	0, 829, 3052, 810, 1918, 830, 832, 833, 834, 835,
	789, 787, 0, 834, 829, 2692, 3052, 827, 1725, 1726,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 660,
	0, 0, 0, 0, -2, 0, 0, 0, 0, 0,
	0, 0, 577, 1560, 1561, 1562, 1710, 1711, 3003, 1756,
	0, 284, 849, -2, -2, 3162, -2, 891, 892, -2,
	-2, 906, 910, 901, 3167, 0, 3006, 2988, -2, 913,
	1728, 1730, 1732, 1015, 1016, 1017, 2640, 1021, 1019, 1031,
	1032, 1035, 0, 1052, -2, 0, 2688, 2970, -2, -2,
	1053, 1054, -2, -2, -2, -2, 1033, 1034, 0, 0,
	0, 0, 0, 2056, 2057, 2623, 1758, 1750, 1753, 1751,
	1752, 47, 49, 51, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 292, 294, -2, -2,
	-2, -2, 0, 0, 3058, 2751, 2587, 2656, 2590, 2585,
	421, 423, 425, 427, 428, 0, 0, 0, 0, 0,
	0, 0, 459, 462, 464, 467, 469, -2, 0, 471,
	0, 576, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 641, -2,
	-2, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1377, 1369, 1370, 1627, 0, 0, 0, -2, 654, 656,
	658, 715, 716, 0, 1907, 1907, 723, 724, -2, 0,
	0, 0, 0, 382, 373, 1304, 1306, 1308, 1309, 0,
	0, 0, 0, 0, 837, 839, 0, 0, 3052, 345,
	1311, 1313, 1315, 1316, 0, 0, 0, 0, 0, 0,
	384, 0, 0, 853, 855, 857, 859, 938, 940, 942,
	944, 946, 948, 950, 952, 954, 956, 959, 961, 963,
	965, 967, 970, 972, 974, 977, 980, 982, 984, 986,
	988, 990, 992, 994, 996, 998, 1000, 1002, 1004, 1006,
	1008, 1009, 1060, 0, 0, 0, 0, -2, -2, -2,
	0, 0, 0, -2, 0, -2, -2, -2, 0, 0,
	0, 0, 0, 0, 0, 0, -2, 0, 0, 1175,
	0, 0, 0, -2, -2, -2, 0, 0, 0, 0,
	0, 0, 0, -2, -2, 0, 0, 0, 0, -2,
	0, 1272, 0, 0, 1063, 1066, 1067, 1068, 1069, 1070,
	1071, 1072, 0, 1148, 1173, 1174, 1184, 1013, 0, 1540,
	1908, 1758, 1735, 1736, 1737, 1742, 1744, 1738, 1739, 1740,
	53, 55, 57, 59, 61, 63, 65, 67, 69, 71,
	73, 75, 78, 599, 601, 603, 605, 607, 610, 612,
	614, -2, 1877, 1878, 662, 664, 666, 668, 670, 672,
	674, 840, 0, 843, 0, 1065, 842, -2, 0, 1912,
	1912, 1912, 0, 0, 1878, 1876, 0, 0, 0, 846,
	847, 917, 918, 2199, 0, 0, 0, 0, 0, 0,
	0, 0, 2459, 2287, 0, 919, -2, 2320, 2322, 3136,
	2919, 3162, 2458, 2324, 2325, 2326, 2327, 2328, 0, 2330,
	2331, 2332, 2333, 2334, 2335, 0, 2337, 0, 2342, 2343,
	2344, 0, 3143, 2562, 2650, -2, 0, 0, 3150, 2646,
	0, 2425, 2360, -2, -2, 2673, 2652, 2131, 2132, 2133,
	2134, 2135, -2, -2, 3181, 2364, 2365, 2366, 2367, 2368,
	2369, 2370, 2371, 2372, 2373, 2374, 0, 3124, 3144, 3145,
	3151, 3153, 3146, 3133, 2385, 2767, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, 2158,
	2167, -2, -2, -2, -2, -2, -2, -2, 3137, 3138,
	3156, 3159, 3166, 3171, 3172, 3142, 3152, 3180, 3182, 3183,
	3184, 3185, 3186, 3187, 3188, 3189, 3190, 3191, 3192, 3193,
	3194, 3195, 3196, 3197, 2159, -2, -2, -2, -2, 0,
	1895, 2963, 1898, 2004, 1896, 1880, 1882, 0, 1884, 0,
	0, 0, 1889, 1915, 1913, 0, 1964, 1893, 1894, 1987,
	1987, 2019, 0, 1992, 0, 2019, 1907, 2050, 0, 1998,
	2993, 2361, 2362, 0, 2656, 2651, -2, -2, 3178, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	790, 0, 796, 798, 0, 0, 0, 0, 829, 828,
	1917, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 3144, 589, 539, 542, 0, 580, 581, 582, 583,
	584, 3144, 0, 0, 0, 0, 591, 592, 593, 594,
	595, 596, 597, 254, 3144, 680, 709, 705, 0, 254,
	3144, 683, 708, 254, 3144, 686, 707, 0, 689, 1625,
	254, 3144, 692, 2615, 254, 3144, 695, 697, 254, 3144,
	701, 2630, 2628, 702, 0, 704, 274, 270, 271, 272,
	273, 1721, 1722, 1723, 1724, 0, 1755, 1626, 851, 0,
	877, 0, 889, 890, 3132, -2, 0, 3017, 894, 895,
	-2, 897, 1759, 1763, 1764, 1765, 1766, 1767, 0, 0,
	0, 0, 1772, 0, 0, 0, 0, 884, 885, 904,
	905, 911, 914, 0, 1024, 1020, 1036, 0, 1051, 0,
	1052, 1052, 2604, 2595, 2596, 0, 0, 1052, 1052, 0,
	0, 1055, 1056, 1057, 1058, 1059, 1749, -2, 89, 0,
	3144, 2050, 91, 0, 2609, 2682, 2683, 2684, 2685, 2686,
	3179, 3199, 3200, 3201, 3202, 3203, 3204, 3205, 3206, 3207,
	3208, 3209, 3210, 3211, 3212, 3213, 3214, 3215, 3216, 3217,
	3218, 3219, 3220, 3221, 3222, 3223, 3224, 3225, 3226, 3227,
	3228, 3229, 3230, 3231, 3232, 3233, 3234, 3235, 3236, 3237,
	3238, 3239, 3240, 3241, 3242, 3243, 3244, 3245, 3246, 3247,
	3248, 3249, 3250, 3251, 3252, 3253, 3254, 3255, 3256, 3257,
	3258, 3259, 3260, 3261, 3262, 3263, 3264, 3265, 3266, 3267,
	3268, 3269, 3270, 3271, 3272, 3273, 3274, 3275, 3276, 3277,
	3278, 3181, 95, 0, 3144, 100, 0, 3144, 0, -2,
	124, 0, 146, 0, 174, -2, -2, -2, 155, 0,
	3144, 0, 2584, -2, 0, 266, -2, 0, 780, 385,
	386, 2669, 2670, 2678, 2679, 2680, 2681, 374, 375, 557,
	0, 771, 0, 880, 2459, 0, 0, 1341, -2, 0,
	1553, 1555, 1555, 0, -2, 0, 0, 0, 1292, 2581,
	2586, 1293, 1294, 2605, 1295, 2591, 0, 429, 430, 431,
	432, 433, 0, 434, 3144, 436, 437, 0, 439, 440,
	3144, 442, 443, 0, 445, 0, 447, 0, 309, 326,
	324, 3144, 0, 3144, 473, 476, 0, 578, 0, 575,
	0, 559, 560, 0, 562, 0, 0, 0, 567, 568,
	570, 571, 572, 573, 574, 0, 619, 617, 2620, 637,
	399, 0, -2, 3144, 0, 1338, 0, 0, 1605, -2,
	0, 1546, -2, 0, 1612, 3144, 1608, 0, -2, 0,
	1905, 3144, 1776, 1373, 1374, 1375, 1376, 2064, 643, 0,
	1812, 0, 1814, 0, 1834, 2058, 1987, 0, 0, 2063,
	0, -2, 768, 2639, -2, 718, 0, 719, 0, -2,
	0, 399, 0, 0, 1319, 1321, 1322, 1324, 1325, 1328,
	1329, 1330, 1331, 0, 1333, 2036, 346, 348, 0, 0,
	0, 0, 1318, 1712, 1713, 1714, 1715, 1716, 1717, 1718,
	1719, 1720, 0, 637, 862, 0, 0, 1061, 1062, 0,
	0, 1080, 1081, 1082, 0, 0, 399, -2, -2, -2,
	-2, 1091, 0, 1099, 1102, -2, 0, 0, 0, 0,
	1109, 0, 1114, 1115, 1116, 0, -2, 0, 1123, 1125,
	1302, 1128, 0, 1302, 0, 1130, 0, 1134, 0, 1137,
	0, 1139, 0, 1141, -2, -2, -2, 1149, 1150, -2,
	1155, -2, 0, 1159, -2, 0, 1162, 0, 1165, -2,
	0, 1175, 1171, 1172, 0, 0, 0, 0, 1192, 1193,
	0, 1202, 0, 1205, 1206, 1207, 0, 0, 1212, 1213,
	0, 1215, 1216, 1217, 1219, 1220, 1221, 0, 3091, 3014,
	2751, 2799, 0, 1230, -2, 2788, 1240, 1242, 0, -2,
	0, 1258, 0, 1262, 0, 0, 1271, 0, 0, 0,
	1064, 0, 1073, 1074, 1075, 254, 2054, 1734, 0, -2,
	0, 841, 0, 845, 1937, 1863, 1860, 0, 1934, 1935,
	1864, 0, 0, 0, 1871, 0, 1910, 1911, 0, 0,
	0, 1850, 1851, 0, 0, 0, 0, 0, 0, 2464,
	2465, 2466, 2467, 2480, 2468, 2469, 2479, 2477, 2478, 2470,
	2471, 2476, 2490, 2491, 2481, 2482, 2472, 2485, 2483, 2484,
	2486, 2487, 2488, 2489, 0, 0, 2495, 0, 2473, 2474,
	2475, 2503, 0, 0, 2504, 0, 2506, 0, 2496, 2492,
	2493, 2494, 0, 2266, 2268, 2570, 0, 0, 0, 2502,
	2497, 2498, 2204, 2205, 2206, 2207, 2208, 2241, 2245, 2246,
	0, 0, 2321, 2567, 2566, 2323, 0, 0, 2518, 0,
	2336, -2, 0, 2459, 2513, 0, 0, 2345, 2346, 2347,
	0, 0, 2518, 0, 0, 2561, 2357, 2358, 2196, 0,
	0, 2427, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2145, 2144, 0, 2146, 0, 2147, 2148, 2155, 2168, 0,
	0, 0, 0, 2172, 0, 0, 0, 0, 0, 0,
	0, 2542, -2, 0, 0, 0, 0, 2160, 0, 0,
	1897, 0, 0, 0, 1968, 2571, 2575, 2576, 1968, 1968,
	0, 0, 2519, 2047, 2047, 0, 0, 2042, 2042, 2042,
	2040, 2019, 0, 2019, 2029, 0, 2019, 2019, 0, -2,
	1992, 0, 0, 2033, 0, 2013, 756, 758, 760, 762,
	763, 764, 766, 2051, 2052, 0, 0, 0, 0, 2657,
	0, 0, 0, 0, 0, 0, 2642, 0, 0, 2614,
	454, 455, 0, 0, 0, 3071, 3006, 0, -2, -2,
	-2, -2, 3014, 0, 0, 2751, 2788, 2799, 801, 831,
	0, 1907, 0, 2521, 2079, 2083, 0, 2085, 2086, 2087,
	2088, 2089, 0, 0, 2080, -2, 2156, 2158, 2179, 2674,
	2675, 2676, 2139, 2140, 2141, 2142, 2143, 2151, 2138, 2138,
	2138, 2149, 2178, 2170, 2178, 2174, 2124, 2125, 2126, 2161,
	2162, 2163, 2164, 0, 3071, 3006, 0, -2, 0, 813,
	0, 0, 0, 1845, 336, 337, 537, 0, 252, 253,
	0, 541, 0, 579, 0, 586, 587, 588, 0, 676,
	0, 0, 254, 3144, 681, 0, 684, 0, 254, 3144,
	2579, 690, 0, 693, 0, 0, 699, 0, 0, 0,
	0, 0, 254, 1847, 0, 0, 0, 0, -2, 899,
	907, 908, 909, 0, 1761, 0, 1768, 928, 929, 930,
	1770, 1771, 0, 1773, 902, 931, 932, 933, 934, 935,
	936, 0, 2593, 2594, 2599, 2600, 0, 0, 900, 921,
	903, 0, 915, 1027, 1022, 1023, 1037, 1038, 0, 0,
	2597, 2598, 0, 0, 1043, 1044, 156, 1707, 0, 0,
	207, 0, 1707, 1707, 0, 0, 0, 0, 235, 0,
	0, 1407, 0, 0, 0, 0, 174, 192, 203, 168,
	169, 170, 0, 0, 0, 0, 0, 0, 101, 1519,
	0, 1522, 0, 0, 0, 0, 0, 0, 0, 1535,
	1538, 0, 0, 0, 0, 0, 126, 127, 0, 0,
	132, 133, 0, 0, 191, 0, 0, 0, 0, 0,
	0, 1809, 0, 182, 174, 0, 0, 173, 175, 158,
	0, 0, 174, 178, 193, 205, 0, 241, 0, 181,
	243, 1404, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 276, 0, 0, 311, 778, 0, 781, 0, 551,
	0, 526, 0, 0, 548, 556, 0, 0, 513, 514,
	515, 516, 0, 0, 521, 0, 0, 0, 0, 527,
	770, 772, 637, 637, 0, 0, 878, 882, 883, 0,
	0, 879, 881, 0, 0, 1547, 0, 0, 0, 1904,
	0, 0, 0, 0, 3144, 1705, 0, 1688, 0, 2036,
	2847, -2, -2, 346, 2036, 1291, 0, 0, 2657, 2589,
	0, 0, 0, 0, 0, 0, 446, 0, 0, 0,
	335, 0, 0, 0, 482, 0, 569, 558, 561, 563,
	564, 565, 608, 1466, 3144, 0, 0, 641, 632, 0,
	636, 0, 0, 640, 0, 0, 1518, 3144, 1516, 2624,
	0, 1544, 0, 1604, 1497, 3144, 2622, 0, 0, 0,
	1613, 2666, 1622, 1626, 1797, 0, 645, 0, 1815, 1817,
	0, 0, 2059, 0, 2061, 1987, 1907, 0, 0, 0,
	0, 377, 0, 0, 0, 0, 0, 1332, 355, 0,
	2035, 0, 0, 387, 2036, 346, 2976, 0, 1317, 399,
	399, 2036, 864, 2036, 866, 0, 0, 1083, 0, 0,
	1086, 399, 399, 399, 399, 1097, 1098, 1100, 1101, -2,
	-2, -2, -2, 1103, 1104, 1199, 0, 0, 0, 1198,
	1703, 0, 1119, 1122, 1126, 0, 1275, 2988, 3006, 3071,
	1300, 1127, 1199, 2751, 1199, 2751, 1199, 2751, 1199, 1199,
	1143, 1187, 1195, 1154, 1161, 0, 1156, 1160, 1163, 1166,
	0, 1168, 1176, 0, -2, 0, 1179, 0, 1181, 0,
	1183, 1199, 1200, 1203, 0, 1211, 1214, 0, 1222, 1223,
	1224, 1225, 2637, 1226, 1227, 1228, 1229, -2, 0, 1233,
	1234, 0, 0, 1249, 1254, 1255, 1251, 0, 0, 0,
	0, 0, 0, 1265, 1266, 0, 0, 0, 1274, 0,
	1076, 1539, 0, 1743, 1937, 1863, 844, 1854, 1936, 1855,
	1862, 1865, 0, 0, 1867, 0, 1869, 0, 1932, 1933,
	1940, 1941, 0, 1951, 1952, 1944, 0, -2, 0, 0,
	1947, 1948, 1873, 0, 1890, 1891, 1892, 1921, 1924, 1641,
	0, 3279, 887, 0, 2200, 2074, 2201, 2202, 2608, 0,
	2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218,
	-2, -2, -2, -2, -2, -2, -2, -2, 2227, 2228,
	2229, 2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237, -2,
	-2, -2, 2242, 2243, 2244, -2, 2505, 2507, 0, 2570,
	0, -2, 0, -2, -2, -2, -2, 2263, 0, 2265,
	2270, 2272, 2274, 0, 0, 0, 0, 2569, 2284, 2553,
	2554, 0, 0, 2461, 2462, 2463, 2269, 0, 2288, 2568,
	2565, 0, 0, 2499, 0, 2464, 2465, 2466, 2467, 2468,
	2469, 2470, 2471, 2472, 2473, 2474, 2475, 2476, 2477, 2478,
	2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486, 2487, 2488,
	2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496, 0, 2517,
	1920, 2349, 0, 0, 0, 0, 2356, 2341, 2515, 0,
	2514, 0, 0, 0, 2525, 0, 2560, 2556, 0, 2606,
	2195, 2182, 2183, 2184, 2185, 2186, 2187, 2197, 0, 2603,
	2643, 2649, 2435, 0, 0, 0, 2386, 2387, 2388, 2389,
	2390, 0, 2392, 2393, 0, 2395, 2396, 0, 2398, 2399,
	0, 2401, 2402, 2403, 2404, 2405, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2092, 2093, 2094, 2095, 2096, 2097, 2098,
	2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108,
	2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118,
	2119, 2120, 2121, 2122, 2123, 0, 0, 2407, 0, 2528,
	-2, -2, -2, -2, -2, -2, -2, -2, 0, 2409,
	0, 2411, 2519, 2539, 0, 0, 2289, 0, 0, 0,
	0, 0, 2414, 2519, 2547, 0, 0, 0, 0, 0,
	2519, 0, 2552, 0, 2421, 0, 2423, 1106, 1107, 1899,
	0, 0, 2005, 0, 2069, 0, 0, 0, 2574, 2577,
	2578, 3105, 3106, 3107, 3108, 3109, 3110, 3111, 3112, 3113,
	3114, 3115, 3116, 3117, 3118, 3119, 3120, 3121, 3122, 3123,
	2069, 2069, 0, 1963, 0, 0, 2043, 2044, 2045, 2046,
	0, 0, 2047, 0, 2037, 2041, 2038, 2039, 2029, 1984,
	0, 0, 2610, 2029, 1990, 2028, 0, 2004, 2018, 2029,
	2029, 0, -2, 1994, 2032, 0, 2007, 2019, 0, 0,
	757, 759, 761, 765, 767, 0, 0, 1920, -2, 0,
	-2, 401, 1496, 0, 0, 0, 0, 0, 0, 791,
	793, 0, 0, 696, 0, 0, 0, 0, 1281, 0,
	1283, 1284, 0, 1286, 0, 1691, 785, 0, 788, 0,
	2070, 2073, 0, 0, 2084, 2090, 2091, 0, -2, 0,
	0, 2180, 0, 0, 0, 0, 0, 0, 0, 826,
	0, 3052, 0, 824, 0, 540, 254, 0, 544, 545,
	0, 0, 494, 495, 496, 497, 499, 2677, 500, -2,
	-2, 0, 590, 254, 706, 678, 0, 254, 254, 687,
	0, 0, 254, 698, 254, 2631, 254, 2629, 275, 703,
	1846, 287, 0, 886, 0, 1760, 1769, 0, 925, 0,
	927, 0, 2601, 2602, 0, 916, 0, 1025, 0, 1039,
	1040, 1041, 1042, 0, 0, 0, 0, 1706, 0, 0,
	1651, 0, 0, 211, 3144, 0, 256, 0, 0, 1459,
	2616, 0, 1449, 0, 0, 2775, 0, 0, 0, 0,
	0, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 171, 172, 0, 0, 0, 0,
	0, 0, 0, 0, 1520, 1521, 1523, 1530, 1532, 0,
	1526, 1527, 0, 1529, 1531, 1533, 0, 1536, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	134, 138, 1556, 3012, 0, 0, 0, 0, 1557, 1558,
	1559, 1785, 1786, 0, 1808, 1809, 0, 0, 0, 0,
	0, 0, 0, 167, 0, 0, 0, 180, 0, 2583,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 312, 0, 782, 0, 783, 0, 547, 549,
	550, 526, 0, 0, 0, 0, 0, 0, 0, 519,
	520, 522, 523, 524, 525, 773, 399, 775, 776, 395,
	392, 394, 777, 0, 0, 0, 1549, 0, 1600, 1598,
	1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581,
	1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591,
	1592, 1593, 1594, 1595, 1596, 1597, 0, 0, 0, 0,
	-2, 1551, 1552, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 0, 390, 2582, 2592, 0, 1326, 1327,
	435, 438, 441, 444, 293, 0, 0, 0, 475, 484,
	0, 1379, 1351, 0, 0, 618, 399, 637, 639, 0,
	397, 2922, 2635, 1336, 1514, 1517, 0, 1497, 3144, 1568,
	0, 0, 0, 0, 0, 0, 0, 1611, 0, 0,
	3144, 2611, 2665, 2666, 1799, 1809, 0, 2069, 0, 1832,
	1818, 0, 0, 0, 1832, 1836, 1837, 1839, 1840, 0,
	0, 2060, 2066, 717, 769, 1907, 1907, 399, 0, 0,
	1821, 1823, 0, 0, 0, 338, 0, 349, 2036, 347,
	0, 355, 0, 0, 2036, 346, 0, 631, 863, 868,
	399, 0, 0, 399, 1087, 1088, 1089, 1090, 1145, 1189,
	1197, 1253, 1108, 1110, 1111, 1112, 0, 1117, 0, 0,
	0, 1301, 1296, 1297, 1298, 2632, 2628, 1299, 1129, 1199,
	1132, 1199, 1135, 1199, 1138, 1140, 1158, 1164, 1177, 1170,
	1178, 0, 0, 0, 1191, 0, 1209, 0, 1218, 1232,
	-2, 1237, 1238, 0, 0, 0, 0, 0, 0, 0,
	1259, 1260, 1261, 1263, 1268, 1267, 0, 1273, 1077, 2055,
	1858, 1859, 1861, 0, 1870, 0, 0, 1946, -2, -2,
	1945, 1949, 1950, -2, -2, -2, -2, 1866, 0, 1875,
	1872, 0, 1931, 1639, 1640, 0, 0, 888, 0, 0,
	-2, -2, 0, 0, 0, 2285, 0, -2, 2264, 2267,
	2271, 2273, 2275, 0, 0, 0, 0, 0, 0, 2508,
	0, 2510, 2286, 2563, 2566, 2501, 0, 2457, 0, 0,
	1919, 1920, 1920, 0, 2355, 0, 2516, 0, 2523, 2524,
	0, 2348, 0, 2557, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2359, 0, 0, 0, 0, 2391, 2394,
	2397, 2400, 0, 0, 0, 0, 2380, 0, 0, 0,
	2384, 2150, 2136, 0, 2178, 2176, 2177, 2171, 2178, 2175,
	2128, 0, 2127, 0, 2406, 0, 2408, 2410, 0, 0,
	2412, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2292, 2293, 2294, 2314, 2413,
	2545, 2546, 0, 0, 0, 0, 0, 0, 2419, 0,
	2551, 2420, 2422, 1907, 0, 1900, 0, 2003, 0, 1965,
	1954, 2068, 0, 2572, 2036, 1967, 1969, 2573, 2613, 1954,
	1954, 0, 2520, 0, 0, 2023, 0, 0, 0, 2025,
	1988, 0, 0, 1982, 0, 1973, 1974, 1975, 1976, 1977,
	1978, 1979, 1989, 2004, 2027, 1991, 1995, 2643, 0, 2007,
	2031, 0, 2029, 0, 2014, 0, 2016, 2053, 0, 2000,
	2033, 0, 0, 2658, 2069, 0, 448, 456, 457, 449,
	450, 451, 452, 0, 1691, 0, 0, 0, 0, 0,
	1282, 1285, 0, 809, 0, 0, 2522, 0, 2075, 0,
	2081, 0, 0, 0, 0, 811, 0, 0, 0, 0,
	0, 0, 0, 0, 1844, 538, 543, 0, 0, 493,
	0, 492, 498, 585, 677, 254, 682, 685, 2580, 254,
	691, 694, 700, 283, 0, 876, -2, 923, 924, 926,
	0, 922, 1030, 1026, 208, 1707, 0, 0, 0, 1647,
	0, 1362, 0, 1357, 1358, 1649, 2627, 1653, 1659, 1662,
	0, 213, 3144, 225, 0, 3144, 0, 1423, 0, 0,
	0, 0, 0, 0, 1709, 0, 0, 3144, 254, 3144,
	254, 229, 231, 234, 0, 240, 236, 0, 1359, 0,
	1411, 0, 0, 1414, 157, 1707, 0, 0, 160, 164,
	176, 0, 0, 0, 190, 0, 0, 0, 1664, 1668,
	1676, 0, 0, 0, 1524, 1525, 1528, 1534, 1537, 102,
	0, 0, 0, 1672, 1674, 1680, 125, 128, 3144, 2625,
	0, 130, 3144, 0, 139, 1809, 0, 0, 0, 0,
	1646, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	162, 166, 177, 0, 1682, 159, 179, 0, 269, 0,
	0, 259, 254, 3144, 0, 261, 0, 262, 263, 277,
	0, 0, 0, 0, 0, 0, 0, 317, 0, 0,
	0, 779, 0, 552, 553, 554, 0, 0, 0, 517,
	518, 774, 0, 0, 0, 1339, 1340, 1599, 0, 1542,
	1543, 321, 322, 0, 1554, 1548, 0, 0, 0, 0,
	0, 1684, 1685, 0, 0, 0, 1705, 1700, 2036, 289,
	0, 2036, 297, 0, 2588, 0, 325, 334, 472, 0,
	483, 485, 487, 0, 0, 0, 1378, 1477, 1380, 1382,
	1383, 1384, 256, 0, 2666, 1449, 2834, 2666, 0, 0,
	1346, 0, 0, 0, 624, 620, 0, 629, 633, 634,
	0, 0, 0, -2, 0, 0, 0, 0, -2, 0,
	0, 0, 1615, 1609, 1610, 0, 0, 0, 0, 3144,
	1801, 1809, 0, 1905, 1920, 644, 1810, 1832, 0, 0,
	0, 1820, 1816, 1813, 2069, 0, 0, 0, 0, 0,
	2062, 2065, 720, 721, 376, 0, 399, 0, 0, 0,
	0, 0, 0, 353, 0, 356, 0, 0, 0, 361,
	362, 363, 364, 365, 366, 0, 0, 0, 0, 371,
	372, 355, 388, 340, 2036, 0, 355, 0, 0, 865,
	0, 1078, 0, 0, 1085, 0, 0, 1703, 1121, 0,
	1131, 1133, 1136, 1180, 1182, 1199, 0, 1210, 1236, 1243,
	2612, 1244, 1401, 0, 1401, 0, 0, 1264, 1270, 1868,
	0, 1943, 1874, 1925, 1926, 0, 1641, 0, 2203, 2248,
	0, 0, -2, 0, 0, 2252, 0, 0, 0, -2,
	0, 0, 0, 2509, 2511, 0, 2565, 2500, 2350, 0,
	0, 0, 2354, 2338, 2339, 0, 2460, 2526, 2555, 2559,
	0, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 0, 2607,
	2644, 2648, 2433, 2434, 2438, 2621, 0, 0, 0, 2363,
	0, 0, 0, 0, 0, 0, 0, 0, 2169, 2173,
	0, 0, 2527, 2538, 2540, 2290, 2291, 2295, 2296, 2297,
	2298, 2299, 2300, 2301, 2302, 2303, 2304, -2, -2, -2,
	2308, 2309, 2310, -2, -2, -2, 2315, 0, 0, 0,
	2541, 2543, 2544, 2548, 2549, 0, 2416, 2417, 2418, 2550,
	0, 1907, 1901, 2006, 1962, 0, 2067, 1966, 0, 1962,
	1962, 1914, 2021, 0, 0, 2049, 0, 1985, 0, 1986,
	0, 0, 2026, 0, 1993, 2030, 0, 2009, 2011, 1996,
	1997, 2015, 0, 1999, 0, 2002, 2350, -2, 400, 402,
	404, 0, 407, 408, 0, 0, 0, 0, 413, 0,
	0, 0, 0, 0, 800, 1691, 1691, 0, 0, 0,
	802, 0, 786, 0, 0, 2077, 0, 0, 2153, 2157,
	2181, 815, 817, 0, 0, 0, 0, 3071, 3006, 0,
	0, 814, 546, 490, 491, 679, 688, 285, 0, 2034,
	0, 0, 0, 0, 0, 237, 0, 0, 0, 0,
	0, 0, 255, 0, 1458, 0, 1421, 0, 0, 1448,
	0, 0, 1464, 215, 216, 217, 0, 0, 0, 0,
	227, 0, 0, 223, 0, 233, 239, 238, 0, 1408,
	0, 0, 0, 0, 1652, 0, 0, 0, 187, 188,
	189, 0, 194, 0, 195, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 136, 0, 0, 0, 141,
	142, 0, 0, 1791, 1792, 0, 1779, 184, 0, 0,
	0, 0, 0, 0, 257, 0, 0, 0, 1638, 279,
	0, 0, 0, 0, 0, 313, 314, 315, 316, 0,
	301, 303, 0, 0, 0, 0, 323, 0, 0, 511,
	0, 396, 391, 393, 1541, 1602, 1603, 1550, 1665, 1669,
	1677, 0, 0, 0, 0, 0, 834, 1704, 0, 297,
	295, 0, 298, 297, 291, 0, 0, 0, 0, 0,
	0, 0, 566, 1349, 1465, 0, 0, 1467, 1385, 1389,
	0, 2666, 2666, 0, 2618, 0, 1347, 0, 0, 1466,
	616, 0, 623, 0, 638, 2617, 0, 0, 0, 1518,
	0, 0, 1545, 1497, 1571, 1497, 0, 1614, 1616, 0,
	1624, 0, 0, 0, 1803, 1809, 0, 1796, 1797, 1939,
	1811, 1830, -2, 0, 0, 1920, 1838, 1835, 1841, 1842,
	0, 0, 379, 0, 1822, 1824, 0, 1320, 1323, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 339, 355,
	352, 342, 2036, 383, 0, 399, 399, 1113, 1702, 1118,
	2633, 1190, 1208, 1245, 1400, 0, 0, 1247, 0, 0,
	1942, 1929, 1930, 1927, 1641, 2250, 2254, 0, 0, 0,
	2256, -2, 0, 2278, -2, -2, 2512, 2564, 2329, 1920,
	2351, 2353, 2340, 2558, 2198, 0, 2440, 2437, 0, 2424,
	0, 2375, 2376, 0, 0, 2379, 2381, 2382, 2383, 2137,
	2130, 2129, 2537, 0, 0, 0, 0, 2415, 1902, 0,
	2429, 0, 0, 1970, 2429, 2429, 2022, 0, 2024, 1983,
	1971, 0, 1980, 0, 2644, 2008, 0, 2012, 2017, 2001,
	0, 405, 0, 409, 410, 411, 412, 414, 0, 0,
	0, 0, 0, 453, 803, 804, 0, 0, 0, 0,
	1690, 2071, 2076, 0, 2082, 2152, 0, 0, 0, 0,
	0, 0, 0, 0, 825, 286, 0, 1028, 1029, 209,
	210, 1363, 1361, 1656, 1660, 1657, 0, 212, 0, 0,
	1422, 0, 1425, 0, 0, 0, 0, 1432, 1449, 0,
	0, 0, 0, 0, 0, 1451, 0, 1450, 0, 0,
	1481, 0, 1629, 1636, 0, -2, 0, 0, 0, 219,
	245, 0, 0, 0, 0, 248, 1708, 221, 0, 0,
	254, 254, 1360, 0, 0, 1648, 1650, 1663, 0, 0,
	0, 0, 197, 0, 0, 1666, 1670, 1678, 1673, 1675,
	1681, 0, 0, 131, 140, 1782, 0, 0, 0, 1793,
	0, 183, 0, 0, 0, 1683, 267, 268, 0, 254,
	0, 254, 260, 254, 1638, 0, 0, 0, 0, 0,
	0, 318, 319, 320, 0, 555, 512, 0, 0, 0,
	0, 0, 0, 1686, 1687, 288, 0, 0, 290, 389,
	297, 474, 481, 486, 488, 489, 1410, 0, 1477, 1469,
	1470, 1471, 0, 1381, 1476, 1478, 0, 0, 1386, 0,
	0, 0, 0, 1366, 1348, 0, 1379, 1351, 0, 621,
	0, 398, 1337, 1515, 1563, 1497, 0, 1566, 0, 0,
	1606, 0, 0, 0, 0, 0, 0, 0, 1805, 1809,
	0, 1798, 1799, 1832, 1938, 0, 0, 0, 1819, 1939,
	0, 399, 0, 399, 357, 0, 358, 359, 360, 367,
	368, 369, 370, 341, 344, 0, 355, 867, 869, 0,
	0, 875, 1079, 1084, 1399, 0, 0, 0, 0, 1928,
	2258, -2, -2, 2279, 0, 2645, 2647, 1920, 0, 2426,
	1922, 0, 0, -2, 0, 0, 0, 1903, 1886, 0,
	1961, 1953, 1955, 1957, 2991, 2746, 3143, 1887, 1888, 2048,
	0, 0, 2010, 406, 415, 416, 0, 418, 419, 805,
	0, 0, 0, 0, 2078, 0, 0, 0, 812, 0,
	0, 0, 0, 1018, 0, 0, 1658, 214, 0, 0,
	1426, 1427, 1429, 0, 1431, 1433, 1434, 1351, 0, 1438,
	0, 2668, 0, 1443, 1446, 1447, 0, 0, 1460, 1482,
	0, 1491, 0, 1631, 1641, 1635, 0, 1633, 1493, 0,
	218, 247, 220, 249, 244, 0, 1638, 0, 222, 232,
	0, 0, 161, 0, 0, 2739, 200, 198, 196, 129,
	135, 137, 143, 1645, 186, 0, 163, 0, 269, 278,
	1637, 280, 264, 254, 0, 300, 302, 304, 305, 306,
	307, 0, 1667, 1671, 1679, 0, 1694, 1695, 1696, 1697,
	1698, 0, 0, 0, 299, 0, 0, 0, 480, 1351,
	1409, 1350, 1468, 0, 1479, 1351, 0, 0, 0, 0,
	0, 0, 1353, 0, 1352, 0, 0, 622, 625, 0,
	628, 2069, 635, 0, 0, 0, 1570, 0, 1617, 1615,
	0, 1623, 0, 0, 0, 1778, 0, 0, 1800, 1801,
	642, 1825, 0, 0, 1832, 1843, 378, 0, 381, 354,
	0, 343, 0, 871, 0, 873, 0, 1246, 1248, 0,
	0, 2352, 2444, 0, 0, 2377, 2378, -2, 0, 2318,
	2428, 2430, 0, 0, 0, 0, 0, 1972, 1981, 417,
	1691, 1691, 1691, 2072, 819, 820, 822, 816, 818, 0,
	0, 1654, 0, 1661, 256, 1424, 1428, 0, 1435, 0,
	0, 0, 1439, 1501, 0, 0, 1518, 1518, 1452, 0,
	0, 1485, 1486, 1406, 0, 1487, 1488, 1489, 1630, 1931,
	1636, 1351, 0, 0, 246, 251, 0, 0, 0, 0,
	0, 0, 185, 0, 258, 281, 1638, 0, 0, 1699,
	0, 0, 296, 330, 503, 501, 1353, 0, 1480, 1387,
	1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1388,
	1493, 0, 0, 1457, 1364, 0, 1367, 0, 1349, 0,
	626, 627, 630, 0, 1564, 0, 1571, 0, 0, 1624,
	0, 0, 1788, 1777, 1809, 1802, 1803, 2069, 0, 1833,
	0, 350, 351, 870, 0, 0, 1256, 1257, 0, 0,
	0, 0, 2439, 1923, 2319, 0, 0, 1956, 1958, 1959,
	1960, 806, 807, 808, 0, 0, 1655, 226, 0, 1495,
	1437, 1506, 0, 0, 0, 0, 0, 1453, 1483, 1484,
	1481, 1405, 0, 1634, 1632, 1462, 1495, 1497, 224, 0,
	1493, 0, 1415, 0, 0, 1418, 0, 0, 201, 2739,
	199, 0, 254, 784, 1691, 254, 0, 333, 0, 536,
	502, 504, 0, 0, 508, 509, 510, 1345, 0, 1473,
	1475, 1491, 1493, 1406, 0, 1368, 1410, 1366, 1565, 1569,
	1567, 1607, 1493, 0, 1491, 0, 1795, 1809, 1789, 1790,
	0, 1805, 0, 0, 399, 872, 874, 2436, 2456, 2445,
	-2, 3074, 2747, 0, 2456, 2456, 2431, 2432, 0, 0,
	0, 1351, 0, 1440, 1502, 1503, 0, 1498, 1499, 1500,
	2667, 1441, 1442, 1444, 1445, 2069, 0, 1492, 1501, 250,
	1351, 1412, 0, 0, 1413, 0, 0, 204, 0, 206,
	282, 1689, 1692, 0, 308, 0, 0, 477, 534, 0,
	0, 505, 506, 528, 507, 1342, 1344, 1351, 0, 1406,
	1491, 1351, 0, 0, 0, 1351, 1353, 1491, 0, 1406,
	0, 1784, 1794, 0, 1804, 1778, 0, 1828, 0, 380,
	2441, 0, 0, 2447, 2448, 2449, 2450, 2451, 2442, 2443,
	821, 823, 1430, 1436, 0, 1504, 0, 1505, 0, 0,
	0, 1461, 1490, 1506, 230, 1416, 0, 1419, 0, 202,
	0, 0, 328, 329, 533, 529, 1472, 1474, 1351, 1406,
	2069, 1354, 0, 1356, 1353, 1365, 1406, 0, 1351, 0,
	1807, 1783, 1787, 2626, 1788, 1826, 0, 0, 0, 2453,
	2454, 0, 0, 0, 1507, 0, 1510, 1511, 0, 1508,
	1481, 0, 0, 254, 0, 1907, 2069, 1351, 1644, 1355,
	1345, 1351, 1493, 2069, 1491, 1781, 1809, 1795, 0, 2069,
	2452, 2455, 2446, 1494, 1509, 1512, 1513, 1463, 0, 0,
	1693, 331, 0, 0, 535, 530, 531, 1644, 2069, 1456,
	0, 1643, 1343, 2069, 1491, 1644, 1406, 1774, 1780, 0,
	0, 1784, 2069, 1829, 1403, 0, 0, 532, 1454, 1644,
	1642, 1644, 1406, 1620, 1351, 1806, 1781, 1827, 1417, 1402,
	0, 332, 1455, 1618, 1351, 2069, 1775, 0, 2069, 1644,
	0, 1644, 1621, 1403, 1619, 1420,
}

var sqlTok1 = [...]int16{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 649, 3, 655, 650, 3,
	661, 662, 653, 651, 666, 652, 663, 654, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 670, 667,
	641, 643, 642, 646, 665, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 659, 3, 660, 656, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 668, 648, 669, 644,
}

var sqlTok2 = [...]int16{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]uint16{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 582,
	57925, 583, 57926, 584, 57927, 585, 57928, 586, 57929, 587,
	57930, 588, 57931, 589, 57932, 590, 57933, 591, 57934, 592,
	57935, 593, 57936, 594, 57937, 595, 57938, 596, 57939, 597,
	57940, 598, 57941, 599, 57942, 600, 57943, 601, 57944, 602,
	57945, 603, 57946, 604, 57947, 605, 57948, 606, 57949, 607,
	57950, 608, 57951, 609, 57952, 610, 57953, 611, 57954, 612,
	57955, 613, 57956, 614, 57957, 615, 57958, 616, 57959, 617,
	57960, 618, 57961, 619, 57962, 620, 57963, 621, 57964, 622,
	57965, 623, 57966, 624, 57967, 625, 57968, 626, 57969, 627,
	57970, 628, 57971, 629, 57972, 630, 57973, 631, 57974, 632,
	57975, 633, 57976, 634, 57977, 635, 57978, 636, 57979, 637,
	57980, 638, 57981, 639, 57982, 640, 57983, 645, 57984, 647,
	57985, 657, 57986, 658, 57987, 664, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := int(sqlPact[state])
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && int(sqlChk[int(sqlAct[n])]) == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || int(sqlExca[i+1]) != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := int(sqlExca[i])
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = int(sqlTok1[0])
		goto out
	}
	if char < len(sqlTok1) {
		token = int(sqlTok1[char])
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = int(sqlTok2[char-sqlPrivate])
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = int(sqlTok3[i+0])
		if token == char {
			token = int(sqlTok3[i+1])
			goto out
		}
	}

out:
	if token == 0 {
		token = int(sqlTok2[1]) /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = int(sqlPact[sqlstate])
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = int(sqlAct[sqln])
	if int(sqlChk[sqln]) == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = int(sqlDef[sqlstate])
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && int(sqlExca[xi+1]) == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = int(sqlExca[xi+0])
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = int(sqlExca[xi+1])
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = int(sqlPact[sqlS[sqlp].yys]) + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = int(sqlAct[sqln]) /* simulate a shift of "error" */
					if int(sqlChk[sqlstate]) == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= int(sqlR2[sqln])
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = int(sqlR1[sqln])
	sqlg := int(sqlPgo[sqln])
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = int(sqlAct[sqlg])
	} else {
		sqlstate = int(sqlAct[sqlj])
		if int(sqlChk[sqlstate]) != -sqln {
			sqlstate = int(sqlAct[sqlg])
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1660
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1665
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1669
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 8:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1675
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 12:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1678
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 14:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1679
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 16:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1680
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 18:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1681
		{
			return helpWith(sqllex, "GRANT")
		}
	case 20:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1682
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 22:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1683
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 24:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1684
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 26:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1685
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 28:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1686
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 30:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1687
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 32:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1688
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 36:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1691
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1692
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1693
		{
			return helpWith(sqllex, "FETCH")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1694
		{
			return helpWith(sqllex, "MOVE")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1703
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1704
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1706
		{
			return helpWith(sqllex, "ALTER")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1709
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 55:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1710
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 57:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1711
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 59:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1712
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 61:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1713
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 63:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1714
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 65:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1715
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 67:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1716
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 69:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1717
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 71:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1718
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 73:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1719
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 75:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1720
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 78:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1722
		{
			return helpWith(sqllex, "ALTER BACKUP SCHEDULE")
		}
	case 89:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1783
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 91:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1809
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 95:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1823
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1843
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 101:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1847
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1851
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1899
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 125:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1903
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1910
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1922
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1932
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1939
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1949
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1956
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1966
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1975
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1982
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1991
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2001
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
			}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2010
		{
			sqlVAL.union.val = &tree.AlterDatabaseAlterSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2020
		{
			sqlVAL.union.val = &tree.AlterDatabaseSecondaryRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SecondaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2029
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSecondaryRegion{
				DatabaseName: tree.Name(sqlDollar[3].str),
				IfExists:     false,
			}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2037
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSecondaryRegion{
				DatabaseName: tree.Name(sqlDollar[3].str),
				IfExists:     true,
			}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2046
		{
			s := sqlDollar[7].union.setZoneConfig()
			sqlVAL.union.val = &tree.AlterDatabaseSetZoneConfigExtension{
				DatabaseName:  tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelGlobal,
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: s.SetDefault,
					YAMLConfig: s.YAMLConfig,
					Options:    s.Options,
				},
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2059
		{
			s := sqlDollar[7].union.setZoneConfig()
			sqlVAL.union.val = &tree.AlterDatabaseSetZoneConfigExtension{
				DatabaseName:  tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelTable,
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: s.SetDefault,
					YAMLConfig: s.YAMLConfig,
					Options:    s.Options,
				},
			}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2072
		{
			s := sqlDollar[9].union.setZoneConfig()
			sqlVAL.union.val = &tree.AlterDatabaseSetZoneConfigExtension{
				DatabaseName:  tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelTable,
				RegionName:    tree.Name(sqlDollar[8].str),
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: s.SetDefault,
					YAMLConfig: s.YAMLConfig,
					Options:    s.Options,
				},
			}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2108
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2142
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 156:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2146
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2150
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2156
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2160
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2166
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2175
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2186
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2190
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2196
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2204
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2214
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2218
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2230
		{
			sqlVAL.union.val = tree.RelocateLease
		}
	case 173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2236
		{
			sqlVAL.union.val = tree.RelocateVoters
		}
	case 174:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2240
		{

			sqlVAL.union.val = tree.RelocateVoters
		}
	case 175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2245
		{
			sqlVAL.union.val = tree.RelocateNonVoters
		}
	case 176:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2251
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    tree.TableIndexName{Table: name},
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2263
		{

			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    sqlDollar[3].union.tableIndexName(),
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2274
		{
			sqlVAL.union.val = &tree.AlterIndexVisible{Index: sqlDollar[3].union.tableIndexName(), NotVisible: sqlDollar[4].union.bool(), IfExists: false}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2278
		{
			sqlVAL.union.val = &tree.AlterIndexVisible{Index: sqlDollar[5].union.tableIndexName(), NotVisible: sqlDollar[6].union.bool(), IfExists: true}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2284
		{
			sqlVAL.union.val = true
		}
	case 181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2288
		{
			sqlVAL.union.val = false
		}
	case 182:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2304
		{
			var zoneName string
			switch e := sqlDollar[3].union.expr().(type) {
			case *tree.UnresolvedName:
				if e.NumParts != 1 {
					return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
				}
				zoneName = e.Parts[0]
			case tree.DefaultVal:
				zoneName = "default"
			default:
				return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
			}
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(zoneName)}
			sqlVAL.union.val = s
		}
	case 183:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2324
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[8].union.slct(),
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[6].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2333
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[7].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2344
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[10].union.slct(),
				FromStoreID:     sqlDollar[6].union.expr(),
				ToStoreID:       sqlDollar[8].union.expr(),
				SubjectReplicas: sqlDollar[4].union.relocateSubject(),
			}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2353
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     sqlDollar[7].union.expr(),
				ToStoreID:       sqlDollar[9].union.expr(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2366
		{

			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					YAMLConfig: sqlDollar[4].union.expr(),
				},
			}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2375
		{
			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					Options: sqlDollar[4].union.kvOptions(),
				},
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2383
		{

			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: true,
				},
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2392
		{
			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					YAMLConfig: tree.DNull,
				},
			}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2402
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 192:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2410
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 193:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2421
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 194:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2431
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 195:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2441
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 196:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2450
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 197:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2461
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 198:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2467
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 199:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2475
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2479
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2483
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 202:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2487
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 203:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2493
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2498
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2509
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2513
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2519
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2523
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 209:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2530
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2535
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2540
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colTableDef()}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2545
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colTableDef()}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2550
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colTableDef()}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2555
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colTableDef()}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2560
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2565
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2570
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2575
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2580
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2585
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 221:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2589
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 222:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2594
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2603
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 224:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2615
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2625
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2633
		{
			def := sqlDollar[7].union.constraintDef()
			def.SetName(tree.Name(sqlDollar[6].str))
			def.SetIfNotExists()
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      def,
				ValidationBehavior: sqlDollar[8].union.validationBehavior(),
			}
		}
	case 227:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2643
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2646
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2652
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 230:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2659
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:       sqlDollar[7].union.idxElems(),
				Sharded:       sqlDollar[9].union.shardedIndexDef(),
				StorageParams: sqlDollar[10].union.storageParams(),
			}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2667
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 232:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2674
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2683
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2692
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2697
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2704
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2711
		{
			sqlVAL.union.val = &tree.AlterTableSetStorageParams{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2717
		{
			sqlVAL.union.val = &tree.AlterTableResetStorageParams{
				Params: sqlDollar[3].union.storageParamKeys(),
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2724
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2725
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2729
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2733
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2739
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2747
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2751
		{
			sqlVAL.union.val = nil
		}
	case 246:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2757
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2761
		{
			sqlVAL.union.val = nil
		}
	case 248:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2767
		{
			sqlVAL.union.val = true
		}
	case 249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2771
		{
			sqlVAL.union.val = false
		}
	case 250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2777
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 251:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2781
		{
			sqlVAL.union.val = nil
		}
	case 252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2788
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2792
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 254:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2796
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2802
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 256:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2806
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 257:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2831
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 258:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2842
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2853
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 260:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2862
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2872
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2881
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2890
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2899
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 265:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2903
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2906
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 267:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2910
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2917
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2924
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2930
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2937
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2944
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2950
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2958
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2962
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 283:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2983
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2990
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2994
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2998
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 287:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3002
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 288:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3045
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.backupTargetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3057
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.backupTargetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3067
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.backupTargetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3078
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.backupTargetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3087
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 293:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3091
		{
			sqlVAL.union.val = (*tree.BackupTargetList)(nil)
		}
	case 294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3095
		{
			t := sqlDollar[1].union.backupTargetList()
			sqlVAL.union.val = &t
		}
	case 295:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3103
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 296:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3107
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 297:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3111
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3118
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3122
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3131
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3135
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: tree.MakeDBool(true)}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3139
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: sqlDollar[3].union.expr()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3143
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: tree.MakeDBool(true)}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3147
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: tree.MakeDBool(true)}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3151
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: tree.MakeDBool(false)}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3155
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3159
		{
			sqlVAL.union.val = &tree.BackupOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3241
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.backupTargetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3252
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 310:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3271
		{
			sqlVAL.union.val = &tree.AlterBackupSchedule{
				ScheduleID: uint64(sqlDollar[4].union.int64()),
				Cmds:       sqlDollar[5].union.alterBackupScheduleCmds(),
			}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3277
		{
			return helpWith(sqllex, "ALTER BACKUP SCHEDULE")
		}
	case 312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3282
		{
			sqlVAL.union.val = tree.AlterBackupScheduleCmds{sqlDollar[1].union.alterBackupScheduleCmd()}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3286
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupScheduleCmds(), sqlDollar[3].union.alterBackupScheduleCmd())
		}
	case 314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3293
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetLabel{
				Label: sqlDollar[3].union.expr(),
			}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3299
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetInto{
				Into: sqlDollar[3].union.stringOrPlaceholderOptList(),
			}
		}
	case 316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3305
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetWith{
				With: sqlDollar[3].union.backupOptions(),
			}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3311
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetRecurring{
				Recurrence: sqlDollar[2].union.expr(),
			}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3317
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetFullBackup{
				FullBackup: tree.FullBackupClause{AlwaysFull: true},
			}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3323
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetFullBackup{
				FullBackup: tree.FullBackupClause{Recurrence: sqlDollar[4].union.expr()},
			}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3329
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetScheduleOption{
				Option: sqlDollar[4].union.kvOption(),
			}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3338
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3342
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3352
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3358
		{
			sqlVAL.union.val = &tree.LabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3362
		{
			sqlVAL.union.val = &tree.LabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3368
		{
			sqlVAL.union.val = sqlDollar[1].union.labelSpec()
		}
	case 327:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3372
		{
			sqlVAL.union.val = &tree.LabelSpec{IfNotExists: false}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3381
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3385
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3389
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 331:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3395
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 332:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3399
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 333:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3403
		{
			sqlVAL.union.val = nil
		}
	case 334:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3420
		{
			sqlVAL.union.val = &tree.CreateExternalConnection{
				ConnectionLabelSpec: *(sqlDollar[4].union.labelSpec()),
				As:                  sqlDollar[6].union.expr(),
			}
		}
	case 335:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3426
		{
			return helpWith(sqllex, "CREATE EXTERNAL CONNECTION")
		}
	case 336:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3437
		{
			sqlVAL.union.val = &tree.DropExternalConnection{
				ConnectionLabel: sqlDollar[4].union.expr(),
			}
		}
	case 337:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3442
		{
			return helpWith(sqllex, "DROP EXTERNAL CONNECTION")
		}
	case 338:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3477
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3486
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 340:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3496
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.backupTargetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3505
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.backupTargetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 342:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3515
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.SystemUsers,
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3524
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.SystemUsers,
				Subdir:             sqlDollar[5].union.expr(),
				From:               sqlDollar[7].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[8].union.asOfClause(),
				Options:            *(sqlDollar[9].union.restoreOptions()),
			}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3534
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets:  sqlDollar[2].union.backupTargetList(),
				From:     sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsTenant: sqlDollar[8].union.asTenantClause(),
			}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3541
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3545
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3549
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 348:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3555
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3559
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3566
		{
			tenID := uint64(sqlDollar[3].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TenantID{Specified: true, ID: tenID}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3574
		{
			if sqlDollar[3].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.TenantID{Specified: true}
		}
	case 352:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3581
		{
			sqlVAL.union.val = tree.TenantID{Specified: false}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3588
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 354:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3592
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 355:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3596
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3603
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3607
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3616
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3620
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3624
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3628
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3632
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3636
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3640
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3644
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3648
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3652
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3656
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3660
		{
			sqlVAL.union.val = &tree.RestoreOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3664
		{
			sqlVAL.union.val = &tree.RestoreOptions{AsTenant: sqlDollar[3].union.expr()}
		}
	case 371:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3668
		{
			sqlVAL.union.val = &tree.RestoreOptions{SchemaOnly: true}
		}
	case 372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3672
		{
			sqlVAL.union.val = &tree.RestoreOptions{VerifyData: true}
		}
	case 373:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3677
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3683
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3687
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "alter aggregate")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3714
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 377:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3719
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 378:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3723
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 379:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3729
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 380:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3734
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 381:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3739
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 382:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3743
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3760
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 384:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3763
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3767
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 386:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3771
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3779
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3783
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3789
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 390:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3793
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3799
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3803
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3807
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 394:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3811
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3817
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3821
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3827
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 398:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3831
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 399:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3835
		{
			sqlVAL.union.val = nil
		}
	case 400:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3847
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 401:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3861
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3867
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 403:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3871
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3877
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3881
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3889
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3893
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3897
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3901
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 410:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3905
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3909
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "oids")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3913
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "freeze")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3917
		{
			sqlVAL.union.val = &tree.CopyOptions{Header: true}
		}
	case 414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3921
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "quote")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3925
		{
			sqlVAL.union.val = &tree.CopyOptions{Escape: tree.NewStrVal(sqlDollar[2].str)}
		}
	case 416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3929
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force quote")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3933
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force not null")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3937
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force null")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3941
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "encoding")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3949
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3950
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3951
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3952
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3953
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3963
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3971
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3973
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3977
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3980
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3990
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 435:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3999
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4007
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4009
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 438:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4013
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4016
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4026
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 441:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4035
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4043
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4045
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 444:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4049
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4052
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 446:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4060
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4063
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 448:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4067
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4071
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: sqlDollar[4].union.objectNamePrefix(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 450:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4075
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4079
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4092
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 453:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4097
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4100
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "comment on extension")
		}
	case 455:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4101
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "comment on function")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4105
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 457:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4110
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4122
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4124
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4125
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4127
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4128
		{
			return helpWith(sqllex, "CREATE EXTERNAL CONNECTION")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4129
		{
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4130
		{
			return helpWith(sqllex, "CREATE")
		}
	case 472:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4137
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4140
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4144
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension if not exists with")
		}
	case 475:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4147
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension with")
		}
	case 476:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4150
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 477:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:4155
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToFunctionName()
			sqlVAL.union.val = &tree.CreateFunction{
				IsProcedure: false,
				Replace:     sqlDollar[2].union.bool(),
				FuncName:    name,
				Args:        sqlDollar[6].union.functionArgs(),
				ReturnType: tree.FuncReturnType{
					Type:  sqlDollar[10].union.typeReference(),
					IsSet: sqlDollar[9].union.bool(),
				},
				Options:     sqlDollar[11].union.functionOptions(),
				RoutineBody: sqlDollar[12].union.routineBody(),
			}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4172
		{
			sqlVAL.union.val = true
		}
	case 479:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4173
		{
			sqlVAL.union.val = false
		}
	case 480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4176
		{
			sqlVAL.union.val = true
		}
	case 481:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4177
		{
			sqlVAL.union.val = false
		}
	case 483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4183
		{
			sqlVAL.union.val = sqlDollar[1].union.functionArgs()
		}
	case 484:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4184
		{
			sqlVAL.union.val = tree.FuncArgs{}
		}
	case 485:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4187
		{
			sqlVAL.union.val = tree.FuncArgs{sqlDollar[1].union.functionArg()}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4189
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionArgs(), sqlDollar[3].union.functionArg())
		}
	case 488:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4196
		{
			arg := sqlDollar[1].union.functionArg()
			arg.DefaultVal = sqlDollar[3].union.expr()
			sqlVAL.union.val = arg
		}
	case 489:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4202
		{
			arg := sqlDollar[1].union.functionArg()
			arg.DefaultVal = sqlDollar[3].union.expr()
			sqlVAL.union.val = arg
		}
	case 490:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4210
		{
			sqlVAL.union.val = tree.FuncArg{
				Name:  tree.Name(sqlDollar[2].str),
				Type:  sqlDollar[3].union.typeReference(),
				Class: sqlDollar[1].union.functionArgClass(),
			}
		}
	case 491:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4218
		{
			sqlVAL.union.val = tree.FuncArg{
				Name:  tree.Name(sqlDollar[1].str),
				Type:  sqlDollar[3].union.typeReference(),
				Class: sqlDollar[2].union.functionArgClass(),
			}
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4226
		{
			sqlVAL.union.val = tree.FuncArg{
				Name:  tree.Name(sqlDollar[1].str),
				Type:  sqlDollar[2].union.typeReference(),
				Class: tree.FunctionArgIn,
			}
		}
	case 493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4234
		{
			sqlVAL.union.val = tree.FuncArg{
				Type:  sqlDollar[2].union.typeReference(),
				Class: sqlDollar[1].union.functionArgClass(),
			}
		}
	case 494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4241
		{
			sqlVAL.union.val = tree.FuncArg{
				Type:  sqlDollar[1].union.typeReference(),
				Class: tree.FunctionArgIn,
			}
		}
	case 495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4249
		{
			sqlVAL.union.val = tree.FunctionArgIn
		}
	case 496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4250
		{
			return unimplemented(sqllex, "create function with 'OUT' argument class")
		}
	case 497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4251
		{
			return unimplemented(sqllex, "create function with 'INOUT' argument class")
		}
	case 498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4252
		{
			return unimplemented(sqllex, "create function with 'IN OUT' argument class")
		}
	case 499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4253
		{
			return unimplemented(sqllex, "create function with 'VARIADIC' argument class")
		}
	case 502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4262
		{
			sqlVAL.union.val = sqlDollar[1].union.functionOptions()
		}
	case 503:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4263
		{
			sqlVAL.union.val = tree.FunctionOptions{}
		}
	case 504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4266
		{
			sqlVAL.union.val = tree.FunctionOptions{sqlDollar[1].union.functionOption()}
		}
	case 505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4268
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionOptions(), sqlDollar[2].union.functionOption())
		}
	case 506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4274
		{
			sqlVAL.union.val = tree.FunctionBodyStr(sqlDollar[2].str)
		}
	case 507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4278
		{
			lang, err := tree.AsFunctionLanguage(sqlDollar[2].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = lang
		}
	case 508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4285
		{
			return unimplemented(sqllex, "create transform function")
		}
	case 509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4286
		{
			return unimplemented(sqllex, "create window function")
		}
	case 510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4288
		{
			sqlVAL.union.val = sqlDollar[1].union.functionOption()
		}
	case 511:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4294
		{
			sqlVAL.union.val = tree.FunctionCalledOnNullInput
		}
	case 512:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4298
		{
			sqlVAL.union.val = tree.FunctionReturnsNullOnNullInput
		}
	case 513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4302
		{
			sqlVAL.union.val = tree.FunctionStrict
		}
	case 514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4306
		{
			sqlVAL.union.val = tree.FunctionImmutable
		}
	case 515:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4310
		{
			sqlVAL.union.val = tree.FunctionStable
		}
	case 516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4314
		{
			sqlVAL.union.val = tree.FunctionVolatile
		}
	case 517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4318
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4322
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4326
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4330
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 521:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4334
		{
			sqlVAL.union.val = tree.FunctionLeakproof(true)
		}
	case 522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4338
		{
			sqlVAL.union.val = tree.FunctionLeakproof(false)
		}
	case 523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4342
		{
			return unimplemented(sqllex, "create function...cost")
		}
	case 524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4346
		{
			return unimplemented(sqllex, "create function...rows")
		}
	case 525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4350
		{
			return unimplemented(sqllex, "create function...support")
		}
	case 526:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4357
		{
			return unimplemented(sqllex, "create function...set")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4358
		{
			return unimplemented(sqllex, "create function...parallel")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4365
		{
			sqlVAL.union.val = &tree.RoutineReturn{
				ReturnVal: sqlDollar[2].union.expr(),
			}
		}
	case 532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4377
		{
			sqlVAL.union.val = append(sqlDollar[1].union.stmts(), sqlDollar[2].union.stmt())
		}
	case 533:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4381
		{
			sqlVAL.union.val = tree.Statements{}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4387
		{
			sqlVAL.union.val = &tree.RoutineBody{
				Stmts: tree.Statements{sqlDollar[1].union.stmt()},
			}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4393
		{
			sqlVAL.union.val = &tree.RoutineBody{
				Stmts: sqlDollar[3].union.stmts(),
			}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4399
		{
			sqlVAL.union.val = (*tree.RoutineBody)(nil)
		}
	case 537:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4405
		{
			sqlVAL.union.val = &tree.DropFunction{
				Functions:    sqlDollar[3].union.functionObjs(),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4412
		{
			sqlVAL.union.val = &tree.DropFunction{
				IfExists:     true,
				Functions:    sqlDollar[5].union.functionObjs(),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4422
		{
			sqlVAL.union.val = tree.FuncObjs{sqlDollar[1].union.functionObj()}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4426
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionObjs(), sqlDollar[3].union.functionObj())
		}
	case 541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4432
		{
			sqlVAL.union.val = tree.FuncObj{
				FuncName: sqlDollar[1].union.unresolvedObjectName().ToFunctionName(),
				Args:     sqlDollar[2].union.functionArgs(),
			}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4439
		{
			sqlVAL.union.val = tree.FuncObj{
				FuncName: sqlDollar[1].union.unresolvedObjectName().ToFunctionName(),
			}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4447
		{
			sqlVAL.union.val = sqlDollar[2].union.functionArgs()
		}
	case 544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4451
		{
			sqlVAL.union.val = tree.FuncArgs{}
		}
	case 545:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4457
		{
			sqlVAL.union.val = tree.FuncArgs{sqlDollar[1].union.functionArg()}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4461
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionArgs(), sqlDollar[3].union.functionArg())
		}
	case 547:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4467
		{
			sqlVAL.union.val = &tree.AlterFunctionOptions{
				Function: sqlDollar[3].union.functionObj(),
				Options:  sqlDollar[4].union.functionOptions(),
			}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4476
		{
			sqlVAL.union.val = tree.FunctionOptions{sqlDollar[1].union.functionOption()}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4480
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionOptions(), sqlDollar[2].union.functionOption())
		}
	case 550:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4485
		{
		}
	case 551:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4486
		{
		}
	case 552:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4490
		{
			sqlVAL.union.val = &tree.AlterFunctionRename{
				Function: sqlDollar[3].union.functionObj(),
				NewName:  tree.Name(sqlDollar[6].str),
			}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4499
		{
			sqlVAL.union.val = &tree.AlterFunctionSetSchema{
				Function:      sqlDollar[3].union.functionObj(),
				NewSchemaName: tree.Name(sqlDollar[6].str),
			}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4508
		{
			sqlVAL.union.val = &tree.AlterFunctionSetOwner{
				Function: sqlDollar[3].union.functionObj(),
				NewOwner: sqlDollar[6].union.roleSpec(),
			}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4517
		{
			sqlVAL.union.val = &tree.AlterFunctionDepExtension{
				Function:  sqlDollar[3].union.functionObj(),
				Remove:    sqlDollar[4].union.bool(),
				Extension: tree.Name(sqlDollar[8].str),
			}
		}
	case 556:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4527
		{
			sqlVAL.union.val = true
		}
	case 557:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4531
		{
			sqlVAL.union.val = false
		}
	case 558:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4536
		{
			return unimplemented(sqllex, "create access method")
		}
	case 559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4537
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "create aggregate")
		}
	case 560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4538
		{
			return unimplemented(sqllex, "create cast")
		}
	case 561:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4539
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4540
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 563:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4541
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 564:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4542
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 565:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4543
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 566:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4544
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4545
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4546
		{
			return unimplemented(sqllex, "create publication")
		}
	case 569:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4547
		{
			return unimplemented(sqllex, "create rule")
		}
	case 570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4548
		{
			return unimplemented(sqllex, "create server")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4549
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4550
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4551
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4552
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4555
		{
		}
	case 576:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4556
		{
		}
	case 577:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4559
		{
		}
	case 578:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4560
		{
		}
	case 579:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4563
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4564
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "drop aggregate")
		}
	case 581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4565
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4566
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4567
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4568
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 585:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4569
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension if exists")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4570
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension")
		}
	case 587:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4571
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 588:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4572
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4573
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4574
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4575
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4576
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4577
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4578
		{
			return unimplemented(sqllex, "drop server")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4579
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4580
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4581
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4584
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4585
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4586
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 605:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4587
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4588
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 608:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4590
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4591
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4592
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4593
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 616:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4604
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4612
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4616
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 619:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4620
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4626
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4630
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4639
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4646
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4652
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4658
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4662
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4673
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4685
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4700
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4709
		{
			target, err := tree.ChangefeedTargetFromTableExpr(sqlDollar[9].union.tblExpr())
			if err != nil {
				return setErr(sqllex, err)
			}

			sqlVAL.union.val = &tree.CreateChangefeed{
				SinkURI: sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
				Targets: tree.ChangefeedTargets{target},
				Select: &tree.SelectClause{
					Exprs: sqlDollar[7].union.selExprs(),
					From:  tree.From{Tables: tree.TableExprs{sqlDollar[9].union.tblExpr()}},
					Where: tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
				},
			}
		}
	case 631:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4727
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4737
		{
			sqlVAL.union.val = tree.ChangefeedTargets{sqlDollar[1].union.changefeedTarget()}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4741
		{
			sqlVAL.union.val = append(sqlDollar[1].union.changefeedTargets(), sqlDollar[3].union.changefeedTarget())
		}
	case 634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4747
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName:  sqlDollar[2].union.unresolvedObjectName().ToUnresolvedName(),
				FamilyName: tree.Name(sqlDollar[3].str),
			}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4758
		{
		}
	case 637:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4760
		{
		}
	case 638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4764
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 639:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4768
		{
			sqlVAL.str = ""
		}
	case 640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4774
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 641:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4778
		{

			sqlVAL.union.val = nil
		}
	case 642:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4792
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4802
		{
			return helpWith(sqllex, "DELETE")
		}
	case 644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4805
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 645:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4806
		{
		}
	case 646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4814
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4817
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4819
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeSequences}
		}
	case 649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4823
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeTemp}
		}
	case 650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4827
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeTemp}
		}
	case 651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4830
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4839
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4840
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4841
		{
			return helpWith(sqllex, "DROP EXTERNAL CONNECTION")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4842
		{
		}
	case 660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4843
		{
			return helpWith(sqllex, "DROP")
		}
	case 662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4846
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4847
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4848
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4849
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4850
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4851
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4852
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4861
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4865
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 678:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4869
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 679:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4878
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4886
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4894
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4898
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4901
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 684:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4909
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 685:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4913
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4916
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 687:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4924
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 688:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4933
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4941
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 690:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4949
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 691:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4957
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4964
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 693:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4971
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 694:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4979
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4986
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4990
		{
			sqlVAL.union.val = tree.GrantTargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 697:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4996
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5000
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 699:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5009
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 700:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5017
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5024
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5032
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 703:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5036
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5039
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 705:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5043
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5048
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5070
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5075
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5077
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5082
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5086
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5109
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5116
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 717:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5118
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5126
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5134
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5142
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 721:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5150
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5161
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5169
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5172
		{
			return helpWith(sqllex, "DELETE")
		}
	case 734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5174
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5175
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5176
		{
			return helpWith(sqllex, "INSERT")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5179
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5181
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 747:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5184
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5189
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5190
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5191
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5196
		{
			return helpWith(sqllex, "DELETE")
		}
	case 759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5197
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5198
		{
			return helpWith(sqllex, "INSERT")
		}
	case 762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5200
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5204
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5205
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 768:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5209
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5213
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 770:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5223
		{
			sqlVAL.union.val = &tree.AlterChangefeed{
				Jobs: sqlDollar[3].union.expr(),
				Cmds: sqlDollar[4].union.alterChangefeedCmds(),
			}
		}
	case 771:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5229
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5233
		{
			sqlVAL.union.val = tree.AlterChangefeedCmds{sqlDollar[1].union.alterChangefeedCmd()}
		}
	case 773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5237
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterChangefeedCmds(), sqlDollar[2].union.alterChangefeedCmd())
		}
	case 774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5244
		{
			sqlVAL.union.val = &tree.AlterChangefeedAddTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
				Options: sqlDollar[3].union.kvOptions(),
			}
		}
	case 775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5252
		{
			sqlVAL.union.val = &tree.AlterChangefeedDropTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
			}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5258
		{
			sqlVAL.union.val = &tree.AlterChangefeedSetOptions{
				Options: sqlDollar[2].union.kvOptions(),
			}
		}
	case 777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5264
		{
			sqlVAL.union.val = &tree.AlterChangefeedUnsetOptions{
				Options: sqlDollar[2].union.nameList(),
			}
		}
	case 778:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5283
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Backup: sqlDollar[3].union.expr(),
				Cmds:   sqlDollar[4].union.alterBackupCmds(),
			}
		}
	case 779:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5290
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Subdir: sqlDollar[3].union.expr(),
				Backup: sqlDollar[5].union.expr(),
				Cmds:   sqlDollar[6].union.alterBackupCmds(),
			}
		}
	case 780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5297
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5301
		{
			sqlVAL.union.val = tree.AlterBackupCmds{sqlDollar[1].union.alterBackupCmd()}
		}
	case 782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5305
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupCmds(), sqlDollar[2].union.alterBackupCmd())
		}
	case 783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5311
		{
			sqlVAL.union.val = &tree.AlterBackupKMS{
				KMSInfo: sqlDollar[2].union.backupKMS(),
			}
		}
	case 784:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5319
		{
			sqlVAL.union.val = tree.BackupKMS{
				NewKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList(),
				OldKMSURI: sqlDollar[7].union.stringOrPlaceholderOptList(),
			}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5332
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 786:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5340
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5348
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5352
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 789:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5356
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5366
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5373
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5381
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5385
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 794:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5389
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 795:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5399
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5403
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5407
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5411
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5414
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 800:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5437
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.grantTargetList(), WithGrantOption: sqlDollar[7].union.bool()}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5441
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5445
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5449
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.grantTargetList(), Grantees: sqlDollar[7].union.roleSpecList(), WithGrantOption: sqlDollar[8].union.bool()}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5453
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:        sqlDollar[7].union.roleSpecList(),
				WithGrantOption: sqlDollar[8].union.bool(),
			}
		}
	case 805:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5464
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 806:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5468
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllSequencesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5480
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5492
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllFunctionsInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5504
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[3].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees:        sqlDollar[5].union.roleSpecList(),
				WithGrantOption: sqlDollar[6].union.bool(),
			}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5514
		{
			return helpWith(sqllex, "GRANT")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5537
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.grantTargetList(), GrantOptionFor: false}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5541
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Grantees: sqlDollar[9].union.roleSpecList(), Targets: sqlDollar[7].union.grantTargetList(), GrantOptionFor: true}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5545
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5549
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5553
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.grantTargetList(), Grantees: sqlDollar[7].union.roleSpecList(), GrantOptionFor: false}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5557
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Targets: sqlDollar[8].union.grantTargetList(), Grantees: sqlDollar[10].union.roleSpecList(), GrantOptionFor: true}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5561
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[7].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5572
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[8].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5583
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5595
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllSequencesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5607
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[11].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5619
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllFunctionsInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5631
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[11].union.objectNamePrefixList(),
					AllFunctionsInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5643
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[3].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees: sqlDollar[5].union.roleSpecList(),
			}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5653
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[6].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees:       sqlDollar[8].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5664
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 827:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5667
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5673
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5677
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 830:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5687
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5691
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 837:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5705
		{
			return helpWith(sqllex, "RESET")
		}
	case 839:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5706
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 840:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5714
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5718
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5722
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true, Reset: true}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5725
		{
			return helpWith(sqllex, "RESET")
		}
	case 844:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5733
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5736
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 846:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5747
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5750
		{
			return helpWith(sqllex, "USE")
		}
	case 849:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5754
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 850:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5755
		{
		}
	case 851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5756
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 853:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5760
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 855:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5761
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5762
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5763
		{
			return helpWith(sqllex, "USE")
		}
	case 862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5779
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5794
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5797
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 865:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5815
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5823
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5827
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 868:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5831
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5837
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5841
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5847
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5851
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5855
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5859
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5863
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5874
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5877
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 878:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5887
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantID:          sqlDollar[3].union.expr(),
			}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5895
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantAll:         true,
			}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5902
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 881:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5903
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 886:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5917
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5933
		{

			sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[4].union.exprs()}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5939
		{

			sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[5].union.exprs()}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5945
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5948
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 891:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5950
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 892:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5953
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 893:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5956
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5970
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5975
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5992
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5995
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 898:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5997
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6000
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6004
		{
			sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6016
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6020
		{
			return unimplemented(sqllex, "set from current")
		}
	case 904:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6024
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6029
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6038
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6043
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6047
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 911:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6059
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6064
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6071
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6075
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 915:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6081
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6085
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 918:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6092
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 921:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6113
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6117
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 923:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6123
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 924:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6127
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6131
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 926:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6135
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 927:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6139
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6145
		{
			sqlVAL.union.val = tree.Low
		}
	case 929:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6149
		{
			sqlVAL.union.val = tree.Normal
		}
	case 930:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6153
		{
			sqlVAL.union.val = tree.High
		}
	case 931:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6164
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6168
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 933:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6172
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6177
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6181
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 938:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6198
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 940:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6199
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 942:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6200
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 944:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6201
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 946:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6202
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 948:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6203
		{
			return helpWith(sqllex, "SHOW CREATE EXTERNAL CONNECTIONS")
		}
	case 950:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6204
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 952:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6205
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 954:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6206
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 956:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6207
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 959:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6209
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 961:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6210
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 963:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6211
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 965:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6212
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 967:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6213
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6215
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6216
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 974:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6217
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 977:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6219
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 980:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6221
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6222
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 984:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6223
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 986:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6224
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 988:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6225
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 990:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6226
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 992:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6227
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 994:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6228
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 996:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6229
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 998:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6230
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6231
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6232
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6233
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6234
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6235
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6236
		{
			return helpWith(sqllex, "SHOW")
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6239
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6248
		{
			sqlVAL.union.val = &tree.CloseCursor{
				All: true,
			}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6254
		{
			sqlVAL.union.val = &tree.CloseCursor{
				Name: tree.Name(sqlDollar[2].str),
			}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6259
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6269
		{
			sqlVAL.union.val = &tree.DeclareCursor{
				Binary:      sqlDollar[3].union.bool(),
				Name:        tree.Name(sqlDollar[2].str),
				Sensitivity: sqlDollar[4].union.cursorSensitivity(),
				Scroll:      sqlDollar[5].union.cursorScrollOption(),
				Hold:        sqlDollar[7].union.bool(),
				Select:      sqlDollar[9].union.slct(),
			}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6279
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6283
		{
			sqlVAL.union.val = true
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6287
		{
			sqlVAL.union.val = false
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6293
		{
			sqlVAL.union.val = tree.Insensitive
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6297
		{
			sqlVAL.union.val = tree.Asensitive
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6301
		{
			sqlVAL.union.val = tree.UnspecifiedSensitivity
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6307
		{
			sqlVAL.union.val = tree.Scroll
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6311
		{
			sqlVAL.union.val = tree.NoScroll
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6315
		{
			sqlVAL.union.val = tree.UnspecifiedScroll
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6321
		{
			sqlVAL.union.val = true
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6325
		{
			sqlVAL.union.val = false
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6329
		{
			sqlVAL.union.val = false
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6339
		{
			sqlVAL.union.val = &tree.FetchCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6344
		{
			return helpWith(sqllex, "FETCH")
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6352
		{
			sqlVAL.union.val = &tree.MoveCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6357
		{
			return helpWith(sqllex, "MOVE")
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6361
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[1].str),
				Count: 1,
			}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6368
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[2].str),
				Count: 1,
			}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6375
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6382
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6389
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[4].str),
				Count: sqlDollar[2].union.int64() * sqlDollar[1].union.int64(),
			}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6396
		{
			fetchType := tree.FetchAll
			count := sqlDollar[1].union.int64()
			if count < 0 {
				fetchType = tree.FetchBackwardAll
			}
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: fetchType,
			}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6408
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchAbsolute,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6416
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchRelative,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6424
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchFirst,
			}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6431
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchLast,
			}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6439
		{
			sqlVAL.union.val = int64(1)
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6440
		{
			sqlVAL.union.val = int64(-1)
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6443
		{
			sqlVAL.union.val = sqlDollar[1].union.int64()
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6444
		{
			sqlVAL.union.val = int64(1)
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6447
		{
			sqlVAL.union.val = int64(1)
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6448
		{
			sqlVAL.union.val = int64(-1)
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6451
		{
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6452
		{
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6455
		{
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6456
		{
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6460
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6465
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6470
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6475
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6480
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6490
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6491
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6492
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6497
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6507
		{
			sqlVAL.str = "client_encoding"
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6512
		{
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6514
		{

			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6519
		{
			sqlVAL.str = "timezone"
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6520
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6524
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6528
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6544
		{
			sqlVAL.union.val = &tree.ShowTableStats{
				Table:   sqlDollar[5].union.unresolvedObjectName(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6551
		{

			sqlVAL.union.val = &tree.ShowTableStats{
				Table:     sqlDollar[7].union.unresolvedObjectName(),
				UsingJSON: true,
				Options:   sqlDollar[8].union.kvOptions(),
			}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6559
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6572
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6580
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6588
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.stringOrPlaceholderOptList(),
			}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6594
		{
			sqlVAL.union.val = &tree.ShowBackup{
				From:         true,
				Details:      sqlDollar[3].union.showBackupDetails(),
				Path:         sqlDollar[5].union.expr(),
				InCollection: sqlDollar[7].union.stringOrPlaceholderOptList(),
				Options:      sqlDollar[8].union.kvOptions(),
			}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6604
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.stringOrPlaceholderOptList(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6613
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6621
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupSchemaDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6629
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6637
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6645
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupValidateDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6652
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6656
		{
			sqlVAL.union.val = tree.BackupDefaultDetails
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6660
		{
			sqlVAL.union.val = tree.BackupSchemaDetails
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6664
		{
			sqlVAL.union.val = tree.BackupFileDetails
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6668
		{
			sqlVAL.union.val = tree.BackupRangeDetails
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6672
		{
			sqlVAL.union.val = tree.BackupValidateDetails
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6684
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6688
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6691
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6693
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6696
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6698
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6702
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6705
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6709
		{
			sqlVAL.union.val = sqlDollar[1].union.stmt()
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6711
		{
			switch t := sqlDollar[1].union.stmt().(type) {
			case *tree.ShowClusterSetting:
				sqlVAL.union.val = &tree.ShowTenantClusterSetting{
					ShowClusterSetting: t,
					TenantID:           sqlDollar[4].union.expr(),
				}
			case *tree.ShowClusterSettingList:
				sqlVAL.union.val = &tree.ShowTenantClusterSettingList{
					ShowClusterSettingList: t,
					TenantID:               sqlDollar[4].union.expr(),
				}
			}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6725
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6733
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6736
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6744
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6748
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6752
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6756
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6759
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6767
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6770
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6776
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles:  sqlDollar[4].union.roleSpecList(),
				Schema: tree.Name(sqlDollar[5].str),
			}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6782
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
				Schema:      tree.Name(sqlDollar[7].str),
			}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6788
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6795
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6799
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6809
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6818
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6825
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6828
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6841
		{
			lst := sqlDollar[3].union.grantTargetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6850
		{
			sqlVAL.union.val = &tree.ShowGrants{
				Targets:  &tree.GrantTargetList{System: true},
				Grantees: sqlDollar[4].union.roleSpecList(),
			}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6856
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6864
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6867
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6869
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6873
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6877
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6880
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6882
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6886
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6889
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6897
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6900
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6902
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6905
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6913
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6916
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6918
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6921
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6925
		{
			sqlVAL.union.val = true
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6927
		{
			sqlVAL.union.val = true
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6929
		{
			sqlVAL.union.val = false
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6946
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6950
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6954
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6957
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6958
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6959
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6961
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6965
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6969
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6973
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6976
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6978
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6986
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6994
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7002
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7003
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7013
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7019
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7021
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7027
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7029
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7035
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7039
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7043
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7049
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7053
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7057
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7068
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7071
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7073
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7076
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7078
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7082
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7085
		{
			sqlVAL.union.val = true
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7086
		{
			sqlVAL.union.val = false
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7094
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7097
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7099
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7102
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7110
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7120
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7130
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7133
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7140
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7143
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7145
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7148
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7151
		{
			sqlVAL.union.val = true
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7152
		{
			sqlVAL.union.val = false
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7159
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7163
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7166
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7173
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7177
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7180
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7187
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7191
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7195
		{

			sqlVAL.union.val = &tree.ShowCompletions{
				Statement: tree.NewStrVal(sqlDollar[7].str),
				Offset:    sqlDollar[5].union.numVal(),
			}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7205
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7212
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7216
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7227
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7230
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7238
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7243
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7248
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7252
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7259
		{
			sqlVAL.union.val = &tree.ShowTransferState{TransferKey: tree.NewStrVal(sqlDollar[5].str)}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7263
		{
			sqlVAL.union.val = &tree.ShowTransferState{}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7266
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7278
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7282
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7287
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7292
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7297
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7302
		{

			sqlVAL.union.val = &tree.ShowCreateFunction{
				Name: tree.ResolvableFunctionReference{
					FunctionReference: sqlDollar[4].union.unresolvedObjectName().ToUnresolvedName(),
				},
			}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7311
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7315
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7319
		{
			sqlVAL.union.val = &tree.ShowCreateAllTypes{}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7322
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7332
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7335
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7337
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7340
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7349
		{
			sqlVAL.union.val = &tree.ShowCreateExternalConnections{}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7352
		{
			return helpWith(sqllex, "SHOW CREATE EXTERNAL CONNECTIONS")
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7354
		{
			sqlVAL.union.val = &tree.ShowCreateExternalConnections{ConnectionLabel: sqlDollar[5].union.expr()}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7357
		{
			return helpWith(sqllex, "SHOW CREATE EXTERNAL CONNECTIONS")
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7365
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7368
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7376
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7379
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7389
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7393
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7397
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7405
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7413
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7420
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7426
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7428
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7431
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7433
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7436
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7440
		{
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7449
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7457
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7463
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7472
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7477
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7481
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7484
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7493
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7497
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7513
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7519
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7525
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7531
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7538
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7544
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowSuperRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[6].str),
			}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7550
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7554
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7560
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7567
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7573
		{
			tmp := sqlDollar[2].union.grantTargetList()
			sqlVAL.union.val = &tmp
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7578
		{
			sqlVAL.union.val = (*tree.GrantTargetList)(nil)
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7700
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7704
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7708
		{

			sqlVAL.union.val = tree.GrantTargetList{
				Tables:   tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7747
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7751
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: true, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7755
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7760
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7764
		{
			sqlVAL.union.val = tree.GrantTargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7768
		{
			sqlVAL.union.val = tree.GrantTargetList{ExternalConnections: sqlDollar[3].union.nameList()}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7772
		{
			sqlVAL.union.val = tree.GrantTargetList{Functions: sqlDollar[2].union.functionObjs()}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7782
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7786
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7790
		{
			sqlVAL.union.val = tree.BackupTargetList{
				Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}},
			}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7796
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7800
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7805
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7811
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.BackupTargetList{TenantID: tree.TenantID{Specified: true, ID: tenID}}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7819
		{

			if sqlDollar[2].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.BackupTargetList{TenantID: tree.TenantID{Specified: true}}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7828
		{
			sqlVAL.union.val = tree.BackupTargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7837
		{
			sqlVAL.union.val = tree.GrantTargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7841
		{
			sqlVAL.union.val = tree.GrantTargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7845
		{
			sqlVAL.union.val = tree.GrantTargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7849
		{
			sqlVAL.union.val = tree.GrantTargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7857
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7861
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7870
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7871
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7872
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7873
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7879
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7880
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7881
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7882
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7890
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7893
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7903
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7912
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7921
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7923
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7927
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7931
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7934
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7939
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7943
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7958
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7966
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7968
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7974
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7982
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7985
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7994
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8000
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8007
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8014
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8021
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8032
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8041
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8049
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:8085
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[9].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				OnCommit:         sqlDollar[11].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[12].union.locality(),
			}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:8100
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[12].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[13].union.storageParams(),
				OnCommit:         sqlDollar[14].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[15].union.locality(),
			}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8117
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8121
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8128
		{

			sqlVAL.union.val = nil
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8134
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8140
		{
			sqlVAL.str = ""
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8144
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8150
		{
			sqlVAL.union.val = nil
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8154
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8159
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8163
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8167
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8171
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8181
		{
			sqlVAL.union.val = []tree.Name{tree.Name(sqlDollar[1].str)}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8185
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParamKeys(), tree.Name(sqlDollar[3].str))
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8191
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8197
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8201
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8207
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:8220
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8234
		{
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8235
		{
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8236
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8254
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8255
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8256
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8260
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8261
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8262
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8263
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8264
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8269
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8275
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8279
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8285
		{
			sqlVAL.union.val = sqlDollar[1].union.colTableDef()
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8291
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8304
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8313
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8317
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8323
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8328
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8329
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8330
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8331
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8332
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8333
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8334
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8335
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8336
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8341
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8348
		{
			sqlVAL.str = ""
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8355
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8361
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8369
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8375
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8381
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8387
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8397
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8403
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8409
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8416
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8423
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8429
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8433
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8439
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8449
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8453
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8459
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8473
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8484
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8488
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8494
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8498
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8502
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8506
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8510
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8514
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8518
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8536
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8540
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8544
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8548
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8554
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8560
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:       true,
				ShardBuckets:  sqlDollar[5].union.expr(),
				StorageParams: sqlDollar[6].union.storageParams(),
			}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8568
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8572
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8576
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8580
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8590
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8594
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8598
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8603
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8609
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8615
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8619
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8625
		{

			sqlVAL.union.val = true
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8630
		{
			sqlVAL.union.val = false
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8635
		{
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8639
		{
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8642
		{
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8646
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
				StorageParams:    sqlDollar[9].union.storageParams(),
				Predicate:        sqlDollar[10].union.expr(),
				NotVisible:       sqlDollar[11].union.bool(),
			}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:8659
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
					StorageParams:    sqlDollar[10].union.storageParams(),
					Predicate:        sqlDollar[11].union.expr(),
					NotVisible:       sqlDollar[12].union.bool(),
				},
			}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8674
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
				NotVisible:       sqlDollar[10].union.bool(),
			}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8688
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8700
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8705
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8711
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8718
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
					Predicate:        sqlDollar[9].union.expr(),
				},
			}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8730
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					Sharded:       sqlDollar[6].union.shardedIndexDef(),
					StorageParams: sqlDollar[7].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8742
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8753
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8760
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8764
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8770
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8780
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8791
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8795
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8802
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8808
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					StorageParams: sqlDollar[6].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8820
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8824
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8830
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8836
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8840
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8846
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8850
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8856
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8863
		{
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8864
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8865
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8866
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8867
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8868
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8886
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8890
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8896
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[3].union.expr(),
			}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8902
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8908
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8912
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8918
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8922
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8942
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8946
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8950
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8954
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8963
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8967
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8971
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8975
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8979
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8985
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8991
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8999
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9003
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9007
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9011
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9015
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9035
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9044
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9052
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9056
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9059
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9060
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9063
		{

			parsedType := sqlDollar[2].union.colType()
			if parsedType == nil {
				sqllex.(*lexer).lastError = pgerror.Newf(pgcode.UndefinedObject, "type %q does not exist", sqlDollar[2].union.val)
				sqllex.(*lexer).populateErrorDetails()
				return 1
			}
			if parsedType.Family() != types.IntFamily {
				sqllex.Error(fmt.Sprintf("invalid integer type: %s", parsedType.SQLString()))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptAs, AsIntegerType: parsedType}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9077
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9079
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9080
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9081
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9091
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9093
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9095
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9097
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9099
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9100
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9102
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9103
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9105
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9107
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9108
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart, IntVal: &x}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9110
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart, IntVal: &x, OptionalWord: true}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9113
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9121
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9124
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9128
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9134
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9138
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9148
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9152
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9155
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9166
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9170
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9174
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9178
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9182
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9186
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9189
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9193
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9197
		{
			sqlVAL.str = ""
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9205
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9209
		{

			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9216
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9220
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9228
		{
			sqlVAL.union.val = true
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9232
		{

			sqlVAL.union.val = true
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9237
		{
			sqlVAL.union.val = false
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9249
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9263
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9275
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9287
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
				WithData:     sqlDollar[8].union.bool(),
			}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9298
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
				WithData:     sqlDollar[11].union.bool(),
			}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9309
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9313
		{
			sqlVAL.union.val = false
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9317
		{
			sqlVAL.union.val = true
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9321
		{
			sqlVAL.union.val = true
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9327
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9331
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9335
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9339
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9343
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9347
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9351
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9355
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9359
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9363
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9367
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9371
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9375
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9379
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9383
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9387
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9391
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9395
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9399
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9403
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9407
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9411
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9415
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9419
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9427
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9431
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9437
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9441
		{
			sqlVAL.union.val = nil
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9447
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: sqlDollar[3].union.expr()}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9451
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: tree.DNull}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9456
		{
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9457
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9466
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9474
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9482
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9484
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9486
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9488
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9490
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9492
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9496
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9500
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9506
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9510
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:9527
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
				NotVisible:       sqlDollar[17].union.bool(),
			}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:9545
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
				NotVisible:       sqlDollar[20].union.bool(),
			}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:9564
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				PartitionByIndex: sqlDollar[13].union.partitionByIndex(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				Predicate:        sqlDollar[15].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
				NotVisible:       sqlDollar[16].union.bool(),
			}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:9581
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				PartitionByIndex: sqlDollar[16].union.partitionByIndex(),
				StorageParams:    sqlDollar[17].union.storageParams(),
				Predicate:        sqlDollar[18].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
				NotVisible:       sqlDollar[19].union.bool(),
			}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9598
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9602
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9617
		{
			sqlVAL.union.val = false
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9623
		{
			sqlVAL.union.val = true
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9627
		{
			sqlVAL.union.val = false
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9633
		{
			sqlVAL.union.val = true
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9637
		{
			sqlVAL.union.val = false
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9643
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9647
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9656
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9662
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9668
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9676
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder, OpClass: tree.Name(opClass)}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9694
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9695
		{
			sqlVAL.str = ""
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9698
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9699
		{
			sqlVAL.str = ""
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9703
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9707
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9711
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9717
		{
			sqlVAL.union.val = true
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9721
		{
			sqlVAL.union.val = false
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9725
		{
			sqlVAL.union.val = false
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9731
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9737
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9743
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9749
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9757
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9763
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9771
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9779
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9789
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9795
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9802
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9808
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9814
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9821
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9827
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9833
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9839
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9848
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9856
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9866
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9872
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9882
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9888
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9900
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9909
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9919
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9928
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9940
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9946
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9954
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9963
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9974
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9980
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9992
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9998
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10012
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10018
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10026
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10030
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10042
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10051
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10060
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10069
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10077
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10081
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.targetObjectType(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10092
		{
			sqlVAL.union.val = true
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10096
		{
			sqlVAL.union.val = false
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10102
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.targetObjectType(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:10110
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.targetObjectType(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10121
		{
			sqlVAL.union.val = privilege.Tables
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10125
		{
			sqlVAL.union.val = privilege.Sequences
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10129
		{
			sqlVAL.union.val = privilege.Types
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10133
		{
			sqlVAL.union.val = privilege.Schemas
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10137
		{
			sqlVAL.union.val = privilege.Functions
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10141
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON ROUTINES ...")
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10147
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10150
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10156
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10160
		{
			sqlVAL.str = ""
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10167
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10171
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10176
		{
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10177
		{
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10180
		{
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10181
		{
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10189
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10192
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10202
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10210
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10212
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10216
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10219
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10232
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10240
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10242
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10248
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10261
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10269
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10271
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10277
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10285
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10288
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10292
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10293
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10294
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10310
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10313
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10323
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10326
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10330
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10335
		{
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10336
		{
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10337
		{
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10347
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10351
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10354
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10360
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10361
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10365
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10368
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10372
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10375
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10379
		{
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10380
		{
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10384
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10388
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10394
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10398
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10404
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10408
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10421
		{
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10423
		{
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10427
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10432
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10436
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10440
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10444
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10450
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10456
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10462
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10466
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10472
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10476
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:10486
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
				Owner:           sqlDollar[14].union.roleSpec(),
				SecondaryRegion: tree.Name(sqlDollar[15].str),
			}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:10503
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
				SecondaryRegion: tree.Name(sqlDollar[17].str),
			}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10519
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10524
		{
			sqlVAL.str = ""
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10529
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10536
		{
			sqlVAL.str = ""
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10541
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10548
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10554
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10559
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10566
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10570
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10576
		{

		}
	case 1791:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10583
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10587
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10591
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10600
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10606
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10610
		{
			sqlVAL.str = ""
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10616
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10620
		{
			sqlVAL.str = ""
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10626
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10630
		{
			sqlVAL.str = ""
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10636
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10640
		{
			sqlVAL.str = ""
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10646
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10654
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10660
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10664
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10671
		{
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10672
		{
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10687
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10694
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10701
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10712
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10719
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10723
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10732
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10737
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10743
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10747
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10751
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10757
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10761
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10781
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10785
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10792
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:10800
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10809
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				DoNothing:  true,
			}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:10816
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				Exprs:      sqlDollar[9].union.updateExprs(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
			}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10826
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10831
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10835
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:10852
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10864
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10867
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10870
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10876
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10880
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10893
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10896
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10900
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10911
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10917
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10926
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10932
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10973
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10979
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10983
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10998
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11002
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11006
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11010
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11014
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11018
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11022
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11026
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11031
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11032
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11035
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11036
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11040
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11044
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11050
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11059
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11060
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11061
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11062
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11065
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11066
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11069
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11070
		{
			sqlVAL.union.val = tree.LockWaitSkipLocked
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11071
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11076
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11111
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11112
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11113
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11135
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11148
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11162
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11174
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11178
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11187
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11196
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11211
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11218
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11230
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11234
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11239
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11245
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11249
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11255
		{
			sqlVAL.union.val = true
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11259
		{
			sqlVAL.union.val = false
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11265
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.colDefList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11275
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.colDefList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11287
		{
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11288
		{
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11292
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11296
		{
			sqlVAL.union.val = nil
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11301
		{
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11302
		{
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11306
		{
			sqlVAL.union.val = true
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11310
		{
			sqlVAL.union.val = false
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11314
		{
			sqlVAL.union.val = false
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11320
		{
			sqlVAL.union.val = true
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11326
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11331
		{
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11332
		{
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11335
		{
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11336
		{
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11340
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11344
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11350
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11356
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11360
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11367
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11371
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11377
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11389
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11394
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11406
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11410
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11414
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11420
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11429
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11440
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11441
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11445
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11449
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11453
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11467
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11471
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11479
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11486
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11508
		{
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11509
		{
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11512
		{
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11513
		{
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11530
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11534
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11539
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11540
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11546
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11547
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11548
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11549
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11553
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11557
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11576
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11579
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11581
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11593
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11596
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11598
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11604
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11608
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11614
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11618
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11623
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11628
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11634
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11639
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11644
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11649
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11655
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11660
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11665
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11672
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11677
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11688
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11692
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11696
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11704
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11738
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11748
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11758
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11766
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11775
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11779
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11783
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11794
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11818
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11824
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11835
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11839
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11845
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11847
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11851
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11857
		{
			sqlVAL.union.val = sqlDollar[2].union.colDefList()
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11861
		{
			sqlVAL.union.val = tree.ColumnDefList(nil)
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11867
		{
			sqlVAL.union.val = tree.ColumnDefList{tree.ColumnDef{Name: tree.Name(sqlDollar[1].str)}}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11871
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colDefList(), tree.ColumnDef{Name: tree.Name(sqlDollar[3].str)})
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11878
		{
			sqlVAL.union.val = tree.ColumnDefList(nil)
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11882
		{
			sqlVAL.union.val = sqlDollar[2].union.colDefList()
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11888
		{
			sqlVAL.union.val = tree.ColumnDefList{sqlDollar[1].union.colDef()}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11892
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colDefList(), sqlDollar[3].union.colDef())
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11898
		{
			sqlVAL.union.val = tree.ColumnDef{Name: tree.Name(sqlDollar[1].str)}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11902
		{
			sqlVAL.union.val = tree.ColumnDef{Name: tree.Name(sqlDollar[1].str), Type: sqlDollar[2].union.typeReference()}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11907
		{
			sqlVAL.union.val = nil
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11908
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11909
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11913
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11917
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11923
		{
			sqlVAL.union.val = true
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11927
		{
			sqlVAL.union.val = false
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11947
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11951
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11955
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11959
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11963
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11967
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11973
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.colDefList()}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11977
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.colDefList()}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11984
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11990
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.colDefList()}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11994
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.colDefList()}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12001
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12007
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12014
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12020
		{
			sqlVAL.str = tree.AstFull
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12024
		{
			sqlVAL.str = tree.AstLeft
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12028
		{
			sqlVAL.str = tree.AstRight
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12032
		{
			sqlVAL.str = tree.AstInner
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12038
		{
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12039
		{
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12063
		{
			sqlVAL.str = tree.AstHash
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12067
		{
			sqlVAL.str = tree.AstMerge
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12071
		{
			sqlVAL.str = tree.AstLookup
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12075
		{
			sqlVAL.str = tree.AstInverted
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12079
		{
			sqlVAL.str = ""
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12092
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12096
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12101
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12102
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12103
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12104
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12108
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12113
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12121
		{
			sqlVAL.union.val = &tree.Unlisten{ChannelName: sqlDollar[2].union.unresolvedObjectName(), Star: false}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12125
		{
			sqlVAL.union.val = &tree.Unlisten{ChannelName: nil, Star: true}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12139
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12143
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12149
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12155
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12165
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12175
		{
			sqlVAL.union.val = true
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12179
		{
			sqlVAL.union.val = false
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12185
		{
			sqlVAL.union.val = true
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12189
		{
			sqlVAL.union.val = false
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12195
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12202
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12214
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12227
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12235
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12236
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12246
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12253
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12254
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12256
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12264
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12265
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12277
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12284
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12293
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12333
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12338
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12345
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12346
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12349
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12350
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12351
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12352
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12353
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12354
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12355
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12356
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12357
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12358
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12359
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12360
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12361
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12362
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12363
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12364
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12365
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12366
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12367
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12368
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12369
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12370
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12371
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12372
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12373
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12374
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12375
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12376
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12377
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12378
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12379
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12380
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12383
		{
			sqlVAL.union.val = types.Geography
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12384
		{
			sqlVAL.union.val = types.Geometry
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12385
		{
			sqlVAL.union.val = types.Box2D
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12387
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12391
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12395
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12403
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12429
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12437
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12445
		{
			sqlVAL.union.val = nil
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12452
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12456
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12460
		{
			sqlVAL.union.val = types.Int2
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12464
		{
			sqlVAL.union.val = types.Int
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12468
		{
			sqlVAL.union.val = types.Float4
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12472
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12476
		{
			sqlVAL.union.val = types.Float
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12480
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12488
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12496
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12504
		{
			sqlVAL.union.val = types.Bool
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12510
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12523
		{
			sqlVAL.union.val = types.Float
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12529
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12535
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12543
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12547
		{
			sqlVAL.union.val = types.VarBit
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12551
		{
			sqlVAL.union.val = types.VarBit
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12557
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12569
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12575
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12579
		{
			sqlVAL.union.val = types.VarChar
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12583
		{
			sqlVAL.union.val = types.VarChar
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12587
		{
			sqlVAL.union.val = types.String
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12596
		{
			sqlVAL.union.val = true
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12597
		{
			sqlVAL.union.val = false
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12602
		{
			sqlVAL.union.val = types.Date
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12606
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12614
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12626
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12628
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12637
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12645
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12658
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12662
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12672
		{
			sqlVAL.union.val = true
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12673
		{
			sqlVAL.union.val = false
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12674
		{
			sqlVAL.union.val = false
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12678
		{
			sqlVAL.union.val = types.Interval
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12682
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12686
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12697
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12705
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12713
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12721
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12729
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12737
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12743
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12752
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12761
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12770
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12776
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12785
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12791
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12801
		{
			sqlVAL.union.val = nil
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12807
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12815
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12852
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12856
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12860
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12864
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12875
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12880
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12884
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12888
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12892
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12896
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12900
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12904
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12908
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12912
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12916
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12920
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12924
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12928
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12932
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12936
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12940
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12944
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12948
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12952
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12956
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12960
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12964
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12968
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12972
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12976
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12980
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12984
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12988
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12992
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12996
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13000
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13004
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13008
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13012
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13016
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13020
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13024
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13032
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13042
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13046
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13050
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13054
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13058
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13062
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13066
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13070
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13074
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13078
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13082
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13086
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13090
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13094
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13098
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13102
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13106
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13110
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13114
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13118
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13122
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.EQ),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13130
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.NE),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13138
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13142
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13146
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13150
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13154
		{
			t1, t2 := sqlDollar[1].union.tuple(), sqlDollar[3].union.tuple()
			if len(t1.Exprs) != 2 {
				sqllex.Error("wrong number of parameters on left side of OVERLAPS expression")
				return 1
			}
			if len(t2.Exprs) != 2 {
				sqllex.Error("wrong number of parameters on right side of OVERLAPS expression")
				return 1
			}
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("overlaps"), Exprs: tree.Exprs{t1.Exprs[0], t1.Exprs[1], t2.Exprs[0], t2.Exprs[1]}}
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13167
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13171
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13175
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13179
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13183
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13187
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13191
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13195
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2278:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13199
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2279:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13203
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13207
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2281:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13211
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13215
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13219
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13223
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2285:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13227
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2286:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13231
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(treecmp.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 2287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13248
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 2288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13253
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 2290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13265
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13269
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2292:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13273
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2293:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13277
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13281
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13285
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13289
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13293
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13297
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13301
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13305
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13309
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13313
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13317
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13321
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13325
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13329
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13333
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13337
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13341
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13345
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13349
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13353
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13357
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13361
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13369
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2316:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13379
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2317:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13383
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2318:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13387
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2319:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13391
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13405
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 2323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13413
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 2324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13449
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13453
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13457
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13461
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13465
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2329:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13470
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13472
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2331:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13476
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2332:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13480
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13484
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13488
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2335:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13492
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13496
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13505
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2338:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13512
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2339:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13516
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2340:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13520
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if idx <= 0 {
				err := errors.New("invalid numeric tuple index: indexes must be > 0")
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13530
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2343:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13535
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13539
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2345:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13543
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13547
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13551
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2348:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13554
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13558
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2350:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13562
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2351:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13565
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2352:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:13566
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2353:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13568
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2354:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13574
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2355:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13578
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13581
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13590
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2358:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13643
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2359:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13656
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13668
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13677
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13678
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2363:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13683
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13687
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2365:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13691
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13697
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13701
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13705
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13709
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13713
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2371:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13717
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13723
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2373:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13727
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2374:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13731
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2375:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13735
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2376:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13739
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2377:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:13743
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2378:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:13747
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2379:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13751
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2380:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13755
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2381:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13759
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2382:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13763
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2383:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13767
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2384:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13771
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13778
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13781
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13783
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13786
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13788
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2391:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13792
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13795
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13797
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2394:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13801
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13804
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13806
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2397:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13810
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13813
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13815
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2400:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13819
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13822
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13824
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13827
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13829
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13832
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2406:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13834
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13837
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2408:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13839
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13842
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2410:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13844
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13847
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2412:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13849
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2413:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13853
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13856
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2415:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13857
		{
			return unimplemented(sqllex, "treat")
		}
	case 2416:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13859
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2417:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13863
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2418:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13867
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2419:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13871
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2420:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13875
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13878
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2422:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13880
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13883
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2424:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13889
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2425:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13893
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2426:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13899
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2427:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13903
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13910
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2429:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13914
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2430:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13920
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13924
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13930
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13938
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13942
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2435:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13946
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2436:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13953
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2438:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13973
		{
			sqlVAL.str = ""
		}
	case 2439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13979
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2440:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13983
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13989
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13997
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14005
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2444:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14013
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14019
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2446:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14032
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == treewindow.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == treewindow.CurrentRow && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14060
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedPreceding}
		}
	case 2448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14064
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedFollowing}
		}
	case 2449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14068
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.CurrentRow}
		}
	case 2450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14072
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetPreceding,
			}
		}
	case 2451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14079
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetFollowing,
			}
		}
	case 2452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14088
		{
			sqlVAL.union.val = treewindow.ExcludeCurrentRow
		}
	case 2453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14092
		{
			sqlVAL.union.val = treewindow.ExcludeGroup
		}
	case 2454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14096
		{
			sqlVAL.union.val = treewindow.ExcludeTies
		}
	case 2455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14100
		{

			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2456:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14105
		{
			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2457:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14118
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14122
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2460:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14129
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2461:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14141
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Any)
		}
	case 2462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14145
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Some)
		}
	case 2463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14149
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.All)
		}
	case 2464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14165
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Plus)
		}
	case 2465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14166
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Minus)
		}
	case 2466:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14167
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mult)
		}
	case 2467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14168
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Div)
		}
	case 2468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14169
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mod)
		}
	case 2469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14170
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Pow)
		}
	case 2470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14171
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LT)
		}
	case 2471:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14172
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GT)
		}
	case 2472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14173
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.EQ)
		}
	case 2473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14174
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LE)
		}
	case 2474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14175
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GE)
		}
	case 2475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14176
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NE)
		}
	case 2476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14178
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONExists)
		}
	case 2477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14179
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitand)
		}
	case 2478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14180
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitor)
		}
	case 2479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14181
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitxor)
		}
	case 2480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14182
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.FloorDiv)
		}
	case 2481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14183
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Contains)
		}
	case 2482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14184
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ContainedBy)
		}
	case 2483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14185
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.LShift)
		}
	case 2484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14186
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.RShift)
		}
	case 2485:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14187
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Concat)
		}
	case 2486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14188
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchVal)
		}
	case 2487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14189
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchText)
		}
	case 2488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14190
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchValPath)
		}
	case 2489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14191
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchTextPath)
		}
	case 2490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14192
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONSomeExists)
		}
	case 2491:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14193
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONAllExists)
		}
	case 2492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14194
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegMatch)
		}
	case 2493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14195
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.RegIMatch)
		}
	case 2494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14196
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegIMatch)
		}
	case 2495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14197
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Overlaps)
		}
	case 2496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14198
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14199
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14200
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2500:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14205
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2501:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14221
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14228
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Like)
		}
	case 2505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14229
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotLike)
		}
	case 2506:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14230
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ILike)
		}
	case 2507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14231
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotILike)
		}
	case 2508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14254
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14258
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14264
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14268
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2512:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14272
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14283
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2514:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14287
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14293
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14297
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2518:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14304
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14310
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14314
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2521:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14320
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14324
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14330
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14334
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14340
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14344
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14350
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14354
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2537:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14377
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14381
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2539:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14385
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14391
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14398
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2542:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14402
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14419
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14423
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14427
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14431
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2547:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14435
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14441
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14447
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14453
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14457
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14461
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2553:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14467
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2555:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14479
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2556:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14486
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14490
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2558:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14496
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14502
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2560:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14506
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2562:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14513
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2563:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14519
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2564:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14523
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2566:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14530
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2567:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14536
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14540
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2569:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14545
		{
		}
	case 2570:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14546
		{
		}
	case 2571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14550
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14554
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14560
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14569
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2575:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14573
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2576:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14577
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2579:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14589
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14593
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2581:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14599
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14603
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14622
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14630
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2585:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14653
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2587:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14662
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2588:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14666
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14670
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14674
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14680
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14684
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14699
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14703
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14715
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14719
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14728
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14739
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2605:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14748
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14756
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2607:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14773
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2626:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14858
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14866
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14870
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2630:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14876
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14880
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14886
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14892
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name('*'), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2635:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14899
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2641:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14926
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14933
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2644:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14937
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2645:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:14941
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2647:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:14955
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2648:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14959
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14963
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2650:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14976
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2652:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14985
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2656:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15003
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15016
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2658:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:15023
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2666:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:15048
		{
			sqlVAL.str = ""
		}
	case 2667:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15054
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2668:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:15058
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
