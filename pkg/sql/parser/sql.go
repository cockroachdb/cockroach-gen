// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:78

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}

//line sql-gen.y:724
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACCESS = lex.ACCESS
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const AVAILABILITY = lex.AVAILABILITY
const BACKUP = lex.BACKUP
const BACKUPS = lex.BACKUPS
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BOX2D = lex.BOX2D
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CANCELQUERY = lex.CANCELQUERY
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONNECTION = lex.CONNECTION
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONTROLCHANGEFEED = lex.CONTROLCHANGEFEED
const CONTROLJOB = lex.CONTROLJOB
const CONVERSION = lex.CONVERSION
const CONVERT = lex.CONVERT
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEDB = lex.CREATEDB
const CREATELOGIN = lex.CREATELOGIN
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CSV = lex.CSV
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CURSOR = lex.CURSOR
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DELIMITER = lex.DELIMITER
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FAILURE = lex.FAILURE
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE = lex.FORCE
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYM = lex.GEOMETRYM
const GEOMETRYZ = lex.GEOMETRYZ
const GEOMETRYZM = lex.GEOMETRYZM
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lex.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lex.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lex.GEOMETRYCOLLECTIONZM
const GLOBAL = lex.GLOBAL
const GOAL = lex.GOAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INHERITS = lex.INHERITS
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LINESTRINGM = lex.LINESTRINGM
const LINESTRINGZ = lex.LINESTRINGZ
const LINESTRINGZM = lex.LINESTRINGZM
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALITY = lex.LOCALITY
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const METHOD = lex.METHOD
const MINUTE = lex.MINUTE
const MODIFYCLUSTERSETTING = lex.MODIFYCLUSTERSETTING
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTILINESTRINGM = lex.MULTILINESTRINGM
const MULTILINESTRINGZ = lex.MULTILINESTRINGZ
const MULTILINESTRINGZM = lex.MULTILINESTRINGZM
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOINTM = lex.MULTIPOINTM
const MULTIPOINTZ = lex.MULTIPOINTZ
const MULTIPOINTZM = lex.MULTIPOINTZM
const MULTIPOLYGON = lex.MULTIPOLYGON
const MULTIPOLYGONM = lex.MULTIPOLYGONM
const MULTIPOLYGONZ = lex.MULTIPOLYGONZ
const MULTIPOLYGONZM = lex.MULTIPOLYGONZM
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCANCELQUERY = lex.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lex.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lex.NOCONTROLJOB
const NOCREATEDB = lex.NOCREATEDB
const NOCREATELOGIN = lex.NOCREATELOGIN
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NOMODIFYCLUSTERSETTING = lex.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOVIEWACTIVITY = lex.NOVIEWACTIVITY
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POINTM = lex.POINTM
const POINTZ = lex.POINTZ
const POINTZM = lex.POINTZM
const POLYGON = lex.POLYGON
const POLYGONM = lex.POLYGONM
const POLYGONZ = lex.POLYGONZ
const POLYGONZM = lex.POLYGONZM
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PRIVILEGES = lex.PRIVILEGES
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const REASSIGN = lex.REASSIGN
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REFRESH = lex.REFRESH
const REGCLASS = lex.REGCLASS
const REGION = lex.REGION
const REGIONAL = lex.REGIONAL
const REGIONS = lex.REGIONS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const REPLICATION = lex.REPLICATION
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETS = lex.SETS
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STREAM = lex.STREAM
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SURVIVE = lex.SURVIVE
const SURVIVAL = lex.SURVIVAL
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const STATEMENTS = lex.STATEMENTS
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TABLESPACE = lex.TABLESPACE
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TRANSACTIONS = lex.TRANSACTIONS
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TYPES = lex.TYPES
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIEWACTIVITY = lex.VIEWACTIVITY
const VIRTUAL = lex.VIRTUAL
const VISIBLE = lex.VISIBLE
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const NULLS_LA = lex.NULLS_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"VISIBLE",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:12814

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1476,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	258, 383,
	-2, 0,
	-1, 74,
	240, 226,
	504, 226,
	-2, 0,
	-1, 87,
	228, 1236,
	242, 1236,
	258, 379,
	384, 379,
	394, 1006,
	430, 379,
	442, 1006,
	488, 1006,
	515, 379,
	541, 1006,
	-2, 0,
	-1, 93,
	132, 1476,
	235, 1476,
	526, 1476,
	527, 1476,
	-2, 0,
	-1, 109,
	150, 1447,
	169, 1447,
	182, 1447,
	238, 1447,
	271, 1447,
	336, 1447,
	346, 1447,
	521, 1447,
	-2, 1418,
	-1, 148,
	158, 864,
	257, 864,
	387, 831,
	447, 831,
	487, 831,
	507, 864,
	509, 831,
	-2, 0,
	-1, 150,
	4, 1478,
	21, 1478,
	22, 1478,
	23, 1478,
	24, 1478,
	25, 1478,
	26, 1478,
	27, 1478,
	29, 1478,
	30, 1478,
	36, 1478,
	41, 1478,
	42, 1478,
	44, 1478,
	45, 1478,
	46, 1478,
	47, 1478,
	48, 1478,
	49, 1478,
	50, 1478,
	51, 1478,
	53, 1478,
	54, 1478,
	55, 1478,
	56, 1478,
	58, 1478,
	59, 1478,
	60, 1478,
	61, 1478,
	62, 1478,
	63, 1478,
	64, 1478,
	68, 1478,
	69, 1478,
	70, 1478,
	71, 1478,
	73, 1478,
	74, 1478,
	75, 1478,
	79, 1478,
	80, 1478,
	81, 1478,
	82, 1478,
	83, 1478,
	84, 1478,
	85, 1478,
	88, 1478,
	89, 1478,
	90, 1478,
	91, 1478,
	92, 1478,
	94, 1478,
	96, 1478,
	97, 1478,
	98, 1478,
	99, 1478,
	100, 1478,
	101, 1478,
	103, 1478,
	104, 1478,
	105, 1478,
	107, 1478,
	108, 1478,
	109, 1478,
	117, 1478,
	118, 1478,
	119, 1478,
	120, 1478,
	121, 1478,
	123, 1478,
	124, 1478,
	125, 1478,
	127, 1478,
	128, 1478,
	129, 1478,
	131, 1478,
	132, 1478,
	133, 1478,
	135, 1478,
	136, 1478,
	137, 1478,
	140, 1478,
	141, 1478,
	142, 1478,
	144, 1478,
	145, 1478,
	147, 1478,
	148, 1478,
	149, 1478,
	151, 1478,
	152, 1478,
	153, 1478,
	154, 1478,
	155, 1478,
	156, 1478,
	157, 1478,
	158, 1478,
	159, 1478,
	160, 1478,
	161, 1478,
	162, 1478,
	163, 1478,
	164, 1478,
	165, 1478,
	166, 1478,
	168, 1478,
	174, 1478,
	175, 1478,
	176, 1478,
	177, 1478,
	181, 1478,
	183, 1478,
	184, 1478,
	188, 1478,
	189, 1478,
	190, 1478,
	191, 1478,
	192, 1478,
	193, 1478,
	194, 1478,
	195, 1478,
	196, 1478,
	197, 1478,
	198, 1478,
	199, 1478,
	200, 1478,
	202, 1478,
	203, 1478,
	205, 1478,
	206, 1478,
	208, 1478,
	209, 1478,
	210, 1478,
	211, 1478,
	212, 1478,
	213, 1478,
	214, 1478,
	215, 1478,
	216, 1478,
	218, 1478,
	219, 1478,
	221, 1478,
	222, 1478,
	223, 1478,
	224, 1478,
	228, 1478,
	229, 1478,
	230, 1478,
	231, 1478,
	232, 1478,
	235, 1478,
	236, 1478,
	237, 1478,
	239, 1478,
	241, 1478,
	242, 1478,
	244, 1478,
	246, 1478,
	247, 1478,
	248, 1478,
	250, 1478,
	254, 1478,
	255, 1478,
	256, 1478,
	257, 1478,
	258, 1478,
	259, 1478,
	261, 1478,
	262, 1478,
	263, 1478,
	265, 1478,
	266, 1478,
	268, 1478,
	269, 1478,
	272, 1478,
	276, 1478,
	277, 1478,
	278, 1478,
	281, 1478,
	282, 1478,
	283, 1478,
	284, 1478,
	286, 1478,
	287, 1478,
	288, 1478,
	289, 1478,
	290, 1478,
	291, 1478,
	292, 1478,
	293, 1478,
	294, 1478,
	295, 1478,
	296, 1478,
	297, 1478,
	298, 1478,
	299, 1478,
	300, 1478,
	301, 1478,
	302, 1478,
	303, 1478,
	304, 1478,
	305, 1478,
	306, 1478,
	307, 1478,
	309, 1478,
	311, 1478,
	312, 1478,
	313, 1478,
	314, 1478,
	315, 1478,
	316, 1478,
	317, 1478,
	318, 1478,
	319, 1478,
	320, 1478,
	321, 1478,
	322, 1478,
	324, 1478,
	326, 1478,
	328, 1478,
	329, 1478,
	331, 1478,
	332, 1478,
	333, 1478,
	334, 1478,
	335, 1478,
	338, 1478,
	341, 1478,
	342, 1478,
	343, 1478,
	344, 1478,
	347, 1478,
	348, 1478,
	349, 1478,
	351, 1478,
	353, 1478,
	354, 1478,
	355, 1478,
	356, 1478,
	357, 1478,
	358, 1478,
	359, 1478,
	360, 1478,
	361, 1478,
	362, 1478,
	363, 1478,
	364, 1478,
	366, 1478,
	367, 1478,
	368, 1478,
	369, 1478,
	370, 1478,
	371, 1478,
	372, 1478,
	373, 1478,
	374, 1478,
	375, 1478,
	376, 1478,
	377, 1478,
	378, 1478,
	379, 1478,
	380, 1478,
	382, 1478,
	383, 1478,
	385, 1478,
	386, 1478,
	387, 1478,
	388, 1478,
	389, 1478,
	390, 1478,
	391, 1478,
	392, 1478,
	393, 1478,
	394, 1478,
	395, 1478,
	396, 1478,
	398, 1478,
	400, 1478,
	401, 1478,
	402, 1478,
	407, 1478,
	409, 1478,
	410, 1478,
	411, 1478,
	412, 1478,
	413, 1478,
	414, 1478,
	415, 1478,
	416, 1478,
	417, 1478,
	419, 1478,
	420, 1478,
	421, 1478,
	423, 1478,
	424, 1478,
	425, 1478,
	426, 1478,
	427, 1478,
	428, 1478,
	430, 1478,
	431, 1478,
	432, 1478,
	433, 1478,
	434, 1478,
	435, 1478,
	436, 1478,
	437, 1478,
	438, 1478,
	439, 1478,
	440, 1478,
	442, 1478,
	443, 1478,
	444, 1478,
	445, 1478,
	446, 1478,
	447, 1478,
	449, 1478,
	450, 1478,
	451, 1478,
	452, 1478,
	453, 1478,
	454, 1478,
	456, 1478,
	457, 1478,
	458, 1478,
	459, 1478,
	460, 1478,
	461, 1478,
	462, 1478,
	464, 1478,
	466, 1478,
	467, 1478,
	468, 1478,
	469, 1478,
	470, 1478,
	471, 1478,
	472, 1478,
	473, 1478,
	474, 1478,
	475, 1478,
	476, 1478,
	477, 1478,
	478, 1478,
	479, 1478,
	480, 1478,
	481, 1478,
	483, 1478,
	484, 1478,
	486, 1478,
	487, 1478,
	489, 1478,
	490, 1478,
	491, 1478,
	492, 1478,
	493, 1478,
	494, 1478,
	495, 1478,
	496, 1478,
	497, 1478,
	499, 1478,
	500, 1478,
	501, 1478,
	502, 1478,
	503, 1478,
	505, 1478,
	507, 1478,
	508, 1478,
	509, 1478,
	510, 1478,
	511, 1478,
	512, 1478,
	514, 1478,
	515, 1478,
	516, 1478,
	517, 1478,
	519, 1478,
	520, 1478,
	523, 1478,
	524, 1478,
	525, 1478,
	526, 1478,
	527, 1478,
	528, 1478,
	529, 1478,
	531, 1478,
	534, 1478,
	535, 1478,
	536, 1478,
	537, 1478,
	538, 1478,
	539, 1478,
	541, 1478,
	542, 1478,
	543, 1478,
	544, 1478,
	550, 1478,
	551, 1478,
	552, 1478,
	553, 1478,
	554, 1478,
	555, 1478,
	-2, 0,
	-1, 151,
	1, 1333,
	130, 1333,
	246, 1333,
	325, 1333,
	382, 1333,
	391, 1333,
	559, 1333,
	583, 1333,
	-2, 0,
	-1, 153,
	1, 1333,
	583, 1333,
	-2, 0,
	-1, 154,
	1, 1333,
	583, 1333,
	-2, 0,
	-1, 155,
	1, 1333,
	504, 1333,
	583, 1333,
	-2, 0,
	-1, 183,
	150, 1446,
	169, 1446,
	182, 1446,
	238, 1446,
	271, 1446,
	336, 1446,
	346, 1446,
	521, 1446,
	-2, 1421,
	-1, 229,
	4, 1485,
	5, 1485,
	6, 1485,
	7, 1485,
	8, 1485,
	9, 1485,
	10, 1485,
	21, 1485,
	22, 1485,
	23, 1485,
	24, 1485,
	25, 1485,
	26, 1485,
	27, 1485,
	29, 1485,
	30, 1485,
	36, 1485,
	37, 1485,
	41, 1485,
	42, 1485,
	43, 1485,
	44, 1485,
	45, 1485,
	46, 1485,
	47, 1485,
	48, 1485,
	49, 1485,
	50, 1485,
	51, 1485,
	53, 1485,
	54, 1485,
	55, 1485,
	56, 1485,
	58, 1485,
	59, 1485,
	60, 1485,
	61, 1485,
	62, 1485,
	63, 1485,
	64, 1485,
	65, 1485,
	66, 1485,
	67, 1485,
	68, 1485,
	69, 1485,
	70, 1485,
	71, 1485,
	73, 1485,
	74, 1485,
	75, 1485,
	77, 1485,
	79, 1485,
	80, 1485,
	81, 1485,
	82, 1485,
	83, 1485,
	84, 1485,
	85, 1485,
	88, 1485,
	89, 1485,
	90, 1485,
	91, 1485,
	92, 1485,
	94, 1485,
	96, 1485,
	97, 1485,
	98, 1485,
	99, 1485,
	100, 1485,
	101, 1485,
	103, 1485,
	104, 1485,
	105, 1485,
	106, 1485,
	107, 1485,
	108, 1485,
	109, 1485,
	110, 1485,
	111, 1485,
	112, 1485,
	113, 1485,
	114, 1485,
	115, 1485,
	116, 1485,
	117, 1485,
	118, 1485,
	119, 1485,
	120, 1485,
	121, 1485,
	122, 1485,
	123, 1485,
	124, 1485,
	125, 1485,
	126, 1485,
	127, 1485,
	128, 1485,
	129, 1485,
	131, 1485,
	132, 1485,
	133, 1485,
	135, 1485,
	136, 1485,
	137, 1485,
	140, 1485,
	141, 1485,
	142, 1485,
	144, 1485,
	145, 1485,
	147, 1485,
	148, 1485,
	149, 1485,
	151, 1485,
	152, 1485,
	153, 1485,
	154, 1485,
	155, 1485,
	156, 1485,
	157, 1485,
	158, 1485,
	159, 1485,
	160, 1485,
	161, 1485,
	162, 1485,
	163, 1485,
	164, 1485,
	165, 1485,
	166, 1485,
	167, 1485,
	168, 1485,
	174, 1485,
	175, 1485,
	176, 1485,
	177, 1485,
	181, 1485,
	183, 1485,
	184, 1485,
	187, 1485,
	188, 1485,
	189, 1485,
	190, 1485,
	191, 1485,
	192, 1485,
	193, 1485,
	194, 1485,
	195, 1485,
	196, 1485,
	197, 1485,
	198, 1485,
	199, 1485,
	200, 1485,
	202, 1485,
	203, 1485,
	205, 1485,
	206, 1485,
	208, 1485,
	209, 1485,
	210, 1485,
	211, 1485,
	212, 1485,
	213, 1485,
	214, 1485,
	215, 1485,
	216, 1485,
	217, 1485,
	218, 1485,
	219, 1485,
	221, 1485,
	222, 1485,
	223, 1485,
	224, 1485,
	228, 1485,
	229, 1485,
	230, 1485,
	231, 1485,
	232, 1485,
	234, 1485,
	235, 1485,
	236, 1485,
	237, 1485,
	239, 1485,
	241, 1485,
	242, 1485,
	243, 1485,
	244, 1485,
	245, 1485,
	246, 1485,
	247, 1485,
	248, 1485,
	249, 1485,
	250, 1485,
	254, 1485,
	255, 1485,
	256, 1485,
	257, 1485,
	258, 1485,
	259, 1485,
	261, 1485,
	262, 1485,
	263, 1485,
	265, 1485,
	266, 1485,
	267, 1485,
	268, 1485,
	269, 1485,
	270, 1485,
	272, 1485,
	276, 1485,
	277, 1485,
	278, 1485,
	279, 1485,
	280, 1485,
	281, 1485,
	282, 1485,
	283, 1485,
	284, 1485,
	286, 1485,
	287, 1485,
	288, 1485,
	289, 1485,
	290, 1485,
	291, 1485,
	292, 1485,
	293, 1485,
	294, 1485,
	295, 1485,
	296, 1485,
	297, 1485,
	298, 1485,
	299, 1485,
	300, 1485,
	301, 1485,
	302, 1485,
	303, 1485,
	304, 1485,
	305, 1485,
	306, 1485,
	307, 1485,
	309, 1485,
	310, 1485,
	311, 1485,
	312, 1485,
	313, 1485,
	314, 1485,
	315, 1485,
	316, 1485,
	317, 1485,
	318, 1485,
	319, 1485,
	320, 1485,
	321, 1485,
	322, 1485,
	323, 1485,
	324, 1485,
	325, 1485,
	326, 1485,
	327, 1485,
	328, 1485,
	329, 1485,
	330, 1485,
	331, 1485,
	332, 1485,
	333, 1485,
	334, 1485,
	335, 1485,
	338, 1485,
	342, 1485,
	343, 1485,
	344, 1485,
	347, 1485,
	348, 1485,
	349, 1485,
	350, 1485,
	351, 1485,
	352, 1485,
	353, 1485,
	354, 1485,
	355, 1485,
	356, 1485,
	357, 1485,
	358, 1485,
	359, 1485,
	360, 1485,
	361, 1485,
	362, 1485,
	363, 1485,
	364, 1485,
	366, 1485,
	367, 1485,
	368, 1485,
	369, 1485,
	370, 1485,
	371, 1485,
	372, 1485,
	373, 1485,
	374, 1485,
	375, 1485,
	376, 1485,
	377, 1485,
	378, 1485,
	379, 1485,
	380, 1485,
	382, 1485,
	383, 1485,
	385, 1485,
	386, 1485,
	387, 1485,
	388, 1485,
	389, 1485,
	390, 1485,
	391, 1485,
	392, 1485,
	393, 1485,
	394, 1485,
	395, 1485,
	396, 1485,
	398, 1485,
	400, 1485,
	401, 1485,
	402, 1485,
	407, 1485,
	409, 1485,
	410, 1485,
	411, 1485,
	412, 1485,
	413, 1485,
	414, 1485,
	415, 1485,
	416, 1485,
	417, 1485,
	419, 1485,
	420, 1485,
	421, 1485,
	422, 1485,
	423, 1485,
	424, 1485,
	425, 1485,
	426, 1485,
	427, 1485,
	428, 1485,
	430, 1485,
	431, 1485,
	432, 1485,
	433, 1485,
	434, 1485,
	435, 1485,
	436, 1485,
	437, 1485,
	438, 1485,
	439, 1485,
	440, 1485,
	442, 1485,
	443, 1485,
	444, 1485,
	445, 1485,
	446, 1485,
	447, 1485,
	448, 1485,
	449, 1485,
	450, 1485,
	451, 1485,
	452, 1485,
	453, 1485,
	454, 1485,
	455, 1485,
	456, 1485,
	457, 1485,
	458, 1485,
	459, 1485,
	460, 1485,
	461, 1485,
	462, 1485,
	464, 1485,
	466, 1485,
	467, 1485,
	468, 1485,
	469, 1485,
	470, 1485,
	471, 1485,
	472, 1485,
	473, 1485,
	474, 1485,
	475, 1485,
	476, 1485,
	477, 1485,
	478, 1485,
	479, 1485,
	480, 1485,
	481, 1485,
	483, 1485,
	484, 1485,
	485, 1485,
	486, 1485,
	487, 1485,
	489, 1485,
	490, 1485,
	491, 1485,
	492, 1485,
	493, 1485,
	494, 1485,
	495, 1485,
	496, 1485,
	497, 1485,
	499, 1485,
	500, 1485,
	501, 1485,
	502, 1485,
	503, 1485,
	505, 1485,
	507, 1485,
	508, 1485,
	509, 1485,
	510, 1485,
	511, 1485,
	512, 1485,
	513, 1485,
	514, 1485,
	515, 1485,
	516, 1485,
	517, 1485,
	519, 1485,
	520, 1485,
	522, 1485,
	523, 1485,
	524, 1485,
	525, 1485,
	526, 1485,
	527, 1485,
	528, 1485,
	529, 1485,
	530, 1485,
	531, 1485,
	534, 1485,
	535, 1485,
	536, 1485,
	537, 1485,
	538, 1485,
	539, 1485,
	541, 1485,
	542, 1485,
	543, 1485,
	544, 1485,
	550, 1485,
	551, 1485,
	552, 1485,
	553, 1485,
	554, 1485,
	555, 1485,
	556, 1485,
	564, 1485,
	571, 1485,
	572, 1485,
	573, 1485,
	580, 1485,
	584, 1485,
	-2, 0,
	-1, 723,
	4, 1234,
	21, 1234,
	22, 1234,
	23, 1234,
	24, 1234,
	25, 1234,
	26, 1234,
	27, 1234,
	29, 1234,
	30, 1234,
	36, 1234,
	41, 1234,
	42, 1234,
	44, 1234,
	45, 1234,
	46, 1234,
	47, 1234,
	48, 1234,
	49, 1234,
	50, 1234,
	51, 1234,
	53, 1234,
	54, 1234,
	55, 1234,
	56, 1234,
	58, 1234,
	59, 1234,
	60, 1234,
	61, 1234,
	62, 1234,
	63, 1234,
	64, 1234,
	68, 1234,
	69, 1234,
	70, 1234,
	71, 1234,
	73, 1234,
	74, 1234,
	75, 1234,
	79, 1234,
	80, 1234,
	81, 1234,
	82, 1234,
	83, 1234,
	84, 1234,
	85, 1234,
	88, 1234,
	89, 1234,
	90, 1234,
	91, 1234,
	92, 1234,
	94, 1234,
	96, 1234,
	97, 1234,
	98, 1234,
	99, 1234,
	100, 1234,
	101, 1234,
	103, 1234,
	104, 1234,
	105, 1234,
	107, 1234,
	108, 1234,
	109, 1234,
	117, 1234,
	118, 1234,
	119, 1234,
	120, 1234,
	121, 1234,
	123, 1234,
	124, 1234,
	125, 1234,
	127, 1234,
	128, 1234,
	129, 1234,
	131, 1234,
	132, 1234,
	133, 1234,
	135, 1234,
	136, 1234,
	137, 1234,
	140, 1234,
	141, 1234,
	142, 1234,
	144, 1234,
	145, 1234,
	147, 1234,
	148, 1234,
	149, 1234,
	151, 1234,
	152, 1234,
	153, 1234,
	154, 1234,
	155, 1234,
	156, 1234,
	157, 1234,
	158, 1234,
	159, 1234,
	160, 1234,
	161, 1234,
	162, 1234,
	163, 1234,
	164, 1234,
	165, 1234,
	166, 1234,
	168, 1234,
	174, 1234,
	175, 1234,
	176, 1234,
	177, 1234,
	181, 1234,
	183, 1234,
	184, 1234,
	188, 1234,
	189, 1234,
	190, 1234,
	191, 1234,
	192, 1234,
	193, 1234,
	194, 1234,
	195, 1234,
	196, 1234,
	197, 1234,
	198, 1234,
	199, 1234,
	200, 1234,
	202, 1234,
	203, 1234,
	205, 1234,
	206, 1234,
	208, 1234,
	209, 1234,
	210, 1234,
	211, 1234,
	212, 1234,
	213, 1234,
	214, 1234,
	215, 1234,
	216, 1234,
	218, 1234,
	219, 1234,
	221, 1234,
	222, 1234,
	223, 1234,
	224, 1234,
	228, 1234,
	229, 1234,
	230, 1234,
	231, 1234,
	232, 1234,
	235, 1234,
	236, 1234,
	237, 1234,
	239, 1234,
	241, 1234,
	242, 1234,
	244, 1234,
	246, 1234,
	247, 1234,
	248, 1234,
	250, 1234,
	254, 1234,
	255, 1234,
	256, 1234,
	257, 1234,
	258, 1234,
	259, 1234,
	261, 1234,
	262, 1234,
	263, 1234,
	265, 1234,
	266, 1234,
	268, 1234,
	269, 1234,
	272, 1234,
	276, 1234,
	277, 1234,
	278, 1234,
	281, 1234,
	282, 1234,
	283, 1234,
	284, 1234,
	286, 1234,
	287, 1234,
	288, 1234,
	289, 1234,
	290, 1234,
	291, 1234,
	292, 1234,
	293, 1234,
	294, 1234,
	295, 1234,
	296, 1234,
	297, 1234,
	298, 1234,
	299, 1234,
	300, 1234,
	301, 1234,
	302, 1234,
	303, 1234,
	304, 1234,
	305, 1234,
	306, 1234,
	307, 1234,
	309, 1234,
	311, 1234,
	312, 1234,
	313, 1234,
	314, 1234,
	315, 1234,
	316, 1234,
	317, 1234,
	318, 1234,
	319, 1234,
	320, 1234,
	321, 1234,
	322, 1234,
	324, 1234,
	326, 1234,
	328, 1234,
	329, 1234,
	331, 1234,
	332, 1234,
	333, 1234,
	334, 1234,
	335, 1234,
	338, 1234,
	342, 1234,
	343, 1234,
	344, 1234,
	347, 1234,
	348, 1234,
	349, 1234,
	351, 1234,
	353, 1234,
	354, 1234,
	355, 1234,
	356, 1234,
	357, 1234,
	358, 1234,
	359, 1234,
	360, 1234,
	361, 1234,
	362, 1234,
	363, 1234,
	364, 1234,
	366, 1234,
	367, 1234,
	368, 1234,
	369, 1234,
	370, 1234,
	371, 1234,
	372, 1234,
	373, 1234,
	374, 1234,
	375, 1234,
	376, 1234,
	377, 1234,
	378, 1234,
	379, 1234,
	380, 1234,
	382, 1234,
	383, 1234,
	385, 1234,
	386, 1234,
	387, 1234,
	388, 1234,
	389, 1234,
	390, 1234,
	391, 1234,
	392, 1234,
	393, 1234,
	394, 1234,
	395, 1234,
	396, 1234,
	398, 1234,
	400, 1234,
	401, 1234,
	402, 1234,
	407, 1234,
	409, 1234,
	410, 1234,
	411, 1234,
	412, 1234,
	413, 1234,
	414, 1234,
	415, 1234,
	416, 1234,
	417, 1234,
	419, 1234,
	420, 1234,
	421, 1234,
	423, 1234,
	424, 1234,
	425, 1234,
	426, 1234,
	427, 1234,
	428, 1234,
	430, 1234,
	431, 1234,
	432, 1234,
	433, 1234,
	434, 1234,
	435, 1234,
	436, 1234,
	437, 1234,
	438, 1234,
	439, 1234,
	440, 1234,
	442, 1234,
	443, 1234,
	444, 1234,
	445, 1234,
	446, 1234,
	447, 1234,
	449, 1234,
	450, 1234,
	451, 1234,
	452, 1234,
	453, 1234,
	454, 1234,
	456, 1234,
	457, 1234,
	458, 1234,
	459, 1234,
	460, 1234,
	461, 1234,
	462, 1234,
	464, 1234,
	466, 1234,
	467, 1234,
	468, 1234,
	469, 1234,
	470, 1234,
	471, 1234,
	472, 1234,
	473, 1234,
	474, 1234,
	475, 1234,
	476, 1234,
	477, 1234,
	478, 1234,
	479, 1234,
	480, 1234,
	481, 1234,
	483, 1234,
	484, 1234,
	486, 1234,
	487, 1234,
	489, 1234,
	490, 1234,
	491, 1234,
	492, 1234,
	493, 1234,
	494, 1234,
	495, 1234,
	496, 1234,
	497, 1234,
	499, 1234,
	500, 1234,
	501, 1234,
	502, 1234,
	503, 1234,
	505, 1234,
	507, 1234,
	508, 1234,
	509, 1234,
	510, 1234,
	511, 1234,
	512, 1234,
	514, 1234,
	515, 1234,
	516, 1234,
	517, 1234,
	519, 1234,
	520, 1234,
	523, 1234,
	524, 1234,
	525, 1234,
	526, 1234,
	527, 1234,
	528, 1234,
	529, 1234,
	531, 1234,
	534, 1234,
	535, 1234,
	536, 1234,
	537, 1234,
	538, 1234,
	539, 1234,
	541, 1234,
	542, 1234,
	543, 1234,
	544, 1234,
	550, 1234,
	551, 1234,
	552, 1234,
	553, 1234,
	554, 1234,
	555, 1234,
	-2, 0,
	-1, 742,
	186, 2242,
	504, 2242,
	563, 2242,
	582, 2242,
	-2, 0,
	-1, 743,
	186, 2347,
	504, 2347,
	563, 2347,
	582, 2347,
	-2, 0,
	-1, 744,
	186, 2229,
	504, 2229,
	563, 2229,
	582, 2229,
	-2, 0,
	-1, 746,
	186, 2477,
	504, 2477,
	563, 2477,
	582, 2477,
	-2, 0,
	-1, 748,
	186, 2517,
	504, 2517,
	563, 2517,
	582, 2517,
	-2, 0,
	-1, 755,
	186, 2374,
	504, 2374,
	563, 2374,
	582, 2374,
	-2, 666,
	-1, 785,
	582, 2178,
	585, 2178,
	-2, 937,
	-1, 786,
	582, 2180,
	585, 2180,
	-2, 938,
	-1, 787,
	582, 2179,
	585, 2179,
	-2, 939,
	-1, 788,
	585, 2105,
	-2, 940,
	-1, 811,
	182, 240,
	-2, 0,
	-1, 835,
	43, 2152,
	-2, 0,
	-1, 836,
	541, 1212,
	-2, 1007,
	-1, 852,
	4, 1614,
	21, 1614,
	22, 1614,
	23, 1614,
	24, 1614,
	25, 1614,
	26, 1614,
	27, 1614,
	29, 1614,
	30, 1614,
	36, 1614,
	41, 1614,
	42, 1614,
	44, 1614,
	45, 1614,
	46, 1614,
	47, 1614,
	48, 1614,
	49, 1614,
	50, 1614,
	51, 1614,
	53, 1614,
	54, 1614,
	55, 1614,
	56, 1614,
	58, 1614,
	59, 1614,
	60, 1614,
	61, 1614,
	62, 1614,
	63, 1614,
	64, 1614,
	68, 1614,
	69, 1614,
	70, 1614,
	71, 1614,
	73, 1614,
	74, 1614,
	75, 1614,
	79, 1614,
	80, 1614,
	81, 1614,
	82, 1614,
	83, 1614,
	84, 1614,
	85, 1614,
	88, 1614,
	89, 1614,
	90, 1614,
	91, 1614,
	92, 1614,
	94, 1614,
	96, 1614,
	97, 1614,
	98, 1614,
	99, 1614,
	100, 1614,
	101, 1614,
	103, 1614,
	104, 1614,
	105, 1614,
	107, 1614,
	108, 1614,
	109, 1614,
	117, 1614,
	118, 1614,
	119, 1614,
	120, 1614,
	121, 1614,
	123, 1614,
	124, 1614,
	125, 1614,
	127, 1614,
	128, 1614,
	129, 1614,
	131, 1614,
	132, 1614,
	133, 1614,
	135, 1614,
	136, 1614,
	137, 1614,
	140, 1614,
	141, 1614,
	142, 1614,
	144, 1614,
	145, 1614,
	147, 1614,
	148, 1614,
	149, 1614,
	151, 1614,
	152, 1614,
	153, 1614,
	154, 1614,
	155, 1614,
	156, 1614,
	157, 1614,
	158, 1614,
	159, 1614,
	160, 1614,
	161, 1614,
	162, 1614,
	163, 1614,
	164, 1614,
	165, 1614,
	166, 1614,
	168, 1614,
	174, 1614,
	175, 1614,
	176, 1614,
	177, 1614,
	181, 1614,
	183, 1614,
	184, 1614,
	188, 1614,
	189, 1614,
	190, 1614,
	191, 1614,
	192, 1614,
	193, 1614,
	194, 1614,
	195, 1614,
	196, 1614,
	197, 1614,
	198, 1614,
	199, 1614,
	200, 1614,
	202, 1614,
	203, 1614,
	205, 1614,
	206, 1614,
	208, 1614,
	209, 1614,
	210, 1614,
	211, 1614,
	212, 1614,
	213, 1614,
	214, 1614,
	215, 1614,
	216, 1614,
	218, 1614,
	219, 1614,
	221, 1614,
	222, 1614,
	223, 1614,
	224, 1614,
	228, 1614,
	229, 1614,
	230, 1614,
	231, 1614,
	232, 1614,
	235, 1614,
	236, 1614,
	237, 1614,
	239, 1614,
	241, 1614,
	242, 1614,
	244, 1614,
	246, 1614,
	247, 1614,
	248, 1614,
	250, 1614,
	254, 1614,
	255, 1614,
	256, 1614,
	257, 1614,
	258, 1614,
	259, 1614,
	261, 1614,
	262, 1614,
	263, 1614,
	265, 1614,
	266, 1614,
	268, 1614,
	269, 1614,
	272, 1614,
	276, 1614,
	277, 1614,
	278, 1614,
	281, 1614,
	282, 1614,
	283, 1614,
	284, 1614,
	286, 1614,
	287, 1614,
	288, 1614,
	289, 1614,
	290, 1614,
	291, 1614,
	292, 1614,
	293, 1614,
	294, 1614,
	295, 1614,
	296, 1614,
	297, 1614,
	298, 1614,
	299, 1614,
	300, 1614,
	301, 1614,
	302, 1614,
	303, 1614,
	304, 1614,
	305, 1614,
	306, 1614,
	307, 1614,
	309, 1614,
	311, 1614,
	312, 1614,
	313, 1614,
	314, 1614,
	315, 1614,
	316, 1614,
	317, 1614,
	318, 1614,
	319, 1614,
	320, 1614,
	321, 1614,
	322, 1614,
	324, 1614,
	326, 1614,
	328, 1614,
	329, 1614,
	331, 1614,
	332, 1614,
	333, 1614,
	334, 1614,
	335, 1614,
	338, 1614,
	342, 1614,
	343, 1614,
	344, 1614,
	347, 1614,
	348, 1614,
	349, 1614,
	351, 1614,
	353, 1614,
	354, 1614,
	355, 1614,
	356, 1614,
	357, 1614,
	358, 1614,
	359, 1614,
	360, 1614,
	361, 1614,
	362, 1614,
	363, 1614,
	364, 1614,
	366, 1614,
	367, 1614,
	368, 1614,
	369, 1614,
	370, 1614,
	371, 1614,
	372, 1614,
	373, 1614,
	374, 1614,
	375, 1614,
	376, 1614,
	377, 1614,
	378, 1614,
	379, 1614,
	380, 1614,
	382, 1614,
	383, 1614,
	385, 1614,
	386, 1614,
	387, 1614,
	388, 1614,
	389, 1614,
	390, 1614,
	391, 1614,
	392, 1614,
	393, 1614,
	394, 1614,
	395, 1614,
	396, 1614,
	398, 1614,
	400, 1614,
	401, 1614,
	402, 1614,
	407, 1614,
	409, 1614,
	410, 1614,
	411, 1614,
	412, 1614,
	413, 1614,
	414, 1614,
	415, 1614,
	416, 1614,
	417, 1614,
	419, 1614,
	420, 1614,
	421, 1614,
	423, 1614,
	424, 1614,
	425, 1614,
	426, 1614,
	427, 1614,
	428, 1614,
	430, 1614,
	431, 1614,
	432, 1614,
	433, 1614,
	434, 1614,
	435, 1614,
	436, 1614,
	437, 1614,
	438, 1614,
	439, 1614,
	440, 1614,
	442, 1614,
	443, 1614,
	444, 1614,
	445, 1614,
	446, 1614,
	447, 1614,
	449, 1614,
	450, 1614,
	451, 1614,
	452, 1614,
	453, 1614,
	454, 1614,
	456, 1614,
	457, 1614,
	458, 1614,
	459, 1614,
	460, 1614,
	461, 1614,
	462, 1614,
	464, 1614,
	466, 1614,
	467, 1614,
	468, 1614,
	469, 1614,
	470, 1614,
	471, 1614,
	472, 1614,
	473, 1614,
	474, 1614,
	475, 1614,
	476, 1614,
	477, 1614,
	478, 1614,
	479, 1614,
	480, 1614,
	481, 1614,
	483, 1614,
	484, 1614,
	486, 1614,
	487, 1614,
	489, 1614,
	490, 1614,
	491, 1614,
	492, 1614,
	493, 1614,
	494, 1614,
	495, 1614,
	496, 1614,
	497, 1614,
	499, 1614,
	500, 1614,
	501, 1614,
	502, 1614,
	503, 1614,
	505, 1614,
	507, 1614,
	508, 1614,
	509, 1614,
	510, 1614,
	511, 1614,
	512, 1614,
	514, 1614,
	515, 1614,
	516, 1614,
	517, 1614,
	519, 1614,
	520, 1614,
	523, 1614,
	524, 1614,
	525, 1614,
	526, 1614,
	527, 1614,
	528, 1614,
	529, 1614,
	531, 1614,
	534, 1614,
	535, 1614,
	536, 1614,
	537, 1614,
	538, 1614,
	539, 1614,
	541, 1614,
	542, 1614,
	543, 1614,
	544, 1614,
	550, 1614,
	551, 1614,
	552, 1614,
	553, 1614,
	554, 1614,
	555, 1614,
	-2, 0,
	-1, 860,
	258, 383,
	-2, 0,
	-1, 931,
	387, 832,
	447, 832,
	487, 832,
	509, 832,
	-2, 0,
	-1, 932,
	387, 831,
	447, 831,
	487, 831,
	509, 831,
	-2, 771,
	-1, 936,
	1, 878,
	579, 878,
	581, 878,
	583, 878,
	-2, 0,
	-1, 937,
	1, 806,
	579, 806,
	581, 806,
	583, 806,
	-2, 0,
	-1, 938,
	1, 810,
	579, 810,
	581, 810,
	583, 810,
	-2, 0,
	-1, 939,
	1, 936,
	182, 936,
	579, 936,
	581, 936,
	583, 936,
	-2, 0,
	-1, 947,
	1, 837,
	579, 837,
	581, 837,
	583, 837,
	-2, 0,
	-1, 953,
	1, 878,
	579, 878,
	581, 878,
	583, 878,
	-2, 0,
	-1, 954,
	1, 880,
	579, 880,
	581, 880,
	583, 880,
	-2, 0,
	-1, 955,
	1, 883,
	579, 883,
	581, 883,
	583, 883,
	-2, 0,
	-1, 961,
	1, 901,
	579, 901,
	581, 901,
	583, 901,
	-2, 0,
	-1, 962,
	1, 903,
	579, 903,
	581, 903,
	583, 903,
	-2, 0,
	-1, 967,
	1, 931,
	579, 931,
	581, 931,
	583, 931,
	-2, 0,
	-1, 1013,
	169, 1489,
	182, 1489,
	271, 1489,
	336, 1489,
	-2, 1425,
	-1, 1028,
	169, 1488,
	182, 1488,
	271, 1488,
	336, 1488,
	-2, 1422,
	-1, 1054,
	582, 2177,
	-2, 674,
	-1, 1082,
	5, 2169,
	580, 2167,
	-2, 2158,
	-1, 1090,
	5, 2190,
	580, 2187,
	-2, 2178,
	-1, 1091,
	5, 2191,
	580, 2188,
	-2, 2179,
	-1, 1099,
	582, 2175,
	-2, 2157,
	-1, 1100,
	580, 2599,
	-2, 2176,
	-1, 1123,
	580, 2598,
	-2, 2192,
	-1, 1124,
	5, 1689,
	-2, 2569,
	-1, 1125,
	5, 1690,
	-2, 2570,
	-1, 1126,
	5, 1691,
	-2, 2584,
	-1, 1127,
	5, 1692,
	-2, 2548,
	-1, 1128,
	5, 1693,
	-2, 2582,
	-1, 1129,
	5, 1701,
	-2, 2561,
	-1, 1130,
	5, 1688,
	-2, 2557,
	-1, 1131,
	5, 1688,
	-2, 2556,
	-1, 1132,
	5, 1688,
	-2, 2575,
	-1, 1133,
	5, 1699,
	-2, 2550,
	-1, 1134,
	5, 1704,
	-2, 2549,
	-1, 1135,
	5, 1706,
	-2, 2594,
	-1, 1138,
	5, 1728,
	-2, 2587,
	-1, 1139,
	5, 1720,
	-2, 2588,
	-1, 1140,
	5, 1728,
	-2, 2589,
	-1, 1141,
	5, 1724,
	-2, 2590,
	-1, 1142,
	5, 1674,
	-2, 2562,
	-1, 1143,
	5, 1675,
	-2, 2563,
	-1, 1144,
	5, 1676,
	-2, 2551,
	-1, 1172,
	5, 1711,
	-2, 2595,
	-1, 1173,
	5, 1712,
	-2, 2585,
	-1, 1174,
	5, 1713,
	542, 1713,
	-2, 2552,
	-1, 1175,
	5, 1714,
	542, 1714,
	-2, 2553,
	-1, 1212,
	580, 2187,
	-2, 2178,
	-1, 1213,
	580, 2188,
	-2, 2179,
	-1, 1313,
	186, 2517,
	504, 2517,
	563, 2517,
	582, 2517,
	-2, 0,
	-1, 1316,
	1, 652,
	583, 652,
	-2, 1341,
	-1, 1444,
	355, 2153,
	409, 2153,
	449, 2153,
	573, 2153,
	-2, 2143,
	-1, 1455,
	584, 2153,
	-2, 2154,
	-1, 1461,
	1, 1209,
	579, 1209,
	581, 1209,
	583, 1209,
	-2, 1474,
	-1, 1509,
	394, 1006,
	541, 1006,
	-2, 378,
	-1, 1526,
	43, 2151,
	-2, 972,
	-1, 1533,
	1, 1209,
	579, 1209,
	581, 1209,
	583, 1209,
	-2, 1474,
	-1, 1541,
	4, 1234,
	21, 1234,
	22, 1234,
	23, 1234,
	24, 1234,
	25, 1234,
	26, 1234,
	27, 1234,
	29, 1234,
	30, 1234,
	36, 1234,
	41, 1234,
	42, 1234,
	44, 1234,
	45, 1234,
	46, 1234,
	47, 1234,
	48, 1234,
	49, 1234,
	50, 1234,
	51, 1234,
	53, 1234,
	54, 1234,
	55, 1234,
	56, 1234,
	58, 1234,
	59, 1234,
	60, 1234,
	61, 1234,
	62, 1234,
	63, 1234,
	64, 1234,
	68, 1234,
	69, 1234,
	70, 1234,
	71, 1234,
	73, 1234,
	74, 1234,
	75, 1234,
	79, 1234,
	80, 1234,
	81, 1234,
	82, 1234,
	83, 1234,
	84, 1234,
	85, 1234,
	88, 1234,
	89, 1234,
	90, 1234,
	91, 1234,
	92, 1234,
	94, 1234,
	96, 1234,
	97, 1234,
	98, 1234,
	99, 1234,
	100, 1234,
	101, 1234,
	103, 1234,
	104, 1234,
	105, 1234,
	107, 1234,
	108, 1234,
	109, 1234,
	117, 1234,
	118, 1234,
	119, 1234,
	120, 1234,
	121, 1234,
	123, 1234,
	124, 1234,
	125, 1234,
	127, 1234,
	128, 1234,
	129, 1234,
	131, 1234,
	132, 1234,
	133, 1234,
	135, 1234,
	136, 1234,
	137, 1234,
	140, 1234,
	141, 1234,
	142, 1234,
	144, 1234,
	145, 1234,
	147, 1234,
	148, 1234,
	149, 1234,
	151, 1234,
	152, 1234,
	153, 1234,
	154, 1234,
	155, 1234,
	156, 1234,
	157, 1234,
	158, 1234,
	159, 1234,
	160, 1234,
	161, 1234,
	162, 1234,
	163, 1234,
	164, 1234,
	165, 1234,
	166, 1234,
	174, 1234,
	175, 1234,
	176, 1234,
	177, 1234,
	181, 1234,
	183, 1234,
	184, 1234,
	188, 1234,
	189, 1234,
	190, 1234,
	191, 1234,
	192, 1234,
	193, 1234,
	194, 1234,
	195, 1234,
	196, 1234,
	197, 1234,
	198, 1234,
	199, 1234,
	200, 1234,
	202, 1234,
	203, 1234,
	205, 1234,
	206, 1234,
	208, 1234,
	209, 1234,
	210, 1234,
	211, 1234,
	212, 1234,
	213, 1234,
	214, 1234,
	215, 1234,
	216, 1234,
	218, 1234,
	219, 1234,
	221, 1234,
	222, 1234,
	223, 1234,
	224, 1234,
	229, 1234,
	230, 1234,
	231, 1234,
	232, 1234,
	235, 1234,
	236, 1234,
	237, 1234,
	239, 1234,
	241, 1234,
	242, 1234,
	244, 1234,
	246, 1234,
	247, 1234,
	248, 1234,
	250, 1234,
	254, 1234,
	255, 1234,
	256, 1234,
	257, 1234,
	258, 1234,
	259, 1234,
	261, 1234,
	262, 1234,
	263, 1234,
	265, 1234,
	266, 1234,
	268, 1234,
	269, 1234,
	272, 1234,
	276, 1234,
	277, 1234,
	278, 1234,
	281, 1234,
	282, 1234,
	283, 1234,
	284, 1234,
	286, 1234,
	287, 1234,
	288, 1234,
	289, 1234,
	290, 1234,
	291, 1234,
	292, 1234,
	293, 1234,
	294, 1234,
	295, 1234,
	296, 1234,
	297, 1234,
	298, 1234,
	299, 1234,
	300, 1234,
	301, 1234,
	302, 1234,
	303, 1234,
	304, 1234,
	305, 1234,
	306, 1234,
	307, 1234,
	309, 1234,
	311, 1234,
	312, 1234,
	313, 1234,
	314, 1234,
	315, 1234,
	316, 1234,
	317, 1234,
	318, 1234,
	319, 1234,
	320, 1234,
	321, 1234,
	322, 1234,
	324, 1234,
	328, 1234,
	329, 1234,
	331, 1234,
	332, 1234,
	333, 1234,
	334, 1234,
	335, 1234,
	338, 1234,
	340, 1234,
	342, 1234,
	343, 1234,
	344, 1234,
	347, 1234,
	348, 1234,
	349, 1234,
	351, 1234,
	353, 1234,
	354, 1234,
	355, 1234,
	356, 1234,
	357, 1234,
	358, 1234,
	359, 1234,
	360, 1234,
	361, 1234,
	362, 1234,
	363, 1234,
	364, 1234,
	366, 1234,
	367, 1234,
	368, 1234,
	369, 1234,
	370, 1234,
	371, 1234,
	372, 1234,
	373, 1234,
	374, 1234,
	375, 1234,
	376, 1234,
	377, 1234,
	378, 1234,
	379, 1234,
	380, 1234,
	382, 1234,
	383, 1234,
	385, 1234,
	386, 1234,
	387, 1234,
	388, 1234,
	389, 1234,
	390, 1234,
	391, 1234,
	392, 1234,
	393, 1234,
	394, 1234,
	395, 1234,
	396, 1234,
	398, 1234,
	400, 1234,
	401, 1234,
	402, 1234,
	407, 1234,
	409, 1234,
	410, 1234,
	411, 1234,
	412, 1234,
	413, 1234,
	414, 1234,
	415, 1234,
	416, 1234,
	417, 1234,
	419, 1234,
	420, 1234,
	421, 1234,
	423, 1234,
	424, 1234,
	425, 1234,
	426, 1234,
	427, 1234,
	428, 1234,
	430, 1234,
	431, 1234,
	432, 1234,
	433, 1234,
	434, 1234,
	435, 1234,
	436, 1234,
	437, 1234,
	438, 1234,
	439, 1234,
	440, 1234,
	442, 1234,
	443, 1234,
	444, 1234,
	445, 1234,
	446, 1234,
	447, 1234,
	449, 1234,
	450, 1234,
	451, 1234,
	452, 1234,
	453, 1234,
	454, 1234,
	456, 1234,
	457, 1234,
	458, 1234,
	459, 1234,
	460, 1234,
	461, 1234,
	462, 1234,
	464, 1234,
	466, 1234,
	467, 1234,
	468, 1234,
	469, 1234,
	470, 1234,
	471, 1234,
	472, 1234,
	473, 1234,
	474, 1234,
	475, 1234,
	476, 1234,
	477, 1234,
	478, 1234,
	479, 1234,
	480, 1234,
	481, 1234,
	483, 1234,
	484, 1234,
	486, 1234,
	487, 1234,
	489, 1234,
	490, 1234,
	491, 1234,
	492, 1234,
	493, 1234,
	494, 1234,
	495, 1234,
	496, 1234,
	497, 1234,
	499, 1234,
	500, 1234,
	501, 1234,
	502, 1234,
	503, 1234,
	505, 1234,
	507, 1234,
	508, 1234,
	509, 1234,
	510, 1234,
	511, 1234,
	512, 1234,
	514, 1234,
	515, 1234,
	516, 1234,
	517, 1234,
	519, 1234,
	520, 1234,
	523, 1234,
	524, 1234,
	525, 1234,
	526, 1234,
	527, 1234,
	528, 1234,
	529, 1234,
	531, 1234,
	534, 1234,
	535, 1234,
	536, 1234,
	537, 1234,
	538, 1234,
	539, 1234,
	541, 1234,
	542, 1234,
	543, 1234,
	544, 1234,
	550, 1234,
	551, 1234,
	552, 1234,
	553, 1234,
	554, 1234,
	555, 1234,
	-2, 0,
	-1, 1564,
	1, 523,
	579, 523,
	581, 523,
	583, 523,
	-2, 1445,
	-1, 1567,
	4, 2593,
	11, 2593,
	12, 2593,
	14, 2593,
	15, 2593,
	16, 2593,
	17, 2593,
	18, 2593,
	19, 2593,
	21, 2593,
	22, 2593,
	23, 2593,
	24, 2593,
	25, 2593,
	26, 2593,
	27, 2593,
	29, 2593,
	30, 2593,
	33, 2593,
	34, 2593,
	36, 2593,
	38, 2593,
	41, 2593,
	42, 2593,
	44, 2593,
	45, 2593,
	46, 2593,
	47, 2593,
	48, 2593,
	49, 2593,
	50, 2593,
	51, 2593,
	53, 2593,
	54, 2593,
	55, 2593,
	56, 2593,
	58, 2593,
	59, 2593,
	60, 2593,
	61, 2593,
	62, 2593,
	63, 2593,
	64, 2593,
	68, 2593,
	69, 2593,
	70, 2593,
	71, 2593,
	73, 2593,
	74, 2593,
	75, 2593,
	76, 2593,
	79, 2593,
	80, 2593,
	81, 2593,
	82, 2593,
	83, 2593,
	84, 2593,
	85, 2593,
	86, 2593,
	88, 2593,
	89, 2593,
	90, 2593,
	91, 2593,
	92, 2593,
	94, 2593,
	95, 2593,
	96, 2593,
	97, 2593,
	98, 2593,
	99, 2593,
	100, 2593,
	101, 2593,
	103, 2593,
	104, 2593,
	105, 2593,
	106, 2593,
	107, 2593,
	108, 2593,
	109, 2593,
	117, 2593,
	118, 2593,
	119, 2593,
	120, 2593,
	121, 2593,
	123, 2593,
	124, 2593,
	125, 2593,
	127, 2593,
	128, 2593,
	129, 2593,
	131, 2593,
	132, 2593,
	133, 2593,
	135, 2593,
	136, 2593,
	137, 2593,
	140, 2593,
	141, 2593,
	142, 2593,
	144, 2593,
	145, 2593,
	147, 2593,
	148, 2593,
	149, 2593,
	151, 2593,
	152, 2593,
	153, 2593,
	154, 2593,
	155, 2593,
	156, 2593,
	157, 2593,
	158, 2593,
	159, 2593,
	160, 2593,
	161, 2593,
	162, 2593,
	163, 2593,
	164, 2593,
	165, 2593,
	166, 2593,
	170, 2593,
	171, 2593,
	172, 2593,
	173, 2593,
	174, 2593,
	175, 2593,
	176, 2593,
	177, 2593,
	180, 2593,
	181, 2593,
	183, 2593,
	184, 2593,
	187, 2593,
	188, 2593,
	189, 2593,
	190, 2593,
	191, 2593,
	192, 2593,
	193, 2593,
	194, 2593,
	195, 2593,
	196, 2593,
	197, 2593,
	198, 2593,
	199, 2593,
	200, 2593,
	202, 2593,
	203, 2593,
	205, 2593,
	206, 2593,
	208, 2593,
	209, 2593,
	210, 2593,
	211, 2593,
	212, 2593,
	213, 2593,
	214, 2593,
	215, 2593,
	216, 2593,
	217, 2593,
	218, 2593,
	219, 2593,
	220, 2593,
	221, 2593,
	222, 2593,
	223, 2593,
	224, 2593,
	226, 2593,
	227, 2593,
	229, 2593,
	230, 2593,
	231, 2593,
	232, 2593,
	234, 2593,
	235, 2593,
	236, 2593,
	237, 2593,
	239, 2593,
	241, 2593,
	242, 2593,
	243, 2593,
	244, 2593,
	245, 2593,
	246, 2593,
	247, 2593,
	248, 2593,
	249, 2593,
	250, 2593,
	252, 2593,
	253, 2593,
	254, 2593,
	255, 2593,
	256, 2593,
	257, 2593,
	258, 2593,
	259, 2593,
	261, 2593,
	262, 2593,
	263, 2593,
	265, 2593,
	266, 2593,
	267, 2593,
	268, 2593,
	269, 2593,
	270, 2593,
	272, 2593,
	276, 2593,
	277, 2593,
	278, 2593,
	281, 2593,
	282, 2593,
	283, 2593,
	284, 2593,
	285, 2593,
	286, 2593,
	287, 2593,
	288, 2593,
	289, 2593,
	290, 2593,
	291, 2593,
	292, 2593,
	293, 2593,
	294, 2593,
	295, 2593,
	296, 2593,
	297, 2593,
	298, 2593,
	299, 2593,
	300, 2593,
	301, 2593,
	302, 2593,
	303, 2593,
	304, 2593,
	305, 2593,
	306, 2593,
	307, 2593,
	309, 2593,
	310, 2593,
	311, 2593,
	312, 2593,
	313, 2593,
	314, 2593,
	315, 2593,
	316, 2593,
	317, 2593,
	318, 2593,
	319, 2593,
	320, 2593,
	321, 2593,
	322, 2593,
	324, 2593,
	327, 2593,
	328, 2593,
	329, 2593,
	331, 2593,
	332, 2593,
	333, 2593,
	334, 2593,
	335, 2593,
	338, 2593,
	342, 2593,
	343, 2593,
	344, 2593,
	345, 2593,
	347, 2593,
	348, 2593,
	349, 2593,
	351, 2593,
	353, 2593,
	354, 2593,
	355, 2593,
	356, 2593,
	357, 2593,
	358, 2593,
	359, 2593,
	360, 2593,
	361, 2593,
	362, 2593,
	363, 2593,
	364, 2593,
	366, 2593,
	367, 2593,
	368, 2593,
	369, 2593,
	370, 2593,
	371, 2593,
	372, 2593,
	373, 2593,
	374, 2593,
	375, 2593,
	376, 2593,
	377, 2593,
	378, 2593,
	379, 2593,
	380, 2593,
	382, 2593,
	383, 2593,
	385, 2593,
	386, 2593,
	387, 2593,
	388, 2593,
	389, 2593,
	390, 2593,
	391, 2593,
	392, 2593,
	393, 2593,
	394, 2593,
	395, 2593,
	396, 2593,
	398, 2593,
	400, 2593,
	401, 2593,
	402, 2593,
	407, 2593,
	408, 2593,
	409, 2593,
	410, 2593,
	411, 2593,
	412, 2593,
	413, 2593,
	414, 2593,
	415, 2593,
	416, 2593,
	417, 2593,
	419, 2593,
	420, 2593,
	421, 2593,
	422, 2593,
	423, 2593,
	424, 2593,
	425, 2593,
	426, 2593,
	427, 2593,
	428, 2593,
	429, 2593,
	430, 2593,
	431, 2593,
	432, 2593,
	433, 2593,
	434, 2593,
	435, 2593,
	436, 2593,
	437, 2593,
	438, 2593,
	439, 2593,
	440, 2593,
	442, 2593,
	443, 2593,
	444, 2593,
	445, 2593,
	446, 2593,
	447, 2593,
	449, 2593,
	450, 2593,
	451, 2593,
	452, 2593,
	453, 2593,
	454, 2593,
	455, 2593,
	456, 2593,
	457, 2593,
	458, 2593,
	459, 2593,
	460, 2593,
	461, 2593,
	462, 2593,
	464, 2593,
	466, 2593,
	467, 2593,
	468, 2593,
	469, 2593,
	470, 2593,
	471, 2593,
	472, 2593,
	473, 2593,
	474, 2593,
	475, 2593,
	476, 2593,
	477, 2593,
	478, 2593,
	479, 2593,
	480, 2593,
	481, 2593,
	483, 2593,
	484, 2593,
	486, 2593,
	487, 2593,
	489, 2593,
	490, 2593,
	491, 2593,
	492, 2593,
	493, 2593,
	494, 2593,
	495, 2593,
	496, 2593,
	497, 2593,
	499, 2593,
	500, 2593,
	501, 2593,
	502, 2593,
	503, 2593,
	505, 2593,
	507, 2593,
	508, 2593,
	509, 2593,
	510, 2593,
	511, 2593,
	512, 2593,
	514, 2593,
	515, 2593,
	516, 2593,
	517, 2593,
	519, 2593,
	520, 2593,
	523, 2593,
	524, 2593,
	525, 2593,
	526, 2593,
	527, 2593,
	528, 2593,
	529, 2593,
	531, 2593,
	534, 2593,
	535, 2593,
	536, 2593,
	537, 2593,
	538, 2593,
	539, 2593,
	541, 2593,
	542, 2593,
	543, 2593,
	544, 2593,
	550, 2593,
	551, 2593,
	552, 2593,
	553, 2593,
	554, 2593,
	555, 2593,
	556, 2593,
	558, 2593,
	561, 2593,
	562, 2593,
	563, 2593,
	564, 2593,
	565, 2593,
	566, 2593,
	568, 2593,
	569, 2593,
	570, 2593,
	571, 2593,
	572, 2593,
	573, 2593,
	574, 2593,
	575, 2593,
	576, 2593,
	578, 2593,
	581, 2593,
	582, 2593,
	584, 2593,
	585, 2593,
	-2, 0,
	-1, 1572,
	186, 2477,
	504, 2477,
	563, 2477,
	582, 2477,
	-2, 0,
	-1, 1621,
	387, 832,
	447, 832,
	487, 832,
	509, 832,
	-2, 0,
	-1, 1648,
	1, 827,
	579, 827,
	581, 827,
	583, 827,
	-2, 0,
	-1, 1649,
	1, 865,
	579, 865,
	581, 865,
	583, 865,
	-2, 0,
	-1, 1650,
	1, 873,
	579, 873,
	581, 873,
	583, 873,
	-2, 0,
	-1, 1653,
	1, 836,
	579, 836,
	581, 836,
	583, 836,
	-2, 0,
	-1, 1655,
	1, 840,
	579, 840,
	581, 840,
	583, 840,
	-2, 0,
	-1, 1661,
	1, 847,
	579, 847,
	581, 847,
	583, 847,
	-2, 0,
	-1, 1690,
	1, 2539,
	579, 2539,
	581, 2539,
	582, 2539,
	583, 2539,
	-2, 899,
	-1, 1691,
	1, 2474,
	579, 2474,
	581, 2474,
	582, 2474,
	583, 2474,
	-2, 900,
	-1, 1695,
	1, 912,
	579, 912,
	581, 912,
	583, 912,
	-2, 0,
	-1, 1709,
	1, 1336,
	583, 1336,
	-2, 1341,
	-1, 1712,
	169, 1488,
	182, 1488,
	271, 1488,
	336, 1488,
	-2, 1426,
	-1, 1806,
	150, 1447,
	169, 1447,
	182, 1447,
	238, 1447,
	271, 1447,
	336, 1447,
	346, 1447,
	521, 1447,
	-2, 1889,
	-1, 1866,
	581, 2039,
	-2, 0,
	-1, 1901,
	150, 1447,
	169, 1447,
	182, 1447,
	238, 1447,
	271, 1447,
	336, 1447,
	346, 1447,
	521, 1447,
	-2, 1575,
	-1, 1935,
	504, 2474,
	582, 2474,
	585, 2474,
	-2, 0,
	-1, 1952,
	580, 1716,
	-2, 1704,
	-1, 1983,
	186, 2474,
	582, 2474,
	585, 2474,
	-2, 0,
	-1, 2031,
	1, 654,
	583, 654,
	-2, 1341,
	-1, 2157,
	220, 241,
	-2, 2186,
	-1, 2158,
	220, 242,
	-2, 287,
	-1, 2262,
	1, 829,
	579, 829,
	581, 829,
	583, 829,
	-2, 0,
	-1, 2263,
	1, 867,
	579, 867,
	581, 867,
	583, 867,
	-2, 0,
	-1, 2264,
	1, 875,
	579, 875,
	581, 875,
	583, 875,
	-2, 0,
	-1, 2265,
	1, 914,
	579, 914,
	581, 914,
	583, 914,
	-2, 0,
	-1, 2298,
	1, 849,
	579, 849,
	581, 849,
	583, 849,
	-2, 0,
	-1, 2353,
	427, 1515,
	428, 1515,
	-2, 1749,
	-1, 2384,
	14, 0,
	15, 0,
	16, 0,
	561, 0,
	562, 0,
	563, 0,
	-2, 1769,
	-1, 2385,
	14, 0,
	15, 0,
	16, 0,
	561, 0,
	562, 0,
	563, 0,
	-2, 1770,
	-1, 2386,
	95, 0,
	252, 0,
	253, 0,
	565, 0,
	566, 0,
	-2, 1771,
	-1, 2387,
	95, 0,
	252, 0,
	253, 0,
	565, 0,
	566, 0,
	-2, 1772,
	-1, 2388,
	95, 0,
	252, 0,
	253, 0,
	565, 0,
	566, 0,
	-2, 1773,
	-1, 2389,
	95, 0,
	252, 0,
	253, 0,
	565, 0,
	566, 0,
	-2, 1774,
	-1, 2390,
	95, 0,
	252, 0,
	253, 0,
	565, 0,
	566, 0,
	-2, 1775,
	-1, 2391,
	14, 0,
	15, 0,
	16, 0,
	561, 0,
	562, 0,
	563, 0,
	-2, 1776,
	-1, 2403,
	14, 0,
	15, 0,
	16, 0,
	561, 0,
	562, 0,
	563, 0,
	-2, 1788,
	-1, 2404,
	14, 0,
	15, 0,
	16, 0,
	561, 0,
	562, 0,
	563, 0,
	-2, 1789,
	-1, 2405,
	14, 0,
	15, 0,
	16, 0,
	561, 0,
	562, 0,
	563, 0,
	-2, 1790,
	-1, 2408,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	455, 0,
	556, 0,
	564, 0,
	-2, 1795,
	-1, 2414,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	455, 0,
	556, 0,
	564, 0,
	-2, 1799,
	-1, 2416,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	455, 0,
	556, 0,
	564, 0,
	-2, 1807,
	-1, 2417,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	455, 0,
	556, 0,
	564, 0,
	-2, 1808,
	-1, 2418,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	455, 0,
	556, 0,
	564, 0,
	-2, 1809,
	-1, 2419,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	455, 0,
	556, 0,
	564, 0,
	-2, 1810,
	-1, 2555,
	5, 2190,
	186, 2050,
	580, 2187,
	-2, 2178,
	-1, 2556,
	186, 2051,
	-2, 2544,
	-1, 2557,
	186, 2052,
	-2, 2373,
	-1, 2558,
	186, 2053,
	-2, 2260,
	-1, 2559,
	186, 2054,
	-2, 2314,
	-1, 2560,
	186, 2055,
	-2, 2358,
	-1, 2561,
	186, 2056,
	-2, 2472,
	-1, 2562,
	186, 2057,
	-2, 1872,
	-1, 2632,
	1, 1576,
	2, 1576,
	106, 1576,
	150, 1576,
	169, 1576,
	182, 1576,
	187, 1576,
	204, 1576,
	207, 1576,
	234, 1576,
	238, 1576,
	249, 1576,
	267, 1576,
	271, 1576,
	310, 1576,
	336, 1576,
	340, 1576,
	346, 1576,
	418, 1576,
	422, 1576,
	521, 1576,
	532, 1576,
	547, 1576,
	548, 1576,
	549, 1576,
	559, 1576,
	579, 1576,
	581, 1576,
	583, 1576,
	585, 1576,
	-2, 1575,
	-1, 2645,
	580, 2159,
	-2, 2173,
	-1, 2647,
	1, 303,
	547, 303,
	-2, 1474,
	-1, 2673,
	580, 1715,
	-2, 1705,
	-1, 2847,
	1, 1209,
	579, 1209,
	581, 1209,
	583, 1209,
	-2, 1474,
	-1, 3016,
	341, 1518,
	-2, 2583,
	-1, 3017,
	341, 1519,
	-2, 2458,
	-1, 3021,
	427, 2116,
	428, 2116,
	-2, 1870,
	-1, 3022,
	427, 2120,
	428, 2120,
	-2, 1871,
	-1, 3023,
	427, 2117,
	428, 2117,
	-2, 1870,
	-1, 3024,
	427, 2121,
	428, 2121,
	-2, 1871,
	-1, 3037,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	455, 0,
	556, 0,
	564, 0,
	-2, 1797,
	-1, 3038,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	455, 0,
	556, 0,
	564, 0,
	-2, 1801,
	-1, 3044,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	455, 0,
	556, 0,
	564, 0,
	-2, 1803,
	-1, 3260,
	1, 651,
	579, 651,
	581, 651,
	583, 651,
	-2, 1341,
	-1, 3410,
	43, 2151,
	-2, 973,
	-1, 3415,
	1, 1209,
	579, 1209,
	581, 1209,
	583, 1209,
	-2, 1474,
	-1, 3520,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	455, 0,
	556, 0,
	564, 0,
	-2, 1805,
	-1, 3527,
	243, 0,
	245, 0,
	327, 0,
	-2, 1824,
	-1, 3594,
	14, 0,
	15, 0,
	16, 0,
	561, 0,
	562, 0,
	563, 0,
	-2, 1853,
	-1, 3595,
	14, 0,
	15, 0,
	16, 0,
	561, 0,
	562, 0,
	563, 0,
	-2, 1854,
	-1, 3596,
	14, 0,
	15, 0,
	16, 0,
	561, 0,
	562, 0,
	563, 0,
	-2, 1855,
	-1, 3600,
	14, 0,
	15, 0,
	16, 0,
	561, 0,
	562, 0,
	563, 0,
	-2, 1859,
	-1, 3601,
	14, 0,
	15, 0,
	16, 0,
	561, 0,
	562, 0,
	563, 0,
	-2, 1860,
	-1, 3602,
	14, 0,
	15, 0,
	16, 0,
	561, 0,
	562, 0,
	563, 0,
	-2, 1861,
	-1, 3648,
	580, 2160,
	-2, 2174,
	-1, 3807,
	582, 2701,
	-2, 1400,
	-1, 3865,
	243, 0,
	245, 0,
	327, 0,
	-2, 1825,
	-1, 3868,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	455, 0,
	556, 0,
	564, 0,
	-2, 1828,
	-1, 3869,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	455, 0,
	556, 0,
	564, 0,
	-2, 1830,
	-1, 3960,
	582, 2175,
	-2, 1244,
	-1, 4102,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	455, 0,
	556, 0,
	564, 0,
	-2, 1829,
	-1, 4103,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	455, 0,
	556, 0,
	564, 0,
	-2, 1831,
	-1, 4114,
	243, 0,
	-2, 1862,
	-1, 4281,
	243, 0,
	-2, 1863,
	-1, 4463,
	50, 0,
	217, 0,
	270, 0,
	455, 0,
	556, 0,
	564, 0,
	-2, 2547,
}

const sqlPrivate = 57344

const sqlLast = 121504

var sqlAct = [...]int{
	265, 4559, 3399, 2912, 4645, 3171, 2925, 4338, 4515, 4456,
	4156, 1473, 4316, 4462, 4308, 4444, 3398, 4473, 4586, 4359,
	4203, 4431, 2079, 4334, 4455, 4412, 2154, 4415, 3956, 4474,
	4395, 2735, 4475, 2777, 4142, 2797, 4234, 3559, 4210, 4285,
	1216, 4161, 4528, 3512, 3848, 2229, 4461, 4058, 4019, 4053,
	4123, 4091, 2363, 1038, 3282, 3432, 3791, 4040, 4219, 1205,
	4033, 3799, 3735, 4042, 1285, 1278, 3999, 3957, 2587, 1289,
	3941, 3340, 3030, 4248, 2238, 787, 2431, 3426, 4063, 2809,
	3772, 3755, 1588, 3394, 2371, 3285, 3757, 1721, 4119, 1349,
	2087, 3471, 39, 1291, 3384, 2901, 2364, 3473, 1029, 2947,
	3651, 787, 2934, 2871, 2013, 753, 1939, 2882, 1441, 3214,
	2936, 3186, 1907, 3177, 3847, 3194, 3904, 3154, 1271, 2944,
	2898, 2927, 862, 2933, 2236, 2913, 3175, 2149, 2896, 2098,
	1876, 1629, 3304, 2148, 2737, 2368, 4560, 2625, 4286, 2624,
	3619, 1814, 3153, 1037, 174, 2444, 3279, 3014, 2875, 782,
	2475, 2125, 1283, 4, 2473, 259, 2824, 1448, 1852, 2144,
	2943, 108, 2627, 2132, 1196, 1940, 1528, 2067, 2883, 1332,
	2776, 1086, 2011, 2071, 1896, 1709, 2464, 258, 1257, 2202,
	3221, 2428, 2605, 1082, 2057, 257, 3271, 1091, 1877, 2335,
	2352, 2333, 3396, 1280, 1586, 2657, 1565, 2189, 784, 2906,
	788, 1531, 789, 1318, 2584, 4360, 684, 2467, 2937, 2723,
	1847, 2614, 670, 1178, 2656, 1886, 692, 1199, 1893, 2517,
	2551, 2445, 1799, 1722, 2595, 183, 1661, 1723, 2334, 2336,
	793, 1648, 1213, 184, 1268, 1195, 735, 174, 747, 2215,
	1556, 1468, 2086, 2188, 4516, 2357, 1067, 855, 1989, 1986,
	687, 1201, 796, 1563, 44, 43, 793, 41, 1176, 32,
	30, 695, 28, 925, 1728, 3065, 1708, 1479, 3633, 945,
	3634, 4658, 710, 3061, 836, 2604, 2002, 4648, 796, 2002,
	2002, 3451, 2002, 3173, 856, 4633, 2002, 4632, 1033, 2604,
	4622, 2604, 1736, 1737, 2163, 3442, 4604, 2002, 4602, 877,
	4160, 4547, 4160, 4504, 4497, 2163, 4495, 4505, 2604, 1033,
	2604, 73, 4492, 859, 858, 1767, 4493, 1327, 3244, 4489,
	4459, 3441, 1739, 4490, 2163, 1327, 4458, 4457, 74, 1089,
	2163, 2023, 4452, 4451, 4442, 4440, 2023, 2023, 4160, 4160,
	3243, 2660, 4437, 2237, 78, 1193, 4222, 1034, 4410, 4384,
	4377, 3623, 4160, 2664, 2604, 1736, 1737, 1738, 4376, 4371,
	4370, 4364, 2604, 4160, 4160, 2163, 4330, 1758, 4283, 4265,
	4010, 4262, 2664, 3834, 3451, 2163, 1755, 2163, 1767, 4259,
	1736, 1737, 2163, 4160, 87, 1739, 1179, 1179, 4212, 4176,
	4175, 4167, 4213, 2163, 2163, 2163, 3229, 4166, 4159, 3029,
	1014, 4160, 4160, 1767, 2604, 4130, 2684, 4104, 1013, 2163,
	1739, 2664, 4082, 4071, 3994, 1211, 2023, 3451, 2604, 3979,
	1738, 3867, 3815, 2604, 860, 2664, 3468, 3809, 3770, 3643,
	3861, 3468, 3771, 3644, 3074, 3641, 1654, 3626, 107, 3642,
	3075, 2604, 4385, 93, 104, 1738, 1023, 1228, 4287, 2805,
	1028, 1761, 1762, 1763, 1764, 3543, 3539, 4278, 3467, 2163,
	2604, 1744, 3468, 3458, 3170, 3165, 2597, 3459, 2604, 2604,
	3126, 3127, 3164, 3144, 3145, 3146, 2604, 2020, 3117, 1235,
	3115, 3107, 3118, 1180, 3116, 3108, 3105, 2683, 4266, 3076,
	2604, 1736, 1737, 2604, 2951, 2923, 2922, 2470, 2023, 2225,
	2225, 94, 2707, 1182, 4222, 1183, 2604, 1766, 1768, 3126,
	3127, 2663, 2654, 2648, 1767, 2664, 2604, 2163, 2603, 2224,
	2023, 1739, 2604, 2225, 1744, 229, 3623, 2604, 1229, 2596,
	4051, 4010, 3980, 1753, 1754, 3834, 3459, 2800, 2722, 3126,
	3127, 2036, 3144, 3145, 3146, 3141, 1736, 1737, 3064, 1744,
	2001, 2017, 2020, 2877, 2162, 2819, 1738, 2720, 1872, 1467,
	3720, 1208, 3515, 3126, 3127, 2091, 1759, 3491, 1894, 2137,
	1766, 1768, 231, 3443, 2641, 1631, 1739, 2640, 2639, 2638,
	2637, 1184, 1181, 1022, 3141, 2471, 1021, 1020, 1019, 1018,
	1017, 1016, 3444, 4480, 1012, 1766, 1768, 1011, 1010, 1009,
	1736, 1737, 1008, 1007, 229, 1006, 1005, 1088, 2991, 4460,
	1004, 1738, 1003, 1002, 3141, 1001, 1481, 1000, 1736, 1737,
	999, 230, 998, 1767, 997, 229, 996, 923, 2003, 1759,
	1739, 2003, 2003, 223, 2003, 922, 921, 920, 2003, 3132,
	919, 1767, 224, 918, 97, 917, 916, 915, 1739, 2003,
	914, 231, 913, 912, 1759, 911, 910, 909, 908, 1093,
	1744, 907, 906, 905, 185, 1738, 2472, 3920, 2469, 904,
	903, 902, 231, 901, 2000, 1758, 900, 899, 3132, 898,
	897, 896, 895, 1738, 1755, 894, 893, 892, 891, 1765,
	890, 880, 3879, 1758, 3441, 879, 182, 100, 1065, 103,
	230, 875, 1755, 874, 868, 867, 1766, 1768, 3132, 1595,
	1760, 854, 853, 3126, 3127, 1744, 810, 1229, 809, 808,
	807, 230, 799, 229, 798, 797, 768, 759, 1294, 1091,
	758, 861, 3132, 223, 757, 741, 148, 3664, 3524, 2020,
	253, 252, 224, 185, 3142, 1581, 1472, 251, 3148, 250,
	249, 248, 1091, 247, 246, 245, 1091, 244, 243, 1761,
	1762, 1763, 1764, 242, 185, 1759, 241, 4439, 240, 1744,
	231, 3147, 1352, 1760, 239, 238, 1352, 1761, 1762, 1763,
	1764, 1294, 237, 3142, 236, 235, 234, 1744, 233, 3126,
	3127, 232, 3637, 3469, 2500, 3217, 150, 2694, 1760, 3087,
	2001, 2020, 1091, 2017, 1091, 1331, 1091, 2683, 3070, 1336,
	4065, 186, 1294, 3142, 2474, 1766, 1768, 2974, 2328, 230,
	2858, 2668, 1301, 1322, 2646, 2631, 3168, 2486, 2065, 2022,
	1920, 223, 2484, 1766, 1768, 1825, 2891, 3142, 1294, 1207,
	224, 1753, 1754, 1456, 1897, 1475, 1756, 1752, 1472, 1749,
	1747, 1748, 1740, 1741, 1742, 1743, 1745, 1746, 1294, 1753,
	1754, 1855, 857, 1294, 3169, 2596, 1338, 1735, 1854, 1855,
	1215, 1091, 4345, 1091, 1759, 229, 1854, 1294, 1229, 4275,
	4290, 1451, 3132, 1091, 4118, 1091, 4269, 4267, 3143, 1481,
	1858, 2232, 1759, 1446, 4154, 1478, 4072, 1485, 1853, 1491,
	1262, 1265, 4050, 3929, 1471, 1537, 1540, 3902, 3901, 1760,
	3895, 1279, 1749, 1747, 1748, 1740, 1741, 1742, 1743, 1745,
	1746, 1275, 231, 3894, 1316, 1481, 1816, 3143, 2468, 3893,
	1209, 1294, 1459, 3886, 3885, 1345, 1493, 1438, 1443, 1748,
	1740, 1741, 1742, 1743, 1745, 1746, 793, 3883, 3878, 1091,
	1823, 1566, 1091, 3875, 2677, 1487, 1480, 3143, 3132, 1444,
	1599, 1543, 1455, 1279, 1579, 3874, 1584, 3775, 796, 3769,
	2909, 230, 3668, 3667, 3666, 2231, 1593, 3647, 1598, 3614,
	1656, 3143, 3613, 223, 3612, 1311, 3535, 3142, 1526, 1585,
	3531, 1470, 224, 1469, 3212, 3161, 3152, 1765, 2761, 3125,
	3122, 93, 174, 174, 3121, 3119, 3114, 3113, 3112, 1600,
	1818, 4067, 1568, 1570, 185, 1765, 3109, 3106, 1760, 1034,
	3138, 3139, 3140, 3086, 3069, 1279, 1279, 3137, 3135, 3136,
	3128, 3129, 3130, 3131, 3133, 3134, 1760, 3062, 2924, 2632,
	1655, 2457, 1735, 1816, 1091, 1091, 1091, 1091, 1091, 1091,
	1091, 1740, 1741, 1742, 1743, 1745, 1746, 1322, 1302, 3718,
	1322, 2205, 1192, 3142, 1734, 4652, 3137, 3135, 3136, 3128,
	3129, 3130, 3131, 3133, 3134, 1091, 4596, 1817, 2893, 1815,
	4595, 1091, 2170, 2168, 3776, 1670, 3126, 3127, 1559, 3138,
	3139, 3140, 4561, 4514, 4512, 1217, 3137, 3135, 3136, 3128,
	3129, 3130, 3131, 3133, 3134, 3561, 1740, 1741, 1742, 1743,
	1745, 1746, 1713, 4402, 3126, 3127, 4337, 4326, 4323, 3166,
	3137, 3135, 3136, 3128, 3129, 3130, 3131, 3133, 3134, 4322,
	4321, 3143, 2666, 4302, 4289, 73, 1481, 4288, 4263, 1580,
	1036, 3126, 3127, 4247, 1707, 4246, 2434, 1492, 229, 4232,
	4229, 1594, 74, 4228, 1756, 1752, 4223, 1749, 1747, 1748,
	1740, 1741, 1742, 1743, 1745, 1746, 1486, 4172, 78, 3235,
	4150, 4116, 1756, 1752, 229, 1749, 1747, 1748, 1740, 1741,
	1742, 1743, 1745, 1746, 229, 1805, 1091, 1091, 1091, 4099,
	1605, 4098, 1091, 4079, 4078, 231, 2440, 4036, 4011, 1213,
	3919, 1213, 1622, 3900, 3835, 3829, 3826, 3143, 87, 3776,
	3706, 3705, 3691, 3690, 3688, 1657, 1352, 3629, 3617, 3526,
	1874, 231, 1803, 3470, 3452, 1091, 3418, 3353, 787, 1923,
	3315, 231, 3284, 3237, 1957, 787, 1034, 3091, 1294, 3090,
	1936, 3085, 3053, 2870, 230, 1861, 1860, 1984, 860, 1859,
	1856, 4066, 1710, 1988, 1848, 3132, 223, 1846, 1718, 1717,
	1883, 2675, 107, 1014, 2674, 224, 2643, 93, 104, 2892,
	230, 1013, 3136, 3128, 3129, 3130, 3131, 3133, 3134, 1712,
	230, 229, 223, 3132, 2636, 229, 2602, 185, 1714, 2482,
	1919, 224, 223, 1931, 148, 1911, 1731, 1732, 1875, 1857,
	1870, 224, 1869, 1868, 1294, 1867, 1866, 1865, 1864, 1863,
	3132, 1091, 1862, 185, 1904, 1294, 1843, 1880, 1881, 3209,
	1842, 1841, 1840, 185, 1839, 94, 1928, 1838, 231, 1837,
	1836, 1992, 231, 1091, 1835, 1736, 1737, 1924, 1834, 1352,
	1179, 1833, 1849, 1850, 1736, 1737, 174, 3135, 3136, 3128,
	3129, 3130, 3131, 3133, 3134, 2081, 1832, 1831, 1557, 1830,
	3142, 1829, 1034, 1818, 2054, 1739, 1804, 1802, 1797, 2233,
	1310, 1233, 4291, 2499, 1739, 229, 1905, 230, 1224, 2029,
	4039, 230, 1211, 793, 1211, 3925, 2063, 3871, 1322, 223,
	793, 3663, 1926, 223, 229, 229, 3640, 1992, 224, 229,
	1738, 3632, 224, 3073, 1927, 796, 2485, 1455, 1992, 1738,
	2634, 2483, 796, 4134, 2028, 1895, 3927, 3662, 1902, 1562,
	185, 1817, 231, 3233, 2908, 1800, 1932, 2056, 229, 3126,
	3127, 4593, 3982, 1980, 3447, 1915, 1873, 1335, 4270, 4268,
	2005, 231, 231, 4585, 2159, 2798, 231, 4324, 2662, 2056,
	1899, 2056, 4224, 3318, 1455, 1897, 4215, 1914, 1913, 4214,
	1912, 2134, 1910, 1909, 4070, 1908, 1294, 1294, 97, 1333,
	4013, 230, 4153, 4012, 3981, 231, 1352, 3922, 3838, 3837,
	1937, 3836, 3635, 223, 3454, 3453, 1327, 4220, 3779, 2031,
	230, 230, 224, 1855, 3513, 230, 1334, 229, 1327, 1705,
	1854, 2781, 223, 223, 3143, 3730, 3347, 223, 1621, 1838,
	1838, 224, 224, 1744, 185, 3111, 224, 3110, 3035, 2763,
	182, 100, 1330, 103, 230, 1824, 3703, 994, 1208, 3401,
	1208, 3400, 3463, 185, 185, 3286, 223, 2119, 185, 2124,
	2027, 1327, 2129, 1827, 231, 224, 2091, 229, 2155, 2160,
	1630, 1671, 4526, 2025, 2254, 861, 2230, 4211, 4500, 4485,
	148, 4472, 3385, 2034, 2948, 1631, 2150, 185, 3173, 3783,
	1294, 995, 1294, 3766, 1294, 3732, 2059, 2049, 3727, 229,
	2042, 3711, 3488, 3258, 4120, 3563, 2465, 2673, 4146, 3079,
	1294, 1294, 1871, 230, 231, 4481, 1851, 2816, 3392, 2199,
	1536, 1294, 1464, 2206, 1305, 223, 1261, 4494, 4491, 1042,
	2097, 3437, 4317, 1294, 224, 1294, 1294, 1294, 2813, 2811,
	150, 3683, 4054, 793, 4409, 4299, 231, 3953, 3289, 2152,
	3698, 2931, 2905, 849, 4544, 186, 185, 3377, 787, 2195,
	1191, 3507, 4545, 230, 1609, 796, 3128, 3129, 3130, 3131,
	3133, 3134, 2117, 4575, 2240, 223, 1561, 4193, 3262, 2253,
	3969, 3949, 4482, 1566, 224, 1566, 1503, 2200, 1470, 4647,
	1469, 2212, 2708, 2667, 992, 230, 3130, 3131, 3133, 3134,
	990, 4186, 988, 2726, 986, 1465, 185, 223, 983, 4178,
	4008, 2116, 4007, 3743, 2128, 2304, 224, 1562, 2724, 2235,
	2302, 3128, 3129, 3130, 3131, 3133, 3134, 3742, 3734, 2161,
	3726, 975, 1511, 3725, 3723, 3950, 2198, 3722, 185, 1032,
	3710, 2220, 2246, 3678, 2258, 1091, 3677, 1091, 3745, 3381,
	3380, 1034, 3228, 1034, 1091, 1669, 850, 1957, 1957, 1352,
	3234, 1091, 1091, 1091, 1091, 1091, 1091, 1091, 1091, 1091,
	1091, 1091, 1091, 1091, 1091, 1091, 1091, 1091, 1091, 1091,
	1091, 1091, 1091, 1091, 1091, 1091, 1091, 1091, 1091, 1091,
	1091, 1091, 1091, 1091, 1091, 1091, 2209, 1091, 2222, 1091,
	1091, 1091, 1091, 2181, 2180, 2241, 1559, 1335, 2217, 3084,
	2217, 2214, 2043, 793, 2218, 3744, 1652, 1512, 3083, 1668,
	3082, 1091, 2032, 4147, 1091, 1091, 1207, 1031, 1207, 3081,
	2345, 1311, 1091, 2739, 1136, 796, 1091, 3039, 1091, 1091,
	1335, 2332, 1084, 2226, 1607, 2227, 1352, 2822, 3264, 2470,
	2821, 2513, 1091, 1091, 1091, 1091, 2280, 1091, 1091, 1091,
	1091, 1091, 1091, 1091, 1091, 2245, 1334, 2818, 3317, 2807,
	2796, 2343, 2795, 4576, 2262, 3286, 2263, 2791, 2790, 2789,
	2512, 3345, 2426, 1091, 1091, 1091, 1091, 1091, 1091, 1091,
	1091, 1091, 2446, 2447, 2768, 2767, 1091, 2730, 2655, 1334,
	2048, 2047, 2415, 2230, 2056, 2058, 2446, 2462, 1213, 2088,
	2298, 2424, 3686, 1951, 1711, 1352, 1651, 1209, 1667, 1209,
	1746, 2726, 2369, 2370, 1213, 2373, 1742, 1743, 1745, 1746,
	2341, 2356, 2508, 2902, 3945, 1033, 2724, 2471, 2264, 3946,
	1091, 1352, 2084, 1602, 2321, 2343, 2742, 4580, 2311, 1507,
	1328, 2554, 2554, 2568, 1561, 2446, 1247, 2007, 2588, 2590,
	2009, 2179, 2331, 2330, 2594, 2344, 2014, 2337, 2329, 1466,
	2016, 2089, 2090, 980, 1014, 2019, 4097, 1014, 1014, 2461,
	2765, 1328, 2360, 2318, 1034, 2361, 2362, 1549, 2785, 1548,
	3948, 3489, 3934, 1034, 2619, 2326, 1547, 1034, 1546, 2250,
	1520, 2085, 2715, 2122, 2341, 2430, 3951, 2954, 2644, 1623,
	2778, 2779, 2465, 766, 3134, 1525, 1736, 1737, 2472, 2510,
	2469, 2611, 2051, 3983, 2511, 1317, 2270, 2514, 2647, 2515,
	2516, 2430, 2778, 2779, 2778, 2779, 3346, 1904, 1652, 1767,
	970, 2442, 4581, 1680, 1294, 1294, 1739, 852, 851, 1915,
	4310, 2420, 2320, 3933, 2753, 1179, 4544, 682, 3027, 2459,
	2308, 1603, 2267, 3012, 1027, 2633, 1324, 4606, 2261, 2421,
	2342, 3694, 1704, 1619, 2422, 2752, 1716, 2219, 2427, 2815,
	3497, 1738, 2339, 677, 4478, 1034, 1352, 3496, 2618, 2610,
	2623, 1211, 2438, 2629, 2630, 2988, 1309, 1324, 1649, 2436,
	2474, 2550, 174, 2697, 2563, 888, 2592, 1211, 2579, 2703,
	1030, 2814, 2661, 2994, 2669, 3261, 4006, 1631, 1631, 1684,
	1957, 764, 2616, 2617, 2612, 2600, 2601, 3965, 2711, 3707,
	1322, 3947, 2812, 2810, 2271, 2053, 3752, 3724, 1651, 1279,
	3552, 1902, 2741, 2340, 2342, 1329, 3721, 2713, 2658, 1663,
	1857, 4583, 2072, 1328, 2696, 3379, 971, 2073, 1352, 2729,
	1650, 3343, 2729, 1885, 4589, 4609, 2474, 2817, 1666, 3954,
	4312, 2788, 1294, 2052, 3126, 3127, 1329, 3144, 3145, 3146,
	1220, 2714, 2766, 2676, 4556, 1744, 3026, 1279, 1091, 1091,
	3753, 1091, 1288, 2699, 1608, 2731, 2680, 1849, 1850, 2760,
	984, 2712, 1325, 2688, 1532, 4564, 984, 2691, 984, 2692,
	985, 1326, 2682, 787, 984, 1294, 2679, 2340, 2706, 2874,
	2303, 2997, 1218, 1279, 1279, 2301, 2728, 2705, 2167, 2166,
	3751, 1766, 1768, 1325, 2698, 2700, 4096, 1208, 2786, 2099,
	2764, 2804, 1326, 2317, 1889, 1461, 1294, 2770, 2091, 3141,
	3019, 3020, 1530, 1208, 4563, 4479, 2653, 2423, 1294, 2709,
	1294, 2808, 2103, 2889, 847, 1222, 846, 2425, 2756, 1324,
	2074, 2916, 4533, 3853, 3852, 1294, 1496, 3435, 3334, 2859,
	2468, 2769, 2862, 2740, 2864, 2771, 2945, 2078, 2474, 3434,
	1759, 1892, 3549, 4636, 2787, 2780, 2782, 2783, 2784, 2570,
	2853, 2734, 1533, 2744, 2747, 2855, 1887, 2975, 1992, 2976,
	2955, 2956, 2319, 2412, 2002, 1444, 1091, 3708, 1506, 2100,
	2727, 2962, 2963, 2964, 1890, 1246, 3963, 1574, 2907, 765,
	1221, 2907, 3335, 1509, 2135, 4391, 3050, 4582, 793, 1566,
	2949, 1587, 1455, 3132, 2794, 972, 4138, 2725, 1329, 3273,
	1050, 2799, 2996, 4477, 4446, 3434, 4447, 2793, 2075, 2080,
	796, 2147, 2792, 1681, 3326, 3048, 4318, 1888, 793, 1091,
	3263, 4332, 3333, 3550, 2930, 1091, 1091, 767, 3695, 1327,
	1532, 763, 2993, 1470, 3356, 2856, 2952, 800, 174, 4381,
	796, 2957, 1678, 2958, 2269, 1613, 2972, 3188, 2920, 2885,
	731, 2327, 2868, 881, 2918, 1325, 3147, 2985, 2878, 2971,
	1327, 2879, 1231, 4587, 1326, 2146, 1951, 1951, 3327, 2123,
	2969, 2980, 678, 2982, 2104, 2984, 869, 4311, 4028, 1604,
	1091, 1091, 4532, 2979, 1760, 2981, 1091, 2983, 2911, 1844,
	2849, 2076, 2921, 2999, 3760, 3001, 2932, 3041, 3142, 1091,
	1091, 4093, 3231, 3758, 2950, 1091, 1091, 2992, 3325, 981,
	3002, 1091, 2919, 3004, 2135, 2082, 2900, 2060, 2061, 1885,
	1091, 1091, 1091, 2429, 3301, 889, 1091, 1455, 3964, 1891,
	2410, 2995, 3849, 2413, 973, 1279, 1091, 2082, 3072, 2111,
	2105, 2106, 2977, 4555, 2850, 2978, 4109, 3305, 679, 1682,
	4429, 4420, 2072, 1091, 3991, 3045, 700, 2073, 2456, 1796,
	3042, 1679, 2266, 3007, 2101, 1207, 4588, 2135, 2260, 2094,
	3018, 2474, 1618, 1620, 1455, 1715, 1455, 3089, 3046, 2437,
	3300, 1207, 3051, 2409, 2848, 2615, 974, 3267, 4610, 3067,
	3068, 3009, 3008, 2112, 3071, 1308, 680, 3307, 681, 4590,
	1889, 3274, 2138, 2356, 2726, 2102, 2628, 2145, 3028, 3013,
	2072, 1033, 3565, 2114, 3761, 2073, 3063, 2131, 4597, 2745,
	4038, 3843, 4379, 2095, 1747, 1748, 1740, 1741, 1742, 1743,
	1745, 1746, 1327, 2110, 3659, 1236, 4092, 1683, 3854, 3187,
	1219, 2130, 3143, 1091, 1091, 1091, 3509, 1892, 3010, 1889,
	1636, 4339, 1091, 1091, 1091, 4476, 1209, 1091, 4543, 4541,
	3306, 4380, 1887, 2093, 3040, 4358, 1034, 1091, 1213, 1352,
	2074, 4507, 1209, 1091, 2126, 1091, 3180, 3181, 4531, 2091,
	1890, 4508, 801, 802, 1213, 4231, 3797, 2078, 2120, 3422,
	4043, 4029, 2187, 1882, 1234, 4637, 1892, 1227, 882, 883,
	669, 3774, 1352, 2089, 2090, 1726, 3850, 1725, 3898, 4044,
	3078, 2613, 2359, 2077, 1213, 2092, 2003, 1352, 2044, 2107,
	2139, 870, 871, 1888, 4615, 3163, 4169, 3222, 2074, 1890,
	4168, 2115, 4240, 2127, 4298, 1957, 3968, 3227, 3202, 1352,
	3798, 3182, 3738, 3967, 3760, 2078, 3682, 3603, 3280, 3423,
	2689, 3414, 3276, 3758, 1294, 1294, 2693, 2890, 2075, 2080,
	3241, 3047, 2884, 2872, 2213, 2207, 2201, 2193, 2411, 2173,
	2704, 3049, 4094, 3215, 3138, 3139, 3140, 1091, 3759, 4340,
	3674, 3137, 3135, 3136, 3128, 3129, 3130, 3131, 3133, 3134,
	2349, 1091, 3548, 1500, 1025, 2108, 970, 3190, 1238, 3618,
	4396, 1294, 2081, 3192, 3510, 740, 1957, 2772, 1725, 1724,
	2729, 4361, 2309, 3216, 2037, 3800, 2075, 2080, 4059, 3211,
	1027, 1720, 804, 803, 1091, 3268, 3269, 2869, 3191, 1951,
	3259, 3855, 1249, 3200, 4209, 1891, 2081, 4207, 1294, 3203,
	3204, 2076, 4149, 3208, 3265, 3220, 3290, 1992, 1992, 3294,
	3292, 1211, 2041, 1322, 3288, 3174, 3158, 3159, 3160, 3201,
	1294, 3287, 1294, 2251, 3761, 3189, 1026, 1211, 3631, 3252,
	3291, 3185, 1796, 3296, 1726, 3033, 3298, 3206, 1352, 3207,
	2134, 805, 806, 3311, 1891, 884, 885, 2082, 2134, 1294,
	1725, 3011, 1653, 1294, 1992, 3238, 3239, 1211, 3240, 2076,
	3232, 3224, 3225, 3226, 3899, 3348, 3277, 2746, 872, 873,
	1724, 3184, 971, 3359, 3856, 3361, 1294, 4041, 3365, 4506,
	3312, 3313, 3371, 1294, 3314, 1294, 2350, 2039, 4614, 1352,
	1606, 1992, 970, 2142, 3604, 3342, 787, 3309, 3253, 3249,
	3320, 2070, 3966, 3605, 2113, 2082, 2652, 1294, 2651, 2650,
	1455, 1455, 3756, 1992, 3260, 1992, 1027, 3354, 2649, 1294,
	3765, 1031, 3653, 769, 3350, 3351, 3266, 2040, 3352, 3338,
	2123, 3281, 3397, 4341, 3675, 1726, 1213, 3310, 2773, 2774,
	3430, 2606, 1992, 2876, 4157, 3344, 1992, 2140, 1637, 3196,
	1541, 3406, 1724, 4305, 3308, 2068, 3413, 1208, 2121, 4204,
	4020, 1294, 1294, 3316, 1542, 3383, 2750, 3386, 3428, 1555,
	2945, 1553, 3689, 1208, 887, 2609, 3654, 3329, 3324, 2945,
	3388, 1455, 3330, 3322, 1294, 3332, 3331, 2141, 3759, 1927,
	3355, 3421, 3464, 2211, 3349, 2069, 4552, 3439, 2118, 4076,
	3450, 2622, 3655, 1208, 3652, 3336, 2198, 4336, 971, 3368,
	3374, 3378, 3223, 4136, 2953, 2854, 2608, 2852, 2239, 1612,
	3357, 2607, 3905, 2077, 1352, 3679, 4399, 1352, 4406, 2122,
	4306, 4144, 4393, 3620, 3366, 2481, 1700, 3490, 3372, 4424,
	1702, 774, 2313, 2770, 3197, 3390, 3382, 4158, 2228, 4257,
	739, 793, 3429, 4554, 1699, 1697, 1675, 1673, 3409, 3424,
	1091, 972, 3431, 3410, 1288, 2242, 1091, 1091, 4496, 4075,
	1091, 1091, 1091, 796, 1091, 2244, 4145, 3411, 1954, 4325,
	1647, 2077, 3483, 1091, 1957, 3156, 1945, 2252, 4115, 2255,
	2256, 2257, 1091, 3466, 3195, 1091, 174, 174, 3462, 3436,
	1034, 1352, 4249, 3438, 1645, 3482, 3448, 3449, 3445, 778,
	1091, 1279, 3897, 4400, 3460, 4250, 3502, 4307, 1352, 1211,
	1643, 1641, 1639, 1633, 1628, 733, 3199, 1626, 1957, 1957,
	1091, 1091, 3503, 1091, 1091, 1091, 1551, 3764, 3155, 3525,
	3486, 3485, 3493, 3500, 3494, 3242, 3495, 3120, 4251, 776,
	3052, 1091, 3506, 2300, 2873, 1091, 3511, 1957, 1957, 1091,
	1091, 1091, 1091, 1091, 1091, 1091, 1091, 1091, 1091, 1091,
	1091, 1091, 1091, 1091, 1091, 1091, 1091, 1091, 3484, 1091,
	3577, 3499, 3578, 2806, 2762, 3680, 1091, 1091, 1957, 2678,
	3528, 3508, 2322, 1091, 1922, 3537, 3538, 972, 1024, 3656,
	973, 2480, 1918, 1703, 1091, 1590, 3505, 1554, 781, 1552,
	4253, 3481, 886, 1455, 3504, 1213, 1213, 1720, 2990, 1091,
	3474, 2989, 2315, 2960, 1701, 2338, 2314, 1662, 3358, 2275,
	2192, 2172, 3198, 4252, 4471, 1207, 3992, 3533, 1698, 1696,
	1674, 1672, 1985, 1828, 1601, 1524, 3729, 3544, 1352, 3728,
	4254, 1207, 974, 3993, 3978, 3649, 4392, 4057, 3560, 3998,
	3938, 3615, 3796, 3567, 1646, 1208, 3555, 3551, 3553, 3554,
	3657, 3658, 3636, 3427, 3545, 982, 3787, 3741, 4529, 3701,
	771, 1207, 3481, 3699, 3669, 3670, 3671, 4052, 1644, 3574,
	3681, 3474, 3582, 2369, 3568, 1091, 3580, 3417, 3575, 1930,
	3412, 3607, 3576, 3402, 1642, 1640, 1638, 1632, 1627, 2903,
	775, 1625, 2895, 2888, 2880, 1091, 3476, 2866, 2851, 2695,
	1550, 2690, 2369, 3583, 2171, 2169, 1209, 3608, 3627, 3628,
	3622, 3475, 2151, 2299, 2136, 2109, 973, 2096, 2083, 2024,
	174, 2021, 1209, 2018, 732, 2015, 1091, 1091, 2010, 2008,
	3616, 3624, 3625, 3611, 1951, 2004, 1995, 779, 4520, 1188,
	1729, 4043, 3369, 773, 4545, 3031, 2353, 2145, 2045, 2325,
	3005, 3003, 1209, 4434, 3638, 4081, 4074, 3639, 4073, 4005,
	4044, 3930, 2946, 2064, 1091, 1189, 1505, 3476, 974, 2726,
	4242, 2726, 2751, 3248, 4235, 3808, 3250, 3251, 1211, 1211,
	2091, 3254, 3475, 3255, 2724, 3256, 2748, 2265, 1294, 770,
	1270, 1294, 1694, 1695, 3712, 2323, 2295, 2210, 3665, 3472,
	2294, 1269, 4433, 727, 2272, 1951, 3970, 4000, 1957, 987,
	989, 991, 1624, 4277, 3906, 1808, 2754, 777, 3884, 1813,
	3717, 3719, 1736, 1737, 1736, 1737, 3303, 3685, 2755, 2775,
	3731, 734, 3733, 3716, 1733, 3739, 1303, 1237, 4548, 1294,
	3032, 2324, 772, 683, 4539, 1091, 3704, 254, 2755, 3737,
	1730, 4501, 1739, 1213, 1091, 2865, 3810, 3709, 2881, 3784,
	3370, 2297, 2194, 1314, 1294, 1294, 1294, 2813, 2811, 3817,
	4255, 3736, 2770, 3801, 2820, 1190, 4256, 780, 2702, 1288,
	2803, 1294, 1270, 2916, 1992, 2571, 1270, 1738, 3780, 1738,
	2759, 837, 3763, 2802, 666, 2801, 1294, 2757, 694, 3805,
	4155, 4386, 1352, 2758, 4352, 4346, 4304, 4226, 3802, 4202,
	2945, 4137, 3821, 3477, 3478, 3479, 3480, 3794, 3754, 3789,
	3786, 3762, 3773, 1207, 1208, 1208, 1352, 3646, 3781, 1091,
	1091, 3785, 3416, 2910, 2593, 1091, 1091, 1957, 2030, 3804,
	1091, 1091, 1938, 1091, 4584, 3833, 3230, 1091, 4613, 3126,
	3127, 1736, 1737, 2718, 2719, 1279, 2716, 2717, 1091, 3788,
	4426, 1954, 1954, 4426, 1472, 4427, 4348, 3803, 4427, 1945,
	1945, 3750, 3876, 3281, 1091, 3806, 3748, 3811, 3841, 3812,
	2476, 3661, 3767, 3816, 3477, 3478, 3479, 3480, 4558, 3842,
	3822, 3823, 3839, 3824, 2718, 3828, 2716, 3857, 3831, 2509,
	3830, 1677, 3827, 1611, 1676, 3858, 2847, 3790, 2198, 1610,
	3793, 3870, 4227, 4187, 1209, 4002, 3997, 3996, 3872, 3840,
	3660, 3556, 3363, 3360, 1822, 1821, 4599, 4565, 3851, 4390,
	4389, 4388, 4292, 4205, 1213, 4182, 1211, 1099, 4135, 4132,
	3846, 4031, 1213, 3866, 4017, 3926, 1352, 3832, 1352, 3814,
	3768, 3911, 3697, 3692, 3420, 1213, 3419, 3297, 3247, 2987,
	2968, 2967, 2966, 2965, 2894, 2867, 1294, 1294, 2749, 2686,
	2681, 2671, 2670, 2659, 2441, 1352, 2316, 2296, 2293, 2292,
	2291, 2290, 2289, 261, 261, 261, 2208, 672, 673, 2182,
	688, 672, 688, 698, 2178, 2177, 738, 2176, 2175, 1213,
	756, 1213, 2174, 1998, 1997, 762, 1996, 1994, 3896, 2961,
	1929, 1693, 261, 3962, 3215, 1692, 1634, 1519, 1518, 3931,
	3932, 1294, 1517, 1951, 1516, 3914, 1515, 3973, 3974, 3961,
	1514, 1352, 866, 1294, 1513, 1508, 1294, 1504, 261, 1502,
	1501, 3971, 1458, 1343, 1342, 1352, 1341, 3907, 1340, 1339,
	3910, 3908, 3909, 1350, 1307, 3912, 1306, 1449, 3958, 3913,
	3958, 3921, 3935, 1256, 3918, 3917, 3972, 1951, 1951, 1255,
	1254, 174, 1253, 1252, 1251, 1294, 1294, 1250, 1248, 1243,
	1242, 3903, 1208, 4001, 1241, 4003, 1240, 1239, 1171, 2035,
	993, 979, 4309, 3952, 3937, 1294, 1951, 1951, 2312, 1686,
	92, 1510, 1207, 1207, 823, 86, 2143, 1352, 3696, 950,
	4423, 1494, 1294, 4021, 1992, 4331, 831, 1211, 4018, 4408,
	4004, 3782, 3299, 2823, 3995, 1211, 1992, 1951, 2274, 1992,
	1635, 2276, 3210, 2635, 4378, 3880, 3088, 1213, 1211, 4015,
	4284, 4049, 4108, 2479, 1826, 3990, 4060, 1294, 1294, 1294,
	3167, 4080, 88, 1075, 1121, 4027, 4026, 3939, 4016, 4009,
	1352, 672, 672, 3684, 2935, 4077, 4024, 4014, 4023, 261,
	1942, 1944, 1091, 1091, 1091, 1041, 4030, 1355, 4445, 2046,
	1081, 4061, 1211, 2062, 1211, 2055, 4055, 2672, 1992, 4047,
	1352, 4037, 4022, 1209, 1209, 1091, 3958, 2553, 1091, 1091,
	1098, 1095, 4064, 4046, 1946, 3976, 1948, 1097, 1091, 4062,
	1096, 1957, 4068, 3987, 1947, 1845, 1091, 1091, 3985, 4069,
	1094, 3988, 2198, 1941, 1954, 3792, 2914, 3446, 1560, 1558,
	4086, 1352, 1945, 1294, 3672, 952, 2050, 4084, 3673, 2435,
	1279, 4100, 4083, 2463, 3077, 1819, 1056, 3245, 3246, 4095,
	4088, 1077, 2460, 1352, 1232, 1066, 1055, 3193, 3172, 3433,
	3645, 1091, 2348, 1208, 841, 3123, 2466, 1223, 3015, 2576,
	1091, 1208, 2569, 2565, 3257, 2904, 4089, 4048, 1091, 3700,
	1957, 3702, 4105, 1706, 1208, 4122, 1798, 2915, 1337, 1091,
	1059, 4111, 1091, 2433, 3275, 1810, 3057, 2358, 3440, 3213,
	2665, 4430, 3564, 2186, 1091, 4140, 1187, 4128, 4129, 1186,
	1230, 1352, 4165, 1185, 4414, 4411, 2133, 4117, 1294, 3825,
	1211, 3395, 2038, 1294, 1294, 2710, 1788, 3403, 1208, 1071,
	1208, 3323, 1454, 3178, 3465, 1521, 761, 4141, 4131, 4162,
	1083, 1787, 2844, 4148, 2843, 4181, 3740, 4301, 2571, 2571,
	263, 4139, 1323, 3337, 1321, 3339, 1320, 1319, 4572, 4635,
	1207, 3693, 228, 3025, 4217, 1727, 1719, 1951, 1352, 225,
	227, 1294, 226, 4208, 4032, 3650, 3219, 4499, 3397, 3714,
	3387, 4192, 3367, 23, 22, 4183, 3373, 21, 4241, 1213,
	1213, 112, 42, 20, 128, 4189, 4179, 147, 146, 4225,
	120, 145, 144, 4198, 143, 4236, 4200, 4197, 142, 1091,
	1091, 1992, 4206, 149, 141, 140, 135, 4260, 4261, 139,
	4184, 4201, 138, 4221, 137, 136, 1091, 1957, 4245, 4239,
	4216, 134, 132, 133, 127, 131, 130, 2439, 4264, 129,
	4237, 126, 125, 124, 123, 4171, 122, 4233, 3958, 3958,
	4238, 1209, 1808, 121, 119, 118, 117, 4244, 4243, 116,
	4258, 1091, 115, 114, 1091, 113, 1208, 4064, 752, 749,
	61, 1213, 60, 111, 110, 19, 40, 4273, 4274, 14,
	65, 66, 18, 1213, 13, 35, 91, 102, 101, 4297,
	36, 99, 2571, 2571, 2571, 98, 1951, 1921, 4196, 34,
	17, 16, 15, 4194, 96, 95, 2575, 33, 31, 11,
	9, 4320, 4272, 8, 37, 1906, 12, 4276, 4293, 5,
	179, 4296, 178, 2081, 181, 1091, 1091, 177, 180, 90,
	3958, 176, 175, 4282, 89, 1091, 4335, 1054, 4313, 29,
	1213, 1207, 3958, 1213, 10, 4314, 171, 1294, 4319, 1207,
	4218, 3778, 81, 173, 172, 170, 169, 1294, 1294, 168,
	4327, 82, 1207, 79, 167, 85, 166, 80, 4355, 4329,
	84, 4357, 1211, 1211, 1294, 83, 27, 6, 4343, 4344,
	64, 7, 4369, 4090, 4342, 3487, 105, 4347, 1091, 1091,
	4374, 4350, 4375, 1455, 106, 4354, 4349, 38, 1091, 3958,
	3375, 77, 3958, 4221, 76, 4333, 1207, 4365, 1207, 4366,
	4363, 75, 1225, 26, 63, 25, 4362, 212, 211, 210,
	2066, 4367, 4368, 209, 208, 207, 206, 205, 4373, 4353,
	200, 3407, 1209, 199, 1091, 1091, 204, 1091, 4372, 4401,
	1209, 4383, 202, 3415, 201, 1245, 203, 4405, 4387, 198,
	215, 214, 220, 1209, 1211, 219, 4382, 261, 218, 261,
	261, 4428, 1274, 261, 1284, 217, 1211, 4404, 4403, 4425,
	216, 213, 222, 197, 196, 1304, 4413, 4416, 195, 4432,
	4450, 193, 189, 188, 756, 3456, 3457, 192, 4418, 1279,
	1091, 1091, 1091, 4454, 4453, 194, 191, 1209, 190, 1209,
	187, 221, 4417, 72, 4435, 4421, 4422, 4448, 261, 164,
	261, 261, 1274, 165, 261, 261, 4441, 1284, 1208, 1208,
	1091, 4449, 71, 1211, 4484, 163, 1211, 162, 261, 161,
	1474, 160, 159, 4488, 4470, 4469, 4483, 4467, 4468, 158,
	157, 70, 24, 2, 1207, 1, 4502, 0, 0, 4436,
	0, 1498, 0, 0, 0, 4438, 0, 2164, 4486, 0,
	0, 0, 0, 4511, 0, 0, 4509, 4513, 4525, 0,
	1523, 0, 0, 1284, 1091, 0, 0, 261, 261, 4524,
	1274, 0, 0, 0, 4523, 4510, 0, 4530, 0, 1954,
	0, 4517, 4518, 0, 0, 0, 4519, 1945, 0, 756,
	1208, 261, 261, 0, 4546, 0, 0, 4521, 4522, 0,
	0, 0, 1208, 4527, 0, 4542, 4538, 4540, 0, 4550,
	4536, 4537, 0, 1213, 866, 1213, 4551, 4549, 4567, 2081,
	0, 4553, 0, 0, 0, 1209, 4568, 4562, 4557, 4573,
	0, 4579, 4335, 4566, 4570, 4413, 0, 4432, 4416, 4574,
	0, 4569, 0, 4571, 0, 4578, 0, 0, 4577, 0,
	1954, 0, 4592, 0, 0, 0, 0, 0, 1945, 1208,
	1951, 0, 1208, 0, 4591, 0, 0, 4594, 0, 0,
	0, 0, 3958, 4598, 3958, 0, 0, 0, 0, 0,
	4607, 0, 0, 4600, 0, 1091, 1091, 0, 261, 4601,
	4605, 0, 0, 0, 1091, 4603, 1091, 1091, 4611, 0,
	0, 0, 0, 4608, 4620, 4617, 4626, 261, 4623, 0,
	4629, 4631, 0, 4630, 4628, 4625, 0, 0, 0, 4627,
	0, 0, 0, 0, 0, 4638, 4624, 4639, 4634, 1951,
	0, 0, 4641, 0, 3749, 4643, 0, 4644, 2916, 0,
	4640, 0, 4646, 0, 0, 4649, 4173, 4174, 4642, 0,
	2571, 2571, 0, 1091, 4654, 0, 4656, 0, 0, 0,
	4657, 4650, 4659, 4660, 4618, 4619, 0, 4651, 4646, 0,
	0, 0, 0, 0, 4188, 4653, 4190, 0, 4191, 2575,
	0, 0, 0, 0, 0, 0, 1207, 1207, 0, 0,
	0, 0, 0, 0, 0, 0, 1211, 0, 1211, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3054, 3055,
	2372, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4655, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2571, 2571,
	2571, 2571, 2571, 2571, 2571, 2571, 2571, 2571, 2571, 2571,
	2571, 2571, 2571, 2571, 2571, 2571, 2571, 0, 2571, 2575,
	2575, 0, 0, 0, 0, 0, 3126, 3127, 1207, 3144,
	3145, 3146, 0, 0, 0, 0, 1951, 1209, 1209, 0,
	1207, 0, 0, 0, 0, 0, 0, 0, 3863, 0,
	0, 0, 1054, 0, 0, 0, 1054, 2477, 0, 0,
	1736, 1737, 0, 0, 0, 672, 1779, 1780, 1781, 0,
	0, 0, 1436, 0, 0, 0, 1436, 0, 0, 0,
	0, 0, 3746, 1767, 0, 0, 261, 0, 261, 0,
	1739, 0, 261, 0, 0, 0, 0, 1207, 0, 1785,
	1207, 3141, 1208, 0, 1208, 1474, 1274, 261, 0, 261,
	0, 0, 3149, 3150, 3151, 261, 1474, 688, 0, 1209,
	0, 0, 261, 1474, 0, 1738, 0, 4328, 1954, 0,
	0, 1209, 0, 0, 0, 1758, 1945, 1999, 0, 0,
	0, 0, 0, 0, 1755, 0, 0, 0, 0, 261,
	0, 0, 2645, 0, 0, 0, 261, 0, 3818, 3819,
	3820, 0, 0, 2575, 2575, 2575, 0, 0, 0, 0,
	0, 0, 1954, 1954, 0, 1288, 0, 0, 0, 0,
	1945, 1945, 0, 0, 0, 0, 0, 0, 1209, 0,
	0, 1209, 0, 0, 0, 3132, 756, 0, 0, 0,
	0, 1954, 1954, 0, 0, 0, 0, 0, 0, 1945,
	1945, 0, 0, 0, 0, 0, 3953, 0, 0, 1761,
	1762, 1763, 1764, 0, 3977, 0, 0, 0, 0, 1744,
	0, 0, 1954, 0, 0, 0, 3986, 0, 0, 3989,
	1945, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3949, 0, 0, 0, 3942, 0, 0, 0, 3147, 0,
	0, 0, 0, 0, 0, 0, 1776, 0, 0, 1786,
	0, 3940, 0, 0, 0, 1766, 1768, 0, 0, 0,
	3944, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2721, 4045, 0,
	3142, 1753, 1754, 0, 3950, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1774,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1759, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3943, 0, 0, 0,
	0, 0, 261, 0, 0, 261, 0, 4498, 0, 0,
	3923, 3924, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1207, 0, 1207, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 0,
	0, 0, 261, 0, 0, 0, 0, 0, 261, 0,
	0, 0, 0, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 0, 261, 0, 3143, 0, 672, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 1765, 0, 0,
	756, 0, 0, 0, 866, 0, 0, 0, 0, 1288,
	0, 1209, 1954, 1209, 0, 0, 0, 0, 1760, 0,
	1945, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 1274, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3945, 1777, 0, 756, 0, 3946, 0,
	0, 0, 0, 261, 0, 0, 1436, 0, 0, 0,
	2273, 4195, 0, 0, 0, 261, 261, 0, 261, 0,
	261, 0, 261, 0, 261, 0, 0, 0, 0, 0,
	0, 4085, 0, 4087, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2305, 0, 3948,
	2306, 0, 2307, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 3951, 3138, 3139, 3140, 0,
	3521, 3522, 0, 3137, 3135, 3136, 3128, 3129, 3130, 3131,
	3133, 3134, 0, 0, 0, 0, 0, 0, 0, 738,
	0, 1954, 0, 756, 0, 1775, 0, 0, 0, 1945,
	0, 0, 0, 1778, 1756, 1752, 0, 1749, 1747, 1748,
	1740, 1741, 1742, 1743, 1745, 1746, 0, 4133, 0, 0,
	0, 2575, 2575, 1054, 0, 0, 0, 0, 0, 1436,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3584, 3585,
	3586, 3587, 3588, 3589, 3590, 3591, 3592, 3593, 3594, 3595,
	3596, 3597, 3598, 3599, 3600, 3601, 3602, 0, 3606, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3947, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4199, 0, 2575,
	2575, 2575, 2575, 2575, 2575, 2575, 2575, 2575, 2575, 2575,
	2575, 2575, 2575, 2575, 2575, 2575, 2575, 2575, 3954, 2575,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	672, 0, 0, 0, 0, 0, 0, 2571, 0, 0,
	0, 0, 0, 0, 0, 261, 1436, 0, 0, 0,
	0, 0, 0, 0, 672, 0, 0, 0, 0, 0,
	0, 261, 0, 672, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 0, 0,
	0, 0, 73, 0, 0, 0, 0, 0, 0, 0,
	2571, 261, 1284, 0, 0, 0, 0, 0, 0, 74,
	3179, 0, 1736, 1737, 0, 1769, 1770, 1771, 1779, 1780,
	1781, 0, 0, 0, 0, 78, 0, 0, 0, 0,
	0, 0, 0, 0, 1772, 1767, 1736, 1737, 0, 0,
	0, 0, 1739, 3205, 0, 0, 0, 0, 0, 261,
	1284, 1785, 0, 688, 0, 0, 0, 0, 3218, 1767,
	0, 0, 0, 2685, 0, 87, 1739, 0, 0, 261,
	0, 0, 261, 0, 0, 0, 261, 1738, 261, 0,
	3236, 0, 0, 1274, 0, 261, 261, 1758, 1284, 1284,
	2701, 0, 0, 0, 0, 261, 1755, 0, 0, 0,
	0, 1738, 0, 0, 0, 860, 0, 0, 0, 0,
	0, 1758, 0, 0, 0, 0, 0, 0, 0, 107,
	0, 0, 0, 0, 93, 104, 0, 0, 0, 0,
	0, 1288, 1288, 0, 0, 0, 0, 0, 0, 0,
	2738, 0, 0, 0, 0, 0, 0, 0, 1288, 0,
	0, 261, 0, 0, 0, 1954, 0, 0, 0, 0,
	0, 0, 0, 1945, 261, 2571, 0, 0, 0, 0,
	0, 1761, 1762, 1763, 1764, 0, 0, 261, 0, 0,
	0, 1744, 94, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1761, 1762, 1763, 1764, 0,
	0, 0, 0, 0, 261, 1744, 0, 2839, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1776, 1436,
	0, 1786, 0, 0, 1954, 0, 0, 1766, 1768, 0,
	261, 2857, 1945, 0, 0, 0, 0, 0, 0, 0,
	2831, 2829, 0, 0, 1782, 0, 1783, 2833, 2835, 2825,
	0, 1766, 1768, 1753, 1754, 1474, 0, 0, 261, 0,
	261, 0, 0, 0, 0, 0, 0, 261, 0, 0,
	3218, 1774, 0, 0, 0, 0, 0, 2899, 0, 0,
	0, 0, 0, 0, 0, 0, 1759, 2738, 0, 672,
	0, 0, 0, 0, 0, 0, 0, 0, 2928, 866,
	0, 2738, 2738, 0, 0, 0, 1436, 0, 0, 0,
	1759, 0, 0, 0, 0, 0, 0, 0, 261, 0,
	0, 0, 0, 0, 0, 97, 0, 0, 1784, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 1274, 261,
	0, 0, 0, 1474, 0, 1474, 1284, 261, 0, 0,
	1274, 0, 1274, 0, 1274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1954, 0, 0, 0, 1436, 0, 182, 100, 1945,
	103, 0, 0, 0, 0, 261, 261, 261, 261, 1274,
	0, 0, 1274, 0, 261, 0, 261, 0, 0, 0,
	0, 1436, 0, 0, 229, 1449, 0, 0, 1350, 1765,
	0, 0, 861, 0, 0, 0, 0, 148, 0, 0,
	0, 0, 0, 0, 0, 0, 2827, 261, 0, 0,
	1760, 0, 0, 1765, 0, 261, 0, 2841, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 231, 0, 0, 1760, 0, 1777, 0, 2840, 2832,
	2830, 2834, 2836, 2826, 2828, 2842, 0, 0, 0, 0,
	0, 0, 2838, 0, 0, 0, 0, 150, 0, 0,
	0, 0, 3541, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 186, 0, 0, 0, 0, 0, 0, 3557,
	230, 0, 0, 0, 0, 2845, 0, 0, 0, 0,
	0, 0, 223, 0, 0, 0, 0, 0, 0, 0,
	0, 224, 0, 0, 1474, 0, 0, 0, 0, 0,
	0, 0, 3126, 3127, 0, 3144, 3145, 3146, 0, 0,
	0, 0, 0, 185, 0, 0, 1436, 0, 0, 0,
	0, 0, 0, 0, 3862, 0, 0, 1775, 0, 0,
	0, 0, 1750, 1751, 1757, 1778, 1756, 1752, 0, 1749,
	1747, 1748, 1740, 1741, 1742, 1743, 1745, 1746, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1749, 1747, 1748, 1740, 1741, 1742, 1743,
	1745, 1746, 0, 0, 0, 0, 0, 3141, 1736, 1737,
	0, 1769, 1770, 1771, 1779, 1780, 1781, 4114, 1436, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3648,
	1772, 1767, 0, 0, 0, 0, 0, 0, 1739, 0,
	0, 0, 0, 0, 0, 0, 0, 1785, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 2575, 0,
	4151, 0, 0, 1738, 0, 0, 0, 0, 2846, 0,
	0, 261, 1203, 1758, 0, 0, 672, 2837, 0, 0,
	0, 672, 1755, 0, 672, 0, 0, 672, 672, 0,
	0, 3132, 0, 672, 0, 0, 0, 0, 0, 0,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2575, 0, 1474, 0, 0, 0, 0, 256, 256,
	668, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1474, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 0,
	0, 0, 261, 261, 3147, 0, 0, 1761, 1762, 1763,
	1764, 0, 0, 0, 0, 0, 0, 1744, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2738, 2738, 261, 0, 3272, 0, 0, 0, 0,
	0, 2738, 0, 0, 3283, 0, 3142, 0, 0, 0,
	0, 0, 2738, 3283, 1776, 2738, 3283, 1786, 0, 3283,
	0, 0, 73, 1766, 1768, 0, 0, 0, 0, 0,
	0, 0, 261, 261, 3272, 4281, 261, 0, 0, 74,
	1782, 0, 1783, 0, 0, 0, 0, 0, 0, 1753,
	1754, 0, 0, 0, 0, 78, 3272, 0, 261, 0,
	3341, 3341, 0, 0, 1274, 0, 0, 1774, 0, 0,
	73, 0, 0, 0, 0, 0, 0, 0, 0, 2738,
	0, 2738, 1759, 3364, 2738, 3272, 2575, 74, 2738, 3272,
	0, 0, 0, 0, 0, 87, 0, 0, 0, 0,
	0, 0, 0, 78, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 0, 0, 0, 1784, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 3391, 860, 0, 3393, 2738, 0,
	0, 261, 1773, 87, 0, 261, 0, 0, 1284, 107,
	3143, 0, 0, 0, 93, 104, 0, 0, 0, 0,
	0, 0, 0, 261, 0, 0, 0, 0, 2899, 0,
	0, 1274, 0, 261, 0, 0, 2738, 0, 672, 0,
	0, 0, 0, 860, 0, 2738, 0, 0, 0, 0,
	0, 1884, 0, 0, 0, 0, 0, 107, 0, 0,
	0, 0, 93, 104, 0, 1765, 261, 2899, 0, 0,
	2899, 0, 94, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1760, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3492, 0, 0, 0, 0, 0, 0, 3916,
	0, 0, 1777, 0, 0, 0, 0, 0, 0, 3498,
	94, 0, 1274, 261, 0, 261, 0, 0, 0, 0,
	0, 1274, 0, 0, 0, 0, 3928, 0, 0, 1436,
	0, 0, 3138, 3139, 3140, 0, 0, 0, 0, 3137,
	3135, 3136, 3128, 3129, 3130, 3131, 3133, 3134, 0, 0,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1436, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1436, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1436,
	0, 0, 0, 1775, 0, 97, 0, 3562, 1750, 1751,
	1757, 1778, 1756, 1752, 0, 1749, 1747, 1748, 1740, 1741,
	1742, 1743, 1745, 1746, 0, 0, 3126, 3127, 1040, 3144,
	3145, 3146, 3887, 0, 0, 0, 0, 1054, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3530, 0,
	0, 1054, 0, 97, 0, 0, 0, 182, 100, 0,
	103, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 861, 0, 0, 0, 0, 148, 0, 0,
	0, 3141, 261, 261, 0, 182, 100, 0, 103, 0,
	0, 1350, 0, 1736, 1737, 0, 1769, 1770, 1771, 1779,
	1780, 1781, 0, 0, 672, 672, 0, 0, 0, 0,
	0, 231, 229, 0, 0, 1772, 1767, 0, 1436, 0,
	861, 4106, 0, 1739, 0, 148, 1474, 1474, 0, 0,
	0, 0, 1785, 0, 0, 0, 0, 150, 0, 0,
	1474, 1474, 1474, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 186, 0, 0, 0, 0, 0, 1738, 231,
	230, 0, 4106, 0, 0, 0, 0, 0, 1758, 1436,
	0, 0, 223, 0, 0, 3132, 0, 1755, 0, 0,
	0, 224, 0, 0, 2372, 150, 0, 0, 0, 3126,
	3127, 0, 3144, 3145, 3146, 0, 0, 0, 0, 0,
	186, 0, 0, 1571, 0, 0, 0, 0, 230, 0,
	0, 3529, 0, 0, 0, 756, 0, 0, 0, 0,
	223, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 0, 1260, 0, 1260, 1260, 0, 0, 3147, 0,
	0, 0, 2372, 0, 0, 0, 3341, 0, 0, 0,
	0, 1569, 1761, 1762, 1763, 1764, 0, 261, 0, 0,
	0, 0, 1744, 0, 3141, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3272, 0, 261,
	3142, 0, 0, 1347, 0, 0, 0, 0, 0, 1453,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 1776,
	261, 0, 1786, 0, 1436, 0, 0, 1436, 1766, 1768,
	261, 0, 0, 0, 0, 261, 0, 0, 0, 0,
	261, 0, 0, 0, 0, 1782, 0, 1783, 0, 0,
	0, 0, 0, 0, 1753, 1754, 0, 0, 0, 2738,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 2928,
	2928, 0, 1774, 0, 0, 866, 866, 2738, 3132, 0,
	0, 2899, 2899, 0, 0, 866, 2738, 1759, 0, 0,
	0, 0, 0, 0, 0, 0, 1575, 1576, 0, 0,
	0, 1436, 0, 0, 0, 0, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1436, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1784,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3147, 0, 0, 3143, 0, 0, 1773, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1123,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3881,
	0, 0, 0, 3142, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1685, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1765, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1760, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 0, 0, 0, 0, 0, 1474, 1436, 261,
	0, 0, 0, 0, 0, 0, 0, 1777, 0, 0,
	0, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	1299, 0, 0, 0, 0, 0, 3138, 3139, 3140, 0,
	0, 0, 0, 3137, 3135, 3136, 3128, 3129, 3130, 3131,
	3133, 3134, 0, 1040, 0, 2738, 2738, 1040, 3341, 2738,
	0, 0, 0, 0, 0, 0, 3960, 0, 3960, 1474,
	0, 0, 0, 0, 0, 0, 0, 2738, 0, 3283,
	0, 0, 0, 1474, 1474, 261, 3272, 3143, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3272,
	0, 261, 3272, 1476, 261, 1482, 0, 1488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1775, 2738,
	0, 2738, 261, 1750, 1751, 1757, 1778, 1756, 1752, 0,
	1749, 1747, 1748, 1740, 1741, 1742, 1743, 1745, 1746, 0,
	0, 0, 0, 3889, 0, 0, 0, 3888, 0, 2738,
	0, 0, 0, 0, 4034, 0, 0, 0, 0, 0,
	0, 1214, 0, 0, 0, 261, 0, 0, 0, 0,
	0, 0, 1577, 0, 1582, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 1591, 0, 1596, 0, 0, 0,
	0, 0, 0, 1736, 1737, 0, 0, 1916, 0, 0,
	0, 0, 0, 0, 3960, 0, 0, 1474, 0, 0,
	0, 0, 1925, 0, 1453, 0, 1767, 0, 0, 3138,
	3139, 3140, 0, 1739, 0, 0, 3137, 3135, 3136, 3128,
	3129, 3130, 3131, 3133, 3134, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1658, 0, 0, 1664, 1260, 0, 0, 0, 1738, 0,
	0, 1453, 0, 0, 0, 0, 0, 0, 1758, 0,
	0, 0, 0, 0, 0, 0, 0, 1755, 0, 0,
	0, 0, 1436, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1436, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2738, 0, 3283, 0,
	0, 4143, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 3519, 0, 0, 0, 0, 4163, 0, 4163, 0,
	0, 718, 0, 0, 0, 1789, 1790, 1791, 1792, 1793,
	1794, 1795, 1761, 1762, 1763, 1764, 0, 0, 756, 0,
	0, 701, 1744, 0, 0, 0, 702, 0, 0, 1274,
	0, 0, 0, 0, 0, 0, 1807, 0, 0, 0,
	0, 0, 1820, 0, 3272, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1736, 1737, 0, 0, 703, 4143, 0, 1766, 1768,
	0, 0, 0, 0, 2738, 0, 704, 0, 0, 0,
	0, 0, 0, 0, 1767, 0, 1436, 0, 1436, 0,
	0, 1739, 4230, 0, 1753, 1754, 0, 705, 0, 0,
	0, 0, 0, 0, 1474, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1436, 3960, 3960, 0, 724,
	0, 0, 0, 0, 0, 0, 1738, 1759, 0, 0,
	0, 0, 0, 0, 261, 261, 1758, 0, 0, 706,
	0, 0, 0, 0, 0, 1755, 0, 1878, 1878, 1878,
	0, 0, 0, 0, 0, 0, 0, 0, 3562, 0,
	0, 0, 707, 0, 0, 0, 0, 0, 0, 0,
	0, 1436, 0, 2184, 3341, 4295, 0, 2191, 0, 0,
	0, 0, 4143, 0, 708, 1436, 0, 709, 0, 2204,
	0, 0, 0, 0, 0, 0, 0, 0, 3960, 3518,
	0, 0, 0, 733, 0, 2216, 0, 2216, 0, 0,
	3960, 0, 0, 2223, 0, 0, 0, 0, 0, 0,
	1761, 1762, 1763, 1764, 0, 0, 0, 723, 0, 0,
	1744, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1436, 0, 0,
	1765, 4034, 0, 0, 2191, 0, 0, 2248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3960, 0, 261,
	3960, 1760, 0, 0, 0, 0, 1766, 1768, 2268, 0,
	3283, 0, 0, 0, 0, 0, 720, 0, 0, 0,
	0, 2281, 0, 2283, 1040, 2285, 0, 2287, 0, 2288,
	1436, 0, 1753, 1754, 0, 0, 1474, 0, 1474, 0,
	0, 0, 0, 0, 0, 0, 0, 1214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1436, 0, 0, 0, 0, 1759, 0, 0, 0, 2310,
	4397, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4163, 0, 711, 261, 0, 0, 0,
	0, 1214, 0, 0, 0, 1214, 0, 0, 0, 0,
	1214, 1436, 0, 0, 0, 2738, 0, 0, 0, 0,
	0, 0, 0, 731, 0, 712, 0, 0, 0, 0,
	0, 0, 0, 1436, 0, 0, 261, 0, 0, 0,
	0, 1214, 0, 0, 0, 0, 0, 1756, 1752, 0,
	1749, 1747, 1748, 1740, 1741, 1742, 1743, 1745, 1746, 0,
	0, 0, 732, 3562, 0, 0, 0, 1214, 0, 713,
	0, 0, 1054, 728, 729, 726, 0, 0, 0, 0,
	1474, 721, 0, 0, 714, 0, 0, 1214, 0, 0,
	0, 1436, 1214, 0, 0, 0, 0, 0, 1765, 0,
	0, 0, 0, 0, 0, 0, 1214, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1760,
	0, 0, 0, 0, 0, 715, 0, 722, 0, 0,
	0, 0, 0, 0, 0, 0, 716, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1436, 4143,
	717, 0, 0, 0, 0, 725, 0, 0, 0, 0,
	1214, 0, 0, 0, 0, 0, 0, 0, 0, 734,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	719, 0, 0, 2738, 0, 0, 0, 0, 0, 0,
	3960, 0, 3960, 0, 0, 1474, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1474,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1756, 1752, 0, 1749, 1747,
	1748, 1740, 1741, 1742, 1743, 1745, 1746, 0, 0, 0,
	0, 0, 0, 0, 0, 2928, 0, 0, 0, 0,
	0, 0, 0, 0, 2738, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2687, 0, 0, 1260, 0, 2928,
	0, 1260, 0, 1260, 0, 1054, 1054, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2204, 0, 0, 0, 0, 0, 2347, 0, 2351, 0,
	0, 0, 0, 0, 0, 2365, 0, 0, 0, 0,
	0, 0, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381,
	2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391,
	2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401,
	2402, 2403, 2404, 2405, 2406, 2407, 2408, 0, 2414, 0,
	2416, 2417, 2418, 2419, 0, 0, 0, 0, 0, 718,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2443, 0, 0, 0, 0, 0, 0, 701,
	0, 0, 0, 1807, 702, 1054, 0, 2458, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1214, 1453,
	1214, 0, 0, 2488, 2491, 2494, 2497, 0, 2501, 2502,
	2503, 2504, 2505, 2506, 2507, 1214, 0, 0, 0, 0,
	0, 0, 0, 703, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1958, 704, 0, 2567, 1214, 2578, 2580,
	2585, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2191, 0, 705, 0, 0, 0, 0,
	0, 0, 2204, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 724, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1736, 1737,
	0, 1769, 1770, 1771, 1779, 1780, 1781, 706, 0, 0,
	0, 0, 0, 1214, 0, 0, 0, 0, 0, 0,
	1772, 1767, 0, 2959, 1214, 0, 0, 0, 1739, 0,
	707, 0, 0, 0, 0, 0, 0, 1785, 0, 0,
	0, 0, 2970, 0, 2973, 0, 0, 0, 1214, 0,
	0, 0, 708, 0, 0, 709, 0, 0, 0, 0,
	0, 0, 0, 1738, 0, 0, 0, 0, 0, 0,
	0, 733, 0, 1758, 0, 0, 0, 0, 0, 0,
	0, 0, 1755, 0, 0, 0, 0, 0, 0, 0,
	2998, 1453, 3000, 1453, 0, 723, 0, 0, 0, 3006,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1260, 0, 0, 0, 0, 0, 0, 0,
	3034, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 720, 0, 0, 1761, 1762, 1763,
	1764, 0, 0, 0, 0, 0, 0, 1744, 0, 0,
	0, 0, 0, 0, 0, 1214, 1214, 0, 0, 0,
	0, 0, 0, 0, 0, 1214, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1776, 0, 0, 1786, 0, 0,
	0, 0, 0, 1766, 1768, 0, 0, 0, 0, 0,
	0, 730, 0, 711, 0, 0, 0, 0, 0, 0,
	1782, 0, 1783, 0, 0, 0, 0, 0, 0, 1753,
	1754, 0, 0, 0, 0, 0, 0, 0, 0, 2860,
	2861, 731, 2863, 712, 0, 0, 0, 1774, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1759, 0, 0, 0, 0, 0, 0, 1214,
	0, 1214, 0, 1214, 0, 0, 0, 0, 0, 0,
	732, 0, 0, 0, 0, 0, 0, 713, 0, 1214,
	1214, 728, 729, 726, 0, 0, 0, 0, 0, 721,
	1214, 0, 714, 0, 1784, 0, 0, 0, 0, 0,
	0, 0, 1214, 0, 1214, 1214, 1214, 0, 0, 0,
	0, 0, 1773, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 715, 0, 722, 0, 0, 0, 0,
	0, 0, 0, 0, 716, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2986, 717, 0,
	0, 0, 0, 725, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1765, 0, 734, 2546, 2547,
	2548, 2549, 2542, 2543, 2544, 2545, 0, 0, 719, 0,
	0, 0, 0, 0, 0, 0, 1760, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1789, 1790, 0, 0,
	0, 0, 1777, 0, 0, 0, 1958, 1958, 1214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1260, 0, 0, 0, 1453, 1453, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2522,
	2523, 2524, 2525, 0, 0, 0, 0, 0, 0, 0,
	0, 3037, 3038, 0, 0, 0, 0, 3044, 3270, 0,
	0, 0, 2534, 2535, 2536, 2537, 2530, 2531, 2532, 2533,
	2538, 2539, 2540, 2541, 0, 0, 3058, 3059, 0, 0,
	0, 0, 2458, 0, 0, 0, 0, 0, 0, 0,
	0, 3066, 0, 0, 0, 1214, 0, 3319, 3321, 0,
	0, 2204, 0, 1775, 1736, 1737, 0, 3080, 1750, 1751,
	1757, 1778, 1756, 1752, 0, 1749, 1747, 1748, 1740, 1741,
	1742, 1743, 1745, 1746, 3092, 0, 0, 1767, 3101, 0,
	0, 0, 3102, 0, 1739, 2518, 2519, 2520, 2521, 2526,
	2527, 2528, 2529, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1214, 0, 0,
	0, 0, 0, 0, 1214, 0, 0, 0, 0, 1738,
	0, 0, 0, 1214, 0, 0, 0, 0, 0, 1758,
	0, 0, 0, 0, 0, 0, 0, 0, 1755, 0,
	1214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3404, 0, 0, 0,
	3408, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2585, 2585, 2585, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1878, 0,
	0, 0, 3043, 0, 0, 0, 3183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1761, 1762, 1763, 1764, 0, 0, 0,
	0, 3461, 0, 1744, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1214, 1214, 0, 0, 0, 0, 1736,
	1737, 0, 1769, 1770, 1771, 1779, 1780, 1781, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1766,
	1768, 1772, 1767, 0, 0, 0, 0, 0, 3501, 1739,
	1453, 0, 0, 0, 0, 1214, 0, 0, 1785, 0,
	0, 0, 0, 0, 0, 1753, 1754, 0, 1040, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1040, 0, 1738, 0, 3514, 0, 0, 1958,
	0, 0, 0, 0, 1758, 0, 0, 0, 1759, 0,
	0, 0, 0, 1755, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1761, 1762,
	1763, 1764, 0, 0, 1214, 0, 0, 0, 1744, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1214, 0, 0, 0, 0,
	0, 1765, 0, 0, 0, 1776, 0, 1214, 1786, 1214,
	0, 0, 0, 0, 1766, 1768, 0, 0, 0, 0,
	0, 0, 1760, 0, 1214, 0, 0, 0, 0, 0,
	0, 1782, 0, 1783, 0, 0, 0, 0, 0, 0,
	1753, 1754, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1774, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1759, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1100, 0,
	0, 0, 0, 0, 0, 1784, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1773, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 262, 262, 0, 1756, 1752,
	0, 1749, 1747, 1748, 1740, 1741, 1742, 1743, 1745, 1746,
	0, 2365, 0, 0, 0, 0, 0, 3516, 3517, 0,
	0, 3520, 0, 262, 0, 3523, 0, 0, 0, 0,
	0, 0, 0, 0, 3527, 0, 1765, 0, 0, 0,
	0, 0, 0, 3534, 0, 0, 3183, 0, 0, 262,
	0, 0, 0, 0, 2204, 0, 0, 1760, 0, 0,
	0, 3546, 0, 0, 0, 2204, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3777, 0, 0, 0, 0,
	0, 3569, 3570, 1777, 3571, 3572, 3573, 0, 0, 0,
	2204, 0, 0, 0, 0, 3795, 0, 0, 0, 0,
	0, 0, 3579, 0, 0, 0, 3581, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3609, 3610, 0,
	0, 1736, 1737, 0, 1769, 1770, 1771, 1779, 1780, 1781,
	0, 0, 0, 0, 0, 3621, 0, 0, 0, 0,
	0, 0, 3844, 1772, 1767, 0, 0, 0, 0, 0,
	3630, 1739, 0, 0, 0, 0, 0, 0, 0, 0,
	1785, 0, 0, 0, 1775, 0, 0, 0, 0, 1750,
	1751, 1757, 1778, 1756, 1752, 0, 1749, 1747, 1748, 1740,
	1741, 1742, 1743, 1745, 1746, 0, 1738, 1214, 1214, 2454,
	0, 0, 0, 2455, 0, 0, 1758, 0, 0, 0,
	0, 0, 0, 1214, 0, 1755, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1214, 0, 0, 0, 0, 3676, 0, 0, 0,
	0, 0, 0, 1214, 0, 0, 1214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3687, 0, 0, 0,
	0, 0, 0, 0, 1958, 0, 0, 0, 1214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1214, 1214, 0, 0, 0, 3713, 0,
	1761, 1762, 1763, 1764, 0, 0, 0, 0, 0, 0,
	1744, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1214, 0, 0, 0, 0, 1958, 0, 1776, 0, 0,
	1786, 0, 0, 0, 0, 0, 1766, 1768, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1782, 0, 1783, 0, 1214, 0, 0,
	3975, 0, 1753, 1754, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2204, 0, 0, 1214,
	1774, 1214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1759, 1878, 1214, 0, 0,
	0, 0, 0, 0, 0, 3813, 0, 0, 1214, 0,
	0, 0, 1214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1214, 0, 1784, 0, 0,
	2204, 0, 1214, 0, 1214, 0, 0, 0, 1214, 0,
	4056, 0, 0, 0, 0, 1773, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1214, 0,
	3859, 3860, 0, 0, 0, 0, 3864, 3865, 0, 0,
	0, 3868, 3869, 0, 0, 1214, 0, 0, 3873, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3877,
	0, 0, 0, 0, 0, 0, 0, 0, 1765, 0,
	1214, 1214, 0, 0, 0, 3882, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1760,
	0, 0, 0, 1214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1777, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1214, 0, 0, 1214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4152, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1958, 0, 0, 0, 0, 262, 0,
	262, 262, 0, 0, 262, 0, 1297, 0, 0, 0,
	1214, 2204, 0, 0, 0, 0, 1775, 0, 0, 0,
	0, 1750, 1751, 1757, 1778, 1756, 1752, 1214, 1749, 1747,
	1748, 1740, 1741, 1742, 1743, 1745, 1746, 1958, 1958, 0,
	0, 0, 0, 0, 0, 3532, 0, 0, 0, 262,
	1297, 262, 262, 0, 1297, 262, 262, 0, 0, 1297,
	0, 0, 0, 0, 0, 0, 1958, 1958, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1736, 1737, 0, 0, 0, 0, 0,
	1297, 0, 0, 0, 0, 0, 0, 1958, 0, 4271,
	1453, 0, 0, 0, 0, 0, 1767, 0, 0, 0,
	0, 0, 0, 1739, 0, 0, 1297, 0, 262, 262,
	0, 0, 0, 0, 1214, 1214, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1297, 0, 0, 0,
	0, 1297, 262, 262, 0, 0, 0, 0, 1738, 0,
	0, 0, 0, 0, 0, 1297, 0, 1214, 1758, 0,
	0, 0, 0, 0, 0, 0, 0, 1755, 1076, 109,
	0, 0, 0, 4101, 4102, 4103, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2365, 0, 0, 4112,
	4113, 0, 0, 0, 0, 0, 0, 0, 0, 1297,
	0, 0, 0, 0, 0, 0, 0, 4121, 4124, 0,
	0, 3036, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4356, 0, 0, 0, 0, 262,
	0, 0, 1761, 1762, 1763, 1764, 0, 0, 0, 0,
	0, 0, 1744, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 109, 0, 0, 0, 0, 0, 0, 0,
	0, 4164, 0, 0, 0, 0, 0, 0, 0, 4170,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4177, 0, 0, 1040, 0, 0, 0, 0, 1766, 1768,
	0, 0, 0, 0, 0, 4185, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1214, 0, 0,
	1214, 4407, 0, 0, 1753, 1754, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1958, 0, 0,
	0, 0, 0, 1015, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1035, 0, 0, 1759, 0, 0,
	0, 4443, 0, 0, 0, 0, 0, 0, 1214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1214, 1214, 1214, 0, 0, 0, 0,
	1197, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1214, 0, 0, 0, 0,
	0, 1214, 4503, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1214, 0, 0, 0, 0,
	0, 0, 4300, 0, 0, 4303, 1958, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1765, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1297, 0, 0, 0, 262, 262,
	262, 1760, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 1297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1040, 1040, 0, 0,
	0, 0, 0, 0, 0, 0, 4351, 0, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1214, 0, 0, 0, 0, 0, 0,
	0, 1214, 0, 0, 0, 1214, 0, 1214, 0, 0,
	0, 0, 1297, 0, 1214, 0, 0, 0, 0, 0,
	2365, 0, 0, 1297, 0, 1214, 1214, 0, 0, 4124,
	0, 0, 0, 0, 1214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1297, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1214, 0,
	1214, 0, 0, 0, 0, 0, 1040, 1756, 1752, 0,
	1749, 1747, 1748, 1740, 1741, 1742, 1743, 1745, 1746, 0,
	1214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1214, 0, 1214, 0, 0, 1214, 0, 0, 0, 0,
	0, 0, 0, 0, 1214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4466, 4466, 4466, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1214, 1214, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4487, 0, 0, 1214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1214, 0, 0, 0,
	0, 1214, 0, 262, 1297, 1297, 262, 812, 0, 0,
	0, 0, 0, 0, 1297, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1214, 814, 0, 0,
	0, 0, 815, 0, 0, 4466, 1214, 1214, 1214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 262,
	0, 816, 0, 833, 0, 262, 0, 0, 0, 1214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 262, 0, 0, 0, 0, 817, 262,
	1958, 0, 0, 818, 0, 0, 0, 0, 1297, 0,
	1297, 0, 1297, 0, 1087, 0, 0, 0, 0, 0,
	1214, 0, 1214, 0, 0, 842, 0, 0, 1297, 1297,
	0, 819, 0, 0, 0, 0, 0, 0, 0, 1297,
	262, 0, 1214, 262, 0, 840, 0, 0, 0, 0,
	0, 1297, 0, 1297, 1297, 1297, 4466, 4612, 109, 0,
	260, 260, 260, 0, 262, 4616, 0, 0, 813, 1958,
	0, 0, 0, 0, 0, 0, 262, 262, 0, 262,
	0, 262, 0, 262, 0, 262, 0, 0, 0, 794,
	820, 0, 0, 821, 0, 0, 0, 0, 0, 0,
	1214, 0, 0, 0, 844, 0, 0, 1214, 0, 733,
	0, 0, 1214, 1214, 0, 794, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 0, 0, 0, 0,
	0, 109, 0, 109, 0, 109, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1214, 0, 0,
	1214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1297, 1214, 1214,
	0, 0, 843, 0, 0, 0, 1035, 109, 109, 0,
	0, 0, 838, 0, 0, 0, 0, 0, 0, 0,
	109, 0, 109, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 109, 0, 109, 0, 1958, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1210, 0, 0, 0,
	822, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1214, 824, 0, 0, 1297, 0, 0, 0, 0, 0,
	0, 0, 1214, 0, 0, 0, 109, 1736, 1737, 0,
	1769, 1770, 1771, 1779, 1780, 1781, 0, 0, 0, 0,
	0, 825, 0, 0, 0, 0, 0, 0, 0, 1772,
	1767, 0, 0, 0, 0, 0, 0, 1739, 0, 0,
	0, 0, 0, 0, 0, 0, 1785, 834, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 732, 1214,
	0, 0, 1214, 1297, 0, 0, 1214, 0, 0, 811,
	0, 835, 1738, 0, 0, 0, 1214, 1214, 0, 0,
	826, 0, 1758, 0, 0, 0, 262, 0, 0, 1297,
	0, 1755, 0, 1214, 0, 0, 1015, 0, 0, 0,
	0, 0, 262, 0, 832, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1801, 0, 0, 0,
	0, 827, 0, 0, 0, 828, 847, 0, 846, 0,
	0, 0, 829, 1806, 0, 0, 0, 1812, 0, 0,
	0, 0, 0, 0, 0, 0, 830, 0, 0, 0,
	262, 839, 0, 0, 0, 0, 0, 848, 0, 845,
	0, 0, 0, 0, 0, 734, 1761, 1762, 1763, 1764,
	262, 0, 0, 262, 0, 0, 1744, 262, 0, 262,
	0, 0, 0, 0, 0, 0, 262, 262, 0, 0,
	0, 0, 1297, 1297, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1776, 0, 0, 1786, 0, 0, 0,
	0, 0, 1766, 1768, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1297, 0, 0, 0, 0, 1782,
	0, 1783, 0, 0, 0, 0, 0, 0, 1753, 1754,
	0, 0, 262, 0, 0, 0, 0, 1898, 0, 1901,
	0, 109, 0, 0, 0, 262, 1774, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 156, 0, 262, 0,
	0, 1759, 0, 0, 73, 0, 46, 45, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 74, 0, 0, 151, 262, 1297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 78, 0, 0,
	1297, 0, 0, 1784, 0, 0, 0, 0, 67, 0,
	0, 262, 0, 0, 0, 48, 0, 153, 0, 0,
	0, 1773, 1214, 0, 1214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 47, 0, 87, 0, 262,
	0, 262, 0, 1297, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 50, 68, 0, 0, 0, 0, 0,
	0, 0, 51, 0, 1297, 0, 0, 57, 0, 0,
	0, 154, 0, 0, 1765, 0, 1297, 0, 1297, 49,
	0, 107, 0, 0, 0, 0, 93, 104, 0, 262,
	0, 0, 0, 1297, 0, 1760, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 1777, 0, 0, 0, 0, 52, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 260, 260, 0, 0,
	260, 0, 0, 0, 94, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 262, 262, 262,
	0, 0, 0, 0, 0, 262, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 260, 260, 0,
	0, 260, 260, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 794, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1775, 0, 0, 0, 0, 1750, 1751, 1757,
	1778, 1756, 1752, 0, 1749, 1747, 1748, 1740, 1741, 1742,
	1743, 1745, 1746, 0, 0, 0, 0, 0, 0, 0,
	0, 3104, 0, 0, 260, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 260,
	0, 0, 0, 0, 0, 0, 0, 97, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1035, 0,
	1035, 0, 0, 0, 53, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 56, 0,
	0, 0, 0, 59, 0, 0, 0, 0, 0, 0,
	0, 0, 69, 0, 0, 0, 0, 0, 58, 182,
	100, 0, 103, 0, 0, 0, 54, 0, 0, 0,
	155, 0, 0, 0, 0, 0, 0, 55, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 62, 260, 0, 0, 0, 148,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 152, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1297, 0, 150,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 186, 0, 0, 1015, 0, 0,
	1015, 1015, 230, 0, 0, 0, 0, 0, 0, 0,
	1297, 0, 0, 0, 223, 0, 0, 0, 0, 0,
	0, 0, 0, 224, 0, 1297, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 185, 0, 1297, 3, 0,
	0, 0, 0, 1736, 1737, 2432, 1769, 1770, 1771, 1779,
	1780, 1781, 1297, 1297, 0, 0, 0, 786, 0, 262,
	0, 1035, 0, 262, 262, 1772, 1767, 0, 0, 0,
	1806, 0, 0, 1739, 1806, 0, 0, 0, 0, 0,
	0, 0, 1785, 786, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 0, 0, 0, 1297,
	0, 0, 0, 0, 0, 0, 0, 0, 1738, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1758, 0,
	0, 0, 0, 0, 0, 0, 0, 1755, 0, 0,
	0, 0, 0, 262, 262, 0, 1297, 262, 0, 0,
	0, 0, 0, 1900, 262, 1210, 1197, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 1297, 262,
	1297, 0, 1901, 0, 260, 1900, 260, 0, 0, 0,
	0, 0, 794, 0, 0, 0, 1297, 0, 0, 794,
	0, 0, 0, 0, 0, 0, 0, 1297, 0, 0,
	0, 1297, 0, 0, 0, 0, 0, 109, 0, 0,
	0, 0, 1761, 1762, 1763, 1764, 260, 0, 0, 0,
	0, 0, 1744, 260, 1297, 0, 0, 0, 0, 0,
	262, 1297, 0, 1297, 0, 0, 0, 1297, 0, 0,
	0, 0, 0, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 0, 1297, 262, 0, 0, 1776,
	0, 0, 1786, 0, 0, 0, 0, 1297, 1766, 1768,
	0, 0, 0, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1782, 0, 1783, 0, 0,
	0, 0, 0, 0, 1753, 1754, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1297,
	1297, 0, 1774, 0, 0, 0, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1759, 0, 0,
	0, 0, 1297, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 109, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1784,
	0, 0, 1297, 0, 262, 1297, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1773, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 109, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 794, 0, 0, 0, 0, 0, 1092, 0,
	0, 0, 0, 0, 0, 109, 0, 0, 109, 0,
	109, 0, 0, 0, 0, 0, 0, 0, 0, 1297,
	1765, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1297, 0, 0, 0,
	0, 1760, 0, 0, 0, 260, 0, 0, 0, 260,
	0, 0, 0, 0, 109, 260, 0, 109, 0, 0,
	0, 260, 0, 109, 0, 1736, 1737, 1777, 1769, 1770,
	1771, 1779, 1780, 1781, 0, 0, 0, 260, 0, 260,
	0, 0, 0, 0, 0, 260, 0, 1772, 1767, 0,
	0, 0, 0, 0, 0, 1739, 0, 0, 0, 0,
	0, 0, 0, 0, 1785, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 260,
	1738, 0, 0, 109, 0, 0, 0, 0, 0, 0,
	1758, 0, 0, 0, 0, 0, 0, 0, 0, 1755,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 794, 260, 0, 260, 1297, 260, 1775, 260,
	0, 260, 0, 1750, 1751, 1757, 1778, 1756, 1752, 0,
	1749, 1747, 1748, 1740, 1741, 1742, 1743, 1745, 1746, 0,
	0, 0, 0, 0, 0, 0, 0, 3103, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1761, 1762, 1763, 1764, 0, 0,
	0, 0, 0, 0, 1744, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2432, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1776, 0, 1806, 1786, 0, 0, 0, 0, 0,
	1766, 1768, 0, 0, 0, 0, 0, 0, 0, 0,
	1295, 0, 0, 0, 0, 0, 0, 1782, 0, 1783,
	0, 0, 0, 0, 0, 0, 1753, 1754, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1774, 0, 1297, 0, 0, 1297,
	262, 0, 0, 0, 1353, 0, 0, 0, 1353, 1759,
	0, 262, 0, 1295, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 262, 0, 0, 1295, 0, 0, 1297, 0, 0,
	0, 1784, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1773,
	1295, 0, 1297, 1297, 1297, 0, 0, 0, 0, 0,
	0, 0, 1210, 0, 0, 0, 0, 0, 0, 1297,
	1295, 0, 0, 0, 0, 1295, 0, 0, 1210, 0,
	0, 0, 0, 0, 1297, 0, 1197, 0, 262, 1295,
	1297, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1197, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 1765, 0, 1297, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1760, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1295, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 1777,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 260,
	0, 0, 0, 260, 0, 260, 0, 0, 0, 0,
	0, 0, 260, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1297, 0, 1297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 109, 109, 0, 0,
	109, 0, 0, 0, 1297, 1297, 0, 0, 260, 0,
	1775, 0, 0, 1297, 0, 1750, 1751, 1757, 1778, 1756,
	1752, 260, 1749, 1747, 1748, 1740, 1741, 1742, 1743, 1745,
	1746, 0, 0, 0, 260, 0, 0, 0, 0, 3100,
	109, 109, 0, 0, 109, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 1297,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 1297,
	0, 1297, 262, 0, 1297, 262, 0, 0, 0, 0,
	0, 0, 0, 1297, 0, 0, 0, 794, 0, 0,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1297, 1297, 260, 0, 794, 0, 0,
	0, 0, 0, 0, 260, 0, 1296, 0, 0, 0,
	0, 0, 0, 1297, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 1197, 1297, 262, 1035, 0, 0,
	1297, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 109, 109, 0, 0, 0, 0, 0, 0, 0,
	1354, 0, 0, 0, 1354, 260, 0, 0, 1353, 1296,
	0, 0, 0, 0, 0, 1297, 1297, 1297, 0, 0,
	786, 0, 0, 0, 260, 0, 260, 786, 1297, 0,
	1295, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	1296, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1297, 0,
	0, 0, 0, 0, 0, 0, 1296, 0, 0, 0,
	0, 0, 260, 260, 260, 260, 0, 0, 0, 0,
	0, 260, 0, 260, 0, 0, 1296, 0, 0, 0,
	0, 1296, 0, 0, 0, 0, 1295, 0, 0, 1297,
	0, 1297, 0, 0, 0, 1296, 0, 1295, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 1297, 260, 0, 0, 0, 0, 0, 0, 0,
	262, 1353, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1296,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1297,
	0, 0, 0, 0, 0, 0, 1297, 262, 0, 0,
	0, 1297, 1297, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 109, 1297, 0, 0, 1297,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1197, 1197, 0, 0, 0, 1295, 1295,
	0, 0, 0, 0, 0, 0, 0, 0, 1353, 0,
	0, 0, 0, 0, 0, 262, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1736, 1737, 0, 1769, 1770, 1771, 1779, 1780,
	1781, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1767, 0, 0, 0, 0,
	0, 0, 1739, 0, 0, 0, 0, 0, 0, 0,
	0, 1785, 1210, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1295, 0, 1295, 0, 1295, 0, 1210, 0,
	0, 0, 262, 0, 0, 0, 0, 1738, 0, 0,
	0, 0, 1295, 1295, 0, 0, 0, 1758, 0, 0,
	0, 0, 0, 1295, 0, 0, 1755, 0, 1900, 0,
	0, 0, 0, 0, 0, 1295, 0, 1295, 1295, 1295,
	262, 0, 0, 0, 0, 1297, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1297, 1297, 0, 0, 0,
	786, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1297, 0, 1354, 260, 0, 0, 0, 260,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1296, 0, 0, 0,
	0, 1761, 1762, 1763, 1764, 0, 0, 0, 0, 0,
	260, 1744, 0, 0, 0, 109, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1197, 0, 0, 0, 0, 0, 0, 1776, 260,
	260, 1786, 0, 260, 0, 0, 0, 1766, 1768, 0,
	1900, 1353, 1296, 0, 0, 0, 0, 262, 0, 0,
	0, 0, 0, 1296, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 1753, 1754, 109, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1354, 0, 0,
	0, 1774, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1759, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1353, 0,
	794, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1210, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 109, 1353, 0, 0,
	0, 0, 1197, 260, 1296, 1296, 0, 0, 0, 0,
	1197, 0, 0, 0, 1354, 0, 0, 0, 0, 1765,
	0, 0, 0, 1353, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1760, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 260, 0, 0, 0, 1777, 0, 0, 0,
	0, 0, 1736, 1737, 0, 1769, 1770, 1771, 1779, 1780,
	1781, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1772, 1767, 0, 0, 260, 0,
	0, 0, 1739, 0, 0, 0, 0, 0, 1296, 0,
	1296, 1785, 1296, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1295, 1295, 1296, 1296,
	0, 0, 0, 0, 0, 0, 0, 1738, 0, 1296,
	0, 0, 0, 0, 0, 0, 0, 1758, 0, 0,
	0, 1296, 109, 1296, 1296, 1296, 1755, 0, 0, 0,
	0, 0, 0, 0, 0, 109, 0, 1775, 1353, 0,
	0, 0, 1750, 1751, 1757, 1778, 1756, 1752, 0, 1749,
	1747, 1748, 1740, 1741, 1742, 1743, 1745, 1746, 109, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1761, 1762, 1763, 1764, 0, 0, 0, 0, 0,
	1353, 1744, 0, 0, 0, 0, 0, 0, 0, 1210,
	1210, 0, 0, 0, 1295, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1354, 1776, 0,
	0, 1786, 0, 0, 0, 0, 0, 1766, 1768, 0,
	0, 0, 0, 0, 0, 786, 0, 1295, 0, 0,
	0, 0, 0, 0, 1782, 0, 1783, 0, 0, 0,
	0, 0, 0, 1753, 1754, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1295, 0,
	0, 1774, 0, 0, 0, 0, 0, 0, 0, 0,
	1295, 0, 1295, 0, 0, 0, 1759, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1295, 0, 0,
	0, 0, 0, 0, 1354, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1784, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1773, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 1354, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 2432,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 1354,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 1765,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 260, 0, 0,
	1760, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1210, 0, 0,
	0, 0, 0, 0, 0, 0, 1777, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 1296, 1296, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 109, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1354, 109, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1775, 0, 0,
	0, 0, 1750, 1751, 1757, 1778, 1756, 1752, 0, 1749,
	1747, 1748, 1740, 1741, 1742, 1743, 1745, 1746, 0, 0,
	0, 0, 0, 0, 0, 0, 3099, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1354, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1210, 0,
	1296, 0, 0, 0, 0, 0, 1210, 0, 0, 0,
	0, 1353, 0, 0, 0, 0, 0, 0, 0, 1900,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 109, 0, 0, 0, 0,
	0, 109, 0, 1296, 1353, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1353,
	0, 0, 0, 1900, 0, 1900, 0, 0, 0, 0,
	0, 0, 0, 0, 1296, 0, 0, 0, 0, 0,
	0, 1353, 260, 0, 0, 0, 1296, 0, 1296, 0,
	0, 0, 0, 0, 0, 0, 1295, 1295, 260, 0,
	0, 260, 0, 1296, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1295, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	1295, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1900, 1295, 0, 1295, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1353, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1295, 0, 0, 0, 1295, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1295, 0,
	0, 0, 0, 0, 0, 1295, 0, 1295, 0, 0,
	0, 1353, 0, 0, 0, 0, 0, 0, 786, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1295,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1295, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1295, 1295, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1295, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1736, 1737, 0, 1769, 1770, 1771,
	1779, 1780, 1781, 0, 0, 0, 1353, 0, 0, 1353,
	0, 0, 0, 0, 0, 0, 1772, 1767, 0, 0,
	0, 0, 0, 0, 1739, 0, 0, 0, 0, 0,
	0, 0, 0, 1785, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1354, 0, 0,
	0, 0, 0, 1900, 1900, 0, 0, 0, 0, 1738,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1758,
	0, 260, 260, 0, 0, 0, 0, 0, 1755, 0,
	1354, 0, 0, 1353, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1354, 0, 0, 0, 0,
	1353, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1354, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1296, 1296, 0, 1900, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1900, 0, 0,
	0, 0, 0, 1761, 1762, 1763, 1764, 0, 0, 0,
	0, 0, 0, 1744, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1296,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1776, 0, 0, 1786, 1900, 0, 260, 1900, 0, 1766,
	1768, 0, 0, 0, 0, 0, 1296, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1782, 0, 1783, 0,
	1353, 0, 0, 0, 0, 1753, 1754, 0, 1296, 0,
	1296, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1774, 0, 0, 1354, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1296, 1759, 0,
	0, 1296, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 1296, 0, 0, 0, 0, 0,
	0, 1296, 0, 1296, 0, 0, 0, 1354, 0, 0,
	1784, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1296, 0, 0, 1773, 0,
	0, 0, 0, 260, 0, 0, 0, 1296, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1296,
	1296, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1295, 1765, 0, 1295, 0, 0, 0, 0, 0, 0,
	0, 0, 1296, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 1760, 0, 0, 0, 0, 0, 0, 0,
	0, 1736, 1737, 0, 1769, 1770, 1771, 1779, 1780, 1781,
	0, 0, 0, 0, 0, 0, 0, 0, 1777, 0,
	0, 1295, 1354, 1772, 1767, 1354, 0, 0, 0, 0,
	0, 1739, 0, 0, 0, 0, 0, 0, 0, 0,
	1785, 0, 0, 0, 0, 0, 1295, 1295, 1295, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1295, 0, 0, 1738, 1900, 0, 1900,
	0, 0, 0, 0, 0, 0, 1758, 0, 1295, 0,
	0, 0, 0, 0, 1353, 1755, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1354,
	0, 0, 0, 0, 0, 0, 0, 0, 1353, 0,
	0, 0, 0, 0, 0, 0, 1354, 0, 0, 1775,
	0, 0, 0, 0, 1750, 1751, 1757, 1778, 1756, 1752,
	0, 1749, 1747, 1748, 1740, 1741, 1742, 1743, 1745, 1746,
	0, 0, 0, 0, 0, 0, 0, 0, 3098, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1761, 1762, 1763, 1764, 0, 0, 0, 0, 0, 0,
	1744, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1776, 0, 0,
	1786, 0, 0, 0, 0, 0, 1766, 1768, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1353, 0,
	1353, 0, 0, 1782, 0, 1783, 0, 0, 0, 0,
	0, 0, 1753, 1754, 0, 0, 1354, 0, 1295, 1295,
	0, 0, 0, 0, 0, 0, 0, 1353, 0, 0,
	1774, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1759, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1295, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1353, 0, 1295, 0, 1784, 1295, 0,
	0, 0, 0, 0, 0, 0, 0, 1353, 0, 0,
	0, 0, 0, 0, 0, 1773, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1295, 1295, 0,
	0, 0, 1736, 1737, 0, 1769, 1770, 1771, 1779, 1780,
	1781, 0, 0, 0, 0, 0, 0, 1295, 0, 0,
	0, 0, 0, 0, 1772, 1767, 0, 0, 0, 1353,
	0, 0, 1739, 0, 1295, 0, 0, 0, 1765, 0,
	0, 1785, 0, 0, 0, 0, 1296, 0, 0, 1296,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1760,
	0, 0, 0, 0, 0, 0, 0, 1738, 0, 1295,
	1295, 1295, 0, 0, 0, 0, 0, 1758, 0, 0,
	0, 0, 1353, 0, 0, 1777, 1755, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1296, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1353, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1296, 1296, 1296, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1296,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1353, 1296, 1295, 0, 0, 0, 0,
	1354, 1761, 1762, 1763, 1764, 0, 0, 0, 0, 0,
	0, 1744, 0, 0, 0, 1353, 0, 0, 0, 0,
	0, 0, 0, 0, 1354, 0, 1775, 0, 0, 0,
	0, 1750, 1751, 1757, 1778, 1756, 1752, 0, 1749, 1747,
	1748, 1740, 1741, 1742, 1743, 1745, 1746, 0, 1776, 0,
	0, 1786, 0, 0, 0, 2455, 0, 1766, 1768, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1353, 1782, 0, 1783, 0, 0, 0,
	1295, 0, 0, 1753, 1754, 1295, 1295, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1774, 0, 924, 0, 970, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1759, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 932,
	1353, 0, 0, 1295, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1354, 946, 1354, 930, 929, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1784, 0,
	0, 0, 0, 0, 1296, 1296, 0, 0, 0, 0,
	0, 0, 0, 1354, 0, 931, 1773, 0, 0, 0,
	934, 0, 0, 0, 0, 978, 0, 0, 0, 0,
	0, 0, 0, 0, 943, 944, 0, 0, 0, 0,
	0, 0, 0, 960, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1296,
	0, 971, 936, 0, 0, 0, 0, 0, 0, 1354,
	0, 1296, 0, 0, 1296, 0, 0, 0, 0, 1765,
	0, 0, 0, 1354, 0, 0, 0, 0, 0, 937,
	0, 0, 0, 0, 0, 0, 0, 0, 969, 0,
	1760, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1296, 1296, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1777, 0, 0, 0,
	0, 0, 0, 1296, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 939, 0, 1354, 0, 0, 0, 1295,
	1296, 928, 0, 0, 0, 0, 0, 0, 0, 1295,
	1295, 0, 0, 0, 0, 0, 0, 0, 0, 940,
	941, 0, 0, 0, 0, 0, 1295, 0, 0, 0,
	0, 0, 0, 0, 0, 1296, 1296, 1296, 948, 947,
	0, 0, 0, 0, 0, 0, 942, 0, 1354, 0,
	957, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 975, 968,
	0, 0, 0, 0, 0, 0, 0, 1775, 1354, 0,
	0, 0, 1750, 1751, 1757, 1778, 1756, 1752, 0, 1749,
	1747, 1748, 1740, 1741, 1742, 1743, 1745, 1746, 0, 0,
	972, 0, 4398, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1354,
	0, 1296, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1354, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 935, 0, 0, 977, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 933, 0, 0, 0,
	964, 965, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 967, 0, 0, 0, 0, 0, 1354,
	0, 0, 0, 0, 0, 0, 1296, 0, 0, 0,
	0, 1296, 1296, 0, 0, 962, 0, 0, 0, 0,
	0, 0, 976, 958, 0, 951, 949, 0, 954, 0,
	0, 0, 0, 0, 955, 0, 0, 926, 0, 973,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1354, 0, 0, 1296,
	927, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 966, 0, 956, 0, 0, 0, 0, 0,
	953, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 974, 0, 0, 0, 0, 0, 0, 0, 959,
	0, 0, 0, 0, 0, 0, 0, 0, 938, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 961, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 963, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1351, 0, 0, 1296, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1296, 1296, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 1356, 277, 278, 1357,
	1358, 1359, 1296, 1360, 614, 1361, 1362, 1363, 1364, 279,
	280, 1154, 281, 282, 283, 284, 285, 286, 615, 616,
	0, 287, 617, 288, 618, 1365, 619, 289, 290, 291,
	292, 293, 294, 1366, 1367, 0, 295, 620, 621, 622,
	1368, 296, 297, 623, 1369, 1298, 1370, 298, 299, 300,
	301, 302, 303, 304, 0, 1371, 306, 307, 308, 305,
	309, 1372, 310, 0, 311, 312, 313, 314, 315, 316,
	1373, 317, 318, 319, 1155, 320, 321, 322, 1374, 1375,
	1377, 1376, 1378, 1379, 1380, 323, 324, 325, 326, 327,
	0, 328, 624, 625, 1381, 332, 329, 330, 1382, 333,
	331, 334, 1383, 335, 336, 337, 1384, 1385, 338, 339,
	340, 1386, 341, 342, 1387, 343, 344, 345, 1388, 346,
	347, 626, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 627, 628, 359, 1389, 267, 1390, 0, 0,
	0, 0, 360, 361, 362, 629, 0, 0, 0, 363,
	1391, 364, 365, 1392, 1393, 1156, 366, 367, 630, 631,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 1394,
	377, 632, 1395, 633, 378, 1396, 379, 380, 381, 382,
	383, 634, 635, 636, 460, 1158, 384, 385, 1397, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 1398, 1157, 393, 637, 638, 1399, 639, 1400, 395,
	396, 1159, 640, 1160, 397, 398, 399, 1161, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 1401, 407,
	409, 408, 1402, 410, 641, 1162, 411, 412, 1163, 1403,
	413, 0, 0, 0, 414, 415, 418, 1404, 1405, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 1164, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 1165, 447, 1406, 269, 1166, 457, 458, 1407, 642,
	459, 643, 461, 462, 1408, 0, 463, 0, 1409, 1410,
	465, 466, 467, 1411, 1412, 468, 469, 644, 1167, 470,
	1168, 645, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 1413, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 648, 489, 649, 490, 491, 1414,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	650, 501, 503, 502, 504, 1415, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 1416, 519, 520, 521,
	1169, 522, 523, 524, 525, 651, 526, 0, 527, 528,
	534, 535, 529, 530, 536, 537, 538, 539, 540, 1417,
	542, 543, 541, 544, 545, 546, 1418, 547, 548, 531,
	532, 549, 550, 1170, 551, 552, 553, 554, 555, 556,
	652, 0, 557, 1419, 558, 559, 560, 562, 533, 563,
	568, 569, 653, 564, 565, 566, 567, 654, 571, 572,
	1420, 573, 574, 0, 570, 561, 1421, 575, 576, 577,
	578, 579, 580, 581, 353, 582, 1422, 583, 655, 656,
	657, 658, 1423, 592, 1424, 584, 585, 586, 659, 587,
	660, 1425, 588, 589, 590, 591, 0, 593, 594, 1426,
	1427, 595, 596, 597, 599, 600, 598, 601, 1428, 602,
	1429, 0, 603, 604, 605, 661, 662, 663, 1430, 607,
	606, 608, 664, 1431, 1432, 1433, 1434, 1435, 609, 610,
	665, 611, 612, 613, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1351, 0,
	0, 0, 0, 0, 0, 0, 2620, 0, 0, 0,
	0, 0, 0, 0, 2621, 270, 272, 271, 273, 274,
	275, 276, 1356, 277, 278, 1357, 1358, 1359, 0, 1360,
	614, 1361, 1362, 1363, 1364, 279, 280, 1154, 281, 282,
	283, 284, 285, 286, 615, 616, 0, 287, 617, 288,
	618, 1365, 619, 289, 290, 291, 292, 293, 294, 1366,
	1367, 0, 295, 620, 621, 622, 1368, 296, 297, 623,
	1369, 1298, 1370, 298, 299, 300, 301, 302, 303, 304,
	0, 1371, 306, 307, 308, 305, 309, 1372, 310, 0,
	311, 312, 313, 314, 315, 316, 1373, 317, 318, 319,
	1155, 320, 321, 322, 1374, 1375, 1377, 1376, 1378, 1379,
	1380, 323, 324, 325, 326, 327, 0, 328, 624, 625,
	1381, 332, 329, 330, 1382, 333, 331, 334, 1383, 335,
	336, 337, 1384, 1385, 338, 339, 340, 1386, 341, 342,
	1387, 343, 344, 345, 1388, 346, 347, 626, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 627, 628,
	359, 1389, 267, 1390, 0, 0, 0, 0, 360, 361,
	362, 629, 0, 0, 0, 363, 1391, 364, 365, 1392,
	1393, 1156, 366, 367, 630, 631, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 1394, 377, 632, 1395, 633,
	378, 1396, 379, 380, 381, 382, 383, 634, 635, 636,
	460, 1158, 384, 385, 1397, 386, 387, 388, 389, 0,
	0, 0, 268, 390, 391, 392, 394, 1398, 1157, 393,
	637, 638, 1399, 639, 1400, 395, 396, 1159, 640, 1160,
	397, 398, 399, 1161, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 1401, 407, 409, 408, 1402, 410,
	641, 1162, 411, 412, 1163, 1403, 413, 0, 0, 0,
	414, 415, 418, 1404, 1405, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 1164, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 1165, 447, 1406,
	269, 1166, 457, 458, 1407, 642, 459, 643, 461, 462,
	1408, 0, 463, 0, 1409, 1410, 465, 466, 467, 1411,
	1412, 468, 469, 644, 1167, 470, 1168, 645, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 1413,
	481, 482, 646, 483, 484, 485, 647, 486, 487, 488,
	648, 489, 649, 490, 491, 1414, 492, 493, 0, 494,
	495, 496, 497, 498, 499, 500, 650, 501, 503, 502,
	504, 1415, 505, 0, 506, 507, 508, 0, 0, 0,
	0, 509, 0, 511, 512, 513, 514, 510, 515, 516,
	517, 518, 1416, 519, 520, 521, 1169, 522, 523, 524,
	525, 651, 526, 0, 527, 528, 534, 535, 529, 530,
	536, 537, 538, 539, 540, 1417, 542, 543, 541, 544,
	545, 546, 1418, 547, 548, 531, 532, 549, 550, 1170,
	551, 552, 553, 554, 555, 556, 652, 0, 557, 1419,
	558, 559, 560, 562, 533, 563, 568, 569, 653, 564,
	565, 566, 567, 654, 571, 572, 1420, 573, 574, 0,
	570, 561, 1421, 575, 576, 577, 578, 579, 580, 581,
	353, 582, 1422, 583, 655, 656, 657, 658, 1423, 592,
	1424, 584, 585, 586, 659, 587, 660, 1425, 588, 589,
	590, 591, 0, 593, 594, 1426, 1427, 595, 596, 597,
	599, 600, 598, 601, 1428, 602, 1429, 0, 603, 604,
	605, 661, 662, 663, 1430, 607, 606, 608, 664, 1431,
	1432, 1433, 1434, 1435, 609, 610, 665, 611, 612, 613,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1351, 0, 0, 0, 0, 3540, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3542, 270,
	272, 271, 273, 274, 275, 276, 1356, 277, 278, 1357,
	1358, 1359, 0, 1360, 614, 1361, 1362, 1363, 1364, 279,
	280, 1154, 281, 282, 283, 284, 285, 286, 615, 616,
	0, 287, 617, 288, 618, 1365, 619, 289, 290, 291,
	292, 293, 294, 1366, 1367, 0, 295, 620, 621, 622,
	1368, 296, 297, 623, 1369, 1298, 1370, 298, 299, 300,
	301, 302, 303, 304, 0, 1371, 306, 307, 308, 305,
	309, 1372, 310, 0, 311, 312, 313, 314, 315, 316,
	1373, 317, 318, 319, 1155, 320, 321, 322, 1374, 1375,
	1377, 1376, 1378, 1379, 1380, 323, 324, 325, 326, 327,
	0, 328, 624, 625, 1381, 332, 329, 330, 1382, 333,
	331, 334, 1383, 335, 336, 337, 1384, 1385, 338, 339,
	340, 1386, 341, 342, 1387, 343, 344, 345, 1388, 346,
	347, 626, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 627, 628, 359, 1389, 267, 1390, 0, 0,
	0, 0, 360, 361, 362, 629, 0, 0, 0, 363,
	1391, 364, 365, 1392, 1393, 1156, 366, 367, 630, 631,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 1394,
	377, 632, 1395, 633, 378, 1396, 379, 380, 381, 382,
	383, 634, 635, 636, 460, 1158, 384, 385, 1397, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 1398, 1157, 393, 637, 638, 1399, 639, 1400, 395,
	396, 1159, 640, 1160, 397, 398, 399, 1161, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 1401, 407,
	409, 408, 1402, 410, 641, 1162, 411, 412, 1163, 1403,
	413, 0, 0, 0, 414, 415, 418, 1404, 1405, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 1164, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 1165, 447, 1406, 269, 1166, 457, 458, 1407, 642,
	459, 643, 461, 462, 1408, 0, 463, 0, 1409, 1410,
	465, 466, 467, 1411, 1412, 468, 469, 644, 1167, 470,
	1168, 645, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 1413, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 648, 489, 649, 490, 491, 1414,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	650, 501, 503, 502, 504, 1415, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 1416, 519, 520, 521,
	1169, 522, 523, 524, 525, 651, 526, 0, 527, 528,
	534, 535, 529, 530, 536, 537, 538, 539, 540, 1417,
	542, 543, 541, 544, 545, 546, 1418, 547, 548, 531,
	532, 549, 550, 1170, 551, 552, 553, 554, 555, 556,
	652, 0, 557, 1419, 558, 559, 560, 562, 533, 563,
	568, 569, 653, 564, 565, 566, 567, 654, 571, 572,
	1420, 573, 574, 0, 570, 561, 1421, 575, 576, 577,
	578, 579, 580, 581, 353, 582, 1422, 583, 655, 656,
	657, 658, 1423, 592, 1424, 584, 585, 586, 659, 587,
	660, 1425, 588, 589, 590, 591, 0, 593, 594, 1426,
	1427, 595, 596, 597, 599, 600, 598, 601, 1428, 602,
	1429, 0, 603, 604, 605, 661, 662, 663, 1430, 607,
	606, 608, 664, 1431, 1432, 1433, 1434, 1435, 609, 610,
	665, 611, 612, 613, 0, 0, 0, 0, 0, 0,
	1351, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3915, 270, 272, 271,
	273, 274, 275, 276, 1356, 277, 278, 1357, 1358, 1359,
	0, 1360, 614, 1361, 1362, 1363, 1364, 279, 280, 1154,
	281, 282, 283, 284, 285, 286, 615, 616, 0, 287,
	617, 288, 618, 1365, 619, 289, 290, 291, 292, 293,
	294, 1366, 1367, 0, 295, 620, 621, 622, 1368, 296,
	297, 623, 1369, 1298, 1370, 298, 299, 300, 301, 302,
	303, 304, 0, 1371, 306, 307, 308, 305, 309, 1372,
	310, 0, 311, 312, 313, 314, 315, 316, 1373, 317,
	318, 319, 1155, 320, 321, 322, 1374, 1375, 1377, 1376,
	1378, 1379, 1380, 323, 324, 325, 326, 327, 0, 328,
	624, 625, 1381, 332, 329, 330, 1382, 333, 331, 334,
	1383, 335, 336, 337, 1384, 1385, 338, 339, 340, 1386,
	341, 342, 1387, 343, 344, 345, 1388, 346, 347, 626,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	627, 628, 359, 1389, 267, 1390, 0, 0, 0, 0,
	360, 361, 362, 629, 0, 0, 0, 363, 1391, 364,
	365, 1392, 1393, 1156, 366, 367, 630, 631, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 1394, 377, 632,
	1395, 633, 378, 1396, 379, 380, 381, 382, 383, 634,
	635, 636, 460, 1158, 384, 385, 1397, 386, 387, 388,
	389, 0, 0, 0, 268, 390, 391, 392, 394, 1398,
	1157, 393, 637, 638, 1399, 639, 1400, 395, 396, 1159,
	640, 1160, 397, 398, 399, 1161, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 1401, 407, 409, 408,
	1402, 410, 641, 1162, 411, 412, 1163, 1403, 413, 0,
	0, 0, 414, 415, 418, 1404, 1405, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 1164, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 1165,
	447, 1406, 269, 1166, 457, 458, 1407, 642, 459, 643,
	461, 462, 1408, 0, 463, 0, 1409, 1410, 465, 466,
	467, 1411, 1412, 468, 469, 644, 1167, 470, 1168, 645,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 1413, 481, 482, 646, 483, 484, 485, 647, 486,
	487, 488, 648, 489, 649, 490, 491, 1414, 492, 493,
	0, 494, 495, 496, 497, 498, 499, 500, 650, 501,
	503, 502, 504, 1415, 505, 0, 506, 507, 508, 0,
	0, 0, 0, 509, 0, 511, 512, 513, 514, 510,
	515, 516, 517, 518, 1416, 519, 520, 521, 1169, 522,
	523, 524, 525, 651, 526, 0, 527, 528, 534, 535,
	529, 530, 536, 537, 538, 539, 540, 1417, 542, 543,
	541, 544, 545, 546, 1418, 547, 548, 531, 532, 549,
	550, 1170, 551, 552, 553, 554, 555, 556, 652, 0,
	557, 1419, 558, 559, 560, 562, 533, 563, 568, 569,
	653, 564, 565, 566, 567, 654, 571, 572, 1420, 573,
	574, 0, 570, 561, 1421, 575, 576, 577, 578, 579,
	580, 581, 353, 582, 1422, 583, 655, 656, 657, 658,
	1423, 592, 1424, 584, 585, 586, 659, 587, 660, 1425,
	588, 589, 590, 591, 0, 593, 594, 1426, 1427, 595,
	596, 597, 599, 600, 598, 601, 1428, 602, 1429, 0,
	603, 604, 605, 661, 662, 663, 1430, 607, 606, 608,
	664, 1431, 1432, 1433, 1434, 1435, 609, 610, 665, 611,
	612, 613, 0, 1351, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4107,
	270, 272, 271, 273, 274, 275, 276, 1356, 277, 278,
	1357, 1358, 1359, 0, 1360, 614, 1361, 1362, 1363, 1364,
	279, 280, 1154, 281, 282, 283, 284, 285, 286, 615,
	616, 0, 287, 617, 288, 618, 1365, 619, 289, 290,
	291, 292, 293, 294, 1366, 1367, 0, 295, 620, 621,
	622, 1368, 296, 297, 623, 1369, 1298, 1370, 298, 299,
	300, 301, 302, 303, 304, 0, 1371, 306, 307, 308,
	305, 309, 1372, 310, 0, 311, 312, 313, 314, 315,
	316, 1373, 317, 318, 319, 1155, 320, 321, 322, 1374,
	1375, 1377, 1376, 1378, 1379, 1380, 323, 324, 325, 326,
	327, 0, 328, 624, 625, 1381, 332, 329, 330, 1382,
	333, 331, 334, 1383, 335, 336, 337, 1384, 1385, 338,
	339, 340, 1386, 341, 342, 1387, 343, 344, 345, 1388,
	346, 347, 626, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 627, 628, 359, 1389, 267, 1390, 0,
	0, 0, 0, 360, 361, 362, 629, 0, 0, 0,
	363, 1391, 364, 365, 1392, 1393, 1156, 366, 367, 630,
	631, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	1394, 377, 632, 1395, 633, 378, 1396, 379, 380, 381,
	382, 383, 634, 635, 636, 460, 1158, 384, 385, 1397,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 1398, 1157, 393, 637, 638, 1399, 639, 1400,
	395, 396, 1159, 640, 1160, 397, 398, 399, 1161, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 1401,
	407, 409, 408, 1402, 410, 641, 1162, 411, 412, 1163,
	1403, 413, 0, 0, 0, 414, 415, 418, 1404, 1405,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 1164,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 1165, 447, 1406, 269, 1166, 457, 458, 1407,
	642, 459, 643, 461, 462, 1408, 0, 463, 0, 1409,
	1410, 465, 466, 467, 1411, 1412, 468, 469, 644, 1167,
	470, 1168, 645, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 1413, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 648, 489, 649, 490, 491,
	1414, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 650, 501, 503, 502, 504, 1415, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 1416, 519, 520,
	521, 1169, 522, 523, 524, 525, 651, 526, 0, 527,
	528, 534, 535, 529, 530, 536, 537, 538, 539, 540,
	1417, 542, 543, 541, 544, 545, 546, 1418, 547, 548,
	531, 532, 549, 550, 1170, 551, 552, 553, 554, 555,
	556, 652, 0, 557, 1419, 558, 559, 560, 562, 533,
	563, 568, 569, 653, 564, 565, 566, 567, 654, 571,
	572, 1420, 573, 574, 0, 570, 561, 1421, 575, 576,
	577, 578, 579, 580, 581, 353, 582, 1422, 583, 655,
	656, 657, 658, 1423, 592, 1424, 584, 585, 586, 659,
	587, 660, 1425, 588, 589, 590, 591, 0, 593, 594,
	1426, 1427, 595, 596, 597, 599, 600, 598, 601, 1428,
	602, 1429, 0, 603, 604, 605, 661, 662, 663, 1430,
	607, 606, 608, 664, 1431, 1432, 1433, 1434, 1435, 609,
	610, 665, 611, 612, 613, 0, 1351, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3984, 270, 272, 271, 273, 274, 275, 276,
	1356, 277, 278, 1357, 1358, 1359, 0, 1360, 614, 1361,
	1362, 1363, 1364, 279, 280, 1154, 281, 282, 283, 284,
	285, 286, 615, 616, 0, 287, 617, 288, 618, 1365,
	619, 289, 290, 291, 292, 293, 294, 1366, 1367, 0,
	295, 620, 621, 622, 1368, 296, 297, 623, 1369, 1298,
	1370, 298, 299, 300, 301, 302, 303, 304, 0, 1371,
	306, 307, 308, 305, 309, 1372, 310, 0, 311, 312,
	313, 314, 315, 316, 1373, 317, 318, 319, 1155, 320,
	321, 322, 1374, 1375, 1377, 1376, 1378, 1379, 1380, 323,
	324, 325, 326, 327, 0, 328, 624, 625, 1381, 332,
	329, 330, 1382, 333, 331, 334, 1383, 335, 336, 337,
	1384, 1385, 338, 339, 340, 1386, 341, 342, 1387, 343,
	344, 345, 1388, 346, 347, 626, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 627, 628, 359, 1389,
	267, 1390, 0, 0, 0, 0, 360, 361, 362, 629,
	0, 0, 0, 363, 1391, 364, 365, 1392, 1393, 1156,
	366, 367, 630, 631, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 1394, 377, 632, 1395, 633, 378, 1396,
	379, 380, 381, 382, 383, 634, 635, 636, 460, 1158,
	384, 385, 1397, 386, 387, 388, 389, 0, 0, 0,
	268, 390, 391, 392, 394, 1398, 1157, 393, 637, 638,
	1399, 639, 1400, 395, 396, 1159, 640, 1160, 397, 398,
	399, 1161, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 1401, 407, 409, 408, 1402, 410, 641, 1162,
	411, 412, 1163, 1403, 413, 0, 0, 0, 414, 415,
	418, 1404, 1405, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 1164, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 1165, 447, 1406, 269, 1166,
	457, 458, 1407, 642, 459, 643, 461, 462, 1408, 0,
	463, 0, 1409, 1410, 465, 466, 467, 1411, 1412, 468,
	469, 644, 1167, 470, 1168, 645, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 1413, 481, 482,
	646, 483, 484, 485, 647, 486, 487, 488, 648, 489,
	649, 490, 491, 1414, 492, 493, 0, 494, 495, 496,
	497, 498, 499, 500, 650, 501, 503, 502, 504, 1415,
	505, 0, 506, 507, 508, 0, 0, 0, 0, 509,
	0, 511, 512, 513, 514, 510, 515, 516, 517, 518,
	1416, 519, 520, 521, 1169, 522, 523, 524, 525, 651,
	526, 0, 527, 528, 534, 535, 529, 530, 536, 537,
	538, 539, 540, 1417, 542, 543, 541, 544, 545, 546,
	1418, 547, 548, 531, 532, 549, 550, 1170, 551, 552,
	553, 554, 555, 556, 652, 0, 557, 1419, 558, 559,
	560, 562, 533, 563, 568, 569, 653, 564, 565, 566,
	567, 654, 571, 572, 1420, 573, 574, 0, 570, 561,
	1421, 575, 576, 577, 578, 579, 580, 581, 353, 582,
	1422, 583, 655, 656, 657, 658, 1423, 592, 1424, 584,
	585, 586, 659, 587, 660, 1425, 588, 589, 590, 591,
	0, 593, 594, 1426, 1427, 595, 596, 597, 599, 600,
	598, 601, 1428, 602, 1429, 0, 603, 604, 605, 661,
	662, 663, 1430, 607, 606, 608, 664, 1431, 1432, 1433,
	1434, 1435, 609, 610, 665, 611, 612, 613, 0, 1351,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3845, 270, 272, 271, 273,
	274, 275, 276, 1356, 277, 278, 1357, 1358, 1359, 0,
	1360, 614, 1361, 1362, 1363, 1364, 279, 280, 1154, 281,
	282, 283, 284, 285, 286, 615, 616, 0, 287, 617,
	288, 618, 1365, 619, 289, 290, 291, 292, 293, 294,
	1366, 1367, 0, 295, 620, 621, 622, 1368, 296, 297,
	623, 1369, 1298, 1370, 298, 299, 300, 301, 302, 303,
	304, 0, 1371, 306, 307, 308, 305, 309, 1372, 310,
	0, 311, 312, 313, 314, 315, 316, 1373, 317, 318,
	319, 1155, 320, 321, 322, 1374, 1375, 1377, 1376, 1378,
	1379, 1380, 323, 324, 325, 326, 327, 0, 328, 624,
	625, 1381, 332, 329, 330, 1382, 333, 331, 334, 1383,
	335, 336, 337, 1384, 1385, 338, 339, 340, 1386, 341,
	342, 1387, 343, 344, 345, 1388, 346, 347, 626, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 627,
	628, 359, 1389, 267, 1390, 0, 0, 0, 0, 360,
	361, 362, 629, 0, 0, 0, 363, 1391, 364, 365,
	1392, 1393, 1156, 366, 367, 630, 631, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 1394, 377, 632, 1395,
	633, 378, 1396, 379, 380, 381, 382, 383, 634, 635,
	636, 460, 1158, 384, 385, 1397, 386, 387, 388, 389,
	0, 0, 0, 268, 390, 391, 392, 394, 1398, 1157,
	393, 637, 638, 1399, 639, 1400, 395, 396, 1159, 640,
	1160, 397, 398, 399, 1161, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 1401, 407, 409, 408, 1402,
	410, 641, 1162, 411, 412, 1163, 1403, 413, 0, 0,
	0, 414, 415, 418, 1404, 1405, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 1164, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 1165, 447,
	1406, 269, 1166, 457, 458, 1407, 642, 459, 643, 461,
	462, 1408, 0, 463, 0, 1409, 1410, 465, 466, 467,
	1411, 1412, 468, 469, 644, 1167, 470, 1168, 645, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	1413, 481, 482, 646, 483, 484, 485, 647, 486, 487,
	488, 648, 489, 649, 490, 491, 1414, 492, 493, 0,
	494, 495, 496, 497, 498, 499, 500, 650, 501, 503,
	502, 504, 1415, 505, 0, 506, 507, 508, 0, 0,
	0, 0, 509, 0, 511, 512, 513, 514, 510, 515,
	516, 517, 518, 1416, 519, 520, 521, 1169, 522, 523,
	524, 525, 651, 526, 0, 527, 528, 534, 535, 529,
	530, 536, 537, 538, 539, 540, 1417, 542, 543, 541,
	544, 545, 546, 1418, 547, 548, 531, 532, 549, 550,
	1170, 551, 552, 553, 554, 555, 556, 652, 0, 557,
	1419, 558, 559, 560, 562, 533, 563, 568, 569, 653,
	564, 565, 566, 567, 654, 571, 572, 1420, 573, 574,
	0, 570, 561, 1421, 575, 576, 577, 578, 579, 580,
	581, 353, 582, 1422, 583, 655, 656, 657, 658, 1423,
	592, 1424, 584, 585, 586, 659, 587, 660, 1425, 588,
	589, 590, 591, 0, 593, 594, 1426, 1427, 595, 596,
	597, 599, 600, 598, 601, 1428, 602, 1429, 0, 603,
	604, 605, 661, 662, 663, 1430, 607, 606, 608, 664,
	1431, 1432, 1433, 1434, 1435, 609, 610, 665, 611, 612,
	613, 0, 1351, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3558, 270,
	272, 271, 273, 274, 275, 276, 1356, 277, 278, 1357,
	1358, 1359, 0, 1360, 614, 1361, 1362, 1363, 1364, 279,
	280, 1154, 281, 282, 283, 284, 285, 286, 615, 616,
	0, 287, 617, 288, 618, 1365, 619, 289, 290, 291,
	292, 293, 294, 1366, 1367, 0, 295, 620, 621, 622,
	1368, 296, 297, 623, 1369, 1298, 1370, 298, 299, 300,
	301, 302, 303, 304, 0, 1371, 306, 307, 308, 305,
	309, 1372, 310, 0, 311, 312, 313, 314, 315, 316,
	1373, 317, 318, 319, 1155, 320, 321, 322, 1374, 1375,
	1377, 1376, 1378, 1379, 1380, 323, 324, 325, 326, 327,
	0, 328, 624, 625, 1381, 332, 329, 330, 1382, 333,
	331, 334, 1383, 335, 336, 337, 1384, 1385, 338, 339,
	340, 1386, 341, 342, 1387, 343, 344, 345, 1388, 346,
	347, 626, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 627, 628, 359, 1389, 267, 1390, 0, 0,
	0, 0, 360, 361, 362, 629, 0, 0, 0, 363,
	1391, 364, 365, 1392, 1393, 1156, 366, 367, 630, 631,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 1394,
	377, 632, 1395, 633, 378, 1396, 379, 380, 381, 382,
	383, 634, 635, 636, 460, 1158, 384, 385, 1397, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 1398, 1157, 393, 637, 638, 1399, 639, 1400, 395,
	396, 1159, 640, 1160, 397, 398, 399, 1161, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 1401, 407,
	409, 408, 1402, 410, 641, 1162, 411, 412, 1163, 1403,
	413, 0, 0, 0, 414, 415, 418, 1404, 1405, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 1164, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 1165, 447, 1406, 269, 1166, 457, 458, 1407, 642,
	459, 643, 461, 462, 1408, 0, 463, 0, 1409, 1410,
	465, 466, 467, 1411, 1412, 468, 469, 644, 1167, 470,
	1168, 645, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 1413, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 648, 489, 649, 490, 491, 1414,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	650, 501, 503, 502, 504, 1415, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 1416, 519, 520, 521,
	1169, 522, 523, 524, 525, 651, 526, 0, 527, 528,
	534, 535, 529, 530, 536, 537, 538, 539, 540, 1417,
	542, 543, 541, 544, 545, 546, 1418, 547, 548, 531,
	532, 549, 550, 1170, 551, 552, 553, 554, 555, 556,
	652, 0, 557, 1419, 558, 559, 560, 562, 533, 563,
	568, 569, 653, 564, 565, 566, 567, 654, 571, 572,
	1420, 573, 574, 0, 570, 561, 1421, 575, 576, 577,
	578, 579, 580, 581, 353, 582, 1422, 583, 655, 656,
	657, 658, 1423, 592, 1424, 584, 585, 586, 659, 587,
	660, 1425, 588, 589, 590, 591, 0, 593, 594, 1426,
	1427, 595, 596, 597, 599, 600, 598, 601, 1428, 602,
	1429, 0, 603, 604, 605, 661, 662, 663, 1430, 607,
	606, 608, 664, 1431, 1432, 1433, 1434, 1435, 609, 610,
	665, 611, 612, 613, 0, 1351, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3389, 270, 272, 271, 273, 274, 275, 276, 1356,
	277, 278, 1357, 1358, 1359, 0, 1360, 614, 1361, 1362,
	1363, 1364, 279, 280, 1154, 281, 282, 283, 284, 285,
	286, 615, 616, 0, 287, 617, 288, 618, 1365, 619,
	289, 290, 291, 292, 293, 294, 1366, 1367, 0, 295,
	620, 621, 622, 1368, 296, 297, 623, 1369, 1298, 1370,
	298, 299, 300, 301, 302, 303, 304, 0, 1371, 306,
	307, 308, 305, 309, 1372, 310, 0, 311, 312, 313,
	314, 315, 316, 1373, 317, 318, 319, 1155, 320, 321,
	322, 1374, 1375, 1377, 1376, 1378, 1379, 1380, 323, 324,
	325, 326, 327, 0, 328, 624, 625, 1381, 332, 329,
	330, 1382, 333, 331, 334, 1383, 335, 336, 337, 1384,
	1385, 338, 339, 340, 1386, 341, 342, 1387, 343, 344,
	345, 1388, 346, 347, 626, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 627, 628, 359, 1389, 267,
	1390, 0, 0, 0, 0, 360, 361, 362, 629, 0,
	0, 0, 363, 1391, 364, 365, 1392, 1393, 1156, 366,
	367, 630, 631, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 1394, 377, 632, 1395, 633, 378, 1396, 379,
	380, 381, 382, 383, 634, 635, 636, 460, 1158, 384,
	385, 1397, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 1398, 1157, 393, 637, 638, 1399,
	639, 1400, 395, 396, 1159, 640, 1160, 397, 398, 399,
	1161, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 1401, 407, 409, 408, 1402, 410, 641, 1162, 411,
	412, 1163, 1403, 413, 0, 0, 0, 414, 415, 418,
	1404, 1405, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 1164, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 1165, 447, 1406, 269, 1166, 457,
	458, 1407, 642, 459, 643, 461, 462, 1408, 0, 463,
	0, 1409, 1410, 465, 466, 467, 1411, 1412, 468, 469,
	644, 1167, 470, 1168, 645, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 1413, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 648, 489, 649,
	490, 491, 1414, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 650, 501, 503, 502, 504, 1415, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 1416,
	519, 520, 521, 1169, 522, 523, 524, 525, 651, 526,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 1417, 542, 543, 541, 544, 545, 546, 1418,
	547, 548, 531, 532, 549, 550, 1170, 551, 552, 553,
	554, 555, 556, 652, 0, 557, 1419, 558, 559, 560,
	562, 533, 563, 568, 569, 653, 564, 565, 566, 567,
	654, 571, 572, 1420, 573, 574, 0, 570, 561, 1421,
	575, 576, 577, 578, 579, 580, 581, 353, 582, 1422,
	583, 655, 656, 657, 658, 1423, 592, 1424, 584, 585,
	586, 659, 587, 660, 1425, 588, 589, 590, 591, 0,
	593, 594, 1426, 1427, 595, 596, 597, 599, 600, 598,
	601, 1428, 602, 1429, 0, 603, 604, 605, 661, 662,
	663, 1430, 607, 606, 608, 664, 1431, 1432, 1433, 1434,
	1435, 609, 610, 665, 611, 612, 613, 0, 1351, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2478, 270, 272, 271, 273, 274,
	275, 276, 1356, 277, 278, 1357, 1358, 1359, 0, 1360,
	614, 1361, 1362, 1363, 1364, 279, 280, 1154, 281, 282,
	283, 284, 285, 286, 615, 616, 0, 287, 617, 288,
	618, 1365, 619, 289, 290, 291, 292, 293, 294, 1366,
	1367, 0, 295, 620, 621, 622, 1368, 296, 297, 623,
	1369, 1298, 1370, 298, 299, 300, 301, 302, 303, 304,
	0, 1371, 306, 307, 308, 305, 309, 1372, 310, 0,
	311, 312, 313, 314, 315, 316, 1373, 317, 318, 319,
	1155, 320, 321, 322, 1374, 1375, 1377, 1376, 1378, 1379,
	1380, 323, 324, 325, 326, 327, 0, 328, 624, 625,
	1381, 332, 329, 330, 1382, 333, 331, 334, 1383, 335,
	336, 337, 1384, 1385, 338, 339, 340, 1386, 341, 342,
	1387, 343, 344, 345, 1388, 346, 347, 626, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 627, 628,
	359, 1389, 267, 1390, 0, 0, 0, 0, 360, 361,
	362, 629, 0, 0, 0, 363, 1391, 364, 365, 1392,
	1393, 1156, 366, 367, 630, 631, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 1394, 377, 632, 1395, 633,
	378, 1396, 379, 380, 381, 382, 383, 634, 635, 636,
	460, 1158, 384, 385, 1397, 386, 387, 388, 389, 0,
	0, 0, 268, 390, 391, 392, 394, 1398, 1157, 393,
	637, 638, 1399, 639, 1400, 395, 396, 1159, 640, 1160,
	397, 398, 399, 1161, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 1401, 407, 409, 408, 1402, 410,
	641, 1162, 411, 412, 1163, 1403, 413, 0, 0, 0,
	414, 415, 418, 1404, 1405, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 1164, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 1165, 447, 1406,
	269, 1166, 457, 458, 1407, 642, 459, 643, 461, 462,
	1408, 0, 463, 0, 1409, 1410, 465, 466, 467, 1411,
	1412, 468, 469, 644, 1167, 470, 1168, 645, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 1413,
	481, 482, 646, 483, 484, 485, 647, 486, 487, 488,
	648, 489, 649, 490, 491, 1414, 492, 493, 0, 494,
	495, 496, 497, 498, 499, 500, 650, 501, 503, 502,
	504, 1415, 505, 0, 506, 507, 508, 0, 0, 0,
	0, 509, 0, 511, 512, 513, 514, 510, 515, 516,
	517, 518, 1416, 519, 520, 521, 1169, 522, 523, 524,
	525, 651, 526, 0, 527, 528, 534, 535, 529, 530,
	536, 537, 538, 539, 540, 1417, 542, 543, 541, 544,
	545, 546, 1418, 547, 548, 531, 532, 549, 550, 1170,
	551, 552, 553, 554, 555, 556, 652, 0, 557, 1419,
	558, 559, 560, 562, 533, 563, 568, 569, 653, 564,
	565, 566, 567, 654, 571, 572, 1420, 573, 574, 0,
	570, 561, 1421, 575, 576, 577, 578, 579, 580, 581,
	353, 582, 1422, 583, 655, 656, 657, 658, 1423, 592,
	1424, 584, 585, 586, 659, 587, 660, 1425, 588, 589,
	590, 591, 0, 593, 594, 1426, 1427, 595, 596, 597,
	599, 600, 598, 601, 1428, 602, 1429, 0, 603, 604,
	605, 661, 662, 663, 1430, 607, 606, 608, 664, 1431,
	1432, 1433, 1434, 1435, 609, 610, 665, 611, 612, 613,
	1447, 0, 1351, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2165, 0, 270,
	272, 271, 273, 274, 275, 276, 1356, 277, 278, 1357,
	1358, 1359, 0, 1360, 614, 1361, 1362, 1363, 1364, 279,
	280, 1154, 281, 282, 283, 284, 285, 286, 615, 616,
	0, 287, 617, 288, 618, 1365, 619, 289, 290, 291,
	292, 293, 294, 1366, 1367, 0, 295, 620, 621, 622,
	1368, 296, 297, 623, 1369, 1298, 1370, 298, 299, 300,
	301, 302, 303, 304, 0, 1371, 306, 307, 308, 305,
	309, 1372, 310, 0, 311, 312, 313, 314, 315, 316,
	1373, 317, 318, 319, 1155, 320, 321, 322, 1374, 1375,
	1377, 1376, 1378, 1379, 1380, 323, 324, 325, 326, 327,
	0, 328, 624, 625, 1381, 332, 329, 330, 1382, 333,
	331, 334, 1383, 335, 336, 337, 1384, 1385, 338, 339,
	340, 1386, 341, 342, 1387, 343, 344, 345, 1388, 346,
	347, 626, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 627, 628, 359, 1389, 267, 1390, 0, 0,
	0, 0, 360, 361, 362, 629, 0, 0, 0, 363,
	1391, 364, 365, 1392, 1393, 1156, 366, 367, 630, 631,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 1394,
	377, 632, 1395, 633, 378, 1396, 379, 380, 381, 382,
	383, 634, 635, 636, 460, 1158, 384, 385, 1397, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 1398, 1157, 393, 637, 638, 1399, 639, 1400, 395,
	396, 1159, 640, 1160, 397, 398, 399, 1161, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 1401, 407,
	409, 408, 1402, 410, 641, 1162, 411, 412, 1163, 1403,
	413, 0, 0, 0, 414, 415, 418, 1404, 1405, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 1164, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 1165, 447, 1406, 269, 1166, 457, 458, 1407, 642,
	459, 643, 461, 462, 1408, 0, 463, 0, 1409, 1410,
	465, 466, 467, 1411, 1412, 468, 469, 644, 1167, 470,
	1168, 645, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 1413, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 648, 489, 649, 490, 491, 1414,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	650, 501, 503, 502, 504, 1415, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 1416, 519, 520, 521,
	1169, 522, 523, 524, 525, 651, 526, 0, 527, 528,
	534, 535, 529, 530, 536, 537, 538, 539, 540, 1417,
	542, 543, 541, 544, 545, 546, 1418, 547, 548, 531,
	532, 549, 550, 1170, 551, 552, 553, 554, 555, 556,
	652, 0, 557, 1419, 558, 559, 560, 562, 533, 563,
	568, 569, 653, 564, 565, 566, 567, 654, 571, 572,
	1420, 573, 574, 0, 570, 561, 1421, 575, 576, 577,
	578, 579, 580, 581, 353, 582, 1422, 583, 655, 656,
	657, 658, 1423, 592, 1424, 584, 585, 586, 659, 587,
	660, 1425, 588, 589, 590, 591, 0, 593, 594, 1426,
	1427, 595, 596, 597, 599, 600, 598, 601, 1428, 602,
	1429, 0, 603, 604, 605, 661, 662, 663, 1430, 607,
	606, 608, 664, 1431, 1432, 1433, 1434, 1435, 609, 610,
	665, 611, 612, 613, 1348, 0, 1351, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	1356, 277, 278, 1357, 1358, 1359, 0, 1360, 614, 1361,
	1362, 1363, 1364, 279, 280, 1154, 281, 282, 283, 284,
	285, 286, 615, 616, 0, 287, 617, 288, 618, 1365,
	619, 289, 290, 291, 292, 293, 294, 1366, 1367, 0,
	295, 620, 621, 622, 1368, 296, 297, 623, 1369, 1298,
	1370, 298, 299, 300, 301, 302, 303, 304, 0, 1371,
	306, 307, 308, 305, 309, 1372, 310, 0, 311, 312,
	313, 314, 315, 316, 1373, 317, 318, 319, 1155, 320,
	321, 322, 1374, 1375, 1377, 1376, 1378, 1379, 1380, 323,
	324, 325, 326, 327, 0, 328, 624, 625, 1381, 332,
	329, 330, 1382, 333, 331, 334, 1383, 335, 336, 337,
	1384, 1385, 338, 339, 340, 1386, 341, 342, 1387, 343,
	344, 345, 1388, 346, 347, 626, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 627, 628, 359, 1389,
	267, 1390, 0, 0, 0, 0, 360, 361, 362, 629,
	0, 0, 0, 363, 1391, 364, 365, 1392, 1393, 1156,
	366, 367, 630, 631, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 1394, 377, 632, 1395, 633, 378, 1396,
	379, 380, 381, 382, 383, 634, 635, 636, 460, 1158,
	384, 385, 1397, 386, 387, 388, 389, 0, 0, 0,
	268, 390, 391, 392, 394, 1398, 1157, 393, 637, 638,
	1399, 639, 1400, 395, 396, 1159, 640, 1160, 397, 398,
	399, 1161, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 1401, 407, 409, 408, 1402, 410, 641, 1162,
	411, 412, 1163, 1403, 413, 0, 0, 0, 414, 415,
	418, 1404, 1405, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 1164, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 1165, 447, 1406, 269, 1166,
	457, 458, 1407, 642, 459, 643, 461, 462, 1408, 0,
	463, 0, 1409, 1410, 465, 466, 467, 1411, 1412, 468,
	469, 644, 1167, 470, 1168, 645, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 1413, 481, 482,
	646, 483, 484, 485, 647, 486, 487, 488, 648, 489,
	649, 490, 491, 1414, 492, 493, 0, 494, 495, 496,
	497, 498, 499, 500, 650, 501, 503, 502, 504, 1415,
	505, 0, 506, 507, 508, 0, 0, 0, 0, 509,
	0, 511, 512, 513, 514, 510, 515, 516, 517, 518,
	1416, 519, 520, 521, 1169, 522, 523, 524, 525, 651,
	526, 0, 527, 528, 534, 535, 529, 530, 536, 537,
	538, 539, 540, 1417, 542, 543, 541, 544, 545, 546,
	1418, 547, 548, 531, 532, 549, 550, 1170, 551, 552,
	553, 554, 555, 556, 652, 0, 557, 1419, 558, 559,
	560, 562, 533, 563, 568, 569, 653, 564, 565, 566,
	567, 654, 571, 572, 1420, 573, 574, 0, 570, 561,
	1421, 575, 576, 577, 578, 579, 580, 581, 353, 582,
	1422, 583, 655, 656, 657, 658, 1423, 592, 1424, 584,
	585, 586, 659, 587, 660, 1425, 588, 589, 590, 591,
	0, 593, 594, 1426, 1427, 595, 596, 597, 599, 600,
	598, 601, 1428, 602, 1429, 0, 603, 604, 605, 661,
	662, 663, 1430, 607, 606, 608, 664, 1431, 1432, 1433,
	1434, 1435, 609, 610, 665, 611, 612, 613, 1351, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 1356, 277, 278, 1357, 1358, 1359, 0, 1360,
	614, 1361, 1362, 1363, 1364, 279, 280, 1154, 281, 282,
	283, 284, 285, 286, 615, 616, 0, 287, 617, 288,
	618, 1365, 619, 289, 290, 291, 292, 293, 294, 1366,
	1367, 0, 295, 620, 621, 622, 1368, 296, 297, 623,
	1369, 1298, 1370, 298, 299, 300, 301, 302, 303, 304,
	0, 1371, 306, 307, 308, 305, 309, 1372, 310, 0,
	311, 312, 313, 314, 315, 316, 1373, 317, 318, 319,
	1155, 320, 321, 322, 1374, 1375, 1377, 1376, 1378, 1379,
	1380, 323, 324, 325, 326, 327, 0, 328, 624, 625,
	1381, 332, 329, 330, 1382, 333, 331, 334, 1383, 335,
	336, 337, 1384, 1385, 338, 339, 340, 1386, 341, 342,
	1387, 343, 344, 345, 1388, 346, 347, 626, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 627, 628,
	359, 1389, 267, 1390, 0, 0, 0, 0, 360, 361,
	362, 629, 0, 0, 0, 363, 1391, 364, 365, 1392,
	1393, 1156, 366, 367, 630, 631, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 1394, 377, 632, 1395, 633,
	378, 1396, 379, 380, 381, 382, 383, 634, 635, 636,
	460, 1158, 384, 385, 1397, 386, 387, 388, 389, 0,
	0, 0, 268, 390, 391, 392, 394, 1398, 1157, 393,
	637, 638, 1399, 639, 1400, 395, 396, 1159, 640, 1160,
	397, 398, 399, 1161, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 1401, 407, 409, 408, 1402, 410,
	641, 1162, 411, 412, 1163, 1403, 413, 0, 0, 0,
	414, 415, 418, 1404, 1405, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 1164, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 1165, 447, 1406,
	269, 1166, 457, 458, 1407, 642, 459, 643, 461, 462,
	1408, 0, 463, 0, 1409, 1410, 465, 466, 467, 1411,
	1412, 468, 469, 644, 1167, 470, 1168, 645, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 1413,
	481, 482, 646, 483, 484, 485, 647, 486, 487, 488,
	648, 489, 649, 490, 491, 1414, 492, 493, 0, 494,
	495, 496, 497, 498, 499, 500, 650, 501, 503, 502,
	504, 1415, 505, 0, 506, 507, 508, 0, 0, 0,
	0, 509, 0, 511, 512, 513, 514, 510, 515, 516,
	517, 518, 1416, 519, 520, 521, 1169, 522, 523, 524,
	525, 651, 526, 0, 527, 528, 534, 535, 529, 530,
	536, 537, 538, 539, 540, 1417, 542, 543, 541, 544,
	545, 546, 1418, 547, 548, 531, 532, 549, 550, 1170,
	551, 552, 553, 554, 555, 556, 652, 0, 557, 1419,
	558, 559, 560, 562, 533, 563, 568, 569, 653, 564,
	565, 566, 567, 654, 571, 572, 1420, 573, 574, 0,
	570, 561, 1421, 575, 576, 577, 578, 579, 580, 581,
	353, 582, 1422, 583, 655, 656, 657, 658, 1423, 592,
	1424, 584, 585, 586, 659, 587, 660, 1425, 588, 589,
	590, 591, 0, 593, 594, 1426, 1427, 595, 596, 597,
	599, 600, 598, 601, 1428, 602, 1429, 0, 603, 604,
	605, 661, 662, 663, 1430, 607, 606, 608, 664, 1431,
	1432, 1433, 1434, 1435, 609, 610, 665, 611, 612, 613,
	2453, 0, 1090, 1062, 1063, 1064, 1060, 1061, 1073, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 2450, 277, 278, 0,
	0, 0, 0, 0, 1114, 1078, 0, 0, 0, 279,
	280, 1154, 281, 282, 283, 284, 285, 286, 615, 1127,
	0, 287, 1134, 288, 1133, 0, 1144, 289, 290, 291,
	292, 293, 294, 1080, 1113, 1047, 295, 1174, 1175, 622,
	0, 296, 297, 1120, 0, 1101, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 1155, 320, 321, 322, 1104, 1102,
	1103, 1110, 1106, 1105, 1109, 323, 324, 325, 326, 327,
	1137, 328, 1131, 1130, 1051, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 2451, 0, 338, 1122,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 1057, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 1145, 1146, 359, 1069, 267, 0, 0, 0,
	0, 0, 360, 361, 362, 1129, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 1156, 366, 367, 1142, 1143,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 1152, 0, 1079, 378, 0, 379, 380, 381, 382,
	383, 1115, 1116, 1119, 460, 1158, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 0, 1157, 393, 1124, 1125, 0, 1085, 0, 395,
	396, 1159, 1117, 1160, 397, 398, 399, 1161, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 1153, 1162, 411, 412, 1163, 0,
	413, 0, 0, 0, 414, 415, 418, 1108, 1107, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 1164, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 1165, 447, 1048, 269, 1166, 457, 458, 1070, 1118,
	459, 1132, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 644, 1167, 470,
	1168, 1147, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 1148, 489, 649, 490, 491, 0,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	1128, 501, 503, 502, 504, 0, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 0, 519, 520, 521,
	1169, 522, 523, 524, 525, 1058, 526, 0, 527, 528,
	534, 535, 529, 530, 536, 537, 538, 539, 540, 0,
	542, 543, 541, 544, 545, 546, 1111, 547, 548, 531,
	532, 549, 550, 1170, 551, 552, 553, 554, 555, 556,
	1126, 0, 557, 0, 558, 559, 560, 562, 533, 563,
	568, 569, 1173, 564, 565, 566, 567, 1149, 571, 572,
	0, 573, 574, 1046, 570, 561, 0, 575, 576, 577,
	578, 579, 580, 581, 353, 582, 0, 583, 1138, 1139,
	1140, 1141, 0, 592, 0, 584, 585, 586, 1150, 587,
	1151, 1068, 588, 589, 590, 591, 0, 593, 594, 0,
	1052, 595, 596, 597, 599, 600, 598, 601, 1112, 602,
	0, 0, 603, 604, 605, 661, 1135, 1172, 2449, 607,
	606, 608, 664, 0, 0, 0, 0, 0, 609, 610,
	665, 611, 612, 613, 1049, 0, 0, 0, 0, 0,
	0, 0, 1045, 0, 0, 0, 0, 0, 0, 1043,
	1044, 2452, 0, 0, 0, 0, 0, 0, 1074, 2448,
	0, 1036, 1072, 1090, 1062, 1063, 1064, 1060, 1061, 1073,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 1114, 1078, 0, 0, 0,
	279, 280, 1154, 281, 282, 283, 284, 285, 286, 615,
	1127, 0, 287, 1134, 288, 1133, 0, 1144, 289, 290,
	291, 292, 293, 294, 1080, 1113, 1047, 295, 1174, 1175,
	622, 0, 296, 297, 1120, 0, 1101, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 1155, 320, 321, 322, 1104,
	1102, 1103, 1110, 1106, 1105, 1109, 323, 324, 325, 326,
	327, 1137, 328, 1131, 1130, 1051, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	1122, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 1057, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 1145, 1146, 359, 1069, 267, 0, 0,
	0, 0, 0, 360, 361, 362, 1129, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 1156, 366, 367, 1142,
	1143, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 1152, 0, 1079, 378, 0, 379, 380, 381,
	382, 383, 1115, 1116, 1119, 460, 1158, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 0, 1157, 393, 1124, 1125, 0, 1085, 0,
	395, 396, 1159, 1117, 1160, 397, 398, 399, 1161, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 1153, 1162, 411, 412, 1163,
	0, 413, 0, 0, 0, 414, 415, 418, 1108, 1107,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 1164,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 1165, 447, 1048, 269, 1166, 457, 458, 1070,
	1118, 459, 1132, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 644, 1167,
	470, 1168, 1147, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 1148, 489, 649, 490, 491,
	0, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 1128, 501, 503, 502, 504, 0, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 0, 519, 520,
	521, 1169, 522, 523, 524, 525, 1058, 526, 0, 527,
	528, 534, 535, 529, 530, 536, 537, 538, 539, 540,
	229, 542, 543, 541, 544, 545, 546, 1111, 547, 548,
	531, 532, 549, 550, 1170, 551, 552, 553, 554, 555,
	556, 1126, 0, 557, 0, 558, 559, 560, 562, 533,
	563, 568, 569, 1173, 564, 565, 566, 567, 1149, 571,
	572, 0, 573, 574, 1046, 570, 561, 231, 575, 576,
	577, 578, 579, 580, 581, 353, 582, 0, 583, 1138,
	1139, 1140, 1141, 0, 592, 0, 584, 585, 586, 1150,
	587, 1151, 1068, 588, 589, 590, 591, 0, 593, 594,
	0, 1052, 595, 596, 597, 599, 600, 598, 601, 1112,
	602, 0, 0, 603, 604, 605, 1567, 1135, 1172, 0,
	607, 606, 608, 664, 0, 0, 0, 0, 223, 609,
	610, 665, 611, 612, 613, 1049, 0, 224, 0, 0,
	0, 0, 0, 1045, 0, 0, 0, 0, 0, 0,
	1043, 1044, 1090, 1062, 1063, 1064, 1060, 1061, 1073, 1811,
	1809, 0, 0, 1072, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 1114, 1078, 0, 0, 0, 279,
	280, 1154, 281, 282, 283, 284, 285, 286, 615, 1127,
	0, 287, 1134, 288, 1133, 0, 1144, 289, 290, 291,
	292, 293, 294, 1080, 1113, 1047, 295, 1174, 1175, 622,
	0, 296, 297, 1120, 0, 1101, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 1155, 320, 321, 322, 1104, 1102,
	1103, 1110, 1106, 1105, 1109, 323, 324, 325, 326, 327,
	1137, 328, 1131, 1130, 1051, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 1122,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 1057, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 1145, 1146, 359, 1069, 267, 0, 0, 0,
	0, 0, 360, 361, 362, 1129, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 1156, 366, 367, 1142, 1143,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 1152, 0, 1079, 378, 0, 379, 380, 381, 382,
	383, 1115, 1116, 1119, 460, 1158, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 0, 1157, 393, 1124, 1125, 0, 1085, 0, 395,
	396, 1159, 1117, 1160, 397, 398, 399, 1161, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 1153, 1162, 411, 412, 1163, 0,
	413, 0, 0, 0, 414, 415, 418, 1108, 1107, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 1164, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 1165, 447, 1048, 269, 1166, 457, 458, 1070, 1118,
	459, 1132, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 644, 1167, 470,
	1168, 1147, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 1148, 489, 649, 490, 491, 0,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	1128, 501, 503, 502, 504, 0, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 0, 519, 520, 521,
	1169, 522, 523, 524, 525, 1058, 526, 0, 527, 528,
	534, 535, 529, 530, 536, 537, 538, 539, 540, 229,
	542, 543, 541, 544, 545, 546, 1111, 547, 548, 531,
	532, 549, 550, 1170, 551, 552, 553, 554, 555, 556,
	1126, 0, 557, 0, 558, 559, 560, 562, 533, 563,
	568, 569, 1173, 564, 565, 566, 567, 1149, 571, 572,
	0, 573, 574, 1046, 570, 561, 231, 575, 576, 577,
	578, 579, 580, 581, 353, 582, 0, 583, 1138, 1139,
	1140, 1141, 0, 592, 0, 584, 585, 586, 1150, 587,
	1151, 1068, 588, 589, 590, 591, 0, 593, 594, 0,
	1052, 595, 596, 597, 599, 600, 598, 601, 1112, 602,
	0, 0, 603, 604, 605, 1567, 1135, 1172, 0, 607,
	606, 608, 664, 0, 0, 0, 0, 223, 609, 610,
	665, 611, 612, 613, 1049, 0, 224, 0, 0, 0,
	0, 0, 1045, 0, 0, 0, 0, 0, 0, 1043,
	1044, 1090, 1062, 1063, 1064, 1060, 1061, 1073, 1811, 3056,
	0, 0, 1072, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 1114, 1078, 0, 0, 0, 279, 280,
	1154, 281, 282, 283, 284, 285, 286, 615, 1127, 0,
	287, 1134, 288, 1133, 0, 1144, 289, 290, 291, 292,
	293, 294, 1080, 1113, 1047, 295, 1174, 1175, 622, 0,
	296, 297, 1120, 0, 1101, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 1155, 320, 321, 322, 1104, 1102, 1103,
	1110, 1106, 1105, 1109, 323, 324, 325, 326, 327, 1137,
	328, 1131, 1130, 1051, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 1122, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	1057, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 1145, 1146, 359, 1069, 267, 0, 0, 0, 0,
	0, 360, 361, 362, 1129, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 1156, 366, 367, 1142, 1143, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	1152, 0, 1079, 378, 0, 379, 380, 381, 382, 383,
	1115, 1116, 1119, 460, 1158, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	0, 1157, 393, 1124, 1125, 0, 1085, 0, 395, 396,
	1159, 1117, 1160, 397, 398, 399, 1161, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 1153, 1162, 411, 412, 1163, 0, 413,
	0, 0, 0, 414, 415, 418, 1108, 1107, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 1164, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	1165, 447, 1048, 269, 1166, 457, 458, 1070, 1118, 459,
	1132, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 644, 1167, 470, 1168,
	1147, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 482, 646, 483, 484, 485, 647,
	486, 487, 488, 1148, 489, 649, 490, 491, 0, 492,
	493, 0, 494, 495, 496, 497, 498, 499, 500, 1128,
	501, 503, 502, 504, 0, 505, 0, 506, 507, 508,
	0, 0, 0, 0, 509, 0, 511, 512, 513, 514,
	510, 515, 516, 517, 518, 0, 519, 520, 521, 1169,
	522, 523, 524, 525, 1058, 526, 0, 527, 528, 534,
	535, 529, 530, 536, 537, 538, 539, 540, 229, 542,
	543, 541, 544, 545, 546, 1111, 547, 548, 531, 532,
	549, 550, 1170, 551, 552, 553, 554, 555, 556, 1126,
	0, 557, 0, 558, 559, 560, 562, 533, 563, 568,
	569, 1173, 564, 565, 566, 567, 1149, 571, 572, 0,
	573, 574, 1046, 570, 561, 231, 575, 576, 577, 578,
	579, 580, 581, 353, 582, 0, 583, 1138, 1139, 1140,
	1141, 0, 592, 0, 584, 585, 586, 1150, 587, 1151,
	1068, 588, 589, 590, 591, 0, 593, 594, 0, 1052,
	595, 596, 597, 599, 600, 598, 601, 1112, 602, 0,
	0, 603, 604, 605, 1567, 1135, 1172, 0, 607, 606,
	608, 664, 0, 0, 0, 0, 223, 609, 610, 665,
	611, 612, 613, 1049, 0, 224, 0, 0, 0, 0,
	0, 1045, 0, 0, 0, 0, 0, 0, 1043, 1044,
	1090, 1062, 1063, 1064, 1060, 1061, 1073, 1811, 1809, 0,
	0, 1072, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 1114, 1078, 0, 0, 0, 279, 280, 1154,
	281, 282, 283, 284, 285, 286, 615, 1127, 0, 287,
	1134, 288, 1133, 2581, 1144, 289, 290, 291, 292, 293,
	294, 1080, 1113, 1047, 295, 1174, 1175, 622, 0, 296,
	297, 1120, 0, 1101, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 1155, 320, 321, 322, 1104, 1102, 1103, 1110,
	1106, 1105, 1109, 323, 324, 325, 326, 327, 1137, 328,
	1131, 1130, 1051, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 1122, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 1057,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	1145, 1146, 359, 1069, 267, 0, 0, 0, 0, 0,
	360, 361, 362, 1129, 0, 0, 0, 363, 0, 364,
	365, 0, 2586, 1156, 366, 367, 1142, 1143, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 1152,
	0, 1079, 378, 0, 379, 380, 381, 382, 383, 1115,
	1116, 1119, 460, 1158, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 268, 390, 391, 392, 394, 0,
	1157, 393, 1124, 1125, 0, 1085, 0, 395, 396, 1159,
	1117, 1160, 397, 398, 399, 1161, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	2582, 410, 1153, 1162, 411, 412, 1163, 0, 413, 0,
	0, 0, 414, 415, 418, 1108, 1107, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 1164, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 1165,
	447, 1048, 269, 1166, 457, 458, 1070, 1118, 459, 1132,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 644, 1167, 470, 1168, 1147,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 482, 646, 483, 484, 485, 647, 486,
	487, 488, 1148, 489, 649, 490, 491, 0, 492, 493,
	0, 494, 495, 496, 497, 498, 499, 500, 1128, 501,
	503, 502, 504, 0, 505, 0, 506, 507, 508, 0,
	0, 0, 0, 509, 0, 511, 512, 513, 514, 510,
	515, 516, 517, 518, 0, 519, 520, 521, 1169, 522,
	523, 524, 525, 1058, 526, 0, 527, 528, 534, 535,
	529, 530, 536, 537, 538, 539, 540, 0, 542, 543,
	541, 544, 545, 546, 1111, 547, 548, 531, 532, 549,
	550, 1170, 551, 552, 553, 554, 555, 556, 1126, 0,
	557, 0, 558, 559, 560, 562, 533, 563, 568, 569,
	1173, 564, 565, 566, 567, 1149, 571, 572, 0, 573,
	574, 1046, 570, 561, 0, 575, 576, 577, 578, 579,
	580, 581, 353, 582, 0, 583, 1138, 1139, 1140, 1141,
	0, 592, 2583, 584, 585, 586, 1150, 587, 1151, 1068,
	588, 589, 590, 591, 0, 593, 594, 0, 1052, 595,
	596, 597, 599, 600, 598, 601, 1112, 602, 0, 0,
	603, 604, 605, 661, 1135, 1172, 0, 607, 606, 608,
	664, 0, 0, 0, 0, 0, 609, 610, 665, 611,
	612, 613, 1049, 0, 0, 0, 0, 0, 0, 0,
	1045, 0, 0, 0, 0, 0, 0, 1043, 1044, 0,
	0, 0, 0, 0, 0, 0, 1074, 0, 0, 2498,
	1072, 1090, 1062, 1063, 1064, 1060, 1061, 1073, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 1114, 1078, 0, 0, 0, 279, 280,
	1154, 281, 282, 283, 284, 285, 286, 615, 1127, 0,
	287, 1134, 288, 1133, 0, 1144, 289, 290, 291, 292,
	293, 294, 1080, 1113, 1047, 295, 1174, 1175, 622, 0,
	296, 297, 1120, 0, 1101, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 1155, 320, 321, 322, 1104, 1102, 1103,
	1110, 1106, 1105, 1109, 323, 324, 325, 326, 327, 1137,
	328, 1131, 1130, 1051, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 1122, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	1057, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 1145, 1146, 359, 1069, 267, 0, 0, 0, 0,
	0, 360, 361, 362, 1129, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 1156, 366, 367, 1142, 1143, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	1152, 0, 1079, 378, 0, 379, 380, 381, 382, 383,
	1115, 1116, 1119, 460, 1158, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	0, 1157, 393, 1124, 1125, 0, 1085, 0, 395, 396,
	1159, 1117, 1160, 397, 398, 399, 1161, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 1153, 1162, 411, 412, 1163, 0, 413,
	0, 0, 0, 414, 415, 418, 1108, 1107, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 1164, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	1165, 447, 1048, 269, 1166, 457, 458, 1070, 1118, 459,
	1132, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 644, 1167, 470, 1168,
	1147, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 482, 646, 483, 484, 485, 647,
	486, 487, 488, 1148, 489, 649, 490, 491, 0, 492,
	493, 0, 494, 495, 496, 497, 498, 499, 500, 1128,
	501, 503, 502, 504, 0, 505, 0, 506, 507, 508,
	0, 0, 0, 0, 509, 0, 511, 512, 513, 514,
	510, 515, 516, 517, 518, 0, 519, 520, 521, 1169,
	522, 523, 524, 525, 1058, 526, 0, 527, 528, 534,
	535, 529, 530, 536, 537, 538, 539, 540, 0, 542,
	543, 541, 544, 545, 546, 1111, 547, 548, 531, 532,
	549, 550, 1170, 551, 552, 553, 554, 555, 556, 1126,
	0, 557, 0, 558, 559, 560, 562, 533, 563, 568,
	569, 1173, 564, 565, 566, 567, 1149, 571, 572, 0,
	573, 574, 1046, 570, 561, 0, 575, 576, 577, 578,
	579, 580, 581, 353, 582, 0, 583, 1138, 1139, 1140,
	1141, 0, 592, 0, 584, 585, 586, 1150, 587, 1151,
	1068, 588, 589, 590, 591, 0, 593, 594, 0, 1052,
	595, 596, 597, 599, 600, 598, 601, 1112, 602, 0,
	0, 603, 604, 605, 661, 1135, 1172, 0, 607, 606,
	608, 664, 0, 0, 0, 0, 0, 609, 610, 665,
	611, 612, 613, 1049, 0, 0, 0, 0, 0, 0,
	0, 1045, 0, 0, 0, 0, 0, 0, 1043, 1044,
	0, 0, 0, 0, 0, 0, 0, 1074, 2496, 0,
	2495, 1072, 1090, 1062, 1063, 1064, 1060, 1061, 1073, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 1114, 1078, 0, 0, 0, 279,
	280, 1154, 281, 282, 283, 284, 285, 286, 615, 1127,
	0, 287, 1134, 288, 1133, 0, 1144, 289, 290, 291,
	292, 293, 294, 1080, 1113, 1047, 295, 1174, 1175, 622,
	0, 296, 297, 1120, 0, 1101, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 1155, 320, 321, 322, 1104, 1102,
	1103, 1110, 1106, 1105, 1109, 323, 324, 325, 326, 327,
	1137, 328, 1131, 1130, 1051, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 1122,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 1057, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 1145, 1146, 359, 1069, 267, 0, 0, 0,
	0, 0, 360, 361, 362, 1129, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 1156, 366, 367, 1142, 1143,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 1152, 0, 1079, 378, 0, 379, 380, 381, 382,
	383, 1115, 1116, 1119, 460, 1158, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 0, 1157, 393, 1124, 1125, 0, 1085, 0, 395,
	396, 1159, 1117, 1160, 397, 398, 399, 1161, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 1153, 1162, 411, 412, 1163, 0,
	413, 0, 0, 0, 414, 415, 418, 1108, 1107, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 1164, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 1165, 447, 1048, 269, 1166, 457, 458, 1070, 1118,
	459, 1132, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 644, 1167, 470,
	1168, 1147, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 1148, 489, 649, 490, 491, 0,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	1128, 501, 503, 502, 504, 0, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 0, 519, 520, 521,
	1169, 522, 523, 524, 525, 1058, 526, 0, 527, 528,
	534, 535, 529, 530, 536, 537, 538, 539, 540, 0,
	542, 543, 541, 544, 545, 546, 1111, 547, 548, 531,
	532, 549, 550, 1170, 551, 552, 553, 554, 555, 556,
	1126, 0, 557, 0, 558, 559, 560, 562, 533, 563,
	568, 569, 1173, 564, 565, 566, 567, 1149, 571, 572,
	0, 573, 574, 1046, 570, 561, 0, 575, 576, 577,
	578, 579, 580, 581, 353, 582, 0, 583, 1138, 1139,
	1140, 1141, 0, 592, 0, 584, 585, 586, 1150, 587,
	1151, 1068, 588, 589, 590, 591, 0, 593, 594, 0,
	1052, 595, 596, 597, 599, 600, 598, 601, 1112, 602,
	0, 0, 603, 604, 605, 661, 1135, 1172, 0, 607,
	606, 608, 664, 0, 0, 0, 0, 0, 609, 610,
	665, 611, 612, 613, 1049, 0, 0, 0, 0, 0,
	0, 0, 1045, 0, 0, 0, 0, 0, 0, 1043,
	1044, 0, 0, 0, 0, 0, 0, 0, 1074, 2493,
	0, 2492, 1072, 1090, 1062, 1063, 1064, 1060, 1061, 1073,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 1114, 1078, 0, 0, 0,
	279, 280, 1154, 281, 282, 283, 284, 285, 286, 615,
	1127, 0, 287, 1134, 288, 1133, 0, 1144, 289, 290,
	291, 292, 293, 294, 1080, 1113, 1047, 295, 1174, 1175,
	622, 0, 296, 297, 1120, 0, 1101, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 1155, 320, 321, 322, 1104,
	1102, 1103, 1110, 1106, 1105, 1109, 323, 324, 325, 326,
	327, 1137, 328, 1131, 1130, 1051, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	1122, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 1057, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 1145, 1146, 359, 1069, 267, 0, 0,
	0, 0, 0, 360, 361, 362, 1129, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 1156, 366, 367, 1142,
	1143, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 1152, 0, 1079, 378, 0, 379, 380, 381,
	382, 383, 1115, 1116, 1119, 460, 1158, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 0, 1157, 393, 1124, 1125, 0, 1085, 0,
	395, 396, 1159, 1117, 1160, 397, 398, 399, 1161, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 1153, 1162, 411, 412, 1163,
	0, 413, 0, 0, 0, 414, 415, 418, 1108, 1107,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 1164,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 1165, 447, 1048, 269, 1166, 457, 458, 1070,
	1118, 459, 1132, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 644, 1167,
	470, 1168, 1147, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 1148, 489, 649, 490, 491,
	0, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 1128, 501, 503, 502, 504, 0, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 0, 519, 520,
	521, 1169, 522, 523, 524, 525, 1058, 526, 0, 527,
	528, 534, 535, 529, 530, 536, 537, 538, 539, 540,
	0, 542, 543, 541, 544, 545, 546, 1111, 547, 548,
	531, 532, 549, 550, 1170, 551, 552, 553, 554, 555,
	556, 1126, 0, 557, 0, 558, 559, 560, 562, 533,
	563, 568, 569, 1173, 564, 565, 566, 567, 1149, 571,
	572, 0, 573, 574, 1046, 570, 561, 0, 575, 576,
	577, 578, 579, 580, 581, 353, 582, 0, 583, 1138,
	1139, 1140, 1141, 0, 592, 0, 584, 585, 586, 1150,
	587, 1151, 1068, 588, 589, 590, 591, 0, 593, 594,
	0, 1052, 595, 596, 597, 599, 600, 598, 601, 1112,
	602, 0, 0, 603, 604, 605, 661, 1135, 1172, 0,
	607, 606, 608, 664, 0, 0, 0, 0, 0, 609,
	610, 665, 611, 612, 613, 1049, 0, 0, 0, 0,
	0, 0, 0, 1045, 0, 0, 0, 0, 0, 0,
	1043, 1044, 0, 0, 0, 0, 0, 0, 0, 1074,
	2490, 0, 2489, 1072, 1090, 1062, 1063, 1064, 1060, 1061,
	1073, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 1114, 1078, 0, 0,
	0, 279, 280, 1154, 281, 282, 283, 284, 285, 286,
	615, 1127, 0, 287, 1134, 288, 1133, 0, 1144, 289,
	290, 291, 292, 293, 294, 1080, 1113, 1047, 295, 1174,
	1175, 622, 0, 296, 297, 1120, 0, 1101, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 1155, 320, 321, 322,
	1104, 1102, 1103, 1110, 1106, 1105, 1109, 323, 324, 325,
	326, 327, 1137, 328, 1131, 1130, 1051, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 1122, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 1057, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 1145, 1146, 359, 1069, 267, 0,
	0, 0, 0, 0, 360, 361, 362, 1129, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 1156, 366, 367,
	1142, 1143, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 1152, 0, 1079, 378, 0, 379, 380,
	381, 382, 383, 1115, 1116, 1119, 460, 1158, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 1157, 393, 1124, 1125, 0, 1085,
	0, 395, 396, 1159, 1117, 1160, 397, 398, 399, 1161,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 1153, 1162, 411, 412,
	1163, 0, 413, 0, 0, 0, 414, 415, 418, 1108,
	1107, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	1164, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 1165, 447, 1048, 269, 1166, 457, 458,
	1070, 1118, 459, 1132, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 644,
	1167, 470, 1168, 1147, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 482, 646, 483,
	484, 485, 647, 486, 487, 488, 1148, 489, 649, 490,
	491, 0, 492, 493, 0, 494, 495, 496, 497, 498,
	499, 500, 1128, 501, 503, 502, 504, 0, 505, 0,
	506, 507, 508, 0, 0, 0, 0, 509, 0, 511,
	512, 513, 514, 510, 515, 516, 517, 518, 0, 519,
	520, 521, 1169, 522, 523, 524, 525, 1058, 526, 0,
	527, 528, 534, 535, 529, 530, 536, 537, 538, 539,
	540, 0, 542, 543, 541, 544, 545, 546, 1111, 547,
	548, 531, 532, 549, 550, 1170, 551, 552, 553, 554,
	555, 556, 1126, 0, 557, 0, 558, 559, 560, 562,
	533, 563, 568, 569, 1173, 564, 565, 566, 567, 1149,
	571, 572, 0, 573, 574, 1046, 570, 561, 0, 575,
	576, 577, 578, 579, 580, 581, 353, 582, 0, 583,
	1138, 1139, 1140, 1141, 0, 592, 0, 584, 585, 586,
	1150, 587, 1151, 1068, 588, 589, 590, 591, 0, 593,
	594, 0, 1052, 595, 596, 597, 599, 600, 598, 601,
	1112, 602, 0, 0, 603, 604, 605, 661, 1135, 1172,
	0, 607, 606, 608, 664, 0, 0, 0, 0, 0,
	609, 610, 665, 611, 612, 613, 1049, 0, 0, 0,
	0, 0, 0, 0, 1045, 0, 0, 0, 0, 0,
	0, 1043, 1044, 0, 0, 0, 0, 0, 0, 0,
	1074, 2487, 0, 1660, 1072, 1090, 1062, 1063, 1064, 1060,
	1061, 1073, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 1114, 1078, 0,
	0, 0, 279, 280, 1154, 281, 282, 283, 284, 285,
	286, 615, 1127, 0, 287, 1134, 288, 1133, 0, 1144,
	289, 290, 291, 292, 293, 294, 1080, 1113, 1047, 295,
	1174, 1175, 622, 0, 296, 297, 1120, 0, 1101, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 1155, 320, 321,
	322, 1104, 1102, 1103, 1110, 1106, 1105, 1109, 323, 324,
	325, 326, 327, 1137, 328, 1131, 1130, 1051, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 1122, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 1057, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 1145, 1146, 359, 1069, 267,
	0, 0, 0, 0, 0, 360, 361, 362, 1129, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 1156, 366,
	367, 1142, 1143, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 1152, 0, 1079, 378, 0, 379,
	380, 381, 382, 383, 1115, 1116, 1119, 460, 1158, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 0, 1157, 393, 1124, 1125, 0,
	1085, 0, 395, 396, 1159, 1117, 1160, 397, 398, 399,
	1161, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 1153, 1162, 411,
	412, 1163, 0, 413, 0, 0, 0, 414, 415, 418,
	1108, 1107, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 1164, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 1165, 447, 1048, 269, 1166, 457,
	458, 1070, 1118, 459, 1132, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	644, 1167, 470, 1168, 1147, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 1148, 489, 649,
	490, 491, 0, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 1128, 501, 503, 502, 504, 0, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 0,
	519, 520, 521, 1169, 522, 523, 524, 525, 1058, 526,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 0, 542, 543, 541, 544, 545, 546, 1111,
	547, 548, 531, 532, 549, 550, 1170, 551, 552, 553,
	554, 555, 556, 1126, 0, 557, 0, 558, 559, 560,
	562, 533, 563, 568, 569, 1173, 564, 565, 566, 567,
	1149, 571, 572, 0, 573, 574, 1046, 570, 561, 0,
	575, 576, 577, 578, 579, 580, 581, 353, 582, 0,
	583, 1138, 1139, 1140, 1141, 0, 592, 0, 584, 585,
	586, 1150, 587, 1151, 1068, 588, 589, 590, 591, 0,
	593, 594, 0, 1052, 595, 596, 597, 599, 600, 598,
	601, 1112, 602, 0, 0, 603, 604, 605, 661, 1135,
	1172, 0, 607, 606, 608, 664, 0, 1659, 0, 0,
	0, 609, 610, 665, 611, 612, 613, 1049, 0, 0,
	0, 0, 0, 0, 0, 1045, 0, 0, 0, 0,
	0, 0, 1043, 1044, 0, 0, 0, 0, 0, 0,
	0, 1074, 0, 0, 1039, 1072, 1090, 1062, 1063, 1064,
	1060, 1061, 1073, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 1114, 1078,
	0, 0, 0, 279, 280, 1154, 281, 282, 283, 284,
	285, 286, 615, 1127, 0, 287, 1134, 288, 1133, 0,
	1144, 289, 290, 291, 292, 293, 294, 1080, 1113, 1047,
	295, 1174, 1175, 622, 0, 296, 297, 1120, 0, 1101,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 1155, 320,
	321, 322, 1104, 1102, 1103, 1110, 1106, 1105, 1109, 323,
	324, 325, 326, 327, 1137, 328, 1131, 1130, 1051, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 1122, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 1057, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 1145, 1146, 359, 1069,
	267, 0, 0, 0, 0, 0, 360, 361, 362, 1129,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 1156,
	366, 367, 1142, 1143, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 1152, 0, 1079, 378, 0,
	379, 380, 381, 382, 383, 1115, 1116, 1119, 460, 1158,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	268, 390, 391, 392, 394, 0, 1157, 393, 1124, 1125,
	0, 1085, 0, 395, 396, 1159, 1117, 1160, 397, 398,
	399, 1161, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 1153, 1162,
	411, 412, 1163, 0, 413, 0, 0, 0, 414, 415,
	418, 1108, 1107, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 1164, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 1165, 447, 1048, 269, 1166,
	457, 458, 1070, 1118, 459, 1132, 461, 462, 0, 0,
	463, 0, 1053, 0, 465, 466, 467, 0, 0, 468,
	469, 644, 1167, 470, 1168, 1147, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 482,
	646, 483, 484, 485, 647, 486, 487, 488, 1148, 489,
	649, 490, 491, 0, 492, 493, 0, 494, 495, 496,
	497, 498, 499, 500, 1128, 501, 503, 502, 504, 0,
	505, 0, 506, 507, 508, 0, 0, 0, 0, 509,
	0, 511, 512, 513, 514, 510, 515, 516, 517, 518,
	0, 519, 520, 521, 1169, 522, 523, 524, 525, 1058,
	526, 0, 527, 528, 534, 535, 529, 530, 536, 537,
	538, 539, 540, 0, 542, 543, 541, 544, 545, 546,
	1111, 547, 548, 531, 532, 549, 550, 1170, 551, 552,
	553, 554, 555, 556, 1126, 0, 557, 0, 558, 559,
	560, 562, 533, 563, 568, 569, 1173, 564, 565, 566,
	567, 1149, 571, 572, 0, 573, 574, 1046, 570, 561,
	0, 575, 576, 577, 578, 579, 580, 581, 353, 582,
	0, 583, 1138, 1139, 1140, 1141, 0, 592, 0, 584,
	585, 586, 1150, 587, 1151, 1068, 588, 589, 590, 591,
	0, 593, 594, 0, 1052, 595, 596, 597, 599, 600,
	598, 601, 1112, 602, 0, 0, 603, 604, 605, 661,
	1135, 1172, 0, 607, 606, 608, 664, 0, 0, 0,
	0, 0, 609, 610, 665, 611, 612, 613, 1049, 0,
	0, 0, 0, 0, 0, 0, 1045, 0, 0, 0,
	0, 0, 0, 1043, 1044, 1090, 1062, 1063, 1064, 1060,
	1061, 1073, 1074, 0, 0, 0, 1072, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 1114, 1078, 0,
	0, 0, 279, 280, 1154, 281, 282, 283, 284, 285,
	286, 615, 1127, 0, 287, 1134, 288, 1133, 0, 1144,
	289, 290, 291, 292, 293, 294, 1080, 1113, 1047, 295,
	1174, 1175, 622, 0, 296, 297, 1120, 0, 1101, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 4419, 316, 0, 317, 318, 319, 1155, 320, 321,
	322, 1104, 1102, 1103, 1110, 1106, 1105, 1109, 323, 324,
	325, 326, 327, 1137, 328, 1131, 1130, 1051, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 1122, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 1057, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 1145, 1146, 359, 1069, 267,
	0, 0, 0, 0, 0, 360, 361, 362, 1129, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 1156, 366,
	367, 1142, 1143, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 1152, 0, 1079, 378, 0, 379,
	380, 381, 382, 383, 1115, 1116, 1119, 460, 1158, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 0, 1157, 393, 1124, 1125, 0,
	1085, 0, 395, 396, 1159, 1117, 1160, 397, 398, 399,
	1161, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 1153, 1162, 411,
	412, 1163, 0, 413, 0, 0, 0, 414, 415, 418,
	1108, 1107, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 1164, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 1165, 447, 1048, 269, 1166, 457,
	458, 1070, 1118, 459, 1132, 461, 462, 0, 0, 463,
	0, 1053, 0, 465, 466, 467, 0, 0, 468, 469,
	644, 1167, 470, 1168, 1147, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 1148, 489, 649,
	490, 491, 0, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 1128, 501, 503, 502, 504, 0, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 0,
	519, 520, 521, 1169, 522, 523, 524, 525, 1058, 526,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 0, 542, 543, 541, 544, 545, 546, 1111,
	547, 548, 531, 532, 549, 550, 1170, 551, 552, 553,
	554, 555, 556, 1126, 0, 557, 0, 558, 559, 560,
	562, 533, 563, 568, 569, 1173, 564, 565, 566, 567,
	1149, 571, 572, 0, 573, 574, 1046, 570, 561, 0,
	575, 576, 577, 578, 579, 580, 581, 353, 582, 0,
	583, 1138, 1139, 1140, 1141, 0, 592, 0, 584, 585,
	586, 1150, 587, 1151, 1068, 588, 589, 590, 591, 0,
	593, 594, 0, 1052, 595, 596, 597, 599, 600, 598,
	601, 1112, 602, 0, 0, 603, 604, 605, 661, 1135,
	1172, 0, 607, 606, 608, 664, 0, 0, 0, 0,
	0, 609, 610, 665, 611, 612, 613, 1049, 0, 0,
	0, 0, 0, 0, 0, 1045, 0, 0, 0, 0,
	0, 0, 1043, 1044, 1090, 1062, 1063, 1064, 1060, 1061,
	1073, 1074, 0, 0, 0, 1072, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 1114, 1078, 0, 0,
	0, 279, 280, 1154, 281, 282, 283, 284, 285, 286,
	615, 1127, 0, 287, 1134, 288, 1133, 0, 1144, 289,
	290, 291, 292, 293, 294, 1080, 1113, 1047, 295, 1174,
	1175, 622, 0, 296, 297, 1120, 0, 1101, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 1155, 320, 321, 322,
	1104, 1102, 1103, 1110, 1106, 1105, 1109, 323, 324, 325,
	326, 327, 1137, 328, 1131, 1130, 1051, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 1122, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 1057, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 1145, 1146, 359, 1069, 267, 0,
	0, 0, 0, 0, 360, 361, 362, 1129, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 1156, 366, 367,
	1142, 1143, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 1152, 0, 1079, 378, 0, 379, 380,
	381, 382, 383, 1115, 1116, 1119, 460, 1158, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 2367, 390,
	391, 392, 394, 0, 1157, 393, 1124, 1125, 0, 1085,
	0, 395, 396, 1159, 1117, 1160, 397, 398, 399, 1161,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 1153, 1162, 411, 412,
	1163, 0, 413, 0, 0, 0, 414, 415, 418, 1108,
	1107, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	1164, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 1165, 447, 1048, 269, 1166, 457, 458,
	1070, 1118, 459, 1132, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 644,
	1167, 470, 1168, 1147, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 482, 646, 483,
	484, 485, 647, 486, 487, 488, 1148, 489, 649, 490,
	491, 2366, 492, 493, 0, 494, 495, 496, 497, 498,
	499, 500, 1128, 501, 503, 502, 504, 0, 505, 0,
	506, 507, 508, 0, 0, 0, 0, 509, 0, 511,
	512, 513, 514, 510, 515, 516, 517, 518, 0, 519,
	520, 521, 1169, 522, 523, 524, 525, 1058, 526, 0,
	527, 528, 534, 535, 529, 530, 536, 537, 538, 539,
	540, 0, 542, 543, 541, 544, 545, 546, 1111, 547,
	548, 531, 532, 549, 550, 1170, 551, 552, 553, 554,
	555, 556, 1126, 0, 557, 0, 558, 559, 560, 562,
	533, 563, 568, 569, 1173, 564, 565, 566, 567, 1149,
	571, 572, 0, 573, 574, 1046, 570, 561, 0, 575,
	576, 577, 578, 579, 580, 581, 353, 582, 0, 583,
	1138, 1139, 1140, 1141, 0, 592, 0, 584, 585, 586,
	1150, 587, 1151, 1068, 588, 589, 590, 591, 0, 593,
	594, 0, 1052, 595, 596, 597, 599, 600, 598, 601,
	1112, 602, 0, 0, 603, 604, 605, 661, 1135, 1172,
	0, 607, 606, 608, 664, 0, 0, 0, 0, 0,
	609, 610, 665, 611, 612, 613, 1049, 0, 0, 0,
	0, 0, 0, 0, 1045, 0, 0, 0, 0, 0,
	0, 1043, 1044, 1090, 1062, 1063, 1064, 1060, 1061, 1073,
	1074, 0, 0, 0, 1072, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 1114, 1078, 0, 0, 0,
	279, 280, 1154, 281, 282, 283, 284, 285, 286, 615,
	1127, 0, 287, 1134, 288, 1133, 0, 1144, 289, 290,
	291, 292, 293, 294, 1080, 1113, 1047, 295, 1174, 1175,
	622, 0, 296, 297, 1120, 0, 1101, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 1155, 320, 321, 322, 1104,
	1102, 1103, 1110, 1106, 1105, 1109, 323, 324, 325, 326,
	327, 1137, 328, 1131, 1130, 1051, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	1122, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 1057, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 1145, 1146, 359, 1069, 267, 0, 0,
	0, 0, 0, 360, 361, 362, 1129, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 1156, 366, 367, 1142,
	1143, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 1152, 0, 1079, 378, 0, 379, 380, 381,
	382, 383, 1115, 1116, 1119, 460, 1158, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 0, 1157, 393, 1124, 1125, 0, 1085, 0,
	395, 396, 1159, 1117, 1160, 397, 398, 399, 1161, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 1153, 1162, 411, 412, 1163,
	0, 413, 0, 0, 0, 414, 415, 418, 1108, 1107,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 1164,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 1165, 447, 1048, 269, 1166, 457, 458, 1070,
	1118, 459, 1132, 461, 462, 0, 0, 463, 0, 1053,
	0, 465, 466, 467, 0, 0, 468, 469, 644, 1167,
	470, 1168, 1147, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 1148, 489, 649, 490, 491,
	0, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 1128, 501, 503, 502, 504, 0, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 0, 519, 520,
	521, 1169, 522, 523, 524, 525, 1058, 526, 0, 527,
	528, 534, 535, 529, 530, 536, 537, 538, 539, 540,
	0, 542, 543, 541, 544, 545, 546, 1111, 547, 548,
	531, 532, 549, 550, 1170, 551, 552, 553, 554, 555,
	556, 1126, 0, 557, 0, 558, 559, 560, 562, 533,
	563, 568, 569, 1173, 564, 565, 566, 567, 1149, 571,
	572, 0, 573, 574, 1046, 570, 561, 0, 575, 576,
	577, 578, 579, 580, 581, 353, 582, 0, 583, 1138,
	1139, 1140, 1141, 0, 592, 0, 584, 585, 586, 1150,
	587, 1151, 1068, 588, 589, 590, 591, 0, 593, 594,
	0, 1052, 595, 596, 597, 599, 600, 598, 601, 1112,
	602, 0, 0, 603, 604, 605, 661, 1135, 1172, 0,
	607, 606, 608, 664, 0, 0, 0, 0, 0, 609,
	610, 665, 611, 612, 613, 1049, 0, 0, 0, 0,
	0, 0, 0, 1045, 0, 0, 0, 0, 0, 0,
	1043, 1044, 1090, 1062, 1063, 1064, 1060, 1061, 1073, 1074,
	0, 0, 0, 1072, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 1114, 1078, 0, 0, 0, 279,
	280, 1154, 281, 282, 283, 284, 285, 286, 615, 1127,
	0, 287, 1134, 288, 1133, 0, 1144, 289, 290, 291,
	292, 293, 294, 1080, 1113, 1047, 295, 1174, 1175, 622,
	0, 296, 297, 1120, 0, 1101, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 4180, 316,
	0, 317, 318, 319, 1155, 320, 321, 322, 1104, 1102,
	1103, 1110, 1106, 1105, 1109, 323, 324, 325, 326, 327,
	1137, 328, 1131, 1130, 1051, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 1122,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 1057, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 1145, 1146, 359, 1069, 267, 0, 0, 0,
	0, 0, 360, 361, 362, 1129, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 1156, 366, 367, 1142, 1143,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 1152, 0, 1079, 378, 0, 379, 380, 381, 382,
	383, 1115, 1116, 1119, 460, 1158, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 0, 1157, 393, 1124, 1125, 0, 1085, 0, 395,
	396, 1159, 1117, 1160, 397, 398, 399, 1161, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 1153, 1162, 411, 412, 1163, 0,
	413, 0, 0, 0, 414, 415, 418, 1108, 1107, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 1164, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 1165, 447, 1048, 269, 1166, 457, 458, 1070, 1118,
	459, 1132, 461, 462, 0, 0, 463, 0, 1053, 0,
	465, 466, 467, 0, 0, 468, 469, 644, 1167, 470,
	1168, 1147, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 1148, 489, 649, 490, 491, 0,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	1128, 501, 503, 502, 504, 0, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 0, 519, 520, 521,
	1169, 522, 523, 524, 525, 1058, 526, 0, 527, 528,
	534, 535, 529, 530, 536, 537, 538, 539, 540, 0,
	542, 543, 541, 544, 545, 546, 1111, 547, 548, 531,
	532, 549, 550, 1170, 551, 552, 553, 554, 555, 556,
	1126, 0, 557, 0, 558, 559, 560, 562, 533, 563,
	568, 569, 1173, 564, 565, 566, 567, 1149, 571, 572,
	0, 573, 574, 1046, 570, 561, 0, 575, 576, 577,
	578, 579, 580, 581, 353, 582, 0, 583, 1138, 1139,
	1140, 1141, 0, 592, 0, 584, 585, 586, 1150, 587,
	1151, 1068, 588, 589, 590, 591, 0, 593, 594, 0,
	1052, 595, 596, 597, 599, 600, 598, 601, 1112, 602,
	0, 0, 603, 604, 605, 661, 1135, 1172, 0, 607,
	606, 608, 664, 0, 0, 0, 0, 0, 609, 610,
	665, 611, 612, 613, 1049, 0, 0, 0, 0, 0,
	0, 0, 1045, 0, 0, 0, 0, 0, 0, 1043,
	1044, 1090, 1062, 1063, 1064, 1060, 1061, 1073, 1074, 0,
	0, 0, 1072, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 1114, 1078, 0, 0, 0, 279, 280,
	1154, 281, 282, 283, 284, 285, 286, 615, 1127, 0,
	287, 1134, 288, 1133, 0, 1144, 289, 290, 291, 292,
	293, 294, 1080, 1113, 1047, 295, 1174, 1175, 622, 0,
	296, 297, 1120, 0, 1101, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 1155, 320, 321, 322, 1104, 1102, 1103,
	1110, 1106, 1105, 1109, 323, 324, 325, 326, 327, 1137,
	328, 1131, 1130, 1051, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 1122, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	1057, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 1145, 1146, 359, 1069, 267, 0, 0, 0, 0,
	0, 360, 361, 362, 1129, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 1156, 366, 367, 1142, 1143, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	1152, 0, 1079, 378, 0, 379, 380, 381, 382, 383,
	1115, 1116, 1119, 460, 1158, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	0, 1157, 393, 1124, 1125, 0, 1085, 0, 395, 396,
	1159, 1117, 1160, 397, 398, 399, 1161, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 1153, 1162, 411, 412, 1163, 0, 413,
	0, 0, 0, 414, 415, 418, 1108, 1107, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 1164, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	1165, 447, 1048, 3807, 1166, 457, 458, 1070, 1118, 459,
	1132, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 644, 1167, 470, 1168,
	1147, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 482, 646, 483, 484, 485, 647,
	486, 487, 488, 1148, 489, 649, 490, 491, 0, 492,
	493, 0, 494, 495, 496, 497, 498, 499, 500, 1128,
	501, 503, 502, 504, 0, 505, 0, 506, 507, 508,
	0, 0, 0, 0, 509, 0, 511, 512, 513, 514,
	510, 515, 516, 517, 518, 0, 519, 520, 521, 1169,
	522, 523, 524, 525, 1058, 526, 0, 527, 528, 534,
	535, 529, 530, 536, 537, 538, 539, 540, 0, 542,
	543, 541, 544, 545, 546, 1111, 547, 548, 531, 532,
	549, 550, 1170, 551, 552, 553, 554, 555, 556, 1126,
	0, 557, 0, 558, 559, 560, 562, 533, 563, 568,
	569, 1173, 564, 565, 566, 567, 1149, 571, 572, 0,
	573, 574, 1046, 570, 561, 0, 575, 576, 577, 578,
	579, 580, 581, 353, 582, 0, 583, 1138, 1139, 1140,
	1141, 0, 592, 0, 584, 585, 586, 1150, 587, 1151,
	1068, 588, 589, 590, 591, 0, 593, 594, 0, 1052,
	595, 596, 597, 599, 600, 598, 601, 1112, 602, 0,
	0, 603, 604, 605, 661, 1135, 1172, 0, 607, 606,
	608, 664, 0, 0, 0, 0, 0, 609, 610, 665,
	611, 612, 613, 1049, 0, 0, 0, 0, 0, 0,
	0, 1045, 0, 0, 0, 0, 0, 0, 1043, 1044,
	1879, 0, 0, 0, 0, 0, 0, 1074, 0, 0,
	0, 1072, 1090, 1062, 1063, 1064, 1060, 1061, 1073, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 1114, 1078, 0, 0, 0, 279,
	280, 1154, 281, 282, 283, 284, 285, 286, 615, 1127,
	0, 287, 1134, 288, 1133, 0, 1144, 289, 290, 291,
	292, 293, 294, 1080, 1113, 1047, 295, 1174, 1175, 622,
	0, 296, 297, 1120, 0, 1101, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 1155, 320, 321, 322, 1104, 1102,
	1103, 1110, 1106, 1105, 1109, 323, 324, 325, 326, 327,
	1137, 328, 1131, 1130, 1051, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 1122,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 1057, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 1145, 1146, 359, 1069, 267, 0, 0, 0,
	0, 0, 360, 361, 362, 1129, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 1156, 366, 367, 1142, 1143,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 1152, 0, 1079, 378, 0, 379, 380, 381, 382,
	383, 1115, 1116, 1119, 460, 1158, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 0, 1157, 393, 1124, 1125, 0, 1085, 0, 395,
	396, 1159, 1117, 1160, 397, 398, 399, 1161, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 1153, 1162, 411, 412, 1163, 0,
	413, 0, 0, 0, 414, 415, 418, 1108, 1107, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 1164, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 1165, 447, 1048, 269, 1166, 457, 458, 1070, 1118,
	459, 1132, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 644, 1167, 470,
	1168, 1147, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 1148, 489, 649, 490, 491, 0,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	1128, 501, 503, 502, 504, 0, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 0, 519, 520, 521,
	1169, 522, 523, 524, 525, 1058, 526, 0, 527, 528,
	534, 535, 529, 530, 536, 537, 538, 539, 540, 0,
	542, 543, 541, 544, 545, 546, 1111, 547, 548, 531,
	532, 549, 550, 1170, 551, 552, 553, 554, 555, 556,
	1126, 0, 557, 0, 558, 559, 560, 562, 533, 563,
	568, 569, 1173, 564, 565, 566, 567, 1149, 571, 572,
	0, 573, 574, 1046, 570, 561, 0, 575, 576, 577,
	578, 579, 580, 581, 353, 582, 0, 583, 1138, 1139,
	1140, 1141, 0, 592, 0, 584, 585, 586, 1150, 587,
	1151, 1068, 588, 589, 590, 591, 0, 593, 594, 0,
	1052, 595, 596, 597, 599, 600, 598, 601, 1112, 602,
	0, 0, 603, 604, 605, 661, 1135, 1172, 3536, 607,
	606, 608, 664, 0, 0, 0, 0, 0, 609, 610,
	665, 611, 612, 613, 1049, 0, 0, 0, 0, 0,
	0, 0, 1045, 0, 0, 0, 0, 0, 0, 1043,
	1044, 1090, 1062, 1063, 1064, 1060, 1061, 1073, 1074, 0,
	0, 0, 1072, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 1114, 1078, 0, 0, 0, 279, 280,
	1154, 281, 282, 283, 284, 285, 286, 615, 1127, 0,
	287, 1134, 288, 1133, 0, 1144, 289, 290, 291, 292,
	293, 294, 1080, 1113, 1047, 295, 1174, 1175, 622, 0,
	296, 297, 1120, 0, 1101, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 1155, 320, 321, 322, 1104, 1102, 1103,
	1110, 1106, 1105, 1109, 323, 324, 325, 326, 327, 1137,
	328, 1131, 1130, 1051, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 1122, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	1057, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 1145, 1146, 359, 1069, 267, 0, 0, 0, 0,
	0, 360, 361, 362, 1129, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 1156, 366, 367, 1142, 1143, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	1152, 0, 1079, 378, 0, 379, 380, 381, 382, 383,
	1115, 1116, 1119, 460, 1158, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	0, 1157, 393, 1124, 1125, 0, 1085, 0, 395, 396,
	1159, 1117, 1160, 397, 398, 399, 1161, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 1153, 1162, 411, 412, 1163, 0, 413,
	0, 0, 0, 414, 415, 418, 1108, 1107, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 1164, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	1165, 447, 1048, 269, 1166, 457, 458, 1070, 1118, 459,
	1132, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 644, 1167, 470, 1168,
	1147, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 482, 646, 483, 484, 485, 647,
	486, 487, 488, 1148, 489, 649, 490, 491, 0, 492,
	493, 0, 494, 495, 496, 497, 498, 499, 500, 1128,
	501, 503, 502, 504, 0, 505, 0, 506, 507, 508,
	0, 0, 0, 0, 509, 0, 511, 512, 513, 514,
	510, 515, 516, 517, 518, 0, 519, 520, 521, 1169,
	522, 523, 524, 525, 1058, 526, 0, 527, 528, 534,
	535, 529, 530, 536, 537, 538, 539, 540, 0, 542,
	543, 541, 544, 545, 546, 1111, 547, 548, 531, 532,
	549, 550, 1170, 551, 552, 553, 554, 555, 556, 1126,
	0, 557, 0, 558, 559, 560, 562, 533, 563, 568,
	569, 1173, 564, 565, 566, 567, 1149, 571, 572, 0,
	573, 574, 1046, 570, 561, 0, 575, 576, 577, 578,
	579, 580, 581, 353, 582, 0, 583, 1138, 1139, 1140,
	1141, 0, 592, 0, 584, 585, 586, 1150, 587, 1151,
	1068, 588, 589, 590, 591, 0, 593, 594, 0, 1052,
	595, 596, 597, 599, 600, 598, 601, 1112, 602, 0,
	0, 603, 604, 605, 661, 1135, 1172, 0, 607, 606,
	608, 664, 0, 0, 0, 0, 0, 609, 610, 665,
	611, 612, 613, 1049, 0, 0, 0, 0, 0, 0,
	0, 1045, 0, 0, 0, 0, 0, 0, 1043, 1044,
	1879, 0, 0, 0, 0, 0, 0, 1074, 0, 0,
	0, 1072, 1090, 1062, 1063, 1064, 1060, 1061, 1073, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 1114, 1078, 0, 0, 0, 279,
	280, 1154, 281, 282, 283, 284, 285, 286, 615, 1127,
	0, 287, 1134, 288, 1133, 0, 1144, 289, 290, 291,
	292, 293, 294, 1080, 1113, 1047, 295, 1174, 1175, 622,
	0, 296, 297, 1120, 0, 1101, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 1155, 320, 321, 322, 1104, 1102,
	1103, 1110, 1106, 1105, 1109, 323, 324, 325, 326, 327,
	1137, 328, 1131, 1130, 1051, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 1122,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 1057, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 1145, 1146, 359, 1069, 267, 0, 0, 0,
	0, 0, 360, 361, 362, 1129, 0, 0, 0, 363,
	0, 364, 365, 0, 2586, 1156, 366, 367, 1142, 1143,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 1152, 0, 1079, 378, 0, 379, 380, 381, 382,
	383, 1115, 1116, 1119, 460, 1158, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 0, 1157, 393, 1124, 1125, 0, 1085, 0, 395,
	396, 1159, 1117, 1160, 397, 398, 399, 1161, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 1153, 1162, 411, 412, 1163, 0,
	413, 0, 0, 0, 414, 415, 418, 1108, 1107, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 1164, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 1165, 447, 1048, 269, 1166, 457, 458, 1070, 1118,
	459, 1132, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 644, 1167, 470,
	1168, 1147, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 1148, 489, 649, 490, 491, 0,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	1128, 501, 503, 502, 504, 0, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 0, 519, 520, 521,
	1169, 522, 523, 524, 525, 1058, 526, 0, 527, 528,
	534, 535, 529, 530, 536, 537, 538, 539, 540, 0,
	542, 543, 541, 544, 545, 546, 1111, 547, 548, 531,
	532, 549, 550, 1170, 551, 552, 553, 554, 555, 556,
	1126, 0, 557, 0, 558, 559, 560, 562, 533, 563,
	568, 569, 1173, 564, 565, 566, 567, 1149, 571, 572,
	0, 573, 574, 1046, 570, 561, 0, 575, 576, 577,
	578, 579, 580, 581, 353, 582, 0, 583, 1138, 1139,
	1140, 1141, 0, 592, 0, 584, 585, 586, 1150, 587,
	1151, 1068, 588, 589, 590, 591, 0, 593, 594, 0,
	1052, 595, 596, 597, 599, 600, 598, 601, 1112, 602,
	0, 0, 603, 604, 605, 661, 1135, 1172, 0, 607,
	606, 608, 664, 0, 0, 0, 0, 0, 609, 610,
	665, 611, 612, 613, 1049, 0, 0, 0, 0, 0,
	0, 0, 1045, 0, 0, 0, 0, 0, 0, 1043,
	1044, 1090, 1062, 1063, 1064, 1060, 1061, 1073, 1074, 0,
	0, 0, 1072, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 1114, 1078, 0, 0, 0, 279, 280,
	1154, 281, 282, 283, 284, 285, 286, 615, 1127, 0,
	287, 1134, 288, 1133, 0, 1144, 289, 290, 291, 292,
	293, 294, 1080, 1113, 1047, 295, 1174, 1175, 622, 0,
	296, 297, 1120, 0, 1101, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 1155, 320, 321, 322, 1104, 1102, 1103,
	1110, 1106, 1105, 1109, 323, 324, 325, 326, 327, 1137,
	328, 1131, 1130, 1051, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 1122, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	1057, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 1145, 1146, 359, 1069, 267, 0, 0, 0, 0,
	0, 360, 361, 362, 1129, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 1156, 366, 367, 1142, 1143, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	1152, 0, 1079, 378, 0, 379, 380, 381, 382, 383,
	1115, 1116, 1119, 460, 1158, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	0, 1157, 393, 1124, 1125, 0, 1085, 0, 395, 396,
	1159, 1117, 1160, 397, 398, 399, 1161, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 1153, 1162, 411, 412, 1163, 0, 413,
	0, 0, 0, 414, 415, 418, 1108, 1107, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 1164, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	1165, 447, 1048, 269, 1166, 457, 458, 1070, 1118, 459,
	1132, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 644, 1167, 470, 1168,
	1147, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 482, 646, 483, 484, 485, 647,
	486, 487, 488, 1148, 489, 649, 490, 491, 0, 492,
	493, 0, 494, 495, 496, 497, 498, 499, 500, 1128,
	501, 503, 502, 504, 0, 505, 0, 506, 507, 508,
	0, 0, 0, 0, 509, 0, 511, 512, 513, 514,
	510, 515, 516, 517, 518, 0, 519, 520, 521, 1169,
	522, 523, 524, 525, 1058, 526, 0, 527, 528, 534,
	535, 529, 530, 536, 537, 538, 539, 540, 0, 542,
	543, 541, 544, 545, 546, 1111, 547, 548, 531, 532,
	549, 550, 1170, 551, 552, 553, 554, 555, 556, 1126,
	0, 557, 0, 558, 559, 560, 562, 533, 563, 568,
	569, 1173, 564, 565, 566, 567, 1149, 571, 572, 0,
	573, 574, 1046, 570, 561, 0, 575, 576, 577, 578,
	579, 580, 581, 353, 582, 0, 583, 1138, 1139, 1140,
	1141, 0, 592, 0, 584, 585, 586, 1150, 587, 1151,
	1068, 588, 589, 590, 591, 0, 593, 594, 0, 1052,
	595, 596, 597, 599, 600, 598, 601, 1112, 602, 0,
	0, 603, 604, 605, 661, 1135, 1172, 0, 607, 606,
	608, 664, 0, 0, 0, 0, 0, 609, 610, 665,
	611, 612, 613, 1049, 0, 0, 0, 0, 0, 0,
	0, 1045, 0, 0, 0, 0, 0, 0, 1043, 1044,
	0, 0, 0, 0, 0, 0, 0, 1074, 1809, 0,
	2591, 1072, 1090, 1062, 1063, 1064, 1060, 1061, 1073, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 1114, 1078, 0, 0, 0, 279,
	280, 1154, 281, 282, 283, 284, 285, 286, 615, 1127,
	0, 287, 1134, 288, 1133, 0, 1144, 289, 290, 291,
	292, 293, 294, 1080, 1113, 1047, 295, 1174, 1175, 622,
	0, 296, 297, 1120, 0, 1101, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 1155, 320, 321, 322, 1104, 1102,
	1103, 1110, 1106, 1105, 1109, 323, 324, 325, 326, 327,
	1137, 328, 1131, 1130, 1051, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 1122,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 1057, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 1145, 1146, 359, 1069, 267, 0, 0, 0,
	0, 0, 360, 361, 362, 1129, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 1156, 366, 367, 1142, 1143,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 1152, 0, 1079, 378, 0, 379, 380, 381, 382,
	383, 1115, 1116, 1119, 460, 1158, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 0, 1157, 393, 1124, 1125, 0, 1085, 0, 395,
	396, 1159, 1117, 1160, 397, 398, 399, 1161, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 1153, 1162, 411, 412, 1163, 0,
	413, 0, 0, 0, 414, 415, 418, 1108, 1107, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 1164, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 1165, 447, 1048, 269, 1166, 457, 458, 1070, 1118,
	459, 1132, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 644, 1167, 470,
	1168, 1147, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 1148, 489, 649, 490, 491, 0,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	1128, 501, 503, 502, 504, 0, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 0, 519, 520, 521,
	1169, 522, 523, 524, 525, 1058, 526, 0, 527, 528,
	534, 535, 529, 530, 536, 537, 538, 539, 540, 0,
	542, 543, 541, 544, 545, 546, 1111, 547, 548, 531,
	532, 549, 550, 1170, 551, 552, 553, 554, 555, 556,
	1126, 0, 557, 0, 558, 559, 560, 562, 533, 563,
	568, 569, 1173, 564, 565, 566, 567, 1149, 571, 572,
	0, 573, 574, 1046, 570, 561, 0, 575, 576, 577,
	578, 579, 580, 581, 353, 582, 0, 583, 1138, 1139,
	1140, 1141, 0, 592, 0, 584, 585, 586, 1150, 587,
	1151, 1068, 588, 589, 590, 591, 0, 593, 594, 0,
	1052, 595, 596, 597, 599, 600, 598, 601, 1112, 602,
	0, 0, 603, 604, 605, 661, 1135, 1172, 0, 607,
	606, 608, 664, 0, 0, 0, 0, 0, 609, 610,
	665, 611, 612, 613, 1049, 0, 0, 0, 0, 0,
	0, 0, 1045, 0, 0, 0, 0, 0, 0, 1043,
	1044, 0, 0, 0, 0, 0, 0, 0, 1074, 0,
	0, 2589, 1072, 1090, 1062, 1063, 1064, 1060, 1061, 1073,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 1114, 1078, 0, 0, 0,
	279, 280, 1154, 281, 282, 283, 284, 285, 286, 615,
	1127, 0, 287, 1134, 288, 1133, 0, 1144, 289, 290,
	291, 292, 293, 294, 1080, 1113, 1047, 295, 1174, 1175,
	622, 0, 296, 297, 1120, 0, 1101, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 1155, 320, 321, 322, 1104,
	1102, 1103, 1110, 1106, 1105, 1109, 323, 324, 325, 326,
	327, 1137, 328, 1131, 1130, 1051, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	1122, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 1057, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 1145, 1146, 359, 1069, 267, 0, 0,
	0, 0, 0, 360, 361, 362, 1129, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 1156, 366, 367, 1142,
	1143, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 1152, 0, 1079, 378, 0, 379, 380, 381,
	382, 383, 1115, 1116, 1119, 460, 1158, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 0, 1157, 393, 1124, 1125, 0, 1085, 0,
	395, 396, 1159, 1117, 1160, 397, 398, 399, 1161, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 1153, 1162, 411, 412, 1163,
	0, 413, 0, 0, 0, 414, 415, 418, 1108, 1107,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 1164,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 1165, 447, 1048, 269, 1166, 457, 458, 1070,
	1118, 459, 1132, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 644, 1167,
	470, 1168, 1147, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 1148, 489, 649, 490, 491,
	0, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 1128, 501, 503, 502, 504, 0, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 0, 519, 520,
	521, 1169, 522, 523, 524, 525, 1058, 526, 0, 527,
	528, 534, 535, 529, 530, 536, 537, 538, 539, 540,
	0, 542, 543, 541, 544, 545, 546, 1111, 547, 548,
	531, 532, 549, 550, 1170, 551, 552, 553, 554, 555,
	556, 1126, 0, 557, 0, 558, 559, 560, 562, 533,
	563, 568, 569, 1173, 564, 565, 566, 567, 1149, 571,
	572, 0, 573, 574, 1046, 570, 561, 0, 575, 576,
	577, 578, 579, 580, 581, 353, 582, 0, 583, 1138,
	1139, 1140, 1141, 0, 592, 0, 584, 585, 586, 1150,
	587, 1151, 1068, 588, 589, 590, 591, 0, 593, 594,
	0, 1052, 595, 596, 597, 599, 600, 598, 601, 1112,
	602, 0, 0, 603, 604, 605, 661, 1135, 1172, 0,
	607, 606, 608, 664, 0, 0, 0, 0, 0, 609,
	610, 665, 611, 612, 613, 1049, 0, 0, 0, 0,
	0, 0, 0, 1045, 0, 0, 0, 0, 0, 0,
	1043, 1044, 0, 0, 0, 0, 0, 0, 0, 1074,
	0, 0, 2577, 1072, 1090, 1062, 1063, 1064, 1060, 1061,
	1073, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 1114, 1078, 0, 0,
	0, 279, 280, 1154, 281, 282, 283, 284, 285, 286,
	615, 1127, 0, 287, 1134, 288, 1133, 0, 1144, 289,
	290, 291, 292, 293, 294, 1080, 1113, 1047, 295, 1174,
	1175, 622, 0, 296, 297, 1120, 0, 1101, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 1155, 320, 321, 322,
	1104, 1102, 1103, 1110, 1106, 1105, 1109, 323, 324, 325,
	326, 327, 1137, 328, 1131, 1130, 1051, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 1122, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 1057, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 1145, 1146, 359, 1069, 267, 0,
	0, 0, 0, 0, 360, 361, 362, 1129, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 1156, 366, 367,
	1142, 1143, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 1152, 0, 1079, 378, 0, 379, 380,
	381, 382, 383, 1115, 1116, 1119, 460, 1158, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 1157, 393, 1124, 1125, 0, 1085,
	0, 395, 396, 1159, 1117, 1160, 397, 398, 399, 1161,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 1153, 1162, 411, 412,
	1163, 0, 413, 0, 0, 0, 414, 415, 418, 1108,
	1107, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	1164, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 1165, 447, 1048, 269, 1166, 457, 458,
	1070, 1118, 459, 1132, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 644,
	1167, 470, 1168, 1147, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 482, 646, 483,
	484, 485, 647, 486, 487, 488, 1148, 489, 649, 490,
	491, 0, 492, 493, 0, 494, 495, 496, 497, 498,
	499, 500, 1128, 501, 503, 502, 504, 0, 505, 0,
	506, 507, 508, 0, 0, 0, 0, 509, 0, 511,
	512, 513, 514, 510, 515, 516, 517, 518, 0, 519,
	520, 521, 1169, 522, 523, 524, 525, 1058, 526, 0,
	527, 528, 534, 535, 529, 530, 536, 537, 538, 539,
	540, 0, 542, 543, 541, 544, 545, 546, 1111, 547,
	548, 531, 532, 549, 550, 1170, 551, 552, 553, 554,
	555, 556, 1126, 0, 557, 0, 558, 559, 560, 562,
	533, 563, 568, 569, 1173, 564, 565, 566, 567, 1149,
	571, 572, 0, 573, 574, 1046, 570, 561, 0, 575,
	576, 577, 578, 579, 580, 581, 353, 582, 0, 583,
	1138, 1139, 1140, 1141, 0, 592, 0, 584, 585, 586,
	1150, 587, 1151, 1068, 588, 589, 590, 591, 0, 593,
	594, 0, 1052, 595, 596, 597, 599, 600, 598, 601,
	1112, 602, 0, 0, 603, 604, 605, 661, 1135, 1172,
	0, 607, 606, 608, 664, 0, 0, 0, 0, 0,
	609, 610, 665, 611, 612, 613, 1049, 0, 0, 0,
	0, 0, 0, 0, 1045, 0, 0, 0, 0, 0,
	0, 1043, 1044, 0, 0, 0, 0, 0, 0, 0,
	1074, 0, 0, 2566, 1072, 1090, 1062, 1063, 1064, 1060,
	1061, 1073, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 1114, 1078, 0,
	0, 0, 279, 280, 1154, 281, 282, 283, 284, 285,
	286, 615, 1127, 0, 287, 1134, 288, 1133, 0, 1144,
	289, 290, 291, 292, 293, 294, 1080, 1113, 1047, 295,
	1174, 1175, 622, 0, 296, 297, 1120, 0, 1101, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 1155, 320, 321,
	322, 1104, 1102, 1103, 1110, 1106, 1105, 1109, 323, 324,
	325, 326, 327, 1137, 328, 1131, 1130, 1051, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 1122, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 1057, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 1145, 1146, 359, 1069, 267,
	0, 0, 0, 0, 0, 360, 361, 362, 1129, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 1156, 366,
	367, 1142, 1143, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 1152, 0, 1079, 378, 0, 379,
	380, 381, 382, 383, 1115, 1116, 1119, 460, 1158, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 0, 1157, 393, 1124, 1125, 0,
	1085, 0, 395, 396, 1159, 1117, 1160, 397, 398, 399,
	1161, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 1153, 1162, 411,
	412, 1163, 0, 413, 0, 0, 0, 414, 415, 418,
	1108, 1107, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 1164, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 1165, 447, 1048, 269, 1166, 457,
	458, 1070, 1118, 459, 1132, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	644, 1167, 470, 1168, 1147, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 1148, 489, 649,
	490, 491, 0, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 1128, 501, 503, 502, 504, 0, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 0,
	519, 520, 521, 1169, 522, 523, 524, 525, 1058, 526,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 0, 542, 543, 541, 544, 545, 546, 1111,
	547, 548, 531, 532, 549, 550, 1170, 551, 552, 553,
	554, 555, 556, 1126, 0, 557, 0, 558, 559, 560,
	562, 533, 563, 568, 569, 1173, 564, 565, 566, 567,
	1149, 571, 572, 0, 573, 574, 1046, 570, 561, 0,
	575, 576, 577, 578, 579, 580, 581, 353, 582, 0,
	583, 1138, 1139, 1140, 1141, 0, 592, 0, 584, 585,
	586, 1150, 587, 1151, 1068, 588, 589, 590, 591, 0,
	593, 594, 0, 1052, 595, 596, 597, 599, 600, 598,
	601, 1112, 602, 0, 0, 603, 604, 605, 661, 1135,
	1172, 0, 607, 606, 608, 664, 0, 0, 0, 0,
	0, 609, 610, 665, 611, 612, 613, 1049, 0, 0,
	0, 0, 0, 0, 0, 1045, 0, 0, 0, 0,
	0, 0, 1043, 1044, 0, 0, 0, 0, 0, 0,
	0, 1074, 0, 0, 2564, 1072, 2555, 2562, 1063, 1064,
	1060, 1061, 1073, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 1114, 1078,
	0, 0, 0, 279, 280, 1154, 281, 282, 283, 284,
	285, 286, 615, 1127, 0, 287, 1134, 288, 1133, 0,
	1144, 289, 290, 291, 292, 293, 294, 1080, 1113, 1047,
	295, 1174, 1175, 622, 0, 296, 297, 1120, 0, 1101,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 1155, 320,
	321, 322, 1104, 1102, 1103, 1110, 1106, 1105, 1109, 323,
	324, 325, 326, 327, 1137, 2558, 1131, 1130, 1051, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 1122, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 1057, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 1145, 1146, 359, 1069,
	267, 0, 0, 0, 0, 0, 360, 361, 362, 1129,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 1156,
	366, 367, 1142, 1143, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 1152, 0, 1079, 378, 0,
	379, 380, 381, 2559, 383, 1115, 1116, 1119, 460, 1158,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	268, 390, 391, 392, 394, 0, 1157, 393, 1124, 1125,
	0, 1085, 0, 395, 396, 1159, 1117, 1160, 397, 398,
	399, 1161, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 1153, 1162,
	411, 412, 1163, 0, 413, 0, 0, 0, 414, 415,
	418, 1108, 1107, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 2560, 428, 2557, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 1164, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 1165, 447, 1048, 269, 1166,
	457, 458, 1070, 1118, 459, 1132, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 644, 1167, 470, 1168, 1147, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 482,
	646, 483, 484, 485, 647, 486, 487, 488, 1148, 489,
	649, 490, 491, 0, 492, 493, 0, 494, 495, 496,
	497, 498, 499, 500, 1128, 501, 503, 502, 504, 0,
	505, 0, 506, 507, 508, 0, 0, 0, 0, 509,
	0, 511, 512, 513, 514, 510, 515, 516, 517, 518,
	0, 519, 520, 521, 1169, 522, 523, 524, 525, 1058,
	526, 0, 527, 528, 534, 535, 529, 530, 536, 537,
	538, 539, 2561, 0, 542, 543, 541, 544, 545, 546,
	1111, 547, 548, 531, 532, 549, 550, 1170, 551, 552,
	553, 554, 555, 556, 1126, 0, 557, 0, 558, 559,
	560, 562, 533, 563, 568, 569, 1173, 564, 565, 566,
	567, 1149, 571, 572, 0, 573, 574, 1046, 570, 561,
	0, 575, 576, 577, 578, 579, 580, 581, 353, 582,
	0, 583, 1138, 1139, 1140, 1141, 0, 592, 0, 584,
	585, 586, 1150, 587, 1151, 1068, 588, 589, 590, 591,
	0, 593, 594, 0, 1052, 595, 596, 597, 599, 600,
	598, 601, 1112, 602, 0, 0, 603, 604, 605, 661,
	1135, 1172, 0, 607, 606, 608, 664, 0, 0, 0,
	0, 0, 609, 610, 665, 611, 2556, 613, 1049, 0,
	0, 0, 0, 0, 0, 0, 1045, 0, 0, 0,
	0, 0, 0, 1043, 1044, 0, 0, 0, 0, 0,
	0, 0, 1074, 0, 0, 2552, 1072, 2555, 2562, 1063,
	1064, 1060, 1061, 1073, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 1114,
	1078, 0, 0, 0, 279, 280, 1154, 281, 282, 283,
	284, 285, 286, 615, 1127, 0, 287, 1134, 288, 1133,
	0, 1144, 289, 290, 291, 292, 293, 294, 1080, 1113,
	1047, 295, 1174, 1175, 622, 0, 296, 297, 1120, 0,
	1101, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 1155,
	320, 321, 322, 1104, 1102, 1103, 1110, 1106, 1105, 1109,
	323, 324, 325, 326, 327, 1137, 2558, 1131, 1130, 1051,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 1122, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 1057, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 1145, 1146, 359,
	1069, 267, 0, 0, 0, 0, 0, 360, 361, 362,
	1129, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	1156, 366, 367, 1142, 1143, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 1152, 0, 1079, 378,
	0, 379, 380, 381, 2559, 383, 1115, 1116, 1119, 460,
	1158, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 268, 390, 391, 392, 394, 0, 1157, 393, 1124,
	1125, 0, 1085, 0, 395, 396, 1159, 1117, 1160, 397,
	398, 399, 1161, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 1153,
	1162, 411, 412, 1163, 0, 413, 0, 0, 0, 414,
	415, 418, 1108, 1107, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 2560, 428, 2557, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 1164, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 1165, 447, 1048, 269,
	1166, 457, 458, 1070, 1118, 459, 1132, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 644, 1167, 470, 1168, 1147, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	482, 646, 483, 484, 485, 647, 486, 487, 488, 1148,
	489, 649, 490, 491, 0, 492, 493, 0, 494, 495,
	496, 497, 498, 499, 500, 1128, 501, 503, 502, 504,
	0, 505, 0, 506, 507, 508, 0, 0, 0, 0,
	509, 0, 511, 512, 513, 514, 510, 515, 516, 517,
	518, 0, 519, 520, 521, 1169, 522, 523, 524, 525,
	1058, 526, 0, 527, 528, 534, 535, 529, 530, 536,
	537, 538, 539, 2561, 0, 542, 543, 541, 544, 545,
	546, 1111, 547, 548, 531, 532, 549, 550, 1170, 551,
	552, 553, 554, 555, 556, 1126, 0, 557, 0, 558,
	559, 560, 562, 533, 563, 568, 569, 1173, 564, 565,
	566, 567, 1149, 571, 572, 0, 573, 574, 1046, 570,
	561, 0, 575, 576, 577, 578, 579, 580, 581, 353,
	582, 0, 583, 1138, 1139, 1140, 1141, 0, 592, 0,
	584, 585, 586, 1150, 587, 1151, 1068, 588, 589, 590,
	591, 0, 593, 594, 0, 1052, 595, 596, 597, 599,
	600, 598, 601, 1112, 602, 0, 0, 603, 604, 605,
	661, 1135, 1172, 0, 607, 606, 608, 664, 0, 0,
	0, 0, 0, 609, 610, 665, 611, 2556, 613, 1049,
	0, 0, 0, 0, 0, 0, 0, 1045, 0, 0,
	0, 0, 0, 0, 1043, 1044, 1090, 1062, 1063, 1064,
	1060, 1061, 1073, 1074, 0, 0, 0, 1072, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 1114, 1078,
	0, 0, 0, 279, 280, 1154, 281, 282, 283, 284,
	285, 286, 615, 1127, 0, 287, 1134, 288, 1133, 0,
	1144, 289, 290, 291, 292, 293, 294, 1080, 1113, 1047,
	295, 1174, 1175, 622, 0, 296, 297, 1120, 0, 1101,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 1155, 320,
	321, 322, 1104, 1102, 1103, 1110, 1106, 1105, 1109, 323,
	324, 325, 326, 327, 1137, 328, 1131, 1130, 1051, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 1122, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 1057, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 1145, 1146, 359, 1069,
	267, 0, 0, 0, 0, 0, 360, 361, 362, 1129,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 1156,
	366, 367, 1142, 1143, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 1152, 0, 1079, 378, 0,
	379, 380, 381, 382, 383, 1115, 1116, 1119, 460, 1158,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	268, 390, 391, 392, 394, 0, 1157, 393, 1124, 1125,
	0, 1085, 0, 395, 396, 1159, 1117, 1160, 397, 398,
	399, 1161, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 1153, 1162,
	411, 412, 1163, 0, 413, 0, 0, 0, 414, 415,
	418, 1108, 1107, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 1164, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 1165, 447, 1048, 269, 1166,
	457, 458, 1070, 1118, 459, 1132, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 644, 1167, 470, 1168, 1147, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 482,
	646, 483, 484, 485, 647, 486, 487, 488, 1148, 489,
	649, 490, 491, 0, 492, 493, 0, 494, 495, 496,
	497, 498, 499, 500, 1128, 501, 503, 502, 504, 0,
	505, 0, 506, 507, 508, 0, 0, 0, 0, 509,
	0, 511, 512, 513, 514, 510, 515, 516, 517, 518,
	0, 519, 520, 521, 1169, 522, 523, 524, 525, 1058,
	526, 0, 527, 528, 534, 535, 529, 530, 536, 537,
	538, 539, 540, 0, 542, 543, 541, 544, 545, 546,
	1111, 547, 548, 531, 532, 549, 550, 1170, 551, 552,
	553, 554, 555, 556, 1126, 0, 557, 0, 558, 559,
	560, 562, 533, 563, 568, 569, 1173, 564, 565, 566,
	567, 1149, 571, 572, 0, 573, 574, 1046, 570, 561,
	0, 575, 576, 577, 578, 579, 580, 581, 353, 582,
	0, 583, 1138, 1139, 1140, 1141, 0, 592, 0, 584,
	585, 586, 1150, 587, 1151, 1068, 588, 589, 590, 591,
	0, 593, 594, 0, 1052, 595, 596, 597, 599, 600,
	598, 601, 1112, 602, 0, 0, 603, 604, 605, 661,
	1135, 1172, 0, 607, 606, 608, 664, 0, 0, 0,
	0, 0, 609, 610, 665, 611, 612, 613, 1049, 0,
	0, 0, 0, 0, 0, 0, 1045, 0, 0, 0,
	0, 0, 0, 1043, 1044, 0, 0, 0, 0, 0,
	1817, 0, 1074, 0, 0, 0, 1072, 1090, 1062, 1063,
	1064, 1060, 1061, 1073, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 2346, 277, 278, 0, 0, 0, 0, 0, 1114,
	1078, 0, 0, 0, 279, 280, 1154, 281, 282, 283,
	284, 285, 286, 615, 1127, 0, 287, 1134, 288, 1133,
	0, 1144, 289, 290, 291, 292, 293, 294, 1080, 1113,
	1047, 295, 1174, 1175, 622, 0, 296, 297, 1120, 0,
	1101, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 1155,
	320, 321, 322, 1104, 1102, 1103, 1110, 1106, 1105, 1109,
	323, 324, 325, 326, 327, 1137, 328, 1131, 1130, 1051,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 1122, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 1057, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 1145, 1146, 359,
	1069, 267, 0, 0, 0, 0, 0, 360, 361, 362,
	1129, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	1156, 366, 367, 1142, 1143, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 1152, 0, 1079, 378,
	0, 379, 380, 381, 382, 383, 1115, 1116, 1119, 460,
	1158, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 268, 390, 391, 392, 394, 0, 1157, 393, 1124,
	1125, 0, 1085, 0, 395, 396, 1159, 1117, 1160, 397,
	398, 399, 1161, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 1153,
	1162, 411, 412, 1163, 0, 413, 0, 0, 0, 414,
	415, 418, 1108, 1107, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 1164, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 1165, 447, 1048, 269,
	1166, 457, 458, 1070, 1118, 459, 1132, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 644, 1167, 470, 1168, 1147, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	482, 646, 483, 484, 485, 647, 486, 487, 488, 1148,
	489, 649, 490, 491, 0, 492, 493, 0, 494, 495,
	496, 497, 498, 499, 500, 1128, 501, 503, 502, 504,
	0, 505, 0, 506, 507, 508, 0, 0, 0, 0,
	509, 0, 511, 512, 513, 514, 510, 515, 516, 517,
	518, 0, 519, 520, 521, 1169, 522, 523, 524, 525,
	1058, 526, 0, 527, 528, 534, 535, 529, 530, 536,
	537, 538, 539, 540, 0, 542, 543, 541, 544, 545,
	546, 1111, 547, 548, 531, 532, 549, 550, 1170, 551,
	552, 553, 554, 555, 556, 1126, 0, 557, 0, 558,
	559, 560, 562, 533, 563, 568, 569, 1173, 564, 565,
	566, 567, 1149, 571, 572, 0, 573, 574, 1046, 570,
	561, 0, 575, 576, 577, 578, 579, 580, 581, 353,
	582, 0, 583, 1138, 1139, 1140, 1141, 0, 592, 0,
	584, 585, 586, 1150, 587, 1151, 1068, 588, 589, 590,
	591, 0, 593, 594, 0, 1052, 595, 596, 597, 599,
	600, 598, 601, 1112, 602, 0, 0, 603, 604, 605,
	661, 1135, 1172, 0, 607, 606, 608, 664, 0, 0,
	0, 0, 0, 609, 610, 665, 611, 612, 613, 1049,
	0, 0, 0, 0, 0, 0, 0, 1045, 0, 0,
	0, 0, 0, 0, 1043, 1044, 0, 0, 0, 0,
	0, 0, 0, 1074, 0, 0, 1665, 1072, 1090, 1062,
	1063, 1064, 1060, 1061, 1073, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	1114, 1078, 0, 0, 0, 279, 280, 1154, 281, 282,
	283, 284, 285, 286, 615, 1127, 0, 287, 1134, 288,
	1133, 0, 1144, 289, 290, 291, 292, 293, 294, 1080,
	1113, 1047, 295, 1174, 1175, 622, 0, 296, 297, 1120,
	0, 1101, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	1155, 320, 321, 322, 1104, 1102, 1103, 1110, 1106, 1105,
	1109, 323, 324, 325, 326, 327, 1137, 328, 1131, 1130,
	1051, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 1122, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 1057, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 1145, 1146,
	359, 1069, 267, 0, 0, 0, 0, 0, 360, 361,
	362, 1129, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 1156, 366, 367, 1142, 1143, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 1152, 0, 1079,
	378, 0, 379, 380, 381, 382, 383, 1115, 1116, 1119,
	460, 1158, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 268, 390, 391, 392, 394, 0, 1157, 393,
	1124, 1125, 0, 1085, 0, 395, 396, 1159, 1117, 1160,
	397, 398, 399, 1161, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	1153, 1162, 411, 412, 1163, 0, 413, 0, 0, 0,
	414, 415, 418, 1108, 1107, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 1164, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 1165, 447, 1048,
	269, 1166, 457, 458, 1070, 1118, 459, 1132, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 644, 1167, 470, 1168, 1147, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 482, 646, 483, 484, 485, 647, 486, 487, 488,
	1148, 489, 649, 490, 491, 0, 492, 493, 0, 494,
	495, 496, 497, 498, 499, 500, 1128, 501, 503, 502,
	504, 0, 505, 0, 506, 507, 508, 0, 0, 0,
	0, 509, 0, 511, 512, 513, 514, 510, 515, 516,
	517, 518, 0, 519, 520, 521, 1169, 522, 523, 524,
	525, 1058, 526, 0, 527, 528, 534, 535, 529, 530,
	536, 537, 538, 539, 540, 0, 542, 543, 541, 544,
	545, 546, 1111, 547, 548, 531, 532, 549, 550, 1170,
	551, 552, 553, 554, 555, 556, 1126, 0, 557, 0,
	558, 559, 560, 562, 533, 563, 568, 569, 1173, 564,
	565, 566, 567, 1149, 571, 572, 0, 573, 574, 1046,
	570, 561, 0, 575, 576, 577, 578, 579, 580, 581,
	353, 582, 0, 583, 1138, 1139, 1140, 1141, 0, 592,
	0, 584, 585, 586, 1150, 587, 1151, 1068, 588, 589,
	590, 591, 0, 593, 594, 0, 1052, 595, 596, 597,
	599, 600, 598, 601, 1112, 602, 0, 0, 603, 604,
	605, 661, 1135, 1172, 0, 607, 606, 608, 664, 0,
	0, 0, 0, 0, 609, 610, 665, 611, 612, 613,
	1049, 0, 0, 0, 0, 0, 0, 0, 1045, 0,
	0, 0, 0, 0, 0, 1043, 1044, 0, 0, 0,
	0, 0, 0, 0, 1074, 0, 0, 1597, 1072, 1090,
	1062, 1063, 1064, 1060, 1061, 1073, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 1114, 1078, 0, 0, 0, 279, 280, 1154, 281,
	282, 283, 284, 285, 286, 615, 1127, 0, 287, 1134,
	288, 1133, 0, 1144, 289, 290, 291, 292, 293, 294,
	1080, 1113, 1047, 295, 1174, 1175, 622, 0, 296, 297,
	1120, 0, 1101, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 1155, 320, 321, 322, 1104, 1102, 1103, 1110, 1106,
	1105, 1109, 323, 324, 325, 326, 327, 1137, 328, 1131,
	1130, 1051, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 1122, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 1057, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 1145,
	1146, 359, 1069, 267, 0, 0, 0, 0, 0, 360,
	361, 362, 1129, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 1156, 366, 367, 1142, 1143, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 1152, 0,
	1079, 378, 0, 379, 380, 381, 382, 383, 1115, 1116,
	1119, 460, 1158, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 268, 390, 391, 392, 394, 0, 1157,
	393, 1124, 1125, 0, 1085, 0, 395, 396, 1159, 1117,
	1160, 397, 398, 399, 1161, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 1153, 1162, 411, 412, 1163, 0, 413, 0, 0,
	0, 414, 415, 418, 1108, 1107, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 1164, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 1165, 447,
	1048, 269, 1166, 457, 458, 1070, 1118, 459, 1132, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 644, 1167, 470, 1168, 1147, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 482, 646, 483, 484, 485, 647, 486, 487,
	488, 1148, 489, 649, 490, 491, 0, 492, 493, 0,
	494, 495, 496, 497, 498, 499, 500, 1128, 501, 503,
	502, 504, 0, 505, 0, 506, 507, 508, 0, 0,
	0, 0, 509, 0, 511, 512, 513, 514, 510, 515,
	516, 517, 518, 0, 519, 520, 521, 1169, 522, 523,
	524, 525, 1058, 526, 0, 527, 528, 534, 535, 529,
	530, 536, 537, 538, 539, 540, 0, 542, 543, 541,
	544, 545, 546, 1111, 547, 548, 531, 532, 549, 550,
	1170, 551, 552, 553, 554, 555, 556, 1126, 0, 557,
	0, 558, 559, 560, 562, 533, 563, 568, 569, 1173,
	564, 565, 566, 567, 1149, 571, 572, 0, 573, 574,
	1046, 570, 561, 0, 575, 576, 577, 578, 579, 580,
	581, 353, 582, 0, 583, 1138, 1139, 1140, 1141, 0,
	592, 0, 584, 585, 586, 1150, 587, 1151, 1068, 588,
	589, 590, 591, 0, 593, 594, 0, 1052, 595, 596,
	597, 599, 600, 598, 601, 1112, 602, 0, 0, 603,
	604, 605, 661, 1135, 1172, 0, 607, 606, 608, 664,
	0, 0, 0, 0, 0, 609, 610, 665, 611, 612,
	613, 1049, 0, 0, 0, 0, 0, 0, 0, 1045,
	0, 0, 0, 0, 0, 0, 1043, 1044, 0, 0,
	0, 0, 0, 0, 0, 1074, 0, 0, 1592, 1072,
	1090, 1062, 1063, 1064, 1060, 1061, 1073, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 1114, 1078, 0, 0, 0, 279, 280, 1154,
	281, 282, 283, 284, 285, 286, 615, 1127, 0, 287,
	1134, 288, 1133, 0, 1144, 289, 290, 291, 292, 293,
	294, 1080, 1113, 1047, 295, 1174, 1175, 622, 0, 296,
	297, 1120, 0, 1101, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 1155, 320, 321, 322, 1104, 1102, 1103, 1110,
	1106, 1105, 1109, 323, 324, 325, 326, 327, 1137, 328,
	1131, 1130, 1051, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 1122, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 1057,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	1145, 1146, 359, 1069, 267, 0, 0, 0, 0, 0,
	360, 361, 362, 1129, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 1156, 366, 367, 1142, 1143, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 1152,
	0, 1079, 378, 0, 379, 380, 381, 382, 383, 1115,
	1116, 1119, 460, 1158, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 268, 390, 391, 392, 394, 0,
	1157, 393, 1124, 1125, 0, 1085, 0, 395, 396, 1159,
	1117, 1160, 397, 398, 399, 1161, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 1153, 1162, 411, 412, 1163, 0, 413, 0,
	0, 0, 414, 415, 418, 1108, 1107, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 1164, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 1165,
	447, 1048, 269, 1166, 457, 458, 1070, 1118, 459, 1132,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 644, 1167, 470, 1168, 1147,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 482, 646, 483, 484, 485, 647, 486,
	487, 488, 1148, 489, 649, 490, 491, 0, 492, 493,
	0, 494, 495, 496, 497, 498, 499, 500, 1128, 501,
	503, 502, 504, 0, 505, 0, 506, 507, 508, 0,
	0, 0, 0, 509, 0, 511, 512, 513, 514, 510,
	515, 516, 517, 518, 0, 519, 520, 521, 1169, 522,
	523, 524, 525, 1058, 526, 0, 527, 528, 534, 535,
	529, 530, 536, 537, 538, 539, 540, 0, 542, 543,
	541, 544, 545, 546, 1111, 547, 548, 531, 532, 549,
	550, 1170, 551, 552, 553, 554, 555, 556, 1126, 0,
	557, 0, 558, 559, 560, 562, 533, 563, 568, 569,
	1173, 564, 565, 566, 567, 1149, 571, 572, 0, 573,
	574, 1046, 570, 561, 0, 575, 576, 577, 578, 579,
	580, 581, 353, 582, 0, 583, 1138, 1139, 1140, 1141,
	0, 592, 0, 584, 585, 586, 1150, 587, 1151, 1068,
	588, 589, 590, 591, 0, 593, 594, 0, 1052, 595,
	596, 597, 599, 600, 598, 601, 1112, 602, 0, 0,
	603, 604, 605, 661, 1135, 1172, 0, 607, 606, 608,
	664, 0, 0, 0, 0, 0, 609, 610, 665, 611,
	612, 613, 1049, 0, 0, 0, 0, 0, 0, 0,
	1045, 0, 0, 0, 0, 0, 0, 1043, 1044, 0,
	0, 0, 0, 0, 0, 0, 1074, 0, 0, 1583,
	1072, 1090, 1062, 1063, 1064, 1060, 1061, 1073, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 1114, 1078, 0, 0, 0, 279, 280,
	1154, 281, 282, 283, 284, 285, 286, 615, 1127, 0,
	287, 1134, 288, 1133, 0, 1144, 289, 290, 291, 292,
	293, 294, 1080, 1113, 1047, 295, 1174, 1175, 622, 0,
	296, 297, 1120, 0, 1101, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 1155, 320, 321, 322, 1104, 1102, 1103,
	1110, 1106, 1105, 1109, 323, 324, 325, 326, 327, 1137,
	328, 1131, 1130, 1051, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 1122, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	1057, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 1145, 1146, 359, 1069, 267, 0, 0, 0, 0,
	0, 360, 361, 362, 1129, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 1156, 366, 367, 1142, 1143, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	1152, 0, 1079, 378, 0, 379, 380, 381, 382, 383,
	1115, 1116, 1119, 460, 1158, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	0, 1157, 393, 1124, 1125, 0, 1085, 0, 395, 396,
	1159, 1117, 1160, 397, 398, 399, 1161, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 1153, 1162, 411, 412, 1163, 0, 413,
	0, 0, 0, 414, 415, 418, 1108, 1107, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 1164, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	1165, 447, 1048, 269, 1166, 457, 458, 1070, 1118, 459,
	1132, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 644, 1167, 470, 1168,
	1147, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 482, 646, 483, 484, 485, 647,
	486, 487, 488, 1148, 489, 649, 490, 491, 0, 492,
	493, 0, 494, 495, 496, 497, 498, 499, 500, 1128,
	501, 503, 502, 504, 0, 505, 0, 506, 507, 508,
	0, 0, 0, 0, 509, 0, 511, 512, 513, 514,
	510, 515, 516, 517, 518, 0, 519, 520, 521, 1169,
	522, 523, 524, 525, 1058, 526, 0, 527, 528, 534,
	535, 529, 530, 536, 537, 538, 539, 540, 0, 542,
	543, 541, 544, 545, 546, 1111, 547, 548, 531, 532,
	549, 550, 1170, 551, 552, 553, 554, 555, 556, 1126,
	0, 557, 0, 558, 559, 560, 562, 533, 563, 568,
	569, 1173, 564, 565, 566, 567, 1149, 571, 572, 0,
	573, 574, 1046, 570, 561, 0, 575, 576, 577, 578,
	579, 580, 581, 353, 582, 0, 583, 1138, 1139, 1140,
	1141, 0, 592, 0, 584, 585, 586, 1150, 587, 1151,
	1068, 588, 589, 590, 591, 0, 593, 594, 0, 1052,
	595, 596, 597, 599, 600, 598, 601, 1112, 602, 0,
	0, 603, 604, 605, 661, 1135, 1172, 0, 607, 606,
	608, 664, 0, 0, 0, 0, 0, 609, 610, 665,
	611, 612, 613, 1049, 0, 0, 0, 0, 0, 0,
	0, 1045, 0, 0, 0, 0, 0, 0, 1043, 1044,
	0, 0, 0, 0, 0, 0, 0, 1074, 0, 0,
	1578, 1072, 1090, 1062, 1063, 1064, 1060, 1061, 1073, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 1114, 1078, 0, 0, 0, 279,
	280, 1154, 281, 282, 283, 284, 285, 286, 615, 1127,
	0, 287, 1134, 288, 1133, 0, 1144, 289, 290, 291,
	292, 293, 294, 1080, 1113, 1047, 295, 1174, 1175, 622,
	0, 296, 297, 1120, 0, 1101, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 1155, 320, 321, 322, 1104, 1102,
	1103, 1110, 1106, 1105, 1109, 323, 324, 325, 326, 327,
	1137, 328, 1131, 1130, 1051, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 1122,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 1057, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 1145, 1146, 359, 1069, 267, 0, 0, 0,
	0, 0, 360, 361, 362, 1129, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 1156, 366, 367, 1142, 1143,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 1152, 0, 1079, 378, 0, 379, 380, 381, 382,
	383, 1115, 1116, 1119, 460, 1158, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 0, 1157, 393, 1124, 1125, 0, 1085, 0, 395,
	396, 1159, 1117, 1160, 397, 398, 399, 1161, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 1153, 1162, 411, 412, 1163, 0,
	413, 0, 0, 0, 414, 415, 418, 1108, 1107, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 1164, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 1165, 447, 1048, 269, 1166, 457, 458, 1070, 1118,
	459, 1132, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 644, 1167, 470,
	1168, 1147, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 1148, 489, 649, 490, 491, 0,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	1128, 501, 503, 502, 504, 0, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 0, 519, 520, 521,
	1169, 522, 523, 524, 525, 1058, 526, 0, 527, 528,
	534, 535, 529, 530, 536, 537, 538, 539, 540, 0,
	542, 543, 541, 544, 545, 546, 1111, 547, 548, 531,
	532, 549, 550, 1170, 551, 552, 553, 554, 555, 556,
	1126, 0, 557, 0, 558, 559, 560, 562, 533, 563,
	568, 569, 1173, 564, 565, 566, 567, 1149, 571, 572,
	0, 573, 574, 1046, 570, 561, 0, 575, 576, 577,
	578, 579, 580, 581, 353, 582, 0, 583, 1138, 1139,
	1140, 1141, 0, 592, 0, 584, 585, 586, 1150, 587,
	1151, 1068, 588, 589, 590, 591, 0, 593, 594, 0,
	1052, 595, 596, 597, 599, 600, 598, 601, 1112, 602,
	0, 0, 603, 604, 605, 661, 1135, 1172, 0, 607,
	606, 608, 664, 0, 0, 0, 0, 0, 609, 610,
	665, 611, 612, 613, 1049, 0, 0, 0, 0, 0,
	0, 0, 1045, 0, 0, 0, 0, 0, 0, 1043,
	1044, 0, 0, 0, 0, 0, 0, 0, 1074, 0,
	0, 1490, 1072, 1090, 1062, 1063, 1064, 1060, 1061, 1073,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 1114, 1078, 0, 0, 0,
	279, 280, 1154, 281, 282, 283, 284, 285, 286, 615,
	1127, 0, 287, 1134, 288, 1133, 0, 1144, 289, 290,
	291, 292, 293, 294, 1080, 1113, 1047, 295, 1174, 1175,
	622, 0, 296, 297, 1120, 0, 1101, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 1155, 320, 321, 322, 1104,
	1102, 1103, 1110, 1106, 1105, 1109, 323, 324, 325, 326,
	327, 1137, 328, 1131, 1130, 1051, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	1122, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 1057, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 1145, 1146, 359, 1069, 267, 0, 0,
	0, 0, 0, 360, 361, 362, 1129, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 1156, 366, 367, 1142,
	1143, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 1152, 0, 1079, 378, 0, 379, 380, 381,
	382, 383, 1489, 1116, 1119, 460, 1158, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 0, 1157, 393, 1124, 1125, 0, 1085, 0,
	395, 396, 1159, 1117, 1160, 397, 398, 399, 1161, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 1153, 1162, 411, 412, 1163,
	0, 413, 0, 0, 0, 414, 415, 418, 1108, 1107,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 1164,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 1165, 447, 1048, 269, 1166, 457, 458, 1070,
	1118, 459, 1132, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 644, 1167,
	470, 1168, 1147, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 1148, 489, 649, 490, 491,
	0, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 1128, 501, 503, 502, 504, 0, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 0, 519, 520,
	521, 1169, 522, 523, 524, 525, 1058, 526, 0, 527,
	528, 534, 535, 529, 530, 536, 537, 538, 539, 540,
	0, 542, 543, 541, 544, 545, 546, 1111, 547, 548,
	531, 532, 549, 550, 1170, 551, 552, 553, 554, 555,
	556, 1126, 0, 557, 0, 558, 559, 560, 562, 533,
	563, 568, 569, 1173, 564, 565, 566, 567, 1149, 571,
	572, 0, 573, 574, 1046, 570, 561, 0, 575, 576,
	577, 578, 579, 580, 581, 353, 582, 0, 583, 1138,
	1139, 1140, 1141, 0, 592, 0, 584, 585, 586, 1150,
	587, 1151, 1068, 588, 589, 590, 591, 0, 593, 594,
	0, 1052, 595, 596, 597, 599, 600, 598, 601, 1112,
	602, 0, 0, 603, 604, 605, 661, 1135, 1172, 0,
	607, 606, 608, 664, 0, 0, 0, 0, 0, 609,
	610, 665, 611, 612, 613, 1049, 0, 0, 0, 0,
	0, 0, 0, 1045, 0, 0, 0, 0, 0, 0,
	1043, 1044, 0, 0, 0, 0, 0, 0, 0, 1074,
	0, 0, 1484, 1072, 1090, 1062, 1063, 1064, 1060, 1061,
	1073, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 1114, 1078, 0, 0,
	0, 279, 280, 1154, 281, 282, 283, 284, 285, 286,
	615, 1127, 0, 287, 1134, 288, 1133, 0, 1144, 289,
	290, 291, 292, 293, 294, 1080, 1113, 1047, 295, 1174,
	1175, 622, 0, 296, 297, 1120, 0, 1101, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 1155, 320, 321, 322,
	1104, 1102, 1103, 1110, 1106, 1105, 1109, 323, 324, 325,
	326, 327, 1137, 328, 1131, 1130, 1051, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 1122, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 1057, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 1145, 1146, 359, 1069, 267, 0,
	0, 0, 0, 0, 360, 361, 362, 1129, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 1156, 366, 367,
	1142, 1143, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 1152, 0, 1079, 378, 0, 379, 380,
	381, 382, 383, 1483, 1116, 1119, 460, 1158, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 1157, 393, 1124, 1125, 0, 1085,
	0, 395, 396, 1159, 1117, 1160, 397, 398, 399, 1161,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 1153, 1162, 411, 412,
	1163, 0, 413, 0, 0, 0, 414, 415, 418, 1108,
	1107, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	1164, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 1165, 447, 1048, 269, 1166, 457, 458,
	1070, 1118, 459, 1132, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 644,
	1167, 470, 1168, 1147, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 482, 646, 483,
	484, 485, 647, 486, 487, 488, 1148, 489, 649, 490,
	491, 0, 492, 493, 0, 494, 495, 496, 497, 498,
	499, 500, 1128, 501, 503, 502, 504, 0, 505, 0,
	506, 507, 508, 0, 0, 0, 0, 509, 0, 511,
	512, 513, 514, 510, 515, 516, 517, 518, 0, 519,
	520, 521, 1169, 522, 523, 524, 525, 1058, 526, 0,
	527, 528, 534, 535, 529, 530, 536, 537, 538, 539,
	540, 0, 542, 543, 541, 544, 545, 546, 1111, 547,
	548, 531, 532, 549, 550, 1170, 551, 552, 553, 554,
	555, 556, 1126, 0, 557, 0, 558, 559, 560, 562,
	533, 563, 568, 569, 1173, 564, 565, 566, 567, 1149,
	571, 572, 0, 573, 574, 1046, 570, 561, 0, 575,
	576, 577, 578, 579, 580, 581, 353, 582, 0, 583,
	1138, 1139, 1140, 1141, 0, 592, 0, 584, 585, 586,
	1150, 587, 1151, 1068, 588, 589, 590, 591, 0, 593,
	594, 0, 1052, 595, 596, 597, 599, 600, 598, 601,
	1112, 602, 0, 0, 603, 604, 605, 661, 1135, 1172,
	0, 607, 606, 608, 664, 0, 0, 0, 0, 0,
	609, 610, 665, 611, 612, 613, 1049, 0, 0, 0,
	0, 0, 0, 0, 1045, 0, 0, 0, 0, 0,
	0, 1043, 1044, 0, 0, 0, 0, 0, 0, 0,
	1074, 0, 0, 1477, 1072, 1090, 1062, 1063, 1064, 1060,
	1061, 1073, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 1114, 1078, 0,
	0, 0, 279, 280, 1154, 281, 282, 283, 284, 285,
	286, 615, 1127, 0, 287, 1134, 288, 1133, 0, 1144,
	289, 290, 291, 292, 293, 294, 1080, 1113, 1047, 295,
	1174, 1175, 622, 0, 296, 297, 1120, 0, 1101, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 1155, 320, 321,
	322, 1104, 1102, 1103, 1110, 1106, 1105, 1109, 323, 324,
	325, 326, 327, 1137, 328, 1131, 1130, 1051, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 1122, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 1057, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 1145, 1146, 359, 1069, 267,
	0, 0, 0, 0, 0, 360, 361, 362, 1129, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 1156, 366,
	367, 1142, 1143, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 1152, 0, 1079, 378, 0, 379,
	380, 381, 382, 383, 1115, 1116, 1119, 460, 1158, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 0, 1157, 393, 1124, 1125, 0,
	1085, 0, 395, 396, 1159, 1117, 1160, 397, 398, 399,
	1161, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 1153, 1162, 411,
	412, 1163, 0, 413, 0, 0, 0, 414, 415, 418,
	1108, 1107, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 1164, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 1165, 447, 1048, 269, 1166, 457,
	458, 1070, 1118, 459, 1132, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	644, 1167, 470, 1168, 1147, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 1148, 489, 649,
	490, 491, 0, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 1128, 501, 503, 502, 504, 0, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 0,
	519, 520, 521, 1169, 522, 523, 524, 525, 1058, 526,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 0, 542, 543, 541, 544, 545, 546, 1111,
	547, 548, 531, 532, 549, 550, 1170, 551, 552, 553,
	554, 555, 556, 1126, 0, 557, 0, 558, 559, 560,
	562, 533, 563, 568, 569, 1173, 564, 565, 566, 567,
	1149, 571, 572, 0, 573, 574, 1046, 570, 561, 0,
	575, 576, 577, 578, 579, 580, 581, 353, 582, 0,
	583, 1138, 1139, 1140, 1141, 0, 592, 0, 584, 585,
	586, 1150, 587, 1151, 1068, 588, 589, 590, 591, 0,
	593, 594, 0, 1052, 595, 596, 597, 599, 600, 598,
	601, 1112, 602, 0, 0, 603, 604, 605, 661, 1135,
	1172, 0, 607, 606, 608, 664, 0, 0, 0, 0,
	0, 609, 610, 665, 611, 612, 613, 1049, 0, 0,
	0, 0, 0, 0, 0, 1045, 0, 0, 0, 0,
	0, 0, 1043, 1044, 0, 0, 0, 0, 0, 0,
	0, 1074, 0, 0, 1300, 1072, 1090, 1062, 1063, 1064,
	1060, 1061, 1073, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 1114, 1078,
	0, 0, 0, 279, 280, 1154, 281, 282, 283, 284,
	285, 286, 615, 1127, 0, 287, 1134, 288, 1133, 0,
	1144, 289, 290, 291, 292, 293, 294, 1080, 1113, 1047,
	295, 1174, 1175, 622, 0, 296, 297, 1120, 0, 1101,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 1155, 320,
	321, 322, 1104, 1102, 1103, 1110, 1106, 1105, 1109, 323,
	324, 325, 326, 327, 1137, 328, 1131, 1130, 1051, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 1122, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 1057, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 1145, 1146, 359, 1069,
	267, 0, 0, 0, 0, 0, 360, 361, 362, 1129,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 1156,
	366, 367, 1142, 1143, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 1152, 0, 1079, 378, 0,
	379, 380, 381, 382, 383, 1115, 1116, 1119, 460, 1158,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	268, 390, 391, 392, 394, 0, 1157, 393, 1124, 1125,
	0, 1085, 0, 395, 396, 1159, 1117, 1160, 397, 398,
	399, 1161, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 1153, 1162,
	411, 412, 1163, 0, 413, 0, 0, 0, 414, 415,
	418, 1108, 1107, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 1164, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 1165, 447, 1048, 269, 1166,
	457, 458, 1070, 1118, 459, 1132, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 644, 1167, 470, 1168, 1147, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 482,
	646, 483, 484, 485, 647, 486, 487, 488, 1148, 489,
	649, 490, 491, 0, 492, 493, 0, 494, 495, 496,
	497, 498, 499, 500, 1128, 501, 503, 502, 504, 0,
	505, 0, 506, 507, 508, 0, 0, 0, 0, 509,
	0, 511, 512, 513, 514, 510, 515, 516, 517, 518,
	0, 519, 520, 521, 1169, 522, 523, 524, 525, 1058,
	526, 0, 527, 528, 534, 535, 529, 530, 536, 537,
	538, 539, 540, 0, 542, 543, 541, 544, 545, 546,
	1111, 547, 548, 531, 532, 549, 550, 1170, 551, 552,
	553, 554, 555, 556, 1126, 0, 557, 0, 558, 559,
	560, 562, 533, 563, 568, 569, 1173, 564, 565, 566,
	567, 1149, 571, 572, 0, 573, 574, 1046, 570, 561,
	0, 575, 576, 577, 578, 579, 580, 581, 353, 582,
	0, 583, 1138, 1139, 1140, 1141, 0, 592, 0, 584,
	585, 586, 1150, 587, 1151, 1068, 588, 589, 590, 591,
	0, 593, 594, 0, 1052, 595, 596, 597, 599, 600,
	598, 601, 1112, 602, 0, 0, 603, 604, 605, 661,
	1135, 1172, 0, 607, 606, 608, 664, 0, 0, 0,
	0, 0, 609, 610, 665, 611, 612, 613, 1049, 0,
	0, 0, 0, 0, 0, 0, 1045, 0, 0, 0,
	0, 0, 0, 1043, 1044, 1090, 1062, 1063, 1064, 1060,
	1061, 1073, 1074, 0, 0, 0, 1072, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 1114, 1078, 0,
	0, 0, 279, 280, 1154, 281, 282, 283, 284, 285,
	286, 615, 1127, 0, 287, 1134, 288, 1133, 0, 1144,
	289, 290, 291, 292, 293, 294, 1080, 1113, 1047, 295,
	1174, 1175, 622, 0, 296, 297, 1120, 0, 1101, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 1155, 320, 321,
	322, 1104, 1102, 1103, 1110, 1106, 1105, 1109, 323, 324,
	325, 326, 327, 1137, 328, 1131, 1130, 1051, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 1122, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 1057, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 1145, 1146, 359, 1069, 267,
	0, 0, 0, 0, 0, 360, 361, 362, 1129, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 1156, 366,
	367, 1142, 1143, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 1152, 0, 1079, 378, 0, 379,
	380, 381, 382, 383, 1115, 1116, 1119, 460, 1158, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 0, 1157, 393, 1124, 1125, 0,
	1085, 0, 395, 396, 1159, 1117, 1160, 397, 398, 399,
	1161, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 1153, 1162, 411,
	412, 1163, 0, 413, 0, 0, 0, 414, 415, 418,
	1108, 1107, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 1164, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 1165, 447, 1048, 269, 1166, 457,
	458, 1070, 1118, 459, 1132, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	644, 1167, 470, 1168, 1147, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 1148, 489, 649,
	490, 491, 0, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 1128, 501, 503, 502, 504, 0, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 0,
	519, 520, 521, 1169, 522, 523, 524, 525, 1058, 526,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 0, 542, 543, 541, 544, 545, 546, 1111,
	547, 548, 531, 532, 549, 550, 1170, 551, 552, 553,
	554, 555, 556, 1126, 0, 557, 0, 558, 559, 560,
	562, 533, 563, 568, 569, 1173, 564, 565, 566, 567,
	1149, 571, 572, 0, 573, 574, 1046, 570, 561, 0,
	575, 576, 577, 578, 579, 580, 581, 353, 582, 0,
	583, 1138, 1139, 1140, 1141, 0, 592, 0, 584, 585,
	586, 1150, 587, 1151, 1068, 588, 589, 590, 591, 0,
	593, 594, 0, 1052, 595, 596, 597, 599, 600, 598,
	601, 1112, 602, 0, 0, 603, 604, 605, 661, 1135,
	1172, 0, 607, 606, 608, 664, 0, 0, 0, 0,
	0, 609, 610, 665, 611, 612, 613, 1049, 0, 0,
	0, 0, 0, 0, 0, 1045, 0, 0, 0, 0,
	0, 0, 1043, 1044, 1090, 1062, 1063, 1064, 1060, 1061,
	1073, 1074, 0, 0, 0, 1072, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 1114, 1078, 0, 0,
	0, 279, 280, 1154, 281, 282, 283, 284, 285, 286,
	615, 1127, 0, 287, 1134, 288, 1133, 0, 1144, 289,
	290, 291, 292, 293, 294, 1080, 1113, 1047, 295, 1174,
	1175, 622, 0, 296, 297, 1120, 0, 1101, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 1155, 320, 321, 4465,
	1104, 1102, 1103, 1110, 1106, 1105, 1109, 323, 324, 325,
	326, 327, 1137, 328, 1131, 1130, 1051, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 1122, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 1057, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 1145, 1146, 359, 1069, 267, 0,
	0, 0, 0, 0, 360, 361, 362, 1129, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 1156, 366, 367,
	1142, 1143, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 1152, 0, 1079, 378, 0, 379, 380,
	381, 382, 383, 1115, 1116, 1119, 460, 1158, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 1157, 393, 1124, 1125, 0, 1085,
	0, 395, 396, 1159, 1117, 1160, 397, 398, 399, 1161,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 1153, 1162, 411, 412,
	1163, 0, 413, 0, 0, 0, 414, 415, 418, 1108,
	1107, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	1164, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 1165, 447, 1048, 269, 1166, 457, 458,
	1070, 1118, 459, 1132, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 644,
	1167, 470, 1168, 1147, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 482, 646, 483,
	484, 485, 647, 486, 487, 488, 1148, 489, 649, 490,
	491, 0, 492, 493, 0, 494, 495, 496, 497, 498,
	499, 500, 1128, 501, 503, 502, 504, 0, 505, 0,
	506, 507, 508, 0, 0, 0, 0, 509, 0, 511,
	512, 513, 514, 510, 515, 516, 517, 518, 0, 519,
	520, 521, 1169, 522, 523, 524, 525, 1058, 526, 0,
	527, 528, 534, 535, 529, 530, 536, 537, 538, 539,
	540, 0, 542, 543, 541, 544, 545, 546, 1111, 547,
	548, 531, 532, 549, 550, 1170, 551, 552, 553, 554,
	555, 556, 1126, 0, 557, 0, 558, 559, 560, 562,
	533, 563, 568, 569, 1173, 564, 565, 566, 567, 1149,
	571, 572, 0, 573, 574, 1046, 570, 561, 0, 575,
	576, 577, 578, 579, 580, 581, 353, 582, 0, 583,
	1138, 1139, 1140, 1141, 0, 592, 0, 584, 585, 586,
	1150, 587, 1151, 1068, 588, 589, 590, 591, 0, 4464,
	594, 0, 1052, 595, 596, 597, 599, 600, 598, 601,
	1112, 602, 0, 0, 603, 604, 605, 661, 1135, 1172,
	0, 607, 606, 608, 664, 0, 0, 0, 0, 0,
	609, 610, 665, 611, 612, 613, 1049, 0, 0, 0,
	0, 0, 0, 0, 1045, 0, 0, 0, 0, 0,
	0, 1043, 1044, 1090, 1062, 1063, 1064, 1060, 1061, 1073,
	1074, 0, 0, 0, 1072, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 1114, 1078, 0, 0, 0,
	279, 280, 1154, 281, 282, 283, 284, 285, 286, 4463,
	1127, 0, 287, 1134, 288, 1133, 0, 1144, 289, 290,
	291, 292, 293, 294, 1080, 1113, 1047, 295, 1174, 1175,
	622, 0, 296, 297, 1120, 0, 1101, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 1155, 320, 321, 4465, 1104,
	1102, 1103, 1110, 1106, 1105, 1109, 323, 324, 325, 326,
	327, 1137, 328, 1131, 1130, 1051, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	1122, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 1057, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 1145, 1146, 359, 1069, 267, 0, 0,
	0, 0, 0, 360, 361, 362, 1129, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 1156, 366, 367, 1142,
	1143, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 1152, 0, 1079, 378, 0, 379, 380, 381,
	382, 383, 1115, 1116, 1119, 460, 1158, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 0, 1157, 393, 1124, 1125, 0, 1085, 0,
	395, 396, 1159, 1117, 1160, 397, 398, 399, 1161, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 1153, 1162, 411, 412, 1163,
	0, 413, 0, 0, 0, 414, 415, 418, 1108, 1107,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 1164,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 1165, 447, 1048, 269, 1166, 457, 458, 1070,
	1118, 459, 1132, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 644, 1167,
	470, 1168, 1147, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 1148, 489, 649, 490, 491,
	0, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 1128, 501, 503, 502, 504, 0, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 0, 519, 520,
	521, 1169, 522, 523, 524, 525, 1058, 526, 0, 527,
	528, 534, 535, 529, 530, 536, 537, 538, 539, 540,
	0, 542, 543, 541, 544, 545, 546, 1111, 547, 548,
	531, 532, 549, 550, 1170, 551, 552, 553, 554, 555,
	556, 1126, 0, 557, 0, 558, 559, 560, 562, 533,
	563, 568, 569, 1173, 564, 565, 566, 567, 1149, 571,
	572, 0, 573, 574, 1046, 570, 561, 0, 575, 576,
	577, 578, 579, 580, 581, 353, 582, 0, 583, 1138,
	1139, 1140, 1141, 0, 592, 0, 584, 585, 586, 1150,
	587, 1151, 1068, 588, 589, 590, 591, 0, 4464, 594,
	0, 1052, 595, 596, 597, 599, 600, 598, 601, 1112,
	602, 0, 0, 603, 604, 605, 661, 1135, 1172, 0,
	607, 606, 608, 664, 0, 0, 0, 0, 0, 609,
	610, 665, 611, 612, 613, 1049, 0, 0, 0, 0,
	0, 0, 0, 1045, 0, 0, 0, 0, 0, 0,
	1043, 1044, 1090, 1062, 1063, 1064, 1060, 1061, 1073, 1074,
	0, 0, 0, 1072, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 1114, 1078, 0, 0, 0, 279,
	280, 1154, 281, 282, 283, 284, 285, 286, 615, 1127,
	0, 287, 1134, 288, 1133, 0, 1144, 289, 290, 291,
	292, 293, 294, 1080, 1113, 1047, 295, 1174, 1175, 622,
	0, 296, 297, 1120, 0, 1101, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 1155, 320, 4126, 322, 1104, 1102,
	1103, 1110, 1106, 1105, 1109, 323, 324, 325, 326, 327,
	1137, 328, 1131, 1130, 1051, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 1122,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 1057, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 1145, 1146, 359, 1069, 267, 0, 0, 0,
	0, 0, 360, 361, 362, 1129, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 1156, 366, 367, 1142, 1143,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 1152, 0, 4127, 378, 0, 379, 380, 381, 382,
	383, 1115, 1116, 1119, 460, 1158, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 0, 1157, 393, 1124, 1125, 0, 1085, 0, 395,
	396, 1159, 1117, 1160, 397, 398, 399, 1161, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 1153, 1162, 411, 412, 1163, 0,
	413, 0, 0, 0, 414, 415, 418, 1108, 1107, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 1164, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 1165, 447, 1048, 269, 1166, 457, 458, 1070, 1118,
	459, 1132, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 644, 1167, 470,
	1168, 1147, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 1148, 489, 649, 490, 491, 0,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	1128, 501, 503, 502, 504, 0, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 0, 519, 520, 521,
	1169, 522, 523, 524, 4125, 1058, 526, 0, 527, 528,
	534, 535, 529, 530, 536, 537, 538, 539, 540, 0,
	542, 543, 541, 544, 545, 546, 1111, 547, 548, 531,
	532, 549, 550, 1170, 551, 552, 553, 554, 555, 556,
	1126, 0, 557, 0, 558, 559, 560, 562, 533, 563,
	568, 569, 1173, 564, 565, 566, 567, 1149, 571, 572,
	0, 573, 574, 1046, 570, 561, 0, 575, 576, 577,
	578, 579, 580, 581, 353, 582, 0, 583, 1138, 1139,
	1140, 1141, 0, 592, 0, 584, 585, 586, 1150, 587,
	1151, 1068, 588, 589, 590, 591, 0, 593, 594, 0,
	1052, 595, 596, 597, 599, 600, 598, 601, 1112, 602,
	0, 0, 603, 604, 605, 661, 1135, 1172, 0, 607,
	606, 608, 664, 0, 0, 0, 0, 0, 609, 610,
	665, 611, 612, 613, 1049, 0, 0, 0, 0, 0,
	0, 0, 1045, 0, 0, 0, 0, 0, 0, 1043,
	1044, 1090, 1062, 1063, 1064, 3023, 3024, 1073, 1074, 0,
	0, 0, 1072, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 1114, 1078, 0, 0, 0, 279, 280,
	1154, 281, 282, 283, 284, 285, 286, 615, 1127, 0,
	287, 1134, 288, 1133, 0, 1144, 289, 290, 291, 292,
	293, 294, 1080, 1113, 1047, 295, 1174, 1175, 622, 0,
	296, 297, 1120, 0, 1101, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 1155, 320, 321, 322, 1104, 1102, 1103,
	1110, 1106, 1105, 1109, 323, 324, 325, 326, 327, 1137,
	328, 1131, 1130, 1051, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 1122, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	1057, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 1145, 1146, 359, 1069, 267, 0, 0, 0, 0,
	0, 360, 361, 362, 1129, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 1156, 366, 367, 1142, 1143, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	1152, 0, 1079, 378, 0, 379, 380, 381, 382, 383,
	1115, 1116, 1119, 460, 1158, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	0, 1157, 393, 1124, 1125, 0, 1085, 0, 395, 396,
	1159, 1117, 1160, 397, 398, 399, 1161, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 1153, 1162, 411, 412, 1163, 0, 413,
	0, 0, 0, 414, 415, 418, 1108, 1107, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 1164, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	1165, 447, 1048, 269, 1166, 457, 458, 1070, 1118, 459,
	1132, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 644, 1167, 470, 1168,
	1147, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 482, 646, 483, 484, 485, 647,
	486, 487, 488, 1148, 489, 649, 490, 491, 0, 492,
	493, 0, 494, 495, 496, 497, 498, 499, 500, 1128,
	501, 503, 502, 504, 0, 505, 0, 506, 507, 508,
	0, 0, 0, 0, 509, 0, 511, 512, 513, 514,
	510, 515, 516, 517, 518, 0, 519, 520, 521, 1169,
	522, 523, 524, 525, 1058, 526, 0, 527, 528, 534,
	535, 529, 530, 536, 537, 538, 539, 540, 0, 542,
	543, 541, 544, 545, 546, 1111, 547, 548, 531, 532,
	549, 550, 1170, 551, 552, 553, 554, 555, 556, 1126,
	0, 557, 0, 558, 559, 560, 562, 533, 563, 568,
	569, 1173, 564, 565, 566, 567, 1149, 571, 572, 0,
	573, 574, 1046, 570, 561, 0, 575, 576, 577, 578,
	579, 580, 581, 353, 582, 0, 583, 1138, 1139, 1140,
	1141, 0, 592, 0, 584, 585, 586, 1150, 587, 1151,
	1068, 588, 589, 590, 591, 0, 593, 594, 0, 1052,
	595, 596, 597, 599, 600, 598, 601, 1112, 602, 0,
	0, 603, 604, 605, 661, 1135, 1172, 0, 607, 606,
	608, 664, 0, 0, 0, 0, 0, 609, 610, 665,
	611, 612, 613, 1049, 0, 0, 0, 0, 0, 0,
	0, 1045, 0, 0, 0, 0, 0, 0, 1043, 1044,
	1090, 1062, 1063, 1064, 3021, 3022, 1073, 1074, 0, 0,
	0, 1072, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 1114, 1078, 0, 0, 0, 279, 280, 1154,
	281, 282, 283, 284, 285, 286, 615, 1127, 0, 287,
	1134, 288, 1133, 0, 1144, 289, 290, 291, 292, 293,
	294, 1080, 1113, 1047, 295, 1174, 1175, 622, 0, 296,
	297, 1120, 0, 1101, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 1155, 320, 321, 322, 1104, 1102, 1103, 1110,
	1106, 1105, 1109, 323, 324, 325, 326, 327, 1137, 328,
	1131, 1130, 1051, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 1122, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 1057,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	1145, 1146, 359, 1069, 267, 0, 0, 0, 0, 0,
	360, 361, 362, 1129, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 1156, 366, 367, 1142, 1143, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 1152,
	0, 1079, 378, 0, 379, 380, 381, 382, 383, 1115,
	1116, 1119, 460, 1158, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 268, 390, 391, 392, 394, 0,
	1157, 393, 1124, 1125, 0, 1085, 0, 395, 396, 1159,
	1117, 1160, 397, 398, 399, 1161, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 1153, 1162, 411, 412, 1163, 0, 413, 0,
	0, 0, 414, 415, 418, 1108, 1107, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 1164, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 1165,
	447, 1048, 269, 1166, 457, 458, 1070, 1118, 459, 1132,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 644, 1167, 470, 1168, 1147,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 482, 646, 483, 484, 485, 647, 486,
	487, 488, 1148, 489, 649, 490, 491, 0, 492, 493,
	0, 494, 495, 496, 497, 498, 499, 500, 1128, 501,
	503, 502, 504, 0, 505, 0, 506, 507, 508, 0,
	0, 0, 0, 509, 0, 511, 512, 513, 514, 510,
	515, 516, 517, 518, 0, 519, 520, 521, 1169, 522,
	523, 524, 525, 1058, 526, 0, 527, 528, 534, 535,
	529, 530, 536, 537, 538, 539, 540, 0, 542, 543,
	541, 544, 545, 546, 1111, 547, 548, 531, 532, 549,
	550, 1170, 551, 552, 553, 554, 555, 556, 1126, 0,
	557, 0, 558, 559, 560, 562, 533, 563, 568, 569,
	1173, 564, 565, 566, 567, 1149, 571, 572, 0, 573,
	574, 1046, 570, 561, 0, 575, 576, 577, 578, 579,
	580, 581, 353, 582, 0, 583, 1138, 1139, 1140, 1141,
	0, 592, 0, 584, 585, 586, 1150, 587, 1151, 1068,
	588, 589, 590, 591, 0, 593, 594, 0, 1052, 595,
	596, 597, 599, 600, 598, 601, 1112, 602, 0, 0,
	603, 604, 605, 661, 1135, 1172, 0, 607, 606, 608,
	664, 0, 0, 0, 0, 0, 609, 610, 665, 611,
	612, 613, 1049, 0, 0, 0, 0, 0, 0, 0,
	1045, 0, 0, 0, 0, 0, 0, 1043, 1044, 1090,
	1062, 1063, 1064, 1060, 1061, 1073, 1074, 0, 0, 0,
	1072, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 1114, 1078, 0, 0, 0, 279, 280, 1154, 281,
	282, 283, 284, 285, 286, 615, 1127, 0, 287, 1134,
	288, 1133, 0, 1144, 289, 290, 291, 292, 293, 294,
	1080, 1113, 1047, 295, 1174, 1175, 622, 0, 296, 297,
	1120, 0, 1101, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 1155, 320, 321, 322, 1104, 1102, 1103, 1110, 1106,
	1105, 1109, 323, 324, 325, 326, 327, 1137, 328, 1131,
	1130, 1051, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 1122, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 1057, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 1145,
	1146, 359, 1069, 267, 0, 0, 0, 0, 0, 360,
	361, 362, 1129, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 1156, 366, 367, 1142, 1143, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 1152, 0,
	1079, 378, 0, 379, 380, 381, 382, 383, 1115, 1116,
	1119, 460, 1158, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 268, 390, 391, 392, 394, 0, 1157,
	393, 1124, 1125, 0, 1085, 0, 395, 396, 1159, 1117,
	1160, 397, 398, 399, 1161, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 1153, 1162, 411, 412, 1163, 0, 413, 0, 0,
	0, 414, 415, 418, 1108, 1107, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 1164, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 1165, 447,
	1048, 269, 1166, 457, 458, 1070, 1118, 459, 1132, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 644, 1167, 470, 1168, 1147, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 482, 646, 483, 484, 485, 647, 486, 487,
	488, 1148, 489, 649, 490, 491, 0, 492, 493, 0,
	494, 495, 496, 497, 498, 499, 500, 1128, 501, 503,
	502, 504, 0, 505, 0, 506, 507, 508, 0, 0,
	0, 0, 509, 0, 511, 512, 513, 514, 510, 515,
	516, 517, 518, 0, 519, 520, 521, 1169, 522, 523,
	524, 525, 1058, 526, 0, 527, 528, 534, 535, 529,
	530, 536, 537, 538, 539, 540, 0, 542, 543, 541,
	544, 545, 546, 1111, 547, 548, 531, 532, 549, 550,
	1170, 551, 552, 553, 554, 555, 556, 1126, 0, 557,
	0, 558, 559, 560, 562, 533, 563, 568, 569, 1173,
	564, 565, 566, 567, 1149, 571, 572, 0, 573, 574,
	1046, 570, 561, 0, 575, 576, 577, 578, 579, 580,
	581, 353, 582, 0, 583, 1138, 1139, 1140, 1141, 0,
	592, 0, 584, 585, 586, 1150, 587, 1151, 1068, 588,
	589, 590, 591, 0, 593, 594, 0, 1052, 595, 596,
	597, 599, 600, 598, 601, 1112, 602, 0, 0, 603,
	604, 605, 661, 1135, 1172, 0, 607, 606, 608, 664,
	0, 0, 0, 0, 0, 609, 610, 665, 611, 612,
	613, 1049, 0, 0, 0, 0, 0, 0, 0, 1045,
	0, 0, 0, 0, 0, 0, 2354, 2355, 1090, 1062,
	1063, 1064, 1060, 1061, 1073, 1074, 0, 0, 0, 1072,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	1114, 1078, 0, 0, 0, 279, 280, 1154, 281, 282,
	283, 284, 285, 286, 615, 1127, 0, 287, 1134, 288,
	1133, 0, 1144, 289, 290, 291, 292, 293, 294, 1080,
	1113, 0, 295, 1174, 1175, 622, 0, 296, 297, 1120,
	0, 1101, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	1155, 320, 321, 322, 1104, 1102, 1103, 1110, 1106, 1105,
	1109, 323, 324, 325, 326, 327, 1137, 328, 1131, 1130,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 1122, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 1057, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 1145, 1146,
	359, 1069, 267, 0, 0, 0, 0, 0, 360, 361,
	362, 1129, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 1156, 366, 367, 1142, 1143, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 1152, 0, 1079,
	378, 0, 379, 380, 381, 382, 383, 1115, 1116, 1119,
	460, 1158, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 268, 390, 391, 392, 394, 0, 1157, 393,
	1124, 1125, 0, 1085, 0, 395, 396, 1159, 1117, 1160,
	397, 398, 399, 1161, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	1153, 1162, 411, 412, 1163, 0, 413, 0, 0, 0,
	414, 415, 418, 1108, 1107, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 1164, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 1165, 447, 0,
	269, 1166, 457, 458, 1070, 1118, 459, 1132, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 644, 1167, 470, 1168, 1147, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 482, 646, 483, 484, 485, 647, 486, 487, 488,
	1148, 489, 649, 490, 491, 0, 492, 493, 0, 494,
	495, 496, 497, 498, 499, 500, 1128, 501, 503, 502,
	504, 0, 505, 0, 506, 507, 508, 0, 0, 0,
	0, 509, 0, 511, 512, 513, 514, 510, 515, 516,
	517, 518, 0, 519, 520, 521, 1169, 522, 523, 524,
	525, 1058, 526, 0, 527, 528, 534, 535, 529, 530,
	536, 537, 538, 539, 540, 0, 542, 543, 541, 544,
	545, 546, 1111, 547, 548, 531, 532, 549, 550, 1170,
	551, 552, 553, 554, 555, 556, 1126, 0, 557, 0,
	558, 559, 560, 562, 533, 563, 568, 569, 1173, 564,
	565, 566, 567, 1149, 571, 572, 0, 573, 574, 0,
	570, 561, 0, 575, 576, 577, 578, 579, 580, 581,
	353, 582, 0, 583, 1138, 1139, 1140, 1141, 0, 592,
	0, 584, 585, 586, 1150, 587, 1151, 1068, 588, 589,
	590, 591, 0, 593, 594, 0, 0, 595, 596, 597,
	599, 600, 598, 601, 1112, 602, 0, 0, 603, 604,
	605, 661, 1135, 1172, 0, 607, 606, 608, 664, 0,
	0, 0, 0, 0, 609, 610, 665, 611, 612, 613,
	1090, 1062, 1063, 1064, 1060, 1061, 1073, 0, 2574, 0,
	0, 0, 0, 0, 0, 2572, 2573, 270, 272, 271,
	273, 274, 275, 276, 1074, 277, 278, 0, 1072, 0,
	0, 0, 1114, 1078, 0, 0, 0, 279, 280, 1154,
	281, 282, 283, 284, 285, 286, 615, 1127, 0, 287,
	1134, 288, 1133, 0, 1144, 289, 290, 291, 292, 293,
	294, 1080, 1113, 0, 295, 1174, 1175, 622, 0, 296,
	297, 1120, 0, 1101, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 1155, 320, 321, 322, 1104, 1102, 1103, 1110,
	1106, 1105, 1109, 323, 324, 325, 326, 327, 1137, 328,
	1131, 1130, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 1122, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 1057,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	1145, 1146, 359, 1069, 267, 0, 0, 0, 0, 0,
	360, 361, 362, 1129, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 1156, 366, 367, 1142, 1143, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 1152,
	0, 1079, 378, 0, 379, 380, 381, 382, 383, 1115,
	1116, 1119, 460, 1158, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 268, 390, 391, 392, 394, 0,
	1157, 393, 1124, 1125, 0, 1085, 0, 395, 396, 1159,
	1117, 1160, 397, 398, 399, 1161, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 1153, 1162, 411, 412, 1163, 0, 413, 0,
	0, 0, 414, 415, 418, 1108, 1107, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 1164, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 1165,
	447, 0, 269, 1166, 457, 458, 1070, 1118, 459, 1132,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 644, 1167, 470, 1168, 1147,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 482, 646, 483, 484, 485, 647, 486,
	487, 488, 1148, 489, 649, 490, 491, 0, 492, 493,
	0, 494, 495, 496, 497, 498, 499, 500, 1128, 501,
	503, 502, 504, 0, 505, 0, 506, 507, 508, 0,
	0, 0, 0, 509, 0, 511, 512, 513, 514, 510,
	515, 516, 517, 518, 0, 519, 520, 521, 1169, 522,
	523, 524, 525, 3016, 3017, 0, 527, 528, 534, 535,
	529, 530, 536, 537, 538, 539, 540, 0, 542, 543,
	541, 544, 545, 546, 1111, 547, 548, 531, 532, 549,
	550, 1170, 551, 552, 553, 554, 555, 556, 1126, 0,
	557, 0, 558, 559, 560, 562, 533, 563, 568, 569,
	1173, 564, 565, 566, 567, 1149, 571, 572, 0, 573,
	574, 0, 570, 561, 0, 575, 576, 577, 578, 579,
	580, 581, 353, 582, 0, 583, 1138, 1139, 1140, 1141,
	0, 592, 0, 584, 585, 586, 1150, 587, 1151, 1068,
	588, 589, 590, 591, 0, 593, 594, 0, 0, 595,
	596, 597, 599, 600, 598, 601, 1112, 602, 0, 0,
	603, 604, 605, 661, 1135, 1172, 0, 607, 606, 608,
	664, 0, 0, 0, 0, 0, 609, 610, 665, 611,
	612, 613, 1090, 1062, 1063, 1064, 1060, 1061, 1073, 0,
	0, 0, 0, 0, 0, 0, 0, 2060, 2061, 270,
	272, 271, 273, 274, 275, 276, 1074, 277, 278, 0,
	1072, 0, 0, 0, 1114, 1078, 0, 0, 0, 279,
	280, 1154, 281, 282, 283, 284, 285, 286, 0, 1127,
	0, 287, 1134, 288, 1133, 0, 1144, 289, 290, 291,
	292, 293, 294, 1080, 1113, 1047, 295, 1174, 1175, 622,
	0, 296, 297, 1120, 0, 1101, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 1155, 320, 321, 4465, 1104, 1102,
	1103, 1110, 1106, 1105, 1109, 323, 324, 325, 326, 327,
	1137, 328, 1131, 1130, 1051, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 1122,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 1057, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 1145, 1146, 359, 1069, 267, 0, 0, 0,
	0, 0, 360, 361, 362, 1129, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 1156, 366, 367, 1142, 1143,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 1152, 0, 1079, 378, 0, 379, 380, 381, 382,
	383, 1115, 1116, 1119, 460, 0, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 0, 1157, 393, 1124, 1125, 0, 1085, 0, 395,
	396, 0, 1117, 0, 397, 398, 399, 1161, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 1153, 1162, 411, 412, 0, 0,
	413, 0, 0, 0, 414, 415, 418, 1108, 1107, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 1164, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 1165, 447, 1048, 269, 0, 457, 458, 1070, 1118,
	459, 1132, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 644, 1167, 470,
	1168, 1147, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 1148, 489, 649, 490, 491, 0,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	1128, 501, 503, 502, 504, 0, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 0, 519, 520, 521,
	1169, 522, 523, 524, 525, 1058, 526, 0, 527, 528,
	534, 535, 529, 530, 536, 537, 538, 539, 540, 0,
	542, 543, 541, 544, 545, 546, 1111, 547, 548, 531,
	532, 549, 550, 0, 551, 552, 553, 554, 555, 556,
	1126, 0, 557, 0, 558, 559, 560, 562, 533, 563,
	568, 569, 1173, 564, 565, 566, 567, 1149, 571, 572,
	0, 573, 574, 1046, 570, 561, 0, 575, 576, 577,
	578, 579, 580, 581, 353, 582, 0, 583, 1138, 1139,
	1140, 1141, 0, 592, 0, 584, 585, 586, 1150, 587,
	1151, 1068, 588, 589, 590, 591, 0, 4464, 594, 0,
	1052, 595, 596, 597, 599, 600, 598, 601, 1112, 602,
	0, 0, 603, 604, 605, 661, 1135, 1172, 0, 607,
	606, 608, 664, 0, 0, 0, 0, 0, 609, 610,
	665, 611, 612, 613, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1036, 0, 1212, 0, 0, 1043,
	1044, 0, 0, 0, 0, 0, 0, 0, 1074, 0,
	0, 0, 1072, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 1114, 0,
	0, 0, 0, 279, 280, 1154, 281, 282, 283, 284,
	285, 286, 615, 616, 0, 287, 617, 288, 618, 0,
	619, 289, 290, 291, 292, 293, 294, 0, 1113, 0,
	295, 620, 621, 622, 0, 296, 297, 1120, 0, 1101,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 1155, 320,
	321, 322, 1104, 1102, 1103, 1110, 1106, 1105, 1109, 323,
	324, 325, 326, 327, 0, 328, 624, 625, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 626, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 1145, 1146, 359, 0,
	267, 0, 0, 0, 0, 0, 360, 361, 362, 629,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 1156,
	366, 367, 630, 631, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 1152, 0, 633, 378, 0,
	379, 380, 381, 382, 383, 1115, 1116, 1119, 460, 1158,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	268, 390, 391, 392, 394, 0, 1157, 393, 637, 638,
	0, 639, 0, 395, 396, 1159, 1117, 1160, 397, 398,
	399, 1161, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 1198, 407, 409, 408, 0, 410, 1153, 1162,
	411, 412, 1163, 0, 413, 0, 0, 0, 414, 415,
	418, 1108, 1107, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 1164, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 1165, 447, 0, 269, 1166,
	457, 458, 0, 1118, 459, 643, 461, 462, 0, 0,
	463, 0, 0, 1204, 465, 466, 467, 0, 0, 468,
	469, 644, 1167, 470, 1168, 1147, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 482,
	646, 483, 484, 485, 647, 486, 487, 488, 1148, 489,
	649, 490, 491, 0, 492, 493, 0, 494, 495, 496,
	497, 498, 499, 500, 650, 501, 503, 502, 504, 0,
	505, 0, 506, 507, 508, 0, 0, 0, 0, 509,
	0, 511, 512, 513, 514, 510, 515, 516, 517, 518,
	0, 519, 520, 521, 1169, 522, 523, 524, 525, 651,
	1206, 0, 527, 528, 534, 535, 529, 530, 536, 537,
	538, 539, 540, 229, 542, 543, 541, 544, 545, 546,
	1111, 547, 548, 531, 532, 549, 550, 1170, 551, 552,
	553, 554, 555, 556, 652, 0, 557, 0, 558, 559,
	560, 562, 533, 563, 568, 569, 653, 564, 565, 566,
	567, 1149, 571, 572, 0, 573, 574, 0, 570, 561,
	231, 575, 576, 577, 578, 579, 580, 581, 353, 582,
	0, 583, 655, 656, 657, 658, 0, 592, 0, 584,
	585, 586, 1150, 587, 1151, 0, 588, 589, 590, 591,
	0, 593, 594, 0, 0, 595, 596, 597, 599, 600,
	598, 601, 1112, 602, 0, 0, 603, 604, 605, 1567,
	662, 663, 0, 607, 606, 608, 664, 1212, 0, 0,
	0, 223, 609, 610, 665, 611, 612, 613, 0, 0,
	224, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 1114,
	1202, 0, 1903, 0, 279, 280, 1154, 281, 282, 283,
	284, 285, 286, 615, 616, 0, 287, 617, 288, 618,
	0, 619, 289, 290, 291, 292, 293, 294, 0, 1113,
	0, 295, 620, 621, 622, 0, 296, 297, 1120, 0,
	1101, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 1155,
	320, 321, 322, 1104, 1102, 1103, 1110, 1106, 1105, 1109,
	323, 324, 325, 326, 327, 0, 328, 624, 625, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 626, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 1145, 1146, 359,
	0, 267, 0, 0, 0, 0, 0, 360, 361, 362,
	629, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	1156, 366, 367, 630, 631, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 1152, 0, 633, 378,
	0, 379, 380, 381, 382, 383, 1115, 1116, 1119, 460,
	1158, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 268, 390, 391, 392, 394, 0, 1157, 393, 637,
	638, 0, 639, 0, 395, 396, 1159, 1117, 1160, 397,
	398, 399, 1161, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 1198, 407, 409, 408, 0, 410, 1153,
	1162, 411, 412, 1163, 0, 413, 0, 0, 0, 414,
	415, 418, 1108, 1107, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 1164, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 1165, 447, 0, 269,
	1166, 457, 458, 0, 1118, 459, 643, 461, 462, 0,
	0, 463, 0, 0, 1204, 465, 466, 467, 0, 0,
	468, 469, 644, 1167, 470, 1168, 1147, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	482, 646, 483, 484, 485, 647, 486, 487, 488, 1148,
	489, 649, 490, 491, 0, 492, 493, 0, 494, 495,
	496, 497, 498, 499, 500, 650, 501, 503, 502, 504,
	0, 505, 0, 506, 507, 508, 0, 0, 0, 0,
	509, 0, 511, 512, 513, 514, 510, 515, 516, 517,
	518, 0, 519, 520, 521, 1169, 522, 523, 524, 525,
	651, 1206, 0, 527, 528, 534, 535, 529, 530, 536,
	537, 538, 539, 540, 229, 542, 543, 541, 544, 545,
	546, 1111, 547, 548, 531, 532, 549, 550, 1170, 551,
	552, 553, 554, 555, 556, 652, 0, 557, 0, 558,
	559, 560, 562, 533, 563, 568, 569, 653, 564, 565,
	566, 567, 1149, 571, 572, 0, 573, 574, 0, 570,
	561, 231, 575, 576, 577, 578, 579, 580, 581, 353,
	582, 0, 583, 655, 656, 657, 658, 0, 592, 0,
	584, 585, 586, 1150, 587, 1151, 0, 588, 589, 590,
	591, 0, 593, 594, 0, 0, 595, 596, 597, 599,
	600, 598, 601, 1112, 602, 0, 0, 603, 604, 605,
	1567, 662, 663, 0, 607, 606, 608, 664, 3176, 0,
	1212, 0, 223, 609, 610, 665, 611, 612, 613, 0,
	0, 224, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 1202, 1114, 1903, 0, 0, 0, 279, 280, 1154,
	281, 282, 283, 284, 285, 286, 615, 616, 0, 287,
	617, 288, 618, 0, 619, 289, 290, 291, 292, 293,
	294, 0, 1113, 0, 295, 620, 621, 622, 0, 296,
	297, 1120, 0, 1101, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 1155, 320, 321, 322, 1104, 1102, 1103, 1110,
	1106, 1105, 1109, 323, 324, 325, 326, 327, 0, 328,
	624, 625, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 626,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	1145, 1146, 359, 0, 267, 0, 0, 0, 0, 0,
	360, 361, 362, 629, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 1156, 366, 367, 630, 631, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 1152,
	0, 633, 378, 0, 379, 380, 381, 382, 383, 1115,
	1116, 1119, 460, 1158, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 268, 390, 391, 392, 394, 0,
	1157, 393, 637, 638, 0, 639, 0, 395, 396, 1159,
	1117, 1160, 397, 398, 399, 1161, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 1198, 407, 409, 408,
	0, 410, 1153, 1162, 411, 412, 1163, 0, 413, 0,
	0, 0, 414, 415, 418, 1108, 1107, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 1164, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 1165,
	447, 0, 269, 1166, 457, 458, 0, 1118, 459, 643,
	461, 462, 0, 0, 463, 0, 0, 1204, 465, 466,
	467, 0, 0, 468, 469, 644, 1167, 470, 1168, 1147,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 482, 646, 483, 484, 485, 647, 486,
	487, 488, 1148, 489, 649, 490, 491, 0, 492, 493,
	0, 494, 495, 496, 497, 498, 499, 500, 650, 501,
	503, 502, 504, 0, 505, 0, 506, 507, 508, 0,
	0, 0, 0, 509, 0, 511, 512, 513, 514, 510,
	515, 516, 517, 518, 0, 519, 520, 521, 1169, 522,
	523, 524, 525, 651, 1206, 0, 527, 528, 534, 535,
	529, 530, 536, 537, 538, 539, 540, 0, 542, 543,
	541, 544, 545, 546, 1111, 547, 548, 531, 532, 549,
	550, 1170, 551, 552, 553, 554, 555, 556, 652, 0,
	557, 0, 558, 559, 560, 562, 533, 563, 568, 569,
	653, 564, 565, 566, 567, 1149, 571, 572, 0, 573,
	574, 0, 570, 561, 0, 575, 576, 577, 578, 579,
	580, 581, 353, 582, 0, 583, 655, 656, 657, 658,
	0, 592, 0, 584, 585, 586, 1150, 587, 1151, 0,
	588, 589, 590, 591, 0, 593, 594, 0, 0, 595,
	596, 597, 599, 600, 598, 601, 1112, 602, 0, 0,
	603, 604, 605, 661, 662, 663, 0, 607, 606, 608,
	664, 1194, 0, 1212, 0, 0, 609, 610, 665, 611,
	612, 613, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 1202, 1114, 1200, 0, 0, 0,
	279, 280, 1154, 281, 282, 283, 284, 285, 286, 615,
	616, 0, 287, 617, 288, 618, 0, 619, 289, 290,
	291, 292, 293, 294, 0, 1113, 0, 295, 620, 621,
	622, 0, 296, 297, 1120, 0, 1101, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 1155, 320, 321, 322, 1104,
	1102, 1103, 1110, 1106, 1105, 1109, 323, 324, 325, 326,
	327, 0, 328, 624, 625, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 626, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 1145, 1146, 359, 0, 267, 0, 0,
	0, 0, 0, 360, 361, 362, 629, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 1156, 366, 367, 630,
	631, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 1152, 0, 633, 378, 0, 379, 380, 381,
	382, 383, 1115, 1116, 1119, 460, 1158, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 0, 1157, 393, 637, 638, 0, 639, 0,
	395, 396, 1159, 1117, 1160, 397, 398, 399, 1161, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 1198,
	407, 409, 408, 0, 410, 1153, 1162, 411, 412, 1163,
	0, 413, 0, 0, 0, 414, 415, 418, 1108, 1107,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 1164,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 1165, 447, 0, 269, 1166, 457, 458, 0,
	1118, 459, 643, 461, 462, 0, 0, 463, 0, 0,
	1204, 465, 466, 467, 0, 0, 468, 469, 644, 1167,
	470, 1168, 1147, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 1148, 489, 649, 490, 491,
	0, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 650, 501, 503, 502, 504, 0, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 0, 519, 520,
	521, 1169, 522, 523, 524, 525, 651, 1206, 0, 527,
	528, 534, 535, 529, 530, 536, 537, 538, 539, 540,
	0, 542, 543, 541, 544, 545, 546, 1111, 547, 548,
	531, 532, 549, 550, 1170, 551, 552, 553, 554, 555,
	556, 652, 0, 557, 0, 558, 559, 560, 562, 533,
	563, 568, 569, 653, 564, 565, 566, 567, 1149, 571,
	572, 0, 573, 574, 0, 570, 561, 0, 575, 576,
	577, 578, 579, 580, 581, 353, 582, 0, 583, 655,
	656, 657, 658, 0, 592, 0, 584, 585, 586, 1150,
	587, 1151, 0, 588, 589, 590, 591, 0, 593, 594,
	0, 0, 595, 596, 597, 599, 600, 598, 601, 1112,
	602, 0, 0, 603, 604, 605, 661, 662, 663, 0,
	607, 606, 608, 664, 1212, 0, 0, 0, 0, 609,
	610, 665, 611, 612, 613, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 1114, 1202, 0, 1200,
	0, 279, 280, 1154, 281, 282, 283, 284, 285, 286,
	615, 616, 0, 287, 617, 288, 618, 0, 619, 289,
	290, 291, 292, 293, 294, 0, 1113, 0, 295, 620,
	621, 622, 0, 296, 297, 1120, 0, 1101, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 1155, 320, 321, 322,
	1104, 1102, 1103, 1110, 1106, 1105, 1109, 323, 324, 325,
	326, 327, 0, 328, 624, 625, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 626, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 1145, 1146, 359, 0, 267, 0,
	0, 0, 0, 0, 360, 361, 362, 629, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 1156, 366, 367,
	630, 631, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 1152, 0, 633, 378, 0, 379, 380,
	381, 382, 383, 1115, 1116, 1119, 460, 1158, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 1157, 393, 637, 638, 0, 639,
	0, 395, 396, 1159, 1117, 1160, 397, 398, 399, 1161,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	1198, 407, 409, 408, 0, 410, 1153, 1162, 411, 412,
	1163, 0, 413, 0, 0, 0, 414, 415, 418, 1108,
	1107, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	1164, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 1165, 447, 0, 269, 1166, 457, 458,
	0, 1118, 459, 643, 461, 462, 0, 0, 463, 0,
	0, 1204, 465, 466, 467, 0, 0, 468, 469, 644,
	1167, 470, 1168, 1147, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 482, 646, 483,
	484, 485, 647, 486, 487, 488, 1148, 489, 649, 490,
	491, 0, 492, 493, 0, 494, 495, 496, 497, 498,
	499, 500, 650, 501, 503, 502, 504, 0, 505, 0,
	506, 507, 508, 0, 0, 0, 0, 509, 0, 511,
	512, 513, 514, 510, 515, 516, 517, 518, 0, 519,
	520, 521, 1169, 522, 523, 524, 525, 651, 1206, 0,
	527, 528, 534, 535, 529, 530, 536, 537, 538, 539,
	540, 0, 542, 543, 541, 544, 545, 546, 1111, 547,
	548, 531, 532, 549, 550, 1170, 551, 552, 553, 554,
	555, 556, 652, 0, 557, 0, 558, 559, 560, 562,
	533, 563, 568, 569, 653, 564, 565, 566, 567, 1149,
	571, 572, 0, 573, 574, 0, 570, 561, 0, 575,
	576, 577, 578, 579, 580, 581, 353, 582, 0, 583,
	655, 656, 657, 658, 0, 592, 0, 584, 585, 586,
	1150, 587, 1151, 0, 588, 589, 590, 591, 0, 593,
	594, 0, 0, 595, 596, 597, 599, 600, 598, 601,
	1112, 602, 0, 0, 603, 604, 605, 661, 662, 663,
	0, 607, 606, 608, 664, 1212, 0, 0, 0, 0,
	609, 610, 665, 611, 612, 613, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 1114, 1202, 0,
	1200, 0, 279, 280, 1154, 281, 282, 283, 284, 285,
	286, 615, 616, 0, 287, 617, 288, 618, 0, 619,
	289, 290, 291, 292, 293, 294, 0, 1113, 0, 295,
	620, 621, 622, 0, 296, 297, 1120, 0, 1101, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 1155, 320, 321,
	322, 1104, 1102, 1103, 1110, 1106, 1105, 1109, 323, 324,
	325, 326, 327, 0, 328, 624, 625, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 626, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 1145, 1146, 359, 0, 267,
	0, 0, 0, 0, 0, 360, 361, 362, 629, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 1156, 366,
	367, 630, 631, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 1152, 0, 633, 378, 0, 379,
	380, 381, 382, 383, 1115, 1116, 1119, 460, 1158, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 0, 1157, 393, 637, 638, 0,
	639, 0, 395, 396, 1159, 1117, 1160, 397, 398, 399,
	1161, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 1153, 1162, 411,
	412, 1163, 0, 413, 0, 0, 0, 414, 415, 418,
	1108, 1107, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 1164, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 1165, 447, 0, 269, 1166, 457,
	458, 0, 1118, 459, 643, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	644, 1167, 470, 1168, 1147, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 1148, 489, 649,
	490, 491, 0, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 650, 501, 503, 502, 504, 0, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 0,
	519, 520, 521, 1169, 522, 523, 524, 525, 651, 526,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 0, 542, 543, 541, 544, 545, 546, 1111,
	547, 548, 531, 532, 549, 550, 1170, 551, 552, 553,
	554, 555, 556, 652, 0, 557, 0, 558, 559, 560,
	562, 533, 563, 568, 569, 653, 564, 565, 566, 567,
	1149, 571, 572, 0, 573, 574, 0, 570, 561, 0,
	575, 576, 577, 578, 579, 580, 581, 353, 582, 0,
	583, 655, 656, 657, 658, 0, 592, 0, 584, 585,
	586, 1150, 587, 1151, 0, 588, 589, 590, 591, 0,
	593, 594, 0, 0, 595, 596, 597, 599, 600, 598,
	601, 1112, 602, 0, 0, 603, 604, 605, 661, 662,
	663, 0, 607, 606, 608, 664, 1212, 0, 0, 0,
	0, 609, 610, 665, 611, 612, 613, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 1114, 0,
	0, 3959, 0, 279, 280, 1154, 281, 282, 283, 284,
	285, 286, 615, 616, 0, 287, 617, 288, 618, 0,
	619, 289, 290, 291, 292, 293, 294, 0, 1113, 0,
	295, 620, 621, 622, 0, 296, 297, 1120, 0, 1101,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 1155, 320,
	321, 322, 1104, 1102, 1103, 1110, 1106, 1105, 1109, 323,
	324, 325, 326, 327, 0, 328, 624, 625, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 626, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 1145, 1146, 359, 0,
	267, 0, 0, 0, 0, 0, 360, 361, 362, 629,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 1156,
	366, 367, 630, 631, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 1152, 0, 633, 378, 0,
	379, 380, 381, 382, 383, 1115, 1116, 1119, 460, 1158,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	268, 390, 391, 392, 394, 0, 1157, 393, 637, 638,
	0, 639, 0, 395, 396, 1159, 1117, 1160, 397, 398,
	399, 1161, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 1153, 1162,
	411, 412, 1163, 0, 413, 0, 0, 0, 414, 415,
	418, 1108, 1107, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 1164, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 1165, 447, 0, 269, 1166,
	457, 458, 0, 1118, 459, 643, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 644, 1167, 470, 1168, 1147, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 482,
	646, 483, 484, 485, 647, 486, 487, 488, 1148, 489,
	649, 490, 491, 0, 492, 493, 0, 494, 495, 496,
	497, 498, 499, 500, 650, 501, 503, 502, 504, 0,
	505, 0, 506, 507, 508, 0, 0, 0, 0, 509,
	0, 511, 512, 513, 514, 510, 515, 516, 517, 518,
	0, 519, 520, 521, 1169, 522, 523, 524, 525, 651,
	1206, 0, 527, 528, 534, 535, 529, 530, 536, 537,
	538, 539, 540, 0, 542, 543, 541, 544, 545, 546,
	1111, 547, 548, 531, 532, 549, 550, 1170, 551, 552,
	553, 554, 555, 556, 652, 0, 557, 0, 558, 559,
	560, 562, 533, 563, 568, 569, 653, 564, 565, 566,
	567, 1149, 571, 572, 0, 573, 574, 0, 570, 561,
	0, 575, 576, 577, 578, 579, 580, 581, 353, 582,
	0, 583, 655, 656, 657, 658, 0, 592, 0, 584,
	585, 586, 1150, 587, 1151, 0, 588, 589, 590, 591,
	0, 593, 594, 0, 0, 595, 596, 597, 599, 600,
	598, 601, 1112, 602, 0, 0, 603, 604, 605, 661,
	662, 663, 0, 607, 606, 608, 664, 1036, 0, 1293,
	0, 0, 609, 610, 665, 611, 612, 613, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 614, 1802, 0, 0, 0, 279, 280, 1154, 281,
	282, 283, 284, 285, 286, 615, 616, 0, 287, 617,
	288, 618, 0, 619, 289, 290, 291, 292, 293, 294,
	0, 0, 0, 295, 620, 621, 622, 0, 296, 297,
	623, 0, 1298, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 1155, 320, 321, 322, 0, 0, 0, 0, 0,
	0, 0, 323, 324, 325, 326, 327, 0, 328, 624,
	625, 0, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 339, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 626, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 627,
	628, 359, 0, 267, 0, 0, 0, 0, 0, 360,
	361, 362, 629, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 1156, 366, 367, 630, 631, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 632, 0,
	633, 378, 0, 379, 380, 381, 382, 383, 634, 635,
	636, 460, 1158, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 0, 390, 391, 392, 394, 0, 1157,
	393, 637, 638, 0, 639, 0, 395, 396, 1159, 640,
	1160, 397, 398, 399, 1161, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 641, 1162, 411, 412, 1163, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 1164, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 1165, 447,
	0, 0, 1166, 457, 458, 0, 642, 459, 643, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 644, 1167, 470, 1168, 645, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 482, 646, 483, 484, 485, 647, 486, 487,
	488, 648, 489, 649, 490, 491, 0, 492, 493, 0,
	494, 495, 496, 497, 498, 499, 500, 650, 501, 503,
	502, 504, 0, 505, 0, 506, 507, 508, 0, 0,
	0, 0, 509, 0, 511, 512, 513, 514, 510, 515,
	516, 517, 518, 0, 519, 520, 521, 1169, 522, 523,
	524, 525, 651, 526, 0, 527, 528, 534, 535, 529,
	530, 536, 537, 538, 539, 540, 229, 542, 543, 541,
	544, 545, 546, 0, 547, 548, 531, 532, 549, 550,
	1170, 551, 552, 553, 554, 555, 556, 652, 0, 557,
	0, 558, 559, 560, 562, 533, 563, 568, 569, 653,
	564, 565, 566, 567, 654, 571, 572, 0, 573, 574,
	0, 570, 561, 231, 575, 576, 577, 578, 579, 580,
	581, 353, 582, 0, 583, 655, 656, 657, 658, 0,
	592, 0, 584, 585, 586, 659, 587, 660, 0, 588,
	589, 590, 591, 0, 593, 594, 0, 0, 595, 596,
	597, 599, 600, 598, 601, 0, 602, 0, 0, 603,
	604, 605, 1567, 662, 663, 0, 607, 606, 608, 664,
	1564, 0, 1293, 0, 223, 609, 610, 665, 611, 612,
	613, 0, 0, 224, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 614, 185, 0, 0, 0, 279,
	280, 1154, 281, 282, 283, 284, 285, 286, 615, 616,
	0, 287, 617, 288, 618, 0, 619, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 620, 621, 622,
	0, 296, 297, 623, 0, 1298, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 1155, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 624, 625, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 626, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 627, 628, 359, 0, 267, 0, 0, 0,
	0, 0, 360, 361, 362, 629, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 1156, 366, 367, 630, 631,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 632, 0, 633, 378, 0, 379, 380, 381, 382,
	383, 634, 635, 636, 460, 1158, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 0, 390, 391, 392,
	394, 0, 1157, 393, 637, 638, 0, 639, 0, 395,
	396, 1159, 640, 1160, 397, 398, 399, 1161, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 641, 1162, 411, 412, 1163, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 1164, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 1165, 447, 0, 0, 1166, 457, 458, 0, 642,
	459, 643, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 644, 1167, 470,
	1168, 645, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 648, 489, 649, 490, 491, 0,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	650, 501, 503, 502, 504, 0, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 0, 519, 520, 521,
	1169, 522, 523, 524, 525, 651, 526, 0, 527, 528,
	534, 535, 529, 530, 536, 537, 538, 539, 540, 229,
	542, 543, 541, 544, 545, 546, 0, 547, 548, 531,
	532, 549, 550, 1170, 551, 552, 553, 554, 555, 556,
	652, 0, 557, 0, 558, 559, 560, 562, 533, 563,
	568, 569, 653, 564, 565, 566, 567, 654, 571, 572,
	0, 573, 574, 0, 570, 561, 231, 575, 576, 577,
	578, 579, 580, 581, 353, 582, 0, 583, 655, 656,
	657, 658, 0, 592, 0, 584, 585, 586, 659, 587,
	660, 0, 588, 589, 590, 591, 0, 593, 594, 0,
	0, 595, 596, 597, 599, 600, 598, 601, 0, 602,
	0, 0, 603, 604, 605, 1567, 662, 663, 0, 607,
	606, 608, 664, 0, 0, 0, 0, 223, 609, 610,
	665, 611, 612, 613, 1293, 1292, 224, 0, 0, 0,
	1290, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 185, 277,
	278, 0, 0, 0, 0, 0, 614, 0, 0, 0,
	0, 279, 280, 1154, 281, 282, 283, 284, 285, 286,
	615, 616, 0, 287, 617, 288, 618, 0, 619, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 620,
	621, 622, 0, 296, 297, 623, 0, 1298, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 1155, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 0, 323, 324, 325,
	326, 327, 0, 328, 624, 625, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 626, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 627, 628, 359, 0, 267, 0,
	0, 0, 0, 0, 360, 361, 362, 629, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 1156, 366, 367,
	630, 631, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 632, 0, 633, 378, 0, 379, 380,
	381, 382, 383, 634, 635, 636, 460, 1158, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 0, 390,
	391, 392, 394, 0, 1157, 393, 637, 638, 0, 639,
	0, 395, 396, 1159, 640, 1160, 397, 398, 399, 1161,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 641, 1162, 411, 412,
	1163, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	1164, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 1165, 447, 0, 0, 1166, 457, 458,
	0, 642, 459, 643, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 644,
	1167, 470, 1168, 645, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 482, 646, 483,
	484, 485, 647, 486, 487, 488, 648, 489, 649, 490,
	491, 0, 492, 493, 0, 494, 495, 496, 497, 498,
	499, 500, 650, 501, 503, 502, 504, 0, 505, 0,
	506, 507, 508, 0, 0, 0, 0, 509, 0, 511,
	512, 513, 514, 510, 515, 516, 517, 518, 0, 519,
	520, 521, 1169, 522, 523, 524, 525, 651, 526, 0,
	527, 528, 534, 535, 529, 530, 536, 537, 538, 539,
	540, 0, 542, 543, 541, 544, 545, 546, 0, 547,
	548, 531, 532, 549, 550, 1170, 551, 552, 553, 554,
	555, 556, 652, 0, 557, 0, 558, 559, 560, 562,
	533, 563, 568, 569, 653, 564, 565, 566, 567, 654,
	571, 572, 0, 573, 574, 0, 570, 561, 0, 575,
	576, 577, 578, 579, 580, 581, 353, 582, 0, 583,
	655, 656, 657, 658, 0, 592, 0, 584, 585, 586,
	659, 587, 660, 0, 588, 589, 590, 591, 0, 593,
	594, 0, 0, 595, 596, 597, 599, 600, 598, 601,
	0, 602, 0, 0, 603, 604, 605, 661, 662, 663,
	0, 607, 606, 608, 664, 0, 0, 0, 0, 0,
	609, 610, 665, 611, 612, 613, 1293, 1292, 0, 0,
	0, 0, 1290, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	1589, 277, 278, 0, 0, 0, 0, 0, 614, 0,
	0, 0, 0, 279, 280, 1154, 281, 282, 283, 284,
	285, 286, 615, 616, 0, 287, 617, 288, 618, 0,
	619, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 620, 621, 622, 0, 296, 297, 623, 0, 1298,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 1155, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 326, 327, 0, 328, 624, 625, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 626, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 627, 628, 359, 0,
	267, 0, 0, 0, 0, 0, 360, 361, 362, 629,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 1156,
	366, 367, 630, 631, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 632, 0, 633, 378, 0,
	379, 380, 381, 382, 383, 634, 635, 636, 460, 1158,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	0, 390, 391, 392, 394, 0, 1157, 393, 637, 638,
	0, 639, 0, 395, 396, 1159, 640, 1160, 397, 398,
	399, 1161, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 641, 1162,
	411, 412, 1163, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 1164, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 1165, 447, 0, 0, 1166,
	457, 458, 0, 642, 459, 643, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 644, 1167, 470, 1168, 645, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 482,
	646, 483, 484, 485, 647, 486, 487, 488, 648, 489,
	649, 490, 491, 0, 492, 493, 0, 494, 495, 496,
	497, 498, 499, 500, 650, 501, 503, 502, 504, 0,
	505, 0, 506, 507, 508, 0, 0, 0, 0, 509,
	0, 511, 512, 513, 514, 510, 515, 516, 517, 518,
	0, 519, 520, 521, 1169, 522, 523, 524, 525, 651,
	526, 0, 527, 528, 534, 535, 529, 530, 536, 537,
	538, 539, 540, 0, 542, 543, 541, 544, 545, 546,
	0, 547, 548, 531, 532, 549, 550, 1170, 551, 552,
	553, 554, 555, 556, 652, 0, 557, 0, 558, 559,
	560, 562, 533, 563, 568, 569, 653, 564, 565, 566,
	567, 654, 571, 572, 0, 573, 574, 0, 570, 561,
	0, 575, 576, 577, 578, 579, 580, 581, 353, 582,
	0, 583, 655, 656, 657, 658, 0, 592, 0, 584,
	585, 586, 659, 587, 660, 0, 588, 589, 590, 591,
	0, 593, 594, 0, 0, 595, 596, 597, 599, 600,
	598, 601, 0, 602, 0, 0, 603, 604, 605, 661,
	662, 663, 0, 607, 606, 608, 664, 0, 0, 0,
	0, 0, 609, 610, 665, 611, 612, 613, 1293, 1292,
	0, 0, 0, 0, 1290, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 3455, 277, 278, 0, 0, 0, 0, 0,
	614, 0, 0, 0, 0, 279, 280, 1154, 281, 282,
	283, 284, 285, 286, 615, 616, 0, 287, 617, 288,
	618, 0, 619, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 620, 621, 622, 0, 296, 297, 623,
	0, 1298, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	1155, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 326, 327, 0, 328, 624, 625,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 626, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 627, 628,
	359, 0, 267, 0, 0, 0, 0, 0, 360, 361,
	362, 629, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 1156, 366, 367, 630, 631, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 632, 0, 633,
	378, 0, 379, 380, 381, 382, 383, 634, 635, 636,
	460, 1158, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 0, 390, 391, 392, 394, 0, 1157, 393,
	637, 638, 0, 639, 0, 395, 396, 1159, 640, 1160,
	397, 398, 399, 1161, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	641, 1162, 411, 412, 1163, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 1164, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 1165, 447, 0,
	0, 1166, 457, 458, 0, 642, 459, 643, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 644, 1167, 470, 1168, 645, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 482, 646, 483, 484, 485, 647, 486, 487, 488,
	648, 489, 649, 490, 491, 0, 492, 493, 0, 494,
	495, 496, 497, 498, 499, 500, 650, 501, 503, 502,
	504, 0, 505, 0, 506, 507, 508, 0, 0, 0,
	0, 509, 0, 511, 512, 513, 2243, 510, 515, 516,
	517, 518, 0, 519, 520, 521, 1169, 522, 523, 524,
	525, 651, 526, 0, 527, 528, 534, 535, 529, 530,
	536, 537, 538, 539, 540, 0, 542, 543, 541, 544,
	545, 546, 0, 547, 548, 531, 532, 549, 550, 1170,
	551, 552, 553, 554, 555, 556, 652, 0, 557, 0,
	558, 559, 560, 562, 533, 563, 568, 569, 653, 564,
	565, 566, 567, 654, 571, 572, 0, 573, 574, 0,
	570, 561, 0, 575, 576, 577, 578, 579, 580, 581,
	353, 582, 0, 583, 655, 656, 657, 658, 0, 592,
	0, 584, 585, 586, 659, 587, 660, 0, 588, 589,
	590, 591, 0, 593, 594, 0, 0, 595, 596, 597,
	599, 600, 598, 601, 0, 602, 0, 0, 603, 604,
	605, 661, 662, 663, 0, 607, 606, 608, 664, 0,
	0, 0, 0, 0, 609, 610, 665, 611, 612, 613,
	1293, 2157, 0, 0, 0, 0, 2158, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 1589, 277, 278, 0, 0, 0,
	0, 0, 614, 0, 0, 0, 0, 279, 280, 1154,
	281, 282, 283, 284, 285, 286, 615, 616, 0, 287,
	617, 288, 618, 0, 619, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 620, 621, 622, 0, 296,
	297, 623, 0, 1298, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 1155, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 326, 327, 0, 328,
	624, 625, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 626,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	627, 628, 359, 0, 267, 0, 0, 0, 0, 0,
	360, 361, 362, 629, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 1156, 366, 367, 630, 631, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 632,
	0, 633, 378, 0, 379, 380, 381, 382, 383, 634,
	635, 636, 460, 1158, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 0, 390, 391, 392, 394, 0,
	1157, 393, 637, 638, 0, 639, 0, 395, 396, 1159,
	640, 1160, 397, 398, 399, 1161, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 2156, 409, 408,
	0, 410, 641, 1162, 411, 412, 1163, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 1164, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 1165,
	447, 0, 0, 1166, 457, 458, 0, 642, 459, 643,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 644, 1167, 470, 1168, 645,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 482, 646, 483, 484, 485, 647, 486,
	487, 488, 648, 489, 649, 490, 491, 0, 492, 493,
	0, 494, 495, 496, 497, 498, 499, 500, 650, 501,
	503, 502, 504, 0, 505, 0, 506, 507, 508, 0,
	0, 0, 0, 509, 0, 511, 512, 513, 514, 510,
	515, 516, 517, 518, 0, 519, 520, 521, 1169, 522,
	523, 524, 525, 651, 526, 0, 527, 528, 534, 535,
	529, 530, 536, 537, 538, 539, 540, 0, 542, 543,
	541, 544, 545, 546, 0, 547, 548, 531, 532, 549,
	550, 1170, 551, 552, 553, 554, 555, 556, 652, 0,
	557, 0, 558, 559, 560, 562, 533, 563, 568, 569,
	653, 564, 565, 566, 567, 654, 571, 572, 0, 573,
	574, 0, 570, 561, 0, 575, 576, 577, 578, 579,
	580, 581, 353, 582, 0, 583, 655, 656, 657, 658,
	0, 592, 0, 584, 585, 586, 659, 587, 660, 0,
	588, 589, 590, 591, 0, 593, 594, 0, 0, 595,
	596, 597, 599, 600, 598, 601, 0, 602, 0, 0,
	603, 604, 605, 661, 662, 663, 0, 607, 606, 608,
	664, 0, 0, 0, 0, 0, 609, 610, 665, 611,
	612, 613, 1293, 1292, 0, 0, 0, 0, 1290, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 1589, 277, 278, 0,
	0, 0, 0, 0, 614, 0, 0, 0, 0, 279,
	280, 1154, 281, 282, 283, 284, 285, 286, 615, 616,
	0, 287, 617, 288, 618, 0, 619, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 620, 621, 622,
	0, 296, 297, 623, 0, 1298, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 1155, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 624, 625, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 626, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 627, 628, 359, 0, 267, 0, 0, 0,
	0, 0, 360, 361, 362, 629, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 1156, 366, 367, 630, 631,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 632, 0, 633, 378, 0, 379, 380, 381, 382,
	383, 634, 635, 636, 460, 1158, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 0, 390, 391, 392,
	394, 0, 1157, 393, 637, 638, 0, 639, 0, 395,
	396, 1159, 640, 1160, 397, 398, 399, 1161, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 641, 1162, 411, 412, 1163, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 1164, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 1165, 447, 0, 0, 1166, 457, 458, 0, 642,
	459, 643, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 644, 1167, 470,
	1168, 645, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 648, 489, 649, 490, 491, 0,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	650, 501, 503, 502, 504, 0, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 0, 519, 520, 521,
	1169, 522, 523, 524, 525, 651, 526, 0, 527, 528,
	534, 535, 529, 530, 536, 537, 538, 539, 540, 0,
	542, 543, 541, 544, 545, 546, 0, 547, 548, 531,
	532, 549, 550, 1170, 551, 552, 553, 554, 555, 556,
	652, 0, 557, 0, 558, 559, 560, 562, 533, 563,
	568, 569, 653, 564, 565, 566, 567, 654, 571, 572,
	0, 573, 574, 0, 570, 561, 0, 575, 576, 577,
	578, 579, 580, 581, 353, 582, 0, 583, 655, 656,
	657, 658, 0, 592, 0, 584, 585, 586, 659, 587,
	660, 0, 588, 589, 590, 591, 0, 593, 594, 0,
	0, 595, 596, 597, 599, 600, 598, 601, 0, 602,
	0, 0, 603, 604, 605, 661, 662, 663, 0, 607,
	606, 608, 664, 1212, 0, 0, 0, 0, 609, 610,
	665, 611, 612, 613, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 1114, 0, 0, 1573, 0,
	279, 280, 1154, 281, 282, 283, 284, 285, 286, 615,
	616, 0, 287, 617, 288, 618, 0, 619, 289, 290,
	291, 292, 293, 294, 0, 1113, 0, 295, 620, 621,
	622, 0, 296, 297, 1120, 0, 1101, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 1155, 320, 321, 322, 1104,
	1102, 1103, 1110, 1106, 1105, 1109, 323, 324, 325, 326,
	327, 0, 328, 624, 625, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 626, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 1145, 1146, 359, 0, 267, 0, 0,
	0, 0, 0, 360, 361, 362, 629, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 1156, 366, 367, 630,
	631, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 1152, 0, 633, 378, 0, 379, 380, 381,
	382, 383, 1115, 1116, 1119, 460, 1158, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 0, 1157, 393, 637, 638, 0, 639, 0,
	395, 396, 1159, 1117, 1160, 397, 398, 399, 1161, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 1153, 1162, 411, 412, 1163,
	0, 413, 0, 0, 0, 414, 415, 418, 1108, 1107,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 1164,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 1165, 447, 0, 269, 1166, 457, 458, 0,
	1118, 459, 643, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 644, 1167,
	470, 1168, 1147, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 1148, 489, 649, 490, 491,
	0, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 650, 501, 503, 502, 504, 0, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 0, 519, 520,
	521, 1169, 522, 523, 524, 525, 651, 526, 0, 527,
	528, 534, 535, 529, 530, 536, 537, 538, 539, 540,
	0, 542, 543, 541, 544, 545, 546, 1111, 547, 548,
	531, 532, 549, 550, 1170, 551, 552, 553, 554, 555,
	556, 652, 0, 557, 0, 558, 559, 560, 562, 533,
	563, 568, 569, 653, 564, 565, 566, 567, 1149, 571,
	572, 0, 573, 574, 0, 570, 561, 0, 575, 576,
	577, 578, 579, 580, 581, 353, 582, 0, 583, 655,
	656, 657, 658, 0, 592, 0, 584, 585, 586, 1150,
	587, 1151, 0, 588, 589, 590, 591, 0, 593, 594,
	0, 0, 595, 596, 597, 599, 600, 598, 601, 1112,
	602, 0, 0, 603, 604, 605, 661, 662, 663, 0,
	607, 606, 608, 664, 1036, 0, 264, 0, 0, 609,
	610, 665, 611, 612, 613, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 614, 0,
	0, 0, 0, 279, 280, 0, 281, 282, 283, 284,
	285, 286, 615, 616, 0, 287, 617, 288, 618, 0,
	619, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 620, 621, 622, 0, 296, 297, 623, 0, 0,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 326, 327, 0, 328, 624, 625, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 626, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 627, 628, 359, 0,
	0, 0, 0, 0, 0, 0, 360, 361, 362, 629,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 0,
	366, 367, 630, 631, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 632, 0, 633, 378, 0,
	379, 380, 381, 382, 383, 634, 635, 636, 460, 0,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	0, 390, 391, 392, 394, 0, 0, 393, 637, 638,
	0, 639, 0, 395, 396, 0, 640, 0, 397, 398,
	399, 0, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 641, 0,
	411, 412, 0, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 0, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 0, 447, 0, 0, 0,
	457, 458, 0, 642, 459, 643, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 644, 0, 470, 0, 645, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 482,
	646, 483, 484, 485, 647, 486, 487, 488, 648, 489,
	649, 490, 491, 0, 492, 493, 0, 494, 495, 496,
	497, 498, 499, 500, 650, 501, 503, 502, 504, 0,
	505, 0, 506, 507, 508, 0, 0, 0, 0, 509,
	0, 511, 512, 513, 514, 510, 515, 516, 517, 518,
	0, 519, 520, 521, 0, 522, 523, 524, 525, 651,
	526, 0, 527, 528, 534, 535, 529, 530, 536, 537,
	538, 539, 540, 229, 542, 543, 541, 544, 545, 546,
	0, 547, 548, 531, 532, 549, 550, 0, 551, 552,
	553, 554, 555, 556, 652, 0, 557, 0, 558, 559,
	560, 562, 533, 563, 568, 569, 653, 564, 565, 566,
	567, 654, 571, 572, 0, 573, 574, 0, 570, 561,
	231, 575, 576, 577, 578, 579, 580, 581, 353, 582,
	0, 583, 655, 656, 657, 658, 0, 592, 0, 584,
	585, 586, 659, 587, 660, 0, 588, 589, 590, 591,
	0, 593, 594, 0, 0, 595, 596, 597, 599, 600,
	598, 601, 0, 602, 0, 0, 603, 604, 605, 1567,
	662, 663, 0, 607, 606, 608, 664, 264, 0, 0,
	0, 223, 609, 610, 665, 611, 612, 613, 0, 0,
	224, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 614,
	0, 0, 185, 0, 279, 280, 0, 281, 282, 283,
	284, 285, 286, 615, 616, 0, 287, 617, 288, 618,
	0, 619, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 620, 621, 622, 0, 296, 297, 623, 0,
	0, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 0, 328, 624, 625, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 626, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 627, 628, 359,
	0, 267, 0, 0, 0, 0, 0, 360, 361, 362,
	629, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	0, 366, 367, 630, 631, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 632, 0, 633, 378,
	0, 379, 380, 381, 382, 383, 634, 635, 636, 460,
	0, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 268, 390, 391, 392, 394, 0, 0, 393, 637,
	638, 0, 639, 0, 395, 396, 0, 640, 0, 397,
	398, 399, 0, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 641,
	0, 411, 412, 0, 0, 413, 0, 0, 0, 414,
	415, 418, 0, 0, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 0, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 0, 447, 0, 269,
	0, 457, 458, 0, 642, 459, 643, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 644, 0, 470, 0, 645, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	482, 646, 483, 484, 485, 647, 486, 487, 488, 648,
	489, 649, 490, 491, 0, 492, 493, 0, 494, 495,
	496, 497, 498, 499, 500, 650, 501, 503, 502, 504,
	0, 505, 0, 506, 507, 508, 0, 0, 0, 0,
	509, 0, 511, 512, 513, 514, 510, 515, 516, 517,
	518, 0, 519, 520, 521, 0, 522, 523, 524, 525,
	651, 526, 0, 527, 528, 534, 535, 529, 530, 536,
	537, 538, 539, 540, 0, 542, 543, 541, 544, 545,
	546, 0, 547, 548, 531, 532, 549, 550, 0, 551,
	552, 553, 554, 555, 556, 652, 0, 557, 0, 558,
	559, 560, 562, 533, 563, 568, 569, 653, 564, 565,
	566, 567, 654, 571, 572, 0, 573, 574, 0, 570,
	561, 0, 575, 576, 577, 578, 579, 580, 581, 353,
	582, 0, 583, 655, 656, 657, 658, 0, 592, 0,
	584, 585, 586, 659, 587, 660, 0, 588, 589, 590,
	591, 0, 593, 594, 0, 0, 595, 596, 597, 599,
	600, 598, 601, 0, 602, 0, 0, 603, 604, 605,
	661, 662, 663, 0, 607, 606, 608, 664, 264, 2929,
	0, 0, 0, 609, 610, 665, 611, 612, 613, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	614, 0, 0, 1917, 0, 279, 280, 0, 281, 282,
	283, 284, 285, 286, 615, 616, 0, 287, 617, 288,
	618, 0, 619, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 620, 621, 622, 0, 296, 297, 623,
	0, 0, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 326, 327, 0, 328, 624, 625,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 626, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 627, 628,
	359, 0, 0, 0, 0, 0, 0, 0, 360, 361,
	362, 629, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 0, 366, 367, 630, 631, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 632, 0, 633,
	378, 0, 379, 380, 381, 382, 383, 634, 635, 636,
	460, 0, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 0, 390, 391, 392, 394, 0, 0, 393,
	637, 638, 0, 639, 0, 395, 396, 0, 640, 0,
	397, 398, 399, 0, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	641, 0, 411, 412, 0, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 0, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 0, 447, 0,
	0, 0, 457, 458, 0, 642, 459, 643, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 644, 0, 470, 0, 645, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 482, 646, 483, 484, 485, 647, 486, 487, 488,
	648, 489, 649, 490, 491, 0, 492, 493, 0, 494,
	495, 496, 497, 498, 499, 500, 650, 501, 503, 502,
	504, 0, 505, 0, 506, 507, 508, 0, 0, 0,
	0, 509, 0, 511, 512, 513, 514, 510, 515, 516,
	517, 518, 0, 519, 520, 521, 0, 522, 523, 524,
	525, 651, 526, 0, 527, 528, 534, 535, 529, 530,
	536, 537, 538, 539, 540, 0, 542, 543, 541, 544,
	545, 546, 0, 547, 548, 531, 532, 549, 550, 0,
	551, 552, 553, 554, 555, 556, 652, 0, 557, 0,
	558, 559, 560, 562, 533, 563, 568, 569, 653, 564,
	565, 566, 567, 654, 571, 572, 0, 573, 574, 0,
	570, 561, 0, 575, 576, 577, 578, 579, 580, 581,
	353, 582, 0, 583, 655, 656, 657, 658, 0, 592,
	0, 584, 585, 586, 659, 587, 660, 0, 588, 589,
	590, 591, 0, 593, 594, 0, 0, 595, 596, 597,
	599, 600, 598, 601, 0, 602, 0, 0, 603, 604,
	605, 661, 662, 663, 0, 607, 606, 608, 664, 264,
	0, 0, 0, 0, 609, 610, 665, 611, 612, 613,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 614, 0, 0, 4621, 0, 279, 280, 0, 281,
	282, 283, 284, 285, 286, 615, 616, 0, 287, 617,
	288, 618, 0, 619, 289, 290, 291, 292, 293, 294,
	0, 0, 0, 295, 620, 621, 622, 0, 296, 297,
	623, 0, 0, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 322, 0, 0, 0, 0, 0,
	0, 0, 323, 324, 325, 326, 327, 0, 328, 624,
	625, 0, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 339, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 626, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 627,
	628, 359, 0, 267, 0, 0, 0, 0, 0, 360,
	361, 362, 629, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 0, 366, 367, 630, 631, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 632, 0,
	633, 378, 0, 379, 380, 381, 382, 383, 634, 635,
	636, 460, 0, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 268, 390, 391, 392, 394, 0, 0,
	393, 637, 638, 0, 639, 0, 395, 396, 0, 640,
	0, 397, 398, 399, 0, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 641, 0, 411, 412, 0, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 0, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 0, 447,
	0, 269, 0, 457, 458, 0, 642, 459, 643, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 644, 0, 470, 0, 645, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 482, 646, 483, 484, 485, 647, 486, 487,
	488, 648, 489, 649, 490, 491, 0, 492, 493, 0,
	494, 495, 496, 497, 498, 499, 500, 650, 501, 503,
	502, 504, 0, 505, 0, 506, 507, 508, 0, 0,
	0, 0, 509, 0, 511, 512, 513, 514, 510, 515,
	516, 517, 518, 0, 519, 520, 521, 0, 522, 523,
	524, 525, 651, 526, 0, 527, 528, 534, 535, 529,
	530, 536, 537, 538, 539, 540, 0, 542, 543, 541,
	544, 545, 546, 0, 547, 548, 531, 532, 549, 550,
	0, 551, 552, 553, 554, 555, 556, 652, 0, 557,
	0, 558, 559, 560, 562, 533, 563, 568, 569, 653,
	564, 565, 566, 567, 654, 571, 572, 0, 573, 574,
	0, 570, 561, 0, 575, 576, 577, 578, 579, 580,
	581, 353, 582, 0, 583, 655, 656, 657, 658, 0,
	592, 0, 584, 585, 586, 659, 587, 660, 0, 588,
	589, 590, 591, 0, 593, 594, 0, 0, 595, 596,
	597, 599, 600, 598, 601, 0, 602, 0, 0, 603,
	604, 605, 661, 662, 663, 0, 607, 606, 608, 664,
	264, 0, 0, 0, 0, 609, 610, 665, 611, 612,
	613, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 614, 3405, 0, 0, 0, 279, 280, 0,
	281, 282, 283, 284, 285, 286, 615, 616, 0, 287,
	617, 288, 618, 0, 619, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 620, 621, 622, 0, 296,
	297, 623, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 326, 327, 0, 328,
	624, 625, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 626,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	627, 628, 359, 0, 267, 0, 0, 0, 0, 0,
	360, 361, 362, 629, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 0, 366, 367, 630, 631, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 632,
	0, 633, 378, 0, 379, 380, 381, 382, 383, 634,
	635, 636, 460, 0, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 268, 390, 391, 392, 394, 0,
	0, 393, 637, 638, 0, 639, 0, 395, 396, 0,
	640, 0, 397, 398, 399, 0, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 641, 0, 411, 412, 0, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 0, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 0,
	447, 0, 269, 0, 457, 458, 0, 642, 459, 643,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 644, 0, 470, 0, 645,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 482, 646, 483, 484, 485, 647, 486,
	487, 488, 648, 489, 649, 490, 491, 0, 492, 493,
	0, 494, 495, 496, 497, 498, 499, 500, 650, 501,
	503, 502, 504, 0, 505, 0, 506, 507, 508, 0,
	0, 0, 0, 509, 0, 511, 512, 513, 514, 510,
	515, 516, 517, 518, 0, 519, 520, 521, 0, 522,
	523, 524, 525, 651, 526, 0, 527, 528, 534, 535,
	529, 530, 536, 537, 538, 539, 540, 0, 542, 543,
	541, 544, 545, 546, 0, 547, 548, 531, 532, 549,
	550, 0, 551, 552, 553, 554, 555, 556, 652, 0,
	557, 0, 558, 559, 560, 562, 533, 563, 568, 569,
	653, 564, 565, 566, 567, 654, 571, 572, 0, 573,
	574, 0, 570, 561, 0, 575, 576, 577, 578, 579,
	580, 581, 353, 582, 0, 583, 655, 656, 657, 658,
	0, 592, 0, 584, 585, 586, 659, 587, 660, 0,
	588, 589, 590, 591, 0, 593, 594, 0, 0, 595,
	596, 597, 599, 600, 598, 601, 0, 602, 0, 0,
	603, 604, 605, 661, 662, 663, 0, 607, 606, 608,
	664, 264, 0, 0, 0, 0, 609, 610, 665, 611,
	612, 613, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 614, 1561, 0, 0, 0, 279, 280,
	0, 281, 282, 283, 284, 285, 286, 615, 616, 0,
	287, 617, 288, 618, 0, 619, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 295, 620, 621, 622, 0,
	296, 297, 623, 0, 0, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 322, 0, 0, 0,
	0, 0, 0, 0, 323, 324, 325, 326, 327, 0,
	328, 624, 625, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	626, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 627, 628, 359, 0, 0, 0, 0, 0, 0,
	0, 360, 361, 362, 629, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 0, 366, 367, 630, 631, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	632, 0, 633, 378, 0, 379, 380, 381, 382, 383,
	634, 635, 636, 460, 0, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 0, 390, 391, 392, 394,
	0, 0, 393, 637, 638, 0, 639, 0, 395, 396,
	0, 640, 0, 397, 398, 399, 0, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 641, 0, 411, 412, 0, 0, 413,
	0, 0, 0, 414, 415, 418, 0, 0, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 0, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	0, 447, 0, 0, 0, 457, 458, 0, 642, 459,
	643, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 644, 0, 470, 0,
	645, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 482, 646, 483, 484, 485, 647,
	486, 487, 488, 648, 489, 649, 490, 491, 0, 492,
	493, 0, 494, 495, 496, 497, 498, 499, 500, 650,
	501, 503, 502, 504, 0, 505, 0, 506, 507, 508,
	0, 0, 0, 0, 509, 0, 511, 512, 513, 514,
	510, 515, 516, 517, 518, 0, 519, 520, 521, 0,
	522, 523, 524, 525, 651, 526, 0, 527, 528, 534,
	535, 529, 530, 536, 537, 538, 539, 540, 0, 542,
	543, 541, 544, 545, 546, 0, 547, 548, 531, 532,
	549, 550, 0, 551, 552, 553, 554, 555, 556, 652,
	0, 557, 0, 558, 559, 560, 562, 533, 563, 568,
	569, 653, 564, 565, 566, 567, 654, 571, 572, 0,
	573, 574, 0, 570, 561, 0, 575, 576, 577, 578,
	579, 580, 581, 353, 582, 0, 583, 655, 656, 657,
	658, 0, 592, 0, 584, 585, 586, 659, 587, 660,
	0, 588, 589, 590, 591, 0, 593, 594, 0, 0,
	595, 596, 597, 599, 600, 598, 601, 0, 602, 0,
	0, 603, 604, 605, 661, 662, 663, 0, 607, 606,
	608, 664, 264, 0, 0, 0, 0, 609, 610, 665,
	611, 612, 613, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 614, 0, 0, 2917, 0, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 615, 616,
	0, 287, 617, 288, 618, 0, 619, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 620, 621, 622,
	0, 296, 297, 623, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 624, 625, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 626, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 627, 628, 359, 0, 0, 0, 0, 0,
	0, 0, 360, 361, 362, 629, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 0, 366, 367, 630, 631,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 632, 0, 633, 378, 0, 379, 380, 381, 382,
	383, 634, 635, 636, 460, 0, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 0, 390, 391, 392,
	394, 0, 0, 393, 637, 638, 0, 639, 0, 395,
	396, 0, 640, 0, 397, 398, 399, 0, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 641, 0, 411, 412, 0, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 0, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 0, 447, 0, 0, 0, 457, 458, 0, 642,
	459, 643, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 644, 0, 470,
	0, 645, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 648, 489, 649, 490, 491, 0,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	650, 501, 503, 502, 504, 0, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 0, 519, 520, 521,
	0, 522, 523, 524, 525, 651, 526, 0, 527, 528,
	534, 535, 529, 530, 536, 537, 538, 539, 540, 0,
	542, 543, 541, 544, 545, 546, 0, 547, 548, 531,
	532, 549, 550, 0, 551, 552, 553, 554, 555, 556,
	652, 0, 557, 0, 558, 559, 560, 562, 533, 563,
	568, 569, 653, 564, 565, 566, 567, 654, 571, 572,
	0, 573, 574, 0, 570, 561, 0, 575, 576, 577,
	578, 579, 580, 581, 353, 582, 0, 583, 655, 656,
	657, 658, 0, 592, 0, 584, 585, 586, 659, 587,
	660, 0, 588, 589, 590, 591, 0, 593, 594, 0,
	0, 595, 596, 597, 599, 600, 598, 601, 0, 602,
	0, 0, 603, 604, 605, 661, 662, 663, 0, 607,
	606, 608, 664, 264, 0, 0, 0, 0, 609, 610,
	665, 611, 612, 613, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 614, 0, 0, 3561, 0,
	279, 280, 0, 281, 282, 283, 284, 285, 286, 615,
	616, 0, 287, 617, 288, 618, 0, 619, 289, 290,
	291, 292, 293, 294, 0, 0, 0, 295, 620, 621,
	622, 0, 296, 297, 623, 0, 0, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 0, 323, 324, 325, 326,
	327, 0, 328, 624, 625, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 626, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 627, 628, 359, 0, 0, 0, 0,
	0, 0, 0, 360, 361, 362, 629, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 0, 366, 367, 630,
	631, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 632, 0, 633, 378, 0, 379, 380, 381,
	382, 383, 634, 635, 636, 460, 0, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 0, 390, 391,
	392, 394, 0, 0, 393, 637, 638, 0, 639, 0,
	395, 396, 0, 640, 0, 397, 398, 399, 0, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 641, 0, 411, 412, 0,
	0, 413, 0, 0, 0, 414, 415, 418, 0, 0,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 0,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 0, 447, 0, 0, 0, 457, 458, 0,
	642, 459, 643, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 644, 0,
	470, 0, 645, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 648, 489, 649, 490, 491,
	0, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 650, 501, 503, 502, 504, 0, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 0, 519, 520,
	521, 0, 522, 523, 524, 525, 651, 526, 0, 527,
	528, 534, 535, 529, 530, 536, 537, 538, 539, 540,
	0, 542, 543, 541, 544, 545, 546, 0, 547, 548,
	531, 532, 549, 550, 0, 551, 552, 553, 554, 555,
	556, 652, 0, 557, 0, 558, 559, 560, 562, 533,
	563, 568, 569, 653, 564, 565, 566, 567, 654, 571,
	572, 0, 573, 574, 0, 570, 561, 0, 575, 576,
	577, 578, 579, 580, 581, 353, 582, 0, 583, 655,
	656, 657, 658, 0, 592, 0, 584, 585, 586, 659,
	587, 660, 0, 588, 589, 590, 591, 0, 593, 594,
	0, 0, 595, 596, 597, 599, 600, 598, 601, 0,
	602, 0, 0, 603, 604, 605, 661, 662, 663, 0,
	607, 606, 608, 664, 878, 0, 785, 0, 0, 609,
	610, 665, 611, 612, 613, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 614, 2234,
	0, 0, 0, 279, 280, 0, 281, 282, 283, 284,
	285, 286, 615, 616, 0, 287, 617, 288, 618, 0,
	619, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 620, 621, 622, 0, 296, 297, 623, 0, 0,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 792, 327, 0, 328, 624, 625, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 626, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 627, 628, 359, 0,
	267, 0, 0, 0, 0, 0, 360, 361, 362, 629,
	0, 0, 0, 363, 0, 364, 365, 0, 876, 0,
	366, 367, 630, 631, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 632, 0, 633, 378, 0,
	379, 380, 381, 382, 383, 634, 635, 636, 460, 0,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	268, 390, 391, 392, 394, 0, 0, 393, 637, 638,
	0, 639, 0, 395, 396, 0, 640, 0, 397, 398,
	399, 0, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 641, 0,
	411, 412, 0, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 0, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 0, 447, 0, 269, 0,
	457, 458, 0, 642, 459, 643, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 644, 0, 470, 0, 645, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 482,
	646, 483, 484, 485, 647, 486, 487, 488, 648, 489,
	649, 490, 491, 0, 492, 493, 0, 494, 495, 496,
	497, 498, 499, 500, 650, 501, 503, 502, 504, 0,
	505, 0, 506, 507, 508, 0, 0, 0, 0, 509,
	0, 511, 512, 513, 514, 510, 515, 516, 517, 518,
	0, 519, 520, 521, 0, 522, 523, 524, 525, 651,
	526, 0, 527, 528, 534, 535, 529, 530, 536, 537,
	538, 539, 540, 0, 542, 543, 541, 544, 545, 546,
	0, 547, 548, 531, 532, 549, 550, 0, 551, 552,
	553, 554, 555, 556, 652, 0, 557, 0, 558, 559,
	560, 562, 533, 563, 568, 569, 653, 564, 565, 566,
	567, 654, 571, 572, 0, 573, 574, 0, 570, 561,
	790, 575, 576, 577, 578, 579, 791, 581, 353, 582,
	0, 583, 655, 656, 657, 658, 0, 592, 0, 584,
	585, 586, 659, 587, 660, 0, 588, 589, 590, 591,
	0, 593, 594, 0, 0, 595, 596, 597, 599, 600,
	598, 601, 0, 602, 0, 0, 603, 604, 605, 661,
	662, 663, 0, 607, 606, 608, 664, 0, 0, 783,
	0, 785, 609, 610, 665, 611, 612, 613, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 795, 277, 278, 0, 0,
	0, 0, 0, 614, 0, 0, 0, 0, 279, 280,
	0, 281, 282, 283, 284, 285, 286, 615, 616, 0,
	287, 617, 288, 618, 0, 619, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 295, 620, 621, 622, 0,
	296, 297, 623, 0, 0, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 322, 0, 0, 0,
	0, 0, 0, 0, 323, 324, 325, 792, 327, 0,
	328, 624, 625, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	626, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 627, 628, 359, 0, 267, 0, 0, 0, 0,
	0, 360, 361, 362, 629, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 0, 366, 367, 630, 631, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	632, 0, 633, 378, 0, 379, 380, 381, 382, 383,
	634, 635, 636, 460, 0, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	0, 0, 393, 637, 638, 0, 639, 0, 395, 396,
	0, 640, 0, 397, 398, 399, 0, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 641, 0, 411, 412, 0, 0, 413,
	0, 0, 0, 414, 415, 418, 0, 0, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 0, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	0, 447, 0, 269, 0, 457, 458, 0, 642, 459,
	643, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 644, 0, 470, 0,
	645, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 482, 646, 483, 484, 485, 647,
	486, 487, 488, 648, 489, 649, 490, 491, 0, 492,
	493, 0, 494, 495, 496, 497, 498, 499, 500, 650,
	501, 503, 502, 504, 0, 505, 0, 506, 507, 508,
	0, 0, 0, 0, 509, 0, 511, 512, 513, 514,
	510, 515, 516, 517, 518, 0, 519, 520, 521, 0,
	522, 523, 524, 525, 651, 526, 0, 527, 528, 534,
	535, 529, 530, 536, 537, 538, 539, 540, 0, 542,
	543, 541, 544, 545, 546, 0, 547, 548, 531, 532,
	549, 550, 0, 551, 552, 553, 554, 555, 556, 652,
	0, 557, 0, 558, 559, 560, 562, 533, 563, 568,
	569, 653, 564, 565, 566, 567, 654, 571, 572, 0,
	573, 574, 0, 570, 561, 790, 575, 576, 577, 578,
	579, 791, 581, 353, 582, 0, 583, 655, 656, 657,
	658, 0, 592, 0, 584, 585, 586, 659, 587, 660,
	0, 588, 589, 590, 591, 0, 593, 594, 0, 0,
	595, 596, 597, 599, 600, 598, 601, 0, 602, 0,
	0, 603, 604, 605, 661, 662, 663, 1956, 607, 606,
	608, 664, 0, 0, 0, 0, 0, 609, 610, 665,
	611, 612, 613, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 0,
	795, 0, 0, 0, 279, 280, 1154, 281, 282, 283,
	284, 285, 286, 0, 1962, 0, 287, 1952, 288, 1968,
	0, 1975, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 1978, 1979, 0, 0, 296, 297, 0, 0,
	1298, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 1155,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 1137, 328, 1966, 1965, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 1122, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 0, 0, 359,
	0, 0, 0, 0, 0, 0, 0, 360, 361, 362,
	1964, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	1156, 366, 367, 1973, 1974, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 0, 0, 0, 378,
	0, 379, 380, 381, 382, 383, 0, 0, 0, 460,
	1158, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 0, 390, 391, 392, 394, 0, 1157, 393, 1959,
	1960, 0, 1955, 0, 395, 396, 1159, 0, 1160, 397,
	398, 399, 1161, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 0,
	1162, 411, 412, 1163, 0, 413, 0, 0, 0, 414,
	415, 418, 0, 0, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 1164, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 1165, 447, 0, 0,
	1166, 457, 458, 0, 0, 459, 1967, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 0, 1167, 470, 1168, 0, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	482, 1949, 483, 484, 485, 1950, 486, 487, 488, 0,
	489, 0, 490, 491, 0, 492, 493, 0, 494, 495,
	496, 497, 498, 499, 500, 1963, 501, 503, 502, 504,
	0, 505, 0, 506, 507, 508, 0, 0, 0, 0,
	509, 0, 511, 512, 513, 514, 510, 515, 516, 517,
	518, 0, 519, 520, 521, 1169, 522, 523, 524, 525,
	0, 526, 0, 527, 528, 534, 535, 529, 530, 536,
	537, 538, 539, 540, 0, 542, 543, 541, 544, 545,
	546, 0, 547, 548, 531, 532, 549, 550, 1170, 551,
	552, 553, 554, 555, 556, 1961, 0, 557, 0, 558,
	559, 560, 562, 533, 563, 568, 569, 1977, 564, 565,
	566, 567, 0, 571, 572, 0, 573, 574, 0, 570,
	561, 0, 575, 576, 577, 578, 579, 580, 581, 353,
	582, 0, 583, 1969, 1970, 1971, 1972, 0, 592, 0,
	584, 585, 586, 0, 587, 0, 0, 588, 589, 590,
	591, 0, 593, 594, 0, 0, 595, 596, 597, 599,
	600, 598, 601, 0, 602, 0, 0, 603, 604, 605,
	0, 1953, 1976, 0, 607, 606, 608, 0, 785, 0,
	0, 0, 0, 609, 610, 0, 611, 612, 613, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	614, 0, 0, 0, 0, 279, 280, 1943, 281, 282,
	283, 284, 285, 286, 615, 616, 0, 287, 617, 288,
	618, 0, 619, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 620, 621, 622, 0, 296, 297, 623,
	0, 0, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 792, 327, 0, 328, 624, 625,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 626, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 627, 628,
	359, 0, 267, 0, 0, 0, 0, 0, 360, 361,
	362, 629, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 0, 366, 367, 630, 631, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 632, 0, 633,
	378, 0, 379, 380, 381, 382, 383, 634, 635, 636,
	460, 0, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 268, 390, 391, 392, 394, 0, 0, 393,
	637, 638, 0, 639, 0, 395, 396, 0, 640, 0,
	397, 398, 399, 0, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	641, 0, 411, 412, 0, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 0, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 0, 447, 0,
	269, 0, 457, 458, 0, 642, 459, 643, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 644, 0, 470, 0, 645, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 482, 646, 483, 484, 485, 647, 486, 487, 488,
	648, 489, 649, 490, 491, 0, 492, 493, 0, 494,
	495, 496, 497, 498, 499, 500, 650, 501, 503, 502,
	504, 0, 505, 0, 506, 507, 508, 0, 0, 0,
	0, 509, 0, 511, 512, 513, 514, 510, 515, 516,
	517, 518, 0, 519, 520, 521, 0, 522, 523, 524,
	525, 651, 526, 0, 527, 528, 534, 535, 529, 530,
	536, 537, 538, 539, 540, 0, 542, 543, 541, 544,
	545, 546, 0, 547, 548, 531, 532, 549, 550, 0,
	551, 552, 553, 554, 555, 556, 652, 0, 557, 0,
	558, 559, 560, 562, 533, 563, 568, 569, 653, 564,
	565, 566, 567, 654, 571, 572, 0, 573, 574, 0,
	570, 561, 790, 575, 576, 577, 578, 579, 791, 581,
	353, 582, 0, 583, 655, 656, 657, 658, 0, 592,
	0, 584, 585, 586, 659, 587, 660, 0, 588, 589,
	590, 591, 0, 593, 594, 0, 0, 595, 596, 597,
	599, 600, 598, 601, 0, 602, 0, 0, 603, 604,
	605, 661, 662, 663, 785, 607, 606, 608, 664, 0,
	0, 0, 0, 0, 609, 610, 665, 611, 612, 613,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 614, 795, 0, 0,
	0, 279, 280, 0, 281, 282, 283, 284, 285, 286,
	615, 616, 0, 287, 617, 288, 618, 0, 619, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 620,
	621, 622, 0, 296, 297, 623, 0, 0, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 0, 323, 324, 325,
	792, 327, 0, 328, 624, 625, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 626, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 627, 628, 359, 0, 267, 0,
	0, 0, 0, 0, 360, 361, 362, 629, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 0, 366, 367,
	630, 631, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 632, 0, 633, 378, 0, 379, 380,
	381, 382, 383, 634, 635, 636, 460, 0, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 0, 393, 637, 638, 0, 639,
	0, 395, 396, 0, 640, 0, 397, 398, 399, 0,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 641, 0, 411, 412,
	0, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	0, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 0, 447, 0, 269, 0, 457, 458,
	0, 642, 459, 643, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 644,
	0, 470, 0, 645, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 482, 646, 483,
	484, 485, 647, 486, 487, 488, 648, 489, 649, 490,
	491, 0, 492, 493, 0, 494, 495, 496, 497, 498,
	499, 500, 650, 501, 503, 502, 504, 0, 505, 0,
	506, 507, 508, 0, 0, 0, 0, 509, 0, 511,
	512, 513, 514, 510, 515, 516, 517, 518, 0, 519,
	520, 521, 0, 2277, 523, 524, 525, 651, 526, 0,
	527, 528, 534, 535, 529, 530, 2278, 537, 538, 539,
	540, 0, 542, 543, 541, 544, 545, 546, 0, 547,
	548, 531, 532, 549, 550, 0, 551, 552, 553, 554,
	555, 556, 652, 0, 557, 0, 558, 559, 560, 562,
	533, 563, 568, 569, 653, 564, 565, 566, 567, 654,
	571, 572, 0, 573, 574, 0, 570, 561, 790, 575,
	576, 577, 578, 579, 791, 581, 353, 582, 0, 583,
	655, 656, 657, 658, 0, 592, 0, 584, 585, 586,
	659, 587, 660, 0, 588, 589, 2279, 591, 0, 593,
	594, 0, 0, 595, 596, 597, 599, 600, 598, 601,
	0, 602, 0, 0, 603, 604, 605, 661, 662, 663,
	0, 607, 606, 608, 664, 0, 0, 0, 0, 0,
	609, 610, 665, 611, 612, 613, 2026, 0, 1293, 1993,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 795, 0, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	614, 0, 0, 0, 0, 279, 280, 1154, 281, 282,
	283, 284, 285, 286, 615, 616, 0, 287, 617, 288,
	618, 0, 619, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 620, 621, 622, 0, 296, 297, 623,
	0, 1298, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	1155, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	1990, 323, 324, 325, 326, 327, 0, 328, 624, 625,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 626, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 627, 628,
	359, 0, 267, 0, 0, 0, 0, 0, 360, 361,
	362, 629, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 1156, 366, 367, 630, 631, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 632, 0, 633,
	378, 0, 379, 380, 381, 382, 383, 634, 635, 636,
	460, 1158, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 0, 390, 391, 392, 394, 0, 1157, 393,
	637, 638, 0, 639, 0, 395, 396, 1159, 640, 1160,
	397, 398, 399, 1161, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	641, 1162, 411, 412, 1163, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 1164, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 1165, 447, 0,
	0, 1166, 457, 458, 0, 642, 459, 643, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 644, 1167, 470, 1168, 645, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 482, 646, 483, 484, 485, 647, 486, 487, 488,
	648, 489, 649, 490, 491, 0, 492, 493, 0, 494,
	495, 496, 497, 498, 499, 500, 650, 501, 503, 502,
	504, 0, 505, 0, 506, 507, 508, 0, 0, 0,
	0, 509, 0, 511, 512, 513, 514, 510, 515, 516,
	517, 518, 0, 519, 520, 521, 1169, 522, 523, 524,
	525, 651, 526, 0, 527, 528, 534, 535, 529, 530,
	536, 537, 538, 539, 540, 0, 542, 543, 541, 544,
	545, 546, 1991, 547, 548, 531, 532, 549, 550, 1170,
	551, 552, 553, 554, 555, 556, 652, 0, 557, 0,
	558, 559, 560, 562, 533, 563, 568, 569, 653, 564,
	565, 566, 567, 654, 571, 572, 0, 573, 574, 0,
	570, 561, 0, 575, 576, 577, 578, 579, 580, 581,
	353, 582, 0, 583, 655, 656, 657, 658, 0, 592,
	0, 584, 585, 586, 659, 587, 660, 0, 588, 589,
	590, 591, 0, 593, 594, 0, 0, 595, 596, 597,
	599, 600, 598, 601, 0, 602, 0, 0, 603, 604,
	605, 661, 662, 663, 0, 607, 606, 608, 664, 1987,
	0, 1293, 1993, 0, 609, 610, 665, 611, 612, 613,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 614, 0, 0, 0, 0, 279, 280,
	1154, 281, 282, 283, 284, 285, 286, 615, 616, 0,
	287, 617, 288, 618, 0, 619, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 295, 620, 621, 622, 0,
	296, 297, 623, 0, 1298, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 1155, 320, 321, 322, 0, 0, 0,
	0, 0, 0, 1990, 323, 324, 325, 326, 327, 0,
	328, 624, 625, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	626, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 627, 628, 359, 0, 267, 0, 0, 0, 0,
	0, 360, 361, 362, 629, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 1156, 366, 367, 630, 631, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	632, 0, 633, 378, 0, 379, 380, 381, 382, 383,
	634, 635, 636, 460, 1158, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 0, 390, 391, 392, 394,
	0, 1157, 393, 637, 638, 0, 639, 0, 395, 396,
	1159, 640, 1160, 397, 398, 399, 1161, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 641, 1162, 411, 412, 1163, 0, 413,
	0, 0, 0, 414, 415, 418, 0, 0, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 1164, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	1165, 447, 0, 0, 1166, 457, 458, 0, 642, 459,
	643, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 644, 1167, 470, 1168,
	645, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 482, 646, 483, 484, 485, 647,
	486, 487, 488, 648, 489, 649, 490, 491, 0, 492,
	493, 0, 494, 495, 496, 497, 498, 499, 500, 650,
	501, 503, 502, 504, 0, 505, 0, 506, 507, 508,
	0, 0, 0, 0, 509, 0, 511, 512, 513, 514,
	510, 515, 516, 517, 518, 0, 519, 520, 521, 1169,
	522, 523, 524, 525, 651, 526, 0, 527, 528, 534,
	535, 529, 530, 536, 537, 538, 539, 540, 0, 542,
	543, 541, 544, 545, 546, 1991, 547, 548, 531, 532,
	549, 550, 1170, 551, 552, 553, 554, 555, 556, 652,
	0, 557, 0, 558, 559, 560, 562, 533, 563, 568,
	569, 653, 564, 565, 566, 567, 654, 571, 572, 0,
	573, 574, 0, 570, 561, 0, 575, 576, 577, 578,
	579, 580, 581, 353, 582, 0, 583, 655, 656, 657,
	658, 0, 592, 0, 584, 585, 586, 659, 587, 660,
	0, 588, 589, 590, 591, 0, 593, 594, 0, 0,
	595, 596, 597, 599, 600, 598, 601, 0, 602, 0,
	0, 603, 604, 605, 661, 662, 663, 785, 607, 606,
	608, 664, 0, 0, 0, 0, 0, 609, 610, 665,
	611, 612, 613, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 614,
	0, 0, 0, 0, 279, 280, 0, 281, 282, 283,
	284, 285, 286, 615, 616, 0, 287, 617, 288, 618,
	0, 619, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 620, 621, 622, 0, 296, 297, 623, 0,
	0, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 792, 327, 0, 328, 624, 625, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 626, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 627, 628, 359,
	0, 267, 0, 0, 0, 0, 0, 360, 361, 362,
	629, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	0, 366, 367, 630, 631, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 632, 0, 633, 378,
	0, 379, 380, 381, 382, 383, 634, 635, 636, 460,
	0, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 268, 390, 391, 392, 394, 0, 0, 393, 637,
	638, 0, 639, 0, 395, 396, 0, 640, 0, 397,
	398, 399, 0, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 641,
	0, 411, 412, 0, 0, 413, 0, 0, 0, 414,
	415, 418, 0, 0, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 0, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 0, 447, 0, 269,
	0, 457, 458, 0, 642, 459, 643, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 644, 0, 470, 0, 645, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	482, 646, 483, 484, 485, 647, 486, 487, 488, 648,
	489, 649, 490, 491, 0, 492, 493, 0, 494, 495,
	496, 497, 498, 499, 500, 650, 501, 503, 502, 504,
	0, 505, 0, 506, 507, 508, 0, 0, 0, 0,
	509, 0, 511, 512, 513, 514, 510, 515, 516, 517,
	518, 0, 519, 520, 521, 0, 522, 523, 524, 525,
	651, 526, 0, 527, 528, 534, 535, 529, 530, 1982,
	537, 538, 539, 540, 0, 1983, 543, 541, 544, 545,
	546, 0, 547, 548, 531, 532, 549, 550, 0, 551,
	552, 553, 554, 555, 556, 652, 0, 557, 0, 558,
	559, 560, 562, 533, 563, 568, 569, 653, 564, 565,
	566, 567, 654, 571, 572, 0, 573, 574, 0, 570,
	561, 790, 575, 576, 577, 578, 579, 791, 581, 353,
	582, 0, 583, 655, 656, 657, 658, 0, 592, 0,
	584, 585, 586, 659, 587, 660, 0, 588, 589, 1981,
	591, 0, 593, 594, 0, 0, 595, 596, 597, 599,
	600, 598, 601, 0, 602, 0, 0, 603, 604, 605,
	661, 662, 663, 785, 607, 606, 608, 664, 0, 0,
	0, 0, 0, 609, 610, 665, 611, 612, 613, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 614, 795, 0, 0, 0,
	279, 280, 0, 281, 282, 283, 284, 285, 286, 615,
	616, 0, 287, 617, 288, 618, 0, 619, 289, 290,
	291, 292, 293, 294, 0, 0, 0, 295, 620, 621,
	622, 0, 296, 297, 623, 0, 0, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 0, 323, 324, 325, 792,
	327, 0, 328, 624, 625, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 626, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 627, 628, 359, 0, 267, 0, 0,
	0, 0, 0, 360, 361, 362, 629, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 0, 366, 367, 630,
	631, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 632, 0, 633, 378, 0, 379, 380, 381,
	382, 383, 634, 635, 636, 460, 0, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 0, 0, 393, 637, 638, 0, 639, 0,
	395, 396, 0, 640, 0, 397, 398, 399, 0, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 641, 0, 411, 412, 0,
	0, 413, 0, 0, 0, 414, 415, 418, 0, 0,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 0,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 0, 447, 0, 269, 0, 457, 458, 0,
	642, 459, 643, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 644, 0,
	470, 0, 645, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 648, 489, 649, 490, 491,
	0, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 650, 501, 503, 502, 504, 0, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 0, 519, 520,
	521, 0, 522, 523, 524, 525, 651, 526, 0, 527,
	528, 534, 535, 529, 530, 1934, 537, 538, 539, 540,
	0, 1935, 543, 541, 544, 545, 546, 0, 547, 548,
	531, 532, 549, 550, 0, 551, 552, 553, 554, 555,
	556, 652, 0, 557, 0, 558, 559, 560, 562, 533,
	563, 568, 569, 653, 564, 565, 566, 567, 654, 571,
	572, 0, 573, 574, 0, 570, 561, 790, 575, 576,
	577, 578, 579, 791, 581, 353, 582, 0, 583, 655,
	656, 657, 658, 0, 592, 0, 584, 585, 586, 659,
	587, 660, 0, 588, 589, 1933, 591, 0, 593, 594,
	0, 0, 595, 596, 597, 599, 600, 598, 601, 0,
	602, 0, 0, 603, 604, 605, 661, 662, 663, 0,
	607, 606, 608, 664, 1293, 1993, 0, 0, 0, 609,
	610, 665, 611, 612, 613, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 795, 0, 0, 0, 614, 0, 0, 0,
	0, 279, 280, 1154, 281, 282, 283, 284, 285, 286,
	615, 616, 0, 287, 617, 288, 618, 0, 619, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 620,
	621, 622, 0, 296, 297, 623, 0, 1298, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 1155, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 1990, 323, 324, 325,
	326, 327, 0, 328, 624, 625, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 626, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 627, 628, 359, 0, 267, 0,
	0, 0, 0, 0, 360, 361, 362, 629, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 1156, 366, 367,
	630, 631, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 632, 0, 633, 378, 0, 379, 380,
	381, 382, 383, 634, 635, 636, 460, 1158, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 0, 390,
	391, 392, 394, 0, 1157, 393, 637, 638, 0, 639,
	0, 395, 396, 1159, 640, 1160, 397, 398, 399, 1161,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 641, 1162, 411, 412,
	1163, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	1164, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 1165, 447, 0, 0, 1166, 457, 458,
	0, 642, 459, 643, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 644,
	1167, 470, 1168, 645, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 482, 646, 483,
	484, 485, 647, 486, 487, 488, 648, 489, 649, 490,
	491, 0, 492, 493, 0, 494, 495, 496, 497, 498,
	499, 500, 650, 501, 503, 502, 504, 0, 505, 0,
	506, 507, 508, 0, 0, 0, 0, 509, 0, 511,
	512, 513, 514, 510, 515, 516, 517, 518, 0, 519,
	520, 521, 1169, 522, 523, 524, 525, 651, 526, 0,
	527, 528, 534, 535, 529, 530, 536, 537, 538, 539,
	540, 0, 542, 543, 541, 544, 545, 546, 1991, 547,
	548, 531, 532, 549, 550, 1170, 551, 552, 553, 554,
	555, 556, 652, 0, 557, 0, 558, 559, 560, 562,
	533, 563, 568, 569, 653, 564, 565, 566, 567, 654,
	571, 572, 0, 573, 574, 0, 570, 561, 0, 575,
	576, 577, 578, 579, 580, 581, 353, 582, 0, 583,
	655, 656, 657, 658, 0, 592, 0, 584, 585, 586,
	659, 587, 660, 0, 588, 589, 590, 591, 0, 593,
	594, 0, 0, 595, 596, 597, 599, 600, 598, 601,
	0, 602, 0, 0, 603, 604, 605, 661, 662, 663,
	0, 607, 606, 608, 664, 0, 0, 0, 0, 0,
	609, 610, 665, 611, 612, 613, 1293, 1292, 0, 0,
	0, 0, 1290, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 614, 0,
	0, 0, 0, 279, 280, 1154, 281, 282, 283, 284,
	285, 286, 615, 616, 0, 287, 617, 288, 618, 0,
	619, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 620, 621, 622, 0, 296, 297, 623, 0, 1298,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 1155, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 326, 327, 0, 328, 624, 625, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 626, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 627, 628, 359, 0,
	267, 0, 0, 0, 0, 0, 360, 361, 362, 629,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 1156,
	366, 367, 630, 631, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 632, 0, 633, 378, 0,
	379, 380, 381, 382, 383, 634, 635, 636, 460, 1158,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	0, 390, 391, 392, 394, 0, 1157, 393, 637, 638,
	0, 639, 0, 395, 396, 1159, 640, 1160, 397, 398,
	399, 1161, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 641, 1162,
	411, 412, 1163, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 1164, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 1165, 447, 0, 0, 1166,
	457, 458, 3747, 642, 459, 643, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 644, 1167, 470, 1168, 645, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 482,
	646, 483, 484, 485, 647, 486, 487, 488, 648, 489,
	649, 490, 491, 0, 492, 493, 0, 494, 495, 496,
	497, 498, 499, 500, 650, 501, 503, 502, 504, 0,
	505, 0, 506, 507, 508, 0, 0, 0, 0, 509,
	0, 511, 512, 513, 514, 510, 515, 516, 517, 518,
	0, 519, 520, 521, 1169, 522, 523, 524, 525, 651,
	526, 0, 527, 528, 534, 535, 529, 530, 536, 537,
	538, 539, 540, 0, 542, 543, 541, 544, 545, 546,
	0, 547, 548, 531, 532, 549, 550, 1170, 551, 552,
	553, 554, 555, 556, 652, 0, 557, 0, 558, 559,
	560, 562, 533, 563, 568, 569, 653, 564, 565, 566,
	567, 654, 571, 572, 0, 573, 574, 0, 570, 561,
	0, 575, 576, 577, 578, 579, 580, 581, 353, 582,
	0, 583, 655, 656, 657, 658, 0, 592, 0, 584,
	585, 586, 659, 587, 660, 0, 588, 589, 590, 591,
	0, 593, 594, 0, 0, 595, 596, 597, 599, 600,
	598, 601, 0, 602, 0, 0, 603, 604, 605, 661,
	662, 663, 0, 607, 606, 608, 664, 0, 0, 0,
	0, 0, 609, 610, 665, 611, 612, 613, 1293, 1292,
	0, 0, 0, 0, 1290, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	614, 0, 0, 0, 0, 279, 280, 1154, 281, 282,
	283, 284, 285, 286, 615, 616, 0, 287, 617, 288,
	618, 0, 619, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 620, 621, 622, 0, 296, 297, 623,
	0, 1298, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	1155, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 326, 327, 0, 328, 624, 625,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 626, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 627, 628,
	359, 0, 267, 0, 0, 0, 0, 0, 360, 361,
	362, 629, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 1156, 366, 367, 630, 631, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 632, 0, 633,
	378, 0, 379, 380, 381, 382, 383, 634, 635, 636,
	460, 1158, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 0, 390, 391, 392, 394, 0, 1157, 393,
	637, 638, 0, 639, 0, 395, 396, 1159, 640, 1160,
	397, 398, 399, 1161, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	641, 1162, 411, 412, 1163, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 1164, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 1165, 447, 0,
	0, 1166, 457, 458, 3376, 642, 459, 643, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 644, 1167, 470, 1168, 645, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 482, 646, 483, 484, 485, 647, 486, 487, 488,
	648, 489, 649, 490, 491, 0, 492, 493, 0, 494,
	495, 496, 497, 498, 499, 500, 650, 501, 503, 502,
	504, 0, 505, 0, 506, 507, 508, 0, 0, 0,
	0, 509, 0, 511, 512, 513, 514, 510, 515, 516,
	517, 518, 0, 519, 520, 521, 1169, 522, 523, 524,
	525, 651, 526, 0, 527, 528, 534, 535, 529, 530,
	536, 537, 538, 539, 540, 0, 542, 543, 541, 544,
	545, 546, 0, 547, 548, 531, 532, 549, 550, 1170,
	551, 552, 553, 554, 555, 556, 652, 0, 557, 0,
	558, 559, 560, 562, 533, 563, 568, 569, 653, 564,
	565, 566, 567, 654, 571, 572, 0, 573, 574, 0,
	570, 561, 0, 575, 576, 577, 578, 579, 580, 581,
	353, 582, 0, 583, 655, 656, 657, 658, 0, 592,
	0, 584, 585, 586, 659, 587, 660, 0, 588, 589,
	590, 591, 0, 593, 594, 0, 0, 595, 596, 597,
	599, 600, 598, 601, 0, 602, 0, 0, 603, 604,
	605, 661, 662, 663, 264, 607, 606, 608, 664, 0,
	0, 0, 0, 0, 609, 610, 665, 611, 612, 613,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 614, 0, 0, 0,
	0, 279, 280, 0, 281, 282, 283, 284, 285, 286,
	615, 616, 0, 287, 617, 288, 618, 0, 619, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 620,
	621, 622, 0, 296, 297, 623, 0, 0, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 0, 323, 324, 325,
	326, 327, 0, 328, 624, 625, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 626, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 627, 628, 359, 0, 267, 0,
	0, 0, 0, 0, 360, 361, 362, 629, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 0, 366, 367,
	630, 631, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 632, 0, 633, 378, 0, 379, 380,
	381, 382, 383, 634, 635, 636, 460, 0, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 0, 393, 637, 638, 0, 639,
	0, 395, 396, 0, 640, 0, 397, 398, 399, 0,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 641, 0, 411, 412,
	0, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	0, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 0, 447, 0, 269, 0, 457, 458,
	0, 642, 459, 643, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 644,
	0, 470, 0, 645, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 482, 646, 483,
	484, 485, 647, 486, 487, 488, 648, 489, 649, 490,
	491, 0, 492, 493, 0, 494, 495, 496, 497, 498,
	499, 500, 650, 501, 503, 502, 504, 0, 505, 0,
	506, 507, 508, 0, 0, 0, 0, 509, 0, 511,
	512, 513, 514, 510, 515, 516, 517, 518, 0, 519,
	520, 521, 0, 522, 523, 524, 525, 651, 526, 0,
	527, 528, 534, 535, 529, 530, 536, 537, 538, 539,
	540, 0, 542, 543, 541, 544, 545, 546, 0, 547,
	548, 531, 532, 549, 550, 0, 551, 552, 553, 554,
	555, 556, 652, 0, 557, 0, 558, 559, 560, 562,
	533, 563, 568, 569, 653, 564, 565, 566, 567, 654,
	571, 572, 0, 573, 574, 0, 570, 561, 0, 575,
	576, 577, 578, 579, 580, 581, 353, 582, 0, 583,
	655, 656, 657, 658, 0, 592, 0, 584, 585, 586,
	659, 587, 660, 0, 588, 589, 590, 591, 0, 593,
	594, 0, 0, 595, 596, 597, 599, 600, 598, 601,
	0, 602, 0, 0, 603, 604, 605, 661, 662, 663,
	0, 607, 606, 608, 664, 0, 0, 0, 0, 0,
	609, 610, 665, 611, 612, 613, 1617, 0, 1293, 1292,
	0, 0, 0, 0, 1290, 0, 0, 0, 0, 0,
	0, 0, 0, 795, 0, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	614, 0, 0, 0, 0, 279, 280, 1154, 281, 282,
	283, 284, 285, 286, 615, 616, 0, 287, 617, 288,
	618, 0, 619, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 620, 621, 622, 0, 296, 297, 623,
	0, 1298, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	1155, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 326, 327, 0, 328, 624, 625,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 626, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 627, 628,
	359, 0, 267, 0, 0, 0, 0, 0, 1616, 361,
	362, 629, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 1156, 366, 367, 630, 631, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 632, 0, 633,
	378, 0, 379, 380, 381, 382, 383, 634, 635, 636,
	460, 1158, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 0, 390, 391, 392, 394, 0, 1157, 393,
	637, 638, 0, 639, 0, 395, 396, 1159, 640, 1160,
	397, 398, 399, 1161, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	641, 1162, 411, 412, 1163, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 1164, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 1165, 447, 0,
	0, 1166, 457, 458, 0, 642, 459, 643, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 644, 1167, 470, 1168, 645, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 482, 646, 483, 484, 485, 647, 486, 487, 488,
	648, 489, 649, 490, 491, 0, 492, 493, 0, 494,
	495, 496, 497, 498, 1615, 500, 650, 501, 503, 502,
	504, 0, 505, 0, 506, 507, 508, 0, 0, 0,
	0, 509, 0, 511, 512, 513, 514, 510, 515, 516,
	517, 518, 0, 519, 520, 521, 1169, 522, 523, 524,
	525, 651, 526, 0, 527, 528, 534, 535, 529, 530,
	536, 1614, 538, 539, 540, 0, 542, 543, 541, 544,
	545, 546, 0, 547, 548, 531, 532, 549, 550, 1170,
	551, 552, 553, 554, 555, 556, 652, 0, 557, 0,
	558, 559, 560, 562, 533, 563, 568, 569, 653, 564,
	565, 566, 567, 654, 571, 572, 0, 573, 574, 0,
	570, 561, 0, 575, 576, 577, 578, 579, 580, 581,
	353, 582, 0, 583, 655, 656, 657, 658, 0, 592,
	0, 584, 585, 586, 659, 587, 660, 0, 588, 589,
	590, 591, 0, 593, 594, 0, 0, 595, 596, 597,
	599, 600, 598, 601, 0, 602, 0, 0, 603, 604,
	605, 661, 662, 663, 0, 607, 606, 608, 664, 0,
	0, 0, 0, 0, 609, 610, 665, 611, 612, 613,
	1535, 0, 1293, 1292, 0, 0, 0, 0, 1290, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 614, 0, 0, 0, 0, 279,
	280, 1154, 281, 282, 283, 284, 285, 286, 615, 616,
	0, 287, 617, 288, 618, 0, 619, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 620, 621, 622,
	0, 296, 297, 623, 0, 1298, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 1155, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 624, 625, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 626, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 627, 628, 359, 0, 267, 0, 0, 0,
	0, 0, 360, 361, 362, 629, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 1156, 366, 367, 630, 631,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 632, 0, 633, 378, 0, 379, 380, 381, 382,
	383, 1534, 635, 636, 460, 1158, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 0, 390, 391, 392,
	394, 0, 1157, 393, 637, 638, 0, 639, 0, 395,
	396, 1159, 640, 1160, 397, 398, 399, 1161, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 641, 1162, 411, 412, 1163, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 1164, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 1165, 447, 0, 0, 1166, 457, 458, 0, 642,
	459, 643, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 644, 1167, 470,
	1168, 645, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 648, 489, 649, 490, 491, 0,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	650, 501, 503, 502, 504, 0, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 0, 519, 520, 521,
	1169, 522, 523, 524, 525, 651, 526, 0, 527, 528,
	534, 535, 529, 530, 536, 537, 538, 539, 540, 0,
	542, 543, 541, 544, 545, 546, 0, 547, 548, 531,
	532, 549, 550, 1170, 551, 552, 553, 554, 555, 556,
	652, 0, 557, 0, 558, 559, 560, 562, 533, 563,
	568, 569, 653, 564, 565, 566, 567, 654, 571, 572,
	0, 573, 574, 0, 570, 561, 0, 575, 576, 577,
	578, 579, 580, 581, 353, 582, 0, 583, 655, 656,
	657, 658, 0, 592, 0, 584, 585, 586, 659, 587,
	660, 0, 588, 589, 590, 591, 0, 593, 594, 0,
	0, 595, 596, 597, 599, 600, 598, 601, 0, 602,
	0, 0, 603, 604, 605, 661, 662, 663, 0, 607,
	606, 608, 664, 0, 0, 0, 0, 0, 609, 610,
	665, 611, 612, 613, 1495, 0, 1293, 1292, 0, 0,
	0, 0, 1290, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 614, 0,
	0, 0, 0, 279, 280, 1154, 281, 282, 283, 284,
	285, 286, 615, 616, 0, 287, 617, 288, 618, 0,
	619, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 620, 621, 622, 0, 296, 297, 623, 0, 1298,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 1155, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 326, 327, 0, 328, 624, 625, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 626, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 627, 628, 359, 0,
	267, 0, 0, 0, 0, 0, 360, 361, 362, 629,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 1156,
	366, 367, 630, 631, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 632, 0, 633, 378, 0,
	379, 380, 381, 382, 383, 634, 635, 636, 460, 1158,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	0, 390, 391, 392, 394, 0, 1157, 393, 637, 638,
	0, 639, 0, 395, 396, 1159, 640, 1160, 397, 398,
	399, 1161, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 641, 1162,
	411, 412, 1163, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 1164, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 1165, 447, 0, 0, 1166,
	457, 458, 0, 642, 459, 643, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 644, 1167, 470, 1168, 645, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 482,
	646, 483, 484, 485, 647, 486, 487, 488, 648, 489,
	649, 490, 491, 0, 492, 493, 0, 494, 495, 496,
	497, 498, 499, 500, 650, 501, 503, 502, 504, 0,
	505, 0, 506, 507, 508, 0, 0, 0, 0, 509,
	0, 511, 512, 513, 514, 510, 515, 516, 517, 518,
	0, 519, 520, 521, 1169, 522, 523, 524, 525, 651,
	526, 0, 527, 528, 534, 535, 529, 530, 536, 537,
	538, 539, 540, 0, 542, 543, 541, 544, 545, 546,
	0, 547, 548, 531, 532, 549, 550, 1170, 551, 552,
	553, 554, 555, 556, 652, 0, 557, 0, 558, 559,
	560, 562, 533, 563, 568, 569, 653, 564, 565, 566,
	567, 654, 571, 572, 0, 573, 574, 0, 570, 561,
	0, 575, 576, 577, 578, 579, 580, 581, 353, 582,
	0, 583, 655, 656, 657, 658, 0, 592, 0, 584,
	585, 586, 659, 587, 660, 0, 588, 589, 590, 591,
	0, 593, 594, 0, 0, 595, 596, 597, 599, 600,
	598, 601, 0, 602, 0, 0, 603, 604, 605, 661,
	662, 663, 0, 607, 606, 608, 664, 0, 0, 0,
	0, 0, 609, 610, 665, 611, 612, 613, 1463, 0,
	1293, 1292, 0, 0, 0, 0, 1290, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 614, 0, 0, 0, 0, 279, 280, 1154,
	281, 282, 283, 284, 285, 286, 615, 616, 0, 287,
	617, 288, 618, 0, 619, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 620, 621, 622, 0, 296,
	297, 623, 0, 1298, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 1155, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 326, 327, 0, 328,
	624, 625, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 626,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	627, 628, 359, 0, 267, 0, 0, 0, 0, 0,
	360, 361, 362, 629, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 1156, 366, 367, 630, 631, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 632,
	0, 633, 378, 0, 379, 380, 381, 382, 383, 1462,
	635, 636, 460, 1158, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 0, 390, 391, 392, 394, 0,
	1157, 393, 637, 638, 0, 639, 0, 395, 396, 1159,
	640, 1160, 397, 398, 399, 1161, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 641, 1162, 411, 412, 1163, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 1164, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 1165,
	447, 0, 0, 1166, 457, 458, 0, 642, 459, 643,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 644, 1167, 470, 1168, 645,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 482, 646, 483, 484, 485, 647, 486,
	487, 488, 648, 489, 649, 490, 491, 0, 492, 493,
	0, 494, 495, 496, 497, 498, 499, 500, 650, 501,
	503, 502, 504, 0, 505, 0, 506, 507, 508, 0,
	0, 0, 0, 509, 0, 511, 512, 513, 514, 510,
	515, 516, 517, 518, 0, 519, 520, 521, 1169, 522,
	523, 524, 525, 651, 526, 0, 527, 528, 534, 535,
	529, 530, 536, 537, 538, 539, 540, 0, 542, 543,
	541, 544, 545, 546, 0, 547, 548, 531, 532, 549,
	550, 1170, 551, 552, 553, 554, 555, 556, 652, 0,
	557, 0, 558, 559, 560, 562, 533, 563, 568, 569,
	653, 564, 565, 566, 567, 654, 571, 572, 0, 573,
	574, 0, 570, 561, 0, 575, 576, 577, 578, 579,
	580, 581, 353, 582, 0, 583, 655, 656, 657, 658,
	0, 592, 0, 584, 585, 586, 659, 587, 660, 0,
	588, 589, 590, 591, 0, 593, 594, 0, 0, 595,
	596, 597, 599, 600, 598, 601, 0, 602, 0, 0,
	603, 604, 605, 661, 662, 663, 0, 607, 606, 608,
	664, 0, 0, 0, 0, 0, 609, 610, 665, 611,
	612, 613, 1287, 0, 1293, 1292, 0, 0, 0, 0,
	1290, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 614, 0, 0, 0,
	0, 279, 280, 1154, 281, 282, 283, 284, 285, 286,
	615, 616, 0, 287, 617, 288, 618, 0, 619, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 620,
	621, 622, 0, 296, 297, 623, 0, 1298, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 1155, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 0, 323, 324, 325,
	326, 327, 0, 328, 624, 625, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 626, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 627, 628, 359, 0, 267, 0,
	0, 0, 0, 0, 360, 361, 362, 629, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 1156, 366, 367,
	630, 631, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 632, 0, 633, 378, 0, 379, 380,
	381, 382, 383, 1286, 635, 636, 460, 1158, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 0, 390,
	391, 392, 394, 0, 1157, 393, 637, 638, 0, 639,
	0, 395, 396, 1159, 640, 1160, 397, 398, 399, 1161,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 641, 1162, 411, 412,
	1163, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	1164, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 1165, 447, 0, 0, 1166, 457, 458,
	0, 642, 459, 643, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 644,
	1167, 470, 1168, 645, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 482, 646, 483,
	484, 485, 647, 486, 487, 488, 648, 489, 649, 490,
	491, 0, 492, 493, 0, 494, 495, 496, 497, 498,
	499, 500, 650, 501, 503, 502, 504, 0, 505, 0,
	506, 507, 508, 0, 0, 0, 0, 509, 0, 511,
	512, 513, 514, 510, 515, 516, 517, 518, 0, 519,
	520, 521, 1169, 522, 523, 524, 525, 651, 526, 0,
	527, 528, 534, 535, 529, 530, 536, 537, 538, 539,
	540, 0, 542, 543, 541, 544, 545, 546, 0, 547,
	548, 531, 532, 549, 550, 1170, 551, 552, 553, 554,
	555, 556, 652, 0, 557, 0, 558, 559, 560, 562,
	533, 563, 568, 569, 653, 564, 565, 566, 567, 654,
	571, 572, 0, 573, 574, 0, 570, 561, 0, 575,
	576, 577, 578, 579, 580, 581, 353, 582, 0, 583,
	655, 656, 657, 658, 0, 592, 0, 584, 585, 586,
	659, 587, 660, 0, 588, 589, 590, 591, 0, 593,
	594, 0, 0, 595, 596, 597, 599, 600, 598, 601,
	0, 602, 0, 0, 603, 604, 605, 661, 662, 663,
	0, 607, 606, 608, 664, 0, 0, 0, 0, 0,
	609, 610, 665, 611, 612, 613, 1293, 1292, 0, 0,
	0, 0, 1290, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 614, 0,
	0, 0, 0, 279, 280, 1154, 281, 282, 283, 284,
	285, 286, 615, 616, 0, 287, 617, 288, 618, 0,
	619, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 620, 621, 622, 0, 296, 297, 623, 0, 1298,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 1155, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 326, 327, 0, 328, 624, 625, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 626, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 627, 628, 359, 0,
	267, 0, 0, 0, 0, 0, 360, 361, 362, 629,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 1156,
	366, 367, 630, 631, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 632, 0, 633, 378, 0,
	379, 380, 381, 382, 383, 634, 635, 636, 460, 1158,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	0, 390, 391, 392, 394, 0, 1157, 393, 637, 638,
	0, 639, 0, 395, 396, 1159, 640, 1160, 397, 398,
	399, 1161, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 641, 1162,
	411, 412, 1163, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 1164, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 1165, 447, 0, 0, 1166,
	457, 458, 0, 642, 459, 643, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 644, 1167, 470, 1168, 645, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 482,
	646, 483, 484, 485, 647, 486, 487, 488, 648, 489,
	649, 490, 491, 0, 492, 493, 0, 494, 495, 496,
	497, 498, 499, 500, 650, 501, 503, 502, 504, 0,
	505, 0, 506, 507, 508, 0, 0, 0, 0, 509,
	0, 511, 512, 513, 514, 510, 515, 516, 517, 518,
	0, 519, 520, 521, 1169, 522, 523, 524, 525, 651,
	526, 0, 527, 528, 534, 535, 529, 530, 536, 537,
	538, 539, 540, 0, 542, 543, 541, 544, 545, 546,
	0, 547, 548, 531, 532, 549, 550, 1170, 551, 552,
	553, 554, 555, 556, 652, 0, 557, 0, 558, 559,
	560, 562, 533, 563, 568, 569, 653, 564, 565, 566,
	567, 654, 571, 572, 0, 573, 574, 0, 570, 561,
	0, 575, 576, 577, 578, 579, 580, 581, 353, 582,
	0, 583, 655, 656, 657, 658, 0, 592, 0, 584,
	585, 586, 659, 587, 660, 0, 588, 589, 590, 591,
	0, 593, 594, 0, 0, 595, 596, 597, 599, 600,
	598, 601, 0, 602, 0, 0, 603, 604, 605, 661,
	662, 663, 0, 607, 606, 608, 664, 1293, 1993, 0,
	0, 0, 609, 610, 665, 611, 612, 613, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 614,
	0, 0, 0, 0, 279, 280, 1154, 281, 282, 283,
	284, 285, 286, 615, 616, 0, 287, 617, 288, 618,
	0, 619, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 620, 621, 622, 0, 296, 297, 623, 0,
	1298, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 1155,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 0, 328, 624, 625, 2033,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 626, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 627, 628, 359,
	0, 267, 0, 0, 0, 0, 0, 360, 361, 362,
	629, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	1156, 366, 367, 630, 631, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 632, 0, 633, 378,
	0, 379, 380, 381, 382, 383, 634, 635, 636, 460,
	1158, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 0, 390, 391, 392, 394, 0, 1157, 393, 637,
	638, 0, 639, 0, 395, 396, 1159, 640, 1160, 397,
	398, 399, 1161, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 641,
	1162, 411, 412, 1163, 0, 413, 0, 0, 0, 414,
	415, 418, 0, 0, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 1164, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 1165, 447, 0, 0,
	1166, 457, 458, 0, 642, 459, 643, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 644, 1167, 470, 1168, 645, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	482, 646, 483, 484, 485, 647, 486, 487, 488, 648,
	489, 649, 490, 491, 0, 492, 493, 0, 494, 495,
	496, 497, 498, 499, 500, 650, 501, 503, 502, 504,
	0, 505, 0, 506, 507, 508, 0, 0, 0, 0,
	509, 0, 511, 512, 513, 514, 510, 515, 516, 517,
	518, 0, 519, 520, 521, 1169, 522, 523, 524, 525,
	651, 526, 0, 527, 528, 534, 535, 529, 530, 536,
	537, 538, 539, 540, 0, 542, 543, 541, 544, 545,
	546, 0, 547, 548, 531, 532, 549, 550, 1170, 551,
	552, 553, 554, 555, 556, 652, 0, 557, 0, 558,
	559, 560, 562, 533, 563, 568, 569, 653, 564, 565,
	566, 567, 654, 571, 572, 0, 573, 574, 0, 570,
	561, 0, 575, 576, 577, 578, 579, 580, 581, 353,
	582, 0, 583, 655, 656, 657, 658, 0, 592, 0,
	584, 585, 586, 659, 587, 660, 0, 588, 589, 590,
	591, 0, 593, 594, 0, 0, 595, 596, 597, 599,
	600, 598, 601, 0, 602, 0, 0, 603, 604, 605,
	661, 662, 663, 0, 607, 606, 608, 664, 1293, 1292,
	0, 0, 0, 609, 610, 665, 611, 612, 613, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	614, 0, 0, 0, 0, 279, 280, 1154, 281, 282,
	283, 284, 285, 286, 615, 616, 0, 287, 617, 288,
	618, 0, 619, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 620, 621, 622, 0, 296, 297, 623,
	0, 1298, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	1155, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 326, 327, 0, 328, 624, 625,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 626, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 627, 628,
	359, 0, 267, 0, 0, 0, 0, 0, 360, 361,
	362, 629, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 1156, 366, 367, 630, 631, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 632, 0, 633,
	378, 0, 379, 380, 381, 382, 383, 634, 635, 636,
	460, 1158, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 0, 390, 391, 392, 394, 0, 1157, 393,
	637, 638, 0, 639, 0, 395, 396, 1159, 640, 1160,
	397, 398, 399, 1161, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	641, 1162, 411, 412, 1163, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 1164, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 1165, 447, 0,
	0, 1166, 457, 458, 0, 642, 459, 643, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 644, 1167, 470, 1168, 645, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 482, 646, 483, 484, 485, 647, 486, 487, 488,
	648, 489, 649, 490, 491, 0, 492, 493, 0, 494,
	495, 496, 497, 498, 499, 500, 650, 501, 503, 502,
	504, 0, 505, 0, 506, 507, 508, 0, 0, 0,
	0, 509, 0, 511, 512, 513, 514, 510, 515, 516,
	517, 518, 0, 519, 520, 521, 1169, 522, 523, 524,
	525, 651, 526, 0, 527, 528, 534, 535, 529, 530,
	536, 537, 538, 539, 540, 0, 542, 543, 541, 544,
	545, 546, 0, 547, 548, 531, 532, 549, 550, 1170,
	551, 552, 553, 554, 555, 556, 652, 0, 557, 0,
	558, 559, 560, 562, 533, 563, 568, 569, 653, 564,
	565, 566, 567, 654, 571, 572, 0, 573, 574, 0,
	570, 561, 0, 575, 576, 577, 578, 579, 580, 581,
	353, 582, 0, 583, 655, 656, 657, 658, 0, 592,
	0, 584, 585, 586, 659, 587, 660, 0, 588, 589,
	590, 591, 0, 593, 594, 0, 0, 595, 596, 597,
	599, 600, 598, 601, 0, 602, 0, 0, 603, 604,
	605, 661, 662, 663, 1293, 607, 606, 608, 664, 0,
	0, 0, 0, 0, 609, 610, 665, 611, 612, 613,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 614, 0, 0, 0,
	0, 279, 280, 1154, 281, 282, 283, 284, 285, 286,
	615, 616, 0, 287, 617, 288, 618, 0, 619, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 620,
	621, 622, 0, 296, 297, 623, 0, 1298, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 1155, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 0, 323, 324, 325,
	326, 327, 0, 328, 624, 625, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 626, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 627, 628, 359, 0, 267, 0,
	0, 0, 0, 0, 360, 361, 362, 629, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 1156, 366, 367,
	630, 631, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 632, 0, 633, 378, 0, 379, 380,
	381, 382, 383, 634, 635, 636, 460, 1158, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 0, 390,
	391, 392, 394, 0, 1157, 393, 637, 638, 0, 639,
	0, 395, 396, 1159, 640, 1160, 397, 398, 399, 1161,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 641, 1162, 411, 412,
	1163, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	1164, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 1165, 447, 0, 0, 1166, 457, 458,
	0, 642, 459, 643, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 644,
	1167, 470, 1168, 645, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 482, 646, 483,
	484, 485, 647, 486, 487, 488, 648, 489, 649, 490,
	491, 0, 492, 493, 0, 494, 495, 496, 497, 498,
	499, 500, 650, 501, 503, 502, 504, 0, 505, 0,
	506, 507, 508, 0, 0, 0, 0, 509, 0, 511,
	512, 513, 514, 510, 515, 516, 517, 518, 0, 519,
	520, 521, 1169, 522, 523, 524, 525, 651, 526, 0,
	527, 528, 534, 535, 529, 530, 536, 537, 538, 539,
	540, 0, 542, 543, 541, 544, 545, 546, 0, 547,
	548, 531, 532, 549, 550, 1170, 551, 552, 553, 554,
	555, 556, 652, 0, 557, 0, 558, 559, 560, 562,
	533, 563, 568, 569, 653, 564, 565, 566, 567, 654,
	571, 572, 0, 573, 574, 0, 570, 561, 0, 575,
	576, 577, 578, 579, 580, 581, 353, 582, 0, 583,
	655, 656, 657, 658, 0, 592, 0, 584, 585, 586,
	659, 587, 660, 0, 588, 589, 590, 591, 0, 593,
	594, 0, 0, 595, 596, 597, 599, 600, 598, 601,
	0, 602, 0, 0, 603, 604, 605, 661, 662, 663,
	264, 607, 606, 608, 664, 0, 0, 0, 0, 0,
	609, 610, 665, 611, 612, 613, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 614, 0, 0, 0, 0, 279, 280, 0,
	281, 282, 283, 284, 285, 286, 615, 616, 0, 287,
	617, 288, 618, 0, 619, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 620, 621, 622, 2739, 296,
	297, 623, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 2736,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 326, 327, 0, 328,
	624, 625, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 2743, 347, 626,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	627, 628, 359, 0, 2942, 0, 0, 0, 0, 0,
	360, 361, 362, 629, 0, 0, 0, 363, 0, 364,
	365, 2742, 0, 0, 366, 367, 630, 631, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 632,
	0, 633, 378, 0, 379, 380, 381, 382, 383, 634,
	635, 636, 460, 0, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 2939, 390, 391, 392, 394, 0,
	0, 393, 637, 638, 0, 639, 0, 395, 2941, 0,
	640, 0, 397, 398, 399, 0, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 641, 0, 411, 412, 2938, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 0, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 0,
	447, 0, 0, 0, 457, 458, 0, 642, 459, 643,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 644, 0, 470, 0, 645,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 482, 646, 483, 484, 485, 647, 486,
	487, 488, 648, 489, 649, 490, 491, 2741, 492, 493,
	0, 494, 495, 496, 497, 498, 499, 500, 650, 501,
	503, 502, 504, 0, 505, 0, 506, 507, 508, 0,
	0, 0, 0, 509, 0, 511, 512, 513, 514, 510,
	515, 516, 517, 518, 0, 519, 520, 521, 0, 522,
	523, 524, 525, 651, 526, 0, 527, 528, 534, 535,
	529, 530, 536, 537, 538, 539, 540, 0, 542, 543,
	541, 544, 545, 546, 0, 547, 548, 531, 532, 549,
	550, 0, 551, 552, 553, 554, 555, 556, 652, 0,
	557, 0, 558, 559, 560, 562, 533, 563, 568, 569,
	653, 564, 565, 566, 567, 654, 571, 572, 0, 573,
	574, 0, 570, 561, 0, 575, 576, 577, 578, 579,
	580, 581, 353, 582, 0, 583, 655, 656, 657, 658,
	0, 592, 0, 584, 585, 586, 659, 587, 660, 0,
	588, 589, 590, 591, 0, 593, 594, 0, 2940, 595,
	596, 597, 599, 600, 598, 601, 0, 602, 0, 0,
	603, 604, 605, 661, 662, 663, 264, 607, 606, 608,
	664, 0, 0, 0, 0, 0, 609, 610, 665, 611,
	612, 613, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 614, 0,
	0, 0, 0, 279, 280, 0, 281, 282, 283, 284,
	285, 286, 615, 616, 0, 287, 617, 288, 618, 0,
	619, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 620, 621, 622, 2739, 296, 297, 623, 0, 0,
	2733, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 2736, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 326, 327, 0, 328, 624, 625, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 2743, 347, 626, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 627, 628, 359, 0,
	0, 0, 0, 0, 0, 0, 360, 361, 362, 629,
	0, 0, 0, 363, 0, 364, 365, 2742, 0, 0,
	366, 367, 630, 631, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 632, 0, 633, 378, 0,
	379, 380, 381, 382, 383, 2732, 635, 636, 460, 0,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	0, 390, 391, 392, 394, 0, 0, 393, 637, 638,
	0, 639, 0, 395, 396, 0, 640, 0, 397, 398,
	399, 0, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 641, 0,
	411, 412, 0, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 0, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 0, 447, 0, 0, 0,
	457, 458, 0, 642, 459, 643, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 644, 0, 470, 0, 645, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 482,
	646, 483, 484, 485, 647, 486, 487, 488, 648, 489,
	649, 490, 491, 2741, 492, 493, 0, 494, 495, 496,
	497, 498, 499, 500, 650, 501, 503, 502, 504, 0,
	505, 0, 506, 507, 508, 0, 0, 0, 0, 509,
	0, 511, 512, 513, 514, 510, 515, 516, 517, 518,
	0, 519, 520, 521, 0, 522, 523, 524, 525, 651,
	526, 0, 527, 528, 534, 535, 529, 530, 536, 537,
	538, 539, 540, 0, 542, 543, 541, 544, 545, 546,
	0, 547, 548, 531, 532, 549, 550, 0, 551, 552,
	553, 554, 555, 556, 652, 0, 557, 0, 558, 559,
	560, 562, 533, 563, 568, 569, 653, 564, 565, 566,
	567, 654, 571, 572, 0, 573, 574, 0, 570, 561,
	0, 575, 576, 577, 578, 579, 580, 581, 353, 582,
	0, 583, 655, 656, 657, 658, 0, 592, 0, 584,
	585, 586, 659, 587, 660, 0, 588, 589, 590, 591,
	0, 593, 594, 0, 2740, 595, 596, 597, 599, 600,
	598, 601, 0, 602, 0, 0, 603, 604, 605, 661,
	662, 663, 0, 607, 606, 608, 664, 1688, 0, 264,
	0, 0, 609, 610, 665, 611, 612, 613, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 1687, 277, 278, 0, 0, 0, 0,
	0, 614, 0, 0, 0, 0, 279, 280, 0, 281,
	282, 283, 284, 285, 286, 615, 616, 0, 287, 617,
	288, 618, 0, 619, 289, 290, 291, 292, 293, 294,
	0, 0, 0, 295, 620, 621, 622, 0, 296, 297,
	623, 0, 0, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 322, 0, 0, 0, 0, 0,
	0, 0, 323, 324, 325, 326, 327, 0, 328, 624,
	625, 0, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 339, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 626, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 627,
	628, 359, 0, 267, 0, 0, 0, 0, 0, 360,
	361, 362, 629, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 0, 366, 367, 630, 631, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 632, 0,
	633, 378, 0, 379, 380, 381, 382, 383, 634, 635,
	636, 460, 0, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 268, 390, 391, 392, 394, 0, 0,
	393, 637, 638, 0, 639, 0, 395, 396, 0, 640,
	0, 397, 398, 399, 0, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 641, 0, 411, 412, 0, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 0, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 0, 447,
	0, 269, 0, 457, 458, 0, 642, 459, 643, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 644, 0, 470, 0, 645, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 482, 646, 483, 484, 485, 647, 486, 487,
	488, 648, 489, 649, 490, 491, 0, 492, 493, 0,
	494, 495, 496, 497, 498, 499, 500, 650, 501, 503,
	502, 504, 0, 505, 0, 506, 507, 508, 0, 0,
	0, 0, 509, 0, 511, 512, 513, 514, 510, 515,
	516, 517, 518, 0, 519, 520, 521, 0, 522, 523,
	524, 525, 651, 526, 0, 527, 528, 534, 535, 529,
	530, 536, 537, 538, 539, 540, 0, 1691, 543, 541,
	544, 545, 546, 0, 547, 548, 531, 532, 549, 550,
	0, 551, 552, 553, 554, 555, 556, 652, 0, 557,
	0, 558, 559, 560, 562, 533, 563, 568, 569, 653,
	564, 565, 566, 567, 654, 571, 572, 0, 573, 574,
	0, 570, 561, 1689, 575, 576, 577, 578, 579, 580,
	581, 353, 582, 0, 583, 655, 656, 657, 658, 0,
	592, 0, 584, 585, 586, 659, 587, 660, 0, 588,
	589, 590, 591, 0, 593, 594, 0, 0, 595, 596,
	597, 599, 600, 598, 601, 0, 602, 0, 0, 603,
	604, 605, 661, 662, 663, 0, 1690, 606, 608, 664,
	1440, 0, 264, 0, 0, 609, 610, 665, 611, 612,
	613, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 614, 0, 0, 0, 0, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 615, 616,
	0, 287, 617, 288, 618, 0, 619, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 620, 621, 622,
	0, 296, 297, 623, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 624, 625, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 626, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 627, 628, 359, 0, 267, 0, 0, 0,
	0, 0, 360, 361, 362, 629, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 0, 366, 367, 630, 631,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 632, 0, 633, 378, 0, 379, 380, 381, 382,
	383, 1442, 635, 636, 460, 0, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 0, 0, 393, 637, 638, 0, 639, 0, 395,
	396, 0, 640, 0, 397, 398, 399, 0, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 641, 0, 411, 412, 0, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 0, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 0, 447, 0, 269, 0, 457, 458, 0, 642,
	459, 643, 461, 462, 0, 0, 463, 0, 0, 1204,
	465, 466, 467, 0, 0, 468, 469, 644, 0, 470,
	0, 645, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 648, 489, 649, 490, 491, 0,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	650, 501, 503, 502, 504, 0, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 0, 519, 520, 521,
	0, 522, 523, 524, 525, 651, 526, 0, 527, 528,
	534, 535, 529, 530, 536, 537, 538, 539, 540, 0,
	542, 543, 541, 544, 545, 546, 0, 547, 548, 531,
	532, 549, 550, 0, 551, 552, 553, 554, 555, 556,
	652, 0, 557, 0, 558, 559, 560, 562, 533, 563,
	568, 569, 653, 564, 565, 566, 567, 654, 571, 572,
	0, 573, 574, 0, 570, 561, 0, 575, 576, 577,
	578, 579, 580, 581, 353, 582, 0, 583, 655, 656,
	657, 658, 0, 592, 0, 584, 585, 586, 659, 587,
	660, 0, 588, 589, 590, 591, 0, 593, 594, 0,
	0, 595, 596, 597, 599, 600, 598, 601, 0, 602,
	0, 0, 603, 604, 605, 661, 662, 663, 0, 607,
	606, 608, 664, 1437, 0, 264, 0, 0, 609, 610,
	665, 611, 612, 613, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 614, 0, 0,
	0, 0, 279, 280, 0, 281, 282, 283, 284, 285,
	286, 615, 616, 0, 287, 617, 288, 618, 0, 619,
	289, 290, 291, 292, 293, 294, 0, 0, 0, 295,
	620, 621, 622, 0, 296, 297, 623, 0, 0, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 0, 0, 0, 0, 0, 0, 0, 323, 324,
	325, 326, 327, 0, 328, 624, 625, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 626, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 627, 628, 359, 0, 267,
	0, 0, 0, 0, 0, 360, 361, 362, 629, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 0, 366,
	367, 630, 631, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 632, 0, 633, 378, 0, 379,
	380, 381, 382, 383, 1439, 635, 636, 460, 0, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 0, 0, 393, 637, 638, 0,
	639, 0, 395, 396, 0, 640, 0, 397, 398, 399,
	0, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 641, 0, 411,
	412, 0, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 0, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 0, 447, 0, 269, 0, 457,
	458, 0, 642, 459, 643, 461, 462, 0, 0, 463,
	0, 0, 1204, 465, 466, 467, 0, 0, 468, 469,
	644, 0, 470, 0, 645, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 648, 489, 649,
	490, 491, 0, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 650, 501, 503, 502, 504, 0, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 0,
	519, 520, 521, 0, 522, 523, 524, 525, 651, 526,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 0, 542, 543, 541, 544, 545, 546, 0,
	547, 548, 531, 532, 549, 550, 0, 551, 552, 553,
	554, 555, 556, 652, 0, 557, 0, 558, 559, 560,
	562, 533, 563, 568, 569, 653, 564, 565, 566, 567,
	654, 571, 572, 0, 573, 574, 0, 570, 561, 0,
	575, 576, 577, 578, 579, 580, 581, 353, 582, 0,
	583, 655, 656, 657, 658, 0, 592, 0, 584, 585,
	586, 659, 587, 660, 0, 588, 589, 590, 591, 0,
	593, 594, 0, 0, 595, 596, 597, 599, 600, 598,
	601, 0, 602, 0, 0, 603, 604, 605, 661, 662,
	663, 0, 607, 606, 608, 664, 1344, 0, 264, 0,
	0, 609, 610, 665, 611, 612, 613, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	614, 0, 0, 0, 0, 279, 280, 0, 281, 282,
	283, 284, 285, 286, 615, 616, 0, 287, 617, 288,
	618, 0, 619, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 620, 621, 622, 0, 296, 297, 623,
	0, 0, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 326, 327, 0, 328, 624, 625,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 626, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 627, 628,
	359, 0, 267, 0, 0, 0, 0, 0, 360, 361,
	362, 629, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 0, 366, 367, 630, 631, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 632, 0, 633,
	378, 0, 379, 380, 381, 382, 383, 1346, 635, 636,
	460, 0, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 268, 390, 391, 392, 394, 0, 0, 393,
	637, 638, 0, 639, 0, 395, 396, 0, 640, 0,
	397, 398, 399, 0, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	641, 0, 411, 412, 0, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 0, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 0, 447, 0,
	269, 0, 457, 458, 0, 642, 459, 643, 461, 462,
	0, 0, 463, 0, 0, 1204, 465, 466, 467, 0,
	0, 468, 469, 644, 0, 470, 0, 645, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 482, 646, 483, 484, 485, 647, 486, 487, 488,
	648, 489, 649, 490, 491, 0, 492, 493, 0, 494,
	495, 496, 497, 498, 499, 500, 650, 501, 503, 502,
	504, 0, 505, 0, 506, 507, 508, 0, 0, 0,
	0, 509, 0, 511, 512, 513, 514, 510, 515, 516,
	517, 518, 0, 519, 520, 521, 0, 522, 523, 524,
	525, 651, 526, 0, 527, 528, 534, 535, 529, 530,
	536, 537, 538, 539, 540, 0, 542, 543, 541, 544,
	545, 546, 0, 547, 548, 531, 532, 549, 550, 0,
	551, 552, 553, 554, 555, 556, 652, 0, 557, 0,
	558, 559, 560, 562, 533, 563, 568, 569, 653, 564,
	565, 566, 567, 654, 571, 572, 0, 573, 574, 0,
	570, 561, 0, 575, 576, 577, 578, 579, 580, 581,
	353, 582, 0, 583, 655, 656, 657, 658, 0, 592,
	0, 584, 585, 586, 659, 587, 660, 0, 588, 589,
	590, 591, 0, 593, 594, 0, 0, 595, 596, 597,
	599, 600, 598, 601, 0, 602, 0, 0, 603, 604,
	605, 661, 662, 663, 0, 607, 606, 608, 664, 697,
	0, 264, 0, 0, 609, 610, 665, 611, 612, 613,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 696, 275, 276, 686, 277, 278, 0, 0,
	0, 0, 0, 614, 0, 0, 0, 0, 279, 280,
	0, 281, 282, 283, 284, 285, 286, 615, 616, 0,
	287, 617, 288, 618, 0, 619, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 295, 620, 621, 622, 0,
	296, 297, 623, 0, 0, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 689,
	317, 318, 319, 0, 320, 321, 322, 0, 0, 0,
	0, 0, 0, 0, 323, 324, 325, 326, 327, 0,
	328, 624, 625, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	626, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 627, 628, 359, 0, 0, 0, 0, 0, 0,
	0, 360, 361, 362, 629, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 0, 366, 367, 630, 631, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 690, 377,
	632, 0, 633, 378, 0, 379, 380, 381, 382, 383,
	634, 635, 636, 460, 0, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 0, 390, 391, 392, 394,
	0, 0, 393, 637, 638, 0, 639, 0, 395, 396,
	0, 640, 0, 397, 398, 399, 0, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 641, 0, 411, 412, 0, 0, 413,
	0, 0, 0, 414, 415, 418, 0, 0, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 0, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	0, 447, 0, 0, 0, 457, 458, 0, 642, 459,
	643, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 644, 0, 470, 0,
	645, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 482, 646, 483, 484, 485, 647,
	486, 487, 488, 648, 489, 649, 490, 491, 0, 492,
	493, 0, 494, 495, 496, 497, 498, 499, 500, 650,
	501, 503, 502, 504, 0, 505, 0, 506, 507, 508,
	0, 0, 0, 0, 509, 0, 511, 512, 513, 514,
	510, 515, 516, 517, 518, 0, 519, 520, 521, 0,
	522, 523, 524, 525, 651, 526, 0, 527, 528, 534,
	535, 529, 530, 536, 537, 538, 539, 540, 691, 542,
	543, 541, 544, 545, 546, 0, 547, 548, 531, 532,
	549, 550, 0, 551, 552, 553, 554, 555, 556, 652,
	0, 557, 0, 558, 559, 560, 562, 533, 563, 568,
	569, 653, 564, 565, 566, 567, 654, 571, 572, 0,
	573, 574, 0, 570, 561, 0, 575, 576, 577, 578,
	579, 580, 581, 353, 582, 0, 583, 655, 656, 657,
	658, 0, 592, 0, 584, 585, 586, 659, 587, 660,
	0, 588, 589, 590, 591, 0, 593, 594, 0, 0,
	595, 596, 597, 599, 600, 598, 601, 0, 602, 0,
	0, 603, 604, 605, 661, 662, 663, 0, 607, 606,
	608, 664, 685, 0, 264, 0, 0, 609, 610, 665,
	611, 612, 613, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 686, 277,
	278, 0, 0, 0, 0, 0, 614, 0, 0, 0,
	0, 279, 280, 0, 281, 282, 283, 284, 285, 286,
	615, 616, 0, 287, 617, 288, 618, 0, 619, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 620,
	621, 622, 0, 296, 297, 623, 0, 0, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 689, 317, 318, 319, 0, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 0, 323, 324, 325,
	326, 327, 0, 328, 624, 625, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 626, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 627, 628, 359, 0, 0, 0,
	0, 0, 0, 0, 360, 361, 362, 629, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 0, 366, 367,
	630, 631, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 690, 377, 632, 0, 633, 378, 0, 379, 380,
	381, 382, 383, 634, 635, 636, 460, 0, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 0, 390,
	391, 392, 394, 0, 0, 393, 637, 638, 0, 639,
	0, 395, 396, 0, 640, 0, 397, 398, 399, 0,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 641, 0, 411, 412,
	0, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	0, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 0, 447, 0, 0, 0, 457, 458,
	0, 642, 459, 643, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 644,
	0, 470, 0, 645, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 482, 646, 483,
	484, 485, 647, 486, 487, 488, 648, 489, 649, 490,
	491, 0, 492, 493, 0, 494, 495, 496, 497, 498,
	499, 500, 650, 501, 503, 502, 504, 0, 505, 0,
	506, 507, 508, 0, 0, 0, 0, 509, 0, 511,
	512, 513, 514, 510, 515, 516, 517, 518, 0, 519,
	520, 521, 0, 522, 523, 524, 525, 651, 526, 0,
	527, 528, 534, 535, 529, 530, 536, 537, 538, 539,
	540, 691, 542, 543, 541, 544, 545, 546, 0, 547,
	548, 531, 532, 549, 550, 0, 551, 552, 553, 554,
	555, 556, 652, 0, 557, 0, 558, 559, 560, 562,
	533, 563, 568, 569, 653, 564, 565, 566, 567, 654,
	571, 572, 0, 573, 574, 0, 570, 561, 0, 575,
	576, 577, 578, 579, 580, 581, 353, 582, 0, 583,
	655, 656, 657, 658, 0, 592, 0, 584, 585, 586,
	659, 587, 660, 0, 588, 589, 590, 591, 0, 593,
	594, 0, 0, 595, 596, 597, 599, 600, 598, 601,
	0, 602, 0, 0, 603, 604, 605, 661, 662, 663,
	264, 607, 606, 608, 664, 0, 0, 0, 0, 0,
	609, 610, 665, 611, 612, 613, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 614, 0, 0, 0, 0, 279, 280, 0,
	281, 282, 283, 284, 285, 286, 615, 616, 0, 287,
	617, 288, 618, 0, 619, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 620, 621, 622, 0, 296,
	297, 623, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 326, 327, 0, 328,
	624, 625, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 626,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	627, 628, 359, 0, 267, 0, 0, 0, 0, 0,
	360, 361, 362, 629, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 0, 366, 367, 630, 631, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 632,
	0, 633, 378, 0, 379, 380, 381, 382, 383, 634,
	635, 636, 460, 0, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 268, 390, 391, 392, 394, 0,
	0, 393, 637, 638, 0, 639, 0, 395, 396, 0,
	640, 0, 397, 398, 399, 0, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 641, 0, 411, 412, 0, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 0, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 0,
	447, 0, 269, 0, 457, 458, 0, 642, 459, 643,
	461, 462, 0, 0, 463, 0, 0, 1204, 465, 466,
	467, 0, 0, 468, 469, 644, 0, 470, 0, 645,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 482, 646, 483, 484, 485, 647, 486,
	487, 488, 648, 489, 649, 490, 491, 0, 492, 493,
	0, 494, 495, 496, 497, 498, 499, 500, 650, 501,
	503, 502, 504, 0, 505, 0, 506, 507, 508, 0,
	0, 0, 0, 509, 0, 511, 512, 513, 514, 510,
	515, 516, 517, 518, 0, 519, 520, 521, 0, 522,
	523, 524, 525, 651, 526, 0, 527, 528, 534, 535,
	529, 530, 536, 537, 538, 539, 540, 0, 542, 543,
	541, 544, 545, 546, 0, 547, 548, 531, 532, 549,
	550, 0, 551, 552, 553, 554, 555, 556, 652, 0,
	557, 0, 558, 559, 560, 562, 533, 563, 568, 569,
	653, 564, 565, 566, 567, 654, 571, 572, 0, 573,
	574, 0, 570, 561, 0, 575, 576, 577, 578, 579,
	580, 581, 353, 582, 0, 583, 655, 656, 657, 658,
	0, 592, 0, 584, 585, 586, 659, 587, 660, 0,
	588, 589, 590, 591, 0, 593, 594, 0, 0, 595,
	596, 597, 599, 600, 598, 601, 0, 602, 0, 0,
	603, 604, 605, 661, 662, 663, 264, 607, 606, 608,
	664, 0, 0, 0, 0, 0, 609, 610, 665, 611,
	612, 613, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 614, 0,
	0, 0, 0, 279, 280, 0, 281, 282, 283, 284,
	285, 286, 615, 616, 0, 287, 617, 288, 618, 0,
	619, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 620, 621, 622, 0, 296, 297, 623, 0, 0,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 326, 327, 0, 328, 624, 625, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 626, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 627, 628, 359, 0,
	267, 0, 0, 0, 0, 0, 360, 361, 362, 629,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 0,
	366, 367, 630, 631, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 632, 0, 633, 378, 0,
	379, 380, 381, 382, 383, 634, 635, 636, 460, 0,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	268, 390, 391, 392, 394, 0, 0, 393, 637, 638,
	0, 639, 0, 395, 396, 0, 640, 0, 397, 398,
	399, 0, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 641, 0,
	411, 412, 0, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 0, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 3328, 447, 0, 269, 0,
	457, 458, 0, 642, 459, 643, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 644, 0, 470, 0, 645, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 482,
	646, 483, 484, 485, 647, 486, 487, 488, 648, 489,
	649, 490, 491, 0, 492, 493, 0, 494, 495, 496,
	497, 498, 499, 500, 650, 501, 503, 502, 504, 0,
	505, 0, 506, 507, 508, 0, 0, 0, 0, 509,
	0, 511, 512, 513, 514, 510, 515, 516, 517, 518,
	0, 519, 520, 521, 0, 522, 523, 524, 525, 651,
	526, 0, 527, 528, 534, 535, 529, 530, 536, 537,
	538, 539, 540, 0, 542, 543, 541, 544, 545, 546,
	0, 547, 548, 531, 532, 549, 550, 0, 551, 552,
	553, 554, 555, 556, 652, 0, 557, 0, 558, 559,
	560, 562, 533, 563, 568, 569, 653, 564, 565, 566,
	567, 654, 571, 572, 0, 573, 574, 0, 570, 561,
	0, 575, 576, 577, 578, 579, 580, 581, 353, 582,
	0, 583, 655, 656, 657, 658, 0, 592, 0, 584,
	585, 586, 659, 587, 660, 0, 588, 589, 590, 591,
	0, 593, 594, 0, 0, 595, 596, 597, 599, 600,
	598, 601, 0, 602, 0, 0, 603, 604, 605, 661,
	662, 663, 0, 607, 606, 608, 664, 2887, 0, 264,
	0, 0, 609, 610, 665, 611, 612, 613, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 614, 0, 0, 0, 0, 279, 280, 0, 281,
	282, 283, 284, 285, 286, 615, 616, 0, 287, 617,
	288, 618, 0, 619, 289, 290, 291, 292, 293, 294,
	0, 0, 0, 295, 620, 621, 622, 0, 296, 297,
	623, 0, 0, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 322, 0, 0, 0, 0, 0,
	0, 0, 323, 324, 325, 326, 327, 0, 328, 624,
	625, 0, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 339, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 626, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 627,
	628, 359, 0, 267, 0, 0, 0, 0, 0, 360,
	361, 362, 629, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 0, 366, 367, 630, 631, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 632, 0,
	633, 378, 0, 379, 380, 381, 382, 383, 2886, 635,
	636, 460, 0, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 268, 390, 391, 392, 394, 0, 0,
	393, 637, 638, 0, 639, 0, 395, 396, 0, 640,
	0, 397, 398, 399, 0, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 641, 0, 411, 412, 0, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 0, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 0, 447,
	0, 269, 0, 457, 458, 0, 642, 459, 643, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 644, 0, 470, 0, 645, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 482, 646, 483, 484, 485, 647, 486, 487,
	488, 648, 489, 649, 490, 491, 0, 492, 493, 0,
	494, 495, 496, 497, 498, 499, 500, 650, 501, 503,
	502, 504, 0, 505, 0, 506, 507, 508, 0, 0,
	0, 0, 509, 0, 511, 512, 513, 514, 510, 515,
	516, 517, 518, 0, 519, 520, 521, 0, 522, 523,
	524, 525, 651, 526, 0, 527, 528, 534, 535, 529,
	530, 536, 537, 538, 539, 540, 0, 542, 543, 541,
	544, 545, 546, 0, 547, 548, 531, 532, 549, 550,
	0, 551, 552, 553, 554, 555, 556, 652, 0, 557,
	0, 558, 559, 560, 562, 533, 563, 568, 569, 653,
	564, 565, 566, 567, 654, 571, 572, 0, 573, 574,
	0, 570, 561, 0, 575, 576, 577, 578, 579, 580,
	581, 353, 582, 0, 583, 655, 656, 657, 658, 0,
	592, 0, 584, 585, 586, 659, 587, 660, 0, 588,
	589, 590, 591, 0, 593, 594, 0, 0, 595, 596,
	597, 599, 600, 598, 601, 0, 602, 0, 0, 603,
	604, 605, 661, 662, 663, 0, 607, 606, 608, 664,
	2249, 0, 264, 0, 0, 609, 610, 665, 611, 612,
	613, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 614, 0, 0, 0, 0, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 615, 616,
	0, 287, 617, 288, 618, 0, 619, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 620, 621, 622,
	0, 296, 297, 623, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 624, 625, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 626, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 627, 628, 359, 0, 267, 0, 0, 0,
	0, 0, 360, 361, 362, 629, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 0, 366, 367, 630, 631,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 632, 0, 633, 378, 0, 379, 380, 381, 382,
	383, 634, 635, 636, 460, 0, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 0, 0, 393, 637, 638, 0, 639, 0, 395,
	396, 0, 640, 0, 397, 398, 399, 0, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 641, 0, 411, 412, 0, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 0, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 0, 447, 0, 269, 0, 457, 458, 0, 642,
	459, 643, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 644, 0, 470,
	0, 645, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 648, 489, 649, 490, 491, 0,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	650, 501, 503, 502, 504, 0, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 0, 519, 520, 521,
	0, 522, 523, 524, 525, 651, 526, 0, 527, 528,
	534, 535, 529, 530, 536, 537, 538, 539, 540, 0,
	542, 543, 541, 544, 545, 546, 0, 547, 548, 531,
	532, 549, 550, 0, 551, 552, 553, 554, 555, 556,
	652, 0, 557, 0, 558, 559, 560, 562, 533, 563,
	568, 569, 653, 564, 565, 566, 567, 654, 571, 572,
	0, 573, 574, 0, 570, 561, 0, 575, 576, 577,
	578, 579, 580, 581, 353, 582, 0, 583, 655, 656,
	657, 658, 0, 592, 0, 584, 585, 586, 659, 587,
	660, 0, 588, 589, 590, 591, 0, 593, 594, 0,
	0, 595, 596, 597, 599, 600, 598, 601, 0, 602,
	0, 0, 603, 604, 605, 661, 662, 663, 264, 607,
	606, 608, 664, 0, 0, 0, 0, 0, 609, 610,
	665, 611, 612, 613, 0, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	614, 0, 0, 0, 0, 279, 280, 0, 281, 282,
	283, 284, 285, 286, 615, 616, 0, 287, 617, 288,
	618, 0, 619, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 620, 621, 622, 0, 296, 297, 623,
	0, 0, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 326, 327, 0, 328, 624, 625,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 626, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 627, 628,
	359, 0, 267, 0, 0, 0, 0, 0, 360, 361,
	362, 629, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 0, 366, 367, 630, 631, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 632, 0, 633,
	378, 0, 379, 380, 381, 382, 383, 634, 635, 636,
	460, 0, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 268, 390, 391, 392, 394, 0, 0, 393,
	637, 638, 0, 639, 0, 395, 396, 0, 640, 0,
	397, 398, 399, 0, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	641, 0, 411, 412, 0, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 0, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 0, 447, 0,
	269, 0, 457, 458, 0, 642, 459, 643, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 644, 0, 470, 0, 645, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 482, 646, 483, 484, 485, 647, 486, 487, 488,
	648, 489, 649, 490, 491, 0, 492, 493, 0, 494,
	495, 496, 497, 498, 499, 500, 650, 501, 503, 502,
	504, 0, 505, 0, 506, 507, 508, 0, 0, 0,
	0, 509, 0, 511, 512, 513, 514, 510, 515, 516,
	517, 518, 0, 519, 520, 521, 0, 522, 523, 524,
	525, 651, 526, 0, 527, 528, 534, 535, 529, 530,
	536, 537, 538, 539, 540, 0, 542, 543, 541, 544,
	545, 546, 0, 547, 548, 531, 532, 549, 550, 0,
	551, 552, 553, 554, 555, 556, 652, 0, 557, 0,
	558, 559, 560, 562, 533, 563, 568, 569, 653, 564,
	565, 566, 567, 654, 571, 572, 0, 573, 574, 0,
	570, 561, 2190, 575, 576, 577, 578, 579, 580, 581,
	353, 582, 0, 583, 655, 656, 657, 658, 0, 592,
	0, 584, 585, 586, 659, 587, 660, 0, 588, 589,
	590, 591, 0, 593, 594, 0, 0, 595, 596, 597,
	599, 600, 598, 601, 0, 602, 0, 0, 603, 604,
	605, 661, 662, 663, 0, 607, 606, 608, 664, 2197,
	0, 264, 0, 0, 609, 610, 665, 611, 612, 613,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 614, 0, 0, 0, 0, 279, 280,
	0, 281, 282, 283, 284, 285, 286, 615, 616, 0,
	287, 617, 288, 618, 0, 619, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 295, 620, 621, 622, 0,
	296, 297, 623, 0, 0, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 322, 0, 0, 0,
	0, 0, 0, 0, 323, 324, 325, 326, 327, 0,
	328, 624, 625, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	626, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 627, 628, 359, 0, 267, 0, 0, 0, 0,
	0, 360, 361, 362, 629, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 0, 366, 367, 630, 631, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	632, 0, 633, 378, 0, 379, 380, 381, 382, 383,
	2196, 635, 636, 460, 0, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	0, 0, 393, 637, 638, 0, 639, 0, 395, 396,
	0, 640, 0, 397, 398, 399, 0, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 641, 0, 411, 412, 0, 0, 413,
	0, 0, 0, 414, 415, 418, 0, 0, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 0, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	0, 447, 0, 269, 0, 457, 458, 0, 642, 459,
	643, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 644, 0, 470, 0,
	645, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 482, 646, 483, 484, 485, 647,
	486, 487, 488, 648, 489, 649, 490, 491, 0, 492,
	493, 0, 494, 495, 496, 497, 498, 499, 500, 650,
	501, 503, 502, 504, 0, 505, 0, 506, 507, 508,
	0, 0, 0, 0, 509, 0, 511, 512, 513, 514,
	510, 515, 516, 517, 518, 0, 519, 520, 521, 0,
	522, 523, 524, 525, 651, 526, 0, 527, 528, 534,
	535, 529, 530, 536, 537, 538, 539, 540, 0, 542,
	543, 541, 544, 545, 546, 0, 547, 548, 531, 532,
	549, 550, 0, 551, 552, 553, 554, 555, 556, 652,
	0, 557, 0, 558, 559, 560, 562, 533, 563, 568,
	569, 653, 564, 565, 566, 567, 654, 571, 572, 0,
	573, 574, 0, 570, 561, 0, 575, 576, 577, 578,
	579, 580, 581, 353, 582, 0, 583, 655, 656, 657,
	658, 0, 592, 0, 584, 585, 586, 659, 587, 660,
	0, 588, 589, 590, 591, 0, 593, 594, 0, 0,
	595, 596, 597, 599, 600, 598, 601, 0, 602, 0,
	0, 603, 604, 605, 661, 662, 663, 0, 607, 606,
	608, 664, 2183, 0, 264, 0, 0, 609, 610, 665,
	611, 612, 613, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 614, 0, 0, 0,
	0, 279, 280, 0, 281, 282, 283, 284, 285, 286,
	615, 616, 0, 287, 617, 288, 618, 0, 619, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 620,
	621, 622, 0, 296, 297, 623, 0, 0, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 0, 323, 324, 325,
	326, 327, 0, 328, 624, 625, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 626, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 627, 628, 359, 0, 267, 0,
	0, 0, 0, 0, 360, 361, 362, 629, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 0, 366, 367,
	630, 631, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 632, 0, 633, 378, 0, 379, 380,
	381, 382, 383, 2185, 635, 636, 460, 0, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 0, 393, 637, 638, 0, 639,
	0, 395, 396, 0, 640, 0, 397, 398, 399, 0,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 641, 0, 411, 412,
	0, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	0, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 0, 447, 0, 269, 0, 457, 458,
	0, 642, 459, 643, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 644,
	0, 470, 0, 645, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 482, 646, 483,
	484, 485, 647, 486, 487, 488, 648, 489, 649, 490,
	491, 0, 492, 493, 0, 494, 495, 496, 497, 498,
	499, 500, 650, 501, 503, 502, 504, 0, 505, 0,
	506, 507, 508, 0, 0, 0, 0, 509, 0, 511,
	512, 513, 514, 510, 515, 516, 517, 518, 0, 519,
	520, 521, 0, 522, 523, 524, 525, 651, 526, 0,
	527, 528, 534, 535, 529, 530, 536, 537, 538, 539,
	540, 0, 542, 543, 541, 544, 545, 546, 0, 547,
	548, 531, 532, 549, 550, 0, 551, 552, 553, 554,
	555, 556, 652, 0, 557, 0, 558, 559, 560, 562,
	533, 563, 568, 569, 653, 564, 565, 566, 567, 654,
	571, 572, 0, 573, 574, 0, 570, 561, 0, 575,
	576, 577, 578, 579, 580, 581, 353, 582, 0, 583,
	655, 656, 657, 658, 0, 592, 0, 584, 585, 586,
	659, 587, 660, 0, 588, 589, 590, 591, 0, 593,
	594, 0, 0, 595, 596, 597, 599, 600, 598, 601,
	0, 602, 0, 0, 603, 604, 605, 661, 662, 663,
	264, 607, 606, 608, 664, 0, 0, 0, 0, 0,
	609, 610, 665, 611, 612, 613, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 614, 0, 0, 0, 0, 279, 280, 0,
	281, 282, 283, 284, 285, 286, 615, 616, 0, 287,
	617, 288, 618, 0, 619, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 620, 621, 622, 0, 296,
	297, 623, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 326, 327, 0, 328,
	624, 625, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 626,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	627, 628, 359, 0, 267, 0, 0, 0, 0, 0,
	360, 361, 362, 629, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 0, 366, 367, 630, 631, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 632,
	0, 633, 378, 0, 379, 380, 381, 382, 383, 2153,
	635, 636, 460, 0, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 268, 390, 391, 392, 394, 0,
	0, 393, 637, 638, 0, 639, 0, 395, 396, 0,
	640, 0, 397, 398, 399, 0, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 641, 0, 411, 412, 0, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 0, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 0,
	447, 0, 269, 0, 457, 458, 0, 642, 459, 643,
	461, 462, 0, 0, 463, 0, 0, 1204, 465, 466,
	467, 0, 0, 468, 469, 644, 0, 470, 0, 645,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 482, 646, 483, 484, 485, 647, 486,
	487, 488, 648, 489, 649, 490, 491, 0, 492, 493,
	0, 494, 495, 496, 497, 498, 499, 500, 650, 501,
	503, 502, 504, 0, 505, 0, 506, 507, 508, 0,
	0, 0, 0, 509, 0, 511, 512, 513, 514, 510,
	515, 516, 517, 518, 0, 519, 520, 521, 0, 522,
	523, 524, 525, 651, 526, 0, 527, 528, 534, 535,
	529, 530, 536, 537, 538, 539, 540, 0, 542, 543,
	541, 544, 545, 546, 0, 547, 548, 531, 532, 549,
	550, 0, 551, 552, 553, 554, 555, 556, 652, 0,
	557, 0, 558, 559, 560, 562, 533, 563, 568, 569,
	653, 564, 565, 566, 567, 654, 571, 572, 0, 573,
	574, 0, 570, 561, 0, 575, 576, 577, 578, 579,
	580, 581, 353, 582, 0, 583, 655, 656, 657, 658,
	0, 592, 0, 584, 585, 586, 659, 587, 660, 0,
	588, 589, 590, 591, 0, 593, 594, 0, 0, 595,
	596, 597, 599, 600, 598, 601, 0, 602, 0, 0,
	603, 604, 605, 661, 662, 663, 0, 607, 606, 608,
	664, 1539, 0, 264, 0, 0, 609, 610, 665, 611,
	612, 613, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 614, 0, 0, 0, 0,
	279, 280, 0, 281, 282, 283, 284, 285, 286, 615,
	616, 0, 287, 617, 288, 618, 0, 619, 289, 290,
	291, 292, 293, 294, 0, 0, 0, 295, 620, 621,
	622, 0, 296, 297, 623, 0, 0, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 0, 323, 324, 325, 326,
	327, 0, 328, 624, 625, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 626, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 627, 628, 359, 0, 267, 0, 0,
	0, 0, 0, 360, 361, 362, 629, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 0, 366, 367, 630,
	631, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 632, 0, 633, 378, 0, 379, 380, 381,
	382, 383, 1538, 635, 636, 460, 0, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 0, 0, 393, 637, 638, 0, 639, 0,
	395, 396, 0, 640, 0, 397, 398, 399, 0, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 641, 0, 411, 412, 0,
	0, 413, 0, 0, 0, 414, 415, 418, 0, 0,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 0,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 0, 447, 0, 269, 0, 457, 458, 0,
	642, 459, 643, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 644, 0,
	470, 0, 645, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 648, 489, 649, 490, 491,
	0, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 650, 501, 503, 502, 504, 0, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 0, 519, 520,
	521, 0, 522, 523, 524, 525, 651, 526, 0, 527,
	528, 534, 535, 529, 530, 536, 537, 538, 539, 540,
	0, 542, 543, 541, 544, 545, 546, 0, 547, 548,
	531, 532, 549, 550, 0, 551, 552, 553, 554, 555,
	556, 652, 0, 557, 0, 558, 559, 560, 562, 533,
	563, 568, 569, 653, 564, 565, 566, 567, 654, 571,
	572, 0, 573, 574, 0, 570, 561, 0, 575, 576,
	577, 578, 579, 580, 581, 353, 582, 0, 583, 655,
	656, 657, 658, 0, 592, 0, 584, 585, 586, 659,
	587, 660, 0, 588, 589, 590, 591, 0, 593, 594,
	0, 0, 595, 596, 597, 599, 600, 598, 601, 0,
	602, 0, 0, 603, 604, 605, 661, 662, 663, 0,
	607, 606, 608, 664, 1457, 0, 264, 0, 0, 609,
	610, 665, 611, 612, 613, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 614, 0,
	0, 0, 0, 279, 280, 0, 281, 282, 283, 284,
	285, 286, 615, 616, 0, 287, 617, 288, 618, 0,
	619, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 620, 621, 622, 0, 296, 297, 623, 0, 0,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 326, 327, 0, 328, 624, 625, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 626, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 627, 628, 359, 0,
	267, 0, 0, 0, 0, 0, 360, 361, 362, 629,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 0,
	366, 367, 630, 631, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 632, 0, 633, 378, 0,
	379, 380, 381, 382, 383, 634, 635, 636, 460, 0,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	268, 390, 391, 392, 394, 0, 0, 393, 637, 638,
	0, 639, 0, 395, 396, 0, 640, 0, 397, 398,
	399, 0, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 641, 0,
	411, 412, 0, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 0, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 0, 447, 0, 269, 0,
	457, 458, 0, 642, 459, 643, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 644, 0, 470, 0, 645, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 482,
	646, 483, 484, 485, 647, 486, 487, 488, 648, 489,
	649, 490, 491, 0, 492, 493, 0, 494, 495, 496,
	497, 498, 499, 500, 650, 501, 503, 502, 504, 0,
	505, 0, 506, 507, 508, 0, 0, 0, 0, 509,
	0, 511, 512, 513, 514, 510, 515, 516, 517, 518,
	0, 519, 520, 521, 0, 522, 523, 524, 525, 651,
	526, 0, 527, 528, 534, 535, 529, 530, 536, 537,
	538, 539, 540, 0, 542, 543, 541, 544, 545, 546,
	0, 547, 548, 531, 532, 549, 550, 0, 551, 552,
	553, 554, 555, 556, 652, 0, 557, 0, 558, 559,
	560, 562, 533, 563, 568, 569, 653, 564, 565, 566,
	567, 654, 571, 572, 0, 573, 574, 0, 570, 561,
	0, 575, 576, 577, 578, 579, 580, 581, 353, 582,
	0, 583, 655, 656, 657, 658, 0, 592, 0, 584,
	585, 586, 659, 587, 660, 0, 588, 589, 590, 591,
	0, 593, 594, 0, 0, 595, 596, 597, 599, 600,
	598, 601, 0, 602, 0, 0, 603, 604, 605, 661,
	662, 663, 0, 607, 606, 608, 664, 1450, 0, 264,
	0, 0, 609, 610, 665, 611, 612, 613, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 614, 0, 0, 0, 0, 279, 280, 0, 281,
	282, 283, 284, 285, 286, 615, 616, 0, 287, 617,
	288, 618, 0, 619, 289, 290, 291, 292, 293, 294,
	0, 0, 0, 295, 620, 621, 622, 0, 296, 297,
	623, 0, 0, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 322, 0, 0, 0, 0, 0,
	0, 0, 323, 324, 325, 326, 327, 0, 328, 624,
	625, 0, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 339, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 626, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 627,
	628, 359, 0, 267, 0, 0, 0, 0, 0, 360,
	361, 362, 629, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 0, 366, 367, 630, 631, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 632, 0,
	633, 378, 0, 379, 380, 381, 382, 383, 1452, 635,
	636, 460, 0, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 268, 390, 391, 392, 394, 0, 0,
	393, 637, 638, 0, 639, 0, 395, 396, 0, 640,
	0, 397, 398, 399, 0, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 641, 0, 411, 412, 0, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 0, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 0, 447,
	0, 269, 0, 457, 458, 0, 642, 459, 643, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 644, 0, 470, 0, 645, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 482, 646, 483, 484, 485, 647, 486, 487,
	488, 648, 489, 649, 490, 491, 0, 492, 493, 0,
	494, 495, 496, 497, 498, 499, 500, 650, 501, 503,
	502, 504, 0, 505, 0, 506, 507, 508, 0, 0,
	0, 0, 509, 0, 511, 512, 513, 514, 510, 515,
	516, 517, 518, 0, 519, 520, 521, 0, 522, 523,
	524, 525, 651, 526, 0, 527, 528, 534, 535, 529,
	530, 536, 537, 538, 539, 540, 0, 542, 543, 541,
	544, 545, 546, 0, 547, 548, 531, 532, 549, 550,
	0, 551, 552, 553, 554, 555, 556, 652, 0, 557,
	0, 558, 559, 560, 562, 533, 563, 568, 569, 653,
	564, 565, 566, 567, 654, 571, 572, 0, 573, 574,
	0, 570, 561, 0, 575, 576, 577, 578, 579, 580,
	581, 353, 582, 0, 583, 655, 656, 657, 658, 0,
	592, 0, 584, 585, 586, 659, 587, 660, 0, 588,
	589, 590, 591, 0, 593, 594, 0, 0, 595, 596,
	597, 599, 600, 598, 601, 0, 602, 0, 0, 603,
	604, 605, 661, 662, 663, 0, 607, 606, 608, 664,
	1277, 0, 264, 0, 0, 609, 610, 665, 611, 612,
	613, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 614, 0, 0, 0, 0, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 615, 616,
	0, 287, 617, 288, 618, 0, 619, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 620, 621, 622,
	0, 296, 297, 623, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 624, 625, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 626, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 627, 628, 359, 0, 267, 0, 0, 0,
	0, 0, 360, 361, 362, 629, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 0, 366, 367, 630, 631,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 632, 0, 633, 378, 0, 379, 380, 381, 382,
	383, 1276, 635, 636, 460, 0, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 0, 0, 393, 637, 638, 0, 639, 0, 395,
	396, 0, 640, 0, 397, 398, 399, 0, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 641, 0, 411, 412, 0, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 0, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 0, 447, 0, 269, 0, 457, 458, 0, 642,
	459, 643, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 644, 0, 470,
	0, 645, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 648, 489, 649, 490, 491, 0,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	650, 501, 503, 502, 504, 0, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 0, 519, 520, 521,
	0, 522, 523, 524, 525, 651, 526, 0, 527, 528,
	534, 535, 529, 530, 536, 537, 538, 539, 540, 0,
	542, 543, 541, 544, 545, 546, 0, 547, 548, 531,
	532, 549, 550, 0, 551, 552, 553, 554, 555, 556,
	652, 0, 557, 0, 558, 559, 560, 562, 533, 563,
	568, 569, 653, 564, 565, 566, 567, 654, 571, 572,
	0, 573, 574, 0, 570, 561, 0, 575, 576, 577,
	578, 579, 580, 581, 353, 582, 0, 583, 655, 656,
	657, 658, 0, 592, 0, 584, 585, 586, 659, 587,
	660, 0, 588, 589, 590, 591, 0, 593, 594, 0,
	0, 595, 596, 597, 599, 600, 598, 601, 0, 602,
	0, 0, 603, 604, 605, 661, 662, 663, 0, 607,
	606, 608, 664, 1267, 0, 264, 0, 0, 609, 610,
	665, 611, 612, 613, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 614, 0, 0,
	0, 0, 279, 280, 0, 281, 282, 283, 284, 285,
	286, 615, 616, 0, 287, 617, 288, 618, 0, 619,
	289, 290, 291, 292, 293, 294, 0, 0, 0, 295,
	620, 621, 622, 0, 296, 297, 623, 0, 0, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 0, 0, 0, 0, 0, 0, 0, 323, 324,
	325, 326, 327, 0, 328, 624, 625, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 626, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 627, 628, 359, 0, 267,
	0, 0, 0, 0, 0, 360, 361, 362, 629, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 0, 366,
	367, 630, 631, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 632, 0, 633, 378, 0, 379,
	380, 381, 382, 383, 1266, 635, 636, 460, 0, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 0, 0, 393, 637, 638, 0,
	639, 0, 395, 396, 0, 640, 0, 397, 398, 399,
	0, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 641, 0, 411,
	412, 0, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 0, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 0, 447, 0, 269, 0, 457,
	458, 0, 642, 459, 643, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	644, 0, 470, 0, 645, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 648, 489, 649,
	490, 491, 0, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 650, 501, 503, 502, 504, 0, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 0,
	519, 520, 521, 0, 522, 523, 524, 525, 651, 526,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 0, 542, 543, 541, 544, 545, 546, 0,
	547, 548, 531, 532, 549, 550, 0, 551, 552, 553,
	554, 555, 556, 652, 0, 557, 0, 558, 559, 560,
	562, 533, 563, 568, 569, 653, 564, 565, 566, 567,
	654, 571, 572, 0, 573, 574, 0, 570, 561, 0,
	575, 576, 577, 578, 579, 580, 581, 353, 582, 0,
	583, 655, 656, 657, 658, 0, 592, 0, 584, 585,
	586, 659, 587, 660, 0, 588, 589, 590, 591, 0,
	593, 594, 0, 0, 595, 596, 597, 599, 600, 598,
	601, 0, 602, 0, 0, 603, 604, 605, 661, 662,
	663, 0, 607, 606, 608, 664, 1264, 0, 264, 0,
	0, 609, 610, 665, 611, 612, 613, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	614, 0, 0, 0, 0, 279, 280, 0, 281, 282,
	283, 284, 285, 286, 615, 616, 0, 287, 617, 288,
	618, 0, 619, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 620, 621, 622, 0, 296, 297, 623,
	0, 0, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 326, 327, 0, 328, 624, 625,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 626, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 627, 628,
	359, 0, 267, 0, 0, 0, 0, 0, 360, 361,
	362, 629, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 0, 366, 367, 630, 631, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 632, 0, 633,
	378, 0, 379, 380, 381, 382, 383, 1263, 635, 636,
	460, 0, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 268, 390, 391, 392, 394, 0, 0, 393,
	637, 638, 0, 639, 0, 395, 396, 0, 640, 0,
	397, 398, 399, 0, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	641, 0, 411, 412, 0, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 0, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 0, 447, 0,
	269, 0, 457, 458, 0, 642, 459, 643, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 644, 0, 470, 0, 645, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 482, 646, 483, 484, 485, 647, 486, 487, 488,
	648, 489, 649, 490, 491, 0, 492, 493, 0, 494,
	495, 496, 497, 498, 499, 500, 650, 501, 503, 502,
	504, 0, 505, 0, 506, 507, 508, 0, 0, 0,
	0, 509, 0, 511, 512, 513, 514, 510, 515, 516,
	517, 518, 0, 519, 520, 521, 0, 522, 523, 524,
	525, 651, 526, 0, 527, 528, 534, 535, 529, 530,
	536, 537, 538, 539, 540, 0, 542, 543, 541, 544,
	545, 546, 0, 547, 548, 531, 532, 549, 550, 0,
	551, 552, 553, 554, 555, 556, 652, 0, 557, 0,
	558, 559, 560, 562, 533, 563, 568, 569, 653, 564,
	565, 566, 567, 654, 571, 572, 0, 573, 574, 0,
	570, 561, 0, 575, 576, 577, 578, 579, 580, 581,
	353, 582, 0, 583, 655, 656, 657, 658, 0, 592,
	0, 584, 585, 586, 659, 587, 660, 0, 588, 589,
	590, 591, 0, 593, 594, 0, 0, 595, 596, 597,
	599, 600, 598, 601, 0, 602, 0, 0, 603, 604,
	605, 661, 662, 663, 0, 607, 606, 608, 664, 1259,
	0, 264, 0, 0, 609, 610, 665, 611, 612, 613,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 614, 0, 0, 0, 0, 279, 280,
	0, 281, 282, 283, 284, 285, 286, 615, 616, 0,
	287, 617, 288, 618, 0, 619, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 295, 620, 621, 622, 0,
	296, 297, 623, 0, 0, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 322, 0, 0, 0,
	0, 0, 0, 0, 323, 324, 325, 326, 327, 0,
	328, 624, 625, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	626, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 627, 628, 359, 0, 267, 0, 0, 0, 0,
	0, 360, 361, 362, 629, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 0, 366, 367, 630, 631, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	632, 0, 633, 378, 0, 379, 380, 381, 382, 383,
	1258, 635, 636, 460, 0, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	0, 0, 393, 637, 638, 0, 639, 0, 395, 396,
	0, 640, 0, 397, 398, 399, 0, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 641, 0, 411, 412, 0, 0, 413,
	0, 0, 0, 414, 415, 418, 0, 0, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 0, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	0, 447, 0, 269, 0, 457, 458, 0, 642, 459,
	643, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 644, 0, 470, 0,
	645, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 482, 646, 483, 484, 485, 647,
	486, 487, 488, 648, 489, 649, 490, 491, 0, 492,
	493, 0, 494, 495, 496, 497, 498, 499, 500, 650,
	501, 503, 502, 504, 0, 505, 0, 506, 507, 508,
	0, 0, 0, 0, 509, 0, 511, 512, 513, 514,
	510, 515, 516, 517, 518, 0, 519, 520, 521, 0,
	522, 523, 524, 525, 651, 526, 0, 527, 528, 534,
	535, 529, 530, 536, 537, 538, 539, 540, 0, 542,
	543, 541, 544, 545, 546, 0, 547, 548, 531, 532,
	549, 550, 0, 551, 552, 553, 554, 555, 556, 652,
	0, 557, 0, 558, 559, 560, 562, 533, 563, 568,
	569, 653, 564, 565, 566, 567, 654, 571, 572, 0,
	573, 574, 0, 570, 561, 0, 575, 576, 577, 578,
	579, 580, 581, 353, 582, 0, 583, 655, 656, 657,
	658, 0, 592, 0, 584, 585, 586, 659, 587, 660,
	0, 588, 589, 590, 591, 0, 593, 594, 0, 0,
	595, 596, 597, 599, 600, 598, 601, 0, 602, 0,
	0, 603, 604, 605, 661, 662, 663, 0, 607, 606,
	608, 664, 667, 0, 264, 0, 0, 609, 610, 665,
	611, 612, 613, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 614, 0, 0, 0,
	0, 279, 280, 0, 281, 282, 283, 284, 285, 286,
	615, 616, 0, 287, 617, 288, 618, 0, 619, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 620,
	621, 622, 0, 296, 297, 623, 0, 0, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 0, 323, 324, 325,
	326, 327, 0, 328, 624, 625, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 626, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 627, 628, 359, 0, 267, 0,
	0, 0, 0, 0, 360, 361, 362, 629, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 0, 366, 367,
	630, 631, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 632, 0, 633, 378, 0, 379, 380,
	381, 382, 383, 634, 635, 636, 460, 0, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 0, 393, 637, 638, 0, 639,
	0, 395, 396, 0, 640, 0, 397, 398, 399, 0,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 641, 0, 411, 412,
	0, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	0, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 0, 447, 0, 269, 0, 457, 458,
	0, 642, 459, 643, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 644,
	0, 470, 0, 645, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 482, 646, 483,
	484, 485, 647, 486, 487, 488, 648, 489, 649, 490,
	491, 0, 492, 493, 0, 494, 495, 496, 497, 498,
	499, 500, 650, 501, 503, 502, 504, 0, 505, 0,
	506, 507, 508, 0, 0, 0, 0, 509, 0, 511,
	512, 513, 514, 510, 515, 516, 517, 518, 0, 519,
	520, 521, 0, 522, 523, 524, 525, 651, 526, 0,
	527, 528, 534, 535, 529, 530, 536, 537, 538, 539,
	540, 0, 542, 543, 541, 544, 545, 546, 0, 547,
	548, 531, 532, 549, 550, 0, 551, 552, 553, 554,
	555, 556, 652, 0, 557, 0, 558, 559, 560, 562,
	533, 563, 568, 569, 653, 564, 565, 566, 567, 654,
	571, 572, 0, 573, 574, 0, 570, 561, 0, 575,
	576, 577, 578, 579, 580, 581, 353, 582, 0, 583,
	655, 656, 657, 658, 0, 592, 0, 584, 585, 586,
	659, 587, 660, 0, 588, 589, 590, 591, 0, 593,
	594, 0, 0, 595, 596, 597, 599, 600, 598, 601,
	0, 602, 0, 0, 603, 604, 605, 661, 662, 663,
	0, 607, 606, 608, 664, 255, 0, 264, 0, 0,
	609, 610, 665, 611, 612, 613, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 614,
	0, 0, 0, 0, 279, 280, 0, 281, 282, 283,
	284, 285, 286, 615, 616, 0, 287, 617, 288, 618,
	0, 619, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 620, 621, 622, 0, 296, 297, 623, 0,
	0, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 0, 328, 624, 625, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 626, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 627, 628, 359,
	0, 267, 0, 0, 0, 0, 0, 360, 361, 362,
	629, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	0, 366, 367, 630, 631, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 632, 0, 633, 378,
	0, 379, 380, 381, 382, 383, 634, 635, 636, 460,
	0, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 268, 390, 391, 392, 394, 0, 0, 393, 637,
	638, 0, 639, 0, 395, 396, 0, 640, 0, 397,
	398, 399, 0, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 641,
	0, 411, 412, 0, 0, 413, 0, 0, 0, 414,
	415, 418, 0, 0, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 0, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 0, 447, 0, 269,
	0, 457, 458, 0, 642, 459, 643, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 644, 0, 470, 0, 645, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	482, 646, 483, 484, 485, 647, 486, 487, 488, 648,
	489, 649, 490, 491, 0, 492, 493, 0, 494, 495,
	496, 497, 498, 499, 500, 650, 501, 503, 502, 504,
	0, 505, 0, 506, 507, 508, 0, 0, 0, 0,
	509, 0, 511, 512, 513, 514, 510, 515, 516, 517,
	518, 0, 519, 520, 521, 0, 522, 523, 524, 525,
	651, 526, 0, 527, 528, 534, 535, 529, 530, 536,
	537, 538, 539, 540, 0, 542, 543, 541, 544, 545,
	546, 0, 547, 548, 531, 532, 549, 550, 0, 551,
	552, 553, 554, 555, 556, 652, 0, 557, 0, 558,
	559, 560, 562, 533, 563, 568, 569, 653, 564, 565,
	566, 567, 654, 571, 572, 0, 573, 574, 0, 570,
	561, 0, 575, 576, 577, 578, 579, 580, 581, 353,
	582, 0, 583, 655, 656, 657, 658, 0, 592, 0,
	584, 585, 586, 659, 587, 660, 0, 588, 589, 590,
	591, 0, 593, 594, 0, 0, 595, 596, 597, 599,
	600, 598, 601, 0, 602, 0, 0, 603, 604, 605,
	661, 662, 663, 264, 607, 606, 608, 664, 0, 0,
	0, 0, 0, 609, 610, 665, 611, 612, 613, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 614, 0, 0, 0, 0,
	279, 280, 0, 281, 282, 283, 284, 285, 286, 615,
	616, 0, 287, 617, 288, 618, 0, 619, 289, 290,
	291, 292, 293, 294, 0, 0, 0, 295, 620, 621,
	622, 0, 296, 297, 623, 0, 0, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 0, 323, 324, 325, 326,
	327, 0, 328, 624, 625, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 626, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 627, 628, 359, 0, 267, 0, 0,
	0, 0, 0, 360, 361, 362, 629, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 0, 366, 367, 630,
	631, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 632, 0, 633, 378, 0, 379, 380, 381,
	382, 383, 634, 635, 636, 460, 0, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 0, 0, 393, 637, 638, 0, 639, 0,
	395, 396, 0, 640, 0, 397, 398, 399, 0, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 641, 0, 411, 412, 0,
	0, 413, 0, 0, 0, 414, 415, 418, 0, 0,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 0,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 0, 447, 0, 269, 0, 457, 458, 0,
	642, 459, 643, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 644, 0,
	470, 0, 645, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 648, 489, 649, 490, 491,
	0, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 650, 501, 503, 502, 504, 0, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 0, 519, 520,
	521, 0, 522, 523, 524, 525, 651, 526, 0, 527,
	528, 534, 535, 529, 530, 536, 537, 538, 539, 540,
	0, 542, 543, 541, 544, 545, 546, 0, 547, 548,
	531, 532, 549, 550, 0, 551, 552, 553, 554, 555,
	556, 652, 0, 557, 0, 558, 559, 560, 562, 533,
	563, 568, 569, 653, 564, 565, 566, 567, 654, 571,
	572, 0, 573, 574, 0, 570, 561, 0, 575, 576,
	577, 578, 579, 580, 581, 353, 582, 0, 583, 655,
	656, 657, 658, 0, 592, 0, 584, 585, 586, 659,
	587, 660, 0, 588, 589, 590, 591, 0, 593, 594,
	0, 0, 595, 596, 597, 599, 600, 598, 601, 0,
	602, 0, 0, 603, 604, 605, 661, 662, 663, 264,
	607, 606, 608, 664, 0, 0, 0, 0, 0, 609,
	610, 665, 611, 612, 613, 0, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 614, 0, 0, 0, 0, 279, 280, 0, 281,
	282, 283, 284, 285, 286, 615, 616, 0, 287, 617,
	288, 618, 0, 619, 289, 290, 291, 292, 293, 294,
	0, 0, 0, 295, 620, 621, 622, 0, 296, 297,
	623, 0, 0, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 689, 317, 318,
	319, 0, 320, 321, 322, 0, 0, 0, 0, 0,
	0, 0, 323, 324, 325, 326, 327, 0, 328, 624,
	625, 0, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 339, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 626, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 627,
	628, 359, 0, 0, 0, 0, 0, 0, 0, 360,
	361, 362, 629, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 0, 366, 367, 630, 631, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 690, 377, 632, 0,
	633, 378, 0, 379, 380, 381, 382, 383, 634, 635,
	636, 460, 0, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 0, 390, 391, 392, 394, 0, 0,
	393, 637, 638, 0, 639, 0, 395, 396, 0, 640,
	0, 397, 398, 399, 0, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 641, 0, 411, 412, 0, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 0, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 0, 447,
	0, 0, 0, 457, 458, 0, 642, 459, 643, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 644, 0, 470, 0, 645, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 482, 646, 483, 484, 485, 647, 486, 487,
	488, 648, 489, 649, 490, 491, 0, 492, 493, 0,
	494, 495, 496, 497, 498, 499, 500, 650, 501, 503,
	502, 504, 0, 505, 0, 506, 507, 508, 0, 0,
	0, 0, 509, 0, 511, 512, 513, 514, 510, 515,
	516, 517, 518, 0, 519, 520, 521, 0, 522, 523,
	524, 525, 651, 526, 0, 527, 528, 534, 535, 529,
	530, 536, 537, 538, 539, 540, 691, 542, 543, 541,
	544, 545, 546, 0, 547, 548, 531, 532, 549, 550,
	0, 551, 552, 553, 554, 555, 556, 652, 0, 557,
	0, 558, 559, 560, 562, 533, 563, 568, 569, 653,
	564, 565, 566, 567, 654, 571, 572, 0, 573, 574,
	0, 570, 561, 0, 575, 576, 577, 578, 579, 580,
	581, 353, 582, 0, 583, 655, 656, 657, 658, 0,
	592, 0, 584, 585, 586, 659, 587, 660, 0, 588,
	589, 590, 591, 0, 593, 594, 0, 0, 595, 596,
	597, 599, 600, 598, 601, 0, 602, 0, 0, 603,
	604, 605, 661, 662, 663, 264, 607, 606, 608, 664,
	0, 0, 0, 0, 0, 609, 610, 665, 611, 612,
	613, 0, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 614, 0, 0,
	0, 0, 279, 280, 0, 281, 282, 283, 284, 285,
	286, 615, 616, 0, 287, 617, 288, 618, 0, 619,
	289, 290, 291, 292, 293, 294, 0, 0, 0, 295,
	620, 621, 622, 0, 296, 297, 623, 0, 0, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 0, 0, 0, 0, 0, 0, 0, 323, 324,
	325, 2286, 327, 0, 328, 624, 625, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 626, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 627, 628, 359, 0, 267,
	0, 0, 0, 0, 0, 360, 361, 362, 629, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 0, 366,
	367, 630, 631, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 632, 0, 633, 378, 0, 379,
	380, 381, 382, 383, 634, 635, 636, 460, 0, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 0, 0, 393, 637, 638, 0,
	639, 0, 395, 396, 0, 640, 0, 397, 398, 399,
	0, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 641, 0, 411,
	412, 0, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 0, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 0, 447, 0, 269, 0, 457,
	458, 0, 642, 459, 643, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	644, 0, 470, 0, 645, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 648, 489, 649,
	490, 491, 0, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 650, 501, 503, 502, 504, 0, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 0,
	519, 520, 521, 0, 522, 523, 524, 525, 651, 526,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 0, 542, 543, 541, 544, 545, 546, 0,
	547, 548, 531, 532, 549, 550, 0, 551, 552, 553,
	554, 555, 556, 652, 0, 557, 0, 558, 559, 560,
	562, 533, 563, 568, 569, 653, 564, 565, 566, 567,
	654, 571, 572, 0, 573, 574, 0, 570, 561, 0,
	575, 576, 577, 578, 579, 580, 581, 353, 582, 0,
	583, 655, 656, 657, 658, 0, 592, 0, 584, 585,
	586, 659, 587, 660, 0, 588, 589, 590, 591, 0,
	593, 594, 0, 0, 595, 596, 597, 599, 600, 598,
	601, 0, 602, 0, 0, 603, 604, 605, 661, 662,
	663, 264, 607, 606, 608, 664, 0, 0, 0, 0,
	0, 609, 610, 665, 611, 612, 613, 0, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 614, 0, 0, 0, 0, 279, 280,
	0, 281, 282, 283, 284, 285, 286, 615, 616, 0,
	287, 617, 288, 618, 0, 619, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 295, 620, 621, 622, 0,
	296, 297, 623, 0, 0, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 322, 0, 0, 0,
	0, 0, 0, 0, 323, 324, 325, 2284, 327, 0,
	328, 624, 625, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	626, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 627, 628, 359, 0, 267, 0, 0, 0, 0,
	0, 360, 361, 362, 629, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 0, 366, 367, 630, 631, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	632, 0, 633, 378, 0, 379, 380, 381, 382, 383,
	634, 635, 636, 460, 0, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	0, 0, 393, 637, 638, 0, 639, 0, 395, 396,
	0, 640, 0, 397, 398, 399, 0, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 641, 0, 411, 412, 0, 0, 413,
	0, 0, 0, 414, 415, 418, 0, 0, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 0, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	0, 447, 0, 269, 0, 457, 458, 0, 642, 459,
	643, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 644, 0, 470, 0,
	645, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 482, 646, 483, 484, 485, 647,
	486, 487, 488, 648, 489, 649, 490, 491, 0, 492,
	493, 0, 494, 495, 496, 497, 498, 499, 500, 650,
	501, 503, 502, 504, 0, 505, 0, 506, 507, 508,
	0, 0, 0, 0, 509, 0, 511, 512, 513, 514,
	510, 515, 516, 517, 518, 0, 519, 520, 521, 0,
	522, 523, 524, 525, 651, 526, 0, 527, 528, 534,
	535, 529, 530, 536, 537, 538, 539, 540, 0, 542,
	543, 541, 544, 545, 546, 0, 547, 548, 531, 532,
	549, 550, 0, 551, 552, 553, 554, 555, 556, 652,
	0, 557, 0, 558, 559, 560, 562, 533, 563, 568,
	569, 653, 564, 565, 566, 567, 654, 571, 572, 0,
	573, 574, 0, 570, 561, 0, 575, 576, 577, 578,
	579, 580, 581, 353, 582, 0, 583, 655, 656, 657,
	658, 0, 592, 0, 584, 585, 586, 659, 587, 660,
	0, 588, 589, 590, 591, 0, 593, 594, 0, 0,
	595, 596, 597, 599, 600, 598, 601, 0, 602, 0,
	0, 603, 604, 605, 661, 662, 663, 264, 607, 606,
	608, 664, 0, 0, 0, 0, 0, 609, 610, 665,
	611, 612, 613, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 614,
	0, 0, 0, 0, 279, 280, 0, 281, 282, 283,
	284, 285, 286, 615, 616, 0, 287, 617, 288, 618,
	0, 619, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 620, 621, 622, 0, 296, 297, 623, 0,
	0, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 2282, 327, 0, 328, 624, 625, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 626, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 627, 628, 359,
	0, 267, 0, 0, 0, 0, 0, 360, 361, 362,
	629, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	0, 366, 367, 630, 631, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 632, 0, 633, 378,
	0, 379, 380, 381, 382, 383, 634, 635, 636, 460,
	0, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 268, 390, 391, 392, 394, 0, 0, 393, 637,
	638, 0, 639, 0, 395, 396, 0, 640, 0, 397,
	398, 399, 0, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 641,
	0, 411, 412, 0, 0, 413, 0, 0, 0, 414,
	415, 418, 0, 0, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 0, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 0, 447, 0, 269,
	0, 457, 458, 0, 642, 459, 643, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 644, 0, 470, 0, 645, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	482, 646, 483, 484, 485, 647, 486, 487, 488, 648,
	489, 649, 490, 491, 0, 492, 493, 0, 494, 495,
	496, 497, 498, 499, 500, 650, 501, 503, 502, 504,
	0, 505, 0, 506, 507, 508, 0, 0, 0, 0,
	509, 0, 511, 512, 513, 514, 510, 515, 516, 517,
	518, 0, 519, 520, 521, 0, 522, 523, 524, 525,
	651, 526, 0, 527, 528, 534, 535, 529, 530, 536,
	537, 538, 539, 540, 0, 542, 543, 541, 544, 545,
	546, 0, 547, 548, 531, 532, 549, 550, 0, 551,
	552, 553, 554, 555, 556, 652, 0, 557, 0, 558,
	559, 560, 562, 533, 563, 568, 569, 653, 564, 565,
	566, 567, 654, 571, 572, 0, 573, 574, 0, 570,
	561, 0, 575, 576, 577, 578, 579, 580, 581, 353,
	582, 0, 583, 655, 656, 657, 658, 0, 592, 0,
	584, 585, 586, 659, 587, 660, 0, 588, 589, 590,
	591, 0, 593, 594, 0, 0, 595, 596, 597, 599,
	600, 598, 601, 0, 602, 0, 0, 603, 604, 605,
	661, 662, 663, 264, 607, 606, 608, 664, 0, 0,
	0, 0, 0, 609, 610, 665, 611, 612, 613, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 614, 0, 0, 0, 0,
	279, 280, 0, 281, 282, 283, 284, 285, 286, 615,
	616, 0, 287, 617, 288, 618, 0, 619, 289, 290,
	291, 292, 293, 294, 0, 0, 0, 295, 620, 621,
	622, 0, 296, 297, 623, 0, 0, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 0, 323, 324, 325, 326,
	327, 0, 328, 624, 625, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 626, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 627, 628, 359, 0, 267, 0, 0,
	0, 0, 0, 360, 361, 362, 629, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 0, 366, 367, 630,
	631, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 632, 0, 633, 378, 0, 379, 380, 381,
	382, 383, 2203, 635, 636, 460, 0, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 0, 0, 393, 637, 638, 0, 639, 0,
	395, 396, 0, 640, 0, 397, 398, 399, 0, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 641, 0, 411, 412, 0,
	0, 413, 0, 0, 0, 414, 415, 418, 0, 0,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 0,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 0, 447, 0, 269, 0, 457, 458, 0,
	642, 459, 643, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 644, 0,
	470, 0, 645, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 648, 489, 649, 490, 491,
	0, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 650, 501, 503, 502, 504, 0, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 0, 519, 520,
	521, 0, 522, 523, 524, 525, 651, 526, 0, 527,
	528, 534, 535, 529, 530, 536, 537, 538, 539, 540,
	0, 542, 543, 541, 544, 545, 546, 0, 547, 548,
	531, 532, 549, 550, 0, 551, 552, 553, 554, 555,
	556, 652, 0, 557, 0, 558, 559, 560, 562, 533,
	563, 568, 569, 653, 564, 565, 566, 567, 654, 571,
	572, 0, 573, 574, 0, 570, 561, 0, 575, 576,
	577, 578, 579, 580, 581, 353, 582, 0, 583, 655,
	656, 657, 658, 0, 592, 0, 584, 585, 586, 659,
	587, 660, 0, 588, 589, 590, 591, 0, 593, 594,
	0, 0, 595, 596, 597, 599, 600, 598, 601, 0,
	602, 0, 0, 603, 604, 605, 661, 662, 663, 264,
	607, 606, 608, 664, 0, 0, 0, 0, 0, 609,
	610, 665, 611, 612, 613, 0, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 614, 0, 0, 0, 0, 279, 280, 0, 281,
	282, 283, 284, 285, 286, 615, 616, 0, 287, 617,
	288, 618, 0, 619, 289, 290, 291, 292, 293, 294,
	0, 0, 0, 295, 620, 621, 622, 0, 296, 297,
	623, 0, 0, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 322, 0, 0, 0, 0, 0,
	0, 0, 323, 324, 325, 326, 327, 0, 328, 624,
	625, 0, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 339, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 626, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 627,
	628, 359, 0, 267, 0, 0, 0, 0, 0, 360,
	361, 362, 629, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 0, 366, 367, 630, 631, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 632, 0,
	633, 378, 0, 379, 380, 381, 382, 383, 2012, 635,
	636, 460, 0, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 268, 390, 391, 392, 394, 0, 0,
	393, 637, 638, 0, 639, 0, 395, 396, 0, 640,
	0, 397, 398, 399, 0, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 641, 0, 411, 412, 0, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 0, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 0, 447,
	0, 269, 0, 457, 458, 0, 642, 459, 643, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 644, 0, 470, 0, 645, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 482, 646, 483, 484, 485, 647, 486, 487,
	488, 648, 489, 649, 490, 491, 0, 492, 493, 0,
	494, 495, 496, 497, 498, 499, 500, 650, 501, 503,
	502, 504, 0, 505, 0, 506, 507, 508, 0, 0,
	0, 0, 509, 0, 511, 512, 513, 514, 510, 515,
	516, 517, 518, 0, 519, 520, 521, 0, 522, 523,
	524, 525, 651, 526, 0, 527, 528, 534, 535, 529,
	530, 536, 537, 538, 539, 540, 0, 542, 543, 541,
	544, 545, 546, 0, 547, 548, 531, 532, 549, 550,
	0, 551, 552, 553, 554, 555, 556, 652, 0, 557,
	0, 558, 559, 560, 562, 533, 563, 568, 569, 653,
	564, 565, 566, 567, 654, 571, 572, 0, 573, 574,
	0, 570, 561, 0, 575, 576, 577, 578, 579, 580,
	581, 353, 582, 0, 583, 655, 656, 657, 658, 0,
	592, 0, 584, 585, 586, 659, 587, 660, 0, 588,
	589, 590, 591, 0, 593, 594, 0, 0, 595, 596,
	597, 599, 600, 598, 601, 0, 602, 0, 0, 603,
	604, 605, 661, 662, 663, 264, 607, 606, 608, 664,
	0, 0, 0, 0, 0, 609, 610, 665, 611, 612,
	613, 0, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 614, 0, 0,
	0, 0, 279, 280, 0, 281, 282, 283, 284, 285,
	286, 615, 616, 0, 287, 617, 288, 618, 0, 619,
	289, 290, 291, 292, 293, 294, 0, 0, 0, 295,
	620, 621, 622, 0, 296, 297, 623, 0, 0, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 0, 0, 0, 0, 0, 0, 0, 323, 324,
	325, 326, 327, 0, 328, 624, 625, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 626, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 627, 628, 359, 0, 267,
	0, 0, 0, 0, 0, 360, 361, 362, 629, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 0, 366,
	367, 630, 631, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 632, 0, 633, 378, 0, 379,
	380, 381, 382, 383, 2006, 635, 636, 460, 0, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 0, 0, 393, 637, 638, 0,
	639, 0, 395, 396, 0, 640, 0, 397, 398, 399,
	0, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 641, 0, 411,
	412, 0, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 0, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 0, 447, 0, 269, 0, 457,
	458, 0, 642, 459, 643, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	644, 0, 470, 0, 645, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 648, 489, 649,
	490, 491, 0, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 650, 501, 503, 502, 504, 0, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 0,
	519, 520, 521, 0, 522, 523, 524, 525, 651, 526,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 0, 542, 543, 541, 544, 545, 546, 0,
	547, 548, 531, 532, 549, 550, 0, 551, 552, 553,
	554, 555, 556, 652, 0, 557, 0, 558, 559, 560,
	562, 533, 563, 568, 569, 653, 564, 565, 566, 567,
	654, 571, 572, 0, 573, 574, 0, 570, 561, 0,
	575, 576, 577, 578, 579, 580, 581, 353, 582, 0,
	583, 655, 656, 657, 658, 0, 592, 0, 584, 585,
	586, 659, 587, 660, 0, 588, 589, 590, 591, 0,
	593, 594, 0, 0, 595, 596, 597, 599, 600, 598,
	601, 0, 602, 0, 0, 603, 604, 605, 661, 662,
	663, 0, 607, 606, 608, 664, 865, 0, 264, 0,
	0, 609, 610, 665, 611, 612, 613, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	614, 0, 0, 0, 0, 279, 280, 0, 281, 282,
	283, 284, 285, 286, 615, 616, 0, 287, 617, 288,
	618, 0, 619, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 620, 621, 622, 0, 296, 297, 623,
	0, 0, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 326, 327, 0, 328, 624, 625,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 626, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 627, 628,
	359, 0, 0, 0, 0, 0, 0, 0, 360, 361,
	362, 629, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 0, 366, 367, 630, 631, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 632, 0, 633,
	378, 0, 379, 380, 381, 382, 383, 634, 635, 636,
	460, 0, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 0, 390, 391, 392, 394, 0, 0, 393,
	637, 638, 0, 639, 864, 395, 396, 0, 640, 0,
	397, 398, 399, 0, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	641, 0, 411, 412, 0, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 0, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 0, 447, 0,
	0, 0, 457, 458, 0, 642, 459, 643, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 644, 0, 470, 0, 645, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 482, 646, 483, 484, 485, 647, 486, 487, 488,
	648, 489, 649, 490, 491, 0, 492, 493, 0, 494,
	495, 496, 497, 498, 499, 500, 650, 501, 503, 502,
	504, 0, 505, 0, 506, 507, 508, 0, 0, 0,
	0, 509, 0, 511, 512, 513, 514, 510, 515, 516,
	517, 518, 0, 519, 520, 521, 0, 522, 523, 524,
	525, 651, 526, 0, 527, 528, 534, 535, 529, 530,
	536, 537, 538, 539, 540, 0, 542, 543, 541, 544,
	545, 546, 0, 547, 548, 531, 532, 549, 550, 0,
	551, 552, 553, 554, 555, 556, 652, 0, 557, 0,
	558, 559, 560, 562, 533, 563, 568, 569, 653, 564,
	565, 566, 567, 654, 571, 572, 0, 573, 574, 0,
	570, 561, 863, 575, 576, 577, 578, 579, 580, 581,
	353, 582, 0, 583, 655, 656, 657, 658, 0, 592,
	0, 584, 585, 586, 659, 587, 660, 0, 588, 589,
	590, 591, 0, 593, 594, 0, 0, 595, 596, 597,
	599, 600, 598, 601, 0, 602, 0, 0, 603, 604,
	605, 661, 662, 663, 264, 607, 606, 608, 664, 0,
	0, 0, 0, 0, 609, 610, 665, 611, 612, 613,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 614, 0, 0, 0,
	0, 279, 280, 0, 281, 282, 283, 284, 285, 286,
	615, 616, 0, 287, 617, 288, 618, 0, 619, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 620,
	621, 622, 0, 296, 297, 623, 0, 0, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 0, 323, 324, 325,
	326, 327, 0, 328, 624, 625, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 626, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 627, 628, 359, 0, 2942, 0,
	0, 0, 0, 0, 360, 361, 362, 629, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 0, 366, 367,
	630, 631, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 632, 0, 633, 378, 0, 379, 380,
	381, 382, 383, 634, 635, 636, 460, 0, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 0, 390,
	391, 392, 394, 0, 0, 393, 637, 638, 0, 639,
	0, 395, 396, 0, 640, 0, 397, 398, 399, 0,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 641, 0, 411, 412,
	0, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	0, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 0, 447, 0, 0, 0, 457, 458,
	0, 642, 459, 643, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 644,
	0, 470, 0, 645, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 482, 646, 483,
	484, 485, 647, 486, 487, 488, 648, 489, 649, 490,
	491, 4025, 492, 493, 0, 494, 495, 496, 497, 498,
	499, 500, 650, 501, 503, 502, 504, 0, 505, 0,
	506, 507, 508, 0, 0, 0, 0, 509, 0, 511,
	512, 513, 514, 510, 515, 516, 517, 518, 0, 519,
	520, 521, 0, 522, 523, 524, 525, 651, 526, 0,
	527, 528, 534, 535, 529, 530, 536, 537, 538, 539,
	540, 0, 542, 543, 541, 544, 545, 546, 0, 547,
	548, 531, 532, 549, 550, 0, 551, 552, 553, 554,
	555, 556, 652, 0, 557, 0, 558, 559, 560, 562,
	533, 563, 568, 569, 653, 564, 565, 566, 567, 654,
	571, 572, 0, 573, 574, 0, 570, 561, 0, 575,
	576, 577, 578, 579, 580, 581, 353, 582, 0, 583,
	655, 656, 657, 658, 0, 592, 0, 584, 585, 586,
	659, 587, 660, 0, 588, 589, 590, 591, 0, 593,
	594, 0, 0, 595, 596, 597, 599, 600, 598, 601,
	0, 602, 0, 0, 603, 604, 605, 661, 662, 663,
	0, 607, 606, 608, 664, 754, 0, 264, 0, 0,
	609, 610, 665, 611, 612, 613, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 614,
	0, 0, 0, 0, 279, 280, 1314, 281, 282, 283,
	284, 285, 286, 615, 616, 0, 287, 617, 288, 618,
	0, 619, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 620, 621, 1312, 0, 296, 297, 623, 0,
	0, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 0, 328, 624, 625, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 626, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 627, 628, 359,
	0, 0, 0, 0, 0, 0, 0, 360, 361, 362,
	629, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	0, 366, 367, 630, 631, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 632, 0, 633, 378,
	0, 379, 380, 381, 382, 383, 634, 635, 636, 460,
	0, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 0, 390, 391, 392, 394, 0, 0, 393, 637,
	638, 0, 639, 0, 395, 396, 0, 640, 0, 397,
	398, 399, 0, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 641,
	0, 411, 412, 0, 0, 413, 0, 0, 0, 414,
	415, 418, 0, 0, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 755, 0, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 0, 447, 0, 0,
	0, 457, 458, 0, 642, 459, 643, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 644, 0, 470, 0, 645, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	482, 646, 483, 484, 485, 647, 486, 487, 488, 648,
	489, 649, 490, 491, 0, 492, 493, 0, 494, 495,
	496, 497, 498, 499, 500, 650, 501, 503, 502, 504,
	0, 505, 0, 506, 507, 508, 0, 0, 0, 0,
	509, 0, 511, 512, 513, 514, 510, 515, 516, 517,
	518, 0, 519, 520, 521, 0, 522, 523, 524, 525,
	651, 526, 0, 527, 528, 534, 535, 529, 530, 751,
	537, 538, 539, 540, 0, 542, 543, 541, 544, 1315,
	546, 0, 547, 548, 531, 532, 549, 550, 0, 551,
	552, 553, 554, 555, 556, 652, 0, 557, 0, 558,
	559, 560, 562, 533, 563, 568, 569, 653, 564, 565,
	566, 567, 654, 571, 572, 0, 573, 574, 0, 570,
	561, 0, 575, 576, 577, 578, 579, 580, 581, 353,
	582, 0, 583, 750, 656, 657, 658, 0, 592, 0,
	584, 585, 586, 659, 587, 660, 0, 588, 589, 590,
	591, 0, 593, 594, 0, 0, 595, 596, 597, 599,
	600, 598, 601, 0, 602, 0, 0, 603, 604, 605,
	661, 662, 663, 0, 607, 606, 608, 664, 754, 0,
	264, 0, 0, 609, 610, 665, 611, 612, 613, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 614, 0, 0, 0, 0, 279, 280, 1314,
	281, 282, 283, 284, 285, 286, 615, 616, 0, 287,
	617, 288, 618, 0, 619, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 620, 621, 1312, 0, 296,
	297, 623, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 326, 327, 0, 328,
	624, 625, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 626,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	627, 628, 359, 0, 0, 0, 0, 0, 0, 0,
	360, 361, 362, 629, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 0, 366, 367, 630, 631, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 632,
	0, 633, 378, 0, 379, 380, 381, 382, 383, 634,
	635, 636, 460, 0, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 0, 390, 391, 392, 394, 0,
	0, 393, 637, 638, 0, 639, 0, 395, 396, 0,
	640, 0, 397, 398, 399, 0, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 641, 0, 411, 412, 0, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 755, 0, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 0,
	447, 0, 0, 0, 457, 458, 0, 642, 459, 643,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 644, 0, 470, 0, 645,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 482, 646, 483, 484, 485, 647, 486,
	487, 488, 648, 489, 649, 490, 491, 0, 492, 493,
	0, 494, 495, 496, 497, 498, 499, 500, 650, 501,
	503, 502, 504, 0, 505, 0, 506, 507, 508, 0,
	0, 0, 0, 509, 0, 511, 512, 513, 514, 510,
	515, 516, 517, 518, 0, 519, 520, 521, 0, 522,
	523, 524, 525, 651, 526, 0, 527, 528, 534, 535,
	529, 530, 751, 537, 538, 539, 540, 0, 542, 543,
	541, 544, 1315, 546, 0, 547, 548, 531, 532, 549,
	550, 0, 551, 552, 553, 554, 555, 556, 652, 0,
	557, 0, 558, 559, 560, 562, 533, 563, 568, 569,
	653, 564, 565, 566, 567, 654, 571, 572, 0, 573,
	574, 0, 570, 561, 0, 575, 576, 577, 578, 579,
	580, 581, 353, 582, 0, 583, 750, 656, 657, 658,
	0, 592, 0, 584, 1313, 586, 659, 587, 660, 0,
	588, 589, 590, 591, 0, 593, 594, 0, 0, 595,
	596, 597, 599, 600, 598, 601, 0, 602, 0, 0,
	603, 604, 605, 661, 662, 663, 0, 607, 606, 608,
	664, 676, 0, 264, 0, 0, 609, 610, 665, 611,
	612, 613, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 675, 277, 278,
	0, 0, 0, 0, 0, 614, 0, 0, 0, 0,
	279, 280, 0, 281, 282, 283, 284, 285, 286, 615,
	616, 0, 287, 617, 288, 618, 0, 619, 289, 290,
	291, 292, 293, 294, 0, 0, 0, 295, 620, 621,
	622, 0, 296, 297, 623, 0, 0, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 0, 323, 324, 325, 326,
	327, 0, 328, 624, 625, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 626, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 627, 628, 359, 0, 0, 0, 0,
	0, 0, 0, 360, 361, 362, 629, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 0, 366, 367, 630,
	631, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 632, 0, 633, 378, 0, 379, 380, 381,
	382, 383, 634, 635, 636, 460, 0, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 0, 390, 391,
	392, 394, 0, 0, 393, 637, 638, 0, 639, 0,
	395, 396, 0, 640, 0, 397, 398, 399, 0, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 641, 0, 411, 412, 0,
	0, 413, 0, 0, 0, 414, 415, 418, 0, 0,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 0,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 0, 447, 0, 0, 0, 457, 458, 0,
	642, 459, 643, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 644, 0,
	470, 0, 645, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 648, 489, 649, 674, 491,
	0, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 650, 501, 503, 502, 504, 0, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 0, 519, 520,
	521, 0, 522, 523, 524, 525, 651, 526, 0, 527,
	528, 534, 535, 529, 530, 536, 537, 538, 539, 540,
	0, 542, 543, 541, 544, 545, 546, 0, 547, 548,
	531, 532, 549, 550, 0, 551, 552, 553, 554, 555,
	556, 652, 0, 557, 0, 558, 559, 560, 562, 533,
	563, 568, 569, 653, 564, 565, 566, 567, 654, 571,
	572, 0, 573, 574, 0, 570, 561, 0, 575, 576,
	577, 578, 579, 580, 581, 353, 582, 0, 583, 655,
	656, 657, 658, 0, 592, 0, 584, 585, 586, 659,
	587, 660, 0, 588, 589, 590, 591, 0, 593, 594,
	0, 0, 595, 596, 597, 599, 600, 598, 601, 0,
	602, 0, 0, 603, 604, 605, 661, 662, 663, 0,
	607, 606, 608, 664, 264, 2929, 0, 0, 0, 609,
	610, 665, 611, 612, 613, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 614, 0, 0, 0,
	0, 279, 280, 0, 281, 282, 283, 284, 285, 286,
	615, 616, 0, 287, 617, 288, 618, 0, 619, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 620,
	621, 622, 0, 296, 297, 623, 0, 0, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 0, 323, 324, 325,
	326, 327, 0, 328, 624, 625, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 626, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 627, 628, 359, 0, 0, 0,
	0, 0, 0, 0, 360, 361, 362, 629, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 0, 366, 367,
	630, 631, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 632, 0, 633, 378, 0, 379, 380,
	381, 382, 383, 634, 635, 636, 460, 0, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 0, 390,
	391, 392, 394, 0, 0, 393, 637, 638, 0, 639,
	0, 395, 396, 0, 640, 0, 397, 398, 399, 0,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 641, 0, 411, 412,
	0, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	0, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 0, 447, 0, 0, 0, 457, 458,
	0, 642, 459, 643, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 644,
	0, 470, 0, 645, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 482, 646, 483,
	484, 485, 647, 486, 487, 488, 648, 489, 649, 490,
	491, 0, 492, 493, 0, 494, 495, 496, 497, 498,
	499, 500, 650, 501, 503, 502, 504, 0, 505, 0,
	506, 507, 508, 0, 0, 0, 0, 509, 0, 511,
	512, 513, 514, 510, 515, 516, 517, 518, 0, 519,
	520, 521, 0, 522, 523, 524, 525, 651, 526, 0,
	527, 528, 534, 535, 529, 530, 536, 537, 538, 539,
	540, 0, 542, 543, 541, 544, 545, 546, 0, 547,
	548, 531, 532, 549, 550, 0, 551, 552, 553, 554,
	555, 556, 652, 0, 557, 0, 558, 559, 560, 562,
	533, 563, 568, 569, 653, 564, 565, 566, 567, 654,
	571, 572, 0, 573, 574, 0, 570, 561, 0, 575,
	576, 577, 578, 579, 580, 581, 353, 582, 0, 583,
	655, 656, 657, 658, 0, 592, 0, 584, 585, 586,
	659, 587, 660, 0, 588, 589, 590, 591, 0, 593,
	594, 0, 0, 595, 596, 597, 599, 600, 598, 601,
	0, 602, 0, 0, 603, 604, 605, 661, 662, 663,
	0, 607, 606, 608, 664, 264, 4035, 0, 0, 0,
	609, 610, 665, 611, 612, 613, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 614, 0, 0,
	0, 0, 279, 280, 0, 281, 282, 283, 284, 285,
	286, 615, 616, 0, 287, 617, 288, 618, 0, 619,
	289, 290, 291, 292, 293, 294, 0, 0, 0, 295,
	620, 621, 622, 0, 296, 297, 623, 0, 0, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 0, 0, 0, 0, 0, 0, 0, 323, 324,
	325, 326, 327, 0, 328, 624, 625, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 626, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 627, 628, 359, 0, 0,
	0, 0, 0, 0, 0, 360, 361, 362, 629, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 0, 366,
	367, 630, 631, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 632, 0, 633, 378, 0, 379,
	380, 381, 382, 383, 634, 635, 636, 460, 0, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 0,
	390, 391, 392, 394, 0, 0, 393, 637, 638, 0,
	639, 0, 395, 396, 0, 640, 0, 397, 398, 399,
	0, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 641, 0, 411,
	412, 0, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 0, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 0, 447, 0, 0, 0, 457,
	458, 0, 642, 459, 643, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	644, 0, 470, 0, 645, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 648, 489, 649,
	490, 491, 0, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 650, 501, 503, 502, 504, 0, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 0,
	519, 520, 521, 0, 522, 523, 524, 525, 651, 526,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 0, 542, 543, 541, 544, 545, 546, 0,
	547, 548, 531, 532, 549, 550, 0, 551, 552, 553,
	554, 555, 556, 652, 0, 557, 0, 558, 559, 560,
	562, 533, 563, 568, 569, 653, 564, 565, 566, 567,
	654, 571, 572, 0, 573, 574, 0, 570, 561, 0,
	575, 576, 577, 578, 579, 580, 581, 353, 582, 0,
	583, 655, 656, 657, 658, 0, 592, 0, 584, 585,
	586, 659, 587, 660, 0, 588, 589, 590, 591, 0,
	593, 594, 0, 0, 595, 596, 597, 599, 600, 598,
	601, 0, 602, 0, 0, 603, 604, 605, 661, 662,
	663, 264, 607, 606, 608, 664, 0, 0, 0, 0,
	0, 609, 610, 665, 611, 612, 613, 0, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 614, 0, 0, 0, 0, 279, 280,
	0, 281, 282, 283, 284, 285, 286, 615, 616, 0,
	287, 617, 288, 618, 0, 619, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 295, 620, 621, 622, 0,
	296, 297, 623, 0, 0, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 322, 0, 0, 0,
	0, 0, 0, 0, 323, 324, 325, 326, 327, 0,
	328, 624, 625, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	626, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 627, 628, 359, 0, 0, 0, 0, 0, 0,
	0, 360, 361, 362, 629, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 0, 366, 367, 630, 631, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	632, 0, 633, 378, 0, 379, 380, 381, 382, 383,
	634, 635, 636, 460, 0, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 0, 390, 391, 392, 394,
	0, 0, 393, 637, 638, 0, 639, 0, 395, 396,
	0, 640, 0, 397, 398, 399, 0, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 641, 0, 411, 412, 0, 0, 413,
	0, 0, 0, 414, 415, 418, 0, 0, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 0, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	0, 447, 0, 0, 0, 457, 458, 0, 642, 459,
	643, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 644, 0, 470, 0,
	645, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 482, 646, 483, 484, 485, 647,
	486, 487, 488, 648, 489, 649, 490, 491, 4294, 492,
	493, 0, 494, 495, 496, 497, 498, 499, 500, 650,
	501, 503, 502, 504, 0, 505, 0, 506, 507, 508,
	0, 0, 0, 0, 509, 0, 511, 512, 513, 514,
	510, 515, 516, 517, 518, 0, 519, 520, 521, 0,
	522, 523, 524, 525, 651, 526, 0, 527, 528, 534,
	535, 529, 530, 536, 537, 538, 539, 540, 0, 542,
	543, 541, 544, 545, 546, 0, 547, 548, 531, 532,
	549, 550, 0, 551, 552, 553, 554, 555, 556, 652,
	0, 557, 0, 558, 559, 560, 562, 533, 563, 568,
	569, 653, 564, 565, 566, 567, 654, 571, 572, 0,
	573, 574, 0, 570, 561, 0, 575, 576, 577, 578,
	579, 580, 581, 353, 582, 0, 583, 655, 656, 657,
	658, 0, 592, 0, 584, 585, 586, 659, 587, 660,
	0, 588, 589, 590, 591, 0, 593, 594, 0, 0,
	595, 596, 597, 599, 600, 598, 601, 0, 602, 0,
	0, 603, 604, 605, 661, 662, 663, 264, 607, 606,
	608, 664, 0, 0, 0, 0, 0, 609, 610, 665,
	611, 612, 613, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 614,
	0, 0, 0, 0, 279, 280, 0, 281, 282, 283,
	284, 285, 286, 615, 616, 0, 287, 617, 288, 618,
	0, 619, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 620, 621, 622, 0, 296, 297, 623, 0,
	0, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 0, 328, 624, 625, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 626, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 627, 628, 359,
	0, 0, 0, 0, 0, 0, 0, 360, 361, 362,
	629, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	0, 366, 367, 630, 631, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 632, 0, 633, 378,
	0, 379, 380, 381, 382, 383, 634, 635, 636, 460,
	0, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 0, 390, 391, 392, 394, 0, 0, 393, 637,
	638, 0, 639, 0, 395, 396, 0, 640, 0, 397,
	398, 399, 0, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 641,
	0, 411, 412, 0, 0, 413, 0, 0, 0, 414,
	415, 418, 0, 0, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 0, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 0, 447, 0, 0,
	0, 457, 458, 0, 642, 459, 643, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 644, 0, 470, 0, 645, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	482, 646, 483, 484, 485, 647, 486, 487, 488, 648,
	489, 649, 490, 491, 3936, 492, 493, 0, 494, 495,
	496, 497, 498, 499, 500, 650, 501, 503, 502, 504,
	0, 505, 0, 506, 507, 508, 0, 0, 0, 0,
	509, 0, 511, 512, 513, 514, 510, 515, 516, 517,
	518, 0, 519, 520, 521, 0, 522, 523, 524, 525,
	651, 526, 0, 527, 528, 534, 535, 529, 530, 536,
	537, 538, 539, 540, 0, 542, 543, 541, 544, 545,
	546, 0, 547, 548, 531, 532, 549, 550, 0, 551,
	552, 553, 554, 555, 556, 652, 0, 557, 0, 558,
	559, 560, 562, 533, 563, 568, 569, 653, 564, 565,
	566, 567, 654, 571, 572, 0, 573, 574, 0, 570,
	561, 0, 575, 576, 577, 578, 579, 580, 581, 353,
	582, 0, 583, 655, 656, 657, 658, 0, 592, 0,
	584, 585, 586, 659, 587, 660, 0, 588, 589, 590,
	591, 0, 593, 594, 0, 0, 595, 596, 597, 599,
	600, 598, 601, 0, 602, 0, 0, 603, 604, 605,
	661, 662, 663, 264, 607, 606, 608, 664, 0, 0,
	0, 0, 0, 609, 610, 665, 611, 612, 613, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 614, 0, 0, 0, 0,
	279, 280, 0, 281, 282, 283, 284, 285, 286, 615,
	616, 0, 287, 617, 288, 618, 0, 619, 289, 290,
	291, 292, 293, 294, 0, 0, 0, 295, 620, 621,
	622, 0, 296, 297, 623, 0, 0, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 0, 323, 324, 325, 326,
	327, 0, 328, 624, 625, 3715, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 626, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 627, 628, 359, 0, 0, 0, 0,
	0, 0, 0, 360, 361, 362, 629, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 0, 366, 367, 630,
	631, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 632, 0, 633, 378, 0, 379, 380, 381,
	382, 383, 634, 635, 636, 460, 0, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 0, 390, 391,
	392, 394, 0, 0, 393, 637, 638, 0, 639, 0,
	395, 396, 0, 640, 0, 397, 398, 399, 0, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 641, 0, 411, 412, 0,
	0, 413, 0, 0, 0, 414, 415, 418, 0, 0,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 0,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 0, 447, 0, 0, 0, 457, 458, 0,
	642, 459, 643, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 644, 0,
	470, 0, 645, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 648, 489, 649, 490, 491,
	0, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 650, 501, 503, 502, 504, 0, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 0, 519, 520,
	521, 0, 522, 523, 524, 525, 651, 526, 0, 527,
	528, 534, 535, 529, 530, 536, 537, 538, 539, 540,
	0, 542, 543, 541, 544, 545, 546, 0, 547, 548,
	531, 532, 549, 550, 0, 551, 552, 553, 554, 555,
	556, 652, 0, 557, 0, 558, 559, 560, 562, 533,
	563, 568, 569, 653, 564, 565, 566, 567, 654, 571,
	572, 0, 573, 574, 0, 570, 561, 0, 575, 576,
	577, 578, 579, 580, 581, 353, 582, 0, 583, 655,
	656, 657, 658, 0, 592, 0, 584, 585, 586, 659,
	587, 660, 0, 588, 589, 590, 591, 0, 593, 594,
	0, 0, 595, 596, 597, 599, 600, 598, 601, 0,
	602, 0, 0, 603, 604, 605, 661, 662, 663, 264,
	607, 606, 608, 664, 0, 0, 0, 0, 0, 609,
	610, 665, 611, 612, 613, 0, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 614, 0, 2626, 0, 0, 279, 280, 0, 281,
	282, 283, 284, 285, 286, 615, 616, 0, 287, 617,
	288, 618, 0, 619, 289, 290, 291, 292, 293, 294,
	0, 0, 0, 295, 620, 621, 622, 0, 296, 297,
	623, 0, 0, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 322, 0, 0, 0, 0, 0,
	0, 0, 323, 324, 325, 326, 327, 0, 328, 624,
	625, 0, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 339, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 626, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 627,
	628, 359, 0, 0, 0, 0, 0, 0, 0, 360,
	361, 362, 629, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 0, 366, 367, 630, 631, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 632, 0,
	633, 378, 0, 379, 380, 381, 382, 383, 634, 635,
	636, 460, 0, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 0, 390, 391, 392, 394, 0, 0,
	393, 637, 638, 0, 639, 0, 395, 396, 0, 640,
	0, 397, 398, 399, 0, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 641, 0, 411, 412, 0, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 0, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 0, 447,
	0, 0, 0, 457, 458, 0, 642, 459, 643, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 644, 0, 470, 0, 645, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 482, 646, 483, 484, 485, 647, 486, 487,
	488, 648, 489, 649, 490, 491, 0, 492, 493, 0,
	494, 495, 496, 497, 498, 499, 500, 650, 501, 503,
	502, 504, 0, 505, 0, 506, 507, 508, 0, 0,
	0, 0, 509, 0, 511, 512, 513, 514, 510, 515,
	516, 517, 518, 0, 519, 520, 521, 0, 522, 523,
	524, 525, 651, 526, 0, 527, 528, 534, 535, 529,
	530, 536, 537, 538, 539, 540, 0, 542, 543, 541,
	544, 545, 546, 0, 547, 548, 531, 532, 549, 550,
	0, 551, 552, 553, 554, 555, 556, 652, 0, 557,
	0, 558, 559, 560, 562, 533, 563, 568, 569, 653,
	564, 565, 566, 567, 654, 571, 572, 0, 573, 574,
	0, 570, 561, 0, 575, 576, 577, 578, 579, 580,
	581, 353, 582, 0, 583, 655, 656, 657, 658, 0,
	592, 0, 584, 585, 586, 659, 587, 660, 0, 588,
	589, 590, 591, 0, 593, 594, 0, 0, 595, 596,
	597, 599, 600, 598, 601, 0, 602, 0, 0, 603,
	604, 605, 661, 662, 663, 0, 607, 606, 608, 664,
	264, 2929, 0, 0, 0, 609, 610, 665, 611, 612,
	613, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 614, 0, 0, 0, 0, 279, 280, 0,
	281, 282, 283, 284, 285, 286, 615, 616, 0, 287,
	617, 288, 618, 0, 619, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 620, 621, 622, 0, 296,
	297, 623, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 326, 327, 0, 328,
	624, 625, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 626,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	627, 628, 359, 0, 0, 0, 0, 0, 0, 0,
	360, 361, 362, 629, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 0, 366, 367, 630, 631, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 632,
	0, 633, 378, 0, 379, 380, 381, 382, 383, 634,
	635, 636, 460, 0, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 0, 390, 391, 392, 394, 0,
	0, 393, 637, 638, 0, 639, 0, 395, 396, 0,
	640, 0, 397, 398, 399, 0, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 641, 0, 411, 412, 0, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 0, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 0,
	447, 0, 0, 0, 457, 458, 0, 642, 459, 643,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	2926, 0, 0, 468, 469, 644, 0, 470, 0, 645,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 482, 646, 483, 484, 485, 647, 486,
	487, 488, 648, 489, 649, 490, 491, 0, 492, 493,
	0, 494, 495, 496, 497, 498, 499, 500, 650, 501,
	503, 502, 504, 0, 505, 0, 506, 507, 508, 0,
	0, 0, 0, 509, 0, 511, 512, 513, 514, 510,
	515, 516, 517, 518, 0, 519, 520, 521, 0, 522,
	523, 524, 525, 651, 526, 0, 527, 528, 534, 535,
	529, 530, 536, 537, 538, 539, 540, 0, 542, 543,
	541, 544, 545, 546, 0, 547, 548, 531, 532, 549,
	550, 0, 551, 552, 553, 554, 555, 556, 652, 0,
	557, 0, 558, 559, 560, 562, 533, 563, 568, 569,
	653, 564, 565, 566, 567, 654, 571, 572, 0, 573,
	574, 0, 570, 561, 0, 575, 576, 577, 578, 579,
	580, 581, 353, 582, 0, 583, 655, 656, 657, 658,
	0, 592, 0, 584, 585, 586, 659, 587, 660, 0,
	588, 589, 590, 591, 0, 593, 594, 0, 0, 595,
	596, 597, 599, 600, 598, 601, 0, 602, 0, 0,
	603, 604, 605, 661, 662, 663, 264, 607, 606, 608,
	664, 0, 0, 0, 0, 0, 609, 610, 665, 611,
	612, 613, 0, 270, 272, 271, 273, 274, 275, 276,
	2259, 277, 278, 0, 0, 0, 0, 0, 614, 0,
	0, 0, 0, 279, 280, 0, 281, 282, 283, 284,
	285, 286, 615, 616, 0, 287, 617, 288, 618, 0,
	619, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 620, 621, 622, 0, 296, 297, 623, 0, 0,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 326, 327, 0, 328, 624, 625, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 626, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 627, 628, 359, 0,
	0, 0, 0, 0, 0, 0, 360, 361, 362, 629,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 0,
	366, 367, 630, 631, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 632, 0, 633, 378, 0,
	379, 380, 381, 382, 383, 634, 635, 636, 460, 0,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	0, 390, 391, 392, 394, 0, 0, 393, 637, 638,
	0, 639, 0, 395, 396, 0, 640, 0, 397, 398,
	399, 0, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 641, 0,
	411, 412, 0, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 0, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 0, 447, 0, 0, 0,
	457, 458, 0, 642, 459, 643, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 644, 0, 470, 0, 645, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 482,
	646, 483, 484, 485, 647, 486, 487, 488, 648, 489,
	649, 490, 491, 0, 492, 493, 0, 494, 495, 496,
	497, 498, 499, 500, 650, 501, 503, 502, 504, 0,
	505, 0, 506, 507, 508, 0, 0, 0, 0, 509,
	0, 511, 512, 513, 514, 510, 515, 516, 517, 518,
	0, 519, 520, 521, 0, 522, 523, 524, 525, 651,
	526, 0, 527, 528, 534, 535, 529, 530, 536, 537,
	538, 539, 540, 0, 542, 543, 541, 544, 545, 546,
	0, 547, 548, 531, 532, 549, 550, 0, 551, 552,
	553, 554, 555, 556, 652, 0, 557, 0, 558, 559,
	560, 562, 533, 563, 568, 569, 653, 564, 565, 566,
	567, 654, 571, 572, 0, 573, 574, 0, 570, 561,
	0, 575, 576, 577, 578, 579, 580, 581, 353, 582,
	0, 583, 655, 656, 657, 658, 0, 592, 0, 584,
	585, 586, 659, 587, 660, 0, 588, 589, 590, 591,
	0, 593, 594, 0, 0, 595, 596, 597, 599, 600,
	598, 601, 0, 602, 0, 0, 603, 604, 605, 661,
	662, 663, 0, 607, 606, 608, 664, 2247, 0, 264,
	0, 0, 609, 610, 665, 611, 612, 613, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 614, 0, 0, 0, 0, 279, 280, 0, 281,
	282, 283, 284, 285, 286, 615, 616, 0, 287, 617,
	288, 618, 0, 619, 289, 290, 291, 292, 293, 294,
	0, 0, 0, 295, 620, 621, 622, 0, 296, 297,
	623, 0, 0, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 322, 0, 0, 0, 0, 0,
	0, 0, 323, 324, 325, 326, 327, 0, 328, 624,
	625, 0, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 339, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 626, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 627,
	628, 359, 0, 0, 0, 0, 0, 0, 0, 360,
	361, 362, 629, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 0, 366, 367, 630, 631, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 632, 0,
	633, 378, 0, 379, 380, 381, 382, 383, 634, 635,
	636, 460, 0, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 0, 390, 391, 392, 394, 0, 0,
	393, 637, 638, 0, 639, 0, 395, 396, 0, 640,
	0, 397, 398, 399, 0, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 641, 0, 411, 412, 0, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 0, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 0, 447,
	0, 0, 0, 457, 458, 0, 642, 459, 643, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 644, 0, 470, 0, 645, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 482, 646, 483, 484, 485, 647, 486, 487,
	488, 648, 489, 649, 490, 491, 0, 492, 493, 0,
	494, 495, 496, 497, 498, 499, 500, 650, 501, 503,
	502, 504, 0, 505, 0, 506, 507, 508, 0, 0,
	0, 0, 509, 0, 511, 512, 513, 514, 510, 515,
	516, 517, 518, 0, 519, 520, 521, 0, 522, 523,
	524, 525, 651, 526, 0, 527, 528, 534, 535, 529,
	530, 536, 537, 538, 539, 540, 0, 542, 543, 541,
	544, 545, 546, 0, 547, 548, 531, 532, 549, 550,
	0, 551, 552, 553, 554, 555, 556, 652, 0, 557,
	0, 558, 559, 560, 562, 533, 563, 568, 569, 653,
	564, 565, 566, 567, 654, 571, 572, 0, 573, 574,
	0, 570, 561, 0, 575, 576, 577, 578, 579, 580,
	581, 353, 582, 0, 583, 655, 656, 657, 658, 0,
	592, 0, 584, 585, 586, 659, 587, 660, 0, 588,
	589, 590, 591, 0, 593, 594, 0, 0, 595, 596,
	597, 599, 600, 598, 601, 0, 602, 0, 0, 603,
	604, 605, 661, 662, 663, 0, 607, 606, 608, 664,
	754, 0, 264, 0, 0, 609, 610, 665, 611, 612,
	613, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 614, 0, 0, 0, 0, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 615, 616,
	0, 287, 617, 288, 618, 0, 619, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 620, 621, 622,
	0, 296, 744, 623, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 624, 625, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 626, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 627, 628, 359, 0, 0, 0, 0, 0,
	0, 0, 360, 361, 362, 629, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 0, 366, 367, 630, 631,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 632, 0, 633, 378, 0, 379, 380, 381, 382,
	383, 634, 635, 636, 460, 0, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 0, 390, 391, 392,
	394, 0, 0, 393, 637, 638, 0, 639, 0, 395,
	396, 0, 640, 0, 397, 398, 399, 0, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 641, 0, 411, 412, 0, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 755, 0, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 0, 447, 0, 0, 0, 457, 458, 0, 642,
	459, 643, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 644, 0, 470,
	0, 645, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 648, 489, 649, 490, 491, 0,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	650, 501, 503, 502, 504, 0, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 0, 519, 520, 521,
	0, 522, 523, 524, 525, 651, 526, 0, 527, 528,
	534, 535, 529, 530, 751, 537, 538, 539, 540, 0,
	542, 543, 541, 544, 1572, 546, 0, 547, 548, 531,
	532, 549, 550, 0, 551, 552, 553, 554, 555, 556,
	652, 0, 557, 0, 558, 559, 560, 562, 533, 563,
	568, 569, 653, 564, 565, 566, 567, 654, 571, 572,
	0, 573, 574, 0, 570, 561, 0, 575, 576, 577,
	578, 579, 580, 581, 353, 582, 0, 583, 750, 656,
	657, 658, 0, 592, 0, 584, 585, 586, 659, 587,
	660, 0, 588, 589, 590, 591, 0, 593, 594, 0,
	0, 595, 596, 597, 599, 600, 598, 601, 0, 602,
	0, 0, 603, 604, 605, 661, 662, 663, 0, 607,
	606, 608, 664, 1545, 0, 264, 0, 0, 609, 610,
	665, 611, 612, 613, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 614, 0, 0,
	0, 0, 279, 280, 0, 281, 282, 283, 284, 285,
	286, 615, 616, 0, 287, 617, 288, 618, 0, 619,
	289, 290, 291, 292, 293, 294, 0, 0, 0, 295,
	620, 621, 622, 0, 296, 297, 623, 0, 0, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 0, 0, 0, 0, 0, 0, 0, 323, 324,
	325, 326, 327, 0, 328, 624, 625, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 626, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 627, 628, 359, 0, 0,
	0, 0, 0, 0, 0, 360, 361, 362, 629, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 0, 366,
	367, 630, 631, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 632, 0, 633, 378, 0, 379,
	380, 381, 382, 383, 1544, 635, 636, 460, 0, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 0,
	390, 391, 392, 394, 0, 0, 393, 637, 638, 0,
	639, 0, 395, 396, 0, 640, 0, 397, 398, 399,
	0, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 641, 0, 411,
	412, 0, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 0, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 0, 447, 0, 0, 0, 457,
	458, 0, 642, 459, 643, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	644, 0, 470, 0, 645, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 648, 489, 649,
	490, 491, 0, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 650, 501, 503, 502, 504, 0, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 0,
	519, 520, 521, 0, 522, 523, 524, 525, 651, 526,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 0, 542, 543, 541, 544, 545, 546, 0,
	547, 548, 531, 532, 549, 550, 0, 551, 552, 553,
	554, 555, 556, 652, 0, 557, 0, 558, 559, 560,
	562, 533, 563, 568, 569, 653, 564, 565, 566, 567,
	654, 571, 572, 0, 573, 574, 0, 570, 561, 0,
	575, 576, 577, 578, 579, 580, 581, 353, 582, 0,
	583, 655, 656, 657, 658, 0, 592, 0, 584, 585,
	586, 659, 587, 660, 0, 588, 589, 590, 591, 0,
	593, 594, 0, 0, 595, 596, 597, 599, 600, 598,
	601, 0, 602, 0, 0, 603, 604, 605, 661, 662,
	663, 0, 607, 606, 608, 664, 1529, 0, 264, 0,
	0, 609, 610, 665, 611, 612, 613, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	614, 0, 0, 0, 0, 279, 280, 0, 281, 282,
	283, 284, 285, 286, 615, 616, 0, 287, 617, 288,
	618, 0, 619, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 620, 621, 622, 0, 296, 297, 623,
	0, 0, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 326, 327, 0, 328, 624, 625,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 626, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 627, 628,
	359, 0, 0, 0, 0, 0, 0, 0, 360, 361,
	362, 629, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 0, 366, 367, 630, 631, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 632, 0, 633,
	378, 0, 379, 380, 381, 382, 383, 1527, 635, 636,
	460, 0, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 0, 390, 391, 392, 394, 0, 0, 393,
	637, 638, 0, 639, 0, 395, 396, 0, 640, 0,
	397, 398, 399, 0, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	641, 0, 411, 412, 0, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 0, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 0, 447, 0,
	0, 0, 457, 458, 0, 642, 459, 643, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 644, 0, 470, 0, 645, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 482, 646, 483, 484, 485, 647, 486, 487, 488,
	648, 489, 649, 490, 491, 0, 492, 493, 0, 494,
	495, 496, 497, 498, 499, 500, 650, 501, 503, 502,
	504, 0, 505, 0, 506, 507, 508, 0, 0, 0,
	0, 509, 0, 511, 512, 513, 514, 510, 515, 516,
	517, 518, 0, 519, 520, 521, 0, 522, 523, 524,
	525, 651, 526, 0, 527, 528, 534, 535, 529, 530,
	536, 537, 538, 539, 540, 0, 542, 543, 541, 544,
	545, 546, 0, 547, 548, 531, 532, 549, 550, 0,
	551, 552, 553, 554, 555, 556, 652, 0, 557, 0,
	558, 559, 560, 562, 533, 563, 568, 569, 653, 564,
	565, 566, 567, 654, 571, 572, 0, 573, 574, 0,
	570, 561, 0, 575, 576, 577, 578, 579, 580, 581,
	353, 582, 0, 583, 655, 656, 657, 658, 0, 592,
	0, 584, 585, 586, 659, 587, 660, 0, 588, 589,
	590, 591, 0, 593, 594, 0, 0, 595, 596, 597,
	599, 600, 598, 601, 0, 602, 0, 0, 603, 604,
	605, 661, 662, 663, 0, 607, 606, 608, 664, 1522,
	0, 264, 0, 0, 609, 610, 665, 611, 612, 613,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 614, 0, 0, 0, 0, 279, 280,
	0, 281, 282, 283, 284, 285, 286, 615, 616, 0,
	287, 617, 288, 618, 0, 619, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 295, 620, 621, 622, 0,
	296, 297, 623, 0, 0, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 322, 0, 0, 0,
	0, 0, 0, 0, 323, 324, 325, 326, 327, 0,
	328, 624, 625, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	626, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 627, 628, 359, 0, 0, 0, 0, 0, 0,
	0, 360, 361, 362, 629, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 0, 366, 367, 630, 631, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	632, 0, 633, 378, 0, 379, 380, 381, 382, 383,
	634, 635, 636, 460, 0, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 0, 390, 391, 392, 394,
	0, 0, 393, 637, 638, 0, 639, 0, 395, 396,
	0, 640, 0, 397, 398, 399, 0, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 641, 0, 411, 412, 0, 0, 413,
	0, 0, 0, 414, 415, 418, 0, 0, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 0, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	0, 447, 0, 0, 0, 457, 458, 0, 642, 459,
	643, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 644, 0, 470, 0,
	645, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 482, 646, 483, 484, 485, 647,
	486, 487, 488, 648, 489, 649, 490, 491, 0, 492,
	493, 0, 494, 495, 496, 497, 498, 499, 500, 650,
	501, 503, 502, 504, 0, 505, 0, 506, 507, 508,
	0, 0, 0, 0, 509, 0, 511, 512, 513, 514,
	510, 515, 516, 517, 518, 0, 519, 520, 521, 0,
	522, 523, 524, 525, 651, 526, 0, 527, 528, 534,
	535, 529, 530, 536, 537, 538, 539, 540, 0, 542,
	543, 541, 544, 545, 546, 0, 547, 548, 531, 532,
	549, 550, 0, 551, 552, 553, 554, 555, 556, 652,
	0, 557, 0, 558, 559, 560, 562, 533, 563, 568,
	569, 653, 564, 565, 566, 567, 654, 571, 572, 0,
	573, 574, 0, 570, 561, 0, 575, 576, 577, 578,
	579, 580, 581, 353, 582, 0, 583, 655, 656, 657,
	658, 0, 592, 0, 584, 585, 586, 659, 587, 660,
	0, 588, 589, 590, 591, 0, 593, 594, 0, 0,
	595, 596, 597, 599, 600, 598, 601, 0, 602, 0,
	0, 603, 604, 605, 661, 662, 663, 0, 607, 606,
	608, 664, 1499, 0, 264, 0, 0, 609, 610, 665,
	611, 612, 613, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 614, 0, 0, 0,
	0, 279, 280, 0, 281, 282, 283, 284, 285, 286,
	615, 616, 0, 287, 617, 288, 618, 0, 619, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 620,
	621, 622, 0, 296, 297, 623, 0, 0, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 0, 323, 324, 325,
	326, 327, 0, 328, 624, 625, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 626, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 627, 628, 359, 0, 0, 0,
	0, 0, 0, 0, 360, 361, 362, 629, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 0, 366, 367,
	630, 631, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 632, 0, 633, 378, 0, 379, 380,
	381, 382, 383, 1497, 635, 636, 460, 0, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 0, 390,
	391, 392, 394, 0, 0, 393, 637, 638, 0, 639,
	0, 395, 396, 0, 640, 0, 397, 398, 399, 0,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 641, 0, 411, 412,
	0, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	0, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 0, 447, 0, 0, 0, 457, 458,
	0, 642, 459, 643, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 644,
	0, 470, 0, 645, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 482, 646, 483,
	484, 485, 647, 486, 487, 488, 648, 489, 649, 490,
	491, 0, 492, 493, 0, 494, 495, 496, 497, 498,
	499, 500, 650, 501, 503, 502, 504, 0, 505, 0,
	506, 507, 508, 0, 0, 0, 0, 509, 0, 511,
	512, 513, 514, 510, 515, 516, 517, 518, 0, 519,
	520, 521, 0, 522, 523, 524, 525, 651, 526, 0,
	527, 528, 534, 535, 529, 530, 536, 537, 538, 539,
	540, 0, 542, 543, 541, 544, 545, 546, 0, 547,
	548, 531, 532, 549, 550, 0, 551, 552, 553, 554,
	555, 556, 652, 0, 557, 0, 558, 559, 560, 562,
	533, 563, 568, 569, 653, 564, 565, 566, 567, 654,
	571, 572, 0, 573, 574, 0, 570, 561, 0, 575,
	576, 577, 578, 579, 580, 581, 353, 582, 0, 583,
	655, 656, 657, 658, 0, 592, 0, 584, 585, 586,
	659, 587, 660, 0, 588, 589, 590, 591, 0, 593,
	594, 0, 0, 595, 596, 597, 599, 600, 598, 601,
	0, 602, 0, 0, 603, 604, 605, 661, 662, 663,
	0, 607, 606, 608, 664, 1460, 0, 264, 0, 0,
	609, 610, 665, 611, 612, 613, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 614,
	0, 0, 0, 0, 279, 280, 0, 281, 282, 283,
	284, 285, 286, 615, 616, 0, 287, 617, 288, 618,
	0, 619, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 620, 621, 622, 0, 296, 297, 623, 0,
	0, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 0, 328, 624, 625, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 626, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 627, 628, 359,
	0, 0, 0, 0, 0, 0, 0, 360, 361, 362,
	629, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	0, 366, 367, 630, 631, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 632, 0, 633, 378,
	0, 379, 380, 381, 382, 383, 634, 635, 636, 460,
	0, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 0, 390, 391, 392, 394, 0, 0, 393, 637,
	638, 0, 639, 0, 395, 396, 0, 640, 0, 397,
	398, 399, 0, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 641,
	0, 411, 412, 0, 0, 413, 0, 0, 0, 414,
	415, 418, 0, 0, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 0, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 0, 447, 0, 0,
	0, 457, 458, 0, 642, 459, 643, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 644, 0, 470, 0, 645, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	482, 646, 483, 484, 485, 647, 486, 487, 488, 648,
	489, 649, 490, 491, 0, 492, 493, 0, 494, 495,
	496, 497, 498, 499, 500, 650, 501, 503, 502, 504,
	0, 505, 0, 506, 507, 508, 0, 0, 0, 0,
	509, 0, 511, 512, 513, 514, 510, 515, 516, 517,
	518, 0, 519, 520, 521, 0, 522, 523, 524, 525,
	651, 526, 0, 527, 528, 534, 535, 529, 530, 536,
	537, 538, 539, 540, 0, 542, 543, 541, 544, 545,
	546, 0, 547, 548, 531, 532, 549, 550, 0, 551,
	552, 553, 554, 555, 556, 652, 0, 557, 0, 558,
	559, 560, 562, 533, 563, 568, 569, 653, 564, 565,
	566, 567, 654, 571, 572, 0, 573, 574, 0, 570,
	561, 0, 575, 576, 577, 578, 579, 580, 581, 353,
	582, 0, 583, 655, 656, 657, 658, 0, 592, 0,
	584, 585, 586, 659, 587, 660, 0, 588, 589, 590,
	591, 0, 593, 594, 0, 0, 595, 596, 597, 599,
	600, 598, 601, 0, 602, 0, 0, 603, 604, 605,
	661, 662, 663, 0, 607, 606, 608, 664, 1445, 0,
	264, 0, 0, 609, 610, 665, 611, 612, 613, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 614, 0, 0, 0, 0, 279, 280, 0,
	281, 282, 283, 284, 285, 286, 615, 616, 0, 287,
	617, 288, 618, 0, 619, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 620, 621, 622, 0, 296,
	297, 623, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 326, 327, 0, 328,
	624, 625, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 626,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	627, 628, 359, 0, 0, 0, 0, 0, 0, 0,
	360, 361, 362, 629, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 0, 366, 367, 630, 631, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 632,
	0, 633, 378, 0, 379, 380, 381, 382, 383, 634,
	635, 636, 460, 0, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 0, 390, 391, 392, 394, 0,
	0, 393, 637, 638, 0, 639, 0, 395, 396, 0,
	640, 0, 397, 398, 399, 0, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 641, 0, 411, 412, 0, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 0, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 0,
	447, 0, 0, 0, 457, 458, 0, 642, 459, 643,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 644, 0, 470, 0, 645,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 482, 646, 483, 484, 485, 647, 486,
	487, 488, 648, 489, 649, 490, 491, 0, 492, 493,
	0, 494, 495, 496, 497, 498, 499, 500, 650, 501,
	503, 502, 504, 0, 505, 0, 506, 507, 508, 0,
	0, 0, 0, 509, 0, 511, 512, 513, 514, 510,
	515, 516, 517, 518, 0, 519, 520, 521, 0, 522,
	523, 524, 525, 651, 526, 0, 527, 528, 534, 535,
	529, 530, 536, 537, 538, 539, 540, 0, 542, 543,
	541, 544, 545, 546, 0, 547, 548, 531, 532, 549,
	550, 0, 551, 552, 553, 554, 555, 556, 652, 0,
	557, 0, 558, 559, 560, 562, 533, 563, 568, 569,
	653, 564, 565, 566, 567, 654, 571, 572, 0, 573,
	574, 0, 570, 561, 0, 575, 576, 577, 578, 579,
	580, 581, 353, 582, 0, 583, 655, 656, 657, 658,
	0, 592, 0, 584, 585, 586, 659, 587, 660, 0,
	588, 589, 590, 591, 0, 593, 594, 0, 0, 595,
	596, 597, 599, 600, 598, 601, 0, 602, 0, 0,
	603, 604, 605, 661, 662, 663, 0, 607, 606, 608,
	664, 1282, 0, 264, 0, 0, 609, 610, 665, 611,
	612, 613, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 614, 0, 0, 0, 0,
	279, 280, 0, 281, 282, 283, 284, 285, 286, 615,
	616, 0, 287, 617, 288, 618, 0, 619, 289, 290,
	291, 292, 293, 294, 0, 0, 0, 295, 620, 621,
	622, 0, 296, 297, 623, 0, 0, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 0, 323, 324, 325, 326,
	327, 0, 328, 624, 625, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 626, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 627, 628, 359, 0, 0, 0, 0,
	0, 0, 0, 360, 361, 362, 629, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 0, 366, 367, 630,
	631, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 632, 0, 633, 378, 0, 379, 380, 381,
	382, 383, 1281, 635, 636, 460, 0, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 0, 390, 391,
	392, 394, 0, 0, 393, 637, 638, 0, 639, 0,
	395, 396, 0, 640, 0, 397, 398, 399, 0, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 641, 0, 411, 412, 0,
	0, 413, 0, 0, 0, 414, 415, 418, 0, 0,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 0,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 0, 447, 0, 0, 0, 457, 458, 0,
	642, 459, 643, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 644, 0,
	470, 0, 645, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 648, 489, 649, 490, 491,
	0, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 650, 501, 503, 502, 504, 0, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 0, 519, 520,
	521, 0, 522, 523, 524, 525, 651, 526, 0, 527,
	528, 534, 535, 529, 530, 536, 537, 538, 539, 540,
	0, 542, 543, 541, 544, 545, 546, 0, 547, 548,
	531, 532, 549, 550, 0, 551, 552, 553, 554, 555,
	556, 652, 0, 557, 0, 558, 559, 560, 562, 533,
	563, 568, 569, 653, 564, 565, 566, 567, 654, 571,
	572, 0, 573, 574, 0, 570, 561, 0, 575, 576,
	577, 578, 579, 580, 581, 353, 582, 0, 583, 655,
	656, 657, 658, 0, 592, 0, 584, 585, 586, 659,
	587, 660, 0, 588, 589, 590, 591, 0, 593, 594,
	0, 0, 595, 596, 597, 599, 600, 598, 601, 0,
	602, 0, 0, 603, 604, 605, 661, 662, 663, 0,
	607, 606, 608, 664, 1273, 0, 264, 0, 0, 609,
	610, 665, 611, 612, 613, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 614, 0,
	0, 0, 0, 279, 280, 0, 281, 282, 283, 284,
	285, 286, 615, 616, 0, 287, 617, 288, 618, 0,
	619, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 620, 621, 622, 0, 296, 297, 623, 0, 0,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 326, 327, 0, 328, 624, 625, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 626, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 627, 628, 359, 0,
	0, 0, 0, 0, 0, 0, 360, 361, 362, 629,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 0,
	366, 367, 630, 631, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 632, 0, 633, 378, 0,
	379, 380, 381, 382, 383, 1272, 635, 636, 460, 0,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	0, 390, 391, 392, 394, 0, 0, 393, 637, 638,
	0, 639, 0, 395, 396, 0, 640, 0, 397, 398,
	399, 0, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 641, 0,
	411, 412, 0, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 0, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 0, 447, 0, 0, 0,
	457, 458, 0, 642, 459, 643, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 644, 0, 470, 0, 645, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 482,
	646, 483, 484, 485, 647, 486, 487, 488, 648, 489,
	649, 490, 491, 0, 492, 493, 0, 494, 495, 496,
	497, 498, 499, 500, 650, 501, 503, 502, 504, 0,
	505, 0, 506, 507, 508, 0, 0, 0, 0, 509,
	0, 511, 512, 513, 514, 510, 515, 516, 517, 518,
	0, 519, 520, 521, 0, 522, 523, 524, 525, 651,
	526, 0, 527, 528, 534, 535, 529, 530, 536, 537,
	538, 539, 540, 0, 542, 543, 541, 544, 545, 546,
	0, 547, 548, 531, 532, 549, 550, 0, 551, 552,
	553, 554, 555, 556, 652, 0, 557, 0, 558, 559,
	560, 562, 533, 563, 568, 569, 653, 564, 565, 566,
	567, 654, 571, 572, 0, 573, 574, 0, 570, 561,
	0, 575, 576, 577, 578, 579, 580, 581, 353, 582,
	0, 583, 655, 656, 657, 658, 0, 592, 0, 584,
	585, 586, 659, 587, 660, 0, 588, 589, 590, 591,
	0, 593, 594, 0, 0, 595, 596, 597, 599, 600,
	598, 601, 0, 602, 0, 0, 603, 604, 605, 661,
	662, 663, 264, 607, 606, 608, 664, 0, 0, 0,
	0, 0, 609, 610, 665, 611, 612, 613, 0, 270,
	272, 271, 273, 274, 275, 276, 1226, 277, 278, 0,
	0, 0, 0, 0, 614, 0, 0, 0, 0, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 615, 616,
	0, 287, 617, 288, 618, 0, 619, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 620, 621, 622,
	0, 296, 297, 623, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 624, 625, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 626, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 627, 628, 359, 0, 0, 0, 0, 0,
	0, 0, 360, 361, 362, 629, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 0, 366, 367, 630, 631,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 632, 0, 633, 378, 0, 379, 380, 381, 382,
	383, 634, 635, 636, 460, 0, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 0, 390, 391, 392,
	394, 0, 0, 393, 637, 638, 0, 639, 0, 395,
	396, 0, 640, 0, 397, 398, 399, 0, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 641, 0, 411, 412, 0, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 0, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 0, 447, 0, 0, 0, 457, 458, 0, 642,
	459, 643, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 644, 0, 470,
	0, 645, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 648, 489, 649, 490, 491, 0,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	650, 501, 503, 502, 504, 0, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 0, 519, 520, 521,
	0, 522, 523, 524, 525, 651, 526, 0, 527, 528,
	534, 535, 529, 530, 536, 537, 538, 539, 540, 0,
	542, 543, 541, 544, 545, 546, 0, 547, 548, 531,
	532, 549, 550, 0, 551, 552, 553, 554, 555, 556,
	652, 0, 557, 0, 558, 559, 560, 562, 533, 563,
	568, 569, 653, 564, 565, 566, 567, 654, 571, 572,
	0, 573, 574, 0, 570, 561, 0, 575, 576, 577,
	578, 579, 580, 581, 353, 582, 0, 583, 655, 656,
	657, 658, 0, 592, 0, 584, 585, 586, 659, 587,
	660, 0, 588, 589, 590, 591, 0, 593, 594, 0,
	0, 595, 596, 597, 599, 600, 598, 601, 0, 602,
	0, 0, 603, 604, 605, 661, 662, 663, 264, 607,
	606, 608, 664, 0, 0, 0, 0, 0, 609, 610,
	665, 611, 612, 613, 0, 270, 272, 271, 273, 274,
	275, 276, 760, 277, 278, 0, 0, 0, 0, 0,
	614, 0, 0, 0, 0, 279, 280, 0, 281, 282,
	283, 284, 285, 286, 615, 616, 0, 287, 617, 288,
	618, 0, 619, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 620, 621, 622, 0, 296, 297, 623,
	0, 0, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 326, 327, 0, 328, 624, 625,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 626, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 627, 628,
	359, 0, 0, 0, 0, 0, 0, 0, 360, 361,
	362, 629, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 0, 366, 367, 630, 631, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 632, 0, 633,
	378, 0, 379, 380, 381, 382, 383, 634, 635, 636,
	460, 0, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 0, 390, 391, 392, 394, 0, 0, 393,
	637, 638, 0, 639, 0, 395, 396, 0, 640, 0,
	397, 398, 399, 0, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	641, 0, 411, 412, 0, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 0, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 0, 447, 0,
	0, 0, 457, 458, 0, 642, 459, 643, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 644, 0, 470, 0, 645, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 482, 646, 483, 484, 485, 647, 486, 487, 488,
	648, 489, 649, 490, 491, 0, 492, 493, 0, 494,
	495, 496, 497, 498, 499, 500, 650, 501, 503, 502,
	504, 0, 505, 0, 506, 507, 508, 0, 0, 0,
	0, 509, 0, 511, 512, 513, 514, 510, 515, 516,
	517, 518, 0, 519, 520, 521, 0, 522, 523, 524,
	525, 651, 526, 0, 527, 528, 534, 535, 529, 530,
	536, 537, 538, 539, 540, 0, 542, 543, 541, 544,
	545, 546, 0, 547, 548, 531, 532, 549, 550, 0,
	551, 552, 553, 554, 555, 556, 652, 0, 557, 0,
	558, 559, 560, 562, 533, 563, 568, 569, 653, 564,
	565, 566, 567, 654, 571, 572, 0, 573, 574, 0,
	570, 561, 0, 575, 576, 577, 578, 579, 580, 581,
	353, 582, 0, 583, 655, 656, 657, 658, 0, 592,
	0, 584, 585, 586, 659, 587, 660, 0, 588, 589,
	590, 591, 0, 593, 594, 0, 0, 595, 596, 597,
	599, 600, 598, 601, 0, 602, 0, 0, 603, 604,
	605, 661, 662, 663, 0, 607, 606, 608, 664, 754,
	0, 264, 0, 0, 609, 610, 665, 611, 612, 613,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 614, 0, 0, 0, 0, 279, 280,
	0, 281, 282, 283, 284, 285, 286, 615, 616, 0,
	287, 617, 288, 618, 0, 619, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 295, 620, 621, 622, 0,
	296, 744, 623, 0, 0, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 742, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 322, 0, 0, 0,
	0, 0, 0, 0, 323, 324, 325, 326, 327, 0,
	328, 624, 625, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	626, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 627, 628, 359, 0, 0, 0, 0, 0, 0,
	0, 360, 361, 362, 629, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 0, 366, 367, 630, 631, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	632, 0, 633, 378, 0, 379, 380, 381, 382, 383,
	634, 635, 636, 460, 0, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 0, 390, 391, 392, 394,
	0, 0, 393, 637, 638, 0, 639, 0, 395, 396,
	0, 640, 0, 397, 398, 399, 0, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 641, 0, 411, 412, 0, 0, 413,
	0, 0, 0, 414, 743, 418, 0, 0, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 755, 0, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	0, 447, 0, 0, 0, 457, 458, 0, 642, 459,
	643, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 644, 0, 470, 0,
	645, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 482, 646, 483, 484, 485, 647,
	486, 487, 488, 648, 489, 649, 490, 491, 0, 492,
	493, 0, 494, 495, 496, 497, 498, 499, 500, 650,
	501, 503, 502, 504, 0, 505, 0, 506, 507, 508,
	0, 0, 0, 0, 509, 0, 511, 512, 513, 514,
	510, 515, 516, 517, 518, 0, 519, 520, 521, 0,
	522, 523, 524, 525, 745, 526, 0, 527, 528, 534,
	535, 529, 530, 751, 537, 538, 539, 540, 0, 542,
	543, 541, 544, 746, 546, 0, 547, 548, 531, 532,
	549, 550, 0, 551, 552, 553, 554, 555, 556, 652,
	0, 557, 0, 558, 559, 560, 562, 533, 563, 568,
	569, 653, 564, 565, 566, 567, 654, 571, 572, 0,
	573, 574, 0, 570, 561, 0, 575, 576, 577, 578,
	579, 580, 581, 353, 582, 0, 583, 750, 656, 657,
	658, 0, 592, 0, 584, 748, 586, 659, 587, 660,
	0, 588, 589, 590, 591, 0, 593, 594, 0, 0,
	595, 596, 597, 599, 600, 598, 601, 0, 602, 0,
	0, 603, 604, 605, 661, 662, 663, 0, 607, 606,
	608, 664, 736, 0, 264, 0, 0, 609, 610, 665,
	611, 612, 613, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 614, 0, 0, 0,
	0, 279, 280, 0, 281, 282, 283, 284, 285, 286,
	615, 616, 0, 287, 617, 288, 618, 0, 619, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 620,
	621, 622, 0, 296, 297, 623, 0, 0, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 0, 323, 324, 325,
	326, 327, 0, 328, 624, 625, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 626, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 627, 628, 359, 0, 0, 0,
	0, 0, 0, 0, 360, 361, 362, 629, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 0, 366, 367,
	630, 631, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 632, 0, 633, 378, 0, 379, 380,
	381, 382, 383, 634, 635, 636, 460, 0, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 0, 390,
	391, 392, 394, 0, 0, 393, 637, 638, 0, 639,
	0, 395, 396, 0, 640, 0, 397, 398, 399, 0,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 641, 0, 411, 412,
	0, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	0, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 0, 447, 0, 0, 0, 457, 458,
	0, 642, 459, 643, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 644,
	0, 470, 0, 645, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 482, 646, 483,
	484, 485, 647, 486, 487, 488, 648, 489, 649, 490,
	491, 0, 492, 493, 0, 494, 495, 496, 497, 498,
	499, 500, 650, 501, 503, 502, 504, 0, 505, 0,
	506, 507, 508, 0, 0, 0, 0, 509, 0, 511,
	512, 513, 514, 510, 515, 516, 517, 518, 0, 519,
	520, 521, 0, 522, 523, 524, 525, 651, 526, 0,
	527, 528, 737, 535, 529, 530, 536, 537, 538, 539,
	540, 0, 542, 543, 541, 544, 545, 546, 0, 547,
	548, 531, 532, 549, 550, 0, 551, 552, 553, 554,
	555, 556, 652, 0, 557, 0, 558, 559, 560, 562,
	533, 563, 568, 569, 653, 564, 565, 566, 567, 654,
	571, 572, 0, 573, 574, 0, 570, 561, 0, 575,
	576, 577, 578, 579, 580, 581, 353, 582, 0, 583,
	655, 656, 657, 658, 0, 592, 0, 584, 585, 586,
	659, 587, 660, 0, 588, 589, 590, 591, 0, 593,
	594, 0, 0, 595, 596, 597, 599, 600, 598, 601,
	0, 602, 0, 0, 603, 604, 605, 661, 662, 663,
	0, 607, 606, 608, 664, 699, 0, 264, 0, 0,
	609, 610, 665, 611, 612, 613, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 614,
	0, 0, 0, 0, 279, 280, 0, 281, 282, 283,
	284, 285, 286, 615, 616, 0, 287, 617, 288, 618,
	0, 619, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 620, 621, 622, 0, 296, 297, 623, 0,
	0, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 0, 328, 624, 625, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 626, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 627, 628, 359,
	0, 0, 0, 0, 0, 0, 0, 360, 361, 362,
	629, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	0, 366, 367, 630, 631, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 632, 0, 633, 378,
	0, 379, 380, 381, 382, 383, 634, 635, 636, 460,
	0, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 0, 390, 391, 392, 394, 0, 0, 393, 637,
	638, 0, 639, 0, 395, 396, 0, 640, 0, 397,
	398, 399, 0, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 641,
	0, 411, 412, 0, 0, 413, 0, 0, 0, 414,
	415, 418, 0, 0, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 0, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 0, 447, 0, 0,
	0, 457, 458, 0, 642, 459, 643, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 644, 0, 470, 0, 645, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	482, 646, 483, 484, 485, 647, 486, 487, 488, 648,
	489, 649, 490, 491, 0, 492, 493, 0, 494, 495,
	496, 497, 498, 499, 500, 650, 501, 503, 502, 504,
	0, 505, 0, 506, 507, 508, 0, 0, 0, 0,
	509, 0, 511, 512, 513, 514, 510, 515, 516, 517,
	518, 0, 519, 520, 521, 0, 522, 523, 524, 525,
	651, 526, 0, 527, 528, 534, 535, 529, 530, 536,
	537, 538, 539, 540, 0, 542, 543, 541, 544, 545,
	546, 0, 547, 548, 531, 532, 549, 550, 0, 551,
	552, 553, 554, 555, 556, 652, 0, 557, 0, 558,
	559, 560, 562, 533, 563, 568, 569, 653, 564, 565,
	566, 567, 654, 571, 572, 0, 573, 574, 0, 570,
	561, 0, 575, 576, 577, 578, 579, 580, 581, 353,
	582, 0, 583, 655, 656, 657, 658, 0, 592, 0,
	584, 585, 586, 659, 587, 660, 0, 588, 589, 590,
	591, 0, 593, 594, 0, 0, 595, 596, 597, 599,
	600, 598, 601, 0, 602, 0, 0, 603, 604, 605,
	661, 662, 663, 0, 607, 606, 608, 664, 693, 0,
	264, 0, 0, 609, 610, 665, 611, 612, 613, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 614, 0, 0, 0, 0, 279, 280, 0,
	281, 282, 283, 284, 285, 286, 615, 616, 0, 287,
	617, 288, 618, 0, 619, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 620, 621, 622, 0, 296,
	297, 623, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 326, 327, 0, 328,
	624, 625, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 626,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	627, 628, 359, 0, 0, 0, 0, 0, 0, 0,
	360, 361, 362, 629, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 0, 366, 367, 630, 631, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 632,
	0, 633, 378, 0, 379, 380, 381, 382, 383, 634,
	635, 636, 460, 0, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 0, 390, 391, 392, 394, 0,
	0, 393, 637, 638, 0, 639, 0, 395, 396, 0,
	640, 0, 397, 398, 399, 0, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 641, 0, 411, 412, 0, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 0, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 0,
	447, 0, 0, 0, 457, 458, 0, 642, 459, 643,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 644, 0, 470, 0, 645,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 482, 646, 483, 484, 485, 647, 486,
	487, 488, 648, 489, 649, 490, 491, 0, 492, 493,
	0, 494, 495, 496, 497, 498, 499, 500, 650, 501,
	503, 502, 504, 0, 505, 0, 506, 507, 508, 0,
	0, 0, 0, 509, 0, 511, 512, 513, 514, 510,
	515, 516, 517, 518, 0, 519, 520, 521, 0, 522,
	523, 524, 525, 651, 526, 0, 527, 528, 534, 535,
	529, 530, 536, 537, 538, 539, 540, 0, 542, 543,
	541, 544, 545, 546, 0, 547, 548, 531, 532, 549,
	550, 0, 551, 552, 553, 554, 555, 556, 652, 0,
	557, 0, 558, 559, 560, 562, 533, 563, 568, 569,
	653, 564, 565, 566, 567, 654, 571, 572, 0, 573,
	574, 0, 570, 561, 0, 575, 576, 577, 578, 579,
	580, 581, 353, 582, 0, 583, 655, 656, 657, 658,
	0, 592, 0, 584, 585, 586, 659, 587, 660, 0,
	588, 589, 590, 591, 0, 593, 594, 0, 0, 595,
	596, 597, 599, 600, 598, 601, 0, 602, 0, 0,
	603, 604, 605, 661, 662, 663, 0, 607, 606, 608,
	664, 671, 0, 264, 0, 0, 609, 610, 665, 611,
	612, 613, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 614, 0, 0, 0, 0,
	279, 280, 0, 281, 282, 283, 284, 285, 286, 615,
	616, 0, 287, 617, 288, 618, 0, 619, 289, 290,
	291, 292, 293, 294, 0, 0, 0, 295, 620, 621,
	622, 0, 296, 297, 623, 0, 0, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 0, 323, 324, 325, 326,
	327, 0, 328, 624, 625, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 626, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 627, 628, 359, 0, 0, 0, 0,
	0, 0, 0, 360, 361, 362, 629, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 0, 366, 367, 630,
	631, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 632, 0, 633, 378, 0, 379, 380, 381,
	382, 383, 634, 635, 636, 460, 0, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 0, 390, 391,
	392, 394, 0, 0, 393, 637, 638, 0, 639, 0,
	395, 396, 0, 640, 0, 397, 398, 399, 0, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 641, 0, 411, 412, 0,
	0, 413, 0, 0, 0, 414, 415, 418, 0, 0,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 0,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 0, 447, 0, 0, 0, 457, 458, 0,
	642, 459, 643, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 644, 0,
	470, 0, 645, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 648, 489, 649, 490, 491,
	0, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 650, 501, 503, 502, 504, 0, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 0, 519, 520,
	521, 0, 522, 523, 524, 525, 651, 526, 0, 527,
	528, 534, 535, 529, 530, 536, 537, 538, 539, 540,
	0, 542, 543, 541, 544, 545, 546, 0, 547, 548,
	531, 532, 549, 550, 0, 551, 552, 553, 554, 555,
	556, 652, 0, 557, 0, 558, 559, 560, 562, 533,
	563, 568, 569, 653, 564, 565, 566, 567, 654, 571,
	572, 0, 573, 574, 0, 570, 561, 0, 575, 576,
	577, 578, 579, 580, 581, 353, 582, 0, 583, 655,
	656, 657, 658, 0, 592, 0, 584, 585, 586, 659,
	587, 660, 0, 588, 589, 590, 591, 0, 593, 594,
	0, 0, 595, 596, 597, 599, 600, 598, 601, 0,
	602, 0, 0, 603, 604, 605, 661, 662, 663, 264,
	607, 606, 608, 664, 0, 0, 0, 0, 0, 609,
	610, 665, 611, 612, 613, 0, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 614, 0, 0, 0, 0, 279, 280, 0, 281,
	282, 283, 284, 285, 286, 615, 616, 0, 287, 617,
	288, 618, 0, 619, 289, 290, 291, 292, 293, 294,
	0, 0, 0, 295, 620, 621, 622, 0, 296, 297,
	623, 0, 0, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 322, 0, 0, 0, 0, 0,
	0, 0, 323, 324, 325, 326, 327, 0, 328, 624,
	625, 0, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 339, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 626, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 627,
	628, 359, 0, 0, 0, 0, 0, 0, 0, 360,
	361, 362, 629, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 0, 366, 367, 630, 631, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 632, 0,
	633, 378, 0, 379, 380, 381, 382, 383, 634, 635,
	636, 460, 0, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 0, 390, 391, 392, 394, 0, 0,
	393, 637, 638, 0, 639, 0, 395, 396, 0, 640,
	0, 397, 398, 399, 0, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 641, 0, 411, 412, 0, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 0, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 0, 447,
	0, 0, 0, 457, 458, 0, 642, 459, 643, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 644, 0, 470, 0, 645, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 482, 646, 483, 484, 485, 647, 486, 487,
	488, 648, 489, 649, 490, 491, 0, 492, 493, 0,
	494, 495, 496, 497, 498, 499, 500, 650, 501, 503,
	502, 504, 0, 505, 0, 506, 507, 508, 0, 0,
	0, 0, 509, 0, 511, 512, 513, 514, 510, 515,
	516, 517, 518, 0, 519, 520, 521, 0, 522, 523,
	524, 525, 651, 526, 0, 527, 528, 534, 535, 529,
	530, 536, 537, 538, 539, 540, 0, 542, 543, 541,
	544, 545, 546, 0, 547, 548, 531, 532, 549, 550,
	0, 551, 552, 553, 554, 555, 556, 652, 0, 557,
	0, 558, 559, 560, 562, 533, 563, 568, 569, 653,
	564, 565, 566, 567, 654, 571, 572, 0, 573, 574,
	0, 570, 561, 0, 575, 576, 577, 578, 579, 580,
	581, 353, 582, 0, 583, 655, 656, 657, 658, 0,
	592, 0, 584, 585, 586, 659, 587, 660, 0, 588,
	589, 590, 591, 0, 593, 594, 0, 0, 595, 596,
	597, 599, 600, 598, 601, 0, 602, 0, 0, 603,
	604, 605, 661, 662, 663, 264, 607, 606, 608, 664,
	0, 0, 0, 0, 0, 609, 610, 665, 611, 612,
	613, 0, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 614, 0, 0,
	0, 0, 279, 280, 0, 281, 282, 283, 284, 285,
	286, 615, 616, 0, 287, 617, 288, 618, 0, 619,
	289, 290, 291, 292, 293, 294, 0, 0, 0, 295,
	620, 621, 622, 0, 296, 297, 623, 0, 0, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 0, 0, 0, 0, 0, 0, 0, 323, 324,
	325, 326, 327, 0, 328, 624, 625, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 626, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 627, 628, 359, 0, 0,
	0, 0, 0, 0, 0, 360, 361, 362, 629, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 0, 366,
	367, 630, 631, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 632, 0, 633, 378, 0, 379,
	380, 381, 382, 383, 3425, 635, 636, 460, 0, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 0,
	390, 391, 392, 394, 0, 0, 393, 637, 638, 0,
	639, 0, 395, 396, 0, 640, 0, 397, 398, 399,
	0, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 641, 0, 411,
	412, 0, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 0, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 0, 447, 0, 0, 0, 457,
	458, 0, 642, 459, 643, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	644, 0, 470, 0, 645, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 648, 489, 649,
	490, 491, 0, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 650, 501, 503, 502, 504, 0, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 0,
	519, 520, 521, 0, 522, 523, 524, 525, 651, 526,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 0, 542, 543, 541, 544, 545, 546, 0,
	547, 548, 531, 532, 549, 550, 0, 551, 552, 553,
	554, 555, 556, 652, 0, 557, 0, 558, 559, 560,
	562, 533, 563, 568, 569, 653, 564, 565, 566, 567,
	654, 571, 572, 0, 573, 574, 0, 570, 561, 0,
	575, 576, 577, 578, 579, 580, 581, 353, 582, 0,
	583, 655, 656, 657, 658, 0, 592, 0, 584, 585,
	586, 659, 587, 660, 0, 588, 589, 590, 591, 0,
	593, 594, 0, 0, 595, 596, 597, 599, 600, 598,
	601, 0, 602, 0, 0, 603, 604, 605, 661, 662,
	663, 264, 607, 606, 608, 664, 0, 0, 0, 0,
	0, 609, 610, 665, 611, 612, 613, 0, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 614, 0, 0, 0, 0, 279, 280,
	0, 281, 282, 283, 284, 285, 286, 615, 616, 0,
	287, 617, 288, 618, 0, 619, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 295, 620, 621, 622, 0,
	296, 297, 623, 0, 0, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 322, 0, 0, 0,
	0, 0, 0, 0, 323, 324, 325, 326, 327, 0,
	328, 624, 625, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	626, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 627, 628, 359, 0, 0, 0, 0, 0, 0,
	0, 360, 361, 362, 629, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 0, 366, 367, 630, 631, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	632, 0, 633, 378, 0, 379, 380, 381, 382, 383,
	3362, 635, 636, 460, 0, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 0, 390, 391, 392, 394,
	0, 0, 393, 637, 638, 0, 639, 0, 395, 396,
	0, 640, 0, 397, 398, 399, 0, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 641, 0, 411, 412, 0, 0, 413,
	0, 0, 0, 414, 415, 418, 0, 0, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 0, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	0, 447, 0, 0, 0, 457, 458, 0, 642, 459,
	643, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 644, 0, 470, 0,
	645, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 482, 646, 483, 484, 485, 647,
	486, 487, 488, 648, 489, 649, 490, 491, 0, 492,
	493, 0, 494, 495, 496, 497, 498, 499, 500, 650,
	501, 503, 502, 504, 0, 505, 0, 506, 507, 508,
	0, 0, 0, 0, 509, 0, 511, 512, 513, 514,
	510, 515, 516, 517, 518, 0, 519, 520, 521, 0,
	522, 523, 524, 525, 651, 526, 0, 527, 528, 534,
	535, 529, 530, 536, 537, 538, 539, 540, 0, 542,
	543, 541, 544, 545, 546, 0, 547, 548, 531, 532,
	549, 550, 0, 551, 552, 553, 554, 555, 556, 652,
	0, 557, 0, 558, 559, 560, 562, 533, 563, 568,
	569, 653, 564, 565, 566, 567, 654, 571, 572, 0,
	573, 574, 0, 570, 561, 0, 575, 576, 577, 578,
	579, 580, 581, 353, 582, 0, 583, 655, 656, 657,
	658, 0, 592, 0, 584, 585, 586, 659, 587, 660,
	0, 588, 589, 590, 591, 0, 593, 594, 0, 0,
	595, 596, 597, 599, 600, 598, 601, 0, 602, 0,
	0, 603, 604, 605, 661, 662, 663, 264, 607, 606,
	608, 664, 0, 0, 0, 0, 0, 609, 610, 665,
	611, 612, 613, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 614,
	0, 0, 0, 0, 279, 280, 0, 281, 282, 283,
	284, 285, 286, 615, 616, 0, 287, 617, 288, 618,
	0, 619, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 620, 621, 622, 0, 296, 297, 623, 0,
	0, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 0, 328, 624, 625, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 626, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 627, 628, 359,
	0, 0, 0, 0, 0, 0, 0, 360, 361, 362,
	629, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	0, 366, 367, 630, 631, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 632, 0, 633, 378,
	0, 379, 380, 381, 382, 383, 3295, 635, 636, 460,
	0, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 0, 390, 391, 392, 394, 0, 0, 393, 637,
	638, 0, 639, 0, 395, 396, 0, 640, 0, 397,
	398, 399, 0, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 641,
	0, 411, 412, 0, 0, 413, 0, 0, 0, 414,
	415, 418, 0, 0, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 0, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 0, 447, 0, 0,
	0, 457, 458, 0, 642, 459, 643, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 644, 0, 470, 0, 645, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	482, 646, 483, 484, 485, 647, 486, 487, 488, 648,
	489, 649, 490, 491, 0, 492, 493, 0, 494, 495,
	496, 497, 498, 499, 500, 650, 501, 503, 502, 504,
	0, 505, 0, 506, 507, 508, 0, 0, 0, 0,
	509, 0, 511, 512, 513, 514, 510, 515, 516, 517,
	518, 0, 519, 520, 521, 0, 522, 523, 524, 525,
	651, 526, 0, 527, 528, 534, 535, 529, 530, 536,
	537, 538, 539, 540, 0, 542, 543, 541, 544, 545,
	546, 0, 547, 548, 531, 532, 549, 550, 0, 551,
	552, 553, 554, 555, 556, 652, 0, 557, 0, 558,
	559, 560, 562, 533, 563, 568, 569, 653, 564, 565,
	566, 567, 654, 571, 572, 0, 573, 574, 0, 570,
	561, 0, 575, 576, 577, 578, 579, 580, 581, 353,
	582, 0, 583, 655, 656, 657, 658, 0, 592, 0,
	584, 585, 586, 659, 587, 660, 0, 588, 589, 590,
	591, 0, 593, 594, 0, 0, 595, 596, 597, 599,
	600, 598, 601, 0, 602, 0, 0, 603, 604, 605,
	661, 662, 663, 264, 607, 606, 608, 664, 0, 0,
	0, 0, 0, 609, 610, 665, 611, 612, 613, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 614, 0, 0, 0, 0,
	279, 280, 0, 281, 282, 283, 284, 285, 286, 615,
	616, 0, 287, 617, 288, 618, 0, 619, 289, 290,
	291, 292, 293, 294, 0, 0, 0, 295, 620, 621,
	622, 0, 296, 297, 623, 0, 0, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 0, 323, 324, 325, 326,
	327, 0, 328, 624, 625, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 626, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 627, 628, 359, 0, 0, 0, 0,
	0, 0, 0, 360, 361, 362, 629, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 0, 366, 367, 630,
	631, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 632, 0, 633, 378, 0, 379, 380, 381,
	382, 383, 3293, 635, 636, 460, 0, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 0, 390, 391,
	392, 394, 0, 0, 393, 637, 638, 0, 639, 0,
	395, 396, 0, 640, 0, 397, 398, 399, 0, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 641, 0, 411, 412, 0,
	0, 413, 0, 0, 0, 414, 415, 418, 0, 0,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 0,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 0, 447, 0, 0, 0, 457, 458, 0,
	642, 459, 643, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 644, 0,
	470, 0, 645, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 648, 489, 649, 490, 491,
	0, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 650, 501, 503, 502, 504, 0, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 0, 519, 520,
	521, 0, 522, 523, 524, 525, 651, 526, 0, 527,
	528, 534, 535, 529, 530, 536, 537, 538, 539, 540,
	0, 542, 543, 541, 544, 545, 546, 0, 547, 548,
	531, 532, 549, 550, 0, 551, 552, 553, 554, 555,
	556, 652, 0, 557, 0, 558, 559, 560, 562, 533,
	563, 568, 569, 653, 564, 565, 566, 567, 654, 571,
	572, 0, 573, 574, 0, 570, 561, 0, 575, 576,
	577, 578, 579, 580, 581, 353, 582, 0, 583, 655,
	656, 657, 658, 0, 592, 0, 584, 585, 586, 659,
	587, 660, 0, 588, 589, 590, 591, 0, 593, 594,
	0, 0, 595, 596, 597, 599, 600, 598, 601, 0,
	602, 0, 0, 603, 604, 605, 661, 662, 663, 264,
	607, 606, 608, 664, 0, 0, 0, 0, 0, 609,
	610, 665, 611, 612, 613, 0, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 614, 0, 0, 0, 0, 279, 280, 0, 281,
	282, 283, 284, 285, 286, 615, 616, 0, 287, 617,
	288, 618, 0, 619, 289, 290, 291, 292, 293, 294,
	0, 0, 0, 295, 620, 621, 622, 0, 296, 297,
	623, 0, 0, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 322, 0, 0, 0, 0, 0,
	0, 0, 323, 324, 325, 326, 327, 0, 328, 624,
	625, 0, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 339, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 626, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 627,
	628, 359, 0, 0, 0, 0, 0, 0, 0, 360,
	361, 362, 629, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 0, 366, 367, 630, 631, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 632, 0,
	633, 378, 0, 379, 380, 381, 382, 383, 3278, 635,
	636, 460, 0, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 0, 390, 391, 392, 394, 0, 0,
	393, 637, 638, 0, 639, 0, 395, 396, 0, 640,
	0, 397, 398, 399, 0, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 641, 0, 411, 412, 0, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 0, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 0, 447,
	0, 0, 0, 457, 458, 0, 642, 459, 643, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 644, 0, 470, 0, 645, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 482, 646, 483, 484, 485, 647, 486, 487,
	488, 648, 489, 649, 490, 491, 0, 492, 493, 0,
	494, 495, 496, 497, 498, 499, 500, 650, 501, 503,
	502, 504, 0, 505, 0, 506, 507, 508, 0, 0,
	0, 0, 509, 0, 511, 512, 513, 514, 510, 515,
	516, 517, 518, 0, 519, 520, 521, 0, 522, 523,
	524, 525, 651, 526, 0, 527, 528, 534, 535, 529,
	530, 536, 537, 538, 539, 540, 0, 542, 543, 541,
	544, 545, 546, 0, 547, 548, 531, 532, 549, 550,
	0, 551, 552, 553, 554, 555, 556, 652, 0, 557,
	0, 558, 559, 560, 562, 533, 563, 568, 569, 653,
	564, 565, 566, 567, 654, 571, 572, 0, 573, 574,
	0, 570, 561, 0, 575, 576, 577, 578, 579, 580,
	581, 353, 582, 0, 583, 655, 656, 657, 658, 0,
	592, 0, 584, 585, 586, 659, 587, 660, 0, 588,
	589, 590, 591, 0, 593, 594, 0, 0, 595, 596,
	597, 599, 600, 598, 601, 0, 602, 0, 0, 603,
	604, 605, 661, 662, 663, 264, 607, 606, 608, 664,
	0, 0, 0, 0, 0, 609, 610, 665, 611, 612,
	613, 0, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 614, 0, 0,
	0, 0, 279, 280, 0, 281, 282, 283, 284, 285,
	286, 615, 616, 0, 287, 617, 288, 618, 0, 619,
	289, 290, 291, 292, 293, 294, 0, 0, 0, 295,
	620, 621, 622, 0, 296, 297, 623, 0, 0, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 0, 0, 0, 0, 0, 0, 0, 323, 324,
	325, 326, 327, 0, 328, 624, 625, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 626, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 627, 628, 359, 0, 0,
	0, 0, 0, 0, 0, 360, 361, 362, 629, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 0, 366,
	367, 630, 631, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 632, 0, 633, 378, 0, 379,
	380, 381, 382, 383, 2897, 635, 636, 460, 0, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 0,
	390, 391, 392, 394, 0, 0, 393, 637, 638, 0,
	639, 0, 395, 396, 0, 640, 0, 397, 398, 399,
	0, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 641, 0, 411,
	412, 0, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 0, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 0, 447, 0, 0, 0, 457,
	458, 0, 642, 459, 643, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	644, 0, 470, 0, 645, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 648, 489, 649,
	490, 491, 0, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 650, 501, 503, 502, 504, 0, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 0,
	519, 520, 521, 0, 522, 523, 524, 525, 651, 526,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 0, 542, 543, 541, 544, 545, 546, 0,
	547, 548, 531, 532, 549, 550, 0, 551, 552, 553,
	554, 555, 556, 652, 0, 557, 0, 558, 559, 560,
	562, 533, 563, 568, 569, 653, 564, 565, 566, 567,
	654, 571, 572, 0, 573, 574, 0, 570, 561, 0,
	575, 576, 577, 578, 579, 580, 581, 353, 582, 0,
	583, 655, 656, 657, 658, 0, 592, 0, 584, 585,
	586, 659, 587, 660, 0, 588, 589, 590, 591, 0,
	593, 594, 0, 0, 595, 596, 597, 599, 600, 598,
	601, 0, 602, 0, 0, 603, 604, 605, 661, 662,
	663, 264, 607, 606, 608, 664, 0, 0, 0, 0,
	0, 609, 610, 665, 611, 612, 613, 0, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 614, 0, 0, 0, 0, 279, 280,
	0, 281, 282, 283, 284, 285, 286, 615, 616, 0,
	287, 617, 288, 618, 0, 619, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 295, 620, 621, 622, 0,
	296, 297, 623, 0, 0, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 322, 0, 0, 0,
	0, 0, 0, 0, 323, 324, 325, 326, 327, 0,
	328, 624, 625, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	626, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 627, 628, 359, 0, 0, 0, 0, 0, 0,
	0, 360, 361, 362, 629, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 0, 366, 367, 630, 631, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	632, 0, 633, 378, 0, 379, 380, 381, 382, 383,
	634, 635, 636, 460, 0, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 0, 390, 391, 392, 394,
	0, 0, 393, 637, 638, 0, 639, 0, 395, 396,
	0, 640, 0, 397, 398, 399, 0, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 641, 0, 411, 412, 0, 0, 413,
	0, 0, 0, 414, 415, 418, 0, 0, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 0, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	0, 447, 0, 0, 0, 457, 458, 0, 642, 459,
	643, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 644, 0, 470, 0,
	645, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 482, 646, 483, 484, 485, 647,
	486, 487, 488, 648, 489, 649, 490, 491, 0, 492,
	493, 0, 494, 495, 496, 497, 498, 499, 500, 650,
	501, 503, 502, 504, 0, 505, 0, 506, 507, 508,
	0, 0, 0, 0, 509, 0, 511, 512, 513, 514,
	510, 515, 516, 517, 518, 0, 519, 520, 521, 0,
	522, 523, 524, 525, 651, 526, 0, 527, 528, 737,
	535, 529, 530, 536, 537, 538, 539, 540, 0, 542,
	543, 541, 544, 545, 546, 0, 547, 548, 531, 532,
	549, 550, 0, 551, 552, 553, 554, 555, 556, 652,
	0, 557, 0, 558, 559, 560, 562, 533, 563, 568,
	569, 653, 564, 565, 566, 567, 654, 571, 572, 0,
	573, 574, 0, 570, 561, 0, 575, 576, 577, 578,
	579, 580, 581, 353, 582, 0, 583, 655, 656, 657,
	658, 0, 592, 0, 584, 585, 586, 659, 587, 660,
	0, 588, 589, 590, 591, 0, 593, 594, 0, 0,
	595, 596, 597, 599, 600, 598, 601, 0, 602, 0,
	0, 603, 604, 605, 661, 662, 663, 264, 607, 606,
	608, 664, 0, 0, 0, 0, 0, 609, 610, 665,
	611, 612, 613, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 614,
	0, 2221, 0, 0, 279, 280, 0, 281, 282, 283,
	284, 285, 286, 615, 616, 0, 287, 617, 288, 618,
	0, 619, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 620, 621, 622, 0, 296, 297, 623, 0,
	0, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 0, 328, 624, 625, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 626, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 627, 628, 359,
	0, 0, 0, 0, 0, 0, 0, 360, 361, 362,
	629, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	0, 366, 367, 630, 631, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 632, 0, 633, 378,
	0, 379, 380, 381, 382, 383, 634, 635, 636, 460,
	0, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 0, 390, 391, 392, 394, 0, 0, 393, 637,
	638, 0, 639, 0, 395, 396, 0, 640, 0, 397,
	398, 399, 0, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 641,
	0, 411, 412, 0, 0, 413, 0, 0, 0, 414,
	415, 418, 0, 0, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 0, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 0, 447, 0, 0,
	0, 457, 458, 0, 642, 459, 643, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 644, 0, 470, 0, 645, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	482, 646, 483, 484, 485, 647, 486, 487, 488, 648,
	489, 649, 490, 491, 0, 492, 493, 0, 494, 495,
	496, 497, 498, 499, 500, 650, 501, 503, 502, 504,
	0, 505, 0, 506, 507, 508, 0, 0, 0, 0,
	509, 0, 511, 512, 513, 514, 510, 515, 516, 517,
	518, 0, 519, 520, 521, 0, 522, 523, 524, 525,
	651, 526, 0, 527, 528, 534, 535, 529, 530, 536,
	537, 538, 539, 540, 0, 542, 543, 541, 544, 545,
	546, 0, 0, 548, 531, 532, 549, 550, 0, 551,
	552, 553, 554, 555, 556, 652, 0, 557, 0, 558,
	559, 560, 562, 533, 563, 568, 569, 653, 564, 565,
	566, 567, 654, 571, 572, 0, 573, 574, 0, 570,
	561, 0, 575, 576, 577, 578, 579, 580, 581, 353,
	582, 0, 583, 655, 656, 657, 658, 0, 592, 0,
	584, 585, 586, 659, 587, 660, 0, 588, 589, 590,
	591, 0, 593, 594, 0, 0, 595, 596, 597, 599,
	600, 598, 601, 0, 602, 0, 0, 603, 604, 605,
	661, 662, 663, 264, 607, 606, 608, 664, 0, 0,
	0, 0, 0, 609, 610, 665, 611, 612, 613, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 614, 0, 0, 0, 0,
	279, 280, 0, 281, 282, 283, 284, 285, 286, 615,
	616, 0, 287, 617, 288, 618, 0, 619, 289, 290,
	291, 292, 293, 294, 0, 0, 0, 295, 620, 621,
	622, 0, 296, 297, 623, 0, 0, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 0, 323, 324, 325, 326,
	327, 0, 328, 624, 625, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 626, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 627, 628, 359, 0, 0, 0, 0,
	0, 0, 0, 360, 361, 362, 629, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 0, 366, 367, 630,
	631, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 632, 0, 633, 378, 0, 379, 380, 381,
	382, 383, 1244, 635, 636, 460, 0, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 0, 390, 391,
	392, 394, 0, 0, 393, 637, 638, 0, 639, 0,
	395, 396, 0, 640, 0, 397, 398, 399, 0, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 641, 0, 411, 412, 0,
	0, 413, 0, 0, 0, 414, 415, 418, 0, 0,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 0,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 0, 447, 0, 0, 0, 457, 458, 0,
	642, 459, 643, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 644, 0,
	470, 0, 645, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 648, 489, 649, 490, 491,
	0, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 650, 501, 503, 502, 504, 0, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 0, 519, 520,
	521, 0, 522, 523, 524, 525, 651, 526, 0, 527,
	528, 534, 535, 529, 530, 536, 537, 538, 539, 540,
	0, 542, 543, 541, 544, 545, 546, 0, 547, 548,
	531, 532, 549, 550, 0, 551, 552, 553, 554, 555,
	556, 652, 0, 557, 0, 558, 559, 560, 562, 533,
	563, 568, 569, 653, 564, 565, 566, 567, 654, 571,
	572, 0, 573, 574, 0, 570, 561, 0, 575, 576,
	577, 578, 579, 580, 581, 353, 582, 0, 583, 655,
	656, 657, 658, 0, 592, 0, 584, 585, 586, 659,
	587, 660, 0, 588, 589, 590, 591, 0, 593, 594,
	0, 0, 595, 596, 597, 599, 600, 598, 601, 0,
	602, 0, 0, 603, 604, 605, 661, 662, 663, 264,
	607, 606, 608, 664, 0, 0, 0, 0, 0, 609,
	610, 665, 611, 612, 613, 0, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 614, 0, 0, 0, 0, 279, 280, 0, 281,
	282, 283, 284, 285, 286, 615, 616, 0, 287, 617,
	288, 618, 0, 619, 289, 290, 291, 292, 293, 294,
	0, 0, 0, 295, 620, 621, 622, 0, 296, 297,
	623, 0, 0, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 322, 0, 0, 0, 0, 0,
	0, 0, 323, 324, 325, 326, 327, 0, 328, 624,
	625, 0, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 339, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 626, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 627,
	628, 359, 0, 0, 0, 0, 0, 0, 0, 360,
	361, 362, 629, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 0, 366, 367, 630, 631, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 632, 0,
	633, 378, 0, 379, 380, 381, 382, 383, 634, 635,
	636, 460, 0, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 0, 390, 391, 392, 394, 0, 0,
	393, 637, 638, 0, 639, 0, 395, 396, 0, 640,
	0, 397, 398, 399, 0, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 641, 0, 411, 412, 0, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 0, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 0, 447,
	0, 0, 0, 457, 458, 0, 642, 459, 643, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 644, 0, 470, 0, 645, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 482, 646, 483, 484, 485, 647, 486, 487,
	488, 648, 489, 649, 490, 491, 0, 492, 493, 0,
	494, 495, 496, 497, 498, 499, 500, 650, 501, 1177,
	502, 504, 0, 505, 0, 506, 507, 508, 0, 0,
	0, 0, 509, 0, 511, 512, 513, 514, 510, 515,
	516, 517, 518, 0, 519, 520, 521, 0, 522, 523,
	524, 525, 651, 526, 0, 527, 528, 534, 535, 529,
	530, 536, 537, 538, 539, 540, 0, 542, 543, 541,
	544, 545, 546, 0, 547, 548, 531, 532, 549, 550,
	0, 551, 552, 553, 554, 555, 556, 652, 0, 557,
	0, 558, 559, 560, 562, 533, 563, 568, 569, 653,
	564, 565, 566, 567, 654, 571, 572, 0, 573, 574,
	0, 570, 561, 0, 575, 576, 577, 578, 579, 580,
	581, 353, 582, 0, 583, 655, 656, 657, 658, 0,
	592, 0, 584, 585, 586, 659, 587, 660, 0, 588,
	589, 590, 591, 0, 593, 594, 0, 0, 595, 596,
	597, 599, 600, 598, 601, 0, 602, 0, 0, 603,
	604, 605, 661, 662, 663, 264, 607, 606, 608, 664,
	0, 0, 0, 0, 0, 609, 610, 665, 611, 612,
	613, 0, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 614, 0, 0,
	0, 0, 279, 280, 0, 281, 282, 283, 284, 285,
	286, 615, 616, 0, 287, 617, 288, 618, 0, 619,
	289, 290, 291, 292, 293, 294, 0, 0, 0, 295,
	620, 621, 622, 0, 296, 297, 623, 0, 0, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 0, 0, 0, 0, 0, 0, 0, 323, 324,
	325, 326, 327, 0, 328, 624, 625, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 626, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 627, 628, 359, 0, 0,
	0, 0, 0, 0, 0, 360, 361, 362, 629, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 0, 366,
	367, 630, 631, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 632, 0, 633, 0, 0, 379,
	380, 381, 382, 383, 634, 635, 636, 460, 0, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 0,
	390, 391, 392, 394, 0, 0, 393, 637, 638, 0,
	639, 0, 395, 396, 0, 640, 0, 397, 398, 399,
	0, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 641, 0, 411,
	412, 0, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 0, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 0, 447, 0, 0, 0, 457,
	458, 0, 642, 459, 643, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	644, 0, 470, 0, 645, 471, 472, 464, 473, 474,
	0, 476, 477, 478, 479, 480, 0, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 648, 489, 649,
	490, 491, 0, 492, 493, 0, 494, 495, 496, 497,
	0, 499, 500, 650, 501, 503, 502, 504, 0, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 0,
	519, 520, 521, 0, 522, 523, 524, 525, 651, 0,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 0, 542, 543, 541, 544, 545, 546, 0,
	547, 548, 531, 532, 549, 550, 0, 551, 552, 553,
	554, 555, 556, 652, 0, 557, 0, 558, 559, 560,
	562, 533, 563, 568, 569, 653, 564, 565, 566, 567,
	654, 571, 572, 0, 573, 574, 0, 570, 561, 0,
	575, 576, 577, 578, 579, 580, 581, 353, 582, 0,
	583, 655, 656, 657, 658, 0, 592, 0, 584, 585,
	586, 659, 587, 660, 0, 588, 589, 590, 591, 0,
	593, 594, 0, 0, 595, 596, 597, 599, 600, 598,
	601, 0, 602, 0, 0, 603, 604, 605, 661, 662,
	663, 0, 607, 606, 608, 664, 0, 0, 0, 0,
	0, 609, 610, 665, 611, 612, 613, 1736, 1737, 0,
	1769, 1770, 1771, 1779, 1780, 1781, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1772,
	1767, 0, 0, 0, 0, 0, 0, 1739, 0, 0,
	0, 0, 0, 0, 0, 0, 1785, 0, 1736, 1737,
	0, 1769, 1770, 1771, 1779, 1780, 1781, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1772, 1767, 1738, 0, 0, 0, 0, 0, 1739, 0,
	0, 0, 1758, 0, 0, 0, 0, 1785, 0, 0,
	0, 1755, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1738, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1758, 0, 0, 0, 0, 0, 0,
	0, 0, 1755, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1761, 1762, 1763, 1764,
	0, 0, 0, 0, 0, 0, 1744, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1761, 1762, 1763,
	1764, 0, 0, 1776, 0, 0, 1786, 1744, 0, 0,
	0, 0, 1766, 1768, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1782,
	0, 1783, 0, 0, 0, 0, 0, 0, 1753, 1754,
	0, 0, 0, 0, 1776, 0, 0, 1786, 0, 0,
	0, 0, 0, 1766, 1768, 0, 1774, 0, 0, 0,
	1736, 1737, 0, 1769, 1770, 1771, 1779, 1780, 1781, 0,
	1782, 1759, 1783, 0, 0, 0, 0, 0, 0, 1753,
	1754, 0, 1772, 1767, 0, 0, 0, 0, 0, 0,
	1739, 0, 0, 0, 0, 0, 0, 1774, 0, 1785,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1759, 1784, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1738, 0, 0, 0, 0,
	0, 1773, 0, 0, 0, 1758, 0, 0, 0, 0,
	0, 0, 0, 0, 1755, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1784, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1773, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1765, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1760, 0, 0, 0, 1761,
	1762, 1763, 1764, 0, 0, 0, 0, 0, 0, 1744,
	0, 0, 0, 0, 0, 1765, 0, 0, 0, 0,
	0, 1777, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1760, 1736, 1737, 0,
	1769, 1770, 1771, 1779, 1780, 1781, 1776, 0, 0, 1786,
	0, 0, 0, 0, 0, 1766, 1768, 0, 0, 1772,
	1767, 0, 1777, 0, 0, 0, 0, 1739, 0, 0,
	0, 0, 1782, 0, 1783, 0, 1785, 0, 0, 0,
	0, 1753, 1754, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1774,
	0, 0, 1738, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1758, 0, 1759, 0, 0, 0, 0, 0,
	0, 1755, 1775, 0, 0, 0, 0, 1750, 1751, 1757,
	1778, 1756, 1752, 0, 1749, 1747, 1748, 1740, 1741, 1742,
	1743, 1745, 1746, 0, 0, 0, 0, 4394, 0, 0,
	0, 0, 0, 0, 0, 0, 1784, 0, 0, 0,
	0, 0, 0, 1775, 0, 0, 0, 0, 1750, 1751,
	1757, 1778, 1756, 1752, 1773, 1749, 1747, 1748, 1740, 1741,
	1742, 1743, 1745, 1746, 0, 0, 0, 0, 4315, 0,
	0, 0, 0, 0, 0, 0, 1761, 1762, 1763, 1764,
	0, 0, 0, 0, 0, 0, 1744, 0, 1736, 1737,
	0, 1769, 1770, 1771, 1779, 1780, 1781, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1772, 1767, 0, 0, 0, 0, 0, 1765, 1739, 0,
	0, 0, 0, 1776, 0, 0, 1786, 1785, 0, 0,
	0, 0, 1766, 1768, 0, 0, 0, 0, 1760, 1736,
	1737, 0, 1769, 1770, 1771, 1779, 1780, 1781, 0, 1782,
	0, 1783, 0, 1738, 0, 0, 0, 0, 1753, 1754,
	0, 1772, 1767, 1758, 1777, 0, 0, 0, 0, 1739,
	0, 0, 1755, 0, 0, 0, 1774, 0, 1785, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1759, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1738, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1758, 0, 0, 0, 0, 0,
	0, 0, 0, 1755, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1784, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1761, 1762, 1763,
	1764, 1773, 0, 0, 0, 0, 0, 1744, 0, 0,
	0, 0, 0, 0, 0, 1775, 0, 0, 0, 0,
	1750, 1751, 1757, 1778, 1756, 1752, 0, 1749, 1747, 1748,
	1740, 1741, 1742, 1743, 1745, 1746, 0, 0, 0, 0,
	4280, 0, 0, 0, 1776, 0, 0, 1786, 1761, 1762,
	1763, 1764, 0, 1766, 1768, 0, 0, 0, 1744, 0,
	0, 0, 0, 0, 1765, 0, 0, 0, 0, 0,
	1782, 0, 1783, 0, 0, 0, 0, 0, 0, 1753,
	1754, 0, 0, 0, 0, 1760, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1776, 0, 1774, 1786, 0,
	0, 0, 0, 0, 1766, 1768, 0, 0, 0, 0,
	0, 1777, 1759, 0, 0, 0, 0, 0, 0, 0,
	0, 1782, 0, 1783, 0, 0, 0, 0, 0, 0,
	1753, 1754, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1774, 0,
	0, 0, 0, 0, 1784, 0, 0, 0, 0, 0,
	0, 0, 0, 1759, 0, 0, 0, 0, 0, 0,
	0, 0, 1773, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1784, 0, 0, 0, 0,
	0, 0, 1775, 0, 0, 0, 0, 1750, 1751, 1757,
	1778, 1756, 1752, 1773, 1749, 1747, 1748, 1740, 1741, 1742,
	1743, 1745, 1746, 0, 0, 1765, 0, 4279, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1736, 1737, 1760, 1769, 1770, 1771,
	1779, 1780, 1781, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1772, 1767, 0, 0,
	0, 0, 1777, 0, 1739, 0, 1765, 0, 0, 0,
	0, 0, 0, 1785, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1760, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1738,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1758,
	0, 0, 0, 1777, 0, 0, 0, 0, 1755, 0,
	0, 0, 1736, 1737, 0, 1769, 1770, 1771, 1779, 1780,
	1781, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1772, 1767, 0, 0, 0, 0,
	0, 0, 1739, 0, 0, 0, 0, 0, 0, 0,
	0, 1785, 0, 1775, 0, 0, 0, 0, 1750, 1751,
	1757, 1778, 1756, 1752, 0, 1749, 1747, 1748, 1740, 1741,
	1742, 1743, 1745, 1746, 0, 0, 0, 1738, 4110, 0,
	0, 0, 0, 1761, 1762, 1763, 1764, 1758, 0, 0,
	0, 0, 0, 1744, 0, 0, 1755, 0, 0, 0,
	0, 0, 0, 0, 1775, 0, 0, 0, 0, 1750,
	1751, 1757, 1778, 1756, 1752, 0, 1749, 1747, 1748, 1740,
	1741, 1742, 1743, 1745, 1746, 0, 0, 0, 0, 3955,
	1776, 0, 0, 1786, 0, 0, 0, 0, 0, 1766,
	1768, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1782, 0, 1783, 0,
	0, 0, 0, 0, 0, 1753, 1754, 0, 0, 0,
	0, 1761, 1762, 1763, 1764, 0, 0, 0, 0, 0,
	0, 1744, 0, 1774, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1759, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1776, 0,
	0, 1786, 0, 0, 0, 0, 0, 1766, 1768, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1784, 0, 0, 0, 1782, 0, 1783, 0, 0, 0,
	0, 0, 0, 1753, 1754, 0, 0, 0, 1773, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1774, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1759, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1765, 0, 0, 0, 0, 0, 0, 1784, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1760, 0, 0, 0, 1773, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1777, 0,
	0, 0, 0, 0, 1736, 1737, 0, 1769, 1770, 1771,
	1779, 1780, 1781, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1772, 1767, 0, 0,
	0, 0, 0, 0, 1739, 0, 0, 0, 0, 1765,
	0, 0, 0, 1785, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1760, 0, 0, 0, 0, 0, 0, 0, 0, 1738,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1758,
	0, 0, 0, 0, 0, 0, 1777, 0, 1755, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1775,
	0, 0, 0, 0, 1750, 1751, 1757, 1778, 1756, 1752,
	0, 1749, 1747, 1748, 1740, 1741, 1742, 1743, 1745, 1746,
	0, 0, 0, 0, 3892, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1761, 1762, 1763, 1764, 0, 0, 0,
	0, 0, 0, 1744, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1775, 0, 0,
	0, 0, 1750, 1751, 1757, 1778, 1756, 1752, 0, 1749,
	1747, 1748, 1740, 1741, 1742, 1743, 1745, 1746, 0, 0,
	1776, 0, 3891, 1786, 0, 0, 0, 0, 0, 1766,
	1768, 0, 0, 0, 0, 0, 1736, 1737, 0, 1769,
	1770, 1771, 1779, 1780, 1781, 0, 1782, 0, 1783, 0,
	0, 0, 0, 0, 0, 1753, 1754, 0, 1772, 1767,
	0, 0, 0, 0, 0, 0, 1739, 0, 0, 0,
	0, 0, 0, 1774, 0, 1785, 0, 1736, 1737, 0,
	1769, 1770, 1771, 1779, 1780, 1781, 0, 0, 1759, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1772,
	1767, 1738, 0, 0, 0, 0, 0, 1739, 0, 0,
	0, 1758, 0, 0, 0, 0, 1785, 0, 0, 0,
	1755, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1784, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1738, 0, 0, 0, 0, 0, 1773, 0,
	0, 0, 1758, 0, 0, 0, 0, 0, 0, 0,
	0, 1755, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1761, 1762, 1763, 1764, 0,
	0, 0, 0, 0, 0, 1744, 0, 0, 0, 0,
	0, 1765, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1760, 0, 0, 0, 1761, 1762, 1763, 1764,
	0, 0, 1776, 0, 0, 1786, 1744, 0, 0, 0,
	0, 1766, 1768, 0, 0, 0, 0, 0, 1777, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1782, 0,
	1783, 0, 0, 0, 0, 0, 0, 1753, 1754, 0,
	0, 0, 0, 1776, 0, 0, 1786, 0, 0, 0,
	0, 0, 1766, 1768, 0, 1774, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1782,
	1759, 1783, 0, 0, 0, 0, 0, 0, 1753, 1754,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1774, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1759, 1784, 0, 0, 0, 0, 0, 0, 1775,
	0, 0, 0, 0, 1750, 1751, 1757, 1778, 1756, 1752,
	1773, 1749, 1747, 1748, 1740, 1741, 1742, 1743, 1745, 1746,
	0, 0, 0, 0, 3890, 0, 0, 0, 0, 0,
	0, 0, 0, 1784, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1773, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1765, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1736, 1737, 0, 1769, 1770, 1771, 1779,
	1780, 1781, 0, 0, 1760, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1772, 1767, 0, 0, 0,
	0, 0, 0, 1739, 1765, 0, 0, 0, 0, 0,
	1777, 0, 1785, 0, 1736, 1737, 0, 1769, 1770, 1771,
	1779, 1780, 1781, 0, 0, 1760, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1772, 1767, 1738, 0,
	0, 0, 0, 0, 1739, 0, 0, 0, 1758, 0,
	0, 1777, 0, 1785, 0, 0, 0, 1755, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1738,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1758,
	0, 0, 0, 0, 0, 0, 0, 0, 1755, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1775, 0, 0, 0, 0, 1750, 1751, 1757, 1778,
	1756, 1752, 0, 1749, 1747, 1748, 1740, 1741, 1742, 1743,
	1745, 1746, 1761, 1762, 1763, 1764, 3566, 0, 0, 0,
	0, 0, 1744, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1775, 0, 0, 0, 0, 1750, 1751, 1757,
	1778, 1756, 1752, 0, 1749, 1747, 1748, 1740, 1741, 1742,
	1743, 1745, 1746, 1761, 1762, 1763, 1764, 3096, 0, 1776,
	0, 0, 1786, 1744, 0, 0, 0, 0, 1766, 1768,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1782, 0, 1783, 0, 0,
	0, 0, 0, 0, 1753, 1754, 0, 0, 0, 0,
	1776, 0, 0, 1786, 0, 0, 0, 0, 0, 1766,
	1768, 0, 1774, 0, 0, 0, 1736, 1737, 0, 1769,
	1770, 1771, 1779, 1780, 1781, 0, 1782, 1759, 1783, 0,
	0, 0, 0, 0, 0, 1753, 1754, 0, 1772, 1767,
	0, 0, 0, 0, 0, 0, 1739, 0, 0, 0,
	0, 0, 0, 1774, 0, 1785, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1759, 1784,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1738, 0, 0, 0, 0, 0, 1773, 0, 0,
	0, 1758, 0, 0, 0, 0, 0, 0, 0, 0,
	1755, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1784, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1773, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1765, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1760, 0, 0, 0, 1761, 1762, 1763, 1764, 0,
	0, 0, 0, 0, 0, 1744, 0, 0, 0, 0,
	0, 1765, 0, 0, 0, 0, 0, 1777, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1760, 1736, 1737, 0, 1769, 1770, 1771, 1779,
	1780, 1781, 1776, 0, 0, 1786, 0, 0, 0, 0,
	0, 1766, 1768, 0, 0, 1772, 1767, 0, 1777, 0,
	0, 0, 0, 1739, 0, 0, 0, 0, 1782, 0,
	1783, 0, 1785, 0, 0, 0, 0, 1753, 1754, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1774, 0, 0, 1738, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1758, 0,
	1759, 0, 0, 0, 0, 0, 0, 1755, 1775, 0,
	0, 0, 0, 1750, 1751, 1757, 1778, 1756, 1752, 0,
	1749, 1747, 1748, 1740, 1741, 1742, 1743, 1745, 1746, 0,
	0, 0, 0, 3095, 0, 0, 0, 0, 0, 0,
	0, 0, 1784, 0, 0, 0, 0, 0, 0, 1775,
	0, 0, 0, 0, 1750, 1751, 1757, 1778, 1756, 1752,
	1773, 1749, 1747, 1748, 1740, 1741, 1742, 1743, 1745, 1746,
	0, 0, 0, 0, 3094, 0, 0, 0, 0, 0,
	0, 0, 1761, 1762, 1763, 1764, 0, 0, 0, 0,
	0, 0, 1744, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1736, 1737, 0, 1769, 1770, 1771, 1779,
	1780, 1781, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1765, 0, 1772, 1767, 0, 0, 1776,
	0, 0, 1786, 1739, 0, 0, 0, 0, 1766, 1768,
	0, 0, 1785, 0, 1760, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1782, 0, 1783, 0, 0,
	0, 0, 0, 0, 1753, 1754, 0, 0, 1738, 0,
	1777, 0, 0, 0, 0, 0, 0, 0, 1758, 0,
	0, 0, 1774, 0, 0, 0, 0, 1755, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1759, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1784,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1773, 0, 0,
	0, 0, 1761, 1762, 1763, 1764, 0, 0, 0, 0,
	0, 1775, 1744, 4535, 0, 0, 1750, 1751, 1757, 1778,
	1756, 1752, 0, 1749, 1747, 1748, 1740, 1741, 1742, 1743,
	1745, 1746, 0, 0, 0, 0, 3093, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1776,
	0, 0, 1786, 0, 0, 0, 0, 0, 1766, 1768,
	1765, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1782, 0, 1783, 0, 0,
	0, 1760, 0, 0, 1753, 1754, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1774, 0, 0, 1736, 1737, 1777, 1769, 1770,
	1771, 1779, 1780, 1781, 0, 0, 0, 1759, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1772, 1767, 0,
	0, 0, 0, 0, 0, 1739, 0, 0, 0, 0,
	0, 0, 0, 0, 1785, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1784,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1738, 0, 0, 0, 0, 0, 0, 1773, 0, 0,
	1758, 0, 0, 0, 0, 0, 0, 0, 0, 1755,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1775, 4534,
	0, 0, 0, 1750, 1751, 1757, 1778, 1756, 1752, 0,
	1749, 1747, 1748, 1740, 1741, 1742, 1743, 1745, 1746, 0,
	0, 3060, 0, 0, 0, 0, 0, 0, 0, 0,
	1765, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1760, 0, 0, 1761, 1762, 1763, 1764, 0, 0,
	0, 0, 0, 0, 1744, 0, 3156, 0, 0, 0,
	3155, 0, 0, 0, 0, 0, 0, 1777, 0, 0,
	0, 0, 0, 0, 1736, 1737, 0, 1769, 1770, 1771,
	1779, 1780, 1781, 0, 0, 0, 0, 0, 0, 0,
	0, 1776, 0, 0, 1786, 0, 1772, 1767, 0, 0,
	1766, 1768, 3031, 0, 1739, 0, 0, 0, 0, 0,
	0, 0, 0, 1785, 0, 0, 0, 1782, 0, 1783,
	0, 0, 0, 0, 0, 0, 1753, 1754, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1738,
	0, 0, 0, 0, 1774, 0, 0, 0, 0, 1758,
	0, 0, 0, 0, 0, 0, 0, 0, 1755, 1759,
	0, 0, 0, 0, 0, 0, 0, 0, 1775, 0,
	0, 0, 0, 1750, 1751, 1757, 1778, 1756, 1752, 0,
	1749, 1747, 1748, 1740, 1741, 1742, 1743, 1745, 1746, 0,
	0, 0, 0, 0, 0, 0, 0, 3032, 0, 0,
	0, 1784, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1773,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1761, 1762, 1763, 1764, 0, 0, 0,
	0, 0, 0, 1744, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1776, 0, 1765, 1786, 0, 0, 0, 0, 0, 1766,
	1768, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1760, 0, 0, 1782, 0, 1783, 0,
	0, 0, 0, 0, 0, 1753, 1754, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2599, 0, 1777,
	0, 0, 0, 1774, 1736, 1737, 0, 1769, 1770, 1771,
	1779, 1780, 1781, 0, 0, 0, 0, 0, 1759, 0,
	0, 0, 0, 0, 0, 0, 1772, 1767, 0, 0,
	0, 2598, 0, 0, 1739, 0, 0, 0, 0, 0,
	0, 0, 0, 1785, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1784, 0, 0, 0, 0, 0, 0, 0, 0, 1738,
	0, 0, 0, 0, 0, 0, 0, 0, 1773, 1758,
	0, 0, 0, 0, 0, 0, 0, 0, 1755, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1775, 0, 0, 0, 0, 1750, 1751, 1757, 1778, 1756,
	1752, 0, 1749, 1747, 1748, 1740, 1741, 1742, 1743, 1745,
	1746, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1765, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1736, 1737, 0, 1769, 1770, 1771, 1779,
	1780, 1781, 1760, 1761, 1762, 1763, 1764, 0, 0, 0,
	0, 0, 0, 1744, 0, 1772, 1767, 0, 0, 0,
	0, 0, 0, 1739, 0, 0, 0, 0, 1777, 0,
	0, 0, 1785, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1776, 0, 0, 1786, 0, 0, 0, 0, 1738, 1766,
	1768, 0, 0, 0, 0, 0, 0, 0, 1758, 0,
	0, 0, 0, 0, 0, 0, 1782, 1755, 1783, 0,
	0, 0, 0, 0, 0, 1753, 1754, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1774, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1759, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1775,
	0, 0, 0, 0, 1750, 1751, 1757, 1778, 1756, 1752,
	0, 1749, 1747, 1748, 1740, 1741, 1742, 1743, 1745, 1746,
	0, 0, 1761, 1762, 1763, 1764, 0, 0, 0, 0,
	1784, 0, 1744, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1773, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1776,
	0, 0, 1786, 0, 0, 0, 0, 0, 1766, 1768,
	0, 0, 0, 0, 0, 1736, 1737, 0, 1769, 1770,
	1771, 1779, 1780, 1781, 0, 1782, 0, 1783, 0, 0,
	0, 0, 0, 0, 1753, 1754, 0, 1772, 1767, 0,
	0, 1765, 0, 0, 0, 1739, 0, 0, 0, 0,
	0, 0, 1774, 0, 1785, 0, 0, 0, 0, 0,
	0, 0, 1760, 0, 0, 0, 0, 1759, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1738, 0, 0, 0, 0, 0, 0, 0, 1777, 0,
	1758, 0, 0, 0, 0, 0, 0, 0, 0, 1755,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1784,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1773, 1033, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1761, 1762, 1763, 1764, 0, 0,
	0, 0, 0, 0, 1744, 0, 0, 0, 0, 1775,
	1765, 0, 0, 0, 1750, 1751, 1757, 1778, 1756, 1752,
	0, 1749, 1747, 1748, 1740, 1741, 1742, 1743, 1745, 1746,
	0, 1760, 1736, 1737, 0, 1769, 1770, 1771, 1779, 1780,
	1781, 1776, 0, 0, 1786, 0, 0, 0, 0, 0,
	1766, 1768, 0, 0, 1772, 1767, 0, 1777, 0, 0,
	0, 0, 1739, 0, 0, 0, 0, 1782, 0, 1783,
	0, 1785, 0, 0, 0, 0, 1753, 1754, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1774, 0, 0, 1738, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1758, 0, 1759,
	0, 0, 0, 0, 0, 0, 1755, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1784, 0, 0, 0, 0, 0, 0, 1775, 0,
	0, 0, 0, 1750, 1751, 1757, 1778, 1756, 1752, 1773,
	1749, 1747, 1748, 1740, 1741, 1742, 1743, 1745, 1746, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1761, 1762, 1763, 1764, 0, 0, 0, 0, 0,
	0, 1744, 0, 0, 0, 0, 0, 3162, 0, 0,
	0, 0, 1736, 1737, 0, 1769, 1770, 1771, 1779, 1780,
	1781, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1765, 0, 1772, 1767, 0, 0, 1776, 3157,
	0, 1786, 1739, 0, 0, 0, 0, 1766, 1768, 0,
	0, 1785, 0, 1760, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1782, 0, 1783, 0, 0, 0,
	0, 0, 0, 1753, 1754, 0, 0, 1738, 0, 1777,
	0, 0, 0, 0, 0, 0, 0, 1758, 0, 0,
	0, 1774, 0, 0, 0, 0, 1755, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1759, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3547, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1784, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1773, 0, 0, 0,
	0, 1761, 1762, 1763, 1764, 0, 0, 0, 0, 0,
	1775, 1744, 0, 0, 0, 1750, 1751, 1757, 1778, 1756,
	1752, 0, 1749, 1747, 1748, 1740, 1741, 1742, 1743, 1745,
	1746, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1776, 0,
	0, 1786, 0, 0, 0, 0, 0, 1766, 1768, 1765,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1782, 0, 1783, 0, 0, 0,
	1760, 0, 0, 1753, 1754, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1774, 0, 0, 1736, 1737, 1777, 1769, 1770, 1771,
	1779, 1780, 1781, 0, 0, 0, 1759, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1772, 1767, 0, 0,
	0, 0, 0, 0, 1739, 0, 0, 0, 0, 0,
	0, 0, 0, 1785, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1784, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1738,
	0, 0, 0, 0, 0, 0, 1773, 0, 0, 1758,
	0, 0, 0, 0, 0, 0, 0, 0, 1755, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1775, 0, 0,
	0, 0, 1750, 1751, 1757, 1778, 1756, 1752, 0, 1749,
	1747, 1748, 1740, 1741, 1742, 1743, 1745, 1746, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1765,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1760, 0, 0, 1761, 1762, 1763, 1764, 0, 0, 0,
	0, 0, 0, 1744, 0, 1736, 1737, 0, 1769, 1770,
	1771, 1779, 1780, 1781, 0, 0, 1777, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1772, 1767, 0,
	0, 0, 3097, 0, 0, 1739, 0, 0, 0, 0,
	1776, 0, 0, 1786, 1785, 0, 0, 0, 0, 1766,
	1768, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1782, 0, 1783, 0,
	1738, 0, 0, 0, 0, 1753, 1754, 0, 0, 0,
	1758, 0, 0, 0, 0, 0, 0, 0, 0, 1755,
	0, 0, 0, 1774, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1759, 0,
	0, 0, 0, 0, 0, 0, 0, 1775, 0, 0,
	0, 0, 1750, 1751, 1757, 1778, 1756, 1752, 0, 1749,
	1747, 1748, 1740, 1741, 1742, 1743, 1745, 1746, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1784, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1761, 1762, 1763, 1764, 1773, 0,
	0, 0, 0, 0, 1744, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3124, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1736, 1737, 0, 1769, 1770, 1771, 1779, 1780,
	1781, 1776, 0, 0, 1786, 0, 0, 0, 0, 0,
	1766, 1768, 0, 0, 1772, 1767, 0, 0, 0, 0,
	0, 1765, 1739, 0, 0, 0, 0, 1782, 0, 1783,
	0, 1785, 0, 0, 0, 0, 1753, 1754, 0, 0,
	0, 0, 1760, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1774, 0, 0, 1738, 1736, 1737,
	0, 1769, 1770, 1771, 1779, 1780, 1781, 1758, 1777, 1759,
	0, 0, 0, 0, 0, 0, 1755, 0, 0, 0,
	0, 1767, 0, 0, 0, 0, 0, 0, 1739, 0,
	0, 0, 0, 0, 0, 0, 0, 1785, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1784, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1738, 0, 0, 0, 0, 0, 1773,
	0, 0, 0, 1758, 0, 0, 0, 0, 0, 0,
	0, 0, 1755, 0, 0, 0, 0, 0, 0, 0,
	0, 1761, 1762, 1763, 1764, 0, 0, 0, 0, 0,
	0, 1744, 0, 0, 0, 0, 0, 0, 0, 1775,
	0, 0, 0, 0, 1750, 1751, 1757, 1778, 1756, 1752,
	0, 1749, 1747, 1748, 1740, 1741, 1742, 1743, 1745, 1746,
	0, 0, 1765, 0, 0, 0, 0, 0, 1776, 0,
	0, 1786, 0, 0, 0, 0, 0, 1766, 1768, 0,
	0, 0, 0, 1760, 0, 0, 0, 1761, 1762, 1763,
	1764, 0, 0, 0, 1782, 0, 1783, 1744, 0, 0,
	0, 0, 0, 1753, 1754, 0, 0, 0, 0, 1777,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1774, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1776, 0, 1759, 1786, 0, 0,
	0, 0, 0, 1766, 1768, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1782, 0, 1783, 0, 0, 0, 0, 0, 0, 1753,
	1754, 0, 0, 0, 0, 0, 0, 0, 1784, 0,
	0, 0, 0, 0, 0, 0, 0, 1774, 0, 0,
	0, 0, 0, 0, 0, 0, 1773, 0, 0, 0,
	0, 0, 1759, 0, 0, 0, 0, 0, 0, 0,
	1775, 0, 0, 0, 0, 1750, 1751, 1757, 1778, 1756,
	1752, 0, 1749, 1747, 1748, 1740, 1741, 1742, 1743, 1745,
	1746, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1784, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1765,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1760, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1777, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1765, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1760, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1777, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1775, 0, 0,
	0, 0, 1750, 1751, 1757, 1778, 1756, 1752, 0, 1749,
	1747, 1748, 1740, 1741, 1742, 1743, 1745, 1746, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1775, 0, 0, 0, 0, 1750, 1751,
	1757, 1778, 1756, 1752, 0, 1749, 1747, 1748, 1740, 1741,
	1742, 1743, 1745, 1746,
}

var sqlPact = [...]int{
	11605, -1000, -1000, -1000, -1000, 208, -1000, -1000, 205, 203,
	202, 201, 199, 192, 191, 185, 183, 180, 175, -1000,
	-1000, -1000, -1000, -1000, -1000, 174, -1000, -1000, 172, -1000,
	171, 170, 168, -1000, -1000, 167, -1000, 166, -1000, -1000,
	-1000, -1000, 164, 158, 157, 88513, 87970, 89049, 2290, 109029,
	95509, 2035, 79310, 108486, 78767, 107943, 2132, 8337, 107400, 2733,
	152, -1000, 106857, 151, 147, 144, -1000, 106314, -1000, 1873,
	-1000, 143, -1000, 2891, 64077, 142, 141, 139, 2365, 137,
	-1000, 136, 135, -1000, -1000, 133, -1000, 10985, 1501, -1000,
	129, 128, -1000, 282, 93344, 122, 121, 2404, 120, 118,
	63532, 112, 108, 2381, 2942, -1000, -1000, 2017, -1000, -1000,
	107, 105, 104, 103, 102, 99, 98, 97, 96, 94,
	93, -1000, 90, 88, 87, 86, 80, -1000, 79, 78,
	75, -1000, 74, -1000, 73, 72, 70, 69, 67, 64,
	63, 62, 60, 57, 54, 53, 52, 44, 16161, -1000,
	1951, 1686, 1682, 1680, 1678, 1672, 1019, 43, 41, 39,
	37, 34, 32, 30, 29, 27, 23, 22, 20, 19,
	16, 15, 14, 11, 163, 8, 7, 6, 5, 4,
	3, 0, 2722, -1000, 1569, 1138, 29792, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 114925, 109565, -1, -80, -2, -1000, 3327,
	1060, 52649, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	288, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 515, 2082,
	798, -1000, -1000, -1000, 105778, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2287, -57, -1000, 2009, -1000, -1000, -1000,
	-1000, -1000, 791, -1000, 2284, 293, 2222, -1000, -1000, -1000,
	3367, 2437, 3775, 3774, 3772, 3768, 3767, 114389, 1817, 3766,
	2504, 3765, 3762, 3761, 3760, 3758, 3757, 3751, -1000, 87427,
	1065, 86884, 86341, 3389, 105242, 85798, 104699, 72810, 44802, 1056,
	3366, -1000, -1000, -1000, -1000, -1000, -1000, 109565, -1000, 1063,
	-1000, -1000, 3744, 3742, 2074, 790, 94966, -1000, 2003, -1000,
	967, 31499, -1000, 1283, -1000, 31499, 284, -1000, -1000, -1000,
	-1000, -1000, -1000, 3737, 3736, 3734, 3732, 3731, -1000, -1000,
	78224, 22912, 77681, 77138, 104156, 22358, 85255, 84712, 3730, 103613,
	72256, 1061, 1445, -1000, -1000, -1000, -1000, -1000, -1000, -26,
	70040, 3546, 109565, -1000, 263, -1000, -1000, -1000, -1000, -1000,
	-1000, 44221, 954, 43640, 953, 43059, 934, -1000, -1000, -1000,
	-1000, 71702, -1000, 103070, 2432, 3728, 3727, 1155, 3725, 3258,
	1810, 3723, 1902, 1282, 3722, 3718, 3714, 3712, 3710, 3706,
	3705, 1492, 102527, 3033, 1523, 101984, 1790, 71148, 1059, 84169,
	89049, 2692, 101441, 1485, 1476, -1000, -1000, -1000, -1000, 3104,
	2939, 2937, 1356, -1000, -1000, -1000, -1000, 55358, 6401, 6353,
	7589, 100898, 58118, 89049, 89049, -1000, -1000, -1000, -1000, -1000,
	42478, 743, 41897, 987, -1000, -1000, 55910, 2989, -1000, -1000,
	-1000, -1000, 41316, 707, 40735, 958, 109565, -1000, 3032, 1921,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2858, 1642, 3591, 2769,
	70594, 2051, 1434, 3328, 3095, 3092, 1548, 3091, 3704, 2578,
	3090, 3089, 3088, 3072, 3048, 1631, 2574, 434, 29211, 3015,
	1694, 40154, 1641, 1549, 3025, 3024, 3589, 1984, 2021, 2097,
	76595, 3703, 3699, 3294, 3023, 3022, 2806, 3008, -1000, 2987,
	-1000, -1000, -1000, -1000, 1497, -1000, -1000, -1000, -1000, 79846,
	-1000, -1000, 1831, -1000, -1000, 1831, -1000, -1000, -1000, -1000,
	-1000, 1390, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1569, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2016, -1000, 2054, -1000, -1000, 2569,
	3302, 3302, 3302, 3364, 483, 461, -1000, 163, -1000, -1000,
	120861, -1000, -1000, 45371, 45371, 45371, 45371, 45371, 45371, 45371,
	2137, -1000, 788, -1000, -1000, 847, -1000, 787, 642, -1000,
	-1000, -1000, -1000, -1000, -1000, 786, -1000, -1000, -1000, -1000,
	-1000, -1000, 3546, -1000, 25737, -1000, -1000, -1000, 499, 783,
	45371, -1000, -1000, 3610, 3609, 945, -1000, 253, 993, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 3031, 781, 779, -1000, 777, 776, 761, 758, 754,
	-1000, -1000, -1000, 750, 749, 747, 744, 742, 741, 740,
	736, -1000, 2041, -1000, -1000, -1000, -1000, -1000, -1000, 677,
	674, 674, 674, -1000, 1054, -1000, -1000, -1000, 318, 670,
	310, 669, 666, 665, -1000, 732, 729, 728, 727, 726,
	725, 723, 722, 720, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1050, -1000, -1000, -1000, -1000, -27, 109565, -1000, 515,
	-27, -1000, -1000, 718, -1000, 33787, 33787, 33787, -1000, -1000,
	2283, 45371, -1000, 2343, -1000, -16, -16, 897, 54272, -1000,
	51563, 897, 840, 862, 59743, -1000, 2986, -1000, -1000, 710,
	248, -1000, -1000, -1000, -1000, 23464, 2978, 109565, 109565, 89049,
	89049, 89049, 3698, 3132, 45371, -1000, -1000, 67859, 109565, 89585,
	-1000, -1000, 3494, 64613, 67323, 109565, 3030, 66787, 3695, -1000,
	-1000, -1000, -1000, -1000, 3173, 3694, 3692, 3691, -1000, 109565,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 215, 3172, -1000,
	-1000, 92801, 215, 3166, -1000, 215, 3165, -1000, 92265, -1000,
	-1000, 2230, 3162, -1000, -1000, 218, 3160, -1000, -1000, -1000,
	216, 3158, -1000, -1000, 247, -65, 3156, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 120861,
	-1000, -1000, -1000, 66244, -1000, 3293, -1000, -1000, 109565, -1000,
	45371, -1000, 3490, 1800, 73903, 3410, -44, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2475, 2573, 1239, 2314, -1000, 3208,
	1876, -1000, 31499, 3244, -1000, -1000, -1000, 246, 23464, -1000,
	-1000, -1000, -1000, -1000, -1000, 2516, 3155, 1456, -1000, 2311,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2144, 3154,
	-1000, 2181, 3152, 2114, -1000, -1000, 2519, -1000, 3280, -1000,
	-1000, 2138, 3151, -15, -1000, -1000, 2508, -1000, -1000, 1986,
	-1000, 1017, 3149, -1000, 83626, 57566, 55910, 70040, -31, -1000,
	-1000, -1000, -1000, -203, -1000, 21804, 120861, -1000, -1000, -1000,
	-1000, 1774, 120861, 930, -1000, -1000, 3142, -1000, 120861, 929,
	-1000, -1000, 3141, -1000, 3019, -1000, -1000, 2374, -1000, -1000,
	3690, -1000, -1000, 3686, -1000, 3685, 3683, 3682, -1000, 1753,
	1996, 3677, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	83090, 2282, -1000, -1000, 82004, 3018, -1000, 2372, 3409, -1000,
	82547, 1058, -1000, 1017, 2371, -1000, 91729, 1023, 2370, -1000,
	3674, 3385, 2735, 1017, 2369, -1000, -1000, -1000, -1000, -1000,
	1078, -1000, 61366, -1000, 61366, -1000, 1608, -1000, 113853, -16,
	89049, 3546, -1000, -62, -1000, -1000, -1000, 1060, -1000, 54815,
	-1000, 54815, 94423, 73362, 1007, 789, 62989, 120861, -1000, -1000,
	-1000, -1000, 120861, -1000, -1000, -1000, -242, 2768, -1000, 73362,
	57014, 120861, -1000, -1000, -1000, -1000, 120861, -1000, -1000, -1000,
	73362, 82004, -1000, 100355, 81468, -1000, -1000, 1491, 2543, -1000,
	-1000, -1000, 73362, 1334, 73362, 73362, 73362, -1000, 99812, -1000,
	-1000, 2046, 1409, 3288, 2040, 89049, -1000, 1886, -1000, -1000,
	-1000, 3314, 109565, -1000, -1000, 3017, -1000, 65690, 91193, -1000,
	90657, -1000, 90121, -1000, 89049, -1000, 89049, -1000, 3670, 3669,
	3668, -1000, -1000, 3667, -1000, 3666, 3305, -1000, 120861, 3301,
	-1000, 3665, 3405, 3015, 120861, -1000, 3121, 1698, 1693, 109565,
	-1000, -1000, 109565, -1000, 109565, -1000, -1000, -1000, 1571, -1000,
	-1000, 2473, -1000, -1000, -1000, -1000, 89049, 1439, -1000, -1000,
	-1000, -1000, -1000, -1000, 3010, 3664, 1735, -1000, 1804, -1000,
	2976, 3311, -1000, 1487, -1000, -1000, 233, -1000, -1000, -44,
	-1000, 113317, -1000, 2569, -1000, 109565, -1000, 2468, 3005, 3013,
	1671, 2299, 2651, -1000, 39573, 2544, 48785, 2308, 163, -1000,
	-1000, 163, 163, 30930, -1000, -1000, 64613, 64613, 23464, 1405,
	45371, 45371, 45371, 45371, 45371, 45371, 45371, 45371, 45371, 45371,
	45371, 45371, 45371, 45371, 45371, 45371, 45371, 45371, 45371, 45371,
	45371, 45371, 45371, 45371, 45371, 45371, 45371, 45371, 45371, 45371,
	45371, 45371, 45371, 45371, 45371, 2243, 45371, 1378, 45371, 45371,
	45371, 45371, 1724, -1000, -1000, 1971, 566, 2044, -1000, 3530,
	3530, 3530, 535, 535, 120927, 120927, 616, 3662, 847, -1000,
	45371, -1000, 84, 45371, 24018, -1000, 461, 9198, 2450, -1000,
	460, 24599, -1000, -1000, -1000, 25737, 642, 38992, 45371, 1040,
	120861, -1000, -1000, 1706, 3562, 21251, 2996, 2801, 709, 830,
	825, 28630, 28049, 27468, 26887, 792, 45371, 45371, 45371, 45371,
	45371, 45371, 45371, 45371, -1000, -1000, 3581, -1000, 3562, -1000,
	-1000, -1000, -1000, 3562, 1360, 1331, 3562, -1000, 3562, 3562,
	8677, 8677, 38423, 37842, 37261, 49354, 36680, 45371, 26306, 36099,
	35518, -1000, 109565, -27, 3486, 45371, 280, -1000, 119483, -1000,
	280, 280, 706, -63, 120861, 2703, 2703, 53190, 2392, 2165,
	2165, 2165, -1000, 897, 16798, 897, 98735, 2189, 897, 897,
	243, 286, 458, 51022, 2343, 98735, 831, 704, -3, -4,
	-5, -1000, -1000, -6, -9, -1000, -1000, 89049, 686, 24018,
	23464, 242, 1537, -68, 2645, 2636, 2635, -1000, 2633, -1000,
	1808, -69, 1374, 89049, 109565, 3661, -208, -1000, 1106, -70,
	-1000, 1095, 239, 3562, -1000, -1000, -1000, -1000, -1000, 3660,
	3659, -1000, 1045, 684, 681, 374, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 677, 674, 674, 674, -1000, 318,
	670, 310, 669, 666, 665, -1000, -1000, -1000, -1000, -1000,
	2973, 89049, 109565, 3658, -203, 89585, -98, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 109565, -1000, -1000, -1000, 3657,
	-1000, 89049, -1000, -1000, 89049, 215, 3138, -1000, 89049, -1000,
	89049, 212, 3136, -1000, -1000, 109565, -1000, 89049, 89049, -1000,
	109565, 109565, 109565, 73362, 73362, 222, -1000, 89049, 933, -79,
	1164, -44, -1000, -1000, -1000, 1831, -1000, 1717, -1000, -1000,
	-1000, -1000, -1000, -1000, 1498, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 945, -1000, -1000, -1000, -1000, -1000, -1000,
	3538, 3535, -28, -1000, -1000, 23464, -1000, -47, 1823, 1864,
	1373, -1000, 76052, 2456, 3283, 3656, 2706, 3269, 1606, -1000,
	1565, -1000, 3378, 79846, 3446, 3452, 733, -1000, 2968, -1000,
	-1000, 964, 1732, 1726, 1371, 1370, 79846, 2181, -1000, 64613,
	-1000, 2619, 3359, 1443, 1441, 1443, 1443, 1419, -1000, 79846,
	1715, 1355, 1354, 1353, 1942, 1937, -1000, -1000, 2018, -1000,
	1348, 1346, 882, 1931, -1000, -48, 3444, 3442, 184, -1000,
	2967, 1345, -1000, -1000, -1000, 3358, 89049, 23464, 1577, 1576,
	1555, 1711, 1343, -30, -1000, 3422, 1326, 1323, -1000, 5704,
	-1000, 73362, 2065, 3135, 2767, 927, 2765, -1000, -1000, -1000,
	927, -31, 70040, 109565, 238, -1000, 84, 45371, 45371, 84,
	45371, 84, 3399, 3134, -1000, -1000, -1000, -1000, -1000, 3653,
	1966, 2499, -1000, -1000, 663, 2368, 2938, 109565, 2673, -32,
	89049, -1000, 65154, 3131, 68400, 2181, 2367, -1000, -1000, 80925,
	-1000, 3130, 515, 2362, -1000, 689, 3652, 3129, -1000, 112781,
	-1000, 3293, 1421, 3126, 1100, 844, 3485, -1000, 844, 61907,
	-1000, 109565, -1000, -16, 5523, 74980, -85, -86, 457, -1000,
	99276, 109565, 1099, 75516, 109565, 3233, 1015, 55910, -1000, 55910,
	-87, -242, 2764, 1515, 1007, 1007, 927, -1000, 927, -1000,
	89049, 3011, -1000, -1000, 73362, 1007, 1007, 1007, -1000, -1000,
	-1000, -1000, 3651, 3650, 3649, 3648, -1000, -1000, 1016, 89049,
	109565, 89049, -1000, 235, -1000, 109565, -1000, 109565, 109565, 89049,
	-1000, 1016, 109565, 1016, 109565, 1016, 109565, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 84, 45371, -1000, -1000, 3647, 1629,
	-1000, 3009, -1000, 3006, -1000, 26, -1000, -1000, -1000, -1000,
	-1000, -1000, 1973, -1000, -1000, -1000, -1000, 89049, 89049, 89049,
	89049, 109565, 3221, -1000, 109565, 3219, 89049, -1000, 79846, -1000,
	2468, 3005, -1000, -1000, -1000, -1000, -1000, -1000, 1597, 2237,
	-1000, 2567, -1000, 1590, -1000, -1000, -1000, 120861, 49906, -1000,
	-1000, 120861, 1803, -1000, 48216, 47647, -1000, -1000, 1709, 89049,
	2653, -1000, 2653, -186, -1000, 119223, 2551, 89049, -1000, -1000,
	-1000, -1000, -1000, 963, 1333, 1333, 1324, 1324, 1324, 1324,
	3401, 369, 480, 1985, 4789, 4789, 5585, 5585, 5585, 5585,
	5585, 4789, 344, 535, 535, 344, 344, 344, 344, 344,
	535, 535, 535, 4789, 4789, 4789, 120927, 5561, 10312, 45371,
	45371, 1313, 1945, 566, 9003, 45371, 607, 607, 607, 607,
	-1000, 2178, -1000, -1000, -1000, -1000, 2934, 662, 49354, 49354,
	-1000, -1000, -1000, -1000, 25168, 45371, -1000, -1000, -1000, -1000,
	34937, -1000, -1000, 118592, -315, 456, -181, -37, -1000, 45371,
	45371, 45371, 443, -1000, 226, 45371, 109565, -1000, 15530, 824,
	-145, -1000, -92, 1446, -1000, 45371, -1000, -1000, 1305, -1000,
	1296, 1294, 1285, -1000, 661, 442, -1000, 217, -1000, 2156,
	659, 657, 45371, -1000, -1000, -1000, -1000, -1000, 118395, -1000,
	-1000, 118173, -1000, -1000, 118132, -1000, -1000, 117766, -1000, -1000,
	-1000, 120664, 15103, 14091, 12624, 8457, 12182, 11346, -95, 436,
	-100, 435, 962, 960, 427, 426, 425, -101, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-103, 424, -1000, 2931, -181, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 423, -1000, 419, -1000, 120493, -181, 418,
	528, -1000, 49354, 49354, 49354, -1000, 415, -1000, 119034, -1000,
	120231, 34368, 34368, 34368, 414, 120051, 45371, -181, -109, -1000,
	-116, -1000, -1000, 539, -117, 1021, 33787, 52106, 23464, -1000,
	1021, 1021, 45371, -1000, 45371, 2592, -1000, -1000, -1000, -1000,
	2552, 2037, 2703, 53190, -1000, -1000, -1000, -1000, 98735, -1000,
	3546, 2880, -1000, 98735, -1000, -1000, 109565, 515, -1000, 98735,
	98735, 23464, 897, -1000, 897, 98735, 738, -1000, -1000, -1000,
	-1000, -1000, 413, 58659, -37, 213, 23464, 1017, -1000, 2652,
	2652, 2652, 2652, -1000, -1000, 109565, 1228, -34, -108, -1000,
	3511, -1000, 2066, -1000, 64613, -1000, 845, 1161, 23464, -1000,
	-1000, -1000, 653, -1000, 3562, 3562, -1000, 3562, 109565, 2929,
	154, -1000, 132, 68400, 68400, 3646, -1000, -1000, 215, -1000,
	89049, 215, 215, -1000, 89049, 89049, 2230, -1000, 218, -1000,
	216, -1000, -1000, -65, -1000, 1034, 31499, -1000, 1831, -1000,
	-1000, 1575, -1000, 1959, -1000, 1328, -1000, -1000, -1000, -1000,
	31499, -1000, 2108, 109565, 109565, 89049, -1000, 109565, -1000, 2130,
	68400, -1000, 2357, 112245, 2353, 64613, 109565, -1000, -1000, 652,
	984, 2537, 2530, 1096, 109565, 109565, 2526, 111709, 111173, -1000,
	3645, 109565, 2119, 45371, 3356, 2201, 2458, 84, 84, -1000,
	-1000, 84, 650, 1316, 89049, 89049, 109565, 68400, 89049, 1989,
	-1000, -1000, -1000, -1000, -1000, 80382, -1000, -1000, 3578, 3576,
	-1000, 1443, -1000, -1000, -1000, 1443, 2181, 1903, 109565, 68400,
	89049, 68400, 109565, 109565, -1000, 1705, 109565, 1461, -1000, 882,
	2085, 84, 84, -1000, -1000, 84, 647, 23464, 1955, -1000,
	2985, 109565, 3608, 110637, 3607, 109565, 109565, 109565, 68400, 3308,
	109565, 109565, 68400, 5704, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 69504, 1109, 1017, 1699, 1226,
	1225, 79846, 55910, 1013, 55910, 2726, -1000, -1000, 20698, -1000,
	120861, 120861, -1000, 120861, -1000, 65154, 109565, -1000, 1057, 109565,
	75516, 980, 3120, 60825, -203, 1007, 73362, 89049, -32, 2673,
	109565, -1000, -1000, 2181, 3117, 515, 2356, -1000, 73362, 3484,
	3114, 646, 3644, 3642, -1000, 89049, 2279, 2354, -1000, -1000,
	110101, 3099, 882, 109565, 1021, 53190, 1917, -1000, 59202, 1074,
	109565, 1851, 109, -1000, -1000, -1000, 10, 109565, -1000, 861,
	-1000, -1000, 5523, 5523, 1007, -211, 644, -1000, 922, 921,
	56462, 73362, -118, -1000, -1000, -1000, -1000, 2353, 89049, 109565,
	1304, 2734, 109565, -123, -1000, 211, 643, -1000, 3045, -1000,
	-242, -1000, 1015, 55910, 2925, 2924, -1000, -1000, 1033, -1000,
	1483, 1007, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -17, 109565, -203, -203, -33, -34, -1000,
	1016, -1000, 1016, -1000, 1016, -1000, 120861, -1000, -1000, 1621,
	1614, 109565, -1000, 23464, 109565, 89049, 23464, 89049, 3002, 2994,
	-1000, -1000, -1000, 109565, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1115, -1000, 1803, 2235, -1000, 642, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2453, -1000, -35, 30930,
	937, -1000, -1000, 89049, -22, 45371, 45371, 7640, 7432, 45371,
	49354, 49354, -1000, 45371, 589, -1000, -1000, -1000, -1000, -1000,
	2923, 639, 45371, 64613, 6908, 6725, -1000, 409, 9700, 344,
	-1000, 45371, -1000, 405, 33218, -1000, 119632, -58, -125, -1000,
	17364, -181, -126, -1000, -1000, 843, -1000, 3098, -1000, 45371,
	119854, 2428, 2061, 1828, 1640, 3562, 3606, 20145, -1000, 62448,
	1038, 2196, 117725, -1000, -1000, -1000, -1000, 64613, 64613, 45371,
	45371, -1000, 45371, 45371, 45371, -1000, -1000, -1000, 3562, 942,
	-1000, -1000, -1000, 942, -1000, -1000, 1443, -1000, 1443, -1000,
	45371, -1000, -1000, 2922, 45371, -1000, 64613, 64613, 49354, 49354,
	49354, 49354, 49354, 49354, 49354, 49354, 49354, 49354, 49354, 49354,
	49354, 49354, 49354, 49354, 49354, 49354, 49354, 2539, 49354, 3528,
	3528, 3528, -1000, 2873, 2922, 45371, 45371, 64613, 403, 401,
	398, -1000, 45371, -181, -1000, -1000, 5523, 638, -1000, 2442,
	-1000, 2799, -1000, 45371, -1000, -234, -1000, 2343, -1000, -1000,
	2799, 2799, -144, 120861, 53190, 53190, -1000, 637, 45371, 2549,
	-1000, -1000, 822, -317, -1000, 919, -1000, -1000, -1000, -1000,
	-1000, 515, -1000, -1000, -1000, 210, 98735, 98735, 817, -1000,
	-146, -1000, -1000, -152, -1000, 3479, 396, 23464, -1000, 1021,
	2839, -1000, -1000, -1000, -1000, -1000, -1000, -203, 109565, 109565,
	2221, 3605, -1000, 3563, 839, 812, 155, 3562, 393, 392,
	391, -203, 109565, 109565, 109565, -1000, -1000, -1000, -1000, 215,
	-1000, -1000, -1000, 212, -1000, -1000, -1000, -1000, 2591, -1000,
	-44, -1000, -1000, -1000, 45371, -1000, -1000, 3281, 1222, 1219,
	-1000, -1000, -1000, -1000, 2935, -1000, 3107, -1000, 2351, -1000,
	1087, -1000, 1741, -1000, 45371, 634, 2714, 633, 632, 3641,
	1909, 3640, 1098, 3100, 2230, 3096, 2230, -1000, -1000, -1000,
	973, -1000, 120861, 2201, -1000, 631, 630, -1000, -47, 1605,
	1861, 1216, 1032, -1000, -1000, 45371, 45371, 98199, -1000, 475,
	3280, -24, -1000, -1000, -1000, 1690, 1213, 1210, -1000, -1000,
	-1000, -1000, 2181, 1681, 1209, 1206, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1029, -1000, 3053, 3050, 950, 109565, -1000,
	1026, -1000, -1000, 45371, -1000, -48, 1204, 3413, 2347, 89049,
	-1000, 2230, 3094, 1203, -1000, 1189, -1000, -1000, -1000, 3416,
	3415, 1279, -1000, -1000, -1000, -1000, -1000, 68952, -1000, 109565,
	68400, 89049, 1761, 927, -1000, 2538, 927, 1013, 2921, -1000,
	2650, 1024, 89049, 3638, 388, -153, -49, 64613, 3474, -1000,
	2293, 629, 89049, 939, -1000, 3546, -1000, -1000, -1000, 1020,
	-1000, 3406, 89049, 3472, 3093, 1017, 84, 89049, 3595, -1000,
	-1000, 3469, 89049, 3079, 2276, 2345, 2482, 882, 74444, 1017,
	2195, -59, -1000, 1851, 32637, 3274, -154, -1000, -1000, -1000,
	1021, 61907, 53190, 45371, 3637, -159, -1000, -1000, -1000, -1000,
	-1000, 96050, 96050, 73362, 73362, 73362, 1007, 109565, 109565, 75516,
	-1000, -1000, 626, 109565, 109565, 625, -1000, 109565, 109565, 3635,
	73362, -50, 624, -1000, 918, 916, 915, -1000, -1000, -1000,
	-1000, -1000, 1015, -1000, -242, 55910, 84, -1000, 2207, 89049,
	-1000, 19592, -1000, -1000, -1000, -1000, -1000, -1000, 1016, -1000,
	-1000, 2103, 2302, 2103, 1827, 1826, -1000, -1000, 2227, -1000,
	-1000, -1000, -1000, 2585, 3296, 23464, 3403, 607, 45371, 45371,
	281, 6081, 4755, 607, 45371, 45371, 64613, 13641, -160, 45371,
	45371, -1000, 45371, 808, 120861, 3603, 45371, 384, 372, -1000,
	-1000, -1000, 3554, -1000, -1000, -1000, 120861, 45371, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 367, -1000, 110, -1000, -1000,
	-1000, 115461, -1000, 45371, 366, 3348, -1000, 353, 352, 6157,
	6812, 117503, 117141, 117053, 348, -1000, -1000, 342, 329, 120861,
	2873, 120861, -1000, -1000, 1103, 1103, 1418, 1418, 1418, 1418,
	3528, 702, 1075, 778, 498, 498, 498, 552, 1130, 1130,
	498, 498, 498, 2896, 2500, 623, 2143, -1000, -1000, 120861,
	120861, 327, -1000, -1000, -1000, -181, 326, 5523, -1000, 2785,
	3344, 120861, -1000, 53190, 2785, 2785, -1000, -1000, 2037, 109565,
	120861, 53190, -1000, 2880, -1000, 17928, -1000, 23464, -1000, -1000,
	-1000, -1000, 3546, -1000, 58659, -1000, 620, -1000, 85, -1000,
	2839, -1000, 914, -1000, -1000, 73362, 73362, -203, -203, -1000,
	-1000, 806, 3633, 838, 23464, 322, -1000, -1000, -1000, -203,
	-203, -203, -1000, -1000, -1000, 3232, 120861, 109565, 109565, 1545,
	97663, 109565, 3077, -1000, 4918, -1000, 1096, 116688, 53731, -1000,
	53731, 109565, -1000, -1000, 1981, 2547, 1144, -1000, 3317, 109565,
	-1000, 109565, -1000, -1000, -1000, 109565, 109565, 89049, 109565, -1000,
	68400, 3064, -162, 120861, -53, -1000, 911, -1000, 1430, -1000,
	19039, 109565, 68400, 89049, 109565, 68400, 89049, 2127, -1000, -1000,
	3040, -1000, 3063, -167, 23464, -1000, 3602, 3601, 3076, 3321,
	-1000, 109565, 3600, 109565, 89049, 3230, -1000, -1000, -1000, -1000,
	-1000, 1660, 1188, 1186, 1013, -54, 618, -1000, 910, -1000,
	-1000, 907, 1013, -1000, 73362, 55910, 3632, 515, -1000, 2700,
	-1000, 93880, 2240, 84, -1000, 3629, 96591, 617, -1000, 2206,
	-1000, 801, -1000, 2503, 68400, 2181, 84, 89049, -1000, -1000,
	515, 321, -55, -1000, 3110, 1090, 23464, 89049, 3074, 2486,
	882, 74444, -1000, 1421, 2651, -1000, -56, -1000, 671, 84,
	2195, -1000, -59, 120861, -1000, 901, -1000, -168, -1000, -1000,
	315, -1000, 3229, 3227, -1000, 2817, 53731, 614, 613, 109565,
	3226, -1000, -1000, -169, 3116, 3116, 73362, 55910, 73362, -1000,
	1015, 927, -1000, 2338, -1000, -1000, -1000, -1000, -1000, 23464,
	1728, -1000, 611, 609, -1000, -1000, -1000, -1000, 3296, 607,
	607, 45371, 45371, 45371, 607, 13641, -174, -1000, 607, 607,
	-181, -1000, -1000, 119632, -1000, -1000, -1000, 120861, -1000, 18486,
	2117, -1000, 116637, -1000, 30930, -1000, -1000, 45371, 45371, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 49354, 2872, 591,
	64613, -1000, -1000, 303, 1036, 45371, 47078, 2343, 1036, 1036,
	-1000, -176, -1000, -1000, -1000, 3546, 85, -1000, -1000, 3627,
	23464, -1000, 73362, -1000, -1000, 835, -1000, 3626, -1000, -1000,
	-1000, -1000, -1000, 2763, 3463, -1000, 1926, -1000, 109565, -1000,
	109565, -1000, 23464, 109565, 2833, 1258, -1000, 984, 2518, 590,
	49354, 89049, 892, -1000, 3460, 2784, -183, -1000, 109565, 45371,
	109565, -184, -190, 2330, -1000, -1000, 2326, 45371, -1000, 64613,
	587, 2230, 2230, -191, -192, -1000, -1000, -1000, 45371, 1185,
	109565, 32068, -1000, 3623, 3280, -1000, -1000, -1000, -1000, -1000,
	-1000, 109565, -1000, 45371, 1177, -1000, -1000, -1000, 3598, 2230,
	23464, 2230, -1000, 2230, 3321, 1141, 109565, 68400, 89049, -1000,
	2288, 2288, 73362, 55910, -1000, -65, 1013, -1000, 3461, 2697,
	3621, -1000, -1000, -1000, -1000, 2513, -1000, -1000, 109565, 2510,
	1008, -1000, -193, -1000, 896, 893, 75516, 980, 982, -1000,
	-81, 576, -1000, 889, -1000, -1000, -1000, -1000, 515, 3459,
	-1000, 3597, 573, 570, 109565, 2275, 569, 23464, 3272, 882,
	74444, -1000, 3099, 1851, -1000, 2336, 109565, 3267, -1000, 2651,
	566, -1000, 1007, 565, 563, 2991, 2991, -202, 53731, 53731,
	-210, 558, 1007, -1000, -212, -1000, -1000, -1000, -1000, -1000,
	-97, -1000, 859, 858, -1000, -1000, 89049, 89049, 45371, 45371,
	-1000, 607, 607, 607, -1000, 298, -1000, -1000, 2195, 3343,
	-1000, -128, 116466, 116269, 459, 49354, 64613, -213, -1000, -1000,
	109565, 120861, -137, -1000, 120861, 557, 554, 430, -1000, -1000,
	-1000, 793, -1000, -1000, 3620, -1000, 97127, 109565, -1000, -1000,
	1589, -1000, -1000, -1000, 109565, 2339, -1000, -1000, -1000, 1093,
	45371, 2143, 553, 45371, -1000, 3458, -1000, 2690, 2869, 1929,
	53731, -1000, 3296, -1000, 116047, -1000, 1080, 1949, -1000, -1000,
	120861, 3321, 53731, -1000, -1000, 550, 549, 120861, 538, 884,
	2863, -1000, -1000, -1000, -1000, 120861, 537, 3413, -1000, -1000,
	-1000, -1000, 2230, 89049, -1000, -1000, -1000, -1000, -215, -1000,
	-1000, 1956, 84, 2086, 2757, -1000, 2240, 536, -1000, -1000,
	2241, 2590, -1000, 96591, 31499, 31499, 291, 3457, 982, -1000,
	3547, -1000, 3214, 3214, 45371, 3456, 84, -1000, 3595, 53731,
	-1000, 89049, 53731, 2255, 2018, 2470, 74444, -1000, 2482, -1000,
	-1000, -220, 109565, 1851, -1000, -1000, 73362, 73362, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1080,
	-221, -222, -1000, 73362, -1000, -1000, 2338, -1000, 109565, -1000,
	109565, -1000, -1000, -223, -231, -1000, 2163, 45371, 30930, -1000,
	-1000, 459, -232, -1000, -143, -1000, 3453, 47078, 3619, 3618,
	3617, -1000, -1000, -1000, 1915, -1000, -1000, -1000, 3073, 2794,
	116006, 2444, 109565, 15891, -1000, 2865, -1000, -1000, 2697, 533,
	-1000, -1000, -1000, -1000, 937, 109565, 2697, 2790, 89049, 1092,
	-233, 2103, 2103, 45371, 30361, 2124, 45371, -1000, -1000, 3321,
	-1000, 2822, 3545, -1000, 980, -1000, 2123, 109565, -1000, 3310,
	-1000, 3224, -1000, -1000, -1000, 2700, 84, -1000, -1000, -1000,
	-239, 120861, 84, -1000, 186, -246, 1090, -247, 89049, 1934,
	-1000, 882, -1000, 2486, 1021, -1000, -1000, -248, -249, 1929,
	1080, 2085, -254, -1000, -255, -261, -1000, -1000, 28, 46509,
	46509, 46509, -181, -186, -1000, 109565, 525, -1000, -1000, -1000,
	-1000, -1000, 3036, 1012, -1000, 2245, 1877, 12, 1118, -1000,
	-1000, 2085, 109565, -1000, -1000, -1000, 1010, 515, -1000, 45371,
	1080, -262, -1000, 1071, -269, -1000, 1070, -275, -1000, 2852,
	-1000, -277, 2230, 1009, 3395, -1000, -1000, -1000, 2241, 89049,
	-278, -1000, -1000, 2469, -1000, 2697, 1008, -1000, -1000, -1000,
	1080, 514, 1929, 513, 1503, 882, -1000, -1000, 1443, 3272,
	3189, 1007, 1007, 2697, 1929, 1003, -1000, 1007, -1000, -1000,
	-1000, 3097, -1000, 50458, 2231, 1825, 118772, 3097, 3097, -1000,
	-1000, 109565, 3379, -1000, 2249, 2248, 1510, -1000, -1000, -1000,
	-1000, -1000, -1000, 2784, -280, 3373, 2444, 120861, 2697, -1000,
	2103, 2746, -1000, 2103, 2837, -1000, 2116, -1000, -1000, -1000,
	1730, 3548, 2462, 512, -1000, 109565, 1806, 1757, 3615, 2086,
	2241, 1929, 53731, 2697, 53731, -1000, -1000, 109565, -1000, 2018,
	1327, -1000, -1000, 2085, 2697, 1021, 504, -1000, -1000, 1818,
	3501, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 880,
	-1000, 3202, -1000, 1108, 2080, 2080, 1021, -1000, 868, 2245,
	-1000, -1000, 500, -1000, 496, -1000, 2204, -1000, -1000, -1000,
	-1000, 109565, -1000, -1000, 3614, -1000, 980, -1000, 2697, -283,
	2085, -285, -1000, -203, 1934, -1000, 1598, 1003, 2085, -1000,
	1718, -1000, -1000, 2170, 45940, 45371, -1000, 3515, -1000, -1000,
	2528, -1000, -1000, 45371, 2784, 45371, 45371, 60284, -291, -1000,
	2241, 2085, 1080, 1003, 1929, 1503, 61907, 1021, 1003, -1000,
	-1000, -1000, 120861, -1000, -1000, -1000, 120861, -1000, -294, -296,
	-211, 96050, 2209, 2462, 1003, 1929, 1021, 2697, -1000, -264,
	-1000, 1021, 2085, 1165, -304, -1000, -1000, -1000, -1000, 1021,
	2697, -1000, 2085, -1000, -1000, -1000, -1000, 485, -1000, -1000,
	2085, 1003, 45371, 1003, 1021, -310, 1021, -1000, 2085, -1000,
	-1000,
}

var sqlPgo = [...]int{
	0, 4435, 4433, 4432, 4431, 4430, 4429, 4422, 4421, 4419,
	4417, 4415, 4412, 4403, 4399, 4393, 4391, 4390, 4388, 4386,
	4385, 4377, 4373, 4372, 4371, 4368, 4364, 4363, 4362, 4361,
	4360, 4355, 4348, 4345, 4342, 4341, 4340, 4339, 4336, 4334,
	4332, 4326, 4323, 4320, 4317, 4316, 4315, 4314, 4313, 4309,
	4308, 4307, 4305, 4304, 4303, 4301, 4294, 4291, 4287, 4284,
	4276, 4275, 4273, 51, 4271, 4270, 4267, 4266, 4265, 4260,
	4257, 4256, 4255, 4254, 4253, 4251, 4249, 4246, 4245, 4244,
	4243, 4242, 4241, 4240, 58, 4236, 262, 4234, 4229, 4224,
	4222, 4221, 4219, 4218, 4217, 4214, 4212, 4210, 4209, 260,
	4206, 153, 4205, 4204, 4203, 4200, 4199, 259, 4198, 4197,
	4195, 4194, 267, 4192, 4191, 4190, 4189, 4185, 4181, 4180,
	4178, 4177, 4176, 4175, 82, 194, 4174, 4172, 92, 4171,
	4170, 4169, 4166, 4165, 4164, 4163, 4162, 4160, 4159, 238,
	4158, 257, 4155, 4153, 4152, 4149, 4146, 4145, 4144, 4143,
	4136, 4134, 4133, 4132, 4131, 4129, 4126, 4125, 4124, 4123,
	4122, 4121, 4115, 4114, 4112, 4109, 4106, 4105, 4104, 4103,
	4098, 4094, 4092, 4091, 4090, 4088, 4087, 4084, 231, 263,
	180, 4083, 4082, 255, 254, 4081, 4077, 4074, 4073, 4070,
	121, 6, 45, 4069, 4067, 94, 86, 81, 99, 97,
	91, 4066, 100, 4065, 122, 60, 4064, 16, 2, 161,
	233, 10408, 225, 4062, 4060, 4059, 229, 189, 4056, 227,
	4055, 4053, 4052, 4051, 72, 43, 173, 167, 163, 151,
	674, 4049, 146, 95, 77, 61, 47, 15, 71, 205,
	19, 4048, 244, 8, 136, 1, 36, 4047, 4046, 4044,
	4042, 3627, 120, 4037, 250, 236, 156, 4034, 4032, 4031,
	698, 4030, 4029, 66, 4026, 118, 79, 128, 31, 119,
	4025, 138, 34, 4024, 162, 54, 4023, 157, 89, 84,
	11094, 6242, 4022, 108, 65, 179, 185, 177, 155, 195,
	186, 152, 166, 193, 202, 200, 171, 183, 4019, 239,
	4017, 3437, 104, 172, 4016, 4015, 4012, 83, 192, 103,
	4011, 4009, 73, 7, 20, 4, 9, 132, 23, 22,
	24, 4006, 44, 114, 48, 25, 4005, 27, 4004, 4003,
	4000, 3999, 3996, 40, 160, 3993, 265, 3992, 98, 52,
	28, 3991, 11, 206, 3990, 224, 126, 3989, 3988, 241,
	197, 178, 3987, 68, 221, 3986, 3985, 3983, 3980, 3978,
	130, 3, 125, 3977, 3976, 140, 3975, 50, 228, 191,
	3973, 55, 3965, 3964, 168, 107, 129, 264, 131, 211,
	111, 215, 182, 220, 3963, 3962, 3959, 204, 3957, 3956,
	207, 154, 3955, 3954, 234, 269, 85, 49, 87, 223,
	78, 190, 147, 3952, 199, 3950, 3949, 266, 175, 203,
	12, 14, 102, 123, 3948, 5, 222, 145, 218, 115,
	3947, 6551, 2279, 1609, 3946, 3945, 142, 117, 76, 116,
	141, 246, 106, 3944, 3942, 2330, 3941, 3936, 3935, 3934,
	176, 3933, 3929, 3926, 137, 139, 174, 3925, 96, 67,
	41, 21, 113, 235, 251, 109, 217, 164, 240, 3919,
	3918, 3917, 188, 3916, 74, 124, 148, 196, 253, 56,
	3915, 165, 3913, 135, 1822, 62, 158, 3910, 210, 3905,
	3904, 3900, 3897, 3896, 3894, 3891, 1814, 219, 3890, 3887,
	3877, 33, 184, 3875, 245, 150, 170, 112, 53, 3873,
	105, 2971, 3870, 659, 93, 69, 248, 1253, 249, 3869,
	1444, 64, 3868, 0, 12568, 7179, 9518, 12132, 3867, 4040,
	3865, 3861, 3860, 208, 134, 3858, 3856, 3854, 110, 3853,
	80, 3847, 3846, 70, 3845, 30, 17, 18, 32, 29,
	607, 329, 3844, 3843, 59, 127, 143, 3842, 258, 213,
	3840, 3834, 3833, 3832, 88, 3830, 39, 3826, 37, 3825,
	3824, 46, 13, 42, 3823, 3822, 198, 3821, 214, 243,
	3820, 149, 3818, 3433, 133, 3813, 3812, 3811, 63, 57,
	242, 90, 3809, 274, 3806, 3393, 3805, 3801, 26, 3800,
	3799, 226, 169, 209, 3798, 3796, 159, 3795, 3794, 3791,
	272, 3790, 3789, 3788, 38, 3783, 10, 3782, 3781, 201,
	3245, 3780, 3779, 35, 3778, 181,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 11, 11, 7, 7, 7, 7, 8, 8, 8,
	8, 8, 49, 49, 9, 9, 9, 9, 9, 9,
	9, 9, 9, 36, 31, 32, 33, 34, 34, 10,
	10, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	17, 17, 37, 37, 18, 18, 39, 39, 19, 19,
	40, 40, 580, 580, 22, 42, 23, 43, 16, 581,
	581, 581, 581, 35, 24, 44, 28, 28, 28, 28,
	28, 193, 193, 193, 193, 21, 21, 38, 38, 227,
	227, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 576, 576, 229, 229, 228,
	223, 223, 582, 582, 230, 230, 230, 232, 232, 13,
	13, 13, 13, 13, 13, 13, 13, 13, 13, 475,
	475, 475, 508, 508, 507, 507, 507, 506, 506, 595,
	595, 596, 596, 596, 596, 596, 127, 127, 373, 373,
	373, 52, 52, 52, 52, 52, 571, 571, 195, 195,
	195, 197, 197, 196, 196, 196, 196, 75, 75, 587,
	587, 588, 588, 586, 589, 589, 589, 194, 194, 194,
	123, 123, 123, 123, 123, 123, 124, 124, 125, 125,
	198, 198, 198, 200, 200, 199, 199, 199, 199, 199,
	199, 199, 199, 204, 15, 108, 108, 108, 108, 108,
	108, 108, 108, 108, 103, 103, 510, 510, 511, 511,
	189, 189, 190, 190, 190, 190, 191, 191, 192, 192,
	192, 66, 201, 201, 203, 203, 202, 202, 202, 202,
	202, 54, 54, 54, 54, 54, 54, 54, 55, 55,
	55, 55, 55, 56, 56, 56, 56, 56, 56, 57,
	57, 57, 57, 57, 57, 64, 64, 64, 64, 64,
	180, 180, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 72, 72, 72, 72, 597,
	597, 597, 597, 597, 597, 597, 597, 597, 597, 597,
	597, 597, 597, 597, 597, 597, 597, 597, 598, 598,
	599, 599, 600, 600, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 70, 70, 70, 70, 70, 70, 70,
	70, 70, 70, 70, 70, 70, 70, 70, 70, 70,
	81, 81, 335, 335, 300, 300, 82, 82, 82, 83,
	83, 84, 84, 68, 68, 569, 569, 350, 350, 466,
	466, 69, 577, 577, 577, 579, 579, 578, 578, 86,
	86, 372, 372, 87, 87, 87, 87, 87, 87, 88,
	88, 88, 88, 88, 88, 88, 89, 89, 89, 89,
	89, 89, 89, 89, 89, 89, 89, 89, 89, 89,
	96, 96, 96, 96, 96, 97, 97, 97, 94, 94,
	94, 91, 91, 91, 90, 90, 90, 95, 95, 95,
	568, 289, 289, 93, 93, 93, 92, 92, 92, 351,
	351, 98, 98, 98, 98, 301, 99, 99, 99, 99,
	99, 99, 99, 99, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 102, 102, 102, 102, 102,
	102, 102, 102, 102, 102, 102, 102, 468, 468, 100,
	100, 100, 433, 433, 104, 104, 104, 388, 388, 105,
	105, 105, 105, 105, 106, 106, 106, 106, 106, 106,
	106, 126, 126, 126, 126, 126, 126, 126, 573, 573,
	343, 343, 254, 254, 254, 254, 116, 116, 116, 116,
	117, 117, 117, 118, 118, 185, 185, 133, 133, 133,
	133, 133, 132, 132, 132, 132, 132, 132, 58, 58,
	58, 59, 59, 60, 60, 61, 61, 62, 62, 63,
	63, 63, 63, 63, 135, 135, 592, 592, 137, 134,
	134, 134, 136, 136, 136, 136, 138, 139, 139, 139,
	139, 139, 139, 139, 139, 140, 140, 500, 500, 359,
	359, 498, 498, 520, 520, 499, 499, 305, 305, 305,
	305, 305, 306, 306, 306, 509, 509, 509, 509, 509,
	509, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 186,
	186, 187, 188, 188, 188, 188, 188, 164, 164, 164,
	179, 179, 179, 179, 179, 179, 179, 167, 167, 167,
	151, 151, 142, 142, 142, 142, 142, 142, 142, 146,
	146, 146, 146, 146, 146, 146, 146, 143, 143, 153,
	153, 153, 153, 153, 147, 147, 148, 148, 148, 148,
	174, 174, 150, 150, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 144, 144, 144, 144, 155, 155, 155,
	155, 395, 395, 395, 178, 178, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 177, 177, 177,
	177, 177, 177, 590, 590, 591, 591, 171, 171, 171,
	171, 171, 171, 447, 447, 165, 165, 165, 165, 170,
	170, 170, 170, 173, 173, 173, 173, 378, 378, 162,
	162, 162, 163, 163, 163, 168, 168, 169, 166, 166,
	172, 172, 172, 172, 145, 145, 145, 145, 602, 602,
	602, 175, 175, 161, 161, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 603, 603, 157, 157,
	157, 156, 156, 156, 156, 159, 159, 160, 160, 160,
	160, 160, 160, 158, 149, 570, 570, 566, 566, 566,
	566, 566, 566, 566, 566, 567, 567, 567, 567, 572,
	572, 109, 109, 109, 109, 109, 119, 119, 119, 119,
	119, 110, 110, 110, 110, 110, 112, 112, 111, 111,
	111, 111, 76, 76, 76, 76, 76, 14, 14, 14,
	77, 77, 245, 245, 207, 207, 207, 324, 324, 208,
	208, 313, 313, 313, 313, 205, 205, 206, 206, 78,
	78, 604, 604, 604, 583, 583, 583, 584, 584, 584,
	584, 584, 584, 307, 307, 308, 308, 413, 413, 413,
	413, 413, 311, 311, 311, 312, 312, 312, 312, 312,
	312, 312, 312, 312, 314, 314, 231, 231, 231, 322,
	323, 323, 315, 315, 321, 320, 320, 319, 319, 318,
	318, 316, 317, 317, 317, 326, 326, 325, 328, 328,
	327, 412, 529, 529, 531, 531, 531, 531, 531, 531,
	531, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 396, 396, 605, 605, 527, 527, 527,
	528, 523, 523, 524, 524, 524, 524, 524, 309, 309,
	310, 310, 310, 310, 525, 526, 341, 341, 451, 530,
	530, 532, 532, 534, 606, 606, 606, 606, 606, 606,
	607, 607, 607, 411, 411, 410, 410, 333, 333, 535,
	535, 535, 535, 536, 536, 536, 536, 536, 539, 538,
	537, 537, 537, 537, 537, 80, 80, 80, 375, 375,
	374, 374, 376, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 182, 182, 257,
	257, 74, 74, 74, 12, 12, 12, 585, 585, 585,
	79, 79, 79, 79, 79, 79, 256, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 575, 575, 574, 574,
	258, 258, 609, 609, 85, 85, 85, 85, 85, 85,
	85, 85, 469, 469, 470, 470, 73, 73, 73, 73,
	73, 397, 397, 394, 394, 393, 393, 340, 340, 449,
	449, 449, 450, 262, 262, 263, 263, 224, 224, 224,
	30, 29, 20, 20, 25, 25, 26, 26, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 27, 27, 46,
	46, 46, 46, 47, 47, 47, 47, 50, 50, 51,
	51, 45, 45, 45, 45, 48, 48, 41, 41, 593,
	593, 594, 594, 115, 115, 120, 120, 120, 120, 120,
	121, 121, 121, 121, 122, 122, 122, 122, 131, 131,
	181, 181, 181, 181, 181, 181, 181, 53, 53, 53,
	53, 65, 65, 65, 65, 129, 611, 611, 611, 130,
	130, 130, 610, 610, 255, 255, 407, 407, 408, 408,
	612, 612, 409, 409, 409, 409, 409, 248, 247, 249,
	249, 250, 250, 71, 71, 71, 240, 240, 239, 237,
	237, 512, 512, 242, 242, 242, 243, 243, 233, 233,
	234, 234, 235, 235, 236, 236, 246, 246, 613, 613,
	107, 107, 107, 184, 184, 299, 299, 299, 404, 404,
	404, 334, 334, 269, 269, 406, 406, 406, 406, 371,
	371, 371, 183, 183, 348, 348, 361, 361, 362, 362,
	463, 463, 363, 113, 113, 114, 114, 128, 128, 211,
	211, 209, 209, 209, 209, 209, 209, 209, 209, 216,
	216, 217, 217, 218, 218, 219, 220, 220, 220, 220,
	352, 352, 221, 221, 221, 210, 210, 210, 212, 212,
	212, 212, 212, 212, 212, 215, 215, 215, 215, 222,
	222, 222, 214, 214, 546, 546, 546, 548, 548, 550,
	550, 549, 549, 545, 545, 547, 547, 608, 608, 377,
	377, 377, 331, 332, 329, 329, 330, 330, 338, 338,
	336, 337, 337, 339, 339, 448, 448, 448, 225, 225,
	225, 368, 368, 368, 368, 369, 369, 400, 400, 398,
	398, 398, 398, 399, 399, 401, 401, 401, 402, 402,
	403, 403, 365, 365, 366, 366, 367, 367, 367, 367,
	429, 429, 213, 213, 213, 345, 345, 345, 346, 346,
	419, 419, 419, 419, 419, 419, 420, 420, 418, 418,
	418, 418, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 453, 454, 454, 347, 347, 455, 405, 405, 564,
	564, 564, 565, 565, 446, 446, 456, 456, 456, 456,
	456, 456, 444, 444, 445, 445, 464, 465, 465, 381,
	381, 381, 381, 379, 379, 382, 382, 382, 382, 382,
	380, 380, 457, 457, 457, 457, 370, 370, 458, 458,
	458, 458, 459, 460, 460, 461, 461, 414, 415, 415,
	471, 471, 471, 471, 473, 344, 344, 344, 344, 344,
	522, 521, 521, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 487, 487, 487, 487, 487, 487, 487, 487,
	487, 487, 487, 487, 487, 487, 487, 487, 487, 487,
	487, 487, 487, 487, 487, 487, 487, 487, 487, 487,
	487, 487, 487, 487, 488, 488, 488, 488, 488, 488,
	488, 474, 474, 474, 474, 474, 478, 478, 478, 477,
	477, 477, 477, 477, 477, 477, 477, 477, 477, 477,
	479, 479, 484, 484, 485, 485, 485, 480, 481, 486,
	486, 486, 486, 614, 614, 490, 490, 482, 482, 482,
	482, 482, 482, 482, 482, 482, 476, 476, 476, 483,
	483, 483, 390, 390, 390, 390, 390, 390, 390, 390,
	390, 390, 390, 390, 390, 389, 389, 391, 391, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 423, 423, 423, 423,
	424, 424, 424, 424, 424, 424, 424, 424, 424, 424,
	424, 424, 424, 424, 424, 424, 424, 424, 424, 424,
	424, 424, 424, 424, 424, 540, 540, 540, 540, 540,
	540, 540, 540, 425, 425, 543, 543, 544, 544, 541,
	541, 541, 541, 541, 541, 541, 541, 541, 541, 541,
	541, 541, 541, 541, 541, 541, 541, 541, 541, 541,
	541, 541, 542, 542, 542, 542, 542, 542, 542, 542,
	542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
	542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
	542, 542, 542, 542, 542, 542, 542, 542, 551, 551,
	552, 552, 554, 554, 555, 555, 556, 557, 557, 557,
	558, 559, 559, 553, 553, 560, 560, 560, 560, 561,
	561, 562, 562, 562, 562, 562, 563, 563, 563, 563,
	563, 435, 435, 436, 436, 442, 442, 442, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 259, 259, 259, 259, 259, 357,
	357, 355, 355, 355, 358, 358, 356, 356, 354, 354,
	353, 353, 432, 432, 430, 430, 434, 434, 383, 383,
	489, 489, 489, 489, 489, 489, 489, 489, 384, 384,
	384, 392, 385, 385, 386, 386, 386, 386, 386, 426,
	427, 387, 387, 387, 428, 428, 437, 441, 441, 440,
	439, 439, 438, 438, 416, 416, 417, 417, 364, 364,
	615, 615, 360, 360, 462, 462, 462, 462, 303, 303,
	349, 349, 302, 302, 294, 294, 295, 295, 295, 295,
	342, 342, 443, 443, 491, 491, 492, 492, 493, 493,
	494, 494, 495, 496, 497, 431, 431, 279, 278, 266,
	267, 277, 276, 275, 265, 268, 272, 273, 274, 270,
	271, 285, 284, 283, 238, 241, 290, 291, 291, 293,
	293, 292, 292, 281, 282, 467, 264, 296, 296, 297,
	297, 297, 298, 298, 298, 298, 260, 260, 261, 261,
	286, 286, 287, 288, 288, 280, 280, 280, 251, 251,
	251, 252, 252, 253, 253, 505, 505, 502, 502, 502,
	503, 503, 503, 504, 504, 504, 504, 501, 501, 501,
	501, 501, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 517, 517, 517, 517,
	517, 517, 517, 517, 517, 517, 517, 517, 517, 517,
	517, 517, 517, 517, 517, 517, 517, 517, 517, 517,
	517, 517, 517, 517, 517, 517, 517, 517, 517, 517,
	517, 517, 517, 517, 517, 517, 517, 517, 517, 517,
	517, 517, 517, 517, 517, 517, 517, 517, 514, 514,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 516, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	519, 519,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 3, 1, 1, 1,
	1, 3, 4, 6, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 6, 6, 6, 4, 4, 5, 1,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	4, 6, 4, 6, 6, 9, 6, 9, 6, 5,
	6, 5, 1, 1, 5, 5, 6, 6, 4, 4,
	4, 4, 3, 4, 4, 4, 7, 7, 9, 8,
	9, 5, 3, 5, 7, 4, 12, 4, 12, 1,
	3, 5, 5, 2, 5, 3, 6, 4, 6, 5,
	6, 6, 4, 8, 3, 4, 2, 3, 10, 3,
	6, 4, 3, 1, 3, 2, 1, 1, 3, 1,
	3, 2, 2, 0, 1, 1, 0, 2, 0, 7,
	10, 6, 8, 6, 6, 6, 9, 4, 3, 2,
	2, 0, 1, 3, 1, 1, 1, 1, 1, 1,
	3, 6, 4, 6, 7, 9, 6, 2, 2, 3,
	0, 8, 6, 8, 7, 2, 0, 1, 2, 5,
	0, 1, 3, 3, 1, 1, 3, 12, 3, 1,
	0, 1, 1, 2, 3, 3, 0, 4, 6, 0,
	5, 7, 6, 8, 8, 2, 1, 3, 1, 3,
	2, 5, 0, 1, 3, 3, 3, 3, 1, 1,
	1, 1, 1, 1, 3, 6, 4, 9, 7, 12,
	12, 12, 9, 2, 7, 2, 1, 1, 1, 3,
	3, 0, 3, 1, 3, 1, 1, 3, 2, 5,
	0, 7, 2, 0, 1, 2, 3, 1, 1, 2,
	2, 1, 2, 1, 2, 1, 2, 2, 3, 3,
	3, 3, 3, 3, 5, 3, 3, 5, 3, 3,
	5, 3, 3, 5, 3, 6, 6, 6, 6, 4,
	1, 1, 1, 2, 1, 1, 2, 1, 2, 1,
	1, 1, 2, 1, 2, 6, 3, 8, 3, 4,
	3, 3, 4, 3, 4, 4, 4, 3, 5, 7,
	3, 3, 4, 3, 3, 3, 3, 3, 2, 0,
	1, 0, 1, 0, 4, 3, 3, 3, 3, 3,
	6, 4, 4, 4, 3, 5, 3, 3, 3, 3,
	3, 3, 3, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 4, 1, 2, 1, 2, 1, 2,
	7, 3, 2, 0, 1, 3, 3, 1, 0, 1,
	2, 2, 1, 6, 5, 1, 2, 1, 3, 2,
	0, 7, 2, 5, 0, 1, 3, 3, 1, 9,
	3, 2, 0, 2, 2, 2, 2, 2, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	4, 6, 5, 7, 3, 4, 6, 3, 4, 6,
	3, 5, 7, 3, 4, 6, 3, 4, 6, 3,
	1, 1, 3, 4, 6, 3, 3, 5, 3, 1,
	3, 2, 2, 2, 2, 1, 2, 2, 5, 3,
	3, 6, 6, 3, 1, 1, 2, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 2, 1, 1, 2, 1, 1, 1, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 2, 1, 2, 1, 3, 5,
	7, 2, 3, 0, 3, 5, 2, 3, 0, 2,
	3, 2, 3, 2, 6, 4, 7, 7, 7, 5,
	2, 6, 4, 7, 7, 7, 5, 2, 2, 1,
	1, 3, 1, 1, 1, 1, 1, 2, 1, 2,
	2, 3, 2, 4, 3, 2, 2, 1, 2, 1,
	3, 3, 1, 2, 1, 2, 1, 2, 1, 1,
	3, 5, 4, 6, 4, 3, 0, 1, 3, 2,
	4, 2, 4, 1, 6, 3, 1, 1, 5, 3,
	2, 6, 3, 3, 4, 4, 3, 1, 3, 2,
	3, 3, 1, 3, 1, 2, 1, 1, 2, 2,
	3, 1, 1, 1, 1, 1, 3, 2, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 2, 1, 2,
	2, 1, 3, 3, 3, 3, 3, 2, 3, 3,
	1, 1, 1, 1, 1, 2, 2, 5, 7, 3,
	3, 3, 4, 4, 6, 5, 5, 5, 3, 4,
	4, 3, 4, 4, 3, 4, 4, 5, 3, 5,
	5, 5, 7, 3, 3, 3, 2, 6, 4, 3,
	2, 3, 4, 3, 5, 3, 6, 5, 6, 3,
	5, 6, 3, 4, 3, 4, 3, 3, 4, 4,
	5, 0, 1, 1, 1, 1, 3, 2, 4, 3,
	3, 5, 3, 4, 3, 5, 3, 3, 4, 4,
	5, 3, 3, 1, 1, 0, 2, 5, 4, 6,
	4, 6, 4, 1, 0, 3, 4, 4, 5, 7,
	5, 3, 3, 3, 4, 4, 5, 2, 0, 4,
	2, 3, 4, 2, 3, 3, 3, 4, 3, 3,
	4, 3, 3, 3, 3, 4, 4, 3, 1, 1,
	1, 2, 3, 2, 3, 6, 6, 7, 9, 7,
	9, 4, 3, 4, 4, 5, 1, 1, 10, 10,
	3, 5, 5, 5, 3, 5, 6, 4, 4, 5,
	5, 2, 3, 2, 5, 2, 0, 1, 1, 1,
	1, 3, 2, 2, 2, 2, 2, 2, 1, 2,
	0, 1, 2, 1, 2, 2, 1, 2, 1, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 6, 5, 8, 3, 6, 6, 3,
	13, 16, 1, 0, 1, 2, 3, 0, 2, 0,
	4, 0, 4, 5, 4, 3, 3, 1, 3, 10,
	13, 0, 2, 3, 1, 1, 0, 1, 2, 2,
	2, 2, 1, 1, 0, 1, 3, 1, 1, 1,
	2, 3, 3, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 8, 0, 1, 1, 0, 2,
	1, 0, 1, 0, 1, 1, 0, 1, 4, 1,
	0, 3, 7, 7, 1, 1, 3, 7, 1, 3,
	11, 3, 2, 0, 3, 1, 2, 2, 3, 2,
	6, 2, 1, 2, 2, 2, 8, 4, 2, 5,
	5, 5, 2, 2, 0, 1, 3, 11, 12, 9,
	5, 3, 1, 5, 10, 7, 11, 3, 3, 0,
	2, 4, 3, 3, 1, 5, 1, 3, 1, 2,
	0, 1, 2, 2, 0, 1, 3, 3, 2, 2,
	1, 1, 1, 4, 0, 6, 0, 3, 0, 2,
	2, 2, 0, 1, 1, 2, 2, 0, 3, 3,
	2, 1, 1, 2, 2, 5, 8, 4, 1, 0,
	1, 2, 2, 1, 2, 3, 3, 2, 2, 3,
	2, 2, 2, 2, 2, 3, 1, 4, 2, 2,
	2, 4, 7, 3, 4, 6, 3, 1, 1, 1,
	8, 10, 11, 7, 10, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 0,
	3, 3, 0, 1, 8, 11, 3, 6, 6, 5,
	3, 4, 1, 0, 1, 3, 17, 20, 16, 19,
	4, 2, 0, 1, 0, 1, 0, 1, 3, 2,
	4, 2, 3, 1, 0, 2, 0, 1, 1, 0,
	9, 6, 6, 8, 6, 8, 5, 7, 2, 6,
	7, 4, 4, 5, 2, 4, 6, 6, 8, 6,
	7, 8, 9, 6, 7, 8, 9, 6, 8, 6,
	8, 6, 7, 8, 9, 6, 8, 6, 8, 1,
	0, 2, 0, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
	1, 2, 1, 2, 1, 2, 1, 3, 2, 3,
	2, 2, 2, 2, 2, 2, 1, 1, 0, 2,
	4, 2, 1, 0, 2, 1, 1, 0, 1, 3,
	1, 0, 1, 1, 1, 1, 1, 2, 3, 2,
	2, 1, 2, 12, 15, 3, 1, 0, 4, 3,
	0, 1, 1, 4, 4, 5, 1, 0, 3, 0,
	3, 0, 3, 0, 3, 0, 4, 0, 1, 0,
	6, 7, 3, 6, 3, 1, 3, 1, 1, 4,
	2, 1, 3, 1, 3, 4, 8, 11, 5, 2,
	2, 0, 10, 3, 2, 0, 1, 3, 1, 1,
	3, 3, 5, 6, 4, 5, 4, 1, 1, 3,
	3, 1, 2, 4, 4, 2, 3, 5, 5, 1,
	3, 1, 0, 1, 2, 3, 2, 4, 2, 3,
	0, 2, 0, 2, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 8, 8, 8, 2, 4,
	4, 4, 2, 2, 2, 2, 3, 1, 3, 1,
	2, 6, 7, 1, 0, 1, 0, 1, 0, 1,
	1, 0, 1, 5, 1, 0, 1, 0, 1, 0,
	3, 3, 5, 1, 3, 3, 4, 5, 2, 2,
	0, 2, 2, 1, 1, 1, 0, 1, 0, 2,
	2, 5, 4, 2, 3, 1, 1, 1, 1, 1,
	1, 1, 3, 0, 1, 3, 1, 3, 3, 3,
	2, 0, 4, 2, 5, 3, 2, 0, 1, 3,
	3, 5, 1, 1, 1, 1, 1, 3, 2, 4,
	4, 0, 4, 4, 3, 4, 1, 5, 3, 4,
	5, 5, 1, 5, 1, 3, 2, 0, 3, 0,
	2, 3, 1, 3, 2, 0, 3, 5, 6, 4,
	6, 4, 3, 2, 1, 0, 5, 1, 0, 2,
	2, 2, 1, 1, 0, 1, 1, 1, 1, 0,
	4, 2, 1, 2, 2, 4, 1, 3, 1, 2,
	3, 2, 4, 1, 0, 1, 0, 2, 1, 0,
	2, 5, 7, 2, 1, 2, 4, 3, 5, 0,
	1, 3, 5, 1, 2, 1, 1, 1, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 4, 6,
	6, 1, 1, 1, 1, 1, 3, 5, 0, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 2, 1,
	3, 0, 5, 4, 1, 2, 1, 4, 1, 1,
	2, 1, 1, 1, 1, 1, 0, 1, 2, 5,
	1, 4, 2, 5, 1, 4, 3, 3, 0, 1,
	2, 4, 1, 1, 1, 1, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 1, 0, 1, 4, 1,
	3, 3, 3, 5, 2, 2, 2, 2, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 3, 5, 4, 6, 3,
	5, 4, 6, 4, 6, 5, 7, 3, 3, 3,
	3, 3, 4, 3, 2, 4, 2, 3, 3, 4,
	3, 4, 3, 4, 5, 6, 6, 7, 6, 7,
	6, 7, 3, 4, 4, 1, 3, 1, 3, 3,
	2, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 5, 6, 6, 7, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 6, 1, 1, 1, 1,
	1, 1, 2, 1, 5, 5, 6, 3, 1, 1,
	1, 2, 2, 2, 4, 3, 5, 6, 8, 6,
	5, 4, 3, 2, 2, 4, 1, 1, 1, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 6, 6, 8, 8, 6, 4, 6, 6, 6,
	4, 1, 3, 3, 3, 3, 3, 4, 3, 3,
	4, 3, 3, 4, 3, 3, 4, 3, 3, 3,
	4, 3, 4, 3, 4, 3, 4, 4, 3, 6,
	5, 5, 5, 4, 4, 3, 4, 3, 5, 0,
	5, 0, 2, 0, 1, 3, 3, 2, 2, 0,
	6, 1, 0, 3, 0, 3, 3, 3, 0, 1,
	4, 2, 2, 2, 2, 2, 3, 2, 2, 3,
	0, 4, 1, 1, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 1, 2, 2,
	3, 1, 2, 3, 2, 3, 2, 3, 1, 0,
	1, 3, 1, 3, 3, 3, 1, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 3,
	1, 2, 3, 0, 3, 3, 2, 2, 1, 2,
	2, 3, 2, 1, 1, 1, 5, 1, 2, 4,
	2, 0, 1, 0, 3, 5, 1, 0, 1, 2,
	1, 0, 1, 3, 3, 2, 1, 1, 1, 3,
	1, 3, 3, 1, 1, 1, 1, 5, 3, 1,
	1, 3, 1, 1, 1, 1, 2, 2, 1, 1,
	2, 2, 1, 1, 1, 3, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	3, 1, 0, 1, 1, 1, 1, 1, 1, 3,
	5, 7, 1, 7, 5, 3, 1, 1, 1, 1,
	1, 1, 1, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 0, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 583, -101, -98, -66, -64, -104, -105,
	-87, -106, -100, -126, -131, -113, -114, -115, -127, -133,
	-181, -186, -187, -188, -3, -52, -54, -67, -86, -88,
	-99, -108, -107, -109, -116, -123, -119, -103, -58, -128,
	-132, -141, -182, -183, -184, 32, 31, 100, 80, 154,
	128, 137, 201, 379, 421, 432, 393, 142, 413, 398,
	-136, -137, 449, -53, -65, -130, -129, 73, 129, 407,
	-4, -12, -15, 29, 46, -55, -56, -57, 62, -74,
	-70, -81, -75, -68, -69, -72, -597, 102, -547, -89,
	-92, -122, -601, 161, 219, -110, -111, 362, -117, -118,
	415, -120, -121, 417, 162, -60, -59, 156, -209, -211,
	-134, -135, -185, -142, -143, -144, -145, -146, -147, -148,
	-174, -149, -150, -151, -152, -153, -154, -158, -177, -155,
	-156, -157, -160, -159, -161, -166, -162, -163, -164, -165,
	-167, -168, -170, -171, -172, -173, -175, -176, 454, -169,
	514, 49, 468, 82, 146, 425, 21, -5, -6, -7,
	-8, -9, -10, -11, -14, -13, -71, -73, -76, -77,
	-78, -85, -79, -80, -546, -90, -91, -94, -96, -97,
	-93, -95, 414, -212, -210, 580, 529, -17, -22, -23,
	-18, -19, -21, -24, -20, -25, -26, -27, -37, -42,
	-43, -39, -40, -38, -41, -44, -45, -46, -47, -48,
	-49, -50, -51, -29, -35, -36, -30, -31, -32, -33,
	-34, -16, -28, 549, 558, -215, -213, -214, -222, 441,
	537, 488, 583, 583, 583, 583, 583, 583, 583, 583,
	583, 583, 583, 583, 583, 583, 583, 583, 583, 583,
	583, 583, 583, 583, -301, 2, -281, -286, -287, -288,
	-280, -251, -516, -519, 4, -513, -517, 168, 228, 326,
	21, 23, 22, 24, 25, 26, 27, 29, 30, 41,
	42, 44, 45, 46, 47, 48, 49, 53, 55, 59,
	60, 61, 62, 63, 64, 68, 73, 74, 79, 80,
	81, 82, 83, 84, 85, 91, 88, 89, 90, 92,
	94, 96, 97, 98, 99, 100, 101, 103, 104, 105,
	107, 108, 109, 117, 118, 119, 120, 121, 123, 128,
	129, 132, 127, 131, 133, 135, 136, 137, 140, 141,
	142, 144, 145, 147, 148, 149, 151, 152, 154, 155,
	156, 159, 157, 496, 158, 160, 161, 162, 163, 166,
	174, 175, 176, 181, 183, 184, 188, 189, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 202, 206, 208,
	209, 210, 211, 212, 218, 219, 221, 222, 223, 224,
	229, 230, 231, 235, 232, 241, 242, 246, 247, 248,
	250, 254, 255, 256, 257, 258, 259, 261, 263, 262,
	265, 268, 269, 272, 276, 277, 281, 282, 278, 283,
	284, 286, 287, 290, 288, 291, 292, 289, 293, 295,
	296, 297, 298, 299, 300, 301, 302, 303, 304, 305,
	306, 294, 309, 307, 311, 312, 313, 324, 322, 317,
	318, 314, 319, 315, 316, 320, 321, 328, 329, 332,
	216, 334, 335, 338, 356, 342, 343, 344, 347, 348,
	351, 354, 355, 357, 358, 359, 360, 361, 362, 363,
	364, 366, 367, 369, 370, 371, 373, 374, 375, 377,
	379, 380, 382, 383, 385, 386, 387, 388, 389, 390,
	391, 393, 395, 394, 396, 398, 400, 401, 402, 407,
	413, 409, 410, 411, 412, 414, 415, 416, 417, 419,
	420, 421, 423, 424, 425, 426, 428, 430, 431, 434,
	435, 451, 452, 470, 432, 433, 436, 437, 438, 439,
	440, 444, 442, 443, 445, 446, 447, 449, 450, 453,
	454, 456, 457, 458, 459, 460, 461, 464, 466, 467,
	468, 487, 469, 471, 475, 476, 477, 478, 472, 473,
	486, 480, 481, 483, 484, 489, 490, 491, 492, 493,
	494, 495, 497, 499, 507, 508, 509, 511, 514, 515,
	516, 517, 505, 519, 520, 523, 524, 525, 528, 526,
	527, 529, 531, 534, 535, 536, 542, 541, 543, 550,
	551, 553, 554, 555, 36, 50, 51, 54, 56, 58,
	69, 70, 71, 75, 124, 125, 153, 164, 165, 177,
	190, 191, 203, 205, 213, 214, 215, 236, 237, 239,
	244, 266, 331, 333, 349, 353, 368, 372, 376, 378,
	392, 427, 462, 474, 479, 500, 501, 502, 503, 510,
	512, 537, 538, 539, 544, 552, -301, 2, -281, 340,
	-274, 2, -251, -251, 379, 28, 2, 28, 367, 443,
	491, 493, 2, -573, -343, 2, 28, -254, -251, 102,
	201, 441, -274, 2, -573, -343, 25, 2, -251, 2,
	354, 22, 27, 66, 77, 98, 140, 163, 185, 188,
	-600, 356, 386, 430, 445, 486, 497, 511, 2, 541,
	287, 442, 488, 228, 120, 516, 436, -585, 434, 435,
	354, 384, 423, 204, 530, -255, 2, 432, -251, 287,
	2, 583, 94, 277, 74, 427, 446, -139, 508, -138,
	500, 436, -140, -500, 2, 309, -251, 583, 583, 583,
	28, -264, -251, 488, 228, 436, 120, 484, 583, 2,
	488, 359, 541, 442, 120, 389, 228, 516, 188, 436,
	-585, 287, -571, 2, -566, 4, -517, -513, -295, -294,
	488, 494, 120, -288, -280, 573, -287, 583, 583, 583,
	2, 247, 248, 388, 387, 446, 447, 583, 583, 583,
	583, 434, 2, 163, 22, 27, 66, 93, 98, 126,
	185, 188, 345, -598, 356, 386, 445, 486, 490, 497,
	511, -584, 469, 68, 412, 436, -583, -585, 287, 516,
	140, -393, 120, 277, 199, 524, 493, 491, 522, 132,
	235, 527, 526, 583, 583, -101, 2, 580, 32, 31,
	142, 449, -204, 488, 240, 2, -251, 583, 583, 2,
	247, 248, 434, 435, 583, 583, 186, -566, 2, 583,
	583, 2, 247, 248, 434, 435, 240, 2, 68, 438,
	583, 583, 583, 583, 583, 583, 583, 583, 583, 583,
	583, 583, 583, 583, 583, 583, 583, 583, 583, 583,
	583, 583, 583, 583, 583, 583, 583, 583, 583, 583,
	583, 583, 583, 583, 2, -179, 446, 469, 210, 47,
	46, 74, 28, 385, 79, 360, 121, 148, 517, 202,
	228, 229, 255, 93, 94, -395, 44, 248, 247, 435,
	-590, 434, -447, 489, 437, 443, 483, 259, 432, 508,
	102, 531, 424, 555, 389, 390, 481, 402, 278, 157,
	4, 120, 309, 448, 500, 277, 431, 363, 84, -608,
	2, 488, -610, 2, 508, 508, 2, -610, 2, -610,
	2, -610, 2, -611, 508, 552, 583, 583, 583, 583,
	583, 583, 583, 583, 583, 583, 583, 583, 583, 583,
	583, 583, 583, -210, -212, -211, 583, 583, 583, 583,
	583, 583, 583, -179, 446, 2, 74, 28, -336, -338,
	521, 238, 150, 346, -209, -211, 2, -546, -498, 2,
	-421, -520, -423, 571, 572, 564, 485, 67, 325, 556,
	-435, 126, 522, 340, -519, -424, -437, 153, 427, -358,
	8, 9, 5, 6, 7, -260, -425, -431, 513, 167,
	330, -298, 584, 10, 580, -543, -211, -436, 37, 205,
	65, -502, -297, -261, -474, 239, -296, -280, -540, -541,
	4, -513, -514, -503, -477, -485, -481, -482, -488, -251,
	-516, 77, 111, 112, 110, 115, 114, 280, 279, 116,
	113, 448, 530, 66, 36, 213, 214, 244, 331, 215,
	75, -542, 141, -515, 236, 237, 462, 51, 392, 177,
	125, 124, 333, 56, 54, 538, -486, 122, 500, 501,
	502, 503, 190, 191, 58, 164, 165, 353, 376, 479,
	510, 512, 203, 266, 43, 106, 187, 234, 217, 243,
	245, 249, 267, 270, 310, 323, 327, 350, 352, 422,
	455, -614, 539, 474, 69, 70, -548, 394, -549, -274,
	-548, 583, 583, 585, 583, -329, -331, -332, 2, 28,
	138, 580, 2, -452, 2, -453, -457, -211, 260, -456,
	580, -454, 578, -281, 341, -544, 428, -540, -541, -260,
	-280, -297, 4, -513, -515, 582, -333, 580, 120, 488,
	78, 228, 163, -388, 580, -251, 28, 340, 504, 585,
	-330, 383, -433, 580, 340, 186, 343, 60, 291, 2,
	2, 2, 2, 2, 213, -251, 488, 119, 2, 258,
	2, 2, 2, 2, 2, 2, 2, -351, 213, 2,
	-281, 541, -351, 213, 2, -351, 213, 2, -394, 2,
	87, -265, 213, 2, -251, -289, 213, 2, -284, -286,
	-293, 213, 2, -291, -251, -511, 213, 2, -510, -505,
	10, -504, 5, 4, -513, -517, -514, -516, 77, -421,
	2, -128, 2, 60, -251, 541, 2, 2, 451, 2,
	580, -139, 71, 508, 43, 446, -408, 2, -409, -247,
	-248, -249, -464, -250, 246, 382, 391, 559, 130, 325,
	555, -498, -592, 186, 563, 504, -498, -359, 582, 2,
	2, 2, 2, 2, 2, -457, 213, -281, 2, -278,
	-501, 4, -513, -517, -514, -518, 28, 31, 32, 33,
	35, 37, 38, 39, 40, 57, 65, 66, 72, 76,
	78, 87, 93, 102, 110, 111, 113, 112, 114, 115,
	116, 126, 130, 134, 138, 139, 143, 146, 150, 167,
	169, 182, 185, 186, 201, 204, 207, 220, 233, 238,
	240, 260, 264, 271, 279, 280, 325, 330, 336, 340,
	341, 345, 346, 365, 381, 397, 418, 441, 448, 465,
	482, 488, 498, 504, 506, 513, 521, 522, 530, 532,
	540, 545, 546, 547, 548, 549, -519, 2, -457, 213,
	2, -283, 213, -457, -286, 2, -265, 2, -277, -501,
	2, -302, 213, -281, -282, -286, -284, 2, 2, -291,
	2, -510, 213, 2, 541, 240, 504, 585, -349, -294,
	-295, -497, 8, -342, -251, 582, -421, 2, -128, -112,
	2, 182, -421, 213, 2, -128, 213, 2, -421, 213,
	2, -128, 213, 2, -587, 2, -510, 213, -251, 2,
	291, 2, 2, 511, 2, 98, 488, 119, 2, 411,
	-599, 430, 515, 2, 2, 2, 2, 2, 2, 2,
	488, -270, 2, -251, 182, 472, -291, 213, -292, 2,
	442, -609, 394, -510, 213, 2, 541, -284, 213, 2,
	-284, 228, 242, -265, 213, 2, 493, 491, 493, 491,
	186, 2, 240, 2, 240, 2, -458, 2, -459, -453,
	-460, 578, 341, -468, 2, -467, -504, 537, -101, 580,
	-101, 580, 446, 580, -510, -281, -281, -421, 2, -128,
	-112, 2, -421, 2, -128, 2, -125, -510, -124, 580,
	186, -421, 2, -128, -112, 2, -421, 2, -128, 2,
	-204, 182, 2, 120, 488, -179, 2, 182, 532, 2,
	8, 2, 220, -510, 437, 390, 174, 2, 451, 2,
	452, 74, -395, 555, 74, 186, 2, 186, 2, -378,
	2, 549, 186, 2, 2, -570, 2, 340, 186, 2,
	186, 2, 186, 2, 186, 2, 186, 2, -178, 447,
	509, 487, 387, 248, 2, -128, 546, -112, -421, 546,
	2, -591, 182, 435, -421, 2, 507, 257, 158, 186,
	-378, 2, 186, 2, 186, 2, 5, 2, 388, 470,
	2, 246, 382, 470, 2, -281, -602, 28, 2, 488,
	541, 442, 2, 2, 88, 89, 186, 2, 186, 2,
	200, 186, 2, 186, 555, 2, -370, -457, -407, -408,
	-407, 504, -336, -338, -179, 451, 2, -216, -368, -218,
	182, -398, -399, -219, 271, 169, 336, -220, -377, 28,
	138, -377, -377, 60, 581, 581, 11, 12, 76, 41,
	571, 572, 573, 574, 180, 575, 576, 569, 570, 568,
	561, 562, 566, 252, 253, 95, 565, 563, 86, 285,
	429, 170, 171, 172, 173, 408, 226, 34, 227, 14,
	15, 16, 33, 345, 270, 556, 217, 455, 564, 17,
	18, 19, 243, 245, 327, 50, 220, -259, -304, -421,
	-421, -421, -421, -421, -421, -421, 352, 580, -364, -416,
	578, -211, 580, 580, 580, -497, -211, -421, -435, 581,
	-356, 580, -211, -435, -430, 580, 427, 578, 580, -438,
	-421, 5, 5, 5, 580, 582, -551, 550, 182, 580,
	580, 580, 580, 580, 580, 580, 580, 580, 580, 580,
	580, 580, 580, 580, 378, -479, 580, -478, 580, -478,
	-478, 542, -476, 580, 558, 551, 580, -476, 580, 580,
	580, 580, 580, 580, 580, 580, 580, 580, 580, 580,
	580, 542, 585, -548, -333, 580, -360, -462, -421, 573,
	-360, -360, 340, -353, -421, 106, -381, 249, 310, 187,
	267, 422, 234, -418, 584, -418, -446, 558, -211, -454,
	-280, -211, -456, 580, -452, -446, -102, -497, -86, -99,
	-107, -128, -141, -183, -184, 573, -281, 580, 186, 580,
	582, -501, 186, -342, -265, -281, -296, -297, -302, 2,
	137, -353, -566, 516, 436, 442, -342, -254, 38, -432,
	-471, -472, -522, 584, -521, -474, -484, -480, -483, 368,
	372, -503, 54, 538, -486, 239, 4, -513, -515, 236,
	237, 462, 51, 392, 177, 125, 124, 333, 56, 500,
	501, 502, 503, 190, 191, 58, 539, 474, 69, 70,
	-566, 516, 436, 442, -342, 182, -508, 2, -507, -506,
	116, 448, -504, 5, 2, 153, 2, 2, 2, -251,
	-230, 585, 64, 416, 153, -351, 213, -230, 153, -230,
	153, -303, 213, -302, -230, 153, -230, 585, 153, -230,
	585, 153, 582, 585, 153, -508, 2, -394, -500, -353,
	38, -408, 2, 126, -506, -612, 585, 269, -306, 284,
	324, 209, 341, 553, 334, 130, -509, 5, 4, -431,
	-443, 126, 277, 239, -491, -493, 8, -492, 9, -494,
	571, 572, -499, -498, 109, 582, -501, -227, 409, 449,
	355, -226, 24, 29, 142, 230, 313, 535, 159, -319,
	231, -316, 359, 153, 466, 525, -580, -581, 433, 495,
	496, 90, 334, 449, 355, 409, 153, -374, -376, 38,
	118, 313, 354, 61, 223, 289, 290, 468, 544, 153,
	449, 355, 409, 355, 24, 142, -242, -239, 449, -581,
	99, 409, 480, 381, -581, -229, 466, 525, -580, -581,
	433, 409, -228, -321, -316, 359, 153, 584, 24, 142,
	409, 449, 355, -595, -596, 29, 409, 355, -574, -545,
	549, 153, -457, 213, -588, -124, 261, 5, 10, -510,
	-124, -349, 585, 585, -501, 573, 435, 434, 153, 153,
	153, 153, 182, 325, 2, 2, 2, 2, 2, 188,
	-583, -600, 2, 2, -281, 213, -335, 340, -569, -350,
	488, -281, 182, 325, 43, -283, 213, 2, -286, 541,
	-574, 325, -285, 213, -281, 38, 580, 325, 2, -394,
	2, 228, -545, 325, -458, -299, -281, -453, -299, 449,
	-274, 38, -418, -281, 581, 585, -468, -468, -510, -192,
	549, 186, 102, 580, 580, -204, -465, 585, -464, 220,
	-511, -125, -510, 412, -510, -569, -265, 2, -281, 2,
	488, 250, -510, -192, 220, -510, -510, -510, -500, 28,
	452, 2, -178, 447, 509, 89, 452, 2, -281, 488,
	120, 228, 80, -251, -572, 182, -567, 423, 436, 516,
	-566, -281, 120, -281, 120, -281, 120, -281, -281, 2,
	2, 2, 2, 2, 85, 85, 2, 46, -591, 182,
	2, 507, 2, 507, 2, -251, -251, -251, 469, 269,
	-281, 489, -603, 2, 186, 182, 2, 488, 228, 488,
	228, 120, 186, 74, 120, 28, 488, -230, 585, -255,
	-216, -368, -500, -369, -368, -217, -216, -219, 182, 391,
	526, 313, 453, 254, -399, -398, 28, -421, -403, 176,
	312, -421, -401, -423, 571, 572, -492, -494, -352, 334,
	-210, -210, -210, -339, -448, -421, 381, 228, -473, -471,
	-471, -279, -501, 500, -421, -421, -421, -421, -421, -421,
	-421, -421, -421, -421, -421, -421, -421, -421, -421, -421,
	-421, -421, -421, -421, -421, -421, -421, -421, -421, -421,
	-421, -421, -421, -421, -421, -421, -421, -421, -421, 270,
	217, 455, 50, 220, -421, 504, -421, -421, -421, -421,
	307, 325, 330, 513, 167, 523, 138, 334, -615, 482,
	40, -428, -211, -357, 580, -442, 35, 465, 28, -435,
	580, 2, -416, -421, -417, -354, -353, -353, 581, 540,
	28, 138, 573, 2, 581, 585, 38, 581, -421, -354,
	-434, -430, -353, -441, -440, 546, -389, -390, 554, 294,
	123, 211, 292, -391, 440, -495, 8, -501, 573, -552,
	175, 204, 580, 581, 2, 581, 2, 581, -421, 2,
	581, -421, 2, 581, -421, 2, 581, -421, 2, 581,
	2, -421, -421, -421, -421, -421, -421, -421, -353, 8,
	-495, -495, 500, 500, -495, -495, -495, -487, 368, 369,
	370, 371, 272, 273, 274, 275, 372, 373, 374, 375,
	299, 300, 301, 302, 295, 296, 297, 298, 303, 304,
	305, 306, 195, 196, 197, 198, 191, 192, 193, 194,
	-487, -383, 2, -489, -353, 4, 554, 294, 123, 211,
	292, 440, 5, -383, 2, -384, 2, -421, -353, -385,
	-422, -423, 571, 572, 564, -435, -386, 2, -421, -354,
	-421, 57, 264, 506, -387, -421, 186, -353, -353, 2,
	-353, 2, -549, 38, -353, -345, 585, 186, 38, 4,
	-345, -345, 580, 581, 585, -382, 208, 288, 283, 242,
	-382, -452, -381, 249, -379, 350, -379, -379, -446, -266,
	578, 586, -501, -446, -445, -444, 38, -274, 347, -446,
	-446, 582, 581, -445, 579, -564, 580, 583, 583, 583,
	583, 583, -281, 580, -353, -501, 582, 471, 581, 243,
	243, 243, 243, 428, 581, 504, -568, -289, -293, 2,
	549, -101, 342, 581, 585, -344, 37, 578, 582, -495,
	2, 2, -490, 542, 580, 580, -390, 580, 186, -568,
	-293, 2, -343, 585, 504, -251, 2, -281, -351, -230,
	153, -351, -351, -230, 585, 153, -265, -284, -289, -291,
	-293, -251, -510, -511, -230, -285, -592, 581, 508, -409,
	-305, 391, 464, 410, 444, 484, 8, 9, 8, 9,
	585, -501, 585, -593, 93, 504, 78, 436, -244, 278,
	504, -412, 213, 78, -523, -268, 93, -524, -251, 72,
	522, 381, 185, 151, -593, 93, 381, -593, 93, 2,
	230, 93, 449, 469, 28, 60, -457, 41, 41, 28,
	-128, 265, 186, 555, 488, 228, 436, 504, 504, -457,
	-376, -471, 118, 289, 290, 60, -496, -491, 571, 572,
	-496, 60, -496, -496, -496, 549, -283, -457, 436, 504,
	504, 504, 400, 400, -239, 504, 504, -613, 563, 400,
	585, 41, 41, 28, -128, 265, 186, 504, -302, -266,
	536, 42, 536, 42, 536, 504, 42, 436, 504, 585,
	42, 504, 504, -575, -256, 105, 319, 282, 320, 97,
	316, 96, 315, 103, 317, 104, 318, 543, 328, 63,
	314, 293, 321, -257, -258, 361, 534, -510, 449, 355,
	409, 153, 220, -465, 220, -465, -294, -251, 582, -128,
	-421, -421, -128, -421, -128, 46, 153, 2, -609, 258,
	580, -309, 325, 186, -342, -466, 240, 585, -350, -566,
	153, -507, -375, -374, 325, -285, 213, 2, 153, -333,
	325, 147, 580, 389, 2, 153, -267, 213, -252, -251,
	-394, -233, 492, 153, -372, 532, -404, -128, 580, 126,
	38, -404, -361, -362, -463, -363, -268, 580, -274, -418,
	-101, -467, 581, 581, 581, -191, 344, -190, -251, 5,
	-204, 532, -308, -413, -412, -527, -528, -523, 270, 228,
	522, 242, 168, -334, -269, -268, 119, -198, 549, -124,
	-125, 581, -465, 220, 472, -192, -192, -465, -465, -281,
	182, -510, -192, -192, -192, 2, 2, 2, 2, -378,
	-281, -265, -302, -281, 582, -342, -342, -293, -289, -378,
	-265, -378, -265, -378, -265, -128, -421, 2, 446, 182,
	182, 582, -378, 389, 120, 488, 359, 228, -281, -302,
	-281, -302, -265, 120, -265, 121, -281, -457, -369, -217,
	341, 254, 453, -401, -402, -423, 427, 428, -402, 427,
	428, 8, 9, 8, 9, -221, 457, 329, -351, 585,
	-224, 39, 134, 254, -281, 555, 149, -421, -421, 504,
	-615, 482, -428, 149, -421, 307, 330, 513, 167, 523,
	138, 334, 186, 580, -422, -422, 581, -355, -421, -421,
	579, 588, 581, -338, 585, -336, -421, -353, -353, 581,
	582, -353, -342, 579, 579, 585, 581, -439, -440, 143,
	-421, 504, 504, 504, 504, 580, 581, 582, -557, 351,
	580, 580, -421, 581, 581, 581, 581, 38, 585, 585,
	585, 581, 585, 585, 585, 581, 581, 581, 585, 581,
	555, 555, 581, 581, 581, 581, 585, 581, 585, 581,
	186, 581, 581, -392, 365, 581, 11, 12, 571, 572,
	573, 574, 180, 575, 576, 569, 570, 568, 561, 562,
	563, 86, 285, 429, 14, 15, 16, 243, 220, -422,
	-422, -422, 581, -426, -427, 186, 182, 38, -387, -387,
	-387, 581, 186, -353, 581, 581, 580, -550, 287, 325,
	581, -415, -414, 547, -462, -346, 2, -452, -276, -501,
	-415, -415, -353, -421, 249, 249, -380, 532, 340, -382,
	-452, -445, -497, -420, -419, 184, 39, 134, 322, 216,
	-445, -274, -333, -445, -445, -501, -446, -446, -444, 581,
	-565, -497, 581, -347, -455, -544, -338, 582, -501, -201,
	-545, -180, 5, 330, -180, -180, -180, -342, 504, 504,
	25, 366, -471, 578, 579, 8, -501, 580, -495, -495,
	-495, -342, 186, 186, 186, -507, -507, 2, -230, -351,
	-230, -230, -302, -303, -230, -230, -230, -373, 549, -498,
	-408, 520, 83, 391, 500, -498, -226, 409, -268, -268,
	-281, -290, -251, 199, 401, -507, 325, -412, 213, -232,
	325, -471, -275, -251, 580, -396, 551, 254, 254, 532,
	-268, -275, 254, 213, -268, 213, -275, 2, -275, -576,
	391, 335, -421, 60, -317, 276, 389, 326, -227, 409,
	449, 355, -128, -128, -128, 580, -592, 532, 137, -281,
	-302, -281, -290, -507, -285, 449, 355, 409, 323, -296,
	-496, -496, -374, 449, 355, 409, -290, -507, -283, -507,
	-238, -251, -238, 436, -265, 400, 555, 45, -613, -228,
	-128, -128, -128, 580, -266, -229, 409, 5, 213, -268,
	5, -268, 213, 5, -251, -268, -290, -507, -596, 24,
	142, -268, -290, -507, -256, -510, 330, 528, -574, 436,
	504, 504, -457, -124, -195, 549, -124, -189, 224, 573,
	-571, -251, 541, -251, -307, -310, -308, -268, -207, -208,
	551, 549, 153, -300, -281, 578, -192, -510, -281, -466,
	-291, -292, 153, -333, 325, -510, 38, 153, 580, 2,
	2, -284, 340, 325, -267, 213, -234, 144, -613, -265,
	-415, -346, -371, -406, 418, 340, -334, 537, -274, -371,
	-348, 585, 186, 563, 582, -334, -461, 573, -101, -101,
	-192, 585, 580, 563, 563, 580, -510, -510, 581, 585,
	-232, -281, -267, 228, 228, -273, -252, 581, 585, 582,
	580, -200, 344, -199, 145, 256, 241, 458, 459, 460,
	461, 136, -465, -198, -125, 186, 186, -61, 549, 488,
	-192, 584, -251, -378, -378, -378, 446, 446, -251, -277,
	-265, -281, -278, -302, 182, 182, -265, 526, -402, 341,
	281, -448, -225, 557, -281, 584, -421, -421, 149, 149,
	-421, -422, -422, -421, 149, 186, 580, -421, -432, 33,
	33, 581, 585, -417, -421, 581, 540, -338, -338, 581,
	573, -501, 584, 581, -430, 146, -421, 498, 294, 211,
	292, -391, 292, -391, -391, -495, 5, -501, 573, -558,
	-271, 580, -251, 547, -337, 346, 581, -473, -471, -421,
	-421, -421, -421, -421, -495, -476, -476, -491, -491, -421,
	-426, -421, -473, -471, -422, -422, -422, -422, -422, -422,
	-422, -422, -422, -422, -422, -422, -422, -422, -422, -422,
	-422, -422, -422, 138, 325, 334, -422, -427, -426, -421,
	-421, -471, 581, 581, 581, -353, -101, 580, 287, -365,
	204, -421, -465, 585, -365, -365, 581, -452, -452, 580,
	-421, 249, 579, 585, 587, 563, -333, 582, -444, -445,
	579, 581, 585, 581, 585, -405, 38, 581, -501, -415,
	-203, -202, 135, 53, 107, 133, 330, -342, -342, 343,
	5, 8, 578, 579, 582, -495, 581, 581, 581, -342,
	-342, -342, -230, -230, 119, 313, -421, 504, 504, 60,
	220, 153, 325, 534, -529, -524, 151, -421, 580, 228,
	580, 580, 2, -223, 142, 449, -594, 2, 532, 153,
	-230, 153, -230, 553, -317, 580, 580, 504, 436, -244,
	504, 549, -353, -421, -193, 126, -500, -581, 584, -581,
	584, 436, 504, 504, 436, 504, 504, 549, 166, 166,
	555, -238, 549, -353, 504, -475, 48, 26, 325, -284,
	-230, 153, 504, 504, 516, 449, -510, 330, -290, -507,
	-285, 449, 355, 409, -465, -197, 344, -196, 145, 420,
	136, 256, -465, -195, 186, 240, 549, -285, 2, 581,
	581, 585, -530, 38, 338, 338, 580, -281, -82, 549,
	-464, -497, -577, 549, 43, -283, 38, 153, -574, -128,
	-285, -469, -470, 5, 38, -281, 153, 340, 325, -235,
	263, -613, -505, -545, -338, -371, -360, 326, 91, 581,
	-415, -362, -346, -421, 2, 581, -190, -191, -510, -510,
	-510, -192, -204, -204, -413, -311, 580, -267, -252, 580,
	-204, -269, 2, -511, 585, 580, 563, 563, 563, -198,
	-465, -124, -128, 344, -281, 573, -378, -323, -322, 359,
	334, -323, 427, 427, 341, 176, 259, -224, -266, -421,
	-421, 149, 33, 33, -421, -421, -432, 581, -421, -421,
	-353, 579, 5, -421, 581, 581, 8, -421, 581, 582,
	-559, -251, -421, 581, 60, 581, 581, 585, 585, 581,
	581, 581, 581, 581, 581, 581, -427, 186, 138, 334,
	580, 581, 581, -101, -429, 207, 60, -452, -429, -429,
	-380, -342, -452, -419, -266, 578, -501, -497, -455, 580,
	582, -202, 563, -510, -510, 579, 2, 578, -501, 581,
	119, -268, -268, 488, 427, -238, 381, -412, 153, -531,
	93, -533, 76, 168, 102, 325, 330, 522, 381, 72,
	126, 397, -605, 38, 560, 581, -340, -449, -544, 580,
	-251, -340, -342, 325, 477, 126, 325, 126, 119, 516,
	79, -268, -275, -342, -342, -281, -290, -507, 160, 581,
	585, 563, 2, 573, 573, -290, -507, -285, -290, -507,
	-283, 357, 166, 160, 581, -266, 5, 5, 153, -263,
	76, -268, 5, -268, -284, 119, 436, 504, 504, -195,
	585, 580, 563, 563, -195, -511, -124, 2, -333, -324,
	230, -268, -528, -525, -526, 381, -532, -534, 168, 381,
	-128, 2, -206, -205, -251, 5, 580, -309, 344, 579,
	-579, 344, -578, 117, 136, -507, -375, -128, -285, -333,
	581, 585, 147, -397, 532, -266, -281, 153, -236, 262,
	-613, -505, -233, -400, -398, 139, 580, 340, -128, -338,
	563, 581, 581, 119, 119, 222, 152, -340, 580, 580,
	-342, 119, 581, -199, -200, -510, -124, -510, -198, -465,
	-62, -63, 228, 93, 364, -278, 488, 228, 580, 580,
	-224, -421, -421, -421, 581, -338, -501, 573, -553, 359,
	581, -448, -421, -421, -422, 186, 580, -432, 581, -554,
	548, -421, -366, -367, -421, 426, 108, 205, -554, -554,
	581, -497, 2, -510, 578, 2, 220, 38, 400, -412,
	-275, -279, -272, -251, 168, 213, 330, 545, -396, 254,
	580, -422, -281, 580, 2, 30, -606, 130, 233, 581,
	585, -450, -262, -251, -421, -450, 581, 581, 330, 330,
	-421, -471, 580, -230, -230, 581, 581, -421, 504, -500,
	100, -498, 2, -581, -265, -421, 504, 5, -230, -279,
	-230, -230, -263, 516, -290, -507, -285, -196, -197, -510,
	-124, -195, 38, -314, 232, 2, -530, 254, -272, 254,
	-604, 549, 581, 585, 563, 563, -307, -207, -83, -84,
	505, -464, 585, 580, 563, -333, 38, 5, 580, 580,
	-251, 340, 580, -266, -246, 92, -613, -505, -234, -371,
	326, -342, 93, -400, -428, -192, 580, 580, -312, 81,
	94, 127, 212, 189, 229, 469, 475, 28, -312, 581,
	-340, -340, 581, 580, -192, 581, 585, 28, 580, 28,
	580, -281, -302, -353, -353, 581, -338, 60, 585, 581,
	581, -422, -432, 581, -555, -556, -271, 585, 580, 580,
	450, 579, 2, -238, 381, -251, -533, -272, 325, 532,
	-421, -253, 580, -421, 38, 233, 131, 218, -411, -607,
	101, 478, 221, -449, -224, 581, -410, 532, 397, -263,
	-340, 580, 580, 580, 563, 186, 580, -475, -230, -284,
	581, -586, 395, -128, -318, -319, 220, 580, -313, 340,
	119, 313, -205, -498, -498, 581, 38, -84, 9, -578,
	-579, -421, 38, -128, -469, -340, -281, -340, 340, -240,
	-239, 271, -505, -235, 581, -275, -371, -511, -511, -410,
	581, 581, -511, -63, -342, -342, 581, 581, -560, 389,
	428, 206, -353, -339, 581, 585, 38, -367, 2, 2,
	2, 400, 153, 208, 581, -535, 286, -251, 581, 131,
	218, -314, 580, -225, -450, -314, 208, -281, -582, 532,
	581, -326, -325, -322, -328, -327, -322, -353, -498, 100,
	357, -353, -263, -589, 187, -588, 5, 10, -207, 357,
	-341, -451, -268, 82, 119, -324, -128, 581, -128, 581,
	581, -397, 581, -281, -237, -512, 400, 402, -613, -236,
	-415, 581, 581, -411, -410, -320, -316, 581, 581, 581,
	581, -561, -562, 50, 519, 109, -421, -561, -561, -556,
	-558, 168, 549, -536, -539, -538, 340, 456, 187, 358,
	581, 477, 544, -320, -342, 549, -333, -421, -410, 581,
	585, 537, 581, 585, 537, 581, 186, 581, -230, -194,
	549, 46, -313, -281, 581, 585, 380, 132, 142, -314,
	-604, -410, 580, -411, 580, -243, -242, -613, -491, -246,
	139, -192, -192, -314, -411, -208, 549, -192, -563, 151,
	-562, 377, 181, 427, 377, 181, -563, -563, -272, 55,
	-538, 340, -539, 340, 526, 132, -606, 581, 55, -535,
	-314, -325, 220, -327, 186, 357, 434, -588, 30, -245,
	-244, 580, -451, 428, 428, 2, -318, -313, -411, -340,
	-314, -340, -241, -342, -240, 326, 526, -320, -314, -415,
	109, 204, 499, 313, 33, 563, -537, 313, 416, 64,
	449, -537, -415, 563, -536, 580, 580, 344, -342, 2,
	-207, -314, 581, -320, 581, -237, 449, -208, -320, 427,
	348, -562, -421, 23, 330, 126, -421, -606, -353, -353,
	-191, 580, 581, -313, -320, -410, -208, -411, -243, -361,
	-415, -208, 581, 581, -191, -231, 64, 416, -245, -208,
	-411, -415, -314, -415, -415, -315, -316, 504, 581, -415,
	-314, -320, 580, -320, -208, -353, -208, -415, 581, -415,
	-315,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 524, 525, 527, 528, 529, 531,
	532, 534, 536, 538, 539, 540, 542, 543, 545, 546,
	547, 548, 549, 551, 553, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	617, 619, 0, 1310, 1312, 1314, 1316, 0, 761, 0,
	36, 37, 39, 0, -2, 311, 313, 315, 0, 342,
	344, 345, 347, 349, 350, 351, 353, -2, 0, 459,
	460, 462, 464, -2, 0, 951, 953, 0, 606, 608,
	0, 956, 958, 0, 0, 628, 629, 0, 1417, -2,
	622, 624, 626, 691, 693, 695, 697, 699, 701, 703,
	705, 707, 708, 710, 712, 714, 716, 718, 719, 721,
	723, 725, 726, 728, 729, 731, 733, 735, 737, 739,
	741, 743, 745, 747, 749, 751, 753, 755, -2, 758,
	-2, -2, 0, -2, -2, -2, 1328, 41, 43, 45,
	47, 49, 51, 53, 55, 57, 403, 405, 407, 409,
	411, 414, 416, 418, 1475, 466, 468, 470, 472, 474,
	476, 478, 0, -2, 1489, 0, 0, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 101, 102,
	103, 104, 105, 106, 107, 108, 73, 74, 75, 77,
	78, 79, 80, 84, 85, 86, 87, 88, 89, 90,
	91, 99, 71, 0, 0, 1448, 1450, 1452, 1454, -2,
	0, 0, 5, 9, 11, 13, 15, 17, 19, 21,
	23, 25, 27, 29, 526, 530, 533, 535, 537, 541,
	544, 550, 552, 554, 511, 512, 515, 2153, 2170, 2171,
	2172, 2175, 2176, 2177, 2178, 2179, 2180, 2618, 2700, 2701,
	2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211,
	2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221,
	2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231,
	2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241,
	2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251,
	2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261,
	2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271,
	2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281,
	2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291,
	2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301,
	2302, 2303, 2304, 2305, 2306, 2307, 2308, 2309, 2310, 2311,
	2312, 2313, 2314, 2315, 2316, 2317, 2318, 2319, 2320, 2321,
	2322, 2323, 2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331,
	2332, 2333, 2334, 2335, 2336, 2337, 2338, 2339, 2340, 2341,
	2342, 2343, 2344, 2345, 2346, 2347, 2348, 2349, 2350, 2351,
	2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361,
	2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371,
	2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381,
	2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391,
	2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401,
	2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2411,
	2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421,
	2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431,
	2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441,
	2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451,
	2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461,
	2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471,
	2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481,
	2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491,
	2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501,
	2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511,
	2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521,
	2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530, 2531,
	2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541,
	2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551,
	2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560, 2561,
	2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571,
	2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581,
	2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591,
	2592, 2593, 2594, 2595, 2596, 2597, 513, 514, 1128, 0,
	578, 576, 2138, 579, 2422, 581, 583, 453, 454, 455,
	456, 457, 458, 0, 599, 590, 1487, 600, 602, 603,
	604, 605, 573, 571, 0, 599, 2206, 597, 1308, 1309,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 465, 0,
	0, 0, 0, -2, 0, 0, 0, 0, 0, 0,
	0, 382, 1177, 1178, 1179, 1293, 1294, 2466, 1335, 0,
	217, 618, -2, -2, -2, 2583, -2, 650, -2, 657,
	2587, 2468, 662, 0, 664, -2, 667, 1311, 1313, 1315,
	759, 760, 2156, 0, 0, 0, 0, 0, 38, 40,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 227, -2, -2, -2, -2, 0,
	0, 2512, 2258, 2106, 2172, 2109, 2104, 312, 314, 316,
	317, 0, 0, 0, 0, 0, 0, 343, 346, 348,
	352, -2, 354, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 381, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	0, 0, 0, 0, 0, 1012, 1004, 1005, 1235, 0,
	0, 0, -2, 461, 463, 516, 517, 0, 1476, 1476,
	-2, 0, 0, 0, 0, 283, 273, 952, 954, 955,
	0, 0, 0, 0, 607, 609, 0, 0, 255, 957,
	959, 960, 0, 0, 0, 0, 0, 285, 0, 0,
	623, 625, 627, 692, 694, 696, 698, 700, 702, 704,
	706, 709, 711, 713, 715, 717, 720, 722, 724, 727,
	730, 732, 734, 736, 738, 740, 742, 744, 746, 748,
	750, 752, 754, 756, 757, 767, 0, 0, 0, 0,
	0, -2, -2, 0, 0, 0, -2, -2, -2, -2,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 855,
	0, 0, 0, -2, -2, -2, 0, 0, 0, 0,
	0, -2, -2, 0, 0, 0, 0, -2, 933, 0,
	770, 772, 773, 774, 0, 833, 853, 854, 863, 0,
	1168, 1477, 1337, 1318, 1332, 1337, 1320, 1321, 1322, 1323,
	1324, 1329, 1331, 1325, 1326, 1327, 42, 44, 46, 48,
	50, 52, 54, 56, 58, 404, 406, 408, 410, 412,
	415, 417, 419, -2, 1446, 1447, 467, 469, 471, 473,
	475, 477, 479, 610, 0, 612, 0, 771, -2, 0,
	1481, 1481, 1481, 0, 0, 1447, 1445, 0, 615, 616,
	671, 672, 1749, 0, 0, 0, 0, 0, 0, 0,
	2003, 1835, 0, 673, -2, 1866, 1868, 2558, 2583, 2002,
	1870, 1871, 1872, 1873, 1874, 0, 1876, 1877, 1878, 1879,
	1880, 1881, 0, 1883, 0, 1888, 1889, 1890, 0, 2565,
	2083, 2166, -2, 0, 0, 2571, 2162, 0, 1969, 1906,
	-2, -2, 2189, 2168, 1681, 1682, 1683, 1684, 1685, -2,
	-2, 2601, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917,
	1918, 1919, 1920, 0, 2546, 2566, 2567, 2572, 2574, 2568,
	2555, 1931, 2271, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, 1708, 1717, -2, -2,
	-2, -2, -2, -2, -2, 2559, 2560, 2577, 2580, 2586,
	2591, 2592, 2564, 2573, 2600, 2602, 2603, 2604, 2605, 2606,
	2607, 2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616,
	2617, 1709, -2, -2, -2, -2, 1464, 2435, 1467, 1128,
	1465, 1449, 1451, 0, 1453, 0, 0, 0, 1458, 1484,
	1482, 0, 1533, 1462, 1463, 1551, 1551, 1575, 0, 1556,
	0, 1575, 1476, 1602, 0, 1562, 2458, 1907, 1908, 0,
	2172, 2167, -2, -2, 2598, 0, 0, 0, 0, 0,
	0, 0, 0, 574, 0, 580, 582, 0, 0, 0,
	598, 1486, 0, 0, 0, 0, 0, 0, 0, 385,
	386, 387, 388, 389, 2566, 0, 0, 0, 394, 0,
	396, 397, 398, 399, 400, 401, 402, 186, 2566, 484,
	509, 0, 186, 2566, 487, 186, 2566, 490, 0, 493,
	1233, 186, 2566, 496, 2134, 186, 2566, 499, 501, 2142,
	186, 2566, 505, 2149, 2147, 506, 2566, 508, 288, 286,
	287, 2185, 2186, 2193, 2194, 2195, 2196, 2599, 2601, 1304,
	1305, 1306, 1307, 0, 1334, 1234, 620, 621, 0, 645,
	0, 649, 2554, -2, 0, 2477, -2, 653, 1338, 1342,
	1343, 1344, 1345, 1346, 0, 0, 0, 0, 1351, 0,
	0, 659, 0, 0, 646, 647, 665, 668, 0, 762,
	763, 764, 765, 766, 70, 0, 2566, 1602, 72, 0,
	2128, 2197, 2198, 2199, 2200, 2201, 2619, 2620, 2621, 2622,
	2623, 2624, 2625, 2626, 2627, 2628, 2629, 2630, 2631, 2632,
	2633, 2634, 2635, 2636, 2637, 2638, 2639, 2640, 2641, 2642,
	2643, 2644, 2645, 2646, 2647, 2648, 2649, 2650, 2651, 2652,
	2653, 2654, 2655, 2656, 2657, 2658, 2659, 2660, 2661, 2662,
	2663, 2664, 2665, 2666, 2667, 2668, 2669, 2670, 2671, 2672,
	2673, 2674, 2675, 2676, 2677, 2678, 2679, 2680, 2681, 2682,
	2683, 2684, 2685, 2686, 2687, 2688, 2689, 2690, 2691, 2692,
	2693, 2694, 2695, 2696, 2697, 2698, 2699, 76, 0, 2566,
	81, 0, 2566, 0, -2, 92, 0, 100, 0, 2131,
	109, 0, 2566, 0, 2103, -2, 0, 198, 274, 0,
	979, -2, 2566, 1176, 0, 0, 0, 0, 942, 2100,
	2105, 943, 2124, 944, 2110, 0, 318, 319, 320, 321,
	322, 0, 323, 2566, 325, 326, 0, 328, 329, 2566,
	331, 332, 0, 334, 0, 238, 239, 2566, 356, 358,
	0, 360, 361, 0, 363, 0, 0, 0, 367, -2,
	383, 0, 380, 370, 371, 373, 374, 375, 376, 377,
	0, 423, 421, 2139, 0, 0, -2, 2566, 0, 976,
	0, 0, 1213, -2, 2566, 1173, 0, 1220, 2566, 1216,
	0, -2, 0, 1474, 2566, 1355, 1008, 1009, 1010, 1011,
	1614, 450, 0, 1382, 0, 1384, 0, 1403, 1608, 1551,
	0, 0, 1613, 0, -2, 567, 2155, -2, 519, 0,
	520, 0, -2, 0, 300, 0, 0, 961, 962, 963,
	964, 965, 968, 969, 970, 971, 1588, 256, 258, 0,
	0, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303,
	0, 0, 630, 0, 0, 768, 769, 0, 0, 779,
	780, 781, 0, 300, 2469, 2431, 2292, 788, 0, 791,
	794, -2, 0, 0, 0, 0, 798, 0, 803, 804,
	805, 0, 0, 809, 811, 950, 813, 0, 0, 815,
	0, 819, 0, 822, 0, 824, 0, 826, -2, -2,
	-2, 834, 835, -2, 839, -2, 0, 842, 844, 0,
	846, -2, 0, 855, 851, 852, 0, 0, 0, 0,
	871, 872, 0, 881, 0, 884, 885, 886, 0, 888,
	889, 0, 891, 892, 893, 894, 0, 0, 897, 898,
	-2, -2, 902, 904, 0, -2, 0, 920, 0, 924,
	0, 0, 932, 0, 775, 776, 186, 1606, 1317, -2,
	1319, 0, -2, 0, 611, 0, 614, 1506, 1432, 1429,
	0, 1503, 1504, 1433, 0, 0, 0, 1440, 0, 1479,
	1480, 0, 0, 0, 1419, 1420, 0, 0, 0, 0,
	2008, 2009, 2010, 2011, 2012, 2013, 2016, 2017, 2014, 2015,
	2018, 2019, 0, 0, 0, 0, 0, 2020, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2021,
	2022, 2023, 0, 0, 2025, 0, 2027, 0, 0, 0,
	0, 0, 0, 1814, 1816, 2091, 0, 0, 2024, 1754,
	1755, 1756, 1757, 1758, 1793, 1794, 0, 0, 1867, 2088,
	2087, 1869, 0, 2039, 0, 1882, -2, 0, 2003, 2034,
	0, 0, 1891, 1892, 1893, 0, 0, 2039, 0, 0,
	2082, 1903, 1904, 1746, 0, 0, 1971, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1695, 1694, 0, 1696, 0, 1697,
	1698, 1705, 1718, 0, 0, 0, 0, 1722, 0, 0,
	0, 0, 0, 0, 0, 2063, -2, 0, 0, 0,
	0, 1710, 0, 1466, 0, 0, 1537, 2092, 2096, 2097,
	1537, 1537, 0, 0, 2040, 1599, 1599, 0, 0, 1594,
	1594, 1594, 1592, 1575, 0, 1575, 1585, 0, 1575, 1575,
	0, -2, 1556, 0, 0, 1585, 0, 1569, 555, 557,
	559, 561, 562, 563, 565, 1603, 1604, 0, 0, 0,
	0, 2173, 0, 0, 0, 0, 0, 2158, 0, 339,
	0, 0, 0, 2522, 2468, -2, 585, 601, 1476, 0,
	2042, 1629, 1633, 0, 1635, 1636, 1637, 1638, 1639, 0,
	0, 1630, -2, 1706, 1708, 1729, 2190, 2191, 2192, 1689,
	1690, 1691, 1692, 1693, 1701, 1688, 1688, 1688, 1699, 1728,
	1720, 1728, 1724, 1674, 1675, 1676, 1711, 1712, 1713, 1714,
	0, 2522, 2468, -2, 592, 0, 0, 1414, 202, 204,
	205, 206, 207, 208, 384, 0, 391, 392, 393, 0,
	480, 0, 184, 185, 0, 186, 2566, 485, 0, 488,
	0, 186, 2566, 2098, 494, 0, 497, 0, 0, 503,
	0, 0, 0, 0, 0, 186, 1416, 0, 0, 0,
	0, -2, 655, 660, 661, 0, 1340, 0, 1347, 682,
	683, 684, 1349, 1350, 0, 1352, 658, 685, 686, 687,
	688, 689, 690, 0, 2112, 2113, 2114, 2115, 2118, 2119,
	0, 0, 656, 675, 663, 0, 669, 110, 1290, 0,
	0, 149, 0, 1290, 1290, 0, 0, 0, 0, 173,
	0, 1047, 0, 0, 0, 0, 0, 134, 145, 122,
	123, 0, 0, 0, 0, 0, 0, 82, 1150, 0,
	1153, 0, 0, 0, 0, 0, 0, 0, 1166, 0,
	0, 0, 0, 0, 0, 0, 96, 97, 0, 133,
	0, 0, 1379, 0, 128, 112, 0, 0, 0, 135,
	147, 0, 177, 179, 1044, 0, 0, 0, 0, 0,
	0, 0, 0, 197, 209, 0, 0, 0, 1174, 0,
	1473, 0, 0, 2566, 0, 1588, 2339, -2, -2, 256,
	1588, 941, 0, 0, 2173, 2108, 0, 0, 0, 0,
	0, 0, 0, 0, 359, 362, 364, 365, 366, 0,
	1212, 0, 372, 413, 1099, 2566, 0, 0, 440, 435,
	0, 437, 0, 0, 0, 1149, 2566, 1147, 2143, 0,
	1171, 0, 1128, 2566, 2141, 0, 0, 0, 1221, 2182,
	1230, 1234, 1369, 0, 452, 0, 1385, 1387, 0, 0,
	1609, 0, 1611, 1551, 1476, 0, 0, 0, 0, 276,
	0, 0, 0, 0, 0, 0, 262, 0, 1587, 0,
	0, 1588, 256, 2446, 300, 300, 1588, 632, 1588, 634,
	0, 0, 782, 783, 0, 300, 300, 300, 789, 790,
	792, 793, -2, -2, -2, -2, 795, 796, 878, 0,
	0, 0, 877, 808, 812, 0, 935, 2454, 2468, 2522,
	948, 878, 2258, 878, 2258, 878, 2258, 823, 825, 828,
	866, 874, 838, 843, 0, 0, 848, 856, -2, 0,
	858, 0, 860, 0, 862, 878, 879, 882, 887, 890,
	895, 896, 0, 911, 916, 917, 913, 0, 0, 0,
	0, 0, 0, 927, 928, 0, 0, 1167, 0, 1330,
	1506, 1432, 613, 1423, 1505, 1424, 1431, 1434, 0, 0,
	1436, 0, 1438, 0, 1501, 1502, 1509, 1510, 0, 1520,
	1521, 1513, 0, -2, 0, 0, 1516, 1517, 1442, 0,
	1459, 1460, 1461, 1490, 1493, 1249, 0, 2700, 1750, 1624,
	1751, 1752, 2127, 0, 1759, 1760, 1761, 1762, 1763, 1764,
	1765, 1766, 1767, 1768, -2, -2, -2, -2, -2, -2,
	-2, -2, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784,
	1785, 1786, 1787, -2, -2, -2, 1791, 1792, -2, 2026,
	2028, 0, 2091, 0, -2, 0, -2, -2, -2, -2,
	1811, 0, 1813, 1818, 1820, 1822, 0, 0, 0, 0,
	2090, 1832, 2074, 2075, 0, 0, 2005, 2006, 2007, 1817,
	0, 1836, 2089, 2086, 0, 0, 2038, 1489, 1895, 0,
	0, 0, 0, 1902, 1887, 2036, 0, 2035, 0, 0,
	0, 2046, 0, 2081, 2077, 0, 2125, 1745, 1732, 1733,
	1734, 1735, 1736, 1737, 1747, 0, 2122, 2159, 2165, 1979,
	0, 0, 0, 1932, 1933, 1934, 1935, 1936, 0, 1938,
	1939, 0, 1941, 1942, 0, 1944, 1945, 0, 1947, 1948,
	1949, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1642, 1643,
	1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653,
	1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663,
	1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673,
	0, 0, 1951, 0, 2049, -2, -2, -2, -2, -2,
	-2, -2, -2, 0, 1953, 0, 1955, 2040, 2060, 0,
	0, 1837, 0, 0, 0, 2003, 0, 1958, 2040, 2068,
	0, 0, 0, 0, 0, 2040, 0, 2073, 0, 1965,
	0, 1967, 1468, 0, 0, 1619, 0, 0, 0, 2095,
	1619, 1619, 0, 1532, 0, 0, 1595, 1596, 1597, 1598,
	0, 0, 1599, 0, 1589, 1593, 1590, 1591, 1585, 1548,
	0, 0, 2129, 1585, 1554, 1584, 0, 1128, 1574, 1585,
	1585, 0, -2, 1558, 1575, 0, 0, 556, 558, 560,
	564, 566, 0, 0, 1489, -2, 0, -2, 1127, 0,
	0, 0, 0, 575, 577, 0, 0, 500, 0, 589,
	0, 569, 0, 572, 0, 1620, 1623, 0, 0, 1634,
	1640, 1641, 0, -2, 0, 0, 1730, 0, 0, 0,
	0, 596, 0, 0, 0, 0, 395, 510, 186, 482,
	0, 186, 186, 491, 0, 0, 186, 502, 186, 2150,
	186, 2148, 289, 507, 1415, 220, 0, 648, 0, 1339,
	1348, 0, 679, 0, 681, 0, 2116, 2120, 2117, 2121,
	0, 670, 0, 0, 0, 0, 1289, 0, 1256, 0,
	0, 153, 2566, 0, 188, 0, 0, 1092, 2135, 0,
	1084, 0, 0, 2278, 0, 0, 0, 0, 0, 166,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 119,
	124, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1151, 1152, 1154, 1161, 1163, 0, 1157, 2123, 0, 0,
	1158, 0, 1160, 1162, 1164, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 98, 0, 0, 0, 1378, 1379,
	0, 0, 0, 121, 125, 0, 0, 0, 0, 2102,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1208, 1206, 1186, 1187, 1188, 1189, 1190,
	1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200,
	1201, 1202, 1203, 1204, 1205, 0, 0, -2, 0, 0,
	0, 0, 0, 230, 0, 291, 2101, 2111, 0, 966,
	967, 324, 327, 330, 333, 226, 0, 368, 0, 0,
	1014, 989, 0, 0, 422, 300, 0, 0, 436, 440,
	2152, 974, 1145, 1148, 0, 1128, 2566, 1185, 0, 0,
	0, 0, 0, 0, 1219, 0, 0, 2566, 2130, 2181,
	2182, 1371, 1379, 0, 1619, 0, 1401, 1388, 0, 0,
	0, 1401, 1405, 1406, 1408, 1409, 0, 0, 1610, 1616,
	518, 568, 1476, 1476, 300, 298, 2399, 296, 293, 295,
	0, 0, 0, 1015, 1017, 1018, 1019, 188, 0, 2182,
	1084, 2328, 2182, 0, 1391, 1393, 0, 250, 0, 259,
	1588, 257, 262, 0, 0, 0, 434, 631, 636, 777,
	0, 300, 785, 786, 787, 830, 868, 876, 915, 797,
	799, 800, 801, 0, 0, 949, 945, 946, 947, 814,
	878, 817, 878, 820, 878, 841, 845, 850, 857, 0,
	0, 0, 870, 0, 0, 0, 0, 0, 0, 0,
	921, 922, 923, 925, 930, 929, 934, 1607, 1427, 1428,
	1430, 0, 1439, 0, 0, 1515, -2, -2, 1514, 1518,
	1519, -2, -2, -2, -2, 1435, 0, 1444, 1441, 0,
	1500, 1247, 1248, 0, 0, 0, 0, -2, -2, 0,
	0, 0, 1833, 0, -2, 1812, 1815, 1819, 1821, 1823,
	0, 0, 0, 0, 0, 0, 2029, 0, 2031, 1834,
	2084, 2087, 2001, 0, 0, 1488, 1489, 1489, 0, 1901,
	0, 2037, 0, 2044, 2045, 0, 1894, 0, 2078, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1905, 0,
	0, 0, 0, 1937, 1940, 1943, 1946, 0, 0, 0,
	0, 1926, 0, 0, 0, 1930, 1700, 1686, 0, 1728,
	1726, 1727, 1721, 1728, 1725, 1678, 0, 1677, 0, 1950,
	0, 1952, 1954, 0, 0, 1956, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1840,
	1841, 1842, 1957, 2066, 2067, 0, 0, 0, 0, 0,
	0, 1963, 0, 2072, 1964, 1966, 1476, 0, 1469, 0,
	1534, 1523, 1618, 0, 2093, 1588, 1536, 1538, 2094, 2132,
	1523, 1523, 0, 2041, 0, 0, 1579, 0, 0, 0,
	1581, 1552, 0, 0, 1546, 0, 1542, 1543, 1544, 1545,
	1553, 1128, 1583, 1555, 1559, 2159, 0, 1585, 0, 1570,
	0, 1572, 1605, 0, 1564, 1567, 0, 0, 2174, 1619,
	0, 335, 340, 341, 336, 337, 338, 584, 0, 0,
	0, 0, 2043, 0, 1625, 0, 1631, 0, 0, 0,
	0, 591, 0, 0, 0, 203, 1413, 390, 481, 186,
	486, 489, 2099, 186, 495, 498, 504, 216, 0, 644,
	-2, 677, 678, 680, 0, 676, 150, 1290, 0, 0,
	1252, 1254, 2146, 1258, 1264, 1267, 0, 155, 2566, 164,
	0, 1063, 0, 2133, 0, 0, 0, 0, 0, 0,
	1292, 0, 0, 2566, 186, 2566, 186, 167, 169, 172,
	0, 176, 174, 0, 1051, 0, 0, 1054, 111, 1290,
	0, 0, 114, 118, 126, 0, 0, 0, 132, 0,
	0, 0, 1269, 1273, 1281, 0, 0, 0, 1155, 1156,
	1159, 1165, 83, 0, 0, 0, 1277, 1279, 1285, 93,
	94, 2144, 95, 0, 1251, 0, 0, 0, 0, 178,
	116, 120, 127, 0, 1287, 113, 0, 201, 0, 0,
	191, 186, 2566, 0, 193, 0, 194, 195, 210, 0,
	0, 0, 977, 978, 1207, 1169, 1170, 0, 1175, 0,
	0, 0, 0, 1588, 222, 0, 1588, 230, 0, 2107,
	0, 355, 0, 0, 0, 0, 1013, 1110, 0, 984,
	0, 0, 0, 428, 424, 0, 433, 439, 438, 444,
	-2, 0, 0, 0, 0, -2, 0, 0, 1223, 1217,
	1218, 0, 0, 0, 0, 2566, 1373, 1379, 0, 1474,
	1489, 451, 1380, 1401, 0, 0, 0, 1390, 1386, 1383,
	1619, 0, 0, 0, 0, 0, 1612, 1615, 521, 522,
	275, 0, 0, 0, 0, 0, 300, 0, 0, 0,
	1020, 1024, 0, 2182, 2182, 0, 2137, 0, 0, 0,
	0, 260, 0, 263, 0, 0, 0, 268, 269, 270,
	271, 272, 262, 252, 1588, 0, 0, 633, 0, 0,
	784, 0, 807, 816, 818, 821, 859, 861, 878, 905,
	906, 1041, 0, 1041, 0, 0, 926, 1437, 0, 1512,
	1443, 1494, 1495, 0, 1249, 0, 1753, 1796, 0, 0,
	-2, 0, 0, 1800, 0, 0, 0, -2, 0, 0,
	0, 2030, 2032, 0, 2086, 1896, 0, 0, 0, 1900,
	1884, 1885, 0, 2004, 2047, 2076, 2080, 0, 1738, 1739,
	1740, 1741, 1742, 1743, 1744, 0, 2126, 2160, 2164, 1977,
	1978, 1982, 2140, 0, 0, 0, 1909, 0, 0, 0,
	0, 0, 0, 0, 0, 1719, 1723, 0, 0, 2048,
	2059, 2061, 1838, 1839, 1843, 1844, 1845, 1846, 1847, 1848,
	1849, 1850, 1851, 1852, -2, -2, -2, 1856, 1857, 1858,
	-2, -2, -2, 0, 0, 0, 2062, 2064, 2065, 2069,
	2070, 0, 1960, 1961, 1962, 2071, 0, 1476, 1470, 1531,
	0, 1617, 1535, 0, 1531, 1531, 1483, 1577, 0, 0,
	1601, 0, 1549, 0, 1550, 0, 1582, 0, 1557, 1560,
	1561, 1571, 0, 1563, 0, 1566, 0, 1896, -2, 301,
	302, 304, 0, 307, 308, 0, 0, 587, 588, 586,
	570, 0, 0, 1627, 0, 0, 1703, 1707, 1731, 594,
	595, 593, 483, 492, 218, 0, 1586, 0, 0, 0,
	0, 0, 0, 187, 1061, 1091, 0, 0, 0, 1083,
	0, 0, 1097, 157, 0, 0, 0, 165, 0, 0,
	162, 0, 171, 175, 1048, 0, 0, 0, 0, 1257,
	0, 0, 0, 129, 130, 131, 0, 136, 0, 137,
	0, 0, 0, 0, 0, 0, 0, 0, 1363, 1364,
	0, 1358, 0, 0, 0, 189, 0, 0, 0, 1246,
	212, 0, 0, 0, 0, 0, 1210, 1211, 1270, 1274,
	1282, 0, 0, 0, 230, 228, 0, 231, 0, 234,
	235, 0, 230, 224, 0, 0, 0, 1128, 369, 987,
	1098, 0, 1100, 0, 985, 0, 0, 1099, 420, 0,
	427, 0, 441, 0, 0, 1149, 0, 0, 1172, 1183,
	1128, 0, 1222, 1224, 0, 1232, 0, 0, 0, 1375,
	1379, 0, 1368, 1369, 1508, 1381, 1399, -2, 0, 0,
	1489, 1407, 1404, 1410, 1411, 0, 297, 0, 292, 294,
	0, 278, 0, 0, 1016, 1021, 0, 0, 0, 0,
	0, 1392, 1394, 0, 0, 0, 0, 0, 0, 251,
	262, 1588, 284, 0, 778, 802, 869, 907, 1040, 0,
	0, 909, 0, 0, 1511, 1498, 1499, 1496, 1249, 1798,
	1802, 0, 0, 0, 1804, -2, 0, 1826, -2, -2,
	2033, 2085, 1875, 1489, 1897, 1899, 1886, 2079, 1748, 0,
	1984, 1981, 0, 1968, 0, 1921, 1922, 0, 0, 1925,
	1927, 1928, 1929, 1687, 1680, 1679, 2058, 0, 0, 0,
	0, 1959, 1471, 0, 1973, 0, 0, 1539, 1973, 1973,
	1578, 0, 1580, 1547, 1540, 0, 2160, 1573, 1565, 0,
	0, 305, 0, 309, 310, 1621, 1626, 0, 1632, 1702,
	219, 151, 152, 1261, 1265, 1262, 0, 154, 0, 1062,
	0, 1065, 0, 0, 0, 0, 1072, 1084, 0, 0,
	0, 0, 0, 1085, 0, 1114, 0, 1237, 1244, 0,
	-2, 0, 0, 0, 159, 181, 0, 0, 1291, 0,
	0, 186, 186, 0, 0, 1253, 1255, 1268, 0, 0,
	0, 0, 139, 0, 0, 1271, 1275, 1283, 1278, 1280,
	1286, 0, 1365, 0, 0, 1288, 199, 200, 0, 186,
	0, 186, 192, 186, 1246, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 223, 290, 230, 357, 0, 1035,
	0, 1110, 1102, 1103, 1104, 0, 1109, 1111, 0, 0,
	1001, 986, 0, 997, 0, 0, 1014, 989, 0, 425,
	442, 0, 445, 0, 448, 975, 1146, 1180, 1128, 0,
	1214, 0, 0, 0, 0, 0, 0, 0, 1377, 1379,
	0, 1370, 1371, 1401, 1507, 0, 0, 0, 1389, 1508,
	0, 299, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 264, 0, 265, 266, 267, 253, 254,
	635, 637, 0, 0, 643, 1039, 0, 0, 0, 0,
	1497, 1806, -2, -2, 1827, 0, 2161, 2163, 1489, 0,
	1970, 1491, 0, 0, -2, 0, 0, 0, 1472, 1455,
	0, 1530, 1522, 1524, 1526, 2457, 2253, 2565, 1456, 1457,
	1600, 0, 1568, 306, 0, 1628, 0, 0, 1263, 156,
	0, 1066, 1067, 2136, 1069, 0, 1071, 1073, 1074, 1075,
	0, 1078, 2184, 0, 1082, 0, 1093, 1115, 0, 1124,
	0, 1239, 1249, 1243, 0, 1241, 1126, 0, 158, 160,
	180, 1246, 0, 161, 170, 0, 0, 115, 0, 0,
	2247, 142, 140, 138, 1250, 117, 0, 201, 211, 1245,
	213, 196, 186, 0, 1272, 1276, 1284, 232, 0, 233,
	236, 0, 0, 1050, 0, 988, 1101, 0, 1112, 1113,
	991, 0, 990, 0, 0, 0, 0, 0, 426, 429,
	0, 432, 0, 0, 0, 0, 0, 1225, 1223, 0,
	1231, 0, 0, 0, 1357, 0, 0, 1372, 1373, 449,
	1395, 0, 0, 1401, 1412, 277, 0, 0, 1022, 1025,
	1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1023, 1126,
	0, 0, 1090, 0, 282, 261, 0, 639, 0, 641,
	0, 908, 910, 0, 0, 1898, 1988, 0, 0, 1923,
	1924, -2, 0, 1864, 1972, 1974, 0, 0, 0, 0,
	0, 1541, 1622, 1259, 0, 1266, 1064, 1068, 0, 0,
	0, 1132, 0, 0, 1086, 0, 1118, 1119, 1035, 0,
	1120, 1121, 1122, 1238, 1500, 1244, 1035, 0, 0, 183,
	0, 0, 0, 0, 0, 0, 0, 190, 214, 1246,
	229, 246, 0, 1181, 989, 1049, 0, 0, 999, 0,
	1002, 0, 998, 995, 996, 987, 0, 430, 431, 446,
	0, 447, 0, 1184, 0, 0, 1232, 0, 0, 1360,
	1356, 1379, 1374, 1375, 1619, 1398, 1402, 0, 0, 1124,
	1126, 1046, 0, 638, 0, 0, 918, 919, 0, 0,
	0, 0, 1983, 1492, 1865, 0, 0, 1525, 1527, 1528,
	1529, 1260, 0, 0, 1077, 1137, 0, 0, 0, 1116,
	1117, 1046, 0, 1242, 1240, 1095, 0, 1128, 163, 0,
	1126, 0, 1055, 0, 0, 1058, 0, 0, 143, 2247,
	141, 0, 186, 249, 0, 243, 241, 242, 991, 0,
	0, 1106, 1108, 0, 1003, 1035, 1001, 443, 1182, 1215,
	1126, 0, 1124, 0, 1367, 1379, 1361, 1362, 0, 1377,
	0, 300, 300, 1035, 1124, 989, 1045, 300, 640, 642,
	1980, 2000, 1989, -2, 2525, 2254, 0, 2000, 2000, 1975,
	1976, 0, 0, 1079, 1133, 1134, 0, 1129, 1130, 1131,
	2183, 1080, 1081, 1114, 0, 0, 1132, 182, 1035, 1052,
	0, 0, 1053, 0, 0, 146, 0, 148, 215, 237,
	0, 0, 983, 0, 1105, 0, 0, 0, 0, 1050,
	991, 1124, 0, 1035, 0, 1353, 1366, 0, 1376, 1357,
	0, 279, 280, 1046, 1035, 1619, 0, 281, 1985, 0,
	0, 1991, 1992, 1993, 1994, 1995, 1986, 1987, 1070, 0,
	1135, 0, 1136, 0, 0, 0, 1619, 1123, 0, 1137,
	168, 1056, 0, 1059, 0, 144, 0, 244, 245, 980,
	982, 0, 1107, 992, 0, 994, 989, 1000, 1035, 0,
	1046, 0, 1359, 2145, 1360, 1396, 0, 989, 1046, 1089,
	0, 1997, 1998, 0, 0, 0, 1138, 0, 1141, 1142,
	0, 1139, 1094, 0, 1114, 0, 0, 0, 0, 993,
	991, 1046, 1126, 989, 1124, 1367, 0, 1619, 989, 1996,
	1999, 1990, 1076, 1140, 1143, 1144, 1125, 1096, 0, 0,
	247, 0, 1038, 983, 989, 1124, 1619, 1035, 1354, 1619,
	1087, 1619, 1043, 0, 0, 1034, 1036, 1037, 981, 1619,
	1035, 1228, 1046, 1397, 1088, 1057, 1042, 0, 248, 1226,
	1046, 989, 0, 989, 1619, 0, 1619, 1229, 1043, 1227,
	1060,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 569, 3, 575, 570, 3,
	580, 581, 573, 571, 585, 572, 582, 574, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 588, 3,
	561, 563, 562, 566, 584, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 578, 3, 579, 576, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 586, 568, 587, 564,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 565, 57904, 567,
	57905, 577, 57906, 583, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1302
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1307
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1309
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1312
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1313
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1314
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1315
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1316
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1317
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1318
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1319
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1320
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1321
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1322
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1329
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1338
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1340
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1343
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1344
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1345
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1346
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1347
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1348
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1349
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1350
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1351
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1410
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1436
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 76:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1450
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 81:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1468
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 82:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1472
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 83:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1476
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 92:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1502
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 93:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1506
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.user()}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1512
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1521
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1530
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1539
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1546
		{

			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1571
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1603
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1607
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 111:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1611
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1617
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1621
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1627
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1636
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1647
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1651
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1657
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1665
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1675
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1679
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1689
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1700
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1707
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1719
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1726
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1734
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1739
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1743
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1748
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1754
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 134:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1762
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 135:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1773
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 136:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1783
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 137:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1793
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 138:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1802
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 139:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1813
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 140:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1819
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 141:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1827
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1831
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1835
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 144:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1839
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 145:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1845
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1850
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1861
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1865
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1871
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1875
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 151:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1882
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1887
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1892
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1897
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1902
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1907
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1912
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1917
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1922
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1927
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1932
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1941
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1953
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1963
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1970
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 166:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1973
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1979
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 168:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1986
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1994
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2001
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2010
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2019
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2024
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2031
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2039
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2040
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2044
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2048
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2054
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2062
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2066
		{
			sqlVAL.union.val = nil
		}
	case 182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2072
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 183:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2076
		{
			sqlVAL.union.val = nil
		}
	case 184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2083
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2087
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 186:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2091
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2097
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 188:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2101
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 189:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2126
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2137
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2148
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2157
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2167
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2176
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2185
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 196:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2194
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 197:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2198
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2201
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2205
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2212
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2219
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2225
		{
			sqlVAL.union.val = []security.SQLUsername{sqlDollar[1].union.user()}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2229
		{
			sqlVAL.union.val = append(sqlDollar[1].union.users(), sqlDollar[3].union.user())
		}
	case 204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2234
		{
			sqlVAL.union.val = sqlDollar[1].union.user()
		}
	case 205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2236
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2241
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2248
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2256
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 216:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2280
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2287
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2291
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2295
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2299
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 221:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2328
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2340
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2350
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 224:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2361
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2370
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 226:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2374
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2378
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2386
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 229:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2390
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 230:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2394
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2401
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2405
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2414
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2418
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2422
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2426
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2506
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2517
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 240:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2522
		{
			sqlVAL.union.val = nil
		}
	case 241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2530
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2534
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2544
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2552
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2556
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2560
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 247:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2566
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 248:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2570
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 249:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2574
		{
			sqlVAL.union.val = nil
		}
	case 250:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2605
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2614
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2624
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2633
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2643
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2650
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2654
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2658
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2664
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2668
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2675
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 261:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2679
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 262:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2683
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2690
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2694
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2703
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2707
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2711
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2715
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2719
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2723
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2727
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2731
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2737
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2743
		{
			return unimplemented(sqllex, "alter function")
		}
	case 275:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2781
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2786
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2790
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2796
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2801
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2806
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2811
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2816
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2820
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 284:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2836
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2839
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2843
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2847
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2855
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2859
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2865
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 291:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2869
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2875
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2879
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2883
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2887
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2893
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2897
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 298:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2903
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 299:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2907
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 300:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2911
		{
			sqlVAL.union.val = nil
		}
	case 301:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2923
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2939
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 303:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2943
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2949
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 305:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2953
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2961
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2965
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2969
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2973
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2977
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2985
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2986
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2987
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2988
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2998
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3006
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3008
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3012
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3015
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3025
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3034
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3042
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3044
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3048
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3051
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3061
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3070
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3078
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3080
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3084
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3087
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3091
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3095
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 337:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3099
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3112
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3115
		{
			return unimplemented(sqllex, "comment on extension")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3119
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3124
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3136
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3138
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3139
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3142
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 353:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3143
		{
		}
	case 354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3144
		{
			return helpWith(sqllex, "CREATE")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3151
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3154
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 357:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3157
		{
			return unimplemented(sqllex, "create extension if not exists with")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3158
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3161
		{
			return unimplemented(sqllex, "create access method")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3162
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3163
		{
			return unimplemented(sqllex, "create cast")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3164
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3165
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 364:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3166
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3167
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3168
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3169
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3170
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3171
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3172
		{
			return unimplemented(sqllex, "create operator")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3173
		{
			return unimplemented(sqllex, "create publication")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3174
		{
			return unimplemented(sqllex, "create rule")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3175
		{
			return unimplemented(sqllex, "create server")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3176
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3177
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3178
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3179
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3182
		{
		}
	case 379:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3183
		{
		}
	case 380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3186
		{
		}
	case 381:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3187
		{
		}
	case 382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3190
		{
		}
	case 383:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3191
		{
		}
	case 384:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3194
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3195
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3196
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3197
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3198
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3199
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3200
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 391:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3201
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 392:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3202
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3203
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3204
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3205
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3206
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3207
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3208
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3209
		{
			return unimplemented(sqllex, "drop server")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3210
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3211
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3212
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3215
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3216
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3217
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3218
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3219
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3221
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3222
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3223
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3224
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3234
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3242
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3246
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 423:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3250
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3256
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3260
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3269
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 427:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3276
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 428:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3282
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 429:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3288
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3292
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3303
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 432:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3315
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 433:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3330
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 434:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3338
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 435:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3348
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3352
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3358
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3362
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3369
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 440:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3373
		{

			sqlVAL.union.val = nil
		}
	case 441:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3390
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3401
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 443:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3405
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 444:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3409
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3416
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3420
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3429
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3433
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3446
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3456
		{
			return helpWith(sqllex, "DELETE")
		}
	case 451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3459
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 452:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3460
		{
		}
	case 453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3468
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3471
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3472
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3473
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3474
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3475
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3484
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3485
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3486
		{
		}
	case 465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3487
		{
			return helpWith(sqllex, "DROP")
		}
	case 467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3490
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3491
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3492
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3493
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3494
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3495
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3496
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 480:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3504
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3508
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 482:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3512
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 483:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3521
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3529
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 485:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3537
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3541
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3544
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3552
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 489:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3556
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 490:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3559
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3567
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 492:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3576
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 493:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3584
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3592
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 495:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3600
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3607
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 497:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3614
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3622
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3629
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3633
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3639
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 502:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3643
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 503:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3652
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 504:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3660
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3667
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3675
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 507:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3679
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3682
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3686
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3691
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3704
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3709
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3711
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3716
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 515:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3720
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3743
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3750
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 518:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3752
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3760
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3768
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 521:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3776
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 522:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3784
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3795
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3799
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3802
		{
			return helpWith(sqllex, "DELETE")
		}
	case 533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3804
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3805
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3806
		{
			return helpWith(sqllex, "INSERT")
		}
	case 541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3809
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3811
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3814
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3819
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3820
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3821
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3826
		{
			return helpWith(sqllex, "DELETE")
		}
	case 558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3827
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3828
		{
			return helpWith(sqllex, "INSERT")
		}
	case 561:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3830
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3834
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3835
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 567:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3839
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3843
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 569:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3853
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 570:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3861
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3869
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3873
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 573:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3877
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3887
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 575:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3894
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3902
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3906
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 578:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3910
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3920
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3924
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3928
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3932
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3935
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3957
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 585:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3961
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 586:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3965
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 587:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3969
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 588:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3973
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 589:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3983
		{
			return unimplemented(sqllex, "grant privileges on sequence")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3986
		{
			return helpWith(sqllex, "GRANT")
		}
	case 591:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4008
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 592:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4012
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 593:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4016
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 594:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4020
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 595:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4024
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 596:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4034
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4037
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4042
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4046
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4056
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4060
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4074
		{
			return helpWith(sqllex, "RESET")
		}
	case 609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4075
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4083
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4087
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4090
		{
			return helpWith(sqllex, "RESET")
		}
	case 613:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4098
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4101
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4112
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4115
		{
			return helpWith(sqllex, "USE")
		}
	case 618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4119
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4120
		{
		}
	case 620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4121
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4122
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4126
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4127
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4128
		{
			return helpWith(sqllex, "USE")
		}
	case 630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4144
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 631:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4159
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4162
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 633:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4180
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 634:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4188
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4192
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 636:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4196
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4202
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4206
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4212
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4216
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4220
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 642:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4224
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4228
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4239
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4242
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 648:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4252
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4268
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4272
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 651:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4277
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4296
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4299
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 654:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4301
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 655:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4304
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4308
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4327
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4334
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4339
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 661:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4344
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4349
		{
			return unimplemented(sqllex, "set from current")
		}
	case 664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4350
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4358
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4363
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4370
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4374
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4380
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4384
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 672:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4391
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4412
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4416
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4422
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4426
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4430
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4434
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4438
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4444
		{
			sqlVAL.union.val = tree.Low
		}
	case 683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4448
		{
			sqlVAL.union.val = tree.Normal
		}
	case 684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4452
		{
			sqlVAL.union.val = tree.High
		}
	case 685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4463
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4467
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 687:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4471
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4476
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 690:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4480
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4495
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4496
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4497
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4498
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4499
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4500
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 704:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4501
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4502
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4504
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4505
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4506
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4507
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4508
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4510
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4511
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4512
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4514
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4516
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4517
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4518
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4519
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4520
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4521
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4522
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4523
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4524
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4525
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4526
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4527
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4528
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4529
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4530
		{
			return helpWith(sqllex, "SHOW")
		}
	case 759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4536
		{
		}
	case 760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4537
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 761:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4540
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4544
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4549
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4554
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4559
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4564
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4574
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4575
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4576
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4587
		{
			sqlVAL.str = "client_encoding"
		}
	case 775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4590
		{
			sqlVAL.str = "timezone"
		}
	case 776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4591
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4605
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 778:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4609
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4613
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4624
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4632
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4640
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 783:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4646
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 784:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4654
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4663
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 786:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4672
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 787:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4681
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4689
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 789:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4699
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 790:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4703
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4706
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4708
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4711
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4713
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4717
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4720
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 797:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4728
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4731
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 799:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4739
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 800:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4743
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4747
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4751
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4754
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4762
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4765
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 806:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4772
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4776
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4786
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4795
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 810:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4802
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4805
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 812:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4818
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4826
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 814:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4834
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4837
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 816:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4839
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4843
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4847
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4850
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 820:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4852
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4856
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4859
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 823:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4867
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4870
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 825:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4872
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4875
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4883
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4886
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 829:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4888
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4891
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 831:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4895
		{
			sqlVAL.union.val = true
		}
	case 832:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4897
		{
			sqlVAL.union.val = true
		}
	case 833:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4899
		{
			sqlVAL.union.val = false
		}
	case 836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4916
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4920
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4923
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4924
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4926
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4930
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4934
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4937
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4939
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4947
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4955
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4965
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4971
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 849:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4973
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4979
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4981
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4987
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 853:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4991
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 854:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4995
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 855:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5001
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5005
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 857:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5016
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5019
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5021
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5024
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 861:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5026
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5030
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5033
		{
			sqlVAL.union.val = true
		}
	case 864:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5034
		{
			sqlVAL.union.val = false
		}
	case 865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5042
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5045
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 867:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5047
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5050
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 869:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5058
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5068
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5078
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5081
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5088
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5091
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 875:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5093
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5096
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 877:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5099
		{
			sqlVAL.union.val = true
		}
	case 878:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5100
		{
			sqlVAL.union.val = false
		}
	case 879:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5107
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5111
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5114
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 882:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5121
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5125
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5128
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5135
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5139
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 887:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5143
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5153
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5156
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 890:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5164
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5169
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5174
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5178
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5188
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5192
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5197
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5200
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 901:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5213
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5216
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 903:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5224
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5227
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 905:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5237
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5241
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5245
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5253
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5261
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5268
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5274
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5276
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5279
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 914:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5281
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5284
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 917:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5288
		{
		}
	case 918:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5297
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5305
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5311
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 921:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5320
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5325
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5329
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5332
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 925:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5341
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5345
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5361
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5367
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5373
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5379
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5386
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5391
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 933:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5395
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5401
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5408
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 936:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5413
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 937:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5533
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5537
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5541
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5580
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5584
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5589
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5593
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5601
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5610
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5614
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5618
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5625
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 950:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5629
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 952:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5642
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 954:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5643
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5644
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 957:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5654
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 959:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5655
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 960:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5656
		{
			return helpWith(sqllex, "RESUME")
		}
	case 961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5666
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5674
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5676
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5680
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5683
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5688
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5692
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5707
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5715
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5717
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5723
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5731
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5737
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5744
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.user(),
			}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5751
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.user(),
			}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5758
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 977:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5769
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5778
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5786
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 980:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5825
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Interleave:       sqlDollar[9].union.interleave(),
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[10].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[11].union.storageParams(),
				OnCommit:         sqlDollar[12].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[13].union.locality(),
			}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:5841
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Interleave:       sqlDollar[12].union.interleave(),
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[13].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				OnCommit:         sqlDollar[15].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[16].union.locality(),
			}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5859
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 983:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5863
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 985:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5870
		{

			sqlVAL.union.val = nil
		}
	case 986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5876
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 987:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5882
		{
			sqlVAL.str = ""
		}
	case 988:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5886
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 989:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5892
		{
			sqlVAL.union.val = nil
		}
	case 990:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5896
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 991:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5901
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 992:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5905
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 993:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5909
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 994:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5913
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5919
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5923
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5929
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5933
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 999:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5939
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5953
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5968
		{
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5969
		{
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5970
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5988
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5989
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5990
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5994
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5995
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5996
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5997
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5998
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6003
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6009
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6013
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6019
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6025
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6038
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6047
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6051
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6057
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6062
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6063
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6064
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6065
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6066
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6067
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6068
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6069
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6070
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6075
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6084
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6091
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6096
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6101
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6107
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6114
		{
			sqlVAL.str = ""
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6121
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6127
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6135
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6141
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6147
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6153
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6163
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6169
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6175
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6182
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6189
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6195
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6199
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6205
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6215
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6219
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6225
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6239
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6250
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6254
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6260
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6264
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6268
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6272
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6276
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6280
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6284
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6302
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6306
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6310
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6314
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6320
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6324
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6331
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6335
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6339
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6349
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6353
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6357
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6364
		{
			sqlVAL.union.val = true
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6368
		{
			sqlVAL.union.val = false
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6374
		{
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6375
		{
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6380
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				Interleave:       sqlDollar[8].union.interleave(),
				PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				Predicate:        sqlDollar[11].union.expr(),
			}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6393
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					Interleave:       sqlDollar[9].union.interleave(),
					PartitionByIndex: sqlDollar[10].union.partitionByIndex(),
					StorageParams:    sqlDollar[11].union.storageParams(),
					Predicate:        sqlDollar[12].union.expr(),
				},
			}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6408
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6421
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6433
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6438
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6444
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6451
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					Interleave:       sqlDollar[7].union.interleave(),
					PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
					Predicate:        sqlDollar[10].union.expr(),
				},
			}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6464
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6476
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6487
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6494
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6498
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6504
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6514
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6525
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6529
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6536
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6542
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6553
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6557
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6563
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6569
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6573
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6579
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6583
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6589
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6594
		{
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6595
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6596
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6597
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6598
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6599
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6617
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6621
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6627
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6633
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6639
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6643
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6663
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6667
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6671
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6675
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6684
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6688
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6692
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6696
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6700
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6706
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6712
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6720
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6724
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6728
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6732
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6736
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6755
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6764
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6772
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6776
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6779
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6780
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6783
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6784
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6786
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6787
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6788
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6798
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6801
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6803
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6805
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6807
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6808
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6810
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6811
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6813
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6815
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6823
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6826
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6830
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6834
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6844
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6848
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6851
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6859
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6863
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6866
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6872
		{
			sqlVAL.union.val = true
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6876
		{

			sqlVAL.union.val = true
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6881
		{
			sqlVAL.union.val = false
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6891
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6905
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6917
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6929
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6939
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6949
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6953
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6957
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6961
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6965
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6969
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6973
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6977
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6981
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6985
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6989
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6993
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6997
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7001
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7005
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7009
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7013
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7017
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7021
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7030
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7034
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7040
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7044
		{
			sqlVAL.union.val = nil
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7050
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7054
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7059
		{
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7060
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7069
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7077
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7085
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7087
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7089
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7091
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7093
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7095
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7099
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7103
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7109
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7113
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:7133
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				Interleave:       sqlDollar[14].union.interleave(),
				PartitionByIndex: sqlDollar[15].union.partitionByIndex(),
				StorageParams:    sqlDollar[16].union.storageParams(),
				Predicate:        sqlDollar[17].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:7151
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				Interleave:       sqlDollar[17].union.interleave(),
				PartitionByIndex: sqlDollar[18].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[19].union.storageParams(),
				Predicate:        sqlDollar[20].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7170
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				Interleave:       sqlDollar[13].union.interleave(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7187
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				Interleave:       sqlDollar[16].union.interleave(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7204
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7208
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7223
		{
			sqlVAL.union.val = false
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7229
		{
			sqlVAL.union.val = true
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7233
		{
			sqlVAL.union.val = false
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7239
		{
			sqlVAL.union.val = true
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7243
		{
			sqlVAL.union.val = false
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7249
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7253
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7262
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7268
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7274
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7282
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7306
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7307
		{
			sqlVAL.str = ""
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7310
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7311
		{
			sqlVAL.str = ""
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7315
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7319
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7323
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7329
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7335
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7341
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7347
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7355
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7361
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7369
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7377
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7387
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7393
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7400
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7406
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7412
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7419
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7425
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7431
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7437
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7446
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
			}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7454
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
			}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7464
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7470
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7480
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7486
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7498
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7507
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.user(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7517
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7526
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.user(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7538
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7544
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7552
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.user(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7561
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.user(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7572
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7578
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7590
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7596
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7610
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7616
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7624
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7628
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7633
		{
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7634
		{
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7637
		{
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7638
		{
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7646
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7649
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7659
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7667
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7669
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7673
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7676
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7689
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7697
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7699
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7705
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7718
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7726
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7728
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7734
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7742
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7745
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7749
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7750
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7751
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7767
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7770
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7772
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7775
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7785
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7788
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7790
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7793
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7797
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7802
		{
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7803
		{
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7804
		{
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7814
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7818
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7821
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7824
		{
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7825
		{
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7829
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7833
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7839
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7843
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7849
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7853
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7866
		{
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7868
		{
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7872
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7877
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7881
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7885
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7889
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7895
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7901
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7907
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7911
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7917
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7921
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:7931
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
			}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:7945
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
			}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7959
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7964
		{
			sqlVAL.str = ""
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7969
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7975
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7979
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7985
		{

		}
	case 1363:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7992
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7996
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8000
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8009
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8015
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8019
		{
			sqlVAL.str = ""
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8025
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8029
		{
			sqlVAL.str = ""
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8035
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8039
		{
			sqlVAL.str = ""
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8045
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8049
		{
			sqlVAL.str = ""
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8055
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8063
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8068
		{
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8069
		{
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8084
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8091
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8098
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8109
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8116
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8120
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8129
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8134
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8140
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8144
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8148
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8154
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8158
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8178
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8182
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8189
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8197
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8205
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8209
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8214
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8218
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8235
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8247
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8250
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8253
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8259
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8263
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8276
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8279
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8283
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8294
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.users(),
				NewRole:  sqlDollar[6].union.user(),
			}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8300
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8309
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.users(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8315
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8356
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8362
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8366
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8381
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8385
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8389
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8393
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8397
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8401
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8405
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8409
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8414
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8415
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8418
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8419
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8423
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8427
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8433
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8442
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8443
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8444
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8445
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8448
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8449
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8452
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8453
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8454
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8459
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8494
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8495
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8496
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8518
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8531
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8545
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8557
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8561
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8570
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8579
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8594
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8601
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8613
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8617
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8622
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8628
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8632
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8638
		{
			sqlVAL.union.val = true
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8642
		{
			sqlVAL.union.val = false
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8648
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8658
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8670
		{
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8671
		{
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8675
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8679
		{
			sqlVAL.union.val = nil
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8684
		{
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8685
		{
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8689
		{
			sqlVAL.union.val = true
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8693
		{
			sqlVAL.union.val = false
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8697
		{
			sqlVAL.union.val = false
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8703
		{
			sqlVAL.union.val = true
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8709
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8714
		{
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8715
		{
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8718
		{
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8719
		{
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8723
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8727
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8733
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8739
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8743
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8750
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8754
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8760
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8781
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8786
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8798
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8802
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8806
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8815
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8824
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8835
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8836
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8840
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8844
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8848
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8862
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8866
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8874
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8881
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8903
		{
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8904
		{
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8907
		{
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8908
		{
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8925
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8929
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8934
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8935
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8941
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8942
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8943
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8944
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8948
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8952
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8971
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8974
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8976
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8988
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8991
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8993
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8999
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9003
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9009
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9013
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9018
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9023
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9029
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9034
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9041
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9046
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9057
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9061
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9065
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9073
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9104
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9114
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9124
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9132
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9141
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9145
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9149
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9160
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9184
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9190
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9201
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9205
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9211
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9213
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9217
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9223
		{
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9225
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9228
		{
			sqlVAL.union.val = nil
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9229
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9230
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9234
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9238
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9244
		{
			sqlVAL.union.val = true
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9248
		{
			sqlVAL.union.val = false
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9268
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9272
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9276
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9280
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9284
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9288
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9294
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9298
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9305
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9311
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9318
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9324
		{
			sqlVAL.str = tree.AstFull
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9328
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9332
		{
			sqlVAL.str = tree.AstRight
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9336
		{
			sqlVAL.str = tree.AstInner
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9342
		{
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9343
		{
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9367
		{
			sqlVAL.str = tree.AstHash
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9371
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9375
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9379
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9383
		{
			sqlVAL.str = ""
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9396
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9400
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9405
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9406
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9407
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9408
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9412
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9417
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9431
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9435
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9441
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9447
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9457
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9467
		{
			sqlVAL.union.val = true
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9471
		{
			sqlVAL.union.val = false
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9477
		{
			sqlVAL.union.val = true
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9481
		{
			sqlVAL.union.val = false
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9487
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9494
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9506
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9519
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9527
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9528
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9538
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9545
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9546
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9548
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9556
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9557
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9569
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9576
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9585
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9625
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9630
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9637
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9638
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9641
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9642
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9643
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9644
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9645
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9646
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9647
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9648
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9649
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9650
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9651
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9652
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9653
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9654
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9655
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9656
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9657
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9658
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9659
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9660
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9661
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9662
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9663
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9664
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9665
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9666
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9667
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9668
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9669
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9670
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9671
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9672
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9675
		{
			sqlVAL.union.val = types.Geography
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9676
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9677
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9679
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9683
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9687
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9695
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9721
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9729
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9737
		{
			sqlVAL.union.val = nil
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9744
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9748
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9752
		{
			sqlVAL.union.val = types.Int2
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9756
		{
			sqlVAL.union.val = types.Int
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9760
		{
			sqlVAL.union.val = types.Float4
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9764
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9768
		{
			sqlVAL.union.val = types.Float
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9772
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9780
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9788
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9796
		{
			sqlVAL.union.val = types.Bool
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9802
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9815
		{
			sqlVAL.union.val = types.Float
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9821
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9827
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9835
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9839
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9843
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9849
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9861
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9867
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9871
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9875
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9879
		{
			sqlVAL.union.val = types.String
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9888
		{
			sqlVAL.union.val = true
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9889
		{
			sqlVAL.union.val = false
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9894
		{
			sqlVAL.union.val = types.Date
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9898
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9906
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9918
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9920
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9929
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9937
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9950
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9954
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9964
		{
			sqlVAL.union.val = true
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9965
		{
			sqlVAL.union.val = false
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9966
		{
			sqlVAL.union.val = false
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9970
		{
			sqlVAL.union.val = types.Interval
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9974
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9978
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9989
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9997
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10005
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10013
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10021
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10029
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10035
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10044
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10053
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10062
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10068
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10077
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10083
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10093
		{
			sqlVAL.union.val = nil
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10099
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10107
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10144
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10148
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10152
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10156
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10167
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10172
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10176
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10180
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10184
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10188
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10192
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10196
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10200
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10204
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10208
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10212
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10216
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10220
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10224
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10228
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10232
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10236
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10240
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10244
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10248
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10252
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10256
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10260
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10264
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10268
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10272
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10276
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10280
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10284
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10288
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10292
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10296
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10300
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10304
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10308
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10312
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10316
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10320
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10324
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10328
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10332
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10336
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10340
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10344
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10348
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10352
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10356
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10360
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10364
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10368
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10372
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10376
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10380
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10384
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10388
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10392
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10396
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10400
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10404
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10408
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10412
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10416
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10419
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10421
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10425
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10429
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10433
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10437
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10441
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10445
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10449
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10453
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10457
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10461
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10465
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10469
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10473
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10477
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10481
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10485
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10502
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10507
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10519
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10523
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10527
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10531
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10535
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10539
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10543
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10547
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10551
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10555
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10559
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10563
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10567
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10571
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10575
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10579
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10583
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10587
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10591
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10595
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10599
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10603
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10607
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10611
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10615
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10619
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10623
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10627
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10641
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10649
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10685
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10689
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10693
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10697
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10701
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10706
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10708
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10712
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10716
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10720
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10724
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10728
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10732
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10741
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10748
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10752
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10756
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10762
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10767
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10771
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10775
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10779
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10783
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10786
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10790
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10794
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10797
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10798
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10800
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10806
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10810
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10813
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10822
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10875
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10888
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10900
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10909
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10910
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10915
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10919
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10923
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10929
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10933
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10937
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10941
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10945
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10949
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10955
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10959
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10963
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10967
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10971
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10975
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10979
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10983
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10987
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10991
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10995
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10999
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11003
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11010
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11013
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11015
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11018
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11020
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11024
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11027
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11029
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11033
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11036
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11038
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11042
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11045
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11047
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11051
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11054
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11056
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11059
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11061
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11064
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11066
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11069
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11071
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11074
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11076
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11080
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11083
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11084
		{
			return unimplemented(sqllex, "treat")
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11086
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11090
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11094
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11098
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11102
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11105
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11107
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11110
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11116
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11120
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11126
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11130
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11137
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11141
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11147
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11151
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11157
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11165
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11169
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11173
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11180
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11200
		{
			sqlVAL.str = ""
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11206
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11210
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11216
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11224
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11232
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11240
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11246
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11259
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11287
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11291
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11295
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11299
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11306
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11315
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11319
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11323
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11327
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11332
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11345
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11349
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11356
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11368
		{
			sqlVAL.union.val = tree.Any
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11372
		{
			sqlVAL.union.val = tree.Some
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11376
		{
			sqlVAL.union.val = tree.All
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11381
		{
			sqlVAL.union.val = tree.Plus
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11382
		{
			sqlVAL.union.val = tree.Minus
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11383
		{
			sqlVAL.union.val = tree.Mult
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11384
		{
			sqlVAL.union.val = tree.Div
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11385
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11386
		{
			sqlVAL.union.val = tree.Mod
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11387
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11388
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11389
		{
			sqlVAL.union.val = tree.Pow
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11390
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11391
		{
			sqlVAL.union.val = tree.LT
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11392
		{
			sqlVAL.union.val = tree.GT
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11393
		{
			sqlVAL.union.val = tree.EQ
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11394
		{
			sqlVAL.union.val = tree.LE
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11395
		{
			sqlVAL.union.val = tree.GE
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11396
		{
			sqlVAL.union.val = tree.NE
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11400
		{
			sqlVAL.union.val = tree.Like
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11401
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11402
		{
			sqlVAL.union.val = tree.ILike
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11403
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11426
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11430
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11436
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11440
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11444
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11455
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11459
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11465
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11469
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11476
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11482
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11486
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11492
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11496
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11502
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11506
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11512
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11516
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11522
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11526
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11549
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11553
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11557
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11563
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11570
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11574
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11591
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11595
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11599
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11603
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11607
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11613
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11619
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11625
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11629
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11633
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11639
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11651
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11658
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11662
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11668
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11674
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11678
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11685
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11691
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11695
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11702
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11708
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11712
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11717
		{
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11718
		{
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11722
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11726
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11732
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11741
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11745
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11749
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11757
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11761
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11767
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11771
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11790
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11798
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11821
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11830
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11834
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11838
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11842
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11848
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11852
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11867
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11871
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11883
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11887
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11896
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11907
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11916
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11924
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11936
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12017
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12025
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12029
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12035
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12039
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12047
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12072
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12079
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12083
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12087
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12101
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12105
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12109
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12122
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12131
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12149
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12162
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12169
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12194
		{
			sqlVAL.str = ""
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12200
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12204
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
