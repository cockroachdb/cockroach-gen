// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"math"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: tree.ComparisonOperator{
					Symbol:             tree.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case tree.BinaryOperator:

		switch op.Symbol {
		case tree.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case tree.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case tree.ComparisonOperator:
		switch op.Symbol {
		case tree.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:165

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) relocateSubject() tree.RelocateSubject {
	return u.val.(tree.RelocateSubject)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}

func (u *sqlSymUnion) scheduleLabelSpec() *tree.ScheduleLabelSpec {
	return u.val.(*tree.ScheduleLabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}

//line sql-gen.y:882
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTED = lexbase.ENCRYPTED
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INCREMENTAL_STORAGE = lexbase.INCREMENTAL_STORAGE
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NOSQLLOGIN = lexbase.NOSQLLOGIN
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NONVOTERS = lexbase.NONVOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOVIEWACTIVITYREDACTED = lexbase.NOVIEWACTIVITYREDACTED
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const RELOCATE = lexbase.RELOCATE
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const SQLLOGIN = lexbase.SQLLOGIN
const START = lexbase.START
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIEWACTIVITYREDACTED = lexbase.VIEWACTIVITYREDACTED
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const INTERVAL_SIMPLE = lexbase.INTERVAL_SIMPLE
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPERIMENTAL_RELOCATE",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INCREMENTAL_STORAGE",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NOSQLLOGIN",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NONVOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOVIEWACTIVITYREDACTED",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"RELOCATE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"SQLLOGIN",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIEWACTIVITYREDACTED",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"INTERVAL_SIMPLE",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:13906

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1616,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	263, 420,
	-2, 0,
	-1, 74,
	245, 248,
	523, 248,
	-2, 0,
	-1, 88,
	234, 1349,
	247, 1349,
	263, 416,
	396, 416,
	407, 1098,
	447, 416,
	460, 1098,
	508, 1098,
	534, 416,
	560, 1098,
	-2, 0,
	-1, 94,
	133, 1616,
	240, 1616,
	545, 1616,
	546, 1616,
	-2, 0,
	-1, 112,
	152, 1587,
	172, 1587,
	185, 1587,
	243, 1587,
	276, 1587,
	347, 1587,
	357, 1587,
	540, 1587,
	-2, 1558,
	-1, 153,
	160, 937,
	262, 937,
	399, 898,
	465, 898,
	507, 898,
	526, 937,
	528, 898,
	-2, 0,
	-1, 157,
	4, 1618,
	21, 1618,
	22, 1618,
	23, 1618,
	24, 1618,
	25, 1618,
	26, 1618,
	27, 1618,
	29, 1618,
	30, 1618,
	36, 1618,
	41, 1618,
	42, 1618,
	44, 1618,
	45, 1618,
	46, 1618,
	47, 1618,
	48, 1618,
	49, 1618,
	50, 1618,
	51, 1618,
	53, 1618,
	54, 1618,
	55, 1618,
	56, 1618,
	58, 1618,
	59, 1618,
	60, 1618,
	61, 1618,
	62, 1618,
	63, 1618,
	64, 1618,
	68, 1618,
	69, 1618,
	70, 1618,
	71, 1618,
	73, 1618,
	74, 1618,
	75, 1618,
	79, 1618,
	80, 1618,
	81, 1618,
	82, 1618,
	83, 1618,
	84, 1618,
	85, 1618,
	88, 1618,
	89, 1618,
	90, 1618,
	91, 1618,
	92, 1618,
	94, 1618,
	96, 1618,
	97, 1618,
	98, 1618,
	99, 1618,
	100, 1618,
	101, 1618,
	103, 1618,
	104, 1618,
	105, 1618,
	107, 1618,
	108, 1618,
	109, 1618,
	117, 1618,
	118, 1618,
	119, 1618,
	120, 1618,
	121, 1618,
	123, 1618,
	124, 1618,
	125, 1618,
	126, 1618,
	128, 1618,
	129, 1618,
	130, 1618,
	132, 1618,
	133, 1618,
	134, 1618,
	136, 1618,
	137, 1618,
	138, 1618,
	141, 1618,
	142, 1618,
	143, 1618,
	145, 1618,
	146, 1618,
	147, 1618,
	149, 1618,
	150, 1618,
	151, 1618,
	153, 1618,
	154, 1618,
	155, 1618,
	156, 1618,
	157, 1618,
	158, 1618,
	159, 1618,
	160, 1618,
	161, 1618,
	162, 1618,
	163, 1618,
	164, 1618,
	165, 1618,
	166, 1618,
	167, 1618,
	168, 1618,
	169, 1618,
	171, 1618,
	177, 1618,
	178, 1618,
	179, 1618,
	180, 1618,
	184, 1618,
	186, 1618,
	187, 1618,
	188, 1618,
	192, 1618,
	193, 1618,
	194, 1618,
	195, 1618,
	196, 1618,
	197, 1618,
	198, 1618,
	199, 1618,
	200, 1618,
	201, 1618,
	202, 1618,
	203, 1618,
	204, 1618,
	205, 1618,
	207, 1618,
	208, 1618,
	210, 1618,
	211, 1618,
	213, 1618,
	214, 1618,
	215, 1618,
	216, 1618,
	217, 1618,
	218, 1618,
	219, 1618,
	220, 1618,
	221, 1618,
	223, 1618,
	224, 1618,
	226, 1618,
	227, 1618,
	228, 1618,
	229, 1618,
	230, 1618,
	234, 1618,
	235, 1618,
	236, 1618,
	237, 1618,
	240, 1618,
	241, 1618,
	242, 1618,
	244, 1618,
	246, 1618,
	247, 1618,
	249, 1618,
	251, 1618,
	252, 1618,
	253, 1618,
	255, 1618,
	259, 1618,
	260, 1618,
	261, 1618,
	262, 1618,
	263, 1618,
	264, 1618,
	266, 1618,
	267, 1618,
	268, 1618,
	270, 1618,
	271, 1618,
	273, 1618,
	274, 1618,
	277, 1618,
	278, 1618,
	279, 1618,
	280, 1618,
	281, 1618,
	282, 1618,
	283, 1618,
	286, 1618,
	287, 1618,
	288, 1618,
	289, 1618,
	291, 1618,
	292, 1618,
	293, 1618,
	294, 1618,
	295, 1618,
	296, 1618,
	297, 1618,
	298, 1618,
	299, 1618,
	300, 1618,
	301, 1618,
	302, 1618,
	303, 1618,
	304, 1618,
	305, 1618,
	306, 1618,
	307, 1618,
	308, 1618,
	309, 1618,
	310, 1618,
	311, 1618,
	312, 1618,
	314, 1618,
	316, 1618,
	317, 1618,
	318, 1618,
	319, 1618,
	320, 1618,
	321, 1618,
	322, 1618,
	323, 1618,
	324, 1618,
	325, 1618,
	326, 1618,
	327, 1618,
	328, 1618,
	329, 1618,
	330, 1618,
	331, 1618,
	333, 1618,
	334, 1618,
	336, 1618,
	338, 1618,
	339, 1618,
	340, 1618,
	342, 1618,
	343, 1618,
	344, 1618,
	345, 1618,
	346, 1618,
	349, 1618,
	352, 1618,
	353, 1618,
	354, 1618,
	355, 1618,
	358, 1618,
	359, 1618,
	360, 1618,
	362, 1618,
	364, 1618,
	365, 1618,
	366, 1618,
	367, 1618,
	368, 1618,
	369, 1618,
	370, 1618,
	371, 1618,
	372, 1618,
	373, 1618,
	374, 1618,
	375, 1618,
	376, 1618,
	378, 1618,
	379, 1618,
	380, 1618,
	381, 1618,
	382, 1618,
	383, 1618,
	384, 1618,
	385, 1618,
	386, 1618,
	387, 1618,
	388, 1618,
	389, 1618,
	390, 1618,
	391, 1618,
	392, 1618,
	394, 1618,
	395, 1618,
	397, 1618,
	398, 1618,
	399, 1618,
	400, 1618,
	401, 1618,
	402, 1618,
	403, 1618,
	404, 1618,
	405, 1618,
	406, 1618,
	407, 1618,
	408, 1618,
	409, 1618,
	411, 1618,
	413, 1618,
	414, 1618,
	415, 1618,
	421, 1618,
	422, 1618,
	424, 1618,
	425, 1618,
	426, 1618,
	427, 1618,
	428, 1618,
	429, 1618,
	430, 1618,
	431, 1618,
	432, 1618,
	433, 1618,
	435, 1618,
	436, 1618,
	437, 1618,
	439, 1618,
	440, 1618,
	441, 1618,
	442, 1618,
	443, 1618,
	444, 1618,
	445, 1618,
	447, 1618,
	448, 1618,
	449, 1618,
	450, 1618,
	451, 1618,
	452, 1618,
	453, 1618,
	454, 1618,
	455, 1618,
	456, 1618,
	457, 1618,
	458, 1618,
	460, 1618,
	461, 1618,
	462, 1618,
	463, 1618,
	464, 1618,
	465, 1618,
	467, 1618,
	468, 1618,
	469, 1618,
	470, 1618,
	471, 1618,
	472, 1618,
	474, 1618,
	475, 1618,
	476, 1618,
	477, 1618,
	478, 1618,
	479, 1618,
	480, 1618,
	481, 1618,
	483, 1618,
	485, 1618,
	486, 1618,
	487, 1618,
	488, 1618,
	489, 1618,
	490, 1618,
	491, 1618,
	492, 1618,
	493, 1618,
	494, 1618,
	495, 1618,
	496, 1618,
	497, 1618,
	498, 1618,
	499, 1618,
	500, 1618,
	501, 1618,
	503, 1618,
	504, 1618,
	506, 1618,
	507, 1618,
	509, 1618,
	510, 1618,
	511, 1618,
	512, 1618,
	513, 1618,
	514, 1618,
	515, 1618,
	516, 1618,
	518, 1618,
	519, 1618,
	520, 1618,
	521, 1618,
	522, 1618,
	524, 1618,
	526, 1618,
	527, 1618,
	528, 1618,
	529, 1618,
	530, 1618,
	531, 1618,
	533, 1618,
	534, 1618,
	535, 1618,
	536, 1618,
	538, 1618,
	539, 1618,
	542, 1618,
	543, 1618,
	544, 1618,
	545, 1618,
	546, 1618,
	547, 1618,
	548, 1618,
	550, 1618,
	553, 1618,
	554, 1618,
	555, 1618,
	556, 1618,
	557, 1618,
	558, 1618,
	560, 1618,
	561, 1618,
	562, 1618,
	563, 1618,
	564, 1618,
	565, 1618,
	566, 1618,
	571, 1618,
	572, 1618,
	573, 1618,
	574, 1618,
	575, 1618,
	576, 1618,
	-2, 0,
	-1, 158,
	1, 1466,
	131, 1466,
	251, 1466,
	335, 1466,
	394, 1466,
	403, 1466,
	580, 1466,
	610, 1466,
	-2, 0,
	-1, 160,
	1, 1466,
	610, 1466,
	-2, 0,
	-1, 161,
	1, 1466,
	610, 1466,
	-2, 0,
	-1, 162,
	1, 1466,
	523, 1466,
	610, 1466,
	-2, 0,
	-1, 191,
	152, 1586,
	172, 1586,
	185, 1586,
	243, 1586,
	276, 1586,
	347, 1586,
	357, 1586,
	540, 1586,
	-2, 1561,
	-1, 238,
	4, 1625,
	5, 1625,
	6, 1625,
	7, 1625,
	8, 1625,
	9, 1625,
	10, 1625,
	21, 1625,
	22, 1625,
	23, 1625,
	24, 1625,
	25, 1625,
	26, 1625,
	27, 1625,
	29, 1625,
	30, 1625,
	36, 1625,
	37, 1625,
	41, 1625,
	42, 1625,
	43, 1625,
	44, 1625,
	45, 1625,
	46, 1625,
	47, 1625,
	48, 1625,
	49, 1625,
	50, 1625,
	51, 1625,
	53, 1625,
	54, 1625,
	55, 1625,
	56, 1625,
	58, 1625,
	59, 1625,
	60, 1625,
	61, 1625,
	62, 1625,
	63, 1625,
	64, 1625,
	65, 1625,
	66, 1625,
	67, 1625,
	68, 1625,
	69, 1625,
	70, 1625,
	71, 1625,
	73, 1625,
	74, 1625,
	75, 1625,
	77, 1625,
	79, 1625,
	80, 1625,
	81, 1625,
	82, 1625,
	83, 1625,
	84, 1625,
	85, 1625,
	88, 1625,
	89, 1625,
	90, 1625,
	91, 1625,
	92, 1625,
	94, 1625,
	96, 1625,
	97, 1625,
	98, 1625,
	99, 1625,
	100, 1625,
	101, 1625,
	103, 1625,
	104, 1625,
	105, 1625,
	106, 1625,
	107, 1625,
	108, 1625,
	109, 1625,
	110, 1625,
	111, 1625,
	112, 1625,
	113, 1625,
	114, 1625,
	115, 1625,
	116, 1625,
	117, 1625,
	118, 1625,
	119, 1625,
	120, 1625,
	121, 1625,
	122, 1625,
	123, 1625,
	124, 1625,
	125, 1625,
	126, 1625,
	127, 1625,
	128, 1625,
	129, 1625,
	130, 1625,
	132, 1625,
	133, 1625,
	134, 1625,
	136, 1625,
	137, 1625,
	138, 1625,
	141, 1625,
	142, 1625,
	143, 1625,
	145, 1625,
	146, 1625,
	147, 1625,
	149, 1625,
	150, 1625,
	151, 1625,
	153, 1625,
	154, 1625,
	155, 1625,
	156, 1625,
	157, 1625,
	158, 1625,
	159, 1625,
	160, 1625,
	161, 1625,
	162, 1625,
	163, 1625,
	164, 1625,
	165, 1625,
	166, 1625,
	167, 1625,
	168, 1625,
	169, 1625,
	170, 1625,
	171, 1625,
	177, 1625,
	178, 1625,
	179, 1625,
	180, 1625,
	184, 1625,
	186, 1625,
	187, 1625,
	188, 1625,
	191, 1625,
	192, 1625,
	193, 1625,
	194, 1625,
	195, 1625,
	196, 1625,
	197, 1625,
	198, 1625,
	199, 1625,
	200, 1625,
	201, 1625,
	202, 1625,
	203, 1625,
	204, 1625,
	205, 1625,
	207, 1625,
	208, 1625,
	210, 1625,
	211, 1625,
	213, 1625,
	214, 1625,
	215, 1625,
	216, 1625,
	217, 1625,
	218, 1625,
	219, 1625,
	220, 1625,
	221, 1625,
	222, 1625,
	223, 1625,
	224, 1625,
	226, 1625,
	227, 1625,
	228, 1625,
	229, 1625,
	230, 1625,
	234, 1625,
	235, 1625,
	236, 1625,
	237, 1625,
	239, 1625,
	240, 1625,
	241, 1625,
	242, 1625,
	244, 1625,
	246, 1625,
	247, 1625,
	248, 1625,
	249, 1625,
	250, 1625,
	251, 1625,
	252, 1625,
	253, 1625,
	254, 1625,
	255, 1625,
	259, 1625,
	260, 1625,
	261, 1625,
	262, 1625,
	263, 1625,
	264, 1625,
	266, 1625,
	267, 1625,
	268, 1625,
	270, 1625,
	271, 1625,
	272, 1625,
	273, 1625,
	274, 1625,
	275, 1625,
	277, 1625,
	278, 1625,
	279, 1625,
	280, 1625,
	281, 1625,
	282, 1625,
	283, 1625,
	284, 1625,
	285, 1625,
	286, 1625,
	287, 1625,
	288, 1625,
	289, 1625,
	291, 1625,
	292, 1625,
	293, 1625,
	294, 1625,
	295, 1625,
	296, 1625,
	297, 1625,
	298, 1625,
	299, 1625,
	300, 1625,
	301, 1625,
	302, 1625,
	303, 1625,
	304, 1625,
	305, 1625,
	306, 1625,
	307, 1625,
	308, 1625,
	309, 1625,
	310, 1625,
	311, 1625,
	312, 1625,
	314, 1625,
	315, 1625,
	316, 1625,
	317, 1625,
	318, 1625,
	319, 1625,
	320, 1625,
	321, 1625,
	322, 1625,
	323, 1625,
	324, 1625,
	325, 1625,
	326, 1625,
	327, 1625,
	328, 1625,
	329, 1625,
	330, 1625,
	331, 1625,
	332, 1625,
	333, 1625,
	334, 1625,
	335, 1625,
	336, 1625,
	337, 1625,
	338, 1625,
	339, 1625,
	340, 1625,
	341, 1625,
	342, 1625,
	343, 1625,
	344, 1625,
	345, 1625,
	346, 1625,
	349, 1625,
	353, 1625,
	354, 1625,
	355, 1625,
	358, 1625,
	359, 1625,
	360, 1625,
	361, 1625,
	362, 1625,
	363, 1625,
	364, 1625,
	365, 1625,
	366, 1625,
	367, 1625,
	368, 1625,
	369, 1625,
	370, 1625,
	371, 1625,
	372, 1625,
	373, 1625,
	374, 1625,
	375, 1625,
	376, 1625,
	378, 1625,
	379, 1625,
	380, 1625,
	381, 1625,
	382, 1625,
	383, 1625,
	384, 1625,
	385, 1625,
	386, 1625,
	387, 1625,
	388, 1625,
	389, 1625,
	390, 1625,
	391, 1625,
	392, 1625,
	394, 1625,
	395, 1625,
	397, 1625,
	398, 1625,
	399, 1625,
	400, 1625,
	401, 1625,
	402, 1625,
	403, 1625,
	404, 1625,
	405, 1625,
	406, 1625,
	407, 1625,
	408, 1625,
	409, 1625,
	411, 1625,
	413, 1625,
	414, 1625,
	415, 1625,
	421, 1625,
	422, 1625,
	424, 1625,
	425, 1625,
	426, 1625,
	427, 1625,
	428, 1625,
	429, 1625,
	430, 1625,
	431, 1625,
	432, 1625,
	433, 1625,
	435, 1625,
	436, 1625,
	437, 1625,
	438, 1625,
	439, 1625,
	440, 1625,
	441, 1625,
	442, 1625,
	443, 1625,
	444, 1625,
	445, 1625,
	447, 1625,
	448, 1625,
	449, 1625,
	450, 1625,
	451, 1625,
	452, 1625,
	453, 1625,
	454, 1625,
	455, 1625,
	456, 1625,
	457, 1625,
	458, 1625,
	460, 1625,
	461, 1625,
	462, 1625,
	463, 1625,
	464, 1625,
	465, 1625,
	466, 1625,
	467, 1625,
	468, 1625,
	469, 1625,
	470, 1625,
	471, 1625,
	472, 1625,
	473, 1625,
	474, 1625,
	475, 1625,
	476, 1625,
	477, 1625,
	478, 1625,
	479, 1625,
	480, 1625,
	481, 1625,
	483, 1625,
	485, 1625,
	486, 1625,
	487, 1625,
	488, 1625,
	489, 1625,
	490, 1625,
	491, 1625,
	492, 1625,
	493, 1625,
	494, 1625,
	495, 1625,
	496, 1625,
	497, 1625,
	498, 1625,
	499, 1625,
	500, 1625,
	501, 1625,
	503, 1625,
	504, 1625,
	505, 1625,
	506, 1625,
	507, 1625,
	509, 1625,
	510, 1625,
	511, 1625,
	512, 1625,
	513, 1625,
	514, 1625,
	515, 1625,
	516, 1625,
	518, 1625,
	519, 1625,
	520, 1625,
	521, 1625,
	522, 1625,
	524, 1625,
	526, 1625,
	527, 1625,
	528, 1625,
	529, 1625,
	530, 1625,
	531, 1625,
	532, 1625,
	533, 1625,
	534, 1625,
	535, 1625,
	536, 1625,
	538, 1625,
	539, 1625,
	541, 1625,
	542, 1625,
	543, 1625,
	544, 1625,
	545, 1625,
	546, 1625,
	547, 1625,
	548, 1625,
	549, 1625,
	550, 1625,
	553, 1625,
	554, 1625,
	555, 1625,
	556, 1625,
	557, 1625,
	558, 1625,
	560, 1625,
	561, 1625,
	562, 1625,
	563, 1625,
	564, 1625,
	565, 1625,
	566, 1625,
	571, 1625,
	572, 1625,
	573, 1625,
	574, 1625,
	575, 1625,
	576, 1625,
	577, 1625,
	590, 1625,
	597, 1625,
	598, 1625,
	599, 1625,
	607, 1625,
	611, 1625,
	-2, 0,
	-1, 757,
	4, 1347,
	21, 1347,
	22, 1347,
	23, 1347,
	24, 1347,
	25, 1347,
	26, 1347,
	27, 1347,
	29, 1347,
	30, 1347,
	36, 1347,
	41, 1347,
	42, 1347,
	44, 1347,
	45, 1347,
	46, 1347,
	47, 1347,
	48, 1347,
	49, 1347,
	50, 1347,
	51, 1347,
	53, 1347,
	54, 1347,
	55, 1347,
	56, 1347,
	58, 1347,
	59, 1347,
	60, 1347,
	61, 1347,
	62, 1347,
	63, 1347,
	64, 1347,
	68, 1347,
	69, 1347,
	70, 1347,
	71, 1347,
	73, 1347,
	74, 1347,
	75, 1347,
	79, 1347,
	80, 1347,
	81, 1347,
	82, 1347,
	83, 1347,
	84, 1347,
	85, 1347,
	88, 1347,
	89, 1347,
	90, 1347,
	91, 1347,
	92, 1347,
	94, 1347,
	96, 1347,
	97, 1347,
	98, 1347,
	99, 1347,
	100, 1347,
	101, 1347,
	103, 1347,
	104, 1347,
	105, 1347,
	107, 1347,
	108, 1347,
	109, 1347,
	117, 1347,
	118, 1347,
	119, 1347,
	120, 1347,
	121, 1347,
	123, 1347,
	124, 1347,
	125, 1347,
	126, 1347,
	128, 1347,
	129, 1347,
	130, 1347,
	132, 1347,
	133, 1347,
	134, 1347,
	136, 1347,
	137, 1347,
	138, 1347,
	141, 1347,
	142, 1347,
	143, 1347,
	145, 1347,
	146, 1347,
	147, 1347,
	149, 1347,
	150, 1347,
	151, 1347,
	153, 1347,
	154, 1347,
	155, 1347,
	156, 1347,
	157, 1347,
	158, 1347,
	159, 1347,
	160, 1347,
	161, 1347,
	162, 1347,
	163, 1347,
	164, 1347,
	165, 1347,
	166, 1347,
	167, 1347,
	168, 1347,
	169, 1347,
	171, 1347,
	177, 1347,
	178, 1347,
	179, 1347,
	180, 1347,
	184, 1347,
	186, 1347,
	187, 1347,
	188, 1347,
	192, 1347,
	193, 1347,
	194, 1347,
	195, 1347,
	196, 1347,
	197, 1347,
	198, 1347,
	199, 1347,
	200, 1347,
	201, 1347,
	202, 1347,
	203, 1347,
	204, 1347,
	205, 1347,
	207, 1347,
	208, 1347,
	210, 1347,
	211, 1347,
	213, 1347,
	214, 1347,
	215, 1347,
	216, 1347,
	217, 1347,
	218, 1347,
	219, 1347,
	220, 1347,
	221, 1347,
	223, 1347,
	224, 1347,
	226, 1347,
	227, 1347,
	228, 1347,
	229, 1347,
	230, 1347,
	234, 1347,
	235, 1347,
	236, 1347,
	237, 1347,
	240, 1347,
	241, 1347,
	242, 1347,
	244, 1347,
	246, 1347,
	247, 1347,
	249, 1347,
	251, 1347,
	252, 1347,
	253, 1347,
	255, 1347,
	259, 1347,
	260, 1347,
	261, 1347,
	262, 1347,
	263, 1347,
	264, 1347,
	266, 1347,
	267, 1347,
	268, 1347,
	270, 1347,
	271, 1347,
	273, 1347,
	274, 1347,
	277, 1347,
	278, 1347,
	279, 1347,
	280, 1347,
	281, 1347,
	282, 1347,
	283, 1347,
	286, 1347,
	287, 1347,
	288, 1347,
	289, 1347,
	291, 1347,
	292, 1347,
	293, 1347,
	294, 1347,
	295, 1347,
	296, 1347,
	297, 1347,
	298, 1347,
	299, 1347,
	300, 1347,
	301, 1347,
	302, 1347,
	303, 1347,
	304, 1347,
	305, 1347,
	306, 1347,
	307, 1347,
	308, 1347,
	309, 1347,
	310, 1347,
	311, 1347,
	312, 1347,
	314, 1347,
	316, 1347,
	317, 1347,
	318, 1347,
	319, 1347,
	320, 1347,
	321, 1347,
	322, 1347,
	323, 1347,
	324, 1347,
	325, 1347,
	326, 1347,
	327, 1347,
	328, 1347,
	329, 1347,
	330, 1347,
	331, 1347,
	333, 1347,
	334, 1347,
	336, 1347,
	338, 1347,
	339, 1347,
	340, 1347,
	342, 1347,
	343, 1347,
	344, 1347,
	345, 1347,
	346, 1347,
	349, 1347,
	353, 1347,
	354, 1347,
	355, 1347,
	358, 1347,
	359, 1347,
	360, 1347,
	362, 1347,
	364, 1347,
	365, 1347,
	366, 1347,
	367, 1347,
	368, 1347,
	369, 1347,
	370, 1347,
	371, 1347,
	372, 1347,
	373, 1347,
	374, 1347,
	375, 1347,
	376, 1347,
	378, 1347,
	379, 1347,
	380, 1347,
	381, 1347,
	382, 1347,
	383, 1347,
	384, 1347,
	385, 1347,
	386, 1347,
	387, 1347,
	388, 1347,
	389, 1347,
	390, 1347,
	391, 1347,
	392, 1347,
	394, 1347,
	395, 1347,
	397, 1347,
	398, 1347,
	399, 1347,
	400, 1347,
	401, 1347,
	402, 1347,
	403, 1347,
	404, 1347,
	405, 1347,
	406, 1347,
	407, 1347,
	408, 1347,
	409, 1347,
	411, 1347,
	413, 1347,
	414, 1347,
	415, 1347,
	421, 1347,
	422, 1347,
	424, 1347,
	425, 1347,
	426, 1347,
	427, 1347,
	428, 1347,
	429, 1347,
	430, 1347,
	431, 1347,
	432, 1347,
	433, 1347,
	435, 1347,
	436, 1347,
	437, 1347,
	439, 1347,
	440, 1347,
	441, 1347,
	442, 1347,
	443, 1347,
	444, 1347,
	445, 1347,
	447, 1347,
	448, 1347,
	449, 1347,
	450, 1347,
	451, 1347,
	452, 1347,
	453, 1347,
	454, 1347,
	455, 1347,
	456, 1347,
	457, 1347,
	458, 1347,
	460, 1347,
	461, 1347,
	462, 1347,
	463, 1347,
	464, 1347,
	465, 1347,
	467, 1347,
	468, 1347,
	469, 1347,
	470, 1347,
	471, 1347,
	472, 1347,
	474, 1347,
	475, 1347,
	476, 1347,
	477, 1347,
	478, 1347,
	479, 1347,
	480, 1347,
	481, 1347,
	483, 1347,
	485, 1347,
	486, 1347,
	487, 1347,
	488, 1347,
	489, 1347,
	490, 1347,
	491, 1347,
	492, 1347,
	493, 1347,
	494, 1347,
	495, 1347,
	496, 1347,
	497, 1347,
	498, 1347,
	499, 1347,
	500, 1347,
	501, 1347,
	503, 1347,
	504, 1347,
	506, 1347,
	507, 1347,
	509, 1347,
	510, 1347,
	511, 1347,
	512, 1347,
	513, 1347,
	514, 1347,
	515, 1347,
	516, 1347,
	518, 1347,
	519, 1347,
	520, 1347,
	521, 1347,
	522, 1347,
	524, 1347,
	526, 1347,
	527, 1347,
	528, 1347,
	529, 1347,
	530, 1347,
	531, 1347,
	533, 1347,
	534, 1347,
	535, 1347,
	536, 1347,
	538, 1347,
	539, 1347,
	542, 1347,
	543, 1347,
	544, 1347,
	545, 1347,
	546, 1347,
	547, 1347,
	548, 1347,
	550, 1347,
	553, 1347,
	554, 1347,
	555, 1347,
	556, 1347,
	557, 1347,
	558, 1347,
	560, 1347,
	561, 1347,
	562, 1347,
	563, 1347,
	564, 1347,
	565, 1347,
	566, 1347,
	571, 1347,
	572, 1347,
	573, 1347,
	574, 1347,
	575, 1347,
	576, 1347,
	-2, 0,
	-1, 776,
	190, 2417,
	523, 2417,
	589, 2417,
	609, 2417,
	-2, 0,
	-1, 777,
	190, 2404,
	523, 2404,
	589, 2404,
	609, 2404,
	-2, 0,
	-1, 779,
	190, 2671,
	523, 2671,
	589, 2671,
	609, 2671,
	-2, 0,
	-1, 782,
	190, 2529,
	523, 2529,
	589, 2529,
	609, 2529,
	-2, 0,
	-1, 783,
	190, 2713,
	523, 2713,
	589, 2713,
	609, 2713,
	-2, 0,
	-1, 791,
	190, 2556,
	523, 2556,
	589, 2556,
	609, 2556,
	-2, 719,
	-1, 826,
	609, 2353,
	612, 2353,
	-2, 1019,
	-1, 827,
	609, 2355,
	612, 2355,
	-2, 1020,
	-1, 828,
	609, 2354,
	612, 2354,
	-2, 1021,
	-1, 829,
	612, 2279,
	-2, 1022,
	-1, 854,
	185, 267,
	-2, 0,
	-1, 878,
	43, 2326,
	-2, 0,
	-1, 879,
	560, 1325,
	-2, 1099,
	-1, 895,
	4, 1759,
	21, 1759,
	22, 1759,
	23, 1759,
	24, 1759,
	25, 1759,
	26, 1759,
	27, 1759,
	29, 1759,
	30, 1759,
	36, 1759,
	41, 1759,
	42, 1759,
	44, 1759,
	45, 1759,
	46, 1759,
	47, 1759,
	48, 1759,
	49, 1759,
	50, 1759,
	51, 1759,
	53, 1759,
	54, 1759,
	55, 1759,
	56, 1759,
	58, 1759,
	59, 1759,
	60, 1759,
	61, 1759,
	62, 1759,
	63, 1759,
	64, 1759,
	68, 1759,
	69, 1759,
	70, 1759,
	71, 1759,
	73, 1759,
	74, 1759,
	75, 1759,
	79, 1759,
	80, 1759,
	81, 1759,
	82, 1759,
	83, 1759,
	84, 1759,
	85, 1759,
	88, 1759,
	89, 1759,
	90, 1759,
	91, 1759,
	92, 1759,
	94, 1759,
	96, 1759,
	97, 1759,
	98, 1759,
	99, 1759,
	100, 1759,
	101, 1759,
	103, 1759,
	104, 1759,
	105, 1759,
	107, 1759,
	108, 1759,
	109, 1759,
	117, 1759,
	118, 1759,
	119, 1759,
	120, 1759,
	121, 1759,
	123, 1759,
	124, 1759,
	125, 1759,
	126, 1759,
	128, 1759,
	129, 1759,
	130, 1759,
	132, 1759,
	133, 1759,
	134, 1759,
	136, 1759,
	137, 1759,
	138, 1759,
	141, 1759,
	142, 1759,
	143, 1759,
	145, 1759,
	146, 1759,
	147, 1759,
	149, 1759,
	150, 1759,
	151, 1759,
	153, 1759,
	154, 1759,
	155, 1759,
	156, 1759,
	157, 1759,
	158, 1759,
	159, 1759,
	160, 1759,
	161, 1759,
	162, 1759,
	163, 1759,
	164, 1759,
	165, 1759,
	166, 1759,
	167, 1759,
	168, 1759,
	169, 1759,
	171, 1759,
	177, 1759,
	178, 1759,
	179, 1759,
	180, 1759,
	184, 1759,
	186, 1759,
	187, 1759,
	188, 1759,
	192, 1759,
	193, 1759,
	194, 1759,
	195, 1759,
	196, 1759,
	197, 1759,
	198, 1759,
	199, 1759,
	200, 1759,
	201, 1759,
	202, 1759,
	203, 1759,
	204, 1759,
	205, 1759,
	207, 1759,
	208, 1759,
	210, 1759,
	211, 1759,
	213, 1759,
	214, 1759,
	215, 1759,
	216, 1759,
	217, 1759,
	218, 1759,
	219, 1759,
	220, 1759,
	221, 1759,
	223, 1759,
	224, 1759,
	226, 1759,
	227, 1759,
	228, 1759,
	229, 1759,
	230, 1759,
	234, 1759,
	235, 1759,
	236, 1759,
	237, 1759,
	240, 1759,
	241, 1759,
	242, 1759,
	244, 1759,
	246, 1759,
	247, 1759,
	249, 1759,
	251, 1759,
	252, 1759,
	253, 1759,
	255, 1759,
	259, 1759,
	260, 1759,
	261, 1759,
	262, 1759,
	263, 1759,
	264, 1759,
	266, 1759,
	267, 1759,
	268, 1759,
	270, 1759,
	271, 1759,
	273, 1759,
	274, 1759,
	277, 1759,
	278, 1759,
	279, 1759,
	280, 1759,
	281, 1759,
	282, 1759,
	283, 1759,
	286, 1759,
	287, 1759,
	288, 1759,
	289, 1759,
	291, 1759,
	292, 1759,
	293, 1759,
	294, 1759,
	295, 1759,
	296, 1759,
	297, 1759,
	298, 1759,
	299, 1759,
	300, 1759,
	301, 1759,
	302, 1759,
	303, 1759,
	304, 1759,
	305, 1759,
	306, 1759,
	307, 1759,
	308, 1759,
	309, 1759,
	310, 1759,
	311, 1759,
	312, 1759,
	314, 1759,
	316, 1759,
	317, 1759,
	318, 1759,
	319, 1759,
	320, 1759,
	321, 1759,
	322, 1759,
	323, 1759,
	324, 1759,
	325, 1759,
	326, 1759,
	327, 1759,
	328, 1759,
	329, 1759,
	330, 1759,
	331, 1759,
	333, 1759,
	334, 1759,
	336, 1759,
	338, 1759,
	339, 1759,
	340, 1759,
	342, 1759,
	343, 1759,
	344, 1759,
	345, 1759,
	346, 1759,
	349, 1759,
	353, 1759,
	354, 1759,
	355, 1759,
	358, 1759,
	359, 1759,
	360, 1759,
	362, 1759,
	364, 1759,
	365, 1759,
	366, 1759,
	367, 1759,
	368, 1759,
	369, 1759,
	370, 1759,
	371, 1759,
	372, 1759,
	373, 1759,
	374, 1759,
	375, 1759,
	376, 1759,
	378, 1759,
	379, 1759,
	380, 1759,
	381, 1759,
	382, 1759,
	383, 1759,
	384, 1759,
	385, 1759,
	386, 1759,
	387, 1759,
	388, 1759,
	389, 1759,
	390, 1759,
	391, 1759,
	392, 1759,
	394, 1759,
	395, 1759,
	397, 1759,
	398, 1759,
	399, 1759,
	400, 1759,
	401, 1759,
	402, 1759,
	403, 1759,
	404, 1759,
	405, 1759,
	406, 1759,
	407, 1759,
	408, 1759,
	409, 1759,
	411, 1759,
	413, 1759,
	414, 1759,
	415, 1759,
	421, 1759,
	422, 1759,
	424, 1759,
	425, 1759,
	426, 1759,
	427, 1759,
	428, 1759,
	429, 1759,
	430, 1759,
	431, 1759,
	432, 1759,
	433, 1759,
	435, 1759,
	436, 1759,
	437, 1759,
	439, 1759,
	440, 1759,
	441, 1759,
	442, 1759,
	443, 1759,
	444, 1759,
	445, 1759,
	447, 1759,
	448, 1759,
	449, 1759,
	450, 1759,
	451, 1759,
	452, 1759,
	453, 1759,
	454, 1759,
	455, 1759,
	456, 1759,
	457, 1759,
	458, 1759,
	460, 1759,
	461, 1759,
	462, 1759,
	463, 1759,
	464, 1759,
	465, 1759,
	467, 1759,
	468, 1759,
	469, 1759,
	470, 1759,
	471, 1759,
	472, 1759,
	474, 1759,
	475, 1759,
	476, 1759,
	477, 1759,
	478, 1759,
	479, 1759,
	480, 1759,
	481, 1759,
	483, 1759,
	485, 1759,
	486, 1759,
	487, 1759,
	488, 1759,
	489, 1759,
	490, 1759,
	491, 1759,
	492, 1759,
	493, 1759,
	494, 1759,
	495, 1759,
	496, 1759,
	497, 1759,
	498, 1759,
	499, 1759,
	500, 1759,
	501, 1759,
	503, 1759,
	504, 1759,
	506, 1759,
	507, 1759,
	509, 1759,
	510, 1759,
	511, 1759,
	512, 1759,
	513, 1759,
	514, 1759,
	515, 1759,
	516, 1759,
	518, 1759,
	519, 1759,
	520, 1759,
	521, 1759,
	522, 1759,
	524, 1759,
	526, 1759,
	527, 1759,
	528, 1759,
	529, 1759,
	530, 1759,
	531, 1759,
	533, 1759,
	534, 1759,
	535, 1759,
	536, 1759,
	538, 1759,
	539, 1759,
	542, 1759,
	543, 1759,
	544, 1759,
	545, 1759,
	546, 1759,
	547, 1759,
	548, 1759,
	550, 1759,
	553, 1759,
	554, 1759,
	555, 1759,
	556, 1759,
	557, 1759,
	558, 1759,
	560, 1759,
	561, 1759,
	562, 1759,
	563, 1759,
	564, 1759,
	565, 1759,
	566, 1759,
	571, 1759,
	572, 1759,
	573, 1759,
	574, 1759,
	575, 1759,
	576, 1759,
	-2, 0,
	-1, 905,
	263, 420,
	-2, 0,
	-1, 982,
	399, 899,
	465, 899,
	507, 899,
	528, 899,
	-2, 0,
	-1, 983,
	399, 898,
	465, 898,
	507, 898,
	528, 898,
	-2, 830,
	-1, 987,
	1, 951,
	606, 951,
	608, 951,
	610, 951,
	-2, 0,
	-1, 989,
	1, 873,
	606, 873,
	608, 873,
	610, 873,
	-2, 0,
	-1, 990,
	1, 877,
	606, 877,
	608, 877,
	610, 877,
	-2, 0,
	-1, 991,
	1, 1018,
	185, 1018,
	606, 1018,
	608, 1018,
	610, 1018,
	-2, 0,
	-1, 999,
	1, 904,
	606, 904,
	608, 904,
	610, 904,
	-2, 0,
	-1, 1006,
	1, 951,
	606, 951,
	608, 951,
	610, 951,
	-2, 0,
	-1, 1007,
	1, 953,
	606, 953,
	608, 953,
	610, 953,
	-2, 0,
	-1, 1008,
	1, 956,
	606, 956,
	608, 956,
	610, 956,
	-2, 0,
	-1, 1014,
	1, 982,
	606, 982,
	608, 982,
	610, 982,
	-2, 0,
	-1, 1015,
	1, 984,
	606, 984,
	608, 984,
	610, 984,
	-2, 0,
	-1, 1020,
	1, 1012,
	606, 1012,
	608, 1012,
	610, 1012,
	-2, 0,
	-1, 1072,
	172, 1629,
	185, 1629,
	276, 1629,
	347, 1629,
	-2, 1565,
	-1, 1087,
	172, 1628,
	185, 1628,
	276, 1628,
	347, 1628,
	-2, 1562,
	-1, 1114,
	609, 2352,
	-2, 727,
	-1, 1143,
	5, 2344,
	607, 2342,
	-2, 2333,
	-1, 1151,
	5, 2365,
	607, 2362,
	-2, 2353,
	-1, 1152,
	5, 2366,
	607, 2363,
	-2, 2354,
	-1, 1160,
	609, 2350,
	-2, 2332,
	-1, 1161,
	607, 2798,
	-2, 2351,
	-1, 1184,
	607, 2797,
	-2, 2367,
	-1, 1185,
	5, 1834,
	-2, 2768,
	-1, 1186,
	5, 1835,
	-2, 2769,
	-1, 1187,
	5, 1836,
	-2, 2783,
	-1, 1188,
	5, 1837,
	-2, 2747,
	-1, 1189,
	5, 1838,
	-2, 2781,
	-1, 1190,
	5, 1846,
	-2, 2760,
	-1, 1191,
	5, 1833,
	-2, 2756,
	-1, 1192,
	5, 1833,
	-2, 2755,
	-1, 1193,
	5, 1833,
	-2, 2774,
	-1, 1194,
	5, 1844,
	-2, 2749,
	-1, 1195,
	5, 1849,
	-2, 2748,
	-1, 1196,
	5, 1851,
	-2, 2793,
	-1, 1199,
	5, 1873,
	-2, 2786,
	-1, 1200,
	5, 1865,
	-2, 2787,
	-1, 1201,
	5, 1873,
	-2, 2788,
	-1, 1202,
	5, 1869,
	-2, 2789,
	-1, 1203,
	5, 1819,
	-2, 2761,
	-1, 1204,
	5, 1820,
	-2, 2762,
	-1, 1205,
	5, 1821,
	-2, 2750,
	-1, 1233,
	5, 1856,
	-2, 2794,
	-1, 1234,
	5, 1857,
	-2, 2784,
	-1, 1235,
	5, 1858,
	561, 1858,
	-2, 2751,
	-1, 1236,
	5, 1859,
	561, 1859,
	-2, 2752,
	-1, 1273,
	607, 2362,
	-2, 2353,
	-1, 1274,
	607, 2363,
	-2, 2354,
	-1, 1372,
	190, 2713,
	523, 2713,
	589, 2713,
	609, 2713,
	-2, 0,
	-1, 1377,
	1, 703,
	610, 703,
	-2, 1474,
	-1, 1507,
	366, 2327,
	424, 2327,
	467, 2327,
	599, 2327,
	-2, 2317,
	-1, 1513,
	190, 129,
	270, 129,
	333, 129,
	566, 129,
	-2, 2709,
	-1, 1514,
	190, 130,
	270, 130,
	333, 130,
	566, 130,
	-2, 2462,
	-1, 1515,
	190, 131,
	270, 131,
	333, 131,
	566, 131,
	-2, 2633,
	-1, 1521,
	611, 2327,
	-2, 2329,
	-1, 1529,
	1, 1322,
	429, 1279,
	467, 1279,
	583, 1279,
	606, 1322,
	608, 1322,
	610, 1322,
	-2, 1614,
	-1, 1535,
	206, 1419,
	225, 1419,
	437, 1419,
	-2, 0,
	-1, 1591,
	407, 1098,
	560, 1098,
	-2, 415,
	-1, 1608,
	43, 2325,
	-2, 1064,
	-1, 1615,
	1, 1322,
	606, 1322,
	608, 1322,
	610, 1322,
	-2, 1614,
	-1, 1623,
	4, 1347,
	21, 1347,
	22, 1347,
	23, 1347,
	24, 1347,
	25, 1347,
	26, 1347,
	27, 1347,
	29, 1347,
	30, 1347,
	36, 1347,
	41, 1347,
	42, 1347,
	44, 1347,
	45, 1347,
	46, 1347,
	47, 1347,
	48, 1347,
	49, 1347,
	50, 1347,
	51, 1347,
	53, 1347,
	54, 1347,
	55, 1347,
	56, 1347,
	58, 1347,
	59, 1347,
	60, 1347,
	61, 1347,
	62, 1347,
	63, 1347,
	64, 1347,
	68, 1347,
	69, 1347,
	70, 1347,
	71, 1347,
	73, 1347,
	74, 1347,
	75, 1347,
	79, 1347,
	80, 1347,
	81, 1347,
	82, 1347,
	83, 1347,
	84, 1347,
	85, 1347,
	88, 1347,
	89, 1347,
	90, 1347,
	91, 1347,
	92, 1347,
	94, 1347,
	96, 1347,
	97, 1347,
	98, 1347,
	99, 1347,
	100, 1347,
	101, 1347,
	103, 1347,
	104, 1347,
	105, 1347,
	107, 1347,
	108, 1347,
	109, 1347,
	117, 1347,
	118, 1347,
	119, 1347,
	120, 1347,
	121, 1347,
	123, 1347,
	124, 1347,
	125, 1347,
	126, 1347,
	128, 1347,
	129, 1347,
	130, 1347,
	132, 1347,
	133, 1347,
	134, 1347,
	136, 1347,
	137, 1347,
	138, 1347,
	141, 1347,
	142, 1347,
	143, 1347,
	145, 1347,
	146, 1347,
	147, 1347,
	149, 1347,
	150, 1347,
	151, 1347,
	153, 1347,
	154, 1347,
	155, 1347,
	156, 1347,
	157, 1347,
	158, 1347,
	159, 1347,
	160, 1347,
	161, 1347,
	162, 1347,
	163, 1347,
	164, 1347,
	165, 1347,
	166, 1347,
	167, 1347,
	168, 1347,
	169, 1347,
	177, 1347,
	178, 1347,
	179, 1347,
	180, 1347,
	184, 1347,
	186, 1347,
	187, 1347,
	188, 1347,
	192, 1347,
	193, 1347,
	194, 1347,
	195, 1347,
	196, 1347,
	197, 1347,
	198, 1347,
	199, 1347,
	200, 1347,
	201, 1347,
	202, 1347,
	203, 1347,
	204, 1347,
	205, 1347,
	207, 1347,
	208, 1347,
	210, 1347,
	211, 1347,
	213, 1347,
	214, 1347,
	215, 1347,
	216, 1347,
	217, 1347,
	218, 1347,
	219, 1347,
	220, 1347,
	221, 1347,
	223, 1347,
	224, 1347,
	226, 1347,
	227, 1347,
	228, 1347,
	229, 1347,
	230, 1347,
	235, 1347,
	236, 1347,
	237, 1347,
	240, 1347,
	241, 1347,
	242, 1347,
	244, 1347,
	246, 1347,
	247, 1347,
	249, 1347,
	251, 1347,
	252, 1347,
	253, 1347,
	255, 1347,
	259, 1347,
	260, 1347,
	261, 1347,
	262, 1347,
	263, 1347,
	264, 1347,
	266, 1347,
	267, 1347,
	268, 1347,
	270, 1347,
	271, 1347,
	273, 1347,
	274, 1347,
	277, 1347,
	278, 1347,
	279, 1347,
	280, 1347,
	281, 1347,
	282, 1347,
	283, 1347,
	286, 1347,
	287, 1347,
	288, 1347,
	289, 1347,
	291, 1347,
	292, 1347,
	293, 1347,
	294, 1347,
	295, 1347,
	296, 1347,
	297, 1347,
	298, 1347,
	299, 1347,
	300, 1347,
	301, 1347,
	302, 1347,
	303, 1347,
	304, 1347,
	305, 1347,
	306, 1347,
	307, 1347,
	308, 1347,
	309, 1347,
	310, 1347,
	311, 1347,
	312, 1347,
	314, 1347,
	316, 1347,
	317, 1347,
	318, 1347,
	319, 1347,
	320, 1347,
	321, 1347,
	322, 1347,
	323, 1347,
	324, 1347,
	325, 1347,
	326, 1347,
	327, 1347,
	328, 1347,
	329, 1347,
	330, 1347,
	331, 1347,
	333, 1347,
	334, 1347,
	338, 1347,
	339, 1347,
	340, 1347,
	342, 1347,
	343, 1347,
	344, 1347,
	345, 1347,
	346, 1347,
	349, 1347,
	351, 1347,
	353, 1347,
	354, 1347,
	355, 1347,
	358, 1347,
	359, 1347,
	360, 1347,
	362, 1347,
	364, 1347,
	365, 1347,
	366, 1347,
	367, 1347,
	368, 1347,
	369, 1347,
	370, 1347,
	371, 1347,
	372, 1347,
	373, 1347,
	374, 1347,
	375, 1347,
	376, 1347,
	378, 1347,
	379, 1347,
	380, 1347,
	381, 1347,
	382, 1347,
	383, 1347,
	384, 1347,
	385, 1347,
	386, 1347,
	387, 1347,
	388, 1347,
	389, 1347,
	390, 1347,
	391, 1347,
	392, 1347,
	394, 1347,
	395, 1347,
	397, 1347,
	398, 1347,
	399, 1347,
	400, 1347,
	401, 1347,
	402, 1347,
	403, 1347,
	404, 1347,
	405, 1347,
	406, 1347,
	407, 1347,
	408, 1347,
	409, 1347,
	411, 1347,
	413, 1347,
	414, 1347,
	415, 1347,
	421, 1347,
	422, 1347,
	424, 1347,
	425, 1347,
	426, 1347,
	427, 1347,
	428, 1347,
	429, 1347,
	430, 1347,
	431, 1347,
	432, 1347,
	433, 1347,
	435, 1347,
	436, 1347,
	437, 1347,
	439, 1347,
	440, 1347,
	441, 1347,
	442, 1347,
	443, 1347,
	444, 1347,
	445, 1347,
	447, 1347,
	448, 1347,
	449, 1347,
	450, 1347,
	451, 1347,
	452, 1347,
	453, 1347,
	454, 1347,
	455, 1347,
	456, 1347,
	457, 1347,
	458, 1347,
	460, 1347,
	461, 1347,
	462, 1347,
	463, 1347,
	464, 1347,
	465, 1347,
	467, 1347,
	468, 1347,
	469, 1347,
	470, 1347,
	471, 1347,
	472, 1347,
	474, 1347,
	475, 1347,
	476, 1347,
	477, 1347,
	478, 1347,
	479, 1347,
	480, 1347,
	481, 1347,
	483, 1347,
	485, 1347,
	486, 1347,
	487, 1347,
	488, 1347,
	489, 1347,
	490, 1347,
	491, 1347,
	492, 1347,
	493, 1347,
	494, 1347,
	495, 1347,
	496, 1347,
	497, 1347,
	498, 1347,
	499, 1347,
	500, 1347,
	501, 1347,
	503, 1347,
	504, 1347,
	506, 1347,
	507, 1347,
	509, 1347,
	510, 1347,
	511, 1347,
	512, 1347,
	513, 1347,
	514, 1347,
	515, 1347,
	516, 1347,
	518, 1347,
	519, 1347,
	520, 1347,
	521, 1347,
	522, 1347,
	524, 1347,
	526, 1347,
	527, 1347,
	528, 1347,
	529, 1347,
	530, 1347,
	531, 1347,
	533, 1347,
	534, 1347,
	535, 1347,
	536, 1347,
	538, 1347,
	539, 1347,
	542, 1347,
	543, 1347,
	544, 1347,
	545, 1347,
	546, 1347,
	547, 1347,
	548, 1347,
	550, 1347,
	553, 1347,
	554, 1347,
	555, 1347,
	556, 1347,
	557, 1347,
	558, 1347,
	560, 1347,
	561, 1347,
	562, 1347,
	563, 1347,
	564, 1347,
	565, 1347,
	566, 1347,
	571, 1347,
	572, 1347,
	573, 1347,
	574, 1347,
	575, 1347,
	576, 1347,
	-2, 0,
	-1, 1646,
	1, 560,
	606, 560,
	608, 560,
	610, 560,
	-2, 1585,
	-1, 1649,
	4, 2792,
	11, 2792,
	12, 2792,
	14, 2792,
	15, 2792,
	16, 2792,
	17, 2792,
	18, 2792,
	19, 2792,
	21, 2792,
	22, 2792,
	23, 2792,
	24, 2792,
	25, 2792,
	26, 2792,
	27, 2792,
	29, 2792,
	30, 2792,
	33, 2792,
	34, 2792,
	36, 2792,
	38, 2792,
	41, 2792,
	42, 2792,
	44, 2792,
	45, 2792,
	46, 2792,
	47, 2792,
	48, 2792,
	49, 2792,
	50, 2792,
	51, 2792,
	53, 2792,
	54, 2792,
	55, 2792,
	56, 2792,
	58, 2792,
	59, 2792,
	60, 2792,
	61, 2792,
	62, 2792,
	63, 2792,
	64, 2792,
	67, 2792,
	68, 2792,
	69, 2792,
	70, 2792,
	71, 2792,
	73, 2792,
	74, 2792,
	75, 2792,
	76, 2792,
	79, 2792,
	80, 2792,
	81, 2792,
	82, 2792,
	83, 2792,
	84, 2792,
	85, 2792,
	86, 2792,
	88, 2792,
	89, 2792,
	90, 2792,
	91, 2792,
	92, 2792,
	94, 2792,
	95, 2792,
	96, 2792,
	97, 2792,
	98, 2792,
	99, 2792,
	100, 2792,
	101, 2792,
	103, 2792,
	104, 2792,
	105, 2792,
	106, 2792,
	107, 2792,
	108, 2792,
	109, 2792,
	117, 2792,
	118, 2792,
	119, 2792,
	120, 2792,
	121, 2792,
	123, 2792,
	124, 2792,
	125, 2792,
	126, 2792,
	128, 2792,
	129, 2792,
	130, 2792,
	132, 2792,
	133, 2792,
	134, 2792,
	136, 2792,
	137, 2792,
	138, 2792,
	141, 2792,
	142, 2792,
	143, 2792,
	145, 2792,
	146, 2792,
	147, 2792,
	149, 2792,
	150, 2792,
	151, 2792,
	153, 2792,
	154, 2792,
	155, 2792,
	156, 2792,
	157, 2792,
	158, 2792,
	159, 2792,
	160, 2792,
	161, 2792,
	162, 2792,
	163, 2792,
	164, 2792,
	165, 2792,
	166, 2792,
	167, 2792,
	168, 2792,
	169, 2792,
	173, 2792,
	174, 2792,
	175, 2792,
	176, 2792,
	177, 2792,
	178, 2792,
	179, 2792,
	180, 2792,
	183, 2792,
	184, 2792,
	186, 2792,
	187, 2792,
	188, 2792,
	191, 2792,
	192, 2792,
	193, 2792,
	194, 2792,
	195, 2792,
	196, 2792,
	197, 2792,
	198, 2792,
	199, 2792,
	200, 2792,
	201, 2792,
	202, 2792,
	203, 2792,
	204, 2792,
	205, 2792,
	207, 2792,
	208, 2792,
	210, 2792,
	211, 2792,
	213, 2792,
	214, 2792,
	215, 2792,
	216, 2792,
	217, 2792,
	218, 2792,
	219, 2792,
	220, 2792,
	221, 2792,
	222, 2792,
	223, 2792,
	224, 2792,
	225, 2792,
	226, 2792,
	227, 2792,
	228, 2792,
	229, 2792,
	230, 2792,
	232, 2792,
	233, 2792,
	235, 2792,
	236, 2792,
	237, 2792,
	239, 2792,
	240, 2792,
	241, 2792,
	242, 2792,
	244, 2792,
	246, 2792,
	247, 2792,
	248, 2792,
	249, 2792,
	250, 2792,
	251, 2792,
	252, 2792,
	253, 2792,
	254, 2792,
	255, 2792,
	257, 2792,
	258, 2792,
	259, 2792,
	260, 2792,
	261, 2792,
	262, 2792,
	263, 2792,
	264, 2792,
	266, 2792,
	267, 2792,
	268, 2792,
	270, 2792,
	271, 2792,
	272, 2792,
	273, 2792,
	274, 2792,
	275, 2792,
	277, 2792,
	278, 2792,
	279, 2792,
	280, 2792,
	281, 2792,
	282, 2792,
	283, 2792,
	286, 2792,
	287, 2792,
	288, 2792,
	289, 2792,
	290, 2792,
	291, 2792,
	292, 2792,
	293, 2792,
	294, 2792,
	295, 2792,
	296, 2792,
	297, 2792,
	298, 2792,
	299, 2792,
	300, 2792,
	301, 2792,
	302, 2792,
	303, 2792,
	304, 2792,
	305, 2792,
	306, 2792,
	307, 2792,
	308, 2792,
	309, 2792,
	310, 2792,
	311, 2792,
	312, 2792,
	314, 2792,
	315, 2792,
	316, 2792,
	317, 2792,
	318, 2792,
	319, 2792,
	320, 2792,
	321, 2792,
	322, 2792,
	323, 2792,
	324, 2792,
	325, 2792,
	326, 2792,
	327, 2792,
	328, 2792,
	329, 2792,
	330, 2792,
	331, 2792,
	333, 2792,
	334, 2792,
	337, 2792,
	338, 2792,
	339, 2792,
	340, 2792,
	342, 2792,
	343, 2792,
	344, 2792,
	345, 2792,
	346, 2792,
	349, 2792,
	353, 2792,
	354, 2792,
	355, 2792,
	356, 2792,
	358, 2792,
	359, 2792,
	360, 2792,
	362, 2792,
	364, 2792,
	365, 2792,
	366, 2792,
	367, 2792,
	368, 2792,
	369, 2792,
	370, 2792,
	371, 2792,
	372, 2792,
	373, 2792,
	374, 2792,
	375, 2792,
	376, 2792,
	378, 2792,
	379, 2792,
	380, 2792,
	381, 2792,
	382, 2792,
	383, 2792,
	384, 2792,
	385, 2792,
	386, 2792,
	387, 2792,
	388, 2792,
	389, 2792,
	390, 2792,
	391, 2792,
	392, 2792,
	394, 2792,
	395, 2792,
	397, 2792,
	398, 2792,
	399, 2792,
	400, 2792,
	401, 2792,
	402, 2792,
	403, 2792,
	404, 2792,
	405, 2792,
	406, 2792,
	407, 2792,
	408, 2792,
	409, 2792,
	411, 2792,
	413, 2792,
	414, 2792,
	415, 2792,
	421, 2792,
	422, 2792,
	423, 2792,
	424, 2792,
	425, 2792,
	426, 2792,
	427, 2792,
	428, 2792,
	429, 2792,
	430, 2792,
	431, 2792,
	432, 2792,
	433, 2792,
	435, 2792,
	436, 2792,
	437, 2792,
	438, 2792,
	439, 2792,
	440, 2792,
	441, 2792,
	442, 2792,
	443, 2792,
	444, 2792,
	445, 2792,
	446, 2792,
	447, 2792,
	448, 2792,
	449, 2792,
	450, 2792,
	451, 2792,
	452, 2792,
	453, 2792,
	454, 2792,
	455, 2792,
	456, 2792,
	457, 2792,
	458, 2792,
	460, 2792,
	461, 2792,
	462, 2792,
	463, 2792,
	464, 2792,
	465, 2792,
	467, 2792,
	468, 2792,
	469, 2792,
	470, 2792,
	471, 2792,
	472, 2792,
	473, 2792,
	474, 2792,
	475, 2792,
	476, 2792,
	477, 2792,
	478, 2792,
	479, 2792,
	480, 2792,
	481, 2792,
	483, 2792,
	485, 2792,
	486, 2792,
	487, 2792,
	488, 2792,
	489, 2792,
	490, 2792,
	491, 2792,
	492, 2792,
	493, 2792,
	494, 2792,
	495, 2792,
	496, 2792,
	497, 2792,
	498, 2792,
	499, 2792,
	500, 2792,
	501, 2792,
	503, 2792,
	504, 2792,
	505, 2792,
	506, 2792,
	507, 2792,
	509, 2792,
	510, 2792,
	511, 2792,
	512, 2792,
	513, 2792,
	514, 2792,
	515, 2792,
	516, 2792,
	518, 2792,
	519, 2792,
	520, 2792,
	521, 2792,
	522, 2792,
	524, 2792,
	526, 2792,
	527, 2792,
	528, 2792,
	529, 2792,
	530, 2792,
	531, 2792,
	533, 2792,
	534, 2792,
	535, 2792,
	536, 2792,
	538, 2792,
	539, 2792,
	542, 2792,
	543, 2792,
	544, 2792,
	545, 2792,
	546, 2792,
	547, 2792,
	548, 2792,
	550, 2792,
	553, 2792,
	554, 2792,
	555, 2792,
	556, 2792,
	557, 2792,
	558, 2792,
	560, 2792,
	561, 2792,
	562, 2792,
	563, 2792,
	564, 2792,
	565, 2792,
	566, 2792,
	571, 2792,
	572, 2792,
	573, 2792,
	574, 2792,
	575, 2792,
	576, 2792,
	577, 2792,
	579, 2792,
	587, 2792,
	588, 2792,
	589, 2792,
	590, 2792,
	591, 2792,
	592, 2792,
	594, 2792,
	595, 2792,
	596, 2792,
	597, 2792,
	598, 2792,
	599, 2792,
	600, 2792,
	601, 2792,
	602, 2792,
	605, 2792,
	608, 2792,
	609, 2792,
	611, 2792,
	612, 2792,
	-2, 0,
	-1, 1654,
	190, 2671,
	523, 2671,
	589, 2671,
	609, 2671,
	-2, 0,
	-1, 1707,
	399, 899,
	465, 899,
	507, 899,
	528, 899,
	-2, 0,
	-1, 1718,
	1, 1419,
	606, 1419,
	608, 1419,
	610, 1419,
	-2, 0,
	-1, 1735,
	1, 894,
	606, 894,
	608, 894,
	610, 894,
	-2, 0,
	-1, 1736,
	1, 938,
	606, 938,
	608, 938,
	610, 938,
	-2, 0,
	-1, 1737,
	1, 946,
	606, 946,
	608, 946,
	610, 946,
	-2, 0,
	-1, 1740,
	1, 903,
	606, 903,
	608, 903,
	610, 903,
	-2, 0,
	-1, 1742,
	1, 909,
	606, 909,
	608, 909,
	610, 909,
	-2, 0,
	-1, 1745,
	1, 905,
	606, 905,
	608, 905,
	610, 905,
	-2, 0,
	-1, 1750,
	1, 919,
	606, 919,
	608, 919,
	610, 919,
	-2, 0,
	-1, 1781,
	1, 2654,
	606, 2654,
	608, 2654,
	609, 2654,
	610, 2654,
	-2, 0,
	-1, 1785,
	1, 993,
	606, 993,
	608, 993,
	610, 993,
	-2, 0,
	-1, 1802,
	1, 1469,
	610, 1469,
	-2, 1474,
	-1, 1805,
	172, 1628,
	185, 1628,
	276, 1628,
	347, 1628,
	-2, 1566,
	-1, 1905,
	152, 1587,
	172, 1587,
	185, 1587,
	243, 1587,
	276, 1587,
	347, 1587,
	357, 1587,
	540, 1587,
	-2, 2038,
	-1, 1966,
	608, 2213,
	-2, 0,
	-1, 2001,
	152, 1587,
	172, 1587,
	185, 1587,
	243, 1587,
	276, 1587,
	347, 1587,
	357, 1587,
	540, 1587,
	-2, 1720,
	-1, 2041,
	523, 2668,
	609, 2668,
	612, 2668,
	-2, 0,
	-1, 2058,
	607, 1861,
	-2, 1849,
	-1, 2090,
	190, 2668,
	609, 2668,
	612, 2668,
	-2, 0,
	-1, 2133,
	1, 705,
	610, 705,
	-2, 1474,
	-1, 2278,
	225, 262,
	-2, 2361,
	-1, 2279,
	225, 263,
	-2, 315,
	-1, 2389,
	1, 896,
	606, 896,
	608, 896,
	610, 896,
	-2, 0,
	-1, 2390,
	1, 940,
	606, 940,
	608, 940,
	610, 940,
	-2, 0,
	-1, 2391,
	1, 948,
	606, 948,
	608, 948,
	610, 948,
	-2, 0,
	-1, 2392,
	1, 995,
	606, 995,
	608, 995,
	610, 995,
	-2, 0,
	-1, 2433,
	1, 921,
	606, 921,
	608, 921,
	610, 921,
	-2, 0,
	-1, 2453,
	1, 978,
	606, 978,
	608, 978,
	610, 978,
	-2, 0,
	-1, 2500,
	444, 1655,
	445, 1655,
	-2, 1894,
	-1, 2531,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 1914,
	-1, 2532,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 1915,
	-1, 2533,
	95, 0,
	257, 0,
	258, 0,
	591, 0,
	592, 0,
	-2, 1916,
	-1, 2534,
	95, 0,
	257, 0,
	258, 0,
	591, 0,
	592, 0,
	-2, 1917,
	-1, 2535,
	95, 0,
	257, 0,
	258, 0,
	591, 0,
	592, 0,
	-2, 1918,
	-1, 2536,
	95, 0,
	257, 0,
	258, 0,
	591, 0,
	592, 0,
	-2, 1919,
	-1, 2537,
	95, 0,
	257, 0,
	258, 0,
	591, 0,
	592, 0,
	-2, 1920,
	-1, 2538,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 1921,
	-1, 2550,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 1933,
	-1, 2551,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 1934,
	-1, 2552,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 1935,
	-1, 2556,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1942,
	-1, 2562,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1946,
	-1, 2564,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1954,
	-1, 2565,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1955,
	-1, 2566,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1956,
	-1, 2567,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1957,
	-1, 2741,
	5, 2365,
	190, 2224,
	607, 2362,
	-2, 2353,
	-1, 2742,
	190, 2225,
	-2, 2743,
	-1, 2743,
	190, 2226,
	-2, 2555,
	-1, 2744,
	190, 2227,
	-2, 2435,
	-1, 2745,
	190, 2228,
	-2, 2493,
	-1, 2746,
	190, 2229,
	-2, 2540,
	-1, 2747,
	190, 2230,
	-2, 2666,
	-1, 2748,
	190, 2231,
	-2, 2021,
	-1, 2819,
	1, 1721,
	2, 1721,
	106, 1721,
	152, 1721,
	172, 1721,
	185, 1721,
	191, 1721,
	209, 1721,
	212, 1721,
	239, 1721,
	243, 1721,
	254, 1721,
	272, 1721,
	276, 1721,
	315, 1721,
	347, 1721,
	351, 1721,
	357, 1721,
	434, 1721,
	438, 1721,
	540, 1721,
	551, 1721,
	568, 1721,
	569, 1721,
	570, 1721,
	580, 1721,
	606, 1721,
	608, 1721,
	610, 1721,
	612, 1721,
	-2, 1720,
	-1, 2832,
	607, 2334,
	-2, 2348,
	-1, 2834,
	1, 332,
	568, 332,
	-2, 1614,
	-1, 2864,
	607, 1860,
	-2, 1850,
	-1, 3057,
	1, 1322,
	429, 1279,
	467, 1279,
	583, 1279,
	606, 1322,
	608, 1322,
	610, 1322,
	-2, 1614,
	-1, 3233,
	352, 1658,
	-2, 2782,
	-1, 3234,
	352, 1659,
	-2, 2651,
	-1, 3238,
	444, 2290,
	445, 2290,
	-2, 2019,
	-1, 3239,
	444, 2294,
	445, 2294,
	-2, 2020,
	-1, 3240,
	444, 2291,
	445, 2291,
	-2, 2019,
	-1, 3241,
	444, 2295,
	445, 2295,
	-2, 2020,
	-1, 3254,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1944,
	-1, 3255,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1948,
	-1, 3261,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1950,
	-1, 3488,
	1, 700,
	606, 700,
	608, 700,
	610, 700,
	-2, 1474,
	-1, 3665,
	43, 2325,
	-2, 1065,
	-1, 3670,
	1, 1322,
	606, 1322,
	608, 1322,
	610, 1322,
	-2, 1614,
	-1, 3775,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1952,
	-1, 3782,
	248, 0,
	250, 0,
	337, 0,
	-2, 1971,
	-1, 3850,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 2000,
	-1, 3851,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 2001,
	-1, 3852,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 2002,
	-1, 3856,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 2006,
	-1, 3857,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 2007,
	-1, 3858,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 2008,
	-1, 3906,
	607, 2335,
	-2, 2349,
	-1, 4100,
	609, 2899,
	-2, 1540,
	-1, 4155,
	248, 0,
	250, 0,
	337, 0,
	-2, 1972,
	-1, 4158,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1975,
	-1, 4159,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1977,
	-1, 4268,
	609, 2350,
	-2, 1357,
	-1, 4428,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1976,
	-1, 4429,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1978,
	-1, 4440,
	248, 0,
	-2, 2011,
	-1, 4628,
	248, 0,
	-2, 2012,
	-1, 4845,
	50, 0,
	222, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 2746,
}

const sqlPrivate = 57344

const sqlLast = 136541

var sqlAct = [...]int{
	274, 3654, 4782, 4961, 5036, 1353, 2996, 3392, 4890, 3130,
	4496, 4666, 4674, 4781, 4906, 4844, 4856, 2929, 3143, 4975,
	4738, 4831, 4813, 3653, 4716, 2102, 4138, 4792, 4772, 1544,
	4795, 2275, 4857, 4598, 4478, 4858, 4915, 4572, 2971, 4543,
	3815, 2353, 2182, 4843, 4559, 4264, 1277, 3916, 4632, 4342,
	4384, 4389, 4316, 3100, 4449, 4378, 2510, 3767, 1266, 4501,
	3506, 4417, 3509, 3687, 4092, 4371, 4701, 2365, 4084, 716,
	2363, 4012, 4581, 1571, 4369, 828, 3247, 4245, 4362, 4265,
	3638, 1097, 1343, 2579, 2930, 1814, 1350, 4394, 4058, 2115,
	4041, 3567, 2518, 1411, 3627, 2774, 3681, 1345, 788, 1672,
	4445, 1088, 2045, 828, 3718, 4039, 3155, 2361, 3512, 3720,
	3119, 3643, 3645, 3089, 3114, 3642, 3116, 3620, 3619, 2846,
	3909, 2511, 1336, 2326, 727, 3438, 4137, 2025, 3415, 907,
	3407, 4194, 3396, 3011, 3375, 3150, 3145, 1504, 3131, 2264,
	2262, 3064, 2007, 1976, 2202, 903, 4, 4891, 3531, 2659,
	2812, 3876, 3398, 825, 268, 3374, 1143, 3445, 2218, 2515,
	4633, 2657, 1913, 3231, 3149, 2811, 1952, 267, 1883, 2592,
	898, 2046, 784, 1348, 1610, 2258, 2190, 3093, 823, 3028,
	2263, 2239, 2246, 1392, 2970, 3101, 1147, 1096, 182, 2170,
	1715, 1977, 2174, 2648, 1802, 1152, 1322, 1996, 2113, 2771,
	2792, 2499, 2576, 2160, 2482, 761, 2480, 1670, 2847, 1333,
	1647, 2313, 3124, 1613, 2953, 829, 830, 2954, 1257, 4739,
	976, 2875, 3646, 2916, 2651, 1379, 1947, 1260, 1993, 834,
	2782, 1573, 2801, 1986, 2629, 1239, 2737, 1897, 1815, 1816,
	2481, 1274, 837, 2703, 2483, 769, 2814, 191, 1735, 2339,
	1750, 780, 192, 2272, 1539, 1638, 924, 834, 2312, 1512,
	1256, 2504, 111, 4907, 4962, 1128, 720, 1645, 44, 43,
	837, 41, 32, 1237, 717, 30, 729, 28, 3284, 818,
	879, 1801, 182, 1262, 744, 1821, 1550, 997, 3890, 3278,
	3891, 3394, 2104, 1741, 880, 1543, 703, 2104, 5047, 5039,
	725, 2104, 2791, 3706, 4853, 5027, 5026, 3917, 2104, 2791,
	2791, 2104, 4469, 4995, 4993, 2104, 266, 4500, 4500, 4935,
	4892, 4882, 4880, 2284, 4893, 2791, 2791, 4877, 4874, 4841,
	4840, 4878, 4875, 2284, 2284, 3696, 1681, 4839, 4829, 4827,
	4822, 3160, 4500, 4500, 4584, 1388, 899, 4817, 4816, 2125,
	4790, 4500, 4500, 4758, 4500, 4463, 4466, 2855, 3697, 1829,
	1830, 3706, 1862, 1863, 1864, 1873, 1874, 1875, 2284, 1092,
	4751, 1092, 1150, 73, 2791, 902, 901, 2362, 4221, 4750,
	4743, 1866, 1860, 2791, 2284, 3455, 2877, 4715, 4712, 1832,
	74, 2284, 4500, 1254, 1388, 4695, 4630, 1272, 1879, 4332,
	2855, 4612, 2125, 4574, 4519, 4121, 79, 4575, 2284, 4518,
	4507, 1082, 4506, 2284, 2284, 1885, 4500, 4499, 4456, 4430,
	2125, 4500, 2284, 2855, 1831, 4405, 3880, 1829, 1830, 3160,
	1073, 1292, 4402, 4311, 1851, 1072, 3706, 2791, 4291, 3246,
	2791, 4157, 2791, 1848, 2122, 2855, 88, 3473, 4108, 4102,
	1860, 94, 3713, 3713, 4055, 1564, 1093, 1832, 4056, 3901,
	3899, 3883, 3799, 3902, 3900, 2791, 2284, 3470, 3795, 3712,
	2851, 1087, 2791, 3713, 2122, 2125, 1552, 3391, 3386, 1240,
	1240, 2791, 2791, 1885, 3385, 3336, 3334, 905, 2791, 3337,
	3335, 3326, 1831, 3324, 3295, 3327, 2784, 2791, 2791, 3293,
	49, 1243, 110, 1244, 4759, 3294, 3159, 1241, 94, 107,
	3160, 3141, 2125, 3140, 2900, 2349, 1663, 2349, 2791, 1552,
	1293, 1854, 1855, 1856, 1857, 2854, 2844, 4634, 2836, 2855,
	2791, 1837, 2284, 2790, 2348, 1300, 4625, 2791, 2349, 4613,
	2654, 4584, 238, 3160, 3880, 2783, 4382, 4332, 2122, 4292,
	4121, 4057, 3003, 2195, 2915, 2139, 2103, 2119, 3095, 1293,
	1829, 1830, 2283, 3021, 2913, 1972, 1538, 3991, 95, 3770,
	1870, 3743, 1994, 1880, 2251, 3698, 1717, 3127, 2828, 2827,
	1859, 1861, 2826, 1860, 2825, 2824, 1245, 238, 1242, 1081,
	1832, 240, 1080, 1079, 1078, 3699, 1876, 1077, 1877, 1837,
	1076, 1075, 1071, 1070, 1069, 1846, 1847, 2605, 2606, 2607,
	2624, 2625, 2626, 1269, 1068, 3204, 1885, 1067, 1066, 1065,
	1064, 1063, 4212, 1868, 2791, 1831, 3283, 2627, 1062, 1061,
	1060, 1059, 1058, 2655, 1057, 1851, 240, 1056, 1852, 239,
	1055, 1054, 1829, 1830, 1848, 1036, 974, 973, 1859, 1861,
	972, 3345, 3346, 232, 971, 970, 969, 968, 967, 2105,
	1885, 966, 233, 965, 2105, 964, 963, 962, 2105, 961,
	960, 1563, 1832, 959, 958, 2105, 957, 956, 2105, 2617,
	955, 954, 2105, 953, 239, 1878, 952, 951, 2613, 950,
	193, 949, 948, 4616, 947, 946, 945, 944, 943, 1552,
	4151, 1551, 942, 941, 1867, 940, 1852, 1831, 939, 928,
	927, 926, 922, 921, 2656, 1882, 2653, 99, 914, 913,
	912, 897, 1854, 1855, 1856, 1857, 2122, 896, 853, 852,
	851, 850, 1837, 841, 2122, 193, 840, 839, 1543, 838,
	804, 795, 794, 793, 775, 262, 238, 261, 260, 259,
	238, 258, 257, 256, 255, 1558, 254, 253, 252, 153,
	251, 250, 1355, 1152, 249, 248, 2618, 2619, 2620, 2621,
	247, 1858, 246, 190, 102, 245, 2612, 106, 2122, 244,
	3696, 1859, 1861, 1882, 243, 242, 241, 4169, 3926, 3895,
	1152, 1152, 1152, 238, 1853, 240, 3714, 3441, 3389, 240,
	3306, 3289, 3280, 238, 3184, 3074, 1846, 1847, 1414, 3109,
	2859, 906, 1152, 2833, 1837, 2818, 153, 3345, 3346, 1355,
	2686, 1871, 2684, 3351, 1529, 1955, 2472, 4396, 1149, 2670,
	1955, 2668, 1954, 2168, 1126, 1997, 2124, 1954, 2020, 1852,
	2125, 3390, 240, 239, 1152, 2887, 1152, 239, 1152, 2103,
	2622, 2623, 240, 1884, 1383, 1576, 2122, 232, 1743, 2119,
	1958, 232, 1853, 2475, 1828, 1953, 233, 4491, 1924, 1293,
	233, 1396, 1397, 1398, 1915, 2658, 1796, 157, 1546, 1400,
	1276, 1355, 4867, 2615, 1552, 1922, 1615, 4866, 4863, 2122,
	239, 4842, 194, 2425, 193, 4637, 1522, 4826, 193, 4614,
	239, 1576, 1517, 4723, 232, 4622, 4444, 4403, 1576, 238,
	4381, 4227, 238, 233, 232, 4192, 1882, 1152, 2783, 1152,
	4191, 1884, 4185, 233, 1576, 1869, 1685, 3345, 3346, 4184,
	3361, 4183, 1152, 1509, 1152, 1843, 1844, 1850, 1872, 1849,
	1845, 193, 1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838,
	1839, 900, 1327, 1330, 4176, 1375, 4179, 1293, 240, 4175,
	4178, 240, 4173, 4168, 4165, 1619, 1622, 4164, 1340, 4068,
	4054, 1557, 1858, 238, 3930, 1542, 1667, 3929, 1377, 3928,
	3905, 3871, 1576, 3870, 3869, 3791, 834, 3786, 3436, 3351,
	3382, 1527, 2652, 3373, 3344, 1853, 3341, 3340, 1882, 837,
	3338, 1361, 1152, 1829, 1830, 1152, 239, 1882, 1625, 239,
	1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839, 3333,
	232, 3332, 240, 232, 2868, 1407, 1860, 1501, 1506, 233,
	3331, 1369, 233, 1832, 1917, 1916, 3328, 1914, 4398, 2616,
	3325, 3305, 1095, 3288, 3281, 3279, 3142, 1541, 1540, 2819,
	2641, 1828, 1608, 2280, 1884, 1253, 2329, 3126, 1915, 1885,
	193, 3111, 1827, 5042, 4069, 1686, 4984, 2291, 1831, 1268,
	239, 4983, 1650, 1652, 3989, 1270, 1344, 2289, 1851, 4905,
	4903, 1278, 3345, 3346, 232, 3817, 3362, 4783, 4700, 182,
	182, 4686, 4682, 233, 1829, 1830, 3361, 4681, 1884, 3351,
	4680, 4660, 4659, 1152, 1152, 1152, 1152, 1152, 1152, 1152,
	1152, 1383, 4657, 3387, 1383, 4636, 4635, 4610, 2582, 4596,
	4593, 193, 4592, 4585, 1832, 4570, 1507, 4569, 4515, 1521,
	1344, 4486, 1648, 4442, 4425, 4424, 1152, 4365, 4358, 4355,
	1849, 1845, 1152, 1842, 1840, 1841, 1833, 1834, 1835, 1836,
	1838, 1839, 4333, 4211, 4190, 4122, 1641, 3977, 238, 1831,
	3976, 3959, 3958, 1093, 3956, 1854, 1855, 1856, 1857, 3886,
	3874, 3781, 1902, 1882, 1806, 1837, 3715, 3707, 3673, 3586,
	2602, 2603, 2604, 2628, 2614, 2608, 3542, 2610, 2611, 2609,
	2596, 2597, 2598, 2599, 2600, 2601, 3511, 1759, 1691, 1344,
	1344, 73, 3464, 3462, 1662, 3310, 3309, 240, 3304, 3270,
	3088, 1961, 238, 1960, 1959, 1956, 1948, 1946, 74, 1680,
	2866, 2588, 2865, 2830, 1859, 1861, 2823, 4069, 1833, 1834,
	1835, 1836, 1838, 1839, 79, 3354, 3355, 3347, 3348, 3349,
	3350, 3352, 3353, 2789, 2666, 1901, 2019, 1152, 1152, 1152,
	1975, 1970, 3362, 1152, 3351, 239, 1800, 1969, 1968, 1967,
	1274, 240, 1274, 1966, 1965, 1964, 1837, 3110, 1963, 232,
	1962, 1708, 4617, 1943, 88, 1942, 1904, 1414, 233, 1941,
	1940, 1939, 1852, 1882, 1938, 1937, 1744, 1974, 1936, 1152,
	1935, 1934, 828, 1355, 4397, 1933, 1932, 1931, 2063, 828,
	1930, 1355, 1929, 1355, 1807, 1928, 193, 1917, 2023, 239,
	1903, 1900, 1895, 1368, 1297, 905, 1288, 4639, 4638, 4368,
	4223, 4161, 3925, 232, 3898, 1803, 3889, 1639, 49, 1811,
	110, 3292, 233, 1810, 2821, 3702, 94, 107, 3433, 4464,
	4225, 2857, 1644, 3924, 1073, 1916, 3460, 2031, 1983, 1072,
	238, 1805, 1898, 2109, 3345, 3346, 2111, 4294, 2159, 1882,
	193, 2015, 2116, 1355, 1829, 1830, 2118, 1393, 1957, 1152,
	2159, 2121, 2195, 2030, 1395, 2997, 1824, 1825, 3545, 2042,
	4981, 2151, 2150, 238, 2036, 2159, 2161, 2092, 4974, 2094,
	2159, 1980, 1981, 1152, 1832, 4859, 95, 4683, 1093, 240,
	4586, 1414, 2024, 3347, 3348, 3349, 3350, 3352, 3353, 4870,
	2184, 4577, 4576, 4401, 2004, 1858, 1272, 4336, 1272, 1949,
	1950, 4335, 2975, 4334, 4293, 4214, 2685, 4128, 2683, 1831,
	2157, 4127, 240, 238, 4126, 2669, 4125, 2667, 1853, 2029,
	1394, 4124, 4123, 1383, 2193, 2037, 834, 239, 3893, 2127,
	3892, 182, 2086, 834, 2229, 3345, 3346, 3717, 238, 837,
	2005, 232, 3716, 3709, 2131, 2130, 837, 3708, 4931, 2028,
	233, 4929, 4490, 4072, 2166, 1388, 4855, 1997, 4615, 3768,
	239, 1955, 240, 1388, 4582, 1240, 1995, 1923, 1954, 2002,
	1707, 4003, 3026, 1798, 232, 3330, 3329, 1884, 193, 238,
	1052, 3252, 2957, 233, 2154, 1391, 3974, 240, 3656, 2145,
	3655, 3513, 1973, 3347, 3348, 3349, 3350, 3352, 3353, 1938,
	2248, 1760, 1926, 2107, 1093, 1716, 4951, 2354, 4573, 1938,
	239, 193, 2014, 2013, 4888, 2012, 2010, 1576, 1576, 2009,
	1388, 2008, 1389, 1999, 232, 99, 1053, 1414, 240, 2265,
	4379, 4062, 3628, 233, 3156, 239, 3576, 1717, 2266, 4076,
	2043, 4051, 2649, 4009, 4000, 2381, 3982, 2133, 3740, 232,
	3486, 2359, 2297, 4446, 2129, 3394, 3819, 3298, 233, 4864,
	4510, 193, 4482, 2864, 1971, 1951, 1842, 1840, 1841, 1833,
	1834, 1835, 1836, 1838, 1839, 1643, 239, 3636, 2323, 1618,
	1521, 190, 102, 1534, 2955, 106, 193, 1364, 2228, 1326,
	232, 3018, 4879, 4876, 3692, 3950, 4675, 3015, 4385, 233,
	4789, 2156, 3013, 4653, 3516, 2330, 2999, 3351, 3969, 3123,
	1695, 238, 1269, 3611, 1269, 4932, 2276, 2281, 3183, 906,
	4513, 4509, 4488, 3066, 153, 3762, 4865, 193, 4022, 4933,
	1521, 3490, 1576, 2162, 1576, 4539, 1576, 2152, 4281, 2155,
	1252, 1585, 1385, 2134, 2901, 1593, 1757, 2238, 892, 2189,
	3349, 3350, 3352, 3353, 1576, 1576, 2453, 1644, 2450, 1739,
	240, 1050, 1835, 1836, 1838, 1839, 2225, 1576, 2233, 2238,
	2201, 1048, 1739, 834, 2243, 1046, 4966, 2235, 1032, 1576,
	1395, 1576, 1576, 1576, 2194, 157, 837, 5038, 1044, 1758,
	1041, 1536, 2439, 2268, 2269, 2437, 4021, 4912, 3492, 4279,
	194, 2919, 2654, 4690, 4532, 828, 4521, 4276, 239, 2223,
	2236, 2146, 2451, 2191, 3361, 4325, 2917, 4324, 2490, 4020,
	4019, 2380, 232, 4011, 3997, 2390, 1390, 1152, 3345, 3346,
	2319, 233, 1594, 2270, 1541, 1540, 2324, 3996, 1736, 2452,
	2238, 3994, 2699, 1395, 2698, 2336, 1394, 2187, 1756, 2919,
	3993, 2234, 3981, 2222, 2219, 893, 3945, 2242, 3944, 193,
	3617, 3616, 1152, 3578, 2917, 3454, 3303, 1738, 2357, 3302,
	3301, 3544, 1389, 2282, 3300, 3256, 3024, 2192, 2488, 3023,
	1738, 3461, 3020, 2385, 4511, 1386, 4483, 3009, 2391, 3001,
	2991, 1882, 2373, 1693, 1387, 2655, 2520, 2990, 1152, 767,
	1152, 1737, 2985, 3360, 767, 2474, 2188, 1152, 2984, 1394,
	2063, 2063, 1414, 2333, 1152, 1152, 1152, 1152, 1152, 1152,
	1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152,
	1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152,
	1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152,
	2346, 1152, 2304, 1152, 1152, 1152, 1152, 2305, 2410, 834,
	2983, 2015, 2367, 1648, 2962, 1648, 2342, 2344, 2338, 3513,
	3362, 2961, 837, 1641, 2266, 2341, 2656, 2341, 2653, 1152,
	2237, 2492, 1154, 1152, 1152, 4967, 1369, 2479, 1569, 2858,
	2354, 1152, 1385, 2923, 1093, 1152, 1093, 1152, 1152, 2350,
	3351, 2351, 2237, 2845, 3574, 1414, 4913, 2563, 1804, 2322,
	1643, 1152, 1152, 1152, 1152, 4275, 4969, 1152, 1152, 1152,
	1152, 1152, 1152, 1152, 1152, 3353, 2372, 2972, 2973, 3120,
	2489, 4277, 2979, 2303, 4295, 1839, 2490, 2389, 4237, 2972,
	2973, 1656, 4232, 1152, 1152, 1152, 1152, 1152, 1152, 1152,
	1152, 1152, 2400, 2872, 2163, 2164, 1152, 1671, 2849, 2972,
	2973, 1631, 4423, 1630, 1091, 1378, 2959, 2462, 1274, 1537,
	3741, 1388, 1709, 2237, 1589, 1414, 1390, 3210, 2630, 2631,
	2649, 2516, 2517, 2433, 1274, 2932, 1629, 1688, 1628, 1038,
	2220, 2470, 2630, 2646, 4548, 2377, 2488, 1794, 1312, 2908,
	1152, 1414, 4236, 2503, 2487, 1602, 2231, 3361, 2465, 3163,
	1607, 3199, 1755, 802, 2835, 1699, 4970, 4668, 2946, 2694,
	3355, 3347, 3348, 3349, 3350, 3352, 3353, 2478, 2443, 766,
	2476, 2477, 2484, 2491, 766, 1386, 3229, 2658, 2740, 2740,
	2754, 4932, 2630, 2578, 1387, 2775, 2777, 1797, 1769, 1073,
	2594, 2781, 1073, 1073, 2507, 1090, 2195, 2508, 2509, 2645,
	895, 894, 2578, 3244, 2397, 2226, 3953, 3575, 1268, 1717,
	1268, 2431, 3017, 1717, 1270, 2449, 1270, 1985, 2696, 4999,
	2486, 1809, 2394, 2697, 1882, 4861, 2700, 3489, 2701, 2702,
	2586, 3213, 715, 4978, 1389, 2831, 4968, 2584, 1367, 2388,
	4273, 2945, 2935, 2560, 3016, 1689, 1355, 1355, 2806, 2221,
	3014, 2895, 1773, 2882, 2590, 3012, 4260, 2848, 710, 2886,
	2798, 2343, 2464, 3808, 1272, 1197, 4972, 800, 3750, 3749,
	3201, 2643, 2658, 2897, 2922, 937, 2004, 4031, 4645, 768,
	1272, 2874, 4670, 1093, 768, 4278, 3978, 1752, 2489, 1414,
	4253, 2820, 4323, 1093, 2652, 3995, 1705, 1093, 3805, 1694,
	1145, 3992, 1989, 3362, 1614, 3933, 2871, 2797, 3920, 1092,
	2852, 2805, 3623, 2810, 3615, 2904, 2816, 2817, 2398, 2860,
	2749, 2766, 2890, 3572, 2063, 2736, 1042, 2870, 2779, 1383,
	3019, 2787, 2788, 2896, 2918, 4032, 1042, 2906, 3243, 1240,
	1042, 2893, 2799, 2803, 2804, 4254, 3561, 2982, 3966, 2960,
	1992, 2002, 182, 1043, 1385, 1042, 2438, 1612, 4944, 2436,
	2889, 1388, 2487, 2471, 1957, 1987, 4953, 3212, 2288, 2287,
	3236, 3237, 1414, 2898, 2907, 3553, 4422, 4952, 4030, 3806,
	2958, 2461, 2574, 1990, 4549, 2843, 1093, 5001, 1355, 4920,
	2922, 2195, 890, 3057, 889, 2905, 4547, 4143, 3209, 4142,
	3744, 3624, 4545, 4862, 3562, 3689, 2867, 2924, 4755, 1152,
	1152, 3061, 1152, 2572, 2995, 2558, 2892, 929, 2561, 1949,
	1950, 2215, 3621, 2881, 2658, 2104, 1988, 2884, 3690, 2885,
	3207, 2198, 1591, 3554, 2899, 2876, 2249, 828, 1390, 1355,
	2921, 4676, 2261, 930, 3099, 3979, 2934, 3560, 4271, 2891,
	4544, 3356, 3354, 3355, 3347, 3348, 3349, 3350, 3352, 3353,
	3010, 3092, 3409, 2193, 4274, 4971, 2964, 3964, 2557, 3062,
	1576, 2980, 2217, 4767, 4473, 1344, 3552, 4546, 4697, 2216,
	1269, 3134, 2230, 1576, 2902, 1576, 2998, 801, 4976, 2199,
	3589, 2987, 1089, 3107, 3151, 2965, 1269, 1386, 2986, 2232,
	2260, 1770, 1576, 1588, 3069, 3211, 1387, 3500, 4860, 3071,
	3154, 3689, 3060, 2974, 2976, 2977, 2978, 2989, 2927, 1101,
	2937, 2940, 2214, 1614, 1344, 2949, 1355, 1311, 1355, 3267,
	2227, 3153, 2197, 3164, 3165, 2229, 2463, 803, 3532, 2963,
	2658, 799, 3025, 3491, 3171, 3172, 3173, 3058, 3059, 1991,
	1152, 1767, 2981, 4249, 4669, 2568, 1344, 1344, 834, 4250,
	3265, 2920, 765, 4833, 2988, 4834, 1718, 3103, 1535, 4255,
	2993, 837, 3000, 2224, 3528, 1295, 2232, 3007, 2569, 4352,
	1944, 2919, 3157, 4919, 2570, 2230, 3458, 3608, 2575, 1989,
	3097, 834, 2396, 3534, 2933, 3161, 2938, 2249, 4753, 3067,
	4977, 3166, 2252, 3167, 837, 3148, 2231, 2259, 3181, 711,
	4272, 4252, 3185, 2175, 3186, 4139, 1152, 2185, 2176, 1541,
	3072, 4435, 1152, 1152, 4942, 2175, 3187, 4419, 4256, 2175,
	2176, 3527, 2756, 1690, 2176, 1039, 4979, 1992, 3086, 3138,
	3180, 4800, 4754, 2834, 1771, 3258, 3096, 4305, 4997, 734,
	1507, 2432, 2800, 3622, 1894, 3190, 182, 3192, 3533, 3194,
	2640, 3308, 3408, 938, 2577, 3118, 2559, 931, 932, 2802,
	1990, 2249, 3215, 5002, 3217, 3129, 1768, 2815, 1152, 1152,
	3139, 4986, 1092, 1388, 1152, 4044, 2585, 1521, 1808, 2228,
	2393, 712, 3158, 3821, 4367, 4042, 3137, 1152, 1152, 4133,
	4461, 1648, 3262, 1152, 1152, 1366, 3178, 2387, 3218, 1152,
	4328, 3220, 3136, 2203, 3921, 4144, 1301, 3501, 1299, 2994,
	4898, 2253, 3189, 2194, 3191, 2245, 3193, 3067, 3195, 3196,
	4899, 3263, 2177, 3764, 3227, 3268, 2207, 4717, 3188, 4805,
	1772, 713, 4737, 714, 2177, 1692, 915, 1024, 2177, 4372,
	2181, 3205, 2244, 4595, 1152, 1152, 1152, 3345, 3346, 4251,
	1152, 1723, 2181, 1704, 1706, 3259, 2181, 4327, 4418, 4373,
	1152, 1086, 920, 4326, 4090, 2571, 3677, 3472, 4046, 2842,
	2311, 1982, 1298, 3235, 1291, 2573, 2240, 1152, 4918, 702,
	3291, 3965, 2105, 2204, 4067, 1819, 4140, 2506, 1110, 4261,
	4262, 4353, 4188, 3226, 3225, 2196, 2147, 4508, 5007, 4045,
	3860, 4710, 1985, 1818, 3224, 4604, 2192, 3230, 3446, 2503,
	2144, 3507, 4652, 3245, 4091, 2178, 2183, 4015, 3998, 2352,
	3951, 3730, 3949, 4044, 3678, 1521, 1991, 2178, 2183, 1818,
	3669, 2178, 2183, 4042, 3728, 2241, 1344, 2366, 2368, 3503,
	3286, 3287, 1813, 3282, 3721, 3290, 3108, 3102, 3090, 2337,
	2371, 2331, 2325, 1025, 4702, 2317, 2296, 933, 934, 3804,
	2295, 4718, 2379, 2496, 2382, 2383, 2384, 4703, 1582, 1152,
	1152, 1152, 1152, 3257, 4589, 3941, 1303, 2966, 3875, 1152,
	1152, 1152, 2922, 4773, 1152, 2142, 2939, 1989, 3765, 1521,
	774, 1521, 4740, 2208, 1152, 1274, 1414, 2444, 2179, 4420,
	1152, 4704, 1152, 1818, 2140, 3401, 3402, 1817, 4093, 4390,
	2179, 1274, 3264, 3087, 2179, 1314, 4046, 4565, 4563, 3351,
	4145, 4485, 3266, 3519, 3888, 3515, 1268, 3732, 3514, 1414,
	2143, 3250, 1270, 1817, 2256, 1992, 3228, 2378, 2370, 39,
	1024, 1274, 1268, 3723, 1414, 3538, 3406, 4045, 1270, 2185,
	1987, 3297, 3405, 1746, 1745, 1093, 1355, 2173, 3722, 2209,
	2210, 2185, 2360, 842, 1086, 2185, 2063, 4706, 1990, 4897,
	1414, 3426, 2293, 1740, 4043, 1894, 1282, 4370, 1819, 3384,
	1355, 1090, 1637, 3915, 2205, 2841, 916, 917, 1355, 849,
	4705, 1284, 2254, 3474, 2840, 3403, 3861, 4050, 4189, 3439,
	1030, 1029, 2497, 3536, 1819, 4146, 3862, 1817, 4707, 2839,
	1152, 1988, 5006, 2838, 3731, 2171, 2837, 3476, 1279, 3495,
	3478, 3479, 3094, 1623, 1152, 3482, 3361, 3483, 2184, 3484,
	2206, 4497, 1635, 4663, 1355, 2255, 1624, 4343, 936, 3502,
	2063, 4040, 3453, 3440, 3496, 3497, 3537, 1026, 2943, 4063,
	3957, 1272, 3719, 2967, 2968, 2335, 1025, 1152, 2172, 3417,
	3413, 4719, 2184, 3411, 1285, 3517, 3468, 1272, 3521, 3631,
	3946, 4939, 1355, 4471, 4588, 3942, 3435, 3550, 3379, 3380,
	3381, 3412, 1383, 3432, 3444, 3395, 3424, 3480, 4567, 4470,
	1286, 3487, 3427, 3428, 1355, 3065, 1355, 1272, 3471, 3564,
	1724, 3566, 3456, 1882, 3162, 3493, 3448, 3449, 3450, 3451,
	3410, 3518, 1152, 1152, 3523, 3577, 2248, 3525, 3070, 3068,
	1414, 2364, 4043, 2248, 2265, 3465, 3466, 3430, 3467, 3431,
	1698, 1355, 1283, 2180, 1991, 1355, 3600, 3459, 4498, 4493,
	3606, 3592, 3590, 3594, 3447, 2180, 3598, 3911, 3504, 2180,
	3604, 4779, 4492, 2211, 4786, 3418, 4664, 4770, 3499, 3547,
	4195, 4566, 4480, 3877, 4218, 1576, 2665, 1790, 2793, 4807,
	3425, 4943, 1027, 3729, 3724, 3725, 3726, 3727, 1355, 1576,
	773, 1576, 3362, 4462, 1792, 1414, 918, 919, 4941, 3570,
	3477, 1789, 828, 1576, 4881, 4693, 3551, 3481, 3549, 1028,
	1787, 3912, 2796, 1030, 1029, 1576, 3488, 3416, 3423, 4481,
	2457, 3510, 4684, 843, 844, 1764, 3641, 1355, 3494, 1762,
	3563, 4468, 3670, 4441, 3573, 1636, 1734, 1732, 3913, 2212,
	3910, 1730, 3565, 4229, 1274, 3947, 2029, 3683, 4187, 4049,
	3685, 3422, 4780, 2795, 3376, 3661, 3780, 4665, 2794, 3535,
	1026, 3543, 1031, 3587, 3151, 3738, 1084, 3599, 1024, 1576,
	3668, 3605, 4708, 3151, 3625, 1728, 3556, 1269, 4709, 3737,
	3557, 1576, 3579, 1576, 3558, 1634, 3559, 3469, 3626, 3339,
	3629, 935, 1086, 1269, 4551, 3269, 3091, 3008, 3002, 3612,
	2956, 2869, 2466, 1726, 3705, 2355, 3582, 2022, 2018, 1793,
	1674, 3377, 3588, 3694, 1720, 3760, 3676, 3601, 3613, 2989,
	2057, 3759, 1714, 1269, 1521, 1521, 1813, 3607, 1712, 1633,
	1414, 3203, 3742, 1414, 3202, 2435, 2402, 2274, 1085, 3169,
	3356, 3354, 3355, 3347, 3348, 3349, 3350, 3352, 3353, 2485,
	1751, 2405, 2316, 3679, 2294, 2093, 834, 3752, 3614, 3419,
	3420, 3421, 1280, 2091, 3684, 3591, 2964, 1152, 1927, 837,
	846, 845, 1687, 1152, 1152, 1606, 3686, 1152, 1152, 1152,
	3633, 1152, 1791, 2809, 1025, 1027, 3733, 2664, 3735, 1788,
	1152, 2063, 3665, 3666, 4306, 3664, 1521, 4218, 1786, 1152,
	1272, 4854, 3618, 2459, 1152, 4002, 4001, 4310, 2458, 4290,
	1414, 3691, 1028, 1763, 4769, 4388, 1281, 1761, 1040, 1152,
	3700, 2322, 4315, 3758, 1733, 1731, 3757, 1414, 3801, 1729,
	4303, 3703, 3704, 4242, 4241, 847, 848, 2063, 2063, 1152,
	1152, 4089, 1152, 1152, 1152, 3914, 4080, 4018, 182, 182,
	3999, 3972, 3970, 3755, 3948, 3672, 4383, 3667, 3657, 3121,
	1152, 3113, 3761, 1727, 1152, 1031, 2063, 2063, 1152, 1152,
	1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152,
	1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152, 3766, 1152,
	3736, 1725, 3106, 3783, 3833, 3693, 3834, 1152, 1152, 2063,
	3098, 3746, 1719, 3747, 1152, 3748, 3083, 3793, 3794, 1093,
	1713, 3082, 3063, 2888, 3763, 1152, 1711, 1632, 2434, 2401,
	2273, 2883, 2292, 2290, 2267, 2250, 1274, 1274, 2213, 2200,
	1152, 1030, 1029, 2186, 2126, 2123, 2120, 2117, 2112, 2110,
	2106, 2097, 4916, 3682, 1249, 4911, 3602, 4838, 1822, 2035,
	1344, 2259, 4372, 3248, 4933, 3170, 2148, 4662, 3221, 3219,
	2469, 3056, 1414, 2060, 2136, 2137, 4819, 4731, 3788, 3790,
	1250, 3907, 4373, 4404, 3811, 1355, 1355, 3800, 1026, 1045,
	1047, 1049, 4322, 3807, 3809, 3810, 4233, 3152, 2167, 3816,
	1355, 1355, 3894, 828, 1355, 1587, 3823, 3830, 2051, 3872,
	4606, 2944, 2919, 4599, 4101, 2919, 2467, 2195, 2516, 3824,
	2392, 1784, 1785, 1152, 2429, 3831, 1269, 2917, 3836, 3832,
	2941, 2334, 1335, 3939, 3879, 3838, 1334, 3940, 2424, 3864,
	4818, 2399, 1152, 4282, 4317, 4624, 1710, 2516, 3839, 1829,
	1830, 4495, 4196, 4174, 3530, 1829, 1830, 2948, 2969, 3249,
	1521, 3865, 2468, 3873, 2947, 1826, 1362, 1302, 4936, 1823,
	4927, 3918, 3919, 1152, 1152, 3603, 4014, 3971, 263, 3973,
	3868, 4889, 4077, 3881, 3882, 1832, 3931, 3932, 3884, 3885,
	3938, 1251, 1272, 1272, 3081, 3730, 2948, 2135, 4013, 2318,
	1373, 3015, 3013, 3022, 3004, 182, 3006, 2950, 3728, 1152,
	1152, 3896, 4778, 1027, 1831, 4760, 1335, 1152, 3721, 3005,
	1831, 1335, 2952, 1360, 3952, 699, 4730, 3897, 1160, 4724,
	4661, 4590, 4494, 4558, 4472, 2951, 4087, 4079, 1083, 1576,
	1028, 4066, 1576, 1268, 3927, 3904, 3671, 1355, 3128, 1270,
	4017, 2780, 4028, 2132, 2044, 4973, 3934, 834, 2992, 1268,
	1533, 4809, 1532, 3457, 5005, 1270, 4810, 4726, 3983, 1543,
	837, 1697, 2063, 3987, 270, 270, 270, 1696, 705, 706,
	4809, 721, 705, 721, 732, 4810, 4946, 772, 4166, 1268,
	2660, 792, 3923, 1031, 4086, 1270, 798, 3345, 3346, 4004,
	2911, 3732, 2909, 270, 1549, 4016, 1556, 4591, 1562, 3975,
	1829, 1830, 4010, 2695, 1576, 3980, 4533, 3723, 4319, 4094,
	1152, 4033, 4034, 4314, 911, 2911, 2912, 1766, 1274, 1152,
	1765, 270, 3722, 4103, 2964, 2909, 2910, 4059, 4313, 1576,
	1576, 1576, 4162, 3922, 3134, 3812, 1576, 1576, 1576, 3596,
	3593, 4036, 1921, 3988, 3990, 4048, 4110, 1920, 3223, 4073,
	2473, 3151, 2057, 2057, 4038, 4990, 4954, 4047, 1576, 4824,
	4764, 4029, 4763, 4027, 1414, 4762, 4692, 1661, 4691, 1666,
	4641, 4561, 4098, 4114, 4525, 4465, 4459, 4095, 3731, 4360,
	4052, 4340, 1679, 4061, 1684, 4280, 4037, 4224, 4065, 4117,
	4107, 1414, 4053, 4026, 1152, 1152, 3968, 3960, 1269, 1269,
	1152, 1152, 2063, 4118, 3675, 1152, 1152, 4097, 1152, 3674,
	3524, 3475, 3208, 1152, 3200, 3177, 4083, 3176, 3175, 3174,
	3112, 3085, 3084, 4074, 1152, 4078, 2942, 2879, 2873, 2862,
	2861, 4081, 2850, 3510, 1907, 2589, 2460, 2430, 1912, 2423,
	1152, 2422, 2421, 2420, 4096, 2419, 2332, 2306, 2302, 1742,
	4105, 705, 705, 4099, 2301, 4104, 2300, 4131, 2299, 270,
	4129, 2298, 4115, 4109, 4130, 2100, 4147, 2099, 2098, 4116,
	2096, 2034, 2033, 1783, 1272, 1782, 1721, 1601, 1600, 1599,
	1598, 1597, 1596, 1595, 1590, 1586, 1584, 1583, 1526, 1525,
	1524, 1405, 1404, 1403, 1402, 1401, 1365, 1321, 1320, 1319,
	1318, 1274, 1317, 4160, 4156, 4141, 1316, 1315, 1313, 1274,
	1308, 1307, 1306, 1414, 1414, 1305, 1414, 1304, 904, 8,
	1232, 2138, 1051, 1274, 4148, 1037, 4667, 4259, 4258, 1344,
	4257, 2456, 93, 1592, 1576, 1576, 4201, 3729, 3724, 3725,
	3726, 3727, 866, 87, 2257, 3967, 1003, 1414, 4806, 4696,
	1567, 874, 4788, 4075, 3526, 3027, 2404, 1722, 2406, 3434,
	2822, 4752, 4136, 4170, 3307, 4631, 4434, 2663, 1925, 3388,
	89, 1136, 1268, 1182, 4351, 4350, 4243, 1274, 1270, 1274,
	3954, 3439, 4234, 4235, 3644, 4347, 4219, 4220, 4346, 2048,
	2050, 4186, 1100, 1417, 4832, 2060, 2060, 2149, 4996, 1142,
	2165, 2158, 1355, 2863, 2322, 2739, 1159, 4289, 4283, 4270,
	1156, 2052, 1414, 2054, 1355, 1158, 1157, 1355, 2053, 4298,
	1945, 1155, 4301, 2047, 4269, 4085, 4285, 4286, 3132, 1152,
	2051, 2051, 1414, 4198, 4199, 4266, 4200, 4266, 4222, 4203,
	4193, 3701, 1642, 1640, 1005, 2153, 4204, 4206, 4210, 4213,
	2583, 4228, 2647, 4197, 4231, 4284, 4318, 1272, 4320, 4238,
	3296, 4202, 1918, 4209, 1116, 1272, 1138, 2644, 1296, 1127,
	1576, 1576, 1115, 3414, 3393, 4230, 3688, 3903, 2495, 1272,
	4240, 884, 182, 3342, 2650, 1287, 2763, 2755, 2751, 3485,
	1269, 1412, 3122, 4217, 4344, 1799, 4448, 1896, 1355, 3133,
	1795, 1399, 1120, 4374, 2581, 1909, 3274, 2505, 3695, 3437,
	1414, 4304, 2856, 2011, 4812, 1576, 3820, 3206, 2310, 4341,
	4391, 1248, 1247, 1294, 4321, 1246, 2057, 4288, 3609, 4794,
	4791, 2247, 4354, 1272, 3639, 1272, 3640, 4338, 4299, 2141,
	4297, 2903, 2593, 4300, 1576, 1576, 1576, 1576, 1576, 1576,
	4380, 3658, 4375, 4331, 1132, 4302, 3634, 1520, 2448, 3753,
	1414, 3399, 4337, 4064, 1603, 4312, 797, 4502, 3662, 1144,
	4339, 1881, 1152, 1152, 1152, 4330, 4329, 3052, 3051, 4656,
	1384, 1382, 1381, 1380, 4963, 3963, 3962, 3961, 4392, 4345,
	1414, 237, 3242, 4349, 1820, 1152, 1812, 4356, 1152, 1152,
	4357, 234, 236, 4395, 4366, 235, 4361, 3908, 1152, 3443,
	4887, 2063, 3985, 3630, 23, 22, 1152, 1152, 21, 116,
	42, 20, 3711, 155, 4377, 4400, 133, 4393, 152, 151,
	125, 150, 149, 1414, 3734, 1576, 148, 147, 154, 2500,
	146, 145, 140, 4386, 4409, 4426, 144, 4407, 4413, 143,
	1355, 4406, 142, 4421, 1268, 1268, 141, 4414, 139, 4415,
	1270, 1270, 137, 138, 132, 136, 135, 1414, 134, 131,
	130, 129, 1344, 1269, 128, 1152, 127, 126, 124, 156,
	123, 1269, 122, 121, 120, 4431, 119, 118, 1152, 117,
	785, 786, 61, 60, 115, 1269, 113, 1152, 114, 19,
	40, 14, 2063, 65, 66, 18, 13, 35, 92, 105,
	104, 1152, 103, 4443, 1152, 36, 4437, 101, 100, 4454,
	4455, 34, 17, 16, 15, 4475, 1289, 4476, 1152, 4516,
	4517, 1152, 98, 97, 2322, 96, 4467, 33, 1414, 31,
	11, 9, 37, 2006, 12, 1355, 5, 187, 4505, 1269,
	4541, 1269, 186, 189, 185, 1576, 1576, 1576, 1344, 4477,
	1310, 188, 4534, 91, 4536, 2184, 4537, 184, 4457, 2060,
	4458, 183, 270, 4474, 270, 270, 1274, 1339, 270, 1349,
	4484, 90, 29, 10, 179, 2757, 4580, 4550, 4071, 82,
	1363, 181, 180, 178, 4538, 4524, 177, 176, 792, 83,
	80, 792, 175, 3641, 2051, 4560, 86, 4564, 4571, 1414,
	4579, 4522, 1576, 174, 81, 4527, 85, 4600, 84, 27,
	6, 4568, 64, 7, 4416, 270, 3739, 270, 270, 1339,
	4535, 270, 270, 108, 4266, 109, 1349, 38, 78, 77,
	76, 75, 26, 4552, 4587, 1152, 1152, 4605, 4528, 63,
	270, 25, 1545, 4562, 4557, 4555, 4556, 173, 4583, 4553,
	218, 217, 1152, 2063, 216, 4609, 4578, 4611, 1565, 4542,
	215, 4540, 214, 4514, 213, 1580, 212, 211, 4603, 206,
	210, 208, 207, 209, 1355, 4601, 205, 1355, 228, 1355,
	1355, 227, 221, 4526, 1605, 220, 226, 1349, 225, 224,
	223, 270, 270, 222, 1339, 4608, 4395, 1152, 4607, 1152,
	4602, 1152, 219, 231, 204, 203, 202, 200, 196, 199,
	201, 1274, 198, 197, 195, 792, 230, 270, 270, 229,
	72, 171, 1272, 4619, 1152, 4651, 1274, 172, 71, 1668,
	4620, 4621, 4597, 170, 169, 168, 1268, 167, 166, 1675,
	165, 164, 1270, 70, 911, 24, 4623, 2, 1, 0,
	2021, 0, 0, 0, 0, 4629, 0, 0, 0, 0,
	4640, 0, 0, 4642, 4650, 4643, 4644, 0, 0, 4266,
	4649, 4679, 0, 4646, 4688, 0, 0, 4678, 0, 0,
	1274, 1274, 0, 2587, 4266, 2426, 0, 1152, 1152, 4672,
	4671, 0, 0, 4699, 0, 0, 0, 1152, 0, 1907,
	0, 0, 0, 0, 1274, 0, 0, 1274, 0, 0,
	0, 1576, 0, 0, 0, 4687, 0, 0, 0, 0,
	0, 1576, 270, 0, 0, 4713, 4714, 0, 0, 0,
	0, 4694, 4689, 0, 0, 1152, 1152, 0, 4266, 4266,
	0, 0, 0, 0, 4711, 1152, 270, 0, 0, 4734,
	0, 0, 4736, 0, 2762, 4748, 0, 4749, 0, 0,
	4727, 4583, 4266, 4725, 4720, 4266, 0, 1272, 4721, 4722,
	4728, 4733, 4023, 0, 2169, 4024, 0, 4742, 0, 4744,
	0, 4745, 1272, 0, 4741, 4747, 0, 0, 4746, 0,
	0, 0, 4757, 1152, 1152, 0, 0, 1152, 4765, 4761,
	0, 1355, 0, 0, 1355, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4793, 4796, 1268,
	4768, 0, 0, 4776, 4777, 1270, 0, 1268, 4814, 0,
	4756, 0, 0, 1270, 4811, 4815, 1272, 1272, 1269, 4808,
	4784, 1268, 0, 4785, 0, 0, 0, 1270, 0, 0,
	1521, 0, 4802, 4766, 0, 0, 0, 4835, 0, 0,
	1272, 4837, 0, 1272, 1152, 1152, 1152, 0, 2057, 0,
	0, 0, 4111, 4112, 4113, 4798, 0, 0, 0, 2366,
	4119, 4120, 0, 4820, 0, 0, 0, 4803, 4797, 0,
	4804, 0, 4801, 0, 0, 1268, 4828, 1268, 4825, 0,
	1152, 1270, 4868, 1270, 4836, 0, 0, 0, 4849, 4850,
	0, 4852, 0, 4873, 0, 0, 0, 0, 4851, 0,
	2285, 0, 0, 4869, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2184, 0, 0, 0, 4894, 4883, 4895,
	4885, 4896, 2057, 0, 4871, 0, 0, 705, 0, 4908,
	4902, 4904, 0, 0, 0, 4886, 1152, 0, 0, 0,
	0, 4884, 0, 0, 1355, 0, 1344, 0, 270, 4901,
	270, 4917, 0, 4560, 270, 4900, 0, 0, 0, 0,
	4910, 0, 0, 1269, 4909, 0, 4934, 1545, 1339, 2026,
	270, 4914, 270, 2032, 0, 0, 4923, 4924, 1269, 4926,
	270, 4930, 721, 4928, 0, 3232, 0, 270, 4950, 0,
	4937, 0, 4793, 4938, 1274, 4796, 1274, 4949, 4948, 4940,
	0, 4814, 0, 2101, 4957, 0, 4947, 0, 4959, 0,
	0, 4945, 0, 0, 4955, 270, 4956, 0, 0, 0,
	0, 4965, 270, 0, 0, 0, 0, 0, 4964, 0,
	4925, 0, 1269, 1269, 1355, 0, 0, 0, 0, 4958,
	4987, 4960, 0, 4980, 4982, 0, 0, 0, 4989, 0,
	0, 4994, 4266, 4988, 4266, 792, 1269, 4215, 4216, 1269,
	0, 4992, 0, 0, 1152, 1152, 2757, 2757, 5000, 0,
	4991, 0, 1152, 0, 1152, 1152, 3134, 4998, 0, 5003,
	5016, 0, 0, 5009, 5018, 5015, 0, 0, 0, 0,
	5017, 2060, 5020, 0, 5022, 5013, 5019, 5021, 5025, 5024,
	0, 5012, 0, 5023, 0, 0, 0, 3134, 0, 0,
	0, 0, 0, 1355, 5029, 0, 5030, 5034, 5033, 5037,
	4985, 5031, 5035, 5028, 5041, 5032, 2051, 0, 0, 0,
	0, 0, 5043, 1152, 0, 5040, 0, 0, 0, 5044,
	5037, 5046, 5048, 0, 0, 0, 0, 0, 0, 0,
	1272, 0, 1272, 0, 0, 0, 0, 0, 0, 0,
	0, 73, 0, 0, 0, 2060, 0, 0, 0, 5010,
	5011, 0, 0, 0, 0, 0, 1829, 1830, 74, 3271,
	3272, 0, 0, 0, 0, 2519, 0, 0, 0, 0,
	0, 0, 0, 2366, 79, 0, 0, 0, 0, 1860,
	2051, 0, 0, 0, 0, 0, 1832, 3075, 0, 0,
	3078, 0, 3080, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 270, 5045, 0,
	0, 0, 1885, 0, 88, 0, 0, 0, 0, 0,
	0, 1831, 0, 0, 0, 0, 0, 0, 2757, 2757,
	2757, 2757, 0, 0, 0, 0, 0, 0, 0, 3125,
	0, 0, 3125, 2057, 2762, 0, 0, 4408, 0, 4410,
	4411, 4412, 0, 0, 1268, 905, 0, 1107, 2661, 0,
	1270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	110, 270, 0, 0, 0, 270, 94, 107, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 270, 0, 2057,
	2057, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 270, 0, 0, 0, 705,
	0, 270, 0, 0, 0, 0, 0, 0, 2057, 2057,
	0, 0, 0, 792, 3197, 2762, 2762, 911, 1837, 0,
	0, 0, 0, 0, 0, 73, 95, 0, 4460, 0,
	0, 3369, 3370, 3371, 3372, 0, 1269, 0, 1269, 0,
	0, 2057, 74, 0, 2832, 0, 270, 0, 1339, 270,
	0, 0, 0, 0, 0, 0, 0, 0, 79, 0,
	0, 0, 0, 792, 0, 0, 0, 1859, 1861, 0,
	270, 0, 0, 0, 0, 0, 0, 0, 2403, 0,
	0, 0, 0, 270, 270, 0, 270, 0, 270, 1268,
	270, 0, 270, 0, 0, 1270, 0, 0, 88, 0,
	0, 0, 0, 0, 1268, 0, 0, 0, 0, 0,
	1270, 0, 0, 0, 0, 0, 0, 2440, 0, 0,
	2441, 0, 2442, 0, 0, 1852, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 270, 270, 270, 0, 905,
	0, 3345, 3346, 0, 3363, 3364, 3365, 0, 4554, 0,
	0, 0, 49, 0, 110, 2853, 0, 0, 1268, 1268,
	94, 107, 0, 772, 1270, 1270, 0, 792, 0, 0,
	0, 0, 0, 0, 0, 99, 2060, 0, 0, 0,
	0, 0, 1268, 0, 0, 1268, 0, 0, 1270, 0,
	0, 1270, 2914, 0, 0, 0, 0, 2762, 2762, 2762,
	2762, 0, 1882, 0, 0, 0, 0, 0, 0, 0,
	0, 2051, 0, 0, 0, 0, 3360, 0, 0, 0,
	95, 0, 2060, 2060, 0, 0, 0, 0, 0, 0,
	0, 190, 102, 0, 0, 106, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2060, 2060, 0, 0, 0, 0, 2051, 2051, 0,
	2595, 238, 0, 0, 0, 0, 0, 0, 0, 906,
	0, 0, 0, 0, 153, 0, 0, 0, 0, 272,
	0, 1853, 0, 0, 2060, 0, 2051, 2051, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2057, 0, 0, 0, 0, 0,
	240, 0, 0, 3351, 0, 0, 0, 0, 0, 2051,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3345,
	3346, 705, 3363, 3364, 3365, 157, 0, 0, 0, 0,
	1884, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	194, 0, 0, 0, 0, 705, 0, 0, 239, 0,
	0, 0, 270, 0, 705, 0, 0, 0, 0, 99,
	0, 0, 232, 0, 0, 0, 270, 0, 3367, 0,
	0, 233, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 1349, 0,
	0, 0, 0, 0, 3360, 0, 0, 0, 0, 193,
	0, 0, 0, 0, 0, 0, 0, 2757, 2757, 0,
	3361, 0, 0, 0, 2366, 190, 102, 0, 0, 106,
	1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839, 0, 0,
	0, 0, 0, 0, 2057, 0, 270, 1349, 0, 0,
	721, 0, 721, 0, 0, 238, 2878, 0, 0, 0,
	0, 0, 270, 906, 0, 270, 0, 0, 153, 270,
	0, 270, 0, 0, 1114, 0, 1339, 0, 270, 270,
	0, 1349, 1349, 2894, 0, 0, 0, 0, 270, 0,
	0, 0, 1268, 0, 1268, 0, 0, 1882, 1270, 0,
	1270, 3351, 0, 0, 240, 0, 0, 2757, 2757, 2757,
	2757, 2757, 2757, 2757, 2757, 2757, 2757, 2757, 2757, 2757,
	2757, 2757, 2757, 2757, 2757, 2757, 2757, 0, 2757, 157,
	3776, 3777, 0, 0, 2931, 0, 0, 0, 0, 0,
	3539, 3540, 0, 3541, 194, 270, 0, 2060, 0, 0,
	0, 0, 239, 0, 0, 0, 0, 0, 0, 270,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 270, 0, 0, 233, 3362, 0, 0, 0,
	0, 0, 2051, 792, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3583, 3584, 0, 3585, 0, 0,
	0, 0, 0, 1653, 0, 0, 0, 0, 3361, 270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3840, 3841, 3842, 3843, 3844, 3845, 3846, 3847, 3848, 3849,
	3850, 3851, 3852, 3853, 3854, 3855, 3856, 3857, 3858, 3859,
	0, 3863, 270, 3073, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1545, 0, 0, 270, 0, 270, 0, 0, 0, 0,
	0, 0, 270, 0, 0, 1882, 0, 2060, 0, 0,
	0, 0, 3117, 0, 0, 0, 2762, 2762, 0, 0,
	0, 0, 2931, 0, 705, 0, 0, 0, 0, 0,
	0, 0, 0, 3146, 911, 2931, 0, 3357, 3358, 3359,
	0, 0, 2051, 0, 3356, 3354, 3355, 3347, 3348, 3349,
	3350, 3352, 3353, 0, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 1339, 270, 0, 0,
	0, 0, 0, 0, 3362, 0, 0, 1349, 270, 0,
	0, 1339, 0, 1339, 0, 1339, 0, 0, 0, 3345,
	3346, 0, 3363, 3364, 3365, 0, 2762, 2762, 2762, 2762,
	2762, 2762, 2762, 2762, 2762, 2762, 2762, 2762, 2762, 2762,
	2762, 2762, 2762, 2762, 2762, 2762, 0, 2762, 0, 3400,
	1829, 1830, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 270, 270, 270, 1339, 0, 0, 1339, 0, 270,
	0, 0, 0, 1860, 270, 0, 4260, 0, 0, 0,
	1832, 0, 3429, 0, 0, 0, 1829, 1830, 0, 0,
	0, 0, 0, 2057, 3360, 0, 0, 3442, 0, 0,
	0, 0, 0, 0, 0, 270, 1885, 0, 0, 1860,
	4253, 0, 0, 270, 4246, 1831, 1832, 0, 0, 0,
	0, 0, 0, 3463, 0, 0, 0, 0, 0, 0,
	0, 4244, 0, 0, 0, 0, 0, 0, 0, 0,
	4248, 0, 1885, 0, 0, 3357, 3358, 3359, 0, 0,
	0, 1831, 3356, 3354, 3355, 3347, 3348, 3349, 3350, 3352,
	3353, 1851, 0, 0, 0, 4254, 0, 0, 0, 0,
	1848, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2057, 0, 0, 0, 0, 1829,
	1830, 3351, 0, 0, 0, 1873, 1874, 1875, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4247,
	0, 0, 1860, 0, 0, 0, 0, 0, 0, 1832,
	0, 0, 1837, 0, 0, 0, 3779, 0, 1879, 0,
	0, 0, 0, 3368, 0, 0, 0, 0, 0, 1545,
	0, 0, 0, 0, 0, 1885, 0, 0, 1854, 1855,
	1856, 1857, 0, 0, 1831, 0, 3367, 0, 1837, 0,
	0, 0, 0, 0, 1851, 0, 0, 0, 0, 0,
	0, 1859, 1861, 1848, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1865, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3361, 0,
	0, 0, 0, 0, 0, 0, 0, 1859, 1861, 1114,
	1114, 1114, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1498, 0, 1852,
	0, 0, 1846, 1847, 0, 0, 2060, 0, 3442, 0,
	0, 0, 0, 0, 0, 2057, 0, 0, 0, 0,
	0, 1854, 1855, 1856, 1857, 0, 0, 0, 0, 0,
	0, 1837, 0, 0, 0, 1852, 0, 0, 0, 0,
	0, 2051, 0, 4249, 0, 1882, 0, 0, 0, 4250,
	0, 0, 0, 270, 0, 0, 0, 0, 0, 4255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	1870, 0, 0, 1880, 705, 0, 1882, 0, 0, 705,
	1859, 1861, 705, 0, 0, 705, 705, 0, 0, 0,
	0, 705, 0, 0, 0, 0, 0, 2060, 0, 270,
	0, 4252, 0, 0, 0, 1846, 1847, 0, 0, 0,
	0, 270, 1882, 0, 0, 0, 0, 0, 4256, 0,
	0, 0, 0, 1868, 3362, 0, 0, 0, 0, 0,
	0, 0, 2051, 0, 0, 0, 0, 0, 1852, 0,
	0, 0, 0, 3754, 0, 0, 1412, 0, 0, 0,
	0, 0, 270, 0, 0, 1853, 270, 270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1858, 0,
	0, 4082, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2931, 2931, 270, 0, 2026,
	0, 1853, 0, 0, 0, 2931, 0, 2032, 0, 0,
	0, 0, 0, 0, 0, 0, 2931, 2032, 0, 2931,
	2032, 0, 0, 2032, 1884, 1882, 1865, 0, 0, 0,
	0, 0, 0, 3797, 0, 0, 0, 270, 270, 2026,
	0, 270, 0, 0, 0, 0, 0, 0, 4132, 0,
	3813, 0, 0, 0, 0, 0, 0, 0, 0, 4251,
	1884, 2026, 0, 270, 0, 3569, 3569, 2757, 2060, 0,
	1339, 0, 0, 0, 0, 3357, 3358, 3359, 0, 0,
	0, 1858, 3356, 3354, 3355, 3347, 3348, 3349, 3350, 3352,
	3353, 0, 2931, 0, 2931, 0, 3597, 2931, 2026, 4261,
	4262, 2931, 2026, 2051, 1853, 792, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1841, 1833, 1834, 1835, 1836,
	1838, 1839, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1871, 0, 0, 2757, 1339, 0, 0, 0, 0,
	0, 0, 270, 0, 0, 0, 1849, 1845, 0, 1842,
	1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839, 0, 0,
	270, 0, 3635, 1884, 0, 0, 3637, 2931, 0, 0,
	270, 0, 0, 0, 270, 0, 0, 1349, 0, 1865,
	4440, 0, 0, 0, 0, 3906, 0, 0, 0, 0,
	0, 0, 270, 0, 0, 0, 0, 3117, 0, 0,
	1339, 0, 270, 0, 0, 2931, 0, 705, 0, 0,
	0, 0, 0, 0, 2931, 1865, 0, 0, 0, 0,
	0, 1865, 0, 0, 0, 0, 0, 1865, 0, 0,
	0, 0, 0, 0, 0, 1869, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4487, 1872, 1849,
	1845, 0, 1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838,
	1839, 73, 0, 3745, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1829, 1830, 1498, 0, 74, 0,
	0, 0, 0, 3751, 0, 0, 1545, 0, 0, 1339,
	270, 0, 270, 0, 79, 0, 0, 1860, 1339, 0,
	0, 0, 0, 0, 1832, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4308, 0, 0,
	0, 2757, 0, 0, 0, 0, 0, 1865, 0, 270,
	1885, 0, 1865, 0, 88, 0, 0, 0, 0, 1831,
	0, 0, 0, 0, 0, 1865, 2762, 0, 0, 0,
	1865, 0, 0, 0, 0, 1829, 1830, 0, 1862, 1863,
	1864, 1873, 1874, 1875, 0, 0, 0, 0, 2757, 0,
	0, 0, 0, 0, 0, 905, 4359, 1866, 1860, 0,
	0, 0, 0, 0, 0, 1832, 0, 3818, 49, 4376,
	110, 0, 1114, 2757, 1879, 0, 94, 107, 0, 0,
	1498, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1885, 4399, 2762, 0, 1865, 0, 0, 0, 0,
	1831, 1865, 0, 0, 0, 0, 0, 0, 0, 0,
	1851, 0, 0, 0, 4628, 0, 0, 0, 0, 1848,
	0, 0, 0, 0, 0, 0, 1837, 0, 0, 0,
	73, 0, 0, 0, 0, 0, 95, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 74, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4655, 0, 79, 270, 270, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1859, 1861, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4677, 0, 0, 705,
	705, 0, 0, 0, 0, 0, 0, 1854, 1855, 1856,
	1857, 0, 0, 88, 0, 0, 0, 1837, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1498, 0, 0, 0,
	0, 270, 0, 1852, 1865, 1865, 1865, 1865, 1865, 1865,
	1865, 1865, 0, 0, 905, 0, 1870, 3345, 3346, 1880,
	3363, 3364, 3365, 0, 1865, 0, 1859, 1861, 0, 110,
	0, 0, 0, 0, 0, 94, 107, 1865, 0, 4153,
	0, 0, 1876, 0, 1877, 0, 0, 0, 0, 0,
	2762, 1846, 1847, 0, 0, 99, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1868,
	0, 0, 0, 792, 0, 0, 0, 0, 0, 0,
	1882, 0, 0, 2761, 1852, 0, 0, 0, 0, 4208,
	0, 0, 3360, 0, 0, 95, 1865, 2762, 0, 0,
	0, 0, 1865, 0, 0, 0, 3569, 0, 0, 0,
	0, 190, 102, 0, 0, 106, 0, 0, 0, 0,
	4226, 270, 2762, 0, 0, 0, 0, 0, 0, 0,
	0, 1878, 0, 0, 0, 3345, 3346, 0, 3363, 3364,
	3365, 238, 0, 0, 2026, 0, 270, 0, 0, 906,
	721, 721, 1349, 0, 153, 0, 0, 4152, 0, 1853,
	0, 1882, 0, 0, 0, 270, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 3117, 0, 0,
	3117, 2032, 0, 0, 0, 0, 270, 0, 0, 3351,
	240, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 270, 0, 0, 0,
	3360, 0, 0, 0, 0, 157, 0, 1858, 1884, 0,
	0, 0, 0, 0, 0, 2931, 270, 0, 0, 0,
	194, 0, 0, 0, 0, 3146, 3146, 0, 239, 0,
	1853, 911, 2931, 0, 99, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 3367, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 0, 0, 0, 1871, 0, 0,
	270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1498, 0, 0, 0, 0, 0, 0, 0, 1651,
	4685, 0, 0, 0, 0, 0, 3361, 0, 0, 1884,
	190, 102, 0, 0, 106, 0, 0, 3351, 0, 0,
	1833, 1834, 1835, 1836, 1838, 1839, 0, 0, 4698, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 1412, 0, 0, 0, 0, 906, 0,
	0, 0, 0, 153, 0, 0, 4171, 0, 0, 0,
	4732, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4432, 0, 0, 0, 0, 0, 0,
	0, 1869, 3367, 1882, 1498, 0, 0, 0, 0, 240,
	0, 1843, 1844, 1850, 1872, 1849, 1845, 0, 1842, 1840,
	1841, 1833, 1834, 1835, 1836, 1838, 1839, 0, 0, 0,
	0, 0, 0, 0, 157, 0, 4432, 0, 0, 270,
	0, 0, 0, 0, 3361, 1545, 0, 270, 0, 194,
	0, 0, 0, 0, 0, 0, 0, 239, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	2519, 232, 0, 0, 1498, 0, 0, 0, 0, 1349,
	233, 0, 3362, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1349, 0, 270, 1349, 0, 0, 0, 0,
	1498, 0, 0, 2931, 2931, 0, 3569, 2931, 193, 0,
	0, 0, 0, 0, 4821, 4268, 0, 4268, 1545, 0,
	4823, 1882, 0, 0, 0, 0, 0, 0, 0, 2931,
	0, 2032, 0, 0, 0, 1545, 1545, 270, 2026, 0,
	0, 2519, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2026, 0, 270, 2026, 0, 270, 0, 3569, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1865, 0, 2931, 0, 2931,
	270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3362, 0, 1865, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2931, 2931, 0, 0, 0,
	0, 3117, 3117, 3357, 3358, 3359, 0, 0, 4363, 0,
	3356, 3354, 3355, 3347, 3348, 3349, 3350, 3352, 3353, 270,
	0, 0, 1865, 0, 0, 0, 1865, 0, 1498, 270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1865, 0, 0, 0, 0, 0, 0, 0, 0, 1865,
	1865, 1865, 1865, 1865, 1865, 1865, 1865, 1865, 1865, 1865,
	1865, 1865, 1865, 1865, 1865, 1865, 1865, 1865, 1865, 1865,
	1865, 1865, 1865, 1865, 1865, 1865, 1865, 1865, 1865, 1865,
	1865, 1865, 1865, 1865, 1865, 0, 0, 0, 0, 0,
	1865, 0, 1865, 1865, 1865, 1865, 0, 0, 0, 0,
	0, 0, 0, 0, 2761, 2761, 0, 0, 0, 0,
	0, 1498, 0, 0, 0, 0, 0, 0, 0, 1865,
	0, 3357, 3358, 3359, 0, 0, 0, 0, 3356, 3354,
	3355, 3347, 3348, 3349, 3350, 3352, 3353, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1865, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2931, 2032, 0, 2032, 0, 0, 4479, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	1865, 0, 0, 1865, 0, 4503, 1865, 4503, 0, 1865,
	0, 0, 0, 0, 0, 1865, 1865, 1865, 1865, 1865,
	1865, 1865, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 792, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3569, 0, 1339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2026, 0, 270, 0, 0, 0, 0, 0,
	0, 0, 0, 1829, 1830, 0, 0, 0, 0, 0,
	0, 1865, 0, 0, 3366, 0, 2761, 2761, 2761, 2761,
	805, 4479, 0, 1865, 4268, 1865, 1860, 1545, 0, 0,
	1865, 0, 0, 1832, 2931, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 816, 0, 0, 0, 0,
	0, 0, 0, 0, 4594, 0, 0, 3345, 3346, 1885,
	3363, 3364, 3365, 0, 0, 0, 1545, 0, 1831, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1851, 3785,
	0, 0, 0, 0, 0, 0, 0, 1848, 0, 0,
	0, 270, 270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1829, 1830, 0, 0,
	0, 0, 0, 0, 0, 3818, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1860,
	0, 0, 3360, 0, 0, 0, 1832, 0, 810, 0,
	3569, 4648, 0, 3774, 0, 822, 0, 0, 0, 4479,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 815,
	0, 0, 1885, 0, 0, 1854, 1855, 1856, 1857, 4268,
	0, 1831, 0, 0, 0, 1837, 0, 0, 0, 0,
	0, 1851, 0, 0, 4268, 0, 0, 0, 0, 0,
	1848, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 1984,
	814, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	721, 0, 0, 0, 1859, 1861, 0, 767, 0, 3351,
	0, 0, 0, 0, 0, 0, 0, 0, 4268, 4268,
	0, 0, 0, 0, 4363, 0, 3773, 0, 0, 1846,
	1847, 0, 812, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4268, 0, 270, 4268, 0, 0, 1854, 1855,
	1856, 1857, 0, 0, 0, 2032, 0, 0, 1837, 0,
	0, 0, 1852, 0, 1545, 0, 1545, 0, 0, 0,
	0, 0, 0, 0, 3367, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	821, 0, 0, 0, 1349, 0, 0, 0, 1829, 1830,
	0, 0, 0, 0, 0, 0, 4774, 1859, 1861, 0,
	0, 0, 0, 0, 1865, 1865, 3361, 1865, 0, 0,
	0, 1860, 4503, 0, 0, 270, 0, 0, 1832, 0,
	0, 0, 1846, 1847, 0, 0, 0, 0, 0, 1882,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2931,
	0, 0, 0, 0, 1885, 1498, 0, 0, 0, 0,
	0, 0, 0, 1831, 0, 1852, 0, 0, 807, 0,
	0, 0, 0, 1851, 0, 0, 0, 0, 0, 0,
	0, 0, 1848, 0, 1099, 0, 270, 0, 1498, 0,
	0, 0, 0, 1882, 0, 1858, 0, 0, 0, 811,
	0, 0, 0, 1498, 0, 0, 3345, 3346, 3818, 3363,
	3364, 3365, 0, 0, 0, 0, 0, 0, 1853, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3784, 1498,
	0, 0, 1545, 0, 0, 0, 1865, 766, 3260, 0,
	0, 0, 1882, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 817, 0, 0, 0, 0, 0, 809, 0,
	1854, 1855, 1856, 1857, 0, 0, 0, 0, 0, 1114,
	1837, 0, 3362, 0, 0, 0, 0, 1884, 0, 0,
	0, 3360, 0, 1114, 0, 0, 0, 0, 0, 0,
	0, 0, 1865, 1865, 0, 2761, 2761, 0, 1858, 1865,
	0, 0, 0, 4479, 0, 0, 806, 0, 0, 3366,
	3366, 0, 0, 1865, 1865, 0, 0, 0, 0, 1859,
	1861, 1853, 0, 1865, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 813, 0, 0, 0, 1865, 0, 0,
	0, 0, 2931, 0, 1846, 1847, 0, 768, 0, 1865,
	0, 0, 4268, 0, 4268, 0, 0, 1545, 808, 0,
	0, 0, 0, 1849, 1845, 0, 1842, 1840, 1841, 1833,
	1834, 1835, 1836, 1838, 1839, 0, 0, 1852, 3351, 1498,
	1884, 0, 819, 820, 0, 2761, 2761, 2761, 2761, 2761,
	2761, 2761, 2761, 2761, 2761, 2761, 2761, 2761, 2761, 2761,
	2761, 2761, 2761, 2761, 2761, 0, 2761, 3366, 3366, 3366,
	3366, 0, 0, 3357, 3358, 3359, 0, 2931, 0, 0,
	3356, 3354, 3355, 3347, 3348, 3349, 3350, 3352, 3353, 0,
	0, 0, 0, 0, 0, 3146, 0, 0, 0, 0,
	0, 0, 1865, 3367, 1498, 0, 0, 0, 2931, 0,
	0, 0, 0, 0, 1882, 0, 0, 0, 0, 0,
	0, 0, 0, 3146, 0, 0, 1849, 1845, 0, 1842,
	1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839, 0, 0,
	0, 0, 0, 0, 0, 3361, 0, 0, 0, 0,
	0, 1829, 1830, 0, 1862, 1863, 1864, 1873, 1874, 1875,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1858, 0, 0, 1866, 1860, 0, 0, 0, 0, 0,
	0, 1832, 0, 0, 0, 0, 0, 0, 0, 0,
	1879, 0, 0, 1853, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1885, 0, 0,
	0, 0, 0, 0, 0, 0, 1831, 0, 0, 0,
	0, 0, 1882, 0, 0, 0, 1851, 1865, 0, 0,
	0, 0, 0, 0, 0, 1848, 0, 0, 0, 1498,
	0, 0, 1498, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1884, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1865, 1865,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1854, 1855, 1856, 1857, 0, 0, 1498,
	0, 0, 0, 1837, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1498, 0, 1849, 1845,
	0, 1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1870, 0, 0, 1880, 0, 0, 0, 0,
	0, 0, 1859, 1861, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1876, 0,
	1877, 0, 0, 0, 0, 0, 0, 1846, 1847, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1358, 0, 0, 1868, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1852, 0, 0, 0, 0, 0, 0, 0, 0, 1099,
	1099, 1099, 3357, 3358, 3359, 0, 0, 0, 0, 3356,
	3354, 3355, 3347, 3348, 3349, 3350, 3352, 3353, 0, 0,
	0, 1511, 0, 0, 0, 0, 0, 0, 0, 1865,
	1865, 1498, 0, 1865, 3366, 3366, 1865, 1878, 0, 0,
	1865, 0, 0, 0, 0, 0, 0, 1865, 0, 0,
	0, 0, 0, 1547, 0, 1553, 1867, 1559, 0, 0,
	1865, 0, 0, 0, 0, 0, 0, 1882, 0, 0,
	2732, 2733, 2734, 2735, 2728, 2729, 2730, 2731, 0, 0,
	0, 0, 0, 1865, 1865, 1865, 1865, 1865, 0, 0,
	0, 0, 0, 1865, 0, 1865, 0, 0, 3366, 3366,
	3366, 3366, 3366, 3366, 3366, 3366, 3366, 3366, 3366, 3366,
	3366, 3366, 3366, 3366, 3366, 3366, 3366, 3366, 0, 0,
	0, 3366, 0, 1858, 1865, 1865, 1659, 0, 1664, 0,
	0, 0, 0, 0, 0, 0, 1865, 0, 0, 0,
	0, 1677, 0, 1682, 0, 1865, 1853, 0, 0, 0,
	0, 2708, 2709, 2710, 2711, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1871, 2720, 2721, 2722, 2723, 2716, 2717,
	2718, 2719, 2724, 2725, 2726, 2727, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1865, 0, 0, 0, 1884, 0, 0, 0, 0,
	0, 1747, 0, 1865, 1753, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1865, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2704, 2705, 2706, 2707, 2712, 2713,
	2714, 2715, 0, 1865, 1865, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1869, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1843, 1844, 1850,
	1872, 1849, 1845, 0, 1842, 1840, 1841, 1833, 1834, 1835,
	1836, 1838, 1839, 0, 0, 0, 0, 0, 4775, 0,
	0, 0, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1498, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1906, 0, 0, 0, 0,
	0, 1919, 0, 0, 0, 0, 0, 0, 0, 752,
	1498, 0, 1829, 1830, 1865, 1862, 1863, 1864, 1873, 1874,
	1875, 0, 0, 0, 0, 0, 0, 0, 0, 735,
	0, 0, 0, 0, 736, 1860, 0, 0, 0, 0,
	0, 0, 1832, 0, 0, 0, 0, 0, 0, 0,
	0, 1879, 0, 0, 0, 0, 0, 1865, 1865, 0,
	0, 0, 1865, 1865, 0, 0, 1865, 1865, 1885, 0,
	0, 1865, 0, 737, 0, 1865, 0, 1831, 0, 0,
	1865, 0, 0, 0, 738, 0, 0, 1851, 0, 0,
	0, 0, 0, 0, 0, 2761, 1848, 0, 0, 0,
	0, 0, 0, 0, 0, 739, 1978, 1978, 1978, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 758, 0, 0,
	0, 0, 1498, 1498, 0, 1498, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 740, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2761, 0, 0, 0, 1498, 0, 0, 0,
	0, 0, 0, 741, 1854, 1855, 1856, 1857, 0, 0,
	0, 0, 0, 0, 1837, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 742, 0, 0, 743,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 767, 1865, 0, 0,
	0, 1148, 0, 1870, 0, 0, 1880, 0, 0, 0,
	0, 1498, 0, 1859, 1861, 0, 0, 0, 0, 0,
	0, 757, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1498, 1099, 0, 0, 0, 0, 0, 1846, 1847,
	0, 0, 0, 0, 0, 0, 0, 269, 269, 269,
	0, 0, 0, 0, 0, 0, 1868, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1852, 0, 0, 0, 0, 835, 0, 0, 754,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 835, 0, 0, 0, 0, 1498,
	0, 0, 0, 0, 0, 1865, 1865, 1865, 0, 0,
	0, 0, 0, 0, 0, 0, 1865, 1865, 3366, 2761,
	0, 0, 0, 0, 0, 1865, 0, 0, 1865, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1882, 0,
	0, 0, 764, 0, 745, 0, 0, 0, 0, 1498,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3366, 2761, 0, 0, 0,
	0, 0, 0, 765, 0, 746, 0, 0, 0, 1498,
	1829, 1830, 1865, 1862, 1863, 1864, 1873, 1874, 1875, 0,
	1865, 2761, 0, 0, 1858, 0, 0, 0, 1865, 0,
	0, 0, 1866, 1860, 0, 0, 0, 1865, 0, 1865,
	1832, 0, 0, 0, 0, 0, 766, 1853, 0, 1879,
	0, 0, 1498, 0, 747, 0, 0, 0, 0, 762,
	763, 760, 1271, 0, 0, 0, 1885, 755, 0, 0,
	748, 0, 0, 0, 1871, 1831, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1851, 1498, 0, 0, 0,
	0, 0, 0, 0, 1848, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1884, 0, 0, 0,
	0, 0, 0, 749, 0, 756, 0, 0, 0, 0,
	0, 0, 0, 750, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1114, 0, 0, 3366, 751, 0, 0,
	0, 0, 759, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 768, 1498, 0, 0,
	0, 0, 1865, 3366, 0, 0, 1865, 753, 0, 0,
	0, 0, 1854, 1855, 1856, 1857, 0, 0, 1869, 0,
	0, 0, 1837, 0, 0, 3366, 0, 0, 1843, 1844,
	1850, 1872, 1849, 1845, 0, 1842, 1840, 1841, 1833, 1834,
	1835, 1836, 1838, 1839, 0, 0, 2427, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1870, 0, 0, 1880, 0, 0, 0, 1498, 0,
	0, 1859, 1861, 0, 0, 0, 0, 1865, 0, 0,
	0, 2454, 0, 0, 0, 0, 0, 1876, 0, 1877,
	0, 0, 0, 0, 0, 0, 1846, 1847, 0, 0,
	0, 0, 0, 0, 0, 1137, 112, 0, 0, 0,
	0, 0, 0, 0, 1868, 0, 0, 2494, 0, 2498,
	0, 0, 0, 0, 0, 0, 2512, 0, 0, 1852,
	0, 0, 0, 2521, 2522, 2523, 2524, 2525, 2526, 2527,
	2528, 2529, 2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537,
	2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546, 2547,
	2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555, 2556, 0,
	2562, 0, 2564, 2565, 2566, 2567, 1878, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1867, 1865, 0, 2591, 0,
	112, 0, 0, 0, 0, 0, 1882, 0, 0, 0,
	1906, 0, 0, 0, 2642, 0, 0, 0, 0, 0,
	1865, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2672, 2675, 2678, 2681, 0, 0, 2687, 2688, 2689, 2690,
	2691, 2692, 2693, 0, 0, 0, 0, 0, 0, 3045,
	0, 0, 0, 0, 0, 0, 1114, 1114, 0, 0,
	0, 0, 1858, 0, 2753, 0, 2765, 2767, 2772, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3035, 3033, 0, 1853, 0, 0, 1074, 3037,
	3039, 3029, 0, 0, 0, 0, 0, 0, 0, 1094,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1871, 0, 0, 0, 0, 0, 1829, 1830,
	0, 1862, 1863, 1864, 1873, 1874, 1875, 0, 0, 0,
	0, 0, 3053, 0, 0, 0, 0, 0, 0, 0,
	1866, 1860, 0, 0, 1884, 0, 1258, 0, 1832, 0,
	0, 0, 1865, 1184, 0, 0, 1865, 1879, 0, 0,
	0, 0, 0, 1114, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1885, 0, 0, 0, 0, 0,
	0, 0, 0, 1831, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1851, 0, 0, 0, 0, 0, 0,
	0, 0, 1848, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 1869, 269, 269, 0,
	0, 269, 0, 0, 0, 0, 1843, 1844, 1850, 1872,
	1849, 1845, 0, 1842, 1840, 1841, 1833, 1834, 1835, 1836,
	1838, 1839, 0, 0, 0, 0, 0, 3320, 0, 0,
	0, 3321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	269, 269, 0, 3031, 269, 269, 0, 0, 0, 0,
	1854, 1855, 1856, 1857, 3047, 0, 0, 0, 0, 0,
	1837, 0, 0, 835, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3046, 3036, 3034, 3038,
	3040, 3030, 3032, 3048, 3050, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3042, 3044, 0, 0, 0, 1870,
	1829, 1830, 1880, 1862, 1863, 1864, 1873, 1874, 1875, 1859,
	1861, 0, 0, 0, 269, 269, 0, 0, 0, 0,
	0, 0, 1866, 1860, 0, 1876, 0, 1877, 3054, 0,
	1832, 0, 0, 0, 1846, 1847, 0, 0, 0, 1879,
	269, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1868, 0, 0, 0, 1885, 0, 3076, 3077,
	0, 3079, 1829, 1830, 1275, 1831, 0, 1852, 0, 0,
	0, 0, 0, 0, 0, 1851, 0, 0, 0, 0,
	0, 0, 0, 0, 1848, 1860, 0, 0, 0, 0,
	0, 0, 1832, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1878, 0, 0, 0, 1885, 0,
	0, 0, 0, 0, 0, 0, 0, 1831, 0, 0,
	0, 0, 0, 1867, 0, 0, 0, 1851, 0, 0,
	0, 0, 0, 3049, 1882, 269, 1848, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1854, 1855, 1856, 1857, 0, 0, 0, 269,
	0, 0, 1837, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3198,
	1858, 0, 3253, 0, 0, 0, 0, 0, 0, 3055,
	0, 1870, 0, 0, 1880, 0, 0, 0, 3041, 3043,
	0, 1859, 1861, 1853, 1854, 1855, 1856, 1857, 0, 0,
	0, 0, 0, 0, 1837, 0, 0, 1876, 0, 1877,
	0, 0, 0, 0, 0, 0, 1846, 1847, 0, 0,
	1871, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1868, 0, 0, 0, 0, 0,
	0, 1886, 1887, 0, 0, 0, 0, 0, 0, 1852,
	0, 0, 1884, 1859, 1861, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1846, 1847,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1878, 3254, 3255, 0,
	0, 0, 0, 3261, 0, 0, 0, 0, 0, 112,
	0, 1852, 0, 0, 0, 1867, 0, 0, 0, 0,
	0, 0, 3275, 3276, 1869, 0, 1882, 0, 2642, 0,
	0, 0, 0, 0, 1843, 1844, 1850, 1872, 1849, 1845,
	0, 1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839,
	0, 0, 0, 0, 0, 2638, 0, 0, 0, 2639,
	0, 2000, 0, 1271, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 3285, 0, 0, 0, 0, 0, 0,
	0, 0, 1858, 269, 2000, 269, 0, 0, 1882, 3299,
	112, 0, 112, 835, 112, 0, 0, 0, 0, 0,
	835, 0, 752, 0, 0, 1853, 3311, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 735, 0, 0, 0, 0, 736, 269, 0,
	0, 0, 1871, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 1858, 0, 1094, 112, 112, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 112, 1884, 112, 737, 1853, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 738, 112, 0,
	112, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 739, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2772, 2772,
	2772, 0, 1829, 1830, 0, 0, 0, 0, 0, 0,
	758, 0, 0, 1978, 0, 0, 1884, 0, 0, 0,
	0, 3404, 0, 0, 0, 1860, 1869, 0, 0, 0,
	0, 740, 1832, 0, 0, 112, 1843, 1844, 1850, 1872,
	1849, 1845, 0, 1842, 1840, 1841, 1833, 1834, 1835, 1836,
	1838, 1839, 0, 0, 0, 0, 741, 0, 1885, 0,
	0, 4177, 0, 0, 0, 0, 0, 1831, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1851, 0, 742,
	0, 0, 743, 0, 0, 0, 1848, 0, 0, 0,
	0, 1275, 0, 0, 0, 0, 0, 0, 0, 767,
	0, 0, 1849, 1845, 0, 1842, 1840, 1841, 1833, 1834,
	1835, 1836, 1838, 1839, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 757, 0, 269, 0, 0, 1099,
	835, 0, 1074, 0, 0, 0, 0, 0, 1275, 0,
	0, 0, 0, 1099, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1899, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1854, 1855, 1856, 1857, 0, 0,
	0, 1905, 0, 0, 1837, 1911, 3529, 0, 0, 0,
	0, 0, 754, 0, 1275, 0, 0, 0, 0, 0,
	0, 1275, 0, 0, 269, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 269, 0, 0, 1275, 0, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1859, 1861, 0, 269, 0, 269, 0,
	0, 3580, 3581, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1846, 1847,
	0, 0, 0, 0, 0, 0, 0, 745, 0, 0,
	0, 0, 0, 0, 0, 1275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 1852, 269, 0, 0, 0, 765, 0, 746, 0,
	0, 0, 0, 0, 0, 1998, 0, 2001, 0, 112,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 835, 269, 0, 269,
	0, 269, 0, 269, 163, 269, 0, 0, 0, 766,
	0, 0, 73, 0, 46, 45, 0, 747, 0, 0,
	0, 0, 762, 763, 760, 0, 0, 0, 0, 74,
	755, 0, 158, 748, 0, 0, 0, 0, 1882, 0,
	0, 0, 0, 0, 0, 79, 0, 269, 269, 269,
	269, 0, 0, 0, 0, 0, 67, 0, 0, 0,
	0, 0, 0, 48, 0, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 749, 0, 756, 0,
	0, 0, 0, 47, 0, 88, 750, 0, 0, 0,
	0, 0, 0, 0, 1858, 0, 0, 0, 0, 0,
	751, 0, 0, 0, 0, 759, 0, 0, 0, 0,
	0, 0, 50, 68, 0, 0, 0, 1853, 0, 768,
	0, 51, 0, 0, 0, 0, 57, 0, 0, 0,
	753, 161, 0, 0, 0, 0, 0, 0, 0, 49,
	0, 110, 0, 0, 0, 0, 0, 94, 107, 0,
	0, 0, 0, 0, 0, 0, 2512, 0, 0, 0,
	0, 0, 3771, 3772, 0, 0, 3775, 0, 0, 0,
	3778, 0, 0, 0, 0, 0, 1884, 0, 0, 3782,
	0, 0, 0, 0, 0, 0, 0, 0, 3789, 52,
	0, 0, 0, 3404, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 95, 3802, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1275, 0, 1275, 0, 0, 3825, 3826,
	0, 3827, 3828, 3829, 0, 0, 0, 0, 0, 0,
	1275, 0, 0, 0, 0, 0, 0, 0, 0, 3835,
	0, 0, 0, 3837, 0, 0, 0, 0, 0, 1271,
	0, 2064, 1849, 1845, 0, 1842, 1840, 1841, 1833, 1834,
	1835, 1836, 1838, 1839, 0, 1271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3866, 3867, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3878, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 3887,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 99, 0, 0, 269,
	0, 0, 0, 0, 1275, 0, 0, 1094, 0, 1094,
	0, 0, 0, 0, 53, 269, 0, 0, 269, 0,
	0, 0, 269, 0, 269, 0, 0, 0, 0, 56,
	0, 269, 269, 0, 59, 0, 0, 0, 0, 0,
	0, 269, 3943, 0, 69, 0, 0, 0, 0, 0,
	0, 58, 190, 102, 0, 0, 106, 0, 0, 0,
	54, 3955, 0, 0, 162, 0, 0, 0, 0, 0,
	0, 0, 55, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 0, 0, 0, 0, 0, 0,
	62, 0, 0, 3984, 0, 153, 0, 0, 269, 0,
	0, 112, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 159, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 4005, 4006,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	1275, 1275, 0, 0, 0, 0, 0, 0, 0, 0,
	1275, 0, 0, 0, 0, 0, 157, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 194, 0, 0, 0, 0, 0, 1074, 0, 239,
	1074, 1074, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 835, 0, 0, 0, 0,
	0, 0, 233, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 835, 0,
	193, 0, 0, 3, 0, 269, 2580, 0, 0, 1978,
	0, 0, 0, 0, 0, 0, 0, 0, 4106, 0,
	0, 0, 0, 0, 0, 1275, 1094, 1275, 0, 1275,
	0, 0, 0, 0, 0, 0, 1905, 0, 0, 0,
	1905, 0, 0, 0, 0, 0, 0, 1275, 1275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	1275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1275, 0, 1275, 1275, 1275, 0, 269, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 4149, 4150, 0, 0, 0, 0, 4154,
	4155, 0, 0, 0, 4158, 4159, 0, 0, 0, 0,
	0, 0, 4163, 1258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4167, 0, 0, 0, 0, 0, 2001,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4172,
	0, 0, 0, 269, 269, 269, 269, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	112, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 2064, 2064, 1275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1829, 1830,
	0, 1862, 1863, 1864, 1873, 1874, 1875, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1866, 1860, 0, 0, 0, 0, 0, 0, 1832, 0,
	0, 0, 0, 0, 0, 0, 0, 1879, 0, 0,
	0, 0, 1829, 1830, 0, 1862, 1863, 1864, 1873, 1874,
	1875, 0, 0, 0, 1885, 0, 0, 0, 1275, 0,
	0, 0, 0, 1831, 0, 1860, 0, 0, 0, 0,
	0, 0, 1832, 1851, 0, 0, 0, 0, 0, 0,
	0, 1879, 1848, 0, 0, 0, 0, 0, 4309, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1885, 0,
	0, 0, 0, 0, 1264, 0, 0, 1831, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1851, 0, 0,
	0, 1275, 0, 0, 0, 0, 1848, 0, 1275, 0,
	0, 0, 0, 0, 0, 0, 0, 1275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 265, 701, 0, 1275, 0, 0, 0, 0, 0,
	1854, 1855, 1856, 1857, 0, 0, 0, 0, 0, 0,
	1837, 0, 0, 112, 0, 0, 112, 0, 112, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1854, 1855, 1856, 1857, 0, 1870,
	0, 0, 1880, 0, 1837, 0, 0, 0, 0, 1859,
	1861, 0, 0, 0, 0, 112, 1271, 0, 112, 0,
	0, 4427, 4428, 4429, 112, 1876, 0, 1877, 0, 0,
	0, 0, 1271, 0, 1846, 1847, 0, 0, 0, 0,
	0, 0, 0, 1870, 2512, 0, 1880, 4438, 4439, 0,
	0, 0, 1868, 1859, 1861, 0, 0, 0, 0, 0,
	0, 0, 2000, 0, 0, 4447, 4450, 1852, 0, 1876,
	0, 1877, 0, 0, 269, 0, 0, 0, 1846, 1847,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1275, 0, 0, 0, 1868, 0, 0, 0,
	112, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1852, 0, 0, 1878, 269, 0, 0, 0, 269,
	269, 0, 0, 0, 0, 0, 0, 2064, 0, 0,
	0, 0, 0, 1867, 0, 0, 0, 4504, 0, 0,
	0, 0, 0, 0, 1882, 0, 4512, 0, 0, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 1878, 0,
	4520, 0, 0, 1099, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1275, 0, 4529, 0, 0,
	4531, 0, 0, 0, 0, 0, 0, 0, 1882, 0,
	269, 269, 0, 0, 269, 0, 0, 0, 0, 0,
	1858, 2000, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 1853, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2580, 0, 0,
	0, 0, 0, 0, 1858, 0, 0, 0, 0, 0,
	1871, 0, 0, 0, 0, 0, 0, 0, 1905, 0,
	0, 0, 0, 0, 0, 0, 0, 1853, 0, 0,
	0, 0, 0, 1275, 0, 0, 0, 0, 0, 0,
	0, 0, 1884, 0, 0, 0, 1275, 0, 1275, 0,
	0, 0, 0, 0, 1871, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1275, 0, 0, 0, 0,
	0, 0, 0, 835, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 1884, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 1869, 1271, 4654, 0, 0, 0,
	4658, 0, 0, 0, 1843, 1844, 1850, 1872, 1849, 1845,
	0, 1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3787,
	0, 0, 0, 0, 0, 0, 0, 0, 1869, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1843, 1844,
	1850, 1872, 1849, 1845, 0, 1842, 1840, 1841, 1833, 1834,
	1835, 1836, 1838, 1839, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 269, 1099, 1099, 0, 0,
	0, 0, 1161, 0, 0, 0, 4729, 0, 0, 0,
	1258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1258, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2512, 0, 0, 271, 271,
	271, 0, 0, 0, 4450, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 855, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 857, 0, 0, 0, 0,
	858, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1099, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 859,
	0, 876, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 860, 0, 0, 0,
	0, 861, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4848, 4848, 4848, 112, 112, 0, 112,
	0, 0, 0, 885, 0, 0, 0, 1271, 1271, 0,
	862, 0, 0, 0, 0, 0, 0, 0, 1325, 0,
	1325, 1325, 0, 0, 883, 0, 0, 0, 0, 4872,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 856,
	112, 112, 0, 112, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1409, 863, 0, 835, 864, 0, 1519, 1275, 1275,
	0, 0, 0, 0, 0, 4848, 0, 887, 0, 0,
	0, 0, 767, 0, 1275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1275, 0, 0, 1275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2064,
	0, 0, 0, 1275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 886, 0, 0, 0, 1258,
	0, 0, 1094, 1657, 1658, 881, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 112, 112, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4848, 5004, 0, 0, 0, 0, 269,
	0, 5008, 0, 2064, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 865,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	867, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 269, 0, 0, 0, 1774, 269,
	0, 868, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1271,
	0, 0, 0, 1275, 0, 0, 0, 0, 0, 0,
	877, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 766, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 854, 0, 878, 0, 0,
	0, 0, 0, 269, 0, 0, 869, 0, 1275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1275, 0, 1275, 0, 0, 0, 1275, 0,
	0, 0, 875, 0, 0, 0, 1275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1275, 870,
	0, 0, 0, 871, 890, 0, 889, 0, 0, 872,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 873, 0, 0, 0, 1275, 882, 0,
	0, 0, 0, 0, 891, 0, 888, 0, 0, 0,
	0, 0, 768, 112, 0, 0, 0, 0, 0, 0,
	0, 0, 1275, 0, 0, 0, 0, 0, 0, 0,
	0, 1258, 1258, 0, 1275, 0, 1275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1271, 0, 0, 0, 0, 0, 0, 0,
	1271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1275, 2000, 0, 1275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2016, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 2027, 0, 1519, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2000, 0,
	2000, 0, 0, 0, 2064, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 271, 271,
	269, 0, 271, 1275, 0, 0, 0, 0, 0, 0,
	0, 1325, 0, 0, 0, 0, 269, 0, 1519, 269,
	1275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2064, 2064, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 271,
	1418, 271, 271, 0, 0, 271, 271, 0, 0, 2064,
	2064, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2064, 0, 0, 0, 0, 1418, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 1275,
	1275, 0, 0, 0, 0, 271, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 112, 0, 0,
	0, 0, 0, 1418, 0, 0, 0, 0, 0, 0,
	1418, 271, 271, 0, 0, 1275, 0, 0, 0, 0,
	0, 0, 0, 1258, 0, 0, 1418, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 112, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1418, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 827, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	271, 0, 0, 0, 0, 0, 0, 2308, 0, 0,
	0, 2315, 0, 827, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2340,
	0, 2340, 1275, 0, 0, 1275, 0, 2347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	112, 0, 0, 0, 0, 0, 1258, 269, 0, 0,
	0, 0, 0, 0, 1258, 2064, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2315, 0, 0, 2375, 0, 2000, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2395, 1275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2411, 1275, 2413, 0, 2415, 0, 2417, 0, 2418, 0,
	0, 0, 1275, 1275, 1275, 0, 0, 0, 0, 1275,
	1275, 1275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 269, 0, 0, 0, 1153,
	0, 1275, 0, 0, 0, 0, 0, 1275, 0, 0,
	2445, 2446, 2447, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 112, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2064, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1418,
	0, 0, 2000, 0, 271, 271, 271, 0, 0, 0,
	0, 0, 112, 0, 271, 0, 0, 2000, 0, 0,
	0, 271, 0, 0, 0, 112, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 112, 271,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2000, 2000, 0, 1275, 0, 0, 0, 0, 0,
	0, 0, 1275, 0, 0, 0, 1275, 1275, 0, 1275,
	0, 0, 0, 0, 0, 2000, 1275, 269, 2000, 0,
	0, 0, 0, 0, 0, 0, 0, 1275, 1275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1275, 0, 0, 1418, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1275, 0, 1275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 2829, 0, 0, 1275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 1275, 1275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 1418,
	1418, 271, 0, 0, 0, 0, 0, 0, 2880, 1418,
	0, 1325, 0, 0, 0, 1325, 0, 1325, 0, 0,
	0, 0, 0, 1275, 0, 0, 0, 0, 1275, 0,
	0, 0, 0, 0, 2328, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1275, 1275, 1275,
	1275, 1275, 1275, 0, 0, 271, 0, 0, 0, 271,
	0, 0, 0, 1275, 0, 271, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 0, 2580, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 271,
	0, 0, 0, 1275, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 1418, 0, 1418, 0, 1418, 0,
	0, 0, 0, 0, 2064, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1418, 1418, 0, 0,
	0, 0, 0, 0, 0, 2000, 1275, 2000, 1275, 1418,
	271, 0, 0, 271, 0, 1519, 0, 0, 0, 0,
	0, 1418, 0, 1418, 1418, 1418, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	1275, 0, 0, 0, 0, 0, 0, 271, 271, 0,
	271, 0, 271, 0, 271, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2064, 112, 0, 1415, 2315,
	0, 0, 0, 0, 0, 0, 0, 0, 2328, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 271,
	271, 271, 0, 0, 112, 0, 0, 0, 0, 0,
	0, 1275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1577, 0, 0, 1275, 1275,
	1275, 0, 0, 0, 0, 0, 112, 0, 0, 0,
	0, 0, 3168, 0, 0, 0, 0, 0, 0, 1275,
	0, 0, 0, 0, 1418, 0, 0, 0, 0, 0,
	0, 3179, 0, 3182, 0, 0, 0, 0, 0, 0,
	0, 1577, 0, 0, 0, 0, 0, 0, 1577, 0,
	0, 0, 1275, 0, 0, 1275, 0, 0, 0, 0,
	0, 0, 0, 0, 1577, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3214, 1519, 3216, 1519,
	0, 0, 0, 0, 0, 3222, 2064, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1418, 0, 0,
	0, 0, 1577, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	112, 1325, 0, 0, 0, 0, 112, 0, 0, 3251,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1275,
	0, 0, 0, 0, 0, 0, 0, 1418, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1416, 0, 0,
	271, 0, 0, 1418, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 1275, 1275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1578, 0, 0, 1275, 0, 0,
	1275, 0, 0, 0, 1275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1275, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 271,
	1578, 0, 0, 271, 0, 271, 0, 1578, 0, 0,
	0, 0, 271, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 1578, 0, 0, 1829, 1830, 0, 1862,
	1863, 1864, 1873, 1874, 1875, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1866, 1860,
	0, 0, 0, 0, 0, 0, 1832, 0, 0, 0,
	0, 1418, 0, 0, 0, 1879, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 1578, 1885, 0, 0, 0, 0, 0, 0, 0,
	0, 1831, 0, 271, 0, 0, 0, 0, 0, 0,
	0, 1851, 0, 0, 0, 0, 271, 0, 0, 0,
	1848, 0, 0, 0, 0, 0, 0, 1415, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 827, 0, 0, 0, 0, 0, 0, 827,
	0, 0, 0, 271, 1418, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 3452, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1854, 1855,
	1856, 1857, 0, 0, 0, 0, 0, 0, 1837, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 271,
	0, 0, 0, 0, 0, 0, 271, 0, 1325, 0,
	0, 0, 1519, 1519, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1870, 0, 0,
	1880, 1415, 1418, 0, 0, 0, 0, 1859, 1861, 0,
	0, 0, 0, 3498, 0, 1418, 0, 1418, 0, 0,
	0, 0, 0, 1876, 0, 1877, 0, 1275, 0, 1275,
	271, 0, 1846, 1847, 1418, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	1868, 271, 0, 3546, 3548, 0, 0, 2328, 0, 0,
	0, 0, 271, 0, 0, 1852, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1878, 0, 271, 271, 271, 271, 0, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 271, 0,
	0, 1867, 0, 0, 0, 0, 1416, 1577, 1577, 0,
	0, 0, 1882, 0, 0, 0, 0, 1415, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3659, 0, 0, 0,
	3663, 0, 0, 0, 0, 0, 0, 0, 1858, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1853, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1871, 0,
	0, 0, 1577, 0, 1577, 0, 1577, 0, 0, 0,
	1416, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1577, 1577, 0, 0, 0, 0,
	1884, 0, 0, 0, 0, 0, 0, 1577, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1577,
	0, 1577, 1577, 1577, 0, 0, 3756, 0, 1519, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 827, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3769, 0, 0, 0, 0,
	0, 0, 1869, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1843, 1844, 1850, 1872, 1849, 1845, 0, 1842,
	1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3323, 0, 0,
	0, 0, 0, 0, 0, 0, 1578, 1578, 0, 0,
	0, 0, 0, 0, 0, 0, 1416, 0, 0, 0,
	0, 0, 0, 0, 1829, 1830, 0, 1862, 1863, 1864,
	1873, 1874, 1875, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1415, 0, 0, 0, 1866, 1860, 1418, 0,
	0, 0, 0, 0, 1832, 0, 0, 0, 0, 0,
	0, 0, 0, 1879, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1885, 1418, 0, 0, 0, 0, 0, 0, 0, 1831,
	0, 0, 0, 0, 0, 0, 1418, 0, 0, 1851,
	0, 0, 0, 0, 0, 271, 0, 0, 1848, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1578, 1418, 1578, 0, 1578, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1415, 0, 0, 0, 0,
	0, 0, 0, 1578, 1578, 0, 271, 0, 0, 0,
	271, 271, 0, 0, 0, 0, 1578, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1578, 0,
	1578, 1578, 1578, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 1854, 1855, 1856, 1857,
	0, 0, 0, 0, 0, 0, 1837, 0, 0, 0,
	0, 0, 0, 0, 0, 1415, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 271, 0, 0, 271, 0, 0, 0, 0,
	0, 1415, 271, 0, 0, 1870, 0, 0, 1880, 0,
	0, 0, 0, 0, 0, 1859, 1861, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1876, 0, 1877, 0, 0, 0, 0, 0, 0,
	1846, 1847, 1418, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1868, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1416, 0, 1852, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1418, 0, 0,
	0, 0, 2328, 0, 0, 0, 271, 0, 0, 0,
	0, 1418, 0, 1418, 0, 0, 0, 1418, 0, 0,
	0, 2328, 0, 0, 271, 1418, 0, 0, 0, 0,
	1878, 0, 4060, 0, 271, 0, 0, 1418, 271, 0,
	0, 0, 4070, 0, 0, 0, 0, 0, 0, 1867,
	0, 0, 0, 0, 0, 0, 271, 2328, 0, 1415,
	1882, 0, 4088, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1416, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1418, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1418, 0, 1418, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1858, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4134, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1853,
	0, 0, 1415, 0, 1416, 0, 0, 0, 0, 0,
	0, 0, 1418, 0, 271, 1418, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1871, 0, 0, 0,
	1416, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1829, 1830, 0, 1862, 1863, 1864, 1873, 1874, 1875,
	0, 0, 0, 271, 0, 0, 0, 0, 1884, 0,
	0, 0, 0, 1866, 1860, 0, 0, 827, 0, 0,
	0, 1832, 0, 0, 0, 0, 0, 0, 0, 0,
	1879, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1418, 0, 0, 0, 0, 1885, 0, 0,
	1577, 0, 0, 0, 0, 0, 1831, 0, 0, 1418,
	0, 0, 0, 1577, 0, 1577, 1851, 0, 0, 0,
	0, 0, 0, 0, 0, 1848, 0, 0, 0, 0,
	1869, 0, 1577, 0, 0, 0, 0, 0, 0, 0,
	1843, 1844, 1850, 1872, 1849, 1845, 0, 1842, 1840, 1841,
	1833, 1834, 1835, 1836, 1838, 1839, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3322, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1416, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1854, 1855, 1856, 1857, 0, 0, 0,
	0, 0, 0, 1837, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2328,
	0, 0, 0, 0, 1418, 0, 0, 0, 0, 0,
	0, 0, 1870, 0, 0, 1880, 0, 0, 0, 0,
	0, 1416, 1859, 1861, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 1876, 0,
	1877, 0, 0, 0, 0, 0, 0, 1846, 1847, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1868, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1852, 0, 0, 0, 0, 2328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4387, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1578,
	0, 0, 0, 0, 0, 0, 0, 1878, 0, 0,
	0, 0, 1578, 0, 1578, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1867, 0, 0, 0,
	0, 1578, 0, 0, 0, 271, 0, 1882, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1418, 0, 0, 1418, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 1858, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 271, 1853, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 1418, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4489, 0, 1871, 0, 0, 0, 0, 0, 0,
	0, 1418, 1418, 1418, 0, 0, 0, 0, 1418, 1418,
	1418, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1884, 1415, 0, 0, 0,
	1418, 0, 0, 0, 271, 0, 1418, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1415,
	2328, 0, 0, 1418, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1415, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1869, 0, 0,
	1415, 0, 0, 0, 0, 0, 0, 1843, 1844, 1850,
	1872, 1849, 1845, 0, 1842, 1840, 1841, 1833, 1834, 1835,
	1836, 1838, 1839, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4618, 1519, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1418, 1418, 0, 1418, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1418, 1418, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1418,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1415, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1418, 1416, 0, 271, 0, 0,
	271, 0, 0, 0, 0, 1577, 0, 0, 0, 0,
	0, 0, 0, 0, 1418, 0, 0, 0, 0, 1577,
	0, 1577, 0, 0, 271, 1415, 0, 0, 1416, 0,
	0, 0, 827, 1577, 0, 0, 0, 0, 0, 0,
	4735, 0, 0, 1416, 0, 1577, 0, 0, 0, 0,
	0, 0, 1418, 1418, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1416,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 1418, 271, 0, 0, 0, 1418, 0, 1577,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1577, 0, 1577, 0, 0, 0, 0, 0, 0,
	0, 4787, 0, 0, 0, 0, 1418, 1418, 1418, 1418,
	1418, 1418, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1418, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1415, 0, 0, 1415, 0, 0, 0, 0, 0, 0,
	0, 0, 1418, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4830, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1418, 0, 1418, 0, 1416,
	0, 1829, 1830, 0, 1862, 1863, 1864, 1873, 1874, 1875,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1415, 0, 0, 1866, 1860, 0, 0, 0, 0, 1418,
	0, 1832, 0, 0, 0, 0, 0, 1415, 0, 271,
	1879, 0, 0, 0, 1578, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1885, 1578, 0,
	1578, 0, 0, 0, 1416, 0, 1831, 0, 0, 0,
	0, 0, 1578, 0, 0, 0, 1851, 0, 0, 0,
	0, 0, 0, 0, 1578, 1848, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1418, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 1418, 1418, 1418,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1578, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1578, 0, 1578, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1854, 1855, 1856, 1857, 0, 0, 0,
	0, 1418, 1415, 1837, 1418, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1829, 1830, 0,
	1862, 1863, 1864, 1873, 1874, 1875, 0, 0, 0, 1416,
	0, 0, 1416, 827, 0, 271, 271, 0, 0, 1866,
	1860, 0, 1870, 0, 0, 1880, 0, 1832, 0, 0,
	0, 0, 1859, 1861, 0, 0, 1879, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1876, 0,
	1877, 0, 0, 1885, 0, 0, 0, 1846, 1847, 0,
	0, 0, 1831, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1851, 0, 0, 1868, 0, 0, 0, 0,
	0, 1848, 0, 0, 0, 0, 0, 0, 0, 1416,
	1852, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1416, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 1878, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1577,
	0, 0, 1577, 0, 0, 0, 1867, 0, 0, 1854,
	1855, 1856, 1857, 0, 0, 0, 0, 1882, 0, 1837,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 1418, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1418, 0, 0, 0, 0, 1870, 0,
	0, 1880, 0, 0, 0, 0, 0, 0, 1859, 1861,
	0, 0, 0, 1858, 1577, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1876, 0, 1877, 0, 0, 0,
	0, 1416, 0, 1846, 1847, 0, 1853, 0, 0, 1577,
	1577, 1577, 0, 0, 0, 0, 1577, 1577, 1577, 0,
	0, 1868, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 1871, 0, 0, 1852, 0, 1577, 0,
	0, 0, 0, 0, 1415, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1884, 0, 0, 0, 0,
	0, 1415, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1878, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1867, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1882, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1869, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1843, 1844, 1850,
	1872, 1849, 1845, 0, 1842, 1840, 1841, 1833, 1834, 1835,
	1836, 1838, 1839, 0, 0, 0, 0, 0, 1578, 1858,
	0, 1578, 3318, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1853, 1415, 1415, 0, 1415, 0, 0, 1829,
	1830, 0, 1862, 1863, 1864, 1873, 1874, 1875, 0, 0,
	0, 0, 0, 0, 1577, 1577, 0, 0, 0, 1871,
	0, 1866, 1860, 0, 0, 0, 0, 1415, 0, 1832,
	0, 0, 0, 0, 0, 0, 0, 0, 1879, 0,
	0, 0, 0, 1578, 0, 0, 0, 0, 0, 0,
	0, 1884, 0, 0, 0, 1885, 0, 0, 0, 0,
	0, 0, 0, 0, 1831, 0, 0, 0, 1578, 1578,
	1578, 0, 0, 0, 1851, 1578, 1578, 1578, 0, 0,
	0, 0, 0, 1848, 0, 0, 0, 0, 0, 0,
	0, 0, 1415, 0, 0, 0, 0, 1578, 0, 0,
	0, 0, 0, 1416, 0, 0, 0, 0, 0, 0,
	0, 0, 1415, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1869, 0, 0, 0, 0, 0, 0,
	1416, 0, 0, 1843, 1844, 1850, 1872, 1849, 1845, 0,
	1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839, 0,
	1577, 1577, 0, 0, 0, 0, 0, 0, 3317, 0,
	0, 1854, 1855, 1856, 1857, 0, 0, 0, 0, 0,
	0, 1837, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1415, 0, 0, 0, 0, 1577, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1870, 0, 0, 1880, 0, 0, 0, 0, 0, 0,
	1859, 1861, 0, 0, 1577, 1577, 1577, 1577, 1577, 1577,
	0, 0, 0, 0, 0, 0, 1876, 0, 1877, 0,
	1415, 0, 0, 0, 0, 1846, 1847, 0, 0, 0,
	0, 0, 1416, 1416, 0, 1416, 0, 0, 0, 0,
	0, 0, 0, 1868, 0, 0, 0, 0, 0, 0,
	1415, 0, 0, 1578, 1578, 0, 0, 0, 1852, 0,
	0, 0, 0, 0, 0, 0, 1416, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1415, 0, 1577, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1878, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1867, 0, 0, 1415, 0, 0,
	0, 1416, 0, 0, 0, 1882, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1416, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1578,
	1578, 1858, 0, 0, 0, 0, 0, 0, 1415, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1853, 1577, 1577, 1577, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1416,
	0, 0, 0, 0, 1578, 0, 0, 0, 0, 0,
	0, 1871, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1578, 1578, 1578, 1578, 1578, 1578, 1415,
	0, 0, 1577, 1884, 0, 0, 0, 0, 0, 1416,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1416,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1869, 0, 0, 0, 0,
	0, 0, 1416, 0, 1578, 1843, 1844, 1850, 1872, 1849,
	1845, 0, 1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838,
	1839, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2639, 0, 0, 0, 0, 0, 1416, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1416, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1578, 1578, 1578, 0, 0, 0,
	0, 1577, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1577, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1416, 0,
	0, 1578, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1413, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 1419, 286, 287, 1420, 1421,
	1422, 0, 1423, 647, 1424, 1425, 1426, 1427, 288, 289,
	1215, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 1428, 652, 298, 299, 300, 301,
	302, 303, 1429, 1430, 0, 304, 653, 654, 655, 1431,
	305, 306, 656, 1432, 1499, 1433, 307, 308, 309, 310,
	311, 312, 313, 0, 1434, 315, 316, 317, 314, 318,
	1435, 319, 0, 320, 321, 322, 323, 324, 325, 1436,
	326, 327, 328, 1216, 329, 330, 331, 1437, 1438, 1440,
	1439, 1441, 1442, 1443, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 1444, 342, 338, 340, 1445, 343,
	341, 344, 1446, 345, 346, 347, 1447, 1448, 348, 349,
	350, 1449, 351, 352, 353, 1450, 354, 355, 356, 1451,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 660, 661, 370, 1452, 276, 1453,
	1578, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	1578, 374, 1454, 375, 376, 377, 1455, 1456, 1217, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 1457, 390, 665, 1458, 666, 391, 1459,
	392, 393, 394, 395, 396, 667, 668, 669, 482, 1219,
	397, 398, 1460, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 1461, 1218, 407, 670, 671,
	1462, 672, 1463, 408, 409, 1220, 673, 1221, 410, 411,
	412, 1222, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 1464, 420, 422, 421, 1465, 423, 674, 1223,
	424, 425, 1224, 1466, 426, 427, 428, 429, 430, 431,
	434, 1467, 1468, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1225, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 1226,
	476, 464, 1469, 278, 1227, 478, 479, 480, 1470, 675,
	481, 676, 483, 484, 1471, 0, 485, 0, 1472, 1473,
	487, 488, 489, 1474, 1475, 490, 491, 677, 1228, 492,
	1229, 678, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 1476, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 681, 512, 682, 513, 514,
	1477, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 1478, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 1479, 545, 546, 547, 1230, 548, 549, 550, 551,
	552, 684, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 1480, 570, 571, 569,
	572, 573, 574, 1481, 575, 576, 558, 559, 577, 578,
	1231, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 1482, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 687, 601, 602, 1483,
	603, 604, 0, 600, 591, 1484, 605, 606, 607, 608,
	609, 610, 611, 612, 1485, 613, 688, 689, 690, 691,
	1486, 622, 1487, 614, 615, 616, 692, 617, 693, 1488,
	618, 619, 620, 621, 0, 623, 624, 1489, 1490, 625,
	626, 627, 629, 630, 628, 631, 1491, 632, 1492, 0,
	633, 634, 635, 694, 695, 696, 1493, 637, 636, 638,
	639, 697, 640, 641, 1494, 1495, 1496, 1497, 642, 643,
	698, 644, 645, 646, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1413, 0, 0, 0, 0, 0,
	0, 0, 2807, 0, 0, 0, 0, 0, 0, 0,
	2808, 279, 281, 280, 282, 283, 284, 285, 1419, 286,
	287, 1420, 1421, 1422, 0, 1423, 647, 1424, 1425, 1426,
	1427, 288, 289, 1215, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 1428, 652, 298,
	299, 300, 301, 302, 303, 1429, 1430, 0, 304, 653,
	654, 655, 1431, 305, 306, 656, 1432, 1499, 1433, 307,
	308, 309, 310, 311, 312, 313, 0, 1434, 315, 316,
	317, 314, 318, 1435, 319, 0, 320, 321, 322, 323,
	324, 325, 1436, 326, 327, 328, 1216, 329, 330, 331,
	1437, 1438, 1440, 1439, 1441, 1442, 1443, 332, 333, 334,
	335, 336, 0, 337, 339, 657, 658, 1444, 342, 338,
	340, 1445, 343, 341, 344, 1446, 345, 346, 347, 1447,
	1448, 348, 349, 350, 1449, 351, 352, 353, 1450, 354,
	355, 356, 1451, 357, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 660, 661, 370,
	1452, 276, 1453, 0, 0, 0, 0, 371, 372, 373,
	662, 0, 0, 0, 374, 1454, 375, 376, 377, 1455,
	1456, 1217, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 1457, 390, 665, 1458,
	666, 391, 1459, 392, 393, 394, 395, 396, 667, 668,
	669, 482, 1219, 397, 398, 1460, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 1461, 1218,
	407, 670, 671, 1462, 672, 1463, 408, 409, 1220, 673,
	1221, 410, 411, 412, 1222, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 1464, 420, 422, 421, 1465,
	423, 674, 1223, 424, 425, 1224, 1466, 426, 427, 428,
	429, 430, 431, 434, 1467, 1468, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1225, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 1226, 476, 464, 1469, 278, 1227, 478, 479,
	480, 1470, 675, 481, 676, 483, 484, 1471, 0, 485,
	0, 1472, 1473, 487, 488, 489, 1474, 1475, 490, 491,
	677, 1228, 492, 1229, 678, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 1476, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 681, 512,
	682, 513, 514, 1477, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 683, 524, 525, 527, 526, 528,
	1478, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 1479, 545, 546, 547, 1230, 548,
	549, 550, 551, 552, 684, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 1480,
	570, 571, 569, 572, 573, 574, 1481, 575, 576, 558,
	559, 577, 578, 1231, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 1482, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 687,
	601, 602, 1483, 603, 604, 0, 600, 591, 1484, 605,
	606, 607, 608, 609, 610, 611, 612, 1485, 613, 688,
	689, 690, 691, 1486, 622, 1487, 614, 615, 616, 692,
	617, 693, 1488, 618, 619, 620, 621, 0, 623, 624,
	1489, 1490, 625, 626, 627, 629, 630, 628, 631, 1491,
	632, 1492, 0, 633, 634, 635, 694, 695, 696, 1493,
	637, 636, 638, 639, 697, 640, 641, 1494, 1495, 1496,
	1497, 642, 643, 698, 644, 645, 646, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1413, 0, 0, 0, 3796,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3798, 279, 281, 280, 282, 283, 284, 285, 1419,
	286, 287, 1420, 1421, 1422, 0, 1423, 647, 1424, 1425,
	1426, 1427, 288, 289, 1215, 290, 291, 292, 293, 294,
	295, 648, 649, 0, 296, 650, 297, 651, 1428, 652,
	298, 299, 300, 301, 302, 303, 1429, 1430, 0, 304,
	653, 654, 655, 1431, 305, 306, 656, 1432, 1499, 1433,
	307, 308, 309, 310, 311, 312, 313, 0, 1434, 315,
	316, 317, 314, 318, 1435, 319, 0, 320, 321, 322,
	323, 324, 325, 1436, 326, 327, 328, 1216, 329, 330,
	331, 1437, 1438, 1440, 1439, 1441, 1442, 1443, 332, 333,
	334, 335, 336, 0, 337, 339, 657, 658, 1444, 342,
	338, 340, 1445, 343, 341, 344, 1446, 345, 346, 347,
	1447, 1448, 348, 349, 350, 1449, 351, 352, 353, 1450,
	354, 355, 356, 1451, 357, 358, 659, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 660, 661,
	370, 1452, 276, 1453, 0, 0, 0, 0, 371, 372,
	373, 662, 0, 0, 0, 374, 1454, 375, 376, 377,
	1455, 1456, 1217, 378, 379, 380, 663, 664, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 1457, 390, 665,
	1458, 666, 391, 1459, 392, 393, 394, 395, 396, 667,
	668, 669, 482, 1219, 397, 398, 1460, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 1461,
	1218, 407, 670, 671, 1462, 672, 1463, 408, 409, 1220,
	673, 1221, 410, 411, 412, 1222, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 1464, 420, 422, 421,
	1465, 423, 674, 1223, 424, 425, 1224, 1466, 426, 427,
	428, 429, 430, 431, 434, 1467, 1468, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1225, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 1226, 476, 464, 1469, 278, 1227, 478,
	479, 480, 1470, 675, 481, 676, 483, 484, 1471, 0,
	485, 0, 1472, 1473, 487, 488, 489, 1474, 1475, 490,
	491, 677, 1228, 492, 1229, 678, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 1476, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 681,
	512, 682, 513, 514, 1477, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 683, 524, 525, 527, 526,
	528, 1478, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 1479, 545, 546, 547, 1230,
	548, 549, 550, 551, 552, 684, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	1480, 570, 571, 569, 572, 573, 574, 1481, 575, 576,
	558, 559, 577, 578, 1231, 579, 580, 581, 582, 583,
	584, 585, 685, 0, 586, 1482, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 686, 594, 595, 596, 597,
	687, 601, 602, 1483, 603, 604, 0, 600, 591, 1484,
	605, 606, 607, 608, 609, 610, 611, 612, 1485, 613,
	688, 689, 690, 691, 1486, 622, 1487, 614, 615, 616,
	692, 617, 693, 1488, 618, 619, 620, 621, 0, 623,
	624, 1489, 1490, 625, 626, 627, 629, 630, 628, 631,
	1491, 632, 1492, 0, 633, 634, 635, 694, 695, 696,
	1493, 637, 636, 638, 639, 697, 640, 641, 1494, 1495,
	1496, 1497, 642, 643, 698, 644, 645, 646, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1413, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4207, 279, 281, 280,
	282, 283, 284, 285, 1419, 286, 287, 1420, 1421, 1422,
	0, 1423, 647, 1424, 1425, 1426, 1427, 288, 289, 1215,
	290, 291, 292, 293, 294, 295, 648, 649, 0, 296,
	650, 297, 651, 1428, 652, 298, 299, 300, 301, 302,
	303, 1429, 1430, 0, 304, 653, 654, 655, 1431, 305,
	306, 656, 1432, 1499, 1433, 307, 308, 309, 310, 311,
	312, 313, 0, 1434, 315, 316, 317, 314, 318, 1435,
	319, 0, 320, 321, 322, 323, 324, 325, 1436, 326,
	327, 328, 1216, 329, 330, 331, 1437, 1438, 1440, 1439,
	1441, 1442, 1443, 332, 333, 334, 335, 336, 0, 337,
	339, 657, 658, 1444, 342, 338, 340, 1445, 343, 341,
	344, 1446, 345, 346, 347, 1447, 1448, 348, 349, 350,
	1449, 351, 352, 353, 1450, 354, 355, 356, 1451, 357,
	358, 659, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 660, 661, 370, 1452, 276, 1453, 0,
	0, 0, 0, 371, 372, 373, 662, 0, 0, 0,
	374, 1454, 375, 376, 377, 1455, 1456, 1217, 378, 379,
	380, 663, 664, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 1457, 390, 665, 1458, 666, 391, 1459, 392,
	393, 394, 395, 396, 667, 668, 669, 482, 1219, 397,
	398, 1460, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 1461, 1218, 407, 670, 671, 1462,
	672, 1463, 408, 409, 1220, 673, 1221, 410, 411, 412,
	1222, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 1464, 420, 422, 421, 1465, 423, 674, 1223, 424,
	425, 1224, 1466, 426, 427, 428, 429, 430, 431, 434,
	1467, 1468, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1225, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 1226, 476,
	464, 1469, 278, 1227, 478, 479, 480, 1470, 675, 481,
	676, 483, 484, 1471, 0, 485, 0, 1472, 1473, 487,
	488, 489, 1474, 1475, 490, 491, 677, 1228, 492, 1229,
	678, 493, 494, 486, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 1476, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 681, 512, 682, 513, 514, 1477,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	683, 524, 525, 527, 526, 528, 1478, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	1479, 545, 546, 547, 1230, 548, 549, 550, 551, 552,
	684, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 1480, 570, 571, 569, 572,
	573, 574, 1481, 575, 576, 558, 559, 577, 578, 1231,
	579, 580, 581, 582, 583, 584, 585, 685, 0, 586,
	1482, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	686, 594, 595, 596, 597, 687, 601, 602, 1483, 603,
	604, 0, 600, 591, 1484, 605, 606, 607, 608, 609,
	610, 611, 612, 1485, 613, 688, 689, 690, 691, 1486,
	622, 1487, 614, 615, 616, 692, 617, 693, 1488, 618,
	619, 620, 621, 0, 623, 624, 1489, 1490, 625, 626,
	627, 629, 630, 628, 631, 1491, 632, 1492, 0, 633,
	634, 635, 694, 695, 696, 1493, 637, 636, 638, 639,
	697, 640, 641, 1494, 1495, 1496, 1497, 642, 643, 698,
	644, 645, 646, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1413, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4205, 279, 281, 280, 282, 283, 284, 285, 1419,
	286, 287, 1420, 1421, 1422, 0, 1423, 647, 1424, 1425,
	1426, 1427, 288, 289, 1215, 290, 291, 292, 293, 294,
	295, 648, 649, 0, 296, 650, 297, 651, 1428, 652,
	298, 299, 300, 301, 302, 303, 1429, 1430, 0, 304,
	653, 654, 655, 1431, 305, 306, 656, 1432, 1499, 1433,
	307, 308, 309, 310, 311, 312, 313, 0, 1434, 315,
	316, 317, 314, 318, 1435, 319, 0, 320, 321, 322,
	323, 324, 325, 1436, 326, 327, 328, 1216, 329, 330,
	331, 1437, 1438, 1440, 1439, 1441, 1442, 1443, 332, 333,
	334, 335, 336, 0, 337, 339, 657, 658, 1444, 342,
	338, 340, 1445, 343, 341, 344, 1446, 345, 346, 347,
	1447, 1448, 348, 349, 350, 1449, 351, 352, 353, 1450,
	354, 355, 356, 1451, 357, 358, 659, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 660, 661,
	370, 1452, 276, 1453, 0, 0, 0, 0, 371, 372,
	373, 662, 0, 0, 0, 374, 1454, 375, 376, 377,
	1455, 1456, 1217, 378, 379, 380, 663, 664, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 1457, 390, 665,
	1458, 666, 391, 1459, 392, 393, 394, 395, 396, 667,
	668, 669, 482, 1219, 397, 398, 1460, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 1461,
	1218, 407, 670, 671, 1462, 672, 1463, 408, 409, 1220,
	673, 1221, 410, 411, 412, 1222, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 1464, 420, 422, 421,
	1465, 423, 674, 1223, 424, 425, 1224, 1466, 426, 427,
	428, 429, 430, 431, 434, 1467, 1468, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1225, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 1226, 476, 464, 1469, 278, 1227, 478,
	479, 480, 1470, 675, 481, 676, 483, 484, 1471, 0,
	485, 0, 1472, 1473, 487, 488, 489, 1474, 1475, 490,
	491, 677, 1228, 492, 1229, 678, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 1476, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 681,
	512, 682, 513, 514, 1477, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 683, 524, 525, 527, 526,
	528, 1478, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 1479, 545, 546, 547, 1230,
	548, 549, 550, 551, 552, 684, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	1480, 570, 571, 569, 572, 573, 574, 1481, 575, 576,
	558, 559, 577, 578, 1231, 579, 580, 581, 582, 583,
	584, 585, 685, 0, 586, 1482, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 686, 594, 595, 596, 597,
	687, 601, 602, 1483, 603, 604, 0, 600, 591, 1484,
	605, 606, 607, 608, 609, 610, 611, 612, 1485, 613,
	688, 689, 690, 691, 1486, 622, 1487, 614, 615, 616,
	692, 617, 693, 1488, 618, 619, 620, 621, 0, 623,
	624, 1489, 1490, 625, 626, 627, 629, 630, 628, 631,
	1491, 632, 1492, 0, 633, 634, 635, 694, 695, 696,
	1493, 637, 636, 638, 639, 697, 640, 641, 1494, 1495,
	1496, 1497, 642, 643, 698, 644, 645, 646, 0, 0,
	0, 0, 0, 0, 1413, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4433, 279, 281, 280, 282, 283, 284, 285, 1419, 286,
	287, 1420, 1421, 1422, 0, 1423, 647, 1424, 1425, 1426,
	1427, 288, 289, 1215, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 1428, 652, 298,
	299, 300, 301, 302, 303, 1429, 1430, 0, 304, 653,
	654, 655, 1431, 305, 306, 656, 1432, 1499, 1433, 307,
	308, 309, 310, 311, 312, 313, 0, 1434, 315, 316,
	317, 314, 318, 1435, 319, 0, 320, 321, 322, 323,
	324, 325, 1436, 326, 327, 328, 1216, 329, 330, 331,
	1437, 1438, 1440, 1439, 1441, 1442, 1443, 332, 333, 334,
	335, 336, 0, 337, 339, 657, 658, 1444, 342, 338,
	340, 1445, 343, 341, 344, 1446, 345, 346, 347, 1447,
	1448, 348, 349, 350, 1449, 351, 352, 353, 1450, 354,
	355, 356, 1451, 357, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 660, 661, 370,
	1452, 276, 1453, 0, 0, 0, 0, 371, 372, 373,
	662, 0, 0, 0, 374, 1454, 375, 376, 377, 1455,
	1456, 1217, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 1457, 390, 665, 1458,
	666, 391, 1459, 392, 393, 394, 395, 396, 667, 668,
	669, 482, 1219, 397, 398, 1460, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 1461, 1218,
	407, 670, 671, 1462, 672, 1463, 408, 409, 1220, 673,
	1221, 410, 411, 412, 1222, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 1464, 420, 422, 421, 1465,
	423, 674, 1223, 424, 425, 1224, 1466, 426, 427, 428,
	429, 430, 431, 434, 1467, 1468, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1225, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 1226, 476, 464, 1469, 278, 1227, 478, 479,
	480, 1470, 675, 481, 676, 483, 484, 1471, 0, 485,
	0, 1472, 1473, 487, 488, 489, 1474, 1475, 490, 491,
	677, 1228, 492, 1229, 678, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 1476, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 681, 512,
	682, 513, 514, 1477, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 683, 524, 525, 527, 526, 528,
	1478, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 1479, 545, 546, 547, 1230, 548,
	549, 550, 551, 552, 684, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 1480,
	570, 571, 569, 572, 573, 574, 1481, 575, 576, 558,
	559, 577, 578, 1231, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 1482, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 687,
	601, 602, 1483, 603, 604, 0, 600, 591, 1484, 605,
	606, 607, 608, 609, 610, 611, 612, 1485, 613, 688,
	689, 690, 691, 1486, 622, 1487, 614, 615, 616, 692,
	617, 693, 1488, 618, 619, 620, 621, 0, 623, 624,
	1489, 1490, 625, 626, 627, 629, 630, 628, 631, 1491,
	632, 1492, 0, 633, 634, 635, 694, 695, 696, 1493,
	637, 636, 638, 639, 697, 640, 641, 1494, 1495, 1496,
	1497, 642, 643, 698, 644, 645, 646, 0, 0, 0,
	0, 0, 0, 1413, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4296,
	279, 281, 280, 282, 283, 284, 285, 1419, 286, 287,
	1420, 1421, 1422, 0, 1423, 647, 1424, 1425, 1426, 1427,
	288, 289, 1215, 290, 291, 292, 293, 294, 295, 648,
	649, 0, 296, 650, 297, 651, 1428, 652, 298, 299,
	300, 301, 302, 303, 1429, 1430, 0, 304, 653, 654,
	655, 1431, 305, 306, 656, 1432, 1499, 1433, 307, 308,
	309, 310, 311, 312, 313, 0, 1434, 315, 316, 317,
	314, 318, 1435, 319, 0, 320, 321, 322, 323, 324,
	325, 1436, 326, 327, 328, 1216, 329, 330, 331, 1437,
	1438, 1440, 1439, 1441, 1442, 1443, 332, 333, 334, 335,
	336, 0, 337, 339, 657, 658, 1444, 342, 338, 340,
	1445, 343, 341, 344, 1446, 345, 346, 347, 1447, 1448,
	348, 349, 350, 1449, 351, 352, 353, 1450, 354, 355,
	356, 1451, 357, 358, 659, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 660, 661, 370, 1452,
	276, 1453, 0, 0, 0, 0, 371, 372, 373, 662,
	0, 0, 0, 374, 1454, 375, 376, 377, 1455, 1456,
	1217, 378, 379, 380, 663, 664, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 1457, 390, 665, 1458, 666,
	391, 1459, 392, 393, 394, 395, 396, 667, 668, 669,
	482, 1219, 397, 398, 1460, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 1461, 1218, 407,
	670, 671, 1462, 672, 1463, 408, 409, 1220, 673, 1221,
	410, 411, 412, 1222, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 1464, 420, 422, 421, 1465, 423,
	674, 1223, 424, 425, 1224, 1466, 426, 427, 428, 429,
	430, 431, 434, 1467, 1468, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1225, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 1226, 476, 464, 1469, 278, 1227, 478, 479, 480,
	1470, 675, 481, 676, 483, 484, 1471, 0, 485, 0,
	1472, 1473, 487, 488, 489, 1474, 1475, 490, 491, 677,
	1228, 492, 1229, 678, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 1476, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 681, 512, 682,
	513, 514, 1477, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 683, 524, 525, 527, 526, 528, 1478,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 1479, 545, 546, 547, 1230, 548, 549,
	550, 551, 552, 684, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 1480, 570,
	571, 569, 572, 573, 574, 1481, 575, 576, 558, 559,
	577, 578, 1231, 579, 580, 581, 582, 583, 584, 585,
	685, 0, 586, 1482, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 686, 594, 595, 596, 597, 687, 601,
	602, 1483, 603, 604, 0, 600, 591, 1484, 605, 606,
	607, 608, 609, 610, 611, 612, 1485, 613, 688, 689,
	690, 691, 1486, 622, 1487, 614, 615, 616, 692, 617,
	693, 1488, 618, 619, 620, 621, 0, 623, 624, 1489,
	1490, 625, 626, 627, 629, 630, 628, 631, 1491, 632,
	1492, 0, 633, 634, 635, 694, 695, 696, 1493, 637,
	636, 638, 639, 697, 640, 641, 1494, 1495, 1496, 1497,
	642, 643, 698, 644, 645, 646, 0, 0, 0, 0,
	0, 0, 1413, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4135, 279,
	281, 280, 282, 283, 284, 285, 1419, 286, 287, 1420,
	1421, 1422, 0, 1423, 647, 1424, 1425, 1426, 1427, 288,
	289, 1215, 290, 291, 292, 293, 294, 295, 648, 649,
	0, 296, 650, 297, 651, 1428, 652, 298, 299, 300,
	301, 302, 303, 1429, 1430, 0, 304, 653, 654, 655,
	1431, 305, 306, 656, 1432, 1499, 1433, 307, 308, 309,
	310, 311, 312, 313, 0, 1434, 315, 316, 317, 314,
	318, 1435, 319, 0, 320, 321, 322, 323, 324, 325,
	1436, 326, 327, 328, 1216, 329, 330, 331, 1437, 1438,
	1440, 1439, 1441, 1442, 1443, 332, 333, 334, 335, 336,
	0, 337, 339, 657, 658, 1444, 342, 338, 340, 1445,
	343, 341, 344, 1446, 345, 346, 347, 1447, 1448, 348,
	349, 350, 1449, 351, 352, 353, 1450, 354, 355, 356,
	1451, 357, 358, 659, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 660, 661, 370, 1452, 276,
	1453, 0, 0, 0, 0, 371, 372, 373, 662, 0,
	0, 0, 374, 1454, 375, 376, 377, 1455, 1456, 1217,
	378, 379, 380, 663, 664, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 1457, 390, 665, 1458, 666, 391,
	1459, 392, 393, 394, 395, 396, 667, 668, 669, 482,
	1219, 397, 398, 1460, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 1461, 1218, 407, 670,
	671, 1462, 672, 1463, 408, 409, 1220, 673, 1221, 410,
	411, 412, 1222, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 1464, 420, 422, 421, 1465, 423, 674,
	1223, 424, 425, 1224, 1466, 426, 427, 428, 429, 430,
	431, 434, 1467, 1468, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1225, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	1226, 476, 464, 1469, 278, 1227, 478, 479, 480, 1470,
	675, 481, 676, 483, 484, 1471, 0, 485, 0, 1472,
	1473, 487, 488, 489, 1474, 1475, 490, 491, 677, 1228,
	492, 1229, 678, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 1476, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 681, 512, 682, 513,
	514, 1477, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 683, 524, 525, 527, 526, 528, 1478, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 1479, 545, 546, 547, 1230, 548, 549, 550,
	551, 552, 684, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 1480, 570, 571,
	569, 572, 573, 574, 1481, 575, 576, 558, 559, 577,
	578, 1231, 579, 580, 581, 582, 583, 584, 585, 685,
	0, 586, 1482, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 686, 594, 595, 596, 597, 687, 601, 602,
	1483, 603, 604, 0, 600, 591, 1484, 605, 606, 607,
	608, 609, 610, 611, 612, 1485, 613, 688, 689, 690,
	691, 1486, 622, 1487, 614, 615, 616, 692, 617, 693,
	1488, 618, 619, 620, 621, 0, 623, 624, 1489, 1490,
	625, 626, 627, 629, 630, 628, 631, 1491, 632, 1492,
	0, 633, 634, 635, 694, 695, 696, 1493, 637, 636,
	638, 639, 697, 640, 641, 1494, 1495, 1496, 1497, 642,
	643, 698, 644, 645, 646, 0, 0, 0, 0, 0,
	0, 1413, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3814, 279, 281,
	280, 282, 283, 284, 285, 1419, 286, 287, 1420, 1421,
	1422, 0, 1423, 647, 1424, 1425, 1426, 1427, 288, 289,
	1215, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 1428, 652, 298, 299, 300, 301,
	302, 303, 1429, 1430, 0, 304, 653, 654, 655, 1431,
	305, 306, 656, 1432, 1499, 1433, 307, 308, 309, 310,
	311, 312, 313, 0, 1434, 315, 316, 317, 314, 318,
	1435, 319, 0, 320, 321, 322, 323, 324, 325, 1436,
	326, 327, 328, 1216, 329, 330, 331, 1437, 1438, 1440,
	1439, 1441, 1442, 1443, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 1444, 342, 338, 340, 1445, 343,
	341, 344, 1446, 345, 346, 347, 1447, 1448, 348, 349,
	350, 1449, 351, 352, 353, 1450, 354, 355, 356, 1451,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 660, 661, 370, 1452, 276, 1453,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 1454, 375, 376, 377, 1455, 1456, 1217, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 1457, 390, 665, 1458, 666, 391, 1459,
	392, 393, 394, 395, 396, 667, 668, 669, 482, 1219,
	397, 398, 1460, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 1461, 1218, 407, 670, 671,
	1462, 672, 1463, 408, 409, 1220, 673, 1221, 410, 411,
	412, 1222, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 1464, 420, 422, 421, 1465, 423, 674, 1223,
	424, 425, 1224, 1466, 426, 427, 428, 429, 430, 431,
	434, 1467, 1468, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1225, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 1226,
	476, 464, 1469, 278, 1227, 478, 479, 480, 1470, 675,
	481, 676, 483, 484, 1471, 0, 485, 0, 1472, 1473,
	487, 488, 489, 1474, 1475, 490, 491, 677, 1228, 492,
	1229, 678, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 1476, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 681, 512, 682, 513, 514,
	1477, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 1478, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 1479, 545, 546, 547, 1230, 548, 549, 550, 551,
	552, 684, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 1480, 570, 571, 569,
	572, 573, 574, 1481, 575, 576, 558, 559, 577, 578,
	1231, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 1482, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 687, 601, 602, 1483,
	603, 604, 0, 600, 591, 1484, 605, 606, 607, 608,
	609, 610, 611, 612, 1485, 613, 688, 689, 690, 691,
	1486, 622, 1487, 614, 615, 616, 692, 617, 693, 1488,
	618, 619, 620, 621, 0, 623, 624, 1489, 1490, 625,
	626, 627, 629, 630, 628, 631, 1491, 632, 1492, 0,
	633, 634, 635, 694, 695, 696, 1493, 637, 636, 638,
	639, 697, 640, 641, 1494, 1495, 1496, 1497, 642, 643,
	698, 644, 645, 646, 0, 0, 0, 0, 0, 0,
	1413, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3632, 279, 281, 280,
	282, 283, 284, 285, 1419, 286, 287, 1420, 1421, 1422,
	0, 1423, 647, 1424, 1425, 1426, 1427, 288, 289, 1215,
	290, 291, 292, 293, 294, 295, 648, 649, 0, 296,
	650, 297, 651, 1428, 652, 298, 299, 300, 301, 302,
	303, 1429, 1430, 0, 304, 653, 654, 655, 1431, 305,
	306, 656, 1432, 1499, 1433, 307, 308, 309, 310, 311,
	312, 313, 0, 1434, 315, 316, 317, 314, 318, 1435,
	319, 0, 320, 321, 322, 323, 324, 325, 1436, 326,
	327, 328, 1216, 329, 330, 331, 1437, 1438, 1440, 1439,
	1441, 1442, 1443, 332, 333, 334, 335, 336, 0, 337,
	339, 657, 658, 1444, 342, 338, 340, 1445, 343, 341,
	344, 1446, 345, 346, 347, 1447, 1448, 348, 349, 350,
	1449, 351, 352, 353, 1450, 354, 355, 356, 1451, 357,
	358, 659, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 660, 661, 370, 1452, 276, 1453, 0,
	0, 0, 0, 371, 372, 373, 662, 0, 0, 0,
	374, 1454, 375, 376, 377, 1455, 1456, 1217, 378, 379,
	380, 663, 664, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 1457, 390, 665, 1458, 666, 391, 1459, 392,
	393, 394, 395, 396, 667, 668, 669, 482, 1219, 397,
	398, 1460, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 1461, 1218, 407, 670, 671, 1462,
	672, 1463, 408, 409, 1220, 673, 1221, 410, 411, 412,
	1222, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 1464, 420, 422, 421, 1465, 423, 674, 1223, 424,
	425, 1224, 1466, 426, 427, 428, 429, 430, 431, 434,
	1467, 1468, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1225, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 1226, 476,
	464, 1469, 278, 1227, 478, 479, 480, 1470, 675, 481,
	676, 483, 484, 1471, 0, 485, 0, 1472, 1473, 487,
	488, 489, 1474, 1475, 490, 491, 677, 1228, 492, 1229,
	678, 493, 494, 486, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 1476, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 681, 512, 682, 513, 514, 1477,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	683, 524, 525, 527, 526, 528, 1478, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	1479, 545, 546, 547, 1230, 548, 549, 550, 551, 552,
	684, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 1480, 570, 571, 569, 572,
	573, 574, 1481, 575, 576, 558, 559, 577, 578, 1231,
	579, 580, 581, 582, 583, 584, 585, 685, 0, 586,
	1482, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	686, 594, 595, 596, 597, 687, 601, 602, 1483, 603,
	604, 0, 600, 591, 1484, 605, 606, 607, 608, 609,
	610, 611, 612, 1485, 613, 688, 689, 690, 691, 1486,
	622, 1487, 614, 615, 616, 692, 617, 693, 1488, 618,
	619, 620, 621, 0, 623, 624, 1489, 1490, 625, 626,
	627, 629, 630, 628, 631, 1491, 632, 1492, 0, 633,
	634, 635, 694, 695, 696, 1493, 637, 636, 638, 639,
	697, 640, 641, 1494, 1495, 1496, 1497, 642, 643, 698,
	644, 645, 646, 0, 0, 0, 0, 0, 0, 1413,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2662, 279, 281, 280, 282,
	283, 284, 285, 1419, 286, 287, 1420, 1421, 1422, 0,
	1423, 647, 1424, 1425, 1426, 1427, 288, 289, 1215, 290,
	291, 292, 293, 294, 295, 648, 649, 0, 296, 650,
	297, 651, 1428, 652, 298, 299, 300, 301, 302, 303,
	1429, 1430, 0, 304, 653, 654, 655, 1431, 305, 306,
	656, 1432, 1499, 1433, 307, 308, 309, 310, 311, 312,
	313, 0, 1434, 315, 316, 317, 314, 318, 1435, 319,
	0, 320, 321, 322, 323, 324, 325, 1436, 326, 327,
	328, 1216, 329, 330, 331, 1437, 1438, 1440, 1439, 1441,
	1442, 1443, 332, 333, 334, 335, 336, 0, 337, 339,
	657, 658, 1444, 342, 338, 340, 1445, 343, 341, 344,
	1446, 345, 346, 347, 1447, 1448, 348, 349, 350, 1449,
	351, 352, 353, 1450, 354, 355, 356, 1451, 357, 358,
	659, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 660, 661, 370, 1452, 276, 1453, 0, 0,
	0, 0, 371, 372, 373, 662, 0, 0, 0, 374,
	1454, 375, 376, 377, 1455, 1456, 1217, 378, 379, 380,
	663, 664, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 1457, 390, 665, 1458, 666, 391, 1459, 392, 393,
	394, 395, 396, 667, 668, 669, 482, 1219, 397, 398,
	1460, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 1461, 1218, 407, 670, 671, 1462, 672,
	1463, 408, 409, 1220, 673, 1221, 410, 411, 412, 1222,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	1464, 420, 422, 421, 1465, 423, 674, 1223, 424, 425,
	1224, 1466, 426, 427, 428, 429, 430, 431, 434, 1467,
	1468, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1225, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 1226, 476, 464,
	1469, 278, 1227, 478, 479, 480, 1470, 675, 481, 676,
	483, 484, 1471, 0, 485, 0, 1472, 1473, 487, 488,
	489, 1474, 1475, 490, 491, 677, 1228, 492, 1229, 678,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 1476, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 681, 512, 682, 513, 514, 1477, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 683,
	524, 525, 527, 526, 528, 1478, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 1479,
	545, 546, 547, 1230, 548, 549, 550, 551, 552, 684,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 1480, 570, 571, 569, 572, 573,
	574, 1481, 575, 576, 558, 559, 577, 578, 1231, 579,
	580, 581, 582, 583, 584, 585, 685, 0, 586, 1482,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 686,
	594, 595, 596, 597, 687, 601, 602, 1483, 603, 604,
	0, 600, 591, 1484, 605, 606, 607, 608, 609, 610,
	611, 612, 1485, 613, 688, 689, 690, 691, 1486, 622,
	1487, 614, 615, 616, 692, 617, 693, 1488, 618, 619,
	620, 621, 0, 623, 624, 1489, 1490, 625, 626, 627,
	629, 630, 628, 631, 1491, 632, 1492, 0, 633, 634,
	635, 694, 695, 696, 1493, 637, 636, 638, 639, 697,
	640, 641, 1494, 1495, 1496, 1497, 642, 643, 698, 644,
	645, 646, 0, 0, 0, 0, 1410, 0, 1413, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2286, 279, 281, 280, 282, 283,
	284, 285, 1419, 286, 287, 1420, 1421, 1422, 0, 1423,
	647, 1424, 1425, 1426, 1427, 288, 289, 1215, 290, 291,
	292, 293, 294, 295, 648, 649, 0, 296, 650, 297,
	651, 1428, 652, 298, 299, 300, 301, 302, 303, 1429,
	1430, 0, 304, 653, 654, 655, 1431, 305, 306, 656,
	1432, 1499, 1433, 307, 308, 309, 310, 311, 312, 313,
	0, 1434, 315, 316, 317, 314, 318, 1435, 319, 0,
	320, 321, 322, 323, 324, 325, 1436, 326, 327, 328,
	1216, 329, 330, 331, 1437, 1438, 1440, 1439, 1441, 1442,
	1443, 332, 333, 334, 335, 336, 0, 337, 339, 657,
	658, 1444, 342, 338, 340, 1445, 343, 341, 344, 1446,
	345, 346, 347, 1447, 1448, 348, 349, 350, 1449, 351,
	352, 353, 1450, 354, 355, 356, 1451, 357, 358, 659,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 660, 661, 370, 1452, 276, 1453, 0, 0, 0,
	0, 371, 372, 373, 662, 0, 0, 0, 374, 1454,
	375, 376, 377, 1455, 1456, 1217, 378, 379, 380, 663,
	664, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	1457, 390, 665, 1458, 666, 391, 1459, 392, 393, 394,
	395, 396, 667, 668, 669, 482, 1219, 397, 398, 1460,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 1461, 1218, 407, 670, 671, 1462, 672, 1463,
	408, 409, 1220, 673, 1221, 410, 411, 412, 1222, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 1464,
	420, 422, 421, 1465, 423, 674, 1223, 424, 425, 1224,
	1466, 426, 427, 428, 429, 430, 431, 434, 1467, 1468,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1225,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 1226, 476, 464, 1469,
	278, 1227, 478, 479, 480, 1470, 675, 481, 676, 483,
	484, 1471, 0, 485, 0, 1472, 1473, 487, 488, 489,
	1474, 1475, 490, 491, 677, 1228, 492, 1229, 678, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 1476, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 681, 512, 682, 513, 514, 1477, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 683, 524,
	525, 527, 526, 528, 1478, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 1479, 545,
	546, 547, 1230, 548, 549, 550, 551, 552, 684, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 1480, 570, 571, 569, 572, 573, 574,
	1481, 575, 576, 558, 559, 577, 578, 1231, 579, 580,
	581, 582, 583, 584, 585, 685, 0, 586, 1482, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 686, 594,
	595, 596, 597, 687, 601, 602, 1483, 603, 604, 0,
	600, 591, 1484, 605, 606, 607, 608, 609, 610, 611,
	612, 1485, 613, 688, 689, 690, 691, 1486, 622, 1487,
	614, 615, 616, 692, 617, 693, 1488, 618, 619, 620,
	621, 0, 623, 624, 1489, 1490, 625, 626, 627, 629,
	630, 628, 631, 1491, 632, 1492, 0, 633, 634, 635,
	694, 695, 696, 1493, 637, 636, 638, 639, 697, 640,
	641, 1494, 1495, 1496, 1497, 642, 643, 698, 644, 645,
	646, 1413, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 1419, 286, 287, 1420, 1421,
	1422, 0, 1423, 647, 1424, 1425, 1426, 1427, 288, 289,
	1215, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 1428, 652, 298, 299, 300, 301,
	302, 303, 1429, 1430, 0, 304, 653, 654, 655, 1431,
	305, 306, 656, 1432, 1499, 1433, 307, 308, 309, 310,
	311, 312, 313, 0, 1434, 315, 316, 317, 314, 318,
	1435, 319, 0, 320, 321, 322, 323, 324, 325, 1436,
	326, 327, 328, 1216, 329, 330, 331, 1437, 1438, 1440,
	1439, 1441, 1442, 1443, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 1444, 342, 338, 340, 1445, 343,
	341, 344, 1446, 345, 346, 347, 1447, 1448, 348, 349,
	350, 1449, 351, 352, 353, 1450, 354, 355, 356, 1451,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 660, 661, 370, 1452, 276, 1453,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 1454, 375, 376, 377, 1455, 1456, 1217, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 1457, 390, 665, 1458, 666, 391, 1459,
	392, 393, 394, 395, 396, 667, 668, 669, 482, 1219,
	397, 398, 1460, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 1461, 1218, 407, 670, 671,
	1462, 672, 1463, 408, 409, 1220, 673, 1221, 410, 411,
	412, 1222, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 1464, 420, 422, 421, 1465, 423, 674, 1223,
	424, 425, 1224, 1466, 426, 427, 428, 429, 430, 431,
	434, 1467, 1468, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1225, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 1226,
	476, 464, 1469, 278, 1227, 478, 479, 480, 1470, 675,
	481, 676, 483, 484, 1471, 0, 485, 0, 1472, 1473,
	487, 488, 489, 1474, 1475, 490, 491, 677, 1228, 492,
	1229, 678, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 1476, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 681, 512, 682, 513, 514,
	1477, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 1478, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 1479, 545, 546, 547, 1230, 548, 549, 550, 551,
	552, 684, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 1480, 570, 571, 569,
	572, 573, 574, 1481, 575, 576, 558, 559, 577, 578,
	1231, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 1482, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 687, 601, 602, 1483,
	603, 604, 0, 600, 591, 1484, 605, 606, 607, 608,
	609, 610, 611, 612, 1485, 613, 688, 689, 690, 691,
	1486, 622, 1487, 614, 615, 616, 692, 617, 693, 1488,
	618, 619, 620, 621, 0, 623, 624, 1489, 1490, 625,
	626, 627, 629, 630, 628, 631, 1491, 632, 1492, 0,
	633, 634, 635, 694, 695, 696, 1493, 637, 636, 638,
	639, 697, 640, 641, 1494, 1495, 1496, 1497, 642, 643,
	698, 644, 645, 646, 2637, 0, 1151, 1123, 1124, 1125,
	1121, 1122, 1134, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	2634, 286, 287, 0, 0, 0, 0, 0, 1175, 1139,
	0, 0, 0, 288, 289, 1215, 290, 291, 292, 293,
	294, 295, 648, 1188, 0, 296, 1195, 297, 1194, 0,
	1205, 298, 299, 300, 301, 302, 303, 1141, 1174, 1106,
	304, 1235, 1236, 655, 0, 305, 306, 1181, 0, 1162,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1216, 329,
	330, 331, 1165, 1163, 1164, 1171, 1167, 1166, 1170, 332,
	333, 334, 335, 336, 1198, 337, 339, 1192, 1191, 1111,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 2635, 0, 348, 1183, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1117, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 1206,
	1207, 370, 1130, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 1190, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1217, 378, 379, 380, 1203, 1204, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1213, 0, 1140, 391, 0, 392, 393, 394, 395, 396,
	1176, 1177, 1180, 482, 1219, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 1218, 407, 1185, 1186, 0, 1146, 0, 408, 409,
	1220, 1178, 1221, 410, 411, 412, 1222, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 1214, 1223, 424, 425, 1224, 0, 426,
	427, 428, 429, 430, 431, 434, 1169, 1168, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1225, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 1226, 476, 464, 1108, 278, 1227,
	478, 479, 480, 1131, 1179, 481, 1193, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 1228, 492, 1229, 1208, 493, 494, 1118,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	1209, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 1189, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	1230, 548, 549, 550, 551, 552, 1119, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 1172, 575,
	576, 558, 559, 577, 578, 1231, 579, 580, 581, 582,
	583, 584, 585, 1187, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 1234, 594, 595, 596,
	597, 1210, 601, 602, 0, 603, 604, 1105, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 1199, 1200, 1201, 1202, 0, 622, 0, 614, 615,
	616, 1211, 617, 1212, 1129, 618, 619, 620, 621, 0,
	623, 624, 0, 1112, 625, 626, 627, 629, 630, 628,
	631, 1173, 632, 0, 0, 633, 634, 635, 694, 1196,
	1233, 2633, 637, 636, 638, 639, 697, 640, 641, 0,
	0, 0, 0, 642, 643, 698, 644, 645, 646, 1109,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1104, 0, 0, 0, 0, 0, 0, 1102,
	1103, 2636, 0, 0, 0, 0, 0, 0, 0, 1135,
	2632, 0, 1095, 1133, 1151, 1123, 1124, 1125, 1121, 1122,
	1134, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 1175, 1139, 0, 0,
	0, 288, 289, 1215, 290, 291, 292, 293, 294, 295,
	648, 1188, 0, 296, 1195, 297, 1194, 0, 1205, 298,
	299, 300, 301, 302, 303, 1141, 1174, 1106, 304, 1235,
	1236, 655, 0, 305, 306, 1181, 0, 1162, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1216, 329, 330, 331,
	1165, 1163, 1164, 1171, 1167, 1166, 1170, 332, 333, 334,
	335, 336, 1198, 337, 339, 1192, 1191, 1111, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 1183, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1117, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 1206, 1207, 370,
	1130, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	1190, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1217, 378, 379, 380, 1203, 1204, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1213, 0,
	1140, 391, 0, 392, 393, 394, 395, 396, 1176, 1177,
	1180, 482, 1219, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 1218,
	407, 1185, 1186, 0, 1146, 0, 408, 409, 1220, 1178,
	1221, 410, 411, 412, 1222, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 1214, 1223, 424, 425, 1224, 0, 426, 427, 428,
	429, 430, 431, 434, 1169, 1168, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1225, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 1226, 476, 464, 1108, 278, 1227, 478, 479,
	480, 1131, 1179, 481, 1193, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 1228, 492, 1229, 1208, 493, 494, 1118, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 1209, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 1189, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 1230, 548,
	549, 550, 551, 552, 1119, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 238,
	570, 571, 569, 572, 573, 574, 1172, 575, 576, 558,
	559, 577, 578, 1231, 579, 580, 581, 582, 583, 584,
	585, 1187, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 1234, 594, 595, 596, 597, 1210,
	601, 602, 0, 603, 604, 1105, 600, 591, 240, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 1199,
	1200, 1201, 1202, 0, 622, 0, 614, 615, 616, 1211,
	617, 1212, 1129, 618, 619, 620, 621, 0, 623, 624,
	0, 1112, 625, 626, 627, 629, 630, 628, 631, 1173,
	632, 0, 0, 633, 634, 635, 1649, 1196, 1233, 0,
	637, 636, 638, 639, 697, 640, 641, 0, 0, 0,
	232, 642, 643, 698, 644, 645, 646, 1109, 0, 233,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1104, 0, 0, 0, 0, 0, 0, 1102, 1103, 1151,
	1123, 1124, 1125, 1121, 1122, 1134, 0, 1910, 1908, 0,
	0, 1133, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 1175, 1139, 0, 0, 0, 288, 289, 1215, 290,
	291, 292, 293, 294, 295, 648, 1188, 0, 296, 1195,
	297, 1194, 0, 1205, 298, 299, 300, 301, 302, 303,
	1141, 1174, 1106, 304, 1235, 1236, 655, 0, 305, 306,
	1181, 0, 1162, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1216, 329, 330, 331, 1165, 1163, 1164, 1171, 1167,
	1166, 1170, 332, 333, 334, 335, 336, 1198, 337, 339,
	1192, 1191, 1111, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 1183, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1117, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 1206, 1207, 370, 1130, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 1190, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1217, 378, 379, 380,
	1203, 1204, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1213, 0, 1140, 391, 0, 392, 393,
	394, 395, 396, 1176, 1177, 1180, 482, 1219, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 1218, 407, 1185, 1186, 0, 1146,
	0, 408, 409, 1220, 1178, 1221, 410, 411, 412, 1222,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 1214, 1223, 424, 425,
	1224, 0, 426, 427, 428, 429, 430, 431, 434, 1169,
	1168, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1225, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 1226, 476, 464,
	1108, 278, 1227, 478, 479, 480, 1131, 1179, 481, 1193,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 1228, 492, 1229, 1208,
	493, 494, 1118, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 1209, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 1189,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 1230, 548, 549, 550, 551, 552, 1119,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 238, 570, 571, 569, 572, 573,
	574, 1172, 575, 576, 558, 559, 577, 578, 1231, 579,
	580, 581, 582, 583, 584, 585, 1187, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 1234,
	594, 595, 596, 597, 1210, 601, 602, 0, 603, 604,
	1105, 600, 591, 240, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 1199, 1200, 1201, 1202, 0, 622,
	0, 614, 615, 616, 1211, 617, 1212, 1129, 618, 619,
	620, 621, 0, 623, 624, 0, 1112, 625, 626, 627,
	629, 630, 628, 631, 1173, 632, 0, 0, 633, 634,
	635, 1649, 1196, 1233, 0, 637, 636, 638, 639, 697,
	640, 641, 0, 0, 0, 232, 642, 643, 698, 644,
	645, 646, 1109, 0, 233, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1104, 0, 0, 0, 0,
	0, 0, 1102, 1103, 1151, 1123, 1124, 1125, 1121, 1122,
	1134, 0, 1910, 3273, 0, 0, 1133, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 1175, 1139, 0, 0,
	0, 288, 289, 1215, 290, 291, 292, 293, 294, 295,
	648, 1188, 0, 296, 1195, 297, 1194, 0, 1205, 298,
	299, 300, 301, 302, 303, 1141, 1174, 1106, 304, 1235,
	1236, 655, 0, 305, 306, 1181, 0, 1162, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1216, 329, 330, 331,
	1165, 1163, 1164, 1171, 1167, 1166, 1170, 332, 333, 334,
	335, 336, 1198, 337, 339, 1192, 1191, 1111, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 1183, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1117, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 1206, 1207, 370,
	1130, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	1190, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1217, 378, 379, 380, 1203, 1204, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1213, 0,
	1140, 391, 0, 392, 393, 394, 395, 396, 1176, 1177,
	1180, 482, 1219, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 1218,
	407, 1185, 1186, 0, 1146, 0, 408, 409, 1220, 1178,
	1221, 410, 411, 412, 1222, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 1214, 1223, 424, 425, 1224, 0, 426, 427, 428,
	429, 430, 431, 434, 1169, 1168, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1225, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 1226, 476, 464, 1108, 278, 1227, 478, 479,
	480, 1131, 1179, 481, 1193, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 1228, 492, 1229, 1208, 493, 494, 1118, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 1209, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 1189, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 1230, 548,
	549, 550, 551, 552, 1119, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 238,
	570, 571, 569, 572, 573, 574, 1172, 575, 576, 558,
	559, 577, 578, 1231, 579, 580, 581, 582, 583, 584,
	585, 1187, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 1234, 594, 595, 596, 597, 1210,
	601, 602, 0, 603, 604, 1105, 600, 591, 240, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 1199,
	1200, 1201, 1202, 0, 622, 0, 614, 615, 616, 1211,
	617, 1212, 1129, 618, 619, 620, 621, 0, 623, 624,
	0, 1112, 625, 626, 627, 629, 630, 628, 631, 1173,
	632, 0, 0, 633, 634, 635, 1649, 1196, 1233, 0,
	637, 636, 638, 639, 697, 640, 641, 0, 0, 0,
	232, 642, 643, 698, 644, 645, 646, 1109, 0, 233,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1104, 0, 0, 0, 0, 0, 0, 1102, 1103, 1151,
	1123, 1124, 1125, 1121, 1122, 1134, 0, 1910, 1908, 0,
	0, 1133, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 1175, 1139, 0, 0, 0, 288, 289, 1215, 290,
	291, 292, 293, 294, 295, 648, 1188, 0, 296, 1195,
	297, 1194, 2768, 1205, 298, 299, 300, 301, 302, 303,
	1141, 1174, 1106, 304, 1235, 1236, 655, 0, 305, 306,
	1181, 0, 1162, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1216, 329, 330, 331, 1165, 1163, 1164, 1171, 1167,
	1166, 1170, 332, 333, 334, 335, 336, 1198, 337, 339,
	1192, 1191, 1111, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 1183, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1117, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 1206, 1207, 370, 1130, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 1190, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 2773, 1217, 378, 379, 380,
	1203, 1204, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1213, 0, 1140, 391, 0, 392, 393,
	394, 395, 396, 1176, 1177, 1180, 482, 1219, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 1218, 407, 1185, 1186, 0, 1146,
	0, 408, 409, 1220, 1178, 1221, 410, 411, 412, 1222,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 2769, 423, 1214, 1223, 424, 425,
	1224, 0, 426, 427, 428, 429, 430, 431, 434, 1169,
	1168, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1225, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 1226, 476, 464,
	1108, 278, 1227, 478, 479, 480, 1131, 1179, 481, 1193,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 1228, 492, 1229, 1208,
	493, 494, 1118, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 1209, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 1189,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 1230, 548, 549, 550, 551, 552, 1119,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 1172, 575, 576, 558, 559, 577, 578, 1231, 579,
	580, 581, 582, 583, 584, 585, 1187, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 1234,
	594, 595, 596, 597, 1210, 601, 602, 0, 603, 604,
	1105, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 1199, 1200, 1201, 1202, 0, 622,
	2770, 614, 615, 616, 1211, 617, 1212, 1129, 618, 619,
	620, 621, 0, 623, 624, 0, 1112, 625, 626, 627,
	629, 630, 628, 631, 1173, 632, 0, 0, 633, 634,
	635, 694, 1196, 1233, 0, 637, 636, 638, 639, 697,
	640, 641, 0, 0, 0, 0, 642, 643, 698, 644,
	645, 646, 1109, 0, 0, 0, 2682, 0, 1151, 1123,
	1124, 1125, 1121, 1122, 1134, 1104, 0, 0, 0, 0,
	0, 0, 1102, 1103, 0, 279, 281, 280, 282, 283,
	284, 285, 1135, 286, 287, 0, 1133, 0, 0, 0,
	1175, 1139, 0, 0, 0, 288, 289, 1215, 290, 291,
	292, 293, 294, 295, 648, 1188, 0, 296, 1195, 297,
	1194, 0, 1205, 298, 299, 300, 301, 302, 303, 1141,
	1174, 1106, 304, 1235, 1236, 655, 0, 305, 306, 1181,
	0, 1162, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	1216, 329, 330, 331, 1165, 1163, 1164, 1171, 1167, 1166,
	1170, 332, 333, 334, 335, 336, 1198, 337, 339, 1192,
	1191, 1111, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 1183, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1117,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 1206, 1207, 370, 1130, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 1190, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1217, 378, 379, 380, 1203,
	1204, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1213, 0, 1140, 391, 0, 392, 393, 394,
	395, 396, 1176, 1177, 1180, 482, 1219, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 1218, 407, 1185, 1186, 0, 1146, 0,
	408, 409, 1220, 1178, 1221, 410, 411, 412, 1222, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 1214, 1223, 424, 425, 1224,
	0, 426, 427, 428, 429, 430, 431, 434, 1169, 1168,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1225,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 1226, 476, 464, 1108,
	278, 1227, 478, 479, 480, 1131, 1179, 481, 1193, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 1228, 492, 1229, 1208, 493,
	494, 1118, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 1209, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 1189, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 1230, 548, 549, 550, 551, 552, 1119, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	1172, 575, 576, 558, 559, 577, 578, 1231, 579, 580,
	581, 582, 583, 584, 585, 1187, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 1234, 594,
	595, 596, 597, 1210, 601, 602, 0, 603, 604, 1105,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 1199, 1200, 1201, 1202, 0, 622, 0,
	614, 615, 616, 1211, 617, 1212, 1129, 618, 619, 620,
	621, 0, 623, 624, 0, 1112, 625, 626, 627, 629,
	630, 628, 631, 1173, 632, 0, 0, 633, 634, 635,
	694, 1196, 1233, 0, 637, 636, 638, 639, 697, 640,
	641, 0, 0, 0, 0, 642, 643, 698, 644, 645,
	646, 1109, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1104, 0, 0, 0, 0, 0,
	0, 1102, 1103, 0, 0, 0, 0, 0, 0, 0,
	0, 1135, 2680, 0, 2679, 1133, 1151, 1123, 1124, 1125,
	1121, 1122, 1134, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 1175, 1139,
	0, 0, 0, 288, 289, 1215, 290, 291, 292, 293,
	294, 295, 648, 1188, 0, 296, 1195, 297, 1194, 0,
	1205, 298, 299, 300, 301, 302, 303, 1141, 1174, 1106,
	304, 1235, 1236, 655, 0, 305, 306, 1181, 0, 1162,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1216, 329,
	330, 331, 1165, 1163, 1164, 1171, 1167, 1166, 1170, 332,
	333, 334, 335, 336, 1198, 337, 339, 1192, 1191, 1111,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 1183, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1117, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 1206,
	1207, 370, 1130, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 1190, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1217, 378, 379, 380, 1203, 1204, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1213, 0, 1140, 391, 0, 392, 393, 394, 395, 396,
	1176, 1177, 1180, 482, 1219, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 1218, 407, 1185, 1186, 0, 1146, 0, 408, 409,
	1220, 1178, 1221, 410, 411, 412, 1222, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 1214, 1223, 424, 425, 1224, 0, 426,
	427, 428, 429, 430, 431, 434, 1169, 1168, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1225, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 1226, 476, 464, 1108, 278, 1227,
	478, 479, 480, 1131, 1179, 481, 1193, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 1228, 492, 1229, 1208, 493, 494, 1118,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	1209, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 1189, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	1230, 548, 549, 550, 551, 552, 1119, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 1172, 575,
	576, 558, 559, 577, 578, 1231, 579, 580, 581, 582,
	583, 584, 585, 1187, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 1234, 594, 595, 596,
	597, 1210, 601, 602, 0, 603, 604, 1105, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 1199, 1200, 1201, 1202, 0, 622, 0, 614, 615,
	616, 1211, 617, 1212, 1129, 618, 619, 620, 621, 0,
	623, 624, 0, 1112, 625, 626, 627, 629, 630, 628,
	631, 1173, 632, 0, 0, 633, 634, 635, 694, 1196,
	1233, 0, 637, 636, 638, 639, 697, 640, 641, 0,
	0, 0, 0, 642, 643, 698, 644, 645, 646, 1109,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1104, 0, 0, 0, 0, 0, 0, 1102,
	1103, 0, 0, 0, 0, 0, 0, 0, 0, 1135,
	2677, 0, 2676, 1133, 1151, 1123, 1124, 1125, 1121, 1122,
	1134, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 1175, 1139, 0, 0,
	0, 288, 289, 1215, 290, 291, 292, 293, 294, 295,
	648, 1188, 0, 296, 1195, 297, 1194, 0, 1205, 298,
	299, 300, 301, 302, 303, 1141, 1174, 1106, 304, 1235,
	1236, 655, 0, 305, 306, 1181, 0, 1162, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1216, 329, 330, 331,
	1165, 1163, 1164, 1171, 1167, 1166, 1170, 332, 333, 334,
	335, 336, 1198, 337, 339, 1192, 1191, 1111, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 1183, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1117, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 1206, 1207, 370,
	1130, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	1190, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1217, 378, 379, 380, 1203, 1204, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1213, 0,
	1140, 391, 0, 392, 393, 394, 395, 396, 1176, 1177,
	1180, 482, 1219, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 1218,
	407, 1185, 1186, 0, 1146, 0, 408, 409, 1220, 1178,
	1221, 410, 411, 412, 1222, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 1214, 1223, 424, 425, 1224, 0, 426, 427, 428,
	429, 430, 431, 434, 1169, 1168, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1225, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 1226, 476, 464, 1108, 278, 1227, 478, 479,
	480, 1131, 1179, 481, 1193, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 1228, 492, 1229, 1208, 493, 494, 1118, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 1209, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 1189, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 1230, 548,
	549, 550, 551, 552, 1119, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 1172, 575, 576, 558,
	559, 577, 578, 1231, 579, 580, 581, 582, 583, 584,
	585, 1187, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 1234, 594, 595, 596, 597, 1210,
	601, 602, 0, 603, 604, 1105, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 1199,
	1200, 1201, 1202, 0, 622, 0, 614, 615, 616, 1211,
	617, 1212, 1129, 618, 619, 620, 621, 0, 623, 624,
	0, 1112, 625, 626, 627, 629, 630, 628, 631, 1173,
	632, 0, 0, 633, 634, 635, 694, 1196, 1233, 0,
	637, 636, 638, 639, 697, 640, 641, 0, 0, 0,
	0, 642, 643, 698, 644, 645, 646, 1109, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1104, 0, 0, 0, 0, 0, 0, 1102, 1103, 0,
	0, 0, 0, 0, 0, 0, 0, 1135, 2674, 0,
	2673, 1133, 1151, 1123, 1124, 1125, 1121, 1122, 1134, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 1175, 1139, 0, 0, 0, 288,
	289, 1215, 290, 291, 292, 293, 294, 295, 648, 1188,
	0, 296, 1195, 297, 1194, 0, 1205, 298, 299, 300,
	301, 302, 303, 1141, 1174, 1106, 304, 1235, 1236, 655,
	0, 305, 306, 1181, 0, 1162, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 1216, 329, 330, 331, 1165, 1163,
	1164, 1171, 1167, 1166, 1170, 332, 333, 334, 335, 336,
	1198, 337, 339, 1192, 1191, 1111, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	1183, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1117, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 1206, 1207, 370, 1130, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 1190, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1217,
	378, 379, 380, 1203, 1204, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1213, 0, 1140, 391,
	0, 392, 393, 394, 395, 396, 1176, 1177, 1180, 482,
	1219, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 1218, 407, 1185,
	1186, 0, 1146, 0, 408, 409, 1220, 1178, 1221, 410,
	411, 412, 1222, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 1214,
	1223, 424, 425, 1224, 0, 426, 427, 428, 429, 430,
	431, 434, 1169, 1168, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1225, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	1226, 476, 464, 1108, 278, 1227, 478, 479, 480, 1131,
	1179, 481, 1193, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 1228,
	492, 1229, 1208, 493, 494, 1118, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 1209, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 1189, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 1230, 548, 549, 550,
	551, 552, 1119, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 1172, 575, 576, 558, 559, 577,
	578, 1231, 579, 580, 581, 582, 583, 584, 585, 1187,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 1234, 594, 595, 596, 597, 1210, 601, 602,
	0, 603, 604, 1105, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 1199, 1200, 1201,
	1202, 0, 622, 0, 614, 615, 616, 1211, 617, 1212,
	1129, 618, 619, 620, 621, 0, 623, 624, 0, 1112,
	625, 626, 627, 629, 630, 628, 631, 1173, 632, 0,
	0, 633, 634, 635, 694, 1196, 1233, 0, 637, 636,
	638, 639, 697, 640, 641, 0, 0, 0, 0, 642,
	643, 698, 644, 645, 646, 1109, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1104, 0,
	0, 0, 0, 0, 0, 1102, 1103, 0, 0, 0,
	0, 0, 0, 0, 0, 1135, 2671, 0, 1749, 1133,
	1151, 1123, 1124, 1125, 1121, 1122, 1134, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 1175, 1139, 0, 0, 0, 288, 289, 1215,
	290, 291, 292, 293, 294, 295, 648, 1188, 0, 296,
	1195, 297, 1194, 0, 1205, 298, 299, 300, 301, 302,
	303, 1141, 1174, 1106, 304, 1235, 1236, 655, 0, 305,
	306, 1181, 0, 1162, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1216, 329, 330, 331, 1165, 1163, 1164, 1171,
	1167, 1166, 1170, 332, 333, 334, 335, 336, 1198, 337,
	339, 1192, 1191, 1111, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 1183, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1117, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 1206, 1207, 370, 1130, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 1190, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1217, 378, 379,
	380, 1203, 1204, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1213, 0, 1140, 391, 0, 392,
	393, 394, 395, 396, 1176, 1177, 1180, 482, 1219, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 1218, 407, 1185, 1186, 0,
	1146, 0, 408, 409, 1220, 1178, 1221, 410, 411, 412,
	1222, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 1214, 1223, 424,
	425, 1224, 0, 426, 427, 428, 429, 430, 431, 434,
	1169, 1168, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1225, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 1226, 476,
	464, 1108, 278, 1227, 478, 479, 480, 1131, 1179, 481,
	1193, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 677, 1228, 492, 1229,
	1208, 493, 494, 1118, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 1209, 512, 682, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	1189, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 1230, 548, 549, 550, 551, 552,
	1119, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 1172, 575, 576, 558, 559, 577, 578, 1231,
	579, 580, 581, 582, 583, 584, 585, 1187, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	1234, 594, 595, 596, 597, 1210, 601, 602, 0, 603,
	604, 1105, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 1199, 1200, 1201, 1202, 0,
	622, 0, 614, 615, 616, 1211, 617, 1212, 1129, 618,
	619, 620, 621, 0, 623, 624, 0, 1112, 625, 626,
	627, 629, 630, 628, 631, 1173, 632, 0, 0, 633,
	634, 635, 694, 1196, 1233, 0, 637, 636, 638, 639,
	697, 640, 641, 1748, 0, 0, 0, 642, 643, 698,
	644, 645, 646, 1109, 0, 0, 0, 1098, 0, 1151,
	1123, 1124, 1125, 1121, 1122, 1134, 1104, 0, 0, 0,
	0, 0, 0, 1102, 1103, 0, 279, 281, 280, 282,
	283, 284, 285, 1135, 286, 287, 0, 1133, 0, 0,
	0, 1175, 1139, 0, 0, 0, 288, 289, 1215, 290,
	291, 292, 293, 294, 295, 648, 1188, 0, 296, 1195,
	297, 1194, 0, 1205, 298, 299, 300, 301, 302, 303,
	1141, 1174, 1106, 304, 1235, 1236, 655, 0, 305, 306,
	1181, 0, 1162, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1216, 329, 330, 331, 1165, 1163, 1164, 1171, 1167,
	1166, 1170, 332, 333, 334, 335, 336, 1198, 337, 339,
	1192, 1191, 1111, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 1183, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1117, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 1206, 1207, 370, 1130, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 1190, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1217, 378, 379, 380,
	1203, 1204, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1213, 0, 1140, 391, 0, 392, 393,
	394, 395, 396, 1176, 1177, 1180, 482, 1219, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 1218, 407, 1185, 1186, 0, 1146,
	0, 408, 409, 1220, 1178, 1221, 410, 411, 412, 1222,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 1214, 1223, 424, 425,
	1224, 0, 426, 427, 428, 429, 430, 431, 434, 1169,
	1168, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1225, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 1226, 476, 464,
	1108, 278, 1227, 478, 479, 480, 1131, 1179, 481, 1193,
	483, 484, 0, 0, 485, 0, 1113, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 1228, 492, 1229, 1208,
	493, 494, 1118, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 1209, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 1189,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 1230, 548, 549, 550, 551, 552, 1119,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 1172, 575, 576, 558, 559, 577, 578, 1231, 579,
	580, 581, 582, 583, 584, 585, 1187, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 1234,
	594, 595, 596, 597, 1210, 601, 602, 0, 603, 604,
	1105, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 1199, 1200, 1201, 1202, 0, 622,
	0, 614, 615, 616, 1211, 617, 1212, 1129, 618, 619,
	620, 621, 0, 623, 624, 0, 1112, 625, 626, 627,
	629, 630, 628, 631, 1173, 632, 0, 0, 633, 634,
	635, 694, 1196, 1233, 0, 637, 636, 638, 639, 697,
	640, 641, 0, 0, 0, 0, 642, 643, 698, 644,
	645, 646, 1109, 0, 0, 0, 0, 0, 1151, 1123,
	1124, 1125, 1121, 1122, 1134, 1104, 0, 0, 0, 0,
	0, 0, 1102, 1103, 0, 279, 281, 280, 282, 283,
	284, 285, 1135, 286, 287, 0, 1133, 0, 0, 0,
	1175, 1139, 0, 0, 0, 288, 289, 1215, 290, 291,
	292, 293, 294, 295, 648, 1188, 0, 296, 1195, 297,
	1194, 0, 1205, 298, 299, 300, 301, 302, 303, 1141,
	1174, 1106, 304, 1235, 1236, 655, 0, 305, 306, 1181,
	0, 1162, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 4799, 325, 0, 326, 327, 328,
	1216, 329, 330, 331, 1165, 1163, 1164, 1171, 1167, 1166,
	1170, 332, 333, 334, 335, 336, 1198, 337, 339, 1192,
	1191, 1111, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 1183, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1117,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 1206, 1207, 370, 1130, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 1190, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1217, 378, 379, 380, 1203,
	1204, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1213, 0, 1140, 391, 0, 392, 393, 394,
	395, 396, 1176, 1177, 1180, 482, 1219, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 1218, 407, 1185, 1186, 0, 1146, 0,
	408, 409, 1220, 1178, 1221, 410, 411, 412, 1222, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 1214, 1223, 424, 425, 1224,
	0, 426, 427, 428, 429, 430, 431, 434, 1169, 1168,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1225,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 1226, 476, 464, 1108,
	278, 1227, 478, 479, 480, 1131, 1179, 481, 1193, 483,
	484, 0, 0, 485, 0, 1113, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 1228, 492, 1229, 1208, 493,
	494, 1118, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 1209, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 1189, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 1230, 548, 549, 550, 551, 552, 1119, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	1172, 575, 576, 558, 559, 577, 578, 1231, 579, 580,
	581, 582, 583, 584, 585, 1187, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 1234, 594,
	595, 596, 597, 1210, 601, 602, 0, 603, 604, 1105,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 1199, 1200, 1201, 1202, 0, 622, 0,
	614, 615, 616, 1211, 617, 1212, 1129, 618, 619, 620,
	621, 0, 623, 624, 0, 1112, 625, 626, 627, 629,
	630, 628, 631, 1173, 632, 0, 0, 633, 634, 635,
	694, 1196, 1233, 0, 637, 636, 638, 639, 697, 640,
	641, 0, 0, 0, 0, 642, 643, 698, 644, 645,
	646, 1109, 0, 0, 0, 0, 0, 1151, 1123, 1124,
	1125, 1121, 1122, 1134, 1104, 0, 0, 0, 0, 0,
	0, 1102, 1103, 0, 279, 281, 280, 282, 283, 284,
	285, 1135, 286, 287, 0, 1133, 0, 0, 0, 1175,
	1139, 0, 0, 0, 288, 289, 1215, 290, 291, 292,
	293, 294, 295, 648, 1188, 0, 296, 1195, 297, 1194,
	0, 1205, 298, 299, 300, 301, 302, 303, 1141, 1174,
	1106, 304, 1235, 1236, 655, 0, 305, 306, 1181, 0,
	1162, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 1216,
	329, 330, 331, 1165, 1163, 1164, 1171, 1167, 1166, 1170,
	332, 333, 334, 335, 336, 1198, 337, 339, 1192, 1191,
	1111, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 1183, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1117, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	1206, 1207, 370, 1130, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 1190, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1217, 378, 379, 380, 1203, 1204,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1213, 0, 1140, 391, 0, 392, 393, 394, 395,
	396, 1176, 1177, 1180, 482, 1219, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 2514, 404, 405,
	406, 0, 1218, 407, 1185, 1186, 0, 1146, 0, 408,
	409, 1220, 1178, 1221, 410, 411, 412, 1222, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 1214, 1223, 424, 425, 1224, 0,
	426, 427, 428, 429, 430, 431, 434, 1169, 1168, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1225, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 1226, 476, 464, 1108, 278,
	1227, 478, 479, 480, 1131, 1179, 481, 1193, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 1228, 492, 1229, 1208, 493, 494,
	1118, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 1209, 512, 682, 513, 514, 2513, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 1189, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 1230, 548, 549, 550, 551, 552, 1119, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 1172,
	575, 576, 558, 559, 577, 578, 1231, 579, 580, 581,
	582, 583, 584, 585, 1187, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 1234, 594, 595,
	596, 597, 1210, 601, 602, 0, 603, 604, 1105, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 1199, 1200, 1201, 1202, 0, 622, 0, 614,
	615, 616, 1211, 617, 1212, 1129, 618, 619, 620, 621,
	0, 623, 624, 0, 1112, 625, 626, 627, 629, 630,
	628, 631, 1173, 632, 0, 0, 633, 634, 635, 694,
	1196, 1233, 0, 637, 636, 638, 639, 697, 640, 641,
	0, 0, 0, 0, 642, 643, 698, 644, 645, 646,
	1109, 0, 0, 0, 0, 0, 1151, 1123, 1124, 1125,
	1121, 1122, 1134, 1104, 0, 0, 0, 0, 0, 0,
	1102, 1103, 0, 279, 281, 280, 282, 283, 284, 285,
	1135, 286, 287, 0, 1133, 0, 0, 0, 1175, 1139,
	0, 0, 0, 288, 289, 1215, 290, 291, 292, 293,
	294, 295, 648, 1188, 0, 296, 1195, 297, 1194, 0,
	1205, 298, 299, 300, 301, 302, 303, 1141, 1174, 1106,
	304, 1235, 1236, 655, 0, 305, 306, 1181, 0, 1162,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1216, 329,
	330, 331, 1165, 1163, 1164, 1171, 1167, 1166, 1170, 332,
	333, 334, 335, 336, 1198, 337, 339, 1192, 1191, 1111,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 1183, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1117, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 1206,
	1207, 370, 1130, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 1190, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1217, 378, 379, 380, 1203, 1204, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1213, 0, 1140, 391, 0, 392, 393, 394, 395, 396,
	1176, 1177, 1180, 482, 1219, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 1218, 407, 1185, 1186, 0, 1146, 0, 408, 409,
	1220, 1178, 1221, 410, 411, 412, 1222, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 1214, 1223, 424, 425, 1224, 0, 426,
	427, 428, 429, 430, 431, 434, 1169, 1168, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1225, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 1226, 476, 464, 1108, 278, 1227,
	478, 479, 480, 1131, 1179, 481, 1193, 483, 484, 0,
	0, 485, 0, 1113, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 1228, 492, 1229, 1208, 493, 494, 1118,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	1209, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 1189, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	1230, 548, 549, 550, 551, 552, 1119, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 1172, 575,
	576, 558, 559, 577, 578, 1231, 579, 580, 581, 582,
	583, 584, 585, 1187, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 1234, 594, 595, 596,
	597, 1210, 601, 602, 0, 603, 604, 1105, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 1199, 1200, 1201, 1202, 0, 622, 0, 614, 615,
	616, 1211, 617, 1212, 1129, 618, 619, 620, 621, 0,
	623, 624, 0, 1112, 625, 626, 627, 629, 630, 628,
	631, 1173, 632, 0, 0, 633, 634, 635, 694, 1196,
	1233, 0, 637, 636, 638, 639, 697, 640, 641, 0,
	0, 0, 0, 642, 643, 698, 644, 645, 646, 1109,
	0, 0, 0, 0, 0, 1151, 1123, 1124, 1125, 1121,
	1122, 1134, 1104, 0, 0, 0, 0, 0, 0, 1102,
	1103, 0, 279, 281, 280, 282, 283, 284, 285, 1135,
	286, 287, 0, 1133, 0, 0, 0, 1175, 1139, 0,
	0, 0, 288, 289, 1215, 290, 291, 292, 293, 294,
	295, 648, 1188, 0, 296, 1195, 297, 1194, 0, 1205,
	298, 299, 300, 301, 302, 303, 1141, 1174, 1106, 304,
	1235, 1236, 655, 0, 305, 306, 1181, 0, 1162, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 4523, 325, 0, 326, 327, 328, 1216, 329, 330,
	331, 1165, 1163, 1164, 1171, 1167, 1166, 1170, 332, 333,
	334, 335, 336, 1198, 337, 339, 1192, 1191, 1111, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 1183, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1117, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 1206, 1207,
	370, 1130, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 1190, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1217, 378, 379, 380, 1203, 1204, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1213,
	0, 1140, 391, 0, 392, 393, 394, 395, 396, 1176,
	1177, 1180, 482, 1219, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	1218, 407, 1185, 1186, 0, 1146, 0, 408, 409, 1220,
	1178, 1221, 410, 411, 412, 1222, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 1214, 1223, 424, 425, 1224, 0, 426, 427,
	428, 429, 430, 431, 434, 1169, 1168, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1225, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 1226, 476, 464, 1108, 278, 1227, 478,
	479, 480, 1131, 1179, 481, 1193, 483, 484, 0, 0,
	485, 0, 1113, 0, 487, 488, 489, 0, 0, 490,
	491, 677, 1228, 492, 1229, 1208, 493, 494, 1118, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 1209,
	512, 682, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 1189, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 1230,
	548, 549, 550, 551, 552, 1119, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 1172, 575, 576,
	558, 559, 577, 578, 1231, 579, 580, 581, 582, 583,
	584, 585, 1187, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 1234, 594, 595, 596, 597,
	1210, 601, 602, 0, 603, 604, 1105, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	1199, 1200, 1201, 1202, 0, 622, 0, 614, 615, 616,
	1211, 617, 1212, 1129, 618, 619, 620, 621, 0, 623,
	624, 0, 1112, 625, 626, 627, 629, 630, 628, 631,
	1173, 632, 0, 0, 633, 634, 635, 694, 1196, 1233,
	0, 637, 636, 638, 639, 697, 640, 641, 0, 0,
	0, 0, 642, 643, 698, 644, 645, 646, 1109, 0,
	0, 0, 0, 0, 1151, 1123, 1124, 1125, 1121, 1122,
	1134, 1104, 0, 0, 0, 0, 0, 0, 1102, 1103,
	0, 279, 281, 280, 282, 283, 284, 285, 1135, 286,
	287, 0, 1133, 0, 0, 0, 1175, 1139, 0, 0,
	0, 288, 289, 1215, 290, 291, 292, 293, 294, 295,
	648, 1188, 0, 296, 1195, 297, 1194, 0, 1205, 298,
	299, 300, 301, 302, 303, 1141, 1174, 1106, 304, 1235,
	1236, 655, 0, 305, 306, 1181, 0, 1162, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1216, 329, 330, 331,
	1165, 1163, 1164, 1171, 1167, 1166, 1170, 332, 333, 334,
	335, 336, 1198, 337, 339, 1192, 1191, 1111, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 1183, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1117, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 1206, 1207, 370,
	1130, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	1190, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1217, 378, 379, 380, 1203, 1204, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1213, 0,
	1140, 391, 0, 392, 393, 394, 395, 396, 1176, 1177,
	1180, 482, 1219, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 1218,
	407, 1185, 1186, 0, 1146, 0, 408, 409, 1220, 1178,
	1221, 410, 411, 412, 1222, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 1214, 1223, 424, 425, 1224, 0, 426, 427, 428,
	429, 430, 431, 434, 1169, 1168, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1225, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 1226, 476, 464, 1108, 4100, 1227, 478, 479,
	480, 1131, 1179, 481, 1193, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 1228, 492, 1229, 1208, 493, 494, 1118, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 1209, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 1189, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 1230, 548,
	549, 550, 551, 552, 1119, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 1172, 575, 576, 558,
	559, 577, 578, 1231, 579, 580, 581, 582, 583, 584,
	585, 1187, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 1234, 594, 595, 596, 597, 1210,
	601, 602, 0, 603, 604, 1105, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 1199,
	1200, 1201, 1202, 0, 622, 0, 614, 615, 616, 1211,
	617, 1212, 1129, 618, 619, 620, 621, 0, 623, 624,
	0, 1112, 625, 626, 627, 629, 630, 628, 631, 1173,
	632, 0, 0, 633, 634, 635, 694, 1196, 1233, 0,
	637, 636, 638, 639, 697, 640, 641, 0, 0, 0,
	0, 642, 643, 698, 644, 645, 646, 1109, 0, 0,
	0, 0, 0, 1151, 1123, 1124, 1125, 1121, 1122, 1134,
	1104, 0, 0, 0, 0, 0, 0, 1102, 1103, 1979,
	279, 281, 280, 282, 283, 284, 285, 1135, 286, 287,
	0, 1133, 0, 0, 0, 1175, 1139, 0, 0, 0,
	288, 289, 1215, 290, 291, 292, 293, 294, 295, 648,
	1188, 0, 296, 1195, 297, 1194, 0, 1205, 298, 299,
	300, 301, 302, 303, 1141, 1174, 1106, 304, 1235, 1236,
	655, 0, 305, 306, 1181, 0, 1162, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 1216, 329, 330, 331, 1165,
	1163, 1164, 1171, 1167, 1166, 1170, 332, 333, 334, 335,
	336, 1198, 337, 339, 1192, 1191, 1111, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 1183, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1117, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 1206, 1207, 370, 1130,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 1190,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1217, 378, 379, 380, 1203, 1204, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1213, 0, 1140,
	391, 0, 392, 393, 394, 395, 396, 1176, 1177, 1180,
	482, 1219, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 1218, 407,
	1185, 1186, 0, 1146, 0, 408, 409, 1220, 1178, 1221,
	410, 411, 412, 1222, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	1214, 1223, 424, 425, 1224, 0, 426, 427, 428, 429,
	430, 431, 434, 1169, 1168, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1225, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 1226, 476, 464, 1108, 278, 1227, 478, 479, 480,
	1131, 1179, 481, 1193, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	1228, 492, 1229, 1208, 493, 494, 1118, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 1209, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 1189, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 1230, 548, 549,
	550, 551, 552, 1119, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 1172, 575, 576, 558, 559,
	577, 578, 1231, 579, 580, 581, 582, 583, 584, 585,
	1187, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 1234, 594, 595, 596, 597, 1210, 601,
	602, 0, 603, 604, 1105, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 1199, 1200,
	1201, 1202, 0, 622, 0, 614, 615, 616, 1211, 617,
	1212, 1129, 618, 619, 620, 621, 0, 623, 624, 0,
	1112, 625, 626, 627, 629, 630, 628, 631, 1173, 632,
	0, 0, 633, 634, 635, 694, 1196, 1233, 3792, 637,
	636, 638, 639, 697, 640, 641, 0, 0, 0, 0,
	642, 643, 698, 644, 645, 646, 1109, 0, 0, 0,
	0, 0, 1151, 1123, 1124, 1125, 1121, 1122, 1134, 1104,
	0, 0, 0, 0, 0, 0, 1102, 1103, 0, 279,
	281, 280, 282, 283, 284, 285, 1135, 286, 287, 0,
	1133, 0, 0, 0, 1175, 1139, 0, 0, 0, 288,
	289, 1215, 290, 291, 292, 293, 294, 295, 648, 1188,
	0, 296, 1195, 297, 1194, 0, 1205, 298, 299, 300,
	301, 302, 303, 1141, 1174, 1106, 304, 1235, 1236, 655,
	0, 305, 306, 1181, 0, 1162, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 1216, 329, 330, 331, 1165, 1163,
	1164, 1171, 1167, 1166, 1170, 332, 333, 334, 335, 336,
	1198, 337, 339, 1192, 1191, 1111, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	1183, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1117, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 1206, 1207, 370, 1130, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 1190, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1217,
	378, 379, 380, 1203, 1204, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1213, 0, 1140, 391,
	0, 392, 393, 394, 395, 396, 1176, 1177, 1180, 482,
	1219, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 1218, 407, 1185,
	1186, 0, 1146, 0, 408, 409, 1220, 1178, 1221, 410,
	411, 412, 1222, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 1214,
	1223, 424, 425, 1224, 0, 426, 427, 428, 429, 430,
	431, 434, 1169, 1168, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1225, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	1226, 476, 464, 1108, 278, 1227, 478, 479, 480, 1131,
	1179, 481, 1193, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 1228,
	492, 1229, 1208, 493, 494, 1118, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 1209, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 1189, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 1230, 548, 549, 550,
	551, 552, 1119, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 1172, 575, 576, 558, 559, 577,
	578, 1231, 579, 580, 581, 582, 583, 584, 585, 1187,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 1234, 594, 595, 596, 597, 1210, 601, 602,
	0, 603, 604, 1105, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 1199, 1200, 1201,
	1202, 0, 622, 0, 614, 615, 616, 1211, 617, 1212,
	1129, 618, 619, 620, 621, 0, 623, 624, 0, 1112,
	625, 626, 627, 629, 630, 628, 631, 1173, 632, 0,
	0, 633, 634, 635, 694, 1196, 1233, 0, 637, 636,
	638, 639, 697, 640, 641, 0, 0, 0, 0, 642,
	643, 698, 644, 645, 646, 1109, 0, 0, 0, 0,
	0, 1151, 1123, 1124, 1125, 1121, 1122, 1134, 1104, 0,
	0, 0, 0, 0, 0, 1102, 1103, 1979, 279, 281,
	280, 282, 283, 284, 285, 1135, 286, 287, 0, 1133,
	0, 0, 0, 1175, 1139, 0, 0, 0, 288, 289,
	1215, 290, 291, 292, 293, 294, 295, 648, 1188, 0,
	296, 1195, 297, 1194, 0, 1205, 298, 299, 300, 301,
	302, 303, 1141, 1174, 1106, 304, 1235, 1236, 655, 0,
	305, 306, 1181, 0, 1162, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1216, 329, 330, 331, 1165, 1163, 1164,
	1171, 1167, 1166, 1170, 332, 333, 334, 335, 336, 1198,
	337, 339, 1192, 1191, 1111, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 1183,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1117, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 1206, 1207, 370, 1130, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 1190, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 2773, 1217, 378,
	379, 380, 1203, 1204, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1213, 0, 1140, 391, 0,
	392, 393, 394, 395, 396, 1176, 1177, 1180, 482, 1219,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 1218, 407, 1185, 1186,
	0, 1146, 0, 408, 409, 1220, 1178, 1221, 410, 411,
	412, 1222, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 1214, 1223,
	424, 425, 1224, 0, 426, 427, 428, 429, 430, 431,
	434, 1169, 1168, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1225, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 1226,
	476, 464, 1108, 278, 1227, 478, 479, 480, 1131, 1179,
	481, 1193, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 1228, 492,
	1229, 1208, 493, 494, 1118, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 1209, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 1189, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 1230, 548, 549, 550, 551,
	552, 1119, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 1172, 575, 576, 558, 559, 577, 578,
	1231, 579, 580, 581, 582, 583, 584, 585, 1187, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 1234, 594, 595, 596, 597, 1210, 601, 602, 0,
	603, 604, 1105, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 1199, 1200, 1201, 1202,
	0, 622, 0, 614, 615, 616, 1211, 617, 1212, 1129,
	618, 619, 620, 621, 0, 623, 624, 0, 1112, 625,
	626, 627, 629, 630, 628, 631, 1173, 632, 0, 0,
	633, 634, 635, 694, 1196, 1233, 0, 637, 636, 638,
	639, 697, 640, 641, 0, 0, 0, 0, 642, 643,
	698, 644, 645, 646, 1109, 0, 0, 0, 0, 0,
	1151, 1123, 1124, 1125, 1121, 1122, 1134, 1104, 0, 0,
	0, 0, 0, 0, 1102, 1103, 0, 279, 281, 280,
	282, 283, 284, 285, 1135, 286, 287, 0, 1133, 0,
	0, 0, 1175, 1139, 0, 0, 0, 288, 289, 1215,
	290, 291, 292, 293, 294, 295, 648, 1188, 0, 296,
	1195, 297, 1194, 0, 1205, 298, 299, 300, 301, 302,
	303, 1141, 1174, 1106, 304, 1235, 1236, 655, 0, 305,
	306, 1181, 0, 1162, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1216, 329, 330, 331, 1165, 1163, 1164, 1171,
	1167, 1166, 1170, 332, 333, 334, 335, 336, 1198, 337,
	339, 1192, 1191, 1111, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 1183, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1117, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 1206, 1207, 370, 1130, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 1190, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1217, 378, 379,
	380, 1203, 1204, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1213, 0, 1140, 391, 0, 392,
	393, 394, 395, 396, 1176, 1177, 1180, 482, 1219, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 1218, 407, 1185, 1186, 0,
	1146, 0, 408, 409, 1220, 1178, 1221, 410, 411, 412,
	1222, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 1214, 1223, 424,
	425, 1224, 0, 426, 427, 428, 429, 430, 431, 434,
	1169, 1168, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1225, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 1226, 476,
	464, 1108, 278, 1227, 478, 479, 480, 1131, 1179, 481,
	1193, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 677, 1228, 492, 1229,
	1208, 493, 494, 1118, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 1209, 512, 682, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	1189, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 1230, 548, 549, 550, 551, 552,
	1119, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 1172, 575, 576, 558, 559, 577, 578, 1231,
	579, 580, 581, 582, 583, 584, 585, 1187, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	1234, 594, 595, 596, 597, 1210, 601, 602, 0, 603,
	604, 1105, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 1199, 1200, 1201, 1202, 0,
	622, 0, 614, 615, 616, 1211, 617, 1212, 1129, 618,
	619, 620, 621, 0, 623, 624, 0, 1112, 625, 626,
	627, 629, 630, 628, 631, 1173, 632, 0, 0, 633,
	634, 635, 694, 1196, 1233, 0, 637, 636, 638, 639,
	697, 640, 641, 0, 0, 0, 0, 642, 643, 698,
	644, 645, 646, 1109, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1104, 0, 0, 0,
	0, 0, 0, 1102, 1103, 0, 0, 0, 0, 0,
	0, 0, 0, 1135, 1908, 0, 2778, 1133, 1151, 1123,
	1124, 1125, 1121, 1122, 1134, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	1175, 1139, 0, 0, 0, 288, 289, 1215, 290, 291,
	292, 293, 294, 295, 648, 1188, 0, 296, 1195, 297,
	1194, 0, 1205, 298, 299, 300, 301, 302, 303, 1141,
	1174, 1106, 304, 1235, 1236, 655, 0, 305, 306, 1181,
	0, 1162, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	1216, 329, 330, 331, 1165, 1163, 1164, 1171, 1167, 1166,
	1170, 332, 333, 334, 335, 336, 1198, 337, 339, 1192,
	1191, 1111, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 1183, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1117,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 1206, 1207, 370, 1130, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 1190, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1217, 378, 379, 380, 1203,
	1204, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1213, 0, 1140, 391, 0, 392, 393, 394,
	395, 396, 1176, 1177, 1180, 482, 1219, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 1218, 407, 1185, 1186, 0, 1146, 0,
	408, 409, 1220, 1178, 1221, 410, 411, 412, 1222, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 1214, 1223, 424, 425, 1224,
	0, 426, 427, 428, 429, 430, 431, 434, 1169, 1168,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1225,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 1226, 476, 464, 1108,
	278, 1227, 478, 479, 480, 1131, 1179, 481, 1193, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 1228, 492, 1229, 1208, 493,
	494, 1118, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 1209, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 1189, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 1230, 548, 549, 550, 551, 552, 1119, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	1172, 575, 576, 558, 559, 577, 578, 1231, 579, 580,
	581, 582, 583, 584, 585, 1187, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 1234, 594,
	595, 596, 597, 1210, 601, 602, 0, 603, 604, 1105,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 1199, 1200, 1201, 1202, 0, 622, 0,
	614, 615, 616, 1211, 617, 1212, 1129, 618, 619, 620,
	621, 0, 623, 624, 0, 1112, 625, 626, 627, 629,
	630, 628, 631, 1173, 632, 0, 0, 633, 634, 635,
	694, 1196, 1233, 0, 637, 636, 638, 639, 697, 640,
	641, 0, 0, 0, 0, 642, 643, 698, 644, 645,
	646, 1109, 0, 0, 0, 2776, 0, 1151, 1123, 1124,
	1125, 1121, 1122, 1134, 1104, 0, 0, 0, 0, 0,
	0, 1102, 1103, 0, 279, 281, 280, 282, 283, 284,
	285, 1135, 286, 287, 0, 1133, 0, 0, 0, 1175,
	1139, 0, 0, 0, 288, 289, 1215, 290, 291, 292,
	293, 294, 295, 648, 1188, 0, 296, 1195, 297, 1194,
	0, 1205, 298, 299, 300, 301, 302, 303, 1141, 1174,
	1106, 304, 1235, 1236, 655, 0, 305, 306, 1181, 0,
	1162, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 1216,
	329, 330, 331, 1165, 1163, 1164, 1171, 1167, 1166, 1170,
	332, 333, 334, 335, 336, 1198, 337, 339, 1192, 1191,
	1111, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 1183, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1117, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	1206, 1207, 370, 1130, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 1190, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1217, 378, 379, 380, 1203, 1204,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1213, 0, 1140, 391, 0, 392, 393, 394, 395,
	396, 1176, 1177, 1180, 482, 1219, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 1218, 407, 1185, 1186, 0, 1146, 0, 408,
	409, 1220, 1178, 1221, 410, 411, 412, 1222, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 1214, 1223, 424, 425, 1224, 0,
	426, 427, 428, 429, 430, 431, 434, 1169, 1168, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1225, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 1226, 476, 464, 1108, 278,
	1227, 478, 479, 480, 1131, 1179, 481, 1193, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 1228, 492, 1229, 1208, 493, 494,
	1118, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 1209, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 1189, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 1230, 548, 549, 550, 551, 552, 1119, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 1172,
	575, 576, 558, 559, 577, 578, 1231, 579, 580, 581,
	582, 583, 584, 585, 1187, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 1234, 594, 595,
	596, 597, 1210, 601, 602, 0, 603, 604, 1105, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 1199, 1200, 1201, 1202, 0, 622, 0, 614,
	615, 616, 1211, 617, 1212, 1129, 618, 619, 620, 621,
	0, 623, 624, 0, 1112, 625, 626, 627, 629, 630,
	628, 631, 1173, 632, 0, 0, 633, 634, 635, 694,
	1196, 1233, 0, 637, 636, 638, 639, 697, 640, 641,
	0, 0, 0, 0, 642, 643, 698, 644, 645, 646,
	1109, 0, 0, 0, 2764, 0, 1151, 1123, 1124, 1125,
	1121, 1122, 1134, 1104, 0, 0, 0, 0, 0, 0,
	1102, 1103, 0, 279, 281, 280, 282, 283, 284, 285,
	1135, 286, 287, 0, 1133, 0, 0, 0, 1175, 1139,
	0, 0, 0, 288, 289, 1215, 290, 291, 292, 293,
	294, 295, 648, 1188, 0, 296, 1195, 297, 1194, 0,
	1205, 298, 299, 300, 301, 302, 303, 1141, 1174, 1106,
	304, 1235, 1236, 655, 0, 305, 306, 1181, 0, 1162,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1216, 329,
	330, 331, 1165, 1163, 1164, 1171, 1167, 1166, 1170, 332,
	333, 334, 335, 336, 1198, 337, 339, 1192, 1191, 1111,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 1183, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1117, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 1206,
	1207, 370, 1130, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 1190, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1217, 378, 379, 380, 1203, 1204, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1213, 0, 1140, 391, 0, 392, 393, 394, 395, 396,
	1176, 1177, 1180, 482, 1219, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 1218, 407, 1185, 1186, 0, 1146, 0, 408, 409,
	1220, 1178, 1221, 410, 411, 412, 1222, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 1214, 1223, 424, 425, 1224, 0, 426,
	427, 428, 429, 430, 431, 434, 1169, 1168, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1225, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 1226, 476, 464, 1108, 278, 1227,
	478, 479, 480, 1131, 1179, 481, 1193, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 1228, 492, 1229, 1208, 493, 494, 1118,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	1209, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 1189, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	1230, 548, 549, 550, 551, 552, 1119, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 1172, 575,
	576, 558, 559, 577, 578, 1231, 579, 580, 581, 582,
	583, 584, 585, 1187, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 1234, 594, 595, 596,
	597, 1210, 601, 602, 0, 603, 604, 1105, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 1199, 1200, 1201, 1202, 0, 622, 0, 614, 615,
	616, 1211, 617, 1212, 1129, 618, 619, 620, 621, 0,
	623, 624, 0, 1112, 625, 626, 627, 629, 630, 628,
	631, 1173, 632, 0, 0, 633, 634, 635, 694, 1196,
	1233, 0, 637, 636, 638, 639, 697, 640, 641, 0,
	0, 0, 0, 642, 643, 698, 644, 645, 646, 1109,
	0, 0, 0, 2752, 0, 1151, 1123, 1124, 1125, 1121,
	1122, 1134, 1104, 0, 0, 0, 0, 0, 0, 1102,
	1103, 0, 279, 281, 280, 282, 283, 284, 285, 1135,
	286, 287, 0, 1133, 0, 0, 0, 1175, 1139, 0,
	0, 0, 288, 289, 1215, 290, 291, 292, 293, 294,
	295, 648, 1188, 0, 296, 1195, 297, 1194, 0, 1205,
	298, 299, 300, 301, 302, 303, 1141, 1174, 1106, 304,
	1235, 1236, 655, 0, 305, 306, 1181, 0, 1162, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1216, 329, 330,
	331, 1165, 1163, 1164, 1171, 1167, 1166, 1170, 332, 333,
	334, 335, 336, 1198, 337, 339, 1192, 1191, 1111, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 1183, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1117, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 1206, 1207,
	370, 1130, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 1190, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1217, 378, 379, 380, 1203, 1204, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1213,
	0, 1140, 391, 0, 392, 393, 394, 395, 396, 1176,
	1177, 1180, 482, 1219, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	1218, 407, 1185, 1186, 0, 1146, 0, 408, 409, 1220,
	1178, 1221, 410, 411, 412, 1222, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 1214, 1223, 424, 425, 1224, 0, 426, 427,
	428, 429, 430, 431, 434, 1169, 1168, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1225, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 1226, 476, 464, 1108, 278, 1227, 478,
	479, 480, 1131, 1179, 481, 1193, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 677, 1228, 492, 1229, 1208, 493, 494, 1118, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 1209,
	512, 682, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 1189, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 1230,
	548, 549, 550, 551, 552, 1119, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 1172, 575, 576,
	558, 559, 577, 578, 1231, 579, 580, 581, 582, 583,
	584, 585, 1187, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 1234, 594, 595, 596, 597,
	1210, 601, 602, 0, 603, 604, 1105, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	1199, 1200, 1201, 1202, 0, 622, 0, 614, 615, 616,
	1211, 617, 1212, 1129, 618, 619, 620, 621, 0, 623,
	624, 0, 1112, 625, 626, 627, 629, 630, 628, 631,
	1173, 632, 0, 0, 633, 634, 635, 694, 1196, 1233,
	0, 637, 636, 638, 639, 697, 640, 641, 0, 0,
	0, 0, 642, 643, 698, 644, 645, 646, 1109, 0,
	0, 0, 2750, 0, 2741, 2748, 1124, 1125, 1121, 1122,
	1134, 1104, 0, 0, 0, 0, 0, 0, 1102, 1103,
	0, 279, 281, 280, 282, 283, 284, 285, 1135, 286,
	287, 0, 1133, 0, 0, 0, 1175, 1139, 0, 0,
	0, 288, 289, 1215, 290, 291, 292, 293, 294, 295,
	648, 1188, 0, 296, 1195, 297, 1194, 0, 1205, 298,
	299, 300, 301, 302, 303, 1141, 1174, 1106, 304, 1235,
	1236, 655, 0, 305, 306, 1181, 0, 1162, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1216, 329, 330, 331,
	1165, 1163, 1164, 1171, 1167, 1166, 1170, 332, 333, 334,
	335, 336, 1198, 2744, 339, 1192, 1191, 1111, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 1183, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1117, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 1206, 1207, 370,
	1130, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	1190, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1217, 378, 379, 380, 1203, 1204, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1213, 0,
	1140, 391, 0, 392, 393, 394, 2745, 396, 1176, 1177,
	1180, 482, 1219, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 1218,
	407, 1185, 1186, 0, 1146, 0, 408, 409, 1220, 1178,
	1221, 410, 411, 412, 1222, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 1214, 1223, 424, 425, 1224, 0, 426, 427, 428,
	429, 430, 431, 434, 1169, 1168, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 2746, 444, 2743,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1225, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 1226, 476, 464, 1108, 278, 1227, 478, 479,
	480, 1131, 1179, 481, 1193, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 1228, 492, 1229, 1208, 493, 494, 1118, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 1209, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 1189, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 1230, 548,
	549, 550, 551, 552, 1119, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 2747, 0,
	570, 571, 569, 572, 573, 574, 1172, 575, 576, 558,
	559, 577, 578, 1231, 579, 580, 581, 582, 583, 584,
	585, 1187, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 1234, 594, 595, 596, 597, 1210,
	601, 602, 0, 603, 604, 1105, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 1199,
	1200, 1201, 1202, 0, 622, 0, 614, 615, 616, 1211,
	617, 1212, 1129, 618, 619, 620, 621, 0, 623, 624,
	0, 1112, 625, 626, 627, 629, 630, 628, 631, 1173,
	632, 0, 0, 633, 634, 635, 694, 1196, 1233, 0,
	637, 636, 638, 639, 697, 640, 641, 0, 0, 0,
	0, 642, 643, 698, 644, 2742, 646, 1109, 0, 0,
	0, 2738, 0, 2741, 2748, 1124, 1125, 1121, 1122, 1134,
	1104, 0, 0, 0, 0, 0, 0, 1102, 1103, 0,
	279, 281, 280, 282, 283, 284, 285, 1135, 286, 287,
	0, 1133, 0, 0, 0, 1175, 1139, 0, 0, 0,
	288, 289, 1215, 290, 291, 292, 293, 294, 295, 648,
	1188, 0, 296, 1195, 297, 1194, 0, 1205, 298, 299,
	300, 301, 302, 303, 1141, 1174, 1106, 304, 1235, 1236,
	655, 0, 305, 306, 1181, 0, 1162, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 1216, 329, 330, 331, 1165,
	1163, 1164, 1171, 1167, 1166, 1170, 332, 333, 334, 335,
	336, 1198, 2744, 339, 1192, 1191, 1111, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 1183, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1117, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 1206, 1207, 370, 1130,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 1190,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1217, 378, 379, 380, 1203, 1204, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1213, 0, 1140,
	391, 0, 392, 393, 394, 2745, 396, 1176, 1177, 1180,
	482, 1219, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 1218, 407,
	1185, 1186, 0, 1146, 0, 408, 409, 1220, 1178, 1221,
	410, 411, 412, 1222, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	1214, 1223, 424, 425, 1224, 0, 426, 427, 428, 429,
	430, 431, 434, 1169, 1168, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 2746, 444, 2743, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1225, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 1226, 476, 464, 1108, 278, 1227, 478, 479, 480,
	1131, 1179, 481, 1193, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	1228, 492, 1229, 1208, 493, 494, 1118, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 1209, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 1189, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 1230, 548, 549,
	550, 551, 552, 1119, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 2747, 0, 570,
	571, 569, 572, 573, 574, 1172, 575, 576, 558, 559,
	577, 578, 1231, 579, 580, 581, 582, 583, 584, 585,
	1187, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 1234, 594, 595, 596, 597, 1210, 601,
	602, 0, 603, 604, 1105, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 1199, 1200,
	1201, 1202, 0, 622, 0, 614, 615, 616, 1211, 617,
	1212, 1129, 618, 619, 620, 621, 0, 623, 624, 0,
	1112, 625, 626, 627, 629, 630, 628, 631, 1173, 632,
	0, 0, 633, 634, 635, 694, 1196, 1233, 0, 637,
	636, 638, 639, 697, 640, 641, 0, 0, 0, 0,
	642, 643, 698, 644, 2742, 646, 1109, 0, 0, 0,
	0, 0, 1151, 1123, 1124, 1125, 1121, 1122, 1134, 1104,
	0, 0, 0, 0, 0, 0, 1102, 1103, 0, 279,
	281, 280, 282, 283, 284, 285, 1135, 286, 287, 0,
	1133, 0, 0, 0, 1175, 1139, 0, 0, 0, 288,
	289, 1215, 290, 291, 292, 293, 294, 295, 648, 1188,
	0, 296, 1195, 297, 1194, 0, 1205, 298, 299, 300,
	301, 302, 303, 1141, 1174, 1106, 304, 1235, 1236, 655,
	0, 305, 306, 1181, 0, 1162, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 1216, 329, 330, 331, 1165, 1163,
	1164, 1171, 1167, 1166, 1170, 332, 333, 334, 335, 336,
	1198, 337, 339, 1192, 1191, 1111, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	1183, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1117, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 1206, 1207, 370, 1130, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 1190, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1217,
	378, 379, 380, 1203, 1204, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1213, 0, 1140, 391,
	0, 392, 393, 394, 395, 396, 1176, 1177, 1180, 482,
	1219, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 1218, 407, 1185,
	1186, 0, 1146, 0, 408, 409, 1220, 1178, 1221, 410,
	411, 412, 1222, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 1214,
	1223, 424, 425, 1224, 0, 426, 427, 428, 429, 430,
	431, 434, 1169, 1168, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1225, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	1226, 476, 464, 1108, 278, 1227, 478, 479, 480, 1131,
	1179, 481, 1193, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 1228,
	492, 1229, 1208, 493, 494, 1118, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 1209, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 1189, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 1230, 548, 549, 550,
	551, 552, 1119, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 1172, 575, 576, 558, 559, 577,
	578, 1231, 579, 580, 581, 582, 583, 584, 585, 1187,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 1234, 594, 595, 596, 597, 1210, 601, 602,
	0, 603, 604, 1105, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 1199, 1200, 1201,
	1202, 0, 622, 0, 614, 615, 616, 1211, 617, 1212,
	1129, 618, 619, 620, 621, 0, 623, 624, 0, 1112,
	625, 626, 627, 629, 630, 628, 631, 1173, 632, 0,
	0, 633, 634, 635, 694, 1196, 1233, 0, 637, 636,
	638, 639, 697, 640, 641, 0, 0, 0, 0, 642,
	643, 698, 644, 645, 646, 1109, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1104, 0,
	0, 0, 0, 0, 0, 1102, 1103, 0, 0, 0,
	0, 0, 0, 1916, 0, 1135, 0, 0, 0, 1133,
	1151, 1123, 1124, 1125, 1121, 1122, 1134, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 2493, 286, 287, 0, 0, 0,
	0, 0, 1175, 1139, 0, 0, 0, 288, 289, 1215,
	290, 291, 292, 293, 294, 295, 648, 1188, 0, 296,
	1195, 297, 1194, 0, 1205, 298, 299, 300, 301, 302,
	303, 1141, 1174, 1106, 304, 1235, 1236, 655, 0, 305,
	306, 1181, 0, 1162, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1216, 329, 330, 331, 1165, 1163, 1164, 1171,
	1167, 1166, 1170, 332, 333, 334, 335, 336, 1198, 337,
	339, 1192, 1191, 1111, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 1183, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1117, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 1206, 1207, 370, 1130, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 1190, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1217, 378, 379,
	380, 1203, 1204, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1213, 0, 1140, 391, 0, 392,
	393, 394, 395, 396, 1176, 1177, 1180, 482, 1219, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 1218, 407, 1185, 1186, 0,
	1146, 0, 408, 409, 1220, 1178, 1221, 410, 411, 412,
	1222, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 1214, 1223, 424,
	425, 1224, 0, 426, 427, 428, 429, 430, 431, 434,
	1169, 1168, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1225, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 1226, 476,
	464, 1108, 278, 1227, 478, 479, 480, 1131, 1179, 481,
	1193, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 677, 1228, 492, 1229,
	1208, 493, 494, 1118, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 1209, 512, 682, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	1189, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 1230, 548, 549, 550, 551, 552,
	1119, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 1172, 575, 576, 558, 559, 577, 578, 1231,
	579, 580, 581, 582, 583, 584, 585, 1187, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	1234, 594, 595, 596, 597, 1210, 601, 602, 0, 603,
	604, 1105, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 1199, 1200, 1201, 1202, 0,
	622, 0, 614, 615, 616, 1211, 617, 1212, 1129, 618,
	619, 620, 621, 0, 623, 624, 0, 1112, 625, 626,
	627, 629, 630, 628, 631, 1173, 632, 0, 0, 633,
	634, 635, 694, 1196, 1233, 0, 637, 636, 638, 639,
	697, 640, 641, 0, 0, 0, 0, 642, 643, 698,
	644, 645, 646, 1109, 0, 0, 0, 2455, 0, 1151,
	1123, 1124, 1125, 1121, 1122, 1134, 1104, 0, 0, 0,
	0, 0, 0, 1102, 1103, 0, 279, 281, 280, 282,
	283, 284, 285, 1135, 286, 287, 0, 1133, 0, 0,
	0, 1175, 1139, 0, 0, 0, 288, 289, 1215, 290,
	291, 292, 293, 294, 295, 648, 1188, 0, 296, 1195,
	297, 1194, 0, 1205, 298, 299, 300, 301, 302, 303,
	1141, 1174, 1106, 304, 1235, 1236, 655, 0, 305, 306,
	1181, 0, 1162, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1216, 329, 330, 331, 1165, 1163, 1164, 1171, 1167,
	1166, 1170, 332, 333, 334, 335, 336, 1198, 337, 339,
	1192, 1191, 1111, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 1183, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1117, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 1206, 1207, 370, 1130, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 1190, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1217, 378, 379, 380,
	1203, 1204, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1213, 0, 1140, 391, 0, 392, 393,
	394, 395, 396, 1176, 1177, 1180, 482, 1219, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 1218, 407, 1185, 1186, 0, 1146,
	0, 408, 409, 1220, 1178, 1221, 410, 411, 412, 1222,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 1214, 1223, 424, 425,
	1224, 0, 426, 427, 428, 429, 430, 431, 434, 1169,
	1168, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1225, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 1226, 476, 464,
	1108, 278, 1227, 478, 479, 480, 1131, 1179, 481, 1193,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 1228, 492, 1229, 1208,
	493, 494, 1118, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 1209, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 1189,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 1230, 548, 549, 550, 551, 552, 1119,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 1172, 575, 576, 558, 559, 577, 578, 1231, 579,
	580, 581, 582, 583, 584, 585, 1187, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 1234,
	594, 595, 596, 597, 1210, 601, 602, 0, 603, 604,
	1105, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 1199, 1200, 1201, 1202, 0, 622,
	0, 614, 615, 616, 1211, 617, 1212, 1129, 618, 619,
	620, 621, 0, 623, 624, 0, 1112, 625, 626, 627,
	629, 630, 628, 631, 1173, 632, 0, 0, 633, 634,
	635, 694, 1196, 1233, 0, 637, 636, 638, 639, 697,
	640, 641, 0, 0, 0, 0, 642, 643, 698, 644,
	645, 646, 1109, 0, 0, 0, 2428, 0, 1151, 1123,
	1124, 1125, 1121, 1122, 1134, 1104, 0, 0, 0, 0,
	0, 0, 1102, 1103, 0, 279, 281, 280, 282, 283,
	284, 285, 1135, 286, 287, 0, 1133, 0, 0, 0,
	1175, 1139, 0, 0, 0, 288, 289, 1215, 290, 291,
	292, 293, 294, 295, 648, 1188, 0, 296, 1195, 297,
	1194, 0, 1205, 298, 299, 300, 301, 302, 303, 1141,
	1174, 1106, 304, 1235, 1236, 655, 0, 305, 306, 1181,
	0, 1162, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	1216, 329, 330, 331, 1165, 1163, 1164, 1171, 1167, 1166,
	1170, 332, 333, 334, 335, 336, 1198, 337, 339, 1192,
	1191, 1111, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 1183, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1117,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 1206, 1207, 370, 1130, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 1190, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1217, 378, 379, 380, 1203,
	1204, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1213, 0, 1140, 391, 0, 392, 393, 394,
	395, 396, 1176, 1177, 1180, 482, 1219, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 1218, 407, 1185, 1186, 0, 1146, 0,
	408, 409, 1220, 1178, 1221, 410, 411, 412, 1222, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 1214, 1223, 424, 425, 1224,
	0, 426, 427, 428, 429, 430, 431, 434, 1169, 1168,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1225,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 1226, 476, 464, 1108,
	278, 1227, 478, 479, 480, 1131, 1179, 481, 1193, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 1228, 492, 1229, 1208, 493,
	494, 1118, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 1209, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 1189, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 1230, 548, 549, 550, 551, 552, 1119, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	1172, 575, 576, 558, 559, 577, 578, 1231, 579, 580,
	581, 582, 583, 584, 585, 1187, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 1234, 594,
	595, 596, 597, 1210, 601, 602, 0, 603, 604, 1105,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 1199, 1200, 1201, 1202, 0, 622, 0,
	614, 615, 616, 1211, 617, 1212, 1129, 618, 619, 620,
	621, 0, 623, 624, 0, 1112, 625, 626, 627, 629,
	630, 628, 631, 1173, 632, 0, 0, 633, 634, 635,
	694, 1196, 1233, 0, 637, 636, 638, 639, 697, 640,
	641, 0, 0, 0, 0, 642, 643, 698, 644, 645,
	646, 1109, 0, 0, 0, 1754, 0, 1151, 1123, 1124,
	1125, 1121, 1122, 1134, 1104, 0, 0, 0, 0, 0,
	0, 1102, 1103, 0, 279, 281, 280, 282, 283, 284,
	285, 1135, 286, 287, 0, 1133, 0, 0, 0, 1175,
	1139, 0, 0, 0, 288, 289, 1215, 290, 291, 292,
	293, 294, 295, 648, 1188, 0, 296, 1195, 297, 1194,
	0, 1205, 298, 299, 300, 301, 302, 303, 1141, 1174,
	1106, 304, 1235, 1236, 655, 0, 305, 306, 1181, 0,
	1162, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 1216,
	329, 330, 331, 1165, 1163, 1164, 1171, 1167, 1166, 1170,
	332, 333, 334, 335, 336, 1198, 337, 339, 1192, 1191,
	1111, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 1183, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1117, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	1206, 1207, 370, 1130, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 1190, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1217, 378, 379, 380, 1203, 1204,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1213, 0, 1140, 391, 0, 392, 393, 394, 395,
	396, 1176, 1177, 1180, 482, 1219, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 1218, 407, 1185, 1186, 0, 1146, 0, 408,
	409, 1220, 1178, 1221, 410, 411, 412, 1222, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 1214, 1223, 424, 425, 1224, 0,
	426, 427, 428, 429, 430, 431, 434, 1169, 1168, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1225, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 1226, 476, 464, 1108, 278,
	1227, 478, 479, 480, 1131, 1179, 481, 1193, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 1228, 492, 1229, 1208, 493, 494,
	1118, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 1209, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 1189, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 1230, 548, 549, 550, 551, 552, 1119, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 1172,
	575, 576, 558, 559, 577, 578, 1231, 579, 580, 581,
	582, 583, 584, 585, 1187, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 1234, 594, 595,
	596, 597, 1210, 601, 602, 0, 603, 604, 1105, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 1199, 1200, 1201, 1202, 0, 622, 0, 614,
	615, 616, 1211, 617, 1212, 1129, 618, 619, 620, 621,
	0, 623, 624, 0, 1112, 625, 626, 627, 629, 630,
	628, 631, 1173, 632, 0, 0, 633, 634, 635, 694,
	1196, 1233, 0, 637, 636, 638, 639, 697, 640, 641,
	0, 0, 0, 0, 642, 643, 698, 644, 645, 646,
	1109, 0, 0, 0, 1683, 0, 1151, 1123, 1124, 1125,
	1121, 1122, 1134, 1104, 0, 0, 0, 0, 0, 0,
	1102, 1103, 0, 279, 281, 280, 282, 283, 284, 285,
	1135, 286, 287, 0, 1133, 0, 0, 0, 1175, 1139,
	0, 0, 0, 288, 289, 1215, 290, 291, 292, 293,
	294, 295, 648, 1188, 0, 296, 1195, 297, 1194, 0,
	1205, 298, 299, 300, 301, 302, 303, 1141, 1174, 1106,
	304, 1235, 1236, 655, 0, 305, 306, 1181, 0, 1162,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1216, 329,
	330, 331, 1165, 1163, 1164, 1171, 1167, 1166, 1170, 332,
	333, 334, 335, 336, 1198, 337, 339, 1192, 1191, 1111,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 1183, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1117, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 1206,
	1207, 370, 1130, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 1190, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1217, 378, 379, 380, 1203, 1204, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1213, 0, 1140, 391, 0, 392, 393, 394, 395, 396,
	1176, 1177, 1180, 482, 1219, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 1218, 407, 1185, 1186, 0, 1146, 0, 408, 409,
	1220, 1178, 1221, 410, 411, 412, 1222, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 1214, 1223, 424, 425, 1224, 0, 426,
	427, 428, 429, 430, 431, 434, 1169, 1168, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1225, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 1226, 476, 464, 1108, 278, 1227,
	478, 479, 480, 1131, 1179, 481, 1193, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 1228, 492, 1229, 1208, 493, 494, 1118,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	1209, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 1189, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	1230, 548, 549, 550, 551, 552, 1119, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 1172, 575,
	576, 558, 559, 577, 578, 1231, 579, 580, 581, 582,
	583, 584, 585, 1187, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 1234, 594, 595, 596,
	597, 1210, 601, 602, 0, 603, 604, 1105, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 1199, 1200, 1201, 1202, 0, 622, 0, 614, 615,
	616, 1211, 617, 1212, 1129, 618, 619, 620, 621, 0,
	623, 624, 0, 1112, 625, 626, 627, 629, 630, 628,
	631, 1173, 632, 0, 0, 633, 634, 635, 694, 1196,
	1233, 0, 637, 636, 638, 639, 697, 640, 641, 0,
	0, 0, 0, 642, 643, 698, 644, 645, 646, 1109,
	0, 0, 0, 1678, 0, 1151, 1123, 1124, 1125, 1121,
	1122, 1134, 1104, 0, 0, 0, 0, 0, 0, 1102,
	1103, 0, 279, 281, 280, 282, 283, 284, 285, 1135,
	286, 287, 0, 1133, 0, 0, 0, 1175, 1139, 0,
	0, 0, 288, 289, 1215, 290, 291, 292, 293, 294,
	295, 648, 1188, 0, 296, 1195, 297, 1194, 0, 1205,
	298, 299, 300, 301, 302, 303, 1141, 1174, 1106, 304,
	1235, 1236, 655, 0, 305, 306, 1181, 0, 1162, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1216, 329, 330,
	331, 1165, 1163, 1164, 1171, 1167, 1166, 1170, 332, 333,
	334, 335, 336, 1198, 337, 339, 1192, 1191, 1111, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 1183, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1117, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 1206, 1207,
	370, 1130, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 1190, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1217, 378, 379, 380, 1203, 1204, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1213,
	0, 1140, 391, 0, 392, 393, 394, 395, 396, 1176,
	1177, 1180, 482, 1219, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	1218, 407, 1185, 1186, 0, 1146, 0, 408, 409, 1220,
	1178, 1221, 410, 411, 412, 1222, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 1214, 1223, 424, 425, 1224, 0, 426, 427,
	428, 429, 430, 431, 434, 1169, 1168, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1225, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 1226, 476, 464, 1108, 278, 1227, 478,
	479, 480, 1131, 1179, 481, 1193, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 677, 1228, 492, 1229, 1208, 493, 494, 1118, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 1209,
	512, 682, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 1189, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 1230,
	548, 549, 550, 551, 552, 1119, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 1172, 575, 576,
	558, 559, 577, 578, 1231, 579, 580, 581, 582, 583,
	584, 585, 1187, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 1234, 594, 595, 596, 597,
	1210, 601, 602, 0, 603, 604, 1105, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	1199, 1200, 1201, 1202, 0, 622, 0, 614, 615, 616,
	1211, 617, 1212, 1129, 618, 619, 620, 621, 0, 623,
	624, 0, 1112, 625, 626, 627, 629, 630, 628, 631,
	1173, 632, 0, 0, 633, 634, 635, 694, 1196, 1233,
	0, 637, 636, 638, 639, 697, 640, 641, 0, 0,
	0, 0, 642, 643, 698, 644, 645, 646, 1109, 0,
	0, 0, 1665, 0, 1151, 1123, 1124, 1125, 1121, 1122,
	1134, 1104, 0, 0, 0, 0, 0, 0, 1102, 1103,
	0, 279, 281, 280, 282, 283, 284, 285, 1135, 286,
	287, 0, 1133, 0, 0, 0, 1175, 1139, 0, 0,
	0, 288, 289, 1215, 290, 291, 292, 293, 294, 295,
	648, 1188, 0, 296, 1195, 297, 1194, 0, 1205, 298,
	299, 300, 301, 302, 303, 1141, 1174, 1106, 304, 1235,
	1236, 655, 0, 305, 306, 1181, 0, 1162, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1216, 329, 330, 331,
	1165, 1163, 1164, 1171, 1167, 1166, 1170, 332, 333, 334,
	335, 336, 1198, 337, 339, 1192, 1191, 1111, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 1183, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1117, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 1206, 1207, 370,
	1130, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	1190, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1217, 378, 379, 380, 1203, 1204, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1213, 0,
	1140, 391, 0, 392, 393, 394, 395, 396, 1176, 1177,
	1180, 482, 1219, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 1218,
	407, 1185, 1186, 0, 1146, 0, 408, 409, 1220, 1178,
	1221, 410, 411, 412, 1222, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 1214, 1223, 424, 425, 1224, 0, 426, 427, 428,
	429, 430, 431, 434, 1169, 1168, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1225, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 1226, 476, 464, 1108, 278, 1227, 478, 479,
	480, 1131, 1179, 481, 1193, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 1228, 492, 1229, 1208, 493, 494, 1118, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 1209, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 1189, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 1230, 548,
	549, 550, 551, 552, 1119, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 1172, 575, 576, 558,
	559, 577, 578, 1231, 579, 580, 581, 582, 583, 584,
	585, 1187, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 1234, 594, 595, 596, 597, 1210,
	601, 602, 0, 603, 604, 1105, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 1199,
	1200, 1201, 1202, 0, 622, 0, 614, 615, 616, 1211,
	617, 1212, 1129, 618, 619, 620, 621, 0, 623, 624,
	0, 1112, 625, 626, 627, 629, 630, 628, 631, 1173,
	632, 0, 0, 633, 634, 635, 694, 1196, 1233, 0,
	637, 636, 638, 639, 697, 640, 641, 0, 0, 0,
	0, 642, 643, 698, 644, 645, 646, 1109, 0, 0,
	0, 1660, 0, 1151, 1123, 1124, 1125, 1121, 1122, 1134,
	1104, 0, 0, 0, 0, 0, 0, 1102, 1103, 0,
	279, 281, 280, 282, 283, 284, 285, 1135, 286, 287,
	0, 1133, 0, 0, 0, 1175, 1139, 0, 0, 0,
	288, 289, 1215, 290, 291, 292, 293, 294, 295, 648,
	1188, 0, 296, 1195, 297, 1194, 0, 1205, 298, 299,
	300, 301, 302, 303, 1141, 1174, 1106, 304, 1235, 1236,
	655, 0, 305, 306, 1181, 0, 1162, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 1216, 329, 330, 331, 1165,
	1163, 1164, 1171, 1167, 1166, 1170, 332, 333, 334, 335,
	336, 1198, 337, 339, 1192, 1191, 1111, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 1183, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1117, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 1206, 1207, 370, 1130,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 1190,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1217, 378, 379, 380, 1203, 1204, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1213, 0, 1140,
	391, 0, 392, 393, 394, 395, 396, 1176, 1177, 1180,
	482, 1219, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 1218, 407,
	1185, 1186, 0, 1146, 0, 408, 409, 1220, 1178, 1221,
	410, 411, 412, 1222, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	1214, 1223, 424, 425, 1224, 0, 426, 427, 428, 429,
	430, 431, 434, 1169, 1168, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1225, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 1226, 476, 464, 1108, 278, 1227, 478, 479, 480,
	1131, 1179, 481, 1193, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	1228, 492, 1229, 1208, 493, 494, 1118, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 1209, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 1189, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 1230, 548, 549,
	550, 551, 552, 1119, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 1172, 575, 576, 558, 559,
	577, 578, 1231, 579, 580, 581, 582, 583, 584, 585,
	1187, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 1234, 594, 595, 596, 597, 1210, 601,
	602, 0, 603, 604, 1105, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 1199, 1200,
	1201, 1202, 0, 622, 0, 614, 615, 616, 1211, 617,
	1212, 1129, 618, 619, 620, 621, 0, 623, 624, 0,
	1112, 625, 626, 627, 629, 630, 628, 631, 1173, 632,
	0, 0, 633, 634, 635, 694, 1196, 1233, 0, 637,
	636, 638, 639, 697, 640, 641, 0, 0, 0, 0,
	642, 643, 698, 644, 645, 646, 1109, 0, 0, 0,
	1561, 0, 1151, 1123, 1124, 1125, 1121, 1122, 1134, 1104,
	0, 0, 0, 0, 0, 0, 1102, 1103, 0, 279,
	281, 280, 282, 283, 284, 285, 1135, 286, 287, 0,
	1133, 0, 0, 0, 1175, 1139, 0, 0, 0, 288,
	289, 1215, 290, 291, 292, 293, 294, 295, 648, 1188,
	0, 296, 1195, 297, 1194, 0, 1205, 298, 299, 300,
	301, 302, 303, 1141, 1174, 1106, 304, 1235, 1236, 655,
	0, 305, 306, 1181, 0, 1162, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 1216, 329, 330, 331, 1165, 1163,
	1164, 1171, 1167, 1166, 1170, 332, 333, 334, 335, 336,
	1198, 337, 339, 1192, 1191, 1111, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	1183, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1117, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 1206, 1207, 370, 1130, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 1190, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1217,
	378, 379, 380, 1203, 1204, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1213, 0, 1140, 391,
	0, 392, 393, 394, 395, 396, 1560, 1177, 1180, 482,
	1219, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 1218, 407, 1185,
	1186, 0, 1146, 0, 408, 409, 1220, 1178, 1221, 410,
	411, 412, 1222, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 1214,
	1223, 424, 425, 1224, 0, 426, 427, 428, 429, 430,
	431, 434, 1169, 1168, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1225, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	1226, 476, 464, 1108, 278, 1227, 478, 479, 480, 1131,
	1179, 481, 1193, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 1228,
	492, 1229, 1208, 493, 494, 1118, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 1209, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 1189, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 1230, 548, 549, 550,
	551, 552, 1119, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 1172, 575, 576, 558, 559, 577,
	578, 1231, 579, 580, 581, 582, 583, 584, 585, 1187,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 1234, 594, 595, 596, 597, 1210, 601, 602,
	0, 603, 604, 1105, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 1199, 1200, 1201,
	1202, 0, 622, 0, 614, 615, 616, 1211, 617, 1212,
	1129, 618, 619, 620, 621, 0, 623, 624, 0, 1112,
	625, 626, 627, 629, 630, 628, 631, 1173, 632, 0,
	0, 633, 634, 635, 694, 1196, 1233, 0, 637, 636,
	638, 639, 697, 640, 641, 0, 0, 0, 0, 642,
	643, 698, 644, 645, 646, 1109, 0, 0, 0, 1555,
	0, 1151, 1123, 1124, 1125, 1121, 1122, 1134, 1104, 0,
	0, 0, 0, 0, 0, 1102, 1103, 0, 279, 281,
	280, 282, 283, 284, 285, 1135, 286, 287, 0, 1133,
	0, 0, 0, 1175, 1139, 0, 0, 0, 288, 289,
	1215, 290, 291, 292, 293, 294, 295, 648, 1188, 0,
	296, 1195, 297, 1194, 0, 1205, 298, 299, 300, 301,
	302, 303, 1141, 1174, 1106, 304, 1235, 1236, 655, 0,
	305, 306, 1181, 0, 1162, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1216, 329, 330, 331, 1165, 1163, 1164,
	1171, 1167, 1166, 1170, 332, 333, 334, 335, 336, 1198,
	337, 339, 1192, 1191, 1111, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 1183,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1117, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 1206, 1207, 370, 1130, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 1190, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1217, 378,
	379, 380, 1203, 1204, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1213, 0, 1140, 391, 0,
	392, 393, 394, 395, 396, 1554, 1177, 1180, 482, 1219,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 1218, 407, 1185, 1186,
	0, 1146, 0, 408, 409, 1220, 1178, 1221, 410, 411,
	412, 1222, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 1214, 1223,
	424, 425, 1224, 0, 426, 427, 428, 429, 430, 431,
	434, 1169, 1168, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1225, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 1226,
	476, 464, 1108, 278, 1227, 478, 479, 480, 1131, 1179,
	481, 1193, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 1228, 492,
	1229, 1208, 493, 494, 1118, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 1209, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 1189, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 1230, 548, 549, 550, 551,
	552, 1119, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 1172, 575, 576, 558, 559, 577, 578,
	1231, 579, 580, 581, 582, 583, 584, 585, 1187, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 1234, 594, 595, 596, 597, 1210, 601, 602, 0,
	603, 604, 1105, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 1199, 1200, 1201, 1202,
	0, 622, 0, 614, 615, 616, 1211, 617, 1212, 1129,
	618, 619, 620, 621, 0, 623, 624, 0, 1112, 625,
	626, 627, 629, 630, 628, 631, 1173, 632, 0, 0,
	633, 634, 635, 694, 1196, 1233, 0, 637, 636, 638,
	639, 697, 640, 641, 0, 0, 0, 0, 642, 643,
	698, 644, 645, 646, 1109, 0, 0, 0, 1548, 0,
	1151, 1123, 1124, 1125, 1121, 1122, 1134, 1104, 0, 0,
	0, 0, 0, 0, 1102, 1103, 0, 279, 281, 280,
	282, 283, 284, 285, 1135, 286, 287, 0, 1133, 0,
	0, 0, 1175, 1139, 0, 0, 0, 288, 289, 1215,
	290, 291, 292, 293, 294, 295, 648, 1188, 0, 296,
	1195, 297, 1194, 0, 1205, 298, 299, 300, 301, 302,
	303, 1141, 1174, 1106, 304, 1235, 1236, 655, 0, 305,
	306, 1181, 0, 1162, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1216, 329, 330, 331, 1165, 1163, 1164, 1171,
	1167, 1166, 1170, 332, 333, 334, 335, 336, 1198, 337,
	339, 1192, 1191, 1111, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 1183, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1117, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 1206, 1207, 370, 1130, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 1190, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1217, 378, 379,
	380, 1203, 1204, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1213, 0, 1140, 391, 0, 392,
	393, 394, 395, 396, 1176, 1177, 1180, 482, 1219, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 1218, 407, 1185, 1186, 0,
	1146, 0, 408, 409, 1220, 1178, 1221, 410, 411, 412,
	1222, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 1214, 1223, 424,
	425, 1224, 0, 426, 427, 428, 429, 430, 431, 434,
	1169, 1168, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1225, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 1226, 476,
	464, 1108, 278, 1227, 478, 479, 480, 1131, 1179, 481,
	1193, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 677, 1228, 492, 1229,
	1208, 493, 494, 1118, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 1209, 512, 682, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	1189, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 1230, 548, 549, 550, 551, 552,
	1119, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 1172, 575, 576, 558, 559, 577, 578, 1231,
	579, 580, 581, 582, 583, 584, 585, 1187, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	1234, 594, 595, 596, 597, 1210, 601, 602, 0, 603,
	604, 1105, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 1199, 1200, 1201, 1202, 0,
	622, 0, 614, 615, 616, 1211, 617, 1212, 1129, 618,
	619, 620, 621, 0, 623, 624, 0, 1112, 625, 626,
	627, 629, 630, 628, 631, 1173, 632, 0, 0, 633,
	634, 635, 694, 1196, 1233, 0, 637, 636, 638, 639,
	697, 640, 641, 0, 0, 0, 0, 642, 643, 698,
	644, 645, 646, 1109, 0, 0, 0, 1510, 0, 1151,
	1123, 1124, 1125, 1121, 1122, 1134, 1104, 0, 0, 0,
	0, 0, 0, 1102, 1103, 0, 279, 281, 280, 282,
	283, 284, 285, 1135, 286, 287, 0, 1133, 0, 0,
	0, 1175, 1139, 0, 0, 0, 288, 289, 1215, 290,
	291, 292, 293, 294, 295, 648, 1188, 0, 296, 1195,
	297, 1194, 0, 1205, 298, 299, 300, 301, 302, 303,
	1141, 1174, 1106, 304, 1235, 1236, 655, 0, 305, 306,
	1181, 0, 1162, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1216, 329, 330, 331, 1165, 1163, 1164, 1171, 1167,
	1166, 1170, 332, 333, 334, 335, 336, 1198, 337, 339,
	1192, 1191, 1111, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 1183, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1117, 359, 360, 361, 363, 365, 362, 1514, 366, 367,
	368, 369, 1206, 1207, 370, 1130, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 1190, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1217, 378, 379, 380,
	1203, 1204, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1213, 0, 1140, 391, 0, 392, 393,
	394, 395, 396, 1176, 1177, 1180, 482, 1219, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 1218, 407, 1185, 1186, 0, 1146,
	0, 408, 409, 1220, 1178, 1221, 410, 411, 412, 1222,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 1214, 1223, 424, 425,
	1224, 0, 426, 427, 428, 429, 430, 431, 434, 1169,
	1168, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1225, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 1226, 476, 464,
	1108, 278, 1227, 478, 479, 480, 1131, 1179, 481, 1193,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 1228, 492, 1229, 1208,
	493, 494, 1118, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 1209, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 1189,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 1515, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 1230, 548, 549, 550, 551, 552, 1119,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 1172, 575, 576, 558, 559, 577, 578, 1231, 579,
	580, 581, 582, 583, 584, 585, 1187, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 1234,
	594, 595, 596, 597, 1210, 601, 602, 0, 603, 604,
	1105, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	1513, 612, 0, 613, 1199, 1200, 1201, 1202, 0, 622,
	0, 614, 615, 616, 1211, 617, 1212, 1129, 618, 619,
	620, 621, 0, 623, 624, 0, 1112, 625, 626, 627,
	629, 630, 628, 631, 1173, 632, 0, 0, 633, 634,
	635, 694, 1196, 1233, 0, 637, 636, 638, 639, 697,
	640, 641, 0, 0, 0, 0, 642, 643, 698, 644,
	645, 646, 1109, 0, 0, 0, 1359, 0, 1151, 1123,
	1124, 1125, 1121, 1122, 1134, 1104, 0, 0, 0, 0,
	0, 0, 1102, 1103, 0, 279, 281, 280, 282, 283,
	284, 285, 1135, 286, 287, 0, 1133, 0, 0, 0,
	1175, 1139, 0, 0, 0, 288, 289, 1215, 290, 291,
	292, 293, 294, 295, 648, 1188, 0, 296, 1195, 297,
	1194, 0, 1205, 298, 299, 300, 301, 302, 303, 1141,
	1174, 1106, 304, 1235, 1236, 655, 0, 305, 306, 1181,
	0, 1162, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	1216, 329, 330, 331, 1165, 1163, 1164, 1171, 1167, 1166,
	1170, 332, 333, 334, 335, 336, 1198, 337, 339, 1192,
	1191, 1111, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 1183, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1117,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 1206, 1207, 370, 1130, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 1190, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1217, 378, 379, 380, 1203,
	1204, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1213, 0, 1140, 391, 0, 392, 393, 394,
	395, 396, 1176, 1177, 1180, 482, 1219, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 1218, 407, 1185, 1186, 0, 1146, 0,
	408, 409, 1220, 1178, 1221, 410, 411, 412, 1222, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 1214, 1223, 424, 425, 1224,
	0, 426, 427, 428, 429, 430, 431, 434, 1169, 1168,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1225,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 1226, 476, 464, 1108,
	278, 1227, 478, 479, 480, 1131, 1179, 481, 1193, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 1228, 492, 1229, 1208, 493,
	494, 1118, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 1209, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 1189, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 1230, 548, 549, 550, 551, 552, 1119, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	1172, 575, 576, 558, 559, 577, 578, 1231, 579, 580,
	581, 582, 583, 584, 585, 1187, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 1234, 594,
	595, 596, 597, 1210, 601, 602, 0, 603, 604, 1105,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 1199, 1200, 1201, 1202, 0, 622, 0,
	614, 615, 616, 1211, 617, 1212, 1129, 618, 619, 620,
	621, 0, 623, 624, 0, 1112, 625, 626, 627, 629,
	630, 628, 631, 1173, 632, 0, 0, 633, 634, 635,
	694, 1196, 1233, 0, 637, 636, 638, 639, 697, 640,
	641, 0, 0, 0, 0, 642, 643, 698, 644, 645,
	646, 1109, 0, 0, 0, 0, 0, 1151, 1123, 1124,
	1125, 1121, 1122, 1134, 1104, 0, 0, 0, 0, 0,
	0, 1102, 1103, 0, 279, 281, 280, 282, 283, 284,
	285, 1135, 286, 287, 0, 1133, 0, 0, 0, 1175,
	1139, 0, 0, 0, 288, 289, 1215, 290, 291, 292,
	293, 294, 295, 648, 1188, 0, 296, 1195, 297, 1194,
	0, 1205, 298, 299, 300, 301, 302, 303, 1141, 1174,
	1106, 304, 1235, 1236, 655, 0, 305, 306, 1181, 0,
	1162, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 1216,
	329, 330, 331, 1165, 1163, 1164, 1171, 1167, 1166, 1170,
	332, 333, 334, 335, 336, 1198, 337, 339, 1192, 1191,
	1111, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 1183, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1117, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	1206, 1207, 370, 1130, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 1190, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1217, 378, 379, 380, 1203, 1204,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1213, 0, 1140, 391, 0, 392, 393, 394, 395,
	396, 1176, 1177, 1180, 482, 1219, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 1218, 407, 1185, 1186, 0, 1146, 0, 408,
	409, 1220, 1178, 1221, 410, 411, 412, 1222, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 1214, 1223, 424, 425, 1224, 0,
	426, 427, 428, 429, 430, 431, 434, 1169, 1168, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1225, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 1226, 476, 464, 1108, 278,
	1227, 478, 479, 480, 1131, 1179, 481, 1193, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 1228, 492, 1229, 1208, 493, 494,
	1118, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 1209, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 1189, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 1230, 548, 549, 550, 551, 552, 1119, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 1172,
	575, 576, 558, 559, 577, 578, 1231, 579, 580, 581,
	582, 583, 584, 585, 1187, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 1234, 594, 595,
	596, 597, 1210, 601, 602, 0, 603, 604, 1105, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 1199, 1200, 1201, 1202, 0, 622, 0, 614,
	615, 616, 1211, 617, 1212, 1129, 618, 619, 620, 621,
	0, 623, 624, 0, 1112, 625, 626, 627, 629, 630,
	628, 631, 1173, 632, 0, 0, 633, 634, 635, 694,
	1196, 1233, 0, 637, 636, 638, 639, 697, 640, 641,
	0, 0, 0, 0, 642, 643, 698, 644, 645, 646,
	1109, 0, 0, 0, 0, 0, 1151, 1123, 1124, 1125,
	1121, 1122, 1134, 1104, 0, 0, 0, 0, 0, 0,
	1102, 1103, 0, 279, 281, 280, 282, 283, 284, 285,
	1135, 286, 287, 0, 1133, 0, 0, 0, 1175, 1139,
	0, 0, 0, 288, 289, 1215, 290, 291, 292, 293,
	294, 295, 648, 1188, 0, 296, 1195, 297, 1194, 0,
	1205, 298, 299, 300, 301, 302, 303, 1141, 1174, 1106,
	304, 1235, 1236, 655, 0, 305, 306, 1181, 0, 1162,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1216, 329,
	330, 4847, 1165, 1163, 1164, 1171, 1167, 1166, 1170, 332,
	333, 334, 335, 336, 1198, 337, 339, 1192, 1191, 1111,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 1183, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1117, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 1206,
	1207, 370, 1130, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 1190, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1217, 378, 379, 380, 1203, 1204, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1213, 0, 1140, 391, 0, 392, 393, 394, 395, 396,
	1176, 1177, 1180, 482, 1219, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 1218, 407, 1185, 1186, 0, 1146, 0, 408, 409,
	1220, 1178, 1221, 410, 411, 412, 1222, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 1214, 1223, 424, 425, 1224, 0, 426,
	427, 428, 429, 430, 431, 434, 1169, 1168, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1225, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 1226, 476, 464, 1108, 278, 1227,
	478, 479, 480, 1131, 1179, 481, 1193, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 1228, 492, 1229, 1208, 493, 494, 1118,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	1209, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 1189, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	1230, 548, 549, 550, 551, 552, 1119, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 1172, 575,
	576, 558, 559, 577, 578, 1231, 579, 580, 581, 582,
	583, 584, 585, 1187, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 1234, 594, 595, 596,
	597, 1210, 601, 602, 0, 603, 604, 1105, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 1199, 1200, 1201, 1202, 0, 622, 0, 614, 615,
	616, 1211, 617, 1212, 1129, 618, 619, 620, 621, 0,
	4846, 624, 0, 1112, 625, 626, 627, 629, 630, 628,
	631, 1173, 632, 0, 0, 633, 634, 635, 694, 1196,
	1233, 0, 637, 636, 638, 639, 697, 640, 641, 0,
	0, 0, 0, 642, 643, 698, 644, 645, 646, 1109,
	0, 0, 0, 0, 0, 1151, 1123, 1124, 1125, 1121,
	1122, 1134, 1104, 0, 0, 0, 0, 0, 0, 1102,
	1103, 0, 279, 281, 280, 282, 283, 284, 285, 1135,
	286, 287, 0, 1133, 0, 0, 0, 1175, 1139, 0,
	0, 0, 288, 289, 1215, 290, 291, 292, 293, 294,
	295, 4845, 1188, 0, 296, 1195, 297, 1194, 0, 1205,
	298, 299, 300, 301, 302, 303, 1141, 1174, 1106, 304,
	1235, 1236, 655, 0, 305, 306, 1181, 0, 1162, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1216, 329, 330,
	4847, 1165, 1163, 1164, 1171, 1167, 1166, 1170, 332, 333,
	334, 335, 336, 1198, 337, 339, 1192, 1191, 1111, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 1183, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1117, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 1206, 1207,
	370, 1130, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 1190, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1217, 378, 379, 380, 1203, 1204, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1213,
	0, 1140, 391, 0, 392, 393, 394, 395, 396, 1176,
	1177, 1180, 482, 1219, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	1218, 407, 1185, 1186, 0, 1146, 0, 408, 409, 1220,
	1178, 1221, 410, 411, 412, 1222, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 1214, 1223, 424, 425, 1224, 0, 426, 427,
	428, 429, 430, 431, 434, 1169, 1168, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1225, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 1226, 476, 464, 1108, 278, 1227, 478,
	479, 480, 1131, 1179, 481, 1193, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 677, 1228, 492, 1229, 1208, 493, 494, 1118, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 1209,
	512, 682, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 1189, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 1230,
	548, 549, 550, 551, 552, 1119, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 1172, 575, 576,
	558, 559, 577, 578, 1231, 579, 580, 581, 582, 583,
	584, 585, 1187, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 1234, 594, 595, 596, 597,
	1210, 601, 602, 0, 603, 604, 1105, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	1199, 1200, 1201, 1202, 0, 622, 0, 614, 615, 616,
	1211, 617, 1212, 1129, 618, 619, 620, 621, 0, 4846,
	624, 0, 1112, 625, 626, 627, 629, 630, 628, 631,
	1173, 632, 0, 0, 633, 634, 635, 694, 1196, 1233,
	0, 637, 636, 638, 639, 697, 640, 641, 0, 0,
	0, 0, 642, 643, 698, 644, 645, 646, 1109, 0,
	0, 0, 0, 0, 1151, 1123, 1124, 1125, 1121, 1122,
	1134, 1104, 0, 0, 0, 0, 0, 0, 1102, 1103,
	0, 279, 281, 280, 282, 283, 284, 285, 1135, 286,
	287, 0, 1133, 0, 0, 0, 1175, 1139, 0, 0,
	0, 288, 289, 1215, 290, 291, 292, 293, 294, 295,
	648, 1188, 0, 296, 1195, 297, 1194, 0, 1205, 298,
	299, 300, 301, 302, 303, 1141, 1174, 1106, 304, 1235,
	1236, 655, 0, 305, 306, 1181, 0, 1162, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1216, 329, 4452, 331,
	1165, 1163, 1164, 1171, 1167, 1166, 1170, 332, 333, 334,
	335, 336, 1198, 337, 339, 1192, 1191, 1111, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 1183, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1117, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 1206, 1207, 370,
	1130, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	1190, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1217, 378, 379, 380, 1203, 1204, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1213, 0,
	4453, 391, 0, 392, 393, 394, 395, 396, 1176, 1177,
	1180, 482, 1219, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 1218,
	407, 1185, 1186, 0, 1146, 0, 408, 409, 1220, 1178,
	1221, 410, 411, 412, 1222, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 1214, 1223, 424, 425, 1224, 0, 426, 427, 428,
	429, 430, 431, 434, 1169, 1168, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1225, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 1226, 476, 464, 1108, 278, 1227, 478, 479,
	480, 1131, 1179, 481, 1193, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 1228, 492, 1229, 1208, 493, 494, 1118, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 1209, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 1189, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 1230, 548,
	549, 550, 4451, 552, 1119, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 1172, 575, 576, 558,
	559, 577, 578, 1231, 579, 580, 581, 582, 583, 584,
	585, 1187, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 1234, 594, 595, 596, 597, 1210,
	601, 602, 0, 603, 604, 1105, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 1199,
	1200, 1201, 1202, 0, 622, 0, 614, 615, 616, 1211,
	617, 1212, 1129, 618, 619, 620, 621, 0, 623, 624,
	0, 1112, 625, 626, 627, 629, 630, 628, 631, 1173,
	632, 0, 0, 633, 634, 635, 694, 1196, 1233, 0,
	637, 636, 638, 639, 697, 640, 641, 0, 0, 0,
	0, 642, 643, 698, 644, 645, 646, 1109, 0, 0,
	0, 0, 0, 1151, 1123, 1124, 1125, 3240, 3241, 1134,
	1104, 0, 0, 0, 0, 0, 0, 1102, 1103, 0,
	279, 281, 280, 282, 283, 284, 285, 1135, 286, 287,
	0, 1133, 0, 0, 0, 1175, 1139, 0, 0, 0,
	288, 289, 1215, 290, 291, 292, 293, 294, 295, 648,
	1188, 0, 296, 1195, 297, 1194, 0, 1205, 298, 299,
	300, 301, 302, 303, 1141, 1174, 1106, 304, 1235, 1236,
	655, 0, 305, 306, 1181, 0, 1162, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 1216, 329, 330, 331, 1165,
	1163, 1164, 1171, 1167, 1166, 1170, 332, 333, 334, 335,
	336, 1198, 337, 339, 1192, 1191, 1111, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 1183, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1117, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 1206, 1207, 370, 1130,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 1190,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1217, 378, 379, 380, 1203, 1204, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1213, 0, 1140,
	391, 0, 392, 393, 394, 395, 396, 1176, 1177, 1180,
	482, 1219, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 1218, 407,
	1185, 1186, 0, 1146, 0, 408, 409, 1220, 1178, 1221,
	410, 411, 412, 1222, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	1214, 1223, 424, 425, 1224, 0, 426, 427, 428, 429,
	430, 431, 434, 1169, 1168, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1225, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 1226, 476, 464, 1108, 278, 1227, 478, 479, 480,
	1131, 1179, 481, 1193, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	1228, 492, 1229, 1208, 493, 494, 1118, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 1209, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 1189, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 1230, 548, 549,
	550, 551, 552, 1119, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 1172, 575, 576, 558, 559,
	577, 578, 1231, 579, 580, 581, 582, 583, 584, 585,
	1187, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 1234, 594, 595, 596, 597, 1210, 601,
	602, 0, 603, 604, 1105, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 1199, 1200,
	1201, 1202, 0, 622, 0, 614, 615, 616, 1211, 617,
	1212, 1129, 618, 619, 620, 621, 0, 623, 624, 0,
	1112, 625, 626, 627, 629, 630, 628, 631, 1173, 632,
	0, 0, 633, 634, 635, 694, 1196, 1233, 0, 637,
	636, 638, 639, 697, 640, 641, 0, 0, 0, 0,
	642, 643, 698, 644, 645, 646, 1109, 0, 0, 0,
	0, 0, 1151, 1123, 1124, 1125, 3238, 3239, 1134, 1104,
	0, 0, 0, 0, 0, 0, 1102, 1103, 0, 279,
	281, 280, 282, 283, 284, 285, 1135, 286, 287, 0,
	1133, 0, 0, 0, 1175, 1139, 0, 0, 0, 288,
	289, 1215, 290, 291, 292, 293, 294, 295, 648, 1188,
	0, 296, 1195, 297, 1194, 0, 1205, 298, 299, 300,
	301, 302, 303, 1141, 1174, 1106, 304, 1235, 1236, 655,
	0, 305, 306, 1181, 0, 1162, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 1216, 329, 330, 331, 1165, 1163,
	1164, 1171, 1167, 1166, 1170, 332, 333, 334, 335, 336,
	1198, 337, 339, 1192, 1191, 1111, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	1183, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1117, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 1206, 1207, 370, 1130, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 1190, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1217,
	378, 379, 380, 1203, 1204, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1213, 0, 1140, 391,
	0, 392, 393, 394, 395, 396, 1176, 1177, 1180, 482,
	1219, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 1218, 407, 1185,
	1186, 0, 1146, 0, 408, 409, 1220, 1178, 1221, 410,
	411, 412, 1222, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 1214,
	1223, 424, 425, 1224, 0, 426, 427, 428, 429, 430,
	431, 434, 1169, 1168, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1225, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	1226, 476, 464, 1108, 278, 1227, 478, 479, 480, 1131,
	1179, 481, 1193, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 1228,
	492, 1229, 1208, 493, 494, 1118, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 1209, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 1189, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 1230, 548, 549, 550,
	551, 552, 1119, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 1172, 575, 576, 558, 559, 577,
	578, 1231, 579, 580, 581, 582, 583, 584, 585, 1187,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 1234, 594, 595, 596, 597, 1210, 601, 602,
	0, 603, 604, 1105, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 1199, 1200, 1201,
	1202, 0, 622, 0, 614, 615, 616, 1211, 617, 1212,
	1129, 618, 619, 620, 621, 0, 623, 624, 0, 1112,
	625, 626, 627, 629, 630, 628, 631, 1173, 632, 0,
	0, 633, 634, 635, 694, 1196, 1233, 0, 637, 636,
	638, 639, 697, 640, 641, 0, 0, 0, 0, 642,
	643, 698, 644, 645, 646, 1109, 0, 0, 0, 0,
	0, 1151, 1123, 1124, 1125, 1121, 1122, 1134, 1104, 0,
	0, 0, 0, 0, 0, 1102, 1103, 0, 279, 281,
	280, 282, 283, 284, 285, 1135, 286, 287, 0, 1133,
	0, 0, 0, 1175, 1139, 0, 0, 0, 288, 289,
	1215, 290, 291, 292, 293, 294, 295, 648, 1188, 0,
	296, 1195, 297, 1194, 0, 1205, 298, 299, 300, 301,
	302, 303, 1141, 1174, 1106, 304, 1235, 1236, 655, 0,
	305, 306, 1181, 0, 1162, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1216, 329, 330, 331, 1165, 1163, 1164,
	1171, 1167, 1166, 1170, 332, 333, 334, 335, 336, 1198,
	337, 339, 1192, 1191, 1111, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 1183,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1117, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 1206, 1207, 370, 1130, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 1190, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1217, 378,
	379, 380, 1203, 1204, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1213, 0, 1140, 391, 0,
	392, 393, 394, 395, 396, 1176, 1177, 1180, 482, 1219,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 1218, 407, 1185, 1186,
	0, 1146, 0, 408, 409, 1220, 1178, 1221, 410, 411,
	412, 1222, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 1214, 1223,
	424, 425, 1224, 0, 426, 427, 428, 429, 430, 431,
	434, 1169, 1168, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1225, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 1226,
	476, 464, 1108, 278, 1227, 478, 479, 480, 1131, 1179,
	481, 1193, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 1228, 492,
	1229, 1208, 493, 494, 1118, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 1209, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 1189, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 1230, 548, 549, 550, 551,
	552, 1119, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 1172, 575, 576, 558, 559, 577, 578,
	1231, 579, 580, 581, 582, 583, 584, 585, 1187, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 1234, 594, 595, 596, 597, 1210, 601, 602, 0,
	603, 604, 1105, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 1199, 1200, 1201, 1202,
	0, 622, 0, 614, 615, 616, 1211, 617, 1212, 1129,
	618, 619, 620, 621, 0, 623, 624, 0, 1112, 625,
	626, 627, 629, 630, 628, 631, 1173, 632, 0, 0,
	633, 634, 635, 694, 1196, 1233, 0, 637, 636, 638,
	639, 697, 640, 641, 0, 0, 0, 0, 642, 643,
	698, 644, 645, 646, 1109, 0, 0, 0, 0, 0,
	1151, 1123, 1124, 1125, 1121, 1122, 1134, 1104, 0, 0,
	0, 0, 0, 0, 2501, 2502, 0, 279, 281, 280,
	282, 283, 284, 285, 1135, 286, 287, 0, 1133, 0,
	0, 0, 1175, 1139, 0, 0, 0, 288, 289, 1215,
	290, 291, 292, 293, 294, 295, 648, 1188, 0, 296,
	1195, 297, 1194, 0, 1205, 298, 299, 300, 301, 302,
	303, 1141, 1174, 0, 304, 1235, 1236, 655, 0, 305,
	306, 1181, 0, 1162, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1216, 329, 330, 331, 1165, 1163, 1164, 1171,
	1167, 1166, 1170, 332, 333, 334, 335, 336, 1198, 337,
	339, 1192, 1191, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 1183, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1117, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 1206, 1207, 370, 1130, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 1190, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1217, 378, 379,
	380, 1203, 1204, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1213, 0, 1140, 391, 0, 392,
	393, 394, 395, 396, 1176, 1177, 1180, 482, 1219, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 1218, 407, 1185, 1186, 0,
	1146, 0, 408, 409, 1220, 1178, 1221, 410, 411, 412,
	1222, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 1214, 1223, 424,
	425, 1224, 0, 426, 427, 428, 429, 430, 431, 434,
	1169, 1168, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1225, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 1226, 476,
	464, 0, 278, 1227, 478, 479, 480, 1131, 1179, 481,
	1193, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 677, 1228, 492, 1229,
	1208, 493, 494, 1118, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 1209, 512, 682, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	1189, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 1230, 548, 549, 550, 551, 552,
	1119, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 1172, 575, 576, 558, 559, 577, 578, 1231,
	579, 580, 581, 582, 583, 584, 585, 1187, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	1234, 594, 595, 596, 597, 1210, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 1199, 1200, 1201, 1202, 0,
	622, 0, 614, 615, 616, 1211, 617, 1212, 1129, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 1173, 632, 0, 0, 633,
	634, 635, 694, 1196, 1233, 0, 637, 636, 638, 639,
	697, 640, 641, 0, 0, 0, 0, 642, 643, 698,
	644, 645, 646, 0, 0, 0, 0, 0, 0, 1151,
	1123, 1124, 1125, 1121, 1122, 1134, 2760, 0, 0, 0,
	0, 0, 0, 2758, 2759, 0, 279, 281, 280, 282,
	283, 284, 285, 1135, 286, 287, 0, 1133, 0, 0,
	0, 1175, 1139, 0, 0, 0, 288, 289, 1215, 290,
	291, 292, 293, 294, 295, 648, 1188, 0, 296, 1195,
	297, 1194, 0, 1205, 298, 299, 300, 301, 302, 303,
	1141, 1174, 0, 304, 1235, 1236, 655, 0, 305, 306,
	1181, 0, 1162, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1216, 329, 330, 331, 1165, 1163, 1164, 1171, 1167,
	1166, 1170, 332, 333, 334, 335, 336, 1198, 337, 339,
	1192, 1191, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 1183, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1117, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 1206, 1207, 370, 1130, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 1190, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1217, 378, 379, 380,
	1203, 1204, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1213, 0, 1140, 391, 0, 392, 393,
	394, 395, 396, 1176, 1177, 1180, 482, 1219, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 1218, 407, 1185, 1186, 0, 1146,
	0, 408, 409, 1220, 1178, 1221, 410, 411, 412, 1222,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 1214, 1223, 424, 425,
	1224, 0, 426, 427, 428, 429, 430, 431, 434, 1169,
	1168, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1225, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 1226, 476, 464,
	0, 278, 1227, 478, 479, 480, 1131, 1179, 481, 1193,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 1228, 492, 1229, 1208,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 1209, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 1189,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 1230, 548, 549, 550, 551, 552, 3233,
	3234, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 1172, 575, 576, 558, 559, 577, 578, 1231, 579,
	580, 581, 582, 583, 584, 585, 1187, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 1234,
	594, 595, 596, 597, 1210, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 1199, 1200, 1201, 1202, 0, 622,
	0, 614, 615, 616, 1211, 617, 1212, 1129, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 1173, 632, 0, 0, 633, 634,
	635, 694, 1196, 1233, 0, 637, 636, 638, 639, 697,
	640, 641, 0, 0, 0, 0, 642, 643, 698, 644,
	645, 646, 0, 0, 0, 0, 0, 0, 1151, 1123,
	1124, 1125, 1121, 1122, 1134, 0, 0, 0, 0, 0,
	0, 0, 2163, 2164, 0, 279, 281, 280, 282, 283,
	284, 285, 1135, 286, 287, 0, 1133, 0, 0, 0,
	1175, 1139, 0, 0, 0, 288, 289, 1215, 290, 291,
	292, 293, 294, 295, 0, 1188, 0, 296, 1195, 297,
	1194, 0, 1205, 298, 299, 300, 301, 302, 303, 1141,
	1174, 1106, 304, 1235, 1236, 655, 0, 305, 306, 1181,
	0, 1162, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	1216, 329, 330, 4847, 1165, 1163, 1164, 1171, 1167, 1166,
	1170, 332, 333, 334, 335, 336, 1198, 337, 339, 1192,
	1191, 1111, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 1183, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1117,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 1206, 1207, 370, 1130, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 1190, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1217, 378, 379, 380, 1203,
	1204, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1213, 0, 1140, 391, 0, 392, 393, 394,
	395, 396, 1176, 1177, 1180, 482, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 1218, 407, 1185, 1186, 0, 1146, 0,
	408, 409, 0, 1178, 0, 410, 411, 412, 1222, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 1214, 1223, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 1169, 1168,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1225,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 1226, 476, 464, 1108,
	278, 0, 478, 479, 480, 1131, 1179, 481, 1193, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 1228, 492, 1229, 1208, 493,
	494, 1118, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 1209, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 1189, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 1230, 548, 549, 550, 551, 552, 1119, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	1172, 575, 576, 558, 559, 577, 578, 0, 579, 580,
	581, 582, 583, 584, 585, 1187, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 1234, 594,
	595, 596, 597, 1210, 601, 602, 0, 603, 604, 1105,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 1199, 1200, 1201, 1202, 0, 622, 0,
	614, 615, 616, 1211, 617, 1212, 1129, 618, 619, 620,
	621, 0, 4846, 624, 0, 1112, 625, 626, 627, 629,
	630, 628, 631, 1173, 632, 0, 0, 633, 634, 635,
	694, 1196, 1233, 0, 637, 636, 638, 639, 697, 640,
	641, 0, 0, 0, 0, 642, 643, 698, 644, 645,
	646, 0, 0, 0, 0, 1095, 0, 1273, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1102, 1103, 0, 279, 281, 280, 282, 283, 284,
	285, 1135, 286, 287, 0, 1133, 0, 0, 0, 1175,
	0, 0, 0, 0, 288, 289, 1215, 290, 291, 292,
	293, 294, 295, 648, 649, 0, 296, 650, 297, 651,
	0, 652, 298, 299, 300, 301, 302, 303, 0, 1174,
	0, 304, 653, 654, 655, 0, 305, 306, 1181, 0,
	1162, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 1216,
	329, 330, 331, 1165, 1163, 1164, 1171, 1167, 1166, 1170,
	332, 333, 334, 335, 336, 0, 337, 339, 657, 658,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 659, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	1206, 1207, 370, 0, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 662, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1217, 378, 379, 380, 663, 664,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1213, 0, 666, 391, 0, 392, 393, 394, 395,
	396, 1176, 1177, 1180, 482, 1219, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 1218, 407, 670, 671, 0, 672, 0, 408,
	409, 1220, 1178, 1221, 410, 411, 412, 1222, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 1259, 420,
	422, 421, 0, 423, 1214, 1223, 424, 425, 1224, 0,
	426, 427, 428, 429, 430, 431, 434, 1169, 1168, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1225, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 1226, 476, 464, 0, 278,
	1227, 478, 479, 480, 0, 1179, 481, 676, 483, 484,
	0, 0, 485, 0, 0, 1265, 487, 488, 489, 0,
	0, 490, 491, 677, 1228, 492, 1229, 1208, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 1209, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 683, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 1230, 548, 549, 550, 551, 552, 684, 1267, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 238, 570, 571, 569, 572, 573, 574, 1172,
	575, 576, 558, 559, 577, 578, 1231, 579, 580, 581,
	582, 583, 584, 585, 685, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 686, 594, 595,
	596, 597, 1210, 601, 602, 0, 603, 604, 0, 600,
	591, 240, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 688, 689, 690, 691, 0, 622, 0, 614,
	615, 616, 1211, 617, 1212, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 1173, 632, 0, 0, 633, 634, 635, 1649,
	695, 696, 0, 637, 636, 638, 639, 697, 640, 641,
	0, 0, 0, 232, 642, 643, 698, 644, 645, 646,
	1273, 0, 233, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 1263, 0,
	2003, 0, 1175, 0, 0, 0, 0, 288, 289, 1215,
	290, 291, 292, 293, 294, 295, 648, 649, 0, 296,
	650, 297, 651, 0, 652, 298, 299, 300, 301, 302,
	303, 0, 1174, 0, 304, 653, 654, 655, 0, 305,
	306, 1181, 0, 1162, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1216, 329, 330, 331, 1165, 1163, 1164, 1171,
	1167, 1166, 1170, 332, 333, 334, 335, 336, 0, 337,
	339, 657, 658, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 659, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 1206, 1207, 370, 0, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 662, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1217, 378, 379,
	380, 663, 664, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1213, 0, 666, 391, 0, 392,
	393, 394, 395, 396, 1176, 1177, 1180, 482, 1219, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 1218, 407, 670, 671, 0,
	672, 0, 408, 409, 1220, 1178, 1221, 410, 411, 412,
	1222, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 1259, 420, 422, 421, 0, 423, 1214, 1223, 424,
	425, 1224, 0, 426, 427, 428, 429, 430, 431, 434,
	1169, 1168, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1225, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 1226, 476,
	464, 0, 278, 1227, 478, 479, 480, 0, 1179, 481,
	676, 483, 484, 0, 0, 485, 0, 0, 1265, 487,
	488, 489, 0, 0, 490, 491, 677, 1228, 492, 1229,
	1208, 493, 494, 486, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 1209, 512, 682, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	683, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 1230, 548, 549, 550, 551, 552,
	684, 1267, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 238, 570, 571, 569, 572,
	573, 574, 1172, 575, 576, 558, 559, 577, 578, 1231,
	579, 580, 581, 582, 583, 584, 585, 685, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	686, 594, 595, 596, 597, 1210, 601, 602, 0, 603,
	604, 0, 600, 591, 240, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 688, 689, 690, 691, 0,
	622, 0, 614, 615, 616, 1211, 617, 1212, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 1173, 632, 0, 0, 633,
	634, 635, 1649, 695, 696, 0, 637, 636, 638, 639,
	697, 640, 641, 0, 0, 0, 232, 642, 643, 698,
	644, 645, 646, 0, 0, 233, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3397, 0, 1273, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1263, 0, 2003, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 1175,
	0, 0, 0, 0, 288, 289, 1215, 290, 291, 292,
	293, 294, 295, 648, 649, 0, 296, 650, 297, 651,
	0, 652, 298, 299, 300, 301, 302, 303, 0, 1174,
	0, 304, 653, 654, 655, 0, 305, 306, 1181, 0,
	1162, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 1216,
	329, 330, 331, 1165, 1163, 1164, 1171, 1167, 1166, 1170,
	332, 333, 334, 335, 336, 0, 337, 339, 657, 658,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 659, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	1206, 1207, 370, 0, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 662, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1217, 378, 379, 380, 663, 664,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1213, 0, 666, 391, 0, 392, 393, 394, 395,
	396, 1176, 1177, 1180, 482, 1219, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 1218, 407, 670, 671, 0, 672, 0, 408,
	409, 1220, 1178, 1221, 410, 411, 412, 1222, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 1259, 420,
	422, 421, 0, 423, 1214, 1223, 424, 425, 1224, 0,
	426, 427, 428, 429, 430, 431, 434, 1169, 1168, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1225, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 1226, 476, 464, 0, 278,
	1227, 478, 479, 480, 0, 1179, 481, 676, 483, 484,
	0, 0, 485, 0, 0, 1265, 487, 488, 489, 0,
	0, 490, 491, 677, 1228, 492, 1229, 1208, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 1209, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 683, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 1230, 548, 549, 550, 551, 552, 684, 1267, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 1172,
	575, 576, 558, 559, 577, 578, 1231, 579, 580, 581,
	582, 583, 584, 585, 685, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 686, 594, 595,
	596, 597, 1210, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 688, 689, 690, 691, 0, 622, 0, 614,
	615, 616, 1211, 617, 1212, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 1173, 632, 0, 0, 633, 634, 635, 694,
	695, 696, 0, 637, 636, 638, 639, 697, 640, 641,
	0, 0, 0, 0, 642, 643, 698, 644, 645, 646,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1255, 0, 1273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1263, 0,
	1261, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 1175, 0, 0, 0,
	0, 288, 289, 1215, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 0, 652, 298,
	299, 300, 301, 302, 303, 0, 1174, 0, 304, 653,
	654, 655, 0, 305, 306, 1181, 0, 1162, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1216, 329, 330, 331,
	1165, 1163, 1164, 1171, 1167, 1166, 1170, 332, 333, 334,
	335, 336, 0, 337, 339, 657, 658, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 1206, 1207, 370,
	0, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	662, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1217, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1213, 0,
	666, 391, 0, 392, 393, 394, 395, 396, 1176, 1177,
	1180, 482, 1219, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 1218,
	407, 670, 671, 0, 672, 0, 408, 409, 1220, 1178,
	1221, 410, 411, 412, 1222, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 1259, 420, 422, 421, 0,
	423, 1214, 1223, 424, 425, 1224, 0, 426, 427, 428,
	429, 430, 431, 434, 1169, 1168, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1225, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 1226, 476, 464, 0, 278, 1227, 478, 479,
	480, 0, 1179, 481, 676, 483, 484, 0, 0, 485,
	0, 0, 1265, 487, 488, 489, 0, 0, 490, 491,
	677, 1228, 492, 1229, 1208, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 1209, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 683, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 1230, 548,
	549, 550, 551, 552, 684, 1267, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 1172, 575, 576, 558,
	559, 577, 578, 1231, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 1210,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 688,
	689, 690, 691, 0, 622, 0, 614, 615, 616, 1211,
	617, 1212, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 1173,
	632, 0, 0, 633, 634, 635, 694, 695, 696, 0,
	637, 636, 638, 639, 697, 640, 641, 0, 0, 0,
	0, 642, 643, 698, 644, 645, 646, 1273, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 1263, 0, 1261, 0, 1175,
	0, 0, 0, 0, 288, 289, 1215, 290, 291, 292,
	293, 294, 295, 648, 649, 0, 296, 650, 297, 651,
	0, 652, 298, 299, 300, 301, 302, 303, 0, 1174,
	0, 304, 653, 654, 655, 0, 305, 306, 1181, 0,
	1162, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 1216,
	329, 330, 331, 1165, 1163, 1164, 1171, 1167, 1166, 1170,
	332, 333, 334, 335, 336, 0, 337, 339, 657, 658,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 659, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	1206, 1207, 370, 0, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 662, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1217, 378, 379, 380, 663, 664,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1213, 0, 666, 391, 0, 392, 393, 394, 395,
	396, 1176, 1177, 1180, 482, 1219, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 1218, 407, 670, 671, 0, 672, 0, 408,
	409, 1220, 1178, 1221, 410, 411, 412, 1222, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 1259, 420,
	422, 421, 0, 423, 1214, 1223, 424, 425, 1224, 0,
	426, 427, 428, 429, 430, 431, 434, 1169, 1168, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1225, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 1226, 476, 464, 0, 278,
	1227, 478, 479, 480, 0, 1179, 481, 676, 483, 484,
	0, 0, 485, 0, 0, 1265, 487, 488, 489, 0,
	0, 490, 491, 677, 1228, 492, 1229, 1208, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 1209, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 683, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 1230, 548, 549, 550, 551, 552, 684, 1267, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 1172,
	575, 576, 558, 559, 577, 578, 1231, 579, 580, 581,
	582, 583, 584, 585, 685, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 686, 594, 595,
	596, 597, 1210, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 688, 689, 690, 691, 0, 622, 0, 614,
	615, 616, 1211, 617, 1212, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 1173, 632, 0, 0, 633, 634, 635, 694,
	695, 696, 0, 637, 636, 638, 639, 697, 640, 641,
	0, 0, 0, 0, 642, 643, 698, 644, 645, 646,
	1273, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 1263, 0,
	1261, 0, 1175, 0, 0, 0, 0, 288, 289, 1215,
	290, 291, 292, 293, 294, 295, 648, 649, 0, 296,
	650, 297, 651, 0, 652, 298, 299, 300, 301, 302,
	303, 0, 1174, 0, 304, 653, 654, 655, 0, 305,
	306, 1181, 0, 1162, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1216, 329, 330, 331, 1165, 1163, 1164, 1171,
	1167, 1166, 1170, 332, 333, 334, 335, 336, 0, 337,
	339, 657, 658, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 659, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 1206, 1207, 370, 0, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 662, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1217, 378, 379,
	380, 663, 664, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1213, 0, 666, 391, 0, 392,
	393, 394, 395, 396, 1176, 1177, 1180, 482, 1219, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 1218, 407, 670, 671, 0,
	672, 0, 408, 409, 1220, 1178, 1221, 410, 411, 412,
	1222, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 1214, 1223, 424,
	425, 1224, 0, 426, 427, 428, 429, 430, 431, 434,
	1169, 1168, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1225, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 1226, 476,
	464, 0, 278, 1227, 478, 479, 480, 0, 1179, 481,
	676, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 677, 1228, 492, 1229,
	1208, 493, 494, 486, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 1209, 512, 682, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	683, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 1230, 548, 549, 550, 551, 552,
	684, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 1172, 575, 576, 558, 559, 577, 578, 1231,
	579, 580, 581, 582, 583, 584, 585, 685, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	686, 594, 595, 596, 597, 1210, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 688, 689, 690, 691, 0,
	622, 0, 614, 615, 616, 1211, 617, 1212, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 1173, 632, 0, 0, 633,
	634, 635, 694, 695, 696, 0, 637, 636, 638, 639,
	697, 640, 641, 0, 0, 0, 0, 642, 643, 698,
	644, 645, 646, 1273, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 4267, 0, 1175, 0, 0, 0, 0,
	288, 289, 1215, 290, 291, 292, 293, 294, 295, 648,
	649, 0, 296, 650, 297, 651, 0, 652, 298, 299,
	300, 301, 302, 303, 0, 1174, 0, 304, 653, 654,
	655, 0, 305, 306, 1181, 0, 1162, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 1216, 329, 330, 331, 1165,
	1163, 1164, 1171, 1167, 1166, 1170, 332, 333, 334, 335,
	336, 0, 337, 339, 657, 658, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 659, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 1206, 1207, 370, 0,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 662,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1217, 378, 379, 380, 663, 664, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1213, 0, 666,
	391, 0, 392, 393, 394, 395, 396, 1176, 1177, 1180,
	482, 1219, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 1218, 407,
	670, 671, 0, 672, 0, 408, 409, 1220, 1178, 1221,
	410, 411, 412, 1222, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	1214, 1223, 424, 425, 1224, 0, 426, 427, 428, 429,
	430, 431, 434, 1169, 1168, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1225, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 1226, 476, 464, 0, 278, 1227, 478, 479, 480,
	0, 1179, 481, 676, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	1228, 492, 1229, 1208, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 1209, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 683, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 1230, 548, 549,
	550, 551, 552, 684, 1267, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 1172, 575, 576, 558, 559,
	577, 578, 1231, 579, 580, 581, 582, 583, 584, 585,
	685, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 686, 594, 595, 596, 597, 1210, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 688, 689,
	690, 691, 0, 622, 0, 614, 615, 616, 1211, 617,
	1212, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 1173, 632,
	0, 0, 633, 634, 635, 694, 695, 696, 0, 637,
	636, 638, 639, 697, 640, 641, 0, 273, 0, 0,
	642, 643, 698, 644, 645, 646, 0, 2605, 2606, 2607,
	2624, 2625, 2626, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 2627, 0, 647,
	0, 0, 0, 0, 288, 289, 1900, 290, 291, 292,
	293, 294, 295, 648, 649, 0, 296, 650, 297, 651,
	0, 652, 298, 299, 300, 301, 302, 303, 0, 0,
	1885, 304, 653, 654, 655, 0, 305, 306, 656, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 2617,
	0, 315, 316, 317, 314, 318, 0, 319, 2613, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 657, 658,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 659, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	660, 661, 370, 0, 0, 0, 2618, 2619, 2620, 2621,
	371, 372, 373, 662, 0, 0, 2612, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 663, 664,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 665, 0, 666, 391, 0, 392, 393, 394, 395,
	396, 667, 668, 669, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 670, 671, 0, 672, 0, 408,
	409, 0, 673, 0, 410, 411, 412, 0, 413, 0,
	2622, 2623, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 674, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 2615, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 478, 479, 480, 0, 675, 481, 676, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 0, 492, 0, 678, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 681, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 683, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 684, 553, 2616,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 685, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 686, 594, 595,
	596, 597, 687, 601, 602, 0, 603, 604, 1884, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 688, 689, 690, 691, 0, 622, 0, 614,
	615, 616, 692, 617, 693, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 694,
	695, 696, 0, 637, 636, 638, 639, 697, 640, 641,
	0, 0, 0, 0, 642, 643, 698, 644, 645, 646,
	0, 0, 0, 0, 0, 0, 0, 1095, 0, 1575,
	2602, 2603, 2604, 2628, 2614, 2608, 0, 2610, 2611, 2609,
	2596, 2597, 2598, 2599, 2600, 2601, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 647, 0, 0, 0, 0, 288, 289, 1215, 290,
	291, 292, 293, 294, 295, 648, 649, 0, 296, 650,
	297, 651, 0, 652, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 653, 654, 655, 0, 305, 306,
	656, 0, 1499, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1216, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	657, 658, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	659, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 660, 661, 370, 0, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 662, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1217, 378, 379, 380,
	663, 664, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 665, 0, 666, 391, 0, 392, 393,
	394, 395, 396, 667, 668, 669, 482, 1219, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 1218, 407, 670, 671, 0, 672,
	0, 408, 409, 1220, 673, 1221, 410, 411, 412, 1222,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 674, 1223, 424, 425,
	1224, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1225, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 1226, 476, 464,
	0, 0, 1227, 478, 479, 480, 0, 675, 481, 676,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 1228, 492, 1229, 678,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 681, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 683,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 1230, 548, 549, 550, 551, 552, 684,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 238, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 1231, 579,
	580, 581, 582, 583, 584, 585, 685, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 686,
	594, 595, 596, 597, 687, 601, 602, 0, 603, 604,
	0, 600, 591, 240, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 688, 689, 690, 691, 0, 622,
	0, 614, 615, 616, 692, 617, 693, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 1649, 695, 696, 0, 637, 636, 638, 639, 697,
	640, 641, 0, 0, 0, 232, 642, 643, 698, 644,
	645, 646, 0, 1646, 233, 1575, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 193, 0, 0, 0, 0, 647, 0, 0,
	0, 0, 288, 289, 1215, 290, 291, 292, 293, 294,
	295, 648, 649, 0, 296, 650, 297, 651, 0, 652,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	653, 654, 655, 0, 305, 306, 656, 0, 1499, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1216, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 657, 658, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 659, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 660, 661,
	370, 0, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 662, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1217, 378, 379, 380, 663, 664, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 665,
	0, 666, 391, 0, 392, 393, 394, 395, 396, 667,
	668, 669, 482, 1219, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	1218, 407, 670, 671, 0, 672, 0, 408, 409, 1220,
	673, 1221, 410, 411, 412, 1222, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 674, 1223, 424, 425, 1224, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1225, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 1226, 476, 464, 0, 0, 1227, 478,
	479, 480, 0, 675, 481, 676, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 677, 1228, 492, 1229, 678, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 681,
	512, 682, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 683, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 1230,
	548, 549, 550, 551, 552, 684, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	238, 570, 571, 569, 572, 573, 574, 0, 575, 576,
	558, 559, 577, 578, 1231, 579, 580, 581, 582, 583,
	584, 585, 685, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 686, 594, 595, 596, 597,
	687, 601, 602, 0, 603, 604, 0, 600, 591, 240,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	688, 689, 690, 691, 0, 622, 0, 614, 615, 616,
	692, 617, 693, 0, 618, 619, 620, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	0, 632, 0, 0, 633, 634, 635, 1649, 695, 696,
	0, 637, 636, 638, 639, 697, 640, 641, 0, 0,
	0, 232, 642, 643, 698, 644, 645, 646, 1575, 1574,
	233, 0, 0, 0, 1572, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 193, 0,
	647, 0, 0, 0, 0, 288, 289, 1215, 290, 291,
	292, 293, 294, 295, 648, 649, 0, 296, 650, 297,
	651, 0, 652, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 653, 654, 655, 0, 305, 306, 656,
	0, 1499, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	1216, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 657,
	658, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 659,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 660, 661, 370, 0, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 662, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1217, 378, 379, 380, 663,
	664, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 665, 0, 666, 391, 0, 392, 393, 394,
	395, 396, 667, 668, 669, 482, 1219, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 1218, 407, 670, 671, 0, 672, 0,
	408, 409, 1220, 673, 1221, 410, 411, 412, 1222, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 674, 1223, 424, 425, 1224,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1225,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 1226, 476, 464, 0,
	0, 1227, 478, 479, 480, 0, 675, 481, 676, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 1228, 492, 1229, 678, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 681, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 683, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 1230, 548, 549, 550, 551, 552, 684, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	0, 575, 576, 558, 559, 577, 578, 1231, 579, 580,
	581, 582, 583, 584, 585, 685, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 686, 594,
	595, 596, 597, 687, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 688, 689, 690, 691, 0, 622, 0,
	614, 615, 616, 692, 617, 693, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	694, 695, 696, 0, 637, 636, 638, 639, 697, 640,
	641, 0, 0, 0, 0, 642, 643, 698, 644, 645,
	646, 1575, 1574, 0, 0, 0, 0, 1572, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 1673, 0, 647, 0, 0, 0, 0, 288, 289,
	1215, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 0, 652, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 653, 654, 655, 0,
	305, 306, 656, 0, 1499, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1216, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 660, 661, 370, 0, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1217, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 665, 0, 666, 391, 0,
	392, 393, 394, 395, 396, 667, 668, 669, 482, 1219,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 1218, 407, 670, 671,
	0, 672, 0, 408, 409, 1220, 673, 1221, 410, 411,
	412, 1222, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 674, 1223,
	424, 425, 1224, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1225, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 1226,
	476, 464, 0, 0, 1227, 478, 479, 480, 0, 675,
	481, 676, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 1228, 492,
	1229, 678, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 681, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 1230, 548, 549, 550, 551,
	552, 684, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	1231, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 687, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 688, 689, 690, 691,
	0, 622, 0, 614, 615, 616, 692, 617, 693, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 694, 695, 696, 0, 637, 636, 638,
	639, 697, 640, 641, 0, 0, 0, 0, 642, 643,
	698, 644, 645, 646, 1575, 1574, 0, 0, 0, 0,
	1572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 3710, 0, 647, 0, 0, 0,
	0, 288, 289, 1215, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 0, 652, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 653,
	654, 655, 0, 305, 306, 656, 0, 1499, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1216, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 657, 658, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 660, 661, 370,
	0, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	662, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1217, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 665, 0,
	666, 391, 0, 392, 393, 394, 395, 396, 667, 668,
	669, 482, 1219, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 1218,
	407, 670, 671, 0, 672, 0, 408, 409, 1220, 673,
	1221, 410, 411, 412, 1222, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 674, 1223, 424, 425, 1224, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1225, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 1226, 476, 464, 0, 0, 1227, 478, 479,
	480, 0, 675, 481, 676, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 1228, 492, 1229, 678, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 681, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 683, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 2369, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 1230, 548,
	549, 550, 551, 552, 684, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 0, 575, 576, 558,
	559, 577, 578, 1231, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 687,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 688,
	689, 690, 691, 0, 622, 0, 614, 615, 616, 692,
	617, 693, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 694, 695, 696, 0,
	637, 636, 638, 639, 697, 640, 641, 0, 0, 0,
	0, 642, 643, 698, 644, 645, 646, 1575, 2278, 0,
	0, 0, 0, 2279, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 1673, 0, 647,
	0, 0, 0, 0, 288, 289, 1215, 290, 291, 292,
	293, 294, 295, 648, 649, 0, 296, 650, 297, 651,
	0, 652, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 653, 654, 655, 0, 305, 306, 656, 0,
	1499, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 1216,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 657, 658,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 659, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	660, 661, 370, 0, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 662, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1217, 378, 379, 380, 663, 664,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 665, 0, 666, 391, 0, 392, 393, 394, 395,
	396, 667, 668, 669, 482, 1219, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 1218, 407, 670, 671, 0, 672, 0, 408,
	409, 1220, 673, 1221, 410, 411, 412, 1222, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 2277,
	422, 421, 0, 423, 674, 1223, 424, 425, 1224, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1225, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 1226, 476, 464, 0, 0,
	1227, 478, 479, 480, 0, 675, 481, 676, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 1228, 492, 1229, 678, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 681, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 683, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 1230, 548, 549, 550, 551, 552, 684, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 1231, 579, 580, 581,
	582, 583, 584, 585, 685, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 686, 594, 595,
	596, 597, 687, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 688, 689, 690, 691, 0, 622, 0, 614,
	615, 616, 692, 617, 693, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 694,
	695, 696, 0, 637, 636, 638, 639, 697, 640, 641,
	0, 0, 0, 0, 642, 643, 698, 644, 645, 646,
	1575, 1574, 0, 0, 0, 0, 1572, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	1673, 0, 647, 0, 0, 0, 0, 288, 289, 1215,
	290, 291, 292, 293, 294, 295, 648, 649, 0, 296,
	650, 297, 651, 0, 652, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 653, 654, 655, 0, 305,
	306, 656, 0, 1499, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1216, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 657, 658, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 659, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 660, 661, 370, 0, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 662, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1217, 378, 379,
	380, 663, 664, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 665, 0, 666, 391, 0, 392,
	393, 394, 395, 396, 667, 668, 669, 482, 1219, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 1218, 407, 670, 671, 0,
	672, 0, 408, 409, 1220, 673, 1221, 410, 411, 412,
	1222, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 674, 1223, 424,
	425, 1224, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1225, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 1226, 476,
	464, 0, 0, 1227, 478, 479, 480, 0, 675, 481,
	676, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 677, 1228, 492, 1229,
	678, 493, 494, 486, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 681, 512, 682, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	683, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 1230, 548, 549, 550, 551, 552,
	684, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 0, 575, 576, 558, 559, 577, 578, 1231,
	579, 580, 581, 582, 583, 584, 585, 685, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	686, 594, 595, 596, 597, 687, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 688, 689, 690, 691, 0,
	622, 0, 614, 615, 616, 692, 617, 693, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 694, 695, 696, 0, 637, 636, 638, 639,
	697, 640, 641, 0, 0, 0, 0, 642, 643, 698,
	644, 645, 646, 1095, 0, 273, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 1655, 0, 0, 0, 647, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 648, 649, 0, 296, 650, 297, 651, 0, 652,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	653, 654, 655, 0, 305, 306, 656, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 657, 658, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 659, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 660, 661,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 662, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 663, 664, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 665,
	0, 666, 391, 0, 392, 393, 394, 395, 396, 667,
	668, 669, 482, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 670, 671, 0, 672, 0, 408, 409, 0,
	673, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 674, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 0, 476, 464, 0, 0, 0, 478,
	479, 480, 0, 675, 481, 676, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 677, 0, 492, 0, 678, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 681,
	512, 682, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 683, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 684, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	238, 570, 571, 569, 572, 573, 574, 0, 575, 576,
	558, 559, 577, 578, 0, 579, 580, 581, 582, 583,
	584, 585, 685, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 686, 594, 595, 596, 597,
	687, 601, 602, 0, 603, 604, 0, 600, 591, 240,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	688, 689, 690, 691, 0, 622, 0, 614, 615, 616,
	692, 617, 693, 0, 618, 619, 620, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	0, 632, 0, 0, 633, 634, 635, 1649, 695, 696,
	0, 637, 636, 638, 639, 697, 640, 641, 0, 273,
	0, 232, 642, 643, 698, 644, 645, 646, 0, 0,
	233, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 647, 0, 0, 0, 0, 288, 289, 193, 290,
	291, 292, 293, 294, 295, 648, 649, 0, 296, 650,
	297, 651, 0, 652, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 653, 654, 655, 0, 305, 306,
	656, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	657, 658, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	659, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 660, 661, 370, 0, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 662, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	663, 664, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 665, 0, 666, 391, 0, 392, 393,
	394, 395, 396, 667, 668, 669, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 0, 407, 670, 671, 0, 672,
	0, 408, 409, 0, 673, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 674, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 0, 476, 464,
	0, 278, 0, 478, 479, 480, 0, 675, 481, 676,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 0, 492, 0, 678,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 681, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 683,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 684,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 685, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 686,
	594, 595, 596, 597, 687, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 688, 689, 690, 691, 0, 622,
	0, 614, 615, 616, 692, 617, 693, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 694, 695, 696, 0, 637, 636, 638, 639, 697,
	640, 641, 0, 273, 3147, 0, 642, 643, 698, 644,
	645, 646, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 647, 0, 0, 0, 0,
	288, 289, 2017, 290, 291, 292, 293, 294, 295, 648,
	649, 0, 296, 650, 297, 651, 0, 652, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 653, 654,
	655, 0, 305, 306, 656, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 657, 658, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 659, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 660, 661, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 662,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 663, 664, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 665, 0, 666,
	391, 0, 392, 393, 394, 395, 396, 667, 668, 669,
	482, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	670, 671, 0, 672, 0, 408, 409, 0, 673, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	674, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 0, 476, 464, 0, 0, 0, 478, 479, 480,
	0, 675, 481, 676, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	0, 492, 0, 678, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 681, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 683, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 684, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	685, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 686, 594, 595, 596, 597, 687, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 688, 689,
	690, 691, 0, 622, 0, 614, 615, 616, 692, 617,
	693, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 694, 695, 696, 0, 637,
	636, 638, 639, 697, 640, 641, 0, 0, 0, 0,
	642, 643, 698, 644, 645, 646, 1273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 5014, 0, 1175, 0,
	0, 0, 0, 288, 289, 1215, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 0,
	652, 298, 299, 300, 301, 302, 303, 0, 1174, 0,
	304, 653, 654, 655, 0, 305, 306, 1181, 0, 1162,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1216, 329,
	330, 331, 1165, 1163, 1164, 1171, 1167, 1166, 1170, 332,
	333, 334, 335, 336, 0, 337, 339, 657, 658, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 1206,
	1207, 370, 0, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1217, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1213, 0, 666, 391, 0, 392, 393, 394, 395, 396,
	1176, 1177, 1180, 482, 1219, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 1218, 407, 670, 671, 0, 672, 0, 408, 409,
	1220, 1178, 1221, 410, 411, 412, 1222, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 1214, 1223, 424, 425, 1224, 0, 426,
	427, 428, 429, 430, 431, 434, 1169, 1168, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1225, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 1226, 476, 464, 0, 278, 1227,
	478, 479, 480, 0, 1179, 481, 676, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 1228, 492, 1229, 1208, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	1209, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	1230, 548, 549, 550, 551, 552, 684, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 1172, 575,
	576, 558, 559, 577, 578, 1231, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 1210, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 688, 689, 690, 691, 0, 622, 0, 614, 615,
	616, 1211, 617, 1212, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 1173, 632, 0, 0, 633, 634, 635, 694, 695,
	696, 0, 637, 636, 638, 639, 697, 640, 641, 273,
	0, 0, 0, 642, 643, 698, 644, 645, 646, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 647, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 648, 649, 0, 296, 650,
	297, 651, 0, 652, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 653, 654, 655, 0, 305, 306,
	656, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	657, 658, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	659, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 660, 661, 370, 0, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 662, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	663, 664, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 665, 0, 666, 391, 0, 392, 393,
	394, 395, 396, 667, 668, 669, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 0, 407, 670, 671, 0, 672,
	0, 408, 409, 0, 673, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 674, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 0, 476, 464,
	0, 278, 0, 478, 479, 480, 0, 675, 481, 676,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 0, 492, 0, 678,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 681, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 683,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 684,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 685, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 686,
	594, 595, 596, 597, 687, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 688, 689, 690, 691, 0, 622,
	0, 614, 615, 616, 692, 617, 693, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 694, 695, 696, 0, 637, 636, 638, 639, 697,
	640, 641, 0, 0, 273, 0, 642, 643, 698, 644,
	645, 646, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 647, 0, 0, 0,
	3660, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 0, 652, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 653,
	654, 655, 0, 305, 306, 656, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 657, 658, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 660, 661, 370,
	0, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	662, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 665, 0,
	666, 391, 0, 392, 393, 394, 395, 396, 667, 668,
	669, 482, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 0,
	407, 670, 671, 0, 672, 0, 408, 409, 0, 673,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 674, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 0, 476, 464, 0, 278, 0, 478, 479,
	480, 0, 675, 481, 676, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 0, 492, 0, 678, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 681, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 683, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 684, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 0, 575, 576, 558,
	559, 577, 578, 0, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 687,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 688,
	689, 690, 691, 0, 622, 0, 614, 615, 616, 692,
	617, 693, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 694, 695, 696, 0,
	637, 636, 638, 639, 697, 640, 641, 0, 0, 273,
	0, 642, 643, 698, 644, 645, 646, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 647, 0, 0, 0, 1643, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 648, 649, 0, 296, 650,
	297, 651, 0, 652, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 653, 654, 655, 0, 305, 306,
	656, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	657, 658, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	659, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 660, 661, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 662, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	663, 664, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 665, 0, 666, 391, 0, 392, 393,
	394, 395, 396, 667, 668, 669, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 670, 671, 0, 672,
	0, 408, 409, 0, 673, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 674, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 0, 476, 464,
	0, 0, 0, 478, 479, 480, 0, 675, 481, 676,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 0, 492, 0, 678,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 681, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 683,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 684,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 685, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 686,
	594, 595, 596, 597, 687, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 688, 689, 690, 691, 0, 622,
	0, 614, 615, 616, 692, 617, 693, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 694, 695, 696, 0, 637, 636, 638, 639, 697,
	640, 641, 0, 273, 0, 0, 642, 643, 698, 644,
	645, 646, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 647, 0, 0, 0, 0,
	288, 289, 3135, 290, 291, 292, 293, 294, 295, 648,
	649, 0, 296, 650, 297, 651, 0, 652, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 653, 654,
	655, 0, 305, 306, 656, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 657, 658, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 659, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 660, 661, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 662,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 663, 664, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 665, 0, 666,
	391, 0, 392, 393, 394, 395, 396, 667, 668, 669,
	482, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	670, 671, 0, 672, 0, 408, 409, 0, 673, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	674, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 0, 476, 464, 0, 0, 0, 478, 479, 480,
	0, 675, 481, 676, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	0, 492, 0, 678, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 681, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 683, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 684, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	685, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 686, 594, 595, 596, 597, 687, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 688, 689,
	690, 691, 0, 622, 0, 614, 615, 616, 692, 617,
	693, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 694, 695, 696, 0, 637,
	636, 638, 639, 697, 640, 641, 0, 273, 0, 0,
	642, 643, 698, 644, 645, 646, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 647,
	0, 0, 0, 0, 288, 289, 3817, 290, 291, 292,
	293, 294, 295, 648, 649, 0, 296, 650, 297, 651,
	0, 652, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 653, 654, 655, 0, 305, 306, 656, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 657, 658,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 659, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	660, 661, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 662, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 663, 664,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 665, 0, 666, 391, 0, 392, 393, 394, 395,
	396, 667, 668, 669, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 670, 671, 0, 672, 0, 408,
	409, 0, 673, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 674, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 478, 479, 480, 0, 675, 481, 676, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 0, 492, 0, 678, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 681, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 683, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 684, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 685, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 686, 594, 595,
	596, 597, 687, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 688, 689, 690, 691, 0, 622, 0, 614,
	615, 616, 692, 617, 693, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 694,
	695, 696, 0, 637, 636, 638, 639, 697, 640, 641,
	0, 0, 0, 0, 642, 643, 698, 644, 645, 646,
	925, 0, 826, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	2356, 0, 0, 0, 647, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 648, 649,
	0, 296, 650, 297, 651, 0, 652, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 653, 654, 655,
	0, 305, 306, 656, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 833, 336,
	0, 337, 339, 657, 658, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 659, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 660, 661, 370, 0, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 662, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 923, 0,
	378, 379, 380, 663, 664, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 665, 0, 666, 391,
	0, 392, 393, 394, 395, 396, 667, 668, 669, 482,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 0, 407, 670,
	671, 0, 672, 0, 408, 409, 0, 673, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 674,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	0, 476, 464, 0, 278, 0, 478, 479, 480, 0,
	675, 481, 676, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 0,
	492, 0, 678, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 681, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 683, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 684, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 0, 575, 576, 558, 559, 577,
	578, 0, 579, 580, 581, 582, 583, 584, 585, 685,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 686, 594, 595, 596, 597, 687, 601, 602,
	0, 603, 604, 0, 600, 591, 831, 605, 606, 607,
	608, 609, 832, 611, 612, 0, 613, 688, 689, 690,
	691, 0, 622, 0, 614, 615, 616, 692, 617, 693,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 694, 695, 696, 0, 637, 636,
	638, 639, 697, 640, 641, 2062, 0, 0, 0, 642,
	643, 698, 644, 645, 646, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 836, 0, 0,
	0, 0, 288, 289, 1215, 290, 291, 292, 293, 294,
	295, 0, 2068, 0, 296, 2058, 297, 2074, 0, 2081,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	2084, 2085, 0, 0, 305, 306, 0, 0, 1499, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1216, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 1198, 337, 339, 2072, 2071, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 1183, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 0, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 0, 0,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 2070, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1217, 378, 379, 380, 2079, 2080, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 0,
	0, 0, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 482, 1219, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	1218, 407, 2065, 2066, 0, 2061, 0, 408, 409, 1220,
	0, 1221, 410, 411, 412, 1222, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 0, 1223, 424, 425, 1224, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1225, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 1226, 476, 464, 0, 0, 1227, 478,
	479, 480, 0, 0, 481, 2073, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 0, 1228, 492, 1229, 0, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 2055, 506, 507, 508, 2056, 509, 510, 511, 0,
	512, 0, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 2069, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 1230,
	548, 549, 550, 551, 552, 0, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 0, 575, 576,
	558, 559, 577, 578, 1231, 579, 580, 581, 582, 583,
	584, 585, 2067, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 2083, 594, 595, 596, 597,
	0, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	2075, 2076, 2077, 2078, 0, 622, 0, 614, 615, 616,
	0, 617, 0, 0, 618, 619, 620, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	0, 632, 0, 0, 633, 634, 635, 0, 2059, 2082,
	0, 637, 636, 638, 639, 0, 640, 641, 0, 0,
	0, 0, 642, 643, 0, 644, 645, 646, 826, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 3937, 286, 287, 0, 0, 0, 0, 0,
	647, 0, 2049, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 648, 649, 0, 296, 650, 297,
	651, 0, 652, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 653, 654, 655, 0, 305, 306, 656,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 833, 336, 0, 337, 339, 657,
	658, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 659,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 660, 661, 370, 0, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 662, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 663,
	664, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 665, 0, 666, 391, 0, 392, 393, 394,
	395, 396, 667, 668, 669, 482, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 0, 407, 670, 671, 0, 672, 0,
	408, 409, 0, 673, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 674, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 0, 476, 464, 0,
	278, 0, 478, 479, 480, 0, 675, 481, 676, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 0, 492, 0, 678, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 681, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 683, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 684, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 3936, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	0, 575, 576, 558, 559, 577, 578, 0, 579, 580,
	581, 582, 583, 584, 585, 685, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 686, 594,
	595, 596, 597, 687, 601, 602, 0, 603, 604, 0,
	600, 591, 831, 605, 606, 607, 608, 609, 832, 611,
	612, 0, 613, 688, 689, 690, 691, 0, 622, 0,
	614, 615, 616, 692, 617, 693, 0, 618, 619, 3935,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	694, 695, 696, 0, 637, 636, 638, 639, 697, 640,
	641, 0, 826, 0, 0, 642, 643, 698, 644, 645,
	646, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 2089, 286, 287, 0,
	0, 0, 0, 836, 647, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 648, 649,
	0, 296, 650, 297, 651, 0, 652, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 653, 654, 655,
	0, 305, 306, 656, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 833, 336,
	0, 337, 339, 657, 658, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 659, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 660, 661, 370, 0, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 662, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 663, 664, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 665, 0, 666, 391,
	0, 392, 393, 394, 395, 396, 667, 668, 669, 482,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 0, 407, 670,
	671, 0, 672, 0, 408, 409, 0, 673, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 674,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	0, 476, 464, 0, 278, 0, 478, 479, 480, 0,
	675, 481, 676, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 0,
	492, 0, 678, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 681, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 683, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 684, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 2088, 565, 566, 567, 568, 0, 2090, 571,
	569, 572, 573, 574, 0, 575, 576, 558, 559, 577,
	578, 0, 579, 580, 581, 582, 583, 584, 585, 685,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 686, 594, 595, 596, 597, 687, 601, 602,
	0, 603, 604, 0, 600, 591, 831, 605, 606, 607,
	608, 609, 832, 611, 612, 0, 613, 688, 689, 690,
	691, 0, 622, 0, 614, 615, 616, 692, 617, 693,
	0, 618, 619, 2087, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 694, 695, 696, 0, 637, 636,
	638, 639, 697, 640, 641, 0, 826, 0, 0, 642,
	643, 698, 644, 645, 646, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	2040, 286, 287, 0, 0, 0, 0, 836, 647, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 0,
	652, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 653, 654, 655, 0, 305, 306, 656, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 833, 336, 0, 337, 339, 657, 658, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 660,
	661, 370, 0, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	665, 0, 666, 391, 0, 392, 393, 394, 395, 396,
	667, 668, 669, 482, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 0, 407, 670, 671, 0, 672, 0, 408, 409,
	0, 673, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 674, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 0, 476, 464, 0, 278, 0,
	478, 479, 480, 0, 675, 481, 676, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 0, 492, 0, 678, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	681, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 684, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 2039, 565, 566, 567,
	568, 0, 2041, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 687, 601, 602, 0, 603, 604, 0, 600, 591,
	831, 605, 606, 607, 608, 609, 832, 611, 612, 0,
	613, 688, 689, 690, 691, 0, 622, 0, 614, 615,
	616, 692, 617, 693, 0, 618, 619, 2038, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 694, 695,
	696, 0, 637, 636, 638, 639, 697, 640, 641, 824,
	0, 826, 0, 642, 643, 698, 644, 645, 646, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 836, 0, 647, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 0, 652, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 653, 654, 655, 0,
	305, 306, 656, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 833, 336, 0,
	337, 339, 657, 658, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 660, 661, 370, 0, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 665, 0, 666, 391, 0,
	392, 393, 394, 395, 396, 667, 668, 669, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 0, 407, 670, 671,
	0, 672, 0, 408, 409, 0, 673, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 674, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 0,
	476, 464, 0, 278, 0, 478, 479, 480, 0, 675,
	481, 676, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 0, 492,
	0, 678, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 681, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 684, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 687, 601, 602, 0,
	603, 604, 0, 600, 591, 831, 605, 606, 607, 608,
	609, 832, 611, 612, 0, 613, 688, 689, 690, 691,
	0, 622, 0, 614, 615, 616, 692, 617, 693, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 694, 695, 696, 0, 637, 636, 638,
	639, 697, 640, 641, 0, 826, 0, 0, 642, 643,
	698, 644, 645, 646, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 836, 647, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 648, 649, 0, 296, 650, 297, 651, 0, 652,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	653, 654, 655, 0, 305, 306, 656, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 833, 336, 0, 337, 339, 657, 658, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 659, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 660, 661,
	370, 0, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 662, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 663, 664, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 665,
	0, 666, 391, 0, 392, 393, 394, 395, 396, 667,
	668, 669, 482, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	0, 407, 670, 671, 0, 672, 0, 408, 409, 0,
	673, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 674, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 0, 476, 464, 0, 278, 0, 478,
	479, 480, 0, 675, 481, 676, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 677, 0, 492, 0, 678, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 681,
	512, 682, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 683, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 684, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 0, 575, 576,
	558, 559, 577, 578, 0, 579, 580, 581, 582, 583,
	584, 585, 685, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 686, 594, 595, 596, 597,
	687, 601, 602, 0, 603, 604, 0, 600, 591, 831,
	605, 606, 607, 608, 609, 832, 611, 612, 0, 613,
	688, 689, 690, 691, 0, 622, 0, 614, 615, 616,
	692, 617, 693, 0, 618, 619, 620, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	0, 632, 0, 0, 633, 634, 635, 694, 695, 696,
	0, 637, 636, 638, 639, 697, 640, 641, 0, 826,
	0, 0, 642, 643, 698, 644, 645, 646, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	836, 647, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 648, 649, 0, 296, 650,
	297, 651, 0, 652, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 653, 654, 655, 0, 305, 306,
	656, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 833, 336, 0, 337, 339,
	657, 658, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	659, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 660, 661, 370, 0, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 662, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	663, 664, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 665, 0, 666, 391, 0, 392, 393,
	394, 395, 396, 667, 668, 669, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 0, 407, 670, 671, 0, 672,
	0, 408, 409, 0, 673, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 674, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 0, 476, 464,
	0, 278, 0, 478, 479, 480, 0, 675, 481, 676,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 0, 492, 0, 678,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 681, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 683,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 2407, 549, 550, 551, 552, 684,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 2408,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 685, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 686,
	594, 595, 596, 597, 687, 601, 602, 0, 603, 604,
	0, 600, 591, 831, 605, 606, 607, 608, 609, 832,
	611, 612, 0, 613, 688, 689, 690, 691, 0, 622,
	0, 614, 615, 616, 692, 617, 693, 0, 618, 619,
	2409, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 694, 695, 696, 0, 637, 636, 638, 639, 697,
	640, 641, 0, 273, 0, 0, 642, 643, 698, 644,
	645, 646, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 836, 647, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 648,
	649, 0, 296, 650, 297, 651, 0, 652, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 653, 654,
	655, 0, 305, 306, 656, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 657, 658, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 659, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 660, 661, 370, 0,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 662,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 663, 664, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 665, 0, 666,
	391, 0, 392, 393, 394, 395, 396, 667, 668, 669,
	482, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 0, 407,
	670, 671, 0, 672, 0, 408, 409, 0, 673, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	674, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 0, 476, 464, 0, 278, 0, 478, 479, 480,
	0, 675, 481, 676, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	0, 492, 0, 678, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 681, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 683, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 684, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	685, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 686, 594, 595, 596, 597, 687, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 688, 689,
	690, 691, 0, 622, 0, 614, 615, 616, 692, 617,
	693, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 694, 695, 696, 0, 637,
	636, 638, 639, 697, 640, 641, 0, 0, 0, 0,
	642, 643, 698, 644, 645, 646, 0, 0, 0, 0,
	0, 0, 1575, 1574, 0, 0, 0, 0, 1572, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 836, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 647, 0, 0, 0, 0, 288,
	289, 1215, 290, 291, 292, 293, 294, 295, 648, 649,
	0, 296, 650, 297, 651, 0, 652, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 653, 654, 655,
	0, 305, 306, 656, 0, 1499, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 1216, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 657, 658, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 659, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 660, 661, 370, 0, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 662, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1217,
	378, 379, 380, 663, 664, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 665, 0, 666, 391,
	0, 392, 393, 394, 395, 396, 667, 668, 669, 482,
	1219, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 1218, 407, 670,
	671, 0, 672, 0, 408, 409, 1220, 673, 1221, 410,
	411, 412, 1222, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 674,
	1223, 424, 425, 1224, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1225, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	1226, 476, 464, 0, 0, 1227, 478, 479, 480, 4025,
	675, 481, 676, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 1228,
	492, 1229, 678, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 681, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 683, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 1230, 548, 549, 550,
	551, 552, 684, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 0, 575, 576, 558, 559, 577,
	578, 1231, 579, 580, 581, 582, 583, 584, 585, 685,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 686, 594, 595, 596, 597, 687, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 688, 689, 690,
	691, 0, 622, 0, 614, 615, 616, 692, 617, 693,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 694, 695, 696, 0, 637, 636,
	638, 639, 697, 640, 641, 0, 0, 0, 0, 642,
	643, 698, 644, 645, 646, 1575, 1574, 0, 0, 0,
	0, 1572, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 647, 0, 0,
	0, 0, 288, 289, 1215, 290, 291, 292, 293, 294,
	295, 648, 649, 0, 296, 650, 297, 651, 0, 652,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	653, 654, 655, 0, 305, 306, 656, 0, 1499, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1216, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 657, 658, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 659, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 660, 661,
	370, 0, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 662, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1217, 378, 379, 380, 663, 664, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 665,
	0, 666, 391, 0, 392, 393, 394, 395, 396, 667,
	668, 669, 482, 1219, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	1218, 407, 670, 671, 0, 672, 0, 408, 409, 1220,
	673, 1221, 410, 411, 412, 1222, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 674, 1223, 424, 425, 1224, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1225, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 1226, 476, 464, 0, 0, 1227, 478,
	479, 480, 3610, 675, 481, 676, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 677, 1228, 492, 1229, 678, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 681,
	512, 682, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 683, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 1230,
	548, 549, 550, 551, 552, 684, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 0, 575, 576,
	558, 559, 577, 578, 1231, 579, 580, 581, 582, 583,
	584, 585, 685, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 686, 594, 595, 596, 597,
	687, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	688, 689, 690, 691, 0, 622, 0, 614, 615, 616,
	692, 617, 693, 0, 618, 619, 620, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	0, 632, 0, 0, 633, 634, 635, 694, 695, 696,
	0, 637, 636, 638, 639, 697, 640, 641, 0, 0,
	0, 0, 642, 643, 698, 644, 645, 646, 1703, 0,
	1575, 1574, 0, 0, 0, 0, 1572, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 647, 0, 0, 0, 0, 288, 289, 1215,
	290, 291, 292, 293, 294, 295, 648, 649, 0, 296,
	650, 297, 651, 0, 652, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 653, 654, 655, 0, 305,
	306, 656, 0, 1499, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1216, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 657, 658, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 659, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 660, 661, 370, 0, 276, 0, 0,
	0, 0, 0, 1702, 372, 373, 662, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1217, 378, 379,
	380, 663, 664, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 665, 0, 666, 391, 0, 392,
	393, 394, 395, 396, 667, 668, 669, 482, 1219, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 1218, 407, 670, 671, 0,
	672, 0, 408, 409, 1220, 673, 1221, 410, 411, 412,
	1222, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 674, 1223, 424,
	425, 1224, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1225, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 1226, 476,
	464, 0, 0, 1227, 478, 479, 480, 0, 675, 481,
	676, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 677, 1228, 492, 1229,
	678, 493, 494, 486, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 681, 512, 682, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 1701, 523,
	683, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 1230, 548, 549, 550, 551, 552,
	684, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 1700, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 0, 575, 576, 558, 559, 577, 578, 1231,
	579, 580, 581, 582, 583, 584, 585, 685, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	686, 594, 595, 596, 597, 687, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 688, 689, 690, 691, 0,
	622, 0, 614, 615, 616, 692, 617, 693, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 694, 695, 696, 0, 637, 636, 638, 639,
	697, 640, 641, 0, 0, 0, 0, 642, 643, 698,
	644, 645, 646, 1568, 0, 1575, 1574, 0, 0, 0,
	0, 1572, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 647, 0, 0,
	0, 0, 288, 289, 1215, 290, 291, 292, 293, 294,
	295, 648, 649, 0, 296, 650, 297, 651, 0, 652,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	653, 654, 655, 0, 305, 306, 656, 0, 1499, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1216, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 657, 658, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 659, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 660, 661,
	370, 0, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 662, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1217, 378, 379, 380, 663, 664, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 665,
	0, 666, 391, 0, 392, 393, 394, 395, 396, 1570,
	668, 669, 482, 1219, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	1218, 407, 670, 671, 0, 672, 0, 408, 409, 1220,
	673, 1221, 410, 411, 412, 1222, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 674, 1223, 424, 425, 1224, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1225, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 1226, 476, 464, 0, 0, 1227, 478,
	479, 480, 0, 675, 481, 676, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 677, 1228, 492, 1229, 678, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 681,
	512, 682, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 683, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 1230,
	548, 549, 550, 551, 552, 684, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 0, 575, 576,
	558, 559, 577, 578, 1231, 579, 580, 581, 582, 583,
	584, 585, 685, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 686, 594, 595, 596, 597,
	687, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	688, 689, 690, 691, 0, 622, 0, 614, 615, 616,
	692, 617, 693, 0, 618, 619, 620, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	0, 632, 0, 0, 633, 634, 635, 694, 695, 696,
	0, 637, 636, 638, 639, 697, 640, 641, 0, 0,
	0, 0, 642, 643, 698, 644, 645, 646, 1575, 1574,
	0, 0, 0, 0, 1572, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	647, 0, 0, 0, 0, 288, 289, 1215, 290, 291,
	292, 293, 294, 295, 648, 649, 0, 296, 650, 297,
	651, 0, 652, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 653, 654, 655, 0, 305, 306, 656,
	0, 1499, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	1216, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 657,
	658, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 659,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 660, 661, 370, 0, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 662, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1217, 378, 379, 380, 663,
	664, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 665, 0, 666, 391, 0, 392, 393, 394,
	395, 396, 667, 668, 669, 482, 1219, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 1218, 407, 670, 671, 0, 672, 0,
	408, 409, 1220, 673, 1221, 410, 411, 412, 1222, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 674, 1223, 424, 425, 1224,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1225,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 1226, 476, 464, 0,
	0, 1227, 478, 479, 480, 0, 675, 481, 676, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 1228, 492, 1229, 678, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 681, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 683, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 1230, 548, 549, 550, 551, 552, 684, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	0, 575, 576, 558, 559, 577, 578, 1231, 579, 580,
	581, 582, 583, 584, 585, 685, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 686, 594,
	595, 596, 597, 687, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 688, 689, 690, 691, 0, 622, 0,
	614, 615, 616, 692, 617, 693, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	694, 695, 696, 0, 637, 636, 638, 639, 697, 640,
	641, 1575, 1574, 0, 0, 642, 643, 698, 644, 645,
	646, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 647, 0, 0, 0, 0, 288, 289,
	1215, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 0, 652, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 653, 654, 655, 0,
	305, 306, 656, 0, 1499, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1216, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 660, 661, 370, 0, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1217, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 665, 0, 666, 391, 0,
	392, 393, 394, 395, 396, 667, 668, 669, 482, 1219,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 1218, 407, 670, 671,
	0, 672, 0, 408, 409, 1220, 673, 1221, 410, 411,
	412, 1222, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 674, 1223,
	424, 425, 1224, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1225, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 1226,
	476, 464, 0, 0, 1227, 478, 479, 480, 0, 675,
	481, 676, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 1228, 492,
	1229, 678, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 681, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 1230, 548, 549, 550, 551,
	552, 684, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	1231, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 687, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 688, 689, 690, 691,
	0, 622, 0, 614, 615, 616, 692, 617, 693, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 694, 695, 696, 0, 637, 636, 638,
	639, 697, 640, 641, 1575, 0, 0, 0, 642, 643,
	698, 644, 645, 646, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 647, 0, 0, 0,
	0, 288, 289, 1215, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 0, 652, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 653,
	654, 655, 0, 305, 306, 656, 0, 1499, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1216, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 657, 658, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 660, 661, 370,
	0, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	662, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1217, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 665, 0,
	666, 391, 0, 392, 393, 394, 395, 396, 667, 668,
	669, 482, 1219, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 1218,
	407, 670, 671, 0, 672, 0, 408, 409, 1220, 673,
	1221, 410, 411, 412, 1222, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 674, 1223, 424, 425, 1224, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1225, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 1226, 476, 464, 0, 0, 1227, 478, 479,
	480, 0, 675, 481, 676, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 1228, 492, 1229, 678, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 681, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 683, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 1230, 548,
	549, 550, 551, 552, 684, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 0, 575, 576, 558,
	559, 577, 578, 1231, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 687,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 688,
	689, 690, 691, 0, 622, 0, 614, 615, 616, 692,
	617, 693, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 694, 695, 696, 0,
	637, 636, 638, 639, 697, 640, 641, 273, 0, 0,
	0, 642, 643, 698, 644, 645, 646, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 647,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 648, 649, 0, 296, 650, 297, 651,
	0, 652, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 653, 654, 655, 2932, 305, 306, 656, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 3652, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 657, 658,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 2936, 358, 659, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	660, 661, 370, 0, 3651, 0, 0, 0, 0, 0,
	371, 372, 373, 662, 0, 0, 0, 374, 0, 375,
	376, 377, 2935, 0, 0, 378, 379, 380, 663, 664,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 665, 0, 666, 391, 0, 392, 393, 394, 395,
	396, 667, 668, 669, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 3648, 404, 405,
	406, 0, 0, 407, 670, 671, 0, 672, 0, 408,
	3650, 0, 673, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 674, 0, 424, 425, 3647, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 478, 479, 480, 0, 675, 481, 676, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 0, 492, 0, 678, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 681, 512, 682, 513, 514, 2934, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 683, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 684, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 685, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 686, 594, 595,
	596, 597, 687, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 688, 689, 690, 691, 0, 622, 0, 614,
	615, 616, 692, 617, 693, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 3649, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 694,
	695, 696, 0, 637, 636, 638, 639, 697, 640, 641,
	273, 0, 0, 0, 642, 643, 698, 644, 645, 646,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 647, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 648, 649, 0, 296,
	650, 297, 651, 0, 652, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 653, 654, 655, 2932, 305,
	306, 656, 0, 0, 2926, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 2928,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 657, 658, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 2936,
	358, 659, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 660, 661, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 662, 0, 0, 0,
	374, 0, 375, 376, 377, 2935, 0, 0, 378, 379,
	380, 663, 664, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 665, 0, 666, 391, 0, 392,
	393, 394, 395, 396, 2925, 668, 669, 482, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 670, 671, 0,
	672, 0, 408, 409, 0, 673, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 674, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 478, 479, 480, 0, 675, 481,
	676, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 677, 0, 492, 0,
	678, 493, 494, 486, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 681, 512, 682, 513, 514, 2934,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	683, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	684, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 0, 575, 576, 558, 559, 577, 578, 0,
	579, 580, 581, 582, 583, 584, 585, 685, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	686, 594, 595, 596, 597, 687, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 688, 689, 690, 691, 0,
	622, 0, 614, 615, 616, 692, 617, 693, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 2933, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 694, 695, 696, 0, 637, 636, 638, 639,
	697, 640, 641, 1780, 0, 273, 0, 642, 643, 698,
	644, 645, 646, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 1779,
	286, 287, 0, 0, 0, 0, 0, 647, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 648, 649, 0, 296, 650, 297, 651, 0, 652,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	653, 654, 655, 0, 305, 306, 656, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 1778, 336, 0, 337, 339, 657, 658, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 659, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 660, 661,
	370, 0, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 662, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 663, 664, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 665,
	0, 666, 391, 0, 392, 393, 394, 395, 396, 667,
	668, 669, 482, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	0, 407, 670, 671, 0, 672, 0, 408, 409, 0,
	673, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 674, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 0, 476, 464, 0, 278, 0, 478,
	479, 480, 0, 675, 481, 676, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 677, 0, 492, 0, 678, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 681,
	512, 682, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 683, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 684, 553, 0, 554, 555,
	561, 562, 563, 1781, 557, 564, 565, 566, 567, 568,
	0, 1777, 571, 569, 572, 573, 574, 0, 575, 576,
	558, 559, 577, 578, 0, 579, 580, 581, 582, 583,
	584, 585, 685, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 686, 594, 595, 596, 597,
	687, 601, 602, 0, 603, 604, 0, 600, 591, 1775,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	688, 689, 690, 691, 0, 622, 0, 614, 615, 616,
	692, 617, 693, 0, 618, 619, 620, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	0, 632, 0, 0, 633, 634, 635, 694, 695, 696,
	0, 1776, 636, 638, 639, 697, 640, 641, 1503, 0,
	273, 0, 642, 643, 698, 644, 645, 646, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 647, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 648, 649, 0, 296,
	650, 297, 651, 0, 652, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 653, 654, 655, 0, 305,
	306, 656, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 657, 658, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 659, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 660, 661, 370, 0, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 662, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 663, 664, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 665, 0, 666, 391, 0, 392,
	393, 394, 395, 396, 1505, 668, 669, 482, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 0, 407, 670, 671, 0,
	672, 0, 408, 409, 0, 673, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 674, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 0, 476,
	464, 0, 278, 0, 478, 479, 480, 0, 675, 481,
	676, 483, 484, 0, 0, 485, 0, 0, 1265, 487,
	488, 489, 0, 0, 490, 491, 677, 0, 492, 0,
	678, 493, 494, 486, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 681, 512, 682, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	683, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	684, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 0, 575, 576, 558, 559, 577, 578, 0,
	579, 580, 581, 582, 583, 584, 585, 685, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	686, 594, 595, 596, 597, 687, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 688, 689, 690, 691, 0,
	622, 0, 614, 615, 616, 692, 617, 693, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 694, 695, 696, 0, 637, 636, 638, 639,
	697, 640, 641, 1500, 0, 273, 0, 642, 643, 698,
	644, 645, 646, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 647, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 648, 649, 0, 296, 650, 297, 651, 0, 652,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	653, 654, 655, 0, 305, 306, 656, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 657, 658, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 659, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 660, 661,
	370, 0, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 662, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 663, 664, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 665,
	0, 666, 391, 0, 392, 393, 394, 395, 396, 1502,
	668, 669, 482, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	0, 407, 670, 671, 0, 672, 0, 408, 409, 0,
	673, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 674, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 0, 476, 464, 0, 278, 0, 478,
	479, 480, 0, 675, 481, 676, 483, 484, 0, 0,
	485, 0, 0, 1265, 487, 488, 489, 0, 0, 490,
	491, 677, 0, 492, 0, 678, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 681,
	512, 682, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 683, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 684, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 0, 575, 576,
	558, 559, 577, 578, 0, 579, 580, 581, 582, 583,
	584, 585, 685, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 686, 594, 595, 596, 597,
	687, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	688, 689, 690, 691, 0, 622, 0, 614, 615, 616,
	692, 617, 693, 0, 618, 619, 620, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	0, 632, 0, 0, 633, 634, 635, 694, 695, 696,
	0, 637, 636, 638, 639, 697, 640, 641, 1406, 0,
	273, 0, 642, 643, 698, 644, 645, 646, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 647, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 648, 649, 0, 296,
	650, 297, 651, 0, 652, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 653, 654, 655, 0, 305,
	306, 656, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 657, 658, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 659, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 660, 661, 370, 0, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 662, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 663, 664, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 665, 0, 666, 391, 0, 392,
	393, 394, 395, 396, 1408, 668, 669, 482, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 0, 407, 670, 671, 0,
	672, 0, 408, 409, 0, 673, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 674, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 0, 476,
	464, 0, 278, 0, 478, 479, 480, 0, 675, 481,
	676, 483, 484, 0, 0, 485, 0, 0, 1265, 487,
	488, 489, 0, 0, 490, 491, 677, 0, 492, 0,
	678, 493, 494, 486, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 681, 512, 682, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	683, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	684, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 0, 575, 576, 558, 559, 577, 578, 0,
	579, 580, 581, 582, 583, 584, 585, 685, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	686, 594, 595, 596, 597, 687, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 688, 689, 690, 691, 0,
	622, 0, 614, 615, 616, 692, 617, 693, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 694, 695, 696, 0, 637, 636, 638, 639,
	697, 640, 641, 731, 0, 273, 0, 642, 643, 698,
	644, 645, 646, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 730, 284, 285, 719,
	286, 287, 0, 0, 0, 0, 0, 647, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 648, 649, 0, 296, 650, 297, 651, 0, 652,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	653, 654, 655, 0, 305, 306, 656, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 722, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 657, 658, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 659, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 660, 661,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 662, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 663, 664, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 728, 390, 665,
	0, 666, 391, 0, 392, 393, 394, 395, 396, 667,
	668, 669, 482, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 670, 671, 0, 672, 0, 408, 409, 0,
	673, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 674, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 0, 476, 464, 0, 0, 0, 478,
	479, 480, 0, 675, 481, 676, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 677, 0, 492, 0, 678, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 681,
	512, 682, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 683, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 684, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	724, 570, 571, 569, 572, 573, 574, 0, 575, 576,
	558, 559, 577, 578, 0, 579, 580, 581, 582, 583,
	584, 585, 685, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 686, 594, 595, 596, 597,
	687, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	688, 689, 690, 691, 0, 622, 0, 614, 615, 616,
	692, 617, 693, 0, 618, 619, 620, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	0, 632, 0, 0, 633, 634, 635, 694, 695, 696,
	0, 637, 636, 638, 639, 697, 640, 641, 718, 0,
	273, 0, 642, 643, 698, 644, 645, 646, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 719, 286, 287, 0, 0, 0,
	0, 0, 647, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 648, 649, 0, 296,
	650, 297, 651, 0, 652, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 653, 654, 655, 0, 305,
	306, 656, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 722, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 657, 658, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 659, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 660, 661, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 662, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 663, 664, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 723, 390, 665, 0, 666, 391, 0, 392,
	393, 394, 395, 396, 667, 668, 669, 482, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 670, 671, 0,
	672, 0, 408, 409, 0, 673, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 674, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 478, 479, 480, 0, 675, 481,
	676, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 677, 0, 492, 0,
	678, 493, 494, 486, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 681, 512, 682, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	683, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	684, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 724, 570, 571, 569, 572,
	573, 574, 0, 575, 576, 558, 559, 577, 578, 0,
	579, 580, 581, 582, 583, 584, 585, 685, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	686, 594, 595, 596, 597, 687, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 688, 689, 690, 691, 0,
	622, 0, 614, 615, 616, 692, 617, 693, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 694, 695, 696, 0, 637, 636, 638, 639,
	697, 640, 641, 273, 0, 0, 0, 642, 643, 698,
	644, 645, 646, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 719, 286, 287,
	0, 0, 0, 0, 0, 647, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 648,
	649, 0, 296, 650, 297, 651, 0, 652, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 653, 654,
	655, 0, 305, 306, 656, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 722, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 657, 658, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 659, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 660, 661, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 662,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 663, 664, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 723, 390, 665, 0, 666,
	391, 0, 392, 393, 394, 395, 396, 667, 668, 669,
	482, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	670, 671, 0, 672, 0, 408, 409, 0, 673, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	674, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 0, 476, 464, 0, 0, 0, 478, 479, 480,
	0, 675, 481, 676, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	0, 492, 0, 678, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 681, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 683, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 684, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 724, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	685, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 686, 594, 595, 596, 597, 687, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 688, 689,
	690, 691, 0, 622, 0, 614, 615, 616, 692, 617,
	693, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 694, 695, 696, 0, 637,
	636, 638, 639, 697, 640, 641, 273, 0, 0, 0,
	642, 643, 698, 644, 645, 646, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	719, 286, 287, 0, 0, 0, 0, 0, 647, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 0,
	652, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 653, 654, 655, 0, 305, 306, 656, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 722, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 657, 658, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 660,
	661, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 4035, 390,
	665, 0, 666, 391, 0, 392, 393, 394, 395, 396,
	667, 668, 669, 482, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 670, 671, 0, 672, 0, 408, 409,
	0, 673, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 674, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	478, 479, 480, 0, 675, 481, 676, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 0, 492, 0, 678, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	681, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 684, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 724, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 687, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 688, 689, 690, 691, 0, 622, 0, 614, 615,
	616, 692, 617, 693, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 694, 695,
	696, 0, 637, 636, 638, 639, 697, 640, 641, 273,
	0, 0, 0, 642, 643, 698, 644, 645, 646, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 647, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 648, 649, 0, 296, 650,
	297, 651, 0, 652, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 653, 654, 655, 0, 305, 306,
	656, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	657, 658, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	659, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 660, 661, 370, 0, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 662, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	663, 664, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 665, 0, 666, 391, 0, 392, 393,
	394, 395, 396, 667, 668, 669, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 0, 407, 670, 671, 0, 672,
	0, 408, 409, 0, 673, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 674, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 0, 476, 464,
	0, 278, 0, 478, 479, 480, 0, 675, 481, 676,
	483, 484, 0, 0, 485, 0, 0, 1265, 487, 488,
	489, 0, 0, 490, 491, 677, 0, 492, 0, 678,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 681, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 683,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 684,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 685, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 686,
	594, 595, 596, 597, 687, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 688, 689, 690, 691, 0, 622,
	0, 614, 615, 616, 692, 617, 693, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 694, 695, 696, 0, 637, 636, 638, 639, 697,
	640, 641, 273, 0, 0, 0, 642, 643, 698, 644,
	645, 646, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 647, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 648, 649,
	0, 296, 650, 297, 651, 0, 652, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 653, 654, 655,
	0, 305, 306, 656, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 657, 658, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 659, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 660, 661, 370, 0, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 662, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 663, 664, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 665, 0, 666, 391,
	0, 392, 393, 394, 395, 396, 667, 668, 669, 482,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 0, 407, 670,
	671, 0, 672, 0, 408, 409, 0, 673, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 674,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	3555, 476, 464, 0, 278, 0, 478, 479, 480, 0,
	675, 481, 676, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 0,
	492, 0, 678, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 681, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 683, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 684, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 0, 575, 576, 558, 559, 577,
	578, 0, 579, 580, 581, 582, 583, 584, 585, 685,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 686, 594, 595, 596, 597, 687, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 688, 689, 690,
	691, 0, 622, 0, 614, 615, 616, 692, 617, 693,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 694, 695, 696, 0, 637, 636,
	638, 639, 697, 640, 641, 3105, 0, 273, 0, 642,
	643, 698, 644, 645, 646, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 647,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 648, 649, 0, 296, 650, 297, 651,
	0, 652, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 653, 654, 655, 0, 305, 306, 656, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 657, 658,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 659, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	660, 661, 370, 0, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 662, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 663, 664,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 665, 0, 666, 391, 0, 392, 393, 394, 395,
	396, 3104, 668, 669, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 0, 407, 670, 671, 0, 672, 0, 408,
	409, 0, 673, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 674, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 0, 476, 464, 0, 278,
	0, 478, 479, 480, 0, 675, 481, 676, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 0, 492, 0, 678, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 681, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 683, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 684, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 685, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 686, 594, 595,
	596, 597, 687, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 688, 689, 690, 691, 0, 622, 0, 614,
	615, 616, 692, 617, 693, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 694,
	695, 696, 0, 637, 636, 638, 639, 697, 640, 641,
	2376, 0, 273, 0, 642, 643, 698, 644, 645, 646,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 647, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 648, 649,
	0, 296, 650, 297, 651, 0, 652, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 653, 654, 655,
	0, 305, 306, 656, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 657, 658, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 659, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 660, 661, 370, 0, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 662, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 663, 664, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 665, 0, 666, 391,
	0, 392, 393, 394, 395, 396, 667, 668, 669, 482,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 0, 407, 670,
	671, 0, 672, 0, 408, 409, 0, 673, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 674,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	0, 476, 464, 0, 278, 0, 478, 479, 480, 0,
	675, 481, 676, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 0,
	492, 0, 678, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 681, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 683, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 684, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 0, 575, 576, 558, 559, 577,
	578, 0, 579, 580, 581, 582, 583, 584, 585, 685,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 686, 594, 595, 596, 597, 687, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 688, 689, 690,
	691, 0, 622, 0, 614, 615, 616, 692, 617, 693,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 694, 695, 696, 0, 637, 636,
	638, 639, 697, 640, 641, 273, 0, 0, 0, 642,
	643, 698, 644, 645, 646, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 647, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 648, 649, 0, 296, 650, 297, 651, 0, 652,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	653, 654, 655, 0, 305, 306, 656, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 657, 658, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 659, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 660, 661,
	370, 0, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 662, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 663, 664, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 665,
	0, 666, 391, 0, 392, 393, 394, 395, 396, 667,
	668, 669, 482, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	0, 407, 670, 671, 0, 672, 0, 408, 409, 0,
	673, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 674, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 0, 476, 464, 0, 278, 0, 478,
	479, 480, 0, 675, 481, 676, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 677, 0, 492, 0, 678, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 681,
	512, 682, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 683, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 684, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 0, 575, 576,
	558, 559, 577, 578, 0, 579, 580, 581, 582, 583,
	584, 585, 685, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 686, 594, 595, 596, 597,
	687, 601, 602, 0, 603, 604, 0, 600, 591, 2314,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	688, 689, 690, 691, 0, 622, 0, 614, 615, 616,
	692, 617, 693, 0, 618, 619, 620, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	0, 632, 0, 0, 633, 634, 635, 694, 695, 696,
	0, 637, 636, 638, 639, 697, 640, 641, 2321, 0,
	273, 0, 642, 643, 698, 644, 645, 646, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 647, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 648, 649, 0, 296,
	650, 297, 651, 0, 652, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 653, 654, 655, 0, 305,
	306, 656, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 657, 658, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 659, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 660, 661, 370, 0, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 662, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 663, 664, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 665, 0, 666, 391, 0, 392,
	393, 394, 395, 396, 2320, 668, 669, 482, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 0, 407, 670, 671, 0,
	672, 0, 408, 409, 0, 673, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 674, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 0, 476,
	464, 0, 278, 0, 478, 479, 480, 0, 675, 481,
	676, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 677, 0, 492, 0,
	678, 493, 494, 486, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 681, 512, 682, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	683, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	684, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 0, 575, 576, 558, 559, 577, 578, 0,
	579, 580, 581, 582, 583, 584, 585, 685, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	686, 594, 595, 596, 597, 687, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 688, 689, 690, 691, 0,
	622, 0, 614, 615, 616, 692, 617, 693, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 694, 695, 696, 0, 637, 636, 638, 639,
	697, 640, 641, 2307, 0, 273, 0, 642, 643, 698,
	644, 645, 646, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 647, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 648, 649, 0, 296, 650, 297, 651, 0, 652,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	653, 654, 655, 0, 305, 306, 656, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 657, 658, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 659, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 660, 661,
	370, 0, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 662, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 663, 664, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 665,
	0, 666, 391, 0, 392, 393, 394, 395, 396, 2309,
	668, 669, 482, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	0, 407, 670, 671, 0, 672, 0, 408, 409, 0,
	673, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 674, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 0, 476, 464, 0, 278, 0, 478,
	479, 480, 0, 675, 481, 676, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 677, 0, 492, 0, 678, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 681,
	512, 682, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 683, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 684, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 0, 575, 576,
	558, 559, 577, 578, 0, 579, 580, 581, 582, 583,
	584, 585, 685, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 686, 594, 595, 596, 597,
	687, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	688, 689, 690, 691, 0, 622, 0, 614, 615, 616,
	692, 617, 693, 0, 618, 619, 620, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	0, 632, 0, 0, 633, 634, 635, 694, 695, 696,
	0, 637, 636, 638, 639, 697, 640, 641, 273, 0,
	0, 0, 642, 643, 698, 644, 645, 646, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	647, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 648, 649, 0, 296, 650, 297,
	651, 0, 652, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 653, 654, 655, 0, 305, 306, 656,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 657,
	658, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 659,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 660, 661, 370, 0, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 662, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 663,
	664, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 665, 0, 666, 391, 0, 392, 393, 394,
	395, 396, 2271, 668, 669, 482, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 0, 407, 670, 671, 0, 672, 0,
	408, 409, 0, 673, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 674, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 0, 476, 464, 0,
	278, 0, 478, 479, 480, 0, 675, 481, 676, 483,
	484, 0, 0, 485, 0, 0, 1265, 487, 488, 489,
	0, 0, 490, 491, 677, 0, 492, 0, 678, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 681, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 683, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 684, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	0, 575, 576, 558, 559, 577, 578, 0, 579, 580,
	581, 582, 583, 584, 585, 685, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 686, 594,
	595, 596, 597, 687, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 688, 689, 690, 691, 0, 622, 0,
	614, 615, 616, 692, 617, 693, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	694, 695, 696, 0, 637, 636, 638, 639, 697, 640,
	641, 1621, 0, 273, 0, 642, 643, 698, 644, 645,
	646, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 647, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 648,
	649, 0, 296, 650, 297, 651, 0, 652, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 653, 654,
	655, 0, 305, 306, 656, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 657, 658, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 659, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 660, 661, 370, 0,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 662,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 663, 664, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 665, 0, 666,
	391, 0, 392, 393, 394, 395, 396, 1620, 668, 669,
	482, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 0, 407,
	670, 671, 0, 672, 0, 408, 409, 0, 673, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	674, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 0, 476, 464, 0, 278, 0, 478, 479, 480,
	0, 675, 481, 676, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	0, 492, 0, 678, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 681, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 683, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 684, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	685, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 686, 594, 595, 596, 597, 687, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 688, 689,
	690, 691, 0, 622, 0, 614, 615, 616, 692, 617,
	693, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 694, 695, 696, 0, 637,
	636, 638, 639, 697, 640, 641, 1523, 0, 273, 0,
	642, 643, 698, 644, 645, 646, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	647, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 648, 649, 0, 296, 650, 297,
	651, 0, 652, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 653, 654, 655, 0, 305, 306, 656,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 657,
	658, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 659,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 660, 661, 370, 0, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 662, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 663,
	664, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 665, 0, 666, 391, 0, 392, 393, 394,
	395, 396, 667, 668, 669, 482, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 0, 407, 670, 671, 0, 672, 0,
	408, 409, 0, 673, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 674, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 0, 476, 464, 0,
	278, 0, 478, 479, 480, 0, 675, 481, 676, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 0, 492, 0, 678, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 681, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 683, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 684, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	0, 575, 576, 558, 559, 577, 578, 0, 579, 580,
	581, 582, 583, 584, 585, 685, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 686, 594,
	595, 596, 597, 687, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 688, 689, 690, 691, 0, 622, 0,
	614, 615, 616, 692, 617, 693, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	694, 695, 696, 0, 637, 636, 638, 639, 697, 640,
	641, 1516, 0, 273, 0, 642, 643, 698, 644, 645,
	646, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 647, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 648,
	649, 0, 296, 650, 297, 651, 0, 652, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 653, 654,
	655, 0, 305, 306, 656, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 657, 658, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 659, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 660, 661, 370, 0,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 662,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 663, 664, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 665, 0, 666,
	391, 0, 392, 393, 394, 395, 396, 1518, 668, 669,
	482, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 0, 407,
	670, 671, 0, 672, 0, 408, 409, 0, 673, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	674, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 0, 476, 464, 0, 278, 0, 478, 479, 480,
	0, 675, 481, 676, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	0, 492, 0, 678, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 681, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 683, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 684, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	685, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 686, 594, 595, 596, 597, 687, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 688, 689,
	690, 691, 0, 622, 0, 614, 615, 616, 692, 617,
	693, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 694, 695, 696, 0, 637,
	636, 638, 639, 697, 640, 641, 1342, 0, 273, 0,
	642, 643, 698, 644, 645, 646, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	647, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 648, 649, 0, 296, 650, 297,
	651, 0, 652, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 653, 654, 655, 0, 305, 306, 656,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 657,
	658, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 659,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 660, 661, 370, 0, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 662, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 663,
	664, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 665, 0, 666, 391, 0, 392, 393, 394,
	395, 396, 1341, 668, 669, 482, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 0, 407, 670, 671, 0, 672, 0,
	408, 409, 0, 673, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 674, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 0, 476, 464, 0,
	278, 0, 478, 479, 480, 0, 675, 481, 676, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 0, 492, 0, 678, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 681, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 683, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 684, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	0, 575, 576, 558, 559, 577, 578, 0, 579, 580,
	581, 582, 583, 584, 585, 685, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 686, 594,
	595, 596, 597, 687, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 688, 689, 690, 691, 0, 622, 0,
	614, 615, 616, 692, 617, 693, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	694, 695, 696, 0, 637, 636, 638, 639, 697, 640,
	641, 1332, 0, 273, 0, 642, 643, 698, 644, 645,
	646, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 647, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 648,
	649, 0, 296, 650, 297, 651, 0, 652, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 653, 654,
	655, 0, 305, 306, 656, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 657, 658, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 659, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 660, 661, 370, 0,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 662,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 663, 664, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 665, 0, 666,
	391, 0, 392, 393, 394, 395, 396, 1331, 668, 669,
	482, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 0, 407,
	670, 671, 0, 672, 0, 408, 409, 0, 673, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	674, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 0, 476, 464, 0, 278, 0, 478, 479, 480,
	0, 675, 481, 676, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	0, 492, 0, 678, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 681, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 683, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 684, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	685, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 686, 594, 595, 596, 597, 687, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 688, 689,
	690, 691, 0, 622, 0, 614, 615, 616, 692, 617,
	693, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 694, 695, 696, 0, 637,
	636, 638, 639, 697, 640, 641, 1329, 0, 273, 0,
	642, 643, 698, 644, 645, 646, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	647, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 648, 649, 0, 296, 650, 297,
	651, 0, 652, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 653, 654, 655, 0, 305, 306, 656,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 657,
	658, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 659,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 660, 661, 370, 0, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 662, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 663,
	664, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 665, 0, 666, 391, 0, 392, 393, 394,
	395, 396, 1328, 668, 669, 482, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 0, 407, 670, 671, 0, 672, 0,
	408, 409, 0, 673, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 674, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 0, 476, 464, 0,
	278, 0, 478, 479, 480, 0, 675, 481, 676, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 0, 492, 0, 678, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 681, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 683, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 684, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	0, 575, 576, 558, 559, 577, 578, 0, 579, 580,
	581, 582, 583, 584, 585, 685, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 686, 594,
	595, 596, 597, 687, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 688, 689, 690, 691, 0, 622, 0,
	614, 615, 616, 692, 617, 693, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	694, 695, 696, 0, 637, 636, 638, 639, 697, 640,
	641, 1324, 0, 273, 0, 642, 643, 698, 644, 645,
	646, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 647, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 648,
	649, 0, 296, 650, 297, 651, 0, 652, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 653, 654,
	655, 0, 305, 306, 656, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 657, 658, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 659, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 660, 661, 370, 0,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 662,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 663, 664, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 665, 0, 666,
	391, 0, 392, 393, 394, 395, 396, 1323, 668, 669,
	482, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 0, 407,
	670, 671, 0, 672, 0, 408, 409, 0, 673, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	674, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 0, 476, 464, 0, 278, 0, 478, 479, 480,
	0, 675, 481, 676, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	0, 492, 0, 678, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 681, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 683, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 684, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	685, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 686, 594, 595, 596, 597, 687, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 688, 689,
	690, 691, 0, 622, 0, 614, 615, 616, 692, 617,
	693, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 694, 695, 696, 0, 637,
	636, 638, 639, 697, 640, 641, 700, 0, 273, 0,
	642, 643, 698, 644, 645, 646, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	647, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 648, 649, 0, 296, 650, 297,
	651, 0, 652, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 653, 654, 655, 0, 305, 306, 656,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 657,
	658, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 659,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 660, 661, 370, 0, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 662, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 663,
	664, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 665, 0, 666, 391, 0, 392, 393, 394,
	395, 396, 667, 668, 669, 482, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 0, 407, 670, 671, 0, 672, 0,
	408, 409, 0, 673, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 674, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 0, 476, 464, 0,
	278, 0, 478, 479, 480, 0, 675, 481, 676, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 0, 492, 0, 678, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 681, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 683, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 684, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	0, 575, 576, 558, 559, 577, 578, 0, 579, 580,
	581, 582, 583, 584, 585, 685, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 686, 594,
	595, 596, 597, 687, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 688, 689, 690, 691, 0, 622, 0,
	614, 615, 616, 692, 617, 693, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	694, 695, 696, 0, 637, 636, 638, 639, 697, 640,
	641, 264, 0, 273, 0, 642, 643, 698, 644, 645,
	646, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 647, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 648,
	649, 0, 296, 650, 297, 651, 0, 652, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 653, 654,
	655, 0, 305, 306, 656, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 657, 658, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 659, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 660, 661, 370, 0,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 662,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 663, 664, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 665, 0, 666,
	391, 0, 392, 393, 394, 395, 396, 667, 668, 669,
	482, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 0, 407,
	670, 671, 0, 672, 0, 408, 409, 0, 673, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	674, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 0, 476, 464, 0, 278, 0, 478, 479, 480,
	0, 675, 481, 676, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	0, 492, 0, 678, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 681, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 683, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 684, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	685, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 686, 594, 595, 596, 597, 687, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 688, 689,
	690, 691, 0, 622, 0, 614, 615, 616, 692, 617,
	693, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 694, 695, 696, 0, 637,
	636, 638, 639, 697, 640, 641, 273, 0, 0, 0,
	642, 643, 698, 644, 645, 646, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 647, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 0,
	652, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 653, 654, 655, 0, 305, 306, 656, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 657, 658, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 660,
	661, 370, 0, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	665, 0, 666, 391, 0, 392, 393, 394, 395, 396,
	667, 668, 669, 482, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 0, 407, 670, 671, 0, 672, 0, 408, 409,
	0, 673, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 674, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 0, 476, 464, 0, 278, 0,
	478, 479, 480, 0, 675, 481, 676, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 0, 492, 0, 678, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	681, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 684, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 687, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 688, 689, 690, 691, 0, 622, 0, 614, 615,
	616, 692, 617, 693, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 694, 695,
	696, 0, 637, 636, 638, 639, 697, 640, 641, 273,
	0, 0, 0, 642, 643, 698, 644, 645, 646, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 647, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 648, 649, 0, 296, 650,
	297, 651, 0, 652, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 653, 654, 655, 0, 305, 306,
	656, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 722, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	657, 658, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	659, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 660, 661, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 662, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	663, 664, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 723, 390, 665, 0, 666, 391, 0, 392, 393,
	394, 395, 396, 667, 668, 669, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 670, 671, 0, 672,
	0, 408, 409, 0, 673, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 674, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 0, 476, 464,
	0, 0, 0, 478, 479, 480, 0, 675, 481, 676,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 0, 492, 0, 678,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 681, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 683,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 684,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 724, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 685, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 686,
	594, 595, 596, 597, 687, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 688, 689, 690, 691, 0, 622,
	0, 614, 615, 616, 692, 617, 693, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 694, 695, 696, 0, 637, 636, 638, 639, 697,
	640, 641, 273, 0, 0, 0, 642, 643, 698, 644,
	645, 646, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 647, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 648, 649,
	0, 296, 650, 297, 651, 0, 652, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 653, 654, 655,
	0, 305, 306, 656, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 2416, 336,
	0, 337, 339, 657, 658, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 659, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 660, 661, 370, 0, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 662, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 663, 664, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 665, 0, 666, 391,
	0, 392, 393, 394, 395, 396, 667, 668, 669, 482,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 0, 407, 670,
	671, 0, 672, 0, 408, 409, 0, 673, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 674,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	0, 476, 464, 0, 278, 0, 478, 479, 480, 0,
	675, 481, 676, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 0,
	492, 0, 678, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 681, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 683, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 684, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 0, 575, 576, 558, 559, 577,
	578, 0, 579, 580, 581, 582, 583, 584, 585, 685,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 686, 594, 595, 596, 597, 687, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 688, 689, 690,
	691, 0, 622, 0, 614, 615, 616, 692, 617, 693,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 694, 695, 696, 0, 637, 636,
	638, 639, 697, 640, 641, 273, 0, 0, 0, 642,
	643, 698, 644, 645, 646, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 647, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 648, 649, 0, 296, 650, 297, 651, 0, 652,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	653, 654, 655, 0, 305, 306, 656, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 2414, 336, 0, 337, 339, 657, 658, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 659, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 660, 661,
	370, 0, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 662, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 663, 664, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 665,
	0, 666, 391, 0, 392, 393, 394, 395, 396, 667,
	668, 669, 482, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	0, 407, 670, 671, 0, 672, 0, 408, 409, 0,
	673, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 674, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 0, 476, 464, 0, 278, 0, 478,
	479, 480, 0, 675, 481, 676, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 677, 0, 492, 0, 678, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 681,
	512, 682, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 683, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 684, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 0, 575, 576,
	558, 559, 577, 578, 0, 579, 580, 581, 582, 583,
	584, 585, 685, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 686, 594, 595, 596, 597,
	687, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	688, 689, 690, 691, 0, 622, 0, 614, 615, 616,
	692, 617, 693, 0, 618, 619, 620, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	0, 632, 0, 0, 633, 634, 635, 694, 695, 696,
	0, 637, 636, 638, 639, 697, 640, 641, 273, 0,
	0, 0, 642, 643, 698, 644, 645, 646, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	647, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 648, 649, 0, 296, 650, 297,
	651, 0, 652, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 653, 654, 655, 0, 305, 306, 656,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 2412, 336, 0, 337, 339, 657,
	658, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 659,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 660, 661, 370, 0, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 662, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 663,
	664, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 665, 0, 666, 391, 0, 392, 393, 394,
	395, 396, 667, 668, 669, 482, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 0, 407, 670, 671, 0, 672, 0,
	408, 409, 0, 673, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 674, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 0, 476, 464, 0,
	278, 0, 478, 479, 480, 0, 675, 481, 676, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 0, 492, 0, 678, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 681, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 683, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 684, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	0, 575, 576, 558, 559, 577, 578, 0, 579, 580,
	581, 582, 583, 584, 585, 685, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 686, 594,
	595, 596, 597, 687, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 688, 689, 690, 691, 0, 622, 0,
	614, 615, 616, 692, 617, 693, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	694, 695, 696, 0, 637, 636, 638, 639, 697, 640,
	641, 273, 0, 0, 0, 642, 643, 698, 644, 645,
	646, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 647, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 0, 652, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 653, 654, 655, 0,
	305, 306, 656, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 660, 661, 370, 0, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 665, 0, 666, 391, 0,
	392, 393, 394, 395, 396, 2327, 668, 669, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 0, 407, 670, 671,
	0, 672, 0, 408, 409, 0, 673, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 674, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 0,
	476, 464, 0, 278, 0, 478, 479, 480, 0, 675,
	481, 676, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 0, 492,
	0, 678, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 681, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 684, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 687, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 688, 689, 690, 691,
	0, 622, 0, 614, 615, 616, 692, 617, 693, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 694, 695, 696, 0, 637, 636, 638,
	639, 697, 640, 641, 273, 0, 0, 0, 642, 643,
	698, 644, 645, 646, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 647, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 0, 652, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 653,
	654, 655, 0, 305, 306, 656, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 657, 658, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 660, 661, 370,
	0, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	662, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 665, 0,
	666, 391, 0, 392, 393, 394, 395, 396, 2114, 668,
	669, 482, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 0,
	407, 670, 671, 0, 672, 0, 408, 409, 0, 673,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 674, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 0, 476, 464, 0, 278, 0, 478, 479,
	480, 0, 675, 481, 676, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 0, 492, 0, 678, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 681, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 683, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 684, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 0, 575, 576, 558,
	559, 577, 578, 0, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 687,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 688,
	689, 690, 691, 0, 622, 0, 614, 615, 616, 692,
	617, 693, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 694, 695, 696, 0,
	637, 636, 638, 639, 697, 640, 641, 273, 0, 0,
	0, 642, 643, 698, 644, 645, 646, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 647,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 648, 649, 0, 296, 650, 297, 651,
	0, 652, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 653, 654, 655, 0, 305, 306, 656, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 657, 658,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 659, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	660, 661, 370, 0, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 662, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 663, 664,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 665, 0, 666, 391, 0, 392, 393, 394, 395,
	396, 2108, 668, 669, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 0, 407, 670, 671, 0, 672, 0, 408,
	409, 0, 673, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 674, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 0, 476, 464, 0, 278,
	0, 478, 479, 480, 0, 675, 481, 676, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 0, 492, 0, 678, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 681, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 683, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 684, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 685, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 686, 594, 595,
	596, 597, 687, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 688, 689, 690, 691, 0, 622, 0, 614,
	615, 616, 692, 617, 693, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 694,
	695, 696, 0, 637, 636, 638, 639, 697, 640, 641,
	910, 0, 273, 0, 642, 643, 698, 644, 645, 646,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 647, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 648, 649,
	0, 296, 650, 297, 651, 0, 652, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 653, 654, 655,
	0, 305, 306, 656, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 657, 658, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 659, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 660, 661, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 662, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 663, 664, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 665, 0, 666, 391,
	0, 392, 393, 394, 395, 396, 667, 668, 669, 482,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 670,
	671, 0, 672, 909, 408, 409, 0, 673, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 674,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 478, 479, 480, 0,
	675, 481, 676, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 0,
	492, 0, 678, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 681, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 683, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 684, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 0, 575, 576, 558, 559, 577,
	578, 0, 579, 580, 581, 582, 583, 584, 585, 685,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 686, 594, 595, 596, 597, 687, 601, 602,
	0, 603, 604, 0, 600, 591, 908, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 688, 689, 690,
	691, 0, 622, 0, 614, 615, 616, 692, 617, 693,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 694, 695, 696, 0, 637, 636,
	638, 639, 697, 640, 641, 273, 0, 0, 0, 642,
	643, 698, 644, 645, 646, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 647, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 648, 649, 0, 296, 650, 297, 651, 0, 652,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	653, 654, 655, 0, 305, 306, 656, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 657, 658, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 659, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 660, 661,
	370, 0, 3651, 0, 0, 0, 0, 0, 371, 372,
	373, 662, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 663, 664, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 665,
	0, 666, 391, 0, 392, 393, 394, 395, 396, 667,
	668, 669, 482, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 670, 671, 0, 672, 0, 408, 409, 0,
	673, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 674, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 0, 476, 464, 0, 0, 0, 478,
	479, 480, 0, 675, 481, 676, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 677, 0, 492, 0, 678, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 681,
	512, 682, 513, 514, 4348, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 683, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 684, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 0, 575, 576,
	558, 559, 577, 578, 0, 579, 580, 581, 582, 583,
	584, 585, 685, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 686, 594, 595, 596, 597,
	687, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	688, 689, 690, 691, 0, 622, 0, 614, 615, 616,
	692, 617, 693, 0, 618, 619, 620, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	0, 632, 0, 0, 633, 634, 635, 694, 695, 696,
	0, 637, 636, 638, 639, 697, 640, 641, 1370, 0,
	273, 0, 642, 643, 698, 644, 645, 646, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 647, 0, 0, 0, 0, 288, 289, 1373,
	290, 291, 292, 293, 294, 295, 648, 649, 0, 296,
	650, 297, 651, 0, 652, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 653, 654, 1371, 0, 305,
	306, 656, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 657, 658, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 659, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 660, 661, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 662, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 663, 664, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 665, 0, 666, 391, 0, 392,
	393, 394, 395, 396, 667, 668, 669, 482, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 670, 671, 0,
	672, 0, 408, 409, 0, 673, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 674, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	791, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 478, 479, 480, 0, 675, 481,
	676, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 677, 0, 492, 0,
	678, 493, 494, 486, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 681, 512, 682, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	683, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 0, 790, 549, 550, 551, 552,
	684, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	789, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	1374, 574, 0, 575, 576, 558, 559, 577, 578, 0,
	579, 580, 581, 582, 583, 584, 585, 685, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	686, 594, 595, 596, 597, 687, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 787, 689, 690, 691, 0,
	622, 0, 614, 615, 616, 692, 617, 693, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 694, 695, 696, 0, 637, 636, 638, 639,
	697, 640, 641, 1370, 0, 273, 0, 642, 643, 698,
	644, 645, 646, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 647, 0, 0,
	0, 0, 288, 289, 1373, 290, 291, 292, 293, 294,
	295, 648, 649, 0, 296, 650, 297, 651, 0, 652,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	653, 654, 1371, 0, 305, 306, 656, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 657, 658, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 659, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 660, 661,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 662, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 663, 664, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 665,
	0, 666, 391, 0, 392, 393, 394, 395, 396, 667,
	668, 669, 482, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 670, 671, 0, 672, 0, 408, 409, 0,
	673, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 674, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 791, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 0, 476, 464, 0, 0, 0, 478,
	479, 480, 0, 675, 481, 676, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 677, 0, 492, 0, 678, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 681,
	512, 682, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 683, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 0,
	790, 549, 550, 551, 552, 684, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 789, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 1374, 574, 0, 575, 576,
	558, 559, 577, 578, 0, 579, 580, 581, 582, 583,
	584, 585, 685, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 686, 594, 595, 596, 597,
	687, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	787, 689, 690, 691, 0, 622, 0, 614, 1372, 616,
	692, 617, 693, 0, 618, 619, 620, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	0, 632, 0, 0, 633, 634, 635, 694, 695, 696,
	0, 637, 636, 638, 639, 697, 640, 641, 709, 0,
	273, 0, 642, 643, 698, 644, 645, 646, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 708, 286, 287, 0, 0, 0,
	0, 0, 647, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 648, 649, 0, 296,
	650, 297, 651, 0, 652, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 653, 654, 655, 0, 305,
	306, 656, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 657, 658, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 659, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 660, 661, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 662, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 663, 664, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 665, 0, 666, 391, 0, 392,
	393, 394, 395, 396, 667, 668, 669, 482, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 670, 671, 0,
	672, 0, 408, 409, 0, 673, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 674, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 478, 479, 480, 0, 675, 481,
	676, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 677, 0, 492, 0,
	678, 493, 494, 486, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 681, 512, 682, 707, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	683, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	684, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 0, 575, 576, 558, 559, 577, 578, 0,
	579, 580, 581, 582, 583, 584, 585, 685, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	686, 594, 595, 596, 597, 687, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 688, 689, 690, 691, 0,
	622, 0, 614, 615, 616, 692, 617, 693, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 694, 695, 696, 0, 637, 636, 638, 639,
	697, 640, 641, 273, 3147, 0, 0, 642, 643, 698,
	644, 645, 646, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 647, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 648,
	649, 0, 296, 650, 297, 651, 0, 652, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 653, 654,
	655, 0, 305, 306, 656, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 657, 658, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 659, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 660, 661, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 662,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 663, 664, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 665, 0, 666,
	391, 0, 392, 393, 394, 395, 396, 667, 668, 669,
	482, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	670, 671, 0, 672, 0, 408, 409, 0, 673, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	674, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 0, 476, 464, 0, 0, 0, 478, 479, 480,
	0, 675, 481, 676, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	0, 492, 0, 678, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 681, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 683, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 684, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	685, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 686, 594, 595, 596, 597, 687, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 688, 689,
	690, 691, 0, 622, 0, 614, 615, 616, 692, 617,
	693, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 694, 695, 696, 0, 637,
	636, 638, 639, 697, 640, 641, 273, 4364, 0, 0,
	642, 643, 698, 644, 645, 646, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 647, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 0,
	652, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 653, 654, 655, 0, 305, 306, 656, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 657, 658, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 660,
	661, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	665, 0, 666, 391, 0, 392, 393, 394, 395, 396,
	667, 668, 669, 482, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 670, 671, 0, 672, 0, 408, 409,
	0, 673, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 674, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	478, 479, 480, 0, 675, 481, 676, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 0, 492, 0, 678, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	681, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 684, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 687, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 688, 689, 690, 691, 0, 622, 0, 614, 615,
	616, 692, 617, 693, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 694, 695,
	696, 0, 637, 636, 638, 639, 697, 640, 641, 273,
	0, 0, 0, 642, 643, 698, 644, 645, 646, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 647, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 648, 649, 0, 296, 650,
	297, 651, 0, 652, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 653, 654, 655, 0, 305, 306,
	656, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	657, 658, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	659, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 660, 661, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 662, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	663, 664, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 665, 0, 666, 391, 0, 392, 393,
	394, 395, 396, 667, 668, 669, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 670, 671, 0, 672,
	0, 408, 409, 0, 673, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 674, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 0, 476, 464,
	0, 0, 0, 478, 479, 480, 0, 675, 481, 676,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 0, 492, 0, 678,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 681, 512, 682, 513, 514, 4647, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 683,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 684,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 685, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 686,
	594, 595, 596, 597, 687, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 688, 689, 690, 691, 0, 622,
	0, 614, 615, 616, 692, 617, 693, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 694, 695, 696, 0, 637, 636, 638, 639, 697,
	640, 641, 273, 0, 0, 0, 642, 643, 698, 644,
	645, 646, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 647, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 648, 649,
	0, 296, 650, 297, 651, 0, 652, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 653, 654, 655,
	0, 305, 306, 656, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 657, 658, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 659, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 660, 661, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 662, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 663, 664, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 665, 0, 666, 391,
	0, 392, 393, 394, 395, 396, 667, 668, 669, 482,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 670,
	671, 0, 672, 0, 408, 409, 0, 673, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 674,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 478, 479, 480, 0,
	675, 481, 676, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 0,
	492, 0, 678, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 681, 512, 682, 513,
	514, 4239, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 683, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 684, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 0, 575, 576, 558, 559, 577,
	578, 0, 579, 580, 581, 582, 583, 584, 585, 685,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 686, 594, 595, 596, 597, 687, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 688, 689, 690,
	691, 0, 622, 0, 614, 615, 616, 692, 617, 693,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 694, 695, 696, 0, 637, 636,
	638, 639, 697, 640, 641, 273, 0, 0, 0, 642,
	643, 698, 644, 645, 646, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 647, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 648, 649, 0, 296, 650, 297, 651, 0, 652,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	653, 654, 655, 0, 305, 306, 656, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 657, 658, 3986, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 659, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 660, 661,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 662, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 663, 664, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 665,
	0, 666, 391, 0, 392, 393, 394, 395, 396, 667,
	668, 669, 482, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 670, 671, 0, 672, 0, 408, 409, 0,
	673, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 674, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 0, 476, 464, 0, 0, 0, 478,
	479, 480, 0, 675, 481, 676, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 677, 0, 492, 0, 678, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 681,
	512, 682, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 683, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 684, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 0, 575, 576,
	558, 559, 577, 578, 0, 579, 580, 581, 582, 583,
	584, 585, 685, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 686, 594, 595, 596, 597,
	687, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	688, 689, 690, 691, 0, 622, 0, 614, 615, 616,
	692, 617, 693, 0, 618, 619, 620, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	0, 632, 0, 0, 633, 634, 635, 694, 695, 696,
	0, 637, 636, 638, 639, 697, 640, 641, 273, 0,
	0, 0, 642, 643, 698, 644, 645, 646, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	647, 0, 2813, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 648, 649, 0, 296, 650, 297,
	651, 0, 652, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 653, 654, 655, 0, 305, 306, 656,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 657,
	658, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 659,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 660, 661, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 662, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 663,
	664, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 665, 0, 666, 391, 0, 392, 393, 394,
	395, 396, 667, 668, 669, 482, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 670, 671, 0, 672, 0,
	408, 409, 0, 673, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 674, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 0, 476, 464, 0,
	0, 0, 478, 479, 480, 0, 675, 481, 676, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 0, 492, 0, 678, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 681, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 683, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 684, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	0, 575, 576, 558, 559, 577, 578, 0, 579, 580,
	581, 582, 583, 584, 585, 685, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 686, 594,
	595, 596, 597, 687, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 688, 689, 690, 691, 0, 622, 0,
	614, 615, 616, 692, 617, 693, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	694, 695, 696, 0, 637, 636, 638, 639, 697, 640,
	641, 273, 3147, 0, 0, 642, 643, 698, 644, 645,
	646, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 647, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 0, 652, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 653, 654, 655, 0,
	305, 306, 656, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 660, 661, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 665, 0, 666, 391, 0,
	392, 393, 394, 395, 396, 667, 668, 669, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 670, 671,
	0, 672, 0, 408, 409, 0, 673, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 674, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 478, 479, 480, 0, 675,
	481, 676, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 3144, 0, 0, 490, 491, 677, 0, 492,
	0, 678, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 681, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 684, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 687, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 688, 689, 690, 691,
	0, 622, 0, 614, 615, 616, 692, 617, 693, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 694, 695, 696, 0, 637, 636, 638,
	639, 697, 640, 641, 273, 0, 0, 0, 642, 643,
	698, 644, 645, 646, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 647, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 0, 652, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 653,
	654, 655, 0, 305, 306, 656, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 657, 658, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 660, 661, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	662, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 665, 0,
	666, 391, 0, 392, 393, 394, 395, 396, 667, 668,
	669, 482, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 670, 671, 0, 672, 0, 408, 409, 0, 673,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 674, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 0, 476, 464, 0, 0, 0, 478, 479,
	480, 0, 675, 481, 676, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 0, 492, 0, 678, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 681, 512,
	682, 513, 514, 2232, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 683, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 0, 790,
	549, 550, 551, 552, 684, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 789, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 0, 575, 576, 558,
	559, 577, 578, 0, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 687,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 787,
	689, 690, 691, 0, 622, 0, 614, 615, 616, 692,
	617, 693, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 694, 695, 696, 0,
	637, 636, 638, 639, 697, 640, 641, 273, 0, 0,
	0, 642, 643, 698, 644, 645, 646, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 2386, 286, 287, 0, 0, 0, 0, 0, 647,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 648, 649, 0, 296, 650, 297, 651,
	0, 652, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 653, 654, 655, 0, 305, 306, 656, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 657, 658,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 659, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	660, 661, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 662, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 663, 664,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 665, 0, 666, 391, 0, 392, 393, 394, 395,
	396, 667, 668, 669, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 670, 671, 0, 672, 0, 408,
	409, 0, 673, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 674, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 478, 479, 480, 0, 675, 481, 676, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 0, 492, 0, 678, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 681, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 683, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 684, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 685, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 686, 594, 595,
	596, 597, 687, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 688, 689, 690, 691, 0, 622, 0, 614,
	615, 616, 692, 617, 693, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 694,
	695, 696, 0, 637, 636, 638, 639, 697, 640, 641,
	2374, 0, 273, 0, 642, 643, 698, 644, 645, 646,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 647, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 648, 649,
	0, 296, 650, 297, 651, 0, 652, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 653, 654, 655,
	0, 305, 306, 656, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 657, 658, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 659, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 660, 661, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 662, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 663, 664, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 665, 0, 666, 391,
	0, 392, 393, 394, 395, 396, 667, 668, 669, 482,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 670,
	671, 0, 672, 0, 408, 409, 0, 673, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 674,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 478, 479, 480, 0,
	675, 481, 676, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 0,
	492, 0, 678, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 681, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 683, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 684, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 0, 575, 576, 558, 559, 577,
	578, 0, 579, 580, 581, 582, 583, 584, 585, 685,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 686, 594, 595, 596, 597, 687, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 688, 689, 690,
	691, 0, 622, 0, 614, 615, 616, 692, 617, 693,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 694, 695, 696, 0, 637, 636,
	638, 639, 697, 640, 641, 1676, 0, 273, 0, 642,
	643, 698, 644, 645, 646, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 647,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 648, 649, 0, 296, 650, 297, 651,
	0, 652, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 653, 654, 655, 0, 305, 306, 656, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 657, 658,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 659, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	660, 661, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 662, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 663, 664,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 665, 0, 666, 391, 0, 392, 393, 394, 395,
	396, 667, 668, 669, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 670, 671, 0, 672, 0, 408,
	409, 0, 673, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 674, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 478, 479, 480, 0, 675, 481, 676, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 0, 492, 0, 678, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 681, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 683, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 684, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 685, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 686, 594, 595,
	596, 597, 687, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 688, 689, 690, 691, 0, 622, 0, 614,
	615, 616, 692, 617, 693, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 694,
	695, 696, 0, 637, 636, 638, 639, 697, 640, 641,
	1669, 0, 273, 0, 642, 643, 698, 644, 645, 646,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 647, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 648, 649,
	0, 296, 650, 297, 651, 0, 652, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 653, 654, 655,
	0, 305, 306, 656, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 657, 658, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 659, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 660, 661, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 662, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 663, 664, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 665, 0, 666, 391,
	0, 392, 393, 394, 395, 396, 667, 668, 669, 482,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 670,
	671, 0, 672, 0, 408, 409, 0, 673, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 674,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 478, 479, 480, 0,
	675, 481, 676, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 0,
	492, 0, 678, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 681, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 683, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 684, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 0, 575, 576, 558, 559, 577,
	578, 0, 579, 580, 581, 582, 583, 584, 585, 685,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 686, 594, 595, 596, 597, 687, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 688, 689, 690,
	691, 0, 622, 0, 614, 615, 616, 692, 617, 693,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 694, 695, 696, 0, 637, 636,
	638, 639, 697, 640, 641, 781, 0, 273, 0, 642,
	643, 698, 644, 645, 646, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 647,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 648, 649, 0, 296, 650, 297, 651,
	0, 652, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 653, 654, 655, 0, 305, 777, 656, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 657, 658,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 659, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	660, 661, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 662, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 663, 664,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 665, 0, 666, 391, 0, 392, 393, 394, 395,
	396, 667, 668, 669, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 670, 671, 0, 672, 0, 408,
	409, 0, 673, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 674, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 782, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 791, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 478, 479, 480, 0, 675, 481, 676, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 0, 492, 0, 678, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 681, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 683, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 790, 549, 550, 551, 552, 684, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 789, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 1654, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 685, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 686, 594, 595,
	596, 597, 687, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 787, 689, 690, 691, 0, 622, 0, 614,
	615, 616, 692, 617, 693, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 694,
	695, 696, 0, 637, 636, 638, 639, 697, 640, 641,
	1627, 0, 273, 0, 642, 643, 698, 644, 645, 646,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 647, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 648, 649,
	0, 296, 650, 297, 651, 0, 652, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 653, 654, 655,
	0, 305, 306, 656, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 657, 658, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 659, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 660, 661, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 662, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 663, 664, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 665, 0, 666, 391,
	0, 392, 393, 394, 395, 396, 1626, 668, 669, 482,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 670,
	671, 0, 672, 0, 408, 409, 0, 673, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 674,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 478, 479, 480, 0,
	675, 481, 676, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 0,
	492, 0, 678, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 681, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 683, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 684, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 0, 575, 576, 558, 559, 577,
	578, 0, 579, 580, 581, 582, 583, 584, 585, 685,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 686, 594, 595, 596, 597, 687, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 688, 689, 690,
	691, 0, 622, 0, 614, 615, 616, 692, 617, 693,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 694, 695, 696, 0, 637, 636,
	638, 639, 697, 640, 641, 1611, 0, 273, 0, 642,
	643, 698, 644, 645, 646, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 647,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 648, 649, 0, 296, 650, 297, 651,
	0, 652, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 653, 654, 655, 0, 305, 306, 656, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 657, 658,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 659, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	660, 661, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 662, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 663, 664,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 665, 0, 666, 391, 0, 392, 393, 394, 395,
	396, 1609, 668, 669, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 670, 671, 0, 672, 0, 408,
	409, 0, 673, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 674, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 478, 479, 480, 0, 675, 481, 676, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 0, 492, 0, 678, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 681, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 683, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 684, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 685, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 686, 594, 595,
	596, 597, 687, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 688, 689, 690, 691, 0, 622, 0, 614,
	615, 616, 692, 617, 693, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 694,
	695, 696, 0, 637, 636, 638, 639, 697, 640, 641,
	1604, 0, 273, 0, 642, 643, 698, 644, 645, 646,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 647, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 648, 649,
	0, 296, 650, 297, 651, 0, 652, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 653, 654, 655,
	0, 305, 306, 656, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 657, 658, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 659, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 660, 661, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 662, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 663, 664, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 665, 0, 666, 391,
	0, 392, 393, 394, 395, 396, 667, 668, 669, 482,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 670,
	671, 0, 672, 0, 408, 409, 0, 673, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 674,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 478, 479, 480, 0,
	675, 481, 676, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 0,
	492, 0, 678, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 681, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 683, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 684, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 0, 575, 576, 558, 559, 577,
	578, 0, 579, 580, 581, 582, 583, 584, 585, 685,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 686, 594, 595, 596, 597, 687, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 688, 689, 690,
	691, 0, 622, 0, 614, 615, 616, 692, 617, 693,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 694, 695, 696, 0, 637, 636,
	638, 639, 697, 640, 641, 1581, 0, 273, 0, 642,
	643, 698, 644, 645, 646, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 647,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 648, 649, 0, 296, 650, 297, 651,
	0, 652, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 653, 654, 655, 0, 305, 306, 656, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 657, 658,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 659, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	660, 661, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 662, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 663, 664,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 665, 0, 666, 391, 0, 392, 393, 394, 395,
	396, 1579, 668, 669, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 670, 671, 0, 672, 0, 408,
	409, 0, 673, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 674, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 478, 479, 480, 0, 675, 481, 676, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 0, 492, 0, 678, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 681, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 683, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 684, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 685, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 686, 594, 595,
	596, 597, 687, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 688, 689, 690, 691, 0, 622, 0, 614,
	615, 616, 692, 617, 693, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 694,
	695, 696, 0, 637, 636, 638, 639, 697, 640, 641,
	1566, 0, 273, 0, 642, 643, 698, 644, 645, 646,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 647, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 648, 649,
	0, 296, 650, 297, 651, 0, 652, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 653, 654, 655,
	0, 305, 306, 656, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 657, 658, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 659, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 660, 661, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 662, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 663, 664, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 665, 0, 666, 391,
	0, 392, 393, 394, 395, 396, 667, 668, 669, 482,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 670,
	671, 0, 672, 0, 408, 409, 0, 673, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 674,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 478, 479, 480, 0,
	675, 481, 676, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 0,
	492, 0, 678, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 681, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 683, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 684, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 0, 575, 576, 558, 559, 577,
	578, 0, 579, 580, 581, 582, 583, 584, 585, 685,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 686, 594, 595, 596, 597, 687, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 688, 689, 690,
	691, 0, 622, 0, 614, 615, 616, 692, 617, 693,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 694, 695, 696, 0, 637, 636,
	638, 639, 697, 640, 641, 1528, 0, 273, 0, 642,
	643, 698, 644, 645, 646, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 647,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 648, 649, 0, 296, 650, 297, 651,
	0, 652, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 653, 654, 655, 0, 305, 306, 656, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 657, 658,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 659, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	660, 661, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 662, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 663, 664,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 665, 0, 666, 391, 0, 392, 393, 394, 395,
	396, 667, 668, 669, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 670, 671, 0, 672, 0, 408,
	409, 0, 673, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 674, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 478, 479, 480, 0, 675, 481, 676, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 0, 492, 0, 678, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 681, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 683, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 684, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 685, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 686, 594, 595,
	596, 597, 687, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 688, 689, 690, 691, 0, 622, 0, 614,
	615, 616, 692, 617, 693, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 694,
	695, 696, 0, 637, 636, 638, 639, 697, 640, 641,
	1508, 0, 273, 0, 642, 643, 698, 644, 645, 646,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 647, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 648, 649,
	0, 296, 650, 297, 651, 0, 652, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 653, 654, 655,
	0, 305, 306, 656, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 657, 658, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 659, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 660, 661, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 662, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 663, 664, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 665, 0, 666, 391,
	0, 392, 393, 394, 395, 396, 667, 668, 669, 482,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 670,
	671, 0, 672, 0, 408, 409, 0, 673, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 674,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 478, 479, 480, 0,
	675, 481, 676, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 0,
	492, 0, 678, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 681, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 683, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 684, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 0, 575, 576, 558, 559, 577,
	578, 0, 579, 580, 581, 582, 583, 584, 585, 685,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 686, 594, 595, 596, 597, 687, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 688, 689, 690,
	691, 0, 622, 0, 614, 615, 616, 692, 617, 693,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 694, 695, 696, 0, 637, 636,
	638, 639, 697, 640, 641, 1376, 0, 273, 0, 642,
	643, 698, 644, 645, 646, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 647,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 648, 649, 0, 296, 650, 297, 651,
	0, 652, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 653, 654, 655, 0, 305, 306, 656, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 657, 658,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 659, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	660, 661, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 662, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 663, 664,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 665, 0, 666, 391, 0, 392, 393, 394, 395,
	396, 667, 668, 669, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 670, 671, 0, 672, 0, 408,
	409, 0, 673, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 674, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 478, 479, 480, 0, 675, 481, 676, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 0, 492, 0, 678, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 681, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 683, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 790, 549, 550, 551, 552, 684, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 789, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 685, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 686, 594, 595,
	596, 597, 687, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 787, 689, 690, 691, 0, 622, 0, 614,
	615, 616, 692, 617, 693, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 694,
	695, 696, 0, 637, 636, 638, 639, 697, 640, 641,
	1347, 0, 273, 0, 642, 643, 698, 644, 645, 646,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 647, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 648, 649,
	0, 296, 650, 297, 651, 0, 652, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 653, 654, 655,
	0, 305, 306, 656, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 657, 658, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 659, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 660, 661, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 662, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 663, 664, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 665, 0, 666, 391,
	0, 392, 393, 394, 395, 396, 1346, 668, 669, 482,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 670,
	671, 0, 672, 0, 408, 409, 0, 673, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 674,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 478, 479, 480, 0,
	675, 481, 676, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 0,
	492, 0, 678, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 681, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 683, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 684, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 0, 575, 576, 558, 559, 577,
	578, 0, 579, 580, 581, 582, 583, 584, 585, 685,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 686, 594, 595, 596, 597, 687, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 688, 689, 690,
	691, 0, 622, 0, 614, 615, 616, 692, 617, 693,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 694, 695, 696, 0, 637, 636,
	638, 639, 697, 640, 641, 1338, 0, 273, 0, 642,
	643, 698, 644, 645, 646, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 647,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 648, 649, 0, 296, 650, 297, 651,
	0, 652, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 653, 654, 655, 0, 305, 306, 656, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 657, 658,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 659, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	660, 661, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 662, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 663, 664,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 665, 0, 666, 391, 0, 392, 393, 394, 395,
	396, 1337, 668, 669, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 670, 671, 0, 672, 0, 408,
	409, 0, 673, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 674, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 478, 479, 480, 0, 675, 481, 676, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 0, 492, 0, 678, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 681, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 683, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 684, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 685, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 686, 594, 595,
	596, 597, 687, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 688, 689, 690, 691, 0, 622, 0, 614,
	615, 616, 692, 617, 693, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 694,
	695, 696, 0, 637, 636, 638, 639, 697, 640, 641,
	273, 0, 0, 0, 642, 643, 698, 644, 645, 646,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 1290, 286, 287, 0, 0, 0,
	0, 0, 647, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 648, 649, 0, 296,
	650, 297, 651, 0, 652, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 653, 654, 655, 0, 305,
	306, 656, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 657, 658, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 659, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 660, 661, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 662, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 663, 664, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 665, 0, 666, 391, 0, 392,
	393, 394, 395, 396, 667, 668, 669, 482, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 670, 671, 0,
	672, 0, 408, 409, 0, 673, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 674, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 478, 479, 480, 0, 675, 481,
	676, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 677, 0, 492, 0,
	678, 493, 494, 486, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 681, 512, 682, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	683, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	684, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 0, 575, 576, 558, 559, 577, 578, 0,
	579, 580, 581, 582, 583, 584, 585, 685, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	686, 594, 595, 596, 597, 687, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 688, 689, 690, 691, 0,
	622, 0, 614, 615, 616, 692, 617, 693, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 694, 695, 696, 0, 637, 636, 638, 639,
	697, 640, 641, 273, 0, 0, 0, 642, 643, 698,
	644, 645, 646, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 796, 286, 287,
	0, 0, 0, 0, 0, 647, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 648,
	649, 0, 296, 650, 297, 651, 0, 652, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 653, 654,
	655, 0, 305, 306, 656, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 657, 658, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 659, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 660, 661, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 662,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 663, 664, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 665, 0, 666,
	391, 0, 392, 393, 394, 395, 396, 667, 668, 669,
	482, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	670, 671, 0, 672, 0, 408, 409, 0, 673, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	674, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 0, 476, 464, 0, 0, 0, 478, 479, 480,
	0, 675, 481, 676, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	0, 492, 0, 678, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 681, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 683, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 684, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	685, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 686, 594, 595, 596, 597, 687, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 688, 689,
	690, 691, 0, 622, 0, 614, 615, 616, 692, 617,
	693, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 694, 695, 696, 0, 637,
	636, 638, 639, 697, 640, 641, 781, 0, 273, 0,
	642, 643, 698, 644, 645, 646, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	647, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 648, 649, 0, 296, 650, 297,
	651, 0, 652, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 653, 654, 655, 0, 305, 777, 656,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 776, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 657,
	658, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 659,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 660, 661, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 662, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 663,
	664, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 665, 0, 666, 391, 0, 392, 393, 394,
	395, 396, 667, 668, 669, 482, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 670, 671, 0, 672, 0,
	408, 409, 0, 673, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 674, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 782, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 791, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 0, 476, 464, 0,
	0, 0, 478, 479, 480, 0, 675, 481, 676, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 0, 492, 0, 678, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 681, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 683, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 0, 790, 549, 550, 551, 552, 778, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 789, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 779, 574,
	0, 575, 576, 558, 559, 577, 578, 0, 579, 580,
	581, 582, 583, 584, 585, 685, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 686, 594,
	595, 596, 597, 687, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 787, 689, 690, 691, 0, 622, 0,
	614, 783, 616, 692, 617, 693, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	694, 695, 696, 0, 637, 636, 638, 639, 697, 640,
	641, 770, 0, 273, 0, 642, 643, 698, 644, 645,
	646, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 647, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 648,
	649, 0, 296, 650, 297, 651, 0, 652, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 653, 654,
	655, 0, 305, 306, 656, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 657, 658, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 659, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 660, 661, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 662,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 663, 664, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 665, 0, 666,
	391, 0, 392, 393, 394, 395, 396, 667, 668, 669,
	482, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	670, 671, 0, 672, 0, 408, 409, 0, 673, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	674, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 0, 476, 464, 0, 0, 0, 478, 479, 480,
	0, 675, 481, 676, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	0, 492, 0, 678, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 681, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 683, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 684, 553, 0, 554, 555, 771, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	685, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 686, 594, 595, 596, 597, 687, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 688, 689,
	690, 691, 0, 622, 0, 614, 615, 616, 692, 617,
	693, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 694, 695, 696, 0, 637,
	636, 638, 639, 697, 640, 641, 733, 0, 273, 0,
	642, 643, 698, 644, 645, 646, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	647, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 648, 649, 0, 296, 650, 297,
	651, 0, 652, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 653, 654, 655, 0, 305, 306, 656,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 657,
	658, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 659,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 660, 661, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 662, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 663,
	664, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 665, 0, 666, 391, 0, 392, 393, 394,
	395, 396, 667, 668, 669, 482, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 670, 671, 0, 672, 0,
	408, 409, 0, 673, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 674, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 0, 476, 464, 0,
	0, 0, 478, 479, 480, 0, 675, 481, 676, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 0, 492, 0, 678, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 681, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 683, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 684, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	0, 575, 576, 558, 559, 577, 578, 0, 579, 580,
	581, 582, 583, 584, 585, 685, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 686, 594,
	595, 596, 597, 687, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 688, 689, 690, 691, 0, 622, 0,
	614, 615, 616, 692, 617, 693, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	694, 695, 696, 0, 637, 636, 638, 639, 697, 640,
	641, 726, 0, 273, 0, 642, 643, 698, 644, 645,
	646, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 647, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 648,
	649, 0, 296, 650, 297, 651, 0, 652, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 653, 654,
	655, 0, 305, 306, 656, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 657, 658, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 659, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 660, 661, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 662,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 663, 664, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 665, 0, 666,
	391, 0, 392, 393, 394, 395, 396, 667, 668, 669,
	482, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	670, 671, 0, 672, 0, 408, 409, 0, 673, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	674, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 0, 476, 464, 0, 0, 0, 478, 479, 480,
	0, 675, 481, 676, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	0, 492, 0, 678, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 681, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 683, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 684, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	685, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 686, 594, 595, 596, 597, 687, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 688, 689,
	690, 691, 0, 622, 0, 614, 615, 616, 692, 617,
	693, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 694, 695, 696, 0, 637,
	636, 638, 639, 697, 640, 641, 704, 0, 273, 0,
	642, 643, 698, 644, 645, 646, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	647, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 648, 649, 0, 296, 650, 297,
	651, 0, 652, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 653, 654, 655, 0, 305, 306, 656,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 657,
	658, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 659,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 660, 661, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 662, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 663,
	664, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 665, 0, 666, 391, 0, 392, 393, 394,
	395, 396, 667, 668, 669, 482, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 670, 671, 0, 672, 0,
	408, 409, 0, 673, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 674, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 0, 476, 464, 0,
	0, 0, 478, 479, 480, 0, 675, 481, 676, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 0, 492, 0, 678, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 681, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 683, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 684, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	0, 575, 576, 558, 559, 577, 578, 0, 579, 580,
	581, 582, 583, 584, 585, 685, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 686, 594,
	595, 596, 597, 687, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 688, 689, 690, 691, 0, 622, 0,
	614, 615, 616, 692, 617, 693, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	694, 695, 696, 0, 637, 636, 638, 639, 697, 640,
	641, 273, 0, 0, 0, 642, 643, 698, 644, 645,
	646, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 647, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 0, 652, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 653, 654, 655, 0,
	305, 306, 656, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 660, 661, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 665, 0, 666, 391, 0,
	392, 393, 394, 395, 396, 667, 668, 669, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 670, 671,
	0, 672, 0, 408, 409, 0, 673, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 674, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 478, 479, 480, 0, 675,
	481, 676, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 0, 492,
	0, 678, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 681, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 684, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 687, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 688, 689, 690, 691,
	0, 622, 0, 614, 615, 616, 692, 617, 693, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 694, 695, 696, 0, 637, 636, 638,
	639, 697, 640, 641, 273, 0, 0, 0, 642, 643,
	698, 644, 645, 646, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 647, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 0, 652, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 653,
	654, 655, 0, 305, 306, 656, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 657, 658, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 660, 661, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	662, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 665, 0,
	666, 391, 0, 392, 393, 394, 395, 396, 3680, 668,
	669, 482, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 670, 671, 0, 672, 0, 408, 409, 0, 673,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 674, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 0, 476, 464, 0, 0, 0, 478, 479,
	480, 0, 675, 481, 676, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 0, 492, 0, 678, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 681, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 683, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 684, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 0, 575, 576, 558,
	559, 577, 578, 0, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 687,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 688,
	689, 690, 691, 0, 622, 0, 614, 615, 616, 692,
	617, 693, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 694, 695, 696, 0,
	637, 636, 638, 639, 697, 640, 641, 273, 0, 0,
	0, 642, 643, 698, 644, 645, 646, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 647,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 648, 649, 0, 296, 650, 297, 651,
	0, 652, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 653, 654, 655, 0, 305, 306, 656, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 657, 658,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 659, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	660, 661, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 662, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 663, 664,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 665, 0, 666, 391, 0, 392, 393, 394, 395,
	396, 667, 668, 669, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 670, 671, 0, 672, 0, 408,
	409, 0, 673, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 674, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 478, 479, 480, 0, 675, 481, 676, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 0, 492, 0, 678, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 681, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 683, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 790, 549, 550, 551, 552, 684, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 789, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 685, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 686, 594, 595,
	596, 597, 687, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 787, 689, 690, 691, 0, 622, 0, 614,
	615, 616, 692, 617, 693, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 694,
	695, 696, 0, 637, 636, 638, 639, 697, 640, 641,
	273, 0, 0, 0, 642, 643, 698, 644, 645, 646,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 647, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 648, 649, 0, 296,
	650, 297, 651, 0, 652, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 653, 654, 655, 0, 305,
	306, 656, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 657, 658, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 659, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 660, 661, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 662, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 663, 664, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 665, 0, 666, 391, 0, 392,
	393, 394, 395, 396, 3595, 668, 669, 482, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 670, 671, 0,
	672, 0, 408, 409, 0, 673, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 674, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 478, 479, 480, 0, 675, 481,
	676, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 677, 0, 492, 0,
	678, 493, 494, 486, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 681, 512, 682, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	683, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	684, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 0, 575, 576, 558, 559, 577, 578, 0,
	579, 580, 581, 582, 583, 584, 585, 685, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	686, 594, 595, 596, 597, 687, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 688, 689, 690, 691, 0,
	622, 0, 614, 615, 616, 692, 617, 693, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 694, 695, 696, 0, 637, 636, 638, 639,
	697, 640, 641, 273, 0, 0, 0, 642, 643, 698,
	644, 645, 646, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 647, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 648,
	649, 0, 296, 650, 297, 651, 0, 652, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 653, 654,
	655, 0, 305, 306, 656, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 657, 658, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 659, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 660, 661, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 662,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 663, 664, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 665, 0, 666,
	391, 0, 392, 393, 394, 395, 396, 3571, 668, 669,
	482, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	670, 671, 0, 672, 0, 408, 409, 0, 673, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	674, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 0, 476, 464, 0, 0, 0, 478, 479, 480,
	0, 675, 481, 676, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	0, 492, 0, 678, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 681, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 683, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 684, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	685, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 686, 594, 595, 596, 597, 687, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 688, 689,
	690, 691, 0, 622, 0, 614, 615, 616, 692, 617,
	693, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 694, 695, 696, 0, 637,
	636, 638, 639, 697, 640, 641, 273, 0, 0, 0,
	642, 643, 698, 644, 645, 646, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 647, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 0,
	652, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 653, 654, 655, 0, 305, 306, 656, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 657, 658, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 660,
	661, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	665, 0, 666, 391, 0, 392, 393, 394, 395, 396,
	3568, 668, 669, 482, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 670, 671, 0, 672, 0, 408, 409,
	0, 673, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 674, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	478, 479, 480, 0, 675, 481, 676, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 0, 492, 0, 678, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	681, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 684, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 687, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 688, 689, 690, 691, 0, 622, 0, 614, 615,
	616, 692, 617, 693, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 694, 695,
	696, 0, 637, 636, 638, 639, 697, 640, 641, 273,
	0, 0, 0, 642, 643, 698, 644, 645, 646, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 647, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 648, 649, 0, 296, 650,
	297, 651, 0, 652, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 653, 654, 655, 0, 305, 306,
	656, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	657, 658, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	659, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 660, 661, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 662, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	663, 664, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 665, 0, 666, 391, 0, 392, 393,
	394, 395, 396, 3522, 668, 669, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 670, 671, 0, 672,
	0, 408, 409, 0, 673, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 674, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 0, 476, 464,
	0, 0, 0, 478, 479, 480, 0, 675, 481, 676,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 0, 492, 0, 678,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 681, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 683,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 684,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 685, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 686,
	594, 595, 596, 597, 687, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 688, 689, 690, 691, 0, 622,
	0, 614, 615, 616, 692, 617, 693, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 694, 695, 696, 0, 637, 636, 638, 639, 697,
	640, 641, 273, 0, 0, 0, 642, 643, 698, 644,
	645, 646, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 647, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 648, 649,
	0, 296, 650, 297, 651, 0, 652, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 653, 654, 655,
	0, 305, 306, 656, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 657, 658, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 659, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 660, 661, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 662, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 663, 664, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 665, 0, 666, 391,
	0, 392, 393, 394, 395, 396, 3520, 668, 669, 482,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 670,
	671, 0, 672, 0, 408, 409, 0, 673, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 674,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 478, 479, 480, 0,
	675, 481, 676, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 0,
	492, 0, 678, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 681, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 683, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 684, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 0, 575, 576, 558, 559, 577,
	578, 0, 579, 580, 581, 582, 583, 584, 585, 685,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 686, 594, 595, 596, 597, 687, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 688, 689, 690,
	691, 0, 622, 0, 614, 615, 616, 692, 617, 693,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 694, 695, 696, 0, 637, 636,
	638, 639, 697, 640, 641, 273, 0, 0, 0, 642,
	643, 698, 644, 645, 646, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 647, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 648, 649, 0, 296, 650, 297, 651, 0, 652,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	653, 654, 655, 0, 305, 306, 656, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 657, 658, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 659, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 660, 661,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 662, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 663, 664, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 665,
	0, 666, 391, 0, 392, 393, 394, 395, 396, 3508,
	668, 669, 482, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 670, 671, 0, 672, 0, 408, 409, 0,
	673, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 674, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 0, 476, 464, 0, 0, 0, 478,
	479, 480, 0, 675, 481, 676, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 677, 0, 492, 0, 678, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 681,
	512, 682, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 683, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 684, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 0, 575, 576,
	558, 559, 577, 578, 0, 579, 580, 581, 582, 583,
	584, 585, 685, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 686, 594, 595, 596, 597,
	687, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	688, 689, 690, 691, 0, 622, 0, 614, 615, 616,
	692, 617, 693, 0, 618, 619, 620, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	0, 632, 0, 0, 633, 634, 635, 694, 695, 696,
	0, 637, 636, 638, 639, 697, 640, 641, 273, 0,
	0, 0, 642, 643, 698, 644, 645, 646, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	647, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 648, 649, 0, 296, 650, 297,
	651, 0, 652, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 653, 654, 655, 0, 305, 306, 656,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 657,
	658, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 659,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 660, 661, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 662, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 663,
	664, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 665, 0, 666, 391, 0, 392, 393, 394,
	395, 396, 3505, 668, 669, 482, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 670, 671, 0, 672, 0,
	408, 409, 0, 673, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 674, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 0, 476, 464, 0,
	0, 0, 478, 479, 480, 0, 675, 481, 676, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 0, 492, 0, 678, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 681, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 683, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 684, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	0, 575, 576, 558, 559, 577, 578, 0, 579, 580,
	581, 582, 583, 584, 585, 685, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 686, 594,
	595, 596, 597, 687, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 688, 689, 690, 691, 0, 622, 0,
	614, 615, 616, 692, 617, 693, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	694, 695, 696, 0, 637, 636, 638, 639, 697, 640,
	641, 273, 0, 0, 0, 642, 643, 698, 644, 645,
	646, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 647, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 0, 652, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 653, 654, 655, 0,
	305, 306, 656, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 660, 661, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 665, 0, 666, 391, 0,
	392, 393, 394, 395, 396, 3115, 668, 669, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 670, 671,
	0, 672, 0, 408, 409, 0, 673, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 674, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 478, 479, 480, 0, 675,
	481, 676, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 0, 492,
	0, 678, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 681, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 684, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 687, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 688, 689, 690, 691,
	0, 622, 0, 614, 615, 616, 692, 617, 693, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 694, 695, 696, 0, 637, 636, 638,
	639, 697, 640, 641, 273, 0, 0, 0, 642, 643,
	698, 644, 645, 646, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 647, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 0, 652, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 653,
	654, 655, 0, 305, 306, 656, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 657, 658, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 660, 661, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	662, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 665, 0,
	666, 391, 0, 392, 393, 394, 395, 396, 667, 668,
	669, 482, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 670, 671, 0, 672, 0, 408, 409, 0, 673,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 674, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 0, 476, 464, 0, 0, 0, 478, 479,
	480, 0, 675, 481, 676, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 0, 492, 0, 678, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 681, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 683, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 684, 553, 0, 554, 555, 771,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 0, 575, 576, 558,
	559, 577, 578, 0, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 687,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 688,
	689, 690, 691, 0, 622, 0, 614, 615, 616, 692,
	617, 693, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 694, 695, 696, 0,
	637, 636, 638, 639, 697, 640, 641, 273, 0, 0,
	0, 642, 643, 698, 644, 645, 646, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 647,
	0, 2345, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 648, 649, 0, 296, 650, 297, 651,
	0, 652, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 653, 654, 655, 0, 305, 306, 656, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 657, 658,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 659, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	660, 661, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 662, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 663, 664,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 665, 0, 666, 391, 0, 392, 393, 394, 395,
	396, 667, 668, 669, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 670, 671, 0, 672, 0, 408,
	409, 0, 673, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 674, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 478, 479, 480, 0, 675, 481, 676, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 0, 492, 0, 678, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 681, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 683, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 684, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	0, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 685, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 686, 594, 595,
	596, 597, 687, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 688, 689, 690, 691, 0, 622, 0, 614,
	615, 616, 692, 617, 693, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 694,
	695, 696, 0, 637, 636, 638, 639, 697, 640, 641,
	273, 0, 0, 0, 642, 643, 698, 644, 645, 646,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 647, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 648, 649, 0, 296,
	650, 297, 651, 0, 652, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 653, 654, 655, 0, 305,
	306, 656, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 657, 658, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 659, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 660, 661, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 662, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 663, 664, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 665, 0, 666, 391, 0, 392,
	393, 394, 395, 396, 1309, 668, 669, 482, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 670, 671, 0,
	672, 0, 408, 409, 0, 673, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 674, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 478, 479, 480, 0, 675, 481,
	676, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 677, 0, 492, 0,
	678, 493, 494, 486, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 681, 512, 682, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	683, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	684, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 0, 575, 576, 558, 559, 577, 578, 0,
	579, 580, 581, 582, 583, 584, 585, 685, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	686, 594, 595, 596, 597, 687, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 688, 689, 690, 691, 0,
	622, 0, 614, 615, 616, 692, 617, 693, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 694, 695, 696, 0, 637, 636, 638, 639,
	697, 640, 641, 273, 0, 0, 0, 642, 643, 698,
	644, 645, 646, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 647, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 648,
	649, 0, 296, 650, 297, 651, 0, 652, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 653, 654,
	655, 0, 305, 306, 656, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 657, 658, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 659, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 660, 661, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 662,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 663, 664, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 665, 0, 666,
	391, 0, 392, 393, 394, 395, 396, 667, 668, 669,
	482, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	670, 671, 0, 672, 0, 408, 409, 0, 673, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	674, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 0, 476, 464, 0, 0, 0, 478, 479, 480,
	0, 675, 481, 676, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	0, 492, 0, 678, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 681, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 683, 524, 525, 1238, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 684, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	685, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 686, 594, 595, 596, 597, 687, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 688, 689,
	690, 691, 0, 622, 0, 614, 615, 616, 692, 617,
	693, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 694, 695, 696, 0, 637,
	636, 638, 639, 697, 640, 641, 273, 0, 0, 0,
	642, 643, 698, 644, 645, 646, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 647, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 0,
	652, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 653, 654, 655, 0, 305, 306, 656, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 657, 658, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 660,
	661, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	665, 0, 666, 0, 0, 392, 393, 394, 395, 396,
	667, 668, 669, 482, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 670, 671, 0, 672, 0, 408, 409,
	0, 673, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 674, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	478, 479, 480, 0, 675, 481, 676, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 0, 492, 0, 678, 493, 494, 486,
	495, 496, 0, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	681, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 0, 522, 523, 683, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 684, 0, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 687, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 688, 689, 690, 691, 0, 622, 0, 614, 615,
	616, 692, 617, 693, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 694, 695,
	696, 0, 637, 636, 638, 639, 697, 640, 641, 1617,
	0, 1354, 0, 642, 643, 698, 644, 645, 646, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 0, 297, 0, 0, 0, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 0, 0, 0, 0,
	305, 306, 0, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 1356, 332, 333, 334, 335, 336, 0,
	337, 339, 0, 0, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 0, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 0, 0, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 0, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 0, 0, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 0, 0, 0, 391, 0,
	392, 393, 394, 395, 396, 1616, 0, 0, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 0, 0,
	0, 0, 0, 408, 409, 0, 0, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 0, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 478, 479, 480, 0, 0,
	481, 0, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 0, 0, 492,
	0, 0, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 0, 506, 507,
	508, 0, 509, 510, 511, 0, 512, 0, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 0, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 0, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 1357, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 0, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 0, 594, 595, 596, 597, 0, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 0, 0, 0, 0,
	0, 622, 0, 614, 615, 616, 0, 617, 0, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 0, 0, 0, 0, 637, 636, 638,
	639, 0, 640, 641, 1531, 0, 1354, 0, 642, 643,
	0, 644, 645, 646, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 0, 297, 0, 0,
	0, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 0, 0, 0, 0, 305, 306, 0, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 1356, 332,
	333, 334, 335, 336, 0, 337, 339, 0, 0, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 0, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 0,
	0, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 0, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 0, 0, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	0, 0, 0, 391, 0, 392, 393, 394, 395, 396,
	1530, 0, 0, 482, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 0, 0, 0, 0, 0, 408, 409,
	0, 0, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 0, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	478, 479, 480, 0, 0, 481, 0, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 0, 0, 492, 0, 0, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 0, 506, 507, 508, 0, 509, 510, 511,
	0, 512, 0, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 0, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 0, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 1357, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 0, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 0, 594, 595, 596,
	597, 0, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 0, 0, 0, 0, 0, 622, 0, 614, 615,
	616, 0, 617, 0, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 0, 0,
	0, 0, 637, 636, 638, 639, 0, 640, 641, 1352,
	0, 1354, 0, 642, 643, 0, 644, 645, 646, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 0, 297, 0, 0, 0, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 0, 0, 0, 0,
	305, 306, 0, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 1356, 332, 333, 334, 335, 336, 0,
	337, 339, 0, 0, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 0, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 0, 0, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 0, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 0, 0, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 0, 0, 0, 391, 0,
	392, 393, 394, 395, 396, 1351, 0, 0, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 0, 0,
	0, 0, 0, 408, 409, 0, 0, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 0, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 478, 479, 480, 0, 0,
	481, 0, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 0, 0, 492,
	0, 0, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 0, 506, 507,
	508, 0, 509, 510, 511, 0, 512, 0, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 0, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 0, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 1357, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 0, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 0, 594, 595, 596, 597, 0, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 0, 0, 0, 0,
	0, 622, 0, 614, 615, 616, 0, 617, 0, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 0, 0, 0, 0, 637, 636, 638,
	639, 0, 640, 641, 2128, 0, 1354, 0, 642, 643,
	0, 644, 645, 646, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 0, 297, 0, 0,
	0, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 0, 0, 0, 0, 305, 306, 0, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 1356, 332,
	333, 334, 335, 336, 0, 337, 339, 0, 0, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 0, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 0,
	0, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 0, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 0, 0, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	0, 0, 0, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 482, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 0, 0, 0, 0, 0, 408, 409,
	0, 0, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 0, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	478, 479, 480, 0, 0, 481, 0, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 0, 0, 492, 0, 0, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 0, 506, 507, 508, 0, 509, 510, 511,
	0, 512, 0, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 0, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 0, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 1357, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 0, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 0, 594, 595, 596,
	597, 0, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 0, 0, 0, 0, 0, 622, 0, 614, 615,
	616, 0, 617, 0, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 0, 0,
	0, 0, 637, 636, 638, 639, 0, 640, 641, 2095,
	0, 1354, 0, 642, 643, 0, 644, 645, 646, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 0, 297, 0, 0, 0, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 0, 0, 0, 0,
	305, 306, 0, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 1356, 332, 333, 334, 335, 336, 0,
	337, 339, 0, 0, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 0, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 0, 0, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 0, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 0, 0, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 0, 0, 0, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 0, 0,
	0, 0, 0, 408, 409, 0, 0, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 0, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 478, 479, 480, 0, 0,
	481, 0, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 0, 0, 492,
	0, 0, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 0, 506, 507,
	508, 0, 509, 510, 511, 0, 512, 0, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 0, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 0, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 1357, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 0, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 0, 594, 595, 596, 597, 0, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 0, 0, 0, 0,
	0, 622, 0, 614, 615, 616, 0, 617, 0, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 0, 0, 0, 0, 637, 636, 638,
	639, 1354, 640, 641, 0, 0, 0, 0, 642, 643,
	0, 644, 645, 646, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 0, 297, 0, 0, 0, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 0, 0, 0, 0,
	305, 306, 0, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 1356, 332, 333, 334, 335, 336, 0,
	337, 339, 0, 0, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 0, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 0, 0, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 0, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 0, 0, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 0, 0, 0, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 0, 0,
	0, 0, 0, 408, 409, 0, 0, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 0, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 478, 479, 480, 0, 0,
	481, 0, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 0, 0, 492,
	0, 0, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 0, 506, 507,
	508, 0, 509, 510, 511, 0, 512, 0, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 0, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 0, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 1357, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 0, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 0, 594, 595, 596, 597, 0, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 0, 0, 0, 0,
	0, 622, 0, 614, 615, 616, 0, 617, 0, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 0, 0, 0, 0, 637, 636, 638,
	639, 0, 640, 641, 0, 0, 0, 0, 642, 643,
	0, 644, 645, 646, 1829, 1830, 0, 1862, 1863, 1864,
	1873, 1874, 1875, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1866, 1860, 0, 0,
	0, 0, 0, 0, 1832, 0, 0, 0, 0, 0,
	0, 1829, 1830, 1879, 1862, 1863, 1864, 1873, 1874, 1875,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1885, 0, 0, 1866, 1860, 0, 0, 0, 0, 1831,
	0, 1832, 0, 0, 0, 0, 0, 0, 0, 1851,
	1879, 0, 0, 0, 0, 0, 0, 0, 1848, 0,
	0, 0, 0, 0, 0, 0, 0, 1885, 0, 0,
	0, 0, 0, 0, 0, 0, 1831, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1851, 0, 0, 0,
	0, 0, 0, 0, 0, 1848, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1854, 1855, 1856, 1857,
	0, 0, 0, 0, 0, 0, 1837, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1854, 1855, 1856, 1857, 0, 0, 0,
	0, 0, 0, 1837, 0, 1870, 0, 0, 1880, 0,
	0, 0, 0, 0, 0, 1859, 1861, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1876, 0, 1877, 0, 0, 0, 0, 0, 0,
	1846, 1847, 1870, 0, 0, 1880, 0, 0, 0, 0,
	0, 0, 1859, 1861, 0, 0, 0, 0, 1868, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1876, 0,
	1877, 0, 0, 1852, 0, 0, 0, 1846, 1847, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1868, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1852, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1878, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1867,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1882, 0, 0, 0, 0, 0, 0, 1878, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1867, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1882, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1858, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1853,
	1829, 1830, 0, 1862, 1863, 1864, 1873, 1874, 1875, 0,
	0, 0, 0, 1858, 0, 0, 0, 0, 0, 0,
	0, 0, 1866, 1860, 0, 0, 1871, 0, 0, 0,
	1832, 0, 0, 0, 0, 0, 1853, 1829, 1830, 1879,
	1862, 1863, 1864, 1873, 1874, 1875, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1885, 0, 1884, 1866,
	1860, 0, 0, 1871, 0, 1831, 0, 1832, 0, 0,
	0, 0, 0, 0, 0, 1851, 1879, 0, 0, 0,
	0, 0, 0, 0, 1848, 0, 0, 0, 0, 0,
	0, 0, 0, 1885, 0, 1884, 0, 0, 0, 0,
	0, 0, 1831, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1851, 0, 0, 0, 0, 0, 0, 0,
	0, 1848, 0, 0, 0, 0, 0, 0, 0, 0,
	1869, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1843, 1844, 1850, 1872, 1849, 1845, 0, 1842, 1840, 1841,
	1833, 1834, 1835, 1836, 1838, 1839, 0, 0, 0, 0,
	0, 4771, 1854, 1855, 1856, 1857, 0, 1869, 0, 0,
	0, 0, 1837, 0, 0, 0, 0, 1843, 1844, 1850,
	1872, 1849, 1845, 0, 1842, 1840, 1841, 1833, 1834, 1835,
	1836, 1838, 1839, 0, 0, 0, 0, 0, 4673, 1854,
	1855, 1856, 1857, 0, 0, 0, 0, 0, 0, 1837,
	0, 1870, 0, 0, 1880, 0, 0, 0, 0, 0,
	0, 1859, 1861, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1876, 0, 1877,
	0, 0, 0, 0, 0, 0, 1846, 1847, 1870, 0,
	0, 1880, 0, 0, 0, 0, 0, 0, 1859, 1861,
	0, 0, 0, 0, 1868, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1876, 0, 1877, 0, 0, 1852,
	0, 0, 0, 1846, 1847, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1868, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1852, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1878, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1867, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1882, 0, 0, 0,
	0, 0, 0, 1878, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1867, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1882, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1858, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1853, 1829, 1830, 0, 1862,
	1863, 1864, 1873, 1874, 1875, 0, 0, 0, 0, 1858,
	0, 0, 0, 0, 0, 0, 0, 0, 1866, 1860,
	0, 0, 1871, 0, 0, 0, 1832, 0, 0, 0,
	0, 0, 1853, 1829, 1830, 1879, 1862, 1863, 1864, 1873,
	1874, 1875, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1885, 0, 1884, 1866, 1860, 0, 0, 1871,
	0, 1831, 0, 1832, 0, 0, 0, 0, 0, 0,
	0, 1851, 1879, 0, 0, 0, 0, 0, 0, 0,
	1848, 0, 0, 0, 0, 0, 0, 0, 0, 1885,
	0, 1884, 0, 0, 0, 0, 0, 0, 1831, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1851, 0,
	0, 0, 0, 0, 0, 0, 0, 1848, 0, 0,
	0, 0, 0, 0, 0, 0, 1869, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1843, 1844, 1850, 1872,
	1849, 1845, 0, 1842, 1840, 1841, 1833, 1834, 1835, 1836,
	1838, 1839, 0, 0, 0, 0, 0, 4627, 1854, 1855,
	1856, 1857, 0, 1869, 0, 0, 0, 0, 1837, 0,
	0, 0, 0, 1843, 1844, 1850, 1872, 1849, 1845, 0,
	1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839, 0,
	0, 0, 0, 0, 4626, 1854, 1855, 1856, 1857, 0,
	0, 0, 0, 0, 0, 1837, 0, 1870, 0, 0,
	1880, 0, 0, 0, 0, 0, 0, 1859, 1861, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1876, 0, 1877, 0, 0, 0, 0,
	0, 0, 1846, 1847, 1870, 0, 0, 1880, 0, 0,
	0, 0, 0, 0, 1859, 1861, 0, 0, 0, 0,
	1868, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1876, 0, 1877, 0, 0, 1852, 0, 0, 0, 1846,
	1847, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1868, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1852, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1878, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1867, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1882, 0, 0, 0, 0, 0, 0, 1878,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1867, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1882,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1858, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1853, 1829, 1830, 0, 1862, 1863, 1864, 1873, 1874,
	1875, 0, 0, 0, 0, 1858, 0, 0, 0, 0,
	0, 0, 0, 0, 1866, 1860, 0, 0, 1871, 0,
	0, 0, 1832, 0, 0, 0, 0, 0, 1853, 1829,
	1830, 1879, 1862, 1863, 1864, 1873, 1874, 1875, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1885, 0,
	1884, 1866, 1860, 0, 0, 1871, 0, 1831, 0, 1832,
	0, 0, 0, 0, 0, 0, 0, 1851, 1879, 0,
	0, 0, 0, 0, 0, 0, 1848, 0, 0, 0,
	0, 0, 0, 0, 0, 1885, 0, 1884, 0, 0,
	0, 0, 0, 0, 1831, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1851, 0, 0, 0, 0, 0,
	0, 0, 0, 1848, 0, 0, 0, 0, 0, 0,
	0, 0, 1869, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1843, 1844, 1850, 1872, 1849, 1845, 0, 1842,
	1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839, 0, 0,
	0, 0, 0, 4436, 1854, 1855, 1856, 1857, 0, 1869,
	0, 0, 0, 0, 1837, 0, 0, 0, 0, 1843,
	1844, 1850, 1872, 1849, 1845, 0, 1842, 1840, 1841, 1833,
	1834, 1835, 1836, 1838, 1839, 0, 0, 0, 0, 0,
	4263, 1854, 1855, 1856, 1857, 0, 0, 0, 0, 0,
	0, 1837, 0, 1870, 0, 0, 1880, 0, 0, 0,
	0, 0, 0, 1859, 1861, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1876,
	0, 1877, 0, 0, 0, 0, 0, 0, 1846, 1847,
	1870, 0, 0, 1880, 0, 0, 0, 0, 0, 0,
	1859, 1861, 0, 0, 0, 0, 1868, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1876, 0, 1877, 0,
	0, 1852, 0, 0, 0, 1846, 1847, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1868, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1852, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1878, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1867, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1882, 0,
	0, 0, 0, 0, 0, 1878, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1867, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1882, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1858, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1853, 1829, 1830,
	0, 1862, 1863, 1864, 1873, 1874, 1875, 0, 0, 0,
	0, 1858, 0, 0, 0, 0, 0, 0, 0, 0,
	1866, 1860, 0, 0, 1871, 0, 0, 0, 1832, 0,
	0, 0, 0, 0, 1853, 1829, 1830, 1879, 1862, 1863,
	1864, 1873, 1874, 1875, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1885, 0, 1884, 1866, 1860, 0,
	0, 1871, 0, 1831, 0, 1832, 0, 0, 0, 0,
	0, 0, 0, 1851, 1879, 0, 0, 0, 0, 0,
	0, 0, 1848, 0, 0, 0, 0, 0, 0, 0,
	0, 1885, 0, 1884, 0, 0, 0, 0, 0, 0,
	1831, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1851, 0, 0, 0, 0, 0, 0, 0, 0, 1848,
	0, 0, 0, 0, 0, 0, 0, 0, 1869, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1843, 1844,
	1850, 1872, 1849, 1845, 0, 1842, 1840, 1841, 1833, 1834,
	1835, 1836, 1838, 1839, 0, 0, 0, 0, 0, 4182,
	1854, 1855, 1856, 1857, 0, 1869, 0, 0, 0, 0,
	1837, 0, 0, 0, 0, 1843, 1844, 1850, 1872, 1849,
	1845, 0, 1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838,
	1839, 0, 0, 0, 0, 0, 4181, 1854, 1855, 1856,
	1857, 0, 0, 0, 0, 0, 0, 1837, 0, 1870,
	0, 0, 1880, 0, 0, 0, 0, 0, 0, 1859,
	1861, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1876, 0, 1877, 0, 0,
	0, 0, 0, 0, 1846, 1847, 1870, 0, 0, 1880,
	0, 0, 0, 0, 0, 0, 1859, 1861, 0, 0,
	0, 0, 1868, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1876, 0, 1877, 0, 0, 1852, 0, 0,
	0, 1846, 1847, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1868,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1852, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1878, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1867, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1882, 0, 0, 0, 0, 0,
	0, 1878, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1867, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1882, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1858, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1853, 1829, 1830, 0, 1862, 1863, 1864,
	1873, 1874, 1875, 0, 0, 0, 0, 1858, 0, 0,
	0, 0, 0, 0, 0, 0, 1866, 1860, 0, 0,
	1871, 0, 0, 0, 1832, 0, 0, 0, 0, 0,
	1853, 1829, 1830, 1879, 1862, 1863, 1864, 1873, 1874, 1875,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1885, 0, 1884, 1866, 1860, 0, 0, 1871, 0, 1831,
	0, 1832, 0, 0, 0, 0, 0, 0, 0, 1851,
	1879, 0, 0, 0, 0, 0, 0, 0, 1848, 0,
	0, 0, 0, 0, 0, 0, 0, 1885, 0, 1884,
	0, 0, 0, 0, 0, 0, 1831, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1851, 0, 0, 0,
	0, 0, 0, 0, 0, 1848, 0, 0, 0, 0,
	0, 0, 0, 0, 1869, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1843, 1844, 1850, 1872, 1849, 1845,
	0, 1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839,
	0, 0, 0, 0, 0, 4180, 1854, 1855, 1856, 1857,
	0, 1869, 0, 0, 0, 0, 1837, 0, 0, 0,
	0, 1843, 1844, 1850, 1872, 1849, 1845, 0, 1842, 1840,
	1841, 1833, 1834, 1835, 1836, 1838, 1839, 0, 0, 0,
	0, 0, 3822, 1854, 1855, 1856, 1857, 0, 0, 0,
	0, 0, 0, 1837, 0, 1870, 0, 0, 1880, 0,
	0, 0, 0, 0, 0, 1859, 1861, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1876, 0, 1877, 0, 0, 0, 0, 0, 0,
	1846, 1847, 1870, 0, 0, 1880, 0, 0, 0, 0,
	0, 0, 1859, 1861, 0, 0, 0, 0, 1868, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1876, 0,
	1877, 0, 0, 1852, 0, 0, 0, 1846, 1847, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1868, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1852, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1878, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1867,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1882, 0, 0, 0, 0, 0, 0, 1878, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1867, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1882, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1858, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1853,
	1829, 1830, 0, 1862, 1863, 1864, 1873, 1874, 1875, 0,
	0, 0, 0, 1858, 0, 0, 0, 0, 0, 0,
	0, 0, 1866, 1860, 0, 0, 1871, 0, 0, 0,
	1832, 0, 0, 0, 0, 0, 1853, 1829, 1830, 1879,
	1862, 1863, 1864, 1873, 1874, 1875, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1885, 0, 1884, 1866,
	1860, 0, 0, 1871, 0, 1831, 0, 1832, 0, 0,
	0, 0, 0, 0, 0, 1851, 1879, 0, 0, 0,
	0, 0, 0, 0, 1848, 0, 0, 0, 0, 0,
	0, 0, 0, 1885, 0, 1884, 0, 0, 0, 0,
	0, 0, 1831, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1851, 0, 0, 0, 0, 0, 0, 0,
	0, 1848, 0, 0, 0, 0, 0, 0, 0, 0,
	1869, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1843, 1844, 1850, 1872, 1849, 1845, 0, 1842, 1840, 1841,
	1833, 1834, 1835, 1836, 1838, 1839, 0, 0, 0, 0,
	0, 3315, 1854, 1855, 1856, 1857, 0, 1869, 0, 0,
	0, 0, 1837, 0, 0, 0, 0, 1843, 1844, 1850,
	1872, 1849, 1845, 0, 1842, 1840, 1841, 1833, 1834, 1835,
	1836, 1838, 1839, 0, 0, 0, 0, 0, 3314, 1854,
	1855, 1856, 1857, 0, 0, 0, 0, 0, 0, 1837,
	0, 1870, 0, 0, 1880, 0, 0, 0, 0, 0,
	0, 1859, 1861, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1876, 0, 1877,
	0, 0, 0, 0, 0, 0, 1846, 1847, 1870, 0,
	0, 1880, 0, 0, 0, 0, 0, 0, 1859, 1861,
	0, 0, 0, 0, 1868, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1876, 0, 1877, 0, 0, 1852,
	0, 0, 0, 1846, 1847, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1868, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1852, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1878, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1867, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1882, 0, 0, 0,
	0, 0, 0, 1878, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1867, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1882, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1858, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1853, 1829, 1830, 0, 1862,
	1863, 1864, 1873, 1874, 1875, 0, 0, 0, 0, 1858,
	0, 0, 0, 0, 0, 0, 0, 0, 1866, 1860,
	0, 0, 1871, 0, 0, 0, 1832, 0, 0, 0,
	0, 0, 1853, 0, 0, 1879, 0, 0, 0, 0,
	1829, 1830, 0, 1862, 1863, 1864, 1873, 1874, 1875, 0,
	0, 0, 1885, 0, 1884, 0, 0, 0, 0, 1871,
	0, 1831, 1866, 1860, 0, 0, 0, 0, 0, 0,
	1832, 1851, 0, 0, 0, 0, 0, 0, 0, 1879,
	1848, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1884, 0, 0, 0, 0, 1885, 0, 0, 0,
	0, 0, 0, 0, 0, 1831, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1851, 0, 0, 0, 2195,
	0, 0, 0, 0, 1848, 0, 1869, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1843, 1844, 1850, 1872,
	1849, 1845, 0, 1842, 1840, 1841, 1833, 1834, 1835, 1836,
	1838, 1839, 0, 0, 0, 0, 0, 3313, 1854, 1855,
	1856, 1857, 0, 1869, 0, 0, 0, 0, 1837, 0,
	0, 0, 0, 1843, 1844, 1850, 1872, 1849, 1845, 0,
	1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839, 0,
	0, 2193, 0, 0, 3312, 0, 0, 0, 0, 0,
	0, 0, 1854, 1855, 1856, 1857, 0, 1870, 0, 0,
	1880, 0, 1837, 0, 0, 0, 0, 1859, 1861, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1876, 0, 1877, 0, 0, 0, 0,
	0, 0, 1846, 1847, 0, 0, 0, 0, 0, 0,
	0, 1870, 0, 0, 1880, 0, 0, 0, 0, 0,
	1868, 1859, 1861, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1852, 0, 1876, 0, 1877,
	0, 0, 0, 0, 0, 0, 1846, 1847, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1868, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1852,
	0, 0, 1878, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1867, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1882, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1878, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1867, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1882, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1858, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1853, 1829, 1830, 0, 1862, 1863, 1864, 1873, 1874,
	1875, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2194, 1858, 0, 1866, 1860, 0, 0, 1871, 0,
	0, 0, 1832, 0, 0, 0, 0, 0, 0, 0,
	0, 1879, 0, 1829, 1830, 1853, 1862, 1863, 1864, 1873,
	1874, 1875, 0, 0, 0, 0, 0, 0, 1885, 0,
	1884, 0, 0, 0, 0, 1866, 1860, 1831, 0, 0,
	0, 0, 1871, 1832, 0, 0, 0, 1851, 0, 0,
	0, 0, 1879, 0, 0, 0, 1848, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1885,
	0, 0, 0, 0, 1884, 0, 0, 0, 1831, 0,
	0, 0, 0, 0, 2192, 0, 0, 0, 1851, 0,
	0, 0, 0, 0, 0, 0, 0, 1848, 0, 0,
	0, 0, 1869, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1843, 1844, 1850, 1872, 1849, 1845, 0, 1842,
	1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839, 0, 0,
	0, 3277, 0, 0, 1854, 1855, 1856, 1857, 0, 0,
	0, 0, 0, 0, 1837, 4922, 1869, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1843, 1844, 1850, 1872,
	1849, 1845, 0, 1842, 1840, 1841, 1833, 1834, 1835, 1836,
	1838, 1839, 0, 0, 0, 1854, 1855, 1856, 1857, 0,
	0, 0, 0, 1870, 0, 1837, 1880, 3377, 0, 0,
	0, 0, 3376, 1859, 1861, 0, 0, 0, 1829, 1830,
	0, 1862, 1863, 1864, 1873, 1874, 1875, 0, 0, 1876,
	0, 1877, 0, 0, 0, 0, 0, 0, 1846, 1847,
	1866, 1860, 0, 0, 1870, 0, 3248, 1880, 1832, 0,
	0, 0, 2786, 0, 1859, 1861, 1868, 1879, 0, 1829,
	1830, 0, 1862, 1863, 1864, 1873, 1874, 1875, 0, 0,
	1876, 1852, 1877, 0, 1885, 0, 0, 0, 0, 1846,
	1847, 1866, 1860, 1831, 0, 0, 2785, 0, 0, 1832,
	0, 0, 0, 1851, 0, 0, 0, 1868, 1879, 0,
	0, 0, 1848, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1852, 0, 0, 1885, 0, 0, 1878, 0,
	0, 0, 0, 0, 1831, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1851, 0, 0, 1867, 0, 0,
	0, 0, 3249, 1848, 0, 0, 0, 0, 1882, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1878,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4921, 0, 0, 0, 0, 0, 0, 0, 1867, 0,
	1854, 1855, 1856, 1857, 0, 0, 0, 0, 0, 1882,
	1837, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1858, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1854, 1855, 1856, 1857, 0, 0, 1853, 0, 1870,
	0, 1837, 1880, 0, 0, 0, 0, 0, 0, 1859,
	1861, 0, 0, 0, 0, 1858, 0, 0, 0, 0,
	0, 0, 0, 0, 1871, 1876, 0, 1877, 0, 0,
	0, 0, 0, 0, 1846, 1847, 0, 0, 1853, 0,
	1870, 0, 0, 1880, 0, 0, 0, 0, 0, 0,
	1859, 1861, 1868, 0, 0, 0, 1884, 0, 0, 0,
	0, 0, 0, 0, 0, 1871, 1876, 1852, 1877, 0,
	0, 0, 0, 0, 0, 1846, 1847, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1868, 0, 0, 0, 1884, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1852, 0,
	0, 0, 0, 0, 1878, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1869, 0,
	0, 0, 0, 1867, 0, 0, 0, 0, 1843, 1844,
	1850, 1872, 1849, 1845, 1882, 1842, 1840, 1841, 1833, 1834,
	1835, 1836, 1838, 1839, 0, 1878, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1869,
	0, 0, 0, 0, 1867, 0, 0, 0, 0, 1843,
	1844, 1850, 1872, 1849, 1845, 1882, 1842, 1840, 1841, 1833,
	1834, 1835, 1836, 1838, 1839, 0, 0, 0, 0, 0,
	1858, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1853, 1829, 1830, 0, 1862, 1863, 1864,
	1873, 1874, 1875, 0, 0, 0, 0, 0, 0, 0,
	0, 1858, 0, 0, 0, 0, 1866, 1860, 0, 0,
	1871, 0, 0, 0, 1832, 0, 0, 0, 0, 0,
	0, 0, 0, 1879, 1853, 1829, 1830, 0, 1862, 1863,
	1864, 1873, 1874, 1875, 0, 0, 0, 0, 0, 0,
	1885, 0, 1884, 0, 0, 0, 0, 1866, 1860, 1831,
	0, 1871, 0, 0, 0, 1832, 0, 0, 0, 1851,
	0, 0, 0, 0, 1879, 0, 0, 0, 1848, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1885, 0, 1884, 0, 0, 0, 0, 0, 0,
	1831, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1851, 0, 0, 0, 0, 0, 0, 0, 0, 1848,
	0, 0, 0, 0, 1869, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1843, 1844, 1850, 1872, 1849, 1845,
	0, 1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839,
	0, 0, 0, 0, 0, 0, 1854, 1855, 1856, 1857,
	0, 0, 0, 0, 0, 1869, 1837, 0, 4530, 0,
	0, 0, 0, 0, 0, 1843, 1844, 1850, 1872, 1849,
	1845, 0, 1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838,
	1839, 0, 0, 0, 0, 0, 0, 1854, 1855, 1856,
	1857, 0, 0, 0, 0, 1870, 0, 1837, 1880, 0,
	0, 0, 0, 0, 0, 1859, 1861, 0, 0, 0,
	1829, 1830, 0, 1862, 1863, 1864, 1873, 1874, 1875, 0,
	0, 1876, 0, 1877, 0, 0, 0, 0, 0, 0,
	1846, 1847, 1866, 1860, 0, 0, 1870, 0, 0, 1880,
	1832, 0, 0, 0, 0, 0, 1859, 1861, 1868, 1879,
	0, 1829, 1830, 0, 1862, 1863, 1864, 1873, 1874, 1875,
	0, 0, 1876, 1852, 1877, 0, 1885, 0, 0, 0,
	0, 1846, 1847, 1866, 1860, 1831, 0, 0, 0, 0,
	0, 1832, 0, 0, 0, 1851, 0, 0, 0, 1868,
	1879, 0, 0, 0, 1848, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1852, 0, 0, 1885, 0, 0,
	1878, 0, 0, 0, 0, 0, 1831, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1851, 0, 0, 1867,
	0, 0, 0, 0, 0, 1848, 0, 0, 0, 0,
	1882, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1878, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1867, 1092, 1854, 1855, 1856, 1857, 0, 0, 0, 0,
	0, 1882, 1837, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1858, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1854, 1855, 1856, 1857, 0, 0, 1853,
	0, 1870, 0, 1837, 1880, 0, 0, 0, 0, 0,
	0, 1859, 1861, 0, 0, 0, 0, 1858, 0, 0,
	0, 0, 0, 0, 0, 0, 1871, 1876, 0, 1877,
	0, 0, 0, 0, 0, 0, 1846, 1847, 0, 0,
	1853, 0, 1870, 0, 0, 1880, 0, 0, 0, 0,
	0, 0, 1859, 1861, 1868, 0, 0, 0, 1884, 0,
	0, 0, 0, 0, 0, 0, 0, 1871, 1876, 1852,
	1877, 0, 0, 0, 0, 0, 0, 1846, 1847, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1868, 0, 0, 0, 1884,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1852, 0, 0, 0, 0, 0, 1878, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1869, 0, 0, 0, 0, 1867, 0, 0, 0, 0,
	1843, 1844, 1850, 1872, 1849, 1845, 1882, 1842, 1840, 1841,
	1833, 1834, 1835, 1836, 1838, 1839, 0, 1878, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1869, 0, 0, 0, 0, 1867, 0, 0, 0,
	0, 1843, 1844, 1850, 1872, 1849, 1845, 1882, 1842, 1840,
	1841, 1833, 1834, 1835, 1836, 1838, 1839, 0, 0, 0,
	0, 0, 1858, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1853, 1829, 1830, 0, 1862,
	1863, 1864, 1873, 1874, 1875, 0, 0, 0, 0, 0,
	0, 0, 0, 1858, 0, 0, 0, 0, 1866, 1860,
	0, 0, 1871, 0, 0, 0, 1832, 0, 0, 0,
	0, 0, 0, 0, 0, 1879, 1853, 1829, 1830, 0,
	1862, 1863, 1864, 1873, 1874, 1875, 0, 0, 0, 0,
	0, 0, 1885, 0, 1884, 0, 0, 0, 0, 1866,
	1860, 1831, 0, 1871, 0, 0, 0, 1832, 0, 0,
	0, 1851, 4307, 0, 0, 0, 1879, 0, 0, 0,
	1848, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1885, 0, 1884, 0, 0, 0, 0,
	0, 0, 1831, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1851, 4008, 0, 0, 0, 0, 0, 0,
	0, 1848, 0, 0, 0, 0, 1869, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1843, 1844, 1850, 1872,
	1849, 1845, 0, 1842, 1840, 1841, 1833, 1834, 1835, 1836,
	1838, 1839, 0, 0, 0, 0, 0, 0, 1854, 1855,
	1856, 1857, 0, 0, 0, 0, 0, 1869, 1837, 0,
	4007, 0, 0, 0, 0, 0, 0, 1843, 1844, 1850,
	1872, 1849, 1845, 0, 1842, 1840, 1841, 1833, 1834, 1835,
	1836, 1838, 1839, 0, 0, 0, 0, 0, 0, 1854,
	1855, 1856, 1857, 0, 0, 0, 0, 1870, 0, 1837,
	1880, 0, 0, 0, 0, 0, 0, 1859, 1861, 0,
	0, 0, 1829, 1830, 0, 1862, 1863, 1864, 1873, 1874,
	1875, 0, 0, 1876, 0, 1877, 0, 0, 0, 0,
	0, 0, 1846, 1847, 1866, 1860, 0, 0, 1870, 0,
	0, 1880, 1832, 0, 0, 0, 0, 0, 1859, 1861,
	1868, 1879, 0, 1829, 1830, 0, 1862, 1863, 1864, 1873,
	1874, 1875, 0, 0, 1876, 1852, 1877, 0, 1885, 0,
	0, 0, 0, 1846, 1847, 1866, 1860, 1831, 0, 0,
	3378, 0, 0, 1832, 0, 0, 0, 1851, 0, 0,
	0, 1868, 1879, 0, 0, 0, 1848, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1852, 0, 0, 1885,
	0, 0, 1878, 0, 0, 0, 0, 0, 1831, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1851, 0,
	0, 1867, 0, 0, 0, 0, 0, 1848, 0, 0,
	0, 0, 1882, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1878, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1867, 0, 1854, 1855, 1856, 1857, 0, 0,
	0, 0, 0, 1882, 1837, 0, 0, 0, 0, 0,
	0, 3383, 0, 0, 0, 0, 0, 0, 1858, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1854, 1855, 1856, 1857, 0,
	0, 1853, 0, 1870, 0, 1837, 1880, 0, 0, 0,
	0, 0, 0, 1859, 1861, 0, 0, 0, 0, 1858,
	0, 0, 0, 0, 0, 0, 0, 0, 1871, 1876,
	0, 1877, 0, 0, 0, 0, 0, 0, 1846, 1847,
	0, 0, 1853, 0, 1870, 0, 0, 1880, 0, 0,
	0, 0, 0, 0, 1859, 1861, 1868, 0, 0, 0,
	1884, 0, 0, 0, 0, 0, 0, 0, 0, 1871,
	1876, 1852, 1877, 0, 0, 0, 0, 0, 0, 1846,
	1847, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1868, 0, 0,
	0, 1884, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1852, 3803, 0, 0, 0, 0, 1878, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1869, 0, 0, 0, 0, 1867, 0, 0,
	0, 0, 1843, 1844, 1850, 1872, 1849, 1845, 1882, 1842,
	1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839, 0, 1878,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1869, 0, 0, 0, 0, 1867, 0,
	0, 0, 0, 1843, 1844, 1850, 1872, 1849, 1845, 1882,
	1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839, 0,
	0, 0, 0, 0, 1858, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1829, 1830, 1853, 1862, 1863,
	1864, 1873, 1874, 1875, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1858, 0, 1866, 1860, 0,
	0, 0, 0, 0, 1871, 1832, 0, 0, 0, 0,
	0, 0, 0, 0, 1879, 0, 1829, 1830, 1853, 1862,
	1863, 1864, 1873, 1874, 1875, 0, 0, 0, 0, 0,
	0, 1885, 0, 0, 0, 0, 1884, 0, 1866, 1860,
	1831, 0, 0, 3316, 0, 1871, 1832, 0, 0, 0,
	1851, 0, 0, 0, 0, 1879, 0, 0, 0, 1848,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1885, 0, 0, 0, 0, 1884, 0, 0,
	0, 1831, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1851, 0, 0, 0, 0, 0, 0, 0, 0,
	1848, 0, 0, 0, 0, 0, 0, 0, 1869, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1843, 1844,
	1850, 1872, 1849, 1845, 0, 1842, 1840, 1841, 1833, 1834,
	1835, 1836, 1838, 1839, 0, 0, 0, 1854, 1855, 1856,
	1857, 0, 0, 0, 0, 0, 0, 1837, 0, 1869,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1843,
	1844, 1850, 1872, 1849, 1845, 0, 1842, 1840, 1841, 1833,
	1834, 1835, 1836, 1838, 1839, 0, 0, 0, 1854, 1855,
	1856, 1857, 0, 0, 0, 0, 1870, 0, 1837, 1880,
	0, 0, 0, 0, 0, 0, 1859, 1861, 0, 0,
	0, 1829, 1830, 0, 1862, 1863, 1864, 1873, 1874, 1875,
	0, 0, 1876, 0, 1877, 0, 0, 0, 0, 0,
	0, 1846, 1847, 1866, 1860, 0, 0, 1870, 0, 0,
	1880, 1832, 0, 0, 0, 0, 0, 1859, 1861, 1868,
	1879, 0, 1829, 1830, 0, 1862, 1863, 1864, 1873, 1874,
	1875, 0, 0, 1876, 1852, 1877, 0, 1885, 0, 0,
	0, 0, 1846, 1847, 1866, 1860, 1831, 0, 0, 0,
	0, 0, 1832, 0, 0, 0, 1851, 0, 0, 0,
	1868, 1879, 0, 0, 0, 1848, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1852, 0, 0, 1885, 0,
	0, 1878, 0, 0, 0, 0, 0, 1831, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1851, 0, 0,
	1867, 0, 0, 0, 0, 0, 1848, 0, 0, 0,
	0, 1882, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3343, 1878, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1867, 0, 1854, 1855, 1856, 1857, 0, 0, 0,
	0, 0, 1882, 1837, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1858, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1854, 1855, 1856, 1857, 0, 0,
	1853, 0, 1870, 0, 1837, 1880, 0, 0, 0, 0,
	0, 0, 1859, 1861, 0, 0, 0, 0, 1858, 0,
	0, 0, 0, 0, 0, 0, 0, 1871, 1876, 0,
	1877, 0, 0, 0, 0, 0, 0, 1846, 1847, 0,
	0, 1853, 0, 1870, 0, 0, 1880, 0, 0, 0,
	0, 0, 0, 1859, 1861, 1868, 0, 0, 0, 1884,
	0, 0, 0, 0, 0, 0, 0, 0, 1871, 1876,
	1852, 1877, 0, 0, 0, 0, 0, 0, 1846, 1847,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1868, 0, 0, 0,
	1884, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1852, 0, 0, 0, 0, 0, 1878, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1869, 0, 0, 0, 0, 1867, 0, 0, 0,
	0, 1843, 1844, 1850, 1872, 1849, 1845, 1882, 1842, 1840,
	1841, 1833, 1834, 1835, 1836, 1838, 1839, 0, 1878, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1869, 0, 0, 0, 0, 1867, 0, 0,
	0, 0, 1843, 1844, 1850, 1872, 1849, 1845, 1882, 1842,
	1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839, 0, 0,
	0, 0, 0, 1858, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1853, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 975, 0, 1024, 0,
	0, 0, 0, 0, 1858, 0, 0, 0, 0, 0,
	0, 0, 0, 1871, 0, 0, 0, 0, 0, 0,
	0, 0, 983, 0, 0, 0, 0, 1853, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 998, 0,
	981, 980, 0, 0, 0, 1884, 0, 0, 0, 0,
	0, 0, 0, 0, 1871, 0, 0, 0, 0, 0,
	0, 0, 1000, 0, 0, 0, 0, 0, 982, 0,
	0, 0, 0, 985, 0, 0, 0, 0, 1035, 0,
	0, 0, 0, 0, 0, 0, 1884, 995, 996, 0,
	0, 0, 0, 0, 0, 0, 1013, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2358, 0, 0, 0, 1025, 987, 0, 1869, 0, 0,
	0, 988, 0, 0, 0, 0, 0, 1843, 1844, 1850,
	1872, 1849, 1845, 0, 1842, 1840, 1841, 1833, 1834, 1835,
	1836, 1838, 1839, 0, 989, 0, 0, 0, 0, 0,
	0, 0, 0, 1022, 0, 0, 0, 0, 1869, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1843, 1844,
	1850, 1872, 1849, 1845, 0, 1842, 1840, 1841, 1833, 1834,
	1835, 1836, 1838, 1839, 0, 1023, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 991, 0, 0, 0, 0, 0, 0, 0, 979,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 992, 993,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1001, 999, 0, 0,
	0, 0, 0, 0, 994, 0, 0, 0, 1010, 0,
	0, 1030, 1029, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1032, 1021, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1026, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 986, 0, 0, 1034, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 984, 0, 0, 0, 1017, 1018, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1020,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1027, 1015, 0, 0, 0, 0, 0,
	0, 0, 1033, 1011, 0, 0, 1004, 1002, 0, 1007,
	0, 0, 0, 0, 0, 1008, 0, 0, 977, 0,
	1028, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 978, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1019, 0, 1009, 0, 0,
	0, 0, 0, 1006, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1031, 0, 0, 0, 0, 0, 0,
	0, 1012, 0, 0, 0, 0, 0, 0, 0, 0,
	990, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1014, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1016,
}

var sqlPact = [...]int{
	11213, -1000, -1000, -1000, -1000, 176, -1000, -1000, 175, 174,
	169, 165, 162, 160, 155, 154, 151, 150, 148, -1000,
	-1000, -1000, -1000, -1000, -1000, 147, -1000, -1000, 146, -1000,
	144, 143, 142, -1000, -1000, 141, -1000, 139, -1000, -1000,
	-1000, -1000, 138, 137, 135, 92599, 92034, 93162, 2318, 116854,
	99926, 2110, 81876, 116289, 81311, 115724, 2164, 9287, 115159, 2778,
	134, -1000, 114594, 133, 132, 131, -1000, 114029, -1000, 1913,
	-1000, 130, -1000, 7948, 71667, 129, 127, 126, 123, 2851,
	121, -1000, 120, 119, -1000, -1000, 118, -1000, 12783, 1535,
	-1000, 117, 111, -1000, 344, 97668, 110, 109, 108, 2624,
	103, 102, 68838, 101, 100, 99, 2295, 2926, -1000, -1000,
	2087, -1000, -1000, 98, 95, 93, 92, 88, 87, 86,
	85, 84, 82, 81, 79, 77, -1000, 76, 73, 71,
	70, 67, -1000, 66, 64, 63, -1000, 60, -1000, 59,
	57, 56, 55, 53, 51, 48, 47, 46, 45, 44,
	40, 37, 36, 135964, -1000, -1000, 35, 2007, 1708, 1706,
	1693, 1689, 1679, 973, 31, 30, 27, 24, 22, 21,
	20, 19, 18, 11, 10, 9, 8, 7, 4, -6,
	-7, -8, 128, -9, -10, -13, -16, -17, -18, -21,
	3144, -1000, 1832, 1040, 31895, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 125299, 117417, -22, -109, -24, -1000, 3422, 1053,
	56860, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 271,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 474, 2788, 709, -1000, -1000, -1000, 113466, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2313, -92, -1000, 2060,
	-1000, -1000, -1000, -1000, -1000, 707, -1000, 2311, 2244, 345,
	2242, -1000, -1000, -1000, 3477, 2470, 3895, 3893, 3890, 3889,
	3888, 124736, 1899, 3886, 2542, 3885, 3884, 3880, 3878, 3877,
	3876, 3875, -1000, 91469, 1049, 90904, 90339, 3504, 112903, 89774,
	112338, 127557, 48744, 999, 3476, -1000, -1000, -1000, -1000, -1000,
	-1000, 117417, -1000, 1047, -1000, -1000, 3874, 2116, 706, 99361,
	-1000, -1000, 111773, 1983, -1000, -1000, -1000, 929, 1177, 33632,
	33632, 33632, 270, -1000, -1000, -1000, -1000, -1000, -1000, 3873,
	3872, 3871, 3870, 3869, -1000, -1000, 80746, 24764, 80181, 79616,
	111208, 48165, 89209, 88644, 3868, 3867, 3866, 110643, 126992, 3604,
	3602, 1043, 2053, 1466, -1000, -1000, -1000, -1000, -1000, -1000,
	-46, 73359, 3631, 117417, -1000, 269, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 47586, 699, 47007, 753, 46428, 453, 110078,
	-1000, -1000, -1000, -1000, 75661, -1000, 109513, 2462, 3865, 3864,
	1131, 3863, 3377, 1875, 3862, 1886, 1218, 3861, 3860, 3859,
	3858, 3857, 3856, 3855, 1517, 108948, 3070, 1538, 108383, 1777,
	126427, 1039, 88079, 93162, 2679, 107818, 1495, 1470, -1000, -1000,
	-1000, -1000, 3207, 2920, 2870, 1325, -1000, -1000, -1000, -1000,
	60301, 6752, 5236, -1000, -1000, 10800, 107253, 63166, 93162, 93162,
	-1000, -1000, -1000, -1000, -1000, -1000, 45849, 514, 45270, 974,
	106688, -1000, -1000, 60874, 3000, -1000, -1000, -1000, -1000, -1000,
	106123, 44691, 334, 44112, 924, 117417, -1000, 3067, 2005, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2623, 1628, 3639,
	2795, 75086, 2174, 1416, 3442, 3206, 3200, 1523, 2051, 3192,
	3854, 2639, 3181, 3153, 3119, 3115, 3114, 1293, 2610, 291,
	2591, 31316, 3045, 1714, 43533, 1506, 1519, 3107, 3103, 3695,
	2031, 2066, 2130, 79051, 3853, 3851, 3403, 3088, 3079, 2852,
	3072, -1000, 2999, 1509, 267, -1000, -1000, -1000, -1000, -1000,
	-1000, 1491, -1000, -1000, -1000, -1000, -1000, 83565, -1000, -1000,
	1411, -1000, -1000, 1411, -1000, -1000, -1000, -1000, -1000, 1405,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1832, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2826, -1000, 2099, -1000, -1000, 2547, 3400,
	3400, 3400, 3475, 454, 443, -1000, 128, -1000, -1000, 135551,
	-1000, -1000, 49323, 49323, 49323, 49323, 49323, 49323, 49323, 49323,
	2171, -1000, 705, -1000, -1000, 747, -1000, 704, 638, 565,
	-1000, -1000, -1000, -1000, -1000, -1000, 703, -1000, -1000, -1000,
	-1000, -1000, -1000, 3631, -1000, 27710, -1000, -1000, -1000, 430,
	700, 49323, -1000, -1000, 3722, 3717, 880, -1000, 259, 951,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 3063, 698, 695, -1000, 693, 690, 689, 688,
	684, -1000, 683, -1000, 681, 678, 677, 674, 673, 672,
	668, 666, -1000, 2070, -1000, -1000, -1000, -1000, -1000, -1000,
	610, 609, 609, 609, -1000, 1024, -1000, -1000, -1000, 258,
	608, 253, 607, 606, 604, -1000, 663, 661, 658, 657,
	656, 652, 651, 650, 644, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1023, -1000, -1000, -1000, -1000, -47, 117417, -1000,
	474, -47, -1000, -1000, 643, -1000, 35948, 35948, 35948, -1000,
	-1000, 2310, 49323, -1000, 2586, -1000, -39, -39, 898, 58579,
	-1000, 55686, 898, 287, 762, 64305, -1000, 2998, -1000, -1000,
	639, 229, -1000, -1000, -1000, -1000, 25337, 2997, 117417, 117417,
	117417, 93162, 93162, 93162, 117417, 3850, 3849, 3291, 49323, -1000,
	-1000, 71102, 129247, 93725, -1000, -1000, 3586, 69401, 70538, 3058,
	129247, 3050, 128687, 3848, -1000, -1000, -1000, -1000, -1000, 3266,
	3846, 3845, 3843, -1000, 117417, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 237, 3265, -1000, -1000, 97103, 237, 3264, -1000,
	237, 3263, -1000, 96540, -1000, -1000, 2241, 3262, -1000, -1000,
	247, 3261, -1000, -1000, -1000, 244, 3260, -1000, -1000, 227,
	-210, 3259, -1000, -1000, -1000, -1000, -1000, -1000, 135551, -1000,
	-1000, -1000, 128122, -1000, 3415, -1000, 117417, -1000, 49323, -1000,
	-1000, 3585, 1661, 3440, 3527, -1000, -1000, -57, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2520, 2486, 1157, 2341, -1000,
	3305, 1377, 33632, 3359, -1000, -1000, -1000, -1000, -1000, 224,
	25337, -1000, -1000, -1000, -1000, -1000, -1000, 2481, 3258, 1282,
	-1000, 2340, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1945, 3254, -1000, 2555, 3253, 1935, -1000, -1000, 1986,
	-1000, 132909, 1427, -1000, -1000, -1000, -1000, 2181, 3250, -37,
	-1000, -1000, 2458, -1000, -1000, -1000, -1000, 1956, -1000, 1324,
	3249, -1000, 2789, 2789, 87514, 3215, 62593, 60874, 73359, -50,
	-1000, -1000, -1000, -1000, -244, -1000, 24185, 135551, -1000, -1000,
	-1000, -1000, 1796, 135551, 922, -1000, -1000, 3248, -1000, 135551,
	912, -1000, -1000, 3247, -1000, 2609, -1000, 3049, -1000, -1000,
	2415, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2411,
	1002, -1000, 3839, -1000, -1000, 3836, -1000, 3834, 3832, 3826,
	-1000, 1761, 2046, 3825, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 86951, 2309, -1000, -1000, 85821, 3047, -1000, 2410,
	3526, -1000, 86386, 1038, -1000, 988, 2407, -1000, 95977, 1018,
	2406, -1000, 3824, 3499, 2711, 988, 2404, -1000, -1000, -1000,
	-1000, -1000, 990, -1000, 66570, -1000, 66570, -1000, 1674, -1000,
	124173, -39, 93162, 3631, -1000, -74, -1000, -1000, -1000, 1053,
	-1000, 59725, -1000, 59725, 98796, 76234, 957, 2995, 68263, 135510,
	-1000, 1001, -1000, -1000, 135551, -1000, -1000, -1000, 2599, -1000,
	-235, 2786, -1000, 76234, 62020, 2575, -1000, 135551, -1000, -1000,
	-1000, -1000, 135551, -1000, -1000, -1000, 76234, 85821, -1000, 105558,
	85258, -1000, -1000, 1507, 2572, -1000, -1000, -1000, 76234, 1340,
	76234, 76234, 76234, -1000, 104993, -1000, -1000, 2117, 1280, 3401,
	2100, 93162, -1000, 1964, -1000, -1000, -1000, 3431, 3214, 117417,
	-1000, -1000, 3046, -1000, 72795, 95414, -1000, 94851, -1000, 94288,
	-1000, 93162, -1000, 93162, -1000, 3823, 3821, 3820, -1000, -1000,
	3819, -1000, 3817, 3423, -1000, 891, 42954, 135551, 3409, -1000,
	3815, 2045, 3045, 135551, -1000, 3213, 1713, 1710, 117417, -1000,
	-1000, 117417, -1000, 117417, -1000, -1000, -1000, 1559, -1000, -1000,
	2513, -1000, -1000, -1000, -1000, 93162, 93162, 93162, 93162, 1223,
	-1000, 42375, -1000, -1000, 3098, 3814, 1753, -1000, 1908, -1000,
	2992, 3412, -1000, 1503, 1793, 217, 3726, -1000, -1000, 251,
	-1000, -1000, -57, -1000, 123610, -1000, 2547, -1000, 117417, -1000,
	2521, 3021, 3044, 1697, 2328, 2621, -1000, 41796, 2574, 52797,
	2332, 128, -1000, -1000, 128, 128, 33053, -1000, -1000, 69401,
	69401, 25337, 1297, 49323, 49323, 49323, 49323, 49323, 49323, 49323,
	49323, 49323, 49323, 49323, 49323, 49323, 49323, 49323, 49323, 49323,
	49323, 49323, 49323, 49323, 49323, 49323, 49323, 49323, 49323, 49323,
	49323, 49323, 49323, 49323, 49323, 49323, 49323, 49323, 49323, 2073,
	49323, 1404, 49323, 49323, 49323, 49323, 2123, -1000, -1000, 2042,
	511, 2082, 638, -1000, -1000, -1000, 3669, 3669, 3669, 631,
	631, 631, 12091, 12091, 614, 3813, 747, -1000, 49323, -1000,
	83, 59143, 49323, 25912, -1000, 443, 10147, 2502, -1000, 442,
	26520, -1000, -1000, -1000, 27710, 565, 41188, 49323, 995, 135551,
	-1000, -1000, 1599, 3652, 23606, 3089, 2847, 637, 829, 827,
	30708, 30100, 29492, 28884, 820, 818, 49323, 49323, 49323, 49323,
	49323, 49323, 49323, 49323, -1000, -1000, 3675, -1000, 3652, -1000,
	-1000, -1000, -1000, 3652, 1245, 1243, 3652, -1000, 3652, 3652,
	8804, 8804, 40609, 40030, 39451, 53376, 38872, 49323, 28305, 38293,
	37714, -1000, 117417, -47, 3583, 49323, 306, -1000, 133568, -1000,
	306, 306, 636, -75, 135551, 2845, 2845, 57433, 2278, 2188,
	2188, 2188, -1000, 898, 18357, 898, 103304, 2199, 898, 898,
	206, 256, 441, 55113, 2586, 103304, 728, 619, -25, -26,
	-28, -1000, -1000, -31, -32, -1000, -1000, 93162, 616, 25912,
	25337, 204, 2032, -80, 2658, 2655, -1000, 2651, 2636, -1000,
	2627, 2308, -1000, -1000, -1000, 1820, -82, 1400, 93162, 117417,
	1469, 3810, -100, -1000, 5042, -83, -1000, 1304, 201, 3652,
	-1000, -1000, -1000, -1000, -1000, 3808, 3807, -1000, 1022, 615,
	613, 417, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	610, 609, 609, 609, -1000, 258, 608, 253, 607, 606,
	604, -1000, -1000, -1000, -1000, -1000, 2991, 93162, 117417, 1464,
	3806, 82439, -210, 93725, -137, -1000, -1000, 117417, -1000, -1000,
	-1000, 3805, -1000, 93162, -1000, -1000, 93162, 237, 3246, -1000,
	93162, -1000, 93162, 233, 3238, -1000, -1000, 117417, -1000, 93162,
	93162, -1000, 117417, 117417, 117417, 129247, 129247, 228, -1000, 93162,
	851, -94, 1137, -57, -1000, -1000, -1000, -1000, 1411, -1000,
	1792, -1000, -1000, -1000, -1000, -1000, -1000, 1515, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 880, -1000, -1000, -1000,
	-1000, -1000, -1000, 3697, 3687, -48, -1000, -1000, 25337, -1000,
	-58, 1691, 1987, 1390, -1000, 78486, 2383, 3407, 3804, 2702,
	3388, 1654, -1000, 1549, -1000, 3506, 83565, 3536, 3564, 1334,
	-1000, 2990, -1000, -1000, -1000, 926, 1752, 1775, 1368, 1361,
	83565, 2555, -1000, 69401, -1000, 2649, 3468, 1350, 1362, 1350,
	1350, 1382, -1000, 83565, 1773, 1357, 1305, 1299, -1000, -1000,
	1965, 1958, -1000, -1000, 104430, -1000, 1294, 1287, 3600, 2826,
	2167, 786, 1953, -1000, 1356, 1286, 2988, -1000, -1000, -60,
	3533, 3548, 1334, -1000, 2987, 1284, -1000, -1000, -1000, 3467,
	93162, 25337, 1580, 1575, 1569, 1756, 1279, -49, -1000, 3531,
	1276, 1273, -1000, 1025, 10026, 3321, -1000, 129247, 1025, 1025,
	1925, 3237, 2760, 1615, -1000, 2784, 895, 2783, -1000, -1000,
	-1000, 895, -50, 73359, 117417, 196, -1000, 83, 49323, 49323,
	83, 49323, 83, -1000, 3518, 3236, 3231, 3800, -1000, -1000,
	-1000, -1000, -1000, 3799, 1996, 2540, -1000, -1000, 603, 2403,
	2986, 117417, 2667, -54, 93162, -1000, 72231, 3225, 129247, 2555,
	2402, -1000, -1000, 84693, -1000, 3217, 474, 2401, -1000, 660,
	3798, 3186, -1000, 123047, -1000, 3415, 1437, 3184, 1078, 450,
	3580, -1000, 450, 67135, -1000, 117417, -1000, -39, 1172, 77360,
	-95, -97, 438, -1000, 103867, 117417, 117417, 3348, 2006, 1985,
	-1000, 984, 60874, -1000, 60874, -102, -1000, -235, 2769, 1537,
	-1000, 957, 957, 895, -1000, 895, -1000, 93162, 3034, -1000,
	-1000, 76234, 957, 957, 957, -1000, -1000, -1000, -1000, 3797,
	3796, 3795, 3793, -1000, -1000, 987, 93162, 117417, 93162, -1000,
	-1000, 1610, -1000, 195, -1000, 129247, -1000, 129247, 117417, 93162,
	-1000, 987, 117417, 987, 117417, 987, 117417, 987, 987, -1000,
	-1000, -1000, -1000, -1000, 83, -1000, -1000, 135551, -1000, 49323,
	-1000, -1000, 1542, 3792, 1686, -1000, 3029, -1000, 3026, -1000,
	6, -1000, -1000, 1876, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 3790, 135551, -1000, 1877, -1000, -1000, -1000,
	-1000, 93162, 93162, 93162, 93162, 117417, 3319, -1000, 117417, 3317,
	93162, -1000, 3724, -1000, -1000, 83565, -1000, 2521, 3021, -1000,
	-1000, -1000, -1000, -1000, -1000, 1479, 2262, -1000, 2567, -1000,
	1585, -1000, -1000, -1000, 135551, 53955, -1000, -1000, 135551, 1806,
	-1000, 52218, 51639, -1000, -1000, 1743, 93162, 2628, -1000, 2628,
	-173, -1000, 133527, 2562, 93162, -1000, -1000, -1000, -1000, -1000,
	925, 1083, 1083, 1353, 1353, 1353, 1353, 3514, 6039, 6783,
	5075, 6178, 6178, 992, 992, 992, 992, 992, 6178, 416,
	631, 631, 416, 416, 416, 416, 416, 631, 631, 631,
	6178, 6178, 6178, 631, 12091, 6864, 10421, 49323, 49323, 1272,
	2023, 511, 8237, 49323, 10901, 10901, 10901, 10901, -1000, 2270,
	-1000, -1000, -1000, -1000, 2985, 602, 53376, 53376, -1000, -1000,
	-1000, -1000, 27115, 49323, -1000, -1000, -1000, -1000, 37106, -1000,
	-1000, 132865, -326, 437, -1000, 193, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 436,
	-172, 14, -1000, 49323, 49323, 49323, 435, -1000, 192, 49323,
	117417, -1000, 17558, 725, -107, -1000, -114, 1433, -1000, 49323,
	-1000, -1000, 1271, -1000, 1267, 1266, 1263, -1000, 601, 433,
	-1000, 191, -1000, 2179, 599, 598, 49323, -1000, -1000, -1000,
	-1000, -1000, 132466, -1000, -1000, 132429, -1000, -1000, 132030, -1000,
	-1000, 131993, -1000, -1000, -1000, -1000, -1000, 135325, 17116, 16930,
	15950, 9679, 15473, 14845, -115, 432, -117, 428, 920, 919,
	422, 413, 411, -122, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -123, 392, -1000, 2979,
	-172, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 389,
	-1000, 388, -1000, 135284, -172, 386, 6008, -1000, 53376, 53376,
	53376, 53376, -1000, 385, -1000, 133342, -1000, 134892, 36527, 36527,
	36527, 382, 134851, 49323, -172, -124, -1000, -130, -1000, -1000,
	506, -131, 1007, 35948, 56273, 25337, -1000, 1007, 1007, 49323,
	-1000, 49323, 2588, -1000, -1000, -1000, -1000, 2582, 1991, 2845,
	57433, -1000, -1000, -1000, -1000, 103304, -1000, 3631, 2910, -1000,
	103304, -1000, -1000, 117417, 474, -1000, 103304, 103304, 25337, 898,
	-1000, 898, 103304, 730, -1000, -1000, -1000, -1000, -1000, 380,
	65442, 14, 188, 25337, 988, -1000, -1000, 2693, 2693, 2693,
	2693, 2693, 93162, -1000, -1000, 129247, 1262, -55, -138, 2767,
	-1000, 3608, -1000, 2088, -1000, 69401, -1000, 741, 1195, 25337,
	-1000, -1000, -1000, 595, -1000, 3652, 3652, -1000, 3652, 129247,
	2977, 277, 2763, -1000, 2306, -53, 257, 129247, 3789, -1000,
	-1000, 237, -1000, 93162, 237, 237, -1000, 93162, 93162, 2241,
	-1000, 247, -1000, 244, -1000, -1000, -210, -1000, 1000, 33632,
	-1000, 1411, -1000, -1000, 1568, -1000, 2020, -1000, 1199, -1000,
	-1000, -1000, -1000, 33632, -1000, 2485, 117417, 117417, 93162, -1000,
	117417, -1000, 2183, 129247, -1000, 2394, 122484, 2366, 121921, 69401,
	-1000, -1000, 589, 939, 2559, 2556, 1073, 117417, 117417, 2554,
	121358, 120795, -1000, 3788, 117417, 2108, 49323, 3464, 2137, 2469,
	83, 83, -1000, 83, -1000, -1000, 579, 1240, 93162, 93162,
	117417, 129247, 93162, 1889, -1000, -1000, -1000, -1000, -1000, 84128,
	-1000, -1000, 3664, 3662, -1000, 1350, -1000, -1000, -1000, 1350,
	2555, 1860, 117417, 129247, 93162, 129247, 120232, 119669, -1000, -1000,
	1749, 117417, -1000, -1000, -1000, -1000, 1511, -1000, 786, 1260,
	2972, 49323, 49323, 2107, 83, 83, -1000, 83, 572, 25337,
	1946, -1000, 3027, 117417, 3715, 119106, 3714, 117417, 117417, 117417,
	129247, 3402, 117417, 117417, 129247, -1000, 118543, 10026, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2095, 74511, 1086, 117417, 1324, -1000, -1000,
	1740, 1258, 1257, 83565, 2096, 1738, 1841, 129247, 60874, 982,
	60874, 2730, -1000, -1000, 23027, -1000, 135551, 135551, -1000, 135551,
	-1000, 72231, 76234, 117417, -1000, -1000, 1037, 117417, 77923, 938,
	3183, 66005, -244, 957, 76234, 93162, -54, 2667, 117417, -1000,
	-1000, 2555, 3182, 474, 2385, -1000, 129247, 3578, 3180, 571,
	3787, 3782, -1000, 93162, 2305, 2379, -1000, -1000, 117980, 3278,
	786, 117417, 1007, 57433, 1957, -1000, 63741, 1058, 117417, 1851,
	168, -1000, -1000, -1000, -14, 117417, -1000, 736, -1000, -1000,
	1172, 1172, 957, -251, 570, -1000, 878, 874, 61447, -139,
	-1000, 187, 569, 873, 868, -1000, 2587, -1000, -235, -1000,
	76234, 984, 60874, 2969, 2955, -1000, -1000, 998, -1000, 1482,
	957, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -40, 1840, 117417, -210, -210, -64, -55, -1000,
	987, -1000, 987, -1000, 987, -1000, -1000, -1000, 135551, -1000,
	-1000, -1000, 1685, 1684, 117417, -1000, -1000, 117417, -1000, 25337,
	117417, 93162, 25337, 93162, 3016, 3010, -1000, -1000, -1000, 117417,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1100, -1000,
	1806, 2261, -1000, 565, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2492, -1000, -56, 33053, 901, -1000, -1000,
	93162, -42, 49323, 49323, 8025, 7922, 49323, 53376, 53376, -1000,
	49323, 6075, -1000, -1000, -1000, -1000, -1000, 2946, 564, 49323,
	69401, 8345, 7976, -1000, 379, 12047, 416, -1000, 49323, -1000,
	593, -1000, 377, 35369, -1000, 134004, 12, -140, -1000, 18950,
	-172, -146, -1000, -1000, 740, -1000, 3160, -1000, 49323, 134666,
	2450, 1962, 1846, 1694, 3652, 3710, 22448, -1000, 67699, 1008,
	2216, 131594, -1000, -1000, -1000, -1000, 69401, 69401, 49323, 49323,
	-1000, 49323, 49323, 49323, -1000, -1000, -1000, 3652, 909, -1000,
	-1000, -1000, 909, -1000, -1000, 1350, -1000, 1350, -1000, 49323,
	-1000, -1000, 2944, 49323, -1000, 69401, 69401, 53376, 53376, 53376,
	53376, 53376, 53376, 53376, 53376, 53376, 53376, 53376, 53376, 53376,
	53376, 53376, 53376, 53376, 53376, 53376, 53376, 2551, 53376, 3656,
	3656, 3656, 916, -1000, 3006, 2944, 49323, 49323, 69401, 376,
	375, 373, -1000, 49323, -172, -1000, -1000, 6941, 563, -1000,
	2476, -1000, 2844, -1000, 49323, -1000, -186, -1000, 2586, -1000,
	-1000, 2844, 2844, -147, 135551, 57433, 57433, -1000, 562, 49323,
	2560, -1000, -1000, 720, -324, -1000, 861, -1000, -1000, -1000,
	-1000, -1000, -1000, 859, -1000, 474, -1000, -1000, -1000, 180,
	103304, 103304, 718, -1000, -148, -1000, -1000, -149, -1000, 3577,
	372, 25337, -1000, 1007, 2984, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2625, -263, 129247, 129247, 1734, 2240, 3708, -1000,
	3654, 738, 716, 179, 3652, 371, 369, 366, -210, 129247,
	129247, 1731, 69974, 129247, -1000, -1000, -1000, 237, -1000, -1000,
	-1000, 233, -1000, -1000, -1000, -1000, 2646, -1000, -57, -1000,
	-1000, -1000, 49323, -1000, -1000, 3404, 1255, 1253, -1000, -1000,
	-1000, 2900, -1000, 3179, -1000, 2377, -1000, 1062, 2375, 1933,
	-1000, 49323, 557, 2706, 555, 554, 3775, 2204, 3774, 1077,
	3177, 2241, 3176, 2241, -1000, -1000, -1000, 932, -1000, 135551,
	2137, -1000, 553, 550, -1000, -58, 1643, 1871, 1249, 996,
	-1000, -1000, 49323, 49323, 102741, -1000, 463, 3397, -44, -1000,
	-1000, -1000, 1727, 1247, 1238, -1000, -1000, -1000, -1000, 2555,
	1721, 1234, 1221, -1000, -1000, -1000, -1000, -1000, 2373, -1000,
	-1000, 3175, 994, -1000, 3117, 3116, 915, 117417, 49323, 49323,
	134625, 134230, -1000, 993, -1000, -1000, 49323, -1000, -60, 1220,
	3520, 2372, 93162, -1000, 2241, 3172, 1217, -1000, 1216, -1000,
	-1000, -1000, 3530, 3529, 1181, -1000, -1000, -1000, 76234, -1000,
	-1000, 73938, -1000, -1000, 1025, 117417, 129247, 93162, 1791, -1000,
	-1000, 82439, 83002, 117417, 2760, -210, 895, -1000, 2576, 895,
	982, 2939, -1000, 2642, -1000, 991, 93162, 3770, 362, -154,
	-61, 69401, -1000, -1000, -1000, -1000, 2366, 93162, 117417, 1317,
	2705, 117417, 117417, 3573, -1000, 2325, 620, 93162, 903, -1000,
	3631, -1000, -1000, -1000, 989, -1000, 3509, 93162, 3569, 3171,
	988, 83, 93162, 3659, -1000, -1000, 3568, 93162, 3166, 2303,
	2369, 2530, 786, 76797, 988, 2205, -68, -1000, 1851, 34790,
	3393, -159, -1000, -1000, -1000, 1007, 67135, 57433, 49323, 3768,
	-160, -1000, -1000, -1000, -1000, -1000, 100489, 100489, 76234, 76234,
	76234, 957, 117417, 117417, 3767, 76234, 76234, 76234, -62, 548,
	-1000, 853, 852, 847, -1000, -1000, -1000, -1000, -1000, -1000,
	845, 842, 838, 984, -1000, -1000, -235, 60874, 83, -1000,
	2224, 93162, -1000, 21869, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 987, -244, -1000, -1000, -1000, 2125, 2331, 2125, 1835,
	1833, -1000, -1000, 2243, -1000, -1000, -1000, -1000, 2631, 3394,
	25337, 3508, 10901, 49323, 49323, 549, 7194, 7076, 10901, 49323,
	49323, 69401, 9281, -167, 49323, 49323, -1000, 49323, 715, 135551,
	-1000, 3707, 49323, 359, 356, -1000, -1000, -1000, 3650, -1000,
	-1000, -1000, 135551, 49323, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 355, -1000, 178, -1000, -1000, -1000, 125862, -1000, 49323,
	354, 3463, -1000, 351, 346, 10359, 348, 131557, 131158, 131121,
	323, -1000, -1000, 321, 314, 135551, 3006, 135551, -1000, -1000,
	1071, 1071, 1343, 1343, 1343, 1343, 3656, 1444, 806, 640,
	1737, 1737, 1737, 2626, 916, 916, 1737, 1737, 1737, 916,
	2938, 2543, 547, 5370, -1000, -1000, 135551, 135551, 312, -1000,
	-1000, -1000, -172, 307, 6941, -1000, 2838, 3462, 135551, -1000,
	57433, 2838, 2838, -1000, -1000, 1991, 117417, 135551, 57433, -1000,
	2910, -1000, 20126, 19541, -1000, 25337, -1000, -1000, -1000, -1000,
	3631, -1000, 65442, -1000, 546, -1000, 13, -1000, 2984, -1000,
	836, -1000, -1000, 76234, 76234, 2693, -1000, 2848, -263, -192,
	117417, -1000, -1000, 714, 3765, 735, 25337, 303, -1000, -1000,
	-1000, -210, -210, 117417, 2933, 93162, 117417, 1453, -210, -1000,
	-1000, -1000, 3347, 135551, 117417, 117417, 1514, 102178, 117417, 3159,
	-1000, 3158, -1000, 1073, 6038, 130722, 58006, -1000, 58006, 117417,
	-1000, -1000, -1000, -1000, 1993, 1600, 3763, 1123, -1000, 3434,
	117417, -1000, 117417, -1000, -1000, -1000, 117417, 117417, 93162, 117417,
	-1000, 129247, 3126, -170, 135551, -63, -1000, 835, -1000, 1355,
	-1000, 21290, 117417, 129247, 93162, 117417, 129247, 93162, 3155, 117417,
	2159, -1000, -1000, 3105, -1000, 135551, 134189, 83, 49323, 3124,
	-175, 25337, -1000, 3703, 3688, 3147, 3438, -1000, 117417, 3683,
	117417, 93162, 3343, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1718, 1214, 1212, 2302, 2296, 2236, -64, 2096, 982, -65,
	545, -1000, 834, -1000, -1000, 832, 828, 982, -1000, 76234,
	60874, 3759, 474, -1000, 2691, -1000, 98231, 77923, 2288, -1000,
	-1000, 532, 117417, 117417, 531, -1000, 83, -1000, 3757, 101052,
	530, -1000, 2219, -1000, 713, -1000, 2512, 129247, 2555, 83,
	93162, -1000, 980, 474, 302, -66, -1000, 3187, 1067, 25337,
	93162, 3140, 2532, 786, 76797, -1000, 1437, 2621, -1000, -67,
	-1000, 687, 83, 2205, -1000, -68, 135551, -1000, 824, -1000,
	-176, -1000, -1000, 299, -1000, 3334, -1000, -1000, -183, -1000,
	-1000, 3441, 3441, 76234, 60874, 76234, 76234, 76234, 60874, -1000,
	984, 895, -1000, 2414, -1000, -1000, -1000, -1000, -1000, 25337,
	1748, -1000, 528, 527, -1000, -1000, -1000, -1000, 3394, 10901,
	10901, 49323, 49323, 49323, 10901, 9281, -189, -1000, 10901, 10901,
	-172, -1000, -1000, 134004, -1000, -1000, -1000, 135551, -1000, 20711,
	2131, -1000, 130685, -1000, 33053, -1000, -1000, 49323, 49323, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 53376, 2923, 526,
	69401, -1000, -1000, 298, 1004, 49323, 51060, 2586, 1004, 1004,
	-1000, -190, -1000, -1000, -1000, 3631, -1000, 3631, 13, -1000,
	-1000, 3754, 25337, -1000, 76234, -1000, -1000, -1000, 2226, -1000,
	-1000, 3071, -168, 734, -1000, 3753, -1000, -1000, 166, 129247,
	2921, 122, 2754, -1000, -1000, -1000, 2738, 3566, -1000, 1941,
	-1000, 117417, 117417, -1000, 117417, -1000, 25337, 117417, 2881, 1241,
	-1000, 939, 2552, 524, 53376, 1097, 93162, 865, 2825, 2812,
	-1000, 3572, 3461, 2790, -191, -1000, 117417, 49323, 117417, -196,
	-198, 2346, -1000, -1000, 1096, 1239, 49323, 1095, -1000, -1000,
	-1000, 69401, 521, 2241, 2241, -199, -204, -1000, -1000, -1000,
	49323, 1203, 117417, 34211, -1000, 3752, 3397, -1000, -1000, -1000,
	-1000, -1000, -1000, 117417, -1000, 117417, -1000, 49323, -1000, 133963,
	49323, 1201, -1000, -1000, -1000, 3681, 2241, 25337, 2241, -1000,
	2241, 3438, 1120, 117417, 129247, 93162, 1821, 1821, 2989, -1000,
	-1000, -1000, 2428, 2428, 76234, 60874, 60874, -1000, -69, 982,
	-1000, 3565, 2127, 3749, -1000, -1000, -1000, -1000, 2549, -1000,
	-1000, -1000, 117417, 2548, 2824, 58006, 520, 518, 117417, 958,
	-1000, -205, -1000, 823, 822, 77923, 938, 960, -1000, -71,
	516, -1000, 811, -1000, -1000, -1000, -1000, 474, -1000, 2645,
	3563, -1000, 3672, 515, 513, 117417, 2282, 512, 25337, 3391,
	786, 76797, -1000, 3278, 1851, -1000, 2359, 117417, 3387, -1000,
	2621, 511, -1000, 957, 510, 957, -1000, -207, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -73, -1000, 871, 665,
	-1000, -1000, 93162, 93162, 49323, 49323, -1000, 10901, 10901, 10901,
	-1000, 297, -1000, -1000, 2205, 3455, -1000, -76, 130286, 130249,
	5558, 53376, 69401, -212, -1000, -1000, 117417, 135551, -85, -1000,
	135551, 509, 508, 427, -1000, -1000, -1000, 712, 711, -1000,
	-1000, -1000, -1000, 129247, 3748, -1000, 129247, -210, 129247, 129247,
	1704, 101615, 117417, -1000, -1000, 1933, 2098, -1000, -1000, -1000,
	117417, 2367, -1000, -1000, -1000, 1072, 49323, 5370, 53376, 505,
	49323, -1000, 495, 494, 3562, 3310, -1000, 2685, 2914, 1936,
	58006, -1000, 3394, -1000, 129850, -1000, 1065, 1911, -1000, -1000,
	-1000, -1000, 135551, 53376, 3438, 58006, -1000, -1000, 493, 490,
	135551, 485, 808, 2912, -1000, -1000, -1000, -1000, -1000, 135551,
	83, 135551, 484, 3520, -1000, -1000, -1000, -1000, 2241, 93162,
	-1000, -1000, -1000, 1200, -1000, -1000, -1000, -1000, 3746, 3744,
	2895, 82439, -1000, -213, -1000, -1000, -1000, 1950, 83, 938,
	-1000, -1000, 2288, 481, -1000, -1000, 2663, 2663, -220, 58006,
	58006, -221, 2266, 2632, -1000, 101052, 33632, 33632, 295, 3561,
	960, -1000, 3628, -1000, 3315, 3315, 49323, 3558, 3328, -1000,
	83, -1000, 3659, 58006, -1000, 93162, 58006, 2271, 2063, 2506,
	76797, -1000, 2530, -1000, -1000, -228, 117417, 1851, -1000, -1000,
	76234, -1000, -1000, 2414, -1000, 117417, -1000, 117417, -1000, -1000,
	-229, -238, -1000, 2077, 49323, 33053, -1000, -1000, 5558, -255,
	-1000, -108, -1000, 3547, 51060, 3743, 3740, 3738, -1000, -1000,
	-263, -1000, -210, -210, -210, 117417, -1000, 1940, -1000, 2366,
	-1000, -1000, 3139, 2834, 129813, 5370, 2482, 117417, 8630, 2555,
	2555, -1000, 3544, 2909, -1000, -1000, 2107, 480, -1000, -1000,
	-1000, -1000, 901, 117417, -1000, 2831, 93162, 5370, 1069, -258,
	2125, 2125, 49323, 32474, 2153, -1000, 49323, -1000, -1000, 3438,
	129247, -1000, -1000, 129247, 2268, -1000, 2868, 3645, -1000, 2266,
	117417, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1065, -260, -261, -1000, -1000, 3428, -1000, 3327,
	-1000, -1000, -1000, 2691, 83, -1000, -1000, -1000, -268, 135551,
	83, 3737, 980, 289, -269, 1067, -270, 93162, 2030, -1000,
	786, -1000, 2532, 1007, 3287, -1000, -271, -1000, -278, -279,
	-1000, -1000, 283, 50481, 50481, 50481, -172, -173, -1000, 117417,
	478, -1000, -1000, -1000, -1000, -1000, 114, -1000, -1000, 3110,
	897, -1000, 809, 1914, 280, 1082, 279, 274, -1000, -1000,
	-1000, 2790, -1000, 117417, -1000, -1000, 830, 474, -1000, 49323,
	1065, -280, -1000, 1057, -281, -1000, 1056, -286, -1000, 2894,
	-1000, -287, 2241, -263, 228, 1821, 964, 3505, -1000, -1000,
	-1000, 2489, -288, -1000, -1000, 1936, 1065, 2107, 2467, -1000,
	2127, 958, -1000, -1000, -1000, -1000, -1000, 1065, 473, 1936,
	472, 1526, 786, -1000, -1000, 1350, 3391, 3285, 1381, 957,
	-1000, -1000, -1000, 3269, -1000, 54534, 2279, 1825, 133301, 3269,
	3269, -1000, -1000, 129247, 117417, 3485, -1000, 885, 882, 1516,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1007, -289,
	3483, 2482, 135551, -1000, -1000, 2125, 2736, -1000, 2125, 2888,
	-1000, 2136, -1000, -1000, -1000, -1000, 2871, -1000, 1786, 3626,
	-1000, -1000, -1000, 117417, 2107, 1936, 956, 1812, 1801, 3734,
	938, 2266, 1936, 58006, 2107, 58006, 2089, -1000, 117417, -1000,
	2063, 1360, -1000, 1649, -1000, -1000, 1827, 3592, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -210, -1000, 799, -1000, 3301,
	-1000, 1090, 2049, 2049, -1000, -1000, 791, 809, -1000, 464,
	-1000, 459, -1000, 129247, 2206, -1000, -1000, -1000, 956, 2107,
	1007, 457, -1000, 3733, -1000, 2266, -1000, 2107, -294, 956,
	-295, 2162, -1000, -1000, -244, 2030, -1000, 1632, 67135, 1823,
	-1000, -1000, 2194, 49902, 49323, -1000, 3611, -1000, -1000, 2561,
	-1000, 49323, 2790, 49323, 49323, 228, 64869, 1007, 956, -1000,
	-1000, 2489, 956, 1065, 1007, 1936, -1000, 786, 1526, 67135,
	-277, -1000, -1000, -1000, 135551, -1000, -1000, -1000, 135551, -1000,
	-302, -303, -1000, -251, 100489, -1000, 1007, -1000, 1007, 1936,
	-1000, 2107, 129247, 2089, -277, -1000, 2107, 1184, -309, -1000,
	-1000, 2107, 956, -1000, -1000, -1000, -1000, -1000, 456, -1000,
	956, 1007, 49323, 1007, -1000, -310, -1000, 2107, -1000,
}

var sqlPgo = [...]int{
	0, 4538, 4537, 4535, 4533, 4531, 4530, 4528, 4527, 4525,
	4524, 4523, 4518, 158, 4517, 4511, 4510, 4509, 4506, 4504,
	4503, 4502, 4500, 4499, 4498, 4497, 4496, 4495, 4494, 4493,
	4492, 4483, 4480, 4479, 4478, 4476, 4475, 4472, 4471, 4468,
	4466, 4463, 4462, 4461, 4460, 4459, 4457, 4456, 4454, 4452,
	4450, 4444, 4441, 4440, 4437, 4431, 4429, 4422, 4421, 4420,
	4419, 4418, 4417, 4415, 4413, 4406, 4404, 61, 4403, 4402,
	4400, 4399, 4398, 4396, 4394, 4393, 4386, 4382, 4380, 4379,
	4377, 4376, 4373, 4372, 4371, 4369, 4368, 4366, 72, 4364,
	277, 4363, 4362, 4361, 4351, 4347, 4343, 4341, 4334, 4333,
	4332, 4327, 4326, 275, 4324, 145, 170, 4323, 4322, 3898,
	4321, 4320, 272, 4319, 4317, 4315, 4313, 4312, 286, 4304,
	4303, 4302, 4301, 4298, 4297, 4295, 4292, 4290, 4289, 4288,
	4287, 99, 207, 4286, 4285, 2829, 4284, 4283, 4281, 4280,
	4279, 4278, 4276, 4274, 4273, 4272, 4271, 251, 172, 4270,
	271, 4269, 4267, 4266, 4264, 4263, 4262, 4260, 4259, 4258,
	4257, 4256, 4254, 4251, 4250, 4249, 4248, 4246, 4245, 4244,
	4243, 4242, 4238, 4236, 4232, 4229, 4226, 4222, 4221, 4220,
	4218, 4217, 4216, 4212, 4211, 4210, 4209, 4208, 4206, 4203,
	248, 220, 157, 4201, 4200, 269, 268, 4199, 4198, 4195,
	4194, 4193, 136, 18, 41, 4192, 4190, 94, 90, 105,
	106, 109, 104, 4189, 120, 4187, 129, 78, 4186, 23,
	1, 262, 252, 9945, 247, 4185, 4182, 4181, 244, 204,
	4176, 239, 4174, 4172, 4171, 4167, 4166, 4165, 76, 57,
	192, 189, 182, 181, 25, 60, 110, 96, 64, 51,
	21, 91, 219, 20, 3, 264, 4164, 263, 14, 147,
	8, 33, 4163, 4162, 4161, 4160, 3598, 116, 4159, 266,
	245, 179, 4158, 4157, 4151, 834, 4149, 4147, 52, 4146,
	122, 133, 114, 17, 135, 4144, 160, 180, 34, 4143,
	246, 62, 4141, 4139, 93, 92, 9501, 12164, 4138, 4137,
	137, 82, 123, 316, 167, 154, 208, 127, 173, 174,
	97, 216, 215, 186, 156, 4134, 249, 4131, 3548, 89,
	198, 168, 5187, 4122, 4121, 4119, 80, 4116, 113, 4114,
	4112, 66, 24, 4, 2, 148, 44, 42, 13, 4111,
	26, 126, 49, 27, 4110, 30, 4109, 4105, 4103, 4102,
	55, 4101, 46, 164, 4098, 4097, 278, 4096, 101, 56,
	45, 4094, 29, 221, 4092, 230, 132, 4089, 4088, 254,
	211, 196, 4087, 95, 234, 4086, 4085, 4084, 4082, 4081,
	4080, 143, 9, 138, 4079, 4077, 151, 4076, 54, 240,
	206, 4075, 63, 4072, 4069, 185, 53, 144, 285, 190,
	232, 130, 233, 200, 236, 4068, 4067, 4066, 199, 4065,
	4064, 224, 161, 4063, 4061, 209, 287, 108, 50, 85,
	238, 87, 201, 163, 4058, 212, 4057, 4056, 281, 194,
	225, 12, 11, 111, 115, 4054, 7, 237, 169, 228,
	128, 4053, 8139, 2512, 2399, 4052, 4049, 155, 134, 83,
	131, 162, 265, 102, 4048, 4047, 2678, 4046, 4044, 4042,
	4040, 193, 4032, 4030, 4025, 150, 165, 197, 4024, 121,
	79, 59, 22, 152, 260, 283, 125, 227, 218, 255,
	4023, 4022, 4021, 191, 4008, 70, 107, 177, 210, 267,
	68, 4005, 171, 4003, 159, 2180, 71, 166, 4001, 226,
	4000, 3998, 3996, 3995, 3993, 3991, 3990, 2145, 243, 3986,
	3985, 3983, 38, 203, 3981, 261, 149, 184, 142, 81,
	3980, 98, 3263, 3979, 1902, 231, 73, 5, 3978, 86,
	3977, 1053, 67, 3974, 0, 13929, 10193, 12722, 13670, 3973,
	5519, 3972, 3970, 3969, 222, 84, 3968, 3965, 3964, 112,
	3960, 88, 3956, 3955, 77, 3954, 28, 16, 19, 35,
	32, 828, 372, 3953, 3951, 58, 139, 187, 3950, 273,
	235, 3949, 3948, 3947, 3946, 100, 3945, 48, 3944, 40,
	3943, 3941, 43, 15, 36, 3940, 3939, 153, 3938, 119,
	258, 3937, 178, 3936, 69, 140, 3935, 3934, 3933, 65,
	74, 259, 214, 217, 176, 3932, 280, 3931, 205, 3930,
	3929, 31, 3928, 3926, 250, 118, 117, 47, 253, 141,
	39, 183, 223, 3925, 3924, 175, 3923, 3922, 3913, 284,
	3912, 3911, 37, 3910, 3908, 3907, 10, 3906, 3905, 213,
	3298, 3902, 3901, 6, 3900, 202,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 11, 11, 7, 7, 7, 7, 8, 8,
	8, 8, 8, 51, 51, 9, 9, 9, 9, 9,
	9, 9, 9, 9, 9, 9, 37, 39, 38, 32,
	32, 33, 33, 34, 35, 35, 10, 10, 10, 6,
	6, 6, 6, 6, 6, 6, 6, 19, 19, 40,
	40, 20, 20, 42, 42, 21, 21, 43, 43, 601,
	601, 601, 602, 602, 603, 603, 603, 24, 45, 17,
	18, 18, 18, 18, 604, 604, 604, 604, 36, 25,
	46, 29, 29, 29, 29, 29, 205, 205, 205, 205,
	23, 23, 41, 41, 241, 241, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 597, 597, 243, 243, 242, 235,
	235, 236, 236, 237, 237, 605, 605, 244, 244, 244,
	245, 245, 14, 14, 14, 14, 14, 14, 14, 14,
	14, 14, 496, 496, 496, 527, 527, 527, 527, 529,
	529, 624, 624, 625, 625, 625, 625, 625, 134, 134,
	394, 394, 394, 55, 55, 55, 55, 55, 592, 592,
	207, 207, 207, 209, 209, 208, 208, 208, 208, 208,
	79, 79, 611, 611, 610, 609, 609, 609, 612, 612,
	612, 206, 206, 206, 130, 130, 130, 130, 130, 130,
	131, 131, 132, 132, 210, 210, 210, 212, 212, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 216, 16, 16, 16, 113, 113, 113, 113, 113,
	113, 113, 108, 108, 531, 531, 532, 532, 201, 201,
	202, 202, 202, 202, 203, 203, 204, 204, 204, 70,
	70, 213, 213, 215, 215, 214, 214, 214, 214, 214,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 58,
	58, 58, 58, 58, 59, 59, 59, 59, 59, 59,
	60, 60, 60, 60, 60, 60, 61, 61, 68, 68,
	68, 68, 68, 68, 68, 68, 192, 192, 71, 71,
	71, 71, 71, 71, 71, 71, 71, 71, 71, 71,
	71, 76, 76, 76, 76, 76, 626, 626, 626, 626,
	626, 626, 626, 626, 626, 626, 626, 626, 626, 626,
	626, 626, 626, 626, 626, 627, 627, 628, 628, 629,
	629, 630, 630, 630, 630, 630, 630, 630, 630, 630,
	630, 630, 630, 630, 630, 630, 630, 630, 630, 630,
	74, 74, 74, 74, 74, 74, 74, 74, 74, 74,
	74, 74, 74, 74, 74, 74, 74, 85, 85, 354,
	354, 317, 317, 86, 86, 86, 87, 87, 88, 88,
	72, 72, 590, 590, 370, 370, 487, 487, 73, 598,
	598, 598, 600, 600, 599, 599, 90, 90, 393, 393,
	91, 91, 91, 91, 91, 91, 92, 92, 92, 92,
	92, 92, 92, 93, 93, 93, 93, 93, 93, 93,
	93, 93, 93, 93, 93, 93, 93, 100, 100, 100,
	100, 100, 101, 101, 101, 98, 98, 98, 95, 95,
	95, 94, 94, 94, 99, 99, 99, 589, 306, 306,
	97, 97, 97, 96, 96, 96, 371, 371, 102, 102,
	102, 102, 318, 103, 103, 103, 103, 103, 103, 103,
	103, 106, 106, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 107, 107, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 107, 489, 489, 104, 104,
	104, 454, 454, 109, 109, 109, 409, 409, 110, 110,
	110, 110, 110, 111, 111, 111, 111, 111, 111, 111,
	111, 111, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 594, 594, 363, 363, 269, 269,
	269, 269, 122, 122, 122, 122, 123, 123, 123, 124,
	124, 197, 197, 140, 140, 140, 140, 139, 139, 139,
	139, 139, 139, 139, 139, 62, 62, 62, 63, 63,
	64, 64, 65, 65, 66, 66, 67, 67, 67, 67,
	67, 143, 143, 621, 621, 145, 142, 142, 142, 142,
	142, 141, 141, 144, 144, 144, 144, 146, 148, 148,
	148, 148, 148, 147, 147, 147, 147, 147, 149, 149,
	521, 521, 379, 379, 519, 519, 541, 541, 520, 520,
	324, 324, 324, 324, 324, 325, 325, 325, 530, 530,
	530, 530, 530, 530, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 198, 198, 199,
	200, 200, 200, 200, 200, 175, 175, 175, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 380,
	380, 178, 178, 178, 162, 162, 151, 151, 151, 151,
	151, 151, 151, 156, 156, 156, 156, 156, 156, 156,
	156, 152, 152, 164, 164, 164, 164, 164, 157, 157,
	158, 158, 158, 159, 159, 159, 159, 185, 185, 161,
	161, 163, 163, 163, 163, 163, 163, 163, 163, 163,
	153, 153, 153, 153, 166, 166, 166, 166, 416, 416,
	416, 190, 190, 165, 165, 165, 165, 165, 165, 165,
	165, 165, 165, 165, 165, 165, 165, 165, 165, 188,
	188, 188, 188, 188, 188, 613, 613, 614, 614, 614,
	182, 182, 182, 182, 182, 182, 468, 468, 176, 176,
	176, 176, 181, 181, 181, 181, 184, 184, 184, 184,
	399, 399, 173, 173, 173, 174, 174, 174, 179, 179,
	180, 355, 355, 177, 177, 183, 183, 183, 183, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 155, 155,
	155, 155, 186, 186, 172, 172, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 631, 631, 168,
	168, 168, 167, 167, 167, 167, 170, 170, 171, 171,
	171, 171, 171, 171, 169, 160, 189, 591, 591, 587,
	587, 587, 587, 587, 587, 587, 587, 588, 588, 588,
	588, 593, 593, 114, 114, 114, 114, 114, 114, 114,
	125, 125, 125, 125, 125, 125, 125, 128, 128, 115,
	115, 115, 115, 115, 115, 115, 118, 118, 116, 116,
	116, 116, 117, 117, 80, 80, 80, 80, 80, 15,
	15, 15, 81, 81, 260, 260, 219, 219, 219, 342,
	342, 220, 220, 332, 332, 332, 332, 217, 217, 218,
	218, 82, 82, 632, 632, 632, 606, 606, 606, 607,
	607, 607, 607, 607, 607, 326, 326, 327, 327, 434,
	434, 434, 434, 434, 330, 330, 330, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 340, 341, 341, 333,
	333, 339, 338, 338, 337, 337, 336, 336, 334, 335,
	335, 335, 344, 344, 343, 346, 346, 345, 433, 550,
	550, 552, 552, 552, 552, 552, 552, 552, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 417, 417, 633, 633,
	634, 635, 548, 548, 548, 549, 544, 544, 545, 545,
	545, 545, 545, 328, 328, 329, 329, 329, 329, 546,
	547, 361, 361, 472, 551, 551, 553, 553, 555, 636,
	636, 636, 636, 636, 636, 637, 637, 637, 432, 432,
	431, 431, 431, 352, 352, 556, 556, 556, 556, 557,
	557, 557, 557, 557, 560, 559, 558, 558, 558, 558,
	558, 84, 84, 84, 396, 396, 395, 395, 397, 397,
	397, 397, 397, 397, 397, 397, 397, 397, 397, 397,
	397, 397, 397, 194, 194, 272, 272, 272, 78, 78,
	78, 12, 12, 12, 12, 12, 12, 12, 287, 287,
	13, 13, 13, 608, 608, 608, 83, 83, 83, 83,
	83, 83, 350, 350, 350, 271, 271, 271, 271, 271,
	271, 271, 271, 271, 271, 271, 271, 271, 271, 271,
	271, 271, 271, 271, 271, 271, 271, 271, 271, 596,
	596, 595, 595, 273, 273, 639, 639, 89, 89, 89,
	89, 89, 89, 89, 89, 490, 490, 491, 491, 77,
	77, 77, 77, 77, 418, 418, 415, 415, 414, 414,
	360, 360, 470, 470, 470, 471, 277, 277, 278, 278,
	238, 238, 238, 31, 30, 22, 22, 26, 26, 27,
	27, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	28, 28, 48, 48, 48, 48, 49, 49, 49, 49,
	52, 52, 53, 53, 47, 47, 47, 47, 50, 50,
	44, 44, 54, 54, 54, 54, 54, 615, 617, 617,
	616, 616, 620, 620, 620, 620, 620, 620, 618, 618,
	619, 619, 622, 622, 623, 623, 121, 121, 126, 126,
	126, 126, 126, 127, 127, 127, 127, 129, 129, 129,
	129, 138, 138, 193, 193, 193, 193, 193, 193, 193,
	56, 56, 56, 56, 69, 69, 69, 69, 136, 641,
	641, 641, 137, 137, 137, 640, 640, 270, 270, 428,
	428, 429, 429, 642, 642, 430, 430, 430, 430, 430,
	263, 262, 264, 264, 265, 265, 75, 75, 75, 253,
	253, 252, 254, 254, 255, 255, 250, 250, 533, 533,
	257, 257, 257, 258, 258, 246, 246, 247, 247, 248,
	248, 249, 249, 261, 261, 528, 528, 643, 643, 112,
	112, 112, 196, 196, 316, 316, 316, 425, 425, 425,
	353, 353, 284, 284, 427, 427, 427, 427, 427, 392,
	392, 392, 195, 195, 368, 368, 382, 382, 383, 383,
	484, 484, 384, 119, 119, 120, 120, 135, 135, 223,
	223, 221, 221, 221, 221, 221, 221, 221, 221, 228,
	228, 229, 229, 230, 230, 231, 232, 232, 232, 232,
	372, 372, 233, 233, 233, 222, 222, 222, 224, 224,
	224, 224, 224, 224, 224, 227, 227, 227, 227, 234,
	234, 234, 226, 226, 567, 567, 567, 569, 569, 571,
	571, 570, 570, 566, 566, 568, 568, 638, 638, 398,
	398, 398, 349, 351, 347, 347, 348, 348, 358, 358,
	356, 357, 357, 359, 359, 469, 469, 469, 239, 239,
	239, 389, 389, 389, 389, 390, 390, 421, 421, 419,
	419, 419, 419, 420, 420, 422, 422, 422, 423, 423,
	424, 424, 386, 386, 387, 387, 388, 388, 388, 388,
	450, 450, 225, 225, 225, 365, 365, 365, 366, 366,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 441, 441, 439, 439, 439, 439, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 474, 475, 475, 367,
	367, 476, 426, 426, 585, 585, 585, 586, 586, 467,
	467, 477, 477, 477, 477, 477, 477, 465, 465, 466,
	466, 485, 486, 486, 402, 402, 402, 402, 400, 400,
	403, 403, 403, 403, 403, 401, 401, 478, 478, 478,
	478, 391, 391, 479, 479, 479, 479, 480, 481, 481,
	482, 482, 435, 436, 436, 492, 492, 492, 492, 494,
	364, 364, 364, 364, 364, 543, 542, 542, 493, 493,
	493, 493, 493, 493, 493, 493, 493, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 509,
	509, 509, 509, 509, 509, 509, 495, 495, 495, 495,
	495, 499, 499, 499, 498, 498, 498, 498, 498, 498,
	498, 498, 498, 498, 498, 500, 500, 505, 505, 506,
	506, 506, 501, 502, 507, 507, 507, 507, 644, 644,
	511, 511, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 497, 497, 497, 504, 504, 504, 411, 411, 411,
	411, 411, 411, 411, 411, 411, 411, 411, 411, 411,
	410, 410, 412, 412, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 444, 444, 444, 444, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 561, 561, 561, 561, 561, 561,
	561, 561, 446, 446, 564, 564, 565, 565, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 572,
	572, 573, 573, 575, 575, 576, 576, 577, 578, 578,
	578, 579, 580, 580, 574, 574, 581, 581, 581, 581,
	582, 582, 583, 583, 583, 583, 583, 584, 584, 584,
	584, 584, 456, 456, 457, 457, 463, 463, 463, 321,
	321, 321, 321, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 321, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 321, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 321, 321, 323, 323, 322, 274, 274, 274,
	274, 274, 274, 377, 377, 375, 375, 375, 378, 378,
	376, 376, 374, 374, 373, 373, 453, 453, 451, 451,
	455, 455, 404, 404, 510, 510, 510, 510, 510, 510,
	510, 510, 405, 405, 405, 413, 406, 406, 407, 407,
	407, 407, 407, 447, 448, 408, 408, 408, 449, 449,
	458, 462, 462, 461, 460, 460, 459, 459, 437, 437,
	438, 438, 385, 385, 645, 645, 381, 381, 483, 483,
	483, 483, 320, 320, 369, 369, 319, 319, 311, 311,
	312, 312, 312, 312, 362, 362, 464, 464, 512, 512,
	513, 513, 514, 514, 515, 515, 516, 517, 518, 452,
	452, 295, 294, 281, 282, 293, 292, 291, 280, 283,
	288, 289, 290, 285, 286, 302, 301, 300, 251, 256,
	307, 308, 308, 310, 310, 309, 309, 297, 298, 299,
	488, 279, 313, 313, 314, 314, 314, 315, 315, 315,
	315, 275, 275, 276, 276, 303, 303, 304, 305, 305,
	296, 296, 296, 266, 266, 266, 267, 267, 268, 268,
	526, 526, 523, 523, 523, 524, 524, 524, 525, 525,
	525, 525, 522, 522, 522, 522, 522, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 535, 535, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 537, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 540, 540,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 3, 1, 1, 1, 3, 1, 1,
	1, 1, 3, 4, 6, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 6, 4, 4, 6,
	9, 6, 8, 4, 4, 5, 1, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 3, 4, 6, 4,
	6, 6, 9, 6, 9, 6, 5, 6, 5, 1,
	1, 1, 1, 1, 1, 0, 1, 6, 6, 4,
	8, 7, 10, 9, 4, 4, 4, 3, 4, 4,
	4, 7, 7, 9, 8, 9, 5, 3, 5, 7,
	4, 12, 4, 12, 1, 3, 5, 5, 2, 5,
	3, 6, 4, 4, 4, 6, 5, 6, 5, 6,
	4, 8, 3, 8, 4, 2, 3, 9, 3, 6,
	4, 3, 1, 3, 2, 1, 1, 3, 1, 3,
	2, 4, 3, 2, 3, 2, 0, 1, 1, 0,
	2, 0, 7, 10, 6, 8, 6, 6, 6, 9,
	4, 3, 2, 2, 0, 1, 1, 1, 1, 1,
	3, 1, 3, 6, 4, 6, 7, 9, 6, 2,
	2, 3, 0, 8, 6, 8, 7, 2, 0, 1,
	2, 5, 0, 1, 3, 3, 1, 1, 3, 3,
	12, 3, 1, 1, 2, 1, 4, 0, 3, 3,
	0, 4, 6, 0, 5, 7, 6, 8, 8, 2,
	1, 3, 1, 3, 2, 5, 0, 1, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 1, 3, 3,
	3, 1, 3, 3, 3, 6, 4, 9, 7, 12,
	9, 2, 7, 2, 1, 1, 1, 3, 3, 0,
	3, 1, 3, 1, 1, 3, 2, 5, 0, 7,
	5, 2, 0, 1, 2, 3, 1, 1, 2, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 2, 3,
	3, 3, 3, 3, 3, 5, 3, 3, 5, 3,
	3, 5, 3, 3, 5, 3, 4, 3, 6, 6,
	6, 6, 6, 8, 4, 4, 1, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 1, 1, 2, 1,
	2, 6, 3, 8, 5, 3, 4, 3, 3, 4,
	3, 4, 4, 4, 3, 5, 7, 3, 3, 4,
	3, 3, 3, 3, 3, 2, 0, 1, 0, 1,
	0, 4, 3, 3, 3, 3, 3, 6, 4, 4,
	4, 3, 5, 3, 3, 3, 3, 3, 3, 3,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	4, 1, 2, 1, 2, 1, 2, 7, 3, 2,
	0, 1, 3, 3, 1, 0, 1, 2, 2, 1,
	6, 5, 1, 2, 1, 3, 2, 0, 7, 2,
	5, 0, 1, 3, 3, 1, 9, 3, 2, 0,
	2, 2, 2, 2, 2, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 4, 6, 5,
	7, 3, 4, 6, 3, 4, 6, 3, 5, 7,
	3, 4, 6, 3, 4, 6, 3, 1, 1, 3,
	4, 6, 3, 3, 5, 3, 1, 3, 2, 2,
	2, 2, 1, 2, 2, 5, 3, 3, 6, 6,
	3, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 1, 1,
	2, 1, 1, 2, 1, 1, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 3, 5, 7,
	2, 3, 0, 3, 5, 2, 3, 0, 2, 3,
	2, 3, 2, 7, 4, 7, 8, 8, 9, 11,
	5, 2, 6, 9, 4, 7, 7, 10, 7, 10,
	10, 13, 5, 2, 2, 1, 1, 3, 1, 1,
	1, 1, 1, 2, 1, 2, 2, 3, 2, 4,
	3, 2, 2, 1, 2, 1, 3, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 3, 5, 4,
	6, 4, 3, 0, 1, 3, 2, 4, 2, 4,
	1, 6, 3, 1, 1, 5, 3, 3, 2, 2,
	6, 3, 3, 3, 3, 4, 4, 3, 1, 3,
	3, 2, 2, 1, 3, 3, 3, 1, 2, 1,
	1, 2, 2, 3, 1, 1, 1, 1, 1, 3,
	2, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 2, 1, 1, 1, 2, 2, 2, 1,
	3, 3, 3, 3, 3, 2, 3, 3, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 2,
	3, 5, 7, 3, 3, 3, 4, 4, 6, 5,
	5, 5, 3, 4, 4, 3, 4, 4, 3, 4,
	4, 5, 3, 5, 5, 5, 7, 3, 3, 3,
	4, 6, 4, 2, 6, 4, 3, 2, 3, 4,
	3, 5, 3, 6, 5, 6, 3, 5, 6, 3,
	5, 3, 5, 3, 3, 4, 4, 5, 0, 1,
	1, 1, 1, 3, 2, 3, 4, 3, 4, 3,
	5, 3, 4, 4, 3, 4, 5, 3, 4, 3,
	4, 4, 5, 3, 3, 1, 1, 0, 2, 3,
	5, 4, 6, 4, 6, 4, 1, 0, 3, 4,
	4, 5, 7, 5, 3, 3, 3, 4, 4, 5,
	2, 0, 4, 2, 3, 4, 2, 3, 3, 3,
	5, 2, 0, 3, 3, 4, 3, 3, 3, 3,
	4, 4, 4, 4, 4, 4, 4, 3, 4, 5,
	4, 4, 2, 3, 2, 3, 6, 6, 7, 9,
	7, 9, 4, 3, 4, 4, 5, 1, 1, 10,
	10, 3, 5, 5, 5, 3, 5, 6, 4, 4,
	5, 5, 2, 3, 2, 5, 4, 2, 0, 1,
	1, 1, 1, 3, 2, 2, 2, 2, 2, 2,
	1, 2, 0, 1, 2, 1, 2, 1, 2, 2,
	1, 2, 1, 2, 1, 2, 2, 4, 3, 3,
	7, 3, 3, 7, 3, 3, 3, 3, 3, 3,
	3, 3, 4, 3, 3, 6, 5, 8, 3, 6,
	6, 3, 12, 15, 1, 0, 1, 2, 3, 0,
	2, 0, 4, 0, 4, 5, 4, 3, 3, 1,
	3, 10, 13, 0, 2, 3, 1, 1, 0, 1,
	2, 2, 2, 2, 1, 1, 0, 1, 3, 1,
	1, 1, 2, 3, 3, 3, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 1, 0, 1,
	0, 1, 1, 0, 1, 4, 1, 0, 3, 7,
	7, 1, 1, 3, 7, 1, 3, 11, 3, 2,
	0, 3, 1, 2, 2, 3, 2, 6, 2, 1,
	2, 2, 2, 4, 8, 4, 2, 3, 5, 5,
	5, 2, 5, 5, 2, 2, 2, 0, 1, 1,
	3, 4, 10, 11, 9, 5, 3, 1, 5, 9,
	6, 11, 3, 3, 0, 2, 4, 3, 3, 1,
	5, 1, 3, 1, 2, 0, 1, 2, 2, 0,
	1, 3, 3, 2, 2, 1, 1, 1, 4, 0,
	6, 2, 0, 3, 0, 2, 2, 2, 0, 1,
	1, 2, 2, 0, 3, 3, 2, 1, 1, 2,
	2, 5, 8, 4, 1, 0, 1, 2, 2, 1,
	2, 3, 3, 2, 2, 3, 2, 2, 2, 2,
	2, 3, 1, 4, 2, 3, 2, 2, 4, 7,
	3, 4, 6, 5, 7, 5, 5, 3, 3, 0,
	2, 2, 2, 1, 1, 1, 8, 10, 11, 8,
	11, 5, 4, 2, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 0, 3, 3, 0, 1, 8, 11, 3,
	6, 6, 5, 3, 4, 1, 0, 1, 3, 16,
	19, 15, 18, 4, 2, 0, 1, 0, 1, 0,
	1, 3, 2, 4, 2, 3, 1, 0, 2, 0,
	1, 1, 0, 9, 6, 6, 8, 6, 8, 5,
	7, 2, 6, 7, 4, 4, 5, 2, 4, 6,
	6, 8, 6, 7, 8, 9, 6, 7, 8, 9,
	6, 8, 6, 8, 6, 7, 8, 9, 6, 8,
	6, 8, 6, 6, 8, 8, 4, 7, 3, 0,
	7, 10, 1, 1, 1, 1, 2, 2, 3, 0,
	3, 0, 1, 0, 2, 0, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 1, 2, 1, 2, 1, 2, 1,
	3, 2, 3, 2, 2, 2, 2, 2, 2, 1,
	1, 0, 2, 4, 2, 1, 0, 2, 1, 1,
	0, 1, 3, 1, 0, 1, 1, 1, 1, 1,
	2, 3, 2, 2, 1, 2, 14, 16, 3, 1,
	0, 4, 1, 0, 2, 2, 3, 0, 1, 1,
	4, 4, 5, 1, 0, 3, 0, 3, 0, 3,
	0, 3, 0, 4, 0, 3, 0, 1, 0, 6,
	7, 3, 6, 3, 1, 3, 1, 1, 4, 2,
	1, 3, 1, 3, 4, 8, 11, 7, 10, 2,
	2, 0, 10, 3, 2, 0, 1, 3, 1, 1,
	3, 3, 5, 6, 4, 5, 4, 1, 1, 3,
	3, 1, 2, 4, 4, 2, 3, 5, 5, 1,
	3, 1, 0, 1, 2, 3, 2, 4, 2, 3,
	0, 2, 0, 2, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 8, 8, 8, 2, 4,
	4, 4, 2, 2, 2, 2, 3, 1, 3, 1,
	2, 6, 7, 1, 0, 1, 0, 1, 0, 1,
	1, 0, 1, 5, 1, 0, 1, 0, 1, 0,
	3, 3, 5, 1, 3, 3, 4, 5, 2, 2,
	0, 2, 2, 1, 1, 1, 0, 1, 0, 2,
	2, 5, 4, 2, 3, 1, 1, 1, 1, 1,
	1, 1, 3, 0, 1, 3, 1, 3, 3, 3,
	2, 0, 4, 2, 5, 3, 2, 0, 1, 3,
	3, 5, 1, 1, 1, 1, 1, 1, 1, 3,
	5, 1, 3, 2, 4, 4, 0, 4, 4, 3,
	4, 1, 5, 3, 4, 5, 5, 1, 5, 1,
	3, 2, 0, 3, 0, 2, 3, 1, 3, 2,
	0, 3, 5, 6, 4, 6, 4, 3, 2, 1,
	0, 5, 1, 0, 2, 2, 2, 1, 1, 0,
	1, 1, 1, 1, 0, 4, 2, 1, 2, 2,
	4, 1, 3, 1, 2, 3, 2, 4, 1, 0,
	1, 0, 2, 1, 0, 2, 5, 7, 2, 1,
	2, 4, 3, 5, 0, 1, 3, 5, 1, 2,
	1, 1, 1, 1, 1, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 4, 6, 6, 1, 1, 1, 1,
	1, 3, 5, 0, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 2, 1, 3, 0, 5, 4, 1,
	2, 1, 4, 1, 1, 2, 1, 1, 1, 1,
	1, 0, 1, 2, 5, 1, 4, 2, 5, 1,
	4, 3, 3, 0, 1, 2, 4, 1, 1, 1,
	1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	1, 0, 1, 4, 1, 3, 3, 3, 5, 2,
	2, 2, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 3, 3, 3,
	2, 2, 3, 5, 4, 6, 3, 5, 4, 6,
	4, 6, 5, 7, 3, 3, 3, 3, 3, 4,
	3, 2, 4, 2, 3, 3, 4, 3, 4, 3,
	4, 5, 6, 6, 7, 6, 7, 6, 7, 3,
	4, 4, 1, 3, 1, 3, 3, 2, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	3, 5, 6, 6, 7, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 6, 1, 1, 1, 1, 1,
	1, 2, 1, 5, 5, 6, 3, 1, 1, 1,
	2, 2, 2, 4, 3, 5, 6, 8, 6, 5,
	4, 3, 2, 2, 4, 1, 1, 1, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	6, 6, 8, 8, 6, 4, 6, 6, 6, 4,
	1, 3, 3, 3, 3, 3, 4, 3, 3, 4,
	3, 3, 4, 3, 3, 4, 3, 3, 3, 3,
	3, 4, 3, 4, 3, 4, 3, 4, 4, 3,
	6, 5, 5, 5, 4, 4, 3, 4, 3, 5,
	0, 5, 0, 2, 0, 1, 3, 3, 2, 2,
	0, 6, 1, 0, 3, 0, 3, 3, 3, 0,
	1, 4, 2, 2, 2, 2, 2, 3, 2, 2,
	3, 0, 4, 1, 1, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 4, 1, 1, 1,
	2, 1, 2, 2, 3, 1, 2, 3, 2, 3,
	2, 3, 1, 0, 1, 3, 1, 3, 3, 3,
	1, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 3, 1, 2, 3, 0, 3, 3,
	2, 2, 1, 2, 2, 3, 2, 1, 1, 1,
	5, 1, 2, 4, 2, 0, 1, 0, 3, 5,
	1, 0, 1, 2, 1, 0, 1, 3, 3, 2,
	1, 1, 1, 3, 1, 3, 3, 1, 1, 1,
	1, 5, 3, 1, 1, 3, 1, 1, 1, 1,
	2, 2, 1, 1, 2, 2, 1, 1, 1, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 1, 0, 1, 1, 1,
	1, 1, 1, 1, 3, 5, 7, 1, 7, 5,
	3, 1, 1, 1, 1, 1, 1, 1, 3, 5,
	1, 1, 1, 1, 1, 1, 1, 0, 3, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 610, -105, -102, -70, -68, -109, -110,
	-91, -111, -104, -133, -138, -119, -120, -121, -134, -140,
	-193, -198, -199, -200, -3, -55, -57, -71, -90, -92,
	-103, -113, -112, -114, -122, -130, -125, -108, -62, -135,
	-139, -150, -194, -195, -196, 32, 31, 100, 80, 156,
	129, 138, 206, 391, 437, 449, 406, 143, 428, 411,
	-144, -145, 467, -56, -69, -137, -136, 73, 130, 421,
	-4, -12, -16, 29, 46, -58, -59, -60, -61, 62,
	-78, -74, -85, -79, -72, -73, -76, -626, 102, -568,
	-93, -96, -129, -630, 164, 224, -115, -116, -117, 373,
	-123, -124, 430, -126, -127, -128, 433, 165, -64, -63,
	158, -221, -223, -142, -141, -143, -197, -151, -152, -153,
	-154, -155, -156, -157, -159, -185, -160, -161, -162, -163,
	-164, -165, -169, -188, -166, -167, -168, -171, -170, -172,
	-177, -173, -174, -175, -176, -178, -179, -181, -182, -183,
	-184, -186, -187, 472, -180, -189, -158, 533, 49, 488,
	82, 148, 441, 21, -5, -6, -7, -8, -9, -10,
	-11, -15, -14, -54, -75, -77, -80, -81, -82, -89,
	-83, -84, -567, -94, -95, -98, -100, -101, -97, -99,
	429, -224, -222, 607, 548, -19, -24, -20, -21, -23,
	-25, -22, -26, -27, -28, -40, -45, -42, -43, -41,
	-44, -46, -47, -48, -49, -50, -51, -52, -53, -30,
	-36, -37, -31, -32, -33, -34, -35, -38, -39, -17,
	-18, -29, 570, 579, -227, -225, -226, -234, 459, 556,
	508, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, -318, 2, -297, -303, -304, -305, -296,
	-266, -537, -540, 4, -534, -538, 171, 234, 336, 21,
	23, 22, 24, 25, 26, 27, 29, 30, 41, 42,
	44, 45, 46, 47, 48, 49, 53, 55, 59, 60,
	61, 62, 63, 64, 68, 73, 74, 79, 80, 81,
	82, 83, 84, 85, 91, 88, 89, 90, 92, 94,
	96, 97, 98, 99, 100, 101, 103, 104, 105, 107,
	108, 109, 117, 118, 119, 120, 121, 123, 129, 124,
	130, 133, 128, 132, 134, 136, 137, 138, 141, 142,
	143, 145, 146, 147, 149, 150, 151, 153, 154, 156,
	157, 158, 161, 159, 162, 160, 163, 164, 165, 166,
	169, 177, 178, 179, 184, 186, 187, 188, 192, 193,
	194, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	207, 211, 213, 214, 215, 216, 217, 223, 224, 226,
	227, 228, 229, 230, 235, 236, 237, 240, 246, 247,
	251, 252, 253, 255, 259, 260, 261, 262, 263, 264,
	266, 268, 267, 270, 273, 274, 277, 278, 279, 280,
	281, 282, 286, 287, 283, 288, 289, 291, 292, 295,
	293, 296, 297, 294, 298, 300, 301, 302, 303, 304,
	305, 306, 307, 308, 309, 310, 311, 299, 314, 312,
	316, 317, 318, 319, 334, 329, 330, 331, 323, 324,
	320, 325, 321, 322, 326, 327, 333, 328, 338, 339,
	340, 343, 221, 345, 346, 349, 367, 353, 354, 355,
	358, 359, 362, 365, 366, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 378, 379, 381, 382, 383, 385,
	386, 387, 389, 391, 392, 394, 395, 397, 398, 399,
	400, 401, 402, 403, 405, 406, 408, 407, 409, 411,
	413, 414, 415, 421, 428, 422, 424, 425, 426, 427,
	429, 430, 431, 432, 433, 435, 436, 437, 439, 440,
	441, 442, 443, 445, 447, 448, 452, 453, 469, 470,
	490, 449, 450, 451, 454, 455, 456, 457, 458, 462,
	460, 461, 463, 464, 465, 467, 468, 471, 472, 474,
	475, 476, 477, 478, 479, 480, 483, 485, 486, 487,
	488, 507, 489, 491, 495, 496, 497, 498, 492, 493,
	506, 500, 501, 503, 504, 509, 510, 511, 512, 513,
	514, 515, 516, 518, 526, 527, 528, 530, 533, 534,
	535, 536, 524, 538, 539, 542, 543, 544, 547, 545,
	546, 548, 550, 553, 554, 555, 561, 560, 562, 563,
	565, 566, 571, 572, 574, 575, 576, 36, 50, 51,
	54, 56, 58, 69, 70, 71, 75, 125, 126, 155,
	167, 168, 180, 195, 196, 208, 210, 218, 219, 220,
	241, 242, 244, 249, 271, 342, 344, 360, 364, 380,
	384, 388, 390, 404, 444, 481, 494, 499, 519, 520,
	521, 522, 529, 531, 556, 557, 558, 564, 573, -318,
	2, -297, 351, -290, 2, -266, -266, 391, 28, 2,
	28, 379, 461, 511, 513, 2, -594, -363, 2, 28,
	-269, -266, 102, 206, 459, -290, 2, -594, 206, -363,
	25, 2, -266, 2, 365, 22, 27, 66, 77, 98,
	141, 166, 189, 192, -629, 367, 398, 447, 463, 506,
	516, 530, 2, 560, 292, 460, 508, 234, 120, 535,
	454, -608, 452, 453, 365, 396, 439, 209, 549, -270,
	2, 449, -266, 292, 2, 610, 94, 74, 444, 464,
	-147, 2, 282, 527, -148, -149, -146, 519, -521, 454,
	439, 314, -266, 610, 610, 610, 28, -279, -266, 508,
	234, 454, 120, 504, 610, 2, 508, 370, 560, 460,
	120, 401, 234, 535, 192, 141, 27, 454, -608, 584,
	585, 292, 127, -592, 2, -587, 4, -538, -534, -312,
	-311, 508, 514, 120, -305, -296, 599, -304, 610, 610,
	610, 610, 2, 252, 253, 400, 399, 464, 465, 28,
	610, 610, 610, 610, 452, 2, 166, 22, 27, 66,
	93, 98, 127, 189, 192, 356, -627, 367, 398, 463,
	506, 510, 516, 530, -607, 489, 68, 427, 454, -606,
	-608, 292, 535, 141, -414, 120, 282, 204, 543, 513,
	511, 541, 133, 240, 546, 545, 610, 610, -106, 2,
	607, 32, 31, -105, -109, 143, 467, -216, 508, 245,
	2, -266, 610, 610, 610, 2, 252, 253, 452, 453,
	28, 610, 610, 190, -587, 2, 610, 610, 610, 2,
	28, 252, 253, 452, 453, 245, 2, 68, 456, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 2, -191, 464, 489, 215,
	47, 46, 74, 28, 397, 79, 371, 121, 127, 150,
	536, 207, 234, 235, 260, 93, 94, -416, 44, 253,
	68, 252, 453, -613, 452, -468, 509, 455, 461, 503,
	264, 449, 527, 102, 550, 440, 576, 401, 402, 501,
	415, 283, 159, 191, 4, 120, 314, 439, 466, 268,
	267, 519, 282, 448, 374, 84, 610, -638, 2, 508,
	-640, 2, 527, 527, 2, -640, 2, -640, 2, -640,
	2, -641, 527, 573, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, -222, -224, -223, 610, 610, 610, 610, 610,
	610, 610, -191, 464, 2, 74, 28, -356, -358, 540,
	243, 152, 357, -221, -223, 2, -567, -519, 2, -442,
	-541, -444, 597, 598, 590, 505, 67, -322, 335, 577,
	-456, 127, 541, 351, -540, -445, -458, 155, 367, 444,
	-378, 8, 9, 5, 6, 7, -275, -446, -452, 532,
	170, 341, -315, 611, 10, 607, -564, -223, -457, 37,
	210, 65, -523, -314, -276, -495, 244, -313, -296, -561,
	-562, 4, -534, -535, -524, -498, -506, -502, -503, -509,
	-266, -537, 77, 111, 112, 110, 115, 114, 285, 284,
	116, 113, 466, 549, 66, 36, 218, 219, 249, 342,
	220, 75, -563, 142, -536, 241, 242, 481, 51, 404,
	180, 126, 125, 344, 56, 54, 557, -507, 122, 519,
	520, 521, 522, 195, 196, 58, 167, 168, 364, 388,
	499, 529, 531, 208, 271, 43, 106, 191, 239, 222,
	248, 250, 254, 272, 275, 315, 332, 337, 361, 363,
	438, 473, -644, 558, 494, 69, 70, -569, 407, -570,
	-290, -569, 610, 610, 612, 610, -347, -349, -351, 2,
	28, 139, 607, 2, -473, 2, -474, -478, -223, 265,
	-477, 607, -475, 605, -297, 352, -565, 445, -561, -562,
	-275, -296, -314, 4, -534, -536, 609, -352, 607, 120,
	454, 508, 78, 234, 93, 166, 192, -409, 607, -266,
	28, 351, 523, 612, -348, 395, -454, 607, 351, 354,
	190, 354, 60, 296, 2, 2, 2, 2, 2, 218,
	-266, 508, 119, 2, 263, 2, 2, 2, 2, 2,
	2, 2, -371, 218, 2, -297, 560, -371, 218, 2,
	-371, 218, 2, -415, 2, 87, -280, 218, 2, -266,
	-306, 218, 2, -301, -303, -310, 218, 2, -308, -266,
	-529, 218, 2, -527, 4, -534, 116, 466, -442, 2,
	-135, 2, 60, -266, 560, 2, 469, 2, 607, -147,
	2, 71, 527, 43, 464, -148, 2, -429, 2, -430,
	-262, -263, -264, -485, -265, 251, 394, 403, 580, 131,
	335, 576, -621, 190, 589, 523, -519, -519, -519, -379,
	609, 2, 2, 2, 2, 2, 2, -478, 218, -297,
	2, -294, -522, 4, -534, -538, -535, -539, -537, 28,
	31, 32, 33, 35, 37, 38, 39, 40, 57, 65,
	66, 72, 76, 78, 87, 93, 102, 110, 111, 113,
	112, 114, 115, 116, 127, 131, 135, 139, 140, 144,
	148, 152, 170, 172, 185, 189, 190, 206, 209, 212,
	225, 238, 243, 245, 265, 269, 276, 284, 285, 335,
	341, 347, 351, 352, 356, 357, 377, 393, 410, 434,
	459, 466, 484, 502, 508, 517, 523, 525, 532, 540,
	541, 549, 551, 559, 567, 568, 569, 570, -540, 77,
	2, -478, 218, 2, -300, 218, -478, -303, 2, -280,
	2, -442, -601, 515, 162, 422, 2, -319, 218, -297,
	-299, -303, -301, 2, 2, 2, 2, -308, 2, -527,
	218, 2, 28, 28, 560, 395, 245, 523, 612, -369,
	-311, -312, -518, 8, -362, -266, 609, -442, 2, -135,
	-118, 2, 185, -442, 218, 2, -135, 218, 2, -442,
	218, 2, -135, 218, 2, -266, 2, -609, 2, -531,
	218, -526, 10, -525, 5, 4, -534, -538, -535, 218,
	-266, 2, 296, 2, 2, 530, 2, 98, 508, 119,
	2, 426, -628, 447, 534, 2, 2, 2, 2, 2,
	2, 2, 508, -285, 2, -266, 185, 492, -308, 218,
	-309, 2, 460, -639, 407, -527, 218, 2, 560, -301,
	218, 2, -301, 234, 247, -280, 218, 2, 513, 511,
	513, 511, 190, 2, 245, 2, 245, 2, -479, 2,
	-480, -474, -481, 605, 352, -489, 2, -488, -525, 556,
	-106, 607, -106, 607, 464, 607, -531, -297, -297, -442,
	2, -135, -118, 2, -442, 2, -135, 2, -266, 2,
	-132, -531, -131, 607, 190, -266, 2, -442, 2, -135,
	-118, 2, -442, 2, -135, 2, -216, 185, 2, 120,
	508, -191, 2, 185, 551, 2, 8, 2, 225, -531,
	455, 402, 177, 2, 469, 2, 470, 74, -416, 576,
	74, 190, 2, 190, 2, -399, 2, 570, 395, 190,
	2, 2, -591, 2, 351, 190, 2, 190, 2, 190,
	2, 190, 2, 190, 2, -190, 465, 528, 507, 399,
	253, 2, -135, 567, -118, 253, 252, -442, 567, 2,
	-614, 185, 453, -442, 2, 526, 262, 160, 190, -399,
	2, 190, 2, 190, 2, 5, 2, 400, 490, 2,
	251, 394, 490, 2, -297, 508, 560, 460, 120, 28,
	2, 452, 2, 2, 88, 89, 190, 2, 190, 2,
	205, 190, 2, 190, 508, -380, 609, 576, 2, -391,
	-478, -428, -429, -428, 523, -356, -358, -191, 469, 2,
	-228, -389, -230, 185, -419, -420, -231, 276, 172, 347,
	-232, -398, 28, 139, -398, -398, 60, 608, 608, 11,
	12, 76, 41, 597, 598, 599, 600, 183, 601, 602,
	595, 596, 594, 587, 588, 592, 257, 258, 95, 591,
	589, 86, 290, 446, 173, 174, 175, 176, 423, 232,
	34, 233, 14, 15, 16, -322, 33, 356, 275, 577,
	222, 473, 590, 17, 18, 19, 248, 250, 337, 50,
	225, -274, 367, -321, 505, 67, -442, -442, -442, -442,
	-442, -442, -442, -442, 363, 607, -385, -437, 605, -223,
	607, 607, 607, 607, -518, -223, -442, -456, 608, -376,
	607, -223, -456, -451, 607, 444, 605, 607, -459, -442,
	5, 5, 5, 607, 609, -572, 571, 185, 607, 607,
	607, 607, 607, 607, 607, 607, 607, 607, 607, 607,
	607, 607, 607, 607, 390, -500, 607, -499, 607, -499,
	-499, 561, -497, 607, 579, 572, 607, -497, 607, 607,
	607, 607, 607, 607, 607, 607, 607, 607, 607, 607,
	607, 561, 612, -569, -352, 607, -381, -483, -442, 599,
	-381, -381, 351, -373, -442, 106, -402, 254, 315, 191,
	272, 438, 239, -439, 611, -439, -467, 579, -223, -475,
	-296, -223, -477, 607, -473, -467, -107, -518, -90, -103,
	-112, -135, -150, -195, -196, 599, -297, 607, 190, 607,
	609, -522, 190, -362, -280, -307, -266, -297, -313, -314,
	-319, -291, -266, 2, 2, 138, -373, -587, 535, 454,
	28, 460, -529, -269, 38, -453, -492, -493, -543, 611,
	-542, -495, -505, -501, -504, 380, 384, -524, 54, 557,
	-507, 244, 4, -534, -536, 241, 242, 481, 51, 404,
	180, 126, 125, 344, 56, 519, 520, 521, 522, 195,
	196, 58, 558, 494, 69, 70, -587, 535, 454, 28,
	460, 185, -529, 185, -529, 2, 2, 155, 2, 2,
	2, -266, -244, 612, 64, 431, 155, -371, 218, -244,
	155, -244, 155, -320, 218, -319, -244, 155, -244, 612,
	155, -244, 612, 155, 609, 612, 155, -529, 2, -415,
	-521, -373, 38, -429, 2, 127, 4, 5, -642, 612,
	274, -325, 289, 334, 214, 352, 574, 345, 131, -530,
	5, 4, -452, -464, 127, 282, 244, -512, -514, 8,
	-513, 9, -515, 597, 598, -520, -519, 109, 609, -522,
	-241, 424, 467, 366, -240, 24, 29, 143, 236, 319,
	554, 161, -337, 237, -334, 370, 155, 485, 544, -601,
	-604, 451, 515, 162, 422, 90, 345, 467, 366, 424,
	155, -395, -397, 38, 118, 319, 365, 61, 228, 294,
	295, 488, 564, 155, 467, 366, 424, 366, -13, -255,
	24, 143, -257, -252, 467, -604, 99, 424, 583, 429,
	376, 500, 393, -604, -601, 270, -603, 566, 333, -243,
	485, 544, -601, -604, 451, 424, -242, -339, -334, 370,
	155, 611, 24, 143, 424, 467, 366, -624, -625, 29,
	424, 366, -595, -287, -566, 225, 570, 155, -287, -287,
	-478, 218, -618, 185, 2, -611, -131, 266, 5, 10,
	-531, -131, -369, 612, 612, -522, 599, 453, 452, 155,
	155, 155, 155, 253, 185, 335, 335, 570, 2, 2,
	2, 2, 2, 192, -606, -629, 2, 2, -297, 218,
	-354, 351, -590, -370, 508, -297, 185, 335, 43, -300,
	218, 2, -303, 560, -595, 335, -302, 218, -297, 38,
	607, 335, 2, -415, 2, 234, -566, 335, -479, -316,
	-297, -474, -316, 467, -290, 38, -439, -297, 608, 612,
	-489, -489, -531, -204, 570, 190, 607, -216, 570, 570,
	253, -486, 612, -485, 225, -532, -531, -132, -531, 427,
	253, -531, -590, -280, 2, -297, 2, 508, 255, -531,
	-204, 225, -531, -531, -531, -521, 28, 470, 2, -190,
	465, 528, 89, 470, 2, -297, 508, 120, 234, 80,
	-618, 185, 2, -266, -593, 185, -588, 439, 454, 535,
	-587, -297, 120, -297, 120, -297, 120, -297, -297, 2,
	2, 2, 2, 2, 85, 2, -135, -442, 2, 85,
	2, 46, 486, -614, 185, 2, 526, 2, 526, 2,
	-266, -266, -266, 489, 274, -297, -297, -297, -298, -303,
	455, 509, 536, 453, -442, 2, -631, 2, 190, 185,
	2, 508, 234, 508, 234, 120, 190, 74, 120, 28,
	508, 450, 609, 4, -244, 612, -270, -228, -389, -521,
	-390, -389, -229, -228, -231, 185, 403, 545, 319, 471,
	259, -420, -419, 28, -442, -424, 179, 318, -442, -422,
	-444, 597, 598, -513, -515, -372, 345, -222, -222, -222,
	-359, -469, -442, 393, 234, -494, -492, -492, -295, -522,
	519, -442, -442, -442, -442, -442, -442, -442, -442, -442,
	-442, -442, -442, -442, -442, -442, -442, -442, -442, -442,
	-442, -442, -442, -442, -442, -442, -442, -442, -442, -442,
	-442, -442, -442, -442, -442, -442, -442, 275, 222, 473,
	50, 225, -442, 523, -442, -442, -442, -442, 312, 335,
	341, 532, 170, 542, 139, 345, -645, 502, 40, -449,
	-223, -377, 607, -463, 35, 484, 28, -456, 607, 2,
	-437, -442, -438, -323, -321, -266, 597, 598, 599, 600,
	601, 602, 587, 588, 589, 14, 15, 16, 592, 596,
	594, 595, 183, 95, 591, 290, 446, 86, 173, 174,
	175, 176, 257, 258, 17, 18, 19, 34, 590, -374,
	-373, -373, 608, 559, 28, 139, 599, 2, 608, 612,
	38, 608, -442, -374, -455, -451, -373, -462, -461, 567,
	-410, -411, 575, 299, 123, 216, 297, -412, 458, -516,
	8, -522, 599, -573, 178, 209, 607, 608, 2, 608,
	2, 608, -442, 2, 608, -442, 2, 608, -442, 2,
	608, -442, 2, 608, 2, 608, 2, -442, -442, -442,
	-442, -442, -442, -442, -373, 8, -516, -516, 519, 519,
	-516, -516, -516, -508, 380, 381, 382, 383, 277, 278,
	279, 280, 384, 385, 386, 387, 304, 305, 306, 307,
	300, 301, 302, 303, 308, 309, 310, 311, 200, 201,
	202, 203, 196, 197, 198, 199, -508, -404, 2, -510,
	-373, 4, 575, 299, 123, 216, 297, 458, 5, -404,
	2, -405, 2, -442, -373, -406, -443, -444, 597, 598,
	590, -322, -456, -407, 2, -442, -374, -442, 57, 269,
	525, -408, -442, 190, -373, -373, 2, -373, 2, -570,
	38, -373, -365, 612, 190, 38, 4, -365, -365, 607,
	608, 612, -403, 213, 293, 288, 247, -403, -473, -402,
	254, -400, 361, -400, -400, -467, -281, 605, 613, -522,
	-467, -466, -465, 38, -290, 358, -467, -467, 609, 608,
	-466, 606, -585, 607, 610, 610, 610, 610, 610, -297,
	607, -373, -522, 609, 491, 2, 608, 248, 248, 248,
	248, 248, 351, 445, 608, 523, -589, -306, -310, 509,
	2, 570, -105, 353, 608, 612, -364, 37, 605, 609,
	-516, 2, 2, -511, 561, 607, 607, -411, 607, 190,
	-589, -310, 509, 2, -594, -363, -363, 523, -266, 2,
	-297, -371, -244, 155, -371, -371, -244, 612, 155, -280,
	-301, -306, -308, -310, -266, -527, -529, -244, -302, -621,
	608, 527, -430, -324, 403, 483, 425, 462, 504, 8,
	9, 8, 9, 612, -522, 612, -622, 93, 523, 78,
	454, -259, 283, 523, -433, 218, 78, -544, 93, -283,
	-545, -266, 72, 541, 393, 189, 153, -622, 93, 393,
	-622, 93, 2, 236, 93, 467, 489, 28, 60, -478,
	41, 41, 28, -602, -603, 270, 190, 576, 508, 234,
	454, 523, 523, -478, -397, -492, 118, 294, 295, 60,
	-517, -512, 597, 598, -517, 60, -517, -517, -517, 570,
	-300, -478, 454, 523, 523, 523, 413, 413, -252, -148,
	523, 523, 28, -191, 432, 127, -643, 589, 413, 270,
	-603, 523, 190, 612, 41, 41, 28, -602, 190, 523,
	-319, -281, 555, 42, 555, 42, 555, 523, 42, 454,
	523, 612, 42, 523, 523, -13, 467, -596, -271, 105,
	325, 287, 326, 97, 322, 96, 321, 103, 323, 104,
	324, 562, 338, 563, 339, 63, 320, 298, 327, 487,
	328, -272, -273, 146, 372, 553, 120, -527, -13, -13,
	467, 366, 424, 155, -619, 225, 28, -608, 225, -486,
	225, -486, -311, -266, 609, -135, -442, -442, -135, -442,
	-135, 46, 155, 155, 2, 2, -639, 263, 607, -328,
	335, 190, -362, -487, 245, 612, -370, -587, 155, -527,
	-396, -395, 335, -302, 218, 2, 155, -352, 335, 149,
	607, 401, 2, 155, -282, 218, -267, -266, -415, -246,
	512, 155, -393, 551, -425, -135, 607, 127, 38, -425,
	-382, -383, -484, -384, -283, 607, -290, -439, -106, -488,
	608, 608, 608, -203, 355, -202, -266, 5, -216, -353,
	-284, -283, 119, 405, 405, -210, 570, -131, -132, 608,
	612, -486, 225, 492, -204, -204, -486, -486, -297, 185,
	-531, -204, -204, -204, 2, 2, 2, 2, -399, -297,
	-280, -319, -297, 28, 609, -529, -529, -310, -306, -399,
	-280, -399, -280, -399, -280, -399, -399, -135, -442, 489,
	2, 464, 185, 185, 609, -399, -355, 434, 2, 401,
	120, 508, 370, 234, -297, -319, -297, -319, -280, 120,
	-280, 121, -297, 4, -478, -390, -229, 352, 259, 471,
	-422, -423, -444, 444, 445, -423, 444, 445, 8, 9,
	8, 9, -233, 475, 340, -371, 612, -238, 39, 135,
	259, -297, 576, 151, -442, -442, 523, -645, 502, -449,
	151, -442, 312, 341, 532, 170, 542, 139, 345, 190,
	607, -443, -443, 608, -375, -442, -442, 606, 615, 608,
	609, 608, -358, 612, -356, -442, -373, -373, 608, 609,
	-373, -362, 606, 606, 612, 608, -460, -461, 144, -442,
	523, 523, 523, 523, 607, 608, 609, -578, 362, 607,
	607, -442, 608, 608, 608, 608, 38, 612, 612, 612,
	608, 612, 612, 612, 608, 608, 608, 612, 608, 576,
	576, 608, 608, 608, 608, 612, 608, 612, 608, 190,
	608, 608, -413, 377, 608, 11, 12, 597, 598, 599,
	600, 183, 601, 602, 595, 596, 594, 587, 588, 589,
	86, 290, 446, 14, 15, 16, -322, 248, 225, -443,
	-443, -443, -443, 608, -447, -448, 190, 185, 38, -408,
	-408, -408, 608, 190, -373, 608, 608, 607, -571, 292,
	335, 608, -436, -435, 568, -483, -366, 2, -473, -292,
	-522, -436, -436, -373, -442, 254, 254, -401, 551, 351,
	-403, -473, -466, -518, -441, -440, 187, 39, 135, 329,
	330, 331, 221, 188, -466, -290, -352, -466, -466, -522,
	-467, -467, -465, 608, -586, -518, 608, -367, -476, -565,
	-358, 609, -522, -213, -566, -192, 5, 341, -192, -192,
	-192, -192, -297, -529, 523, 523, 225, 25, 378, -492,
	605, 606, 8, -522, 607, -516, -516, -516, -529, 190,
	190, 225, 351, 190, -527, 2, -244, -371, -244, -244,
	-319, -320, -244, -244, -244, -394, 570, -519, -429, 539,
	83, 403, 519, -519, -240, 424, -283, -283, -297, -307,
	204, 414, -527, 335, -433, 218, -245, 335, 218, -291,
	-492, 607, -417, 572, 259, 259, 551, -283, -291, 259,
	218, -283, 218, -291, 2, -291, -597, 403, 346, -442,
	60, -335, 281, 401, 336, -241, 424, 467, 366, -135,
	-135, -135, 607, -621, 551, 138, -297, -319, -297, -307,
	-527, -302, 467, 366, 424, 332, -313, -517, -517, -395,
	467, 366, 424, -307, -527, -300, -527, -251, 218, -266,
	-251, 218, 454, -280, 413, 576, 45, -643, 523, 190,
	-442, -442, -242, -135, -135, -135, 607, -281, -243, 424,
	5, 218, -283, 5, -283, 218, 5, -266, -283, -307,
	-527, -625, 24, 143, -283, -307, -527, -271, 372, -531,
	341, 547, -280, -595, -287, 454, 523, 523, -478, -615,
	-616, 206, 437, 454, 440, -529, -131, -207, 570, -131,
	-201, 229, 599, -592, -531, -266, 560, -266, -326, -329,
	-327, -283, -434, -433, -548, -549, -544, 275, 234, 541,
	247, 171, 93, -219, -220, 572, 570, 155, -317, -297,
	605, -204, -531, -297, -487, -308, -309, 155, -352, 335,
	-527, 38, 155, 607, 2, 2, -301, 351, 335, -282,
	218, -247, 145, -643, -280, -436, -366, -392, -427, 434,
	351, -353, 556, -290, -392, -368, 612, 190, 589, 609,
	-353, -482, 599, -106, -106, -204, 612, 607, 589, 589,
	607, -531, 608, 612, 609, 607, 589, 589, -212, 355,
	-211, 147, 261, 246, 477, 478, 479, 480, 137, 476,
	124, 317, 230, -486, -531, -210, -132, 190, 190, -65,
	570, 508, -204, 611, 440, -266, -399, -399, -399, 464,
	464, -266, -362, -293, -522, -280, -297, -294, -319, 185,
	185, -280, 545, -423, 352, 286, -469, -239, 578, -297,
	611, -442, -442, 151, 151, -442, -443, -443, -442, 151,
	190, 607, -442, -453, 33, 33, 608, 612, -438, -442,
	-321, 608, 559, -358, -358, 608, 599, -522, 611, 608,
	-451, 148, -442, 517, 299, 216, 297, -412, 297, -412,
	-412, -516, 5, -522, 599, -579, -286, 607, -266, 568,
	-357, 357, 608, -494, -492, -442, -442, -442, -442, -442,
	-516, -497, -497, -512, -512, -442, -447, -442, -494, -492,
	-443, -443, -443, -443, -443, -443, -443, -443, -443, -443,
	-443, -443, -443, -443, -443, -443, -443, -443, -443, -443,
	139, 335, 345, -443, -448, -447, -442, -442, -492, 608,
	608, 608, -373, -105, 607, 292, -386, 209, -442, -486,
	612, -386, -386, 608, -473, -473, 607, -442, 254, 606,
	612, 614, 589, 589, -352, 609, -465, -466, 606, 608,
	612, 608, 612, -426, 38, 608, -522, -436, -215, -214,
	136, 53, 107, 134, 341, 248, -617, 570, -529, -529,
	454, 354, 5, 8, 605, 606, 609, -516, 608, 608,
	608, -529, -529, 454, -587, 535, 454, 28, -529, -244,
	-244, 119, 319, -442, 523, 523, 60, 225, 155, 335,
	553, 335, -545, 153, -550, -442, 607, 234, 607, 607,
	2, -235, -236, -237, 143, 467, 24, -623, 2, 551,
	155, -244, 155, -244, 574, -335, 607, 607, 523, 454,
	-259, 523, 570, -373, -442, -205, 127, -521, -604, 611,
	-604, 611, 454, 523, 523, 454, 523, 523, 335, 155,
	570, 169, 169, 576, -251, -442, -442, 185, 523, 570,
	-373, 523, -496, 48, 26, 335, -301, -244, 155, 523,
	523, 535, 467, -531, -531, 341, -13, -307, -527, -302,
	467, 366, 424, -594, -594, 206, -310, -619, -486, -209,
	355, -208, 147, 436, 137, 261, 230, -486, -207, 190,
	245, 570, -302, 2, 608, 608, 612, 612, -551, -245,
	-297, -282, 234, 234, -289, -267, 38, 349, 349, 607,
	-297, -86, 570, -485, -518, -598, 570, 43, -300, 38,
	155, -595, -135, -302, -490, -491, 5, 38, -297, 155,
	351, 335, -248, 268, -643, -526, -566, -358, -392, -381,
	336, 91, 608, -436, -383, -366, -442, 2, 608, -202,
	-203, -531, -531, -531, -204, -216, -284, 2, -532, -531,
	-531, 612, 607, 589, 589, 589, 589, 589, 589, -210,
	-486, -131, -135, 355, -297, 599, -399, -341, -340, 370,
	345, -341, 444, 444, 352, 179, 264, -238, -281, -442,
	-442, 151, 33, 33, -442, -442, -453, 608, -442, -442,
	-373, 606, 5, -442, 608, 608, 8, -442, 608, 609,
	-580, -266, -442, 608, 60, 608, 608, 612, 612, 608,
	608, 608, 608, 608, 608, 608, -448, 190, 139, 345,
	607, 608, 608, -105, -450, 212, 60, -473, -450, -450,
	-401, -362, -473, -440, -281, 605, -281, 605, -522, -518,
	-476, 607, 609, -214, 589, -531, -531, -192, 206, -617,
	-617, 570, -310, 606, 2, 605, -522, 608, -310, 190,
	-589, -310, 509, 119, -283, -283, 508, 444, -251, 393,
	-433, 155, 155, -552, 93, -554, 76, 171, 102, 335,
	341, 541, 393, 72, 127, 351, 410, -633, -634, -635,
	38, 581, 582, 608, -360, -470, -565, 607, -266, -360,
	-362, 335, 497, 127, 351, 335, 127, 351, 565, 119,
	2, 535, 79, -283, -291, -362, -362, -297, -307, -527,
	163, 608, 612, 589, 2, 599, 599, -307, -527, -302,
	-307, -527, -300, 155, -251, 368, 169, 523, -135, -442,
	163, 608, -281, 5, 5, 155, -278, 76, -283, 5,
	-283, -301, 119, 454, 523, 523, 351, 351, 354, -615,
	-616, -207, 612, 607, 589, 589, 589, -207, -532, -131,
	2, -352, -342, 236, -283, -549, -546, -547, 393, -434,
	-553, -555, 171, 393, -330, 607, -282, -267, 607, -135,
	2, -218, -217, -266, 5, 607, -328, 355, 606, -600,
	355, -599, 117, 137, -527, -396, -135, -302, -350, 570,
	-352, 608, 612, 149, -418, 551, -281, -297, 155, -249,
	267, -643, -526, -246, -421, -419, 140, 607, 351, -135,
	-358, 589, 608, 608, 119, 608, -211, -212, -531, -131,
	-531, -531, -531, -131, -210, -486, -66, -67, 234, 93,
	375, -294, 508, 234, 607, 607, -238, -442, -442, -442,
	608, -358, -522, 599, -574, 370, 608, -469, -442, -442,
	-443, 190, 607, -453, 608, -575, 569, -442, -387, -388,
	-442, 442, 108, 210, -575, -575, 608, -518, -518, 2,
	-531, 354, 2, 523, 605, 2, 190, -529, 190, 190,
	225, 225, 38, 413, -433, -291, -291, -295, -288, -266,
	171, 218, 341, 565, -417, 259, 607, -443, 545, -297,
	607, 2, 217, 217, 30, 60, -636, 131, 238, 608,
	612, -471, -277, -266, -442, -471, 608, 608, 341, 545,
	341, 565, -442, 545, -492, 607, -244, -244, 608, 608,
	-442, 523, -521, 100, -519, 2, -604, -251, -280, -442,
	185, -442, 523, 5, -244, -295, -244, -244, -278, 535,
	-307, -527, -302, -620, 509, 461, 536, 455, 193, 443,
	-620, 185, -208, -209, -531, -131, -131, -207, 38, -336,
	-337, 2, -551, 259, -288, 259, 227, 154, -360, 607,
	607, -362, -632, 570, 608, 612, 589, 589, -326, -219,
	-87, -88, 524, -485, 612, 607, 589, -352, 319, 119,
	38, 5, 607, 607, -266, 351, 607, -281, -261, 92,
	-643, -526, -247, -392, 336, -362, 93, -421, -449, -204,
	607, -204, 608, 612, 28, 607, 28, 607, -297, -319,
	-373, -373, 608, -358, 60, 612, 608, 608, -443, -453,
	608, -576, -577, -286, 612, 607, 607, 468, 606, 606,
	-529, 2, -529, -529, -529, 454, -251, 393, -266, -545,
	-554, -288, 335, 551, -442, -443, -268, 607, -442, 607,
	607, 38, 127, 238, 132, 223, -432, -637, 101, 498,
	226, -470, -238, 608, -431, 551, 410, -443, -278, -360,
	607, 607, 607, 589, 190, -135, 607, -496, -244, -301,
	523, 2, 2, 190, -594, 608, -610, 408, -135, -219,
	607, -331, 81, 94, 128, 217, 194, 235, 489, 495,
	28, -331, 608, -360, -360, 608, -332, 351, 119, 319,
	-217, -519, -519, 608, 38, -88, 9, -599, -600, -442,
	38, 119, -135, -490, -360, -297, -360, 351, -253, -252,
	276, -526, -248, 608, -291, -392, -532, -67, -362, -362,
	608, 608, -581, 401, 445, 211, -373, -359, 608, 612,
	38, -388, 2, 2, 2, -617, -310, 413, -245, 155,
	213, 608, -556, 291, -266, 608, -396, -396, 38, 132,
	223, -338, -334, 607, -239, -471, 213, -297, -605, 551,
	608, -344, -343, -340, -346, -345, -340, -373, -519, 100,
	368, -373, -278, -529, -529, 351, -612, 191, -611, 5,
	10, -332, -361, -472, -283, -431, 608, 608, 82, 119,
	-342, -135, 608, -135, 2, -350, 608, 608, -418, 608,
	-297, -250, -533, 413, 415, -643, -249, -436, 140, 608,
	608, 608, 608, -582, -583, 50, 538, 109, -442, -582,
	-582, -577, -579, 190, 171, 579, -557, -560, -559, 586,
	474, 191, 369, 608, 497, 564, 608, 608, -636, -362,
	579, -352, -442, -431, 608, 612, 556, 608, 612, 556,
	608, 190, 608, -244, -617, -244, -620, -206, 570, 46,
	-260, -259, 608, 612, -432, -431, -338, 392, 133, 143,
	-336, -632, -431, 607, -432, 607, -258, -257, -643, -512,
	-261, 140, 336, 545, -204, -584, 153, -583, 389, 184,
	444, 389, 184, -584, -584, -529, -288, 55, -559, 586,
	-560, 586, 545, 133, -436, 608, 55, -556, -343, 225,
	-345, 190, 368, 190, 452, -611, 30, -472, -338, -432,
	-220, 570, 445, 445, 2, -219, -332, -432, -360, -338,
	-360, -254, -255, -256, -362, -253, 336, 545, 467, 109,
	209, 518, 319, 33, 589, -558, 319, 431, 64, 467,
	-558, 589, -557, 607, 607, -529, 355, -220, -338, -436,
	2, -332, -338, 608, -220, 608, -528, 366, -250, 467,
	-382, 444, 359, -583, -442, 23, 341, 127, -442, -636,
	-373, -373, -244, -203, 607, -436, -220, -260, -220, -431,
	-436, -432, -643, -258, -382, -436, 608, 608, -203, -436,
	-436, -432, -338, -527, -254, -436, -333, -334, 523, 608,
	-338, -220, 607, -220, -436, -373, -436, 608, -333,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 563, 564, 566, 567, 568, 570,
	571, 573, 575, 577, 578, 579, 581, 582, 584, 585,
	586, 587, 588, 590, 592, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	663, 665, 0, 1443, 1445, 1447, 1449, 0, 819, 0,
	36, 37, 39, 0, -2, 340, 342, 344, 346, 0,
	378, 380, 381, 383, 385, 386, 387, 389, -2, 0,
	496, 497, 499, 501, -2, 0, 1033, 1035, 1037, 0,
	652, 654, 0, 1040, 1042, 1044, 0, 0, 675, 676,
	0, 1557, -2, 667, 669, 671, 673, 744, 746, 748,
	750, 752, 754, 756, 758, 760, 762, 763, 765, 767,
	769, 771, 773, 774, 776, 778, 780, 781, 783, 784,
	786, 788, 790, 792, 794, 796, 798, 800, 802, 804,
	806, 808, 810, -2, 813, 814, 815, -2, -2, 0,
	-2, -2, -2, 1461, 41, 43, 45, 47, 49, 51,
	53, 55, 57, 59, 440, 442, 444, 446, 448, 451,
	453, 455, 1615, 503, 505, 507, 509, 511, 513, 515,
	0, -2, 1629, 0, 0, 61, 62, 63, 64, 65,
	66, 67, 68, 69, 70, 109, 110, 111, 112, 113,
	114, 115, 74, 75, 76, 78, 79, 80, 81, 85,
	86, 87, 88, 89, 90, 91, 92, 93, 94, 106,
	107, 72, 0, 0, 1588, 1590, 1592, 1594, -2, 0,
	0, 5, 9, 11, 13, 15, 17, 19, 21, 23,
	25, 27, 29, 565, 569, 572, 574, 576, 580, 583,
	589, 591, 593, 548, 549, 552, 2327, 2345, 2346, 2347,
	2350, 2351, 2352, 2353, 2354, 2355, 2817, 2898, 2899, 2377,
	2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386, 2387,
	2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395, 2396, 2397,
	2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406, 2407,
	2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417,
	2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427,
	2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437,
	2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447,
	2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457,
	2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467,
	2468, 2469, 2470, 2471, 2472, 2473, 2474, 2475, 2476, 2477,
	2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486, 2487,
	2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497,
	2498, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507,
	2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517,
	2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527,
	2528, 2529, 2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537,
	2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546, 2547,
	2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555, 2556, 2557,
	2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567,
	2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577,
	2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587,
	2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597,
	2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607,
	2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617,
	2618, 2619, 2620, 2621, 2622, 2623, 2624, 2625, 2626, 2627,
	2628, 2629, 2630, 2631, 2632, 2633, 2634, 2635, 2636, 2637,
	2638, 2639, 2640, 2641, 2642, 2643, 2644, 2645, 2646, 2647,
	2648, 2649, 2650, 2651, 2652, 2653, 2654, 2655, 2656, 2657,
	2658, 2659, 2660, 2661, 2662, 2663, 2664, 2665, 2666, 2667,
	2668, 2669, 2670, 2671, 2672, 2673, 2674, 2675, 2676, 2677,
	2678, 2679, 2680, 2681, 2682, 2683, 2684, 2685, 2686, 2687,
	2688, 2689, 2690, 2691, 2692, 2693, 2694, 2695, 2696, 2697,
	2698, 2699, 2700, 2701, 2702, 2703, 2704, 2705, 2706, 2707,
	2708, 2709, 2710, 2711, 2712, 2713, 2714, 2715, 2716, 2717,
	2718, 2719, 2720, 2721, 2722, 2723, 2724, 2725, 2726, 2727,
	2728, 2729, 2730, 2731, 2732, 2733, 2734, 2735, 2736, 2737,
	2738, 2739, 2740, 2741, 2742, 2743, 2744, 2745, 2746, 2747,
	2748, 2749, 2750, 2751, 2752, 2753, 2754, 2755, 2756, 2757,
	2758, 2759, 2760, 2761, 2762, 2763, 2764, 2765, 2766, 2767,
	2768, 2769, 2770, 2771, 2772, 2773, 2774, 2775, 2776, 2777,
	2778, 2779, 2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787,
	2788, 2789, 2790, 2791, 2792, 2793, 2794, 2795, 2796, 550,
	551, 1224, 0, 617, 615, 2312, 618, 2611, 620, 622,
	490, 491, 492, 493, 494, 495, 0, 645, 631, 1627,
	646, 648, 649, 650, 651, 612, 610, 0, 650, 645,
	2381, 643, 1441, 1442, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 502, 0, 0, 0, 0, -2, 0, 0,
	0, 0, 0, 0, 0, 419, 1283, 1284, 1285, 1426,
	1427, 2659, 1468, 0, 239, 664, -2, -2, 2782, -2,
	698, 699, -2, -2, 713, 717, 708, 2786, 0, 2662,
	2646, -2, 720, 1444, 1446, 1448, 817, 818, 2331, 0,
	0, 0, 0, 0, 38, 40, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 249, -2, -2, -2, -2,
	0, 0, 2708, 2433, 2280, 2347, 2283, 2278, 341, 343,
	345, 347, 348, 0, 0, 0, 0, 0, 0, 0,
	379, 382, 384, 388, -2, 390, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, -2, -2,
	0, 0, 0, 0, 0, 0, 0, 0, 1104, 1096,
	1097, 1348, 0, 0, 0, -2, 498, 500, 553, 554,
	0, 1616, 1616, 561, 562, -2, 0, 0, 0, 0,
	311, 301, 1034, 1036, 1038, 1039, 0, 0, 0, 0,
	0, 653, 655, 0, 0, 279, 1041, 1043, 1045, 1046,
	0, 0, 0, 0, 0, 0, 313, 0, 0, 668,
	670, 672, 674, 745, 747, 749, 751, 753, 755, 757,
	759, 761, 764, 766, 768, 770, 772, 775, 777, 779,
	782, 785, 787, 789, 791, 793, 795, 797, 799, 801,
	803, 805, 807, 809, 811, 812, 825, 0, 0, 0,
	0, 0, -2, -2, 0, 0, 0, -2, 0, -2,
	-2, -2, 0, 0, 0, 0, 0, 0, 0, -2,
	0, 0, 927, 0, 0, 0, -2, -2, -2, 0,
	0, 0, 0, 0, -2, -2, 0, 0, 0, 0,
	-2, 1014, 0, 0, 828, 831, 832, 833, 834, 835,
	836, 0, 900, 925, 926, 936, 816, 0, 1264, 1617,
	1470, 1451, 1465, 1470, 1453, 1454, 1455, 1456, 1457, 1462,
	1464, 1458, 1459, 1460, 42, 44, 46, 48, 50, 52,
	54, 56, 58, 60, 441, 443, 445, 447, 449, 452,
	454, 456, -2, 1586, 1587, 504, 506, 508, 510, 512,
	514, 516, 656, 0, 658, 0, 830, -2, 0, 1621,
	1621, 1621, 0, 0, 1587, 1585, 0, 661, 662, 724,
	725, 1894, 0, 0, 0, 0, 0, 0, 0, 0,
	2154, 1982, 0, 726, -2, 2015, 2017, 2757, 2584, 2782,
	2153, 2019, 2020, 2021, 2022, 2023, 0, 2025, 2026, 2027,
	2028, 2029, 2030, 0, 2032, 0, 2037, 2038, 2039, 0,
	2764, 2257, 2341, -2, 0, 0, 2770, 2337, 0, 2120,
	2055, -2, -2, 2364, 2343, 1826, 1827, 1828, 1829, 1830,
	-2, -2, 2800, 2059, 2060, 2061, 2062, 2063, 2064, 2065,
	2066, 2067, 2068, 2069, 0, 2745, 2765, 2766, 2771, 2773,
	2767, 2754, 2080, 2447, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, 1853, 1862, -2,
	-2, -2, -2, -2, -2, -2, 2758, 2759, 2776, 2779,
	2785, 2790, 2791, 2763, 2772, 2799, 2801, 2802, 2803, 2804,
	2805, 2806, 2807, 2808, 2809, 2810, 2811, 2812, 2813, 2814,
	2815, 2816, 1854, -2, -2, -2, -2, 1604, 2625, 1607,
	1224, 1605, 1589, 1591, 0, 1593, 0, 0, 0, 1598,
	1624, 1622, 0, 1673, 1602, 1603, 1696, 1696, 1720, 0,
	1701, 0, 1720, 1616, 1747, 0, 1707, 2651, 2056, 2057,
	0, 2347, 2342, -2, -2, 2797, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 613, 0, 619,
	621, 0, 0, 0, 644, 1626, 0, 0, 0, 0,
	0, 0, 0, 0, 422, 423, 424, 425, 426, 2765,
	0, 0, 0, 431, 0, 433, 434, 435, 436, 437,
	438, 439, 209, 2765, 521, 546, 0, 209, 2765, 524,
	209, 2765, 527, 0, 530, 1346, 209, 2765, 533, 2308,
	209, 2765, 536, 538, 2316, 209, 2765, 542, 2323, 2321,
	543, 0, 545, 229, 225, 226, 227, 228, 1437, 1438,
	1439, 1440, 0, 1467, 1347, 666, 0, 692, 0, 696,
	697, 2753, -2, 0, 2671, 701, 702, -2, 704, 1471,
	1475, 1476, 1477, 1478, 1479, 0, 0, 0, 0, 1484,
	0, 0, 0, 0, 693, 694, 711, 712, 718, 721,
	0, 820, 821, 822, 823, 824, 71, 0, 2765, 1747,
	73, 0, 2302, 2372, 2373, 2374, 2375, 2376, 2798, 2818,
	2819, 2820, 2821, 2822, 2823, 2824, 2825, 2826, 2827, 2828,
	2829, 2830, 2831, 2832, 2833, 2834, 2835, 2836, 2837, 2838,
	2839, 2840, 2841, 2842, 2843, 2844, 2845, 2846, 2847, 2848,
	2849, 2850, 2851, 2852, 2853, 2854, 2855, 2856, 2857, 2858,
	2859, 2860, 2861, 2862, 2863, 2864, 2865, 2866, 2867, 2868,
	2869, 2870, 2871, 2872, 2873, 2874, 2875, 2876, 2877, 2878,
	2879, 2880, 2881, 2882, 2883, 2884, 2885, 2886, 2887, 2888,
	2889, 2890, 2891, 2892, 2893, 2894, 2895, 2896, 2897, 2800,
	77, 0, 2765, 82, 0, 2765, 0, -2, 95, 0,
	108, 0, 135, -2, -2, -2, 116, 0, 2765, 0,
	2277, -2, 0, 221, 302, 303, 304, 0, 1071, -2,
	0, 1277, 1279, 1279, 0, -2, 0, 0, 0, 1024,
	2274, 2279, 1025, 2298, 1026, 2284, 0, 349, 350, 351,
	352, 353, 0, 354, 2765, 356, 357, 0, 359, 360,
	2765, 362, 363, 0, 365, 0, 367, 0, 261, 265,
	2765, 314, 315, 2360, 2361, 2368, 2369, 2370, 2371, 2765,
	392, 395, 0, 397, 398, 0, 400, 0, 0, 0,
	404, -2, 420, 0, 417, 407, 408, 410, 411, 412,
	413, 414, 0, 460, 458, 2313, 0, 0, -2, 2765,
	0, 1068, 0, 0, 1326, -2, 0, 1270, 0, 1333,
	2765, 1329, 0, -2, 0, 1614, 2765, 1488, 1100, 1101,
	1102, 1103, 1759, 487, 0, 1521, 0, 1523, 0, 1543,
	1753, 1696, 0, 0, 1758, 0, -2, 606, 2330, -2,
	556, 0, 557, 0, -2, 0, 328, 0, 0, 1049,
	1051, 1052, 1054, 1055, 1058, 1059, 1060, 1061, 0, 1063,
	1733, 280, 282, 0, 0, 0, 1048, 1428, 1429, 1430,
	1431, 1432, 1433, 1434, 1435, 1436, 0, 0, 677, 0,
	0, 826, 827, 0, 0, 843, 844, 845, 0, 328,
	2663, 2620, 2469, 852, 0, 855, 858, -2, 0, 0,
	0, 0, 862, 0, 867, 868, 869, 0, -2, 0,
	876, 878, 1032, 880, 0, 0, 882, 0, 886, 0,
	889, 0, 891, 0, 893, -2, -2, -2, 901, 902,
	-2, 907, -2, 0, 911, -2, 0, 914, 0, 917,
	-2, 0, 927, 923, 924, 0, 0, 0, 0, 944,
	945, 0, 954, 0, 957, 958, 959, 0, 963, 964,
	0, 966, 967, 968, 969, 0, 2735, 2668, 2433, 0,
	977, -2, 983, 985, 0, -2, 0, 1001, 0, 1005,
	0, 0, 1013, 0, 0, 829, 0, 837, 838, 209,
	1751, 1450, -2, 1452, 0, -2, 0, 657, 0, 660,
	1646, 1572, 1569, 0, 1643, 1644, 1573, 0, 0, 0,
	1580, 0, 1619, 1620, 0, 0, 0, 1559, 1560, 0,
	0, 0, 0, 2159, 2160, 2161, 2162, 2175, 2163, 2164,
	2174, 2172, 2173, 2165, 2166, 2171, 2185, 2186, 2176, 2177,
	2167, 2180, 2178, 2179, 2181, 2182, 2183, 2184, 0, 0,
	2190, 0, 2168, 2169, 2170, 2198, 0, 0, 2199, 0,
	2201, 0, 2191, 2187, 2188, 2189, 0, 1961, 1963, 2265,
	0, 0, 0, 2197, 2192, 2193, 1899, 1900, 1901, 1902,
	1903, 1936, 1940, 1941, 0, 0, 2016, 2262, 2261, 2018,
	0, 0, 2213, 0, 2031, -2, 0, 2154, 2208, 0,
	0, 2040, 2041, 2042, 0, 0, 2213, 0, 0, 2256,
	2052, 2053, 1891, 0, 0, 2122, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1840, 1839, 0, 1841, 0, 1842,
	1843, 1850, 1863, 0, 0, 0, 0, 1867, 0, 0,
	0, 0, 0, 0, 0, 2237, -2, 0, 0, 0,
	0, 1855, 0, 1606, 0, 0, 1677, 2266, 2270, 2271,
	1677, 1677, 0, 0, 2214, 1744, 1744, 0, 0, 1739,
	1739, 1739, 1737, 1720, 0, 1720, 1730, 0, 1720, 1720,
	0, -2, 1701, 0, 0, 1730, 0, 1714, 594, 596,
	598, 600, 601, 602, 604, 1748, 1749, 0, 0, 0,
	0, 2348, 0, 0, 0, 0, 2320, 0, 0, 2333,
	0, 0, 2307, 374, 375, 0, 0, 0, 2718, 2662,
	0, -2, 624, 647, 1616, 0, 2216, 1774, 1778, 0,
	1780, 1781, 1782, 1783, 1784, 0, 0, 1775, -2, 1851,
	1853, 1874, 2365, 2366, 2367, 1834, 1835, 1836, 1837, 1838,
	1846, 1833, 1833, 1833, 1844, 1873, 1865, 1873, 1869, 1819,
	1820, 1821, 1856, 1857, 1858, 1859, 0, 2718, 2662, 0,
	-2, 0, 634, 0, 0, 1554, 421, 0, 428, 429,
	430, 0, 517, 0, 207, 208, 0, 209, 2765, 522,
	0, 525, 0, 209, 2765, 2272, 531, 0, 534, 0,
	0, 540, 0, 0, 0, 0, 0, 209, 1556, 0,
	0, 0, 0, -2, 706, 714, 715, 716, 0, 1473,
	0, 1480, 735, 736, 737, 1482, 1483, 0, 1485, 709,
	738, 739, 740, 741, 742, 743, 0, 2286, 2287, 2288,
	2289, 2292, 2293, 0, 0, 707, 728, 710, 0, 722,
	117, 1423, 0, 0, 164, 0, 1423, 1423, 0, 0,
	0, 0, 192, 0, 1134, 0, 0, 0, 0, 135,
	149, 160, 129, 130, 131, 0, 0, 0, 0, 0,
	0, 83, 1246, 0, 1249, 0, 0, 0, 0, 0,
	0, 0, 1262, 0, 0, 0, 0, 0, 97, 98,
	0, 0, 103, 104, 0, 148, 0, 0, 0, 0,
	0, 1518, 0, 139, 135, 0, 0, 134, 136, 119,
	0, 0, 135, 150, 162, 0, 196, 198, 1131, 0,
	0, 0, 0, 0, 0, 0, 0, 220, 231, 0,
	0, 0, 1271, 0, 0, 0, 1613, 0, 0, 0,
	0, 2765, 1421, 0, 1406, 0, 1733, 2518, -2, -2,
	280, 1733, 1023, 0, 0, 2348, 2282, 0, 0, 0,
	0, 0, 0, 366, 0, 0, 0, 0, 396, 399,
	401, 402, 403, 0, 1325, 0, 409, 450, 1194, 2765,
	0, 0, 477, 472, 0, 474, 0, 0, 0, 1245,
	2765, 1243, 2317, 0, 1268, 0, 1224, 2765, 2315, 0,
	0, 0, 1334, 2357, 1343, 1347, 1506, 0, 489, 0,
	1524, 1526, 0, 0, 1754, 0, 1756, 1696, 1616, 0,
	0, 0, 0, 306, 0, 0, 0, 0, 0, 0,
	1062, 286, 0, 1732, 0, 0, 316, 1733, 280, 2637,
	1047, 328, 328, 1733, 679, 1733, 681, 0, 0, 846,
	847, 0, 328, 328, 328, 853, 854, 856, 857, -2,
	-2, -2, -2, 859, 860, 951, 0, 0, 0, 950,
	870, 0, 872, 875, 879, 0, 1017, 2646, 2662, 2718,
	1030, 951, 2433, 951, 2433, 951, 2433, 951, 951, 895,
	939, 947, 906, 913, 0, 908, 912, 915, 918, 0,
	920, 928, 0, -2, 0, 931, 0, 933, 0, 935,
	951, 952, 955, 962, 965, 970, 971, 972, 973, 2328,
	974, 975, 976, -2, 980, 981, 0, 992, 997, 998,
	994, 0, 0, 0, 0, 0, 0, 1008, 1009, 0,
	0, 1016, 0, 839, 1263, 0, 1463, 1646, 1572, 659,
	1563, 1645, 1564, 1571, 1574, 0, 0, 1576, 0, 1578,
	0, 1641, 1642, 1649, 1650, 0, 1660, 1661, 1653, 0,
	-2, 0, 0, 1656, 1657, 1582, 0, 1599, 1600, 1601,
	1630, 1633, 1362, 0, 2898, 1895, 1769, 1896, 1897, 2301,
	0, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912,
	1913, -2, -2, -2, -2, -2, -2, -2, -2, 1922,
	1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932,
	-2, -2, -2, 1937, 1938, 1939, -2, 2200, 2202, 0,
	2265, 0, -2, 0, -2, -2, -2, -2, 1958, 0,
	1960, 1965, 1967, 1969, 0, 0, 0, 0, 2264, 1979,
	2248, 2249, 0, 0, 2156, 2157, 2158, 1964, 0, 1983,
	2263, 2260, 0, 0, 2194, 0, 2159, 2160, 2161, 2162,
	2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172,
	2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182,
	2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 0,
	2212, 1629, 2044, 0, 0, 0, 0, 2051, 2036, 2210,
	0, 2209, 0, 0, 0, 2220, 0, 2255, 2251, 0,
	2299, 1890, 1877, 1878, 1879, 1880, 1881, 1882, 1892, 0,
	2296, 2334, 2340, 2130, 0, 0, 0, 2081, 2082, 2083,
	2084, 2085, 0, 2087, 2088, 0, 2090, 2091, 0, 2093,
	2094, 0, 2096, 2097, 2098, 2099, 2100, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1787, 1788, 1789, 1790, 1791, 1792,
	1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802,
	1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812,
	1813, 1814, 1815, 1816, 1817, 1818, 0, 0, 2102, 0,
	2223, -2, -2, -2, -2, -2, -2, -2, -2, 0,
	2104, 0, 2106, 2214, 2234, 0, 0, 1984, 0, 0,
	0, 0, 2154, 0, 2109, 2214, 2242, 0, 0, 0,
	0, 0, 2214, 0, 2247, 0, 2116, 0, 2118, 1608,
	0, 0, 1764, 0, 0, 0, 2269, 1764, 1764, 0,
	1672, 0, 0, 1740, 1741, 1742, 1743, 0, 0, 1744,
	0, 1734, 1738, 1735, 1736, 1730, 1693, 0, 0, 2303,
	1730, 1699, 1729, 0, 1224, 1719, 1730, 1730, 0, -2,
	1703, 1720, 0, 0, 595, 597, 599, 603, 605, 0,
	0, 1629, -2, 0, -2, 330, 1223, 0, 0, 0,
	0, 0, 0, 614, 616, 0, 0, 537, 0, 0,
	630, 0, 608, 0, 611, 0, 1765, 1768, 0, 0,
	1779, 1785, 1786, 0, -2, 0, 0, 1875, 0, 0,
	0, 0, 0, 642, 0, 645, 0, 0, 0, 432,
	547, 209, 519, 0, 209, 209, 528, 0, 0, 209,
	539, 209, 2324, 209, 2322, 230, 544, 1555, 242, 0,
	695, 0, 1472, 1481, 0, 732, 0, 734, 0, 2290,
	2294, 2291, 2295, 0, 723, 0, 0, 0, 0, 1422,
	0, 1369, 0, 0, 168, 2765, 0, 211, 0, 0,
	1187, 2309, 0, 1177, 0, 0, 2455, 0, 0, 0,
	0, 0, 185, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 0, 132, 133, 0, 0, 0, 0,
	0, 0, 0, 0, 1247, 1248, 1250, 1257, 1259, 0,
	1253, 2297, 0, 0, 1254, 0, 1256, 1258, 1260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 105, 1280,
	0, 0, 1281, 1282, 1494, 1495, 0, 1517, 1518, 0,
	0, 0, 0, 0, 0, 0, 128, 0, 0, 0,
	0, 2276, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1273, 0, 1321, 1319, 1295,
	1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305,
	1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315,
	1316, 1317, 1318, 0, 0, 0, 0, -2, 1275, 1276,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 252,
	0, 319, 2275, 2285, 0, 1056, 1057, 355, 358, 361,
	364, 248, 0, 0, 394, 405, 0, 0, 1106, 1081,
	0, 0, 459, 328, 0, 0, 473, 477, 2326, 1066,
	1241, 1244, 0, 1224, 2765, 1291, 0, 0, 0, 0,
	0, 0, 1332, 0, 0, 2765, 2304, 2356, 2357, 1508,
	1518, 0, 1764, 0, 1541, 1527, 0, 0, 0, 1541,
	1545, 1546, 1548, 1549, 0, 0, 1755, 1761, 555, 607,
	1616, 1616, 328, 326, 2587, 324, 321, 323, 0, 0,
	1530, 1532, 0, 0, 0, 274, 0, 283, 1733, 281,
	0, 286, 0, 0, 0, 471, 678, 683, 841, 0,
	328, 849, 850, 851, 897, 941, 949, 996, 861, 863,
	864, 865, 0, 0, 0, 1031, 1027, 1028, 1029, 881,
	951, 884, 951, 887, 951, 890, 892, 910, 916, 929,
	922, 930, 0, 0, 0, 943, 960, 0, 979, 0,
	0, 0, 0, 0, 0, 0, 1002, 1003, 1004, 1006,
	1011, 1010, 1015, 840, 1752, 1567, 1568, 1570, 0, 1579,
	0, 0, 1655, -2, -2, 1654, 1658, 1659, -2, -2,
	-2, -2, 1575, 0, 1584, 1581, 0, 1640, 1360, 1361,
	0, 0, 0, 0, -2, -2, 0, 0, 0, 1980,
	0, -2, 1959, 1962, 1966, 1968, 1970, 0, 0, 0,
	0, 0, 0, 2203, 0, 2205, 1981, 2258, 2261, 2196,
	0, 2152, 0, 0, 1628, 1629, 1629, 0, 2050, 0,
	2211, 0, 2218, 2219, 0, 2043, 0, 2252, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2054, 0, 0,
	0, 0, 2086, 2089, 2092, 2095, 0, 0, 0, 0,
	2075, 0, 0, 0, 2079, 1845, 1831, 0, 1873, 1871,
	1872, 1866, 1873, 1870, 1823, 0, 1822, 0, 2101, 0,
	2103, 2105, 0, 0, 2107, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1987,
	1988, 1989, 2009, 2108, 2240, 2241, 0, 0, 0, 0,
	0, 0, 2114, 0, 2246, 2115, 2117, 1616, 0, 1609,
	0, 1674, 1663, 1763, 0, 2267, 1733, 1676, 1678, 2268,
	2306, 1663, 1663, 0, 2215, 0, 0, 1724, 0, 0,
	0, 1726, 1697, 0, 0, 1691, 0, 1682, 1683, 1684,
	1685, 1686, 1687, 1688, 1698, 1224, 1728, 1700, 1704, 2334,
	0, 1730, 0, 1715, 0, 1717, 1750, 0, 1709, 1712,
	0, 0, 2349, 1764, 0, 368, 376, 377, 369, 370,
	371, 372, 0, 1409, 0, 0, 0, 0, 0, 2217,
	0, 1770, 0, 1776, 0, 0, 0, 0, 632, 0,
	0, 0, 0, 0, 1553, 427, 518, 209, 523, 526,
	2273, 209, 532, 535, 541, 238, 0, 691, -2, 730,
	731, 733, 0, 729, 165, 1423, 0, 0, 1365, 1367,
	1371, 1377, 1380, 0, 170, 2765, 182, 0, 2765, 0,
	1150, 0, 0, 0, 0, 0, 0, 1425, 0, 0,
	2765, 209, 2765, 209, 186, 188, 191, 0, 195, 193,
	0, 1138, 0, 0, 1141, 118, 1423, 0, 0, 121,
	125, 137, 0, 0, 0, 147, 0, 0, 0, 1382,
	1386, 1394, 0, 0, 0, 1251, 1252, 1255, 1261, 84,
	0, 0, 0, 1390, 1392, 1398, 96, 99, 2765, 2318,
	101, 2765, 0, 1364, 0, 0, 0, 0, 0, 0,
	0, 0, 197, 123, 127, 138, 0, 1400, 120, 0,
	224, 0, 0, 214, 209, 2765, 0, 216, 0, 217,
	218, 232, 0, 0, 0, 1069, 1070, 1320, 0, 1266,
	1267, 0, 1278, 1272, 0, 0, 0, 0, 0, 1402,
	1403, 0, 0, 0, 1421, 1418, 1733, 244, 0, 1733,
	252, 0, 2281, 0, 266, 391, 0, 0, 0, 0,
	1105, 1205, 1107, 1109, 1110, 1111, 211, 0, 2357, 1177,
	2507, 2357, 0, 0, 1076, 0, 0, 0, 465, 461,
	0, 470, 476, 475, 481, -2, 0, 0, 0, 0,
	-2, 0, 0, 1336, 1330, 1331, 0, 0, 0, 0,
	2765, 1510, 1518, 0, 1614, 1629, 488, 1519, 1541, 0,
	0, 0, 1529, 1525, 1522, 1764, 0, 0, 0, 0,
	0, 1757, 1760, 558, 559, 305, 0, 0, 0, 0,
	0, 328, 0, 0, 0, 0, 0, 0, 284, 0,
	287, 0, 0, 0, 292, 293, 294, 295, 296, 297,
	0, 0, 0, 286, 317, 276, 1733, 0, 0, 680,
	0, 0, 848, 0, 871, 874, 883, 885, 888, 932,
	934, 951, 961, 986, 2305, 987, 1128, 0, 1128, 0,
	0, 1007, 1577, 0, 1652, 1583, 1634, 1635, 0, 1362,
	0, 1898, 1943, 0, 0, -2, 0, 0, 1947, 0,
	0, 0, -2, 0, 0, 0, 2204, 2206, 0, 2260,
	2195, 2045, 0, 0, 0, 2049, 2033, 2034, 0, 2155,
	2221, 2250, 2254, 0, 1883, 1884, 1885, 1886, 1887, 1888,
	1889, 0, 2300, 2335, 2339, 2128, 2129, 2133, 2314, 0,
	0, 0, 2058, 0, 0, 0, 0, 0, 0, 0,
	0, 1864, 1868, 0, 0, 2222, 2233, 2235, 1985, 1986,
	1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,
	-2, -2, -2, 2003, 2004, 2005, -2, -2, -2, 2010,
	0, 0, 0, 2236, 2238, 2239, 2243, 2244, 0, 2111,
	2112, 2113, 2245, 0, 1616, 1610, 1671, 0, 1762, 1675,
	0, 1671, 1671, 1623, 1722, 0, 0, 1746, 0, 1694,
	0, 1695, 0, 0, 1727, 0, 1702, 1705, 1706, 1716,
	0, 1708, 0, 1711, 0, 2045, -2, 329, 331, 333,
	0, 336, 337, 0, 0, 0, 623, 0, 1409, 1409,
	0, 625, 609, 0, 0, 1772, 0, 0, 1848, 1852,
	1876, 636, 638, 0, 0, 2718, 2662, 0, 635, 520,
	529, 240, 0, 1731, 0, 0, 0, 0, 0, 0,
	210, 0, 1186, 0, 1148, 0, 0, 1176, 0, 0,
	1192, 172, 173, 174, 0, 0, 0, 0, 184, 0,
	0, 180, 0, 190, 194, 1135, 0, 0, 0, 0,
	1370, 0, 0, 0, 144, 145, 146, 0, 151, 0,
	152, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1500, 1501, 0, 1491, 141, 0, 0, 0, 0,
	0, 0, 212, 0, 0, 0, 1359, 234, 0, 0,
	0, 0, 0, 1265, 1323, 1324, 1274, 1383, 1387, 1395,
	0, 0, 0, 0, 0, 650, 1420, 0, 252, 250,
	0, 253, 0, 256, 257, 0, 0, 252, 246, 0,
	0, 0, 1224, 406, 1079, 1193, 0, 0, 1195, 1112,
	1116, 0, 2357, 2357, 0, 2311, 0, 1077, 0, 0,
	1194, 457, 0, 464, 0, 478, 0, 0, 1245, 0,
	0, 1269, 1294, 1224, 0, 1335, 1337, 0, 1345, 0,
	0, 0, 1512, 1518, 0, 1505, 1506, 1648, 1520, 1539,
	-2, 0, 0, 1629, 1547, 1544, 1550, 1551, 0, 325,
	0, 320, 322, 0, 308, 0, 1531, 1533, 0, 1050,
	1053, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	286, 1733, 312, 0, 842, 866, 942, 988, 1127, 0,
	0, 990, 0, 0, 1651, 1638, 1639, 1636, 1362, 1945,
	1949, 0, 0, 0, 1951, -2, 0, 1973, -2, -2,
	2207, 2259, 2024, 1629, 2046, 2048, 2035, 2253, 1893, 0,
	2135, 2132, 0, 2119, 0, 2070, 2071, 0, 0, 2074,
	2076, 2077, 2078, 1832, 1825, 1824, 2232, 0, 0, 0,
	0, 2110, 1611, 0, 2124, 0, 0, 1679, 2124, 2124,
	1723, 0, 1725, 1692, 1680, 0, 1689, 0, 2335, 1718,
	1710, 0, 0, 334, 0, 338, 339, 373, 0, 626,
	627, 0, 0, 1766, 1771, 0, 1777, 1847, 0, 0,
	0, 0, 0, 241, 166, 167, 1374, 1378, 1375, 0,
	169, 0, 0, 1149, 0, 1152, 0, 0, 0, 0,
	1159, 1177, 0, 0, 0, 0, 0, 0, 1179, 0,
	1178, 0, 0, 1209, 0, 1350, 1357, 0, -2, 0,
	0, 0, 176, 200, 0, 0, 0, 0, 203, 1424,
	178, 0, 0, 209, 209, 0, 0, 1366, 1368, 1381,
	0, 0, 0, 0, 154, 0, 0, 1384, 1388, 1396,
	1391, 1393, 1399, 0, 102, 0, 1502, 0, 140, 0,
	0, 0, 1401, 222, 223, 0, 209, 0, 209, 215,
	209, 1359, 0, 0, 0, 0, 0, 0, 0, 1404,
	1405, 243, 0, 0, 0, 0, 0, 245, 318, 252,
	393, 0, 1137, 0, 1205, 1197, 1198, 1199, 0, 1108,
	1204, 1206, 0, 0, 1113, 0, 0, 0, 0, 1093,
	1078, 0, 1089, 0, 0, 1106, 1081, 0, 462, 479,
	0, 482, 0, 485, 1067, 1242, 1286, 1224, 1289, 0,
	0, 1327, 0, 0, 0, 0, 0, 0, 0, 1514,
	1518, 0, 1507, 1508, 1541, 1647, 0, 0, 0, 1528,
	1648, 0, 327, 328, 0, 328, 288, 0, 289, 290,
	291, 298, 299, 300, 277, 278, 682, 684, 0, 0,
	690, 1126, 0, 0, 0, 0, 1637, 1953, -2, -2,
	1974, 0, 2336, 2338, 1629, 0, 2121, 1631, 0, 0,
	-2, 0, 0, 0, 1612, 1595, 0, 1670, 1662, 1664,
	1666, 2649, 2428, 2764, 1596, 1597, 1745, 0, 0, 1713,
	335, 1408, 628, 0, 0, 1773, 0, 633, 0, 0,
	0, 0, 0, 1376, 171, 0, 0, 1153, 1154, 2310,
	1156, 0, 1158, 1160, 1161, 1162, 0, 1166, 0, 2359,
	0, 1171, 1174, 1175, 0, 0, 1188, 1210, 0, 1219,
	0, 1352, 1362, 1356, 0, 1354, 1222, 0, 175, 202,
	177, 204, 199, 0, 1359, 0, 179, 189, 0, 0,
	122, 0, 0, 2422, 157, 155, 153, 100, 1363, 143,
	0, 124, 0, 224, 233, 1358, 235, 219, 209, 0,
	1385, 1389, 1397, 0, 1412, 1413, 1414, 1415, 0, 0,
	0, 0, 254, 0, 255, 258, 259, 0, 0, 1081,
	1136, 1080, 1196, 0, 1207, 1208, 0, 0, 0, 0,
	0, 0, 1083, 0, 1082, 0, 0, 0, 0, 0,
	463, 466, 0, 469, 0, 0, 0, 0, 0, 1293,
	0, 1338, 1336, 0, 1344, 0, 0, 0, 1490, 0,
	0, 1509, 1510, 486, 1534, 0, 0, 1541, 1552, 307,
	0, 310, 285, 0, 686, 0, 688, 0, 989, 991,
	0, 0, 2047, 2139, 0, 0, 2072, 2073, -2, 0,
	2013, 2123, 2125, 0, 0, 0, 0, 0, 1681, 1690,
	1409, 1767, 640, 637, 639, 0, 1372, 0, 1379, 211,
	1151, 1155, 0, 0, 0, 1167, 1228, 0, 0, 1245,
	1245, 1180, 0, 0, 1213, 1214, 1133, 0, 1215, 1216,
	1217, 1351, 1640, 1357, 1190, 0, 0, 201, 206, 0,
	0, 0, 0, 0, 0, 142, 0, 213, 236, 1359,
	0, 1416, 1417, 0, 0, 251, 270, 0, 1287, 1083,
	0, 1114, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124,
	1125, 1115, 1222, 0, 0, 1185, 1091, 0, 1094, 0,
	1090, 1087, 1088, 1079, 0, 467, 468, 483, 0, 484,
	0, 0, 1294, 0, 0, 1345, 0, 0, 1497, 1489,
	1518, 1511, 1512, 1764, 0, 1542, 0, 685, 0, 0,
	999, 1000, 0, 0, 0, 0, 2134, 1632, 2014, 0,
	0, 1665, 1667, 1668, 1669, 629, 0, 1373, 183, 0,
	1163, 1165, 1233, 0, 0, 0, 0, 0, 1181, 1211,
	1212, 1209, 1132, 0, 1355, 1353, 1221, 1224, 181, 0,
	1222, 0, 1142, 0, 0, 1145, 0, 0, 158, 2422,
	156, 0, 209, 1409, 209, 0, 273, 0, 264, 262,
	263, 1075, 0, 1201, 1203, 1219, 1222, 1133, 0, 1095,
	1137, 1093, 480, 1288, 1292, 1290, 1328, 1222, 0, 1219,
	0, 1504, 1518, 1498, 1499, 0, 1514, 0, 0, 328,
	687, 689, 2131, 2151, 2140, -2, 2721, 2429, 0, 2151,
	2151, 2126, 2127, 0, 0, 0, 1168, 1229, 1230, 0,
	1225, 1226, 1227, 2358, 1169, 1170, 1172, 1173, 1764, 0,
	0, 1228, 205, 187, 1139, 0, 0, 1140, 0, 0,
	161, 0, 163, 237, 1407, 1410, 0, 260, 0, 0,
	1072, 1074, 1200, 0, 1133, 1219, 1081, 0, 0, 0,
	1081, 1083, 1219, 0, 1133, 0, 1493, 1503, 0, 1513,
	1490, 0, 1537, 0, 309, 2136, 0, 0, 2142, 2143,
	2144, 2145, 2146, 2137, 2138, 641, 1157, 0, 1231, 0,
	1232, 0, 0, 0, 1189, 1218, 0, 1233, 1143, 0,
	1146, 0, 159, 0, 0, 268, 269, 1202, 1081, 1133,
	1764, 0, 1084, 0, 1086, 1083, 1092, 1133, 0, 1081,
	0, 1516, 1492, 1496, 2319, 1497, 1535, 0, 0, 0,
	2148, 2149, 0, 0, 0, 1234, 0, 1237, 1238, 0,
	1235, 0, 1209, 0, 0, 209, 0, 1764, 1081, 1184,
	1085, 1075, 1081, 1222, 1764, 1219, 1486, 1518, 1504, 0,
	1764, 2147, 2150, 2141, 1164, 1236, 1239, 1240, 1220, 1191,
	0, 0, 1411, 271, 0, 1182, 1764, 1073, 1764, 1219,
	1341, 1133, 0, 1493, 1764, 1538, 1130, 0, 0, 1183,
	1339, 1133, 1081, 1515, 1487, 1536, 1144, 1129, 0, 272,
	1081, 1764, 0, 1764, 1342, 0, 1340, 1130, 1147,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 595, 3, 601, 596, 3,
	607, 608, 599, 597, 612, 598, 609, 600, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 615, 3,
	587, 589, 588, 592, 611, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 605, 3, 606, 602, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 613, 594, 614, 590,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 582,
	57925, 583, 57926, 584, 57927, 585, 57928, 586, 57929, 591,
	57930, 593, 57931, 603, 57932, 604, 57933, 610, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1484
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1489
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1491
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1494
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1495
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1496
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1497
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1498
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1499
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1500
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1501
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1502
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1503
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1504
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1511
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1520
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1522
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1525
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1526
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1527
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1528
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1529
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1530
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1531
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1532
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1533
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1534
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 71:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1594
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 73:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1620
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 77:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1634
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 82:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1653
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 83:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1657
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 84:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1661
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1693
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 96:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1697
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1704
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1716
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1726
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1733
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1743
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1750
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1760
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1769
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1776
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1805
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1837
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 117:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1841
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1845
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1851
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1855
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1861
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1870
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1881
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1885
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1891
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1899
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1909
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1913
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1925
		{
			sqlVAL.union.val = tree.RelocateLease
		}
	case 134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1931
		{
			sqlVAL.union.val = tree.RelocateVoters
		}
	case 135:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1935
		{

			sqlVAL.union.val = tree.RelocateVoters
		}
	case 136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1940
		{
			sqlVAL.union.val = tree.RelocateNonVoters
		}
	case 137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1946
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    tree.TableIndexName{Table: name},
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1958
		{

			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    sqlDollar[3].union.tableIndexName(),
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1979
		{
			var zoneName string
			switch e := sqlDollar[3].union.expr().(type) {
			case *tree.UnresolvedName:
				if e.NumParts != 1 {
					return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
				}
				zoneName = e.Parts[0]
			case tree.DefaultVal:
				zoneName = "default"
			default:
				return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
			}
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(zoneName)}
			sqlVAL.union.val = s
		}
	case 140:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1999
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[8].union.slct(),
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[6].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2008
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[7].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2019
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[10].union.slct(),
				FromStoreID:     sqlDollar[6].union.expr(),
				ToStoreID:       sqlDollar[8].union.expr(),
				SubjectReplicas: sqlDollar[4].union.relocateSubject(),
			}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2028
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     sqlDollar[7].union.expr(),
				ToStoreID:       sqlDollar[9].union.expr(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2041
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2046
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2050
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2055
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2061
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 149:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2069
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 150:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2080
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 151:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2090
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 152:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2100
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 153:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2109
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 154:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2120
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 155:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2126
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 156:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2134
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2138
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2142
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 159:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2146
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 160:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2152
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2157
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2168
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2172
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2178
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2182
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2189
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2194
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2199
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2204
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2209
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2214
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2219
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2224
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2229
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2234
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2239
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2244
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2248
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 179:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2253
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2262
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2274
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2284
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2292
		{
			def := sqlDollar[7].union.constraintDef()
			def.SetName(tree.Name(sqlDollar[6].str))
			def.SetIfNotExists()
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      def,
				ValidationBehavior: sqlDollar[8].union.validationBehavior(),
			}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2302
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 185:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2305
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2311
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 187:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2318
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns: sqlDollar[7].union.idxElems(),
				Sharded: sqlDollar[9].union.shardedIndexDef(),
			}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2325
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2332
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2341
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2350
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2355
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2362
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2370
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2371
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2375
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2379
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2385
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2393
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2397
		{
			sqlVAL.union.val = nil
		}
	case 201:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2403
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2407
		{
			sqlVAL.union.val = nil
		}
	case 203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2413
		{
			sqlVAL.union.val = true
		}
	case 204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2417
		{
			sqlVAL.union.val = false
		}
	case 205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2423
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 206:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2427
		{
			sqlVAL.union.val = nil
		}
	case 207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2434
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2438
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 209:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2442
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2448
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 211:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2452
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 212:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2477
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2488
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2499
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2508
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2518
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2527
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2536
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2545
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 220:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2549
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2552
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2556
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2563
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 224:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2570
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2576
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2583
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2590
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2596
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2604
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2608
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 238:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2629
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2636
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2640
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2644
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 242:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2648
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 243:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2691
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2703
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2713
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2724
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2733
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 248:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2737
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2741
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2749
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 251:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2753
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 252:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2757
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2764
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2768
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2777
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2781
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2785
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2789
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2793
		{
			sqlVAL.union.val = &tree.BackupOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 260:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2875
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.targetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2886
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2891
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2895
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 264:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2905
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2911
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2915
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2919
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{IfNotExists: false}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2928
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2932
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2936
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 271:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2942
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 272:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2946
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 273:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2950
		{
			sqlVAL.union.val = nil
		}
	case 274:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2984
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2993
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3003
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3012
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3022
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3029
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3033
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3037
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3043
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3047
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3054
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 285:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3058
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 286:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3062
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3069
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3073
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3082
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3086
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3090
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3094
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3098
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3102
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3106
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3110
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3114
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3118
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3122
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3126
		{
			sqlVAL.union.val = &tree.RestoreOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3131
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3137
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "alter function")
		}
	case 303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3141
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3145
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "alter aggregate")
		}
	case 305:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3182
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3187
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3191
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3197
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3202
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3207
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3211
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 312:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3228
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3231
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3235
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3239
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3247
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3251
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3257
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 319:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3261
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3267
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3271
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3275
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3279
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3285
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3289
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3295
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 327:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3299
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 328:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3303
		{
			sqlVAL.union.val = nil
		}
	case 329:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3315
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3329
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3335
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 332:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3339
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3345
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3349
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3357
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3361
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3365
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3369
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3373
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3381
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3382
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3383
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3384
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3385
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3395
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3403
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3405
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3409
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3412
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3422
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 355:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3431
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3439
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3441
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3445
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3448
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3458
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3467
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3475
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3477
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3481
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3484
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3492
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3495
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3499
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 369:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3503
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 370:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3507
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 371:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3511
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 372:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3524
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 373:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3529
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 374:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3532
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "comment on extension")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3533
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "comment on function")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3537
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 377:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3542
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3554
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3556
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3557
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3560
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3561
		{
		}
	case 390:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3562
		{
			return helpWith(sqllex, "CREATE")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3569
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3572
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 393:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3576
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension if not exists with")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3579
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension with")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3582
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3585
		{
			return unimplemented(sqllex, "create access method")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3586
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "create aggregate")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3587
		{
			return unimplemented(sqllex, "create cast")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3588
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3589
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3590
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3591
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3592
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3593
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3594
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3595
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3596
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3597
		{
			return unimplemented(sqllex, "create publication")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3598
		{
			return unimplemented(sqllex, "create rule")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3599
		{
			return unimplemented(sqllex, "create server")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3600
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3601
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3602
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3603
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3606
		{
		}
	case 416:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3607
		{
		}
	case 417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3610
		{
		}
	case 418:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3611
		{
		}
	case 419:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3614
		{
		}
	case 420:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3615
		{
		}
	case 421:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3618
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3619
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "drop aggregate")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3620
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3621
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3622
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3623
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3624
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension if exists")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3625
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3626
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3627
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3628
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3629
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3630
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3631
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3632
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3633
		{
			return unimplemented(sqllex, "drop server")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3634
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3635
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3636
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3639
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3640
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3641
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3642
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3643
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3645
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3646
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3647
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3648
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 457:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3658
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3666
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3670
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 460:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3674
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 461:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3680
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 462:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3684
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3693
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3700
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3706
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 466:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3712
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3716
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3727
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3739
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 470:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3754
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 471:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3762
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3772
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3776
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3782
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3786
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3793
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 477:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3797
		{

			sqlVAL.union.val = nil
		}
	case 478:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3814
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3825
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 480:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3829
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 481:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3833
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3840
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3844
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3853
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 485:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3857
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3870
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3880
		{
			return helpWith(sqllex, "DELETE")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3883
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 489:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3884
		{
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3892
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3895
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3896
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3897
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3898
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3899
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3908
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3909
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3910
		{
		}
	case 502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3911
		{
			return helpWith(sqllex, "DROP")
		}
	case 504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3914
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3915
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3916
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3917
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3918
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3919
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3920
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 517:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3928
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 518:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3932
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 519:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3936
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 520:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3945
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3953
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 522:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3961
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 523:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3965
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3968
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 525:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3976
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 526:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3980
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3983
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 528:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3991
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 529:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4000
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4008
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 531:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4016
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 532:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4024
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4031
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 534:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4038
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4046
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4053
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 537:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4057
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4063
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4067
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 540:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4076
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4084
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4091
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4099
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4103
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4106
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4110
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4115
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4128
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4133
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4135
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4140
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4144
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4167
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4174
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 555:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4176
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4184
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4192
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4200
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 559:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4208
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4219
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4227
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4230
		{
			return helpWith(sqllex, "DELETE")
		}
	case 572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4232
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4233
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4234
		{
			return helpWith(sqllex, "INSERT")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4237
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4239
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 585:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4242
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4247
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4248
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4249
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4254
		{
			return helpWith(sqllex, "DELETE")
		}
	case 597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4255
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4256
		{
			return helpWith(sqllex, "INSERT")
		}
	case 600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4258
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4262
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 605:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4263
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4267
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 607:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4271
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 608:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4281
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 609:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4289
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4297
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4301
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 612:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4305
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 613:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4315
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4322
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4330
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4334
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 617:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4338
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4348
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4352
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4356
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4360
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4363
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 623:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4386
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), WithGrantOption: sqlDollar[7].union.bool()}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4390
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4394
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4398
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), WithGrantOption: sqlDollar[8].union.bool()}
		}
	case 627:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4402
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:        sqlDollar[7].union.roleSpecList(),
				WithGrantOption: sqlDollar[8].union.bool(),
			}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4413
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 629:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4417
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4429
		{
			return unimplementedWithIssueDetail(sqllex, 74780, "grant privileges on sequence")
		}
	case 631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4432
		{
			return helpWith(sqllex, "GRANT")
		}
	case 632:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4455
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), GrantOptionFor: false}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4459
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Grantees: sqlDollar[9].union.roleSpecList(), Targets: sqlDollar[7].union.targetList(), GrantOptionFor: true}
		}
	case 634:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4463
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4467
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4471
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), GrantOptionFor: false}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4475
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Targets: sqlDollar[8].union.targetList(), Grantees: sqlDollar[10].union.roleSpecList(), GrantOptionFor: true}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4479
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[7].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4490
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[8].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4501
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:4513
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[11].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 642:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4525
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4528
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4534
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4538
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4548
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4552
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4566
		{
			return helpWith(sqllex, "RESET")
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4567
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4575
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4579
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4582
		{
			return helpWith(sqllex, "RESET")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4590
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4593
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4604
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4607
		{
			return helpWith(sqllex, "USE")
		}
	case 664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4611
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4612
		{
		}
	case 666:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4613
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4617
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4618
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4619
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4620
		{
			return helpWith(sqllex, "USE")
		}
	case 677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4636
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4651
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 679:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4654
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4672
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 681:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4680
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4684
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 683:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4688
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4694
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4698
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4704
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4708
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4712
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 689:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4716
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 690:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4720
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 691:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4731
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4734
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 695:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4744
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4760
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4763
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4765
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4768
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 700:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4771
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4785
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4790
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4807
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4810
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 705:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4812
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 706:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4815
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4819
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 709:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4838
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 710:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4842
		{
			return unimplemented(sqllex, "set from current")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4846
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4851
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4860
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 715:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4865
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4869
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4881
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4886
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4893
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4897
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4903
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4907
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4914
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4935
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4939
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4945
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4949
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 732:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4953
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4957
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4961
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4967
		{
			sqlVAL.union.val = tree.Low
		}
	case 736:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4971
		{
			sqlVAL.union.val = tree.Normal
		}
	case 737:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4975
		{
			sqlVAL.union.val = tree.High
		}
	case 738:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4986
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4990
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4994
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 742:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4999
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 743:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5003
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5018
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5019
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5020
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5021
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5022
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5023
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5024
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5025
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5026
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5028
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5029
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5030
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5031
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 772:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5032
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5034
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5035
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5036
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5038
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5040
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5041
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 789:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5042
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 791:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5043
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 793:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5044
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 795:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5045
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 797:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5046
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 799:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5047
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 801:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5048
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5049
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5050
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5051
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5052
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5053
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 812:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5054
		{
			return helpWith(sqllex, "SHOW")
		}
	case 816:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5057
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 817:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5062
		{
		}
	case 818:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5063
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 819:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5066
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5070
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5075
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5080
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5085
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5090
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 825:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5100
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5101
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5102
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 829:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5107
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 832:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5117
		{
			sqlVAL.str = "client_encoding"
		}
	case 837:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5123
		{
			sqlVAL.str = "timezone"
		}
	case 838:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5124
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 839:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5128
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5132
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 841:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5148
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5152
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5156
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5167
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5175
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 846:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5183
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5189
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5197
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5206
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5215
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5224
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5232
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 853:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5242
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5246
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5249
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 856:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5251
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5254
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5256
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5260
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5263
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 861:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5271
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5274
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5282
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5286
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5290
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5294
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5297
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5305
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5308
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 870:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5314
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles: sqlDollar[4].union.roleSpecList(),
			}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5319
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
			}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5324
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 873:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5331
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5335
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5345
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5354
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 877:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5361
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5364
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 879:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5377
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5385
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 881:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5393
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5396
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 883:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5398
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5402
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5406
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5409
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 887:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5411
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5415
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5418
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 890:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5426
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5429
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 892:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5431
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5434
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5442
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5445
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 896:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5447
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5450
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 898:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5454
		{
			sqlVAL.union.val = true
		}
	case 899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5456
		{
			sqlVAL.union.val = true
		}
	case 900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5458
		{
			sqlVAL.union.val = false
		}
	case 903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5475
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5479
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5483
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5486
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5487
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 908:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5488
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5490
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5494
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5498
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5502
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5505
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5507
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5515
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5523
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5531
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 918:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5532
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5542
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5548
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 921:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5550
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5556
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5558
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5564
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5568
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5572
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 927:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5578
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 928:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5582
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5586
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 930:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5597
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5600
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 932:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5602
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5605
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 934:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5607
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5611
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5614
		{
			sqlVAL.union.val = true
		}
	case 937:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5615
		{
			sqlVAL.union.val = false
		}
	case 938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5623
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5626
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 940:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5628
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5631
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 942:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5639
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5649
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5659
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5662
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5669
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5672
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 948:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5674
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5677
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 950:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5680
		{
			sqlVAL.union.val = true
		}
	case 951:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5681
		{
			sqlVAL.union.val = false
		}
	case 952:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5688
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5692
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5695
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 955:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5702
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5706
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5709
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5716
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5720
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 960:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5724
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5731
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 962:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5735
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5746
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5749
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 965:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5757
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5762
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5767
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5771
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5783
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5787
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5792
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5797
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5802
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5807
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5811
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5815
		{
			sqlVAL.union.val = &tree.ShowCreateAllTypes{}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5818
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 978:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5828
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5831
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 980:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5833
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5836
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5844
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5847
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 984:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5855
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5858
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 986:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5868
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5872
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5876
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5884
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5892
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5899
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5905
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5907
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5910
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 995:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5912
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5915
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 998:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5919
		{
		}
	case 999:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5928
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5936
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5942
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5951
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5956
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5960
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5963
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5972
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5976
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5992
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5998
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6004
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6010
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6017
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6022
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6026
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6032
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6039
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6045
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6050
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6170
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6174
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6178
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6217
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6221
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6226
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6230
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6238
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6247
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6251
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6255
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6262
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6266
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6279
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6280
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6281
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6282
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6292
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6293
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6294
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6295
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6303
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6306
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6316
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6325
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6334
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6336
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6340
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6344
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6347
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6352
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6356
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6371
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6379
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6381
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6387
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6395
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6398
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6407
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6413
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6420
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6427
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6434
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6445
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6454
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6462
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6498
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[9].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				OnCommit:         sqlDollar[11].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[12].union.locality(),
			}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:6513
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[12].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[13].union.storageParams(),
				OnCommit:         sqlDollar[14].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[15].union.locality(),
			}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6530
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6534
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6541
		{

			sqlVAL.union.val = nil
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6547
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6553
		{
			sqlVAL.str = ""
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6557
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6563
		{
			sqlVAL.union.val = nil
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6567
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6572
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6576
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6580
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6584
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6590
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6594
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6600
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6604
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6610
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6623
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6637
		{
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6638
		{
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6639
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6657
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6658
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6659
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6663
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6664
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6665
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6666
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6667
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6672
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6678
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6682
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6688
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6694
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6707
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6716
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6720
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6726
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6731
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6732
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6733
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6734
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6735
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6736
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6737
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6738
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6739
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6744
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6751
		{
			sqlVAL.str = ""
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6758
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6764
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6772
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6778
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6784
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6790
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6800
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6806
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6812
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6819
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6826
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6832
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6836
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6842
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6852
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6856
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6862
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6876
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6887
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6891
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6897
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6901
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6905
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6909
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6913
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6917
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6921
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6939
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6943
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6947
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6951
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6957
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6961
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: tree.DefaultVal{},
			}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6968
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6975
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6979
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6983
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6987
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6997
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7001
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7005
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7010
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7016
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7022
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7026
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7032
		{

			sqlVAL.union.val = true
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7037
		{
			sqlVAL.union.val = false
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7042
		{
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7046
		{
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7049
		{
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7053
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
				StorageParams:    sqlDollar[9].union.storageParams(),
				Predicate:        sqlDollar[10].union.expr(),
			}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7065
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
					StorageParams:    sqlDollar[10].union.storageParams(),
					Predicate:        sqlDollar[11].union.expr(),
				},
			}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7079
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7092
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7104
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7109
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7115
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7122
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
					Predicate:        sqlDollar[9].union.expr(),
				},
			}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7134
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
					Sharded: sqlDollar[6].union.shardedIndexDef(),
				},
				PrimaryKey: true,
			}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7145
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7156
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7163
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7167
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7173
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7183
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7194
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7198
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7205
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7211
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7222
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7226
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7232
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7238
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7242
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7248
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7252
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7258
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7263
		{
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7264
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7265
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7266
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7267
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7268
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7286
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7290
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7296
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7303
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: tree.DefaultVal{},
			}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7309
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7315
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7319
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7339
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7343
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7347
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7351
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7360
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7364
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7368
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7372
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7376
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7382
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7388
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7396
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7400
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7404
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7408
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7412
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7432
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7441
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7449
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7453
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7456
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7457
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7460
		{

			parsedType := sqlDollar[2].union.colType()
			if parsedType.Family() != types.IntFamily {
				sqllex.Error(fmt.Sprintf("invalid integer type: %s", parsedType.SQLString()))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptAs, AsIntegerType: parsedType}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7469
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7471
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7472
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7473
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7483
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7485
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7487
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7489
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7491
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7492
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7494
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7495
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7497
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7499
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7507
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7510
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7514
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7520
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7524
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7534
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7538
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7541
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7552
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7556
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7560
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7564
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7568
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7572
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7575
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7579
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7583
		{
			sqlVAL.str = ""
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7589
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7593
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7597
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7605
		{
			sqlVAL.union.val = true
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7609
		{

			sqlVAL.union.val = true
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7614
		{
			sqlVAL.union.val = false
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7624
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7638
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7650
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7662
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7672
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7682
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7686
		{
			return unimplementedWithIssue(sqllex, 74083)
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7690
		{
			sqlVAL.union.val = true
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7694
		{
			sqlVAL.union.val = true
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7700
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7704
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7708
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7712
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7716
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7720
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7724
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7728
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7732
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7736
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7740
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7744
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7748
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7752
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7756
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7760
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7764
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7768
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7772
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7776
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7780
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7784
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7792
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7796
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7802
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7806
		{
			sqlVAL.union.val = nil
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7812
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: sqlDollar[3].union.expr()}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7816
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: tree.DNull}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7821
		{
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7822
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7831
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7839
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7847
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7849
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7851
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7853
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7855
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7857
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7861
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7865
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7871
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7875
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7892
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7909
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:7927
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				PartitionByIndex: sqlDollar[13].union.partitionByIndex(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				Predicate:        sqlDollar[15].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:7943
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				PartitionByIndex: sqlDollar[16].union.partitionByIndex(),
				StorageParams:    sqlDollar[17].union.storageParams(),
				Predicate:        sqlDollar[18].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7959
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7963
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7978
		{
			sqlVAL.union.val = false
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7984
		{
			sqlVAL.union.val = true
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7988
		{
			sqlVAL.union.val = false
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7994
		{
			sqlVAL.union.val = true
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7998
		{
			sqlVAL.union.val = false
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8004
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8008
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8017
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8023
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8029
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8037
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8061
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8062
		{
			sqlVAL.str = ""
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8065
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8066
		{
			sqlVAL.str = ""
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8070
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8074
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8078
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8084
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8090
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8096
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8102
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8110
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8116
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8124
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8132
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8142
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8148
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8155
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8161
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8167
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8174
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8180
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8186
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8192
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8201
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8209
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8219
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8225
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8235
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8241
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8253
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8262
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8272
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8281
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8293
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8299
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8307
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8316
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8327
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8333
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8345
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8351
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8365
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8371
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8379
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8383
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8395
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8404
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8413
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8422
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8430
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8434
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8445
		{
			sqlVAL.union.val = true
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8449
		{
			sqlVAL.union.val = false
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8455
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8463
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8474
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8478
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8482
		{
			sqlVAL.union.val = tree.Types
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8486
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8490
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8494
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8500
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8503
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8509
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8513
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8518
		{
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8519
		{
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8522
		{
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8523
		{
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8531
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8534
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8544
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8552
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8554
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8558
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8561
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8574
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8582
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8584
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8590
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8603
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8611
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8613
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8619
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8627
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8630
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8634
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8635
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8636
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8652
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8655
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8657
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8660
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8670
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8673
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8675
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8678
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8682
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8687
		{
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8688
		{
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8689
		{
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8699
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8703
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8706
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8709
		{
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8710
		{
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8714
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8718
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8724
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8728
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8734
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8738
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8751
		{
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8753
		{
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8757
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8762
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8766
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8770
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8774
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8780
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8786
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8792
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8796
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8802
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8806
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:8816
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
				Owner:           sqlDollar[14].union.roleSpec(),
			}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8832
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8847
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8852
		{
			sqlVAL.str = ""
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8857
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8864
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8870
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8875
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8882
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8886
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8892
		{

		}
	case 1500:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8899
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8903
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8907
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8916
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8922
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8926
		{
			sqlVAL.str = ""
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8932
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8936
		{
			sqlVAL.str = ""
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8942
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8946
		{
			sqlVAL.str = ""
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8952
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8956
		{
			sqlVAL.str = ""
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8962
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8970
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8976
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8980
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8987
		{
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8988
		{
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9003
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9010
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9017
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9028
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9035
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9039
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9048
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9053
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9059
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9063
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9067
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9073
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9077
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9097
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9101
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9108
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9116
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9125
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				DoNothing:  true,
			}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9132
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				Exprs:      sqlDollar[9].union.updateExprs(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
			}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9142
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9147
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9151
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9168
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9180
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9183
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9186
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9192
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9196
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9209
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9212
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9216
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9227
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9233
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9242
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9248
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9289
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9295
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9299
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9314
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9318
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9322
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9326
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9330
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9334
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9338
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9342
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9347
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9348
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9351
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9352
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9356
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9360
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9366
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9375
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9376
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9377
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9378
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9381
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9382
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9385
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9386
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9387
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9392
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9427
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9428
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9429
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9451
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9464
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9478
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9490
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9494
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9503
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9512
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9527
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9534
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9546
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9550
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9555
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9561
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9565
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9571
		{
			sqlVAL.union.val = true
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9575
		{
			sqlVAL.union.val = false
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9581
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9591
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9603
		{
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9604
		{
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9608
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9612
		{
			sqlVAL.union.val = nil
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9617
		{
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9618
		{
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9622
		{
			sqlVAL.union.val = true
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9626
		{
			sqlVAL.union.val = false
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9630
		{
			sqlVAL.union.val = false
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9636
		{
			sqlVAL.union.val = true
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9642
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9647
		{
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9648
		{
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9651
		{
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9652
		{
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9656
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9660
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9666
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9672
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9676
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9683
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9687
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9693
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9705
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9710
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9722
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9726
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9730
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9736
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9745
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9756
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9757
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9761
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9765
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9769
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9783
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9787
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9795
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9802
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9824
		{
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9825
		{
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9828
		{
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9829
		{
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9846
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9850
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9855
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9856
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9862
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9863
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9864
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9865
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9869
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9873
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9892
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9895
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9897
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9909
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9912
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9914
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9920
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9924
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9930
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9934
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9939
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9944
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9950
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9955
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9960
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9965
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9971
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9976
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9981
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9988
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9993
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10004
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10008
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10012
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10020
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10054
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10064
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10074
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10082
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10091
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10095
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10099
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10110
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10134
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10140
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10151
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10155
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10161
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10163
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10167
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10173
		{
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10175
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10178
		{
			sqlVAL.union.val = nil
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10179
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10180
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10184
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10188
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10194
		{
			sqlVAL.union.val = true
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10198
		{
			sqlVAL.union.val = false
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10218
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10222
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10226
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10230
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10234
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10238
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10244
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10248
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10255
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10261
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10268
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10274
		{
			sqlVAL.str = tree.AstFull
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10278
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10282
		{
			sqlVAL.str = tree.AstRight
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10286
		{
			sqlVAL.str = tree.AstInner
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10292
		{
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10293
		{
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10317
		{
			sqlVAL.str = tree.AstHash
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10321
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10325
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10329
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10333
		{
			sqlVAL.str = ""
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10346
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10350
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10355
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10356
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10357
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10358
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10362
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10367
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10381
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10385
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10391
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10397
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10407
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10417
		{
			sqlVAL.union.val = true
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10421
		{
			sqlVAL.union.val = false
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10427
		{
			sqlVAL.union.val = true
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10431
		{
			sqlVAL.union.val = false
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10437
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10444
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10456
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10469
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10477
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10478
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10488
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10495
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10496
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10498
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10506
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10507
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10519
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10526
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10535
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10575
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10580
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10587
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10588
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10591
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10592
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10593
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10594
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10595
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10596
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10597
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10598
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10599
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10600
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10601
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10602
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10603
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10604
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10605
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10606
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10607
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10608
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10609
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10610
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10611
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10612
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10613
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10614
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10615
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10616
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10617
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10618
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10619
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10620
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10621
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10622
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10625
		{
			sqlVAL.union.val = types.Geography
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10626
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10627
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10629
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10633
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10637
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10645
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10671
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10679
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10687
		{
			sqlVAL.union.val = nil
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10694
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10698
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10702
		{
			sqlVAL.union.val = types.Int2
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10706
		{
			sqlVAL.union.val = types.Int
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10710
		{
			sqlVAL.union.val = types.Float4
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10714
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10718
		{
			sqlVAL.union.val = types.Float
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10722
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10730
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10738
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10746
		{
			sqlVAL.union.val = types.Bool
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10752
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10765
		{
			sqlVAL.union.val = types.Float
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10771
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10777
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10785
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10789
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10793
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10799
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10811
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10817
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10821
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10825
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10829
		{
			sqlVAL.union.val = types.String
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10838
		{
			sqlVAL.union.val = true
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10839
		{
			sqlVAL.union.val = false
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10844
		{
			sqlVAL.union.val = types.Date
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10848
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10856
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10868
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10870
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10879
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10887
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10900
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10904
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10914
		{
			sqlVAL.union.val = true
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10915
		{
			sqlVAL.union.val = false
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10916
		{
			sqlVAL.union.val = false
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10920
		{
			sqlVAL.union.val = types.Interval
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10924
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10928
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10939
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10947
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10955
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10963
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10971
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10979
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10985
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10994
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11003
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11012
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11018
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11027
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11033
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11043
		{
			sqlVAL.union.val = nil
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11049
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11057
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11094
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11098
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11102
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11106
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11117
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11122
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11126
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11130
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11134
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11138
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11142
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11146
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11150
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11154
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11158
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11162
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11166
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11170
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11174
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11178
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11182
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11186
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11190
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11194
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11198
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11202
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11206
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11210
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11214
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11218
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11222
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11226
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11230
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11234
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11238
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11242
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11246
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11250
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11254
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11258
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11262
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11266
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11274
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11284
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11288
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11292
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11296
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11300
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11304
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11308
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11312
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11316
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11320
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11324
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11328
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11332
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11336
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11340
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11344
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11348
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11352
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11356
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11360
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11364
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: tree.MakeComparisonOperator(tree.EQ),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11372
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: tree.MakeComparisonOperator(tree.NE),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11380
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11384
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11388
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11392
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11395
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11397
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11401
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11405
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11409
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11413
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11417
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11421
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11425
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11429
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11433
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11437
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11441
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11445
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11449
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11453
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11457
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11461
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11478
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11483
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11495
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11499
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11503
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11507
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11511
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11515
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11519
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11523
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11527
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11531
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11535
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11539
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11543
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11547
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11551
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11555
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11559
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11563
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11567
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11571
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11575
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11579
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11583
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11587
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11591
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11599
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11609
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11613
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11617
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11621
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11635
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11643
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11679
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11683
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11687
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11691
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11695
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11700
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11702
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11706
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11710
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11714
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11718
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11722
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11726
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11735
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11742
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11746
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11750
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if idx <= 0 {
				err := errors.New("invalid numeric tuple index: indexes must be > 0")
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11760
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11765
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11769
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11773
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11777
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11781
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11784
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11788
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11792
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11795
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11796
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11798
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11804
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11808
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11811
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11820
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11873
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11886
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11898
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11907
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11908
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11913
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11917
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11921
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11927
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11931
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11935
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11939
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11943
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11947
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11953
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11957
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11961
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11965
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11969
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11973
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11977
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11981
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11985
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11989
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11993
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11997
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12001
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12008
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12011
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12013
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12016
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12018
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12022
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12025
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12027
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12031
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12034
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12036
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12040
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12043
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12045
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12049
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12052
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12054
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12057
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12059
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12062
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12064
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12067
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12069
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12072
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12074
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12077
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12079
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12083
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12086
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12087
		{
			return unimplemented(sqllex, "treat")
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12089
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12093
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12097
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12101
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12105
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12108
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12110
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12113
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12119
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12123
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12129
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12133
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12140
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12144
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12150
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12154
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12160
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12168
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12172
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12176
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12183
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12203
		{
			sqlVAL.str = ""
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12209
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12213
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12219
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12227
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12235
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12243
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12249
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12262
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12290
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12294
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12298
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12302
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12309
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12318
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12322
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12326
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12330
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12335
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12348
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12352
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12359
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12371
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Any)
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12375
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Some)
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12379
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.All)
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12395
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Plus)
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12396
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Minus)
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12397
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mult)
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12398
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Div)
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12399
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mod)
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12400
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Pow)
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12401
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LT)
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12402
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GT)
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12403
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.EQ)
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12404
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LE)
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12405
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GE)
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12406
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NE)
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12408
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONExists)
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12409
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitand)
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12410
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitor)
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12411
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitxor)
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12412
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.FloorDiv)
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12413
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Contains)
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12414
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ContainedBy)
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12415
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.LShift)
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12416
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.RShift)
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12417
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Concat)
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12418
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchVal)
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12419
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchText)
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12420
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchValPath)
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12421
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchTextPath)
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12422
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONSomeExists)
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12423
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONAllExists)
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12424
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegMatch)
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12425
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.RegIMatch)
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12426
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegIMatch)
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12427
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Overlaps)
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12428
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12429
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12430
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12435
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12451
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12458
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Like)
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12459
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotLike)
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12460
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ILike)
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12461
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotILike)
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12484
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12488
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12494
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12498
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12502
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12513
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12517
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12523
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12527
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12534
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12540
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12544
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12550
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12554
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12560
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12564
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12570
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12574
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12580
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12584
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12607
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12611
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12615
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12621
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12628
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12632
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12649
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12653
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12657
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12661
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12665
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12671
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12677
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12683
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12687
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12691
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12697
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12709
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12716
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12720
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12726
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12732
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12736
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12743
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12749
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12753
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12760
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12766
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12770
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12775
		{
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12776
		{
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12780
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12784
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12790
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12799
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12803
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12807
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12815
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12819
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12825
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12829
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12848
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12856
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12879
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12888
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2281:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12892
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12896
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12900
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12906
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12910
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2290:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12925
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12929
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12941
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2295:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12945
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12954
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12965
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12974
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12982
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2300:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12999
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13084
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13092
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13096
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13102
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13106
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2326:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13114
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2332:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13141
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13148
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2335:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13152
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2336:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13156
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2338:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13170
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2339:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13174
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13178
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13191
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2343:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13200
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13218
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13231
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2349:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13238
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2357:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13263
		{
			sqlVAL.str = ""
		}
	case 2358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13269
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2359:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13273
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
