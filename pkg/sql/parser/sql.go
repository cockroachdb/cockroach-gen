// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:78

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}

//line sql-gen.y:724
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACCESS = lex.ACCESS
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFFINITY = lex.AFFINITY
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const AVAILABILITY = lex.AVAILABILITY
const BACKUP = lex.BACKUP
const BACKUPS = lex.BACKUPS
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BOX2D = lex.BOX2D
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CANCELQUERY = lex.CANCELQUERY
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONNECTION = lex.CONNECTION
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONTROLCHANGEFEED = lex.CONTROLCHANGEFEED
const CONTROLJOB = lex.CONTROLJOB
const CONVERSION = lex.CONVERSION
const CONVERT = lex.CONVERT
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEDB = lex.CREATEDB
const CREATELOGIN = lex.CREATELOGIN
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CSV = lex.CSV
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CURSOR = lex.CURSOR
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DELIMITER = lex.DELIMITER
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FAILURE = lex.FAILURE
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE = lex.FORCE
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYM = lex.GEOMETRYM
const GEOMETRYZ = lex.GEOMETRYZ
const GEOMETRYZM = lex.GEOMETRYZM
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lex.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lex.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lex.GEOMETRYCOLLECTIONZM
const GLOBAL = lex.GLOBAL
const GOAL = lex.GOAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INHERITS = lex.INHERITS
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LINESTRINGM = lex.LINESTRINGM
const LINESTRINGZ = lex.LINESTRINGZ
const LINESTRINGZM = lex.LINESTRINGZM
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALITY = lex.LOCALITY
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const METHOD = lex.METHOD
const MINUTE = lex.MINUTE
const MODIFYCLUSTERSETTING = lex.MODIFYCLUSTERSETTING
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTILINESTRINGM = lex.MULTILINESTRINGM
const MULTILINESTRINGZ = lex.MULTILINESTRINGZ
const MULTILINESTRINGZM = lex.MULTILINESTRINGZM
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOINTM = lex.MULTIPOINTM
const MULTIPOINTZ = lex.MULTIPOINTZ
const MULTIPOINTZM = lex.MULTIPOINTZM
const MULTIPOLYGON = lex.MULTIPOLYGON
const MULTIPOLYGONM = lex.MULTIPOLYGONM
const MULTIPOLYGONZ = lex.MULTIPOLYGONZ
const MULTIPOLYGONZM = lex.MULTIPOLYGONZM
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCANCELQUERY = lex.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lex.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lex.NOCONTROLJOB
const NOCREATEDB = lex.NOCREATEDB
const NOCREATELOGIN = lex.NOCREATELOGIN
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NOMODIFYCLUSTERSETTING = lex.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOVIEWACTIVITY = lex.NOVIEWACTIVITY
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONED = lex.PARTITIONED
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POINTM = lex.POINTM
const POINTZ = lex.POINTZ
const POINTZM = lex.POINTZM
const POLYGON = lex.POLYGON
const POLYGONM = lex.POLYGONM
const POLYGONZ = lex.POLYGONZ
const POLYGONZM = lex.POLYGONZM
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PRIVILEGES = lex.PRIVILEGES
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const REASSIGN = lex.REASSIGN
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REFRESH = lex.REFRESH
const REGCLASS = lex.REGCLASS
const REGION = lex.REGION
const REGIONAL = lex.REGIONAL
const REGIONS = lex.REGIONS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const REPLICATION = lex.REPLICATION
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETS = lex.SETS
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STREAM = lex.STREAM
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SURVIVE = lex.SURVIVE
const SURVIVAL = lex.SURVIVAL
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const STATEMENTS = lex.STATEMENTS
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TABLESPACE = lex.TABLESPACE
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TRANSACTIONS = lex.TRANSACTIONS
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TYPES = lex.TYPES
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIEWACTIVITY = lex.VIEWACTIVITY
const VIRTUAL = lex.VIRTUAL
const VISIBLE = lex.VISIBLE
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const NULLS_LA = lex.NULLS_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFFINITY",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONED",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"VISIBLE",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:12938

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1495,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	259, 383,
	-2, 0,
	-1, 74,
	241, 226,
	506, 226,
	-2, 0,
	-1, 87,
	229, 1236,
	243, 1236,
	259, 379,
	386, 379,
	396, 1006,
	432, 379,
	444, 1006,
	490, 1006,
	517, 379,
	543, 1006,
	-2, 0,
	-1, 93,
	133, 1495,
	236, 1495,
	528, 1495,
	529, 1495,
	-2, 0,
	-1, 109,
	151, 1466,
	170, 1466,
	183, 1466,
	239, 1466,
	272, 1466,
	337, 1466,
	347, 1466,
	523, 1466,
	-2, 1437,
	-1, 148,
	159, 864,
	258, 864,
	389, 831,
	449, 831,
	489, 831,
	509, 864,
	511, 831,
	-2, 0,
	-1, 150,
	4, 1497,
	21, 1497,
	22, 1497,
	23, 1497,
	24, 1497,
	25, 1497,
	26, 1497,
	27, 1497,
	28, 1497,
	30, 1497,
	31, 1497,
	37, 1497,
	42, 1497,
	43, 1497,
	45, 1497,
	46, 1497,
	47, 1497,
	48, 1497,
	49, 1497,
	50, 1497,
	51, 1497,
	52, 1497,
	54, 1497,
	55, 1497,
	56, 1497,
	57, 1497,
	59, 1497,
	60, 1497,
	61, 1497,
	62, 1497,
	63, 1497,
	64, 1497,
	65, 1497,
	69, 1497,
	70, 1497,
	71, 1497,
	72, 1497,
	74, 1497,
	75, 1497,
	76, 1497,
	80, 1497,
	81, 1497,
	82, 1497,
	83, 1497,
	84, 1497,
	85, 1497,
	86, 1497,
	89, 1497,
	90, 1497,
	91, 1497,
	92, 1497,
	93, 1497,
	95, 1497,
	97, 1497,
	98, 1497,
	99, 1497,
	100, 1497,
	101, 1497,
	102, 1497,
	104, 1497,
	105, 1497,
	106, 1497,
	108, 1497,
	109, 1497,
	110, 1497,
	118, 1497,
	119, 1497,
	120, 1497,
	121, 1497,
	122, 1497,
	124, 1497,
	125, 1497,
	126, 1497,
	128, 1497,
	129, 1497,
	130, 1497,
	132, 1497,
	133, 1497,
	134, 1497,
	136, 1497,
	137, 1497,
	138, 1497,
	141, 1497,
	142, 1497,
	143, 1497,
	145, 1497,
	146, 1497,
	148, 1497,
	149, 1497,
	150, 1497,
	152, 1497,
	153, 1497,
	154, 1497,
	155, 1497,
	156, 1497,
	157, 1497,
	158, 1497,
	159, 1497,
	160, 1497,
	161, 1497,
	162, 1497,
	163, 1497,
	164, 1497,
	165, 1497,
	166, 1497,
	167, 1497,
	169, 1497,
	175, 1497,
	176, 1497,
	177, 1497,
	178, 1497,
	182, 1497,
	184, 1497,
	185, 1497,
	189, 1497,
	190, 1497,
	191, 1497,
	192, 1497,
	193, 1497,
	194, 1497,
	195, 1497,
	196, 1497,
	197, 1497,
	198, 1497,
	199, 1497,
	200, 1497,
	201, 1497,
	203, 1497,
	204, 1497,
	206, 1497,
	207, 1497,
	209, 1497,
	210, 1497,
	211, 1497,
	212, 1497,
	213, 1497,
	214, 1497,
	215, 1497,
	216, 1497,
	217, 1497,
	219, 1497,
	220, 1497,
	222, 1497,
	223, 1497,
	224, 1497,
	225, 1497,
	229, 1497,
	230, 1497,
	231, 1497,
	232, 1497,
	233, 1497,
	236, 1497,
	237, 1497,
	238, 1497,
	240, 1497,
	242, 1497,
	243, 1497,
	245, 1497,
	247, 1497,
	248, 1497,
	249, 1497,
	251, 1497,
	255, 1497,
	256, 1497,
	257, 1497,
	258, 1497,
	259, 1497,
	260, 1497,
	262, 1497,
	263, 1497,
	264, 1497,
	266, 1497,
	267, 1497,
	269, 1497,
	270, 1497,
	273, 1497,
	277, 1497,
	278, 1497,
	279, 1497,
	282, 1497,
	283, 1497,
	284, 1497,
	285, 1497,
	287, 1497,
	288, 1497,
	289, 1497,
	290, 1497,
	291, 1497,
	292, 1497,
	293, 1497,
	294, 1497,
	295, 1497,
	296, 1497,
	297, 1497,
	298, 1497,
	299, 1497,
	300, 1497,
	301, 1497,
	302, 1497,
	303, 1497,
	304, 1497,
	305, 1497,
	306, 1497,
	307, 1497,
	308, 1497,
	310, 1497,
	312, 1497,
	313, 1497,
	314, 1497,
	315, 1497,
	316, 1497,
	317, 1497,
	318, 1497,
	319, 1497,
	320, 1497,
	321, 1497,
	322, 1497,
	323, 1497,
	325, 1497,
	327, 1497,
	329, 1497,
	330, 1497,
	332, 1497,
	333, 1497,
	334, 1497,
	335, 1497,
	336, 1497,
	339, 1497,
	342, 1497,
	343, 1497,
	344, 1497,
	345, 1497,
	348, 1497,
	349, 1497,
	350, 1497,
	352, 1497,
	354, 1497,
	355, 1497,
	356, 1497,
	357, 1497,
	358, 1497,
	359, 1497,
	360, 1497,
	361, 1497,
	362, 1497,
	363, 1497,
	364, 1497,
	365, 1497,
	366, 1497,
	368, 1497,
	369, 1497,
	370, 1497,
	371, 1497,
	372, 1497,
	373, 1497,
	374, 1497,
	375, 1497,
	376, 1497,
	377, 1497,
	378, 1497,
	379, 1497,
	380, 1497,
	381, 1497,
	382, 1497,
	384, 1497,
	385, 1497,
	387, 1497,
	388, 1497,
	389, 1497,
	390, 1497,
	391, 1497,
	392, 1497,
	393, 1497,
	394, 1497,
	395, 1497,
	396, 1497,
	397, 1497,
	398, 1497,
	400, 1497,
	402, 1497,
	403, 1497,
	404, 1497,
	409, 1497,
	411, 1497,
	412, 1497,
	413, 1497,
	414, 1497,
	415, 1497,
	416, 1497,
	417, 1497,
	418, 1497,
	419, 1497,
	421, 1497,
	422, 1497,
	423, 1497,
	425, 1497,
	426, 1497,
	427, 1497,
	428, 1497,
	429, 1497,
	430, 1497,
	432, 1497,
	433, 1497,
	434, 1497,
	435, 1497,
	436, 1497,
	437, 1497,
	438, 1497,
	439, 1497,
	440, 1497,
	441, 1497,
	442, 1497,
	444, 1497,
	445, 1497,
	446, 1497,
	447, 1497,
	448, 1497,
	449, 1497,
	451, 1497,
	452, 1497,
	453, 1497,
	454, 1497,
	455, 1497,
	456, 1497,
	458, 1497,
	459, 1497,
	460, 1497,
	461, 1497,
	462, 1497,
	463, 1497,
	464, 1497,
	466, 1497,
	468, 1497,
	469, 1497,
	470, 1497,
	471, 1497,
	472, 1497,
	473, 1497,
	474, 1497,
	475, 1497,
	476, 1497,
	477, 1497,
	478, 1497,
	479, 1497,
	480, 1497,
	481, 1497,
	482, 1497,
	483, 1497,
	485, 1497,
	486, 1497,
	488, 1497,
	489, 1497,
	491, 1497,
	492, 1497,
	493, 1497,
	494, 1497,
	495, 1497,
	496, 1497,
	497, 1497,
	498, 1497,
	499, 1497,
	501, 1497,
	502, 1497,
	503, 1497,
	504, 1497,
	505, 1497,
	507, 1497,
	509, 1497,
	510, 1497,
	511, 1497,
	512, 1497,
	513, 1497,
	514, 1497,
	516, 1497,
	517, 1497,
	518, 1497,
	519, 1497,
	521, 1497,
	522, 1497,
	525, 1497,
	526, 1497,
	527, 1497,
	528, 1497,
	529, 1497,
	530, 1497,
	531, 1497,
	533, 1497,
	536, 1497,
	537, 1497,
	538, 1497,
	539, 1497,
	540, 1497,
	541, 1497,
	543, 1497,
	544, 1497,
	545, 1497,
	546, 1497,
	552, 1497,
	553, 1497,
	554, 1497,
	555, 1497,
	556, 1497,
	557, 1497,
	-2, 0,
	-1, 151,
	1, 1352,
	131, 1352,
	247, 1352,
	326, 1352,
	384, 1352,
	393, 1352,
	561, 1352,
	585, 1352,
	-2, 0,
	-1, 153,
	1, 1352,
	585, 1352,
	-2, 0,
	-1, 154,
	1, 1352,
	585, 1352,
	-2, 0,
	-1, 155,
	1, 1352,
	506, 1352,
	585, 1352,
	-2, 0,
	-1, 183,
	151, 1465,
	170, 1465,
	183, 1465,
	239, 1465,
	272, 1465,
	337, 1465,
	347, 1465,
	523, 1465,
	-2, 1440,
	-1, 229,
	4, 1504,
	5, 1504,
	6, 1504,
	7, 1504,
	8, 1504,
	9, 1504,
	10, 1504,
	21, 1504,
	22, 1504,
	23, 1504,
	24, 1504,
	25, 1504,
	26, 1504,
	27, 1504,
	28, 1504,
	30, 1504,
	31, 1504,
	37, 1504,
	38, 1504,
	42, 1504,
	43, 1504,
	44, 1504,
	45, 1504,
	46, 1504,
	47, 1504,
	48, 1504,
	49, 1504,
	50, 1504,
	51, 1504,
	52, 1504,
	54, 1504,
	55, 1504,
	56, 1504,
	57, 1504,
	59, 1504,
	60, 1504,
	61, 1504,
	62, 1504,
	63, 1504,
	64, 1504,
	65, 1504,
	66, 1504,
	67, 1504,
	68, 1504,
	69, 1504,
	70, 1504,
	71, 1504,
	72, 1504,
	74, 1504,
	75, 1504,
	76, 1504,
	78, 1504,
	80, 1504,
	81, 1504,
	82, 1504,
	83, 1504,
	84, 1504,
	85, 1504,
	86, 1504,
	89, 1504,
	90, 1504,
	91, 1504,
	92, 1504,
	93, 1504,
	95, 1504,
	97, 1504,
	98, 1504,
	99, 1504,
	100, 1504,
	101, 1504,
	102, 1504,
	104, 1504,
	105, 1504,
	106, 1504,
	107, 1504,
	108, 1504,
	109, 1504,
	110, 1504,
	111, 1504,
	112, 1504,
	113, 1504,
	114, 1504,
	115, 1504,
	116, 1504,
	117, 1504,
	118, 1504,
	119, 1504,
	120, 1504,
	121, 1504,
	122, 1504,
	123, 1504,
	124, 1504,
	125, 1504,
	126, 1504,
	127, 1504,
	128, 1504,
	129, 1504,
	130, 1504,
	132, 1504,
	133, 1504,
	134, 1504,
	136, 1504,
	137, 1504,
	138, 1504,
	141, 1504,
	142, 1504,
	143, 1504,
	145, 1504,
	146, 1504,
	148, 1504,
	149, 1504,
	150, 1504,
	152, 1504,
	153, 1504,
	154, 1504,
	155, 1504,
	156, 1504,
	157, 1504,
	158, 1504,
	159, 1504,
	160, 1504,
	161, 1504,
	162, 1504,
	163, 1504,
	164, 1504,
	165, 1504,
	166, 1504,
	167, 1504,
	168, 1504,
	169, 1504,
	175, 1504,
	176, 1504,
	177, 1504,
	178, 1504,
	182, 1504,
	184, 1504,
	185, 1504,
	188, 1504,
	189, 1504,
	190, 1504,
	191, 1504,
	192, 1504,
	193, 1504,
	194, 1504,
	195, 1504,
	196, 1504,
	197, 1504,
	198, 1504,
	199, 1504,
	200, 1504,
	201, 1504,
	203, 1504,
	204, 1504,
	206, 1504,
	207, 1504,
	209, 1504,
	210, 1504,
	211, 1504,
	212, 1504,
	213, 1504,
	214, 1504,
	215, 1504,
	216, 1504,
	217, 1504,
	218, 1504,
	219, 1504,
	220, 1504,
	222, 1504,
	223, 1504,
	224, 1504,
	225, 1504,
	229, 1504,
	230, 1504,
	231, 1504,
	232, 1504,
	233, 1504,
	235, 1504,
	236, 1504,
	237, 1504,
	238, 1504,
	240, 1504,
	242, 1504,
	243, 1504,
	244, 1504,
	245, 1504,
	246, 1504,
	247, 1504,
	248, 1504,
	249, 1504,
	250, 1504,
	251, 1504,
	255, 1504,
	256, 1504,
	257, 1504,
	258, 1504,
	259, 1504,
	260, 1504,
	262, 1504,
	263, 1504,
	264, 1504,
	266, 1504,
	267, 1504,
	268, 1504,
	269, 1504,
	270, 1504,
	271, 1504,
	273, 1504,
	277, 1504,
	278, 1504,
	279, 1504,
	280, 1504,
	281, 1504,
	282, 1504,
	283, 1504,
	284, 1504,
	285, 1504,
	287, 1504,
	288, 1504,
	289, 1504,
	290, 1504,
	291, 1504,
	292, 1504,
	293, 1504,
	294, 1504,
	295, 1504,
	296, 1504,
	297, 1504,
	298, 1504,
	299, 1504,
	300, 1504,
	301, 1504,
	302, 1504,
	303, 1504,
	304, 1504,
	305, 1504,
	306, 1504,
	307, 1504,
	308, 1504,
	310, 1504,
	311, 1504,
	312, 1504,
	313, 1504,
	314, 1504,
	315, 1504,
	316, 1504,
	317, 1504,
	318, 1504,
	319, 1504,
	320, 1504,
	321, 1504,
	322, 1504,
	323, 1504,
	324, 1504,
	325, 1504,
	326, 1504,
	327, 1504,
	328, 1504,
	329, 1504,
	330, 1504,
	331, 1504,
	332, 1504,
	333, 1504,
	334, 1504,
	335, 1504,
	336, 1504,
	339, 1504,
	343, 1504,
	344, 1504,
	345, 1504,
	348, 1504,
	349, 1504,
	350, 1504,
	351, 1504,
	352, 1504,
	353, 1504,
	354, 1504,
	355, 1504,
	356, 1504,
	357, 1504,
	358, 1504,
	359, 1504,
	360, 1504,
	361, 1504,
	362, 1504,
	363, 1504,
	364, 1504,
	365, 1504,
	366, 1504,
	368, 1504,
	369, 1504,
	370, 1504,
	371, 1504,
	372, 1504,
	373, 1504,
	374, 1504,
	375, 1504,
	376, 1504,
	377, 1504,
	378, 1504,
	379, 1504,
	380, 1504,
	381, 1504,
	382, 1504,
	384, 1504,
	385, 1504,
	387, 1504,
	388, 1504,
	389, 1504,
	390, 1504,
	391, 1504,
	392, 1504,
	393, 1504,
	394, 1504,
	395, 1504,
	396, 1504,
	397, 1504,
	398, 1504,
	400, 1504,
	402, 1504,
	403, 1504,
	404, 1504,
	409, 1504,
	411, 1504,
	412, 1504,
	413, 1504,
	414, 1504,
	415, 1504,
	416, 1504,
	417, 1504,
	418, 1504,
	419, 1504,
	421, 1504,
	422, 1504,
	423, 1504,
	424, 1504,
	425, 1504,
	426, 1504,
	427, 1504,
	428, 1504,
	429, 1504,
	430, 1504,
	432, 1504,
	433, 1504,
	434, 1504,
	435, 1504,
	436, 1504,
	437, 1504,
	438, 1504,
	439, 1504,
	440, 1504,
	441, 1504,
	442, 1504,
	444, 1504,
	445, 1504,
	446, 1504,
	447, 1504,
	448, 1504,
	449, 1504,
	450, 1504,
	451, 1504,
	452, 1504,
	453, 1504,
	454, 1504,
	455, 1504,
	456, 1504,
	457, 1504,
	458, 1504,
	459, 1504,
	460, 1504,
	461, 1504,
	462, 1504,
	463, 1504,
	464, 1504,
	466, 1504,
	468, 1504,
	469, 1504,
	470, 1504,
	471, 1504,
	472, 1504,
	473, 1504,
	474, 1504,
	475, 1504,
	476, 1504,
	477, 1504,
	478, 1504,
	479, 1504,
	480, 1504,
	481, 1504,
	482, 1504,
	483, 1504,
	485, 1504,
	486, 1504,
	487, 1504,
	488, 1504,
	489, 1504,
	491, 1504,
	492, 1504,
	493, 1504,
	494, 1504,
	495, 1504,
	496, 1504,
	497, 1504,
	498, 1504,
	499, 1504,
	501, 1504,
	502, 1504,
	503, 1504,
	504, 1504,
	505, 1504,
	507, 1504,
	509, 1504,
	510, 1504,
	511, 1504,
	512, 1504,
	513, 1504,
	514, 1504,
	515, 1504,
	516, 1504,
	517, 1504,
	518, 1504,
	519, 1504,
	521, 1504,
	522, 1504,
	524, 1504,
	525, 1504,
	526, 1504,
	527, 1504,
	528, 1504,
	529, 1504,
	530, 1504,
	531, 1504,
	532, 1504,
	533, 1504,
	536, 1504,
	537, 1504,
	538, 1504,
	539, 1504,
	540, 1504,
	541, 1504,
	543, 1504,
	544, 1504,
	545, 1504,
	546, 1504,
	552, 1504,
	553, 1504,
	554, 1504,
	555, 1504,
	556, 1504,
	557, 1504,
	558, 1504,
	566, 1504,
	573, 1504,
	574, 1504,
	575, 1504,
	582, 1504,
	586, 1504,
	-2, 0,
	-1, 725,
	4, 1234,
	21, 1234,
	22, 1234,
	23, 1234,
	24, 1234,
	25, 1234,
	26, 1234,
	27, 1234,
	28, 1234,
	30, 1234,
	31, 1234,
	37, 1234,
	42, 1234,
	43, 1234,
	45, 1234,
	46, 1234,
	47, 1234,
	48, 1234,
	49, 1234,
	50, 1234,
	51, 1234,
	52, 1234,
	54, 1234,
	55, 1234,
	56, 1234,
	57, 1234,
	59, 1234,
	60, 1234,
	61, 1234,
	62, 1234,
	63, 1234,
	64, 1234,
	65, 1234,
	69, 1234,
	70, 1234,
	71, 1234,
	72, 1234,
	74, 1234,
	75, 1234,
	76, 1234,
	80, 1234,
	81, 1234,
	82, 1234,
	83, 1234,
	84, 1234,
	85, 1234,
	86, 1234,
	89, 1234,
	90, 1234,
	91, 1234,
	92, 1234,
	93, 1234,
	95, 1234,
	97, 1234,
	98, 1234,
	99, 1234,
	100, 1234,
	101, 1234,
	102, 1234,
	104, 1234,
	105, 1234,
	106, 1234,
	108, 1234,
	109, 1234,
	110, 1234,
	118, 1234,
	119, 1234,
	120, 1234,
	121, 1234,
	122, 1234,
	124, 1234,
	125, 1234,
	126, 1234,
	128, 1234,
	129, 1234,
	130, 1234,
	132, 1234,
	133, 1234,
	134, 1234,
	136, 1234,
	137, 1234,
	138, 1234,
	141, 1234,
	142, 1234,
	143, 1234,
	145, 1234,
	146, 1234,
	148, 1234,
	149, 1234,
	150, 1234,
	152, 1234,
	153, 1234,
	154, 1234,
	155, 1234,
	156, 1234,
	157, 1234,
	158, 1234,
	159, 1234,
	160, 1234,
	161, 1234,
	162, 1234,
	163, 1234,
	164, 1234,
	165, 1234,
	166, 1234,
	167, 1234,
	169, 1234,
	175, 1234,
	176, 1234,
	177, 1234,
	178, 1234,
	182, 1234,
	184, 1234,
	185, 1234,
	189, 1234,
	190, 1234,
	191, 1234,
	192, 1234,
	193, 1234,
	194, 1234,
	195, 1234,
	196, 1234,
	197, 1234,
	198, 1234,
	199, 1234,
	200, 1234,
	201, 1234,
	203, 1234,
	204, 1234,
	206, 1234,
	207, 1234,
	209, 1234,
	210, 1234,
	211, 1234,
	212, 1234,
	213, 1234,
	214, 1234,
	215, 1234,
	216, 1234,
	217, 1234,
	219, 1234,
	220, 1234,
	222, 1234,
	223, 1234,
	224, 1234,
	225, 1234,
	229, 1234,
	230, 1234,
	231, 1234,
	232, 1234,
	233, 1234,
	236, 1234,
	237, 1234,
	238, 1234,
	240, 1234,
	242, 1234,
	243, 1234,
	245, 1234,
	247, 1234,
	248, 1234,
	249, 1234,
	251, 1234,
	255, 1234,
	256, 1234,
	257, 1234,
	258, 1234,
	259, 1234,
	260, 1234,
	262, 1234,
	263, 1234,
	264, 1234,
	266, 1234,
	267, 1234,
	269, 1234,
	270, 1234,
	273, 1234,
	277, 1234,
	278, 1234,
	279, 1234,
	282, 1234,
	283, 1234,
	284, 1234,
	285, 1234,
	287, 1234,
	288, 1234,
	289, 1234,
	290, 1234,
	291, 1234,
	292, 1234,
	293, 1234,
	294, 1234,
	295, 1234,
	296, 1234,
	297, 1234,
	298, 1234,
	299, 1234,
	300, 1234,
	301, 1234,
	302, 1234,
	303, 1234,
	304, 1234,
	305, 1234,
	306, 1234,
	307, 1234,
	308, 1234,
	310, 1234,
	312, 1234,
	313, 1234,
	314, 1234,
	315, 1234,
	316, 1234,
	317, 1234,
	318, 1234,
	319, 1234,
	320, 1234,
	321, 1234,
	322, 1234,
	323, 1234,
	325, 1234,
	327, 1234,
	329, 1234,
	330, 1234,
	332, 1234,
	333, 1234,
	334, 1234,
	335, 1234,
	336, 1234,
	339, 1234,
	343, 1234,
	344, 1234,
	345, 1234,
	348, 1234,
	349, 1234,
	350, 1234,
	352, 1234,
	354, 1234,
	355, 1234,
	356, 1234,
	357, 1234,
	358, 1234,
	359, 1234,
	360, 1234,
	361, 1234,
	362, 1234,
	363, 1234,
	364, 1234,
	365, 1234,
	366, 1234,
	368, 1234,
	369, 1234,
	370, 1234,
	371, 1234,
	372, 1234,
	373, 1234,
	374, 1234,
	375, 1234,
	376, 1234,
	377, 1234,
	378, 1234,
	379, 1234,
	380, 1234,
	381, 1234,
	382, 1234,
	384, 1234,
	385, 1234,
	387, 1234,
	388, 1234,
	389, 1234,
	390, 1234,
	391, 1234,
	392, 1234,
	393, 1234,
	394, 1234,
	395, 1234,
	396, 1234,
	397, 1234,
	398, 1234,
	400, 1234,
	402, 1234,
	403, 1234,
	404, 1234,
	409, 1234,
	411, 1234,
	412, 1234,
	413, 1234,
	414, 1234,
	415, 1234,
	416, 1234,
	417, 1234,
	418, 1234,
	419, 1234,
	421, 1234,
	422, 1234,
	423, 1234,
	425, 1234,
	426, 1234,
	427, 1234,
	428, 1234,
	429, 1234,
	430, 1234,
	432, 1234,
	433, 1234,
	434, 1234,
	435, 1234,
	436, 1234,
	437, 1234,
	438, 1234,
	439, 1234,
	440, 1234,
	441, 1234,
	442, 1234,
	444, 1234,
	445, 1234,
	446, 1234,
	447, 1234,
	448, 1234,
	449, 1234,
	451, 1234,
	452, 1234,
	453, 1234,
	454, 1234,
	455, 1234,
	456, 1234,
	458, 1234,
	459, 1234,
	460, 1234,
	461, 1234,
	462, 1234,
	463, 1234,
	464, 1234,
	466, 1234,
	468, 1234,
	469, 1234,
	470, 1234,
	471, 1234,
	472, 1234,
	473, 1234,
	474, 1234,
	475, 1234,
	476, 1234,
	477, 1234,
	478, 1234,
	479, 1234,
	480, 1234,
	481, 1234,
	482, 1234,
	483, 1234,
	485, 1234,
	486, 1234,
	488, 1234,
	489, 1234,
	491, 1234,
	492, 1234,
	493, 1234,
	494, 1234,
	495, 1234,
	496, 1234,
	497, 1234,
	498, 1234,
	499, 1234,
	501, 1234,
	502, 1234,
	503, 1234,
	504, 1234,
	505, 1234,
	507, 1234,
	509, 1234,
	510, 1234,
	511, 1234,
	512, 1234,
	513, 1234,
	514, 1234,
	516, 1234,
	517, 1234,
	518, 1234,
	519, 1234,
	521, 1234,
	522, 1234,
	525, 1234,
	526, 1234,
	527, 1234,
	528, 1234,
	529, 1234,
	530, 1234,
	531, 1234,
	533, 1234,
	536, 1234,
	537, 1234,
	538, 1234,
	539, 1234,
	540, 1234,
	541, 1234,
	543, 1234,
	544, 1234,
	545, 1234,
	546, 1234,
	552, 1234,
	553, 1234,
	554, 1234,
	555, 1234,
	556, 1234,
	557, 1234,
	-2, 0,
	-1, 744,
	187, 2262,
	506, 2262,
	565, 2262,
	584, 2262,
	-2, 0,
	-1, 745,
	187, 2367,
	506, 2367,
	565, 2367,
	584, 2367,
	-2, 0,
	-1, 746,
	187, 2249,
	506, 2249,
	565, 2249,
	584, 2249,
	-2, 0,
	-1, 748,
	187, 2498,
	506, 2498,
	565, 2498,
	584, 2498,
	-2, 0,
	-1, 750,
	187, 2538,
	506, 2538,
	565, 2538,
	584, 2538,
	-2, 0,
	-1, 757,
	187, 2394,
	506, 2394,
	565, 2394,
	584, 2394,
	-2, 666,
	-1, 787,
	584, 2197,
	587, 2197,
	-2, 937,
	-1, 788,
	584, 2199,
	587, 2199,
	-2, 938,
	-1, 789,
	584, 2198,
	587, 2198,
	-2, 939,
	-1, 790,
	587, 2124,
	-2, 940,
	-1, 813,
	183, 240,
	-2, 0,
	-1, 837,
	44, 2171,
	-2, 0,
	-1, 838,
	543, 1212,
	-2, 1007,
	-1, 854,
	4, 1633,
	21, 1633,
	22, 1633,
	23, 1633,
	24, 1633,
	25, 1633,
	26, 1633,
	27, 1633,
	28, 1633,
	30, 1633,
	31, 1633,
	37, 1633,
	42, 1633,
	43, 1633,
	45, 1633,
	46, 1633,
	47, 1633,
	48, 1633,
	49, 1633,
	50, 1633,
	51, 1633,
	52, 1633,
	54, 1633,
	55, 1633,
	56, 1633,
	57, 1633,
	59, 1633,
	60, 1633,
	61, 1633,
	62, 1633,
	63, 1633,
	64, 1633,
	65, 1633,
	69, 1633,
	70, 1633,
	71, 1633,
	72, 1633,
	74, 1633,
	75, 1633,
	76, 1633,
	80, 1633,
	81, 1633,
	82, 1633,
	83, 1633,
	84, 1633,
	85, 1633,
	86, 1633,
	89, 1633,
	90, 1633,
	91, 1633,
	92, 1633,
	93, 1633,
	95, 1633,
	97, 1633,
	98, 1633,
	99, 1633,
	100, 1633,
	101, 1633,
	102, 1633,
	104, 1633,
	105, 1633,
	106, 1633,
	108, 1633,
	109, 1633,
	110, 1633,
	118, 1633,
	119, 1633,
	120, 1633,
	121, 1633,
	122, 1633,
	124, 1633,
	125, 1633,
	126, 1633,
	128, 1633,
	129, 1633,
	130, 1633,
	132, 1633,
	133, 1633,
	134, 1633,
	136, 1633,
	137, 1633,
	138, 1633,
	141, 1633,
	142, 1633,
	143, 1633,
	145, 1633,
	146, 1633,
	148, 1633,
	149, 1633,
	150, 1633,
	152, 1633,
	153, 1633,
	154, 1633,
	155, 1633,
	156, 1633,
	157, 1633,
	158, 1633,
	159, 1633,
	160, 1633,
	161, 1633,
	162, 1633,
	163, 1633,
	164, 1633,
	165, 1633,
	166, 1633,
	167, 1633,
	169, 1633,
	175, 1633,
	176, 1633,
	177, 1633,
	178, 1633,
	182, 1633,
	184, 1633,
	185, 1633,
	189, 1633,
	190, 1633,
	191, 1633,
	192, 1633,
	193, 1633,
	194, 1633,
	195, 1633,
	196, 1633,
	197, 1633,
	198, 1633,
	199, 1633,
	200, 1633,
	201, 1633,
	203, 1633,
	204, 1633,
	206, 1633,
	207, 1633,
	209, 1633,
	210, 1633,
	211, 1633,
	212, 1633,
	213, 1633,
	214, 1633,
	215, 1633,
	216, 1633,
	217, 1633,
	219, 1633,
	220, 1633,
	222, 1633,
	223, 1633,
	224, 1633,
	225, 1633,
	229, 1633,
	230, 1633,
	231, 1633,
	232, 1633,
	233, 1633,
	236, 1633,
	237, 1633,
	238, 1633,
	240, 1633,
	242, 1633,
	243, 1633,
	245, 1633,
	247, 1633,
	248, 1633,
	249, 1633,
	251, 1633,
	255, 1633,
	256, 1633,
	257, 1633,
	258, 1633,
	259, 1633,
	260, 1633,
	262, 1633,
	263, 1633,
	264, 1633,
	266, 1633,
	267, 1633,
	269, 1633,
	270, 1633,
	273, 1633,
	277, 1633,
	278, 1633,
	279, 1633,
	282, 1633,
	283, 1633,
	284, 1633,
	285, 1633,
	287, 1633,
	288, 1633,
	289, 1633,
	290, 1633,
	291, 1633,
	292, 1633,
	293, 1633,
	294, 1633,
	295, 1633,
	296, 1633,
	297, 1633,
	298, 1633,
	299, 1633,
	300, 1633,
	301, 1633,
	302, 1633,
	303, 1633,
	304, 1633,
	305, 1633,
	306, 1633,
	307, 1633,
	308, 1633,
	310, 1633,
	312, 1633,
	313, 1633,
	314, 1633,
	315, 1633,
	316, 1633,
	317, 1633,
	318, 1633,
	319, 1633,
	320, 1633,
	321, 1633,
	322, 1633,
	323, 1633,
	325, 1633,
	327, 1633,
	329, 1633,
	330, 1633,
	332, 1633,
	333, 1633,
	334, 1633,
	335, 1633,
	336, 1633,
	339, 1633,
	343, 1633,
	344, 1633,
	345, 1633,
	348, 1633,
	349, 1633,
	350, 1633,
	352, 1633,
	354, 1633,
	355, 1633,
	356, 1633,
	357, 1633,
	358, 1633,
	359, 1633,
	360, 1633,
	361, 1633,
	362, 1633,
	363, 1633,
	364, 1633,
	365, 1633,
	366, 1633,
	368, 1633,
	369, 1633,
	370, 1633,
	371, 1633,
	372, 1633,
	373, 1633,
	374, 1633,
	375, 1633,
	376, 1633,
	377, 1633,
	378, 1633,
	379, 1633,
	380, 1633,
	381, 1633,
	382, 1633,
	384, 1633,
	385, 1633,
	387, 1633,
	388, 1633,
	389, 1633,
	390, 1633,
	391, 1633,
	392, 1633,
	393, 1633,
	394, 1633,
	395, 1633,
	396, 1633,
	397, 1633,
	398, 1633,
	400, 1633,
	402, 1633,
	403, 1633,
	404, 1633,
	409, 1633,
	411, 1633,
	412, 1633,
	413, 1633,
	414, 1633,
	415, 1633,
	416, 1633,
	417, 1633,
	418, 1633,
	419, 1633,
	421, 1633,
	422, 1633,
	423, 1633,
	425, 1633,
	426, 1633,
	427, 1633,
	428, 1633,
	429, 1633,
	430, 1633,
	432, 1633,
	433, 1633,
	434, 1633,
	435, 1633,
	436, 1633,
	437, 1633,
	438, 1633,
	439, 1633,
	440, 1633,
	441, 1633,
	442, 1633,
	444, 1633,
	445, 1633,
	446, 1633,
	447, 1633,
	448, 1633,
	449, 1633,
	451, 1633,
	452, 1633,
	453, 1633,
	454, 1633,
	455, 1633,
	456, 1633,
	458, 1633,
	459, 1633,
	460, 1633,
	461, 1633,
	462, 1633,
	463, 1633,
	464, 1633,
	466, 1633,
	468, 1633,
	469, 1633,
	470, 1633,
	471, 1633,
	472, 1633,
	473, 1633,
	474, 1633,
	475, 1633,
	476, 1633,
	477, 1633,
	478, 1633,
	479, 1633,
	480, 1633,
	481, 1633,
	482, 1633,
	483, 1633,
	485, 1633,
	486, 1633,
	488, 1633,
	489, 1633,
	491, 1633,
	492, 1633,
	493, 1633,
	494, 1633,
	495, 1633,
	496, 1633,
	497, 1633,
	498, 1633,
	499, 1633,
	501, 1633,
	502, 1633,
	503, 1633,
	504, 1633,
	505, 1633,
	507, 1633,
	509, 1633,
	510, 1633,
	511, 1633,
	512, 1633,
	513, 1633,
	514, 1633,
	516, 1633,
	517, 1633,
	518, 1633,
	519, 1633,
	521, 1633,
	522, 1633,
	525, 1633,
	526, 1633,
	527, 1633,
	528, 1633,
	529, 1633,
	530, 1633,
	531, 1633,
	533, 1633,
	536, 1633,
	537, 1633,
	538, 1633,
	539, 1633,
	540, 1633,
	541, 1633,
	543, 1633,
	544, 1633,
	545, 1633,
	546, 1633,
	552, 1633,
	553, 1633,
	554, 1633,
	555, 1633,
	556, 1633,
	557, 1633,
	-2, 0,
	-1, 862,
	259, 383,
	-2, 0,
	-1, 933,
	389, 832,
	449, 832,
	489, 832,
	511, 832,
	-2, 0,
	-1, 934,
	389, 831,
	449, 831,
	489, 831,
	511, 831,
	-2, 771,
	-1, 938,
	1, 878,
	581, 878,
	583, 878,
	585, 878,
	-2, 0,
	-1, 939,
	1, 806,
	581, 806,
	583, 806,
	585, 806,
	-2, 0,
	-1, 940,
	1, 810,
	581, 810,
	583, 810,
	585, 810,
	-2, 0,
	-1, 941,
	1, 936,
	183, 936,
	581, 936,
	583, 936,
	585, 936,
	-2, 0,
	-1, 949,
	1, 837,
	581, 837,
	583, 837,
	585, 837,
	-2, 0,
	-1, 955,
	1, 878,
	581, 878,
	583, 878,
	585, 878,
	-2, 0,
	-1, 956,
	1, 880,
	581, 880,
	583, 880,
	585, 880,
	-2, 0,
	-1, 957,
	1, 883,
	581, 883,
	583, 883,
	585, 883,
	-2, 0,
	-1, 963,
	1, 901,
	581, 901,
	583, 901,
	585, 901,
	-2, 0,
	-1, 964,
	1, 903,
	581, 903,
	583, 903,
	585, 903,
	-2, 0,
	-1, 969,
	1, 931,
	581, 931,
	583, 931,
	585, 931,
	-2, 0,
	-1, 1015,
	170, 1508,
	183, 1508,
	272, 1508,
	337, 1508,
	-2, 1444,
	-1, 1030,
	170, 1507,
	183, 1507,
	272, 1507,
	337, 1507,
	-2, 1441,
	-1, 1056,
	584, 2196,
	-2, 674,
	-1, 1084,
	5, 2188,
	582, 2186,
	-2, 2177,
	-1, 1092,
	5, 2209,
	582, 2206,
	-2, 2197,
	-1, 1093,
	5, 2210,
	582, 2207,
	-2, 2198,
	-1, 1101,
	584, 2194,
	-2, 2176,
	-1, 1102,
	582, 2620,
	-2, 2195,
	-1, 1125,
	582, 2619,
	-2, 2211,
	-1, 1126,
	5, 1708,
	-2, 2590,
	-1, 1127,
	5, 1709,
	-2, 2591,
	-1, 1128,
	5, 1710,
	-2, 2605,
	-1, 1129,
	5, 1711,
	-2, 2569,
	-1, 1130,
	5, 1712,
	-2, 2603,
	-1, 1131,
	5, 1720,
	-2, 2582,
	-1, 1132,
	5, 1707,
	-2, 2578,
	-1, 1133,
	5, 1707,
	-2, 2577,
	-1, 1134,
	5, 1707,
	-2, 2596,
	-1, 1135,
	5, 1718,
	-2, 2571,
	-1, 1136,
	5, 1723,
	-2, 2570,
	-1, 1137,
	5, 1725,
	-2, 2615,
	-1, 1140,
	5, 1747,
	-2, 2608,
	-1, 1141,
	5, 1739,
	-2, 2609,
	-1, 1142,
	5, 1747,
	-2, 2610,
	-1, 1143,
	5, 1743,
	-2, 2611,
	-1, 1144,
	5, 1693,
	-2, 2583,
	-1, 1145,
	5, 1694,
	-2, 2584,
	-1, 1146,
	5, 1695,
	-2, 2572,
	-1, 1174,
	5, 1730,
	-2, 2616,
	-1, 1175,
	5, 1731,
	-2, 2606,
	-1, 1176,
	5, 1732,
	544, 1732,
	-2, 2573,
	-1, 1177,
	5, 1733,
	544, 1733,
	-2, 2574,
	-1, 1214,
	582, 2206,
	-2, 2197,
	-1, 1215,
	582, 2207,
	-2, 2198,
	-1, 1315,
	187, 2538,
	506, 2538,
	565, 2538,
	584, 2538,
	-2, 0,
	-1, 1318,
	1, 652,
	585, 652,
	-2, 1360,
	-1, 1446,
	356, 2172,
	411, 2172,
	451, 2172,
	575, 2172,
	-2, 2162,
	-1, 1457,
	586, 2172,
	-2, 2173,
	-1, 1463,
	1, 1209,
	581, 1209,
	583, 1209,
	585, 1209,
	-2, 1493,
	-1, 1511,
	396, 1006,
	543, 1006,
	-2, 378,
	-1, 1528,
	44, 2170,
	-2, 972,
	-1, 1535,
	1, 1209,
	581, 1209,
	583, 1209,
	585, 1209,
	-2, 1493,
	-1, 1543,
	4, 1234,
	21, 1234,
	22, 1234,
	23, 1234,
	24, 1234,
	25, 1234,
	26, 1234,
	27, 1234,
	28, 1234,
	30, 1234,
	31, 1234,
	37, 1234,
	42, 1234,
	43, 1234,
	45, 1234,
	46, 1234,
	47, 1234,
	48, 1234,
	49, 1234,
	50, 1234,
	51, 1234,
	52, 1234,
	54, 1234,
	55, 1234,
	56, 1234,
	57, 1234,
	59, 1234,
	60, 1234,
	61, 1234,
	62, 1234,
	63, 1234,
	64, 1234,
	65, 1234,
	69, 1234,
	70, 1234,
	71, 1234,
	72, 1234,
	74, 1234,
	75, 1234,
	76, 1234,
	80, 1234,
	81, 1234,
	82, 1234,
	83, 1234,
	84, 1234,
	85, 1234,
	86, 1234,
	89, 1234,
	90, 1234,
	91, 1234,
	92, 1234,
	93, 1234,
	95, 1234,
	97, 1234,
	98, 1234,
	99, 1234,
	100, 1234,
	101, 1234,
	102, 1234,
	104, 1234,
	105, 1234,
	106, 1234,
	108, 1234,
	109, 1234,
	110, 1234,
	118, 1234,
	119, 1234,
	120, 1234,
	121, 1234,
	122, 1234,
	124, 1234,
	125, 1234,
	126, 1234,
	128, 1234,
	129, 1234,
	130, 1234,
	132, 1234,
	133, 1234,
	134, 1234,
	136, 1234,
	137, 1234,
	138, 1234,
	141, 1234,
	142, 1234,
	143, 1234,
	145, 1234,
	146, 1234,
	148, 1234,
	149, 1234,
	150, 1234,
	152, 1234,
	153, 1234,
	154, 1234,
	155, 1234,
	156, 1234,
	157, 1234,
	158, 1234,
	159, 1234,
	160, 1234,
	161, 1234,
	162, 1234,
	163, 1234,
	164, 1234,
	165, 1234,
	166, 1234,
	167, 1234,
	175, 1234,
	176, 1234,
	177, 1234,
	178, 1234,
	182, 1234,
	184, 1234,
	185, 1234,
	189, 1234,
	190, 1234,
	191, 1234,
	192, 1234,
	193, 1234,
	194, 1234,
	195, 1234,
	196, 1234,
	197, 1234,
	198, 1234,
	199, 1234,
	200, 1234,
	201, 1234,
	203, 1234,
	204, 1234,
	206, 1234,
	207, 1234,
	209, 1234,
	210, 1234,
	211, 1234,
	212, 1234,
	213, 1234,
	214, 1234,
	215, 1234,
	216, 1234,
	217, 1234,
	219, 1234,
	220, 1234,
	222, 1234,
	223, 1234,
	224, 1234,
	225, 1234,
	230, 1234,
	231, 1234,
	232, 1234,
	233, 1234,
	236, 1234,
	237, 1234,
	238, 1234,
	240, 1234,
	242, 1234,
	243, 1234,
	245, 1234,
	247, 1234,
	248, 1234,
	249, 1234,
	251, 1234,
	255, 1234,
	256, 1234,
	257, 1234,
	258, 1234,
	259, 1234,
	260, 1234,
	262, 1234,
	263, 1234,
	264, 1234,
	266, 1234,
	267, 1234,
	269, 1234,
	270, 1234,
	273, 1234,
	277, 1234,
	278, 1234,
	279, 1234,
	282, 1234,
	283, 1234,
	284, 1234,
	285, 1234,
	287, 1234,
	288, 1234,
	289, 1234,
	290, 1234,
	291, 1234,
	292, 1234,
	293, 1234,
	294, 1234,
	295, 1234,
	296, 1234,
	297, 1234,
	298, 1234,
	299, 1234,
	300, 1234,
	301, 1234,
	302, 1234,
	303, 1234,
	304, 1234,
	305, 1234,
	306, 1234,
	307, 1234,
	308, 1234,
	310, 1234,
	312, 1234,
	313, 1234,
	314, 1234,
	315, 1234,
	316, 1234,
	317, 1234,
	318, 1234,
	319, 1234,
	320, 1234,
	321, 1234,
	322, 1234,
	323, 1234,
	325, 1234,
	329, 1234,
	330, 1234,
	332, 1234,
	333, 1234,
	334, 1234,
	335, 1234,
	336, 1234,
	339, 1234,
	341, 1234,
	343, 1234,
	344, 1234,
	345, 1234,
	348, 1234,
	349, 1234,
	350, 1234,
	352, 1234,
	354, 1234,
	355, 1234,
	356, 1234,
	357, 1234,
	358, 1234,
	359, 1234,
	360, 1234,
	361, 1234,
	362, 1234,
	363, 1234,
	364, 1234,
	365, 1234,
	366, 1234,
	368, 1234,
	369, 1234,
	370, 1234,
	371, 1234,
	372, 1234,
	373, 1234,
	374, 1234,
	375, 1234,
	376, 1234,
	377, 1234,
	378, 1234,
	379, 1234,
	380, 1234,
	381, 1234,
	382, 1234,
	384, 1234,
	385, 1234,
	387, 1234,
	388, 1234,
	389, 1234,
	390, 1234,
	391, 1234,
	392, 1234,
	393, 1234,
	394, 1234,
	395, 1234,
	396, 1234,
	397, 1234,
	398, 1234,
	400, 1234,
	402, 1234,
	403, 1234,
	404, 1234,
	409, 1234,
	411, 1234,
	412, 1234,
	413, 1234,
	414, 1234,
	415, 1234,
	416, 1234,
	417, 1234,
	418, 1234,
	419, 1234,
	421, 1234,
	422, 1234,
	423, 1234,
	425, 1234,
	426, 1234,
	427, 1234,
	428, 1234,
	429, 1234,
	430, 1234,
	432, 1234,
	433, 1234,
	434, 1234,
	435, 1234,
	436, 1234,
	437, 1234,
	438, 1234,
	439, 1234,
	440, 1234,
	441, 1234,
	442, 1234,
	444, 1234,
	445, 1234,
	446, 1234,
	447, 1234,
	448, 1234,
	449, 1234,
	451, 1234,
	452, 1234,
	453, 1234,
	454, 1234,
	455, 1234,
	456, 1234,
	458, 1234,
	459, 1234,
	460, 1234,
	461, 1234,
	462, 1234,
	463, 1234,
	464, 1234,
	466, 1234,
	468, 1234,
	469, 1234,
	470, 1234,
	471, 1234,
	472, 1234,
	473, 1234,
	474, 1234,
	475, 1234,
	476, 1234,
	477, 1234,
	478, 1234,
	479, 1234,
	480, 1234,
	481, 1234,
	482, 1234,
	483, 1234,
	485, 1234,
	486, 1234,
	488, 1234,
	489, 1234,
	491, 1234,
	492, 1234,
	493, 1234,
	494, 1234,
	495, 1234,
	496, 1234,
	497, 1234,
	498, 1234,
	499, 1234,
	501, 1234,
	502, 1234,
	503, 1234,
	504, 1234,
	505, 1234,
	507, 1234,
	509, 1234,
	510, 1234,
	511, 1234,
	512, 1234,
	513, 1234,
	514, 1234,
	516, 1234,
	517, 1234,
	518, 1234,
	519, 1234,
	521, 1234,
	522, 1234,
	525, 1234,
	526, 1234,
	527, 1234,
	528, 1234,
	529, 1234,
	530, 1234,
	531, 1234,
	533, 1234,
	536, 1234,
	537, 1234,
	538, 1234,
	539, 1234,
	540, 1234,
	541, 1234,
	543, 1234,
	544, 1234,
	545, 1234,
	546, 1234,
	552, 1234,
	553, 1234,
	554, 1234,
	555, 1234,
	556, 1234,
	557, 1234,
	-2, 0,
	-1, 1566,
	1, 523,
	581, 523,
	583, 523,
	585, 523,
	-2, 1464,
	-1, 1569,
	4, 2614,
	11, 2614,
	12, 2614,
	14, 2614,
	15, 2614,
	16, 2614,
	17, 2614,
	18, 2614,
	19, 2614,
	21, 2614,
	22, 2614,
	23, 2614,
	24, 2614,
	25, 2614,
	26, 2614,
	27, 2614,
	28, 2614,
	30, 2614,
	31, 2614,
	34, 2614,
	35, 2614,
	37, 2614,
	39, 2614,
	42, 2614,
	43, 2614,
	45, 2614,
	46, 2614,
	47, 2614,
	48, 2614,
	49, 2614,
	50, 2614,
	51, 2614,
	52, 2614,
	54, 2614,
	55, 2614,
	56, 2614,
	57, 2614,
	59, 2614,
	60, 2614,
	61, 2614,
	62, 2614,
	63, 2614,
	64, 2614,
	65, 2614,
	69, 2614,
	70, 2614,
	71, 2614,
	72, 2614,
	74, 2614,
	75, 2614,
	76, 2614,
	77, 2614,
	80, 2614,
	81, 2614,
	82, 2614,
	83, 2614,
	84, 2614,
	85, 2614,
	86, 2614,
	87, 2614,
	89, 2614,
	90, 2614,
	91, 2614,
	92, 2614,
	93, 2614,
	95, 2614,
	96, 2614,
	97, 2614,
	98, 2614,
	99, 2614,
	100, 2614,
	101, 2614,
	102, 2614,
	104, 2614,
	105, 2614,
	106, 2614,
	107, 2614,
	108, 2614,
	109, 2614,
	110, 2614,
	118, 2614,
	119, 2614,
	120, 2614,
	121, 2614,
	122, 2614,
	124, 2614,
	125, 2614,
	126, 2614,
	128, 2614,
	129, 2614,
	130, 2614,
	132, 2614,
	133, 2614,
	134, 2614,
	136, 2614,
	137, 2614,
	138, 2614,
	141, 2614,
	142, 2614,
	143, 2614,
	145, 2614,
	146, 2614,
	148, 2614,
	149, 2614,
	150, 2614,
	152, 2614,
	153, 2614,
	154, 2614,
	155, 2614,
	156, 2614,
	157, 2614,
	158, 2614,
	159, 2614,
	160, 2614,
	161, 2614,
	162, 2614,
	163, 2614,
	164, 2614,
	165, 2614,
	166, 2614,
	167, 2614,
	171, 2614,
	172, 2614,
	173, 2614,
	174, 2614,
	175, 2614,
	176, 2614,
	177, 2614,
	178, 2614,
	181, 2614,
	182, 2614,
	184, 2614,
	185, 2614,
	188, 2614,
	189, 2614,
	190, 2614,
	191, 2614,
	192, 2614,
	193, 2614,
	194, 2614,
	195, 2614,
	196, 2614,
	197, 2614,
	198, 2614,
	199, 2614,
	200, 2614,
	201, 2614,
	203, 2614,
	204, 2614,
	206, 2614,
	207, 2614,
	209, 2614,
	210, 2614,
	211, 2614,
	212, 2614,
	213, 2614,
	214, 2614,
	215, 2614,
	216, 2614,
	217, 2614,
	218, 2614,
	219, 2614,
	220, 2614,
	221, 2614,
	222, 2614,
	223, 2614,
	224, 2614,
	225, 2614,
	227, 2614,
	228, 2614,
	230, 2614,
	231, 2614,
	232, 2614,
	233, 2614,
	235, 2614,
	236, 2614,
	237, 2614,
	238, 2614,
	240, 2614,
	242, 2614,
	243, 2614,
	244, 2614,
	245, 2614,
	246, 2614,
	247, 2614,
	248, 2614,
	249, 2614,
	250, 2614,
	251, 2614,
	253, 2614,
	254, 2614,
	255, 2614,
	256, 2614,
	257, 2614,
	258, 2614,
	259, 2614,
	260, 2614,
	262, 2614,
	263, 2614,
	264, 2614,
	266, 2614,
	267, 2614,
	268, 2614,
	269, 2614,
	270, 2614,
	271, 2614,
	273, 2614,
	277, 2614,
	278, 2614,
	279, 2614,
	282, 2614,
	283, 2614,
	284, 2614,
	285, 2614,
	286, 2614,
	287, 2614,
	288, 2614,
	289, 2614,
	290, 2614,
	291, 2614,
	292, 2614,
	293, 2614,
	294, 2614,
	295, 2614,
	296, 2614,
	297, 2614,
	298, 2614,
	299, 2614,
	300, 2614,
	301, 2614,
	302, 2614,
	303, 2614,
	304, 2614,
	305, 2614,
	306, 2614,
	307, 2614,
	308, 2614,
	310, 2614,
	311, 2614,
	312, 2614,
	313, 2614,
	314, 2614,
	315, 2614,
	316, 2614,
	317, 2614,
	318, 2614,
	319, 2614,
	320, 2614,
	321, 2614,
	322, 2614,
	323, 2614,
	325, 2614,
	328, 2614,
	329, 2614,
	330, 2614,
	332, 2614,
	333, 2614,
	334, 2614,
	335, 2614,
	336, 2614,
	339, 2614,
	343, 2614,
	344, 2614,
	345, 2614,
	346, 2614,
	348, 2614,
	349, 2614,
	350, 2614,
	352, 2614,
	354, 2614,
	355, 2614,
	356, 2614,
	357, 2614,
	358, 2614,
	359, 2614,
	360, 2614,
	361, 2614,
	362, 2614,
	363, 2614,
	364, 2614,
	365, 2614,
	366, 2614,
	368, 2614,
	369, 2614,
	370, 2614,
	371, 2614,
	372, 2614,
	373, 2614,
	374, 2614,
	375, 2614,
	376, 2614,
	377, 2614,
	378, 2614,
	379, 2614,
	380, 2614,
	381, 2614,
	382, 2614,
	384, 2614,
	385, 2614,
	387, 2614,
	388, 2614,
	389, 2614,
	390, 2614,
	391, 2614,
	392, 2614,
	393, 2614,
	394, 2614,
	395, 2614,
	396, 2614,
	397, 2614,
	398, 2614,
	400, 2614,
	402, 2614,
	403, 2614,
	404, 2614,
	409, 2614,
	410, 2614,
	411, 2614,
	412, 2614,
	413, 2614,
	414, 2614,
	415, 2614,
	416, 2614,
	417, 2614,
	418, 2614,
	419, 2614,
	421, 2614,
	422, 2614,
	423, 2614,
	424, 2614,
	425, 2614,
	426, 2614,
	427, 2614,
	428, 2614,
	429, 2614,
	430, 2614,
	431, 2614,
	432, 2614,
	433, 2614,
	434, 2614,
	435, 2614,
	436, 2614,
	437, 2614,
	438, 2614,
	439, 2614,
	440, 2614,
	441, 2614,
	442, 2614,
	444, 2614,
	445, 2614,
	446, 2614,
	447, 2614,
	448, 2614,
	449, 2614,
	451, 2614,
	452, 2614,
	453, 2614,
	454, 2614,
	455, 2614,
	456, 2614,
	457, 2614,
	458, 2614,
	459, 2614,
	460, 2614,
	461, 2614,
	462, 2614,
	463, 2614,
	464, 2614,
	466, 2614,
	468, 2614,
	469, 2614,
	470, 2614,
	471, 2614,
	472, 2614,
	473, 2614,
	474, 2614,
	475, 2614,
	476, 2614,
	477, 2614,
	478, 2614,
	479, 2614,
	480, 2614,
	481, 2614,
	482, 2614,
	483, 2614,
	485, 2614,
	486, 2614,
	488, 2614,
	489, 2614,
	491, 2614,
	492, 2614,
	493, 2614,
	494, 2614,
	495, 2614,
	496, 2614,
	497, 2614,
	498, 2614,
	499, 2614,
	501, 2614,
	502, 2614,
	503, 2614,
	504, 2614,
	505, 2614,
	507, 2614,
	509, 2614,
	510, 2614,
	511, 2614,
	512, 2614,
	513, 2614,
	514, 2614,
	516, 2614,
	517, 2614,
	518, 2614,
	519, 2614,
	521, 2614,
	522, 2614,
	525, 2614,
	526, 2614,
	527, 2614,
	528, 2614,
	529, 2614,
	530, 2614,
	531, 2614,
	533, 2614,
	536, 2614,
	537, 2614,
	538, 2614,
	539, 2614,
	540, 2614,
	541, 2614,
	543, 2614,
	544, 2614,
	545, 2614,
	546, 2614,
	552, 2614,
	553, 2614,
	554, 2614,
	555, 2614,
	556, 2614,
	557, 2614,
	558, 2614,
	560, 2614,
	563, 2614,
	564, 2614,
	565, 2614,
	566, 2614,
	567, 2614,
	568, 2614,
	570, 2614,
	571, 2614,
	572, 2614,
	573, 2614,
	574, 2614,
	575, 2614,
	576, 2614,
	577, 2614,
	578, 2614,
	580, 2614,
	583, 2614,
	584, 2614,
	586, 2614,
	587, 2614,
	-2, 0,
	-1, 1574,
	187, 2498,
	506, 2498,
	565, 2498,
	584, 2498,
	-2, 0,
	-1, 1623,
	389, 832,
	449, 832,
	489, 832,
	511, 832,
	-2, 0,
	-1, 1650,
	1, 827,
	581, 827,
	583, 827,
	585, 827,
	-2, 0,
	-1, 1651,
	1, 865,
	581, 865,
	583, 865,
	585, 865,
	-2, 0,
	-1, 1652,
	1, 873,
	581, 873,
	583, 873,
	585, 873,
	-2, 0,
	-1, 1655,
	1, 836,
	581, 836,
	583, 836,
	585, 836,
	-2, 0,
	-1, 1657,
	1, 840,
	581, 840,
	583, 840,
	585, 840,
	-2, 0,
	-1, 1663,
	1, 847,
	581, 847,
	583, 847,
	585, 847,
	-2, 0,
	-1, 1692,
	1, 2560,
	581, 2560,
	583, 2560,
	584, 2560,
	585, 2560,
	-2, 899,
	-1, 1693,
	1, 2495,
	581, 2495,
	583, 2495,
	584, 2495,
	585, 2495,
	-2, 900,
	-1, 1697,
	1, 912,
	581, 912,
	583, 912,
	585, 912,
	-2, 0,
	-1, 1711,
	1, 1355,
	585, 1355,
	-2, 1360,
	-1, 1714,
	170, 1507,
	183, 1507,
	272, 1507,
	337, 1507,
	-2, 1445,
	-1, 1808,
	151, 1466,
	170, 1466,
	183, 1466,
	239, 1466,
	272, 1466,
	337, 1466,
	347, 1466,
	523, 1466,
	-2, 1908,
	-1, 1868,
	583, 2058,
	-2, 0,
	-1, 1903,
	151, 1466,
	170, 1466,
	183, 1466,
	239, 1466,
	272, 1466,
	337, 1466,
	347, 1466,
	523, 1466,
	-2, 1594,
	-1, 1937,
	506, 2495,
	584, 2495,
	587, 2495,
	-2, 0,
	-1, 1954,
	582, 1735,
	-2, 1723,
	-1, 1985,
	187, 2495,
	584, 2495,
	587, 2495,
	-2, 0,
	-1, 2033,
	1, 654,
	585, 654,
	-2, 1360,
	-1, 2159,
	221, 241,
	-2, 2205,
	-1, 2160,
	221, 242,
	-2, 287,
	-1, 2264,
	1, 829,
	581, 829,
	583, 829,
	585, 829,
	-2, 0,
	-1, 2265,
	1, 867,
	581, 867,
	583, 867,
	585, 867,
	-2, 0,
	-1, 2266,
	1, 875,
	581, 875,
	583, 875,
	585, 875,
	-2, 0,
	-1, 2267,
	1, 914,
	581, 914,
	583, 914,
	585, 914,
	-2, 0,
	-1, 2300,
	1, 849,
	581, 849,
	583, 849,
	585, 849,
	-2, 0,
	-1, 2355,
	429, 1534,
	430, 1534,
	-2, 1768,
	-1, 2386,
	14, 0,
	15, 0,
	16, 0,
	563, 0,
	564, 0,
	565, 0,
	-2, 1788,
	-1, 2387,
	14, 0,
	15, 0,
	16, 0,
	563, 0,
	564, 0,
	565, 0,
	-2, 1789,
	-1, 2388,
	96, 0,
	253, 0,
	254, 0,
	567, 0,
	568, 0,
	-2, 1790,
	-1, 2389,
	96, 0,
	253, 0,
	254, 0,
	567, 0,
	568, 0,
	-2, 1791,
	-1, 2390,
	96, 0,
	253, 0,
	254, 0,
	567, 0,
	568, 0,
	-2, 1792,
	-1, 2391,
	96, 0,
	253, 0,
	254, 0,
	567, 0,
	568, 0,
	-2, 1793,
	-1, 2392,
	96, 0,
	253, 0,
	254, 0,
	567, 0,
	568, 0,
	-2, 1794,
	-1, 2393,
	14, 0,
	15, 0,
	16, 0,
	563, 0,
	564, 0,
	565, 0,
	-2, 1795,
	-1, 2405,
	14, 0,
	15, 0,
	16, 0,
	563, 0,
	564, 0,
	565, 0,
	-2, 1807,
	-1, 2406,
	14, 0,
	15, 0,
	16, 0,
	563, 0,
	564, 0,
	565, 0,
	-2, 1808,
	-1, 2407,
	14, 0,
	15, 0,
	16, 0,
	563, 0,
	564, 0,
	565, 0,
	-2, 1809,
	-1, 2410,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	218, 0,
	221, 0,
	271, 0,
	457, 0,
	558, 0,
	566, 0,
	-2, 1814,
	-1, 2416,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	218, 0,
	221, 0,
	271, 0,
	457, 0,
	558, 0,
	566, 0,
	-2, 1818,
	-1, 2418,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	218, 0,
	221, 0,
	271, 0,
	457, 0,
	558, 0,
	566, 0,
	-2, 1826,
	-1, 2419,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	218, 0,
	221, 0,
	271, 0,
	457, 0,
	558, 0,
	566, 0,
	-2, 1827,
	-1, 2420,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	218, 0,
	221, 0,
	271, 0,
	457, 0,
	558, 0,
	566, 0,
	-2, 1828,
	-1, 2421,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	218, 0,
	221, 0,
	271, 0,
	457, 0,
	558, 0,
	566, 0,
	-2, 1829,
	-1, 2557,
	5, 2209,
	187, 2069,
	582, 2206,
	-2, 2197,
	-1, 2558,
	187, 2070,
	-2, 2565,
	-1, 2559,
	187, 2071,
	-2, 2393,
	-1, 2560,
	187, 2072,
	-2, 2280,
	-1, 2561,
	187, 2073,
	-2, 2334,
	-1, 2562,
	187, 2074,
	-2, 2378,
	-1, 2563,
	187, 2075,
	-2, 2493,
	-1, 2564,
	187, 2076,
	-2, 1891,
	-1, 2634,
	1, 1595,
	2, 1595,
	107, 1595,
	151, 1595,
	170, 1595,
	183, 1595,
	188, 1595,
	205, 1595,
	208, 1595,
	235, 1595,
	239, 1595,
	250, 1595,
	268, 1595,
	272, 1595,
	311, 1595,
	337, 1595,
	341, 1595,
	347, 1595,
	420, 1595,
	424, 1595,
	523, 1595,
	534, 1595,
	549, 1595,
	550, 1595,
	551, 1595,
	561, 1595,
	581, 1595,
	583, 1595,
	585, 1595,
	587, 1595,
	-2, 1594,
	-1, 2647,
	582, 2178,
	-2, 2192,
	-1, 2649,
	1, 303,
	549, 303,
	-2, 1493,
	-1, 2675,
	582, 1734,
	-2, 1724,
	-1, 2853,
	1, 1209,
	581, 1209,
	583, 1209,
	585, 1209,
	-2, 1493,
	-1, 3022,
	342, 1537,
	-2, 2604,
	-1, 3023,
	342, 1538,
	-2, 2479,
	-1, 3027,
	429, 2135,
	430, 2135,
	-2, 1889,
	-1, 3028,
	429, 2139,
	430, 2139,
	-2, 1890,
	-1, 3029,
	429, 2136,
	430, 2136,
	-2, 1889,
	-1, 3030,
	429, 2140,
	430, 2140,
	-2, 1890,
	-1, 3043,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	218, 0,
	221, 0,
	271, 0,
	457, 0,
	558, 0,
	566, 0,
	-2, 1816,
	-1, 3044,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	218, 0,
	221, 0,
	271, 0,
	457, 0,
	558, 0,
	566, 0,
	-2, 1820,
	-1, 3050,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	218, 0,
	221, 0,
	271, 0,
	457, 0,
	558, 0,
	566, 0,
	-2, 1822,
	-1, 3266,
	1, 651,
	581, 651,
	583, 651,
	585, 651,
	-2, 1360,
	-1, 3421,
	44, 2170,
	-2, 973,
	-1, 3426,
	1, 1209,
	581, 1209,
	583, 1209,
	585, 1209,
	-2, 1493,
	-1, 3531,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	218, 0,
	221, 0,
	271, 0,
	457, 0,
	558, 0,
	566, 0,
	-2, 1824,
	-1, 3538,
	244, 0,
	246, 0,
	328, 0,
	-2, 1843,
	-1, 3605,
	14, 0,
	15, 0,
	16, 0,
	563, 0,
	564, 0,
	565, 0,
	-2, 1872,
	-1, 3606,
	14, 0,
	15, 0,
	16, 0,
	563, 0,
	564, 0,
	565, 0,
	-2, 1873,
	-1, 3607,
	14, 0,
	15, 0,
	16, 0,
	563, 0,
	564, 0,
	565, 0,
	-2, 1874,
	-1, 3611,
	14, 0,
	15, 0,
	16, 0,
	563, 0,
	564, 0,
	565, 0,
	-2, 1878,
	-1, 3612,
	14, 0,
	15, 0,
	16, 0,
	563, 0,
	564, 0,
	565, 0,
	-2, 1879,
	-1, 3613,
	14, 0,
	15, 0,
	16, 0,
	563, 0,
	564, 0,
	565, 0,
	-2, 1880,
	-1, 3659,
	582, 2179,
	-2, 2193,
	-1, 3829,
	584, 2722,
	-2, 1419,
	-1, 3887,
	244, 0,
	246, 0,
	328, 0,
	-2, 1844,
	-1, 3890,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	218, 0,
	221, 0,
	271, 0,
	457, 0,
	558, 0,
	566, 0,
	-2, 1847,
	-1, 3891,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	218, 0,
	221, 0,
	271, 0,
	457, 0,
	558, 0,
	566, 0,
	-2, 1849,
	-1, 3992,
	584, 2194,
	-2, 1244,
	-1, 4134,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	218, 0,
	221, 0,
	271, 0,
	457, 0,
	558, 0,
	566, 0,
	-2, 1848,
	-1, 4135,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	218, 0,
	221, 0,
	271, 0,
	457, 0,
	558, 0,
	566, 0,
	-2, 1850,
	-1, 4146,
	244, 0,
	-2, 1881,
	-1, 4320,
	244, 0,
	-2, 1882,
	-1, 4509,
	51, 0,
	218, 0,
	271, 0,
	457, 0,
	558, 0,
	566, 0,
	-2, 2568,
}

const sqlPrivate = 57344

const sqlLast = 123465

var sqlAct = [...]int{
	265, 4605, 3410, 4242, 4691, 3177, 4502, 4352, 2918, 4195,
	4561, 1475, 2931, 4382, 4360, 4508, 4501, 4490, 4519, 4632,
	2081, 3409, 4403, 4378, 4441, 2156, 4477, 3870, 4461, 4520,
	4273, 2741, 4521, 4574, 4458, 2783, 4181, 4249, 3570, 4085,
	1218, 2803, 4324, 4090, 4200, 2231, 4051, 4155, 4507, 4031,
	1287, 3523, 3821, 1040, 2365, 3443, 1207, 4123, 3813, 4072,
	3036, 4065, 4074, 3988, 3757, 3293, 1291, 3989, 3973, 2015,
	4287, 4258, 1280, 2589, 2433, 789, 1723, 3779, 4095, 2815,
	3794, 2240, 3777, 2373, 3405, 2089, 3437, 2366, 3395, 3296,
	1590, 755, 39, 1031, 2940, 1351, 3482, 4151, 3484, 2907,
	2888, 789, 1443, 2942, 1909, 2953, 3662, 3220, 4, 3200,
	3192, 3351, 1941, 2877, 3160, 1273, 3315, 3183, 2950, 3869,
	2939, 2933, 4606, 2150, 2238, 3926, 864, 2904, 3181, 2743,
	2919, 3630, 2902, 2151, 2100, 2626, 1095, 3159, 4325, 2627,
	1816, 3020, 1878, 1854, 2446, 3290, 2370, 2475, 1530, 784,
	2204, 2830, 2146, 2477, 1450, 2881, 2127, 2134, 2629, 1088,
	1138, 1198, 3277, 2889, 2949, 1285, 2069, 2073, 1942, 2013,
	1084, 1039, 174, 1898, 1334, 1711, 2607, 2466, 1259, 1879,
	2430, 2059, 259, 258, 3227, 2354, 2337, 1093, 2335, 2659,
	1631, 1282, 2782, 3407, 1567, 2586, 2912, 1533, 786, 1588,
	790, 2191, 857, 2725, 791, 1320, 4404, 2469, 672, 2943,
	2616, 686, 694, 1849, 108, 1201, 2658, 1086, 1888, 1180,
	2447, 2553, 2597, 1895, 2519, 1724, 1725, 2336, 1801, 1663,
	737, 2338, 1215, 183, 1270, 184, 1650, 749, 1197, 1565,
	2217, 1558, 2088, 2190, 1470, 4562, 2359, 1069, 1991, 1988,
	689, 44, 43, 41, 32, 1730, 30, 795, 798, 28,
	1178, 1203, 1710, 3071, 1481, 174, 697, 712, 927, 947,
	3644, 3067, 3645, 4704, 3179, 838, 1656, 2606, 2004, 2004,
	2004, 4694, 4679, 795, 798, 3462, 2606, 1474, 2004, 4678,
	3453, 1035, 1597, 2606, 2004, 2004, 1583, 1091, 4668, 879,
	1495, 4650, 2165, 4648, 4593, 4199, 1489, 4199, 2165, 4550,
	4543, 4541, 3452, 4551, 2606, 2606, 4538, 4535, 4505, 3250,
	4539, 4536, 2165, 1090, 4504, 4503, 4498, 4497, 2165, 2025,
	2025, 2025, 4488, 4486, 4483, 4456, 4199, 4199, 4261, 4199,
	4428, 4421, 4420, 4415, 2666, 2606, 2606, 4199, 4414, 1195,
	4408, 4374, 4199, 4322, 2165, 4042, 4304, 2666, 4301, 4298,
	3856, 4251, 2165, 4199, 4215, 4252, 4214, 3249, 2165, 4206,
	2165, 2002, 4205, 2165, 3235, 4198, 4199, 3132, 3133, 4199,
	4162, 4136, 1181, 1181, 2165, 2666, 4114, 4103, 4026, 4011,
	2025, 3462, 2606, 2606, 3889, 1329, 1329, 3837, 2666, 3831,
	1036, 3479, 1213, 3479, 1035, 3792, 3462, 3654, 1016, 3793,
	1015, 3655, 3652, 3637, 3554, 3550, 3653, 2606, 2165, 2606,
	3478, 2239, 3634, 3469, 3479, 3176, 3171, 3470, 3170, 2606,
	2606, 3123, 2606, 3121, 3113, 3124, 3111, 3122, 3114, 3082,
	2606, 93, 2957, 2606, 3080, 2929, 2025, 2686, 1030, 2227,
	3081, 1025, 2928, 2662, 2709, 2022, 2227, 1483, 2606, 2811,
	1230, 2767, 2665, 2165, 1738, 1739, 2666, 1771, 1772, 1773,
	1781, 1782, 1783, 1483, 2656, 2650, 2605, 1483, 2606, 2165,
	2606, 3035, 2599, 1237, 2606, 1182, 2226, 1774, 1769, 2165,
	2227, 2472, 1184, 4429, 1185, 1741, 1738, 1739, 4326, 4317,
	4305, 4261, 2025, 3634, 1787, 2598, 4083, 4042, 4012, 3856,
	3470, 2806, 1494, 2093, 2724, 2038, 2003, 2019, 1488, 2022,
	1769, 2883, 229, 2164, 2825, 2722, 1874, 1741, 2685, 1210,
	1740, 2606, 1469, 3742, 3526, 3502, 1896, 2139, 1633, 3942,
	1760, 1231, 3454, 2643, 2642, 2641, 2640, 3138, 2639, 1757,
	858, 1186, 1183, 3132, 3133, 1209, 3150, 3151, 3152, 1024,
	1023, 3455, 1740, 1022, 1021, 1020, 1019, 1018, 1014, 231,
	1013, 2997, 1760, 1012, 1011, 1010, 3885, 1009, 73, 2473,
	861, 860, 1008, 1007, 1006, 1005, 1004, 1003, 1002, 1001,
	229, 1000, 999, 998, 925, 74, 924, 923, 922, 921,
	920, 919, 3132, 3133, 918, 3150, 3151, 3152, 917, 1738,
	1739, 78, 916, 915, 914, 913, 912, 911, 230, 910,
	909, 908, 907, 906, 1763, 1764, 1765, 1766, 905, 3147,
	223, 2005, 2005, 2005, 1746, 904, 229, 231, 229, 224,
	1741, 2005, 1474, 903, 3070, 902, 901, 2005, 2005, 900,
	899, 87, 3148, 898, 897, 896, 1763, 1764, 1765, 1766,
	2474, 185, 2471, 895, 2897, 894, 1746, 893, 892, 882,
	881, 1778, 877, 876, 1788, 1740, 870, 869, 3147, 856,
	1768, 1770, 855, 231, 812, 231, 230, 811, 1067, 810,
	3452, 862, 809, 801, 800, 799, 770, 1784, 761, 1785,
	760, 759, 743, 253, 252, 107, 1755, 1756, 1482, 251,
	93, 104, 1768, 1770, 250, 249, 248, 229, 247, 1231,
	246, 245, 229, 3138, 1776, 244, 243, 2915, 242, 185,
	1296, 1093, 230, 229, 230, 148, 241, 229, 240, 1761,
	239, 229, 238, 237, 223, 236, 223, 229, 235, 234,
	233, 232, 3901, 224, 1093, 224, 4097, 3675, 1093, 3648,
	3480, 3223, 3093, 3076, 231, 1601, 1587, 2022, 94, 231,
	2980, 1761, 3138, 2864, 1354, 185, 2670, 185, 1354, 1746,
	231, 1786, 3174, 1296, 231, 2648, 3153, 2633, 231, 2067,
	2234, 2024, 1922, 2502, 231, 1827, 1899, 3149, 73, 1775,
	2696, 2003, 2022, 2488, 1093, 1818, 1093, 1333, 1093, 2476,
	2019, 1338, 3154, 230, 1296, 74, 2685, 2330, 230, 1737,
	3175, 1304, 1658, 2486, 1303, 223, 1477, 1340, 3148, 230,
	223, 78, 1324, 230, 224, 3153, 1217, 230, 4526, 224,
	1296, 223, 4506, 230, 4485, 223, 4389, 4329, 1453, 223,
	224, 4314, 1458, 4308, 224, 223, 185, 4306, 224, 1857,
	1296, 185, 1857, 1767, 224, 1296, 1856, 3132, 3133, 1856,
	4193, 87, 185, 1093, 2233, 1093, 185, 3148, 3797, 1296,
	185, 1818, 2598, 1231, 1762, 1093, 185, 1093, 1860, 1483,
	4150, 1855, 1448, 4104, 4082, 1767, 3951, 1480, 1473, 1487,
	3924, 1493, 1264, 1267, 3923, 3917, 3916, 2899, 3132, 3133,
	1779, 862, 97, 3915, 1539, 1542, 1762, 1277, 3908, 3907,
	1211, 3905, 3900, 2470, 3897, 107, 1318, 3896, 1038, 3791,
	93, 104, 3679, 1296, 1347, 3678, 1440, 1445, 3142, 3134,
	3135, 3136, 3137, 3139, 3140, 3677, 3658, 1461, 3625, 2679,
	1825, 1093, 3132, 3133, 1093, 3624, 1819, 4099, 1817, 2207,
	1545, 3623, 3546, 3542, 182, 100, 1581, 103, 1586, 1570,
	1572, 3218, 3167, 3149, 3158, 795, 798, 1820, 1595, 3131,
	1600, 3128, 3127, 3125, 3120, 3119, 1313, 3118, 94, 3115,
	3112, 229, 3092, 1472, 3075, 3068, 2930, 1471, 2634, 863,
	2459, 1737, 1194, 1528, 148, 3241, 1736, 4698, 3740, 2172,
	4642, 1777, 4641, 2170, 3798, 1602, 1752, 1753, 1759, 1780,
	1758, 1754, 3149, 1751, 1749, 1750, 1742, 1743, 1744, 1745,
	1747, 1748, 174, 174, 2442, 1559, 3911, 3138, 231, 4607,
	3910, 4560, 1657, 229, 4558, 1219, 1093, 1093, 1093, 1093,
	1093, 1093, 1093, 3572, 4448, 1751, 1749, 1750, 1742, 1743,
	1744, 1745, 1747, 1748, 150, 4381, 1324, 2668, 4370, 1324,
	4367, 4366, 4365, 4346, 1036, 4328, 3172, 1093, 3138, 186,
	4327, 4302, 4286, 1093, 4285, 2436, 4271, 230, 4268, 4267,
	231, 4262, 4211, 1561, 4189, 4148, 4131, 4130, 2898, 223,
	4111, 4110, 4068, 4043, 3941, 3144, 3145, 3146, 224, 1715,
	3922, 2664, 3143, 3141, 3142, 3134, 3135, 3136, 3137, 3139,
	3140, 3798, 3138, 3857, 3132, 3133, 3851, 3150, 3151, 3152,
	859, 3848, 97, 3728, 3727, 3713, 3712, 3710, 1582, 230,
	3640, 3628, 3148, 1709, 3537, 1805, 1672, 3884, 3481, 229,
	1596, 223, 3463, 3429, 3144, 3145, 3146, 3364, 3326, 3295,
	224, 3143, 3141, 3142, 3134, 3135, 3136, 3137, 3139, 3140,
	3243, 1742, 1743, 1744, 1745, 1747, 1748, 3097, 3096, 1807,
	3458, 3091, 2914, 3059, 182, 100, 2876, 103, 1093, 1093,
	1093, 1863, 1862, 1861, 1093, 1858, 231, 1607, 4098, 1850,
	3147, 1215, 1848, 1215, 1624, 2677, 229, 229, 2676, 2645,
	2638, 229, 2604, 2484, 1659, 1921, 4330, 3215, 1354, 863,
	1877, 1872, 1876, 1871, 148, 1870, 1869, 1093, 1868, 1867,
	789, 1925, 1866, 1865, 1864, 1845, 1959, 789, 1844, 1843,
	1296, 1842, 1938, 1841, 1840, 230, 1839, 1838, 1837, 1986,
	1712, 1836, 1835, 231, 231, 1834, 1833, 223, 231, 1720,
	1832, 1831, 229, 1719, 1820, 1806, 224, 1885, 1804, 2235,
	1799, 1312, 1235, 1016, 1226, 1015, 4071, 3947, 1990, 1714,
	3893, 3674, 3651, 3643, 150, 3079, 1859, 3149, 185, 1733,
	1734, 1036, 2636, 1930, 3138, 1716, 4166, 1913, 3949, 186,
	1933, 3673, 230, 230, 1819, 1564, 1296, 230, 3239, 231,
	3132, 3133, 1802, 1093, 223, 223, 1917, 1296, 4639, 223,
	1906, 1738, 1739, 224, 224, 4014, 2034, 4631, 224, 1335,
	2804, 1882, 1883, 1337, 4368, 1093, 1926, 2058, 1181, 2058,
	4263, 1354, 4254, 4253, 4102, 185, 185, 1851, 1852, 2058,
	185, 4045, 1741, 4044, 2083, 4013, 3801, 3153, 230, 3944,
	1738, 1739, 3860, 3859, 3858, 3646, 1329, 3465, 2056, 229,
	223, 1213, 1953, 1213, 2501, 1564, 174, 1907, 3464, 224,
	1707, 1329, 1928, 1899, 2487, 4259, 2031, 1740, 2065, 3524,
	2787, 1741, 1336, 1929, 1330, 2472, 1956, 1324, 1857, 3148,
	3752, 185, 2030, 3117, 2485, 1856, 4309, 3116, 3041, 2769,
	4307, 1332, 795, 798, 2044, 3725, 231, 1036, 1904, 795,
	798, 3329, 1897, 996, 3297, 1673, 1740, 1623, 1934, 3134,
	3135, 3136, 3137, 3139, 3140, 1982, 3412, 1840, 3411, 1329,
	1875, 1840, 2007, 3358, 1829, 1632, 4572, 2232, 3179, 4250,
	4192, 4546, 4531, 1947, 4518, 1330, 1916, 1915, 1914, 1912,
	2136, 1911, 1901, 3396, 1910, 230, 3474, 997, 1296, 1296,
	3134, 3135, 3136, 3137, 3139, 3140, 2954, 223, 1354, 1633,
	2256, 2152, 1939, 2473, 3805, 3788, 224, 3754, 3749, 3733,
	3499, 2033, 1319, 3264, 4152, 3574, 2467, 3085, 1210, 4185,
	1210, 4527, 2208, 2675, 1873, 2093, 1853, 3403, 185, 2201,
	1326, 1538, 1466, 1307, 1263, 4540, 3136, 3137, 3139, 3140,
	4537, 2822, 3448, 2819, 1209, 2817, 1209, 1826, 3705, 4361,
	1746, 2345, 4086, 4455, 2121, 1611, 2126, 4343, 3300, 2131,
	3720, 2937, 2029, 1563, 3149, 2911, 3388, 4590, 3518, 3268,
	4232, 1654, 2745, 3767, 4001, 2027, 1513, 1505, 2157, 2162,
	4591, 2710, 994, 851, 2474, 2036, 2471, 4693, 4528, 4225,
	992, 1326, 1296, 990, 1296, 988, 1296, 4217, 3240, 2061,
	2051, 2728, 1193, 2050, 2049, 985, 2728, 2058, 2060, 1331,
	2343, 2306, 1296, 1296, 2304, 4621, 2726, 4176, 1654, 1467,
	1670, 2726, 4040, 1296, 4039, 3765, 3764, 2099, 2908, 2669,
	1671, 2265, 3756, 1563, 3748, 1296, 3747, 1296, 1296, 1296,
	3766, 1330, 3745, 3744, 3732, 3689, 3688, 2045, 2154, 3392,
	977, 3708, 3391, 3234, 3090, 2197, 2009, 3089, 3088, 2011,
	789, 1514, 2242, 3087, 3045, 2016, 2828, 1327, 1337, 2018,
	1331, 1653, 795, 798, 2021, 2119, 1328, 2827, 1651, 2202,
	2824, 2255, 2813, 2345, 2802, 2748, 852, 2801, 4129, 2341,
	1472, 2797, 2796, 2266, 1471, 2795, 3144, 3145, 3146, 2214,
	2774, 2773, 2736, 3143, 3141, 3142, 3134, 3135, 3136, 3137,
	3139, 3140, 2657, 2417, 2118, 1713, 2130, 3270, 1653, 1669,
	2515, 2514, 2375, 2313, 982, 2237, 2053, 1336, 1327, 1551,
	2771, 1550, 2260, 2476, 2163, 4186, 1609, 1328, 2181, 2222,
	1652, 2248, 2343, 1549, 2320, 1548, 3500, 1093, 2328, 1093,
	1509, 2344, 2252, 1522, 1604, 2717, 1093, 1326, 1034, 1959,
	1959, 1354, 2124, 1093, 1093, 1093, 1093, 1093, 1093, 1093,
	1093, 1093, 1093, 1093, 1093, 1093, 1093, 1093, 1093, 1093,
	1093, 1093, 1093, 1093, 1093, 1093, 1093, 1093, 1093, 1093,
	1093, 1093, 1093, 1093, 1093, 1093, 1093, 1093, 2211, 1093,
	2183, 1093, 1093, 1093, 1093, 2224, 1036, 2182, 1036, 1337,
	3297, 1561, 2243, 2219, 2216, 2219, 4622, 2220, 3985, 3356,
	4354, 2347, 1249, 1093, 2342, 2323, 1093, 1093, 2272, 2334,
	2232, 2228, 1313, 2229, 1093, 2161, 1331, 3328, 1093, 2055,
	1093, 1093, 795, 798, 1329, 2960, 1033, 2470, 1354, 2432,
	1527, 684, 3981, 4626, 1093, 1093, 1093, 1093, 2282, 1093,
	1093, 1093, 1093, 1093, 1093, 1093, 1093, 2247, 1336, 2090,
	1887, 2432, 2649, 1605, 2759, 1682, 2310, 2054, 679, 4524,
	3956, 2264, 2747, 2344, 1468, 1093, 1093, 1093, 1093, 1093,
	1093, 1093, 1093, 1093, 1327, 1953, 1953, 3140, 1093, 2448,
	2449, 3018, 2086, 1328, 4652, 1329, 3982, 1718, 1748, 1211,
	1215, 1211, 2791, 2448, 2464, 2300, 3997, 1354, 4015, 1956,
	1956, 2467, 2784, 2785, 2784, 2785, 1215, 2371, 2372, 1625,
	2358, 2091, 2092, 2322, 2784, 2785, 2273, 2758, 3033, 2510,
	4356, 3955, 1093, 1354, 1744, 1745, 1747, 1748, 4627, 4128,
	1311, 1891, 1621, 3508, 1035, 1706, 2342, 2221, 2556, 2556,
	2570, 2087, 2448, 2333, 2331, 2590, 2592, 2332, 2339, 2346,
	1668, 2596, 3132, 3133, 3357, 4590, 1947, 1947, 854, 853,
	2463, 3716, 2269, 3056, 1016, 1044, 2362, 1016, 1016, 2363,
	2364, 2770, 2440, 3507, 1633, 2263, 2621, 1534, 1894, 2438,
	1686, 2476, 2994, 4038, 2821, 2319, 3746, 3267, 890, 1917,
	3743, 3774, 3054, 1889, 1633, 2646, 3132, 3133, 1665, 3150,
	3151, 3152, 3390, 2746, 2512, 3000, 2731, 2613, 3729, 2513,
	972, 1892, 2516, 2727, 2517, 2518, 2820, 3445, 2818, 1036,
	2816, 4602, 849, 1906, 848, 1532, 1296, 1296, 1036, 2444,
	4525, 3354, 1036, 1181, 2101, 1029, 768, 4629, 2823, 2794,
	2461, 2733, 2772, 2635, 2169, 2168, 3775, 3032, 4610, 2663,
	4609, 1329, 2655, 3345, 1890, 3025, 3026, 2105, 3563, 4655,
	1213, 3132, 3133, 2713, 1511, 2612, 3560, 1610, 1354, 2620,
	986, 2625, 3147, 4579, 2631, 2632, 1213, 2705, 986, 3964,
	2329, 986, 2715, 987, 3194, 3977, 3773, 2565, 2552, 2581,
	3978, 3337, 2699, 986, 2594, 3995, 2731, 3875, 2305, 2671,
	1508, 2303, 1959, 2618, 2619, 2602, 2603, 4635, 3346, 2614,
	1032, 4425, 174, 3003, 2102, 3874, 2716, 1859, 3702, 1324,
	1036, 1904, 3138, 4492, 4682, 4493, 1222, 973, 2660, 4523,
	2732, 2733, 3051, 2698, 2004, 2855, 2714, 3147, 2113, 3701,
	1354, 2096, 3980, 3693, 766, 3283, 3338, 3561, 3344, 4437,
	3132, 3133, 2062, 2063, 1296, 3052, 2735, 4435, 3983, 3057,
	4173, 2137, 4170, 3965, 2805, 2678, 3138, 1893, 1220, 2737,
	1093, 1093, 1248, 1093, 2321, 3446, 2682, 2271, 4355, 2799,
	2707, 2766, 1851, 1852, 3279, 2690, 3336, 1210, 2701, 2693,
	2856, 2694, 983, 2114, 2730, 789, 2097, 1296, 680, 2684,
	2681, 2880, 2798, 1210, 2731, 2708, 4362, 2476, 2814, 3782,
	2700, 1224, 3367, 1209, 2792, 2702, 2572, 2734, 3780, 2106,
	2732, 263, 1606, 2810, 4628, 1683, 2149, 3148, 1296, 1209,
	2854, 3138, 4376, 2112, 2776, 1534, 2095, 3269, 1953, 2733,
	1296, 3492, 1296, 2711, 3002, 2895, 2735, 2762, 3996, 3312,
	3485, 1680, 733, 2922, 3445, 3730, 1233, 1296, 2125, 2093,
	2775, 2865, 1956, 883, 2868, 4060, 2870, 4578, 2951, 3717,
	2777, 3148, 3047, 2793, 681, 2999, 1223, 3193, 1846, 2750,
	2753, 2148, 2859, 3979, 2740, 2107, 2108, 2861, 2428, 2981,
	3237, 2982, 2961, 2962, 2431, 4423, 2476, 2137, 1093, 2786,
	2788, 2789, 2790, 2968, 2969, 2970, 3311, 2734, 2084, 2103,
	2913, 3871, 4141, 2913, 3492, 4601, 974, 2426, 702, 1947,
	3138, 3986, 682, 3485, 683, 1681, 3316, 2800, 2732, 3783,
	2955, 3690, 2414, 4475, 4424, 2926, 3148, 4466, 1717, 3053,
	1608, 4023, 972, 2978, 2458, 3281, 3487, 795, 798, 3055,
	2104, 1093, 2891, 767, 2735, 1798, 4633, 1093, 1093, 891,
	2936, 3486, 1684, 2729, 2074, 1472, 871, 1029, 2958, 2862,
	2075, 2728, 3149, 2963, 3001, 2964, 3318, 795, 798, 2691,
	2874, 1310, 2924, 1620, 1622, 2695, 2751, 3280, 2977, 2991,
	3005, 3095, 3007, 2885, 2884, 2617, 4643, 4656, 174, 2706,
	2986, 769, 2988, 2630, 2990, 765, 4070, 4125, 1056, 1035,
	2439, 4553, 1093, 1093, 2268, 2734, 3149, 2917, 1093, 3487,
	3576, 4554, 2927, 3865, 3670, 3148, 4075, 2262, 1027, 2938,
	972, 1093, 1093, 1238, 3486, 3876, 3520, 1093, 1093, 3008,
	3317, 2956, 3010, 1093, 3016, 4076, 4383, 4522, 2906, 2925,
	1685, 1638, 1093, 1093, 1093, 1029, 975, 2422, 1093, 973,
	4634, 2975, 4589, 2116, 4577, 2109, 4587, 4402, 1093, 4270,
	3078, 2984, 2983, 3819, 2985, 2423, 2987, 4683, 2989, 4061,
	2424, 3149, 3433, 2076, 2429, 1093, 2189, 2005, 1884, 1236,
	3048, 3691, 3013, 4636, 3781, 1229, 3024, 671, 2998, 2412,
	2080, 1028, 2415, 3796, 1728, 3920, 3872, 2361, 976, 884,
	885, 3143, 3141, 3142, 3134, 3135, 3136, 3137, 3139, 3140,
	3015, 3014, 3483, 2094, 3782, 2046, 3073, 3074, 2137, 3228,
	2093, 3077, 2358, 3780, 4208, 4661, 3019, 1221, 3614, 2122,
	3034, 2110, 4124, 3069, 4207, 1290, 4279, 973, 3144, 3145,
	3146, 4342, 2411, 3820, 1727, 3143, 3141, 3142, 3134, 3135,
	3136, 3137, 3139, 3140, 3488, 3489, 3490, 3491, 3760, 3704,
	3149, 2077, 2082, 3291, 2140, 1093, 1093, 1093, 1211, 2133,
	2147, 3434, 2117, 1891, 1093, 1093, 1093, 1502, 3425, 1093,
	3287, 2896, 2890, 2043, 1211, 3046, 3202, 1727, 1463, 1093,
	1215, 1354, 1887, 2132, 3559, 1093, 2878, 1093, 3186, 3187,
	1722, 2215, 872, 873, 2209, 2203, 1215, 2195, 2351, 2175,
	3143, 3141, 3142, 3134, 3135, 3136, 3137, 3139, 3140, 1498,
	1894, 3692, 4384, 2778, 1354, 1240, 2128, 3488, 3489, 3490,
	3491, 3629, 3685, 3084, 3783, 2615, 1215, 742, 974, 1354,
	4442, 1036, 3521, 4073, 2078, 1535, 1726, 1727, 1798, 4091,
	4552, 4405, 3169, 1892, 2425, 2091, 2092, 1959, 2041, 3233,
	3208, 1354, 2608, 4174, 2427, 2752, 3966, 3285, 3188, 4126,
	1576, 4000, 3284, 1891, 2311, 2039, 1296, 1296, 3999, 3822,
	2875, 3203, 3247, 2141, 1589, 2129, 1251, 886, 887, 1726,
	2084, 3921, 3221, 4248, 2253, 4246, 2611, 4188, 2042, 1093,
	3141, 3142, 3134, 3135, 3136, 3137, 3139, 3140, 3642, 3877,
	3303, 1728, 3299, 1093, 3298, 3615, 3039, 3198, 3017, 3191,
	1894, 2083, 3778, 3196, 3616, 3190, 974, 1296, 2413, 4660,
	3222, 3201, 1959, 3217, 1557, 1889, 4296, 2610, 1615, 1655,
	2654, 3273, 2609, 2653, 2352, 2652, 3197, 3274, 3275, 1726,
	1093, 3206, 3265, 1892, 1728, 2651, 3258, 3209, 3210, 2083,
	1213, 1555, 889, 3205, 1296, 1543, 3271, 3214, 3180, 3164,
	3165, 3166, 3301, 3226, 3787, 3305, 1213, 3207, 975, 1544,
	1639, 3195, 1324, 2882, 1033, 2115, 1296, 4349, 1296, 4288,
	874, 875, 3878, 1953, 2779, 2780, 1890, 4243, 3212, 3781,
	3213, 802, 4289, 2136, 1354, 4052, 1213, 3302, 2756, 1893,
	3307, 2136, 2125, 3309, 3711, 1296, 4385, 1956, 4196, 1296,
	3244, 3245, 3475, 3246, 3288, 3238, 3686, 3230, 3231, 3232,
	976, 3331, 3664, 2213, 3399, 4290, 4598, 3359, 4380, 3370,
	2123, 3372, 1296, 257, 3376, 3229, 3323, 3324, 3382, 1296,
	3325, 1296, 4168, 2959, 4108, 1354, 4445, 3259, 2860, 2858,
	2241, 3255, 789, 1614, 1026, 1052, 975, 2079, 1953, 3204,
	4350, 4183, 3368, 1296, 1947, 4452, 3266, 3998, 4439, 3927,
	2120, 3631, 3272, 3365, 2483, 1296, 3665, 1210, 4470, 3349,
	3361, 3362, 1956, 1702, 3363, 1704, 2144, 4292, 3408, 4600,
	3292, 3353, 1215, 1210, 2315, 4542, 3441, 1701, 3355, 1893,
	4369, 2124, 3666, 1209, 3663, 3335, 4184, 3417, 976, 3319,
	4291, 4197, 3424, 741, 4107, 3333, 1699, 1296, 1296, 1209,
	4147, 3340, 3919, 1210, 3327, 1677, 2951, 4293, 3786, 3394,
	3439, 3397, 1929, 4446, 3161, 2951, 3343, 3347, 3536, 1947,
	1296, 2142, 3497, 3496, 3360, 3248, 3126, 4351, 3058, 1209,
	2879, 3366, 1675, 3450, 3432, 1056, 3461, 3389, 3379, 1056,
	3341, 3385, 2812, 1556, 3342, 1649, 3377, 2768, 1647, 1645,
	3383, 1643, 2680, 1641, 2324, 1438, 3162, 1635, 1630, 1438,
	1354, 2143, 1628, 1354, 1553, 1924, 1920, 1705, 1592, 2302,
	1554, 888, 3516, 3501, 3515, 1722, 2996, 2995, 2966, 3393,
	2340, 3401, 1664, 2277, 2776, 3440, 2194, 2174, 1987, 1830,
	1603, 1526, 2482, 4517, 4024, 3422, 1093, 3459, 3460, 3435,
	3442, 3420, 1093, 1093, 4025, 3751, 1093, 1093, 1093, 3750,
	1093, 4010, 3421, 4438, 795, 798, 4089, 803, 804, 1093,
	1959, 984, 3254, 4030, 3494, 3256, 3257, 3970, 1093, 4575,
	3260, 1093, 3261, 3514, 3262, 3449, 3477, 1354, 3473, 3447,
	3818, 3493, 1213, 3809, 3763, 3723, 1093, 3721, 3456, 3471,
	1703, 3369, 3703, 3428, 1354, 2317, 3423, 3556, 3513, 2316,
	174, 174, 1700, 3413, 1959, 1959, 1093, 1093, 2909, 1093,
	1093, 1093, 2901, 2894, 2886, 2872, 3511, 2857, 2697, 3667,
	2692, 1698, 2173, 3522, 4084, 3517, 2171, 1093, 2153, 1036,
	1676, 1093, 2138, 1959, 1959, 1093, 1093, 1093, 1093, 1093,
	1093, 1093, 1093, 1093, 1093, 1093, 1093, 1093, 1093, 1093,
	1093, 1093, 1093, 1093, 3510, 1093, 4566, 1674, 3588, 3495,
	3589, 3519, 1093, 1093, 1959, 2111, 3548, 3549, 2098, 1093,
	1648, 2085, 3539, 1646, 1644, 2026, 1642, 3504, 1640, 3505,
	1093, 3506, 1634, 1629, 2023, 2020, 2017, 1627, 4294, 1552,
	2301, 1215, 1215, 2012, 4295, 1093, 1953, 2010, 806, 805,
	2006, 1997, 3438, 1190, 3380, 1731, 4075, 1932, 3037, 1210,
	2147, 4591, 3544, 2047, 3011, 989, 991, 993, 3009, 4480,
	1956, 4113, 3555, 4106, 1354, 4076, 4105, 4037, 3952, 2952,
	1191, 3660, 2066, 1507, 3571, 1209, 3562, 3564, 3565, 2327,
	1953, 1953, 3626, 4281, 2757, 3566, 3668, 3669, 3647, 2624,
	3578, 2728, 4274, 3830, 2093, 1696, 1697, 807, 808, 3586,
	3680, 3681, 3682, 3587, 1956, 1956, 2726, 3591, 3585, 1953,
	1953, 1093, 2371, 3579, 3618, 2728, 2267, 1947, 2212, 3593,
	1271, 3627, 729, 1272, 2297, 2325, 2296, 4479, 1211, 2274,
	2754, 4002, 4032, 1956, 1956, 1626, 1093, 2760, 3619, 4316,
	1953, 2371, 3594, 3038, 1211, 3928, 3633, 3906, 3638, 3639,
	1738, 1739, 1738, 1739, 3314, 1732, 2761, 2781, 3635, 3636,
	1735, 1947, 1947, 3381, 1956, 1305, 1239, 1093, 1093, 2761,
	4594, 2326, 3622, 4585, 1211, 685, 3759, 4547, 2871, 2299,
	1192, 1741, 3806, 2819, 174, 2817, 254, 2196, 1316, 3650,
	1947, 1947, 3649, 2826, 2809, 2765, 782, 2807, 3758, 2763,
	4430, 1213, 1213, 4396, 1272, 1093, 1272, 2808, 2764, 4390,
	839, 4348, 3985, 4335, 4265, 4241, 1740, 4177, 1740, 4175,
	4169, 1947, 3960, 3959, 3816, 3808, 3795, 1293, 3657, 1296,
	696, 2230, 1296, 668, 3697, 3427, 2916, 3676, 2595, 2032,
	3734, 1940, 4630, 4194, 3968, 3967, 3981, 1290, 2244, 1959,
	3974, 3700, 3282, 3236, 4659, 4392, 3739, 3741, 2246, 4472,
	3738, 3132, 3133, 3707, 4473, 3815, 1474, 3972, 1738, 1739,
	2254, 3726, 2257, 2258, 2259, 1613, 3976, 4472, 3755, 1438,
	1296, 1612, 4473, 3761, 3731, 4604, 1093, 2720, 2721, 2718,
	2719, 3898, 2478, 3672, 1215, 1093, 2720, 3832, 2718, 2511,
	3982, 1679, 4266, 4226, 1678, 1296, 1296, 1296, 4034, 4029,
	4028, 3753, 3894, 3671, 3567, 2887, 3839, 3374, 2776, 3371,
	3823, 1824, 1296, 1823, 2922, 4645, 4611, 3785, 1210, 1210,
	4434, 4433, 4432, 4331, 4244, 4221, 3802, 1296, 4167, 4164,
	3827, 4063, 3975, 1354, 4049, 3948, 3824, 3854, 3836, 3790,
	3719, 2951, 3714, 3843, 1209, 1209, 3431, 1101, 3430, 3776,
	3811, 3803, 3784, 3308, 3253, 2993, 3807, 1354, 2974, 2973,
	1093, 1093, 3855, 2972, 2971, 3826, 1093, 1093, 1959, 2900,
	2873, 1093, 1093, 3772, 1093, 1953, 2755, 2688, 1093, 2683,
	3810, 2673, 2672, 3770, 3789, 2661, 1056, 2443, 2318, 1093,
	2298, 2295, 1438, 261, 261, 261, 2294, 674, 675, 1956,
	690, 674, 690, 700, 3825, 1093, 740, 3292, 2293, 3812,
	758, 1281, 3834, 3833, 3838, 764, 3879, 3863, 3828, 2292,
	3864, 3846, 261, 2291, 2210, 3844, 3845, 2184, 3853, 3861,
	1211, 2180, 2179, 3850, 2178, 3852, 3880, 3849, 2177, 2176,
	2000, 1999, 868, 1998, 1996, 1931, 1695, 3892, 261, 1694,
	3862, 1636, 1521, 1520, 1213, 1519, 1947, 3683, 1518, 1446,
	1517, 3684, 1457, 1281, 3873, 1215, 1516, 1515, 1510, 1506,
	1504, 1503, 1460, 1215, 1345, 1344, 1343, 1354, 1342, 1354,
	3888, 1341, 3933, 1309, 1308, 1258, 1215, 1257, 1256, 3977,
	1255, 1254, 1253, 1252, 3978, 1250, 1245, 1296, 1296, 1244,
	1243, 1242, 1241, 1173, 1953, 2037, 1354, 3722, 995, 3724,
	981, 4353, 3984, 2314, 1688, 92, 1512, 825, 86, 2145,
	3718, 952, 4469, 1496, 2355, 1281, 1281, 4375, 1956, 1438,
	3868, 833, 4454, 3804, 3310, 2829, 3918, 2276, 1637, 2278,
	3216, 1215, 3221, 1215, 2637, 4422, 3980, 3902, 3094, 4323,
	3953, 3954, 4140, 2481, 1828, 3994, 3936, 3173, 88, 1077,
	1123, 4059, 3983, 1296, 4058, 3971, 3706, 3925, 2941, 4005,
	4006, 674, 674, 1354, 3762, 1296, 4056, 4055, 1296, 261,
	3932, 1210, 3929, 4003, 3935, 1947, 1944, 1354, 3939, 1946,
	3934, 3930, 3931, 3940, 1043, 1357, 4491, 3990, 3943, 3990,
	2048, 1083, 2064, 2057, 2674, 2555, 3993, 1209, 1100, 1097,
	1948, 1950, 1099, 1098, 1949, 1847, 1096, 1296, 1296, 4004,
	1943, 3814, 2920, 3457, 1562, 4033, 1560, 4035, 3969, 954,
	174, 2052, 2437, 3957, 2465, 1213, 3962, 1296, 3083, 1821,
	1058, 1079, 2462, 1213, 1234, 1068, 1057, 3199, 3178, 1354,
	3444, 3656, 2350, 843, 1296, 4053, 1213, 3129, 2468, 1225,
	4050, 2578, 2571, 2573, 2567, 3263, 4027, 4047, 2910, 4036,
	1708, 2704, 1290, 4154, 1800, 2921, 1339, 1061, 2435, 1215,
	1812, 4022, 3063, 4081, 2360, 3451, 3219, 3979, 2667, 1296,
	1296, 1296, 4476, 4112, 4092, 4041, 3575, 2188, 1189, 1188,
	1232, 1187, 1354, 4046, 4460, 4457, 2135, 3847, 4048, 1211,
	1211, 1213, 3406, 1213, 1093, 1093, 1093, 2040, 4062, 2712,
	4093, 1790, 3414, 4008, 1073, 3986, 4019, 4054, 4087, 1456,
	3184, 4079, 1354, 4096, 3476, 3990, 4017, 1093, 4078, 4020,
	1093, 1093, 4109, 4069, 1523, 763, 4201, 1085, 1789, 2850,
	1093, 2849, 4345, 1959, 4100, 4094, 4101, 1325, 1093, 1093,
	1323, 1322, 1210, 1321, 4618, 4681, 3715, 228, 3031, 1729,
	1210, 4132, 1721, 1354, 225, 1296, 227, 226, 4064, 3661,
	4118, 3225, 1810, 1210, 4116, 4115, 1815, 4545, 1209, 3736,
	4080, 3398, 1438, 23, 3251, 3252, 1209, 4127, 4120, 2853,
	22, 21, 112, 42, 20, 1354, 128, 147, 146, 1209,
	120, 145, 144, 1093, 143, 142, 149, 141, 4121, 4137,
	140, 135, 1093, 139, 4143, 138, 137, 136, 134, 132,
	1093, 133, 1959, 127, 131, 130, 129, 126, 1210, 125,
	1210, 1093, 124, 123, 1093, 3286, 122, 121, 119, 1213,
	118, 117, 116, 1352, 115, 114, 1093, 1451, 4160, 4161,
	113, 754, 751, 1354, 1209, 4149, 1209, 4204, 4179, 61,
	1296, 60, 4163, 111, 110, 1296, 1296, 19, 40, 1438,
	14, 65, 3334, 66, 18, 13, 35, 91, 4180, 1953,
	102, 101, 36, 99, 98, 4178, 34, 4220, 17, 4187,
	16, 15, 2967, 96, 3348, 95, 3350, 1457, 33, 31,
	11, 9, 8, 1956, 37, 1908, 4231, 12, 5, 179,
	1354, 4256, 178, 1296, 181, 177, 180, 4247, 90, 176,
	3408, 175, 4222, 3378, 4218, 89, 29, 3384, 10, 171,
	4280, 1215, 1215, 4257, 3800, 81, 4228, 173, 1438, 172,
	4236, 4264, 170, 169, 1457, 168, 4237, 82, 79, 167,
	85, 1093, 1093, 4275, 4245, 166, 4239, 4240, 1953, 4223,
	1947, 80, 1211, 84, 1438, 83, 1210, 27, 1093, 1959,
	4284, 4278, 4260, 4255, 6, 64, 7, 4122, 3498, 4276,
	4303, 105, 1956, 106, 38, 77, 76, 3990, 3990, 4272,
	4210, 75, 1209, 26, 4299, 4300, 63, 4283, 4096, 4297,
	4282, 4277, 25, 212, 211, 210, 209, 208, 207, 206,
	1093, 4235, 205, 1093, 1227, 200, 199, 204, 202, 4311,
	1215, 4233, 201, 203, 4312, 4313, 198, 215, 214, 220,
	219, 218, 1215, 217, 216, 213, 222, 197, 196, 1947,
	4341, 195, 193, 189, 188, 192, 194, 1247, 191, 190,
	187, 221, 72, 164, 4315, 165, 71, 163, 162, 261,
	161, 261, 261, 160, 1276, 261, 1286, 1568, 4340, 2083,
	159, 158, 157, 70, 1093, 1093, 3990, 1306, 24, 2,
	4363, 4321, 4358, 4379, 1093, 1, 758, 4357, 3990, 1215,
	0, 0, 1215, 0, 0, 4364, 1296, 0, 0, 0,
	4332, 1213, 1213, 0, 0, 1953, 1296, 1296, 4337, 1438,
	261, 4371, 261, 261, 1276, 0, 261, 261, 0, 1286,
	0, 0, 0, 1296, 0, 4373, 0, 4387, 4388, 1956,
	261, 0, 1476, 4413, 4386, 0, 3021, 1093, 1093, 4418,
	0, 4419, 4394, 1211, 4393, 3990, 4398, 1093, 3990, 4391,
	4407, 1211, 4399, 1500, 4377, 4401, 4411, 4412, 4410, 4260,
	0, 0, 4406, 0, 1211, 0, 0, 4409, 0, 0,
	0, 0, 1525, 4416, 0, 1286, 4447, 0, 4397, 261,
	261, 1438, 1276, 4417, 4451, 0, 1947, 0, 1093, 1093,
	1213, 1093, 4427, 0, 4431, 4212, 4213, 0, 0, 0,
	0, 758, 1213, 261, 261, 0, 2200, 0, 0, 0,
	4426, 0, 0, 4459, 4462, 0, 2573, 2573, 0, 1211,
	4474, 1211, 4471, 4227, 4450, 4229, 868, 4230, 1210, 1210,
	4449, 0, 0, 4478, 4496, 0, 0, 0, 0, 0,
	0, 4499, 4464, 4468, 1093, 1093, 1093, 0, 0, 4500,
	0, 0, 0, 0, 1209, 1209, 4481, 0, 0, 1213,
	4487, 4463, 1213, 0, 4467, 0, 0, 4494, 0, 0,
	0, 4495, 0, 0, 0, 0, 1093, 0, 0, 0,
	4530, 0, 0, 0, 4529, 0, 0, 1923, 0, 4516,
	0, 4534, 4515, 4513, 4514, 0, 0, 0, 0, 0,
	261, 0, 0, 4482, 0, 4555, 0, 0, 4548, 4484,
	0, 0, 0, 0, 4532, 0, 4559, 1210, 0, 261,
	0, 4557, 0, 4569, 4571, 0, 0, 0, 4570, 1210,
	1093, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4556, 0, 0, 1209, 0, 4576, 4565, 0, 0, 0,
	4564, 0, 0, 4563, 0, 1209, 0, 1211, 4596, 4592,
	2573, 2573, 2573, 4567, 4568, 0, 0, 4582, 4583, 4573,
	0, 4588, 0, 4586, 4584, 0, 0, 4595, 0, 1215,
	0, 1215, 2083, 4616, 4459, 4614, 1210, 4462, 4599, 1210,
	4613, 4597, 0, 4603, 4624, 4619, 4379, 4625, 4608, 4612,
	0, 0, 0, 4478, 0, 0, 4623, 0, 4620, 0,
	2068, 0, 1209, 0, 0, 1209, 0, 0, 4638, 0,
	0, 0, 0, 4372, 0, 0, 0, 0, 0, 771,
	0, 4637, 0, 0, 4640, 3990, 0, 3990, 4647, 4644,
	0, 0, 4615, 0, 4617, 0, 4653, 1994, 0, 0,
	0, 1093, 1093, 4649, 4646, 0, 0, 0, 4651, 0,
	1093, 4654, 1093, 1093, 0, 0, 4657, 3060, 3061, 0,
	4663, 0, 4672, 0, 0, 0, 4666, 4677, 4673, 4676,
	4669, 4675, 4674, 4671, 4670, 0, 0, 3386, 0, 0,
	3771, 4684, 0, 4685, 2441, 0, 0, 4688, 4687, 4686,
	4680, 4689, 0, 4690, 2922, 4692, 0, 0, 0, 1810,
	4696, 4695, 0, 1994, 0, 0, 0, 674, 3418, 1093,
	4700, 0, 4702, 0, 1994, 4697, 4703, 0, 4705, 4706,
	3426, 4692, 0, 4699, 0, 4664, 4665, 0, 261, 0,
	261, 0, 0, 0, 261, 0, 0, 2166, 776, 1213,
	0, 1213, 0, 0, 0, 0, 0, 1476, 1276, 261,
	0, 261, 0, 2577, 0, 0, 0, 261, 1476, 690,
	0, 0, 3467, 3468, 261, 1476, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1738, 1739, 0, 2001,
	0, 0, 4701, 0, 0, 0, 0, 0, 1738, 1739,
	0, 261, 0, 0, 0, 0, 0, 0, 261, 1281,
	1769, 3155, 3156, 3157, 0, 0, 780, 1741, 0, 1211,
	1211, 0, 1769, 0, 0, 0, 0, 0, 0, 1741,
	0, 0, 735, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1438, 0, 0, 0, 0, 0, 758, 0,
	0, 0, 1740, 0, 0, 0, 778, 1281, 0, 0,
	4544, 0, 1760, 0, 1740, 0, 0, 1738, 1739, 0,
	0, 1757, 0, 0, 1760, 1438, 1210, 0, 1210, 0,
	0, 2074, 0, 1757, 0, 0, 0, 2075, 0, 0,
	1438, 1769, 0, 1281, 1281, 0, 0, 0, 1741, 0,
	0, 0, 1209, 0, 1209, 0, 0, 0, 1211, 0,
	0, 0, 1438, 0, 0, 783, 0, 0, 0, 0,
	1211, 0, 0, 0, 0, 3883, 0, 0, 0, 0,
	0, 0, 0, 1740, 0, 0, 0, 3535, 0, 0,
	0, 0, 0, 0, 0, 0, 1763, 1764, 1765, 1766,
	1056, 0, 0, 0, 0, 0, 1746, 0, 1763, 1764,
	1765, 1766, 0, 0, 1056, 0, 0, 0, 1746, 0,
	0, 0, 0, 0, 0, 0, 0, 1211, 0, 1568,
	1211, 1568, 0, 0, 0, 1446, 0, 773, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2076, 0, 1768, 1770, 261, 0, 0, 261, 0, 0,
	2374, 0, 1457, 0, 1768, 1770, 0, 2080, 777, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1755, 1756,
	0, 4009, 2573, 2573, 0, 0, 0, 1746, 0, 0,
	1755, 1756, 0, 4018, 0, 0, 4021, 0, 0, 0,
	0, 0, 734, 0, 0, 1438, 0, 0, 0, 0,
	261, 1761, 0, 0, 261, 781, 0, 0, 0, 0,
	261, 775, 0, 1761, 0, 0, 261, 0, 0, 0,
	0, 0, 0, 1768, 1770, 0, 0, 0, 2077, 2082,
	0, 0, 261, 0, 261, 0, 0, 2479, 674, 0,
	261, 0, 0, 0, 0, 4077, 1438, 0, 0, 0,
	0, 0, 758, 0, 0, 0, 868, 772, 0, 0,
	2573, 2573, 2573, 2573, 2573, 2573, 2573, 2573, 2573, 2573,
	2573, 2573, 2573, 2573, 2573, 2573, 2573, 2573, 2573, 0,
	2573, 261, 1761, 1276, 261, 779, 0, 1457, 0, 0,
	0, 0, 0, 0, 0, 1281, 0, 0, 758, 736,
	0, 0, 0, 0, 0, 261, 0, 0, 0, 0,
	774, 2078, 2275, 0, 0, 0, 0, 261, 261, 0,
	261, 0, 261, 0, 261, 1767, 261, 0, 0, 0,
	0, 0, 2647, 0, 1457, 0, 1457, 1767, 0, 0,
	0, 0, 0, 0, 0, 0, 1762, 0, 0, 2307,
	0, 0, 2308, 3322, 2309, 0, 0, 2084, 1762, 0,
	0, 0, 0, 0, 3768, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1738,
	1739, 1438, 0, 0, 1438, 0, 2577, 0, 0, 0,
	0, 740, 0, 0, 0, 758, 0, 0, 0, 0,
	0, 0, 0, 1769, 0, 0, 0, 1211, 3320, 1211,
	1741, 0, 0, 0, 0, 0, 0, 0, 0, 2074,
	0, 0, 0, 3532, 3533, 2075, 0, 1762, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3840, 3841, 3842, 0, 0, 1740, 0, 0, 3321, 0,
	0, 0, 0, 0, 0, 1760, 0, 1290, 1438, 0,
	0, 0, 0, 0, 1757, 0, 2577, 2577, 0, 0,
	0, 0, 0, 0, 0, 1438, 0, 2723, 4234, 0,
	0, 0, 1758, 1754, 0, 1751, 1749, 1750, 1742, 1743,
	1744, 1745, 1747, 1748, 1758, 1754, 0, 1751, 1749, 1750,
	1742, 1743, 1744, 1745, 1747, 1748, 0, 0, 0, 0,
	0, 3595, 3596, 3597, 3598, 3599, 3600, 3601, 3602, 3603,
	3604, 3605, 3606, 3607, 3608, 3609, 3610, 3611, 3612, 3613,
	0, 3617, 0, 0, 2079, 0, 0, 0, 2076, 1763,
	1764, 1765, 1766, 0, 0, 0, 0, 0, 0, 1746,
	0, 0, 674, 0, 0, 2080, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 1750, 1742,
	1743, 1744, 1745, 1747, 1748, 0, 674, 0, 0, 0,
	0, 0, 0, 261, 0, 674, 0, 0, 0, 0,
	73, 0, 0, 0, 0, 1768, 1770, 261, 0, 0,
	73, 0, 0, 0, 0, 1438, 0, 74, 0, 0,
	2577, 2577, 2577, 261, 1286, 0, 0, 74, 0, 0,
	0, 1755, 1756, 78, 0, 0, 2077, 2082, 0, 0,
	0, 0, 0, 78, 0, 0, 0, 0, 0, 0,
	0, 0, 3945, 3946, 0, 0, 0, 0, 0, 0,
	0, 0, 1738, 1739, 1761, 1771, 1772, 1773, 1781, 1782,
	1783, 261, 1286, 87, 0, 690, 0, 0, 0, 0,
	0, 0, 0, 87, 0, 2687, 1769, 0, 0, 0,
	0, 261, 0, 1741, 261, 0, 0, 0, 261, 0,
	261, 0, 1787, 0, 0, 1276, 0, 261, 261, 0,
	1286, 1286, 2703, 862, 0, 1738, 1739, 261, 0, 2078,
	1457, 1457, 0, 862, 0, 0, 0, 107, 1740, 0,
	0, 0, 93, 104, 0, 0, 0, 107, 1760, 1769,
	0, 0, 93, 104, 0, 0, 1741, 1757, 0, 0,
	0, 0, 0, 0, 1994, 0, 0, 0, 0, 0,
	0, 2072, 2744, 0, 0, 2084, 0, 0, 0, 0,
	0, 0, 1290, 261, 0, 0, 0, 0, 0, 0,
	0, 1740, 0, 0, 0, 1568, 261, 0, 1767, 0,
	94, 0, 0, 0, 0, 1457, 0, 1886, 0, 261,
	94, 0, 0, 0, 0, 0, 0, 0, 0, 1762,
	0, 0, 0, 0, 0, 0, 2070, 0, 0, 0,
	2200, 0, 1763, 1764, 1765, 1766, 261, 0, 0, 0,
	0, 0, 1746, 0, 0, 1738, 1739, 0, 0, 0,
	0, 0, 0, 0, 4117, 0, 4119, 0, 0, 0,
	0, 0, 261, 2863, 0, 0, 2071, 0, 0, 1769,
	0, 0, 0, 0, 0, 0, 1741, 0, 0, 1778,
	0, 0, 1788, 0, 0, 0, 0, 1476, 1768, 1770,
	261, 0, 261, 0, 0, 1746, 0, 0, 0, 261,
	0, 0, 0, 0, 1438, 1784, 0, 1785, 0, 2905,
	0, 1740, 0, 0, 1755, 1756, 0, 0, 0, 2744,
	0, 674, 0, 0, 0, 0, 0, 0, 1438, 0,
	2934, 868, 1776, 2744, 2744, 1281, 0, 0, 0, 0,
	4165, 1768, 1770, 0, 97, 0, 0, 1761, 0, 0,
	261, 0, 2079, 0, 97, 1758, 1754, 0, 1751, 1749,
	1750, 1742, 1743, 1744, 1745, 1747, 1748, 0, 0, 261,
	1276, 261, 0, 0, 0, 1476, 0, 1476, 1286, 261,
	0, 0, 1276, 0, 1276, 0, 1276, 0, 0, 1786,
	0, 0, 0, 0, 1042, 0, 182, 100, 0, 103,
	1761, 0, 0, 0, 0, 0, 182, 100, 0, 103,
	0, 0, 0, 0, 0, 1746, 0, 261, 261, 261,
	261, 1276, 0, 229, 1276, 0, 261, 0, 261, 0,
	3185, 863, 0, 229, 0, 0, 148, 1457, 0, 0,
	4238, 863, 0, 0, 0, 0, 148, 0, 1438, 0,
	1438, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 1768, 1770, 3211, 0, 2573, 0, 261, 0, 0,
	231, 1767, 0, 0, 0, 0, 0, 1438, 3224, 0,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1762, 0, 0, 0, 150, 0, 0, 0,
	3242, 0, 2577, 2577, 0, 0, 150, 0, 0, 0,
	0, 186, 0, 0, 0, 0, 0, 0, 1779, 230,
	1761, 186, 0, 0, 0, 0, 0, 0, 2573, 230,
	0, 223, 0, 0, 0, 0, 0, 0, 0, 0,
	224, 223, 0, 0, 1438, 1762, 0, 0, 0, 0,
	224, 0, 0, 0, 0, 0, 1476, 0, 1438, 0,
	0, 0, 185, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1573, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2577, 2577, 2577, 2577, 2577, 2577, 2577, 2577, 2577, 2577,
	2577, 2577, 2577, 2577, 2577, 2577, 2577, 2577, 2577, 0,
	2577, 0, 0, 0, 0, 0, 0, 0, 0, 1777,
	1438, 0, 0, 0, 1752, 1753, 1759, 1780, 1758, 1754,
	0, 1751, 1749, 1750, 1742, 1743, 1744, 1745, 1747, 1748,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1994, 1994, 0, 3132, 3133, 0, 3150,
	3151, 3152, 0, 0, 0, 1762, 0, 0, 0, 0,
	0, 0, 0, 1438, 0, 0, 0, 0, 0, 3541,
	0, 1290, 1290, 0, 1751, 1749, 1750, 1742, 1743, 1744,
	1745, 1747, 1748, 2573, 3224, 0, 0, 261, 1290, 0,
	0, 0, 0, 1438, 1994, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 0, 0, 4146, 0, 674, 0,
	0, 0, 0, 674, 0, 0, 674, 0, 0, 674,
	674, 0, 3147, 0, 0, 674, 0, 0, 0, 0,
	0, 1994, 0, 261, 1438, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1476, 0, 0, 0, 0,
	0, 0, 0, 1994, 0, 1994, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1438, 0, 1476, 4190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 0, 1994, 0, 261, 261, 1994, 0, 0, 0,
	0, 0, 0, 0, 1281, 1749, 1750, 1742, 1743, 1744,
	1745, 1747, 1748, 0, 0, 1056, 0, 0, 0, 0,
	0, 0, 0, 2744, 2744, 261, 3138, 3278, 0, 1451,
	0, 0, 1352, 0, 1438, 0, 0, 2744, 0, 0,
	3294, 0, 0, 0, 0, 0, 0, 0, 2744, 3294,
	0, 2744, 3294, 0, 0, 3294, 0, 2200, 3132, 3133,
	0, 3150, 3151, 3152, 0, 0, 0, 0, 261, 261,
	3278, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 3540, 0, 0, 0, 0, 0, 1738, 1739, 3153,
	0, 1438, 3278, 0, 261, 0, 3352, 3352, 0, 0,
	1276, 0, 0, 0, 0, 0, 3552, 0, 0, 0,
	0, 1769, 0, 0, 0, 2744, 0, 2744, 1741, 3375,
	2744, 3278, 0, 3568, 2744, 3278, 0, 0, 0, 0,
	0, 3148, 0, 0, 3147, 0, 0, 0, 1301, 0,
	0, 0, 0, 0, 4320, 0, 0, 0, 0, 0,
	0, 0, 0, 1740, 0, 261, 0, 0, 0, 0,
	0, 1042, 0, 1760, 0, 1042, 0, 0, 0, 261,
	3402, 0, 1757, 3404, 2744, 0, 0, 261, 0, 0,
	0, 261, 0, 0, 1286, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 0, 0, 0, 2905, 0, 0, 1276, 0, 261,
	0, 1478, 2744, 1484, 674, 1490, 0, 0, 0, 0,
	0, 2744, 0, 0, 0, 0, 3530, 0, 3138, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 2905, 1738, 1739, 2905, 1763, 1764, 1765,
	1766, 0, 0, 3659, 0, 1056, 1056, 1746, 0, 0,
	0, 0, 0, 0, 0, 0, 1738, 1739, 1769, 1771,
	1772, 1773, 1781, 1782, 1783, 1741, 3149, 0, 3503, 0,
	1579, 0, 1584, 0, 0, 0, 0, 0, 0, 1774,
	1769, 3153, 1593, 0, 1598, 3509, 0, 1741, 1276, 261,
	0, 261, 0, 1768, 1770, 0, 1787, 1276, 0, 0,
	1740, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3132, 3133, 0, 3150, 3151, 3152, 1755,
	1756, 0, 1740, 3148, 0, 0, 0, 261, 0, 0,
	0, 0, 1760, 0, 0, 0, 0, 0, 0, 0,
	0, 1757, 0, 0, 0, 0, 0, 0, 1660, 0,
	0, 1666, 1761, 0, 0, 0, 0, 0, 0, 0,
	1056, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2200, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3573, 0, 0, 0, 0, 0, 3147,
	1281, 0, 0, 0, 0, 0, 0, 0, 3144, 3145,
	3146, 0, 0, 0, 1746, 3143, 3141, 3142, 3134, 3135,
	3136, 3137, 3139, 3140, 0, 0, 1763, 1764, 1765, 1766,
	0, 0, 0, 0, 0, 0, 1746, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1791, 1792, 1793, 1794, 1795, 1796, 1797,
	1768, 1770, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1778, 0, 0, 1788, 0, 3149, 0,
	0, 0, 1768, 1770, 1809, 0, 1767, 0, 261, 261,
	1822, 0, 0, 3138, 0, 0, 0, 0, 0, 1784,
	0, 1785, 0, 0, 0, 0, 0, 1762, 1755, 1756,
	674, 674, 0, 0, 0, 0, 0, 0, 0, 1761,
	0, 0, 0, 0, 0, 0, 1776, 0, 0, 0,
	0, 0, 1476, 1476, 0, 0, 0, 0, 0, 0,
	0, 1761, 0, 0, 0, 0, 1476, 1476, 1476, 0,
	0, 0, 0, 0, 0, 0, 3153, 0, 0, 1994,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2577, 0, 0, 0, 0,
	3352, 0, 0, 1786, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1880, 1880, 1880, 3148, 0,
	0, 1775, 0, 0, 0, 0, 0, 0, 0, 0,
	3144, 3145, 3146, 0, 0, 0, 0, 3143, 3141, 3142,
	3134, 3135, 3136, 3137, 3139, 3140, 758, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2577, 0,
	0, 0, 0, 1758, 1754, 0, 1751, 1749, 1750, 1742,
	1743, 1744, 1745, 1747, 1748, 0, 0, 3352, 0, 0,
	0, 0, 0, 0, 1762, 1767, 0, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3938, 0,
	0, 0, 0, 0, 0, 0, 1762, 0, 3278, 0,
	261, 0, 0, 0, 1125, 0, 0, 0, 0, 0,
	0, 261, 0, 0, 0, 3950, 0, 0, 0, 0,
	0, 261, 1779, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 0, 0, 0, 0, 261, 0, 0, 0,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1042, 3149, 0, 0, 0, 0, 0, 0,
	2744, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	2934, 2934, 0, 1457, 0, 0, 868, 868, 2744, 0,
	0, 0, 2905, 2905, 0, 0, 868, 2744, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 0,
	0, 0, 0, 2577, 0, 0, 1742, 1743, 1744, 1745,
	1747, 1748, 0, 1777, 0, 0, 0, 2845, 1752, 1753,
	1759, 1780, 1758, 1754, 0, 1751, 1749, 1750, 1742, 1743,
	1744, 1745, 1747, 1748, 0, 0, 0, 0, 3107, 0,
	0, 0, 3108, 0, 0, 0, 0, 0, 0, 0,
	2837, 2835, 0, 0, 0, 0, 0, 2839, 2841, 2831,
	0, 0, 0, 0, 0, 0, 1281, 0, 0, 0,
	3903, 0, 0, 0, 0, 3144, 3145, 3146, 0, 0,
	0, 0, 3143, 3141, 3142, 3134, 3135, 3136, 3137, 3139,
	3140, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1994, 1352, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1994, 0, 0, 1994, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1216, 0, 0, 0,
	0, 4138, 261, 0, 0, 0, 0, 0, 1476, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4138, 0, 1994, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2744, 2744, 0, 3352,
	0, 0, 3352, 0, 0, 0, 0, 0, 0, 0,
	0, 2744, 0, 0, 2374, 0, 0, 0, 3992, 0,
	3992, 1476, 0, 0, 0, 0, 0, 0, 0, 2744,
	0, 3294, 0, 0, 0, 1476, 1476, 261, 3278, 0,
	0, 0, 0, 0, 0, 0, 2833, 0, 0, 0,
	0, 3278, 0, 261, 3278, 0, 261, 2847, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2744, 2374, 2744, 261, 0, 0, 0, 2846, 2838,
	2836, 2840, 2842, 2832, 2834, 2848, 0, 0, 0, 0,
	0, 0, 2844, 0, 0, 0, 0, 0, 0, 0,
	0, 2744, 0, 0, 0, 0, 4066, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 2851, 261, 0, 0,
	0, 0, 2548, 2549, 2550, 2551, 2544, 2545, 2546, 2547,
	0, 0, 0, 0, 2349, 0, 2353, 0, 0, 0,
	0, 0, 0, 2367, 0, 0, 3992, 0, 0, 1476,
	2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385,
	2386, 2387, 2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395,
	2396, 2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405,
	2406, 2407, 2408, 2409, 2410, 0, 2416, 0, 2418, 2419,
	2420, 2421, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2524, 2525, 2526, 2527, 1994, 0, 0,
	2445, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1809, 0, 0, 0, 2460, 2536, 2537, 2538, 2539,
	2532, 2533, 2534, 2535, 2540, 2541, 2542, 2543, 0, 0,
	0, 2490, 2493, 2496, 2499, 0, 2503, 2504, 2505, 2506,
	2507, 2508, 2509, 0, 73, 0, 0, 4171, 4172, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2744, 0,
	3294, 74, 0, 4182, 2569, 0, 2580, 2582, 2587, 0,
	0, 261, 0, 0, 0, 0, 0, 78, 4202, 2852,
	4202, 0, 0, 0, 0, 0, 0, 0, 2843, 0,
	2520, 2521, 2522, 2523, 2528, 2529, 2530, 2531, 0, 0,
	758, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1276, 0, 156, 0, 0, 0, 87, 0, 0,
	0, 0, 73, 0, 46, 45, 3278, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 74,
	0, 0, 151, 0, 0, 0, 0, 0, 4182, 0,
	0, 0, 0, 0, 0, 78, 2744, 862, 0, 0,
	0, 0, 0, 0, 0, 0, 67, 0, 0, 0,
	0, 107, 0, 48, 4269, 153, 93, 104, 0, 0,
	0, 0, 0, 0, 0, 0, 1476, 0, 0, 0,
	0, 0, 0, 47, 0, 87, 0, 0, 3992, 3992,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1216, 0, 261, 261, 0, 0,
	0, 50, 68, 0, 0, 0, 0, 0, 0, 0,
	51, 0, 0, 0, 94, 57, 0, 0, 0, 154,
	3573, 0, 0, 0, 0, 0, 0, 49, 0, 107,
	0, 0, 0, 0, 93, 104, 3352, 4334, 1216, 0,
	0, 0, 1216, 4336, 3352, 4339, 0, 1216, 0, 0,
	0, 4182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3992, 0, 0,
	0, 0, 0, 0, 52, 0, 0, 0, 1216, 3992,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 94, 0, 0, 0, 0, 0, 0, 0,
	261, 0, 0, 0, 1216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4066, 0, 0, 0, 1216, 0, 0, 0, 0, 1216,
	0, 0, 0, 0, 0, 0, 3992, 0, 261, 3992,
	0, 0, 0, 1216, 0, 0, 0, 2866, 2867, 3294,
	2869, 0, 0, 0, 0, 0, 0, 0, 97, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1476, 0, 1476, 0, 0,
	0, 0, 0, 0, 0, 0, 1205, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1216, 0, 0,
	0, 0, 0, 4436, 0, 0, 0, 0, 0, 0,
	182, 100, 0, 103, 4443, 0, 0, 1738, 1739, 0,
	1771, 1772, 1773, 1781, 1782, 1783, 0, 4202, 0, 0,
	261, 0, 256, 256, 670, 0, 97, 229, 0, 0,
	1774, 1769, 0, 0, 0, 863, 0, 0, 1741, 2744,
	148, 0, 0, 53, 0, 0, 0, 1787, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 56, 0, 0,
	261, 0, 59, 0, 0, 2992, 0, 0, 0, 0,
	0, 69, 0, 1740, 231, 0, 0, 58, 182, 100,
	0, 103, 0, 1760, 0, 54, 0, 3573, 0, 155,
	0, 0, 1757, 0, 0, 0, 55, 0, 0, 0,
	150, 0, 0, 0, 0, 229, 1476, 0, 0, 0,
	0, 0, 0, 62, 0, 186, 0, 0, 148, 0,
	0, 0, 0, 230, 1791, 1792, 0, 0, 0, 0,
	0, 0, 152, 261, 0, 223, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 0, 0, 0, 0,
	0, 0, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1571, 1763, 1764, 1765,
	1766, 0, 0, 0, 0, 4182, 0, 1746, 150, 3043,
	3044, 0, 0, 0, 0, 3050, 0, 0, 0, 0,
	0, 0, 0, 186, 0, 0, 0, 0, 0, 0,
	0, 230, 1738, 1739, 3064, 3065, 0, 0, 0, 2744,
	2460, 0, 0, 223, 1778, 0, 3992, 1788, 3992, 3072,
	0, 1476, 224, 1768, 1770, 0, 1769, 0, 0, 0,
	0, 0, 0, 1741, 0, 3086, 0, 0, 0, 0,
	1784, 0, 1785, 0, 185, 0, 0, 3, 0, 1755,
	1756, 0, 3098, 0, 0, 1216, 0, 1216, 0, 0,
	0, 0, 0, 0, 0, 1476, 0, 1776, 1740, 0,
	0, 0, 1216, 0, 0, 0, 0, 0, 1760, 0,
	0, 0, 1761, 0, 0, 0, 0, 1757, 0, 0,
	1960, 0, 0, 0, 1216, 0, 0, 0, 0, 0,
	0, 2934, 0, 0, 0, 0, 0, 0, 0, 0,
	2744, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1786, 2934, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3529, 1775, 0, 0, 0, 0, 0, 0, 0,
	0, 2587, 2587, 2587, 0, 0, 0, 0, 0, 0,
	1216, 0, 1763, 1764, 1765, 1766, 1880, 0, 0, 0,
	0, 1216, 1746, 0, 3189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1767, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1768, 1770,
	0, 0, 0, 0, 0, 0, 0, 1762, 0, 0,
	0, 0, 0, 0, 0, 1738, 1739, 0, 1771, 1772,
	1773, 1781, 1782, 1783, 1755, 1756, 0, 0, 0, 0,
	0, 0, 0, 1779, 0, 0, 0, 0, 1774, 1769,
	0, 0, 0, 0, 0, 0, 1741, 0, 0, 0,
	0, 0, 0, 0, 0, 1787, 1042, 1761, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1042, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1740, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1760, 0, 0, 0, 0, 0, 0, 0, 0,
	1757, 0, 1216, 1216, 0, 0, 0, 3313, 0, 0,
	0, 0, 1216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1777, 0, 0, 0, 0, 1752,
	1753, 1759, 1780, 1758, 1754, 0, 1751, 1749, 1750, 1742,
	1743, 1744, 1745, 1747, 1748, 0, 0, 0, 0, 2456,
	0, 0, 0, 2457, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1763, 1764, 1765, 1766, 0,
	0, 1767, 0, 0, 0, 1746, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1762, 0, 0, 0, 1216, 0, 1216, 0,
	1216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1778, 0, 0, 1788, 1216, 1216, 0, 0,
	0, 1768, 1770, 0, 0, 0, 0, 1216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1784, 1216,
	1785, 1216, 1216, 1216, 0, 0, 0, 1755, 1756, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1776, 0, 0, 1262, 0,
	1262, 1262, 0, 0, 0, 0, 0, 0, 0, 0,
	1761, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1349,
	0, 0, 1786, 0, 0, 1455, 0, 0, 1758, 1754,
	0, 1751, 1749, 1750, 1742, 1743, 1744, 1745, 1747, 1748,
	1775, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1960, 1960, 1216, 0, 0, 0, 0,
	0, 0, 0, 2367, 0, 0, 0, 0, 0, 3527,
	3528, 0, 0, 3531, 0, 0, 0, 3534, 0, 0,
	0, 0, 0, 0, 0, 0, 3538, 0, 0, 0,
	0, 0, 0, 0, 1767, 3545, 0, 0, 3189, 0,
	0, 0, 1577, 1578, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3557, 0, 1762, 0, 0, 0, 0,
	0, 1738, 1739, 0, 1771, 1772, 1773, 1781, 1782, 1783,
	0, 0, 0, 3580, 3581, 0, 3582, 3583, 3584, 0,
	0, 1779, 1216, 0, 1774, 1769, 0, 0, 0, 0,
	0, 0, 1741, 0, 3590, 0, 0, 0, 3592, 0,
	0, 1787, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1740, 0, 3620,
	3621, 0, 0, 0, 0, 0, 0, 1760, 0, 1687,
	0, 0, 0, 0, 1216, 0, 1757, 3632, 0, 0,
	0, 1216, 0, 0, 0, 0, 0, 0, 0, 0,
	1216, 0, 3641, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1216, 0, 0,
	0, 0, 1777, 0, 0, 0, 0, 1752, 1753, 1759,
	1780, 1758, 1754, 0, 1751, 1749, 1750, 1742, 1743, 1744,
	1745, 1747, 1748, 0, 0, 0, 0, 0, 0, 0,
	0, 3909, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1763, 1764, 1765, 1766, 0, 0, 0, 0, 0,
	0, 1746, 0, 0, 0, 0, 0, 0, 3687, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3709, 0, 0, 0, 0, 1778, 0,
	0, 1788, 0, 0, 0, 1738, 1739, 1768, 1770, 0,
	1216, 1216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1784, 3735, 1785, 0, 0, 1769,
	0, 0, 0, 1755, 1756, 0, 1741, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1776, 1216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1761, 0, 0, 0,
	0, 1740, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1760, 0, 0, 0, 0, 1960, 0, 0, 0,
	1757, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1786, 0,
	0, 0, 0, 1918, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1216, 0, 1775, 0, 1927, 0,
	1455, 0, 0, 0, 0, 0, 0, 0, 1216, 0,
	0, 0, 0, 1880, 3049, 0, 0, 0, 0, 0,
	0, 0, 3835, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1763, 1764, 1765, 1766, 0,
	1262, 0, 0, 0, 0, 1746, 0, 1455, 0, 0,
	0, 1216, 0, 0, 0, 0, 0, 0, 0, 0,
	1767, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1078, 109, 0,
	0, 1762, 1216, 0, 0, 0, 0, 0, 0, 0,
	0, 1768, 1770, 0, 1216, 0, 1216, 3881, 3882, 0,
	0, 0, 0, 3886, 3887, 0, 0, 1779, 3890, 3891,
	0, 1216, 0, 0, 0, 3895, 0, 1755, 1756, 0,
	0, 0, 0, 0, 0, 0, 3899, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3904, 0, 0, 0, 0, 0, 0, 0,
	1761, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 109, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1777, 0,
	0, 0, 0, 1752, 1753, 1759, 1780, 1758, 1754, 0,
	1751, 1749, 1750, 1742, 1743, 1744, 1745, 1747, 1748, 0,
	0, 0, 0, 0, 0, 0, 0, 3543, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1017, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1037, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1767, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1762, 0, 0, 0, 2186,
	0, 0, 0, 2193, 0, 0, 0, 0, 0, 1199,
	0, 0, 0, 0, 0, 2206, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2218, 0, 2218, 0, 0, 0, 0, 0, 2225,
	0, 0, 0, 0, 1738, 1739, 0, 1771, 1772, 1773,
	1781, 1782, 1783, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1774, 1769, 0,
	0, 0, 0, 0, 0, 1741, 0, 0, 0, 0,
	2193, 0, 0, 2250, 1787, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2270, 0, 0, 0, 0, 0,
	1740, 0, 0, 0, 0, 0, 0, 2283, 0, 2285,
	1760, 2287, 0, 2289, 0, 2290, 0, 0, 0, 1757,
	0, 1758, 1754, 0, 1751, 1749, 1750, 1742, 1743, 1744,
	1745, 1747, 1748, 0, 0, 1102, 0, 0, 0, 0,
	0, 4133, 4134, 4135, 1216, 1216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2312, 0, 0, 0, 0,
	1216, 0, 0, 0, 2367, 0, 0, 4144, 4145, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1216, 0,
	0, 262, 262, 262, 0, 4153, 4156, 0, 0, 0,
	1216, 0, 0, 1216, 1763, 1764, 1765, 1766, 0, 0,
	0, 0, 0, 0, 1746, 0, 0, 0, 0, 0,
	262, 1960, 0, 0, 0, 1216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 720, 0,
	1216, 1216, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 1778, 0, 0, 1788, 0, 0, 0, 703, 4203,
	1768, 1770, 0, 0, 704, 0, 0, 4209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1784, 4216, 1785,
	0, 1042, 0, 0, 0, 0, 1755, 1756, 0, 0,
	0, 1216, 0, 4224, 0, 0, 1960, 0, 0, 0,
	0, 0, 0, 705, 1776, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 706, 0, 0, 0, 0, 1761,
	0, 0, 0, 0, 0, 0, 0, 0, 1216, 0,
	0, 0, 0, 0, 0, 707, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1216, 0, 1216, 0, 0, 0, 0, 726, 0, 0,
	0, 1786, 0, 0, 0, 0, 0, 0, 1216, 0,
	0, 0, 0, 0, 0, 0, 0, 708, 0, 1216,
	0, 0, 0, 1216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2644, 0, 0, 0,
	709, 0, 0, 0, 0, 0, 1216, 0, 0, 0,
	0, 0, 0, 1216, 0, 1216, 0, 0, 0, 1216,
	0, 0, 710, 0, 0, 711, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1216, 0, 0,
	0, 735, 0, 1767, 0, 0, 0, 0, 0, 1216,
	0, 0, 0, 0, 0, 0, 0, 4344, 0, 0,
	4347, 0, 0, 0, 1762, 725, 1216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2689, 0, 0, 1262, 0, 0, 0, 1262, 0, 1262,
	1779, 1216, 1216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2206, 0, 0, 109,
	0, 0, 0, 0, 1216, 0, 0, 0, 0, 0,
	0, 1042, 1042, 0, 722, 0, 0, 0, 0, 0,
	0, 4395, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1738, 1739, 0, 0, 1216, 0, 0, 1216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1769, 0, 0, 0, 0, 0,
	0, 1741, 109, 0, 109, 2367, 109, 0, 0, 0,
	0, 1777, 0, 713, 4156, 0, 1752, 1753, 1759, 1780,
	1758, 1754, 0, 1751, 1749, 1750, 1742, 1743, 1744, 1745,
	1747, 1748, 0, 0, 1960, 1455, 1740, 0, 0, 0,
	0, 0, 733, 0, 714, 0, 1760, 0, 0, 0,
	0, 1216, 0, 0, 0, 1757, 1042, 1037, 109, 109,
	0, 0, 0, 0, 0, 0, 0, 0, 1216, 0,
	0, 109, 0, 109, 0, 0, 0, 0, 1960, 1960,
	0, 734, 0, 109, 0, 109, 0, 0, 715, 2193,
	0, 0, 730, 731, 728, 0, 0, 0, 2206, 0,
	723, 0, 0, 716, 0, 0, 0, 1960, 1960, 3042,
	0, 4512, 4512, 4512, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1763, 1764, 1765, 1766, 0, 0, 0, 0, 1960, 0,
	1746, 0, 0, 4533, 717, 0, 724, 109, 0, 2965,
	0, 0, 0, 0, 0, 718, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1216, 1216, 0, 2976, 719,
	2979, 0, 0, 0, 727, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1768, 1770, 736, 0,
	0, 0, 0, 0, 0, 0, 0, 4512, 1216, 721,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1755, 1756, 0, 0, 3004, 1455, 3006, 1455,
	0, 0, 0, 0, 0, 3012, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1017, 0, 0,
	0, 0, 0, 0, 0, 1761, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1803, 1262, 0,
	0, 0, 0, 0, 0, 0, 3040, 0, 0, 0,
	0, 0, 0, 0, 1808, 0, 0, 0, 1814, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 262,
	262, 0, 0, 262, 0, 1299, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4512, 4658,
	0, 0, 0, 0, 0, 0, 0, 4662, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 1299,
	262, 262, 0, 1299, 262, 262, 0, 0, 1299, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 1216, 0, 0, 1216, 0, 0, 1767,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1299,
	0, 0, 0, 1960, 0, 0, 0, 0, 0, 0,
	1762, 0, 0, 0, 0, 0, 0, 0, 1900, 0,
	1903, 0, 109, 0, 0, 1299, 0, 262, 262, 0,
	0, 0, 0, 0, 1216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1299, 0, 0, 1216, 0,
	1299, 262, 262, 0, 0, 0, 0, 0, 0, 1216,
	1216, 1216, 0, 0, 1299, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1216, 0, 0, 0, 0, 0, 1216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1299, 0,
	0, 1216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1960, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1758, 1754, 262, 1751,
	1749, 1750, 1742, 1743, 1744, 1745, 1747, 1748, 0, 720,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 703,
	0, 0, 0, 0, 0, 704, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1262,
	0, 0, 0, 1455, 1455, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 705, 0, 0, 0, 0, 1216,
	0, 0, 0, 0, 0, 706, 0, 1216, 0, 0,
	0, 1216, 0, 1216, 3276, 0, 0, 0, 0, 0,
	1216, 0, 0, 0, 0, 0, 707, 0, 0, 0,
	0, 1216, 1216, 0, 0, 0, 0, 0, 0, 0,
	1216, 0, 0, 0, 0, 0, 0, 0, 726, 0,
	0, 0, 0, 0, 0, 0, 0, 3330, 3332, 0,
	0, 2206, 0, 0, 0, 0, 0, 0, 708, 0,
	0, 0, 0, 0, 0, 1216, 0, 1216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 709, 0, 0, 0, 0, 0, 1216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1216, 0, 1216,
	0, 0, 1216, 710, 0, 0, 711, 0, 0, 0,
	0, 1216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 735, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1216, 1216, 0, 0, 0, 725, 0, 0, 1037,
	0, 1037, 262, 0, 0, 0, 3415, 0, 0, 0,
	3419, 1216, 0, 1299, 0, 0, 0, 262, 262, 262,
	0, 0, 0, 1216, 0, 262, 0, 0, 1216, 0,
	0, 0, 262, 0, 0, 1299, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1216, 0, 722, 0, 0, 0, 262,
	0, 0, 0, 1216, 1216, 1216, 262, 0, 0, 0,
	0, 3472, 0, 0, 0, 0, 1216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1299, 0, 0, 0, 0, 1216, 0, 0, 0,
	0, 0, 1299, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 732, 0, 713, 0, 0, 1960, 3512, 0,
	1455, 0, 0, 0, 0, 0, 1299, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1216, 0, 1216,
	0, 0, 0, 733, 0, 714, 0, 0, 1017, 0,
	0, 1017, 1017, 0, 0, 0, 3525, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 734, 0, 0, 0, 0, 0, 0, 715,
	0, 0, 0, 730, 731, 728, 1960, 0, 0, 0,
	0, 723, 0, 0, 716, 0, 2434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1037, 0, 0, 0, 0, 1216, 0, 0,
	0, 1808, 0, 0, 1216, 1808, 0, 0, 0, 1216,
	1216, 0, 0, 0, 0, 717, 0, 724, 0, 0,
	0, 0, 262, 1299, 1299, 262, 718, 0, 0, 0,
	0, 0, 0, 1299, 0, 0, 0, 0, 0, 0,
	719, 0, 0, 0, 0, 727, 0, 0, 0, 0,
	0, 0, 0, 0, 1216, 0, 0, 1216, 0, 736,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	721, 0, 0, 0, 0, 1216, 1216, 1199, 262, 0,
	0, 0, 262, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 1903, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 262, 1960, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 1299, 109, 1299,
	0, 1299, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1299, 1299, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1299, 262,
	0, 0, 262, 0, 1216, 0, 0, 0, 0, 0,
	1299, 0, 1299, 1299, 1299, 0, 1216, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 262, 0, 262, 0,
	262, 0, 262, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1216, 0, 0, 1216, 0, 0, 0,
	1216, 0, 0, 0, 262, 0, 0, 0, 0, 0,
	1216, 1216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1216, 0, 0,
	0, 0, 0, 0, 0, 0, 109, 0, 0, 2206,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2206, 0, 0, 0, 0, 0, 1299, 0, 0, 0,
	3799, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2206, 0, 0, 109, 0,
	3817, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1738, 1739, 0, 1771, 1772, 1773,
	1781, 1782, 1783, 0, 0, 0, 109, 0, 0, 109,
	0, 109, 0, 0, 0, 0, 0, 1774, 1769, 0,
	0, 0, 0, 0, 0, 1741, 0, 0, 0, 0,
	0, 0, 0, 1299, 1787, 0, 0, 3866, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 109, 0, 0, 109, 0,
	1740, 0, 0, 0, 109, 0, 0, 0, 0, 0,
	1760, 0, 0, 0, 0, 0, 0, 0, 0, 1757,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1299, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 0, 0, 1299, 0,
	0, 0, 0, 0, 109, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1763, 1764, 1765, 1766, 0, 0,
	0, 0, 0, 0, 1746, 0, 0, 0, 0, 0,
	0, 0, 0, 1216, 0, 1216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1778, 0, 0, 1788, 0, 0, 0, 0, 262,
	1768, 1770, 262, 0, 0, 0, 262, 0, 262, 0,
	0, 0, 0, 0, 0, 262, 262, 1784, 0, 1785,
	0, 1299, 1299, 0, 0, 262, 1755, 1756, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2434, 1776, 0, 1738, 1739, 0, 1771,
	1772, 1773, 1781, 1782, 1783, 0, 4007, 0, 0, 1761,
	0, 0, 1089, 1299, 1808, 0, 0, 0, 0, 1774,
	1769, 0, 2206, 0, 0, 0, 0, 1741, 0, 0,
	0, 262, 0, 0, 0, 0, 1787, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 0, 0, 0, 0,
	0, 1786, 0, 0, 0, 0, 0, 262, 260, 260,
	260, 0, 1740, 0, 0, 0, 0, 0, 0, 1775,
	0, 0, 1760, 0, 0, 0, 0, 0, 0, 0,
	0, 1757, 0, 0, 262, 1299, 2206, 796, 0, 0,
	0, 0, 0, 0, 0, 0, 4088, 0, 0, 1299,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 0, 796, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1767, 0, 0, 0, 0, 262, 0,
	262, 0, 1299, 0, 0, 0, 0, 262, 0, 0,
	0, 0, 0, 0, 1762, 0, 1763, 1764, 1765, 1766,
	0, 0, 0, 0, 0, 0, 1746, 0, 0, 0,
	0, 0, 0, 1299, 0, 0, 0, 1199, 0, 0,
	1779, 0, 0, 0, 0, 1299, 0, 1299, 0, 0,
	0, 0, 0, 1199, 0, 0, 0, 0, 262, 0,
	0, 0, 1299, 1778, 0, 0, 1788, 0, 0, 0,
	0, 0, 1768, 1770, 0, 0, 0, 262, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 1784,
	0, 1785, 0, 0, 0, 0, 0, 0, 1755, 1756,
	0, 0, 0, 0, 1212, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1776, 0, 0, 0,
	4191, 0, 0, 0, 0, 262, 262, 262, 262, 0,
	0, 1761, 0, 0, 262, 0, 262, 0, 0, 0,
	0, 1777, 0, 0, 0, 0, 1752, 1753, 1759, 1780,
	1758, 1754, 0, 1751, 1749, 1750, 1742, 1743, 1744, 1745,
	1747, 1748, 0, 0, 0, 0, 0, 262, 0, 0,
	3110, 0, 0, 1786, 0, 262, 0, 2206, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1775, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 109, 109, 0, 0, 109, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 109, 109, 0, 0, 109,
	0, 0, 0, 0, 0, 1767, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4310, 1455, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1762, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1779, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1199,
	0, 0, 1037, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 109, 109, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1777, 0, 0, 1299, 4400, 1752, 1753,
	1759, 1780, 1758, 1754, 0, 1751, 1749, 1750, 1742, 1743,
	1744, 1745, 1747, 1748, 0, 0, 0, 0, 0, 0,
	0, 0, 3109, 0, 0, 0, 0, 0, 0, 1299,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1299, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1299, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1299, 1299, 0, 0, 0, 0, 0, 262, 4453,
	0, 0, 262, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 4489,
	0, 0, 1299, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1738,
	1739, 0, 1771, 1772, 1773, 1781, 1782, 1783, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 262, 0, 1299,
	262, 0, 1774, 1769, 0, 0, 0, 262, 0, 0,
	1741, 0, 0, 0, 260, 0, 260, 260, 0, 1787,
	260, 1299, 262, 1299, 0, 0, 0, 0, 0, 0,
	109, 0, 4549, 0, 0, 0, 0, 0, 0, 1299,
	0, 0, 0, 0, 0, 1740, 0, 0, 1199, 1199,
	1299, 0, 0, 0, 1299, 1760, 0, 0, 0, 0,
	0, 0, 0, 0, 1757, 260, 0, 260, 260, 0,
	0, 260, 260, 0, 0, 0, 0, 1299, 0, 0,
	0, 0, 0, 262, 1299, 796, 1299, 0, 0, 0,
	1299, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 262, 0, 0, 1299, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1299, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	0, 0, 0, 0, 260, 260, 0, 0, 0, 1763,
	1764, 1765, 1766, 0, 0, 0, 0, 0, 0, 1746,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 260,
	0, 0, 1299, 1299, 0, 0, 0, 0, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1299, 1778, 0, 0, 1788,
	0, 0, 0, 0, 0, 1768, 1770, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1738, 1739, 1784, 0, 1785, 0, 1781, 1782, 1783, 0,
	0, 1755, 1756, 0, 0, 1299, 0, 262, 1299, 262,
	0, 0, 0, 0, 1769, 0, 0, 0, 0, 1776,
	0, 1741, 0, 0, 0, 0, 0, 0, 0, 0,
	1787, 0, 0, 0, 1761, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 1740, 0, 0, 0,
	0, 0, 0, 0, 266, 109, 1760, 0, 0, 0,
	0, 0, 0, 0, 0, 1757, 1786, 0, 0, 0,
	0, 0, 1299, 0, 0, 0, 0, 0, 0, 0,
	0, 1199, 0, 0, 1775, 0, 0, 0, 0, 1299,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 109, 0, 0, 0, 788,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1763, 1764, 1765, 1766, 0, 0, 0, 0, 1767, 0,
	1746, 0, 0, 0, 0, 788, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1762,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1778, 0, 0,
	1788, 0, 0, 0, 0, 1779, 1768, 1770, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1299,
	0, 0, 1755, 1756, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1776, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1761, 109, 0, 0, 0,
	0, 0, 1199, 1902, 0, 1212, 0, 0, 0, 260,
	1199, 0, 0, 1094, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 1902, 260, 0, 0, 0,
	0, 0, 796, 0, 0, 0, 1777, 0, 0, 796,
	0, 1752, 1753, 1759, 1780, 1758, 1754, 0, 1751, 1749,
	1750, 1742, 1743, 1744, 1745, 1747, 1748, 0, 0, 0,
	0, 0, 0, 0, 0, 3106, 260, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1767,
	0, 0, 0, 0, 1299, 0, 0, 1299, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	1762, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	0, 0, 0, 109, 262, 0, 1779, 0, 0, 262,
	0, 0, 0, 0, 0, 1299, 109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 109,
	1299, 1299, 1299, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1299, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1299, 0, 0, 0, 262, 0, 1299, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1299, 0, 0, 0, 0, 1777, 0, 260,
	0, 0, 796, 0, 0, 1780, 1758, 1754, 0, 1751,
	1749, 1750, 1742, 1743, 1744, 1745, 1747, 1748, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 260,
	0, 0, 0, 0, 0, 260, 0, 0, 1738, 1739,
	0, 1771, 1772, 1773, 1781, 1782, 1783, 0, 0, 0,
	0, 0, 1299, 0, 1299, 0, 0, 0, 0, 0,
	0, 1774, 1769, 0, 0, 0, 0, 0, 0, 1741,
	0, 0, 1299, 1299, 0, 0, 260, 0, 1787, 260,
	0, 1299, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 1740, 0, 0, 0, 0, 0,
	0, 0, 796, 260, 1760, 260, 0, 260, 0, 260,
	0, 260, 0, 1757, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 0, 0, 1299, 0,
	2434, 0, 0, 0, 0, 0, 0, 0, 1299, 0,
	1299, 262, 0, 1299, 262, 0, 0, 0, 0, 0,
	0, 260, 1299, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1299, 1299, 1297, 0, 0, 0, 1763, 1764,
	1765, 1766, 0, 0, 0, 0, 0, 0, 1746, 0,
	0, 0, 1299, 0, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 1299, 262, 0, 0, 0, 1299,
	0, 0, 0, 0, 0, 0, 0, 0, 1355, 0,
	0, 0, 1355, 0, 0, 1778, 0, 1297, 1788, 0,
	0, 0, 0, 0, 1768, 1770, 0, 0, 0, 0,
	0, 0, 0, 0, 1299, 1299, 1299, 0, 0, 0,
	0, 1784, 0, 1785, 0, 0, 0, 1299, 1297, 109,
	1755, 1756, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1776, 0,
	0, 0, 0, 109, 1297, 0, 0, 1299, 0, 0,
	0, 0, 0, 1761, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1297, 0, 0, 0, 0, 1297,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1297, 0, 0, 0, 0, 1299, 0,
	1299, 0, 0, 0, 0, 1786, 0, 0, 0, 0,
	0, 0, 1212, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1775, 0, 0, 0, 0, 1212, 0,
	1299, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	0, 0, 260, 0, 0, 0, 0, 1297, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 1298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 109, 0,
	0, 0, 0, 0, 109, 0, 0, 1767, 1299, 0,
	0, 0, 0, 0, 0, 1299, 262, 0, 0, 0,
	1299, 1299, 0, 0, 0, 0, 260, 1356, 1762, 0,
	0, 1356, 0, 0, 0, 0, 1298, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 260,
	0, 0, 0, 260, 1779, 260, 0, 0, 0, 0,
	0, 0, 260, 260, 0, 1299, 0, 1298, 1299, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 262, 0, 0, 0, 0,
	0, 0, 0, 1298, 0, 0, 0, 0, 1298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 1298, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 1777, 0, 0, 0, 0,
	1752, 1753, 1759, 1780, 1758, 1754, 0, 1751, 1749, 1750,
	1742, 1743, 1744, 1745, 1747, 1748, 0, 0, 0, 0,
	0, 260, 0, 0, 3105, 0, 1298, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 796, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1738, 1739, 0, 1771, 1772,
	1773, 1781, 1782, 1783, 0, 260, 0, 796, 0, 0,
	0, 0, 0, 0, 260, 0, 262, 0, 1774, 1769,
	0, 1299, 1355, 0, 0, 0, 1741, 0, 0, 0,
	0, 1299, 1299, 0, 788, 1787, 0, 0, 0, 0,
	0, 788, 0, 0, 1297, 0, 0, 0, 1299, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1740, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 1760, 0, 0, 0, 0, 0, 0, 0, 0,
	1757, 0, 0, 0, 260, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	1297, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1297, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 260, 260, 260, 0, 0, 0, 0,
	0, 260, 0, 260, 0, 1355, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 1763, 1764, 1765, 1766, 0,
	0, 0, 0, 0, 0, 1746, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1778, 0, 0, 1788, 0, 0, 0, 0,
	0, 1768, 1770, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 1784, 0,
	1785, 0, 0, 0, 0, 0, 0, 1755, 1756, 0,
	0, 1356, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1776, 0, 0, 0, 0,
	0, 0, 0, 1298, 0, 0, 0, 0, 0, 0,
	1761, 0, 1297, 1297, 0, 0, 0, 0, 0, 0,
	0, 0, 1355, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1786, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1298,
	1775, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1297, 0, 1297, 0,
	1297, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1767, 0, 1297, 1297, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1297, 0, 0,
	0, 0, 1212, 0, 0, 1762, 0, 0, 0, 1297,
	0, 1297, 1297, 1297, 0, 0, 0, 0, 1212, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1779, 0, 0, 788, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1902, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1298, 1298, 0, 0, 0, 0, 0, 0, 0,
	0, 1356, 0, 0, 0, 260, 0, 0, 0, 260,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 1777, 0, 0, 1355, 0, 1752, 1753, 1759,
	1780, 1758, 1754, 0, 1751, 1749, 1750, 1742, 1743, 1744,
	1745, 1747, 1748, 0, 0, 0, 0, 0, 0, 0,
	0, 3104, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 260, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 1902, 1298, 0, 1298, 0, 1298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 1298, 1298, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1298, 0, 0, 0,
	0, 0, 1355, 0, 0, 0, 0, 0, 1298, 0,
	1298, 1298, 1298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 796, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 260, 0, 0, 0,
	0, 1355, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1212, 0, 0, 1355, 0, 0,
	0, 0, 0, 0, 0, 1738, 1739, 0, 1771, 1772,
	1773, 1781, 1782, 1783, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 1774, 1769,
	0, 0, 0, 0, 1356, 0, 1741, 0, 0, 0,
	0, 0, 0, 1738, 1739, 1787, 1771, 1772, 1773, 1781,
	1782, 1783, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1774, 1769, 0, 0,
	0, 1740, 0, 0, 1741, 0, 0, 0, 0, 0,
	0, 1760, 0, 1787, 260, 0, 260, 0, 0, 0,
	1757, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1297, 1297, 0, 0, 0, 0, 0, 0, 0, 1740,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1760,
	0, 1356, 260, 0, 0, 0, 0, 0, 1757, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1355, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1763, 1764, 1765, 1766, 0,
	0, 0, 0, 0, 0, 1746, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1763, 1764, 1765, 1766, 0, 0, 0,
	0, 0, 1778, 1746, 1355, 1788, 1356, 0, 0, 0,
	0, 1768, 1770, 0, 0, 0, 0, 0, 1297, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1784, 0,
	1785, 0, 0, 0, 0, 0, 0, 1755, 1756, 0,
	1778, 0, 0, 1788, 0, 0, 0, 0, 0, 1768,
	1770, 0, 0, 0, 0, 1776, 0, 0, 0, 788,
	0, 1297, 0, 1212, 1212, 0, 1784, 0, 1785, 0,
	1761, 0, 0, 0, 0, 1755, 1756, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1297, 1776, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1297, 0, 1297, 0, 1761, 1298,
	1298, 0, 1786, 0, 0, 0, 0, 0, 0, 0,
	0, 1297, 0, 0, 0, 0, 0, 0, 0, 0,
	1775, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1786, 1356, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1775, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1767, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1762, 0, 0, 0, 0,
	0, 0, 0, 1356, 0, 0, 0, 0, 0, 0,
	0, 0, 1767, 0, 0, 0, 0, 1298, 0, 0,
	0, 1779, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 1738, 1739, 1762, 1771, 1772, 1773, 1781, 1782, 1783,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 1774, 1769, 260, 0, 0, 1779,
	1298, 0, 1741, 0, 0, 0, 260, 0, 0, 0,
	0, 1787, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 1298, 0, 0, 0, 0, 0, 1740, 0, 0,
	0, 0, 0, 1298, 0, 1298, 1212, 1760, 0, 0,
	0, 0, 0, 0, 0, 0, 1757, 0, 0, 0,
	1298, 0, 1777, 0, 0, 0, 0, 1752, 1753, 1759,
	1780, 1758, 1754, 0, 1751, 1749, 1750, 1742, 1743, 1744,
	1745, 1747, 1748, 0, 0, 0, 0, 0, 0, 0,
	0, 2457, 0, 260, 0, 0, 0, 0, 0, 0,
	1777, 0, 0, 0, 0, 1752, 1753, 1759, 1780, 1758,
	1754, 0, 1751, 1749, 1750, 1742, 1743, 1744, 1745, 1747,
	1748, 0, 0, 0, 0, 4444, 0, 0, 0, 0,
	0, 1763, 1764, 1765, 1766, 0, 0, 0, 0, 0,
	0, 1746, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1778, 0,
	0, 1788, 0, 0, 0, 1355, 0, 1768, 1770, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1784, 0, 1785, 0, 0, 0,
	0, 0, 0, 1755, 1756, 0, 0, 0, 1355, 0,
	0, 0, 0, 0, 0, 0, 0, 1212, 0, 0,
	0, 1776, 0, 1355, 0, 1212, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1761, 0, 1902, 0,
	0, 0, 0, 0, 0, 1355, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1297, 1297, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1786, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1902, 0, 1902, 1775, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1297, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1297, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1767, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1297, 0, 1297, 0, 0, 0, 0, 0, 0, 0,
	0, 1762, 0, 0, 0, 0, 0, 0, 1355, 0,
	0, 0, 260, 0, 1356, 0, 0, 0, 0, 1297,
	0, 0, 260, 1297, 0, 0, 0, 1779, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1297, 1356, 0, 0,
	0, 1902, 0, 1297, 0, 1297, 0, 0, 0, 1355,
	0, 0, 1356, 0, 0, 0, 788, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1297, 0, 0,
	0, 0, 0, 0, 1356, 0, 0, 0, 0, 1297,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1298,
	1298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1777, 0,
	0, 1297, 1297, 1752, 1753, 1759, 1780, 1758, 1754, 0,
	1751, 1749, 1750, 1742, 1743, 1744, 1745, 1747, 1748, 0,
	1298, 0, 0, 4440, 1297, 0, 0, 0, 814, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 816, 0,
	0, 0, 0, 0, 817, 0, 260, 1298, 0, 0,
	0, 0, 0, 0, 1355, 0, 0, 1355, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1298,
	0, 1298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 818, 0, 835, 0, 1356, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1298, 0,
	0, 0, 1298, 260, 0, 0, 0, 0, 0, 0,
	819, 0, 0, 0, 0, 820, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1298, 0, 0, 0, 0,
	0, 1355, 1298, 0, 1298, 0, 0, 844, 1356, 0,
	0, 0, 0, 821, 0, 0, 0, 0, 1355, 0,
	0, 0, 0, 0, 0, 0, 1298, 842, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1298, 0,
	0, 0, 0, 1902, 1902, 0, 0, 0, 0, 0,
	815, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 822, 0, 0, 823, 0, 0, 0, 0,
	1298, 1298, 0, 0, 0, 0, 846, 0, 0, 0,
	0, 735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1902, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1356, 1902, 0, 1356, 0, 1355, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 845, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 840, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1902, 0, 260, 1902, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 824, 0, 0, 0, 0, 1356, 0, 0,
	0, 0, 0, 826, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 827, 0, 0, 0, 1738, 1739,
	0, 1771, 1772, 1773, 1781, 1782, 1783, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	836, 1774, 1769, 0, 0, 0, 0, 0, 0, 1741,
	0, 734, 0, 1297, 0, 0, 1297, 0, 1787, 0,
	0, 0, 813, 0, 837, 0, 0, 0, 0, 0,
	0, 0, 0, 828, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 1740, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1760, 0, 0, 834, 0, 0,
	0, 0, 0, 1757, 1297, 0, 0, 1356, 0, 0,
	0, 0, 0, 0, 829, 0, 0, 0, 830, 849,
	0, 848, 0, 0, 0, 831, 0, 0, 0, 1297,
	1297, 1297, 0, 0, 0, 0, 0, 0, 0, 832,
	0, 0, 0, 0, 841, 0, 1297, 0, 260, 0,
	850, 0, 847, 0, 0, 0, 0, 0, 736, 0,
	0, 1297, 0, 0, 0, 0, 0, 1355, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1763, 1764,
	1765, 1766, 0, 0, 0, 0, 0, 0, 1746, 0,
	0, 1355, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1738, 1739, 0, 1771, 1772,
	1773, 1781, 1782, 1783, 0, 1778, 0, 0, 1788, 0,
	0, 1902, 0, 1902, 1768, 1770, 0, 0, 0, 1769,
	0, 0, 0, 0, 0, 0, 1741, 0, 0, 0,
	0, 1784, 0, 1785, 0, 1787, 0, 0, 0, 0,
	1755, 1756, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1298, 0, 0, 1298, 0, 0, 1776, 0,
	0, 1740, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1760, 0, 1761, 0, 0, 0, 0, 0, 0,
	1757, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1355, 0, 1355, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1298, 0, 0, 0, 0, 0, 0,
	0, 1297, 1297, 0, 0, 1786, 0, 0, 0, 0,
	1355, 0, 0, 0, 0, 0, 0, 0, 1298, 1298,
	1298, 0, 0, 1775, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1763, 1764, 1765, 1766, 0,
	1298, 0, 0, 0, 0, 1746, 1356, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1297, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1355, 0, 1297,
	1356, 0, 1297, 0, 0, 0, 0, 1767, 0, 0,
	0, 1355, 1778, 0, 0, 1788, 0, 0, 0, 0,
	0, 1768, 1770, 0, 0, 0, 0, 0, 1762, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1297, 1297, 0, 0, 0, 0, 1755, 1756, 0,
	0, 0, 0, 0, 1779, 0, 0, 0, 0, 0,
	0, 1297, 0, 0, 0, 1776, 0, 0, 0, 0,
	0, 0, 0, 1355, 0, 0, 0, 0, 1297, 0,
	1761, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1297, 1297, 1297, 0, 0, 0, 0,
	1356, 0, 1356, 0, 0, 0, 1355, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1298, 1298, 0, 0, 0, 0, 0, 0, 0, 1356,
	0, 0, 0, 0, 0, 1777, 1355, 0, 0, 0,
	1752, 1753, 1759, 1780, 1758, 1754, 0, 1751, 1749, 1750,
	1742, 1743, 1744, 1745, 1747, 1748, 0, 0, 0, 0,
	4359, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 926, 0, 972, 0, 0, 1355, 0, 1297,
	0, 0, 0, 0, 1767, 0, 1298, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1356, 0, 1298, 934,
	0, 1298, 0, 0, 0, 1762, 0, 0, 0, 1355,
	1356, 0, 0, 0, 0, 948, 0, 932, 931, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1779, 0, 0, 0, 0, 0, 0, 0, 0,
	1298, 1298, 0, 0, 0, 933, 0, 0, 0, 0,
	936, 0, 0, 0, 0, 980, 0, 0, 0, 0,
	1298, 0, 0, 0, 945, 946, 0, 1355, 0, 0,
	0, 0, 1356, 962, 1297, 0, 0, 1298, 0, 1297,
	1297, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 973, 938, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1298, 1298, 1298, 0, 0, 0, 0, 939,
	0, 0, 0, 0, 1355, 1356, 0, 1297, 971, 0,
	0, 0, 1777, 0, 0, 0, 0, 1752, 1753, 1759,
	1780, 1758, 1754, 0, 1751, 1749, 1750, 1742, 1743, 1744,
	1745, 1747, 1748, 0, 0, 1356, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 941, 0, 0, 0, 0, 0, 0,
	0, 930, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1356, 0, 1298, 942,
	943, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 950, 949,
	0, 0, 0, 0, 0, 0, 944, 0, 1356, 0,
	959, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 977, 970,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	974, 0, 0, 0, 0, 0, 1356, 0, 0, 0,
	0, 0, 0, 1298, 0, 0, 0, 0, 1298, 1298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1297, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1297, 1297, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 937, 0, 0, 979, 0, 1297, 0, 0,
	0, 0, 0, 1356, 0, 0, 1298, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 935, 0, 0,
	0, 966, 967, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 969, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 964, 0, 0, 0,
	0, 0, 0, 978, 960, 0, 953, 951, 0, 956,
	0, 0, 0, 0, 0, 957, 0, 0, 928, 0,
	975, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 929, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 968, 0, 958, 0, 0, 0, 0,
	0, 955, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 976, 0, 0, 0, 0, 0, 0, 0,
	961, 0, 0, 0, 0, 0, 0, 0, 0, 940,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 963, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1353, 0, 965, 0, 1298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1298,
	1298, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	1358, 278, 279, 1359, 1360, 1361, 1298, 1362, 616, 1363,
	1364, 1365, 1366, 280, 281, 1156, 282, 283, 284, 285,
	286, 287, 617, 618, 0, 288, 619, 289, 620, 1367,
	621, 290, 291, 292, 293, 294, 295, 1368, 1369, 0,
	296, 622, 623, 624, 1370, 297, 298, 625, 1371, 1300,
	1372, 299, 300, 301, 302, 303, 304, 305, 0, 1373,
	307, 308, 309, 306, 310, 1374, 311, 0, 312, 313,
	314, 315, 316, 317, 1375, 318, 319, 320, 1157, 321,
	322, 323, 1376, 1377, 1379, 1378, 1380, 1381, 1382, 324,
	325, 326, 327, 328, 0, 329, 626, 627, 1383, 333,
	330, 331, 1384, 334, 332, 335, 1385, 336, 337, 338,
	1386, 1387, 339, 340, 341, 1388, 342, 343, 1389, 344,
	345, 346, 1390, 347, 348, 628, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 629, 630, 360, 1391,
	267, 1392, 0, 0, 0, 0, 361, 362, 363, 631,
	0, 0, 0, 364, 1393, 365, 366, 1394, 1395, 1158,
	367, 368, 632, 633, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 1396, 378, 634, 1397, 635, 379, 1398,
	380, 381, 382, 383, 384, 636, 637, 638, 461, 1160,
	385, 386, 1399, 387, 388, 389, 390, 0, 0, 0,
	268, 391, 392, 393, 395, 1400, 1159, 394, 639, 640,
	1401, 641, 1402, 396, 397, 1161, 642, 1162, 398, 399,
	400, 1163, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 1403, 408, 410, 409, 1404, 411, 643, 1164,
	412, 413, 1165, 1405, 414, 0, 0, 0, 415, 416,
	419, 1406, 1407, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 1166, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 1167, 448, 1408, 269, 1168,
	458, 459, 1409, 644, 460, 645, 462, 463, 1410, 0,
	464, 0, 1411, 1412, 466, 467, 468, 1413, 1414, 469,
	470, 646, 1169, 471, 1170, 647, 472, 473, 465, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 1415, 483,
	484, 648, 485, 486, 487, 649, 488, 489, 490, 650,
	491, 651, 492, 493, 1416, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 652, 503, 505, 504, 506,
	1417, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 1418, 521, 522, 523, 1171, 524, 525, 526, 527,
	653, 528, 0, 529, 530, 536, 537, 531, 532, 538,
	539, 540, 541, 542, 1419, 544, 545, 543, 546, 547,
	548, 1420, 549, 550, 533, 534, 551, 552, 1172, 553,
	554, 555, 556, 557, 558, 654, 0, 559, 1421, 560,
	561, 562, 564, 535, 565, 570, 571, 655, 566, 567,
	568, 569, 656, 573, 574, 1422, 575, 576, 0, 572,
	563, 1423, 577, 578, 579, 580, 581, 582, 583, 354,
	584, 1424, 585, 657, 658, 659, 660, 1425, 594, 1426,
	586, 587, 588, 661, 589, 662, 1427, 590, 591, 592,
	593, 0, 595, 596, 1428, 1429, 597, 598, 599, 601,
	602, 600, 603, 1430, 604, 1431, 0, 605, 606, 607,
	663, 664, 665, 1432, 609, 608, 610, 666, 1433, 1434,
	1435, 1436, 1437, 611, 612, 667, 613, 614, 615, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1353, 0, 0, 0, 0, 0, 0,
	0, 2622, 0, 0, 0, 0, 0, 0, 0, 2623,
	270, 272, 271, 273, 274, 275, 276, 277, 1358, 278,
	279, 1359, 1360, 1361, 0, 1362, 616, 1363, 1364, 1365,
	1366, 280, 281, 1156, 282, 283, 284, 285, 286, 287,
	617, 618, 0, 288, 619, 289, 620, 1367, 621, 290,
	291, 292, 293, 294, 295, 1368, 1369, 0, 296, 622,
	623, 624, 1370, 297, 298, 625, 1371, 1300, 1372, 299,
	300, 301, 302, 303, 304, 305, 0, 1373, 307, 308,
	309, 306, 310, 1374, 311, 0, 312, 313, 314, 315,
	316, 317, 1375, 318, 319, 320, 1157, 321, 322, 323,
	1376, 1377, 1379, 1378, 1380, 1381, 1382, 324, 325, 326,
	327, 328, 0, 329, 626, 627, 1383, 333, 330, 331,
	1384, 334, 332, 335, 1385, 336, 337, 338, 1386, 1387,
	339, 340, 341, 1388, 342, 343, 1389, 344, 345, 346,
	1390, 347, 348, 628, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 629, 630, 360, 1391, 267, 1392,
	0, 0, 0, 0, 361, 362, 363, 631, 0, 0,
	0, 364, 1393, 365, 366, 1394, 1395, 1158, 367, 368,
	632, 633, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 1396, 378, 634, 1397, 635, 379, 1398, 380, 381,
	382, 383, 384, 636, 637, 638, 461, 1160, 385, 386,
	1399, 387, 388, 389, 390, 0, 0, 0, 268, 391,
	392, 393, 395, 1400, 1159, 394, 639, 640, 1401, 641,
	1402, 396, 397, 1161, 642, 1162, 398, 399, 400, 1163,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	1403, 408, 410, 409, 1404, 411, 643, 1164, 412, 413,
	1165, 1405, 414, 0, 0, 0, 415, 416, 419, 1406,
	1407, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	1166, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 1167, 448, 1408, 269, 1168, 458, 459,
	1409, 644, 460, 645, 462, 463, 1410, 0, 464, 0,
	1411, 1412, 466, 467, 468, 1413, 1414, 469, 470, 646,
	1169, 471, 1170, 647, 472, 473, 465, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 1415, 483, 484, 648,
	485, 486, 487, 649, 488, 489, 490, 650, 491, 651,
	492, 493, 1416, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 652, 503, 505, 504, 506, 1417, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 1418,
	521, 522, 523, 1171, 524, 525, 526, 527, 653, 528,
	0, 529, 530, 536, 537, 531, 532, 538, 539, 540,
	541, 542, 1419, 544, 545, 543, 546, 547, 548, 1420,
	549, 550, 533, 534, 551, 552, 1172, 553, 554, 555,
	556, 557, 558, 654, 0, 559, 1421, 560, 561, 562,
	564, 535, 565, 570, 571, 655, 566, 567, 568, 569,
	656, 573, 574, 1422, 575, 576, 0, 572, 563, 1423,
	577, 578, 579, 580, 581, 582, 583, 354, 584, 1424,
	585, 657, 658, 659, 660, 1425, 594, 1426, 586, 587,
	588, 661, 589, 662, 1427, 590, 591, 592, 593, 0,
	595, 596, 1428, 1429, 597, 598, 599, 601, 602, 600,
	603, 1430, 604, 1431, 0, 605, 606, 607, 663, 664,
	665, 1432, 609, 608, 610, 666, 1433, 1434, 1435, 1436,
	1437, 611, 612, 667, 613, 614, 615, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1353,
	0, 0, 0, 0, 3551, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3553, 270, 272, 271, 273,
	274, 275, 276, 277, 1358, 278, 279, 1359, 1360, 1361,
	0, 1362, 616, 1363, 1364, 1365, 1366, 280, 281, 1156,
	282, 283, 284, 285, 286, 287, 617, 618, 0, 288,
	619, 289, 620, 1367, 621, 290, 291, 292, 293, 294,
	295, 1368, 1369, 0, 296, 622, 623, 624, 1370, 297,
	298, 625, 1371, 1300, 1372, 299, 300, 301, 302, 303,
	304, 305, 0, 1373, 307, 308, 309, 306, 310, 1374,
	311, 0, 312, 313, 314, 315, 316, 317, 1375, 318,
	319, 320, 1157, 321, 322, 323, 1376, 1377, 1379, 1378,
	1380, 1381, 1382, 324, 325, 326, 327, 328, 0, 329,
	626, 627, 1383, 333, 330, 331, 1384, 334, 332, 335,
	1385, 336, 337, 338, 1386, 1387, 339, 340, 341, 1388,
	342, 343, 1389, 344, 345, 346, 1390, 347, 348, 628,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	629, 630, 360, 1391, 267, 1392, 0, 0, 0, 0,
	361, 362, 363, 631, 0, 0, 0, 364, 1393, 365,
	366, 1394, 1395, 1158, 367, 368, 632, 633, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 1396, 378, 634,
	1397, 635, 379, 1398, 380, 381, 382, 383, 384, 636,
	637, 638, 461, 1160, 385, 386, 1399, 387, 388, 389,
	390, 0, 0, 0, 268, 391, 392, 393, 395, 1400,
	1159, 394, 639, 640, 1401, 641, 1402, 396, 397, 1161,
	642, 1162, 398, 399, 400, 1163, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 1403, 408, 410, 409,
	1404, 411, 643, 1164, 412, 413, 1165, 1405, 414, 0,
	0, 0, 415, 416, 419, 1406, 1407, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 1166, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 1167,
	448, 1408, 269, 1168, 458, 459, 1409, 644, 460, 645,
	462, 463, 1410, 0, 464, 0, 1411, 1412, 466, 467,
	468, 1413, 1414, 469, 470, 646, 1169, 471, 1170, 647,
	472, 473, 465, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 1415, 483, 484, 648, 485, 486, 487, 649,
	488, 489, 490, 650, 491, 651, 492, 493, 1416, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 652,
	503, 505, 504, 506, 1417, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 1418, 521, 522, 523, 1171,
	524, 525, 526, 527, 653, 528, 0, 529, 530, 536,
	537, 531, 532, 538, 539, 540, 541, 542, 1419, 544,
	545, 543, 546, 547, 548, 1420, 549, 550, 533, 534,
	551, 552, 1172, 553, 554, 555, 556, 557, 558, 654,
	0, 559, 1421, 560, 561, 562, 564, 535, 565, 570,
	571, 655, 566, 567, 568, 569, 656, 573, 574, 1422,
	575, 576, 0, 572, 563, 1423, 577, 578, 579, 580,
	581, 582, 583, 354, 584, 1424, 585, 657, 658, 659,
	660, 1425, 594, 1426, 586, 587, 588, 661, 589, 662,
	1427, 590, 591, 592, 593, 0, 595, 596, 1428, 1429,
	597, 598, 599, 601, 602, 600, 603, 1430, 604, 1431,
	0, 605, 606, 607, 663, 664, 665, 1432, 609, 608,
	610, 666, 1433, 1434, 1435, 1436, 1437, 611, 612, 667,
	613, 614, 615, 0, 0, 0, 0, 0, 0, 1353,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3937, 270, 272, 271, 273,
	274, 275, 276, 277, 1358, 278, 279, 1359, 1360, 1361,
	0, 1362, 616, 1363, 1364, 1365, 1366, 280, 281, 1156,
	282, 283, 284, 285, 286, 287, 617, 618, 0, 288,
	619, 289, 620, 1367, 621, 290, 291, 292, 293, 294,
	295, 1368, 1369, 0, 296, 622, 623, 624, 1370, 297,
	298, 625, 1371, 1300, 1372, 299, 300, 301, 302, 303,
	304, 305, 0, 1373, 307, 308, 309, 306, 310, 1374,
	311, 0, 312, 313, 314, 315, 316, 317, 1375, 318,
	319, 320, 1157, 321, 322, 323, 1376, 1377, 1379, 1378,
	1380, 1381, 1382, 324, 325, 326, 327, 328, 0, 329,
	626, 627, 1383, 333, 330, 331, 1384, 334, 332, 335,
	1385, 336, 337, 338, 1386, 1387, 339, 340, 341, 1388,
	342, 343, 1389, 344, 345, 346, 1390, 347, 348, 628,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	629, 630, 360, 1391, 267, 1392, 0, 0, 0, 0,
	361, 362, 363, 631, 0, 0, 0, 364, 1393, 365,
	366, 1394, 1395, 1158, 367, 368, 632, 633, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 1396, 378, 634,
	1397, 635, 379, 1398, 380, 381, 382, 383, 384, 636,
	637, 638, 461, 1160, 385, 386, 1399, 387, 388, 389,
	390, 0, 0, 0, 268, 391, 392, 393, 395, 1400,
	1159, 394, 639, 640, 1401, 641, 1402, 396, 397, 1161,
	642, 1162, 398, 399, 400, 1163, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 1403, 408, 410, 409,
	1404, 411, 643, 1164, 412, 413, 1165, 1405, 414, 0,
	0, 0, 415, 416, 419, 1406, 1407, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 1166, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 1167,
	448, 1408, 269, 1168, 458, 459, 1409, 644, 460, 645,
	462, 463, 1410, 0, 464, 0, 1411, 1412, 466, 467,
	468, 1413, 1414, 469, 470, 646, 1169, 471, 1170, 647,
	472, 473, 465, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 1415, 483, 484, 648, 485, 486, 487, 649,
	488, 489, 490, 650, 491, 651, 492, 493, 1416, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 652,
	503, 505, 504, 506, 1417, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 1418, 521, 522, 523, 1171,
	524, 525, 526, 527, 653, 528, 0, 529, 530, 536,
	537, 531, 532, 538, 539, 540, 541, 542, 1419, 544,
	545, 543, 546, 547, 548, 1420, 549, 550, 533, 534,
	551, 552, 1172, 553, 554, 555, 556, 557, 558, 654,
	0, 559, 1421, 560, 561, 562, 564, 535, 565, 570,
	571, 655, 566, 567, 568, 569, 656, 573, 574, 1422,
	575, 576, 0, 572, 563, 1423, 577, 578, 579, 580,
	581, 582, 583, 354, 584, 1424, 585, 657, 658, 659,
	660, 1425, 594, 1426, 586, 587, 588, 661, 589, 662,
	1427, 590, 591, 592, 593, 0, 595, 596, 1428, 1429,
	597, 598, 599, 601, 602, 600, 603, 1430, 604, 1431,
	0, 605, 606, 607, 663, 664, 665, 1432, 609, 608,
	610, 666, 1433, 1434, 1435, 1436, 1437, 611, 612, 667,
	613, 614, 615, 0, 1353, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4139, 270, 272, 271, 273, 274, 275, 276, 277, 1358,
	278, 279, 1359, 1360, 1361, 0, 1362, 616, 1363, 1364,
	1365, 1366, 280, 281, 1156, 282, 283, 284, 285, 286,
	287, 617, 618, 0, 288, 619, 289, 620, 1367, 621,
	290, 291, 292, 293, 294, 295, 1368, 1369, 0, 296,
	622, 623, 624, 1370, 297, 298, 625, 1371, 1300, 1372,
	299, 300, 301, 302, 303, 304, 305, 0, 1373, 307,
	308, 309, 306, 310, 1374, 311, 0, 312, 313, 314,
	315, 316, 317, 1375, 318, 319, 320, 1157, 321, 322,
	323, 1376, 1377, 1379, 1378, 1380, 1381, 1382, 324, 325,
	326, 327, 328, 0, 329, 626, 627, 1383, 333, 330,
	331, 1384, 334, 332, 335, 1385, 336, 337, 338, 1386,
	1387, 339, 340, 341, 1388, 342, 343, 1389, 344, 345,
	346, 1390, 347, 348, 628, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 629, 630, 360, 1391, 267,
	1392, 0, 0, 0, 0, 361, 362, 363, 631, 0,
	0, 0, 364, 1393, 365, 366, 1394, 1395, 1158, 367,
	368, 632, 633, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 1396, 378, 634, 1397, 635, 379, 1398, 380,
	381, 382, 383, 384, 636, 637, 638, 461, 1160, 385,
	386, 1399, 387, 388, 389, 390, 0, 0, 0, 268,
	391, 392, 393, 395, 1400, 1159, 394, 639, 640, 1401,
	641, 1402, 396, 397, 1161, 642, 1162, 398, 399, 400,
	1163, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 1403, 408, 410, 409, 1404, 411, 643, 1164, 412,
	413, 1165, 1405, 414, 0, 0, 0, 415, 416, 419,
	1406, 1407, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 1166, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 1167, 448, 1408, 269, 1168, 458,
	459, 1409, 644, 460, 645, 462, 463, 1410, 0, 464,
	0, 1411, 1412, 466, 467, 468, 1413, 1414, 469, 470,
	646, 1169, 471, 1170, 647, 472, 473, 465, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 1415, 483, 484,
	648, 485, 486, 487, 649, 488, 489, 490, 650, 491,
	651, 492, 493, 1416, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 652, 503, 505, 504, 506, 1417,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	1418, 521, 522, 523, 1171, 524, 525, 526, 527, 653,
	528, 0, 529, 530, 536, 537, 531, 532, 538, 539,
	540, 541, 542, 1419, 544, 545, 543, 546, 547, 548,
	1420, 549, 550, 533, 534, 551, 552, 1172, 553, 554,
	555, 556, 557, 558, 654, 0, 559, 1421, 560, 561,
	562, 564, 535, 565, 570, 571, 655, 566, 567, 568,
	569, 656, 573, 574, 1422, 575, 576, 0, 572, 563,
	1423, 577, 578, 579, 580, 581, 582, 583, 354, 584,
	1424, 585, 657, 658, 659, 660, 1425, 594, 1426, 586,
	587, 588, 661, 589, 662, 1427, 590, 591, 592, 593,
	0, 595, 596, 1428, 1429, 597, 598, 599, 601, 602,
	600, 603, 1430, 604, 1431, 0, 605, 606, 607, 663,
	664, 665, 1432, 609, 608, 610, 666, 1433, 1434, 1435,
	1436, 1437, 611, 612, 667, 613, 614, 615, 0, 1353,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4016, 270, 272, 271, 273,
	274, 275, 276, 277, 1358, 278, 279, 1359, 1360, 1361,
	0, 1362, 616, 1363, 1364, 1365, 1366, 280, 281, 1156,
	282, 283, 284, 285, 286, 287, 617, 618, 0, 288,
	619, 289, 620, 1367, 621, 290, 291, 292, 293, 294,
	295, 1368, 1369, 0, 296, 622, 623, 624, 1370, 297,
	298, 625, 1371, 1300, 1372, 299, 300, 301, 302, 303,
	304, 305, 0, 1373, 307, 308, 309, 306, 310, 1374,
	311, 0, 312, 313, 314, 315, 316, 317, 1375, 318,
	319, 320, 1157, 321, 322, 323, 1376, 1377, 1379, 1378,
	1380, 1381, 1382, 324, 325, 326, 327, 328, 0, 329,
	626, 627, 1383, 333, 330, 331, 1384, 334, 332, 335,
	1385, 336, 337, 338, 1386, 1387, 339, 340, 341, 1388,
	342, 343, 1389, 344, 345, 346, 1390, 347, 348, 628,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	629, 630, 360, 1391, 267, 1392, 0, 0, 0, 0,
	361, 362, 363, 631, 0, 0, 0, 364, 1393, 365,
	366, 1394, 1395, 1158, 367, 368, 632, 633, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 1396, 378, 634,
	1397, 635, 379, 1398, 380, 381, 382, 383, 384, 636,
	637, 638, 461, 1160, 385, 386, 1399, 387, 388, 389,
	390, 0, 0, 0, 268, 391, 392, 393, 395, 1400,
	1159, 394, 639, 640, 1401, 641, 1402, 396, 397, 1161,
	642, 1162, 398, 399, 400, 1163, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 1403, 408, 410, 409,
	1404, 411, 643, 1164, 412, 413, 1165, 1405, 414, 0,
	0, 0, 415, 416, 419, 1406, 1407, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 1166, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 1167,
	448, 1408, 269, 1168, 458, 459, 1409, 644, 460, 645,
	462, 463, 1410, 0, 464, 0, 1411, 1412, 466, 467,
	468, 1413, 1414, 469, 470, 646, 1169, 471, 1170, 647,
	472, 473, 465, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 1415, 483, 484, 648, 485, 486, 487, 649,
	488, 489, 490, 650, 491, 651, 492, 493, 1416, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 652,
	503, 505, 504, 506, 1417, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 1418, 521, 522, 523, 1171,
	524, 525, 526, 527, 653, 528, 0, 529, 530, 536,
	537, 531, 532, 538, 539, 540, 541, 542, 1419, 544,
	545, 543, 546, 547, 548, 1420, 549, 550, 533, 534,
	551, 552, 1172, 553, 554, 555, 556, 557, 558, 654,
	0, 559, 1421, 560, 561, 562, 564, 535, 565, 570,
	571, 655, 566, 567, 568, 569, 656, 573, 574, 1422,
	575, 576, 0, 572, 563, 1423, 577, 578, 579, 580,
	581, 582, 583, 354, 584, 1424, 585, 657, 658, 659,
	660, 1425, 594, 1426, 586, 587, 588, 661, 589, 662,
	1427, 590, 591, 592, 593, 0, 595, 596, 1428, 1429,
	597, 598, 599, 601, 602, 600, 603, 1430, 604, 1431,
	0, 605, 606, 607, 663, 664, 665, 1432, 609, 608,
	610, 666, 1433, 1434, 1435, 1436, 1437, 611, 612, 667,
	613, 614, 615, 0, 1353, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3867, 270, 272, 271, 273, 274, 275, 276, 277, 1358,
	278, 279, 1359, 1360, 1361, 0, 1362, 616, 1363, 1364,
	1365, 1366, 280, 281, 1156, 282, 283, 284, 285, 286,
	287, 617, 618, 0, 288, 619, 289, 620, 1367, 621,
	290, 291, 292, 293, 294, 295, 1368, 1369, 0, 296,
	622, 623, 624, 1370, 297, 298, 625, 1371, 1300, 1372,
	299, 300, 301, 302, 303, 304, 305, 0, 1373, 307,
	308, 309, 306, 310, 1374, 311, 0, 312, 313, 314,
	315, 316, 317, 1375, 318, 319, 320, 1157, 321, 322,
	323, 1376, 1377, 1379, 1378, 1380, 1381, 1382, 324, 325,
	326, 327, 328, 0, 329, 626, 627, 1383, 333, 330,
	331, 1384, 334, 332, 335, 1385, 336, 337, 338, 1386,
	1387, 339, 340, 341, 1388, 342, 343, 1389, 344, 345,
	346, 1390, 347, 348, 628, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 629, 630, 360, 1391, 267,
	1392, 0, 0, 0, 0, 361, 362, 363, 631, 0,
	0, 0, 364, 1393, 365, 366, 1394, 1395, 1158, 367,
	368, 632, 633, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 1396, 378, 634, 1397, 635, 379, 1398, 380,
	381, 382, 383, 384, 636, 637, 638, 461, 1160, 385,
	386, 1399, 387, 388, 389, 390, 0, 0, 0, 268,
	391, 392, 393, 395, 1400, 1159, 394, 639, 640, 1401,
	641, 1402, 396, 397, 1161, 642, 1162, 398, 399, 400,
	1163, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 1403, 408, 410, 409, 1404, 411, 643, 1164, 412,
	413, 1165, 1405, 414, 0, 0, 0, 415, 416, 419,
	1406, 1407, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 1166, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 1167, 448, 1408, 269, 1168, 458,
	459, 1409, 644, 460, 645, 462, 463, 1410, 0, 464,
	0, 1411, 1412, 466, 467, 468, 1413, 1414, 469, 470,
	646, 1169, 471, 1170, 647, 472, 473, 465, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 1415, 483, 484,
	648, 485, 486, 487, 649, 488, 489, 490, 650, 491,
	651, 492, 493, 1416, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 652, 503, 505, 504, 506, 1417,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	1418, 521, 522, 523, 1171, 524, 525, 526, 527, 653,
	528, 0, 529, 530, 536, 537, 531, 532, 538, 539,
	540, 541, 542, 1419, 544, 545, 543, 546, 547, 548,
	1420, 549, 550, 533, 534, 551, 552, 1172, 553, 554,
	555, 556, 557, 558, 654, 0, 559, 1421, 560, 561,
	562, 564, 535, 565, 570, 571, 655, 566, 567, 568,
	569, 656, 573, 574, 1422, 575, 576, 0, 572, 563,
	1423, 577, 578, 579, 580, 581, 582, 583, 354, 584,
	1424, 585, 657, 658, 659, 660, 1425, 594, 1426, 586,
	587, 588, 661, 589, 662, 1427, 590, 591, 592, 593,
	0, 595, 596, 1428, 1429, 597, 598, 599, 601, 602,
	600, 603, 1430, 604, 1431, 0, 605, 606, 607, 663,
	664, 665, 1432, 609, 608, 610, 666, 1433, 1434, 1435,
	1436, 1437, 611, 612, 667, 613, 614, 615, 0, 1353,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3569, 270, 272, 271, 273,
	274, 275, 276, 277, 1358, 278, 279, 1359, 1360, 1361,
	0, 1362, 616, 1363, 1364, 1365, 1366, 280, 281, 1156,
	282, 283, 284, 285, 286, 287, 617, 618, 0, 288,
	619, 289, 620, 1367, 621, 290, 291, 292, 293, 294,
	295, 1368, 1369, 0, 296, 622, 623, 624, 1370, 297,
	298, 625, 1371, 1300, 1372, 299, 300, 301, 302, 303,
	304, 305, 0, 1373, 307, 308, 309, 306, 310, 1374,
	311, 0, 312, 313, 314, 315, 316, 317, 1375, 318,
	319, 320, 1157, 321, 322, 323, 1376, 1377, 1379, 1378,
	1380, 1381, 1382, 324, 325, 326, 327, 328, 0, 329,
	626, 627, 1383, 333, 330, 331, 1384, 334, 332, 335,
	1385, 336, 337, 338, 1386, 1387, 339, 340, 341, 1388,
	342, 343, 1389, 344, 345, 346, 1390, 347, 348, 628,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	629, 630, 360, 1391, 267, 1392, 0, 0, 0, 0,
	361, 362, 363, 631, 0, 0, 0, 364, 1393, 365,
	366, 1394, 1395, 1158, 367, 368, 632, 633, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 1396, 378, 634,
	1397, 635, 379, 1398, 380, 381, 382, 383, 384, 636,
	637, 638, 461, 1160, 385, 386, 1399, 387, 388, 389,
	390, 0, 0, 0, 268, 391, 392, 393, 395, 1400,
	1159, 394, 639, 640, 1401, 641, 1402, 396, 397, 1161,
	642, 1162, 398, 399, 400, 1163, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 1403, 408, 410, 409,
	1404, 411, 643, 1164, 412, 413, 1165, 1405, 414, 0,
	0, 0, 415, 416, 419, 1406, 1407, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 1166, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 1167,
	448, 1408, 269, 1168, 458, 459, 1409, 644, 460, 645,
	462, 463, 1410, 0, 464, 0, 1411, 1412, 466, 467,
	468, 1413, 1414, 469, 470, 646, 1169, 471, 1170, 647,
	472, 473, 465, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 1415, 483, 484, 648, 485, 486, 487, 649,
	488, 489, 490, 650, 491, 651, 492, 493, 1416, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 652,
	503, 505, 504, 506, 1417, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 1418, 521, 522, 523, 1171,
	524, 525, 526, 527, 653, 528, 0, 529, 530, 536,
	537, 531, 532, 538, 539, 540, 541, 542, 1419, 544,
	545, 543, 546, 547, 548, 1420, 549, 550, 533, 534,
	551, 552, 1172, 553, 554, 555, 556, 557, 558, 654,
	0, 559, 1421, 560, 561, 562, 564, 535, 565, 570,
	571, 655, 566, 567, 568, 569, 656, 573, 574, 1422,
	575, 576, 0, 572, 563, 1423, 577, 578, 579, 580,
	581, 582, 583, 354, 584, 1424, 585, 657, 658, 659,
	660, 1425, 594, 1426, 586, 587, 588, 661, 589, 662,
	1427, 590, 591, 592, 593, 0, 595, 596, 1428, 1429,
	597, 598, 599, 601, 602, 600, 603, 1430, 604, 1431,
	0, 605, 606, 607, 663, 664, 665, 1432, 609, 608,
	610, 666, 1433, 1434, 1435, 1436, 1437, 611, 612, 667,
	613, 614, 615, 0, 1353, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3400, 270, 272, 271, 273, 274, 275, 276, 277, 1358,
	278, 279, 1359, 1360, 1361, 0, 1362, 616, 1363, 1364,
	1365, 1366, 280, 281, 1156, 282, 283, 284, 285, 286,
	287, 617, 618, 0, 288, 619, 289, 620, 1367, 621,
	290, 291, 292, 293, 294, 295, 1368, 1369, 0, 296,
	622, 623, 624, 1370, 297, 298, 625, 1371, 1300, 1372,
	299, 300, 301, 302, 303, 304, 305, 0, 1373, 307,
	308, 309, 306, 310, 1374, 311, 0, 312, 313, 314,
	315, 316, 317, 1375, 318, 319, 320, 1157, 321, 322,
	323, 1376, 1377, 1379, 1378, 1380, 1381, 1382, 324, 325,
	326, 327, 328, 0, 329, 626, 627, 1383, 333, 330,
	331, 1384, 334, 332, 335, 1385, 336, 337, 338, 1386,
	1387, 339, 340, 341, 1388, 342, 343, 1389, 344, 345,
	346, 1390, 347, 348, 628, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 629, 630, 360, 1391, 267,
	1392, 0, 0, 0, 0, 361, 362, 363, 631, 0,
	0, 0, 364, 1393, 365, 366, 1394, 1395, 1158, 367,
	368, 632, 633, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 1396, 378, 634, 1397, 635, 379, 1398, 380,
	381, 382, 383, 384, 636, 637, 638, 461, 1160, 385,
	386, 1399, 387, 388, 389, 390, 0, 0, 0, 268,
	391, 392, 393, 395, 1400, 1159, 394, 639, 640, 1401,
	641, 1402, 396, 397, 1161, 642, 1162, 398, 399, 400,
	1163, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 1403, 408, 410, 409, 1404, 411, 643, 1164, 412,
	413, 1165, 1405, 414, 0, 0, 0, 415, 416, 419,
	1406, 1407, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 1166, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 1167, 448, 1408, 269, 1168, 458,
	459, 1409, 644, 460, 645, 462, 463, 1410, 0, 464,
	0, 1411, 1412, 466, 467, 468, 1413, 1414, 469, 470,
	646, 1169, 471, 1170, 647, 472, 473, 465, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 1415, 483, 484,
	648, 485, 486, 487, 649, 488, 489, 490, 650, 491,
	651, 492, 493, 1416, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 652, 503, 505, 504, 506, 1417,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	1418, 521, 522, 523, 1171, 524, 525, 526, 527, 653,
	528, 0, 529, 530, 536, 537, 531, 532, 538, 539,
	540, 541, 542, 1419, 544, 545, 543, 546, 547, 548,
	1420, 549, 550, 533, 534, 551, 552, 1172, 553, 554,
	555, 556, 557, 558, 654, 0, 559, 1421, 560, 561,
	562, 564, 535, 565, 570, 571, 655, 566, 567, 568,
	569, 656, 573, 574, 1422, 575, 576, 0, 572, 563,
	1423, 577, 578, 579, 580, 581, 582, 583, 354, 584,
	1424, 585, 657, 658, 659, 660, 1425, 594, 1426, 586,
	587, 588, 661, 589, 662, 1427, 590, 591, 592, 593,
	0, 595, 596, 1428, 1429, 597, 598, 599, 601, 602,
	600, 603, 1430, 604, 1431, 0, 605, 606, 607, 663,
	664, 665, 1432, 609, 608, 610, 666, 1433, 1434, 1435,
	1436, 1437, 611, 612, 667, 613, 614, 615, 0, 1353,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2480, 270, 272, 271, 273,
	274, 275, 276, 277, 1358, 278, 279, 1359, 1360, 1361,
	0, 1362, 616, 1363, 1364, 1365, 1366, 280, 281, 1156,
	282, 283, 284, 285, 286, 287, 617, 618, 0, 288,
	619, 289, 620, 1367, 621, 290, 291, 292, 293, 294,
	295, 1368, 1369, 0, 296, 622, 623, 624, 1370, 297,
	298, 625, 1371, 1300, 1372, 299, 300, 301, 302, 303,
	304, 305, 0, 1373, 307, 308, 309, 306, 310, 1374,
	311, 0, 312, 313, 314, 315, 316, 317, 1375, 318,
	319, 320, 1157, 321, 322, 323, 1376, 1377, 1379, 1378,
	1380, 1381, 1382, 324, 325, 326, 327, 328, 0, 329,
	626, 627, 1383, 333, 330, 331, 1384, 334, 332, 335,
	1385, 336, 337, 338, 1386, 1387, 339, 340, 341, 1388,
	342, 343, 1389, 344, 345, 346, 1390, 347, 348, 628,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	629, 630, 360, 1391, 267, 1392, 0, 0, 0, 0,
	361, 362, 363, 631, 0, 0, 0, 364, 1393, 365,
	366, 1394, 1395, 1158, 367, 368, 632, 633, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 1396, 378, 634,
	1397, 635, 379, 1398, 380, 381, 382, 383, 384, 636,
	637, 638, 461, 1160, 385, 386, 1399, 387, 388, 389,
	390, 0, 0, 0, 268, 391, 392, 393, 395, 1400,
	1159, 394, 639, 640, 1401, 641, 1402, 396, 397, 1161,
	642, 1162, 398, 399, 400, 1163, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 1403, 408, 410, 409,
	1404, 411, 643, 1164, 412, 413, 1165, 1405, 414, 0,
	0, 0, 415, 416, 419, 1406, 1407, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 1166, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 1167,
	448, 1408, 269, 1168, 458, 459, 1409, 644, 460, 645,
	462, 463, 1410, 0, 464, 0, 1411, 1412, 466, 467,
	468, 1413, 1414, 469, 470, 646, 1169, 471, 1170, 647,
	472, 473, 465, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 1415, 483, 484, 648, 485, 486, 487, 649,
	488, 489, 490, 650, 491, 651, 492, 493, 1416, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 652,
	503, 505, 504, 506, 1417, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 1418, 521, 522, 523, 1171,
	524, 525, 526, 527, 653, 528, 0, 529, 530, 536,
	537, 531, 532, 538, 539, 540, 541, 542, 1419, 544,
	545, 543, 546, 547, 548, 1420, 549, 550, 533, 534,
	551, 552, 1172, 553, 554, 555, 556, 557, 558, 654,
	0, 559, 1421, 560, 561, 562, 564, 535, 565, 570,
	571, 655, 566, 567, 568, 569, 656, 573, 574, 1422,
	575, 576, 0, 572, 563, 1423, 577, 578, 579, 580,
	581, 582, 583, 354, 584, 1424, 585, 657, 658, 659,
	660, 1425, 594, 1426, 586, 587, 588, 661, 589, 662,
	1427, 590, 591, 592, 593, 0, 595, 596, 1428, 1429,
	597, 598, 599, 601, 602, 600, 603, 1430, 604, 1431,
	0, 605, 606, 607, 663, 664, 665, 1432, 609, 608,
	610, 666, 1433, 1434, 1435, 1436, 1437, 611, 612, 667,
	613, 614, 615, 1449, 0, 1353, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2167, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	1358, 278, 279, 1359, 1360, 1361, 0, 1362, 616, 1363,
	1364, 1365, 1366, 280, 281, 1156, 282, 283, 284, 285,
	286, 287, 617, 618, 0, 288, 619, 289, 620, 1367,
	621, 290, 291, 292, 293, 294, 295, 1368, 1369, 0,
	296, 622, 623, 624, 1370, 297, 298, 625, 1371, 1300,
	1372, 299, 300, 301, 302, 303, 304, 305, 0, 1373,
	307, 308, 309, 306, 310, 1374, 311, 0, 312, 313,
	314, 315, 316, 317, 1375, 318, 319, 320, 1157, 321,
	322, 323, 1376, 1377, 1379, 1378, 1380, 1381, 1382, 324,
	325, 326, 327, 328, 0, 329, 626, 627, 1383, 333,
	330, 331, 1384, 334, 332, 335, 1385, 336, 337, 338,
	1386, 1387, 339, 340, 341, 1388, 342, 343, 1389, 344,
	345, 346, 1390, 347, 348, 628, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 629, 630, 360, 1391,
	267, 1392, 0, 0, 0, 0, 361, 362, 363, 631,
	0, 0, 0, 364, 1393, 365, 366, 1394, 1395, 1158,
	367, 368, 632, 633, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 1396, 378, 634, 1397, 635, 379, 1398,
	380, 381, 382, 383, 384, 636, 637, 638, 461, 1160,
	385, 386, 1399, 387, 388, 389, 390, 0, 0, 0,
	268, 391, 392, 393, 395, 1400, 1159, 394, 639, 640,
	1401, 641, 1402, 396, 397, 1161, 642, 1162, 398, 399,
	400, 1163, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 1403, 408, 410, 409, 1404, 411, 643, 1164,
	412, 413, 1165, 1405, 414, 0, 0, 0, 415, 416,
	419, 1406, 1407, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 1166, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 1167, 448, 1408, 269, 1168,
	458, 459, 1409, 644, 460, 645, 462, 463, 1410, 0,
	464, 0, 1411, 1412, 466, 467, 468, 1413, 1414, 469,
	470, 646, 1169, 471, 1170, 647, 472, 473, 465, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 1415, 483,
	484, 648, 485, 486, 487, 649, 488, 489, 490, 650,
	491, 651, 492, 493, 1416, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 652, 503, 505, 504, 506,
	1417, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 1418, 521, 522, 523, 1171, 524, 525, 526, 527,
	653, 528, 0, 529, 530, 536, 537, 531, 532, 538,
	539, 540, 541, 542, 1419, 544, 545, 543, 546, 547,
	548, 1420, 549, 550, 533, 534, 551, 552, 1172, 553,
	554, 555, 556, 557, 558, 654, 0, 559, 1421, 560,
	561, 562, 564, 535, 565, 570, 571, 655, 566, 567,
	568, 569, 656, 573, 574, 1422, 575, 576, 0, 572,
	563, 1423, 577, 578, 579, 580, 581, 582, 583, 354,
	584, 1424, 585, 657, 658, 659, 660, 1425, 594, 1426,
	586, 587, 588, 661, 589, 662, 1427, 590, 591, 592,
	593, 0, 595, 596, 1428, 1429, 597, 598, 599, 601,
	602, 600, 603, 1430, 604, 1431, 0, 605, 606, 607,
	663, 664, 665, 1432, 609, 608, 610, 666, 1433, 1434,
	1435, 1436, 1437, 611, 612, 667, 613, 614, 615, 1350,
	0, 1353, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 277, 1358, 278, 279, 1359,
	1360, 1361, 0, 1362, 616, 1363, 1364, 1365, 1366, 280,
	281, 1156, 282, 283, 284, 285, 286, 287, 617, 618,
	0, 288, 619, 289, 620, 1367, 621, 290, 291, 292,
	293, 294, 295, 1368, 1369, 0, 296, 622, 623, 624,
	1370, 297, 298, 625, 1371, 1300, 1372, 299, 300, 301,
	302, 303, 304, 305, 0, 1373, 307, 308, 309, 306,
	310, 1374, 311, 0, 312, 313, 314, 315, 316, 317,
	1375, 318, 319, 320, 1157, 321, 322, 323, 1376, 1377,
	1379, 1378, 1380, 1381, 1382, 324, 325, 326, 327, 328,
	0, 329, 626, 627, 1383, 333, 330, 331, 1384, 334,
	332, 335, 1385, 336, 337, 338, 1386, 1387, 339, 340,
	341, 1388, 342, 343, 1389, 344, 345, 346, 1390, 347,
	348, 628, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 629, 630, 360, 1391, 267, 1392, 0, 0,
	0, 0, 361, 362, 363, 631, 0, 0, 0, 364,
	1393, 365, 366, 1394, 1395, 1158, 367, 368, 632, 633,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 1396,
	378, 634, 1397, 635, 379, 1398, 380, 381, 382, 383,
	384, 636, 637, 638, 461, 1160, 385, 386, 1399, 387,
	388, 389, 390, 0, 0, 0, 268, 391, 392, 393,
	395, 1400, 1159, 394, 639, 640, 1401, 641, 1402, 396,
	397, 1161, 642, 1162, 398, 399, 400, 1163, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 1403, 408,
	410, 409, 1404, 411, 643, 1164, 412, 413, 1165, 1405,
	414, 0, 0, 0, 415, 416, 419, 1406, 1407, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 1166, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 1167, 448, 1408, 269, 1168, 458, 459, 1409, 644,
	460, 645, 462, 463, 1410, 0, 464, 0, 1411, 1412,
	466, 467, 468, 1413, 1414, 469, 470, 646, 1169, 471,
	1170, 647, 472, 473, 465, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 1415, 483, 484, 648, 485, 486,
	487, 649, 488, 489, 490, 650, 491, 651, 492, 493,
	1416, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 652, 503, 505, 504, 506, 1417, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 1418, 521, 522,
	523, 1171, 524, 525, 526, 527, 653, 528, 0, 529,
	530, 536, 537, 531, 532, 538, 539, 540, 541, 542,
	1419, 544, 545, 543, 546, 547, 548, 1420, 549, 550,
	533, 534, 551, 552, 1172, 553, 554, 555, 556, 557,
	558, 654, 0, 559, 1421, 560, 561, 562, 564, 535,
	565, 570, 571, 655, 566, 567, 568, 569, 656, 573,
	574, 1422, 575, 576, 0, 572, 563, 1423, 577, 578,
	579, 580, 581, 582, 583, 354, 584, 1424, 585, 657,
	658, 659, 660, 1425, 594, 1426, 586, 587, 588, 661,
	589, 662, 1427, 590, 591, 592, 593, 0, 595, 596,
	1428, 1429, 597, 598, 599, 601, 602, 600, 603, 1430,
	604, 1431, 0, 605, 606, 607, 663, 664, 665, 1432,
	609, 608, 610, 666, 1433, 1434, 1435, 1436, 1437, 611,
	612, 667, 613, 614, 615, 1353, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	1358, 278, 279, 1359, 1360, 1361, 0, 1362, 616, 1363,
	1364, 1365, 1366, 280, 281, 1156, 282, 283, 284, 285,
	286, 287, 617, 618, 0, 288, 619, 289, 620, 1367,
	621, 290, 291, 292, 293, 294, 295, 1368, 1369, 0,
	296, 622, 623, 624, 1370, 297, 298, 625, 1371, 1300,
	1372, 299, 300, 301, 302, 303, 304, 305, 0, 1373,
	307, 308, 309, 306, 310, 1374, 311, 0, 312, 313,
	314, 315, 316, 317, 1375, 318, 319, 320, 1157, 321,
	322, 323, 1376, 1377, 1379, 1378, 1380, 1381, 1382, 324,
	325, 326, 327, 328, 0, 329, 626, 627, 1383, 333,
	330, 331, 1384, 334, 332, 335, 1385, 336, 337, 338,
	1386, 1387, 339, 340, 341, 1388, 342, 343, 1389, 344,
	345, 346, 1390, 347, 348, 628, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 629, 630, 360, 1391,
	267, 1392, 0, 0, 0, 0, 361, 362, 363, 631,
	0, 0, 0, 364, 1393, 365, 366, 1394, 1395, 1158,
	367, 368, 632, 633, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 1396, 378, 634, 1397, 635, 379, 1398,
	380, 381, 382, 383, 384, 636, 637, 638, 461, 1160,
	385, 386, 1399, 387, 388, 389, 390, 0, 0, 0,
	268, 391, 392, 393, 395, 1400, 1159, 394, 639, 640,
	1401, 641, 1402, 396, 397, 1161, 642, 1162, 398, 399,
	400, 1163, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 1403, 408, 410, 409, 1404, 411, 643, 1164,
	412, 413, 1165, 1405, 414, 0, 0, 0, 415, 416,
	419, 1406, 1407, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 1166, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 1167, 448, 1408, 269, 1168,
	458, 459, 1409, 644, 460, 645, 462, 463, 1410, 0,
	464, 0, 1411, 1412, 466, 467, 468, 1413, 1414, 469,
	470, 646, 1169, 471, 1170, 647, 472, 473, 465, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 1415, 483,
	484, 648, 485, 486, 487, 649, 488, 489, 490, 650,
	491, 651, 492, 493, 1416, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 652, 503, 505, 504, 506,
	1417, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 1418, 521, 522, 523, 1171, 524, 525, 526, 527,
	653, 528, 0, 529, 530, 536, 537, 531, 532, 538,
	539, 540, 541, 542, 1419, 544, 545, 543, 546, 547,
	548, 1420, 549, 550, 533, 534, 551, 552, 1172, 553,
	554, 555, 556, 557, 558, 654, 0, 559, 1421, 560,
	561, 562, 564, 535, 565, 570, 571, 655, 566, 567,
	568, 569, 656, 573, 574, 1422, 575, 576, 0, 572,
	563, 1423, 577, 578, 579, 580, 581, 582, 583, 354,
	584, 1424, 585, 657, 658, 659, 660, 1425, 594, 1426,
	586, 587, 588, 661, 589, 662, 1427, 590, 591, 592,
	593, 0, 595, 596, 1428, 1429, 597, 598, 599, 601,
	602, 600, 603, 1430, 604, 1431, 0, 605, 606, 607,
	663, 664, 665, 1432, 609, 608, 610, 666, 1433, 1434,
	1435, 1436, 1437, 611, 612, 667, 613, 614, 615, 2455,
	0, 1092, 1064, 1065, 1066, 1062, 1063, 1075, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 277, 2452, 278, 279, 0,
	0, 0, 0, 0, 1116, 1080, 0, 0, 0, 280,
	281, 1156, 282, 283, 284, 285, 286, 287, 617, 1129,
	0, 288, 1136, 289, 1135, 0, 1146, 290, 291, 292,
	293, 294, 295, 1082, 1115, 1049, 296, 1176, 1177, 624,
	0, 297, 298, 1122, 0, 1103, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1157, 321, 322, 323, 1106, 1104,
	1105, 1112, 1108, 1107, 1111, 324, 325, 326, 327, 328,
	1139, 329, 1133, 1132, 1053, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 2453, 0, 339, 1124,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1059, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1147, 1148, 360, 1071, 267, 0, 0, 0,
	0, 0, 361, 362, 363, 1131, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1158, 367, 368, 1144, 1145,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 1154, 0, 1081, 379, 0, 380, 381, 382, 383,
	384, 1117, 1118, 1121, 461, 1160, 385, 386, 0, 387,
	388, 389, 390, 0, 0, 0, 268, 391, 392, 393,
	395, 0, 1159, 394, 1126, 1127, 0, 1087, 0, 396,
	397, 1161, 1119, 1162, 398, 399, 400, 1163, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 1155, 1164, 412, 413, 1165, 0,
	414, 0, 0, 0, 415, 416, 419, 1110, 1109, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 1166, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 1167, 448, 1050, 269, 1168, 458, 459, 1072, 1120,
	460, 1134, 462, 463, 0, 0, 464, 0, 0, 0,
	466, 467, 468, 0, 0, 469, 470, 646, 1169, 471,
	1170, 1149, 472, 473, 465, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 648, 485, 486,
	487, 649, 488, 489, 490, 1150, 491, 651, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 1130, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 1171, 524, 525, 526, 527, 1060, 528, 0, 529,
	530, 536, 537, 531, 532, 538, 539, 540, 541, 542,
	0, 544, 545, 543, 546, 547, 548, 1113, 549, 550,
	533, 534, 551, 552, 1172, 553, 554, 555, 556, 557,
	558, 1128, 0, 559, 0, 560, 561, 562, 564, 535,
	565, 570, 571, 1175, 566, 567, 568, 569, 1151, 573,
	574, 0, 575, 576, 1048, 572, 563, 0, 577, 578,
	579, 580, 581, 582, 583, 354, 584, 0, 585, 1140,
	1141, 1142, 1143, 0, 594, 0, 586, 587, 588, 1152,
	589, 1153, 1070, 590, 591, 592, 593, 0, 595, 596,
	0, 1054, 597, 598, 599, 601, 602, 600, 603, 1114,
	604, 0, 0, 605, 606, 607, 663, 1137, 1174, 2451,
	609, 608, 610, 666, 0, 0, 0, 0, 0, 611,
	612, 667, 613, 614, 615, 1051, 0, 0, 0, 0,
	0, 0, 0, 1047, 0, 0, 0, 0, 0, 0,
	1045, 1046, 2454, 0, 0, 0, 0, 0, 0, 1076,
	2450, 0, 1038, 1074, 1092, 1064, 1065, 1066, 1062, 1063,
	1075, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1116, 1080, 0,
	0, 0, 280, 281, 1156, 282, 283, 284, 285, 286,
	287, 617, 1129, 0, 288, 1136, 289, 1135, 0, 1146,
	290, 291, 292, 293, 294, 295, 1082, 1115, 1049, 296,
	1176, 1177, 624, 0, 297, 298, 1122, 0, 1103, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1157, 321, 322,
	323, 1106, 1104, 1105, 1112, 1108, 1107, 1111, 324, 325,
	326, 327, 328, 1139, 329, 1133, 1132, 1053, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1124, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1059, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1147, 1148, 360, 1071, 267,
	0, 0, 0, 0, 0, 361, 362, 363, 1131, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1158, 367,
	368, 1144, 1145, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 1154, 0, 1081, 379, 0, 380,
	381, 382, 383, 384, 1117, 1118, 1121, 461, 1160, 385,
	386, 0, 387, 388, 389, 390, 0, 0, 0, 268,
	391, 392, 393, 395, 0, 1159, 394, 1126, 1127, 0,
	1087, 0, 396, 397, 1161, 1119, 1162, 398, 399, 400,
	1163, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 1155, 1164, 412,
	413, 1165, 0, 414, 0, 0, 0, 415, 416, 419,
	1110, 1109, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 1166, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 1167, 448, 1050, 269, 1168, 458,
	459, 1072, 1120, 460, 1134, 462, 463, 0, 0, 464,
	0, 0, 0, 466, 467, 468, 0, 0, 469, 470,
	646, 1169, 471, 1170, 1149, 472, 473, 465, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	648, 485, 486, 487, 649, 488, 489, 490, 1150, 491,
	651, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 1130, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 1171, 524, 525, 526, 527, 1060,
	528, 0, 529, 530, 536, 537, 531, 532, 538, 539,
	540, 541, 542, 229, 544, 545, 543, 546, 547, 548,
	1113, 549, 550, 533, 534, 551, 552, 1172, 553, 554,
	555, 556, 557, 558, 1128, 0, 559, 0, 560, 561,
	562, 564, 535, 565, 570, 571, 1175, 566, 567, 568,
	569, 1151, 573, 574, 0, 575, 576, 1048, 572, 563,
	231, 577, 578, 579, 580, 581, 582, 583, 354, 584,
	0, 585, 1140, 1141, 1142, 1143, 0, 594, 0, 586,
	587, 588, 1152, 589, 1153, 1070, 590, 591, 592, 593,
	0, 595, 596, 0, 1054, 597, 598, 599, 601, 602,
	600, 603, 1114, 604, 0, 0, 605, 606, 607, 1569,
	1137, 1174, 0, 609, 608, 610, 666, 0, 0, 0,
	0, 223, 611, 612, 667, 613, 614, 615, 1051, 0,
	224, 0, 0, 0, 0, 0, 1047, 0, 0, 0,
	0, 0, 0, 1045, 1046, 1092, 1064, 1065, 1066, 1062,
	1063, 1075, 1813, 1811, 0, 0, 1074, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1116, 1080,
	0, 0, 0, 280, 281, 1156, 282, 283, 284, 285,
	286, 287, 617, 1129, 0, 288, 1136, 289, 1135, 0,
	1146, 290, 291, 292, 293, 294, 295, 1082, 1115, 1049,
	296, 1176, 1177, 624, 0, 297, 298, 1122, 0, 1103,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1157, 321,
	322, 323, 1106, 1104, 1105, 1112, 1108, 1107, 1111, 324,
	325, 326, 327, 328, 1139, 329, 1133, 1132, 1053, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1124, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1059, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1147, 1148, 360, 1071,
	267, 0, 0, 0, 0, 0, 361, 362, 363, 1131,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1158,
	367, 368, 1144, 1145, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 1154, 0, 1081, 379, 0,
	380, 381, 382, 383, 384, 1117, 1118, 1121, 461, 1160,
	385, 386, 0, 387, 388, 389, 390, 0, 0, 0,
	268, 391, 392, 393, 395, 0, 1159, 394, 1126, 1127,
	0, 1087, 0, 396, 397, 1161, 1119, 1162, 398, 399,
	400, 1163, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 1155, 1164,
	412, 413, 1165, 0, 414, 0, 0, 0, 415, 416,
	419, 1110, 1109, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 1166, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 1167, 448, 1050, 269, 1168,
	458, 459, 1072, 1120, 460, 1134, 462, 463, 0, 0,
	464, 0, 0, 0, 466, 467, 468, 0, 0, 469,
	470, 646, 1169, 471, 1170, 1149, 472, 473, 465, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 648, 485, 486, 487, 649, 488, 489, 490, 1150,
	491, 651, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 1130, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 1171, 524, 525, 526, 527,
	1060, 528, 0, 529, 530, 536, 537, 531, 532, 538,
	539, 540, 541, 542, 229, 544, 545, 543, 546, 547,
	548, 1113, 549, 550, 533, 534, 551, 552, 1172, 553,
	554, 555, 556, 557, 558, 1128, 0, 559, 0, 560,
	561, 562, 564, 535, 565, 570, 571, 1175, 566, 567,
	568, 569, 1151, 573, 574, 0, 575, 576, 1048, 572,
	563, 231, 577, 578, 579, 580, 581, 582, 583, 354,
	584, 0, 585, 1140, 1141, 1142, 1143, 0, 594, 0,
	586, 587, 588, 1152, 589, 1153, 1070, 590, 591, 592,
	593, 0, 595, 596, 0, 1054, 597, 598, 599, 601,
	602, 600, 603, 1114, 604, 0, 0, 605, 606, 607,
	1569, 1137, 1174, 0, 609, 608, 610, 666, 0, 0,
	0, 0, 223, 611, 612, 667, 613, 614, 615, 1051,
	0, 224, 0, 0, 0, 0, 0, 1047, 0, 0,
	0, 0, 0, 0, 1045, 1046, 1092, 1064, 1065, 1066,
	1062, 1063, 1075, 1813, 3062, 0, 0, 1074, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1116,
	1080, 0, 0, 0, 280, 281, 1156, 282, 283, 284,
	285, 286, 287, 617, 1129, 0, 288, 1136, 289, 1135,
	0, 1146, 290, 291, 292, 293, 294, 295, 1082, 1115,
	1049, 296, 1176, 1177, 624, 0, 297, 298, 1122, 0,
	1103, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1157,
	321, 322, 323, 1106, 1104, 1105, 1112, 1108, 1107, 1111,
	324, 325, 326, 327, 328, 1139, 329, 1133, 1132, 1053,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1124, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1059, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1147, 1148, 360,
	1071, 267, 0, 0, 0, 0, 0, 361, 362, 363,
	1131, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1158, 367, 368, 1144, 1145, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1154, 0, 1081, 379,
	0, 380, 381, 382, 383, 384, 1117, 1118, 1121, 461,
	1160, 385, 386, 0, 387, 388, 389, 390, 0, 0,
	0, 268, 391, 392, 393, 395, 0, 1159, 394, 1126,
	1127, 0, 1087, 0, 396, 397, 1161, 1119, 1162, 398,
	399, 400, 1163, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 1155,
	1164, 412, 413, 1165, 0, 414, 0, 0, 0, 415,
	416, 419, 1110, 1109, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 1166, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 1167, 448, 1050, 269,
	1168, 458, 459, 1072, 1120, 460, 1134, 462, 463, 0,
	0, 464, 0, 0, 0, 466, 467, 468, 0, 0,
	469, 470, 646, 1169, 471, 1170, 1149, 472, 473, 465,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 648, 485, 486, 487, 649, 488, 489, 490,
	1150, 491, 651, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 1130, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 1171, 524, 525, 526,
	527, 1060, 528, 0, 529, 530, 536, 537, 531, 532,
	538, 539, 540, 541, 542, 229, 544, 545, 543, 546,
	547, 548, 1113, 549, 550, 533, 534, 551, 552, 1172,
	553, 554, 555, 556, 557, 558, 1128, 0, 559, 0,
	560, 561, 562, 564, 535, 565, 570, 571, 1175, 566,
	567, 568, 569, 1151, 573, 574, 0, 575, 576, 1048,
	572, 563, 231, 577, 578, 579, 580, 581, 582, 583,
	354, 584, 0, 585, 1140, 1141, 1142, 1143, 0, 594,
	0, 586, 587, 588, 1152, 589, 1153, 1070, 590, 591,
	592, 593, 0, 595, 596, 0, 1054, 597, 598, 599,
	601, 602, 600, 603, 1114, 604, 0, 0, 605, 606,
	607, 1569, 1137, 1174, 0, 609, 608, 610, 666, 0,
	0, 0, 0, 223, 611, 612, 667, 613, 614, 615,
	1051, 0, 224, 0, 0, 0, 0, 0, 1047, 0,
	0, 0, 0, 0, 0, 1045, 1046, 1092, 1064, 1065,
	1066, 1062, 1063, 1075, 1813, 1811, 0, 0, 1074, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1116, 1080, 0, 0, 0, 280, 281, 1156, 282, 283,
	284, 285, 286, 287, 617, 1129, 0, 288, 1136, 289,
	1135, 2583, 1146, 290, 291, 292, 293, 294, 295, 1082,
	1115, 1049, 296, 1176, 1177, 624, 0, 297, 298, 1122,
	0, 1103, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1157, 321, 322, 323, 1106, 1104, 1105, 1112, 1108, 1107,
	1111, 324, 325, 326, 327, 328, 1139, 329, 1133, 1132,
	1053, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1124, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1059, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1147, 1148,
	360, 1071, 267, 0, 0, 0, 0, 0, 361, 362,
	363, 1131, 0, 0, 0, 364, 0, 365, 366, 0,
	2588, 1158, 367, 368, 1144, 1145, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1154, 0, 1081,
	379, 0, 380, 381, 382, 383, 384, 1117, 1118, 1121,
	461, 1160, 385, 386, 0, 387, 388, 389, 390, 0,
	0, 0, 268, 391, 392, 393, 395, 0, 1159, 394,
	1126, 1127, 0, 1087, 0, 396, 397, 1161, 1119, 1162,
	398, 399, 400, 1163, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 2584, 411,
	1155, 1164, 412, 413, 1165, 0, 414, 0, 0, 0,
	415, 416, 419, 1110, 1109, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 1166, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 1167, 448, 1050,
	269, 1168, 458, 459, 1072, 1120, 460, 1134, 462, 463,
	0, 0, 464, 0, 0, 0, 466, 467, 468, 0,
	0, 469, 470, 646, 1169, 471, 1170, 1149, 472, 473,
	465, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 648, 485, 486, 487, 649, 488, 489,
	490, 1150, 491, 651, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 1130, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 1171, 524, 525,
	526, 527, 1060, 528, 0, 529, 530, 536, 537, 531,
	532, 538, 539, 540, 541, 542, 0, 544, 545, 543,
	546, 547, 548, 1113, 549, 550, 533, 534, 551, 552,
	1172, 553, 554, 555, 556, 557, 558, 1128, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 1175,
	566, 567, 568, 569, 1151, 573, 574, 0, 575, 576,
	1048, 572, 563, 0, 577, 578, 579, 580, 581, 582,
	583, 354, 584, 0, 585, 1140, 1141, 1142, 1143, 0,
	594, 2585, 586, 587, 588, 1152, 589, 1153, 1070, 590,
	591, 592, 593, 0, 595, 596, 0, 1054, 597, 598,
	599, 601, 602, 600, 603, 1114, 604, 0, 0, 605,
	606, 607, 663, 1137, 1174, 0, 609, 608, 610, 666,
	0, 0, 0, 0, 0, 611, 612, 667, 613, 614,
	615, 1051, 0, 0, 0, 0, 0, 0, 0, 1047,
	0, 0, 0, 0, 0, 0, 1045, 1046, 0, 0,
	0, 0, 0, 0, 0, 1076, 0, 0, 2500, 1074,
	1092, 1064, 1065, 1066, 1062, 1063, 1075, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 1116, 1080, 0, 0, 0, 280, 281,
	1156, 282, 283, 284, 285, 286, 287, 617, 1129, 0,
	288, 1136, 289, 1135, 0, 1146, 290, 291, 292, 293,
	294, 295, 1082, 1115, 1049, 296, 1176, 1177, 624, 0,
	297, 298, 1122, 0, 1103, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1157, 321, 322, 323, 1106, 1104, 1105,
	1112, 1108, 1107, 1111, 324, 325, 326, 327, 328, 1139,
	329, 1133, 1132, 1053, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 1124, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	1059, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1147, 1148, 360, 1071, 267, 0, 0, 0, 0,
	0, 361, 362, 363, 1131, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1158, 367, 368, 1144, 1145, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	1154, 0, 1081, 379, 0, 380, 381, 382, 383, 384,
	1117, 1118, 1121, 461, 1160, 385, 386, 0, 387, 388,
	389, 390, 0, 0, 0, 268, 391, 392, 393, 395,
	0, 1159, 394, 1126, 1127, 0, 1087, 0, 396, 397,
	1161, 1119, 1162, 398, 399, 400, 1163, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 1155, 1164, 412, 413, 1165, 0, 414,
	0, 0, 0, 415, 416, 419, 1110, 1109, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 1166, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	1167, 448, 1050, 269, 1168, 458, 459, 1072, 1120, 460,
	1134, 462, 463, 0, 0, 464, 0, 0, 0, 466,
	467, 468, 0, 0, 469, 470, 646, 1169, 471, 1170,
	1149, 472, 473, 465, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 648, 485, 486, 487,
	649, 488, 489, 490, 1150, 491, 651, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	1130, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	1171, 524, 525, 526, 527, 1060, 528, 0, 529, 530,
	536, 537, 531, 532, 538, 539, 540, 541, 542, 0,
	544, 545, 543, 546, 547, 548, 1113, 549, 550, 533,
	534, 551, 552, 1172, 553, 554, 555, 556, 557, 558,
	1128, 0, 559, 0, 560, 561, 562, 564, 535, 565,
	570, 571, 1175, 566, 567, 568, 569, 1151, 573, 574,
	0, 575, 576, 1048, 572, 563, 0, 577, 578, 579,
	580, 581, 582, 583, 354, 584, 0, 585, 1140, 1141,
	1142, 1143, 0, 594, 0, 586, 587, 588, 1152, 589,
	1153, 1070, 590, 591, 592, 593, 0, 595, 596, 0,
	1054, 597, 598, 599, 601, 602, 600, 603, 1114, 604,
	0, 0, 605, 606, 607, 663, 1137, 1174, 0, 609,
	608, 610, 666, 0, 0, 0, 0, 0, 611, 612,
	667, 613, 614, 615, 1051, 0, 0, 0, 0, 0,
	0, 0, 1047, 0, 0, 0, 0, 0, 0, 1045,
	1046, 0, 0, 0, 0, 0, 0, 0, 1076, 2498,
	0, 2497, 1074, 1092, 1064, 1065, 1066, 1062, 1063, 1075,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1116, 1080, 0, 0,
	0, 280, 281, 1156, 282, 283, 284, 285, 286, 287,
	617, 1129, 0, 288, 1136, 289, 1135, 0, 1146, 290,
	291, 292, 293, 294, 295, 1082, 1115, 1049, 296, 1176,
	1177, 624, 0, 297, 298, 1122, 0, 1103, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1157, 321, 322, 323,
	1106, 1104, 1105, 1112, 1108, 1107, 1111, 324, 325, 326,
	327, 328, 1139, 329, 1133, 1132, 1053, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 1124, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 1059, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1147, 1148, 360, 1071, 267, 0,
	0, 0, 0, 0, 361, 362, 363, 1131, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1158, 367, 368,
	1144, 1145, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 1154, 0, 1081, 379, 0, 380, 381,
	382, 383, 384, 1117, 1118, 1121, 461, 1160, 385, 386,
	0, 387, 388, 389, 390, 0, 0, 0, 268, 391,
	392, 393, 395, 0, 1159, 394, 1126, 1127, 0, 1087,
	0, 396, 397, 1161, 1119, 1162, 398, 399, 400, 1163,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 1155, 1164, 412, 413,
	1165, 0, 414, 0, 0, 0, 415, 416, 419, 1110,
	1109, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	1166, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 1167, 448, 1050, 269, 1168, 458, 459,
	1072, 1120, 460, 1134, 462, 463, 0, 0, 464, 0,
	0, 0, 466, 467, 468, 0, 0, 469, 470, 646,
	1169, 471, 1170, 1149, 472, 473, 465, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 648,
	485, 486, 487, 649, 488, 489, 490, 1150, 491, 651,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 1130, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 1171, 524, 525, 526, 527, 1060, 528,
	0, 529, 530, 536, 537, 531, 532, 538, 539, 540,
	541, 542, 0, 544, 545, 543, 546, 547, 548, 1113,
	549, 550, 533, 534, 551, 552, 1172, 553, 554, 555,
	556, 557, 558, 1128, 0, 559, 0, 560, 561, 562,
	564, 535, 565, 570, 571, 1175, 566, 567, 568, 569,
	1151, 573, 574, 0, 575, 576, 1048, 572, 563, 0,
	577, 578, 579, 580, 581, 582, 583, 354, 584, 0,
	585, 1140, 1141, 1142, 1143, 0, 594, 0, 586, 587,
	588, 1152, 589, 1153, 1070, 590, 591, 592, 593, 0,
	595, 596, 0, 1054, 597, 598, 599, 601, 602, 600,
	603, 1114, 604, 0, 0, 605, 606, 607, 663, 1137,
	1174, 0, 609, 608, 610, 666, 0, 0, 0, 0,
	0, 611, 612, 667, 613, 614, 615, 1051, 0, 0,
	0, 0, 0, 0, 0, 1047, 0, 0, 0, 0,
	0, 0, 1045, 1046, 0, 0, 0, 0, 0, 0,
	0, 1076, 2495, 0, 2494, 1074, 1092, 1064, 1065, 1066,
	1062, 1063, 1075, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1116,
	1080, 0, 0, 0, 280, 281, 1156, 282, 283, 284,
	285, 286, 287, 617, 1129, 0, 288, 1136, 289, 1135,
	0, 1146, 290, 291, 292, 293, 294, 295, 1082, 1115,
	1049, 296, 1176, 1177, 624, 0, 297, 298, 1122, 0,
	1103, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1157,
	321, 322, 323, 1106, 1104, 1105, 1112, 1108, 1107, 1111,
	324, 325, 326, 327, 328, 1139, 329, 1133, 1132, 1053,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1124, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1059, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1147, 1148, 360,
	1071, 267, 0, 0, 0, 0, 0, 361, 362, 363,
	1131, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1158, 367, 368, 1144, 1145, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1154, 0, 1081, 379,
	0, 380, 381, 382, 383, 384, 1117, 1118, 1121, 461,
	1160, 385, 386, 0, 387, 388, 389, 390, 0, 0,
	0, 268, 391, 392, 393, 395, 0, 1159, 394, 1126,
	1127, 0, 1087, 0, 396, 397, 1161, 1119, 1162, 398,
	399, 400, 1163, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 1155,
	1164, 412, 413, 1165, 0, 414, 0, 0, 0, 415,
	416, 419, 1110, 1109, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 1166, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 1167, 448, 1050, 269,
	1168, 458, 459, 1072, 1120, 460, 1134, 462, 463, 0,
	0, 464, 0, 0, 0, 466, 467, 468, 0, 0,
	469, 470, 646, 1169, 471, 1170, 1149, 472, 473, 465,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 648, 485, 486, 487, 649, 488, 489, 490,
	1150, 491, 651, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 1130, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 1171, 524, 525, 526,
	527, 1060, 528, 0, 529, 530, 536, 537, 531, 532,
	538, 539, 540, 541, 542, 0, 544, 545, 543, 546,
	547, 548, 1113, 549, 550, 533, 534, 551, 552, 1172,
	553, 554, 555, 556, 557, 558, 1128, 0, 559, 0,
	560, 561, 562, 564, 535, 565, 570, 571, 1175, 566,
	567, 568, 569, 1151, 573, 574, 0, 575, 576, 1048,
	572, 563, 0, 577, 578, 579, 580, 581, 582, 583,
	354, 584, 0, 585, 1140, 1141, 1142, 1143, 0, 594,
	0, 586, 587, 588, 1152, 589, 1153, 1070, 590, 591,
	592, 593, 0, 595, 596, 0, 1054, 597, 598, 599,
	601, 602, 600, 603, 1114, 604, 0, 0, 605, 606,
	607, 663, 1137, 1174, 0, 609, 608, 610, 666, 0,
	0, 0, 0, 0, 611, 612, 667, 613, 614, 615,
	1051, 0, 0, 0, 0, 0, 0, 0, 1047, 0,
	0, 0, 0, 0, 0, 1045, 1046, 0, 0, 0,
	0, 0, 0, 0, 1076, 2492, 0, 2491, 1074, 1092,
	1064, 1065, 1066, 1062, 1063, 1075, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1116, 1080, 0, 0, 0, 280, 281, 1156,
	282, 283, 284, 285, 286, 287, 617, 1129, 0, 288,
	1136, 289, 1135, 0, 1146, 290, 291, 292, 293, 294,
	295, 1082, 1115, 1049, 296, 1176, 1177, 624, 0, 297,
	298, 1122, 0, 1103, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1157, 321, 322, 323, 1106, 1104, 1105, 1112,
	1108, 1107, 1111, 324, 325, 326, 327, 328, 1139, 329,
	1133, 1132, 1053, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 1124, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 1059,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1147, 1148, 360, 1071, 267, 0, 0, 0, 0, 0,
	361, 362, 363, 1131, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1158, 367, 368, 1144, 1145, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 1154,
	0, 1081, 379, 0, 380, 381, 382, 383, 384, 1117,
	1118, 1121, 461, 1160, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 268, 391, 392, 393, 395, 0,
	1159, 394, 1126, 1127, 0, 1087, 0, 396, 397, 1161,
	1119, 1162, 398, 399, 400, 1163, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 1155, 1164, 412, 413, 1165, 0, 414, 0,
	0, 0, 415, 416, 419, 1110, 1109, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 1166, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 1167,
	448, 1050, 269, 1168, 458, 459, 1072, 1120, 460, 1134,
	462, 463, 0, 0, 464, 0, 0, 0, 466, 467,
	468, 0, 0, 469, 470, 646, 1169, 471, 1170, 1149,
	472, 473, 465, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 648, 485, 486, 487, 649,
	488, 489, 490, 1150, 491, 651, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 1130,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 1171,
	524, 525, 526, 527, 1060, 528, 0, 529, 530, 536,
	537, 531, 532, 538, 539, 540, 541, 542, 0, 544,
	545, 543, 546, 547, 548, 1113, 549, 550, 533, 534,
	551, 552, 1172, 553, 554, 555, 556, 557, 558, 1128,
	0, 559, 0, 560, 561, 562, 564, 535, 565, 570,
	571, 1175, 566, 567, 568, 569, 1151, 573, 574, 0,
	575, 576, 1048, 572, 563, 0, 577, 578, 579, 580,
	581, 582, 583, 354, 584, 0, 585, 1140, 1141, 1142,
	1143, 0, 594, 0, 586, 587, 588, 1152, 589, 1153,
	1070, 590, 591, 592, 593, 0, 595, 596, 0, 1054,
	597, 598, 599, 601, 602, 600, 603, 1114, 604, 0,
	0, 605, 606, 607, 663, 1137, 1174, 0, 609, 608,
	610, 666, 0, 0, 0, 0, 0, 611, 612, 667,
	613, 614, 615, 1051, 0, 0, 0, 0, 0, 0,
	0, 1047, 0, 0, 0, 0, 0, 0, 1045, 1046,
	0, 0, 0, 0, 0, 0, 0, 1076, 2489, 0,
	1662, 1074, 1092, 1064, 1065, 1066, 1062, 1063, 1075, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1116, 1080, 0, 0, 0,
	280, 281, 1156, 282, 283, 284, 285, 286, 287, 617,
	1129, 0, 288, 1136, 289, 1135, 0, 1146, 290, 291,
	292, 293, 294, 295, 1082, 1115, 1049, 296, 1176, 1177,
	624, 0, 297, 298, 1122, 0, 1103, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1157, 321, 322, 323, 1106,
	1104, 1105, 1112, 1108, 1107, 1111, 324, 325, 326, 327,
	328, 1139, 329, 1133, 1132, 1053, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	1124, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 1059, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1147, 1148, 360, 1071, 267, 0, 0,
	0, 0, 0, 361, 362, 363, 1131, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1158, 367, 368, 1144,
	1145, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 1154, 0, 1081, 379, 0, 380, 381, 382,
	383, 384, 1117, 1118, 1121, 461, 1160, 385, 386, 0,
	387, 388, 389, 390, 0, 0, 0, 268, 391, 392,
	393, 395, 0, 1159, 394, 1126, 1127, 0, 1087, 0,
	396, 397, 1161, 1119, 1162, 398, 399, 400, 1163, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 1155, 1164, 412, 413, 1165,
	0, 414, 0, 0, 0, 415, 416, 419, 1110, 1109,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 1166,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 1167, 448, 1050, 269, 1168, 458, 459, 1072,
	1120, 460, 1134, 462, 463, 0, 0, 464, 0, 0,
	0, 466, 467, 468, 0, 0, 469, 470, 646, 1169,
	471, 1170, 1149, 472, 473, 465, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 648, 485,
	486, 487, 649, 488, 489, 490, 1150, 491, 651, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 1130, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 1171, 524, 525, 526, 527, 1060, 528, 0,
	529, 530, 536, 537, 531, 532, 538, 539, 540, 541,
	542, 0, 544, 545, 543, 546, 547, 548, 1113, 549,
	550, 533, 534, 551, 552, 1172, 553, 554, 555, 556,
	557, 558, 1128, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 1175, 566, 567, 568, 569, 1151,
	573, 574, 0, 575, 576, 1048, 572, 563, 0, 577,
	578, 579, 580, 581, 582, 583, 354, 584, 0, 585,
	1140, 1141, 1142, 1143, 0, 594, 0, 586, 587, 588,
	1152, 589, 1153, 1070, 590, 591, 592, 593, 0, 595,
	596, 0, 1054, 597, 598, 599, 601, 602, 600, 603,
	1114, 604, 0, 0, 605, 606, 607, 663, 1137, 1174,
	0, 609, 608, 610, 666, 0, 1661, 0, 0, 0,
	611, 612, 667, 613, 614, 615, 1051, 0, 0, 0,
	0, 0, 0, 0, 1047, 0, 0, 0, 0, 0,
	0, 1045, 1046, 0, 0, 0, 0, 0, 0, 0,
	1076, 0, 0, 1041, 1074, 1092, 1064, 1065, 1066, 1062,
	1063, 1075, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1116, 1080,
	0, 0, 0, 280, 281, 1156, 282, 283, 284, 285,
	286, 287, 617, 1129, 0, 288, 1136, 289, 1135, 0,
	1146, 290, 291, 292, 293, 294, 295, 1082, 1115, 1049,
	296, 1176, 1177, 624, 0, 297, 298, 1122, 0, 1103,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1157, 321,
	322, 323, 1106, 1104, 1105, 1112, 1108, 1107, 1111, 324,
	325, 326, 327, 328, 1139, 329, 1133, 1132, 1053, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1124, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1059, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1147, 1148, 360, 1071,
	267, 0, 0, 0, 0, 0, 361, 362, 363, 1131,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1158,
	367, 368, 1144, 1145, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 1154, 0, 1081, 379, 0,
	380, 381, 382, 383, 384, 1117, 1118, 1121, 461, 1160,
	385, 386, 0, 387, 388, 389, 390, 0, 0, 0,
	268, 391, 392, 393, 395, 0, 1159, 394, 1126, 1127,
	0, 1087, 0, 396, 397, 1161, 1119, 1162, 398, 399,
	400, 1163, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 1155, 1164,
	412, 413, 1165, 0, 414, 0, 0, 0, 415, 416,
	419, 1110, 1109, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 1166, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 1167, 448, 1050, 269, 1168,
	458, 459, 1072, 1120, 460, 1134, 462, 463, 0, 0,
	464, 0, 1055, 0, 466, 467, 468, 0, 0, 469,
	470, 646, 1169, 471, 1170, 1149, 472, 473, 465, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 648, 485, 486, 487, 649, 488, 489, 490, 1150,
	491, 651, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 1130, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 1171, 524, 525, 526, 527,
	1060, 528, 0, 529, 530, 536, 537, 531, 532, 538,
	539, 540, 541, 542, 0, 544, 545, 543, 546, 547,
	548, 1113, 549, 550, 533, 534, 551, 552, 1172, 553,
	554, 555, 556, 557, 558, 1128, 0, 559, 0, 560,
	561, 562, 564, 535, 565, 570, 571, 1175, 566, 567,
	568, 569, 1151, 573, 574, 0, 575, 576, 1048, 572,
	563, 0, 577, 578, 579, 580, 581, 582, 583, 354,
	584, 0, 585, 1140, 1141, 1142, 1143, 0, 594, 0,
	586, 587, 588, 1152, 589, 1153, 1070, 590, 591, 592,
	593, 0, 595, 596, 0, 1054, 597, 598, 599, 601,
	602, 600, 603, 1114, 604, 0, 0, 605, 606, 607,
	663, 1137, 1174, 0, 609, 608, 610, 666, 0, 0,
	0, 0, 0, 611, 612, 667, 613, 614, 615, 1051,
	0, 0, 0, 0, 0, 0, 0, 1047, 0, 0,
	0, 0, 0, 0, 1045, 1046, 1092, 1064, 1065, 1066,
	1062, 1063, 1075, 1076, 0, 0, 0, 1074, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1116,
	1080, 0, 0, 0, 280, 281, 1156, 282, 283, 284,
	285, 286, 287, 617, 1129, 0, 288, 1136, 289, 1135,
	0, 1146, 290, 291, 292, 293, 294, 295, 1082, 1115,
	1049, 296, 1176, 1177, 624, 0, 297, 298, 1122, 0,
	1103, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 4465, 317, 0, 318, 319, 320, 1157,
	321, 322, 323, 1106, 1104, 1105, 1112, 1108, 1107, 1111,
	324, 325, 326, 327, 328, 1139, 329, 1133, 1132, 1053,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1124, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1059, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1147, 1148, 360,
	1071, 267, 0, 0, 0, 0, 0, 361, 362, 363,
	1131, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1158, 367, 368, 1144, 1145, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1154, 0, 1081, 379,
	0, 380, 381, 382, 383, 384, 1117, 1118, 1121, 461,
	1160, 385, 386, 0, 387, 388, 389, 390, 0, 0,
	0, 268, 391, 392, 393, 395, 0, 1159, 394, 1126,
	1127, 0, 1087, 0, 396, 397, 1161, 1119, 1162, 398,
	399, 400, 1163, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 1155,
	1164, 412, 413, 1165, 0, 414, 0, 0, 0, 415,
	416, 419, 1110, 1109, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 1166, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 1167, 448, 1050, 269,
	1168, 458, 459, 1072, 1120, 460, 1134, 462, 463, 0,
	0, 464, 0, 1055, 0, 466, 467, 468, 0, 0,
	469, 470, 646, 1169, 471, 1170, 1149, 472, 473, 465,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 648, 485, 486, 487, 649, 488, 489, 490,
	1150, 491, 651, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 1130, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 1171, 524, 525, 526,
	527, 1060, 528, 0, 529, 530, 536, 537, 531, 532,
	538, 539, 540, 541, 542, 0, 544, 545, 543, 546,
	547, 548, 1113, 549, 550, 533, 534, 551, 552, 1172,
	553, 554, 555, 556, 557, 558, 1128, 0, 559, 0,
	560, 561, 562, 564, 535, 565, 570, 571, 1175, 566,
	567, 568, 569, 1151, 573, 574, 0, 575, 576, 1048,
	572, 563, 0, 577, 578, 579, 580, 581, 582, 583,
	354, 584, 0, 585, 1140, 1141, 1142, 1143, 0, 594,
	0, 586, 587, 588, 1152, 589, 1153, 1070, 590, 591,
	592, 593, 0, 595, 596, 0, 1054, 597, 598, 599,
	601, 602, 600, 603, 1114, 604, 0, 0, 605, 606,
	607, 663, 1137, 1174, 0, 609, 608, 610, 666, 0,
	0, 0, 0, 0, 611, 612, 667, 613, 614, 615,
	1051, 0, 0, 0, 0, 0, 0, 0, 1047, 0,
	0, 0, 0, 0, 0, 1045, 1046, 1092, 1064, 1065,
	1066, 1062, 1063, 1075, 1076, 0, 0, 0, 1074, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1116, 1080, 0, 0, 0, 280, 281, 1156, 282, 283,
	284, 285, 286, 287, 617, 1129, 0, 288, 1136, 289,
	1135, 0, 1146, 290, 291, 292, 293, 294, 295, 1082,
	1115, 1049, 296, 1176, 1177, 624, 0, 297, 298, 1122,
	0, 1103, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1157, 321, 322, 323, 1106, 1104, 1105, 1112, 1108, 1107,
	1111, 324, 325, 326, 327, 328, 1139, 329, 1133, 1132,
	1053, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1124, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1059, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1147, 1148,
	360, 1071, 267, 0, 0, 0, 0, 0, 361, 362,
	363, 1131, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1158, 367, 368, 1144, 1145, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1154, 0, 1081,
	379, 0, 380, 381, 382, 383, 384, 1117, 1118, 1121,
	461, 1160, 385, 386, 0, 387, 388, 389, 390, 0,
	0, 0, 2369, 391, 392, 393, 395, 0, 1159, 394,
	1126, 1127, 0, 1087, 0, 396, 397, 1161, 1119, 1162,
	398, 399, 400, 1163, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	1155, 1164, 412, 413, 1165, 0, 414, 0, 0, 0,
	415, 416, 419, 1110, 1109, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 1166, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 1167, 448, 1050,
	269, 1168, 458, 459, 1072, 1120, 460, 1134, 462, 463,
	0, 0, 464, 0, 0, 0, 466, 467, 468, 0,
	0, 469, 470, 646, 1169, 471, 1170, 1149, 472, 473,
	465, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 648, 485, 486, 487, 649, 488, 489,
	490, 1150, 491, 651, 492, 493, 2368, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 1130, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 1171, 524, 525,
	526, 527, 1060, 528, 0, 529, 530, 536, 537, 531,
	532, 538, 539, 540, 541, 542, 0, 544, 545, 543,
	546, 547, 548, 1113, 549, 550, 533, 534, 551, 552,
	1172, 553, 554, 555, 556, 557, 558, 1128, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 1175,
	566, 567, 568, 569, 1151, 573, 574, 0, 575, 576,
	1048, 572, 563, 0, 577, 578, 579, 580, 581, 582,
	583, 354, 584, 0, 585, 1140, 1141, 1142, 1143, 0,
	594, 0, 586, 587, 588, 1152, 589, 1153, 1070, 590,
	591, 592, 593, 0, 595, 596, 0, 1054, 597, 598,
	599, 601, 602, 600, 603, 1114, 604, 0, 0, 605,
	606, 607, 663, 1137, 1174, 0, 609, 608, 610, 666,
	0, 0, 0, 0, 0, 611, 612, 667, 613, 614,
	615, 1051, 0, 0, 0, 0, 0, 0, 0, 1047,
	0, 0, 0, 0, 0, 0, 1045, 1046, 1092, 1064,
	1065, 1066, 1062, 1063, 1075, 1076, 0, 0, 0, 1074,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 1116, 1080, 0, 0, 0, 280, 281, 1156, 282,
	283, 284, 285, 286, 287, 617, 1129, 0, 288, 1136,
	289, 1135, 0, 1146, 290, 291, 292, 293, 294, 295,
	1082, 1115, 1049, 296, 1176, 1177, 624, 0, 297, 298,
	1122, 0, 1103, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1157, 321, 322, 323, 1106, 1104, 1105, 1112, 1108,
	1107, 1111, 324, 325, 326, 327, 328, 1139, 329, 1133,
	1132, 1053, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 1124, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 1059, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1147,
	1148, 360, 1071, 267, 0, 0, 0, 0, 0, 361,
	362, 363, 1131, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1158, 367, 368, 1144, 1145, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 1154, 0,
	1081, 379, 0, 380, 381, 382, 383, 384, 1117, 1118,
	1121, 461, 1160, 385, 386, 0, 387, 388, 389, 390,
	0, 0, 0, 268, 391, 392, 393, 395, 0, 1159,
	394, 1126, 1127, 0, 1087, 0, 396, 397, 1161, 1119,
	1162, 398, 399, 400, 1163, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 1155, 1164, 412, 413, 1165, 0, 414, 0, 0,
	0, 415, 416, 419, 1110, 1109, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 1166, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 1167, 448,
	1050, 269, 1168, 458, 459, 1072, 1120, 460, 1134, 462,
	463, 0, 0, 464, 0, 1055, 0, 466, 467, 468,
	0, 0, 469, 470, 646, 1169, 471, 1170, 1149, 472,
	473, 465, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 648, 485, 486, 487, 649, 488,
	489, 490, 1150, 491, 651, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 1130, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 1171, 524,
	525, 526, 527, 1060, 528, 0, 529, 530, 536, 537,
	531, 532, 538, 539, 540, 541, 542, 0, 544, 545,
	543, 546, 547, 548, 1113, 549, 550, 533, 534, 551,
	552, 1172, 553, 554, 555, 556, 557, 558, 1128, 0,
	559, 0, 560, 561, 562, 564, 535, 565, 570, 571,
	1175, 566, 567, 568, 569, 1151, 573, 574, 0, 575,
	576, 1048, 572, 563, 0, 577, 578, 579, 580, 581,
	582, 583, 354, 584, 0, 585, 1140, 1141, 1142, 1143,
	0, 594, 0, 586, 587, 588, 1152, 589, 1153, 1070,
	590, 591, 592, 593, 0, 595, 596, 0, 1054, 597,
	598, 599, 601, 602, 600, 603, 1114, 604, 0, 0,
	605, 606, 607, 663, 1137, 1174, 0, 609, 608, 610,
	666, 0, 0, 0, 0, 0, 611, 612, 667, 613,
	614, 615, 1051, 0, 0, 0, 0, 0, 0, 0,
	1047, 0, 0, 0, 0, 0, 0, 1045, 1046, 1092,
	1064, 1065, 1066, 1062, 1063, 1075, 1076, 0, 0, 0,
	1074, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1116, 1080, 0, 0, 0, 280, 281, 1156,
	282, 283, 284, 285, 286, 287, 617, 1129, 0, 288,
	1136, 289, 1135, 0, 1146, 290, 291, 292, 293, 294,
	295, 1082, 1115, 1049, 296, 1176, 1177, 624, 0, 297,
	298, 1122, 0, 1103, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 4219, 317, 0, 318,
	319, 320, 1157, 321, 322, 323, 1106, 1104, 1105, 1112,
	1108, 1107, 1111, 324, 325, 326, 327, 328, 1139, 329,
	1133, 1132, 1053, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 1124, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 1059,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1147, 1148, 360, 1071, 267, 0, 0, 0, 0, 0,
	361, 362, 363, 1131, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1158, 367, 368, 1144, 1145, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 1154,
	0, 1081, 379, 0, 380, 381, 382, 383, 384, 1117,
	1118, 1121, 461, 1160, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 268, 391, 392, 393, 395, 0,
	1159, 394, 1126, 1127, 0, 1087, 0, 396, 397, 1161,
	1119, 1162, 398, 399, 400, 1163, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 1155, 1164, 412, 413, 1165, 0, 414, 0,
	0, 0, 415, 416, 419, 1110, 1109, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 1166, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 1167,
	448, 1050, 269, 1168, 458, 459, 1072, 1120, 460, 1134,
	462, 463, 0, 0, 464, 0, 1055, 0, 466, 467,
	468, 0, 0, 469, 470, 646, 1169, 471, 1170, 1149,
	472, 473, 465, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 648, 485, 486, 487, 649,
	488, 489, 490, 1150, 491, 651, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 1130,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 1171,
	524, 525, 526, 527, 1060, 528, 0, 529, 530, 536,
	537, 531, 532, 538, 539, 540, 541, 542, 0, 544,
	545, 543, 546, 547, 548, 1113, 549, 550, 533, 534,
	551, 552, 1172, 553, 554, 555, 556, 557, 558, 1128,
	0, 559, 0, 560, 561, 562, 564, 535, 565, 570,
	571, 1175, 566, 567, 568, 569, 1151, 573, 574, 0,
	575, 576, 1048, 572, 563, 0, 577, 578, 579, 580,
	581, 582, 583, 354, 584, 0, 585, 1140, 1141, 1142,
	1143, 0, 594, 0, 586, 587, 588, 1152, 589, 1153,
	1070, 590, 591, 592, 593, 0, 595, 596, 0, 1054,
	597, 598, 599, 601, 602, 600, 603, 1114, 604, 0,
	0, 605, 606, 607, 663, 1137, 1174, 0, 609, 608,
	610, 666, 0, 0, 0, 0, 0, 611, 612, 667,
	613, 614, 615, 1051, 0, 0, 0, 0, 0, 0,
	0, 1047, 0, 0, 0, 0, 0, 0, 1045, 1046,
	1092, 1064, 1065, 1066, 1062, 1063, 1075, 1076, 0, 0,
	0, 1074, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 1116, 1080, 0, 0, 0, 280, 281,
	1156, 282, 283, 284, 285, 286, 287, 617, 1129, 0,
	288, 1136, 289, 1135, 0, 1146, 290, 291, 292, 293,
	294, 295, 1082, 1115, 1049, 296, 1176, 1177, 624, 0,
	297, 298, 1122, 0, 1103, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1157, 321, 322, 323, 1106, 1104, 1105,
	1112, 1108, 1107, 1111, 324, 325, 326, 327, 328, 1139,
	329, 1133, 1132, 1053, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 1124, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	1059, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1147, 1148, 360, 1071, 267, 0, 0, 0, 0,
	0, 361, 362, 363, 1131, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1158, 367, 368, 1144, 1145, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	1154, 0, 1081, 379, 0, 380, 381, 382, 383, 384,
	1117, 1118, 1121, 461, 1160, 385, 386, 0, 387, 388,
	389, 390, 0, 0, 0, 268, 391, 392, 393, 395,
	0, 1159, 394, 1126, 1127, 0, 1087, 0, 396, 397,
	1161, 1119, 1162, 398, 399, 400, 1163, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 1155, 1164, 412, 413, 1165, 0, 414,
	0, 0, 0, 415, 416, 419, 1110, 1109, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 1166, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	1167, 448, 1050, 3829, 1168, 458, 459, 1072, 1120, 460,
	1134, 462, 463, 0, 0, 464, 0, 0, 0, 466,
	467, 468, 0, 0, 469, 470, 646, 1169, 471, 1170,
	1149, 472, 473, 465, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 648, 485, 486, 487,
	649, 488, 489, 490, 1150, 491, 651, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	1130, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	1171, 524, 525, 526, 527, 1060, 528, 0, 529, 530,
	536, 537, 531, 532, 538, 539, 540, 541, 542, 0,
	544, 545, 543, 546, 547, 548, 1113, 549, 550, 533,
	534, 551, 552, 1172, 553, 554, 555, 556, 557, 558,
	1128, 0, 559, 0, 560, 561, 562, 564, 535, 565,
	570, 571, 1175, 566, 567, 568, 569, 1151, 573, 574,
	0, 575, 576, 1048, 572, 563, 0, 577, 578, 579,
	580, 581, 582, 583, 354, 584, 0, 585, 1140, 1141,
	1142, 1143, 0, 594, 0, 586, 587, 588, 1152, 589,
	1153, 1070, 590, 591, 592, 593, 0, 595, 596, 0,
	1054, 597, 598, 599, 601, 602, 600, 603, 1114, 604,
	0, 0, 605, 606, 607, 663, 1137, 1174, 0, 609,
	608, 610, 666, 0, 0, 0, 0, 0, 611, 612,
	667, 613, 614, 615, 1051, 0, 0, 0, 0, 0,
	0, 0, 1047, 0, 0, 0, 0, 0, 0, 1045,
	1046, 1881, 0, 0, 0, 0, 0, 0, 1076, 0,
	0, 0, 1074, 1092, 1064, 1065, 1066, 1062, 1063, 1075,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1116, 1080, 0, 0,
	0, 280, 281, 1156, 282, 283, 284, 285, 286, 287,
	617, 1129, 0, 288, 1136, 289, 1135, 0, 1146, 290,
	291, 292, 293, 294, 295, 1082, 1115, 1049, 296, 1176,
	1177, 624, 0, 297, 298, 1122, 0, 1103, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1157, 321, 322, 323,
	1106, 1104, 1105, 1112, 1108, 1107, 1111, 324, 325, 326,
	327, 328, 1139, 329, 1133, 1132, 1053, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 1124, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 1059, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1147, 1148, 360, 1071, 267, 0,
	0, 0, 0, 0, 361, 362, 363, 1131, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1158, 367, 368,
	1144, 1145, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 1154, 0, 1081, 379, 0, 380, 381,
	382, 383, 384, 1117, 1118, 1121, 461, 1160, 385, 386,
	0, 387, 388, 389, 390, 0, 0, 0, 268, 391,
	392, 393, 395, 0, 1159, 394, 1126, 1127, 0, 1087,
	0, 396, 397, 1161, 1119, 1162, 398, 399, 400, 1163,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 1155, 1164, 412, 413,
	1165, 0, 414, 0, 0, 0, 415, 416, 419, 1110,
	1109, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	1166, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 1167, 448, 1050, 269, 1168, 458, 459,
	1072, 1120, 460, 1134, 462, 463, 0, 0, 464, 0,
	0, 0, 466, 467, 468, 0, 0, 469, 470, 646,
	1169, 471, 1170, 1149, 472, 473, 465, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 648,
	485, 486, 487, 649, 488, 489, 490, 1150, 491, 651,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 1130, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 1171, 524, 525, 526, 527, 1060, 528,
	0, 529, 530, 536, 537, 531, 532, 538, 539, 540,
	541, 542, 0, 544, 545, 543, 546, 547, 548, 1113,
	549, 550, 533, 534, 551, 552, 1172, 553, 554, 555,
	556, 557, 558, 1128, 0, 559, 0, 560, 561, 562,
	564, 535, 565, 570, 571, 1175, 566, 567, 568, 569,
	1151, 573, 574, 0, 575, 576, 1048, 572, 563, 0,
	577, 578, 579, 580, 581, 582, 583, 354, 584, 0,
	585, 1140, 1141, 1142, 1143, 0, 594, 0, 586, 587,
	588, 1152, 589, 1153, 1070, 590, 591, 592, 593, 0,
	595, 596, 0, 1054, 597, 598, 599, 601, 602, 600,
	603, 1114, 604, 0, 0, 605, 606, 607, 663, 1137,
	1174, 3547, 609, 608, 610, 666, 0, 0, 0, 0,
	0, 611, 612, 667, 613, 614, 615, 1051, 0, 0,
	0, 0, 0, 0, 0, 1047, 0, 0, 0, 0,
	0, 0, 1045, 1046, 1092, 1064, 1065, 1066, 1062, 1063,
	1075, 1076, 0, 0, 0, 1074, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1116, 1080, 0,
	0, 0, 280, 281, 1156, 282, 283, 284, 285, 286,
	287, 617, 1129, 0, 288, 1136, 289, 1135, 0, 1146,
	290, 291, 292, 293, 294, 295, 1082, 1115, 1049, 296,
	1176, 1177, 624, 0, 297, 298, 1122, 0, 1103, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1157, 321, 322,
	323, 1106, 1104, 1105, 1112, 1108, 1107, 1111, 324, 325,
	326, 327, 328, 1139, 329, 1133, 1132, 1053, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1124, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1059, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1147, 1148, 360, 1071, 267,
	0, 0, 0, 0, 0, 361, 362, 363, 1131, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1158, 367,
	368, 1144, 1145, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 1154, 0, 1081, 379, 0, 380,
	381, 382, 383, 384, 1117, 1118, 1121, 461, 1160, 385,
	386, 0, 387, 388, 389, 390, 0, 0, 0, 268,
	391, 392, 393, 395, 0, 1159, 394, 1126, 1127, 0,
	1087, 0, 396, 397, 1161, 1119, 1162, 398, 399, 400,
	1163, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 1155, 1164, 412,
	413, 1165, 0, 414, 0, 0, 0, 415, 416, 419,
	1110, 1109, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 1166, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 1167, 448, 1050, 269, 1168, 458,
	459, 1072, 1120, 460, 1134, 462, 463, 0, 0, 464,
	0, 0, 0, 466, 467, 468, 0, 0, 469, 470,
	646, 1169, 471, 1170, 1149, 472, 473, 465, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	648, 485, 486, 487, 649, 488, 489, 490, 1150, 491,
	651, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 1130, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 1171, 524, 525, 526, 527, 1060,
	528, 0, 529, 530, 536, 537, 531, 532, 538, 539,
	540, 541, 542, 0, 544, 545, 543, 546, 547, 548,
	1113, 549, 550, 533, 534, 551, 552, 1172, 553, 554,
	555, 556, 557, 558, 1128, 0, 559, 0, 560, 561,
	562, 564, 535, 565, 570, 571, 1175, 566, 567, 568,
	569, 1151, 573, 574, 0, 575, 576, 1048, 572, 563,
	0, 577, 578, 579, 580, 581, 582, 583, 354, 584,
	0, 585, 1140, 1141, 1142, 1143, 0, 594, 0, 586,
	587, 588, 1152, 589, 1153, 1070, 590, 591, 592, 593,
	0, 595, 596, 0, 1054, 597, 598, 599, 601, 602,
	600, 603, 1114, 604, 0, 0, 605, 606, 607, 663,
	1137, 1174, 0, 609, 608, 610, 666, 0, 0, 0,
	0, 0, 611, 612, 667, 613, 614, 615, 1051, 0,
	0, 0, 0, 0, 0, 0, 1047, 0, 0, 0,
	0, 0, 0, 1045, 1046, 1881, 0, 0, 0, 0,
	0, 0, 1076, 0, 0, 0, 1074, 1092, 1064, 1065,
	1066, 1062, 1063, 1075, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1116, 1080, 0, 0, 0, 280, 281, 1156, 282, 283,
	284, 285, 286, 287, 617, 1129, 0, 288, 1136, 289,
	1135, 0, 1146, 290, 291, 292, 293, 294, 295, 1082,
	1115, 1049, 296, 1176, 1177, 624, 0, 297, 298, 1122,
	0, 1103, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1157, 321, 322, 323, 1106, 1104, 1105, 1112, 1108, 1107,
	1111, 324, 325, 326, 327, 328, 1139, 329, 1133, 1132,
	1053, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1124, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1059, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1147, 1148,
	360, 1071, 267, 0, 0, 0, 0, 0, 361, 362,
	363, 1131, 0, 0, 0, 364, 0, 365, 366, 0,
	2588, 1158, 367, 368, 1144, 1145, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1154, 0, 1081,
	379, 0, 380, 381, 382, 383, 384, 1117, 1118, 1121,
	461, 1160, 385, 386, 0, 387, 388, 389, 390, 0,
	0, 0, 268, 391, 392, 393, 395, 0, 1159, 394,
	1126, 1127, 0, 1087, 0, 396, 397, 1161, 1119, 1162,
	398, 399, 400, 1163, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	1155, 1164, 412, 413, 1165, 0, 414, 0, 0, 0,
	415, 416, 419, 1110, 1109, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 1166, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 1167, 448, 1050,
	269, 1168, 458, 459, 1072, 1120, 460, 1134, 462, 463,
	0, 0, 464, 0, 0, 0, 466, 467, 468, 0,
	0, 469, 470, 646, 1169, 471, 1170, 1149, 472, 473,
	465, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 648, 485, 486, 487, 649, 488, 489,
	490, 1150, 491, 651, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 1130, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 1171, 524, 525,
	526, 527, 1060, 528, 0, 529, 530, 536, 537, 531,
	532, 538, 539, 540, 541, 542, 0, 544, 545, 543,
	546, 547, 548, 1113, 549, 550, 533, 534, 551, 552,
	1172, 553, 554, 555, 556, 557, 558, 1128, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 1175,
	566, 567, 568, 569, 1151, 573, 574, 0, 575, 576,
	1048, 572, 563, 0, 577, 578, 579, 580, 581, 582,
	583, 354, 584, 0, 585, 1140, 1141, 1142, 1143, 0,
	594, 0, 586, 587, 588, 1152, 589, 1153, 1070, 590,
	591, 592, 593, 0, 595, 596, 0, 1054, 597, 598,
	599, 601, 602, 600, 603, 1114, 604, 0, 0, 605,
	606, 607, 663, 1137, 1174, 0, 609, 608, 610, 666,
	0, 0, 0, 0, 0, 611, 612, 667, 613, 614,
	615, 1051, 0, 0, 0, 0, 0, 0, 0, 1047,
	0, 0, 0, 0, 0, 0, 1045, 1046, 1092, 1064,
	1065, 1066, 1062, 1063, 1075, 1076, 0, 0, 0, 1074,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 1116, 1080, 0, 0, 0, 280, 281, 1156, 282,
	283, 284, 285, 286, 287, 617, 1129, 0, 288, 1136,
	289, 1135, 0, 1146, 290, 291, 292, 293, 294, 295,
	1082, 1115, 1049, 296, 1176, 1177, 624, 0, 297, 298,
	1122, 0, 1103, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1157, 321, 322, 323, 1106, 1104, 1105, 1112, 1108,
	1107, 1111, 324, 325, 326, 327, 328, 1139, 329, 1133,
	1132, 1053, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 1124, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 1059, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1147,
	1148, 360, 1071, 267, 0, 0, 0, 0, 0, 361,
	362, 363, 1131, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1158, 367, 368, 1144, 1145, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 1154, 0,
	1081, 379, 0, 380, 381, 382, 383, 384, 1117, 1118,
	1121, 461, 1160, 385, 386, 0, 387, 388, 389, 390,
	0, 0, 0, 268, 391, 392, 393, 395, 0, 1159,
	394, 1126, 1127, 0, 1087, 0, 396, 397, 1161, 1119,
	1162, 398, 399, 400, 1163, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 1155, 1164, 412, 413, 1165, 0, 414, 0, 0,
	0, 415, 416, 419, 1110, 1109, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 1166, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 1167, 448,
	1050, 269, 1168, 458, 459, 1072, 1120, 460, 1134, 462,
	463, 0, 0, 464, 0, 0, 0, 466, 467, 468,
	0, 0, 469, 470, 646, 1169, 471, 1170, 1149, 472,
	473, 465, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 648, 485, 486, 487, 649, 488,
	489, 490, 1150, 491, 651, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 1130, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 1171, 524,
	525, 526, 527, 1060, 528, 0, 529, 530, 536, 537,
	531, 532, 538, 539, 540, 541, 542, 0, 544, 545,
	543, 546, 547, 548, 1113, 549, 550, 533, 534, 551,
	552, 1172, 553, 554, 555, 556, 557, 558, 1128, 0,
	559, 0, 560, 561, 562, 564, 535, 565, 570, 571,
	1175, 566, 567, 568, 569, 1151, 573, 574, 0, 575,
	576, 1048, 572, 563, 0, 577, 578, 579, 580, 581,
	582, 583, 354, 584, 0, 585, 1140, 1141, 1142, 1143,
	0, 594, 0, 586, 587, 588, 1152, 589, 1153, 1070,
	590, 591, 592, 593, 0, 595, 596, 0, 1054, 597,
	598, 599, 601, 602, 600, 603, 1114, 604, 0, 0,
	605, 606, 607, 663, 1137, 1174, 0, 609, 608, 610,
	666, 0, 0, 0, 0, 0, 611, 612, 667, 613,
	614, 615, 1051, 0, 0, 0, 0, 0, 0, 0,
	1047, 0, 0, 0, 0, 0, 0, 1045, 1046, 0,
	0, 0, 0, 0, 0, 0, 1076, 1811, 0, 2593,
	1074, 1092, 1064, 1065, 1066, 1062, 1063, 1075, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 1116, 1080, 0, 0, 0, 280,
	281, 1156, 282, 283, 284, 285, 286, 287, 617, 1129,
	0, 288, 1136, 289, 1135, 0, 1146, 290, 291, 292,
	293, 294, 295, 1082, 1115, 1049, 296, 1176, 1177, 624,
	0, 297, 298, 1122, 0, 1103, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1157, 321, 322, 323, 1106, 1104,
	1105, 1112, 1108, 1107, 1111, 324, 325, 326, 327, 328,
	1139, 329, 1133, 1132, 1053, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1124,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1059, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1147, 1148, 360, 1071, 267, 0, 0, 0,
	0, 0, 361, 362, 363, 1131, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1158, 367, 368, 1144, 1145,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 1154, 0, 1081, 379, 0, 380, 381, 382, 383,
	384, 1117, 1118, 1121, 461, 1160, 385, 386, 0, 387,
	388, 389, 390, 0, 0, 0, 268, 391, 392, 393,
	395, 0, 1159, 394, 1126, 1127, 0, 1087, 0, 396,
	397, 1161, 1119, 1162, 398, 399, 400, 1163, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 1155, 1164, 412, 413, 1165, 0,
	414, 0, 0, 0, 415, 416, 419, 1110, 1109, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 1166, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 1167, 448, 1050, 269, 1168, 458, 459, 1072, 1120,
	460, 1134, 462, 463, 0, 0, 464, 0, 0, 0,
	466, 467, 468, 0, 0, 469, 470, 646, 1169, 471,
	1170, 1149, 472, 473, 465, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 648, 485, 486,
	487, 649, 488, 489, 490, 1150, 491, 651, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 1130, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 1171, 524, 525, 526, 527, 1060, 528, 0, 529,
	530, 536, 537, 531, 532, 538, 539, 540, 541, 542,
	0, 544, 545, 543, 546, 547, 548, 1113, 549, 550,
	533, 534, 551, 552, 1172, 553, 554, 555, 556, 557,
	558, 1128, 0, 559, 0, 560, 561, 562, 564, 535,
	565, 570, 571, 1175, 566, 567, 568, 569, 1151, 573,
	574, 0, 575, 576, 1048, 572, 563, 0, 577, 578,
	579, 580, 581, 582, 583, 354, 584, 0, 585, 1140,
	1141, 1142, 1143, 0, 594, 0, 586, 587, 588, 1152,
	589, 1153, 1070, 590, 591, 592, 593, 0, 595, 596,
	0, 1054, 597, 598, 599, 601, 602, 600, 603, 1114,
	604, 0, 0, 605, 606, 607, 663, 1137, 1174, 0,
	609, 608, 610, 666, 0, 0, 0, 0, 0, 611,
	612, 667, 613, 614, 615, 1051, 0, 0, 0, 0,
	0, 0, 0, 1047, 0, 0, 0, 0, 0, 0,
	1045, 1046, 0, 0, 0, 0, 0, 0, 0, 1076,
	0, 0, 2591, 1074, 1092, 1064, 1065, 1066, 1062, 1063,
	1075, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1116, 1080, 0,
	0, 0, 280, 281, 1156, 282, 283, 284, 285, 286,
	287, 617, 1129, 0, 288, 1136, 289, 1135, 0, 1146,
	290, 291, 292, 293, 294, 295, 1082, 1115, 1049, 296,
	1176, 1177, 624, 0, 297, 298, 1122, 0, 1103, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1157, 321, 322,
	323, 1106, 1104, 1105, 1112, 1108, 1107, 1111, 324, 325,
	326, 327, 328, 1139, 329, 1133, 1132, 1053, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1124, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1059, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1147, 1148, 360, 1071, 267,
	0, 0, 0, 0, 0, 361, 362, 363, 1131, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1158, 367,
	368, 1144, 1145, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 1154, 0, 1081, 379, 0, 380,
	381, 382, 383, 384, 1117, 1118, 1121, 461, 1160, 385,
	386, 0, 387, 388, 389, 390, 0, 0, 0, 268,
	391, 392, 393, 395, 0, 1159, 394, 1126, 1127, 0,
	1087, 0, 396, 397, 1161, 1119, 1162, 398, 399, 400,
	1163, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 1155, 1164, 412,
	413, 1165, 0, 414, 0, 0, 0, 415, 416, 419,
	1110, 1109, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 1166, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 1167, 448, 1050, 269, 1168, 458,
	459, 1072, 1120, 460, 1134, 462, 463, 0, 0, 464,
	0, 0, 0, 466, 467, 468, 0, 0, 469, 470,
	646, 1169, 471, 1170, 1149, 472, 473, 465, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	648, 485, 486, 487, 649, 488, 489, 490, 1150, 491,
	651, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 1130, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 1171, 524, 525, 526, 527, 1060,
	528, 0, 529, 530, 536, 537, 531, 532, 538, 539,
	540, 541, 542, 0, 544, 545, 543, 546, 547, 548,
	1113, 549, 550, 533, 534, 551, 552, 1172, 553, 554,
	555, 556, 557, 558, 1128, 0, 559, 0, 560, 561,
	562, 564, 535, 565, 570, 571, 1175, 566, 567, 568,
	569, 1151, 573, 574, 0, 575, 576, 1048, 572, 563,
	0, 577, 578, 579, 580, 581, 582, 583, 354, 584,
	0, 585, 1140, 1141, 1142, 1143, 0, 594, 0, 586,
	587, 588, 1152, 589, 1153, 1070, 590, 591, 592, 593,
	0, 595, 596, 0, 1054, 597, 598, 599, 601, 602,
	600, 603, 1114, 604, 0, 0, 605, 606, 607, 663,
	1137, 1174, 0, 609, 608, 610, 666, 0, 0, 0,
	0, 0, 611, 612, 667, 613, 614, 615, 1051, 0,
	0, 0, 0, 0, 0, 0, 1047, 0, 0, 0,
	0, 0, 0, 1045, 1046, 0, 0, 0, 0, 0,
	0, 0, 1076, 0, 0, 2579, 1074, 1092, 1064, 1065,
	1066, 1062, 1063, 1075, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1116, 1080, 0, 0, 0, 280, 281, 1156, 282, 283,
	284, 285, 286, 287, 617, 1129, 0, 288, 1136, 289,
	1135, 0, 1146, 290, 291, 292, 293, 294, 295, 1082,
	1115, 1049, 296, 1176, 1177, 624, 0, 297, 298, 1122,
	0, 1103, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1157, 321, 322, 323, 1106, 1104, 1105, 1112, 1108, 1107,
	1111, 324, 325, 326, 327, 328, 1139, 329, 1133, 1132,
	1053, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1124, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1059, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1147, 1148,
	360, 1071, 267, 0, 0, 0, 0, 0, 361, 362,
	363, 1131, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1158, 367, 368, 1144, 1145, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1154, 0, 1081,
	379, 0, 380, 381, 382, 383, 384, 1117, 1118, 1121,
	461, 1160, 385, 386, 0, 387, 388, 389, 390, 0,
	0, 0, 268, 391, 392, 393, 395, 0, 1159, 394,
	1126, 1127, 0, 1087, 0, 396, 397, 1161, 1119, 1162,
	398, 399, 400, 1163, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	1155, 1164, 412, 413, 1165, 0, 414, 0, 0, 0,
	415, 416, 419, 1110, 1109, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 1166, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 1167, 448, 1050,
	269, 1168, 458, 459, 1072, 1120, 460, 1134, 462, 463,
	0, 0, 464, 0, 0, 0, 466, 467, 468, 0,
	0, 469, 470, 646, 1169, 471, 1170, 1149, 472, 473,
	465, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 648, 485, 486, 487, 649, 488, 489,
	490, 1150, 491, 651, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 1130, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 1171, 524, 525,
	526, 527, 1060, 528, 0, 529, 530, 536, 537, 531,
	532, 538, 539, 540, 541, 542, 0, 544, 545, 543,
	546, 547, 548, 1113, 549, 550, 533, 534, 551, 552,
	1172, 553, 554, 555, 556, 557, 558, 1128, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 1175,
	566, 567, 568, 569, 1151, 573, 574, 0, 575, 576,
	1048, 572, 563, 0, 577, 578, 579, 580, 581, 582,
	583, 354, 584, 0, 585, 1140, 1141, 1142, 1143, 0,
	594, 0, 586, 587, 588, 1152, 589, 1153, 1070, 590,
	591, 592, 593, 0, 595, 596, 0, 1054, 597, 598,
	599, 601, 602, 600, 603, 1114, 604, 0, 0, 605,
	606, 607, 663, 1137, 1174, 0, 609, 608, 610, 666,
	0, 0, 0, 0, 0, 611, 612, 667, 613, 614,
	615, 1051, 0, 0, 0, 0, 0, 0, 0, 1047,
	0, 0, 0, 0, 0, 0, 1045, 1046, 0, 0,
	0, 0, 0, 0, 0, 1076, 0, 0, 2568, 1074,
	1092, 1064, 1065, 1066, 1062, 1063, 1075, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 1116, 1080, 0, 0, 0, 280, 281,
	1156, 282, 283, 284, 285, 286, 287, 617, 1129, 0,
	288, 1136, 289, 1135, 0, 1146, 290, 291, 292, 293,
	294, 295, 1082, 1115, 1049, 296, 1176, 1177, 624, 0,
	297, 298, 1122, 0, 1103, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1157, 321, 322, 323, 1106, 1104, 1105,
	1112, 1108, 1107, 1111, 324, 325, 326, 327, 328, 1139,
	329, 1133, 1132, 1053, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 1124, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	1059, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1147, 1148, 360, 1071, 267, 0, 0, 0, 0,
	0, 361, 362, 363, 1131, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1158, 367, 368, 1144, 1145, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	1154, 0, 1081, 379, 0, 380, 381, 382, 383, 384,
	1117, 1118, 1121, 461, 1160, 385, 386, 0, 387, 388,
	389, 390, 0, 0, 0, 268, 391, 392, 393, 395,
	0, 1159, 394, 1126, 1127, 0, 1087, 0, 396, 397,
	1161, 1119, 1162, 398, 399, 400, 1163, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 1155, 1164, 412, 413, 1165, 0, 414,
	0, 0, 0, 415, 416, 419, 1110, 1109, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 1166, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	1167, 448, 1050, 269, 1168, 458, 459, 1072, 1120, 460,
	1134, 462, 463, 0, 0, 464, 0, 0, 0, 466,
	467, 468, 0, 0, 469, 470, 646, 1169, 471, 1170,
	1149, 472, 473, 465, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 648, 485, 486, 487,
	649, 488, 489, 490, 1150, 491, 651, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	1130, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	1171, 524, 525, 526, 527, 1060, 528, 0, 529, 530,
	536, 537, 531, 532, 538, 539, 540, 541, 542, 0,
	544, 545, 543, 546, 547, 548, 1113, 549, 550, 533,
	534, 551, 552, 1172, 553, 554, 555, 556, 557, 558,
	1128, 0, 559, 0, 560, 561, 562, 564, 535, 565,
	570, 571, 1175, 566, 567, 568, 569, 1151, 573, 574,
	0, 575, 576, 1048, 572, 563, 0, 577, 578, 579,
	580, 581, 582, 583, 354, 584, 0, 585, 1140, 1141,
	1142, 1143, 0, 594, 0, 586, 587, 588, 1152, 589,
	1153, 1070, 590, 591, 592, 593, 0, 595, 596, 0,
	1054, 597, 598, 599, 601, 602, 600, 603, 1114, 604,
	0, 0, 605, 606, 607, 663, 1137, 1174, 0, 609,
	608, 610, 666, 0, 0, 0, 0, 0, 611, 612,
	667, 613, 614, 615, 1051, 0, 0, 0, 0, 0,
	0, 0, 1047, 0, 0, 0, 0, 0, 0, 1045,
	1046, 0, 0, 0, 0, 0, 0, 0, 1076, 0,
	0, 2566, 1074, 2557, 2564, 1065, 1066, 1062, 1063, 1075,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1116, 1080, 0, 0,
	0, 280, 281, 1156, 282, 283, 284, 285, 286, 287,
	617, 1129, 0, 288, 1136, 289, 1135, 0, 1146, 290,
	291, 292, 293, 294, 295, 1082, 1115, 1049, 296, 1176,
	1177, 624, 0, 297, 298, 1122, 0, 1103, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1157, 321, 322, 323,
	1106, 1104, 1105, 1112, 1108, 1107, 1111, 324, 325, 326,
	327, 328, 1139, 2560, 1133, 1132, 1053, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 1124, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 1059, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1147, 1148, 360, 1071, 267, 0,
	0, 0, 0, 0, 361, 362, 363, 1131, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1158, 367, 368,
	1144, 1145, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 1154, 0, 1081, 379, 0, 380, 381,
	382, 2561, 384, 1117, 1118, 1121, 461, 1160, 385, 386,
	0, 387, 388, 389, 390, 0, 0, 0, 268, 391,
	392, 393, 395, 0, 1159, 394, 1126, 1127, 0, 1087,
	0, 396, 397, 1161, 1119, 1162, 398, 399, 400, 1163,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 1155, 1164, 412, 413,
	1165, 0, 414, 0, 0, 0, 415, 416, 419, 1110,
	1109, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 2562, 429, 2559, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	1166, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 1167, 448, 1050, 269, 1168, 458, 459,
	1072, 1120, 460, 1134, 462, 463, 0, 0, 464, 0,
	0, 0, 466, 467, 468, 0, 0, 469, 470, 646,
	1169, 471, 1170, 1149, 472, 473, 465, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 648,
	485, 486, 487, 649, 488, 489, 490, 1150, 491, 651,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 1130, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 1171, 524, 525, 526, 527, 1060, 528,
	0, 529, 530, 536, 537, 531, 532, 538, 539, 540,
	541, 2563, 0, 544, 545, 543, 546, 547, 548, 1113,
	549, 550, 533, 534, 551, 552, 1172, 553, 554, 555,
	556, 557, 558, 1128, 0, 559, 0, 560, 561, 562,
	564, 535, 565, 570, 571, 1175, 566, 567, 568, 569,
	1151, 573, 574, 0, 575, 576, 1048, 572, 563, 0,
	577, 578, 579, 580, 581, 582, 583, 354, 584, 0,
	585, 1140, 1141, 1142, 1143, 0, 594, 0, 586, 587,
	588, 1152, 589, 1153, 1070, 590, 591, 592, 593, 0,
	595, 596, 0, 1054, 597, 598, 599, 601, 602, 600,
	603, 1114, 604, 0, 0, 605, 606, 607, 663, 1137,
	1174, 0, 609, 608, 610, 666, 0, 0, 0, 0,
	0, 611, 612, 667, 613, 2558, 615, 1051, 0, 0,
	0, 0, 0, 0, 0, 1047, 0, 0, 0, 0,
	0, 0, 1045, 1046, 0, 0, 0, 0, 0, 0,
	0, 1076, 0, 0, 2554, 1074, 2557, 2564, 1065, 1066,
	1062, 1063, 1075, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1116,
	1080, 0, 0, 0, 280, 281, 1156, 282, 283, 284,
	285, 286, 287, 617, 1129, 0, 288, 1136, 289, 1135,
	0, 1146, 290, 291, 292, 293, 294, 295, 1082, 1115,
	1049, 296, 1176, 1177, 624, 0, 297, 298, 1122, 0,
	1103, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1157,
	321, 322, 323, 1106, 1104, 1105, 1112, 1108, 1107, 1111,
	324, 325, 326, 327, 328, 1139, 2560, 1133, 1132, 1053,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1124, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1059, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1147, 1148, 360,
	1071, 267, 0, 0, 0, 0, 0, 361, 362, 363,
	1131, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1158, 367, 368, 1144, 1145, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1154, 0, 1081, 379,
	0, 380, 381, 382, 2561, 384, 1117, 1118, 1121, 461,
	1160, 385, 386, 0, 387, 388, 389, 390, 0, 0,
	0, 268, 391, 392, 393, 395, 0, 1159, 394, 1126,
	1127, 0, 1087, 0, 396, 397, 1161, 1119, 1162, 398,
	399, 400, 1163, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 1155,
	1164, 412, 413, 1165, 0, 414, 0, 0, 0, 415,
	416, 419, 1110, 1109, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 2562, 429, 2559, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 1166, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 1167, 448, 1050, 269,
	1168, 458, 459, 1072, 1120, 460, 1134, 462, 463, 0,
	0, 464, 0, 0, 0, 466, 467, 468, 0, 0,
	469, 470, 646, 1169, 471, 1170, 1149, 472, 473, 465,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 648, 485, 486, 487, 649, 488, 489, 490,
	1150, 491, 651, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 1130, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 1171, 524, 525, 526,
	527, 1060, 528, 0, 529, 530, 536, 537, 531, 532,
	538, 539, 540, 541, 2563, 0, 544, 545, 543, 546,
	547, 548, 1113, 549, 550, 533, 534, 551, 552, 1172,
	553, 554, 555, 556, 557, 558, 1128, 0, 559, 0,
	560, 561, 562, 564, 535, 565, 570, 571, 1175, 566,
	567, 568, 569, 1151, 573, 574, 0, 575, 576, 1048,
	572, 563, 0, 577, 578, 579, 580, 581, 582, 583,
	354, 584, 0, 585, 1140, 1141, 1142, 1143, 0, 594,
	0, 586, 587, 588, 1152, 589, 1153, 1070, 590, 591,
	592, 593, 0, 595, 596, 0, 1054, 597, 598, 599,
	601, 602, 600, 603, 1114, 604, 0, 0, 605, 606,
	607, 663, 1137, 1174, 0, 609, 608, 610, 666, 0,
	0, 0, 0, 0, 611, 612, 667, 613, 2558, 615,
	1051, 0, 0, 0, 0, 0, 0, 0, 1047, 0,
	0, 0, 0, 0, 0, 1045, 1046, 1092, 1064, 1065,
	1066, 1062, 1063, 1075, 1076, 0, 0, 0, 1074, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1116, 1080, 0, 0, 0, 280, 281, 1156, 282, 283,
	284, 285, 286, 287, 617, 1129, 0, 288, 1136, 289,
	1135, 0, 1146, 290, 291, 292, 293, 294, 295, 1082,
	1115, 1049, 296, 1176, 1177, 624, 0, 297, 298, 1122,
	0, 1103, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1157, 321, 322, 323, 1106, 1104, 1105, 1112, 1108, 1107,
	1111, 324, 325, 326, 327, 328, 1139, 329, 1133, 1132,
	1053, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1124, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1059, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1147, 1148,
	360, 1071, 267, 0, 0, 0, 0, 0, 361, 362,
	363, 1131, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1158, 367, 368, 1144, 1145, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1154, 0, 1081,
	379, 0, 380, 381, 382, 383, 384, 1117, 1118, 1121,
	461, 1160, 385, 386, 0, 387, 388, 389, 390, 0,
	0, 0, 268, 391, 392, 393, 395, 0, 1159, 394,
	1126, 1127, 0, 1087, 0, 396, 397, 1161, 1119, 1162,
	398, 399, 400, 1163, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	1155, 1164, 412, 413, 1165, 0, 414, 0, 0, 0,
	415, 416, 419, 1110, 1109, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 1166, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 1167, 448, 1050,
	269, 1168, 458, 459, 1072, 1120, 460, 1134, 462, 463,
	0, 0, 464, 0, 0, 0, 466, 467, 468, 0,
	0, 469, 470, 646, 1169, 471, 1170, 1149, 472, 473,
	465, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 648, 485, 486, 487, 649, 488, 489,
	490, 1150, 491, 651, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 1130, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 1171, 524, 525,
	526, 527, 1060, 528, 0, 529, 530, 536, 537, 531,
	532, 538, 539, 540, 541, 542, 0, 544, 545, 543,
	546, 547, 548, 1113, 549, 550, 533, 534, 551, 552,
	1172, 553, 554, 555, 556, 557, 558, 1128, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 1175,
	566, 567, 568, 569, 1151, 573, 574, 0, 575, 576,
	1048, 572, 563, 0, 577, 578, 579, 580, 581, 582,
	583, 354, 584, 0, 585, 1140, 1141, 1142, 1143, 0,
	594, 0, 586, 587, 588, 1152, 589, 1153, 1070, 590,
	591, 592, 593, 0, 595, 596, 0, 1054, 597, 598,
	599, 601, 602, 600, 603, 1114, 604, 0, 0, 605,
	606, 607, 663, 1137, 1174, 0, 609, 608, 610, 666,
	0, 0, 0, 0, 0, 611, 612, 667, 613, 614,
	615, 1051, 0, 0, 0, 0, 0, 0, 0, 1047,
	0, 0, 0, 0, 0, 0, 1045, 1046, 0, 0,
	0, 0, 0, 1819, 0, 1076, 0, 0, 0, 1074,
	1092, 1064, 1065, 1066, 1062, 1063, 1075, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 2348, 278, 279, 0, 0,
	0, 0, 0, 1116, 1080, 0, 0, 0, 280, 281,
	1156, 282, 283, 284, 285, 286, 287, 617, 1129, 0,
	288, 1136, 289, 1135, 0, 1146, 290, 291, 292, 293,
	294, 295, 1082, 1115, 1049, 296, 1176, 1177, 624, 0,
	297, 298, 1122, 0, 1103, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1157, 321, 322, 323, 1106, 1104, 1105,
	1112, 1108, 1107, 1111, 324, 325, 326, 327, 328, 1139,
	329, 1133, 1132, 1053, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 1124, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	1059, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1147, 1148, 360, 1071, 267, 0, 0, 0, 0,
	0, 361, 362, 363, 1131, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1158, 367, 368, 1144, 1145, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	1154, 0, 1081, 379, 0, 380, 381, 382, 383, 384,
	1117, 1118, 1121, 461, 1160, 385, 386, 0, 387, 388,
	389, 390, 0, 0, 0, 268, 391, 392, 393, 395,
	0, 1159, 394, 1126, 1127, 0, 1087, 0, 396, 397,
	1161, 1119, 1162, 398, 399, 400, 1163, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 1155, 1164, 412, 413, 1165, 0, 414,
	0, 0, 0, 415, 416, 419, 1110, 1109, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 1166, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	1167, 448, 1050, 269, 1168, 458, 459, 1072, 1120, 460,
	1134, 462, 463, 0, 0, 464, 0, 0, 0, 466,
	467, 468, 0, 0, 469, 470, 646, 1169, 471, 1170,
	1149, 472, 473, 465, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 648, 485, 486, 487,
	649, 488, 489, 490, 1150, 491, 651, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	1130, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	1171, 524, 525, 526, 527, 1060, 528, 0, 529, 530,
	536, 537, 531, 532, 538, 539, 540, 541, 542, 0,
	544, 545, 543, 546, 547, 548, 1113, 549, 550, 533,
	534, 551, 552, 1172, 553, 554, 555, 556, 557, 558,
	1128, 0, 559, 0, 560, 561, 562, 564, 535, 565,
	570, 571, 1175, 566, 567, 568, 569, 1151, 573, 574,
	0, 575, 576, 1048, 572, 563, 0, 577, 578, 579,
	580, 581, 582, 583, 354, 584, 0, 585, 1140, 1141,
	1142, 1143, 0, 594, 0, 586, 587, 588, 1152, 589,
	1153, 1070, 590, 591, 592, 593, 0, 595, 596, 0,
	1054, 597, 598, 599, 601, 602, 600, 603, 1114, 604,
	0, 0, 605, 606, 607, 663, 1137, 1174, 0, 609,
	608, 610, 666, 0, 0, 0, 0, 0, 611, 612,
	667, 613, 614, 615, 1051, 0, 0, 0, 0, 0,
	0, 0, 1047, 0, 0, 0, 0, 0, 0, 1045,
	1046, 0, 0, 0, 0, 0, 0, 0, 1076, 0,
	0, 1667, 1074, 1092, 1064, 1065, 1066, 1062, 1063, 1075,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1116, 1080, 0, 0,
	0, 280, 281, 1156, 282, 283, 284, 285, 286, 287,
	617, 1129, 0, 288, 1136, 289, 1135, 0, 1146, 290,
	291, 292, 293, 294, 295, 1082, 1115, 1049, 296, 1176,
	1177, 624, 0, 297, 298, 1122, 0, 1103, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1157, 321, 322, 323,
	1106, 1104, 1105, 1112, 1108, 1107, 1111, 324, 325, 326,
	327, 328, 1139, 329, 1133, 1132, 1053, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 1124, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 1059, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1147, 1148, 360, 1071, 267, 0,
	0, 0, 0, 0, 361, 362, 363, 1131, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1158, 367, 368,
	1144, 1145, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 1154, 0, 1081, 379, 0, 380, 381,
	382, 383, 384, 1117, 1118, 1121, 461, 1160, 385, 386,
	0, 387, 388, 389, 390, 0, 0, 0, 268, 391,
	392, 393, 395, 0, 1159, 394, 1126, 1127, 0, 1087,
	0, 396, 397, 1161, 1119, 1162, 398, 399, 400, 1163,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 1155, 1164, 412, 413,
	1165, 0, 414, 0, 0, 0, 415, 416, 419, 1110,
	1109, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	1166, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 1167, 448, 1050, 269, 1168, 458, 459,
	1072, 1120, 460, 1134, 462, 463, 0, 0, 464, 0,
	0, 0, 466, 467, 468, 0, 0, 469, 470, 646,
	1169, 471, 1170, 1149, 472, 473, 465, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 648,
	485, 486, 487, 649, 488, 489, 490, 1150, 491, 651,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 1130, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 1171, 524, 525, 526, 527, 1060, 528,
	0, 529, 530, 536, 537, 531, 532, 538, 539, 540,
	541, 542, 0, 544, 545, 543, 546, 547, 548, 1113,
	549, 550, 533, 534, 551, 552, 1172, 553, 554, 555,
	556, 557, 558, 1128, 0, 559, 0, 560, 561, 562,
	564, 535, 565, 570, 571, 1175, 566, 567, 568, 569,
	1151, 573, 574, 0, 575, 576, 1048, 572, 563, 0,
	577, 578, 579, 580, 581, 582, 583, 354, 584, 0,
	585, 1140, 1141, 1142, 1143, 0, 594, 0, 586, 587,
	588, 1152, 589, 1153, 1070, 590, 591, 592, 593, 0,
	595, 596, 0, 1054, 597, 598, 599, 601, 602, 600,
	603, 1114, 604, 0, 0, 605, 606, 607, 663, 1137,
	1174, 0, 609, 608, 610, 666, 0, 0, 0, 0,
	0, 611, 612, 667, 613, 614, 615, 1051, 0, 0,
	0, 0, 0, 0, 0, 1047, 0, 0, 0, 0,
	0, 0, 1045, 1046, 0, 0, 0, 0, 0, 0,
	0, 1076, 0, 0, 1599, 1074, 1092, 1064, 1065, 1066,
	1062, 1063, 1075, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1116,
	1080, 0, 0, 0, 280, 281, 1156, 282, 283, 284,
	285, 286, 287, 617, 1129, 0, 288, 1136, 289, 1135,
	0, 1146, 290, 291, 292, 293, 294, 295, 1082, 1115,
	1049, 296, 1176, 1177, 624, 0, 297, 298, 1122, 0,
	1103, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1157,
	321, 322, 323, 1106, 1104, 1105, 1112, 1108, 1107, 1111,
	324, 325, 326, 327, 328, 1139, 329, 1133, 1132, 1053,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1124, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1059, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1147, 1148, 360,
	1071, 267, 0, 0, 0, 0, 0, 361, 362, 363,
	1131, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1158, 367, 368, 1144, 1145, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1154, 0, 1081, 379,
	0, 380, 381, 382, 383, 384, 1117, 1118, 1121, 461,
	1160, 385, 386, 0, 387, 388, 389, 390, 0, 0,
	0, 268, 391, 392, 393, 395, 0, 1159, 394, 1126,
	1127, 0, 1087, 0, 396, 397, 1161, 1119, 1162, 398,
	399, 400, 1163, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 1155,
	1164, 412, 413, 1165, 0, 414, 0, 0, 0, 415,
	416, 419, 1110, 1109, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 1166, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 1167, 448, 1050, 269,
	1168, 458, 459, 1072, 1120, 460, 1134, 462, 463, 0,
	0, 464, 0, 0, 0, 466, 467, 468, 0, 0,
	469, 470, 646, 1169, 471, 1170, 1149, 472, 473, 465,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 648, 485, 486, 487, 649, 488, 489, 490,
	1150, 491, 651, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 1130, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 1171, 524, 525, 526,
	527, 1060, 528, 0, 529, 530, 536, 537, 531, 532,
	538, 539, 540, 541, 542, 0, 544, 545, 543, 546,
	547, 548, 1113, 549, 550, 533, 534, 551, 552, 1172,
	553, 554, 555, 556, 557, 558, 1128, 0, 559, 0,
	560, 561, 562, 564, 535, 565, 570, 571, 1175, 566,
	567, 568, 569, 1151, 573, 574, 0, 575, 576, 1048,
	572, 563, 0, 577, 578, 579, 580, 581, 582, 583,
	354, 584, 0, 585, 1140, 1141, 1142, 1143, 0, 594,
	0, 586, 587, 588, 1152, 589, 1153, 1070, 590, 591,
	592, 593, 0, 595, 596, 0, 1054, 597, 598, 599,
	601, 602, 600, 603, 1114, 604, 0, 0, 605, 606,
	607, 663, 1137, 1174, 0, 609, 608, 610, 666, 0,
	0, 0, 0, 0, 611, 612, 667, 613, 614, 615,
	1051, 0, 0, 0, 0, 0, 0, 0, 1047, 0,
	0, 0, 0, 0, 0, 1045, 1046, 0, 0, 0,
	0, 0, 0, 0, 1076, 0, 0, 1594, 1074, 1092,
	1064, 1065, 1066, 1062, 1063, 1075, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1116, 1080, 0, 0, 0, 280, 281, 1156,
	282, 283, 284, 285, 286, 287, 617, 1129, 0, 288,
	1136, 289, 1135, 0, 1146, 290, 291, 292, 293, 294,
	295, 1082, 1115, 1049, 296, 1176, 1177, 624, 0, 297,
	298, 1122, 0, 1103, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1157, 321, 322, 323, 1106, 1104, 1105, 1112,
	1108, 1107, 1111, 324, 325, 326, 327, 328, 1139, 329,
	1133, 1132, 1053, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 1124, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 1059,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1147, 1148, 360, 1071, 267, 0, 0, 0, 0, 0,
	361, 362, 363, 1131, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1158, 367, 368, 1144, 1145, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 1154,
	0, 1081, 379, 0, 380, 381, 382, 383, 384, 1117,
	1118, 1121, 461, 1160, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 268, 391, 392, 393, 395, 0,
	1159, 394, 1126, 1127, 0, 1087, 0, 396, 397, 1161,
	1119, 1162, 398, 399, 400, 1163, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 1155, 1164, 412, 413, 1165, 0, 414, 0,
	0, 0, 415, 416, 419, 1110, 1109, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 1166, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 1167,
	448, 1050, 269, 1168, 458, 459, 1072, 1120, 460, 1134,
	462, 463, 0, 0, 464, 0, 0, 0, 466, 467,
	468, 0, 0, 469, 470, 646, 1169, 471, 1170, 1149,
	472, 473, 465, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 648, 485, 486, 487, 649,
	488, 489, 490, 1150, 491, 651, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 1130,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 1171,
	524, 525, 526, 527, 1060, 528, 0, 529, 530, 536,
	537, 531, 532, 538, 539, 540, 541, 542, 0, 544,
	545, 543, 546, 547, 548, 1113, 549, 550, 533, 534,
	551, 552, 1172, 553, 554, 555, 556, 557, 558, 1128,
	0, 559, 0, 560, 561, 562, 564, 535, 565, 570,
	571, 1175, 566, 567, 568, 569, 1151, 573, 574, 0,
	575, 576, 1048, 572, 563, 0, 577, 578, 579, 580,
	581, 582, 583, 354, 584, 0, 585, 1140, 1141, 1142,
	1143, 0, 594, 0, 586, 587, 588, 1152, 589, 1153,
	1070, 590, 591, 592, 593, 0, 595, 596, 0, 1054,
	597, 598, 599, 601, 602, 600, 603, 1114, 604, 0,
	0, 605, 606, 607, 663, 1137, 1174, 0, 609, 608,
	610, 666, 0, 0, 0, 0, 0, 611, 612, 667,
	613, 614, 615, 1051, 0, 0, 0, 0, 0, 0,
	0, 1047, 0, 0, 0, 0, 0, 0, 1045, 1046,
	0, 0, 0, 0, 0, 0, 0, 1076, 0, 0,
	1585, 1074, 1092, 1064, 1065, 1066, 1062, 1063, 1075, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1116, 1080, 0, 0, 0,
	280, 281, 1156, 282, 283, 284, 285, 286, 287, 617,
	1129, 0, 288, 1136, 289, 1135, 0, 1146, 290, 291,
	292, 293, 294, 295, 1082, 1115, 1049, 296, 1176, 1177,
	624, 0, 297, 298, 1122, 0, 1103, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1157, 321, 322, 323, 1106,
	1104, 1105, 1112, 1108, 1107, 1111, 324, 325, 326, 327,
	328, 1139, 329, 1133, 1132, 1053, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	1124, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 1059, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1147, 1148, 360, 1071, 267, 0, 0,
	0, 0, 0, 361, 362, 363, 1131, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1158, 367, 368, 1144,
	1145, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 1154, 0, 1081, 379, 0, 380, 381, 382,
	383, 384, 1117, 1118, 1121, 461, 1160, 385, 386, 0,
	387, 388, 389, 390, 0, 0, 0, 268, 391, 392,
	393, 395, 0, 1159, 394, 1126, 1127, 0, 1087, 0,
	396, 397, 1161, 1119, 1162, 398, 399, 400, 1163, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 1155, 1164, 412, 413, 1165,
	0, 414, 0, 0, 0, 415, 416, 419, 1110, 1109,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 1166,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 1167, 448, 1050, 269, 1168, 458, 459, 1072,
	1120, 460, 1134, 462, 463, 0, 0, 464, 0, 0,
	0, 466, 467, 468, 0, 0, 469, 470, 646, 1169,
	471, 1170, 1149, 472, 473, 465, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 648, 485,
	486, 487, 649, 488, 489, 490, 1150, 491, 651, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 1130, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 1171, 524, 525, 526, 527, 1060, 528, 0,
	529, 530, 536, 537, 531, 532, 538, 539, 540, 541,
	542, 0, 544, 545, 543, 546, 547, 548, 1113, 549,
	550, 533, 534, 551, 552, 1172, 553, 554, 555, 556,
	557, 558, 1128, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 1175, 566, 567, 568, 569, 1151,
	573, 574, 0, 575, 576, 1048, 572, 563, 0, 577,
	578, 579, 580, 581, 582, 583, 354, 584, 0, 585,
	1140, 1141, 1142, 1143, 0, 594, 0, 586, 587, 588,
	1152, 589, 1153, 1070, 590, 591, 592, 593, 0, 595,
	596, 0, 1054, 597, 598, 599, 601, 602, 600, 603,
	1114, 604, 0, 0, 605, 606, 607, 663, 1137, 1174,
	0, 609, 608, 610, 666, 0, 0, 0, 0, 0,
	611, 612, 667, 613, 614, 615, 1051, 0, 0, 0,
	0, 0, 0, 0, 1047, 0, 0, 0, 0, 0,
	0, 1045, 1046, 0, 0, 0, 0, 0, 0, 0,
	1076, 0, 0, 1580, 1074, 1092, 1064, 1065, 1066, 1062,
	1063, 1075, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1116, 1080,
	0, 0, 0, 280, 281, 1156, 282, 283, 284, 285,
	286, 287, 617, 1129, 0, 288, 1136, 289, 1135, 0,
	1146, 290, 291, 292, 293, 294, 295, 1082, 1115, 1049,
	296, 1176, 1177, 624, 0, 297, 298, 1122, 0, 1103,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1157, 321,
	322, 323, 1106, 1104, 1105, 1112, 1108, 1107, 1111, 324,
	325, 326, 327, 328, 1139, 329, 1133, 1132, 1053, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1124, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1059, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1147, 1148, 360, 1071,
	267, 0, 0, 0, 0, 0, 361, 362, 363, 1131,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1158,
	367, 368, 1144, 1145, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 1154, 0, 1081, 379, 0,
	380, 381, 382, 383, 384, 1117, 1118, 1121, 461, 1160,
	385, 386, 0, 387, 388, 389, 390, 0, 0, 0,
	268, 391, 392, 393, 395, 0, 1159, 394, 1126, 1127,
	0, 1087, 0, 396, 397, 1161, 1119, 1162, 398, 399,
	400, 1163, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 1155, 1164,
	412, 413, 1165, 0, 414, 0, 0, 0, 415, 416,
	419, 1110, 1109, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 1166, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 1167, 448, 1050, 269, 1168,
	458, 459, 1072, 1120, 460, 1134, 462, 463, 0, 0,
	464, 0, 0, 0, 466, 467, 468, 0, 0, 469,
	470, 646, 1169, 471, 1170, 1149, 472, 473, 465, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 648, 485, 486, 487, 649, 488, 489, 490, 1150,
	491, 651, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 1130, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 1171, 524, 525, 526, 527,
	1060, 528, 0, 529, 530, 536, 537, 531, 532, 538,
	539, 540, 541, 542, 0, 544, 545, 543, 546, 547,
	548, 1113, 549, 550, 533, 534, 551, 552, 1172, 553,
	554, 555, 556, 557, 558, 1128, 0, 559, 0, 560,
	561, 562, 564, 535, 565, 570, 571, 1175, 566, 567,
	568, 569, 1151, 573, 574, 0, 575, 576, 1048, 572,
	563, 0, 577, 578, 579, 580, 581, 582, 583, 354,
	584, 0, 585, 1140, 1141, 1142, 1143, 0, 594, 0,
	586, 587, 588, 1152, 589, 1153, 1070, 590, 591, 592,
	593, 0, 595, 596, 0, 1054, 597, 598, 599, 601,
	602, 600, 603, 1114, 604, 0, 0, 605, 606, 607,
	663, 1137, 1174, 0, 609, 608, 610, 666, 0, 0,
	0, 0, 0, 611, 612, 667, 613, 614, 615, 1051,
	0, 0, 0, 0, 0, 0, 0, 1047, 0, 0,
	0, 0, 0, 0, 1045, 1046, 0, 0, 0, 0,
	0, 0, 0, 1076, 0, 0, 1492, 1074, 1092, 1064,
	1065, 1066, 1062, 1063, 1075, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 1116, 1080, 0, 0, 0, 280, 281, 1156, 282,
	283, 284, 285, 286, 287, 617, 1129, 0, 288, 1136,
	289, 1135, 0, 1146, 290, 291, 292, 293, 294, 295,
	1082, 1115, 1049, 296, 1176, 1177, 624, 0, 297, 298,
	1122, 0, 1103, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1157, 321, 322, 323, 1106, 1104, 1105, 1112, 1108,
	1107, 1111, 324, 325, 326, 327, 328, 1139, 329, 1133,
	1132, 1053, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 1124, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 1059, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1147,
	1148, 360, 1071, 267, 0, 0, 0, 0, 0, 361,
	362, 363, 1131, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1158, 367, 368, 1144, 1145, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 1154, 0,
	1081, 379, 0, 380, 381, 382, 383, 384, 1491, 1118,
	1121, 461, 1160, 385, 386, 0, 387, 388, 389, 390,
	0, 0, 0, 268, 391, 392, 393, 395, 0, 1159,
	394, 1126, 1127, 0, 1087, 0, 396, 397, 1161, 1119,
	1162, 398, 399, 400, 1163, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 1155, 1164, 412, 413, 1165, 0, 414, 0, 0,
	0, 415, 416, 419, 1110, 1109, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 1166, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 1167, 448,
	1050, 269, 1168, 458, 459, 1072, 1120, 460, 1134, 462,
	463, 0, 0, 464, 0, 0, 0, 466, 467, 468,
	0, 0, 469, 470, 646, 1169, 471, 1170, 1149, 472,
	473, 465, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 648, 485, 486, 487, 649, 488,
	489, 490, 1150, 491, 651, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 1130, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 1171, 524,
	525, 526, 527, 1060, 528, 0, 529, 530, 536, 537,
	531, 532, 538, 539, 540, 541, 542, 0, 544, 545,
	543, 546, 547, 548, 1113, 549, 550, 533, 534, 551,
	552, 1172, 553, 554, 555, 556, 557, 558, 1128, 0,
	559, 0, 560, 561, 562, 564, 535, 565, 570, 571,
	1175, 566, 567, 568, 569, 1151, 573, 574, 0, 575,
	576, 1048, 572, 563, 0, 577, 578, 579, 580, 581,
	582, 583, 354, 584, 0, 585, 1140, 1141, 1142, 1143,
	0, 594, 0, 586, 587, 588, 1152, 589, 1153, 1070,
	590, 591, 592, 593, 0, 595, 596, 0, 1054, 597,
	598, 599, 601, 602, 600, 603, 1114, 604, 0, 0,
	605, 606, 607, 663, 1137, 1174, 0, 609, 608, 610,
	666, 0, 0, 0, 0, 0, 611, 612, 667, 613,
	614, 615, 1051, 0, 0, 0, 0, 0, 0, 0,
	1047, 0, 0, 0, 0, 0, 0, 1045, 1046, 0,
	0, 0, 0, 0, 0, 0, 1076, 0, 0, 1486,
	1074, 1092, 1064, 1065, 1066, 1062, 1063, 1075, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 1116, 1080, 0, 0, 0, 280,
	281, 1156, 282, 283, 284, 285, 286, 287, 617, 1129,
	0, 288, 1136, 289, 1135, 0, 1146, 290, 291, 292,
	293, 294, 295, 1082, 1115, 1049, 296, 1176, 1177, 624,
	0, 297, 298, 1122, 0, 1103, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1157, 321, 322, 323, 1106, 1104,
	1105, 1112, 1108, 1107, 1111, 324, 325, 326, 327, 328,
	1139, 329, 1133, 1132, 1053, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1124,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1059, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1147, 1148, 360, 1071, 267, 0, 0, 0,
	0, 0, 361, 362, 363, 1131, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1158, 367, 368, 1144, 1145,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 1154, 0, 1081, 379, 0, 380, 381, 382, 383,
	384, 1485, 1118, 1121, 461, 1160, 385, 386, 0, 387,
	388, 389, 390, 0, 0, 0, 268, 391, 392, 393,
	395, 0, 1159, 394, 1126, 1127, 0, 1087, 0, 396,
	397, 1161, 1119, 1162, 398, 399, 400, 1163, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 1155, 1164, 412, 413, 1165, 0,
	414, 0, 0, 0, 415, 416, 419, 1110, 1109, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 1166, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 1167, 448, 1050, 269, 1168, 458, 459, 1072, 1120,
	460, 1134, 462, 463, 0, 0, 464, 0, 0, 0,
	466, 467, 468, 0, 0, 469, 470, 646, 1169, 471,
	1170, 1149, 472, 473, 465, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 648, 485, 486,
	487, 649, 488, 489, 490, 1150, 491, 651, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 1130, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 1171, 524, 525, 526, 527, 1060, 528, 0, 529,
	530, 536, 537, 531, 532, 538, 539, 540, 541, 542,
	0, 544, 545, 543, 546, 547, 548, 1113, 549, 550,
	533, 534, 551, 552, 1172, 553, 554, 555, 556, 557,
	558, 1128, 0, 559, 0, 560, 561, 562, 564, 535,
	565, 570, 571, 1175, 566, 567, 568, 569, 1151, 573,
	574, 0, 575, 576, 1048, 572, 563, 0, 577, 578,
	579, 580, 581, 582, 583, 354, 584, 0, 585, 1140,
	1141, 1142, 1143, 0, 594, 0, 586, 587, 588, 1152,
	589, 1153, 1070, 590, 591, 592, 593, 0, 595, 596,
	0, 1054, 597, 598, 599, 601, 602, 600, 603, 1114,
	604, 0, 0, 605, 606, 607, 663, 1137, 1174, 0,
	609, 608, 610, 666, 0, 0, 0, 0, 0, 611,
	612, 667, 613, 614, 615, 1051, 0, 0, 0, 0,
	0, 0, 0, 1047, 0, 0, 0, 0, 0, 0,
	1045, 1046, 0, 0, 0, 0, 0, 0, 0, 1076,
	0, 0, 1479, 1074, 1092, 1064, 1065, 1066, 1062, 1063,
	1075, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1116, 1080, 0,
	0, 0, 280, 281, 1156, 282, 283, 284, 285, 286,
	287, 617, 1129, 0, 288, 1136, 289, 1135, 0, 1146,
	290, 291, 292, 293, 294, 295, 1082, 1115, 1049, 296,
	1176, 1177, 624, 0, 297, 298, 1122, 0, 1103, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1157, 321, 322,
	323, 1106, 1104, 1105, 1112, 1108, 1107, 1111, 324, 325,
	326, 327, 328, 1139, 329, 1133, 1132, 1053, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1124, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1059, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1147, 1148, 360, 1071, 267,
	0, 0, 0, 0, 0, 361, 362, 363, 1131, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1158, 367,
	368, 1144, 1145, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 1154, 0, 1081, 379, 0, 380,
	381, 382, 383, 384, 1117, 1118, 1121, 461, 1160, 385,
	386, 0, 387, 388, 389, 390, 0, 0, 0, 268,
	391, 392, 393, 395, 0, 1159, 394, 1126, 1127, 0,
	1087, 0, 396, 397, 1161, 1119, 1162, 398, 399, 400,
	1163, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 1155, 1164, 412,
	413, 1165, 0, 414, 0, 0, 0, 415, 416, 419,
	1110, 1109, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 1166, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 1167, 448, 1050, 269, 1168, 458,
	459, 1072, 1120, 460, 1134, 462, 463, 0, 0, 464,
	0, 0, 0, 466, 467, 468, 0, 0, 469, 470,
	646, 1169, 471, 1170, 1149, 472, 473, 465, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	648, 485, 486, 487, 649, 488, 489, 490, 1150, 491,
	651, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 1130, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 1171, 524, 525, 526, 527, 1060,
	528, 0, 529, 530, 536, 537, 531, 532, 538, 539,
	540, 541, 542, 0, 544, 545, 543, 546, 547, 548,
	1113, 549, 550, 533, 534, 551, 552, 1172, 553, 554,
	555, 556, 557, 558, 1128, 0, 559, 0, 560, 561,
	562, 564, 535, 565, 570, 571, 1175, 566, 567, 568,
	569, 1151, 573, 574, 0, 575, 576, 1048, 572, 563,
	0, 577, 578, 579, 580, 581, 582, 583, 354, 584,
	0, 585, 1140, 1141, 1142, 1143, 0, 594, 0, 586,
	587, 588, 1152, 589, 1153, 1070, 590, 591, 592, 593,
	0, 595, 596, 0, 1054, 597, 598, 599, 601, 602,
	600, 603, 1114, 604, 0, 0, 605, 606, 607, 663,
	1137, 1174, 0, 609, 608, 610, 666, 0, 0, 0,
	0, 0, 611, 612, 667, 613, 614, 615, 1051, 0,
	0, 0, 0, 0, 0, 0, 1047, 0, 0, 0,
	0, 0, 0, 1045, 1046, 0, 0, 0, 0, 0,
	0, 0, 1076, 0, 0, 1302, 1074, 1092, 1064, 1065,
	1066, 1062, 1063, 1075, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1116, 1080, 0, 0, 0, 280, 281, 1156, 282, 283,
	284, 285, 286, 287, 617, 1129, 0, 288, 1136, 289,
	1135, 0, 1146, 290, 291, 292, 293, 294, 295, 1082,
	1115, 1049, 296, 1176, 1177, 624, 0, 297, 298, 1122,
	0, 1103, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1157, 321, 322, 323, 1106, 1104, 1105, 1112, 1108, 1107,
	1111, 324, 325, 326, 327, 328, 1139, 329, 1133, 1132,
	1053, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1124, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1059, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1147, 1148,
	360, 1071, 267, 0, 0, 0, 0, 0, 361, 362,
	363, 1131, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1158, 367, 368, 1144, 1145, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1154, 0, 1081,
	379, 0, 380, 381, 382, 383, 384, 1117, 1118, 1121,
	461, 1160, 385, 386, 0, 387, 388, 389, 390, 0,
	0, 0, 268, 391, 392, 393, 395, 0, 1159, 394,
	1126, 1127, 0, 1087, 0, 396, 397, 1161, 1119, 1162,
	398, 399, 400, 1163, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	1155, 1164, 412, 413, 1165, 0, 414, 0, 0, 0,
	415, 416, 419, 1110, 1109, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 1166, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 1167, 448, 1050,
	269, 1168, 458, 459, 1072, 1120, 460, 1134, 462, 463,
	0, 0, 464, 0, 0, 0, 466, 467, 468, 0,
	0, 469, 470, 646, 1169, 471, 1170, 1149, 472, 473,
	465, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 648, 485, 486, 487, 649, 488, 489,
	490, 1150, 491, 651, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 1130, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 1171, 524, 525,
	526, 527, 1060, 528, 0, 529, 530, 536, 537, 531,
	532, 538, 539, 540, 541, 542, 0, 544, 545, 543,
	546, 547, 548, 1113, 549, 550, 533, 534, 551, 552,
	1172, 553, 554, 555, 556, 557, 558, 1128, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 1175,
	566, 567, 568, 569, 1151, 573, 574, 0, 575, 576,
	1048, 572, 563, 0, 577, 578, 579, 580, 581, 582,
	583, 354, 584, 0, 585, 1140, 1141, 1142, 1143, 0,
	594, 0, 586, 587, 588, 1152, 589, 1153, 1070, 590,
	591, 592, 593, 0, 595, 596, 0, 1054, 597, 598,
	599, 601, 602, 600, 603, 1114, 604, 0, 0, 605,
	606, 607, 663, 1137, 1174, 0, 609, 608, 610, 666,
	0, 0, 0, 0, 0, 611, 612, 667, 613, 614,
	615, 1051, 0, 0, 0, 0, 0, 0, 0, 1047,
	0, 0, 0, 0, 0, 0, 1045, 1046, 1092, 1064,
	1065, 1066, 1062, 1063, 1075, 1076, 0, 0, 0, 1074,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 1116, 1080, 0, 0, 0, 280, 281, 1156, 282,
	283, 284, 285, 286, 287, 617, 1129, 0, 288, 1136,
	289, 1135, 0, 1146, 290, 291, 292, 293, 294, 295,
	1082, 1115, 1049, 296, 1176, 1177, 624, 0, 297, 298,
	1122, 0, 1103, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1157, 321, 322, 323, 1106, 1104, 1105, 1112, 1108,
	1107, 1111, 324, 325, 326, 327, 328, 1139, 329, 1133,
	1132, 1053, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 1124, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 1059, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1147,
	1148, 360, 1071, 267, 0, 0, 0, 0, 0, 361,
	362, 363, 1131, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1158, 367, 368, 1144, 1145, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 1154, 0,
	1081, 379, 0, 380, 381, 382, 383, 384, 1117, 1118,
	1121, 461, 1160, 385, 386, 0, 387, 388, 389, 390,
	0, 0, 0, 268, 391, 392, 393, 395, 0, 1159,
	394, 1126, 1127, 0, 1087, 0, 396, 397, 1161, 1119,
	1162, 398, 399, 400, 1163, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 1155, 1164, 412, 413, 1165, 0, 414, 0, 0,
	0, 415, 416, 419, 1110, 1109, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 1166, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 1167, 448,
	1050, 269, 1168, 458, 459, 1072, 1120, 460, 1134, 462,
	463, 0, 0, 464, 0, 0, 0, 466, 467, 468,
	0, 0, 469, 470, 646, 1169, 471, 1170, 1149, 472,
	473, 465, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 648, 485, 486, 487, 649, 488,
	489, 490, 1150, 491, 651, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 1130, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 1171, 524,
	525, 526, 527, 1060, 528, 0, 529, 530, 536, 537,
	531, 532, 538, 539, 540, 541, 542, 0, 544, 545,
	543, 546, 547, 548, 1113, 549, 550, 533, 534, 551,
	552, 1172, 553, 554, 555, 556, 557, 558, 1128, 0,
	559, 0, 560, 561, 562, 564, 535, 565, 570, 571,
	1175, 566, 567, 568, 569, 1151, 573, 574, 0, 575,
	576, 1048, 572, 563, 0, 577, 578, 579, 580, 581,
	582, 583, 354, 584, 0, 585, 1140, 1141, 1142, 1143,
	0, 594, 0, 586, 587, 588, 1152, 589, 1153, 1070,
	590, 591, 592, 593, 0, 595, 596, 0, 1054, 597,
	598, 599, 601, 602, 600, 603, 1114, 604, 0, 0,
	605, 606, 607, 663, 1137, 1174, 0, 609, 608, 610,
	666, 0, 0, 0, 0, 0, 611, 612, 667, 613,
	614, 615, 1051, 0, 0, 0, 0, 0, 0, 0,
	1047, 0, 0, 0, 0, 0, 0, 1045, 1046, 1092,
	1064, 1065, 1066, 1062, 1063, 1075, 1076, 0, 0, 0,
	1074, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1116, 1080, 0, 0, 0, 280, 281, 1156,
	282, 283, 284, 285, 286, 287, 617, 1129, 0, 288,
	1136, 289, 1135, 0, 1146, 290, 291, 292, 293, 294,
	295, 1082, 1115, 1049, 296, 1176, 1177, 624, 0, 297,
	298, 1122, 0, 1103, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1157, 321, 322, 4511, 1106, 1104, 1105, 1112,
	1108, 1107, 1111, 324, 325, 326, 327, 328, 1139, 329,
	1133, 1132, 1053, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 1124, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 1059,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1147, 1148, 360, 1071, 267, 0, 0, 0, 0, 0,
	361, 362, 363, 1131, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1158, 367, 368, 1144, 1145, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 1154,
	0, 1081, 379, 0, 380, 381, 382, 383, 384, 1117,
	1118, 1121, 461, 1160, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 268, 391, 392, 393, 395, 0,
	1159, 394, 1126, 1127, 0, 1087, 0, 396, 397, 1161,
	1119, 1162, 398, 399, 400, 1163, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 1155, 1164, 412, 413, 1165, 0, 414, 0,
	0, 0, 415, 416, 419, 1110, 1109, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 1166, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 1167,
	448, 1050, 269, 1168, 458, 459, 1072, 1120, 460, 1134,
	462, 463, 0, 0, 464, 0, 0, 0, 466, 467,
	468, 0, 0, 469, 470, 646, 1169, 471, 1170, 1149,
	472, 473, 465, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 648, 485, 486, 487, 649,
	488, 489, 490, 1150, 491, 651, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 1130,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 1171,
	524, 525, 526, 527, 1060, 528, 0, 529, 530, 536,
	537, 531, 532, 538, 539, 540, 541, 542, 0, 544,
	545, 543, 546, 547, 548, 1113, 549, 550, 533, 534,
	551, 552, 1172, 553, 554, 555, 556, 557, 558, 1128,
	0, 559, 0, 560, 561, 562, 564, 535, 565, 570,
	571, 1175, 566, 567, 568, 569, 1151, 573, 574, 0,
	575, 576, 1048, 572, 563, 0, 577, 578, 579, 580,
	581, 582, 583, 354, 584, 0, 585, 1140, 1141, 1142,
	1143, 0, 594, 0, 586, 587, 588, 1152, 589, 1153,
	1070, 590, 591, 592, 593, 0, 4510, 596, 0, 1054,
	597, 598, 599, 601, 602, 600, 603, 1114, 604, 0,
	0, 605, 606, 607, 663, 1137, 1174, 0, 609, 608,
	610, 666, 0, 0, 0, 0, 0, 611, 612, 667,
	613, 614, 615, 1051, 0, 0, 0, 0, 0, 0,
	0, 1047, 0, 0, 0, 0, 0, 0, 1045, 1046,
	1092, 1064, 1065, 1066, 1062, 1063, 1075, 1076, 0, 0,
	0, 1074, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 1116, 1080, 0, 0, 0, 280, 281,
	1156, 282, 283, 284, 285, 286, 287, 4509, 1129, 0,
	288, 1136, 289, 1135, 0, 1146, 290, 291, 292, 293,
	294, 295, 1082, 1115, 1049, 296, 1176, 1177, 624, 0,
	297, 298, 1122, 0, 1103, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1157, 321, 322, 4511, 1106, 1104, 1105,
	1112, 1108, 1107, 1111, 324, 325, 326, 327, 328, 1139,
	329, 1133, 1132, 1053, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 1124, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	1059, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1147, 1148, 360, 1071, 267, 0, 0, 0, 0,
	0, 361, 362, 363, 1131, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1158, 367, 368, 1144, 1145, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	1154, 0, 1081, 379, 0, 380, 381, 382, 383, 384,
	1117, 1118, 1121, 461, 1160, 385, 386, 0, 387, 388,
	389, 390, 0, 0, 0, 268, 391, 392, 393, 395,
	0, 1159, 394, 1126, 1127, 0, 1087, 0, 396, 397,
	1161, 1119, 1162, 398, 399, 400, 1163, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 1155, 1164, 412, 413, 1165, 0, 414,
	0, 0, 0, 415, 416, 419, 1110, 1109, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 1166, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	1167, 448, 1050, 269, 1168, 458, 459, 1072, 1120, 460,
	1134, 462, 463, 0, 0, 464, 0, 0, 0, 466,
	467, 468, 0, 0, 469, 470, 646, 1169, 471, 1170,
	1149, 472, 473, 465, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 648, 485, 486, 487,
	649, 488, 489, 490, 1150, 491, 651, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	1130, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	1171, 524, 525, 526, 527, 1060, 528, 0, 529, 530,
	536, 537, 531, 532, 538, 539, 540, 541, 542, 0,
	544, 545, 543, 546, 547, 548, 1113, 549, 550, 533,
	534, 551, 552, 1172, 553, 554, 555, 556, 557, 558,
	1128, 0, 559, 0, 560, 561, 562, 564, 535, 565,
	570, 571, 1175, 566, 567, 568, 569, 1151, 573, 574,
	0, 575, 576, 1048, 572, 563, 0, 577, 578, 579,
	580, 581, 582, 583, 354, 584, 0, 585, 1140, 1141,
	1142, 1143, 0, 594, 0, 586, 587, 588, 1152, 589,
	1153, 1070, 590, 591, 592, 593, 0, 4510, 596, 0,
	1054, 597, 598, 599, 601, 602, 600, 603, 1114, 604,
	0, 0, 605, 606, 607, 663, 1137, 1174, 0, 609,
	608, 610, 666, 0, 0, 0, 0, 0, 611, 612,
	667, 613, 614, 615, 1051, 0, 0, 0, 0, 0,
	0, 0, 1047, 0, 0, 0, 0, 0, 0, 1045,
	1046, 1092, 1064, 1065, 1066, 1062, 1063, 1075, 1076, 0,
	0, 0, 1074, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 1116, 1080, 0, 0, 0, 280,
	281, 1156, 282, 283, 284, 285, 286, 287, 617, 1129,
	0, 288, 1136, 289, 1135, 0, 1146, 290, 291, 292,
	293, 294, 295, 1082, 1115, 1049, 296, 1176, 1177, 624,
	0, 297, 298, 1122, 0, 1103, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1157, 321, 4158, 323, 1106, 1104,
	1105, 1112, 1108, 1107, 1111, 324, 325, 326, 327, 328,
	1139, 329, 1133, 1132, 1053, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1124,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1059, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1147, 1148, 360, 1071, 267, 0, 0, 0,
	0, 0, 361, 362, 363, 1131, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1158, 367, 368, 1144, 1145,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 1154, 0, 4159, 379, 0, 380, 381, 382, 383,
	384, 1117, 1118, 1121, 461, 1160, 385, 386, 0, 387,
	388, 389, 390, 0, 0, 0, 268, 391, 392, 393,
	395, 0, 1159, 394, 1126, 1127, 0, 1087, 0, 396,
	397, 1161, 1119, 1162, 398, 399, 400, 1163, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 1155, 1164, 412, 413, 1165, 0,
	414, 0, 0, 0, 415, 416, 419, 1110, 1109, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 1166, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 1167, 448, 1050, 269, 1168, 458, 459, 1072, 1120,
	460, 1134, 462, 463, 0, 0, 464, 0, 0, 0,
	466, 467, 468, 0, 0, 469, 470, 646, 1169, 471,
	1170, 1149, 472, 473, 465, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 648, 485, 486,
	487, 649, 488, 489, 490, 1150, 491, 651, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 1130, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 1171, 524, 525, 526, 4157, 1060, 528, 0, 529,
	530, 536, 537, 531, 532, 538, 539, 540, 541, 542,
	0, 544, 545, 543, 546, 547, 548, 1113, 549, 550,
	533, 534, 551, 552, 1172, 553, 554, 555, 556, 557,
	558, 1128, 0, 559, 0, 560, 561, 562, 564, 535,
	565, 570, 571, 1175, 566, 567, 568, 569, 1151, 573,
	574, 0, 575, 576, 1048, 572, 563, 0, 577, 578,
	579, 580, 581, 582, 583, 354, 584, 0, 585, 1140,
	1141, 1142, 1143, 0, 594, 0, 586, 587, 588, 1152,
	589, 1153, 1070, 590, 591, 592, 593, 0, 595, 596,
	0, 1054, 597, 598, 599, 601, 602, 600, 603, 1114,
	604, 0, 0, 605, 606, 607, 663, 1137, 1174, 0,
	609, 608, 610, 666, 0, 0, 0, 0, 0, 611,
	612, 667, 613, 614, 615, 1051, 0, 0, 0, 0,
	0, 0, 0, 1047, 0, 0, 0, 0, 0, 0,
	1045, 1046, 1092, 1064, 1065, 1066, 3029, 3030, 1075, 1076,
	0, 0, 0, 1074, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1116, 1080, 0, 0, 0,
	280, 281, 1156, 282, 283, 284, 285, 286, 287, 617,
	1129, 0, 288, 1136, 289, 1135, 0, 1146, 290, 291,
	292, 293, 294, 295, 1082, 1115, 1049, 296, 1176, 1177,
	624, 0, 297, 298, 1122, 0, 1103, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1157, 321, 322, 323, 1106,
	1104, 1105, 1112, 1108, 1107, 1111, 324, 325, 326, 327,
	328, 1139, 329, 1133, 1132, 1053, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	1124, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 1059, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1147, 1148, 360, 1071, 267, 0, 0,
	0, 0, 0, 361, 362, 363, 1131, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1158, 367, 368, 1144,
	1145, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 1154, 0, 1081, 379, 0, 380, 381, 382,
	383, 384, 1117, 1118, 1121, 461, 1160, 385, 386, 0,
	387, 388, 389, 390, 0, 0, 0, 268, 391, 392,
	393, 395, 0, 1159, 394, 1126, 1127, 0, 1087, 0,
	396, 397, 1161, 1119, 1162, 398, 399, 400, 1163, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 1155, 1164, 412, 413, 1165,
	0, 414, 0, 0, 0, 415, 416, 419, 1110, 1109,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 1166,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 1167, 448, 1050, 269, 1168, 458, 459, 1072,
	1120, 460, 1134, 462, 463, 0, 0, 464, 0, 0,
	0, 466, 467, 468, 0, 0, 469, 470, 646, 1169,
	471, 1170, 1149, 472, 473, 465, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 648, 485,
	486, 487, 649, 488, 489, 490, 1150, 491, 651, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 1130, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 1171, 524, 525, 526, 527, 1060, 528, 0,
	529, 530, 536, 537, 531, 532, 538, 539, 540, 541,
	542, 0, 544, 545, 543, 546, 547, 548, 1113, 549,
	550, 533, 534, 551, 552, 1172, 553, 554, 555, 556,
	557, 558, 1128, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 1175, 566, 567, 568, 569, 1151,
	573, 574, 0, 575, 576, 1048, 572, 563, 0, 577,
	578, 579, 580, 581, 582, 583, 354, 584, 0, 585,
	1140, 1141, 1142, 1143, 0, 594, 0, 586, 587, 588,
	1152, 589, 1153, 1070, 590, 591, 592, 593, 0, 595,
	596, 0, 1054, 597, 598, 599, 601, 602, 600, 603,
	1114, 604, 0, 0, 605, 606, 607, 663, 1137, 1174,
	0, 609, 608, 610, 666, 0, 0, 0, 0, 0,
	611, 612, 667, 613, 614, 615, 1051, 0, 0, 0,
	0, 0, 0, 0, 1047, 0, 0, 0, 0, 0,
	0, 1045, 1046, 1092, 1064, 1065, 1066, 3027, 3028, 1075,
	1076, 0, 0, 0, 1074, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1116, 1080, 0, 0,
	0, 280, 281, 1156, 282, 283, 284, 285, 286, 287,
	617, 1129, 0, 288, 1136, 289, 1135, 0, 1146, 290,
	291, 292, 293, 294, 295, 1082, 1115, 1049, 296, 1176,
	1177, 624, 0, 297, 298, 1122, 0, 1103, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1157, 321, 322, 323,
	1106, 1104, 1105, 1112, 1108, 1107, 1111, 324, 325, 326,
	327, 328, 1139, 329, 1133, 1132, 1053, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 1124, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 1059, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1147, 1148, 360, 1071, 267, 0,
	0, 0, 0, 0, 361, 362, 363, 1131, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1158, 367, 368,
	1144, 1145, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 1154, 0, 1081, 379, 0, 380, 381,
	382, 383, 384, 1117, 1118, 1121, 461, 1160, 385, 386,
	0, 387, 388, 389, 390, 0, 0, 0, 268, 391,
	392, 393, 395, 0, 1159, 394, 1126, 1127, 0, 1087,
	0, 396, 397, 1161, 1119, 1162, 398, 399, 400, 1163,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 1155, 1164, 412, 413,
	1165, 0, 414, 0, 0, 0, 415, 416, 419, 1110,
	1109, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	1166, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 1167, 448, 1050, 269, 1168, 458, 459,
	1072, 1120, 460, 1134, 462, 463, 0, 0, 464, 0,
	0, 0, 466, 467, 468, 0, 0, 469, 470, 646,
	1169, 471, 1170, 1149, 472, 473, 465, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 648,
	485, 486, 487, 649, 488, 489, 490, 1150, 491, 651,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 1130, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 1171, 524, 525, 526, 527, 1060, 528,
	0, 529, 530, 536, 537, 531, 532, 538, 539, 540,
	541, 542, 0, 544, 545, 543, 546, 547, 548, 1113,
	549, 550, 533, 534, 551, 552, 1172, 553, 554, 555,
	556, 557, 558, 1128, 0, 559, 0, 560, 561, 562,
	564, 535, 565, 570, 571, 1175, 566, 567, 568, 569,
	1151, 573, 574, 0, 575, 576, 1048, 572, 563, 0,
	577, 578, 579, 580, 581, 582, 583, 354, 584, 0,
	585, 1140, 1141, 1142, 1143, 0, 594, 0, 586, 587,
	588, 1152, 589, 1153, 1070, 590, 591, 592, 593, 0,
	595, 596, 0, 1054, 597, 598, 599, 601, 602, 600,
	603, 1114, 604, 0, 0, 605, 606, 607, 663, 1137,
	1174, 0, 609, 608, 610, 666, 0, 0, 0, 0,
	0, 611, 612, 667, 613, 614, 615, 1051, 0, 0,
	0, 0, 0, 0, 0, 1047, 0, 0, 0, 0,
	0, 0, 1045, 1046, 1092, 1064, 1065, 1066, 1062, 1063,
	1075, 1076, 0, 0, 0, 1074, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1116, 1080, 0,
	0, 0, 280, 281, 1156, 282, 283, 284, 285, 286,
	287, 617, 1129, 0, 288, 1136, 289, 1135, 0, 1146,
	290, 291, 292, 293, 294, 295, 1082, 1115, 1049, 296,
	1176, 1177, 624, 0, 297, 298, 1122, 0, 1103, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1157, 321, 322,
	323, 1106, 1104, 1105, 1112, 1108, 1107, 1111, 324, 325,
	326, 327, 328, 1139, 329, 1133, 1132, 1053, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1124, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1059, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1147, 1148, 360, 1071, 267,
	0, 0, 0, 0, 0, 361, 362, 363, 1131, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1158, 367,
	368, 1144, 1145, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 1154, 0, 1081, 379, 0, 380,
	381, 382, 383, 384, 1117, 1118, 1121, 461, 1160, 385,
	386, 0, 387, 388, 389, 390, 0, 0, 0, 268,
	391, 392, 393, 395, 0, 1159, 394, 1126, 1127, 0,
	1087, 0, 396, 397, 1161, 1119, 1162, 398, 399, 400,
	1163, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 1155, 1164, 412,
	413, 1165, 0, 414, 0, 0, 0, 415, 416, 419,
	1110, 1109, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 1166, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 1167, 448, 1050, 269, 1168, 458,
	459, 1072, 1120, 460, 1134, 462, 463, 0, 0, 464,
	0, 0, 0, 466, 467, 468, 0, 0, 469, 470,
	646, 1169, 471, 1170, 1149, 472, 473, 465, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	648, 485, 486, 487, 649, 488, 489, 490, 1150, 491,
	651, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 1130, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 1171, 524, 525, 526, 527, 1060,
	528, 0, 529, 530, 536, 537, 531, 532, 538, 539,
	540, 541, 542, 0, 544, 545, 543, 546, 547, 548,
	1113, 549, 550, 533, 534, 551, 552, 1172, 553, 554,
	555, 556, 557, 558, 1128, 0, 559, 0, 560, 561,
	562, 564, 535, 565, 570, 571, 1175, 566, 567, 568,
	569, 1151, 573, 574, 0, 575, 576, 1048, 572, 563,
	0, 577, 578, 579, 580, 581, 582, 583, 354, 584,
	0, 585, 1140, 1141, 1142, 1143, 0, 594, 0, 586,
	587, 588, 1152, 589, 1153, 1070, 590, 591, 592, 593,
	0, 595, 596, 0, 1054, 597, 598, 599, 601, 602,
	600, 603, 1114, 604, 0, 0, 605, 606, 607, 663,
	1137, 1174, 0, 609, 608, 610, 666, 0, 0, 0,
	0, 0, 611, 612, 667, 613, 614, 615, 1051, 0,
	0, 0, 0, 0, 0, 0, 1047, 0, 0, 0,
	0, 0, 0, 2356, 2357, 1092, 1064, 1065, 1066, 1062,
	1063, 1075, 1076, 0, 0, 0, 1074, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1116, 1080,
	0, 0, 0, 280, 281, 1156, 282, 283, 284, 285,
	286, 287, 617, 1129, 0, 288, 1136, 289, 1135, 0,
	1146, 290, 291, 292, 293, 294, 295, 1082, 1115, 0,
	296, 1176, 1177, 624, 0, 297, 298, 1122, 0, 1103,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1157, 321,
	322, 323, 1106, 1104, 1105, 1112, 1108, 1107, 1111, 324,
	325, 326, 327, 328, 1139, 329, 1133, 1132, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1124, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1059, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1147, 1148, 360, 1071,
	267, 0, 0, 0, 0, 0, 361, 362, 363, 1131,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1158,
	367, 368, 1144, 1145, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 1154, 0, 1081, 379, 0,
	380, 381, 382, 383, 384, 1117, 1118, 1121, 461, 1160,
	385, 386, 0, 387, 388, 389, 390, 0, 0, 0,
	268, 391, 392, 393, 395, 0, 1159, 394, 1126, 1127,
	0, 1087, 0, 396, 397, 1161, 1119, 1162, 398, 399,
	400, 1163, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 1155, 1164,
	412, 413, 1165, 0, 414, 0, 0, 0, 415, 416,
	419, 1110, 1109, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 1166, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 1167, 448, 0, 269, 1168,
	458, 459, 1072, 1120, 460, 1134, 462, 463, 0, 0,
	464, 0, 0, 0, 466, 467, 468, 0, 0, 469,
	470, 646, 1169, 471, 1170, 1149, 472, 473, 465, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 648, 485, 486, 487, 649, 488, 489, 490, 1150,
	491, 651, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 1130, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 1171, 524, 525, 526, 527,
	1060, 528, 0, 529, 530, 536, 537, 531, 532, 538,
	539, 540, 541, 542, 0, 544, 545, 543, 546, 547,
	548, 1113, 549, 550, 533, 534, 551, 552, 1172, 553,
	554, 555, 556, 557, 558, 1128, 0, 559, 0, 560,
	561, 562, 564, 535, 565, 570, 571, 1175, 566, 567,
	568, 569, 1151, 573, 574, 0, 575, 576, 0, 572,
	563, 0, 577, 578, 579, 580, 581, 582, 583, 354,
	584, 0, 585, 1140, 1141, 1142, 1143, 0, 594, 0,
	586, 587, 588, 1152, 589, 1153, 1070, 590, 591, 592,
	593, 0, 595, 596, 0, 0, 597, 598, 599, 601,
	602, 600, 603, 1114, 604, 0, 0, 605, 606, 607,
	663, 1137, 1174, 0, 609, 608, 610, 666, 0, 0,
	0, 0, 0, 611, 612, 667, 613, 614, 615, 0,
	0, 0, 0, 0, 0, 0, 0, 2576, 0, 0,
	0, 0, 0, 0, 2574, 2575, 1092, 1064, 1065, 1066,
	1062, 1063, 1075, 1076, 0, 0, 0, 1074, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1116,
	1080, 0, 0, 0, 280, 281, 1156, 282, 283, 284,
	285, 286, 287, 617, 1129, 0, 288, 1136, 289, 1135,
	0, 1146, 290, 291, 292, 293, 294, 295, 1082, 1115,
	0, 296, 1176, 1177, 624, 0, 297, 298, 1122, 0,
	1103, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1157,
	321, 322, 323, 1106, 1104, 1105, 1112, 1108, 1107, 1111,
	324, 325, 326, 327, 328, 1139, 329, 1133, 1132, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1124, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1059, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1147, 1148, 360,
	1071, 267, 0, 0, 0, 0, 0, 361, 362, 363,
	1131, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1158, 367, 368, 1144, 1145, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1154, 0, 1081, 379,
	0, 380, 381, 382, 383, 384, 1117, 1118, 1121, 461,
	1160, 385, 386, 0, 387, 388, 389, 390, 0, 0,
	0, 268, 391, 392, 393, 395, 0, 1159, 394, 1126,
	1127, 0, 1087, 0, 396, 397, 1161, 1119, 1162, 398,
	399, 400, 1163, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 1155,
	1164, 412, 413, 1165, 0, 414, 0, 0, 0, 415,
	416, 419, 1110, 1109, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 1166, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 1167, 448, 0, 269,
	1168, 458, 459, 1072, 1120, 460, 1134, 462, 463, 0,
	0, 464, 0, 0, 0, 466, 467, 468, 0, 0,
	469, 470, 646, 1169, 471, 1170, 1149, 472, 473, 465,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 648, 485, 486, 487, 649, 488, 489, 490,
	1150, 491, 651, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 1130, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 1171, 524, 525, 526,
	527, 3022, 3023, 0, 529, 530, 536, 537, 531, 532,
	538, 539, 540, 541, 542, 0, 544, 545, 543, 546,
	547, 548, 1113, 549, 550, 533, 534, 551, 552, 1172,
	553, 554, 555, 556, 557, 558, 1128, 0, 559, 0,
	560, 561, 562, 564, 535, 565, 570, 571, 1175, 566,
	567, 568, 569, 1151, 573, 574, 0, 575, 576, 0,
	572, 563, 0, 577, 578, 579, 580, 581, 582, 583,
	354, 584, 0, 585, 1140, 1141, 1142, 1143, 0, 594,
	0, 586, 587, 588, 1152, 589, 1153, 1070, 590, 591,
	592, 593, 0, 595, 596, 0, 0, 597, 598, 599,
	601, 602, 600, 603, 1114, 604, 0, 0, 605, 606,
	607, 663, 1137, 1174, 0, 609, 608, 610, 666, 0,
	0, 0, 0, 0, 611, 612, 667, 613, 614, 615,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2062, 2063, 1092, 1064, 1065,
	1066, 1062, 1063, 1075, 1076, 0, 0, 0, 1074, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1116, 1080, 0, 0, 0, 280, 281, 1156, 282, 283,
	284, 285, 286, 287, 0, 1129, 0, 288, 1136, 289,
	1135, 0, 1146, 290, 291, 292, 293, 294, 295, 1082,
	1115, 1049, 296, 1176, 1177, 624, 0, 297, 298, 1122,
	0, 1103, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1157, 321, 322, 4511, 1106, 1104, 1105, 1112, 1108, 1107,
	1111, 324, 325, 326, 327, 328, 1139, 329, 1133, 1132,
	1053, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1124, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1059, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1147, 1148,
	360, 1071, 267, 0, 0, 0, 0, 0, 361, 362,
	363, 1131, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1158, 367, 368, 1144, 1145, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1154, 0, 1081,
	379, 0, 380, 381, 382, 383, 384, 1117, 1118, 1121,
	461, 0, 385, 386, 0, 387, 388, 389, 390, 0,
	0, 0, 268, 391, 392, 393, 395, 0, 1159, 394,
	1126, 1127, 0, 1087, 0, 396, 397, 0, 1119, 0,
	398, 399, 400, 1163, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	1155, 1164, 412, 413, 0, 0, 414, 0, 0, 0,
	415, 416, 419, 1110, 1109, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 1166, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 1167, 448, 1050,
	269, 0, 458, 459, 1072, 1120, 460, 1134, 462, 463,
	0, 0, 464, 0, 0, 0, 466, 467, 468, 0,
	0, 469, 470, 646, 1169, 471, 1170, 1149, 472, 473,
	465, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 648, 485, 486, 487, 649, 488, 489,
	490, 1150, 491, 651, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 1130, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 1171, 524, 525,
	526, 527, 1060, 528, 0, 529, 530, 536, 537, 531,
	532, 538, 539, 540, 541, 542, 0, 544, 545, 543,
	546, 547, 548, 1113, 549, 550, 533, 534, 551, 552,
	0, 553, 554, 555, 556, 557, 558, 1128, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 1175,
	566, 567, 568, 569, 1151, 573, 574, 0, 575, 576,
	1048, 572, 563, 0, 577, 578, 579, 580, 581, 582,
	583, 354, 584, 0, 585, 1140, 1141, 1142, 1143, 0,
	594, 0, 586, 587, 588, 1152, 589, 1153, 1070, 590,
	591, 592, 593, 0, 4510, 596, 0, 1054, 597, 598,
	599, 601, 602, 600, 603, 1114, 604, 0, 0, 605,
	606, 607, 663, 1137, 1174, 0, 609, 608, 610, 666,
	0, 0, 0, 0, 0, 611, 612, 667, 613, 614,
	615, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1038, 0, 1214, 0, 0, 1045, 1046, 0, 0,
	0, 0, 0, 0, 0, 1076, 0, 0, 0, 1074,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1116, 0, 0, 0,
	0, 280, 281, 1156, 282, 283, 284, 285, 286, 287,
	617, 618, 0, 288, 619, 289, 620, 0, 621, 290,
	291, 292, 293, 294, 295, 0, 1115, 0, 296, 622,
	623, 624, 0, 297, 298, 1122, 0, 1103, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1157, 321, 322, 323,
	1106, 1104, 1105, 1112, 1108, 1107, 1111, 324, 325, 326,
	327, 328, 0, 329, 626, 627, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 628, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1147, 1148, 360, 0, 267, 0,
	0, 0, 0, 0, 361, 362, 363, 631, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1158, 367, 368,
	632, 633, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 1154, 0, 635, 379, 0, 380, 381,
	382, 383, 384, 1117, 1118, 1121, 461, 1160, 385, 386,
	0, 387, 388, 389, 390, 0, 0, 0, 268, 391,
	392, 393, 395, 0, 1159, 394, 639, 640, 0, 641,
	0, 396, 397, 1161, 1119, 1162, 398, 399, 400, 1163,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	1200, 408, 410, 409, 0, 411, 1155, 1164, 412, 413,
	1165, 0, 414, 0, 0, 0, 415, 416, 419, 1110,
	1109, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	1166, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 1167, 448, 0, 269, 1168, 458, 459,
	0, 1120, 460, 645, 462, 463, 0, 0, 464, 0,
	0, 1206, 466, 467, 468, 0, 0, 469, 470, 646,
	1169, 471, 1170, 1149, 472, 473, 465, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 648,
	485, 486, 487, 649, 488, 489, 490, 1150, 491, 651,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 652, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 1171, 524, 525, 526, 527, 653, 1208,
	0, 529, 530, 536, 537, 531, 532, 538, 539, 540,
	541, 542, 229, 544, 545, 543, 546, 547, 548, 1113,
	549, 550, 533, 534, 551, 552, 1172, 553, 554, 555,
	556, 557, 558, 654, 0, 559, 0, 560, 561, 562,
	564, 535, 565, 570, 571, 655, 566, 567, 568, 569,
	1151, 573, 574, 0, 575, 576, 0, 572, 563, 231,
	577, 578, 579, 580, 581, 582, 583, 354, 584, 0,
	585, 657, 658, 659, 660, 0, 594, 0, 586, 587,
	588, 1152, 589, 1153, 0, 590, 591, 592, 593, 0,
	595, 596, 0, 0, 597, 598, 599, 601, 602, 600,
	603, 1114, 604, 0, 0, 605, 606, 607, 1569, 664,
	665, 0, 609, 608, 610, 666, 0, 1214, 0, 0,
	223, 611, 612, 667, 613, 614, 615, 0, 0, 224,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 1204,
	1116, 1905, 0, 0, 0, 280, 281, 1156, 282, 283,
	284, 285, 286, 287, 617, 618, 0, 288, 619, 289,
	620, 0, 621, 290, 291, 292, 293, 294, 295, 0,
	1115, 0, 296, 622, 623, 624, 0, 297, 298, 1122,
	0, 1103, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1157, 321, 322, 323, 1106, 1104, 1105, 1112, 1108, 1107,
	1111, 324, 325, 326, 327, 328, 0, 329, 626, 627,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 628, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1147, 1148,
	360, 0, 267, 0, 0, 0, 0, 0, 361, 362,
	363, 631, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1158, 367, 368, 632, 633, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1154, 0, 635,
	379, 0, 380, 381, 382, 383, 384, 1117, 1118, 1121,
	461, 1160, 385, 386, 0, 387, 388, 389, 390, 0,
	0, 0, 268, 391, 392, 393, 395, 0, 1159, 394,
	639, 640, 0, 641, 0, 396, 397, 1161, 1119, 1162,
	398, 399, 400, 1163, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 1200, 408, 410, 409, 0, 411,
	1155, 1164, 412, 413, 1165, 0, 414, 0, 0, 0,
	415, 416, 419, 1110, 1109, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 1166, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 1167, 448, 0,
	269, 1168, 458, 459, 0, 1120, 460, 645, 462, 463,
	0, 0, 464, 0, 0, 1206, 466, 467, 468, 0,
	0, 469, 470, 646, 1169, 471, 1170, 1149, 472, 473,
	465, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 648, 485, 486, 487, 649, 488, 489,
	490, 1150, 491, 651, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 652, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 1171, 524, 525,
	526, 527, 653, 1208, 0, 529, 530, 536, 537, 531,
	532, 538, 539, 540, 541, 542, 229, 544, 545, 543,
	546, 547, 548, 1113, 549, 550, 533, 534, 551, 552,
	1172, 553, 554, 555, 556, 557, 558, 654, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 655,
	566, 567, 568, 569, 1151, 573, 574, 0, 575, 576,
	0, 572, 563, 231, 577, 578, 579, 580, 581, 582,
	583, 354, 584, 0, 585, 657, 658, 659, 660, 0,
	594, 0, 586, 587, 588, 1152, 589, 1153, 0, 590,
	591, 592, 593, 0, 595, 596, 0, 0, 597, 598,
	599, 601, 602, 600, 603, 1114, 604, 0, 0, 605,
	606, 607, 1569, 664, 665, 0, 609, 608, 610, 666,
	0, 3182, 0, 1214, 223, 611, 612, 667, 613, 614,
	615, 0, 0, 224, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 1204, 0, 1905, 1116, 0, 0, 0,
	0, 280, 281, 1156, 282, 283, 284, 285, 286, 287,
	617, 618, 0, 288, 619, 289, 620, 0, 621, 290,
	291, 292, 293, 294, 295, 0, 1115, 0, 296, 622,
	623, 624, 0, 297, 298, 1122, 0, 1103, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1157, 321, 322, 323,
	1106, 1104, 1105, 1112, 1108, 1107, 1111, 324, 325, 326,
	327, 328, 0, 329, 626, 627, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 628, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1147, 1148, 360, 0, 267, 0,
	0, 0, 0, 0, 361, 362, 363, 631, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1158, 367, 368,
	632, 633, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 1154, 0, 635, 379, 0, 380, 381,
	382, 383, 384, 1117, 1118, 1121, 461, 1160, 385, 386,
	0, 387, 388, 389, 390, 0, 0, 0, 268, 391,
	392, 393, 395, 0, 1159, 394, 639, 640, 0, 641,
	0, 396, 397, 1161, 1119, 1162, 398, 399, 400, 1163,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	1200, 408, 410, 409, 0, 411, 1155, 1164, 412, 413,
	1165, 0, 414, 0, 0, 0, 415, 416, 419, 1110,
	1109, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	1166, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 1167, 448, 0, 269, 1168, 458, 459,
	0, 1120, 460, 645, 462, 463, 0, 0, 464, 0,
	0, 1206, 466, 467, 468, 0, 0, 469, 470, 646,
	1169, 471, 1170, 1149, 472, 473, 465, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 648,
	485, 486, 487, 649, 488, 489, 490, 1150, 491, 651,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 652, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 1171, 524, 525, 526, 527, 653, 1208,
	0, 529, 530, 536, 537, 531, 532, 538, 539, 540,
	541, 542, 0, 544, 545, 543, 546, 547, 548, 1113,
	549, 550, 533, 534, 551, 552, 1172, 553, 554, 555,
	556, 557, 558, 654, 0, 559, 0, 560, 561, 562,
	564, 535, 565, 570, 571, 655, 566, 567, 568, 569,
	1151, 573, 574, 0, 575, 576, 0, 572, 563, 0,
	577, 578, 579, 580, 581, 582, 583, 354, 584, 0,
	585, 657, 658, 659, 660, 0, 594, 0, 586, 587,
	588, 1152, 589, 1153, 0, 590, 591, 592, 593, 0,
	595, 596, 0, 0, 597, 598, 599, 601, 602, 600,
	603, 1114, 604, 0, 0, 605, 606, 607, 663, 664,
	665, 0, 609, 608, 610, 666, 0, 1196, 0, 1214,
	0, 611, 612, 667, 613, 614, 615, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 1204,
	0, 1202, 1116, 0, 0, 0, 0, 280, 281, 1156,
	282, 283, 284, 285, 286, 287, 617, 618, 0, 288,
	619, 289, 620, 0, 621, 290, 291, 292, 293, 294,
	295, 0, 1115, 0, 296, 622, 623, 624, 0, 297,
	298, 1122, 0, 1103, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1157, 321, 322, 323, 1106, 1104, 1105, 1112,
	1108, 1107, 1111, 324, 325, 326, 327, 328, 0, 329,
	626, 627, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 628,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1147, 1148, 360, 0, 267, 0, 0, 0, 0, 0,
	361, 362, 363, 631, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1158, 367, 368, 632, 633, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 1154,
	0, 635, 379, 0, 380, 381, 382, 383, 384, 1117,
	1118, 1121, 461, 1160, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 268, 391, 392, 393, 395, 0,
	1159, 394, 639, 640, 0, 641, 0, 396, 397, 1161,
	1119, 1162, 398, 399, 400, 1163, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 1200, 408, 410, 409,
	0, 411, 1155, 1164, 412, 413, 1165, 0, 414, 0,
	0, 0, 415, 416, 419, 1110, 1109, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 1166, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 1167,
	448, 0, 269, 1168, 458, 459, 0, 1120, 460, 645,
	462, 463, 0, 0, 464, 0, 0, 1206, 466, 467,
	468, 0, 0, 469, 470, 646, 1169, 471, 1170, 1149,
	472, 473, 465, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 648, 485, 486, 487, 649,
	488, 489, 490, 1150, 491, 651, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 652,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 1171,
	524, 525, 526, 527, 653, 1208, 0, 529, 530, 536,
	537, 531, 532, 538, 539, 540, 541, 542, 0, 544,
	545, 543, 546, 547, 548, 1113, 549, 550, 533, 534,
	551, 552, 1172, 553, 554, 555, 556, 557, 558, 654,
	0, 559, 0, 560, 561, 562, 564, 535, 565, 570,
	571, 655, 566, 567, 568, 569, 1151, 573, 574, 0,
	575, 576, 0, 572, 563, 0, 577, 578, 579, 580,
	581, 582, 583, 354, 584, 0, 585, 657, 658, 659,
	660, 0, 594, 0, 586, 587, 588, 1152, 589, 1153,
	0, 590, 591, 592, 593, 0, 595, 596, 0, 0,
	597, 598, 599, 601, 602, 600, 603, 1114, 604, 0,
	0, 605, 606, 607, 663, 664, 665, 0, 609, 608,
	610, 666, 0, 1214, 0, 0, 0, 611, 612, 667,
	613, 614, 615, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 1204, 1116, 1202, 0, 0,
	0, 280, 281, 1156, 282, 283, 284, 285, 286, 287,
	617, 618, 0, 288, 619, 289, 620, 0, 621, 290,
	291, 292, 293, 294, 295, 0, 1115, 0, 296, 622,
	623, 624, 0, 297, 298, 1122, 0, 1103, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1157, 321, 322, 323,
	1106, 1104, 1105, 1112, 1108, 1107, 1111, 324, 325, 326,
	327, 328, 0, 329, 626, 627, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 628, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1147, 1148, 360, 0, 267, 0,
	0, 0, 0, 0, 361, 362, 363, 631, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1158, 367, 368,
	632, 633, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 1154, 0, 635, 379, 0, 380, 381,
	382, 383, 384, 1117, 1118, 1121, 461, 1160, 385, 386,
	0, 387, 388, 389, 390, 0, 0, 0, 268, 391,
	392, 393, 395, 0, 1159, 394, 639, 640, 0, 641,
	0, 396, 397, 1161, 1119, 1162, 398, 399, 400, 1163,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	1200, 408, 410, 409, 0, 411, 1155, 1164, 412, 413,
	1165, 0, 414, 0, 0, 0, 415, 416, 419, 1110,
	1109, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	1166, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 1167, 448, 0, 269, 1168, 458, 459,
	0, 1120, 460, 645, 462, 463, 0, 0, 464, 0,
	0, 1206, 466, 467, 468, 0, 0, 469, 470, 646,
	1169, 471, 1170, 1149, 472, 473, 465, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 648,
	485, 486, 487, 649, 488, 489, 490, 1150, 491, 651,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 652, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 1171, 524, 525, 526, 527, 653, 1208,
	0, 529, 530, 536, 537, 531, 532, 538, 539, 540,
	541, 542, 0, 544, 545, 543, 546, 547, 548, 1113,
	549, 550, 533, 534, 551, 552, 1172, 553, 554, 555,
	556, 557, 558, 654, 0, 559, 0, 560, 561, 562,
	564, 535, 565, 570, 571, 655, 566, 567, 568, 569,
	1151, 573, 574, 0, 575, 576, 0, 572, 563, 0,
	577, 578, 579, 580, 581, 582, 583, 354, 584, 0,
	585, 657, 658, 659, 660, 0, 594, 0, 586, 587,
	588, 1152, 589, 1153, 0, 590, 591, 592, 593, 0,
	595, 596, 0, 0, 597, 598, 599, 601, 602, 600,
	603, 1114, 604, 0, 0, 605, 606, 607, 663, 664,
	665, 0, 609, 608, 610, 666, 0, 1214, 0, 0,
	0, 611, 612, 667, 613, 614, 615, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 1204,
	1116, 1202, 0, 0, 0, 280, 281, 1156, 282, 283,
	284, 285, 286, 287, 617, 618, 0, 288, 619, 289,
	620, 0, 621, 290, 291, 292, 293, 294, 295, 0,
	1115, 0, 296, 622, 623, 624, 0, 297, 298, 1122,
	0, 1103, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1157, 321, 322, 323, 1106, 1104, 1105, 1112, 1108, 1107,
	1111, 324, 325, 326, 327, 328, 0, 329, 626, 627,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 628, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1147, 1148,
	360, 0, 267, 0, 0, 0, 0, 0, 361, 362,
	363, 631, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1158, 367, 368, 632, 633, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1154, 0, 635,
	379, 0, 380, 381, 382, 383, 384, 1117, 1118, 1121,
	461, 1160, 385, 386, 0, 387, 388, 389, 390, 0,
	0, 0, 268, 391, 392, 393, 395, 0, 1159, 394,
	639, 640, 0, 641, 0, 396, 397, 1161, 1119, 1162,
	398, 399, 400, 1163, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	1155, 1164, 412, 413, 1165, 0, 414, 0, 0, 0,
	415, 416, 419, 1110, 1109, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 1166, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 1167, 448, 0,
	269, 1168, 458, 459, 0, 1120, 460, 645, 462, 463,
	0, 0, 464, 0, 0, 0, 466, 467, 468, 0,
	0, 469, 470, 646, 1169, 471, 1170, 1149, 472, 473,
	465, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 648, 485, 486, 487, 649, 488, 489,
	490, 1150, 491, 651, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 652, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 1171, 524, 525,
	526, 527, 653, 528, 0, 529, 530, 536, 537, 531,
	532, 538, 539, 540, 541, 542, 0, 544, 545, 543,
	546, 547, 548, 1113, 549, 550, 533, 534, 551, 552,
	1172, 553, 554, 555, 556, 557, 558, 654, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 655,
	566, 567, 568, 569, 1151, 573, 574, 0, 575, 576,
	0, 572, 563, 0, 577, 578, 579, 580, 581, 582,
	583, 354, 584, 0, 585, 657, 658, 659, 660, 0,
	594, 0, 586, 587, 588, 1152, 589, 1153, 0, 590,
	591, 592, 593, 0, 595, 596, 0, 0, 597, 598,
	599, 601, 602, 600, 603, 1114, 604, 0, 0, 605,
	606, 607, 663, 664, 665, 0, 609, 608, 610, 666,
	1214, 0, 0, 0, 0, 611, 612, 667, 613, 614,
	615, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 1116, 0, 3991, 0, 0, 280, 281,
	1156, 282, 283, 284, 285, 286, 287, 617, 618, 0,
	288, 619, 289, 620, 0, 621, 290, 291, 292, 293,
	294, 295, 0, 1115, 0, 296, 622, 623, 624, 0,
	297, 298, 1122, 0, 1103, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1157, 321, 322, 323, 1106, 1104, 1105,
	1112, 1108, 1107, 1111, 324, 325, 326, 327, 328, 0,
	329, 626, 627, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	628, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1147, 1148, 360, 0, 267, 0, 0, 0, 0,
	0, 361, 362, 363, 631, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1158, 367, 368, 632, 633, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	1154, 0, 635, 379, 0, 380, 381, 382, 383, 384,
	1117, 1118, 1121, 461, 1160, 385, 386, 0, 387, 388,
	389, 390, 0, 0, 0, 268, 391, 392, 393, 395,
	0, 1159, 394, 639, 640, 0, 641, 0, 396, 397,
	1161, 1119, 1162, 398, 399, 400, 1163, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 1155, 1164, 412, 413, 1165, 0, 414,
	0, 0, 0, 415, 416, 419, 1110, 1109, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 1166, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	1167, 448, 0, 269, 1168, 458, 459, 0, 1120, 460,
	645, 462, 463, 0, 0, 464, 0, 0, 0, 466,
	467, 468, 0, 0, 469, 470, 646, 1169, 471, 1170,
	1149, 472, 473, 465, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 648, 485, 486, 487,
	649, 488, 489, 490, 1150, 491, 651, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	652, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	1171, 524, 525, 526, 527, 653, 1208, 0, 529, 530,
	536, 537, 531, 532, 538, 539, 540, 541, 542, 0,
	544, 545, 543, 546, 547, 548, 1113, 549, 550, 533,
	534, 551, 552, 1172, 553, 554, 555, 556, 557, 558,
	654, 0, 559, 0, 560, 561, 562, 564, 535, 565,
	570, 571, 655, 566, 567, 568, 569, 1151, 573, 574,
	0, 575, 576, 0, 572, 563, 0, 577, 578, 579,
	580, 581, 582, 583, 354, 584, 0, 585, 657, 658,
	659, 660, 0, 594, 0, 586, 587, 588, 1152, 589,
	1153, 0, 590, 591, 592, 593, 0, 595, 596, 0,
	0, 597, 598, 599, 601, 602, 600, 603, 1114, 604,
	0, 0, 605, 606, 607, 663, 664, 665, 0, 609,
	608, 610, 666, 0, 1038, 0, 1295, 0, 611, 612,
	667, 613, 614, 615, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 1804, 616,
	0, 0, 0, 0, 280, 281, 1156, 282, 283, 284,
	285, 286, 287, 617, 618, 0, 288, 619, 289, 620,
	0, 621, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 622, 623, 624, 0, 297, 298, 625, 0,
	1300, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1157,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 626, 627, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 628, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 629, 630, 360,
	0, 267, 0, 0, 0, 0, 0, 361, 362, 363,
	631, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1158, 367, 368, 632, 633, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 634, 0, 635, 379,
	0, 380, 381, 382, 383, 384, 636, 637, 638, 461,
	1160, 385, 386, 0, 387, 388, 389, 390, 0, 0,
	0, 0, 391, 392, 393, 395, 0, 1159, 394, 639,
	640, 0, 641, 0, 396, 397, 1161, 642, 1162, 398,
	399, 400, 1163, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 643,
	1164, 412, 413, 1165, 0, 414, 0, 0, 0, 415,
	416, 419, 0, 0, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 1166, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 1167, 448, 0, 0,
	1168, 458, 459, 0, 644, 460, 645, 462, 463, 0,
	0, 464, 0, 0, 0, 466, 467, 468, 0, 0,
	469, 470, 646, 1169, 471, 1170, 647, 472, 473, 465,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 648, 485, 486, 487, 649, 488, 489, 490,
	650, 491, 651, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 652, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 1171, 524, 525, 526,
	527, 653, 528, 0, 529, 530, 536, 537, 531, 532,
	538, 539, 540, 541, 542, 229, 544, 545, 543, 546,
	547, 548, 0, 549, 550, 533, 534, 551, 552, 1172,
	553, 554, 555, 556, 557, 558, 654, 0, 559, 0,
	560, 561, 562, 564, 535, 565, 570, 571, 655, 566,
	567, 568, 569, 656, 573, 574, 0, 575, 576, 0,
	572, 563, 231, 577, 578, 579, 580, 581, 582, 583,
	354, 584, 0, 585, 657, 658, 659, 660, 0, 594,
	0, 586, 587, 588, 661, 589, 662, 0, 590, 591,
	592, 593, 0, 595, 596, 0, 0, 597, 598, 599,
	601, 602, 600, 603, 0, 604, 0, 0, 605, 606,
	607, 1569, 664, 665, 0, 609, 608, 610, 666, 0,
	1566, 0, 1295, 223, 611, 612, 667, 613, 614, 615,
	0, 0, 224, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 185, 616, 0, 0, 0, 0,
	280, 281, 1156, 282, 283, 284, 285, 286, 287, 617,
	618, 0, 288, 619, 289, 620, 0, 621, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 622, 623,
	624, 0, 297, 298, 625, 0, 1300, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1157, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 626, 627, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 628, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 629, 630, 360, 0, 267, 0, 0,
	0, 0, 0, 361, 362, 363, 631, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1158, 367, 368, 632,
	633, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 634, 0, 635, 379, 0, 380, 381, 382,
	383, 384, 636, 637, 638, 461, 1160, 385, 386, 0,
	387, 388, 389, 390, 0, 0, 0, 0, 391, 392,
	393, 395, 0, 1159, 394, 639, 640, 0, 641, 0,
	396, 397, 1161, 642, 1162, 398, 399, 400, 1163, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 643, 1164, 412, 413, 1165,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 1166,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 1167, 448, 0, 0, 1168, 458, 459, 0,
	644, 460, 645, 462, 463, 0, 0, 464, 0, 0,
	0, 466, 467, 468, 0, 0, 469, 470, 646, 1169,
	471, 1170, 647, 472, 473, 465, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 648, 485,
	486, 487, 649, 488, 489, 490, 650, 491, 651, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 652, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 1171, 524, 525, 526, 527, 653, 528, 0,
	529, 530, 536, 537, 531, 532, 538, 539, 540, 541,
	542, 229, 544, 545, 543, 546, 547, 548, 0, 549,
	550, 533, 534, 551, 552, 1172, 553, 554, 555, 556,
	557, 558, 654, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 655, 566, 567, 568, 569, 656,
	573, 574, 0, 575, 576, 0, 572, 563, 231, 577,
	578, 579, 580, 581, 582, 583, 354, 584, 0, 585,
	657, 658, 659, 660, 0, 594, 0, 586, 587, 588,
	661, 589, 662, 0, 590, 591, 592, 593, 0, 595,
	596, 0, 0, 597, 598, 599, 601, 602, 600, 603,
	0, 604, 0, 0, 605, 606, 607, 1569, 664, 665,
	0, 609, 608, 610, 666, 0, 0, 0, 0, 223,
	611, 612, 667, 613, 614, 615, 0, 0, 224, 0,
	0, 0, 0, 0, 1295, 1294, 0, 0, 0, 0,
	1292, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	185, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 616, 0, 0,
	0, 0, 280, 281, 1156, 282, 283, 284, 285, 286,
	287, 617, 618, 0, 288, 619, 289, 620, 0, 621,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	622, 623, 624, 0, 297, 298, 625, 0, 1300, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1157, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 626, 627, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 628, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 629, 630, 360, 0, 267,
	0, 0, 0, 0, 0, 361, 362, 363, 631, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1158, 367,
	368, 632, 633, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 634, 0, 635, 379, 0, 380,
	381, 382, 383, 384, 636, 637, 638, 461, 1160, 385,
	386, 0, 387, 388, 389, 390, 0, 0, 0, 0,
	391, 392, 393, 395, 0, 1159, 394, 639, 640, 0,
	641, 0, 396, 397, 1161, 642, 1162, 398, 399, 400,
	1163, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 643, 1164, 412,
	413, 1165, 0, 414, 0, 0, 0, 415, 416, 419,
	0, 0, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 1166, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 1167, 448, 0, 0, 1168, 458,
	459, 0, 644, 460, 645, 462, 463, 0, 0, 464,
	0, 0, 0, 466, 467, 468, 0, 0, 469, 470,
	646, 1169, 471, 1170, 647, 472, 473, 465, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	648, 485, 486, 487, 649, 488, 489, 490, 650, 491,
	651, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 652, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 1171, 524, 525, 526, 527, 653,
	528, 0, 529, 530, 536, 537, 531, 532, 538, 539,
	540, 541, 542, 0, 544, 545, 543, 546, 547, 548,
	0, 549, 550, 533, 534, 551, 552, 1172, 553, 554,
	555, 556, 557, 558, 654, 0, 559, 0, 560, 561,
	562, 564, 535, 565, 570, 571, 655, 566, 567, 568,
	569, 656, 573, 574, 0, 575, 576, 0, 572, 563,
	0, 577, 578, 579, 580, 581, 582, 583, 354, 584,
	0, 585, 657, 658, 659, 660, 0, 594, 0, 586,
	587, 588, 661, 589, 662, 0, 590, 591, 592, 593,
	0, 595, 596, 0, 0, 597, 598, 599, 601, 602,
	600, 603, 0, 604, 0, 0, 605, 606, 607, 663,
	664, 665, 0, 609, 608, 610, 666, 0, 0, 0,
	0, 0, 611, 612, 667, 613, 614, 615, 0, 0,
	0, 0, 0, 0, 0, 0, 1295, 1294, 0, 0,
	0, 0, 1292, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1591, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 616,
	0, 0, 0, 0, 280, 281, 1156, 282, 283, 284,
	285, 286, 287, 617, 618, 0, 288, 619, 289, 620,
	0, 621, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 622, 623, 624, 0, 297, 298, 625, 0,
	1300, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1157,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 626, 627, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 628, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 629, 630, 360,
	0, 267, 0, 0, 0, 0, 0, 361, 362, 363,
	631, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1158, 367, 368, 632, 633, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 634, 0, 635, 379,
	0, 380, 381, 382, 383, 384, 636, 637, 638, 461,
	1160, 385, 386, 0, 387, 388, 389, 390, 0, 0,
	0, 0, 391, 392, 393, 395, 0, 1159, 394, 639,
	640, 0, 641, 0, 396, 397, 1161, 642, 1162, 398,
	399, 400, 1163, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 643,
	1164, 412, 413, 1165, 0, 414, 0, 0, 0, 415,
	416, 419, 0, 0, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 1166, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 1167, 448, 0, 0,
	1168, 458, 459, 0, 644, 460, 645, 462, 463, 0,
	0, 464, 0, 0, 0, 466, 467, 468, 0, 0,
	469, 470, 646, 1169, 471, 1170, 647, 472, 473, 465,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 648, 485, 486, 487, 649, 488, 489, 490,
	650, 491, 651, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 652, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 1171, 524, 525, 526,
	527, 653, 528, 0, 529, 530, 536, 537, 531, 532,
	538, 539, 540, 541, 542, 0, 544, 545, 543, 546,
	547, 548, 0, 549, 550, 533, 534, 551, 552, 1172,
	553, 554, 555, 556, 557, 558, 654, 0, 559, 0,
	560, 561, 562, 564, 535, 565, 570, 571, 655, 566,
	567, 568, 569, 656, 573, 574, 0, 575, 576, 0,
	572, 563, 0, 577, 578, 579, 580, 581, 582, 583,
	354, 584, 0, 585, 657, 658, 659, 660, 0, 594,
	0, 586, 587, 588, 661, 589, 662, 0, 590, 591,
	592, 593, 0, 595, 596, 0, 0, 597, 598, 599,
	601, 602, 600, 603, 0, 604, 0, 0, 605, 606,
	607, 663, 664, 665, 0, 609, 608, 610, 666, 0,
	0, 0, 0, 0, 611, 612, 667, 613, 614, 615,
	0, 0, 0, 0, 0, 0, 0, 0, 1295, 1294,
	0, 0, 0, 0, 1292, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3466, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 616, 0, 0, 0, 0, 280, 281, 1156, 282,
	283, 284, 285, 286, 287, 617, 618, 0, 288, 619,
	289, 620, 0, 621, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 622, 623, 624, 0, 297, 298,
	625, 0, 1300, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1157, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 626,
	627, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 628, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 629,
	630, 360, 0, 267, 0, 0, 0, 0, 0, 361,
	362, 363, 631, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1158, 367, 368, 632, 633, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 634, 0,
	635, 379, 0, 380, 381, 382, 383, 384, 636, 637,
	638, 461, 1160, 385, 386, 0, 387, 388, 389, 390,
	0, 0, 0, 0, 391, 392, 393, 395, 0, 1159,
	394, 639, 640, 0, 641, 0, 396, 397, 1161, 642,
	1162, 398, 399, 400, 1163, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 643, 1164, 412, 413, 1165, 0, 414, 0, 0,
	0, 415, 416, 419, 0, 0, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 1166, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 1167, 448,
	0, 0, 1168, 458, 459, 0, 644, 460, 645, 462,
	463, 0, 0, 464, 0, 0, 0, 466, 467, 468,
	0, 0, 469, 470, 646, 1169, 471, 1170, 647, 472,
	473, 465, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 648, 485, 486, 487, 649, 488,
	489, 490, 650, 491, 651, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 652, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 2245, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 1171, 524,
	525, 526, 527, 653, 528, 0, 529, 530, 536, 537,
	531, 532, 538, 539, 540, 541, 542, 0, 544, 545,
	543, 546, 547, 548, 0, 549, 550, 533, 534, 551,
	552, 1172, 553, 554, 555, 556, 557, 558, 654, 0,
	559, 0, 560, 561, 562, 564, 535, 565, 570, 571,
	655, 566, 567, 568, 569, 656, 573, 574, 0, 575,
	576, 0, 572, 563, 0, 577, 578, 579, 580, 581,
	582, 583, 354, 584, 0, 585, 657, 658, 659, 660,
	0, 594, 0, 586, 587, 588, 661, 589, 662, 0,
	590, 591, 592, 593, 0, 595, 596, 0, 0, 597,
	598, 599, 601, 602, 600, 603, 0, 604, 0, 0,
	605, 606, 607, 663, 664, 665, 0, 609, 608, 610,
	666, 0, 0, 0, 0, 0, 611, 612, 667, 613,
	614, 615, 0, 0, 0, 0, 0, 0, 0, 0,
	1295, 2159, 0, 0, 0, 0, 2160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1591, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 616, 0, 0, 0, 0, 280, 281,
	1156, 282, 283, 284, 285, 286, 287, 617, 618, 0,
	288, 619, 289, 620, 0, 621, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 622, 623, 624, 0,
	297, 298, 625, 0, 1300, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1157, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 626, 627, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	628, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 629, 630, 360, 0, 267, 0, 0, 0, 0,
	0, 361, 362, 363, 631, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1158, 367, 368, 632, 633, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	634, 0, 635, 379, 0, 380, 381, 382, 383, 384,
	636, 637, 638, 461, 1160, 385, 386, 0, 387, 388,
	389, 390, 0, 0, 0, 0, 391, 392, 393, 395,
	0, 1159, 394, 639, 640, 0, 641, 0, 396, 397,
	1161, 642, 1162, 398, 399, 400, 1163, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 2158, 410,
	409, 0, 411, 643, 1164, 412, 413, 1165, 0, 414,
	0, 0, 0, 415, 416, 419, 0, 0, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 1166, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	1167, 448, 0, 0, 1168, 458, 459, 0, 644, 460,
	645, 462, 463, 0, 0, 464, 0, 0, 0, 466,
	467, 468, 0, 0, 469, 470, 646, 1169, 471, 1170,
	647, 472, 473, 465, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 648, 485, 486, 487,
	649, 488, 489, 490, 650, 491, 651, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	652, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	1171, 524, 525, 526, 527, 653, 528, 0, 529, 530,
	536, 537, 531, 532, 538, 539, 540, 541, 542, 0,
	544, 545, 543, 546, 547, 548, 0, 549, 550, 533,
	534, 551, 552, 1172, 553, 554, 555, 556, 557, 558,
	654, 0, 559, 0, 560, 561, 562, 564, 535, 565,
	570, 571, 655, 566, 567, 568, 569, 656, 573, 574,
	0, 575, 576, 0, 572, 563, 0, 577, 578, 579,
	580, 581, 582, 583, 354, 584, 0, 585, 657, 658,
	659, 660, 0, 594, 0, 586, 587, 588, 661, 589,
	662, 0, 590, 591, 592, 593, 0, 595, 596, 0,
	0, 597, 598, 599, 601, 602, 600, 603, 0, 604,
	0, 0, 605, 606, 607, 663, 664, 665, 0, 609,
	608, 610, 666, 0, 0, 0, 0, 0, 611, 612,
	667, 613, 614, 615, 0, 0, 0, 0, 0, 0,
	0, 0, 1295, 1294, 0, 0, 0, 0, 1292, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1591, 270,
	272, 271, 273, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 616, 0, 0, 0, 0,
	280, 281, 1156, 282, 283, 284, 285, 286, 287, 617,
	618, 0, 288, 619, 289, 620, 0, 621, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 622, 623,
	624, 0, 297, 298, 625, 0, 1300, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1157, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 626, 627, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 628, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 629, 630, 360, 0, 267, 0, 0,
	0, 0, 0, 361, 362, 363, 631, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1158, 367, 368, 632,
	633, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 634, 0, 635, 379, 0, 380, 381, 382,
	383, 384, 636, 637, 638, 461, 1160, 385, 386, 0,
	387, 388, 389, 390, 0, 0, 0, 0, 391, 392,
	393, 395, 0, 1159, 394, 639, 640, 0, 641, 0,
	396, 397, 1161, 642, 1162, 398, 399, 400, 1163, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 643, 1164, 412, 413, 1165,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 1166,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 1167, 448, 0, 0, 1168, 458, 459, 0,
	644, 460, 645, 462, 463, 0, 0, 464, 0, 0,
	0, 466, 467, 468, 0, 0, 469, 470, 646, 1169,
	471, 1170, 647, 472, 473, 465, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 648, 485,
	486, 487, 649, 488, 489, 490, 650, 491, 651, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 652, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 1171, 524, 525, 526, 527, 653, 528, 0,
	529, 530, 536, 537, 531, 532, 538, 539, 540, 541,
	542, 0, 544, 545, 543, 546, 547, 548, 0, 549,
	550, 533, 534, 551, 552, 1172, 553, 554, 555, 556,
	557, 558, 654, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 655, 566, 567, 568, 569, 656,
	573, 574, 0, 575, 576, 0, 572, 563, 0, 577,
	578, 579, 580, 581, 582, 583, 354, 584, 0, 585,
	657, 658, 659, 660, 0, 594, 0, 586, 587, 588,
	661, 589, 662, 0, 590, 591, 592, 593, 0, 595,
	596, 0, 0, 597, 598, 599, 601, 602, 600, 603,
	0, 604, 0, 0, 605, 606, 607, 663, 664, 665,
	0, 609, 608, 610, 666, 1214, 0, 0, 0, 0,
	611, 612, 667, 613, 614, 615, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1116, 0,
	1575, 0, 0, 280, 281, 1156, 282, 283, 284, 285,
	286, 287, 617, 618, 0, 288, 619, 289, 620, 0,
	621, 290, 291, 292, 293, 294, 295, 0, 1115, 0,
	296, 622, 623, 624, 0, 297, 298, 1122, 0, 1103,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1157, 321,
	322, 323, 1106, 1104, 1105, 1112, 1108, 1107, 1111, 324,
	325, 326, 327, 328, 0, 329, 626, 627, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 628, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1147, 1148, 360, 0,
	267, 0, 0, 0, 0, 0, 361, 362, 363, 631,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1158,
	367, 368, 632, 633, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 1154, 0, 635, 379, 0,
	380, 381, 382, 383, 384, 1117, 1118, 1121, 461, 1160,
	385, 386, 0, 387, 388, 389, 390, 0, 0, 0,
	268, 391, 392, 393, 395, 0, 1159, 394, 639, 640,
	0, 641, 0, 396, 397, 1161, 1119, 1162, 398, 399,
	400, 1163, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 1155, 1164,
	412, 413, 1165, 0, 414, 0, 0, 0, 415, 416,
	419, 1110, 1109, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 1166, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 1167, 448, 0, 269, 1168,
	458, 459, 0, 1120, 460, 645, 462, 463, 0, 0,
	464, 0, 0, 0, 466, 467, 468, 0, 0, 469,
	470, 646, 1169, 471, 1170, 1149, 472, 473, 465, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 648, 485, 486, 487, 649, 488, 489, 490, 1150,
	491, 651, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 652, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 1171, 524, 525, 526, 527,
	653, 528, 0, 529, 530, 536, 537, 531, 532, 538,
	539, 540, 541, 542, 0, 544, 545, 543, 546, 547,
	548, 1113, 549, 550, 533, 534, 551, 552, 1172, 553,
	554, 555, 556, 557, 558, 654, 0, 559, 0, 560,
	561, 562, 564, 535, 565, 570, 571, 655, 566, 567,
	568, 569, 1151, 573, 574, 0, 575, 576, 0, 572,
	563, 0, 577, 578, 579, 580, 581, 582, 583, 354,
	584, 0, 585, 657, 658, 659, 660, 0, 594, 0,
	586, 587, 588, 1152, 589, 1153, 0, 590, 591, 592,
	593, 0, 595, 596, 0, 0, 597, 598, 599, 601,
	602, 600, 603, 1114, 604, 0, 0, 605, 606, 607,
	663, 664, 665, 0, 609, 608, 610, 666, 1038, 0,
	264, 0, 0, 611, 612, 667, 613, 614, 615, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 616, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 617, 618, 0,
	288, 619, 289, 620, 0, 621, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 622, 623, 624, 0,
	297, 298, 625, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 626, 627, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	628, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 629, 630, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 631, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 632, 633, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	634, 0, 635, 379, 0, 380, 381, 382, 383, 384,
	636, 637, 638, 461, 0, 385, 386, 0, 387, 388,
	389, 390, 0, 0, 0, 0, 391, 392, 393, 395,
	0, 0, 394, 639, 640, 0, 641, 0, 396, 397,
	0, 642, 0, 398, 399, 400, 0, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 643, 0, 412, 413, 0, 0, 414,
	0, 0, 0, 415, 416, 419, 0, 0, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 0, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	0, 448, 0, 0, 0, 458, 459, 0, 644, 460,
	645, 462, 463, 0, 0, 464, 0, 0, 0, 466,
	467, 468, 0, 0, 469, 470, 646, 0, 471, 0,
	647, 472, 473, 465, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 648, 485, 486, 487,
	649, 488, 489, 490, 650, 491, 651, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	652, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	0, 524, 525, 526, 527, 653, 528, 0, 529, 530,
	536, 537, 531, 532, 538, 539, 540, 541, 542, 229,
	544, 545, 543, 546, 547, 548, 0, 549, 550, 533,
	534, 551, 552, 0, 553, 554, 555, 556, 557, 558,
	654, 0, 559, 0, 560, 561, 562, 564, 535, 565,
	570, 571, 655, 566, 567, 568, 569, 656, 573, 574,
	0, 575, 576, 0, 572, 563, 231, 577, 578, 579,
	580, 581, 582, 583, 354, 584, 0, 585, 657, 658,
	659, 660, 0, 594, 0, 586, 587, 588, 661, 589,
	662, 0, 590, 591, 592, 593, 0, 595, 596, 0,
	0, 597, 598, 599, 601, 602, 600, 603, 0, 604,
	0, 0, 605, 606, 607, 1569, 664, 665, 0, 609,
	608, 610, 666, 264, 0, 0, 0, 223, 611, 612,
	667, 613, 614, 615, 0, 0, 224, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 616, 0, 185, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	617, 618, 0, 288, 619, 289, 620, 0, 621, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 622,
	623, 624, 0, 297, 298, 625, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 626, 627, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 628, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 629, 630, 360, 0, 267, 0,
	0, 0, 0, 0, 361, 362, 363, 631, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	632, 633, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 634, 0, 635, 379, 0, 380, 381,
	382, 383, 384, 636, 637, 638, 461, 0, 385, 386,
	0, 387, 388, 389, 390, 0, 0, 0, 268, 391,
	392, 393, 395, 0, 0, 394, 639, 640, 0, 641,
	0, 396, 397, 0, 642, 0, 398, 399, 400, 0,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 643, 0, 412, 413,
	0, 0, 414, 0, 0, 0, 415, 416, 419, 0,
	0, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	0, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 0, 448, 0, 269, 0, 458, 459,
	0, 644, 460, 645, 462, 463, 0, 0, 464, 0,
	0, 0, 466, 467, 468, 0, 0, 469, 470, 646,
	0, 471, 0, 647, 472, 473, 465, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 648,
	485, 486, 487, 649, 488, 489, 490, 650, 491, 651,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 652, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 0, 524, 525, 526, 527, 653, 528,
	0, 529, 530, 536, 537, 531, 532, 538, 539, 540,
	541, 542, 0, 544, 545, 543, 546, 547, 548, 0,
	549, 550, 533, 534, 551, 552, 0, 553, 554, 555,
	556, 557, 558, 654, 0, 559, 0, 560, 561, 562,
	564, 535, 565, 570, 571, 655, 566, 567, 568, 569,
	656, 573, 574, 0, 575, 576, 0, 572, 563, 0,
	577, 578, 579, 580, 581, 582, 583, 354, 584, 0,
	585, 657, 658, 659, 660, 0, 594, 0, 586, 587,
	588, 661, 589, 662, 0, 590, 591, 592, 593, 0,
	595, 596, 0, 0, 597, 598, 599, 601, 602, 600,
	603, 0, 604, 0, 0, 605, 606, 607, 663, 664,
	665, 0, 609, 608, 610, 666, 264, 2935, 0, 0,
	0, 611, 612, 667, 613, 614, 615, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 616,
	0, 1919, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 617, 618, 0, 288, 619, 289, 620,
	0, 621, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 622, 623, 624, 0, 297, 298, 625, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 626, 627, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 628, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 629, 630, 360,
	0, 0, 0, 0, 0, 0, 0, 361, 362, 363,
	631, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 632, 633, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 634, 0, 635, 379,
	0, 380, 381, 382, 383, 384, 636, 637, 638, 461,
	0, 385, 386, 0, 387, 388, 389, 390, 0, 0,
	0, 0, 391, 392, 393, 395, 0, 0, 394, 639,
	640, 0, 641, 0, 396, 397, 0, 642, 0, 398,
	399, 400, 0, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 643,
	0, 412, 413, 0, 0, 414, 0, 0, 0, 415,
	416, 419, 0, 0, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 0, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 0, 448, 0, 0,
	0, 458, 459, 0, 644, 460, 645, 462, 463, 0,
	0, 464, 0, 0, 0, 466, 467, 468, 0, 0,
	469, 470, 646, 0, 471, 0, 647, 472, 473, 465,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 648, 485, 486, 487, 649, 488, 489, 490,
	650, 491, 651, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 652, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 0, 524, 525, 526,
	527, 653, 528, 0, 529, 530, 536, 537, 531, 532,
	538, 539, 540, 541, 542, 0, 544, 545, 543, 546,
	547, 548, 0, 549, 550, 533, 534, 551, 552, 0,
	553, 554, 555, 556, 557, 558, 654, 0, 559, 0,
	560, 561, 562, 564, 535, 565, 570, 571, 655, 566,
	567, 568, 569, 656, 573, 574, 0, 575, 576, 0,
	572, 563, 0, 577, 578, 579, 580, 581, 582, 583,
	354, 584, 0, 585, 657, 658, 659, 660, 0, 594,
	0, 586, 587, 588, 661, 589, 662, 0, 590, 591,
	592, 593, 0, 595, 596, 0, 0, 597, 598, 599,
	601, 602, 600, 603, 0, 604, 0, 0, 605, 606,
	607, 663, 664, 665, 264, 609, 608, 610, 666, 0,
	0, 0, 0, 0, 611, 612, 667, 613, 614, 615,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 616, 0, 0,
	0, 0, 280, 281, 4667, 282, 283, 284, 285, 286,
	287, 617, 618, 0, 288, 619, 289, 620, 0, 621,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	622, 623, 624, 0, 297, 298, 625, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 626, 627, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 628, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 629, 630, 360, 0, 267,
	0, 0, 0, 0, 0, 361, 362, 363, 631, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 632, 633, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 634, 0, 635, 379, 0, 380,
	381, 382, 383, 384, 636, 637, 638, 461, 0, 385,
	386, 0, 387, 388, 389, 390, 0, 0, 0, 268,
	391, 392, 393, 395, 0, 0, 394, 639, 640, 0,
	641, 0, 396, 397, 0, 642, 0, 398, 399, 400,
	0, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 643, 0, 412,
	413, 0, 0, 414, 0, 0, 0, 415, 416, 419,
	0, 0, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 0, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 0, 448, 0, 269, 0, 458,
	459, 0, 644, 460, 645, 462, 463, 0, 0, 464,
	0, 0, 0, 466, 467, 468, 0, 0, 469, 470,
	646, 0, 471, 0, 647, 472, 473, 465, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	648, 485, 486, 487, 649, 488, 489, 490, 650, 491,
	651, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 652, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 0, 524, 525, 526, 527, 653,
	528, 0, 529, 530, 536, 537, 531, 532, 538, 539,
	540, 541, 542, 0, 544, 545, 543, 546, 547, 548,
	0, 549, 550, 533, 534, 551, 552, 0, 553, 554,
	555, 556, 557, 558, 654, 0, 559, 0, 560, 561,
	562, 564, 535, 565, 570, 571, 655, 566, 567, 568,
	569, 656, 573, 574, 0, 575, 576, 0, 572, 563,
	0, 577, 578, 579, 580, 581, 582, 583, 354, 584,
	0, 585, 657, 658, 659, 660, 0, 594, 0, 586,
	587, 588, 661, 589, 662, 0, 590, 591, 592, 593,
	0, 595, 596, 0, 0, 597, 598, 599, 601, 602,
	600, 603, 0, 604, 0, 0, 605, 606, 607, 663,
	664, 665, 0, 609, 608, 610, 666, 0, 264, 0,
	0, 0, 611, 612, 667, 613, 614, 615, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	3416, 616, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 617, 618, 0, 288, 619,
	289, 620, 0, 621, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 622, 623, 624, 0, 297, 298,
	625, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 626,
	627, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 628, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 629,
	630, 360, 0, 267, 0, 0, 0, 0, 0, 361,
	362, 363, 631, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 632, 633, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 634, 0,
	635, 379, 0, 380, 381, 382, 383, 384, 636, 637,
	638, 461, 0, 385, 386, 0, 387, 388, 389, 390,
	0, 0, 0, 268, 391, 392, 393, 395, 0, 0,
	394, 639, 640, 0, 641, 0, 396, 397, 0, 642,
	0, 398, 399, 400, 0, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 643, 0, 412, 413, 0, 0, 414, 0, 0,
	0, 415, 416, 419, 0, 0, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 0, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 0, 448,
	0, 269, 0, 458, 459, 0, 644, 460, 645, 462,
	463, 0, 0, 464, 0, 0, 0, 466, 467, 468,
	0, 0, 469, 470, 646, 0, 471, 0, 647, 472,
	473, 465, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 648, 485, 486, 487, 649, 488,
	489, 490, 650, 491, 651, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 652, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 0, 524,
	525, 526, 527, 653, 528, 0, 529, 530, 536, 537,
	531, 532, 538, 539, 540, 541, 542, 0, 544, 545,
	543, 546, 547, 548, 0, 549, 550, 533, 534, 551,
	552, 0, 553, 554, 555, 556, 557, 558, 654, 0,
	559, 0, 560, 561, 562, 564, 535, 565, 570, 571,
	655, 566, 567, 568, 569, 656, 573, 574, 0, 575,
	576, 0, 572, 563, 0, 577, 578, 579, 580, 581,
	582, 583, 354, 584, 0, 585, 657, 658, 659, 660,
	0, 594, 0, 586, 587, 588, 661, 589, 662, 0,
	590, 591, 592, 593, 0, 595, 596, 0, 0, 597,
	598, 599, 601, 602, 600, 603, 0, 604, 0, 0,
	605, 606, 607, 663, 664, 665, 0, 609, 608, 610,
	666, 0, 264, 0, 0, 0, 611, 612, 667, 613,
	614, 615, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 1563, 616, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 617,
	618, 0, 288, 619, 289, 620, 0, 621, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 622, 623,
	624, 0, 297, 298, 625, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 626, 627, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 628, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 629, 630, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 631, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 632,
	633, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 634, 0, 635, 379, 0, 380, 381, 382,
	383, 384, 636, 637, 638, 461, 0, 385, 386, 0,
	387, 388, 389, 390, 0, 0, 0, 0, 391, 392,
	393, 395, 0, 0, 394, 639, 640, 0, 641, 0,
	396, 397, 0, 642, 0, 398, 399, 400, 0, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 643, 0, 412, 413, 0,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 0,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 0, 448, 0, 0, 0, 458, 459, 0,
	644, 460, 645, 462, 463, 0, 0, 464, 0, 0,
	0, 466, 467, 468, 0, 0, 469, 470, 646, 0,
	471, 0, 647, 472, 473, 465, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 648, 485,
	486, 487, 649, 488, 489, 490, 650, 491, 651, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 652, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 0, 524, 525, 526, 527, 653, 528, 0,
	529, 530, 536, 537, 531, 532, 538, 539, 540, 541,
	542, 0, 544, 545, 543, 546, 547, 548, 0, 549,
	550, 533, 534, 551, 552, 0, 553, 554, 555, 556,
	557, 558, 654, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 655, 566, 567, 568, 569, 656,
	573, 574, 0, 575, 576, 0, 572, 563, 0, 577,
	578, 579, 580, 581, 582, 583, 354, 584, 0, 585,
	657, 658, 659, 660, 0, 594, 0, 586, 587, 588,
	661, 589, 662, 0, 590, 591, 592, 593, 0, 595,
	596, 0, 0, 597, 598, 599, 601, 602, 600, 603,
	0, 604, 0, 0, 605, 606, 607, 663, 664, 665,
	264, 609, 608, 610, 666, 0, 0, 0, 0, 0,
	611, 612, 667, 613, 614, 615, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 616, 0, 0, 0, 0, 280, 281,
	2923, 282, 283, 284, 285, 286, 287, 617, 618, 0,
	288, 619, 289, 620, 0, 621, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 622, 623, 624, 0,
	297, 298, 625, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 626, 627, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	628, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 629, 630, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 631, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 632, 633, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	634, 0, 635, 379, 0, 380, 381, 382, 383, 384,
	636, 637, 638, 461, 0, 385, 386, 0, 387, 388,
	389, 390, 0, 0, 0, 0, 391, 392, 393, 395,
	0, 0, 394, 639, 640, 0, 641, 0, 396, 397,
	0, 642, 0, 398, 399, 400, 0, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 643, 0, 412, 413, 0, 0, 414,
	0, 0, 0, 415, 416, 419, 0, 0, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 0, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	0, 448, 0, 0, 0, 458, 459, 0, 644, 460,
	645, 462, 463, 0, 0, 464, 0, 0, 0, 466,
	467, 468, 0, 0, 469, 470, 646, 0, 471, 0,
	647, 472, 473, 465, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 648, 485, 486, 487,
	649, 488, 489, 490, 650, 491, 651, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	652, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	0, 524, 525, 526, 527, 653, 528, 0, 529, 530,
	536, 537, 531, 532, 538, 539, 540, 541, 542, 0,
	544, 545, 543, 546, 547, 548, 0, 549, 550, 533,
	534, 551, 552, 0, 553, 554, 555, 556, 557, 558,
	654, 0, 559, 0, 560, 561, 562, 564, 535, 565,
	570, 571, 655, 566, 567, 568, 569, 656, 573, 574,
	0, 575, 576, 0, 572, 563, 0, 577, 578, 579,
	580, 581, 582, 583, 354, 584, 0, 585, 657, 658,
	659, 660, 0, 594, 0, 586, 587, 588, 661, 589,
	662, 0, 590, 591, 592, 593, 0, 595, 596, 0,
	0, 597, 598, 599, 601, 602, 600, 603, 0, 604,
	0, 0, 605, 606, 607, 663, 664, 665, 264, 609,
	608, 610, 666, 0, 0, 0, 0, 0, 611, 612,
	667, 613, 614, 615, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 616, 0, 0, 0, 0, 280, 281, 3572, 282,
	283, 284, 285, 286, 287, 617, 618, 0, 288, 619,
	289, 620, 0, 621, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 622, 623, 624, 0, 297, 298,
	625, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 626,
	627, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 628, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 629,
	630, 360, 0, 0, 0, 0, 0, 0, 0, 361,
	362, 363, 631, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 632, 633, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 634, 0,
	635, 379, 0, 380, 381, 382, 383, 384, 636, 637,
	638, 461, 0, 385, 386, 0, 387, 388, 389, 390,
	0, 0, 0, 0, 391, 392, 393, 395, 0, 0,
	394, 639, 640, 0, 641, 0, 396, 397, 0, 642,
	0, 398, 399, 400, 0, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 643, 0, 412, 413, 0, 0, 414, 0, 0,
	0, 415, 416, 419, 0, 0, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 0, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 0, 448,
	0, 0, 0, 458, 459, 0, 644, 460, 645, 462,
	463, 0, 0, 464, 0, 0, 0, 466, 467, 468,
	0, 0, 469, 470, 646, 0, 471, 0, 647, 472,
	473, 465, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 648, 485, 486, 487, 649, 488,
	489, 490, 650, 491, 651, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 652, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 0, 524,
	525, 526, 527, 653, 528, 0, 529, 530, 536, 537,
	531, 532, 538, 539, 540, 541, 542, 0, 544, 545,
	543, 546, 547, 548, 0, 549, 550, 533, 534, 551,
	552, 0, 553, 554, 555, 556, 557, 558, 654, 0,
	559, 0, 560, 561, 562, 564, 535, 565, 570, 571,
	655, 566, 567, 568, 569, 656, 573, 574, 0, 575,
	576, 0, 572, 563, 0, 577, 578, 579, 580, 581,
	582, 583, 354, 584, 0, 585, 657, 658, 659, 660,
	0, 594, 0, 586, 587, 588, 661, 589, 662, 0,
	590, 591, 592, 593, 0, 595, 596, 0, 0, 597,
	598, 599, 601, 602, 600, 603, 0, 604, 0, 0,
	605, 606, 607, 663, 664, 665, 0, 609, 608, 610,
	666, 0, 880, 0, 787, 0, 611, 612, 667, 613,
	614, 615, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 2236, 616, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 617, 618, 0, 288, 619, 289, 620, 0, 621,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	622, 623, 624, 0, 297, 298, 625, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 794, 328, 0, 329, 626, 627, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 628, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 629, 630, 360, 0, 267,
	0, 0, 0, 0, 0, 361, 362, 363, 631, 0,
	0, 0, 364, 0, 365, 366, 0, 878, 0, 367,
	368, 632, 633, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 634, 0, 635, 379, 0, 380,
	381, 382, 383, 384, 636, 637, 638, 461, 0, 385,
	386, 0, 387, 388, 389, 390, 0, 0, 0, 268,
	391, 392, 393, 395, 0, 0, 394, 639, 640, 0,
	641, 0, 396, 397, 0, 642, 0, 398, 399, 400,
	0, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 643, 0, 412,
	413, 0, 0, 414, 0, 0, 0, 415, 416, 419,
	0, 0, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 0, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 0, 448, 0, 269, 0, 458,
	459, 0, 644, 460, 645, 462, 463, 0, 0, 464,
	0, 0, 0, 466, 467, 468, 0, 0, 469, 470,
	646, 0, 471, 0, 647, 472, 473, 465, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	648, 485, 486, 487, 649, 488, 489, 490, 650, 491,
	651, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 652, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 0, 524, 525, 526, 527, 653,
	528, 0, 529, 530, 536, 537, 531, 532, 538, 539,
	540, 541, 542, 0, 544, 545, 543, 546, 547, 548,
	0, 549, 550, 533, 534, 551, 552, 0, 553, 554,
	555, 556, 557, 558, 654, 0, 559, 0, 560, 561,
	562, 564, 535, 565, 570, 571, 655, 566, 567, 568,
	569, 656, 573, 574, 0, 575, 576, 0, 572, 563,
	792, 577, 578, 579, 580, 581, 793, 583, 354, 584,
	0, 585, 657, 658, 659, 660, 0, 594, 0, 586,
	587, 588, 661, 589, 662, 0, 590, 591, 592, 593,
	0, 595, 596, 0, 0, 597, 598, 599, 601, 602,
	600, 603, 0, 604, 0, 0, 605, 606, 607, 663,
	664, 665, 0, 609, 608, 610, 666, 0, 785, 0,
	787, 0, 611, 612, 667, 613, 614, 615, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 797, 278, 279, 0, 0,
	0, 0, 0, 616, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 617, 618, 0,
	288, 619, 289, 620, 0, 621, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 622, 623, 624, 0,
	297, 298, 625, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 794, 328, 0,
	329, 626, 627, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	628, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 629, 630, 360, 0, 267, 0, 0, 0, 0,
	0, 361, 362, 363, 631, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 632, 633, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	634, 0, 635, 379, 0, 380, 381, 382, 383, 384,
	636, 637, 638, 461, 0, 385, 386, 0, 387, 388,
	389, 390, 0, 0, 0, 268, 391, 392, 393, 395,
	0, 0, 394, 639, 640, 0, 641, 0, 396, 397,
	0, 642, 0, 398, 399, 400, 0, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 643, 0, 412, 413, 0, 0, 414,
	0, 0, 0, 415, 416, 419, 0, 0, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 0, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	0, 448, 0, 269, 0, 458, 459, 0, 644, 460,
	645, 462, 463, 0, 0, 464, 0, 0, 0, 466,
	467, 468, 0, 0, 469, 470, 646, 0, 471, 0,
	647, 472, 473, 465, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 648, 485, 486, 487,
	649, 488, 489, 490, 650, 491, 651, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	652, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	0, 524, 525, 526, 527, 653, 528, 0, 529, 530,
	536, 537, 531, 532, 538, 539, 540, 541, 542, 0,
	544, 545, 543, 546, 547, 548, 0, 549, 550, 533,
	534, 551, 552, 0, 553, 554, 555, 556, 557, 558,
	654, 0, 559, 0, 560, 561, 562, 564, 535, 565,
	570, 571, 655, 566, 567, 568, 569, 656, 573, 574,
	0, 575, 576, 0, 572, 563, 792, 577, 578, 579,
	580, 581, 793, 583, 354, 584, 0, 585, 657, 658,
	659, 660, 0, 594, 0, 586, 587, 588, 661, 589,
	662, 0, 590, 591, 592, 593, 0, 595, 596, 0,
	0, 597, 598, 599, 601, 602, 600, 603, 0, 604,
	0, 0, 605, 606, 607, 663, 664, 665, 1958, 609,
	608, 610, 666, 0, 0, 0, 0, 0, 611, 612,
	667, 613, 614, 615, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 797, 0, 0, 0, 0, 280, 281, 1156, 282,
	283, 284, 285, 286, 287, 0, 1964, 0, 288, 1954,
	289, 1970, 0, 1977, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 1980, 1981, 0, 0, 297, 298,
	0, 0, 1300, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1157, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 1139, 329, 1968,
	1967, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 1124, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 0, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 0,
	0, 360, 0, 0, 0, 0, 0, 0, 0, 361,
	362, 363, 1966, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1158, 367, 368, 1975, 1976, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 0, 0,
	0, 379, 0, 380, 381, 382, 383, 384, 0, 0,
	0, 461, 1160, 385, 386, 0, 387, 388, 389, 390,
	0, 0, 0, 0, 391, 392, 393, 395, 0, 1159,
	394, 1961, 1962, 0, 1957, 0, 396, 397, 1161, 0,
	1162, 398, 399, 400, 1163, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 0, 1164, 412, 413, 1165, 0, 414, 0, 0,
	0, 415, 416, 419, 0, 0, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 1166, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 1167, 448,
	0, 0, 1168, 458, 459, 0, 0, 460, 1969, 462,
	463, 0, 0, 464, 0, 0, 0, 466, 467, 468,
	0, 0, 469, 470, 0, 1169, 471, 1170, 0, 472,
	473, 465, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 1951, 485, 486, 487, 1952, 488,
	489, 490, 0, 491, 0, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 1965, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 1171, 524,
	525, 526, 527, 0, 528, 0, 529, 530, 536, 537,
	531, 532, 538, 539, 540, 541, 542, 0, 544, 545,
	543, 546, 547, 548, 0, 549, 550, 533, 534, 551,
	552, 1172, 553, 554, 555, 556, 557, 558, 1963, 0,
	559, 0, 560, 561, 562, 564, 535, 565, 570, 571,
	1979, 566, 567, 568, 569, 0, 573, 574, 0, 575,
	576, 0, 572, 563, 0, 577, 578, 579, 580, 581,
	582, 583, 354, 584, 0, 585, 1971, 1972, 1973, 1974,
	0, 594, 0, 586, 587, 588, 0, 589, 0, 0,
	590, 591, 592, 593, 0, 595, 596, 0, 0, 597,
	598, 599, 601, 602, 600, 603, 0, 604, 0, 0,
	605, 606, 607, 0, 1955, 1978, 0, 609, 608, 610,
	787, 0, 0, 0, 0, 0, 611, 612, 0, 613,
	614, 615, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 616, 0, 0, 0, 0, 280, 281,
	1945, 282, 283, 284, 285, 286, 287, 617, 618, 0,
	288, 619, 289, 620, 0, 621, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 622, 623, 624, 0,
	297, 298, 625, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 794, 328, 0,
	329, 626, 627, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	628, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 629, 630, 360, 0, 267, 0, 0, 0, 0,
	0, 361, 362, 363, 631, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 632, 633, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	634, 0, 635, 379, 0, 380, 381, 382, 383, 384,
	636, 637, 638, 461, 0, 385, 386, 0, 387, 388,
	389, 390, 0, 0, 0, 268, 391, 392, 393, 395,
	0, 0, 394, 639, 640, 0, 641, 0, 396, 397,
	0, 642, 0, 398, 399, 400, 0, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 643, 0, 412, 413, 0, 0, 414,
	0, 0, 0, 415, 416, 419, 0, 0, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 0, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	0, 448, 0, 269, 0, 458, 459, 0, 644, 460,
	645, 462, 463, 0, 0, 464, 0, 0, 0, 466,
	467, 468, 0, 0, 469, 470, 646, 0, 471, 0,
	647, 472, 473, 465, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 648, 485, 486, 487,
	649, 488, 489, 490, 650, 491, 651, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	652, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	0, 524, 525, 526, 527, 653, 528, 0, 529, 530,
	536, 537, 531, 532, 538, 539, 540, 541, 542, 0,
	544, 545, 543, 546, 547, 548, 0, 549, 550, 533,
	534, 551, 552, 0, 553, 554, 555, 556, 557, 558,
	654, 0, 559, 0, 560, 561, 562, 564, 535, 565,
	570, 571, 655, 566, 567, 568, 569, 656, 573, 574,
	0, 575, 576, 0, 572, 563, 792, 577, 578, 579,
	580, 581, 793, 583, 354, 584, 0, 585, 657, 658,
	659, 660, 0, 594, 0, 586, 587, 588, 661, 589,
	662, 0, 590, 591, 592, 593, 0, 595, 596, 0,
	0, 597, 598, 599, 601, 602, 600, 603, 0, 604,
	0, 0, 605, 606, 607, 663, 664, 665, 0, 609,
	608, 610, 666, 787, 0, 0, 0, 0, 611, 612,
	667, 613, 614, 615, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 797, 0, 0, 0, 0, 616, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	617, 618, 0, 288, 619, 289, 620, 0, 621, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 622,
	623, 624, 0, 297, 298, 625, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	794, 328, 0, 329, 626, 627, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 628, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 629, 630, 360, 0, 267, 0,
	0, 0, 0, 0, 361, 362, 363, 631, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	632, 633, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 634, 0, 635, 379, 0, 380, 381,
	382, 383, 384, 636, 637, 638, 461, 0, 385, 386,
	0, 387, 388, 389, 390, 0, 0, 0, 268, 391,
	392, 393, 395, 0, 0, 394, 639, 640, 0, 641,
	0, 396, 397, 0, 642, 0, 398, 399, 400, 0,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 643, 0, 412, 413,
	0, 0, 414, 0, 0, 0, 415, 416, 419, 0,
	0, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	0, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 0, 448, 0, 269, 0, 458, 459,
	0, 644, 460, 645, 462, 463, 0, 0, 464, 0,
	0, 0, 466, 467, 468, 0, 0, 469, 470, 646,
	0, 471, 0, 647, 472, 473, 465, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 648,
	485, 486, 487, 649, 488, 489, 490, 650, 491, 651,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 652, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 0, 2279, 525, 526, 527, 653, 528,
	0, 529, 530, 536, 537, 531, 532, 2280, 539, 540,
	541, 542, 0, 544, 545, 543, 546, 547, 548, 0,
	549, 550, 533, 534, 551, 552, 0, 553, 554, 555,
	556, 557, 558, 654, 0, 559, 0, 560, 561, 562,
	564, 535, 565, 570, 571, 655, 566, 567, 568, 569,
	656, 573, 574, 0, 575, 576, 0, 572, 563, 792,
	577, 578, 579, 580, 581, 793, 583, 354, 584, 0,
	585, 657, 658, 659, 660, 0, 594, 0, 586, 587,
	588, 661, 589, 662, 0, 590, 591, 2281, 593, 0,
	595, 596, 0, 0, 597, 598, 599, 601, 602, 600,
	603, 0, 604, 0, 0, 605, 606, 607, 663, 664,
	665, 0, 609, 608, 610, 666, 0, 2028, 0, 1295,
	1995, 611, 612, 667, 613, 614, 615, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 797, 278, 279, 0, 0, 0,
	0, 0, 616, 0, 0, 0, 0, 280, 281, 1156,
	282, 283, 284, 285, 286, 287, 617, 618, 0, 288,
	619, 289, 620, 0, 621, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 622, 623, 624, 0, 297,
	298, 625, 0, 1300, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1157, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 1992, 324, 325, 326, 327, 328, 0, 329,
	626, 627, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 628,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	629, 630, 360, 0, 267, 0, 0, 0, 0, 0,
	361, 362, 363, 631, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1158, 367, 368, 632, 633, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 634,
	0, 635, 379, 0, 380, 381, 382, 383, 384, 636,
	637, 638, 461, 1160, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 0, 391, 392, 393, 395, 0,
	1159, 394, 639, 640, 0, 641, 0, 396, 397, 1161,
	642, 1162, 398, 399, 400, 1163, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 643, 1164, 412, 413, 1165, 0, 414, 0,
	0, 0, 415, 416, 419, 0, 0, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 1166, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 1167,
	448, 0, 0, 1168, 458, 459, 0, 644, 460, 645,
	462, 463, 0, 0, 464, 0, 0, 0, 466, 467,
	468, 0, 0, 469, 470, 646, 1169, 471, 1170, 647,
	472, 473, 465, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 648, 485, 486, 487, 649,
	488, 489, 490, 650, 491, 651, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 652,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 1171,
	524, 525, 526, 527, 653, 528, 0, 529, 530, 536,
	537, 531, 532, 538, 539, 540, 541, 542, 0, 544,
	545, 543, 546, 547, 548, 1993, 549, 550, 533, 534,
	551, 552, 1172, 553, 554, 555, 556, 557, 558, 654,
	0, 559, 0, 560, 561, 562, 564, 535, 565, 570,
	571, 655, 566, 567, 568, 569, 656, 573, 574, 0,
	575, 576, 0, 572, 563, 0, 577, 578, 579, 580,
	581, 582, 583, 354, 584, 0, 585, 657, 658, 659,
	660, 0, 594, 0, 586, 587, 588, 661, 589, 662,
	0, 590, 591, 592, 593, 0, 595, 596, 0, 0,
	597, 598, 599, 601, 602, 600, 603, 0, 604, 0,
	0, 605, 606, 607, 663, 664, 665, 0, 609, 608,
	610, 666, 1989, 0, 1295, 1995, 0, 611, 612, 667,
	613, 614, 615, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 616, 0, 0,
	0, 0, 280, 281, 1156, 282, 283, 284, 285, 286,
	287, 617, 618, 0, 288, 619, 289, 620, 0, 621,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	622, 623, 624, 0, 297, 298, 625, 0, 1300, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1157, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 1992, 324, 325,
	326, 327, 328, 0, 329, 626, 627, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 628, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 629, 630, 360, 0, 267,
	0, 0, 0, 0, 0, 361, 362, 363, 631, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1158, 367,
	368, 632, 633, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 634, 0, 635, 379, 0, 380,
	381, 382, 383, 384, 636, 637, 638, 461, 1160, 385,
	386, 0, 387, 388, 389, 390, 0, 0, 0, 0,
	391, 392, 393, 395, 0, 1159, 394, 639, 640, 0,
	641, 0, 396, 397, 1161, 642, 1162, 398, 399, 400,
	1163, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 643, 1164, 412,
	413, 1165, 0, 414, 0, 0, 0, 415, 416, 419,
	0, 0, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 1166, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 1167, 448, 0, 0, 1168, 458,
	459, 0, 644, 460, 645, 462, 463, 0, 0, 464,
	0, 0, 0, 466, 467, 468, 0, 0, 469, 470,
	646, 1169, 471, 1170, 647, 472, 473, 465, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	648, 485, 486, 487, 649, 488, 489, 490, 650, 491,
	651, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 652, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 1171, 524, 525, 526, 527, 653,
	528, 0, 529, 530, 536, 537, 531, 532, 538, 539,
	540, 541, 542, 0, 544, 545, 543, 546, 547, 548,
	1993, 549, 550, 533, 534, 551, 552, 1172, 553, 554,
	555, 556, 557, 558, 654, 0, 559, 0, 560, 561,
	562, 564, 535, 565, 570, 571, 655, 566, 567, 568,
	569, 656, 573, 574, 0, 575, 576, 0, 572, 563,
	0, 577, 578, 579, 580, 581, 582, 583, 354, 584,
	0, 585, 657, 658, 659, 660, 0, 594, 0, 586,
	587, 588, 661, 589, 662, 0, 590, 591, 592, 593,
	0, 595, 596, 0, 0, 597, 598, 599, 601, 602,
	600, 603, 0, 604, 0, 0, 605, 606, 607, 663,
	664, 665, 787, 609, 608, 610, 666, 0, 0, 0,
	0, 0, 611, 612, 667, 613, 614, 615, 0, 270,
	272, 271, 273, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 616, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 617,
	618, 0, 288, 619, 289, 620, 0, 621, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 622, 623,
	624, 0, 297, 298, 625, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 794,
	328, 0, 329, 626, 627, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 628, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 629, 630, 360, 0, 267, 0, 0,
	0, 0, 0, 361, 362, 363, 631, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 632,
	633, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 634, 0, 635, 379, 0, 380, 381, 382,
	383, 384, 636, 637, 638, 461, 0, 385, 386, 0,
	387, 388, 389, 390, 0, 0, 0, 268, 391, 392,
	393, 395, 0, 0, 394, 639, 640, 0, 641, 0,
	396, 397, 0, 642, 0, 398, 399, 400, 0, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 643, 0, 412, 413, 0,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 0,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 0, 448, 0, 269, 0, 458, 459, 0,
	644, 460, 645, 462, 463, 0, 0, 464, 0, 0,
	0, 466, 467, 468, 0, 0, 469, 470, 646, 0,
	471, 0, 647, 472, 473, 465, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 648, 485,
	486, 487, 649, 488, 489, 490, 650, 491, 651, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 652, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 0, 524, 525, 526, 527, 653, 528, 0,
	529, 530, 536, 537, 531, 532, 1984, 539, 540, 541,
	542, 0, 1985, 545, 543, 546, 547, 548, 0, 549,
	550, 533, 534, 551, 552, 0, 553, 554, 555, 556,
	557, 558, 654, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 655, 566, 567, 568, 569, 656,
	573, 574, 0, 575, 576, 0, 572, 563, 792, 577,
	578, 579, 580, 581, 793, 583, 354, 584, 0, 585,
	657, 658, 659, 660, 0, 594, 0, 586, 587, 588,
	661, 589, 662, 0, 590, 591, 1983, 593, 0, 595,
	596, 0, 0, 597, 598, 599, 601, 602, 600, 603,
	0, 604, 0, 0, 605, 606, 607, 663, 664, 665,
	0, 609, 608, 610, 666, 787, 0, 0, 0, 0,
	611, 612, 667, 613, 614, 615, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 797, 0, 0, 0, 0, 616, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 617, 618, 0, 288, 619, 289, 620, 0,
	621, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 622, 623, 624, 0, 297, 298, 625, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 794, 328, 0, 329, 626, 627, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 628, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 629, 630, 360, 0,
	267, 0, 0, 0, 0, 0, 361, 362, 363, 631,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 632, 633, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 634, 0, 635, 379, 0,
	380, 381, 382, 383, 384, 636, 637, 638, 461, 0,
	385, 386, 0, 387, 388, 389, 390, 0, 0, 0,
	268, 391, 392, 393, 395, 0, 0, 394, 639, 640,
	0, 641, 0, 396, 397, 0, 642, 0, 398, 399,
	400, 0, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 643, 0,
	412, 413, 0, 0, 414, 0, 0, 0, 415, 416,
	419, 0, 0, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 0, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 0, 448, 0, 269, 0,
	458, 459, 0, 644, 460, 645, 462, 463, 0, 0,
	464, 0, 0, 0, 466, 467, 468, 0, 0, 469,
	470, 646, 0, 471, 0, 647, 472, 473, 465, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 648, 485, 486, 487, 649, 488, 489, 490, 650,
	491, 651, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 652, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 0, 524, 525, 526, 527,
	653, 528, 0, 529, 530, 536, 537, 531, 532, 1936,
	539, 540, 541, 542, 0, 1937, 545, 543, 546, 547,
	548, 0, 549, 550, 533, 534, 551, 552, 0, 553,
	554, 555, 556, 557, 558, 654, 0, 559, 0, 560,
	561, 562, 564, 535, 565, 570, 571, 655, 566, 567,
	568, 569, 656, 573, 574, 0, 575, 576, 0, 572,
	563, 792, 577, 578, 579, 580, 581, 793, 583, 354,
	584, 0, 585, 657, 658, 659, 660, 0, 594, 0,
	586, 587, 588, 661, 589, 662, 0, 590, 591, 1935,
	593, 0, 595, 596, 0, 0, 597, 598, 599, 601,
	602, 600, 603, 0, 604, 0, 0, 605, 606, 607,
	663, 664, 665, 0, 609, 608, 610, 666, 1295, 1995,
	0, 0, 0, 611, 612, 667, 613, 614, 615, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 797, 0, 0, 0,
	0, 616, 0, 0, 0, 0, 280, 281, 1156, 282,
	283, 284, 285, 286, 287, 617, 618, 0, 288, 619,
	289, 620, 0, 621, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 622, 623, 624, 0, 297, 298,
	625, 0, 1300, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1157, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 1992, 324, 325, 326, 327, 328, 0, 329, 626,
	627, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 628, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 629,
	630, 360, 0, 267, 0, 0, 0, 0, 0, 361,
	362, 363, 631, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1158, 367, 368, 632, 633, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 634, 0,
	635, 379, 0, 380, 381, 382, 383, 384, 636, 637,
	638, 461, 1160, 385, 386, 0, 387, 388, 389, 390,
	0, 0, 0, 0, 391, 392, 393, 395, 0, 1159,
	394, 639, 640, 0, 641, 0, 396, 397, 1161, 642,
	1162, 398, 399, 400, 1163, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 643, 1164, 412, 413, 1165, 0, 414, 0, 0,
	0, 415, 416, 419, 0, 0, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 1166, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 1167, 448,
	0, 0, 1168, 458, 459, 0, 644, 460, 645, 462,
	463, 0, 0, 464, 0, 0, 0, 466, 467, 468,
	0, 0, 469, 470, 646, 1169, 471, 1170, 647, 472,
	473, 465, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 648, 485, 486, 487, 649, 488,
	489, 490, 650, 491, 651, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 652, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 1171, 524,
	525, 526, 527, 653, 528, 0, 529, 530, 536, 537,
	531, 532, 538, 539, 540, 541, 542, 0, 544, 545,
	543, 546, 547, 548, 1993, 549, 550, 533, 534, 551,
	552, 1172, 553, 554, 555, 556, 557, 558, 654, 0,
	559, 0, 560, 561, 562, 564, 535, 565, 570, 571,
	655, 566, 567, 568, 569, 656, 573, 574, 0, 575,
	576, 0, 572, 563, 0, 577, 578, 579, 580, 581,
	582, 583, 354, 584, 0, 585, 657, 658, 659, 660,
	0, 594, 0, 586, 587, 588, 661, 589, 662, 0,
	590, 591, 592, 593, 0, 595, 596, 0, 0, 597,
	598, 599, 601, 602, 600, 603, 0, 604, 0, 0,
	605, 606, 607, 663, 664, 665, 0, 609, 608, 610,
	666, 0, 0, 0, 0, 0, 611, 612, 667, 613,
	614, 615, 1295, 1294, 0, 0, 0, 0, 1292, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 616, 0, 0, 0, 0,
	280, 281, 1156, 282, 283, 284, 285, 286, 287, 617,
	618, 0, 288, 619, 289, 620, 0, 621, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 622, 623,
	624, 0, 297, 298, 625, 0, 1300, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1157, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 626, 627, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 628, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 629, 630, 360, 0, 267, 0, 0,
	0, 0, 0, 361, 362, 363, 631, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1158, 367, 368, 632,
	633, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 634, 0, 635, 379, 0, 380, 381, 382,
	383, 384, 636, 637, 638, 461, 1160, 385, 386, 0,
	387, 388, 389, 390, 0, 0, 0, 0, 391, 392,
	393, 395, 0, 1159, 394, 639, 640, 0, 641, 0,
	396, 397, 1161, 642, 1162, 398, 399, 400, 1163, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 643, 1164, 412, 413, 1165,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 1166,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 1167, 448, 0, 0, 1168, 458, 459, 3769,
	644, 460, 645, 462, 463, 0, 0, 464, 0, 0,
	0, 466, 467, 468, 0, 0, 469, 470, 646, 1169,
	471, 1170, 647, 472, 473, 465, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 648, 485,
	486, 487, 649, 488, 489, 490, 650, 491, 651, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 652, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 1171, 524, 525, 526, 527, 653, 528, 0,
	529, 530, 536, 537, 531, 532, 538, 539, 540, 541,
	542, 0, 544, 545, 543, 546, 547, 548, 0, 549,
	550, 533, 534, 551, 552, 1172, 553, 554, 555, 556,
	557, 558, 654, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 655, 566, 567, 568, 569, 656,
	573, 574, 0, 575, 576, 0, 572, 563, 0, 577,
	578, 579, 580, 581, 582, 583, 354, 584, 0, 585,
	657, 658, 659, 660, 0, 594, 0, 586, 587, 588,
	661, 589, 662, 0, 590, 591, 592, 593, 0, 595,
	596, 0, 0, 597, 598, 599, 601, 602, 600, 603,
	0, 604, 0, 0, 605, 606, 607, 663, 664, 665,
	0, 609, 608, 610, 666, 0, 0, 0, 0, 0,
	611, 612, 667, 613, 614, 615, 1295, 1294, 0, 0,
	0, 0, 1292, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 616,
	0, 0, 0, 0, 280, 281, 1156, 282, 283, 284,
	285, 286, 287, 617, 618, 0, 288, 619, 289, 620,
	0, 621, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 622, 623, 624, 0, 297, 298, 625, 0,
	1300, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1157,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 626, 627, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 628, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 629, 630, 360,
	0, 267, 0, 0, 0, 0, 0, 361, 362, 363,
	631, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1158, 367, 368, 632, 633, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 634, 0, 635, 379,
	0, 380, 381, 382, 383, 384, 636, 637, 638, 461,
	1160, 385, 386, 0, 387, 388, 389, 390, 0, 0,
	0, 0, 391, 392, 393, 395, 0, 1159, 394, 639,
	640, 0, 641, 0, 396, 397, 1161, 642, 1162, 398,
	399, 400, 1163, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 643,
	1164, 412, 413, 1165, 0, 414, 0, 0, 0, 415,
	416, 419, 0, 0, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 1166, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 1167, 448, 0, 0,
	1168, 458, 459, 3387, 644, 460, 645, 462, 463, 0,
	0, 464, 0, 0, 0, 466, 467, 468, 0, 0,
	469, 470, 646, 1169, 471, 1170, 647, 472, 473, 465,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 648, 485, 486, 487, 649, 488, 489, 490,
	650, 491, 651, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 652, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 1171, 524, 525, 526,
	527, 653, 528, 0, 529, 530, 536, 537, 531, 532,
	538, 539, 540, 541, 542, 0, 544, 545, 543, 546,
	547, 548, 0, 549, 550, 533, 534, 551, 552, 1172,
	553, 554, 555, 556, 557, 558, 654, 0, 559, 0,
	560, 561, 562, 564, 535, 565, 570, 571, 655, 566,
	567, 568, 569, 656, 573, 574, 0, 575, 576, 0,
	572, 563, 0, 577, 578, 579, 580, 581, 582, 583,
	354, 584, 0, 585, 657, 658, 659, 660, 0, 594,
	0, 586, 587, 588, 661, 589, 662, 0, 590, 591,
	592, 593, 0, 595, 596, 0, 0, 597, 598, 599,
	601, 602, 600, 603, 0, 604, 0, 0, 605, 606,
	607, 663, 664, 665, 264, 609, 608, 610, 666, 0,
	0, 0, 0, 0, 611, 612, 667, 613, 614, 615,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 616, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 617, 618, 0, 288, 619, 289, 620, 0, 621,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	622, 623, 624, 0, 297, 298, 625, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 626, 627, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 628, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 629, 630, 360, 0, 267,
	0, 0, 0, 0, 0, 361, 362, 363, 631, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 632, 633, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 634, 0, 635, 379, 0, 380,
	381, 382, 383, 384, 636, 637, 638, 461, 0, 385,
	386, 0, 387, 388, 389, 390, 0, 0, 0, 268,
	391, 392, 393, 395, 0, 0, 394, 639, 640, 0,
	641, 0, 396, 397, 0, 642, 0, 398, 399, 400,
	0, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 643, 0, 412,
	413, 0, 0, 414, 0, 0, 0, 415, 416, 419,
	0, 0, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 0, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 0, 448, 0, 269, 0, 458,
	459, 0, 644, 460, 645, 462, 463, 0, 0, 464,
	0, 0, 0, 466, 467, 468, 0, 0, 469, 470,
	646, 0, 471, 0, 647, 472, 473, 465, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	648, 485, 486, 487, 649, 488, 489, 490, 650, 491,
	651, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 652, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 0, 524, 525, 526, 527, 653,
	528, 0, 529, 530, 536, 537, 531, 532, 538, 539,
	540, 541, 542, 0, 544, 545, 543, 546, 547, 548,
	0, 549, 550, 533, 534, 551, 552, 0, 553, 554,
	555, 556, 557, 558, 654, 0, 559, 0, 560, 561,
	562, 564, 535, 565, 570, 571, 655, 566, 567, 568,
	569, 656, 573, 574, 0, 575, 576, 0, 572, 563,
	0, 577, 578, 579, 580, 581, 582, 583, 354, 584,
	0, 585, 657, 658, 659, 660, 0, 594, 0, 586,
	587, 588, 661, 589, 662, 0, 590, 591, 592, 593,
	0, 595, 596, 0, 0, 597, 598, 599, 601, 602,
	600, 603, 0, 604, 0, 0, 605, 606, 607, 663,
	664, 665, 0, 609, 608, 610, 666, 0, 0, 0,
	0, 0, 611, 612, 667, 613, 614, 615, 1619, 0,
	1295, 1294, 0, 0, 0, 0, 1292, 0, 0, 0,
	0, 0, 0, 0, 0, 797, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 616, 0, 0, 0, 0, 280, 281,
	1156, 282, 283, 284, 285, 286, 287, 617, 618, 0,
	288, 619, 289, 620, 0, 621, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 622, 623, 624, 0,
	297, 298, 625, 0, 1300, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1157, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 626, 627, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	628, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 629, 630, 360, 0, 267, 0, 0, 0, 0,
	0, 1618, 362, 363, 631, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1158, 367, 368, 632, 633, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	634, 0, 635, 379, 0, 380, 381, 382, 383, 384,
	636, 637, 638, 461, 1160, 385, 386, 0, 387, 388,
	389, 390, 0, 0, 0, 0, 391, 392, 393, 395,
	0, 1159, 394, 639, 640, 0, 641, 0, 396, 397,
	1161, 642, 1162, 398, 399, 400, 1163, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 643, 1164, 412, 413, 1165, 0, 414,
	0, 0, 0, 415, 416, 419, 0, 0, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 1166, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	1167, 448, 0, 0, 1168, 458, 459, 0, 644, 460,
	645, 462, 463, 0, 0, 464, 0, 0, 0, 466,
	467, 468, 0, 0, 469, 470, 646, 1169, 471, 1170,
	647, 472, 473, 465, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 648, 485, 486, 487,
	649, 488, 489, 490, 650, 491, 651, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 1617, 502,
	652, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	1171, 524, 525, 526, 527, 653, 528, 0, 529, 530,
	536, 537, 531, 532, 538, 1616, 540, 541, 542, 0,
	544, 545, 543, 546, 547, 548, 0, 549, 550, 533,
	534, 551, 552, 1172, 553, 554, 555, 556, 557, 558,
	654, 0, 559, 0, 560, 561, 562, 564, 535, 565,
	570, 571, 655, 566, 567, 568, 569, 656, 573, 574,
	0, 575, 576, 0, 572, 563, 0, 577, 578, 579,
	580, 581, 582, 583, 354, 584, 0, 585, 657, 658,
	659, 660, 0, 594, 0, 586, 587, 588, 661, 589,
	662, 0, 590, 591, 592, 593, 0, 595, 596, 0,
	0, 597, 598, 599, 601, 602, 600, 603, 0, 604,
	0, 0, 605, 606, 607, 663, 664, 665, 0, 609,
	608, 610, 666, 0, 0, 0, 0, 0, 611, 612,
	667, 613, 614, 615, 1537, 0, 1295, 1294, 0, 0,
	0, 0, 1292, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 616,
	0, 0, 0, 0, 280, 281, 1156, 282, 283, 284,
	285, 286, 287, 617, 618, 0, 288, 619, 289, 620,
	0, 621, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 622, 623, 624, 0, 297, 298, 625, 0,
	1300, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1157,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 626, 627, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 628, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 629, 630, 360,
	0, 267, 0, 0, 0, 0, 0, 361, 362, 363,
	631, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1158, 367, 368, 632, 633, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 634, 0, 635, 379,
	0, 380, 381, 382, 383, 384, 1536, 637, 638, 461,
	1160, 385, 386, 0, 387, 388, 389, 390, 0, 0,
	0, 0, 391, 392, 393, 395, 0, 1159, 394, 639,
	640, 0, 641, 0, 396, 397, 1161, 642, 1162, 398,
	399, 400, 1163, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 643,
	1164, 412, 413, 1165, 0, 414, 0, 0, 0, 415,
	416, 419, 0, 0, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 1166, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 1167, 448, 0, 0,
	1168, 458, 459, 0, 644, 460, 645, 462, 463, 0,
	0, 464, 0, 0, 0, 466, 467, 468, 0, 0,
	469, 470, 646, 1169, 471, 1170, 647, 472, 473, 465,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 648, 485, 486, 487, 649, 488, 489, 490,
	650, 491, 651, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 652, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 1171, 524, 525, 526,
	527, 653, 528, 0, 529, 530, 536, 537, 531, 532,
	538, 539, 540, 541, 542, 0, 544, 545, 543, 546,
	547, 548, 0, 549, 550, 533, 534, 551, 552, 1172,
	553, 554, 555, 556, 557, 558, 654, 0, 559, 0,
	560, 561, 562, 564, 535, 565, 570, 571, 655, 566,
	567, 568, 569, 656, 573, 574, 0, 575, 576, 0,
	572, 563, 0, 577, 578, 579, 580, 581, 582, 583,
	354, 584, 0, 585, 657, 658, 659, 660, 0, 594,
	0, 586, 587, 588, 661, 589, 662, 0, 590, 591,
	592, 593, 0, 595, 596, 0, 0, 597, 598, 599,
	601, 602, 600, 603, 0, 604, 0, 0, 605, 606,
	607, 663, 664, 665, 0, 609, 608, 610, 666, 0,
	0, 0, 0, 0, 611, 612, 667, 613, 614, 615,
	1497, 0, 1295, 1294, 0, 0, 0, 0, 1292, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 616, 0, 0, 0, 0,
	280, 281, 1156, 282, 283, 284, 285, 286, 287, 617,
	618, 0, 288, 619, 289, 620, 0, 621, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 622, 623,
	624, 0, 297, 298, 625, 0, 1300, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1157, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 626, 627, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 628, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 629, 630, 360, 0, 267, 0, 0,
	0, 0, 0, 361, 362, 363, 631, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1158, 367, 368, 632,
	633, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 634, 0, 635, 379, 0, 380, 381, 382,
	383, 384, 636, 637, 638, 461, 1160, 385, 386, 0,
	387, 388, 389, 390, 0, 0, 0, 0, 391, 392,
	393, 395, 0, 1159, 394, 639, 640, 0, 641, 0,
	396, 397, 1161, 642, 1162, 398, 399, 400, 1163, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 643, 1164, 412, 413, 1165,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 1166,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 1167, 448, 0, 0, 1168, 458, 459, 0,
	644, 460, 645, 462, 463, 0, 0, 464, 0, 0,
	0, 466, 467, 468, 0, 0, 469, 470, 646, 1169,
	471, 1170, 647, 472, 473, 465, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 648, 485,
	486, 487, 649, 488, 489, 490, 650, 491, 651, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 652, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 1171, 524, 525, 526, 527, 653, 528, 0,
	529, 530, 536, 537, 531, 532, 538, 539, 540, 541,
	542, 0, 544, 545, 543, 546, 547, 548, 0, 549,
	550, 533, 534, 551, 552, 1172, 553, 554, 555, 556,
	557, 558, 654, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 655, 566, 567, 568, 569, 656,
	573, 574, 0, 575, 576, 0, 572, 563, 0, 577,
	578, 579, 580, 581, 582, 583, 354, 584, 0, 585,
	657, 658, 659, 660, 0, 594, 0, 586, 587, 588,
	661, 589, 662, 0, 590, 591, 592, 593, 0, 595,
	596, 0, 0, 597, 598, 599, 601, 602, 600, 603,
	0, 604, 0, 0, 605, 606, 607, 663, 664, 665,
	0, 609, 608, 610, 666, 0, 0, 0, 0, 0,
	611, 612, 667, 613, 614, 615, 1465, 0, 1295, 1294,
	0, 0, 0, 0, 1292, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 616, 0, 0, 0, 0, 280, 281, 1156, 282,
	283, 284, 285, 286, 287, 617, 618, 0, 288, 619,
	289, 620, 0, 621, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 622, 623, 624, 0, 297, 298,
	625, 0, 1300, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1157, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 626,
	627, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 628, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 629,
	630, 360, 0, 267, 0, 0, 0, 0, 0, 361,
	362, 363, 631, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1158, 367, 368, 632, 633, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 634, 0,
	635, 379, 0, 380, 381, 382, 383, 384, 1464, 637,
	638, 461, 1160, 385, 386, 0, 387, 388, 389, 390,
	0, 0, 0, 0, 391, 392, 393, 395, 0, 1159,
	394, 639, 640, 0, 641, 0, 396, 397, 1161, 642,
	1162, 398, 399, 400, 1163, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 643, 1164, 412, 413, 1165, 0, 414, 0, 0,
	0, 415, 416, 419, 0, 0, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 1166, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 1167, 448,
	0, 0, 1168, 458, 459, 0, 644, 460, 645, 462,
	463, 0, 0, 464, 0, 0, 0, 466, 467, 468,
	0, 0, 469, 470, 646, 1169, 471, 1170, 647, 472,
	473, 465, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 648, 485, 486, 487, 649, 488,
	489, 490, 650, 491, 651, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 652, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 1171, 524,
	525, 526, 527, 653, 528, 0, 529, 530, 536, 537,
	531, 532, 538, 539, 540, 541, 542, 0, 544, 545,
	543, 546, 547, 548, 0, 549, 550, 533, 534, 551,
	552, 1172, 553, 554, 555, 556, 557, 558, 654, 0,
	559, 0, 560, 561, 562, 564, 535, 565, 570, 571,
	655, 566, 567, 568, 569, 656, 573, 574, 0, 575,
	576, 0, 572, 563, 0, 577, 578, 579, 580, 581,
	582, 583, 354, 584, 0, 585, 657, 658, 659, 660,
	0, 594, 0, 586, 587, 588, 661, 589, 662, 0,
	590, 591, 592, 593, 0, 595, 596, 0, 0, 597,
	598, 599, 601, 602, 600, 603, 0, 604, 0, 0,
	605, 606, 607, 663, 664, 665, 0, 609, 608, 610,
	666, 0, 0, 0, 0, 0, 611, 612, 667, 613,
	614, 615, 1289, 0, 1295, 1294, 0, 0, 0, 0,
	1292, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 616, 0, 0,
	0, 0, 280, 281, 1156, 282, 283, 284, 285, 286,
	287, 617, 618, 0, 288, 619, 289, 620, 0, 621,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	622, 623, 624, 0, 297, 298, 625, 0, 1300, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1157, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 626, 627, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 628, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 629, 630, 360, 0, 267,
	0, 0, 0, 0, 0, 361, 362, 363, 631, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1158, 367,
	368, 632, 633, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 634, 0, 635, 379, 0, 380,
	381, 382, 383, 384, 1288, 637, 638, 461, 1160, 385,
	386, 0, 387, 388, 389, 390, 0, 0, 0, 0,
	391, 392, 393, 395, 0, 1159, 394, 639, 640, 0,
	641, 0, 396, 397, 1161, 642, 1162, 398, 399, 400,
	1163, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 643, 1164, 412,
	413, 1165, 0, 414, 0, 0, 0, 415, 416, 419,
	0, 0, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 1166, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 1167, 448, 0, 0, 1168, 458,
	459, 0, 644, 460, 645, 462, 463, 0, 0, 464,
	0, 0, 0, 466, 467, 468, 0, 0, 469, 470,
	646, 1169, 471, 1170, 647, 472, 473, 465, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	648, 485, 486, 487, 649, 488, 489, 490, 650, 491,
	651, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 652, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 1171, 524, 525, 526, 527, 653,
	528, 0, 529, 530, 536, 537, 531, 532, 538, 539,
	540, 541, 542, 0, 544, 545, 543, 546, 547, 548,
	0, 549, 550, 533, 534, 551, 552, 1172, 553, 554,
	555, 556, 557, 558, 654, 0, 559, 0, 560, 561,
	562, 564, 535, 565, 570, 571, 655, 566, 567, 568,
	569, 656, 573, 574, 0, 575, 576, 0, 572, 563,
	0, 577, 578, 579, 580, 581, 582, 583, 354, 584,
	0, 585, 657, 658, 659, 660, 0, 594, 0, 586,
	587, 588, 661, 589, 662, 0, 590, 591, 592, 593,
	0, 595, 596, 0, 0, 597, 598, 599, 601, 602,
	600, 603, 0, 604, 0, 0, 605, 606, 607, 663,
	664, 665, 0, 609, 608, 610, 666, 0, 0, 0,
	0, 0, 611, 612, 667, 613, 614, 615, 1295, 1294,
	0, 0, 0, 0, 1292, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 616, 0, 0, 0, 0, 280, 281, 1156, 282,
	283, 284, 285, 286, 287, 617, 618, 0, 288, 619,
	289, 620, 0, 621, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 622, 623, 624, 0, 297, 298,
	625, 0, 1300, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1157, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 626,
	627, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 628, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 629,
	630, 360, 0, 267, 0, 0, 0, 0, 0, 361,
	362, 363, 631, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1158, 367, 368, 632, 633, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 634, 0,
	635, 379, 0, 380, 381, 382, 383, 384, 636, 637,
	638, 461, 1160, 385, 386, 0, 387, 388, 389, 390,
	0, 0, 0, 0, 391, 392, 393, 395, 0, 1159,
	394, 639, 640, 0, 641, 0, 396, 397, 1161, 642,
	1162, 398, 399, 400, 1163, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 643, 1164, 412, 413, 1165, 0, 414, 0, 0,
	0, 415, 416, 419, 0, 0, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 1166, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 1167, 448,
	0, 0, 1168, 458, 459, 0, 644, 460, 645, 462,
	463, 0, 0, 464, 0, 0, 0, 466, 467, 468,
	0, 0, 469, 470, 646, 1169, 471, 1170, 647, 472,
	473, 465, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 648, 485, 486, 487, 649, 488,
	489, 490, 650, 491, 651, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 652, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 1171, 524,
	525, 526, 527, 653, 528, 0, 529, 530, 536, 537,
	531, 532, 538, 539, 540, 541, 542, 0, 544, 545,
	543, 546, 547, 548, 0, 549, 550, 533, 534, 551,
	552, 1172, 553, 554, 555, 556, 557, 558, 654, 0,
	559, 0, 560, 561, 562, 564, 535, 565, 570, 571,
	655, 566, 567, 568, 569, 656, 573, 574, 0, 575,
	576, 0, 572, 563, 0, 577, 578, 579, 580, 581,
	582, 583, 354, 584, 0, 585, 657, 658, 659, 660,
	0, 594, 0, 586, 587, 588, 661, 589, 662, 0,
	590, 591, 592, 593, 0, 595, 596, 0, 0, 597,
	598, 599, 601, 602, 600, 603, 0, 604, 0, 0,
	605, 606, 607, 663, 664, 665, 0, 609, 608, 610,
	666, 1295, 1995, 0, 0, 0, 611, 612, 667, 613,
	614, 615, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 616, 0, 0, 0, 0, 280,
	281, 1156, 282, 283, 284, 285, 286, 287, 617, 618,
	0, 288, 619, 289, 620, 0, 621, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 622, 623, 624,
	0, 297, 298, 625, 0, 1300, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1157, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 626, 627, 2035, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 628, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 629, 630, 360, 0, 267, 0, 0, 0,
	0, 0, 361, 362, 363, 631, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1158, 367, 368, 632, 633,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 634, 0, 635, 379, 0, 380, 381, 382, 383,
	384, 636, 637, 638, 461, 1160, 385, 386, 0, 387,
	388, 389, 390, 0, 0, 0, 0, 391, 392, 393,
	395, 0, 1159, 394, 639, 640, 0, 641, 0, 396,
	397, 1161, 642, 1162, 398, 399, 400, 1163, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 643, 1164, 412, 413, 1165, 0,
	414, 0, 0, 0, 415, 416, 419, 0, 0, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 1166, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 1167, 448, 0, 0, 1168, 458, 459, 0, 644,
	460, 645, 462, 463, 0, 0, 464, 0, 0, 0,
	466, 467, 468, 0, 0, 469, 470, 646, 1169, 471,
	1170, 647, 472, 473, 465, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 648, 485, 486,
	487, 649, 488, 489, 490, 650, 491, 651, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 652, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 1171, 524, 525, 526, 527, 653, 528, 0, 529,
	530, 536, 537, 531, 532, 538, 539, 540, 541, 542,
	0, 544, 545, 543, 546, 547, 548, 0, 549, 550,
	533, 534, 551, 552, 1172, 553, 554, 555, 556, 557,
	558, 654, 0, 559, 0, 560, 561, 562, 564, 535,
	565, 570, 571, 655, 566, 567, 568, 569, 656, 573,
	574, 0, 575, 576, 0, 572, 563, 0, 577, 578,
	579, 580, 581, 582, 583, 354, 584, 0, 585, 657,
	658, 659, 660, 0, 594, 0, 586, 587, 588, 661,
	589, 662, 0, 590, 591, 592, 593, 0, 595, 596,
	0, 0, 597, 598, 599, 601, 602, 600, 603, 0,
	604, 0, 0, 605, 606, 607, 663, 664, 665, 0,
	609, 608, 610, 666, 1295, 1294, 0, 0, 0, 611,
	612, 667, 613, 614, 615, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 616, 0, 0,
	0, 0, 280, 281, 1156, 282, 283, 284, 285, 286,
	287, 617, 618, 0, 288, 619, 289, 620, 0, 621,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	622, 623, 624, 0, 297, 298, 625, 0, 1300, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1157, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 626, 627, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 628, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 629, 630, 360, 0, 267,
	0, 0, 0, 0, 0, 361, 362, 363, 631, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1158, 367,
	368, 632, 633, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 634, 0, 635, 379, 0, 380,
	381, 382, 383, 384, 636, 637, 638, 461, 1160, 385,
	386, 0, 387, 388, 389, 390, 0, 0, 0, 0,
	391, 392, 393, 395, 0, 1159, 394, 639, 640, 0,
	641, 0, 396, 397, 1161, 642, 1162, 398, 399, 400,
	1163, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 643, 1164, 412,
	413, 1165, 0, 414, 0, 0, 0, 415, 416, 419,
	0, 0, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 1166, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 1167, 448, 0, 0, 1168, 458,
	459, 0, 644, 460, 645, 462, 463, 0, 0, 464,
	0, 0, 0, 466, 467, 468, 0, 0, 469, 470,
	646, 1169, 471, 1170, 647, 472, 473, 465, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	648, 485, 486, 487, 649, 488, 489, 490, 650, 491,
	651, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 652, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 1171, 524, 525, 526, 527, 653,
	528, 0, 529, 530, 536, 537, 531, 532, 538, 539,
	540, 541, 542, 0, 544, 545, 543, 546, 547, 548,
	0, 549, 550, 533, 534, 551, 552, 1172, 553, 554,
	555, 556, 557, 558, 654, 0, 559, 0, 560, 561,
	562, 564, 535, 565, 570, 571, 655, 566, 567, 568,
	569, 656, 573, 574, 0, 575, 576, 0, 572, 563,
	0, 577, 578, 579, 580, 581, 582, 583, 354, 584,
	0, 585, 657, 658, 659, 660, 0, 594, 0, 586,
	587, 588, 661, 589, 662, 0, 590, 591, 592, 593,
	0, 595, 596, 0, 0, 597, 598, 599, 601, 602,
	600, 603, 0, 604, 0, 0, 605, 606, 607, 663,
	664, 665, 1295, 609, 608, 610, 666, 0, 0, 0,
	0, 0, 611, 612, 667, 613, 614, 615, 0, 270,
	272, 271, 273, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 616, 0, 0, 0, 0,
	280, 281, 1156, 282, 283, 284, 285, 286, 287, 617,
	618, 0, 288, 619, 289, 620, 0, 621, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 622, 623,
	624, 0, 297, 298, 625, 0, 1300, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1157, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 626, 627, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 628, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 629, 630, 360, 0, 267, 0, 0,
	0, 0, 0, 361, 362, 363, 631, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1158, 367, 368, 632,
	633, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 634, 0, 635, 379, 0, 380, 381, 382,
	383, 384, 636, 637, 638, 461, 1160, 385, 386, 0,
	387, 388, 389, 390, 0, 0, 0, 0, 391, 392,
	393, 395, 0, 1159, 394, 639, 640, 0, 641, 0,
	396, 397, 1161, 642, 1162, 398, 399, 400, 1163, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 643, 1164, 412, 413, 1165,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 1166,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 1167, 448, 0, 0, 1168, 458, 459, 0,
	644, 460, 645, 462, 463, 0, 0, 464, 0, 0,
	0, 466, 467, 468, 0, 0, 469, 470, 646, 1169,
	471, 1170, 647, 472, 473, 465, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 648, 485,
	486, 487, 649, 488, 489, 490, 650, 491, 651, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 652, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 1171, 524, 525, 526, 527, 653, 528, 0,
	529, 530, 536, 537, 531, 532, 538, 539, 540, 541,
	542, 0, 544, 545, 543, 546, 547, 548, 0, 549,
	550, 533, 534, 551, 552, 1172, 553, 554, 555, 556,
	557, 558, 654, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 655, 566, 567, 568, 569, 656,
	573, 574, 0, 575, 576, 0, 572, 563, 0, 577,
	578, 579, 580, 581, 582, 583, 354, 584, 0, 585,
	657, 658, 659, 660, 0, 594, 0, 586, 587, 588,
	661, 589, 662, 0, 590, 591, 592, 593, 0, 595,
	596, 0, 0, 597, 598, 599, 601, 602, 600, 603,
	0, 604, 0, 0, 605, 606, 607, 663, 664, 665,
	264, 609, 608, 610, 666, 0, 0, 0, 0, 0,
	611, 612, 667, 613, 614, 615, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 616, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 617, 618, 0,
	288, 619, 289, 620, 0, 621, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 622, 623, 624, 2745,
	297, 298, 625, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	2742, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 626, 627, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 2749, 348,
	628, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 629, 630, 360, 0, 2948, 0, 0, 0, 0,
	0, 361, 362, 363, 631, 0, 0, 0, 364, 0,
	365, 366, 2748, 0, 0, 367, 368, 632, 633, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	634, 0, 635, 379, 0, 380, 381, 382, 383, 384,
	636, 637, 638, 461, 0, 385, 386, 0, 387, 388,
	389, 390, 0, 0, 0, 2945, 391, 392, 393, 395,
	0, 0, 394, 639, 640, 0, 641, 0, 396, 2947,
	0, 642, 0, 398, 399, 400, 0, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 643, 0, 412, 413, 2944, 0, 414,
	0, 0, 0, 415, 416, 419, 0, 0, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 0, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	0, 448, 0, 0, 0, 458, 459, 0, 644, 460,
	645, 462, 463, 0, 0, 464, 0, 0, 0, 466,
	467, 468, 0, 0, 469, 470, 646, 0, 471, 0,
	647, 472, 473, 465, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 648, 485, 486, 487,
	649, 488, 489, 490, 650, 491, 651, 492, 493, 2747,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	652, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	0, 524, 525, 526, 527, 653, 528, 0, 529, 530,
	536, 537, 531, 532, 538, 539, 540, 541, 542, 0,
	544, 545, 543, 546, 547, 548, 0, 549, 550, 533,
	534, 551, 552, 0, 553, 554, 555, 556, 557, 558,
	654, 0, 559, 0, 560, 561, 562, 564, 535, 565,
	570, 571, 655, 566, 567, 568, 569, 656, 573, 574,
	0, 575, 576, 0, 572, 563, 0, 577, 578, 579,
	580, 581, 582, 583, 354, 584, 0, 585, 657, 658,
	659, 660, 0, 594, 0, 586, 587, 588, 661, 589,
	662, 0, 590, 591, 592, 593, 0, 595, 596, 0,
	2946, 597, 598, 599, 601, 602, 600, 603, 0, 604,
	0, 0, 605, 606, 607, 663, 664, 665, 264, 609,
	608, 610, 666, 0, 0, 0, 0, 0, 611, 612,
	667, 613, 614, 615, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 616, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 617, 618, 0, 288, 619,
	289, 620, 0, 621, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 622, 623, 624, 2745, 297, 298,
	625, 0, 0, 2739, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 2742, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 626,
	627, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 2749, 348, 628, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 629,
	630, 360, 0, 0, 0, 0, 0, 0, 0, 361,
	362, 363, 631, 0, 0, 0, 364, 0, 365, 366,
	2748, 0, 0, 367, 368, 632, 633, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 634, 0,
	635, 379, 0, 380, 381, 382, 383, 384, 2738, 637,
	638, 461, 0, 385, 386, 0, 387, 388, 389, 390,
	0, 0, 0, 0, 391, 392, 393, 395, 0, 0,
	394, 639, 640, 0, 641, 0, 396, 397, 0, 642,
	0, 398, 399, 400, 0, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 643, 0, 412, 413, 0, 0, 414, 0, 0,
	0, 415, 416, 419, 0, 0, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 0, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 0, 448,
	0, 0, 0, 458, 459, 0, 644, 460, 645, 462,
	463, 0, 0, 464, 0, 0, 0, 466, 467, 468,
	0, 0, 469, 470, 646, 0, 471, 0, 647, 472,
	473, 465, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 648, 485, 486, 487, 649, 488,
	489, 490, 650, 491, 651, 492, 493, 2747, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 652, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 0, 524,
	525, 526, 527, 653, 528, 0, 529, 530, 536, 537,
	531, 532, 538, 539, 540, 541, 542, 0, 544, 545,
	543, 546, 547, 548, 0, 549, 550, 533, 534, 551,
	552, 0, 553, 554, 555, 556, 557, 558, 654, 0,
	559, 0, 560, 561, 562, 564, 535, 565, 570, 571,
	655, 566, 567, 568, 569, 656, 573, 574, 0, 575,
	576, 0, 572, 563, 0, 577, 578, 579, 580, 581,
	582, 583, 354, 584, 0, 585, 657, 658, 659, 660,
	0, 594, 0, 586, 587, 588, 661, 589, 662, 0,
	590, 591, 592, 593, 0, 595, 596, 0, 2746, 597,
	598, 599, 601, 602, 600, 603, 0, 604, 0, 0,
	605, 606, 607, 663, 664, 665, 0, 609, 608, 610,
	666, 1690, 0, 264, 0, 0, 611, 612, 667, 613,
	614, 615, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 1689, 278,
	279, 0, 0, 0, 0, 0, 616, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	617, 618, 0, 288, 619, 289, 620, 0, 621, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 622,
	623, 624, 0, 297, 298, 625, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 626, 627, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 628, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 629, 630, 360, 0, 267, 0,
	0, 0, 0, 0, 361, 362, 363, 631, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	632, 633, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 634, 0, 635, 379, 0, 380, 381,
	382, 383, 384, 636, 637, 638, 461, 0, 385, 386,
	0, 387, 388, 389, 390, 0, 0, 0, 268, 391,
	392, 393, 395, 0, 0, 394, 639, 640, 0, 641,
	0, 396, 397, 0, 642, 0, 398, 399, 400, 0,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 643, 0, 412, 413,
	0, 0, 414, 0, 0, 0, 415, 416, 419, 0,
	0, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	0, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 0, 448, 0, 269, 0, 458, 459,
	0, 644, 460, 645, 462, 463, 0, 0, 464, 0,
	0, 0, 466, 467, 468, 0, 0, 469, 470, 646,
	0, 471, 0, 647, 472, 473, 465, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 648,
	485, 486, 487, 649, 488, 489, 490, 650, 491, 651,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 652, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 0, 524, 525, 526, 527, 653, 528,
	0, 529, 530, 536, 537, 531, 532, 538, 539, 540,
	541, 542, 0, 1693, 545, 543, 546, 547, 548, 0,
	549, 550, 533, 534, 551, 552, 0, 553, 554, 555,
	556, 557, 558, 654, 0, 559, 0, 560, 561, 562,
	564, 535, 565, 570, 571, 655, 566, 567, 568, 569,
	656, 573, 574, 0, 575, 576, 0, 572, 563, 1691,
	577, 578, 579, 580, 581, 582, 583, 354, 584, 0,
	585, 657, 658, 659, 660, 0, 594, 0, 586, 587,
	588, 661, 589, 662, 0, 590, 591, 592, 593, 0,
	595, 596, 0, 0, 597, 598, 599, 601, 602, 600,
	603, 0, 604, 0, 0, 605, 606, 607, 663, 664,
	665, 0, 1692, 608, 610, 666, 1442, 0, 264, 0,
	0, 611, 612, 667, 613, 614, 615, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 616, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 617, 618, 0, 288, 619,
	289, 620, 0, 621, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 622, 623, 624, 0, 297, 298,
	625, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 626,
	627, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 628, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 629,
	630, 360, 0, 267, 0, 0, 0, 0, 0, 361,
	362, 363, 631, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 632, 633, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 634, 0,
	635, 379, 0, 380, 381, 382, 383, 384, 1444, 637,
	638, 461, 0, 385, 386, 0, 387, 388, 389, 390,
	0, 0, 0, 268, 391, 392, 393, 395, 0, 0,
	394, 639, 640, 0, 641, 0, 396, 397, 0, 642,
	0, 398, 399, 400, 0, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 643, 0, 412, 413, 0, 0, 414, 0, 0,
	0, 415, 416, 419, 0, 0, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 0, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 0, 448,
	0, 269, 0, 458, 459, 0, 644, 460, 645, 462,
	463, 0, 0, 464, 0, 0, 1206, 466, 467, 468,
	0, 0, 469, 470, 646, 0, 471, 0, 647, 472,
	473, 465, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 648, 485, 486, 487, 649, 488,
	489, 490, 650, 491, 651, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 652, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 0, 524,
	525, 526, 527, 653, 528, 0, 529, 530, 536, 537,
	531, 532, 538, 539, 540, 541, 542, 0, 544, 545,
	543, 546, 547, 548, 0, 549, 550, 533, 534, 551,
	552, 0, 553, 554, 555, 556, 557, 558, 654, 0,
	559, 0, 560, 561, 562, 564, 535, 565, 570, 571,
	655, 566, 567, 568, 569, 656, 573, 574, 0, 575,
	576, 0, 572, 563, 0, 577, 578, 579, 580, 581,
	582, 583, 354, 584, 0, 585, 657, 658, 659, 660,
	0, 594, 0, 586, 587, 588, 661, 589, 662, 0,
	590, 591, 592, 593, 0, 595, 596, 0, 0, 597,
	598, 599, 601, 602, 600, 603, 0, 604, 0, 0,
	605, 606, 607, 663, 664, 665, 0, 609, 608, 610,
	666, 1439, 0, 264, 0, 0, 611, 612, 667, 613,
	614, 615, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 616, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	617, 618, 0, 288, 619, 289, 620, 0, 621, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 622,
	623, 624, 0, 297, 298, 625, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 626, 627, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 628, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 629, 630, 360, 0, 267, 0,
	0, 0, 0, 0, 361, 362, 363, 631, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	632, 633, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 634, 0, 635, 379, 0, 380, 381,
	382, 383, 384, 1441, 637, 638, 461, 0, 385, 386,
	0, 387, 388, 389, 390, 0, 0, 0, 268, 391,
	392, 393, 395, 0, 0, 394, 639, 640, 0, 641,
	0, 396, 397, 0, 642, 0, 398, 399, 400, 0,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 643, 0, 412, 413,
	0, 0, 414, 0, 0, 0, 415, 416, 419, 0,
	0, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	0, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 0, 448, 0, 269, 0, 458, 459,
	0, 644, 460, 645, 462, 463, 0, 0, 464, 0,
	0, 1206, 466, 467, 468, 0, 0, 469, 470, 646,
	0, 471, 0, 647, 472, 473, 465, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 648,
	485, 486, 487, 649, 488, 489, 490, 650, 491, 651,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 652, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 0, 524, 525, 526, 527, 653, 528,
	0, 529, 530, 536, 537, 531, 532, 538, 539, 540,
	541, 542, 0, 544, 545, 543, 546, 547, 548, 0,
	549, 550, 533, 534, 551, 552, 0, 553, 554, 555,
	556, 557, 558, 654, 0, 559, 0, 560, 561, 562,
	564, 535, 565, 570, 571, 655, 566, 567, 568, 569,
	656, 573, 574, 0, 575, 576, 0, 572, 563, 0,
	577, 578, 579, 580, 581, 582, 583, 354, 584, 0,
	585, 657, 658, 659, 660, 0, 594, 0, 586, 587,
	588, 661, 589, 662, 0, 590, 591, 592, 593, 0,
	595, 596, 0, 0, 597, 598, 599, 601, 602, 600,
	603, 0, 604, 0, 0, 605, 606, 607, 663, 664,
	665, 0, 609, 608, 610, 666, 1346, 0, 264, 0,
	0, 611, 612, 667, 613, 614, 615, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 616, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 617, 618, 0, 288, 619,
	289, 620, 0, 621, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 622, 623, 624, 0, 297, 298,
	625, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 626,
	627, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 628, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 629,
	630, 360, 0, 267, 0, 0, 0, 0, 0, 361,
	362, 363, 631, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 632, 633, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 634, 0,
	635, 379, 0, 380, 381, 382, 383, 384, 1348, 637,
	638, 461, 0, 385, 386, 0, 387, 388, 389, 390,
	0, 0, 0, 268, 391, 392, 393, 395, 0, 0,
	394, 639, 640, 0, 641, 0, 396, 397, 0, 642,
	0, 398, 399, 400, 0, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 643, 0, 412, 413, 0, 0, 414, 0, 0,
	0, 415, 416, 419, 0, 0, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 0, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 0, 448,
	0, 269, 0, 458, 459, 0, 644, 460, 645, 462,
	463, 0, 0, 464, 0, 0, 1206, 466, 467, 468,
	0, 0, 469, 470, 646, 0, 471, 0, 647, 472,
	473, 465, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 648, 485, 486, 487, 649, 488,
	489, 490, 650, 491, 651, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 652, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 0, 524,
	525, 526, 527, 653, 528, 0, 529, 530, 536, 537,
	531, 532, 538, 539, 540, 541, 542, 0, 544, 545,
	543, 546, 547, 548, 0, 549, 550, 533, 534, 551,
	552, 0, 553, 554, 555, 556, 557, 558, 654, 0,
	559, 0, 560, 561, 562, 564, 535, 565, 570, 571,
	655, 566, 567, 568, 569, 656, 573, 574, 0, 575,
	576, 0, 572, 563, 0, 577, 578, 579, 580, 581,
	582, 583, 354, 584, 0, 585, 657, 658, 659, 660,
	0, 594, 0, 586, 587, 588, 661, 589, 662, 0,
	590, 591, 592, 593, 0, 595, 596, 0, 0, 597,
	598, 599, 601, 602, 600, 603, 0, 604, 0, 0,
	605, 606, 607, 663, 664, 665, 0, 609, 608, 610,
	666, 699, 0, 264, 0, 0, 611, 612, 667, 613,
	614, 615, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 698, 275, 276, 277, 688, 278,
	279, 0, 0, 0, 0, 0, 616, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	617, 618, 0, 288, 619, 289, 620, 0, 621, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 622,
	623, 624, 0, 297, 298, 625, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 691, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 626, 627, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 628, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 629, 630, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 631, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	632, 633, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 692, 378, 634, 0, 635, 379, 0, 380, 381,
	382, 383, 384, 636, 637, 638, 461, 0, 385, 386,
	0, 387, 388, 389, 390, 0, 0, 0, 0, 391,
	392, 393, 395, 0, 0, 394, 639, 640, 0, 641,
	0, 396, 397, 0, 642, 0, 398, 399, 400, 0,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 643, 0, 412, 413,
	0, 0, 414, 0, 0, 0, 415, 416, 419, 0,
	0, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	0, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 0, 448, 0, 0, 0, 458, 459,
	0, 644, 460, 645, 462, 463, 0, 0, 464, 0,
	0, 0, 466, 467, 468, 0, 0, 469, 470, 646,
	0, 471, 0, 647, 472, 473, 465, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 648,
	485, 486, 487, 649, 488, 489, 490, 650, 491, 651,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 652, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 0, 524, 525, 526, 527, 653, 528,
	0, 529, 530, 536, 537, 531, 532, 538, 539, 540,
	541, 542, 693, 544, 545, 543, 546, 547, 548, 0,
	549, 550, 533, 534, 551, 552, 0, 553, 554, 555,
	556, 557, 558, 654, 0, 559, 0, 560, 561, 562,
	564, 535, 565, 570, 571, 655, 566, 567, 568, 569,
	656, 573, 574, 0, 575, 576, 0, 572, 563, 0,
	577, 578, 579, 580, 581, 582, 583, 354, 584, 0,
	585, 657, 658, 659, 660, 0, 594, 0, 586, 587,
	588, 661, 589, 662, 0, 590, 591, 592, 593, 0,
	595, 596, 0, 0, 597, 598, 599, 601, 602, 600,
	603, 0, 604, 0, 0, 605, 606, 607, 663, 664,
	665, 0, 609, 608, 610, 666, 687, 0, 264, 0,
	0, 611, 612, 667, 613, 614, 615, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 688, 278, 279, 0, 0, 0, 0,
	0, 616, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 617, 618, 0, 288, 619,
	289, 620, 0, 621, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 622, 623, 624, 0, 297, 298,
	625, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 691, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 626,
	627, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 628, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 629,
	630, 360, 0, 0, 0, 0, 0, 0, 0, 361,
	362, 363, 631, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 632, 633, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 692, 378, 634, 0,
	635, 379, 0, 380, 381, 382, 383, 384, 636, 637,
	638, 461, 0, 385, 386, 0, 387, 388, 389, 390,
	0, 0, 0, 0, 391, 392, 393, 395, 0, 0,
	394, 639, 640, 0, 641, 0, 396, 397, 0, 642,
	0, 398, 399, 400, 0, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 643, 0, 412, 413, 0, 0, 414, 0, 0,
	0, 415, 416, 419, 0, 0, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 0, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 0, 448,
	0, 0, 0, 458, 459, 0, 644, 460, 645, 462,
	463, 0, 0, 464, 0, 0, 0, 466, 467, 468,
	0, 0, 469, 470, 646, 0, 471, 0, 647, 472,
	473, 465, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 648, 485, 486, 487, 649, 488,
	489, 490, 650, 491, 651, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 652, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 0, 524,
	525, 526, 527, 653, 528, 0, 529, 530, 536, 537,
	531, 532, 538, 539, 540, 541, 542, 693, 544, 545,
	543, 546, 547, 548, 0, 549, 550, 533, 534, 551,
	552, 0, 553, 554, 555, 556, 557, 558, 654, 0,
	559, 0, 560, 561, 562, 564, 535, 565, 570, 571,
	655, 566, 567, 568, 569, 656, 573, 574, 0, 575,
	576, 0, 572, 563, 0, 577, 578, 579, 580, 581,
	582, 583, 354, 584, 0, 585, 657, 658, 659, 660,
	0, 594, 0, 586, 587, 588, 661, 589, 662, 0,
	590, 591, 592, 593, 0, 595, 596, 0, 0, 597,
	598, 599, 601, 602, 600, 603, 0, 604, 0, 0,
	605, 606, 607, 663, 664, 665, 264, 609, 608, 610,
	666, 0, 0, 0, 0, 0, 611, 612, 667, 613,
	614, 615, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 616,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 617, 618, 0, 288, 619, 289, 620,
	0, 621, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 622, 623, 624, 0, 297, 298, 625, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 626, 627, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 628, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 629, 630, 360,
	0, 267, 0, 0, 0, 0, 0, 361, 362, 363,
	631, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 632, 633, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 634, 0, 635, 379,
	0, 380, 381, 382, 383, 384, 636, 637, 638, 461,
	0, 385, 386, 0, 387, 388, 389, 390, 0, 0,
	0, 268, 391, 392, 393, 395, 0, 0, 394, 639,
	640, 0, 641, 0, 396, 397, 0, 642, 0, 398,
	399, 400, 0, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 643,
	0, 412, 413, 0, 0, 414, 0, 0, 0, 415,
	416, 419, 0, 0, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 0, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 0, 448, 0, 269,
	0, 458, 459, 0, 644, 460, 645, 462, 463, 0,
	0, 464, 0, 0, 1206, 466, 467, 468, 0, 0,
	469, 470, 646, 0, 471, 0, 647, 472, 473, 465,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 648, 485, 486, 487, 649, 488, 489, 490,
	650, 491, 651, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 652, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 0, 524, 525, 526,
	527, 653, 528, 0, 529, 530, 536, 537, 531, 532,
	538, 539, 540, 541, 542, 0, 544, 545, 543, 546,
	547, 548, 0, 549, 550, 533, 534, 551, 552, 0,
	553, 554, 555, 556, 557, 558, 654, 0, 559, 0,
	560, 561, 562, 564, 535, 565, 570, 571, 655, 566,
	567, 568, 569, 656, 573, 574, 0, 575, 576, 0,
	572, 563, 0, 577, 578, 579, 580, 581, 582, 583,
	354, 584, 0, 585, 657, 658, 659, 660, 0, 594,
	0, 586, 587, 588, 661, 589, 662, 0, 590, 591,
	592, 593, 0, 595, 596, 0, 0, 597, 598, 599,
	601, 602, 600, 603, 0, 604, 0, 0, 605, 606,
	607, 663, 664, 665, 264, 609, 608, 610, 666, 0,
	0, 0, 0, 0, 611, 612, 667, 613, 614, 615,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 616, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 617, 618, 0, 288, 619, 289, 620, 0, 621,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	622, 623, 624, 0, 297, 298, 625, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 626, 627, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 628, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 629, 630, 360, 0, 267,
	0, 0, 0, 0, 0, 361, 362, 363, 631, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 632, 633, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 634, 0, 635, 379, 0, 380,
	381, 382, 383, 384, 636, 637, 638, 461, 0, 385,
	386, 0, 387, 388, 389, 390, 0, 0, 0, 268,
	391, 392, 393, 395, 0, 0, 394, 639, 640, 0,
	641, 0, 396, 397, 0, 642, 0, 398, 399, 400,
	0, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 643, 0, 412,
	413, 0, 0, 414, 0, 0, 0, 415, 416, 419,
	0, 0, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 0, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 3339, 448, 0, 269, 0, 458,
	459, 0, 644, 460, 645, 462, 463, 0, 0, 464,
	0, 0, 0, 466, 467, 468, 0, 0, 469, 470,
	646, 0, 471, 0, 647, 472, 473, 465, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	648, 485, 486, 487, 649, 488, 489, 490, 650, 491,
	651, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 652, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 0, 524, 525, 526, 527, 653,
	528, 0, 529, 530, 536, 537, 531, 532, 538, 539,
	540, 541, 542, 0, 544, 545, 543, 546, 547, 548,
	0, 549, 550, 533, 534, 551, 552, 0, 553, 554,
	555, 556, 557, 558, 654, 0, 559, 0, 560, 561,
	562, 564, 535, 565, 570, 571, 655, 566, 567, 568,
	569, 656, 573, 574, 0, 575, 576, 0, 572, 563,
	0, 577, 578, 579, 580, 581, 582, 583, 354, 584,
	0, 585, 657, 658, 659, 660, 0, 594, 0, 586,
	587, 588, 661, 589, 662, 0, 590, 591, 592, 593,
	0, 595, 596, 0, 0, 597, 598, 599, 601, 602,
	600, 603, 0, 604, 0, 0, 605, 606, 607, 663,
	664, 665, 0, 609, 608, 610, 666, 2893, 0, 264,
	0, 0, 611, 612, 667, 613, 614, 615, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 616, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 617, 618, 0, 288,
	619, 289, 620, 0, 621, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 622, 623, 624, 0, 297,
	298, 625, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	626, 627, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 628,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	629, 630, 360, 0, 267, 0, 0, 0, 0, 0,
	361, 362, 363, 631, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 632, 633, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 634,
	0, 635, 379, 0, 380, 381, 382, 383, 384, 2892,
	637, 638, 461, 0, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 268, 391, 392, 393, 395, 0,
	0, 394, 639, 640, 0, 641, 0, 396, 397, 0,
	642, 0, 398, 399, 400, 0, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 643, 0, 412, 413, 0, 0, 414, 0,
	0, 0, 415, 416, 419, 0, 0, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 0, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 0,
	448, 0, 269, 0, 458, 459, 0, 644, 460, 645,
	462, 463, 0, 0, 464, 0, 0, 0, 466, 467,
	468, 0, 0, 469, 470, 646, 0, 471, 0, 647,
	472, 473, 465, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 648, 485, 486, 487, 649,
	488, 489, 490, 650, 491, 651, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 652,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 0,
	524, 525, 526, 527, 653, 528, 0, 529, 530, 536,
	537, 531, 532, 538, 539, 540, 541, 542, 0, 544,
	545, 543, 546, 547, 548, 0, 549, 550, 533, 534,
	551, 552, 0, 553, 554, 555, 556, 557, 558, 654,
	0, 559, 0, 560, 561, 562, 564, 535, 565, 570,
	571, 655, 566, 567, 568, 569, 656, 573, 574, 0,
	575, 576, 0, 572, 563, 0, 577, 578, 579, 580,
	581, 582, 583, 354, 584, 0, 585, 657, 658, 659,
	660, 0, 594, 0, 586, 587, 588, 661, 589, 662,
	0, 590, 591, 592, 593, 0, 595, 596, 0, 0,
	597, 598, 599, 601, 602, 600, 603, 0, 604, 0,
	0, 605, 606, 607, 663, 664, 665, 0, 609, 608,
	610, 666, 2251, 0, 264, 0, 0, 611, 612, 667,
	613, 614, 615, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 616, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 617, 618, 0, 288, 619, 289, 620, 0, 621,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	622, 623, 624, 0, 297, 298, 625, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 626, 627, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 628, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 629, 630, 360, 0, 267,
	0, 0, 0, 0, 0, 361, 362, 363, 631, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 632, 633, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 634, 0, 635, 379, 0, 380,
	381, 382, 383, 384, 636, 637, 638, 461, 0, 385,
	386, 0, 387, 388, 389, 390, 0, 0, 0, 268,
	391, 392, 393, 395, 0, 0, 394, 639, 640, 0,
	641, 0, 396, 397, 0, 642, 0, 398, 399, 400,
	0, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 643, 0, 412,
	413, 0, 0, 414, 0, 0, 0, 415, 416, 419,
	0, 0, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 0, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 0, 448, 0, 269, 0, 458,
	459, 0, 644, 460, 645, 462, 463, 0, 0, 464,
	0, 0, 0, 466, 467, 468, 0, 0, 469, 470,
	646, 0, 471, 0, 647, 472, 473, 465, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	648, 485, 486, 487, 649, 488, 489, 490, 650, 491,
	651, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 652, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 0, 524, 525, 526, 527, 653,
	528, 0, 529, 530, 536, 537, 531, 532, 538, 539,
	540, 541, 542, 0, 544, 545, 543, 546, 547, 548,
	0, 549, 550, 533, 534, 551, 552, 0, 553, 554,
	555, 556, 557, 558, 654, 0, 559, 0, 560, 561,
	562, 564, 535, 565, 570, 571, 655, 566, 567, 568,
	569, 656, 573, 574, 0, 575, 576, 0, 572, 563,
	0, 577, 578, 579, 580, 581, 582, 583, 354, 584,
	0, 585, 657, 658, 659, 660, 0, 594, 0, 586,
	587, 588, 661, 589, 662, 0, 590, 591, 592, 593,
	0, 595, 596, 0, 0, 597, 598, 599, 601, 602,
	600, 603, 0, 604, 0, 0, 605, 606, 607, 663,
	664, 665, 264, 609, 608, 610, 666, 0, 0, 0,
	0, 0, 611, 612, 667, 613, 614, 615, 0, 270,
	272, 271, 273, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 616, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 617,
	618, 0, 288, 619, 289, 620, 0, 621, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 622, 623,
	624, 0, 297, 298, 625, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 626, 627, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 628, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 629, 630, 360, 0, 267, 0, 0,
	0, 0, 0, 361, 362, 363, 631, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 632,
	633, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 634, 0, 635, 379, 0, 380, 381, 382,
	383, 384, 636, 637, 638, 461, 0, 385, 386, 0,
	387, 388, 389, 390, 0, 0, 0, 268, 391, 392,
	393, 395, 0, 0, 394, 639, 640, 0, 641, 0,
	396, 397, 0, 642, 0, 398, 399, 400, 0, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 643, 0, 412, 413, 0,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 0,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 0, 448, 0, 269, 0, 458, 459, 0,
	644, 460, 645, 462, 463, 0, 0, 464, 0, 0,
	0, 466, 467, 468, 0, 0, 469, 470, 646, 0,
	471, 0, 647, 472, 473, 465, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 648, 485,
	486, 487, 649, 488, 489, 490, 650, 491, 651, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 652, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 0, 524, 525, 526, 527, 653, 528, 0,
	529, 530, 536, 537, 531, 532, 538, 539, 540, 541,
	542, 0, 544, 545, 543, 546, 547, 548, 0, 549,
	550, 533, 534, 551, 552, 0, 553, 554, 555, 556,
	557, 558, 654, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 655, 566, 567, 568, 569, 656,
	573, 574, 0, 575, 576, 0, 572, 563, 2192, 577,
	578, 579, 580, 581, 582, 583, 354, 584, 0, 585,
	657, 658, 659, 660, 0, 594, 0, 586, 587, 588,
	661, 589, 662, 0, 590, 591, 592, 593, 0, 595,
	596, 0, 0, 597, 598, 599, 601, 602, 600, 603,
	0, 604, 0, 0, 605, 606, 607, 663, 664, 665,
	0, 609, 608, 610, 666, 2199, 0, 264, 0, 0,
	611, 612, 667, 613, 614, 615, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	616, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 617, 618, 0, 288, 619, 289,
	620, 0, 621, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 622, 623, 624, 0, 297, 298, 625,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 626, 627,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 628, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 629, 630,
	360, 0, 267, 0, 0, 0, 0, 0, 361, 362,
	363, 631, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 632, 633, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 634, 0, 635,
	379, 0, 380, 381, 382, 383, 384, 2198, 637, 638,
	461, 0, 385, 386, 0, 387, 388, 389, 390, 0,
	0, 0, 268, 391, 392, 393, 395, 0, 0, 394,
	639, 640, 0, 641, 0, 396, 397, 0, 642, 0,
	398, 399, 400, 0, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	643, 0, 412, 413, 0, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 0, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 0, 448, 0,
	269, 0, 458, 459, 0, 644, 460, 645, 462, 463,
	0, 0, 464, 0, 0, 0, 466, 467, 468, 0,
	0, 469, 470, 646, 0, 471, 0, 647, 472, 473,
	465, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 648, 485, 486, 487, 649, 488, 489,
	490, 650, 491, 651, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 652, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 0, 524, 525,
	526, 527, 653, 528, 0, 529, 530, 536, 537, 531,
	532, 538, 539, 540, 541, 542, 0, 544, 545, 543,
	546, 547, 548, 0, 549, 550, 533, 534, 551, 552,
	0, 553, 554, 555, 556, 557, 558, 654, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 655,
	566, 567, 568, 569, 656, 573, 574, 0, 575, 576,
	0, 572, 563, 0, 577, 578, 579, 580, 581, 582,
	583, 354, 584, 0, 585, 657, 658, 659, 660, 0,
	594, 0, 586, 587, 588, 661, 589, 662, 0, 590,
	591, 592, 593, 0, 595, 596, 0, 0, 597, 598,
	599, 601, 602, 600, 603, 0, 604, 0, 0, 605,
	606, 607, 663, 664, 665, 0, 609, 608, 610, 666,
	2185, 0, 264, 0, 0, 611, 612, 667, 613, 614,
	615, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 616, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 617,
	618, 0, 288, 619, 289, 620, 0, 621, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 622, 623,
	624, 0, 297, 298, 625, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 626, 627, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 628, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 629, 630, 360, 0, 267, 0, 0,
	0, 0, 0, 361, 362, 363, 631, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 632,
	633, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 634, 0, 635, 379, 0, 380, 381, 382,
	383, 384, 2187, 637, 638, 461, 0, 385, 386, 0,
	387, 388, 389, 390, 0, 0, 0, 268, 391, 392,
	393, 395, 0, 0, 394, 639, 640, 0, 641, 0,
	396, 397, 0, 642, 0, 398, 399, 400, 0, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 643, 0, 412, 413, 0,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 0,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 0, 448, 0, 269, 0, 458, 459, 0,
	644, 460, 645, 462, 463, 0, 0, 464, 0, 0,
	0, 466, 467, 468, 0, 0, 469, 470, 646, 0,
	471, 0, 647, 472, 473, 465, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 648, 485,
	486, 487, 649, 488, 489, 490, 650, 491, 651, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 652, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 0, 524, 525, 526, 527, 653, 528, 0,
	529, 530, 536, 537, 531, 532, 538, 539, 540, 541,
	542, 0, 544, 545, 543, 546, 547, 548, 0, 549,
	550, 533, 534, 551, 552, 0, 553, 554, 555, 556,
	557, 558, 654, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 655, 566, 567, 568, 569, 656,
	573, 574, 0, 575, 576, 0, 572, 563, 0, 577,
	578, 579, 580, 581, 582, 583, 354, 584, 0, 585,
	657, 658, 659, 660, 0, 594, 0, 586, 587, 588,
	661, 589, 662, 0, 590, 591, 592, 593, 0, 595,
	596, 0, 0, 597, 598, 599, 601, 602, 600, 603,
	0, 604, 0, 0, 605, 606, 607, 663, 664, 665,
	264, 609, 608, 610, 666, 0, 0, 0, 0, 0,
	611, 612, 667, 613, 614, 615, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 616, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 617, 618, 0,
	288, 619, 289, 620, 0, 621, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 622, 623, 624, 0,
	297, 298, 625, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 626, 627, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	628, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 629, 630, 360, 0, 267, 0, 0, 0, 0,
	0, 361, 362, 363, 631, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 632, 633, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	634, 0, 635, 379, 0, 380, 381, 382, 383, 384,
	2155, 637, 638, 461, 0, 385, 386, 0, 387, 388,
	389, 390, 0, 0, 0, 268, 391, 392, 393, 395,
	0, 0, 394, 639, 640, 0, 641, 0, 396, 397,
	0, 642, 0, 398, 399, 400, 0, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 643, 0, 412, 413, 0, 0, 414,
	0, 0, 0, 415, 416, 419, 0, 0, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 0, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	0, 448, 0, 269, 0, 458, 459, 0, 644, 460,
	645, 462, 463, 0, 0, 464, 0, 0, 1206, 466,
	467, 468, 0, 0, 469, 470, 646, 0, 471, 0,
	647, 472, 473, 465, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 648, 485, 486, 487,
	649, 488, 489, 490, 650, 491, 651, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	652, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	0, 524, 525, 526, 527, 653, 528, 0, 529, 530,
	536, 537, 531, 532, 538, 539, 540, 541, 542, 0,
	544, 545, 543, 546, 547, 548, 0, 549, 550, 533,
	534, 551, 552, 0, 553, 554, 555, 556, 557, 558,
	654, 0, 559, 0, 560, 561, 562, 564, 535, 565,
	570, 571, 655, 566, 567, 568, 569, 656, 573, 574,
	0, 575, 576, 0, 572, 563, 0, 577, 578, 579,
	580, 581, 582, 583, 354, 584, 0, 585, 657, 658,
	659, 660, 0, 594, 0, 586, 587, 588, 661, 589,
	662, 0, 590, 591, 592, 593, 0, 595, 596, 0,
	0, 597, 598, 599, 601, 602, 600, 603, 0, 604,
	0, 0, 605, 606, 607, 663, 664, 665, 0, 609,
	608, 610, 666, 1541, 0, 264, 0, 0, 611, 612,
	667, 613, 614, 615, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 616, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 617, 618, 0, 288, 619, 289, 620, 0,
	621, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 622, 623, 624, 0, 297, 298, 625, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 626, 627, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 628, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 629, 630, 360, 0,
	267, 0, 0, 0, 0, 0, 361, 362, 363, 631,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 632, 633, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 634, 0, 635, 379, 0,
	380, 381, 382, 383, 384, 1540, 637, 638, 461, 0,
	385, 386, 0, 387, 388, 389, 390, 0, 0, 0,
	268, 391, 392, 393, 395, 0, 0, 394, 639, 640,
	0, 641, 0, 396, 397, 0, 642, 0, 398, 399,
	400, 0, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 643, 0,
	412, 413, 0, 0, 414, 0, 0, 0, 415, 416,
	419, 0, 0, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 0, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 0, 448, 0, 269, 0,
	458, 459, 0, 644, 460, 645, 462, 463, 0, 0,
	464, 0, 0, 0, 466, 467, 468, 0, 0, 469,
	470, 646, 0, 471, 0, 647, 472, 473, 465, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 648, 485, 486, 487, 649, 488, 489, 490, 650,
	491, 651, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 652, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 0, 524, 525, 526, 527,
	653, 528, 0, 529, 530, 536, 537, 531, 532, 538,
	539, 540, 541, 542, 0, 544, 545, 543, 546, 547,
	548, 0, 549, 550, 533, 534, 551, 552, 0, 553,
	554, 555, 556, 557, 558, 654, 0, 559, 0, 560,
	561, 562, 564, 535, 565, 570, 571, 655, 566, 567,
	568, 569, 656, 573, 574, 0, 575, 576, 0, 572,
	563, 0, 577, 578, 579, 580, 581, 582, 583, 354,
	584, 0, 585, 657, 658, 659, 660, 0, 594, 0,
	586, 587, 588, 661, 589, 662, 0, 590, 591, 592,
	593, 0, 595, 596, 0, 0, 597, 598, 599, 601,
	602, 600, 603, 0, 604, 0, 0, 605, 606, 607,
	663, 664, 665, 0, 609, 608, 610, 666, 1459, 0,
	264, 0, 0, 611, 612, 667, 613, 614, 615, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 616, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 617, 618, 0,
	288, 619, 289, 620, 0, 621, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 622, 623, 624, 0,
	297, 298, 625, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 626, 627, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	628, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 629, 630, 360, 0, 267, 0, 0, 0, 0,
	0, 361, 362, 363, 631, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 632, 633, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	634, 0, 635, 379, 0, 380, 381, 382, 383, 384,
	636, 637, 638, 461, 0, 385, 386, 0, 387, 388,
	389, 390, 0, 0, 0, 268, 391, 392, 393, 395,
	0, 0, 394, 639, 640, 0, 641, 0, 396, 397,
	0, 642, 0, 398, 399, 400, 0, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 643, 0, 412, 413, 0, 0, 414,
	0, 0, 0, 415, 416, 419, 0, 0, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 0, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	0, 448, 0, 269, 0, 458, 459, 0, 644, 460,
	645, 462, 463, 0, 0, 464, 0, 0, 0, 466,
	467, 468, 0, 0, 469, 470, 646, 0, 471, 0,
	647, 472, 473, 465, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 648, 485, 486, 487,
	649, 488, 489, 490, 650, 491, 651, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	652, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	0, 524, 525, 526, 527, 653, 528, 0, 529, 530,
	536, 537, 531, 532, 538, 539, 540, 541, 542, 0,
	544, 545, 543, 546, 547, 548, 0, 549, 550, 533,
	534, 551, 552, 0, 553, 554, 555, 556, 557, 558,
	654, 0, 559, 0, 560, 561, 562, 564, 535, 565,
	570, 571, 655, 566, 567, 568, 569, 656, 573, 574,
	0, 575, 576, 0, 572, 563, 0, 577, 578, 579,
	580, 581, 582, 583, 354, 584, 0, 585, 657, 658,
	659, 660, 0, 594, 0, 586, 587, 588, 661, 589,
	662, 0, 590, 591, 592, 593, 0, 595, 596, 0,
	0, 597, 598, 599, 601, 602, 600, 603, 0, 604,
	0, 0, 605, 606, 607, 663, 664, 665, 0, 609,
	608, 610, 666, 1452, 0, 264, 0, 0, 611, 612,
	667, 613, 614, 615, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 616, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 617, 618, 0, 288, 619, 289, 620, 0,
	621, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 622, 623, 624, 0, 297, 298, 625, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 626, 627, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 628, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 629, 630, 360, 0,
	267, 0, 0, 0, 0, 0, 361, 362, 363, 631,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 632, 633, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 634, 0, 635, 379, 0,
	380, 381, 382, 383, 384, 1454, 637, 638, 461, 0,
	385, 386, 0, 387, 388, 389, 390, 0, 0, 0,
	268, 391, 392, 393, 395, 0, 0, 394, 639, 640,
	0, 641, 0, 396, 397, 0, 642, 0, 398, 399,
	400, 0, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 643, 0,
	412, 413, 0, 0, 414, 0, 0, 0, 415, 416,
	419, 0, 0, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 0, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 0, 448, 0, 269, 0,
	458, 459, 0, 644, 460, 645, 462, 463, 0, 0,
	464, 0, 0, 0, 466, 467, 468, 0, 0, 469,
	470, 646, 0, 471, 0, 647, 472, 473, 465, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 648, 485, 486, 487, 649, 488, 489, 490, 650,
	491, 651, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 652, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 0, 524, 525, 526, 527,
	653, 528, 0, 529, 530, 536, 537, 531, 532, 538,
	539, 540, 541, 542, 0, 544, 545, 543, 546, 547,
	548, 0, 549, 550, 533, 534, 551, 552, 0, 553,
	554, 555, 556, 557, 558, 654, 0, 559, 0, 560,
	561, 562, 564, 535, 565, 570, 571, 655, 566, 567,
	568, 569, 656, 573, 574, 0, 575, 576, 0, 572,
	563, 0, 577, 578, 579, 580, 581, 582, 583, 354,
	584, 0, 585, 657, 658, 659, 660, 0, 594, 0,
	586, 587, 588, 661, 589, 662, 0, 590, 591, 592,
	593, 0, 595, 596, 0, 0, 597, 598, 599, 601,
	602, 600, 603, 0, 604, 0, 0, 605, 606, 607,
	663, 664, 665, 0, 609, 608, 610, 666, 1279, 0,
	264, 0, 0, 611, 612, 667, 613, 614, 615, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 616, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 617, 618, 0,
	288, 619, 289, 620, 0, 621, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 622, 623, 624, 0,
	297, 298, 625, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 626, 627, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	628, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 629, 630, 360, 0, 267, 0, 0, 0, 0,
	0, 361, 362, 363, 631, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 632, 633, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	634, 0, 635, 379, 0, 380, 381, 382, 383, 384,
	1278, 637, 638, 461, 0, 385, 386, 0, 387, 388,
	389, 390, 0, 0, 0, 268, 391, 392, 393, 395,
	0, 0, 394, 639, 640, 0, 641, 0, 396, 397,
	0, 642, 0, 398, 399, 400, 0, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 643, 0, 412, 413, 0, 0, 414,
	0, 0, 0, 415, 416, 419, 0, 0, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 0, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	0, 448, 0, 269, 0, 458, 459, 0, 644, 460,
	645, 462, 463, 0, 0, 464, 0, 0, 0, 466,
	467, 468, 0, 0, 469, 470, 646, 0, 471, 0,
	647, 472, 473, 465, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 648, 485, 486, 487,
	649, 488, 489, 490, 650, 491, 651, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	652, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	0, 524, 525, 526, 527, 653, 528, 0, 529, 530,
	536, 537, 531, 532, 538, 539, 540, 541, 542, 0,
	544, 545, 543, 546, 547, 548, 0, 549, 550, 533,
	534, 551, 552, 0, 553, 554, 555, 556, 557, 558,
	654, 0, 559, 0, 560, 561, 562, 564, 535, 565,
	570, 571, 655, 566, 567, 568, 569, 656, 573, 574,
	0, 575, 576, 0, 572, 563, 0, 577, 578, 579,
	580, 581, 582, 583, 354, 584, 0, 585, 657, 658,
	659, 660, 0, 594, 0, 586, 587, 588, 661, 589,
	662, 0, 590, 591, 592, 593, 0, 595, 596, 0,
	0, 597, 598, 599, 601, 602, 600, 603, 0, 604,
	0, 0, 605, 606, 607, 663, 664, 665, 0, 609,
	608, 610, 666, 1269, 0, 264, 0, 0, 611, 612,
	667, 613, 614, 615, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 616, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 617, 618, 0, 288, 619, 289, 620, 0,
	621, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 622, 623, 624, 0, 297, 298, 625, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 626, 627, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 628, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 629, 630, 360, 0,
	267, 0, 0, 0, 0, 0, 361, 362, 363, 631,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 632, 633, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 634, 0, 635, 379, 0,
	380, 381, 382, 383, 384, 1268, 637, 638, 461, 0,
	385, 386, 0, 387, 388, 389, 390, 0, 0, 0,
	268, 391, 392, 393, 395, 0, 0, 394, 639, 640,
	0, 641, 0, 396, 397, 0, 642, 0, 398, 399,
	400, 0, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 643, 0,
	412, 413, 0, 0, 414, 0, 0, 0, 415, 416,
	419, 0, 0, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 0, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 0, 448, 0, 269, 0,
	458, 459, 0, 644, 460, 645, 462, 463, 0, 0,
	464, 0, 0, 0, 466, 467, 468, 0, 0, 469,
	470, 646, 0, 471, 0, 647, 472, 473, 465, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 648, 485, 486, 487, 649, 488, 489, 490, 650,
	491, 651, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 652, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 0, 524, 525, 526, 527,
	653, 528, 0, 529, 530, 536, 537, 531, 532, 538,
	539, 540, 541, 542, 0, 544, 545, 543, 546, 547,
	548, 0, 549, 550, 533, 534, 551, 552, 0, 553,
	554, 555, 556, 557, 558, 654, 0, 559, 0, 560,
	561, 562, 564, 535, 565, 570, 571, 655, 566, 567,
	568, 569, 656, 573, 574, 0, 575, 576, 0, 572,
	563, 0, 577, 578, 579, 580, 581, 582, 583, 354,
	584, 0, 585, 657, 658, 659, 660, 0, 594, 0,
	586, 587, 588, 661, 589, 662, 0, 590, 591, 592,
	593, 0, 595, 596, 0, 0, 597, 598, 599, 601,
	602, 600, 603, 0, 604, 0, 0, 605, 606, 607,
	663, 664, 665, 0, 609, 608, 610, 666, 1266, 0,
	264, 0, 0, 611, 612, 667, 613, 614, 615, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 616, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 617, 618, 0,
	288, 619, 289, 620, 0, 621, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 622, 623, 624, 0,
	297, 298, 625, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 626, 627, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	628, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 629, 630, 360, 0, 267, 0, 0, 0, 0,
	0, 361, 362, 363, 631, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 632, 633, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	634, 0, 635, 379, 0, 380, 381, 382, 383, 384,
	1265, 637, 638, 461, 0, 385, 386, 0, 387, 388,
	389, 390, 0, 0, 0, 268, 391, 392, 393, 395,
	0, 0, 394, 639, 640, 0, 641, 0, 396, 397,
	0, 642, 0, 398, 399, 400, 0, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 643, 0, 412, 413, 0, 0, 414,
	0, 0, 0, 415, 416, 419, 0, 0, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 0, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	0, 448, 0, 269, 0, 458, 459, 0, 644, 460,
	645, 462, 463, 0, 0, 464, 0, 0, 0, 466,
	467, 468, 0, 0, 469, 470, 646, 0, 471, 0,
	647, 472, 473, 465, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 648, 485, 486, 487,
	649, 488, 489, 490, 650, 491, 651, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	652, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	0, 524, 525, 526, 527, 653, 528, 0, 529, 530,
	536, 537, 531, 532, 538, 539, 540, 541, 542, 0,
	544, 545, 543, 546, 547, 548, 0, 549, 550, 533,
	534, 551, 552, 0, 553, 554, 555, 556, 557, 558,
	654, 0, 559, 0, 560, 561, 562, 564, 535, 565,
	570, 571, 655, 566, 567, 568, 569, 656, 573, 574,
	0, 575, 576, 0, 572, 563, 0, 577, 578, 579,
	580, 581, 582, 583, 354, 584, 0, 585, 657, 658,
	659, 660, 0, 594, 0, 586, 587, 588, 661, 589,
	662, 0, 590, 591, 592, 593, 0, 595, 596, 0,
	0, 597, 598, 599, 601, 602, 600, 603, 0, 604,
	0, 0, 605, 606, 607, 663, 664, 665, 0, 609,
	608, 610, 666, 1261, 0, 264, 0, 0, 611, 612,
	667, 613, 614, 615, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 616, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 617, 618, 0, 288, 619, 289, 620, 0,
	621, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 622, 623, 624, 0, 297, 298, 625, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 626, 627, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 628, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 629, 630, 360, 0,
	267, 0, 0, 0, 0, 0, 361, 362, 363, 631,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 632, 633, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 634, 0, 635, 379, 0,
	380, 381, 382, 383, 384, 1260, 637, 638, 461, 0,
	385, 386, 0, 387, 388, 389, 390, 0, 0, 0,
	268, 391, 392, 393, 395, 0, 0, 394, 639, 640,
	0, 641, 0, 396, 397, 0, 642, 0, 398, 399,
	400, 0, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 643, 0,
	412, 413, 0, 0, 414, 0, 0, 0, 415, 416,
	419, 0, 0, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 0, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 0, 448, 0, 269, 0,
	458, 459, 0, 644, 460, 645, 462, 463, 0, 0,
	464, 0, 0, 0, 466, 467, 468, 0, 0, 469,
	470, 646, 0, 471, 0, 647, 472, 473, 465, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 648, 485, 486, 487, 649, 488, 489, 490, 650,
	491, 651, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 652, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 0, 524, 525, 526, 527,
	653, 528, 0, 529, 530, 536, 537, 531, 532, 538,
	539, 540, 541, 542, 0, 544, 545, 543, 546, 547,
	548, 0, 549, 550, 533, 534, 551, 552, 0, 553,
	554, 555, 556, 557, 558, 654, 0, 559, 0, 560,
	561, 562, 564, 535, 565, 570, 571, 655, 566, 567,
	568, 569, 656, 573, 574, 0, 575, 576, 0, 572,
	563, 0, 577, 578, 579, 580, 581, 582, 583, 354,
	584, 0, 585, 657, 658, 659, 660, 0, 594, 0,
	586, 587, 588, 661, 589, 662, 0, 590, 591, 592,
	593, 0, 595, 596, 0, 0, 597, 598, 599, 601,
	602, 600, 603, 0, 604, 0, 0, 605, 606, 607,
	663, 664, 665, 0, 609, 608, 610, 666, 669, 0,
	264, 0, 0, 611, 612, 667, 613, 614, 615, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 616, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 617, 618, 0,
	288, 619, 289, 620, 0, 621, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 622, 623, 624, 0,
	297, 298, 625, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 626, 627, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	628, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 629, 630, 360, 0, 267, 0, 0, 0, 0,
	0, 361, 362, 363, 631, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 632, 633, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	634, 0, 635, 379, 0, 380, 381, 382, 383, 384,
	636, 637, 638, 461, 0, 385, 386, 0, 387, 388,
	389, 390, 0, 0, 0, 268, 391, 392, 393, 395,
	0, 0, 394, 639, 640, 0, 641, 0, 396, 397,
	0, 642, 0, 398, 399, 400, 0, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 643, 0, 412, 413, 0, 0, 414,
	0, 0, 0, 415, 416, 419, 0, 0, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 0, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	0, 448, 0, 269, 0, 458, 459, 0, 644, 460,
	645, 462, 463, 0, 0, 464, 0, 0, 0, 466,
	467, 468, 0, 0, 469, 470, 646, 0, 471, 0,
	647, 472, 473, 465, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 648, 485, 486, 487,
	649, 488, 489, 490, 650, 491, 651, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	652, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	0, 524, 525, 526, 527, 653, 528, 0, 529, 530,
	536, 537, 531, 532, 538, 539, 540, 541, 542, 0,
	544, 545, 543, 546, 547, 548, 0, 549, 550, 533,
	534, 551, 552, 0, 553, 554, 555, 556, 557, 558,
	654, 0, 559, 0, 560, 561, 562, 564, 535, 565,
	570, 571, 655, 566, 567, 568, 569, 656, 573, 574,
	0, 575, 576, 0, 572, 563, 0, 577, 578, 579,
	580, 581, 582, 583, 354, 584, 0, 585, 657, 658,
	659, 660, 0, 594, 0, 586, 587, 588, 661, 589,
	662, 0, 590, 591, 592, 593, 0, 595, 596, 0,
	0, 597, 598, 599, 601, 602, 600, 603, 0, 604,
	0, 0, 605, 606, 607, 663, 664, 665, 0, 609,
	608, 610, 666, 255, 0, 264, 0, 0, 611, 612,
	667, 613, 614, 615, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 616, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 617, 618, 0, 288, 619, 289, 620, 0,
	621, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 622, 623, 624, 0, 297, 298, 625, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 626, 627, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 628, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 629, 630, 360, 0,
	267, 0, 0, 0, 0, 0, 361, 362, 363, 631,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 632, 633, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 634, 0, 635, 379, 0,
	380, 381, 382, 383, 384, 636, 637, 638, 461, 0,
	385, 386, 0, 387, 388, 389, 390, 0, 0, 0,
	268, 391, 392, 393, 395, 0, 0, 394, 639, 640,
	0, 641, 0, 396, 397, 0, 642, 0, 398, 399,
	400, 0, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 643, 0,
	412, 413, 0, 0, 414, 0, 0, 0, 415, 416,
	419, 0, 0, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 0, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 0, 448, 0, 269, 0,
	458, 459, 0, 644, 460, 645, 462, 463, 0, 0,
	464, 0, 0, 0, 466, 467, 468, 0, 0, 469,
	470, 646, 0, 471, 0, 647, 472, 473, 465, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 648, 485, 486, 487, 649, 488, 489, 490, 650,
	491, 651, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 652, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 0, 524, 525, 526, 527,
	653, 528, 0, 529, 530, 536, 537, 531, 532, 538,
	539, 540, 541, 542, 0, 544, 545, 543, 546, 547,
	548, 0, 549, 550, 533, 534, 551, 552, 0, 553,
	554, 555, 556, 557, 558, 654, 0, 559, 0, 560,
	561, 562, 564, 535, 565, 570, 571, 655, 566, 567,
	568, 569, 656, 573, 574, 0, 575, 576, 0, 572,
	563, 0, 577, 578, 579, 580, 581, 582, 583, 354,
	584, 0, 585, 657, 658, 659, 660, 0, 594, 0,
	586, 587, 588, 661, 589, 662, 0, 590, 591, 592,
	593, 0, 595, 596, 0, 0, 597, 598, 599, 601,
	602, 600, 603, 0, 604, 0, 0, 605, 606, 607,
	663, 664, 665, 264, 609, 608, 610, 666, 0, 0,
	0, 0, 0, 611, 612, 667, 613, 614, 615, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 616, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	617, 618, 0, 288, 619, 289, 620, 0, 621, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 622,
	623, 624, 0, 297, 298, 625, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 626, 627, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 628, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 629, 630, 360, 0, 267, 0,
	0, 0, 0, 0, 361, 362, 363, 631, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	632, 633, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 634, 0, 635, 379, 0, 380, 381,
	382, 383, 384, 636, 637, 638, 461, 0, 385, 386,
	0, 387, 388, 389, 390, 0, 0, 0, 268, 391,
	392, 393, 395, 0, 0, 394, 639, 640, 0, 641,
	0, 396, 397, 0, 642, 0, 398, 399, 400, 0,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 643, 0, 412, 413,
	0, 0, 414, 0, 0, 0, 415, 416, 419, 0,
	0, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	0, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 0, 448, 0, 269, 0, 458, 459,
	0, 644, 460, 645, 462, 463, 0, 0, 464, 0,
	0, 0, 466, 467, 468, 0, 0, 469, 470, 646,
	0, 471, 0, 647, 472, 473, 465, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 648,
	485, 486, 487, 649, 488, 489, 490, 650, 491, 651,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 652, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 0, 524, 525, 526, 527, 653, 528,
	0, 529, 530, 536, 537, 531, 532, 538, 539, 540,
	541, 542, 0, 544, 545, 543, 546, 547, 548, 0,
	549, 550, 533, 534, 551, 552, 0, 553, 554, 555,
	556, 557, 558, 654, 0, 559, 0, 560, 561, 562,
	564, 535, 565, 570, 571, 655, 566, 567, 568, 569,
	656, 573, 574, 0, 575, 576, 0, 572, 563, 0,
	577, 578, 579, 580, 581, 582, 583, 354, 584, 0,
	585, 657, 658, 659, 660, 0, 594, 0, 586, 587,
	588, 661, 589, 662, 0, 590, 591, 592, 593, 0,
	595, 596, 0, 0, 597, 598, 599, 601, 602, 600,
	603, 0, 604, 0, 0, 605, 606, 607, 663, 664,
	665, 264, 609, 608, 610, 666, 0, 0, 0, 0,
	0, 611, 612, 667, 613, 614, 615, 0, 270, 272,
	271, 273, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 616, 0, 0, 0, 0, 3695,
	281, 0, 282, 283, 284, 285, 286, 287, 617, 618,
	0, 288, 619, 289, 620, 0, 621, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 622, 623, 624,
	0, 297, 298, 625, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 626, 627, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 628, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 629, 630, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 631, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 632, 633,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 634, 0, 635, 379, 0, 380, 381, 382, 383,
	384, 636, 637, 638, 461, 0, 385, 386, 0, 387,
	388, 389, 390, 0, 0, 0, 0, 391, 392, 393,
	395, 0, 0, 394, 639, 640, 0, 641, 0, 396,
	397, 0, 642, 0, 398, 399, 400, 0, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 643, 0, 412, 413, 0, 0,
	414, 0, 0, 0, 415, 416, 419, 0, 0, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 0, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 3696, 448, 0, 0, 0, 458, 459, 0, 644,
	460, 645, 462, 463, 0, 0, 464, 0, 0, 0,
	466, 467, 468, 0, 0, 469, 470, 646, 0, 471,
	0, 647, 472, 473, 465, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 648, 485, 486,
	487, 649, 488, 489, 490, 650, 491, 651, 492, 493,
	3698, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 652, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 0, 524, 525, 526, 527, 3699, 528, 0, 529,
	530, 536, 537, 531, 532, 538, 539, 540, 541, 542,
	0, 544, 545, 543, 546, 547, 548, 0, 549, 550,
	533, 534, 551, 552, 0, 553, 554, 555, 556, 557,
	558, 654, 0, 559, 0, 560, 561, 562, 564, 535,
	565, 570, 571, 655, 566, 567, 568, 569, 656, 573,
	574, 0, 575, 576, 0, 572, 563, 0, 577, 578,
	579, 580, 581, 582, 583, 354, 584, 0, 585, 657,
	658, 659, 660, 3694, 594, 0, 586, 587, 588, 661,
	589, 662, 0, 590, 591, 592, 593, 0, 595, 596,
	0, 0, 597, 598, 599, 601, 602, 600, 603, 0,
	604, 0, 0, 605, 606, 607, 663, 664, 665, 264,
	609, 608, 610, 666, 0, 0, 0, 0, 0, 611,
	612, 667, 613, 614, 615, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 616, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 617, 618, 0, 288,
	619, 289, 620, 0, 621, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 622, 623, 624, 0, 297,
	298, 625, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 691, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	626, 627, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 628,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	629, 630, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 631, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 632, 633, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 692, 378, 634,
	0, 635, 379, 0, 380, 381, 382, 383, 384, 636,
	637, 638, 461, 0, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 0, 391, 392, 393, 395, 0,
	0, 394, 639, 640, 0, 641, 0, 396, 397, 0,
	642, 0, 398, 399, 400, 0, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 643, 0, 412, 413, 0, 0, 414, 0,
	0, 0, 415, 416, 419, 0, 0, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 0, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 0,
	448, 0, 0, 0, 458, 459, 0, 644, 460, 645,
	462, 463, 0, 0, 464, 0, 0, 0, 466, 467,
	468, 0, 0, 469, 470, 646, 0, 471, 0, 647,
	472, 473, 465, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 648, 485, 486, 487, 649,
	488, 489, 490, 650, 491, 651, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 652,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 0,
	524, 525, 526, 527, 653, 528, 0, 529, 530, 536,
	537, 531, 532, 538, 539, 540, 541, 542, 693, 544,
	545, 543, 546, 547, 548, 0, 549, 550, 533, 534,
	551, 552, 0, 553, 554, 555, 556, 557, 558, 654,
	0, 559, 0, 560, 561, 562, 564, 535, 565, 570,
	571, 655, 566, 567, 568, 569, 656, 573, 574, 0,
	575, 576, 0, 572, 563, 0, 577, 578, 579, 580,
	581, 582, 583, 354, 584, 0, 585, 657, 658, 659,
	660, 0, 594, 0, 586, 587, 588, 661, 589, 662,
	0, 590, 591, 592, 593, 0, 595, 596, 0, 0,
	597, 598, 599, 601, 602, 600, 603, 0, 604, 0,
	0, 605, 606, 607, 663, 664, 665, 264, 609, 608,
	610, 666, 0, 0, 0, 0, 0, 611, 612, 667,
	613, 614, 615, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	616, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 617, 618, 0, 288, 619, 289,
	620, 0, 621, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 622, 623, 624, 0, 297, 298, 625,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 2288, 328, 0, 329, 626, 627,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 628, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 629, 630,
	360, 0, 267, 0, 0, 0, 0, 0, 361, 362,
	363, 631, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 632, 633, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 634, 0, 635,
	379, 0, 380, 381, 382, 383, 384, 636, 637, 638,
	461, 0, 385, 386, 0, 387, 388, 389, 390, 0,
	0, 0, 268, 391, 392, 393, 395, 0, 0, 394,
	639, 640, 0, 641, 0, 396, 397, 0, 642, 0,
	398, 399, 400, 0, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	643, 0, 412, 413, 0, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 0, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 0, 448, 0,
	269, 0, 458, 459, 0, 644, 460, 645, 462, 463,
	0, 0, 464, 0, 0, 0, 466, 467, 468, 0,
	0, 469, 470, 646, 0, 471, 0, 647, 472, 473,
	465, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 648, 485, 486, 487, 649, 488, 489,
	490, 650, 491, 651, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 652, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 0, 524, 525,
	526, 527, 653, 528, 0, 529, 530, 536, 537, 531,
	532, 538, 539, 540, 541, 542, 0, 544, 545, 543,
	546, 547, 548, 0, 549, 550, 533, 534, 551, 552,
	0, 553, 554, 555, 556, 557, 558, 654, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 655,
	566, 567, 568, 569, 656, 573, 574, 0, 575, 576,
	0, 572, 563, 0, 577, 578, 579, 580, 581, 582,
	583, 354, 584, 0, 585, 657, 658, 659, 660, 0,
	594, 0, 586, 587, 588, 661, 589, 662, 0, 590,
	591, 592, 593, 0, 595, 596, 0, 0, 597, 598,
	599, 601, 602, 600, 603, 0, 604, 0, 0, 605,
	606, 607, 663, 664, 665, 264, 609, 608, 610, 666,
	0, 0, 0, 0, 0, 611, 612, 667, 613, 614,
	615, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 616, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 617, 618, 0, 288, 619, 289, 620, 0,
	621, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 622, 623, 624, 0, 297, 298, 625, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 2286, 328, 0, 329, 626, 627, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 628, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 629, 630, 360, 0,
	267, 0, 0, 0, 0, 0, 361, 362, 363, 631,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 632, 633, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 634, 0, 635, 379, 0,
	380, 381, 382, 383, 384, 636, 637, 638, 461, 0,
	385, 386, 0, 387, 388, 389, 390, 0, 0, 0,
	268, 391, 392, 393, 395, 0, 0, 394, 639, 640,
	0, 641, 0, 396, 397, 0, 642, 0, 398, 399,
	400, 0, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 643, 0,
	412, 413, 0, 0, 414, 0, 0, 0, 415, 416,
	419, 0, 0, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 0, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 0, 448, 0, 269, 0,
	458, 459, 0, 644, 460, 645, 462, 463, 0, 0,
	464, 0, 0, 0, 466, 467, 468, 0, 0, 469,
	470, 646, 0, 471, 0, 647, 472, 473, 465, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 648, 485, 486, 487, 649, 488, 489, 490, 650,
	491, 651, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 652, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 0, 524, 525, 526, 527,
	653, 528, 0, 529, 530, 536, 537, 531, 532, 538,
	539, 540, 541, 542, 0, 544, 545, 543, 546, 547,
	548, 0, 549, 550, 533, 534, 551, 552, 0, 553,
	554, 555, 556, 557, 558, 654, 0, 559, 0, 560,
	561, 562, 564, 535, 565, 570, 571, 655, 566, 567,
	568, 569, 656, 573, 574, 0, 575, 576, 0, 572,
	563, 0, 577, 578, 579, 580, 581, 582, 583, 354,
	584, 0, 585, 657, 658, 659, 660, 0, 594, 0,
	586, 587, 588, 661, 589, 662, 0, 590, 591, 592,
	593, 0, 595, 596, 0, 0, 597, 598, 599, 601,
	602, 600, 603, 0, 604, 0, 0, 605, 606, 607,
	663, 664, 665, 264, 609, 608, 610, 666, 0, 0,
	0, 0, 0, 611, 612, 667, 613, 614, 615, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 616, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	617, 618, 0, 288, 619, 289, 620, 0, 621, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 622,
	623, 624, 0, 297, 298, 625, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	2284, 328, 0, 329, 626, 627, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 628, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 629, 630, 360, 0, 267, 0,
	0, 0, 0, 0, 361, 362, 363, 631, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	632, 633, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 634, 0, 635, 379, 0, 380, 381,
	382, 383, 384, 636, 637, 638, 461, 0, 385, 386,
	0, 387, 388, 389, 390, 0, 0, 0, 268, 391,
	392, 393, 395, 0, 0, 394, 639, 640, 0, 641,
	0, 396, 397, 0, 642, 0, 398, 399, 400, 0,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 643, 0, 412, 413,
	0, 0, 414, 0, 0, 0, 415, 416, 419, 0,
	0, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	0, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 0, 448, 0, 269, 0, 458, 459,
	0, 644, 460, 645, 462, 463, 0, 0, 464, 0,
	0, 0, 466, 467, 468, 0, 0, 469, 470, 646,
	0, 471, 0, 647, 472, 473, 465, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 648,
	485, 486, 487, 649, 488, 489, 490, 650, 491, 651,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 652, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 0, 524, 525, 526, 527, 653, 528,
	0, 529, 530, 536, 537, 531, 532, 538, 539, 540,
	541, 542, 0, 544, 545, 543, 546, 547, 548, 0,
	549, 550, 533, 534, 551, 552, 0, 553, 554, 555,
	556, 557, 558, 654, 0, 559, 0, 560, 561, 562,
	564, 535, 565, 570, 571, 655, 566, 567, 568, 569,
	656, 573, 574, 0, 575, 576, 0, 572, 563, 0,
	577, 578, 579, 580, 581, 582, 583, 354, 584, 0,
	585, 657, 658, 659, 660, 0, 594, 0, 586, 587,
	588, 661, 589, 662, 0, 590, 591, 592, 593, 0,
	595, 596, 0, 0, 597, 598, 599, 601, 602, 600,
	603, 0, 604, 0, 0, 605, 606, 607, 663, 664,
	665, 264, 609, 608, 610, 666, 0, 0, 0, 0,
	0, 611, 612, 667, 613, 614, 615, 0, 270, 272,
	271, 273, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 616, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 617, 618,
	0, 288, 619, 289, 620, 0, 621, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 622, 623, 624,
	0, 297, 298, 625, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 626, 627, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 628, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 629, 630, 360, 0, 267, 0, 0, 0,
	0, 0, 361, 362, 363, 631, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 632, 633,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 634, 0, 635, 379, 0, 380, 381, 382, 383,
	384, 2205, 637, 638, 461, 0, 385, 386, 0, 387,
	388, 389, 390, 0, 0, 0, 268, 391, 392, 393,
	395, 0, 0, 394, 639, 640, 0, 641, 0, 396,
	397, 0, 642, 0, 398, 399, 400, 0, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 643, 0, 412, 413, 0, 0,
	414, 0, 0, 0, 415, 416, 419, 0, 0, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 0, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 0, 448, 0, 269, 0, 458, 459, 0, 644,
	460, 645, 462, 463, 0, 0, 464, 0, 0, 0,
	466, 467, 468, 0, 0, 469, 470, 646, 0, 471,
	0, 647, 472, 473, 465, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 648, 485, 486,
	487, 649, 488, 489, 490, 650, 491, 651, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 652, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 0, 524, 525, 526, 527, 653, 528, 0, 529,
	530, 536, 537, 531, 532, 538, 539, 540, 541, 542,
	0, 544, 545, 543, 546, 547, 548, 0, 549, 550,
	533, 534, 551, 552, 0, 553, 554, 555, 556, 557,
	558, 654, 0, 559, 0, 560, 561, 562, 564, 535,
	565, 570, 571, 655, 566, 567, 568, 569, 656, 573,
	574, 0, 575, 576, 0, 572, 563, 0, 577, 578,
	579, 580, 581, 582, 583, 354, 584, 0, 585, 657,
	658, 659, 660, 0, 594, 0, 586, 587, 588, 661,
	589, 662, 0, 590, 591, 592, 593, 0, 595, 596,
	0, 0, 597, 598, 599, 601, 602, 600, 603, 0,
	604, 0, 0, 605, 606, 607, 663, 664, 665, 264,
	609, 608, 610, 666, 0, 0, 0, 0, 0, 611,
	612, 667, 613, 614, 615, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 616, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 617, 618, 0, 288,
	619, 289, 620, 0, 621, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 622, 623, 624, 0, 297,
	298, 625, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	626, 627, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 628,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	629, 630, 360, 0, 267, 0, 0, 0, 0, 0,
	361, 362, 363, 631, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 632, 633, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 634,
	0, 635, 379, 0, 380, 381, 382, 383, 384, 2014,
	637, 638, 461, 0, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 268, 391, 392, 393, 395, 0,
	0, 394, 639, 640, 0, 641, 0, 396, 397, 0,
	642, 0, 398, 399, 400, 0, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 643, 0, 412, 413, 0, 0, 414, 0,
	0, 0, 415, 416, 419, 0, 0, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 0, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 0,
	448, 0, 269, 0, 458, 459, 0, 644, 460, 645,
	462, 463, 0, 0, 464, 0, 0, 0, 466, 467,
	468, 0, 0, 469, 470, 646, 0, 471, 0, 647,
	472, 473, 465, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 648, 485, 486, 487, 649,
	488, 489, 490, 650, 491, 651, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 652,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 0,
	524, 525, 526, 527, 653, 528, 0, 529, 530, 536,
	537, 531, 532, 538, 539, 540, 541, 542, 0, 544,
	545, 543, 546, 547, 548, 0, 549, 550, 533, 534,
	551, 552, 0, 553, 554, 555, 556, 557, 558, 654,
	0, 559, 0, 560, 561, 562, 564, 535, 565, 570,
	571, 655, 566, 567, 568, 569, 656, 573, 574, 0,
	575, 576, 0, 572, 563, 0, 577, 578, 579, 580,
	581, 582, 583, 354, 584, 0, 585, 657, 658, 659,
	660, 0, 594, 0, 586, 587, 588, 661, 589, 662,
	0, 590, 591, 592, 593, 0, 595, 596, 0, 0,
	597, 598, 599, 601, 602, 600, 603, 0, 604, 0,
	0, 605, 606, 607, 663, 664, 665, 264, 609, 608,
	610, 666, 0, 0, 0, 0, 0, 611, 612, 667,
	613, 614, 615, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	616, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 617, 618, 0, 288, 619, 289,
	620, 0, 621, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 622, 623, 624, 0, 297, 298, 625,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 626, 627,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 628, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 629, 630,
	360, 0, 267, 0, 0, 0, 0, 0, 361, 362,
	363, 631, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 632, 633, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 634, 0, 635,
	379, 0, 380, 381, 382, 383, 384, 2008, 637, 638,
	461, 0, 385, 386, 0, 387, 388, 389, 390, 0,
	0, 0, 268, 391, 392, 393, 395, 0, 0, 394,
	639, 640, 0, 641, 0, 396, 397, 0, 642, 0,
	398, 399, 400, 0, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	643, 0, 412, 413, 0, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 0, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 0, 448, 0,
	269, 0, 458, 459, 0, 644, 460, 645, 462, 463,
	0, 0, 464, 0, 0, 0, 466, 467, 468, 0,
	0, 469, 470, 646, 0, 471, 0, 647, 472, 473,
	465, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 648, 485, 486, 487, 649, 488, 489,
	490, 650, 491, 651, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 652, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 0, 524, 525,
	526, 527, 653, 528, 0, 529, 530, 536, 537, 531,
	532, 538, 539, 540, 541, 542, 0, 544, 545, 543,
	546, 547, 548, 0, 549, 550, 533, 534, 551, 552,
	0, 553, 554, 555, 556, 557, 558, 654, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 655,
	566, 567, 568, 569, 656, 573, 574, 0, 575, 576,
	0, 572, 563, 0, 577, 578, 579, 580, 581, 582,
	583, 354, 584, 0, 585, 657, 658, 659, 660, 0,
	594, 0, 586, 587, 588, 661, 589, 662, 0, 590,
	591, 592, 593, 0, 595, 596, 0, 0, 597, 598,
	599, 601, 602, 600, 603, 0, 604, 0, 0, 605,
	606, 607, 663, 664, 665, 0, 609, 608, 610, 666,
	867, 0, 264, 0, 0, 611, 612, 667, 613, 614,
	615, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 616, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 617,
	618, 0, 288, 619, 289, 620, 0, 621, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 622, 623,
	624, 0, 297, 298, 625, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 626, 627, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 628, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 629, 630, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 631, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 632,
	633, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 634, 0, 635, 379, 0, 380, 381, 382,
	383, 384, 636, 637, 638, 461, 0, 385, 386, 0,
	387, 388, 389, 390, 0, 0, 0, 0, 391, 392,
	393, 395, 0, 0, 394, 639, 640, 0, 641, 866,
	396, 397, 0, 642, 0, 398, 399, 400, 0, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 643, 0, 412, 413, 0,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 0,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 0, 448, 0, 0, 0, 458, 459, 0,
	644, 460, 645, 462, 463, 0, 0, 464, 0, 0,
	0, 466, 467, 468, 0, 0, 469, 470, 646, 0,
	471, 0, 647, 472, 473, 465, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 648, 485,
	486, 487, 649, 488, 489, 490, 650, 491, 651, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 652, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 0, 524, 525, 526, 527, 653, 528, 0,
	529, 530, 536, 537, 531, 532, 538, 539, 540, 541,
	542, 0, 544, 545, 543, 546, 547, 548, 0, 549,
	550, 533, 534, 551, 552, 0, 553, 554, 555, 556,
	557, 558, 654, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 655, 566, 567, 568, 569, 656,
	573, 574, 0, 575, 576, 0, 572, 563, 865, 577,
	578, 579, 580, 581, 582, 583, 354, 584, 0, 585,
	657, 658, 659, 660, 0, 594, 0, 586, 587, 588,
	661, 589, 662, 0, 590, 591, 592, 593, 0, 595,
	596, 0, 0, 597, 598, 599, 601, 602, 600, 603,
	0, 604, 0, 0, 605, 606, 607, 663, 664, 665,
	264, 609, 608, 610, 666, 0, 0, 0, 0, 0,
	611, 612, 667, 613, 614, 615, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 616, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 617, 618, 0,
	288, 619, 289, 620, 0, 621, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 622, 623, 624, 0,
	297, 298, 625, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 626, 627, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	628, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 629, 630, 360, 0, 2948, 0, 0, 0, 0,
	0, 361, 362, 363, 631, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 632, 633, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	634, 0, 635, 379, 0, 380, 381, 382, 383, 384,
	636, 637, 638, 461, 0, 385, 386, 0, 387, 388,
	389, 390, 0, 0, 0, 0, 391, 392, 393, 395,
	0, 0, 394, 639, 640, 0, 641, 0, 396, 397,
	0, 642, 0, 398, 399, 400, 0, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 643, 0, 412, 413, 0, 0, 414,
	0, 0, 0, 415, 416, 419, 0, 0, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 0, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	0, 448, 0, 0, 0, 458, 459, 0, 644, 460,
	645, 462, 463, 0, 0, 464, 0, 0, 0, 466,
	467, 468, 0, 0, 469, 470, 646, 0, 471, 0,
	647, 472, 473, 465, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 648, 485, 486, 487,
	649, 488, 489, 490, 650, 491, 651, 492, 493, 4057,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	652, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	0, 524, 525, 526, 527, 653, 528, 0, 529, 530,
	536, 537, 531, 532, 538, 539, 540, 541, 542, 0,
	544, 545, 543, 546, 547, 548, 0, 549, 550, 533,
	534, 551, 552, 0, 553, 554, 555, 556, 557, 558,
	654, 0, 559, 0, 560, 561, 562, 564, 535, 565,
	570, 571, 655, 566, 567, 568, 569, 656, 573, 574,
	0, 575, 576, 0, 572, 563, 0, 577, 578, 579,
	580, 581, 582, 583, 354, 584, 0, 585, 657, 658,
	659, 660, 0, 594, 0, 586, 587, 588, 661, 589,
	662, 0, 590, 591, 592, 593, 0, 595, 596, 0,
	0, 597, 598, 599, 601, 602, 600, 603, 0, 604,
	0, 0, 605, 606, 607, 663, 664, 665, 264, 609,
	608, 610, 666, 0, 0, 0, 0, 0, 611, 612,
	667, 613, 614, 615, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 616, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 617, 618, 0, 288, 619,
	289, 620, 0, 621, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 622, 623, 624, 0, 297, 298,
	625, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 626,
	627, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 628, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 629,
	630, 360, 0, 0, 0, 0, 0, 0, 0, 361,
	362, 363, 631, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 632, 633, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 634, 0,
	635, 379, 0, 380, 381, 382, 383, 384, 636, 637,
	638, 461, 0, 385, 386, 0, 387, 388, 389, 390,
	0, 0, 0, 0, 391, 392, 393, 395, 0, 0,
	394, 639, 640, 0, 641, 0, 396, 397, 0, 642,
	0, 398, 399, 400, 0, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 643, 0, 412, 413, 0, 0, 414, 0, 0,
	0, 415, 416, 419, 0, 0, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 0, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 3961, 448,
	0, 0, 0, 458, 459, 0, 644, 460, 645, 462,
	463, 0, 0, 464, 0, 0, 0, 466, 467, 468,
	0, 0, 469, 470, 646, 0, 471, 0, 647, 472,
	473, 465, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 648, 485, 486, 487, 649, 488,
	489, 490, 650, 491, 651, 492, 493, 3963, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 652, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 0, 524,
	525, 526, 527, 653, 528, 0, 529, 530, 536, 537,
	531, 532, 538, 539, 540, 541, 542, 0, 544, 545,
	543, 546, 547, 548, 0, 549, 550, 533, 534, 551,
	552, 0, 553, 554, 555, 556, 557, 558, 654, 0,
	559, 0, 560, 561, 562, 564, 535, 565, 570, 571,
	655, 566, 567, 568, 569, 656, 573, 574, 0, 575,
	576, 0, 572, 563, 0, 577, 578, 579, 580, 581,
	582, 583, 354, 584, 0, 585, 657, 658, 659, 660,
	0, 594, 0, 586, 587, 588, 661, 589, 662, 0,
	590, 591, 592, 593, 0, 595, 596, 0, 0, 597,
	598, 599, 601, 602, 600, 603, 0, 604, 0, 0,
	605, 606, 607, 663, 664, 665, 0, 609, 608, 610,
	666, 756, 0, 264, 0, 0, 611, 612, 667, 613,
	614, 615, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 616, 0, 0, 0,
	0, 280, 281, 1316, 282, 283, 284, 285, 286, 287,
	617, 618, 0, 288, 619, 289, 620, 0, 621, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 622,
	623, 1314, 0, 297, 298, 625, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 626, 627, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 628, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 629, 630, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 631, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	632, 633, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 634, 0, 635, 379, 0, 380, 381,
	382, 383, 384, 636, 637, 638, 461, 0, 385, 386,
	0, 387, 388, 389, 390, 0, 0, 0, 0, 391,
	392, 393, 395, 0, 0, 394, 639, 640, 0, 641,
	0, 396, 397, 0, 642, 0, 398, 399, 400, 0,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 643, 0, 412, 413,
	0, 0, 414, 0, 0, 0, 415, 416, 419, 0,
	0, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 757,
	0, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 0, 448, 0, 0, 0, 458, 459,
	0, 644, 460, 645, 462, 463, 0, 0, 464, 0,
	0, 0, 466, 467, 468, 0, 0, 469, 470, 646,
	0, 471, 0, 647, 472, 473, 465, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 648,
	485, 486, 487, 649, 488, 489, 490, 650, 491, 651,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 652, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 0, 524, 525, 526, 527, 653, 528,
	0, 529, 530, 536, 537, 531, 532, 753, 539, 540,
	541, 542, 0, 544, 545, 543, 546, 1317, 548, 0,
	549, 550, 533, 534, 551, 552, 0, 553, 554, 555,
	556, 557, 558, 654, 0, 559, 0, 560, 561, 562,
	564, 535, 565, 570, 571, 655, 566, 567, 568, 569,
	656, 573, 574, 0, 575, 576, 0, 572, 563, 0,
	577, 578, 579, 580, 581, 582, 583, 354, 584, 0,
	585, 752, 658, 659, 660, 0, 594, 0, 586, 587,
	588, 661, 589, 662, 0, 590, 591, 592, 593, 0,
	595, 596, 0, 0, 597, 598, 599, 601, 602, 600,
	603, 0, 604, 0, 0, 605, 606, 607, 663, 664,
	665, 0, 609, 608, 610, 666, 756, 0, 264, 0,
	0, 611, 612, 667, 613, 614, 615, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 616, 0, 0, 0, 0, 280, 281, 1316, 282,
	283, 284, 285, 286, 287, 617, 618, 0, 288, 619,
	289, 620, 0, 621, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 622, 623, 1314, 0, 297, 298,
	625, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 626,
	627, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 628, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 629,
	630, 360, 0, 0, 0, 0, 0, 0, 0, 361,
	362, 363, 631, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 632, 633, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 634, 0,
	635, 379, 0, 380, 381, 382, 383, 384, 636, 637,
	638, 461, 0, 385, 386, 0, 387, 388, 389, 390,
	0, 0, 0, 0, 391, 392, 393, 395, 0, 0,
	394, 639, 640, 0, 641, 0, 396, 397, 0, 642,
	0, 398, 399, 400, 0, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 643, 0, 412, 413, 0, 0, 414, 0, 0,
	0, 415, 416, 419, 0, 0, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 757, 0, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 0, 448,
	0, 0, 0, 458, 459, 0, 644, 460, 645, 462,
	463, 0, 0, 464, 0, 0, 0, 466, 467, 468,
	0, 0, 469, 470, 646, 0, 471, 0, 647, 472,
	473, 465, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 648, 485, 486, 487, 649, 488,
	489, 490, 650, 491, 651, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 652, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 0, 524,
	525, 526, 527, 653, 528, 0, 529, 530, 536, 537,
	531, 532, 753, 539, 540, 541, 542, 0, 544, 545,
	543, 546, 1317, 548, 0, 549, 550, 533, 534, 551,
	552, 0, 553, 554, 555, 556, 557, 558, 654, 0,
	559, 0, 560, 561, 562, 564, 535, 565, 570, 571,
	655, 566, 567, 568, 569, 656, 573, 574, 0, 575,
	576, 0, 572, 563, 0, 577, 578, 579, 580, 581,
	582, 583, 354, 584, 0, 585, 752, 658, 659, 660,
	0, 594, 0, 586, 1315, 588, 661, 589, 662, 0,
	590, 591, 592, 593, 0, 595, 596, 0, 0, 597,
	598, 599, 601, 602, 600, 603, 0, 604, 0, 0,
	605, 606, 607, 663, 664, 665, 0, 609, 608, 610,
	666, 678, 0, 264, 0, 0, 611, 612, 667, 613,
	614, 615, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 677, 278,
	279, 0, 0, 0, 0, 0, 616, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	617, 618, 0, 288, 619, 289, 620, 0, 621, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 622,
	623, 624, 0, 297, 298, 625, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 626, 627, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 628, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 629, 630, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 631, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	632, 633, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 634, 0, 635, 379, 0, 380, 381,
	382, 383, 384, 636, 637, 638, 461, 0, 385, 386,
	0, 387, 388, 389, 390, 0, 0, 0, 0, 391,
	392, 393, 395, 0, 0, 394, 639, 640, 0, 641,
	0, 396, 397, 0, 642, 0, 398, 399, 400, 0,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 643, 0, 412, 413,
	0, 0, 414, 0, 0, 0, 415, 416, 419, 0,
	0, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	0, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 0, 448, 0, 0, 0, 458, 459,
	0, 644, 460, 645, 462, 463, 0, 0, 464, 0,
	0, 0, 466, 467, 468, 0, 0, 469, 470, 646,
	0, 471, 0, 647, 472, 473, 465, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 648,
	485, 486, 487, 649, 488, 489, 490, 650, 491, 651,
	676, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 652, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 0, 524, 525, 526, 527, 653, 528,
	0, 529, 530, 536, 537, 531, 532, 538, 539, 540,
	541, 542, 0, 544, 545, 543, 546, 547, 548, 0,
	549, 550, 533, 534, 551, 552, 0, 553, 554, 555,
	556, 557, 558, 654, 0, 559, 0, 560, 561, 562,
	564, 535, 565, 570, 571, 655, 566, 567, 568, 569,
	656, 573, 574, 0, 575, 576, 0, 572, 563, 0,
	577, 578, 579, 580, 581, 582, 583, 354, 584, 0,
	585, 657, 658, 659, 660, 0, 594, 0, 586, 587,
	588, 661, 589, 662, 0, 590, 591, 592, 593, 0,
	595, 596, 0, 0, 597, 598, 599, 601, 602, 600,
	603, 0, 604, 0, 0, 605, 606, 607, 663, 664,
	665, 0, 609, 608, 610, 666, 264, 2935, 0, 0,
	0, 611, 612, 667, 613, 614, 615, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 616,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 617, 618, 0, 288, 619, 289, 620,
	0, 621, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 622, 623, 624, 0, 297, 298, 625, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 626, 627, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 628, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 629, 630, 360,
	0, 0, 0, 0, 0, 0, 0, 361, 362, 363,
	631, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 632, 633, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 634, 0, 635, 379,
	0, 380, 381, 382, 383, 384, 636, 637, 638, 461,
	0, 385, 386, 0, 387, 388, 389, 390, 0, 0,
	0, 0, 391, 392, 393, 395, 0, 0, 394, 639,
	640, 0, 641, 0, 396, 397, 0, 642, 0, 398,
	399, 400, 0, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 643,
	0, 412, 413, 0, 0, 414, 0, 0, 0, 415,
	416, 419, 0, 0, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 0, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 0, 448, 0, 0,
	0, 458, 459, 0, 644, 460, 645, 462, 463, 0,
	0, 464, 0, 0, 0, 466, 467, 468, 0, 0,
	469, 470, 646, 0, 471, 0, 647, 472, 473, 465,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 648, 485, 486, 487, 649, 488, 489, 490,
	650, 491, 651, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 652, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 0, 524, 525, 526,
	527, 653, 528, 0, 529, 530, 536, 537, 531, 532,
	538, 539, 540, 541, 542, 0, 544, 545, 543, 546,
	547, 548, 0, 549, 550, 533, 534, 551, 552, 0,
	553, 554, 555, 556, 557, 558, 654, 0, 559, 0,
	560, 561, 562, 564, 535, 565, 570, 571, 655, 566,
	567, 568, 569, 656, 573, 574, 0, 575, 576, 0,
	572, 563, 0, 577, 578, 579, 580, 581, 582, 583,
	354, 584, 0, 585, 657, 658, 659, 660, 0, 594,
	0, 586, 587, 588, 661, 589, 662, 0, 590, 591,
	592, 593, 0, 595, 596, 0, 0, 597, 598, 599,
	601, 602, 600, 603, 0, 604, 0, 0, 605, 606,
	607, 663, 664, 665, 0, 609, 608, 610, 666, 264,
	4067, 0, 0, 0, 611, 612, 667, 613, 614, 615,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 616, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 617, 618, 0, 288,
	619, 289, 620, 0, 621, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 622, 623, 624, 0, 297,
	298, 625, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	626, 627, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 628,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	629, 630, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 631, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 632, 633, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 634,
	0, 635, 379, 0, 380, 381, 382, 383, 384, 636,
	637, 638, 461, 0, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 0, 391, 392, 393, 395, 0,
	0, 394, 639, 640, 0, 641, 0, 396, 397, 0,
	642, 0, 398, 399, 400, 0, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 643, 0, 412, 413, 0, 0, 414, 0,
	0, 0, 415, 416, 419, 0, 0, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 0, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 0,
	448, 0, 0, 0, 458, 459, 0, 644, 460, 645,
	462, 463, 0, 0, 464, 0, 0, 0, 466, 467,
	468, 0, 0, 469, 470, 646, 0, 471, 0, 647,
	472, 473, 465, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 648, 485, 486, 487, 649,
	488, 489, 490, 650, 491, 651, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 652,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 0,
	524, 525, 526, 527, 653, 528, 0, 529, 530, 536,
	537, 531, 532, 538, 539, 540, 541, 542, 0, 544,
	545, 543, 546, 547, 548, 0, 549, 550, 533, 534,
	551, 552, 0, 553, 554, 555, 556, 557, 558, 654,
	0, 559, 0, 560, 561, 562, 564, 535, 565, 570,
	571, 655, 566, 567, 568, 569, 656, 573, 574, 0,
	575, 576, 0, 572, 563, 0, 577, 578, 579, 580,
	581, 582, 583, 354, 584, 0, 585, 657, 658, 659,
	660, 0, 594, 0, 586, 587, 588, 661, 589, 662,
	0, 590, 591, 592, 593, 0, 595, 596, 0, 0,
	597, 598, 599, 601, 602, 600, 603, 0, 604, 0,
	0, 605, 606, 607, 663, 664, 665, 264, 609, 608,
	610, 666, 0, 0, 0, 0, 0, 611, 612, 667,
	613, 614, 615, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	616, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 617, 618, 0, 288, 619, 289,
	620, 0, 621, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 622, 623, 624, 0, 297, 298, 625,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 626, 627,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 628, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 629, 630,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 631, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 632, 633, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 634, 0, 635,
	379, 0, 380, 381, 382, 383, 384, 636, 637, 638,
	461, 0, 385, 386, 0, 387, 388, 389, 390, 0,
	0, 0, 0, 391, 392, 393, 395, 0, 0, 394,
	639, 640, 0, 641, 0, 396, 397, 0, 642, 0,
	398, 399, 400, 0, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	643, 0, 412, 413, 0, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 0, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 0, 448, 0,
	0, 0, 458, 459, 0, 644, 460, 645, 462, 463,
	0, 0, 464, 0, 0, 0, 466, 467, 468, 0,
	0, 469, 470, 646, 0, 471, 0, 647, 472, 473,
	465, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 648, 485, 486, 487, 649, 488, 489,
	490, 650, 491, 651, 492, 493, 4338, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 652, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 0, 524, 525,
	526, 527, 653, 528, 0, 529, 530, 536, 537, 531,
	532, 538, 539, 540, 541, 542, 0, 544, 545, 543,
	546, 547, 548, 0, 549, 550, 533, 534, 551, 552,
	0, 553, 554, 555, 556, 557, 558, 654, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 655,
	566, 567, 568, 569, 656, 573, 574, 0, 575, 576,
	0, 572, 563, 0, 577, 578, 579, 580, 581, 582,
	583, 354, 584, 0, 585, 657, 658, 659, 660, 0,
	594, 0, 586, 587, 588, 661, 589, 662, 0, 590,
	591, 592, 593, 0, 595, 596, 0, 0, 597, 598,
	599, 601, 602, 600, 603, 0, 604, 0, 0, 605,
	606, 607, 663, 664, 665, 264, 609, 608, 610, 666,
	0, 0, 0, 0, 0, 611, 612, 667, 613, 614,
	615, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 616, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 617, 618, 0, 288, 619, 289, 620, 0,
	621, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 622, 623, 624, 0, 297, 298, 625, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 626, 627, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 628, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 629, 630, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 631,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 632, 633, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 634, 0, 635, 379, 0,
	380, 381, 382, 383, 384, 636, 637, 638, 461, 0,
	385, 386, 0, 387, 388, 389, 390, 0, 0, 0,
	0, 391, 392, 393, 395, 0, 0, 394, 639, 640,
	0, 641, 0, 396, 397, 0, 642, 0, 398, 399,
	400, 0, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 643, 0,
	412, 413, 0, 0, 414, 0, 0, 0, 415, 416,
	419, 0, 0, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 0, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 0, 448, 0, 0, 0,
	458, 459, 0, 644, 460, 645, 462, 463, 0, 0,
	464, 0, 0, 0, 466, 467, 468, 0, 0, 469,
	470, 646, 0, 471, 0, 647, 472, 473, 465, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 648, 485, 486, 487, 649, 488, 489, 490, 650,
	491, 651, 492, 493, 4333, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 652, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 0, 524, 525, 526, 527,
	653, 528, 0, 529, 530, 536, 537, 531, 532, 538,
	539, 540, 541, 542, 0, 544, 545, 543, 546, 547,
	548, 0, 549, 550, 533, 534, 551, 552, 0, 553,
	554, 555, 556, 557, 558, 654, 0, 559, 0, 560,
	561, 562, 564, 535, 565, 570, 571, 655, 566, 567,
	568, 569, 656, 573, 574, 0, 575, 576, 0, 572,
	563, 0, 577, 578, 579, 580, 581, 582, 583, 354,
	584, 0, 585, 657, 658, 659, 660, 0, 594, 0,
	586, 587, 588, 661, 589, 662, 0, 590, 591, 592,
	593, 0, 595, 596, 0, 0, 597, 598, 599, 601,
	602, 600, 603, 0, 604, 0, 0, 605, 606, 607,
	663, 664, 665, 264, 609, 608, 610, 666, 0, 0,
	0, 0, 0, 611, 612, 667, 613, 614, 615, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 616, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	617, 618, 0, 288, 619, 289, 620, 0, 621, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 622,
	623, 624, 0, 297, 298, 625, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 626, 627, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 628, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 629, 630, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 631, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	632, 633, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 634, 0, 635, 379, 0, 380, 381,
	382, 383, 384, 636, 637, 638, 461, 0, 385, 386,
	0, 387, 388, 389, 390, 0, 0, 0, 0, 391,
	392, 393, 395, 0, 0, 394, 639, 640, 0, 641,
	0, 396, 397, 0, 642, 0, 398, 399, 400, 0,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 643, 0, 412, 413,
	0, 0, 414, 0, 0, 0, 415, 416, 419, 0,
	0, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	0, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 0, 448, 0, 0, 0, 458, 459,
	0, 644, 460, 645, 462, 463, 0, 0, 464, 0,
	0, 0, 466, 467, 468, 0, 0, 469, 470, 646,
	0, 471, 0, 647, 472, 473, 465, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 648,
	485, 486, 487, 649, 488, 489, 490, 650, 491, 651,
	492, 493, 3958, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 652, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 0, 524, 525, 526, 527, 653, 528,
	0, 529, 530, 536, 537, 531, 532, 538, 539, 540,
	541, 542, 0, 544, 545, 543, 546, 547, 548, 0,
	549, 550, 533, 534, 551, 552, 0, 553, 554, 555,
	556, 557, 558, 654, 0, 559, 0, 560, 561, 562,
	564, 535, 565, 570, 571, 655, 566, 567, 568, 569,
	656, 573, 574, 0, 575, 576, 0, 572, 563, 0,
	577, 578, 579, 580, 581, 582, 583, 354, 584, 0,
	585, 657, 658, 659, 660, 0, 594, 0, 586, 587,
	588, 661, 589, 662, 0, 590, 591, 592, 593, 0,
	595, 596, 0, 0, 597, 598, 599, 601, 602, 600,
	603, 0, 604, 0, 0, 605, 606, 607, 663, 664,
	665, 264, 609, 608, 610, 666, 0, 0, 0, 0,
	0, 611, 612, 667, 613, 614, 615, 0, 270, 272,
	271, 273, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 616, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 617, 618,
	0, 288, 619, 289, 620, 0, 621, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 622, 623, 624,
	0, 297, 298, 625, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 626, 627, 3737, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 628, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 629, 630, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 631, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 632, 633,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 634, 0, 635, 379, 0, 380, 381, 382, 383,
	384, 636, 637, 638, 461, 0, 385, 386, 0, 387,
	388, 389, 390, 0, 0, 0, 0, 391, 392, 393,
	395, 0, 0, 394, 639, 640, 0, 641, 0, 396,
	397, 0, 642, 0, 398, 399, 400, 0, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 643, 0, 412, 413, 0, 0,
	414, 0, 0, 0, 415, 416, 419, 0, 0, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 0, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 0, 448, 0, 0, 0, 458, 459, 0, 644,
	460, 645, 462, 463, 0, 0, 464, 0, 0, 0,
	466, 467, 468, 0, 0, 469, 470, 646, 0, 471,
	0, 647, 472, 473, 465, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 648, 485, 486,
	487, 649, 488, 489, 490, 650, 491, 651, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 652, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 0, 524, 525, 526, 527, 653, 528, 0, 529,
	530, 536, 537, 531, 532, 538, 539, 540, 541, 542,
	0, 544, 545, 543, 546, 547, 548, 0, 549, 550,
	533, 534, 551, 552, 0, 553, 554, 555, 556, 557,
	558, 654, 0, 559, 0, 560, 561, 562, 564, 535,
	565, 570, 571, 655, 566, 567, 568, 569, 656, 573,
	574, 0, 575, 576, 0, 572, 563, 0, 577, 578,
	579, 580, 581, 582, 583, 354, 584, 0, 585, 657,
	658, 659, 660, 0, 594, 0, 586, 587, 588, 661,
	589, 662, 0, 590, 591, 592, 593, 0, 595, 596,
	0, 0, 597, 598, 599, 601, 602, 600, 603, 0,
	604, 0, 0, 605, 606, 607, 663, 664, 665, 264,
	609, 608, 610, 666, 0, 0, 0, 0, 0, 611,
	612, 667, 613, 614, 615, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 616, 0, 2628, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 617, 618, 0, 288,
	619, 289, 620, 0, 621, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 622, 623, 624, 0, 297,
	298, 625, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	626, 627, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 628,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	629, 630, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 631, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 632, 633, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 634,
	0, 635, 379, 0, 380, 381, 382, 383, 384, 636,
	637, 638, 461, 0, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 0, 391, 392, 393, 395, 0,
	0, 394, 639, 640, 0, 641, 0, 396, 397, 0,
	642, 0, 398, 399, 400, 0, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 643, 0, 412, 413, 0, 0, 414, 0,
	0, 0, 415, 416, 419, 0, 0, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 0, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 0,
	448, 0, 0, 0, 458, 459, 0, 644, 460, 645,
	462, 463, 0, 0, 464, 0, 0, 0, 466, 467,
	468, 0, 0, 469, 470, 646, 0, 471, 0, 647,
	472, 473, 465, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 648, 485, 486, 487, 649,
	488, 489, 490, 650, 491, 651, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 652,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 0,
	524, 525, 526, 527, 653, 528, 0, 529, 530, 536,
	537, 531, 532, 538, 539, 540, 541, 542, 0, 544,
	545, 543, 546, 547, 548, 0, 549, 550, 533, 534,
	551, 552, 0, 553, 554, 555, 556, 557, 558, 654,
	0, 559, 0, 560, 561, 562, 564, 535, 565, 570,
	571, 655, 566, 567, 568, 569, 656, 573, 574, 0,
	575, 576, 0, 572, 563, 0, 577, 578, 579, 580,
	581, 582, 583, 354, 584, 0, 585, 657, 658, 659,
	660, 0, 594, 0, 586, 587, 588, 661, 589, 662,
	0, 590, 591, 592, 593, 0, 595, 596, 0, 0,
	597, 598, 599, 601, 602, 600, 603, 0, 604, 0,
	0, 605, 606, 607, 663, 664, 665, 0, 609, 608,
	610, 666, 264, 2935, 0, 0, 0, 611, 612, 667,
	613, 614, 615, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 616, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 617,
	618, 0, 288, 619, 289, 620, 0, 621, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 622, 623,
	624, 0, 297, 298, 625, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 626, 627, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 628, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 629, 630, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 631, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 632,
	633, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 634, 0, 635, 379, 0, 380, 381, 382,
	383, 384, 636, 637, 638, 461, 0, 385, 386, 0,
	387, 388, 389, 390, 0, 0, 0, 0, 391, 392,
	393, 395, 0, 0, 394, 639, 640, 0, 641, 0,
	396, 397, 0, 642, 0, 398, 399, 400, 0, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 643, 0, 412, 413, 0,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 0,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 0, 448, 0, 0, 0, 458, 459, 0,
	644, 460, 645, 462, 463, 0, 0, 464, 0, 0,
	0, 466, 467, 2932, 0, 0, 469, 470, 646, 0,
	471, 0, 647, 472, 473, 465, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 648, 485,
	486, 487, 649, 488, 489, 490, 650, 491, 651, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 652, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 0, 524, 525, 526, 527, 653, 528, 0,
	529, 530, 536, 537, 531, 532, 538, 539, 540, 541,
	542, 0, 544, 545, 543, 546, 547, 548, 0, 549,
	550, 533, 534, 551, 552, 0, 553, 554, 555, 556,
	557, 558, 654, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 655, 566, 567, 568, 569, 656,
	573, 574, 0, 575, 576, 0, 572, 563, 0, 577,
	578, 579, 580, 581, 582, 583, 354, 584, 0, 585,
	657, 658, 659, 660, 0, 594, 0, 586, 587, 588,
	661, 589, 662, 0, 590, 591, 592, 593, 0, 595,
	596, 0, 0, 597, 598, 599, 601, 602, 600, 603,
	0, 604, 0, 0, 605, 606, 607, 663, 664, 665,
	264, 609, 608, 610, 666, 0, 0, 0, 0, 0,
	611, 612, 667, 613, 614, 615, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 2261, 278, 279, 0, 0,
	0, 0, 0, 616, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 617, 618, 0,
	288, 619, 289, 620, 0, 621, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 622, 623, 624, 0,
	297, 298, 625, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 626, 627, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	628, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 629, 630, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 631, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 632, 633, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	634, 0, 635, 379, 0, 380, 381, 382, 383, 384,
	636, 637, 638, 461, 0, 385, 386, 0, 387, 388,
	389, 390, 0, 0, 0, 0, 391, 392, 393, 395,
	0, 0, 394, 639, 640, 0, 641, 0, 396, 397,
	0, 642, 0, 398, 399, 400, 0, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 643, 0, 412, 413, 0, 0, 414,
	0, 0, 0, 415, 416, 419, 0, 0, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 0, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	0, 448, 0, 0, 0, 458, 459, 0, 644, 460,
	645, 462, 463, 0, 0, 464, 0, 0, 0, 466,
	467, 468, 0, 0, 469, 470, 646, 0, 471, 0,
	647, 472, 473, 465, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 648, 485, 486, 487,
	649, 488, 489, 490, 650, 491, 651, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	652, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	0, 524, 525, 526, 527, 653, 528, 0, 529, 530,
	536, 537, 531, 532, 538, 539, 540, 541, 542, 0,
	544, 545, 543, 546, 547, 548, 0, 549, 550, 533,
	534, 551, 552, 0, 553, 554, 555, 556, 557, 558,
	654, 0, 559, 0, 560, 561, 562, 564, 535, 565,
	570, 571, 655, 566, 567, 568, 569, 656, 573, 574,
	0, 575, 576, 0, 572, 563, 0, 577, 578, 579,
	580, 581, 582, 583, 354, 584, 0, 585, 657, 658,
	659, 660, 0, 594, 0, 586, 587, 588, 661, 589,
	662, 0, 590, 591, 592, 593, 0, 595, 596, 0,
	0, 597, 598, 599, 601, 602, 600, 603, 0, 604,
	0, 0, 605, 606, 607, 663, 664, 665, 0, 609,
	608, 610, 666, 2249, 0, 264, 0, 0, 611, 612,
	667, 613, 614, 615, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 616, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 617, 618, 0, 288, 619, 289, 620, 0,
	621, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 622, 623, 624, 0, 297, 298, 625, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 626, 627, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 628, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 629, 630, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 631,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 632, 633, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 634, 0, 635, 379, 0,
	380, 381, 382, 383, 384, 636, 637, 638, 461, 0,
	385, 386, 0, 387, 388, 389, 390, 0, 0, 0,
	0, 391, 392, 393, 395, 0, 0, 394, 639, 640,
	0, 641, 0, 396, 397, 0, 642, 0, 398, 399,
	400, 0, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 643, 0,
	412, 413, 0, 0, 414, 0, 0, 0, 415, 416,
	419, 0, 0, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 0, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 0, 448, 0, 0, 0,
	458, 459, 0, 644, 460, 645, 462, 463, 0, 0,
	464, 0, 0, 0, 466, 467, 468, 0, 0, 469,
	470, 646, 0, 471, 0, 647, 472, 473, 465, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 648, 485, 486, 487, 649, 488, 489, 490, 650,
	491, 651, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 652, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 0, 524, 525, 526, 527,
	653, 528, 0, 529, 530, 536, 537, 531, 532, 538,
	539, 540, 541, 542, 0, 544, 545, 543, 546, 547,
	548, 0, 549, 550, 533, 534, 551, 552, 0, 553,
	554, 555, 556, 557, 558, 654, 0, 559, 0, 560,
	561, 562, 564, 535, 565, 570, 571, 655, 566, 567,
	568, 569, 656, 573, 574, 0, 575, 576, 0, 572,
	563, 0, 577, 578, 579, 580, 581, 582, 583, 354,
	584, 0, 585, 657, 658, 659, 660, 0, 594, 0,
	586, 587, 588, 661, 589, 662, 0, 590, 591, 592,
	593, 0, 595, 596, 0, 0, 597, 598, 599, 601,
	602, 600, 603, 0, 604, 0, 0, 605, 606, 607,
	663, 664, 665, 0, 609, 608, 610, 666, 756, 0,
	264, 0, 0, 611, 612, 667, 613, 614, 615, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 616, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 617, 618, 0,
	288, 619, 289, 620, 0, 621, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 622, 623, 624, 0,
	297, 746, 625, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 626, 627, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	628, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 629, 630, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 631, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 632, 633, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	634, 0, 635, 379, 0, 380, 381, 382, 383, 384,
	636, 637, 638, 461, 0, 385, 386, 0, 387, 388,
	389, 390, 0, 0, 0, 0, 391, 392, 393, 395,
	0, 0, 394, 639, 640, 0, 641, 0, 396, 397,
	0, 642, 0, 398, 399, 400, 0, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 643, 0, 412, 413, 0, 0, 414,
	0, 0, 0, 415, 416, 419, 0, 0, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 757, 0, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	0, 448, 0, 0, 0, 458, 459, 0, 644, 460,
	645, 462, 463, 0, 0, 464, 0, 0, 0, 466,
	467, 468, 0, 0, 469, 470, 646, 0, 471, 0,
	647, 472, 473, 465, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 648, 485, 486, 487,
	649, 488, 489, 490, 650, 491, 651, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	652, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	0, 524, 525, 526, 527, 653, 528, 0, 529, 530,
	536, 537, 531, 532, 753, 539, 540, 541, 542, 0,
	544, 545, 543, 546, 1574, 548, 0, 549, 550, 533,
	534, 551, 552, 0, 553, 554, 555, 556, 557, 558,
	654, 0, 559, 0, 560, 561, 562, 564, 535, 565,
	570, 571, 655, 566, 567, 568, 569, 656, 573, 574,
	0, 575, 576, 0, 572, 563, 0, 577, 578, 579,
	580, 581, 582, 583, 354, 584, 0, 585, 752, 658,
	659, 660, 0, 594, 0, 586, 587, 588, 661, 589,
	662, 0, 590, 591, 592, 593, 0, 595, 596, 0,
	0, 597, 598, 599, 601, 602, 600, 603, 0, 604,
	0, 0, 605, 606, 607, 663, 664, 665, 0, 609,
	608, 610, 666, 1547, 0, 264, 0, 0, 611, 612,
	667, 613, 614, 615, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 616, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 617, 618, 0, 288, 619, 289, 620, 0,
	621, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 622, 623, 624, 0, 297, 298, 625, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 626, 627, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 628, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 629, 630, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 631,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 632, 633, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 634, 0, 635, 379, 0,
	380, 381, 382, 383, 384, 1546, 637, 638, 461, 0,
	385, 386, 0, 387, 388, 389, 390, 0, 0, 0,
	0, 391, 392, 393, 395, 0, 0, 394, 639, 640,
	0, 641, 0, 396, 397, 0, 642, 0, 398, 399,
	400, 0, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 643, 0,
	412, 413, 0, 0, 414, 0, 0, 0, 415, 416,
	419, 0, 0, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 0, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 0, 448, 0, 0, 0,
	458, 459, 0, 644, 460, 645, 462, 463, 0, 0,
	464, 0, 0, 0, 466, 467, 468, 0, 0, 469,
	470, 646, 0, 471, 0, 647, 472, 473, 465, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 648, 485, 486, 487, 649, 488, 489, 490, 650,
	491, 651, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 652, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 0, 524, 525, 526, 527,
	653, 528, 0, 529, 530, 536, 537, 531, 532, 538,
	539, 540, 541, 542, 0, 544, 545, 543, 546, 547,
	548, 0, 549, 550, 533, 534, 551, 552, 0, 553,
	554, 555, 556, 557, 558, 654, 0, 559, 0, 560,
	561, 562, 564, 535, 565, 570, 571, 655, 566, 567,
	568, 569, 656, 573, 574, 0, 575, 576, 0, 572,
	563, 0, 577, 578, 579, 580, 581, 582, 583, 354,
	584, 0, 585, 657, 658, 659, 660, 0, 594, 0,
	586, 587, 588, 661, 589, 662, 0, 590, 591, 592,
	593, 0, 595, 596, 0, 0, 597, 598, 599, 601,
	602, 600, 603, 0, 604, 0, 0, 605, 606, 607,
	663, 664, 665, 0, 609, 608, 610, 666, 1531, 0,
	264, 0, 0, 611, 612, 667, 613, 614, 615, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 616, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 617, 618, 0,
	288, 619, 289, 620, 0, 621, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 622, 623, 624, 0,
	297, 298, 625, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 626, 627, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	628, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 629, 630, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 631, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 632, 633, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	634, 0, 635, 379, 0, 380, 381, 382, 383, 384,
	1529, 637, 638, 461, 0, 385, 386, 0, 387, 388,
	389, 390, 0, 0, 0, 0, 391, 392, 393, 395,
	0, 0, 394, 639, 640, 0, 641, 0, 396, 397,
	0, 642, 0, 398, 399, 400, 0, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 643, 0, 412, 413, 0, 0, 414,
	0, 0, 0, 415, 416, 419, 0, 0, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 0, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	0, 448, 0, 0, 0, 458, 459, 0, 644, 460,
	645, 462, 463, 0, 0, 464, 0, 0, 0, 466,
	467, 468, 0, 0, 469, 470, 646, 0, 471, 0,
	647, 472, 473, 465, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 648, 485, 486, 487,
	649, 488, 489, 490, 650, 491, 651, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	652, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	0, 524, 525, 526, 527, 653, 528, 0, 529, 530,
	536, 537, 531, 532, 538, 539, 540, 541, 542, 0,
	544, 545, 543, 546, 547, 548, 0, 549, 550, 533,
	534, 551, 552, 0, 553, 554, 555, 556, 557, 558,
	654, 0, 559, 0, 560, 561, 562, 564, 535, 565,
	570, 571, 655, 566, 567, 568, 569, 656, 573, 574,
	0, 575, 576, 0, 572, 563, 0, 577, 578, 579,
	580, 581, 582, 583, 354, 584, 0, 585, 657, 658,
	659, 660, 0, 594, 0, 586, 587, 588, 661, 589,
	662, 0, 590, 591, 592, 593, 0, 595, 596, 0,
	0, 597, 598, 599, 601, 602, 600, 603, 0, 604,
	0, 0, 605, 606, 607, 663, 664, 665, 0, 609,
	608, 610, 666, 1524, 0, 264, 0, 0, 611, 612,
	667, 613, 614, 615, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 616, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 617, 618, 0, 288, 619, 289, 620, 0,
	621, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 622, 623, 624, 0, 297, 298, 625, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 626, 627, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 628, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 629, 630, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 631,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 632, 633, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 634, 0, 635, 379, 0,
	380, 381, 382, 383, 384, 636, 637, 638, 461, 0,
	385, 386, 0, 387, 388, 389, 390, 0, 0, 0,
	0, 391, 392, 393, 395, 0, 0, 394, 639, 640,
	0, 641, 0, 396, 397, 0, 642, 0, 398, 399,
	400, 0, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 643, 0,
	412, 413, 0, 0, 414, 0, 0, 0, 415, 416,
	419, 0, 0, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 0, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 0, 448, 0, 0, 0,
	458, 459, 0, 644, 460, 645, 462, 463, 0, 0,
	464, 0, 0, 0, 466, 467, 468, 0, 0, 469,
	470, 646, 0, 471, 0, 647, 472, 473, 465, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 648, 485, 486, 487, 649, 488, 489, 490, 650,
	491, 651, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 652, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 0, 524, 525, 526, 527,
	653, 528, 0, 529, 530, 536, 537, 531, 532, 538,
	539, 540, 541, 542, 0, 544, 545, 543, 546, 547,
	548, 0, 549, 550, 533, 534, 551, 552, 0, 553,
	554, 555, 556, 557, 558, 654, 0, 559, 0, 560,
	561, 562, 564, 535, 565, 570, 571, 655, 566, 567,
	568, 569, 656, 573, 574, 0, 575, 576, 0, 572,
	563, 0, 577, 578, 579, 580, 581, 582, 583, 354,
	584, 0, 585, 657, 658, 659, 660, 0, 594, 0,
	586, 587, 588, 661, 589, 662, 0, 590, 591, 592,
	593, 0, 595, 596, 0, 0, 597, 598, 599, 601,
	602, 600, 603, 0, 604, 0, 0, 605, 606, 607,
	663, 664, 665, 0, 609, 608, 610, 666, 1501, 0,
	264, 0, 0, 611, 612, 667, 613, 614, 615, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 616, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 617, 618, 0,
	288, 619, 289, 620, 0, 621, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 622, 623, 624, 0,
	297, 298, 625, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 626, 627, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	628, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 629, 630, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 631, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 632, 633, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	634, 0, 635, 379, 0, 380, 381, 382, 383, 384,
	1499, 637, 638, 461, 0, 385, 386, 0, 387, 388,
	389, 390, 0, 0, 0, 0, 391, 392, 393, 395,
	0, 0, 394, 639, 640, 0, 641, 0, 396, 397,
	0, 642, 0, 398, 399, 400, 0, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 643, 0, 412, 413, 0, 0, 414,
	0, 0, 0, 415, 416, 419, 0, 0, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 0, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	0, 448, 0, 0, 0, 458, 459, 0, 644, 460,
	645, 462, 463, 0, 0, 464, 0, 0, 0, 466,
	467, 468, 0, 0, 469, 470, 646, 0, 471, 0,
	647, 472, 473, 465, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 648, 485, 486, 487,
	649, 488, 489, 490, 650, 491, 651, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	652, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	0, 524, 525, 526, 527, 653, 528, 0, 529, 530,
	536, 537, 531, 532, 538, 539, 540, 541, 542, 0,
	544, 545, 543, 546, 547, 548, 0, 549, 550, 533,
	534, 551, 552, 0, 553, 554, 555, 556, 557, 558,
	654, 0, 559, 0, 560, 561, 562, 564, 535, 565,
	570, 571, 655, 566, 567, 568, 569, 656, 573, 574,
	0, 575, 576, 0, 572, 563, 0, 577, 578, 579,
	580, 581, 582, 583, 354, 584, 0, 585, 657, 658,
	659, 660, 0, 594, 0, 586, 587, 588, 661, 589,
	662, 0, 590, 591, 592, 593, 0, 595, 596, 0,
	0, 597, 598, 599, 601, 602, 600, 603, 0, 604,
	0, 0, 605, 606, 607, 663, 664, 665, 0, 609,
	608, 610, 666, 1462, 0, 264, 0, 0, 611, 612,
	667, 613, 614, 615, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 616, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 617, 618, 0, 288, 619, 289, 620, 0,
	621, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 622, 623, 624, 0, 297, 298, 625, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 626, 627, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 628, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 629, 630, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 631,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 632, 633, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 634, 0, 635, 379, 0,
	380, 381, 382, 383, 384, 636, 637, 638, 461, 0,
	385, 386, 0, 387, 388, 389, 390, 0, 0, 0,
	0, 391, 392, 393, 395, 0, 0, 394, 639, 640,
	0, 641, 0, 396, 397, 0, 642, 0, 398, 399,
	400, 0, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 643, 0,
	412, 413, 0, 0, 414, 0, 0, 0, 415, 416,
	419, 0, 0, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 0, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 0, 448, 0, 0, 0,
	458, 459, 0, 644, 460, 645, 462, 463, 0, 0,
	464, 0, 0, 0, 466, 467, 468, 0, 0, 469,
	470, 646, 0, 471, 0, 647, 472, 473, 465, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 648, 485, 486, 487, 649, 488, 489, 490, 650,
	491, 651, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 652, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 0, 524, 525, 526, 527,
	653, 528, 0, 529, 530, 536, 537, 531, 532, 538,
	539, 540, 541, 542, 0, 544, 545, 543, 546, 547,
	548, 0, 549, 550, 533, 534, 551, 552, 0, 553,
	554, 555, 556, 557, 558, 654, 0, 559, 0, 560,
	561, 562, 564, 535, 565, 570, 571, 655, 566, 567,
	568, 569, 656, 573, 574, 0, 575, 576, 0, 572,
	563, 0, 577, 578, 579, 580, 581, 582, 583, 354,
	584, 0, 585, 657, 658, 659, 660, 0, 594, 0,
	586, 587, 588, 661, 589, 662, 0, 590, 591, 592,
	593, 0, 595, 596, 0, 0, 597, 598, 599, 601,
	602, 600, 603, 0, 604, 0, 0, 605, 606, 607,
	663, 664, 665, 0, 609, 608, 610, 666, 1447, 0,
	264, 0, 0, 611, 612, 667, 613, 614, 615, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 616, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 617, 618, 0,
	288, 619, 289, 620, 0, 621, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 622, 623, 624, 0,
	297, 298, 625, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 626, 627, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	628, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 629, 630, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 631, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 632, 633, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	634, 0, 635, 379, 0, 380, 381, 382, 383, 384,
	636, 637, 638, 461, 0, 385, 386, 0, 387, 388,
	389, 390, 0, 0, 0, 0, 391, 392, 393, 395,
	0, 0, 394, 639, 640, 0, 641, 0, 396, 397,
	0, 642, 0, 398, 399, 400, 0, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 643, 0, 412, 413, 0, 0, 414,
	0, 0, 0, 415, 416, 419, 0, 0, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 0, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	0, 448, 0, 0, 0, 458, 459, 0, 644, 460,
	645, 462, 463, 0, 0, 464, 0, 0, 0, 466,
	467, 468, 0, 0, 469, 470, 646, 0, 471, 0,
	647, 472, 473, 465, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 648, 485, 486, 487,
	649, 488, 489, 490, 650, 491, 651, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	652, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	0, 524, 525, 526, 527, 653, 528, 0, 529, 530,
	536, 537, 531, 532, 538, 539, 540, 541, 542, 0,
	544, 545, 543, 546, 547, 548, 0, 549, 550, 533,
	534, 551, 552, 0, 553, 554, 555, 556, 557, 558,
	654, 0, 559, 0, 560, 561, 562, 564, 535, 565,
	570, 571, 655, 566, 567, 568, 569, 656, 573, 574,
	0, 575, 576, 0, 572, 563, 0, 577, 578, 579,
	580, 581, 582, 583, 354, 584, 0, 585, 657, 658,
	659, 660, 0, 594, 0, 586, 587, 588, 661, 589,
	662, 0, 590, 591, 592, 593, 0, 595, 596, 0,
	0, 597, 598, 599, 601, 602, 600, 603, 0, 604,
	0, 0, 605, 606, 607, 663, 664, 665, 0, 609,
	608, 610, 666, 1284, 0, 264, 0, 0, 611, 612,
	667, 613, 614, 615, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 616, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 617, 618, 0, 288, 619, 289, 620, 0,
	621, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 622, 623, 624, 0, 297, 298, 625, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 626, 627, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 628, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 629, 630, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 631,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 632, 633, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 634, 0, 635, 379, 0,
	380, 381, 382, 383, 384, 1283, 637, 638, 461, 0,
	385, 386, 0, 387, 388, 389, 390, 0, 0, 0,
	0, 391, 392, 393, 395, 0, 0, 394, 639, 640,
	0, 641, 0, 396, 397, 0, 642, 0, 398, 399,
	400, 0, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 643, 0,
	412, 413, 0, 0, 414, 0, 0, 0, 415, 416,
	419, 0, 0, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 0, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 0, 448, 0, 0, 0,
	458, 459, 0, 644, 460, 645, 462, 463, 0, 0,
	464, 0, 0, 0, 466, 467, 468, 0, 0, 469,
	470, 646, 0, 471, 0, 647, 472, 473, 465, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 648, 485, 486, 487, 649, 488, 489, 490, 650,
	491, 651, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 652, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 0, 524, 525, 526, 527,
	653, 528, 0, 529, 530, 536, 537, 531, 532, 538,
	539, 540, 541, 542, 0, 544, 545, 543, 546, 547,
	548, 0, 549, 550, 533, 534, 551, 552, 0, 553,
	554, 555, 556, 557, 558, 654, 0, 559, 0, 560,
	561, 562, 564, 535, 565, 570, 571, 655, 566, 567,
	568, 569, 656, 573, 574, 0, 575, 576, 0, 572,
	563, 0, 577, 578, 579, 580, 581, 582, 583, 354,
	584, 0, 585, 657, 658, 659, 660, 0, 594, 0,
	586, 587, 588, 661, 589, 662, 0, 590, 591, 592,
	593, 0, 595, 596, 0, 0, 597, 598, 599, 601,
	602, 600, 603, 0, 604, 0, 0, 605, 606, 607,
	663, 664, 665, 0, 609, 608, 610, 666, 1275, 0,
	264, 0, 0, 611, 612, 667, 613, 614, 615, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 616, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 617, 618, 0,
	288, 619, 289, 620, 0, 621, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 622, 623, 624, 0,
	297, 298, 625, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 626, 627, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	628, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 629, 630, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 631, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 632, 633, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	634, 0, 635, 379, 0, 380, 381, 382, 383, 384,
	1274, 637, 638, 461, 0, 385, 386, 0, 387, 388,
	389, 390, 0, 0, 0, 0, 391, 392, 393, 395,
	0, 0, 394, 639, 640, 0, 641, 0, 396, 397,
	0, 642, 0, 398, 399, 400, 0, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 643, 0, 412, 413, 0, 0, 414,
	0, 0, 0, 415, 416, 419, 0, 0, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 0, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	0, 448, 0, 0, 0, 458, 459, 0, 644, 460,
	645, 462, 463, 0, 0, 464, 0, 0, 0, 466,
	467, 468, 0, 0, 469, 470, 646, 0, 471, 0,
	647, 472, 473, 465, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 648, 485, 486, 487,
	649, 488, 489, 490, 650, 491, 651, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	652, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	0, 524, 525, 526, 527, 653, 528, 0, 529, 530,
	536, 537, 531, 532, 538, 539, 540, 541, 542, 0,
	544, 545, 543, 546, 547, 548, 0, 549, 550, 533,
	534, 551, 552, 0, 553, 554, 555, 556, 557, 558,
	654, 0, 559, 0, 560, 561, 562, 564, 535, 565,
	570, 571, 655, 566, 567, 568, 569, 656, 573, 574,
	0, 575, 576, 0, 572, 563, 0, 577, 578, 579,
	580, 581, 582, 583, 354, 584, 0, 585, 657, 658,
	659, 660, 0, 594, 0, 586, 587, 588, 661, 589,
	662, 0, 590, 591, 592, 593, 0, 595, 596, 0,
	0, 597, 598, 599, 601, 602, 600, 603, 0, 604,
	0, 0, 605, 606, 607, 663, 664, 665, 264, 609,
	608, 610, 666, 0, 0, 0, 0, 0, 611, 612,
	667, 613, 614, 615, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 1228, 278, 279, 0, 0, 0, 0,
	0, 616, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 617, 618, 0, 288, 619,
	289, 620, 0, 621, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 622, 623, 624, 0, 297, 298,
	625, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 626,
	627, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 628, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 629,
	630, 360, 0, 0, 0, 0, 0, 0, 0, 361,
	362, 363, 631, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 632, 633, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 634, 0,
	635, 379, 0, 380, 381, 382, 383, 384, 636, 637,
	638, 461, 0, 385, 386, 0, 387, 388, 389, 390,
	0, 0, 0, 0, 391, 392, 393, 395, 0, 0,
	394, 639, 640, 0, 641, 0, 396, 397, 0, 642,
	0, 398, 399, 400, 0, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 643, 0, 412, 413, 0, 0, 414, 0, 0,
	0, 415, 416, 419, 0, 0, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 0, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 0, 448,
	0, 0, 0, 458, 459, 0, 644, 460, 645, 462,
	463, 0, 0, 464, 0, 0, 0, 466, 467, 468,
	0, 0, 469, 470, 646, 0, 471, 0, 647, 472,
	473, 465, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 648, 485, 486, 487, 649, 488,
	489, 490, 650, 491, 651, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 652, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 0, 524,
	525, 526, 527, 653, 528, 0, 529, 530, 536, 537,
	531, 532, 538, 539, 540, 541, 542, 0, 544, 545,
	543, 546, 547, 548, 0, 549, 550, 533, 534, 551,
	552, 0, 553, 554, 555, 556, 557, 558, 654, 0,
	559, 0, 560, 561, 562, 564, 535, 565, 570, 571,
	655, 566, 567, 568, 569, 656, 573, 574, 0, 575,
	576, 0, 572, 563, 0, 577, 578, 579, 580, 581,
	582, 583, 354, 584, 0, 585, 657, 658, 659, 660,
	0, 594, 0, 586, 587, 588, 661, 589, 662, 0,
	590, 591, 592, 593, 0, 595, 596, 0, 0, 597,
	598, 599, 601, 602, 600, 603, 0, 604, 0, 0,
	605, 606, 607, 663, 664, 665, 264, 609, 608, 610,
	666, 0, 0, 0, 0, 0, 611, 612, 667, 613,
	614, 615, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 762, 278, 279, 0, 0, 0, 0, 0, 616,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 617, 618, 0, 288, 619, 289, 620,
	0, 621, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 622, 623, 624, 0, 297, 298, 625, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 626, 627, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 628, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 629, 630, 360,
	0, 0, 0, 0, 0, 0, 0, 361, 362, 363,
	631, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 632, 633, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 634, 0, 635, 379,
	0, 380, 381, 382, 383, 384, 636, 637, 638, 461,
	0, 385, 386, 0, 387, 388, 389, 390, 0, 0,
	0, 0, 391, 392, 393, 395, 0, 0, 394, 639,
	640, 0, 641, 0, 396, 397, 0, 642, 0, 398,
	399, 400, 0, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 643,
	0, 412, 413, 0, 0, 414, 0, 0, 0, 415,
	416, 419, 0, 0, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 0, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 0, 448, 0, 0,
	0, 458, 459, 0, 644, 460, 645, 462, 463, 0,
	0, 464, 0, 0, 0, 466, 467, 468, 0, 0,
	469, 470, 646, 0, 471, 0, 647, 472, 473, 465,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 648, 485, 486, 487, 649, 488, 489, 490,
	650, 491, 651, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 652, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 0, 524, 525, 526,
	527, 653, 528, 0, 529, 530, 536, 537, 531, 532,
	538, 539, 540, 541, 542, 0, 544, 545, 543, 546,
	547, 548, 0, 549, 550, 533, 534, 551, 552, 0,
	553, 554, 555, 556, 557, 558, 654, 0, 559, 0,
	560, 561, 562, 564, 535, 565, 570, 571, 655, 566,
	567, 568, 569, 656, 573, 574, 0, 575, 576, 0,
	572, 563, 0, 577, 578, 579, 580, 581, 582, 583,
	354, 584, 0, 585, 657, 658, 659, 660, 0, 594,
	0, 586, 587, 588, 661, 589, 662, 0, 590, 591,
	592, 593, 0, 595, 596, 0, 0, 597, 598, 599,
	601, 602, 600, 603, 0, 604, 0, 0, 605, 606,
	607, 663, 664, 665, 0, 609, 608, 610, 666, 756,
	0, 264, 0, 0, 611, 612, 667, 613, 614, 615,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 616, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 617, 618,
	0, 288, 619, 289, 620, 0, 621, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 622, 623, 624,
	0, 297, 746, 625, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 744, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 626, 627, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 628, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 629, 630, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 631, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 632, 633,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 634, 0, 635, 379, 0, 380, 381, 382, 383,
	384, 636, 637, 638, 461, 0, 385, 386, 0, 387,
	388, 389, 390, 0, 0, 0, 0, 391, 392, 393,
	395, 0, 0, 394, 639, 640, 0, 641, 0, 396,
	397, 0, 642, 0, 398, 399, 400, 0, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 643, 0, 412, 413, 0, 0,
	414, 0, 0, 0, 415, 745, 419, 0, 0, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 757, 0, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 0, 448, 0, 0, 0, 458, 459, 0, 644,
	460, 645, 462, 463, 0, 0, 464, 0, 0, 0,
	466, 467, 468, 0, 0, 469, 470, 646, 0, 471,
	0, 647, 472, 473, 465, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 648, 485, 486,
	487, 649, 488, 489, 490, 650, 491, 651, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 652, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 0, 524, 525, 526, 527, 747, 528, 0, 529,
	530, 536, 537, 531, 532, 753, 539, 540, 541, 542,
	0, 544, 545, 543, 546, 748, 548, 0, 549, 550,
	533, 534, 551, 552, 0, 553, 554, 555, 556, 557,
	558, 654, 0, 559, 0, 560, 561, 562, 564, 535,
	565, 570, 571, 655, 566, 567, 568, 569, 656, 573,
	574, 0, 575, 576, 0, 572, 563, 0, 577, 578,
	579, 580, 581, 582, 583, 354, 584, 0, 585, 752,
	658, 659, 660, 0, 594, 0, 586, 750, 588, 661,
	589, 662, 0, 590, 591, 592, 593, 0, 595, 596,
	0, 0, 597, 598, 599, 601, 602, 600, 603, 0,
	604, 0, 0, 605, 606, 607, 663, 664, 665, 0,
	609, 608, 610, 666, 738, 0, 264, 0, 0, 611,
	612, 667, 613, 614, 615, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 616,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 617, 618, 0, 288, 619, 289, 620,
	0, 621, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 622, 623, 624, 0, 297, 298, 625, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 626, 627, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 628, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 629, 630, 360,
	0, 0, 0, 0, 0, 0, 0, 361, 362, 363,
	631, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 632, 633, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 634, 0, 635, 379,
	0, 380, 381, 382, 383, 384, 636, 637, 638, 461,
	0, 385, 386, 0, 387, 388, 389, 390, 0, 0,
	0, 0, 391, 392, 393, 395, 0, 0, 394, 639,
	640, 0, 641, 0, 396, 397, 0, 642, 0, 398,
	399, 400, 0, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 643,
	0, 412, 413, 0, 0, 414, 0, 0, 0, 415,
	416, 419, 0, 0, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 0, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 0, 448, 0, 0,
	0, 458, 459, 0, 644, 460, 645, 462, 463, 0,
	0, 464, 0, 0, 0, 466, 467, 468, 0, 0,
	469, 470, 646, 0, 471, 0, 647, 472, 473, 465,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 648, 485, 486, 487, 649, 488, 489, 490,
	650, 491, 651, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 652, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 0, 524, 525, 526,
	527, 653, 528, 0, 529, 530, 739, 537, 531, 532,
	538, 539, 540, 541, 542, 0, 544, 545, 543, 546,
	547, 548, 0, 549, 550, 533, 534, 551, 552, 0,
	553, 554, 555, 556, 557, 558, 654, 0, 559, 0,
	560, 561, 562, 564, 535, 565, 570, 571, 655, 566,
	567, 568, 569, 656, 573, 574, 0, 575, 576, 0,
	572, 563, 0, 577, 578, 579, 580, 581, 582, 583,
	354, 584, 0, 585, 657, 658, 659, 660, 0, 594,
	0, 586, 587, 588, 661, 589, 662, 0, 590, 591,
	592, 593, 0, 595, 596, 0, 0, 597, 598, 599,
	601, 602, 600, 603, 0, 604, 0, 0, 605, 606,
	607, 663, 664, 665, 0, 609, 608, 610, 666, 701,
	0, 264, 0, 0, 611, 612, 667, 613, 614, 615,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 616, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 617, 618,
	0, 288, 619, 289, 620, 0, 621, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 622, 623, 624,
	0, 297, 298, 625, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 626, 627, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 628, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 629, 630, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 631, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 632, 633,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 634, 0, 635, 379, 0, 380, 381, 382, 383,
	384, 636, 637, 638, 461, 0, 385, 386, 0, 387,
	388, 389, 390, 0, 0, 0, 0, 391, 392, 393,
	395, 0, 0, 394, 639, 640, 0, 641, 0, 396,
	397, 0, 642, 0, 398, 399, 400, 0, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 643, 0, 412, 413, 0, 0,
	414, 0, 0, 0, 415, 416, 419, 0, 0, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 0, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 0, 448, 0, 0, 0, 458, 459, 0, 644,
	460, 645, 462, 463, 0, 0, 464, 0, 0, 0,
	466, 467, 468, 0, 0, 469, 470, 646, 0, 471,
	0, 647, 472, 473, 465, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 648, 485, 486,
	487, 649, 488, 489, 490, 650, 491, 651, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 652, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 0, 524, 525, 526, 527, 653, 528, 0, 529,
	530, 536, 537, 531, 532, 538, 539, 540, 541, 542,
	0, 544, 545, 543, 546, 547, 548, 0, 549, 550,
	533, 534, 551, 552, 0, 553, 554, 555, 556, 557,
	558, 654, 0, 559, 0, 560, 561, 562, 564, 535,
	565, 570, 571, 655, 566, 567, 568, 569, 656, 573,
	574, 0, 575, 576, 0, 572, 563, 0, 577, 578,
	579, 580, 581, 582, 583, 354, 584, 0, 585, 657,
	658, 659, 660, 0, 594, 0, 586, 587, 588, 661,
	589, 662, 0, 590, 591, 592, 593, 0, 595, 596,
	0, 0, 597, 598, 599, 601, 602, 600, 603, 0,
	604, 0, 0, 605, 606, 607, 663, 664, 665, 0,
	609, 608, 610, 666, 695, 0, 264, 0, 0, 611,
	612, 667, 613, 614, 615, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 616,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 617, 618, 0, 288, 619, 289, 620,
	0, 621, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 622, 623, 624, 0, 297, 298, 625, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 626, 627, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 628, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 629, 630, 360,
	0, 0, 0, 0, 0, 0, 0, 361, 362, 363,
	631, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 632, 633, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 634, 0, 635, 379,
	0, 380, 381, 382, 383, 384, 636, 637, 638, 461,
	0, 385, 386, 0, 387, 388, 389, 390, 0, 0,
	0, 0, 391, 392, 393, 395, 0, 0, 394, 639,
	640, 0, 641, 0, 396, 397, 0, 642, 0, 398,
	399, 400, 0, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 643,
	0, 412, 413, 0, 0, 414, 0, 0, 0, 415,
	416, 419, 0, 0, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 0, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 0, 448, 0, 0,
	0, 458, 459, 0, 644, 460, 645, 462, 463, 0,
	0, 464, 0, 0, 0, 466, 467, 468, 0, 0,
	469, 470, 646, 0, 471, 0, 647, 472, 473, 465,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 648, 485, 486, 487, 649, 488, 489, 490,
	650, 491, 651, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 652, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 0, 524, 525, 526,
	527, 653, 528, 0, 529, 530, 536, 537, 531, 532,
	538, 539, 540, 541, 542, 0, 544, 545, 543, 546,
	547, 548, 0, 549, 550, 533, 534, 551, 552, 0,
	553, 554, 555, 556, 557, 558, 654, 0, 559, 0,
	560, 561, 562, 564, 535, 565, 570, 571, 655, 566,
	567, 568, 569, 656, 573, 574, 0, 575, 576, 0,
	572, 563, 0, 577, 578, 579, 580, 581, 582, 583,
	354, 584, 0, 585, 657, 658, 659, 660, 0, 594,
	0, 586, 587, 588, 661, 589, 662, 0, 590, 591,
	592, 593, 0, 595, 596, 0, 0, 597, 598, 599,
	601, 602, 600, 603, 0, 604, 0, 0, 605, 606,
	607, 663, 664, 665, 0, 609, 608, 610, 666, 673,
	0, 264, 0, 0, 611, 612, 667, 613, 614, 615,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 616, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 617, 618,
	0, 288, 619, 289, 620, 0, 621, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 622, 623, 624,
	0, 297, 298, 625, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 626, 627, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 628, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 629, 630, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 631, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 632, 633,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 634, 0, 635, 379, 0, 380, 381, 382, 383,
	384, 636, 637, 638, 461, 0, 385, 386, 0, 387,
	388, 389, 390, 0, 0, 0, 0, 391, 392, 393,
	395, 0, 0, 394, 639, 640, 0, 641, 0, 396,
	397, 0, 642, 0, 398, 399, 400, 0, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 643, 0, 412, 413, 0, 0,
	414, 0, 0, 0, 415, 416, 419, 0, 0, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 0, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 0, 448, 0, 0, 0, 458, 459, 0, 644,
	460, 645, 462, 463, 0, 0, 464, 0, 0, 0,
	466, 467, 468, 0, 0, 469, 470, 646, 0, 471,
	0, 647, 472, 473, 465, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 648, 485, 486,
	487, 649, 488, 489, 490, 650, 491, 651, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 652, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 0, 524, 525, 526, 527, 653, 528, 0, 529,
	530, 536, 537, 531, 532, 538, 539, 540, 541, 542,
	0, 544, 545, 543, 546, 547, 548, 0, 549, 550,
	533, 534, 551, 552, 0, 553, 554, 555, 556, 557,
	558, 654, 0, 559, 0, 560, 561, 562, 564, 535,
	565, 570, 571, 655, 566, 567, 568, 569, 656, 573,
	574, 0, 575, 576, 0, 572, 563, 0, 577, 578,
	579, 580, 581, 582, 583, 354, 584, 0, 585, 657,
	658, 659, 660, 0, 594, 0, 586, 587, 588, 661,
	589, 662, 0, 590, 591, 592, 593, 0, 595, 596,
	0, 0, 597, 598, 599, 601, 602, 600, 603, 0,
	604, 0, 0, 605, 606, 607, 663, 664, 665, 264,
	609, 608, 610, 666, 0, 0, 0, 0, 0, 611,
	612, 667, 613, 614, 615, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 616, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 617, 618, 0, 288,
	619, 289, 620, 0, 621, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 622, 623, 624, 0, 297,
	298, 625, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	626, 627, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 628,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	629, 630, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 631, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 632, 633, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 634,
	0, 635, 379, 0, 380, 381, 382, 383, 384, 636,
	637, 638, 461, 0, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 0, 391, 392, 393, 395, 0,
	0, 394, 639, 640, 0, 641, 0, 396, 397, 0,
	642, 0, 398, 399, 400, 0, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 643, 0, 412, 413, 0, 0, 414, 0,
	0, 0, 415, 416, 419, 0, 0, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 0, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 0,
	448, 0, 0, 0, 458, 459, 0, 644, 460, 645,
	462, 463, 0, 0, 464, 0, 0, 0, 466, 467,
	468, 0, 0, 469, 470, 646, 0, 471, 0, 647,
	472, 473, 465, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 648, 485, 486, 487, 649,
	488, 489, 490, 650, 491, 651, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 652,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 0,
	524, 525, 526, 527, 653, 528, 0, 529, 530, 536,
	537, 531, 532, 538, 539, 540, 541, 542, 0, 544,
	545, 543, 546, 547, 548, 0, 549, 550, 533, 534,
	551, 552, 0, 553, 554, 555, 556, 557, 558, 654,
	0, 559, 0, 560, 561, 562, 564, 535, 565, 570,
	571, 655, 566, 567, 568, 569, 656, 573, 574, 0,
	575, 576, 0, 572, 563, 0, 577, 578, 579, 580,
	581, 582, 583, 354, 584, 0, 585, 657, 658, 659,
	660, 0, 594, 0, 586, 587, 588, 661, 589, 662,
	0, 590, 591, 592, 593, 0, 595, 596, 0, 0,
	597, 598, 599, 601, 602, 600, 603, 0, 604, 0,
	0, 605, 606, 607, 663, 664, 665, 264, 609, 608,
	610, 666, 0, 0, 0, 0, 0, 611, 612, 667,
	613, 614, 615, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	616, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 617, 618, 0, 288, 619, 289,
	620, 0, 621, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 622, 623, 624, 0, 297, 298, 625,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 626, 627,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 628, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 629, 630,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 631, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 632, 633, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 634, 0, 635,
	379, 0, 380, 381, 382, 383, 384, 3436, 637, 638,
	461, 0, 385, 386, 0, 387, 388, 389, 390, 0,
	0, 0, 0, 391, 392, 393, 395, 0, 0, 394,
	639, 640, 0, 641, 0, 396, 397, 0, 642, 0,
	398, 399, 400, 0, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	643, 0, 412, 413, 0, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 0, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 0, 448, 0,
	0, 0, 458, 459, 0, 644, 460, 645, 462, 463,
	0, 0, 464, 0, 0, 0, 466, 467, 468, 0,
	0, 469, 470, 646, 0, 471, 0, 647, 472, 473,
	465, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 648, 485, 486, 487, 649, 488, 489,
	490, 650, 491, 651, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 652, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 0, 524, 525,
	526, 527, 653, 528, 0, 529, 530, 536, 537, 531,
	532, 538, 539, 540, 541, 542, 0, 544, 545, 543,
	546, 547, 548, 0, 549, 550, 533, 534, 551, 552,
	0, 553, 554, 555, 556, 557, 558, 654, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 655,
	566, 567, 568, 569, 656, 573, 574, 0, 575, 576,
	0, 572, 563, 0, 577, 578, 579, 580, 581, 582,
	583, 354, 584, 0, 585, 657, 658, 659, 660, 0,
	594, 0, 586, 587, 588, 661, 589, 662, 0, 590,
	591, 592, 593, 0, 595, 596, 0, 0, 597, 598,
	599, 601, 602, 600, 603, 0, 604, 0, 0, 605,
	606, 607, 663, 664, 665, 264, 609, 608, 610, 666,
	0, 0, 0, 0, 0, 611, 612, 667, 613, 614,
	615, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 616, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 617, 618, 0, 288, 619, 289, 620, 0,
	621, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 622, 623, 624, 0, 297, 298, 625, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 626, 627, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 628, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 629, 630, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 631,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 632, 633, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 634, 0, 635, 379, 0,
	380, 381, 382, 383, 384, 3373, 637, 638, 461, 0,
	385, 386, 0, 387, 388, 389, 390, 0, 0, 0,
	0, 391, 392, 393, 395, 0, 0, 394, 639, 640,
	0, 641, 0, 396, 397, 0, 642, 0, 398, 399,
	400, 0, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 643, 0,
	412, 413, 0, 0, 414, 0, 0, 0, 415, 416,
	419, 0, 0, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 0, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 0, 448, 0, 0, 0,
	458, 459, 0, 644, 460, 645, 462, 463, 0, 0,
	464, 0, 0, 0, 466, 467, 468, 0, 0, 469,
	470, 646, 0, 471, 0, 647, 472, 473, 465, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 648, 485, 486, 487, 649, 488, 489, 490, 650,
	491, 651, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 652, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 0, 524, 525, 526, 527,
	653, 528, 0, 529, 530, 536, 537, 531, 532, 538,
	539, 540, 541, 542, 0, 544, 545, 543, 546, 547,
	548, 0, 549, 550, 533, 534, 551, 552, 0, 553,
	554, 555, 556, 557, 558, 654, 0, 559, 0, 560,
	561, 562, 564, 535, 565, 570, 571, 655, 566, 567,
	568, 569, 656, 573, 574, 0, 575, 576, 0, 572,
	563, 0, 577, 578, 579, 580, 581, 582, 583, 354,
	584, 0, 585, 657, 658, 659, 660, 0, 594, 0,
	586, 587, 588, 661, 589, 662, 0, 590, 591, 592,
	593, 0, 595, 596, 0, 0, 597, 598, 599, 601,
	602, 600, 603, 0, 604, 0, 0, 605, 606, 607,
	663, 664, 665, 264, 609, 608, 610, 666, 0, 0,
	0, 0, 0, 611, 612, 667, 613, 614, 615, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 616, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	617, 618, 0, 288, 619, 289, 620, 0, 621, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 622,
	623, 624, 0, 297, 298, 625, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 626, 627, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 628, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 629, 630, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 631, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	632, 633, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 634, 0, 635, 379, 0, 380, 381,
	382, 383, 384, 3306, 637, 638, 461, 0, 385, 386,
	0, 387, 388, 389, 390, 0, 0, 0, 0, 391,
	392, 393, 395, 0, 0, 394, 639, 640, 0, 641,
	0, 396, 397, 0, 642, 0, 398, 399, 400, 0,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 643, 0, 412, 413,
	0, 0, 414, 0, 0, 0, 415, 416, 419, 0,
	0, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	0, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 0, 448, 0, 0, 0, 458, 459,
	0, 644, 460, 645, 462, 463, 0, 0, 464, 0,
	0, 0, 466, 467, 468, 0, 0, 469, 470, 646,
	0, 471, 0, 647, 472, 473, 465, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 648,
	485, 486, 487, 649, 488, 489, 490, 650, 491, 651,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 652, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 0, 524, 525, 526, 527, 653, 528,
	0, 529, 530, 536, 537, 531, 532, 538, 539, 540,
	541, 542, 0, 544, 545, 543, 546, 547, 548, 0,
	549, 550, 533, 534, 551, 552, 0, 553, 554, 555,
	556, 557, 558, 654, 0, 559, 0, 560, 561, 562,
	564, 535, 565, 570, 571, 655, 566, 567, 568, 569,
	656, 573, 574, 0, 575, 576, 0, 572, 563, 0,
	577, 578, 579, 580, 581, 582, 583, 354, 584, 0,
	585, 657, 658, 659, 660, 0, 594, 0, 586, 587,
	588, 661, 589, 662, 0, 590, 591, 592, 593, 0,
	595, 596, 0, 0, 597, 598, 599, 601, 602, 600,
	603, 0, 604, 0, 0, 605, 606, 607, 663, 664,
	665, 264, 609, 608, 610, 666, 0, 0, 0, 0,
	0, 611, 612, 667, 613, 614, 615, 0, 270, 272,
	271, 273, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 616, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 617, 618,
	0, 288, 619, 289, 620, 0, 621, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 622, 623, 624,
	0, 297, 298, 625, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 626, 627, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 628, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 629, 630, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 631, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 632, 633,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 634, 0, 635, 379, 0, 380, 381, 382, 383,
	384, 3304, 637, 638, 461, 0, 385, 386, 0, 387,
	388, 389, 390, 0, 0, 0, 0, 391, 392, 393,
	395, 0, 0, 394, 639, 640, 0, 641, 0, 396,
	397, 0, 642, 0, 398, 399, 400, 0, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 643, 0, 412, 413, 0, 0,
	414, 0, 0, 0, 415, 416, 419, 0, 0, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 0, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 0, 448, 0, 0, 0, 458, 459, 0, 644,
	460, 645, 462, 463, 0, 0, 464, 0, 0, 0,
	466, 467, 468, 0, 0, 469, 470, 646, 0, 471,
	0, 647, 472, 473, 465, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 648, 485, 486,
	487, 649, 488, 489, 490, 650, 491, 651, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 652, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 0, 524, 525, 526, 527, 653, 528, 0, 529,
	530, 536, 537, 531, 532, 538, 539, 540, 541, 542,
	0, 544, 545, 543, 546, 547, 548, 0, 549, 550,
	533, 534, 551, 552, 0, 553, 554, 555, 556, 557,
	558, 654, 0, 559, 0, 560, 561, 562, 564, 535,
	565, 570, 571, 655, 566, 567, 568, 569, 656, 573,
	574, 0, 575, 576, 0, 572, 563, 0, 577, 578,
	579, 580, 581, 582, 583, 354, 584, 0, 585, 657,
	658, 659, 660, 0, 594, 0, 586, 587, 588, 661,
	589, 662, 0, 590, 591, 592, 593, 0, 595, 596,
	0, 0, 597, 598, 599, 601, 602, 600, 603, 0,
	604, 0, 0, 605, 606, 607, 663, 664, 665, 264,
	609, 608, 610, 666, 0, 0, 0, 0, 0, 611,
	612, 667, 613, 614, 615, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 616, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 617, 618, 0, 288,
	619, 289, 620, 0, 621, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 622, 623, 624, 0, 297,
	298, 625, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	626, 627, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 628,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	629, 630, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 631, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 632, 633, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 634,
	0, 635, 379, 0, 380, 381, 382, 383, 384, 3289,
	637, 638, 461, 0, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 0, 391, 392, 393, 395, 0,
	0, 394, 639, 640, 0, 641, 0, 396, 397, 0,
	642, 0, 398, 399, 400, 0, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 643, 0, 412, 413, 0, 0, 414, 0,
	0, 0, 415, 416, 419, 0, 0, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 0, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 0,
	448, 0, 0, 0, 458, 459, 0, 644, 460, 645,
	462, 463, 0, 0, 464, 0, 0, 0, 466, 467,
	468, 0, 0, 469, 470, 646, 0, 471, 0, 647,
	472, 473, 465, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 648, 485, 486, 487, 649,
	488, 489, 490, 650, 491, 651, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 652,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 0,
	524, 525, 526, 527, 653, 528, 0, 529, 530, 536,
	537, 531, 532, 538, 539, 540, 541, 542, 0, 544,
	545, 543, 546, 547, 548, 0, 549, 550, 533, 534,
	551, 552, 0, 553, 554, 555, 556, 557, 558, 654,
	0, 559, 0, 560, 561, 562, 564, 535, 565, 570,
	571, 655, 566, 567, 568, 569, 656, 573, 574, 0,
	575, 576, 0, 572, 563, 0, 577, 578, 579, 580,
	581, 582, 583, 354, 584, 0, 585, 657, 658, 659,
	660, 0, 594, 0, 586, 587, 588, 661, 589, 662,
	0, 590, 591, 592, 593, 0, 595, 596, 0, 0,
	597, 598, 599, 601, 602, 600, 603, 0, 604, 0,
	0, 605, 606, 607, 663, 664, 665, 264, 609, 608,
	610, 666, 0, 0, 0, 0, 0, 611, 612, 667,
	613, 614, 615, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	616, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 617, 618, 0, 288, 619, 289,
	620, 0, 621, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 622, 623, 624, 0, 297, 298, 625,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 626, 627,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 628, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 629, 630,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 631, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 632, 633, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 634, 0, 635,
	379, 0, 380, 381, 382, 383, 384, 2903, 637, 638,
	461, 0, 385, 386, 0, 387, 388, 389, 390, 0,
	0, 0, 0, 391, 392, 393, 395, 0, 0, 394,
	639, 640, 0, 641, 0, 396, 397, 0, 642, 0,
	398, 399, 400, 0, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	643, 0, 412, 413, 0, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 0, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 0, 448, 0,
	0, 0, 458, 459, 0, 644, 460, 645, 462, 463,
	0, 0, 464, 0, 0, 0, 466, 467, 468, 0,
	0, 469, 470, 646, 0, 471, 0, 647, 472, 473,
	465, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 648, 485, 486, 487, 649, 488, 489,
	490, 650, 491, 651, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 652, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 0, 524, 525,
	526, 527, 653, 528, 0, 529, 530, 536, 537, 531,
	532, 538, 539, 540, 541, 542, 0, 544, 545, 543,
	546, 547, 548, 0, 549, 550, 533, 534, 551, 552,
	0, 553, 554, 555, 556, 557, 558, 654, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 655,
	566, 567, 568, 569, 656, 573, 574, 0, 575, 576,
	0, 572, 563, 0, 577, 578, 579, 580, 581, 582,
	583, 354, 584, 0, 585, 657, 658, 659, 660, 0,
	594, 0, 586, 587, 588, 661, 589, 662, 0, 590,
	591, 592, 593, 0, 595, 596, 0, 0, 597, 598,
	599, 601, 602, 600, 603, 0, 604, 0, 0, 605,
	606, 607, 663, 664, 665, 264, 609, 608, 610, 666,
	0, 0, 0, 0, 0, 611, 612, 667, 613, 614,
	615, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 616, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 617, 618, 0, 288, 619, 289, 620, 0,
	621, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 622, 623, 624, 0, 297, 298, 625, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 626, 627, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 628, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 629, 630, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 631,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 632, 633, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 634, 0, 635, 379, 0,
	380, 381, 382, 383, 384, 636, 637, 638, 461, 0,
	385, 386, 0, 387, 388, 389, 390, 0, 0, 0,
	0, 391, 392, 393, 395, 0, 0, 394, 639, 640,
	0, 641, 0, 396, 397, 0, 642, 0, 398, 399,
	400, 0, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 643, 0,
	412, 413, 0, 0, 414, 0, 0, 0, 415, 416,
	419, 0, 0, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 0, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 0, 448, 0, 0, 0,
	458, 459, 0, 644, 460, 645, 462, 463, 0, 0,
	464, 0, 0, 0, 466, 467, 468, 0, 0, 469,
	470, 646, 0, 471, 0, 647, 472, 473, 465, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 648, 485, 486, 487, 649, 488, 489, 490, 650,
	491, 651, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 652, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 0, 524, 525, 526, 527,
	653, 528, 0, 529, 530, 739, 537, 531, 532, 538,
	539, 540, 541, 542, 0, 544, 545, 543, 546, 547,
	548, 0, 549, 550, 533, 534, 551, 552, 0, 553,
	554, 555, 556, 557, 558, 654, 0, 559, 0, 560,
	561, 562, 564, 535, 565, 570, 571, 655, 566, 567,
	568, 569, 656, 573, 574, 0, 575, 576, 0, 572,
	563, 0, 577, 578, 579, 580, 581, 582, 583, 354,
	584, 0, 585, 657, 658, 659, 660, 0, 594, 0,
	586, 587, 588, 661, 589, 662, 0, 590, 591, 592,
	593, 0, 595, 596, 0, 0, 597, 598, 599, 601,
	602, 600, 603, 0, 604, 0, 0, 605, 606, 607,
	663, 664, 665, 264, 609, 608, 610, 666, 0, 0,
	0, 0, 0, 611, 612, 667, 613, 614, 615, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 616, 0, 2223, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	617, 618, 0, 288, 619, 289, 620, 0, 621, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 622,
	623, 624, 0, 297, 298, 625, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 626, 627, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 628, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 629, 630, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 631, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	632, 633, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 634, 0, 635, 379, 0, 380, 381,
	382, 383, 384, 636, 637, 638, 461, 0, 385, 386,
	0, 387, 388, 389, 390, 0, 0, 0, 0, 391,
	392, 393, 395, 0, 0, 394, 639, 640, 0, 641,
	0, 396, 397, 0, 642, 0, 398, 399, 400, 0,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 643, 0, 412, 413,
	0, 0, 414, 0, 0, 0, 415, 416, 419, 0,
	0, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	0, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 0, 448, 0, 0, 0, 458, 459,
	0, 644, 460, 645, 462, 463, 0, 0, 464, 0,
	0, 0, 466, 467, 468, 0, 0, 469, 470, 646,
	0, 471, 0, 647, 472, 473, 465, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 648,
	485, 486, 487, 649, 488, 489, 490, 650, 491, 651,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 652, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 0, 524, 525, 526, 527, 653, 528,
	0, 529, 530, 536, 537, 531, 532, 538, 539, 540,
	541, 542, 0, 544, 545, 543, 546, 547, 548, 0,
	0, 550, 533, 534, 551, 552, 0, 553, 554, 555,
	556, 557, 558, 654, 0, 559, 0, 560, 561, 562,
	564, 535, 565, 570, 571, 655, 566, 567, 568, 569,
	656, 573, 574, 0, 575, 576, 0, 572, 563, 0,
	577, 578, 579, 580, 581, 582, 583, 354, 584, 0,
	585, 657, 658, 659, 660, 0, 594, 0, 586, 587,
	588, 661, 589, 662, 0, 590, 591, 592, 593, 0,
	595, 596, 0, 0, 597, 598, 599, 601, 602, 600,
	603, 0, 604, 0, 0, 605, 606, 607, 663, 664,
	665, 264, 609, 608, 610, 666, 0, 0, 0, 0,
	0, 611, 612, 667, 613, 614, 615, 0, 270, 272,
	271, 273, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 616, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 617, 618,
	0, 288, 619, 289, 620, 0, 621, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 622, 623, 624,
	0, 297, 298, 625, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 626, 627, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 628, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 629, 630, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 631, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 632, 633,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 634, 0, 635, 379, 0, 380, 381, 382, 383,
	384, 1246, 637, 638, 461, 0, 385, 386, 0, 387,
	388, 389, 390, 0, 0, 0, 0, 391, 392, 393,
	395, 0, 0, 394, 639, 640, 0, 641, 0, 396,
	397, 0, 642, 0, 398, 399, 400, 0, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 643, 0, 412, 413, 0, 0,
	414, 0, 0, 0, 415, 416, 419, 0, 0, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 0, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 0, 448, 0, 0, 0, 458, 459, 0, 644,
	460, 645, 462, 463, 0, 0, 464, 0, 0, 0,
	466, 467, 468, 0, 0, 469, 470, 646, 0, 471,
	0, 647, 472, 473, 465, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 648, 485, 486,
	487, 649, 488, 489, 490, 650, 491, 651, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 652, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 0, 524, 525, 526, 527, 653, 528, 0, 529,
	530, 536, 537, 531, 532, 538, 539, 540, 541, 542,
	0, 544, 545, 543, 546, 547, 548, 0, 549, 550,
	533, 534, 551, 552, 0, 553, 554, 555, 556, 557,
	558, 654, 0, 559, 0, 560, 561, 562, 564, 535,
	565, 570, 571, 655, 566, 567, 568, 569, 656, 573,
	574, 0, 575, 576, 0, 572, 563, 0, 577, 578,
	579, 580, 581, 582, 583, 354, 584, 0, 585, 657,
	658, 659, 660, 0, 594, 0, 586, 587, 588, 661,
	589, 662, 0, 590, 591, 592, 593, 0, 595, 596,
	0, 0, 597, 598, 599, 601, 602, 600, 603, 0,
	604, 0, 0, 605, 606, 607, 663, 664, 665, 264,
	609, 608, 610, 666, 0, 0, 0, 0, 0, 611,
	612, 667, 613, 614, 615, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 616, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 617, 618, 0, 288,
	619, 289, 620, 0, 621, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 622, 623, 624, 0, 297,
	298, 625, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	626, 627, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 628,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	629, 630, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 631, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 632, 633, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 634,
	0, 635, 379, 0, 380, 381, 382, 383, 384, 636,
	637, 638, 461, 0, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 0, 391, 392, 393, 395, 0,
	0, 394, 639, 640, 0, 641, 0, 396, 397, 0,
	642, 0, 398, 399, 400, 0, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 643, 0, 412, 413, 0, 0, 414, 0,
	0, 0, 415, 416, 419, 0, 0, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 0, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 0,
	448, 0, 0, 0, 458, 459, 0, 644, 460, 645,
	462, 463, 0, 0, 464, 0, 0, 0, 466, 467,
	468, 0, 0, 469, 470, 646, 0, 471, 0, 647,
	472, 473, 465, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 648, 485, 486, 487, 649,
	488, 489, 490, 650, 491, 651, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 652,
	503, 1179, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 0,
	524, 525, 526, 527, 653, 528, 0, 529, 530, 536,
	537, 531, 532, 538, 539, 540, 541, 542, 0, 544,
	545, 543, 546, 547, 548, 0, 549, 550, 533, 534,
	551, 552, 0, 553, 554, 555, 556, 557, 558, 654,
	0, 559, 0, 560, 561, 562, 564, 535, 565, 570,
	571, 655, 566, 567, 568, 569, 656, 573, 574, 0,
	575, 576, 0, 572, 563, 0, 577, 578, 579, 580,
	581, 582, 583, 354, 584, 0, 585, 657, 658, 659,
	660, 0, 594, 0, 586, 587, 588, 661, 589, 662,
	0, 590, 591, 592, 593, 0, 595, 596, 0, 0,
	597, 598, 599, 601, 602, 600, 603, 0, 604, 0,
	0, 605, 606, 607, 663, 664, 665, 264, 609, 608,
	610, 666, 0, 0, 0, 0, 0, 611, 612, 667,
	613, 614, 615, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	616, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 617, 618, 0, 288, 619, 289,
	620, 0, 621, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 622, 623, 624, 0, 297, 298, 625,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 626, 627,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 628, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 629, 630,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 631, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 632, 633, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 634, 0, 635,
	0, 0, 380, 381, 382, 383, 384, 636, 637, 638,
	461, 0, 385, 386, 0, 387, 388, 389, 390, 0,
	0, 0, 0, 391, 392, 393, 395, 0, 0, 394,
	639, 640, 0, 641, 0, 396, 397, 0, 642, 0,
	398, 399, 400, 0, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	643, 0, 412, 413, 0, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 0, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 0, 448, 0,
	0, 0, 458, 459, 0, 644, 460, 645, 462, 463,
	0, 0, 464, 0, 0, 0, 466, 467, 468, 0,
	0, 469, 470, 646, 0, 471, 0, 647, 472, 473,
	465, 474, 475, 0, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 648, 485, 486, 487, 649, 488, 489,
	490, 650, 491, 651, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 0, 501, 502, 652, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 0, 524, 525,
	526, 527, 653, 0, 0, 529, 530, 536, 537, 531,
	532, 538, 539, 540, 541, 542, 0, 544, 545, 543,
	546, 547, 548, 0, 549, 550, 533, 534, 551, 552,
	0, 553, 554, 555, 556, 557, 558, 654, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 655,
	566, 567, 568, 569, 656, 573, 574, 0, 575, 576,
	0, 572, 563, 0, 577, 578, 579, 580, 581, 582,
	583, 354, 584, 0, 585, 657, 658, 659, 660, 0,
	594, 0, 586, 587, 588, 661, 589, 662, 0, 590,
	591, 592, 593, 0, 595, 596, 0, 0, 597, 598,
	599, 601, 602, 600, 603, 0, 604, 0, 0, 605,
	606, 607, 663, 664, 665, 0, 609, 608, 610, 666,
	0, 0, 0, 0, 0, 611, 612, 667, 613, 614,
	615, 1738, 1739, 0, 1771, 1772, 1773, 1781, 1782, 1783,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1774, 1769, 0, 0, 0, 0,
	1738, 1739, 1741, 1771, 1772, 1773, 1781, 1782, 1783, 0,
	0, 1787, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1774, 1769, 0, 0, 0, 0, 0,
	0, 1741, 0, 0, 0, 0, 0, 1740, 1738, 1739,
	1787, 1771, 1772, 1773, 1781, 1782, 1783, 1760, 0, 0,
	0, 0, 0, 0, 0, 0, 1757, 0, 0, 0,
	0, 1774, 1769, 0, 0, 0, 1740, 0, 0, 1741,
	0, 0, 0, 0, 0, 0, 1760, 0, 1787, 0,
	0, 0, 0, 0, 0, 1757, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1740, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1760, 0, 0, 0, 0, 0,
	0, 0, 0, 1757, 0, 0, 0, 0, 0, 0,
	0, 1763, 1764, 1765, 1766, 0, 0, 0, 0, 0,
	0, 1746, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1763, 1764, 1765, 1766, 0, 0, 0, 0, 0, 0,
	1746, 0, 0, 0, 0, 0, 0, 0, 1778, 0,
	0, 1788, 0, 0, 0, 0, 0, 1768, 1770, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1763, 1764,
	1765, 1766, 0, 0, 1784, 0, 1785, 1778, 1746, 0,
	1788, 0, 0, 1755, 1756, 0, 1768, 1770, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1776, 0, 1784, 0, 1785, 0, 0, 0, 0,
	0, 0, 1755, 1756, 0, 1778, 1761, 0, 1788, 0,
	0, 0, 0, 0, 1768, 1770, 0, 0, 0, 0,
	1776, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1784, 0, 1785, 0, 1761, 0, 0, 0, 0,
	1755, 1756, 0, 0, 0, 0, 0, 0, 1786, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1776, 0,
	0, 0, 0, 0, 0, 0, 1775, 0, 0, 0,
	0, 0, 0, 1761, 0, 0, 0, 1786, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1775, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1786, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1767, 0, 0, 1775, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1762, 0, 0, 0, 0, 0, 0, 0, 1767,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1779, 0, 0,
	1762, 0, 0, 0, 0, 0, 1738, 1739, 0, 1771,
	1772, 1773, 1781, 1782, 1783, 0, 0, 1767, 0, 0,
	0, 0, 0, 0, 0, 0, 1779, 0, 0, 1774,
	1769, 0, 0, 0, 0, 0, 0, 1741, 1762, 0,
	0, 0, 0, 0, 0, 0, 1787, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1779, 0, 0, 0, 0, 0,
	0, 0, 1740, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1760, 0, 0, 0, 0, 0, 0, 0,
	0, 1757, 0, 0, 0, 0, 0, 0, 1777, 0,
	0, 0, 0, 1752, 1753, 1759, 1780, 1758, 1754, 0,
	1751, 1749, 1750, 1742, 1743, 1744, 1745, 1747, 1748, 0,
	0, 0, 0, 4319, 0, 0, 0, 1777, 0, 0,
	0, 0, 1752, 1753, 1759, 1780, 1758, 1754, 0, 1751,
	1749, 1750, 1742, 1743, 1744, 1745, 1747, 1748, 0, 0,
	0, 0, 4318, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1777, 1763, 1764, 1765, 1766,
	1752, 1753, 1759, 1780, 1758, 1754, 1746, 1751, 1749, 1750,
	1742, 1743, 1744, 1745, 1747, 1748, 0, 0, 0, 0,
	4142, 0, 0, 0, 1738, 1739, 0, 1771, 1772, 1773,
	1781, 1782, 1783, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1778, 0, 0, 1788, 1774, 1769, 0,
	0, 0, 1768, 1770, 0, 1741, 0, 0, 0, 0,
	0, 0, 0, 0, 1787, 0, 0, 0, 0, 1784,
	0, 1785, 0, 0, 0, 0, 0, 0, 1755, 1756,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1740, 0, 0, 0, 0, 0, 1776, 0, 0, 0,
	1760, 0, 0, 0, 0, 0, 0, 0, 0, 1757,
	0, 1761, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1786, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1775, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1763, 1764, 1765, 1766, 0, 0,
	0, 0, 0, 0, 1746, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1738, 1739, 0, 1771, 1772,
	1773, 1781, 1782, 1783, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1774, 1769,
	0, 1778, 0, 0, 1788, 1767, 1741, 0, 0, 0,
	1768, 1770, 0, 0, 0, 1787, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1762, 1784, 0, 1785,
	0, 0, 0, 0, 0, 0, 1755, 1756, 0, 0,
	0, 1740, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1760, 1779, 0, 1776, 0, 0, 0, 0, 0,
	1757, 0, 0, 0, 0, 0, 0, 0, 0, 1761,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1786, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1775,
	0, 0, 0, 0, 0, 1763, 1764, 1765, 1766, 0,
	0, 0, 0, 0, 0, 1746, 0, 0, 0, 0,
	0, 0, 0, 1777, 0, 0, 0, 0, 1752, 1753,
	1759, 1780, 1758, 1754, 0, 1751, 1749, 1750, 1742, 1743,
	1744, 1745, 1747, 1748, 0, 0, 0, 0, 3987, 0,
	0, 0, 1778, 0, 0, 1788, 0, 0, 0, 0,
	0, 1768, 1770, 1767, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1784, 0,
	1785, 0, 0, 0, 1762, 0, 0, 1755, 1756, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1776, 0, 0, 1738, 1739,
	1779, 1771, 1772, 1773, 1781, 1782, 1783, 0, 0, 0,
	1761, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1774, 1769, 0, 0, 0, 0, 0, 0, 1741,
	0, 0, 0, 0, 0, 0, 0, 0, 1787, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1786, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1740, 0, 0, 0, 0, 0,
	1775, 0, 0, 0, 1760, 0, 0, 0, 0, 0,
	0, 0, 0, 1757, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1777, 0, 0, 0, 0, 1752, 1753, 1759, 1780,
	1758, 1754, 0, 1751, 1749, 1750, 1742, 1743, 1744, 1745,
	1747, 1748, 0, 0, 0, 0, 3914, 0, 0, 0,
	0, 0, 0, 0, 1767, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1762, 0, 0, 1763, 1764,
	1765, 1766, 0, 0, 0, 0, 0, 0, 1746, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1738,
	1739, 1779, 1771, 1772, 1773, 1781, 1782, 1783, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1774, 1769, 0, 1778, 0, 0, 1788, 0,
	1741, 0, 0, 0, 1768, 1770, 0, 0, 0, 1787,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1784, 0, 1785, 0, 0, 0, 0, 0, 0,
	1755, 1756, 0, 0, 0, 1740, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1760, 0, 0, 1776, 0,
	0, 0, 0, 0, 1757, 0, 0, 0, 0, 0,
	0, 0, 0, 1761, 0, 0, 0, 0, 0, 0,
	0, 0, 1777, 0, 0, 0, 0, 1752, 1753, 1759,
	1780, 1758, 1754, 0, 1751, 1749, 1750, 1742, 1743, 1744,
	1745, 1747, 1748, 0, 0, 0, 0, 3913, 0, 0,
	0, 0, 0, 0, 0, 1786, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1775, 0, 0, 0, 0, 0, 1763,
	1764, 1765, 1766, 0, 0, 0, 0, 0, 0, 1746,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1738, 1739, 0,
	1771, 1772, 1773, 1781, 1782, 1783, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1778, 0, 0, 1788,
	1774, 1769, 0, 0, 0, 1768, 1770, 1767, 1741, 0,
	0, 0, 0, 0, 0, 0, 0, 1787, 0, 0,
	0, 0, 1784, 0, 1785, 0, 0, 0, 1762, 0,
	0, 1755, 1756, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1740, 0, 0, 0, 0, 0, 1776,
	0, 0, 0, 1760, 1779, 0, 0, 0, 0, 0,
	0, 0, 1757, 0, 1761, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1786, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1775, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1763, 1764, 1765,
	1766, 0, 0, 0, 0, 0, 0, 1746, 0, 0,
	0, 0, 0, 0, 0, 1777, 0, 0, 0, 0,
	1752, 1753, 1759, 1780, 1758, 1754, 0, 1751, 1749, 1750,
	1742, 1743, 1744, 1745, 1747, 1748, 0, 0, 0, 0,
	3912, 0, 0, 0, 1778, 0, 0, 1788, 1767, 0,
	0, 0, 0, 1768, 1770, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1762,
	1784, 0, 1785, 0, 0, 0, 0, 0, 0, 1755,
	1756, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1779, 0, 1776, 1738, 1739,
	0, 1771, 1772, 1773, 1781, 1782, 1783, 0, 0, 0,
	0, 0, 1761, 0, 0, 0, 0, 0, 0, 0,
	0, 1774, 1769, 0, 0, 0, 0, 0, 0, 1741,
	0, 0, 0, 0, 0, 0, 0, 0, 1787, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1786, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1740, 0, 0, 0, 0, 0,
	0, 0, 1775, 0, 1760, 0, 0, 0, 0, 0,
	0, 0, 0, 1757, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1777, 0, 0, 0,
	0, 1752, 1753, 1759, 1780, 1758, 1754, 0, 1751, 1749,
	1750, 1742, 1743, 1744, 1745, 1747, 1748, 0, 0, 0,
	0, 3577, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1767, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1762, 1763, 1764,
	1765, 1766, 0, 0, 0, 0, 0, 0, 1746, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1779, 0, 0, 1738, 1739, 0, 1771,
	1772, 1773, 1781, 1782, 1783, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1778, 0, 0, 1788, 1774,
	1769, 0, 0, 0, 1768, 1770, 0, 1741, 0, 0,
	0, 0, 0, 0, 0, 0, 1787, 0, 0, 0,
	0, 1784, 0, 1785, 0, 0, 0, 0, 0, 0,
	1755, 1756, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1740, 0, 0, 0, 0, 0, 1776, 0,
	0, 0, 1760, 0, 0, 0, 0, 0, 0, 0,
	0, 1757, 0, 1761, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1777, 0, 0, 0, 0, 1752,
	1753, 1759, 1780, 1758, 1754, 0, 1751, 1749, 1750, 1742,
	1743, 1744, 1745, 1747, 1748, 0, 0, 0, 0, 3102,
	0, 0, 0, 0, 0, 1786, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1775, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1763, 1764, 1765, 1766,
	0, 0, 0, 0, 0, 0, 1746, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1738, 1739, 0,
	1771, 1772, 1773, 1781, 1782, 1783, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1774, 1769, 0, 1778, 0, 0, 1788, 1767, 1741, 0,
	0, 0, 1768, 1770, 0, 0, 0, 1787, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1762, 1784,
	0, 1785, 0, 0, 0, 0, 0, 0, 1755, 1756,
	0, 0, 0, 1740, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1760, 1779, 0, 1776, 0, 0, 0,
	0, 0, 1757, 0, 0, 0, 0, 0, 0, 0,
	0, 1761, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1786, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1775, 0, 0, 0, 0, 0, 1763, 1764, 1765,
	1766, 0, 0, 0, 0, 0, 0, 1746, 0, 0,
	0, 0, 0, 0, 0, 1777, 0, 0, 0, 0,
	1752, 1753, 1759, 1780, 1758, 1754, 0, 1751, 1749, 1750,
	1742, 1743, 1744, 1745, 1747, 1748, 0, 0, 0, 0,
	3101, 0, 0, 0, 1778, 0, 0, 1788, 0, 0,
	0, 0, 0, 1768, 1770, 1767, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1784, 0, 1785, 0, 0, 0, 1762, 0, 0, 1755,
	1756, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1776, 0, 0,
	1738, 1739, 1779, 1771, 1772, 1773, 1781, 1782, 1783, 0,
	0, 0, 1761, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1774, 1769, 0, 0, 0, 0, 0,
	0, 1741, 0, 0, 0, 0, 0, 0, 0, 0,
	1787, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1786, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1740, 0, 0, 0,
	0, 0, 1775, 0, 0, 0, 1760, 0, 0, 0,
	0, 0, 0, 0, 0, 1757, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1777, 0, 0, 0, 0, 1752, 1753,
	1759, 1780, 1758, 1754, 0, 1751, 1749, 1750, 1742, 1743,
	1744, 1745, 1747, 1748, 0, 0, 0, 0, 3100, 0,
	0, 0, 0, 0, 0, 0, 1767, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1762, 0, 0,
	1763, 1764, 1765, 1766, 0, 0, 0, 0, 0, 0,
	1746, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1738, 1739, 1779, 1771, 1772, 1773, 1781, 1782, 1783,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1774, 1769, 0, 1778, 0, 0,
	1788, 0, 1741, 0, 0, 0, 1768, 1770, 0, 0,
	0, 1787, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1784, 0, 1785, 0, 0, 0, 0,
	0, 0, 1755, 1756, 0, 0, 0, 1740, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1760, 0, 0,
	1776, 0, 0, 0, 0, 0, 1757, 0, 0, 0,
	0, 0, 0, 0, 0, 1761, 0, 0, 0, 0,
	0, 0, 0, 0, 1777, 0, 0, 0, 0, 1752,
	1753, 1759, 1780, 1758, 1754, 0, 1751, 1749, 1750, 1742,
	1743, 1744, 1745, 1747, 1748, 0, 0, 0, 0, 3099,
	0, 0, 0, 0, 0, 0, 0, 1786, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1775, 0, 0, 0, 0,
	0, 1763, 1764, 1765, 1766, 0, 0, 0, 0, 0,
	0, 1746, 4581, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1738, 1739, 0, 1771, 1772, 1773, 1781, 1782,
	1783, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1774, 1769, 0, 1778, 0,
	0, 1788, 0, 1741, 0, 0, 0, 1768, 1770, 1767,
	0, 0, 1787, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1784, 0, 1785, 0, 0, 0,
	1762, 0, 0, 1755, 1756, 0, 0, 0, 1740, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1760, 0,
	0, 1776, 0, 0, 0, 0, 1779, 1757, 0, 0,
	0, 0, 0, 0, 0, 0, 1761, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1786, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1775, 0, 0, 0,
	0, 0, 1763, 1764, 1765, 1766, 0, 0, 0, 0,
	0, 0, 1746, 0, 3162, 0, 0, 0, 3161, 0,
	0, 0, 0, 0, 0, 0, 0, 1777, 0, 4580,
	0, 0, 1752, 1753, 1759, 1780, 1758, 1754, 0, 1751,
	1749, 1750, 1742, 1743, 1744, 1745, 1747, 1748, 0, 1778,
	3066, 0, 1788, 0, 0, 0, 0, 0, 1768, 1770,
	1767, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1784, 0, 1785, 0, 0,
	0, 1762, 0, 0, 1755, 1756, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1776, 0, 0, 1738, 1739, 1779, 1771, 1772,
	1773, 1781, 1782, 1783, 0, 0, 0, 1761, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1774, 1769,
	0, 0, 0, 0, 3037, 0, 1741, 0, 0, 0,
	0, 0, 0, 0, 0, 1787, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1786,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1740, 0, 0, 0, 0, 0, 1775, 0, 0,
	0, 1760, 0, 0, 0, 0, 0, 0, 0, 0,
	1757, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1777, 0,
	0, 0, 0, 1752, 1753, 1759, 1780, 1758, 1754, 0,
	1751, 1749, 1750, 1742, 1743, 1744, 1745, 1747, 1748, 3038,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1767, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1762, 0, 0, 1763, 1764, 1765, 1766, 0,
	0, 0, 0, 0, 0, 1746, 0, 0, 0, 2601,
	0, 0, 0, 0, 0, 0, 1738, 1739, 1779, 1771,
	1772, 1773, 1781, 1782, 1783, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1774,
	1769, 0, 1778, 0, 2600, 1788, 0, 1741, 0, 0,
	0, 1768, 1770, 0, 0, 0, 1787, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1784, 0,
	1785, 0, 0, 0, 0, 0, 0, 1755, 1756, 0,
	0, 0, 1740, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1760, 0, 0, 1776, 0, 0, 0, 0,
	0, 1757, 0, 0, 0, 0, 0, 0, 0, 0,
	1761, 0, 0, 0, 0, 0, 0, 0, 0, 1777,
	0, 0, 0, 0, 1752, 1753, 1759, 1780, 1758, 1754,
	0, 1751, 1749, 1750, 1742, 1743, 1744, 1745, 1747, 1748,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1786, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1775, 0, 0, 0, 0, 0, 1763, 1764, 1765, 1766,
	0, 0, 0, 0, 0, 0, 1746, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1738, 1739, 0,
	1771, 1772, 1773, 1781, 1782, 1783, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1774, 1769, 0, 1778, 0, 0, 1788, 0, 1741, 0,
	0, 0, 1768, 1770, 1767, 0, 0, 1787, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1784,
	0, 1785, 0, 0, 0, 1762, 0, 0, 1755, 1756,
	0, 0, 0, 1740, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1760, 0, 0, 1776, 0, 0, 0,
	0, 1779, 1757, 0, 0, 0, 0, 0, 0, 0,
	0, 1761, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1786, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1775, 0, 0, 0, 0, 0, 1763, 1764, 1765,
	1766, 0, 0, 0, 0, 0, 0, 1746, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1777, 0, 0, 0, 0, 1752, 1753, 1759,
	1780, 1758, 1754, 0, 1751, 1749, 1750, 1742, 1743, 1744,
	1745, 1747, 1748, 0, 1778, 0, 0, 1788, 0, 0,
	0, 0, 0, 1768, 1770, 1767, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1784, 0, 1785, 0, 0, 0, 1762, 0, 0, 1755,
	1756, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1776, 0, 0,
	1738, 1739, 1779, 1771, 1772, 1773, 1781, 1782, 1783, 0,
	0, 0, 1761, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1774, 1769, 0, 0, 0, 0, 0,
	0, 1741, 0, 0, 0, 0, 0, 0, 0, 0,
	1787, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1786, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1740, 0, 0, 0,
	0, 0, 1775, 1035, 0, 0, 1760, 0, 0, 0,
	0, 0, 0, 0, 0, 1757, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1777, 0, 0, 0, 0, 1752, 1753,
	1759, 1780, 1758, 1754, 0, 1751, 1749, 1750, 1742, 1743,
	1744, 1745, 1747, 1748, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1767, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1762, 0, 0,
	1763, 1764, 1765, 1766, 0, 0, 0, 0, 0, 0,
	1746, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1738, 1739, 1779, 1771, 1772, 1773, 1781, 1782, 1783,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1774, 1769, 0, 1778, 0, 0,
	1788, 0, 1741, 0, 0, 0, 1768, 1770, 0, 0,
	0, 1787, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1784, 0, 1785, 0, 0, 0, 0,
	0, 0, 1755, 1756, 0, 0, 0, 1740, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1760, 0, 0,
	1776, 0, 0, 0, 0, 0, 1757, 0, 0, 0,
	0, 0, 0, 0, 0, 1761, 0, 0, 0, 0,
	0, 0, 0, 0, 1777, 0, 0, 0, 0, 1752,
	1753, 1759, 1780, 1758, 1754, 0, 1751, 1749, 1750, 1742,
	1743, 1744, 1745, 1747, 1748, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1786, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1775, 0, 0, 0, 0,
	0, 1763, 1764, 1765, 1766, 0, 0, 0, 0, 0,
	0, 1746, 0, 0, 0, 0, 0, 3168, 0, 0,
	0, 0, 1738, 1739, 0, 1771, 1772, 1773, 1781, 1782,
	1783, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1774, 1769, 0, 1778, 0,
	3163, 1788, 0, 1741, 0, 0, 0, 1768, 1770, 1767,
	0, 0, 1787, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1784, 0, 1785, 0, 0, 0,
	1762, 0, 0, 1755, 1756, 0, 0, 0, 1740, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1760, 0,
	0, 1776, 0, 0, 0, 0, 1779, 1757, 0, 0,
	0, 0, 0, 0, 0, 0, 1761, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3558,
	0, 0, 0, 0, 0, 0, 0, 0, 1786, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1775, 0, 0, 0,
	0, 0, 1763, 1764, 1765, 1766, 0, 0, 0, 0,
	0, 0, 1746, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1777, 0, 0,
	0, 0, 1752, 1753, 1759, 1780, 1758, 1754, 0, 1751,
	1749, 1750, 1742, 1743, 1744, 1745, 1747, 1748, 0, 1778,
	0, 0, 1788, 0, 0, 0, 0, 0, 1768, 1770,
	1767, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1784, 0, 1785, 0, 0,
	0, 1762, 0, 0, 1755, 1756, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1776, 0, 0, 1738, 1739, 1779, 1771, 1772,
	1773, 1781, 1782, 1783, 0, 0, 0, 1761, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1774, 1769,
	0, 0, 0, 0, 0, 0, 1741, 0, 0, 0,
	0, 0, 0, 0, 0, 1787, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1786,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1740, 0, 0, 0, 0, 0, 1775, 0, 0,
	0, 1760, 0, 0, 0, 0, 0, 0, 0, 0,
	1757, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1777, 0,
	0, 0, 0, 1752, 1753, 1759, 1780, 1758, 1754, 0,
	1751, 1749, 1750, 1742, 1743, 1744, 1745, 1747, 1748, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1767, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1762, 0, 0, 1763, 1764, 1765, 1766, 0,
	0, 0, 0, 0, 0, 1746, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1738, 1739, 1779, 1771,
	1772, 1773, 1781, 1782, 1783, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1774,
	1769, 0, 1778, 0, 3103, 1788, 0, 1741, 0, 0,
	0, 1768, 1770, 0, 0, 0, 1787, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1784, 0,
	1785, 0, 0, 0, 0, 0, 0, 1755, 1756, 0,
	0, 0, 1740, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1760, 0, 0, 1776, 0, 0, 0, 0,
	0, 1757, 0, 0, 0, 0, 0, 0, 0, 0,
	1761, 0, 0, 0, 0, 0, 0, 0, 0, 1777,
	0, 0, 0, 0, 1752, 1753, 1759, 1780, 1758, 1754,
	0, 1751, 1749, 1750, 1742, 1743, 1744, 1745, 1747, 1748,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1786, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1775, 0, 0, 0, 0, 0, 1763, 1764, 1765, 1766,
	0, 0, 0, 0, 0, 0, 1746, 0, 0, 0,
	0, 3130, 0, 0, 0, 0, 0, 1738, 1739, 0,
	1771, 1772, 1773, 1781, 1782, 1783, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1774, 1769, 0, 1778, 0, 0, 1788, 0, 1741, 0,
	0, 0, 1768, 1770, 1767, 0, 0, 1787, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1784,
	0, 1785, 0, 0, 0, 1762, 0, 0, 1755, 1756,
	0, 0, 0, 1740, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1760, 0, 0, 1776, 0, 0, 0,
	0, 1779, 1757, 0, 0, 0, 0, 0, 0, 0,
	0, 1761, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1786, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1775, 0, 0, 0, 0, 0, 1763, 1764, 1765,
	1766, 0, 0, 0, 0, 0, 0, 1746, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1777, 0, 0, 0, 0, 1752, 1753, 1759,
	1780, 1758, 1754, 0, 1751, 1749, 1750, 1742, 1743, 1744,
	1745, 1747, 1748, 0, 1778, 0, 0, 1788, 0, 0,
	0, 0, 0, 1768, 1770, 1767, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1784, 0, 1785, 0, 0, 0, 1762, 0, 0, 1755,
	1756, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1776, 0, 0,
	0, 0, 1779, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1761, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1786, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1775, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1777, 0, 0, 0, 0, 1752, 1753,
	1759, 1780, 1758, 1754, 0, 1751, 1749, 1750, 1742, 1743,
	1744, 1745, 1747, 1748, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1767, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1762, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1779, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1777, 0, 0, 0, 0, 1752,
	1753, 1759, 1780, 1758, 1754, 0, 1751, 1749, 1750, 1742,
	1743, 1744, 1745, 1747, 1748,
}

var sqlPact = [...]int{
	7522, -1000, -1000, -1000, -1000, 166, -1000, -1000, 165, 164,
	163, 160, 158, 157, 155, 153, 151, 143, 141, -1000,
	-1000, -1000, -1000, -1000, -1000, 140, -1000, -1000, 136, -1000,
	135, 133, 131, -1000, -1000, 130, -1000, 129, -1000, -1000,
	-1000, -1000, 124, 119, 118, 89091, 88546, 89629, 2156, 111297,
	97189, 1829, 79854, 110752, 79309, 110207, 1963, 10477, 109662, 2645,
	117, -1000, 109117, 116, 115, 113, -1000, 108572, -1000, 1915,
	-1000, 111, -1000, 4607, 64566, 110, 109, 108, 2809, 107,
	-1000, 104, 102, -1000, -1000, 99, -1000, 15526, 1430, -1000,
	97, 94, -1000, 548, 94478, 92, 91, 2364, 88, 87,
	64020, 85, 84, 2261, 2770, -1000, -1000, 1919, -1000, -1000,
	83, 82, 80, 78, 70, 69, 68, 65, 64, 61,
	60, -1000, 58, 50, 43, 38, 37, -1000, 36, 35,
	34, -1000, 32, -1000, 31, 30, 29, 28, 27, 23,
	19, 16, 15, 14, 13, 12, 11, 9, 16500, -1000,
	1702, 1583, 1573, 1571, 1568, 1560, 913, 8, 7, 6,
	4, 3, 2, 1, 0, -1, -2, -3, -8, -10,
	-11, -12, -15, -17, 147, -18, -19, -20, -21, -22,
	-25, -26, 2426, -1000, 1587, 926, 30091, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 117215, 111835, -33, -93, -34, -1000, 3201,
	1000, 53065, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	252, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	463, 2047, 692, -1000, -1000, -1000, 108034, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2154, -46, -1000, 1871, -1000,
	-1000, -1000, -1000, -1000, 690, -1000, 2148, 296, 2089, -1000,
	-1000, -1000, 3265, 2343, 3670, 3669, 3668, 3667, 3664, 116677,
	1682, 3663, 2437, 3661, 3660, 3659, 3658, 3656, 3655, 3653,
	-1000, 88001, 971, 87456, 86911, 3278, 107496, 86366, 106951, 73330,
	45153, 819, 3264, -1000, -1000, -1000, -1000, -1000, -1000, 111835,
	-1000, 970, -1000, -1000, 3652, 3651, 1928, 689, 96644, -1000,
	1490, -1000, 854, 31804, -1000, 1142, -1000, 31804, 243, -1000,
	-1000, -1000, -1000, -1000, -1000, 3649, 3646, 3644, 3643, 3642,
	-1000, -1000, 78764, 23187, 78219, 77674, 106406, 22631, 85821, 85276,
	3640, 105861, 72774, 969, 1358, -1000, -1000, -1000, -1000, -1000,
	-1000, -55, 70550, 3418, 111835, -1000, 242, -1000, -1000, -1000,
	-1000, -1000, -1000, 44570, 706, 43987, 304, 43404, 298, -1000,
	-1000, -1000, -1000, 72218, -1000, 105316, 2295, 3639, 3638, 1044,
	3637, 3134, 1610, 3636, 1651, 1124, 3635, 3634, 3628, 3626,
	3623, 3621, 3620, 1243, 104771, 2848, 1356, 104226, 1581, 71662,
	968, 84731, 89629, 2546, 103681, 1230, 1216, -1000, -1000, -1000,
	-1000, 3002, 2769, 2742, 1033, -1000, -1000, -1000, -1000, 55788,
	7444, 5410, 9596, 103136, 58598, 89629, 89629, -1000, -1000, -1000,
	-1000, -1000, 42821, 294, 42238, 764, -1000, -1000, 56350, 2821,
	-1000, -1000, -1000, -1000, 41655, 290, 41072, 763, 111835, -1000,
	2847, 1732, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2338, 1533,
	3433, 2652, 71106, 1930, 1352, 3220, 3000, 2996, 1443, 2995,
	3619, 2449, 2991, 2989, 2987, 2986, 2983, 1209, 2500, 274,
	29508, 2839, 1561, 40489, 1441, 1423, 2970, 2943, 3459, 1861,
	1853, 1978, 77129, 3617, 3614, 3166, 2934, 2915, 2702, 2903,
	-1000, 2820, -1000, -1000, -1000, -1000, 1378, -1000, -1000, -1000,
	-1000, 80392, -1000, -1000, 1263, -1000, -1000, 1263, -1000, -1000,
	-1000, -1000, -1000, 1189, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1587, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2006, -1000, 1885, -1000,
	-1000, 2427, 3176, 3176, 3176, 3259, 423, 418, -1000, 147,
	-1000, -1000, 122886, -1000, -1000, 45724, 45724, 45724, 45724, 45724,
	45724, 45724, 2002, -1000, 688, -1000, -1000, 732, -1000, 686,
	563, -1000, -1000, -1000, -1000, -1000, -1000, 683, -1000, -1000,
	-1000, -1000, -1000, -1000, 3418, -1000, 26022, -1000, -1000, -1000,
	376, 682, 45724, -1000, -1000, 3478, 3476, 945, -1000, 211,
	892, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2846, 679, 678, -1000, 674, 673, 670,
	669, 666, -1000, -1000, -1000, 665, 664, 662, 661, 659,
	657, 656, 653, -1000, 1898, -1000, -1000, -1000, -1000, -1000,
	-1000, 620, 617, 617, 617, -1000, 962, -1000, -1000, -1000,
	309, 613, 306, 611, 610, 609, -1000, 652, 651, 650,
	647, 646, 644, 643, 641, 639, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 960, -1000, -1000, -1000, -1000, -61, 111835,
	-1000, 463, -61, -1000, -1000, 638, -1000, 34100, 34100, 34100,
	-1000, -1000, 2147, 45724, -1000, 2495, -1000, -50, -50, 823,
	54696, -1000, 51973, 823, 279, 741, 60229, -1000, 2819, -1000,
	-1000, 633, 208, -1000, -1000, -1000, -1000, 23741, 2818, 111835,
	111835, 89629, 89629, 89629, 3613, 3069, 45724, -1000, -1000, 68361,
	111835, 90705, -1000, -1000, 3362, 65104, 67818, 111835, 2845, 67280,
	3612, -1000, -1000, -1000, -1000, -1000, 3047, 3611, 3609, 3608,
	-1000, 111835, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 214,
	3046, -1000, -1000, 93933, 214, 3043, -1000, 214, 3039, -1000,
	93395, -1000, -1000, 2069, 3032, -1000, -1000, 223, 3031, -1000,
	-1000, -1000, 215, 3030, -1000, -1000, 207, -85, 3021, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 122886, -1000, -1000, -1000, 66735, -1000, 3195, -1000, -1000,
	111835, -1000, 45724, -1000, 3360, 1324, 74427, 3304, -72, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2415, 2383, 1072, 2190,
	-1000, 3082, 1579, -1000, 31804, 3122, -1000, -1000, -1000, 205,
	23741, -1000, -1000, -1000, -1000, -1000, -1000, 5235, 3017, 1414,
	-1000, 2188, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1785, 3014, -1000, 1995, 3011, 1782, -1000, -1000, 2439, -1000,
	3163, -1000, -1000, 2168, 2978, -49, -1000, -1000, 2550, -1000,
	-1000, 1870, -1000, 930, 2974, -1000, 84186, 58036, 56350, 70550,
	-64, -1000, -1000, -1000, -1000, -124, -1000, 22075, 122886, -1000,
	-1000, -1000, -1000, 1608, 122886, 859, -1000, -1000, 2972, -1000,
	122886, 855, -1000, -1000, 2968, -1000, 2844, -1000, -1000, 2293,
	-1000, -1000, 3607, -1000, -1000, 3606, -1000, 3602, 3600, 3599,
	-1000, 1529, 1866, 3595, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 83648, 2145, -1000, -1000, 82558, 2843, -1000, 2291,
	3303, -1000, 83103, 966, -1000, 930, 2289, -1000, 92857, 920,
	2288, -1000, 3592, 3276, 2614, 930, 2285, -1000, -1000, -1000,
	-1000, -1000, 963, -1000, 61854, -1000, 61854, -1000, 1486, -1000,
	116139, -50, 89629, 3418, -1000, -97, -1000, -1000, -1000, 1000,
	-1000, 55242, -1000, 55242, 96099, 73884, 896, 687, 63474, 122886,
	-1000, -1000, -1000, -1000, 122886, -1000, -1000, -1000, -166, 2649,
	-1000, 73884, 57474, 122886, -1000, -1000, -1000, -1000, 122886, -1000,
	-1000, -1000, 73884, 82558, -1000, 102591, 82020, -1000, -1000, 1242,
	2453, -1000, -1000, -1000, 73884, 1259, 73884, 73884, 73884, -1000,
	102046, -1000, -1000, 1973, 1162, 3186, 1960, 89629, -1000, 1687,
	-1000, -1000, -1000, 3208, 111835, -1000, -1000, 2840, -1000, 66189,
	92319, -1000, 91781, -1000, 91243, -1000, 89629, -1000, 89629, -1000,
	3591, 3587, 3576, -1000, -1000, 3564, -1000, 3559, 3200, -1000,
	122886, 3198, -1000, 3558, 3292, 2839, 122886, -1000, 3007, 1592,
	1589, 111835, -1000, -1000, 111835, -1000, 111835, -1000, -1000, -1000,
	1385, -1000, -1000, 2414, -1000, -1000, -1000, -1000, 89629, 1212,
	-1000, -1000, -1000, -1000, -1000, -1000, 2912, 3556, 1495, -1000,
	1684, -1000, 2807, 3210, -1000, 1238, -1000, -1000, 230, -1000,
	-1000, -72, -1000, 115601, -1000, 2427, -1000, 111835, -1000, 2384,
	2832, 2837, 1276, 2167, 2487, -1000, 39906, 2441, 49150, 2172,
	147, -1000, -1000, 147, 147, 31233, -1000, -1000, 65104, 65104,
	23741, 1200, 45724, 45724, 45724, 45724, 45724, 45724, 45724, 45724,
	45724, 45724, 45724, 45724, 45724, 45724, 45724, 45724, 45724, 45724,
	45724, 45724, 45724, 45724, 45724, 45724, 45724, 45724, 45724, 45724,
	45724, 45724, 45724, 45724, 45724, 45724, 45724, 2281, 45724, 1187,
	45724, 45724, 45724, 45724, 2149, -1000, -1000, 1810, 503, 1943,
	-1000, 3417, 3417, 3417, 598, 598, 5481, 5481, 452, 3555,
	732, -1000, 45724, -1000, 79, 45724, 24297, -1000, 418, 7856,
	2305, -1000, 417, 24880, -1000, -1000, -1000, 26022, 563, 39323,
	45724, 948, 122886, -1000, -1000, 1271, 3444, 21520, 2856, 2689,
	631, 821, 801, 28925, 28342, 27759, 27176, 791, 45724, 45724,
	45724, 45724, 45724, 45724, 45724, 45724, -1000, -1000, 3451, -1000,
	3444, -1000, -1000, -1000, -1000, 3444, 1199, 1198, 3444, -1000,
	3444, 3444, 7150, 7150, 38752, 38169, 37586, 49721, 37003, 45724,
	26593, 36420, 35837, -1000, 111835, -61, 3359, 45724, 295, -1000,
	121455, -1000, 295, 295, 630, -107, 122886, 2463, 2463, 53609,
	2395, 2044, 2044, 2044, -1000, 823, 17051, 823, 100965, 2055,
	823, 823, 203, 236, 415, 51429, 2495, 100965, 711, 628,
	-37, -39, -40, -1000, -1000, -41, -42, -1000, -1000, 89629,
	627, 24297, 23741, 201, 1379, -108, 2521, 2511, 2509, -1000,
	2506, -1000, 1622, -109, 1186, 89629, 111835, 3553, -98, -1000,
	768, -121, -1000, 1029, 192, 3444, -1000, -1000, -1000, -1000,
	-1000, 3550, 3549, -1000, 959, 626, 623, 367, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 620, 617, 617, 617,
	-1000, 309, 613, 306, 611, 610, 609, -1000, -1000, -1000,
	-1000, -1000, 2805, 89629, 111835, 3547, -124, 90705, -59, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 111835, -1000, -1000,
	-1000, 3545, -1000, 89629, -1000, -1000, 89629, 214, 2966, -1000,
	89629, -1000, 89629, 213, 2964, -1000, -1000, 111835, -1000, 89629,
	89629, -1000, 111835, 111835, 111835, 73884, 73884, 229, -1000, 89629,
	827, -129, 1051, -72, -1000, -1000, -1000, 1263, -1000, 1670,
	-1000, -1000, -1000, -1000, -1000, -1000, 1249, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 945, -1000, -1000, -1000, -1000,
	-1000, -1000, 3441, 3439, -62, -1000, -1000, 23741, -1000, -73,
	1507, 1925, 1176, -1000, 76584, 2292, 3196, 3544, 2587, 3150,
	1466, -1000, 1383, -1000, 3268, 80392, 3317, 3326, 195, -1000,
	2800, -1000, -1000, 852, 1481, 1604, 1175, 1174, 80392, 1995,
	-1000, 65104, -1000, 2514, 3256, 1331, 1329, 1331, 1331, 1341,
	-1000, 80392, 1601, 1169, 1166, 1165, 1800, 1777, -1000, -1000,
	1875, -1000, 1161, 1158, 765, 1762, -1000, -76, 3315, 3325,
	193, -1000, 2795, 1156, -1000, -1000, -1000, 3255, 89629, 23741,
	1482, 1480, 1478, 1600, 1154, -63, -1000, 3310, 1151, 1140,
	-1000, 6973, -1000, 73884, 1779, 2963, 2648, 820, 2647, -1000,
	-1000, -1000, 820, -64, 70550, 111835, 189, -1000, 79, 45724,
	45724, 79, 45724, 79, 3291, 2961, -1000, -1000, -1000, -1000,
	-1000, 3538, 1839, 2431, -1000, -1000, 604, 2280, 2783, 111835,
	2552, -66, 89629, -1000, 65646, 2960, 68904, 1995, 2266, -1000,
	-1000, 81475, -1000, 2959, 463, 2265, -1000, 516, 3537, 2958,
	-1000, 115063, -1000, 3195, 1114, 2954, 1011, 600, 3357, -1000,
	600, 62398, -1000, 111835, -1000, -50, 5400, 75508, -131, -138,
	413, -1000, 101508, 111835, 1007, 76046, 111835, 3109, 925, 56350,
	-1000, 56350, -141, -166, 2642, 1351, 896, 896, 820, -1000,
	820, -1000, 89629, 2835, -1000, -1000, 73884, 896, 896, 896,
	-1000, -1000, -1000, -1000, 3532, 3531, 3527, 3526, -1000, -1000,
	928, 89629, 111835, 89629, -1000, 186, -1000, 111835, -1000, 111835,
	111835, 89629, -1000, 928, 111835, 928, 111835, 928, 111835, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 79, 45724, -1000, -1000,
	3523, 1534, -1000, 2834, -1000, 2833, -1000, -13, -1000, -1000,
	-1000, -1000, -1000, -1000, 1884, -1000, -1000, -1000, -1000, 89629,
	89629, 89629, 89629, 111835, 3097, -1000, 111835, 3092, 89629, -1000,
	80392, -1000, 2384, 2832, -1000, -1000, -1000, -1000, -1000, -1000,
	1408, 2102, -1000, 2473, -1000, 1426, -1000, -1000, -1000, 122886,
	50292, -1000, -1000, 122886, 1626, -1000, 48579, 48008, -1000, -1000,
	1588, 89629, 2555, -1000, 2555, -106, -1000, 121274, 2471, 89629,
	-1000, -1000, -1000, -1000, -1000, 851, 1349, 1349, 1310, 1310,
	1310, 1310, 3299, 4836, 6453, 5654, 12479, 12479, 485, 485,
	485, 485, 485, 12479, 5534, 598, 598, 5534, 5534, 5534,
	5534, 5534, 598, 598, 598, 12479, 12479, 12479, 5481, 9393,
	9899, 45724, 45724, 1138, 1788, 503, 8924, 45724, 5208, 5208,
	5208, 5208, -1000, 1824, -1000, -1000, -1000, -1000, 2781, 601,
	49721, 49721, -1000, -1000, -1000, -1000, 25451, 45724, -1000, -1000,
	-1000, -1000, 35254, -1000, -1000, 120649, -319, 412, -103, 57,
	-1000, 45724, 45724, 45724, 411, -1000, 179, 45724, 111835, -1000,
	14484, 704, -137, -1000, -144, 1353, -1000, 45724, -1000, -1000,
	1137, -1000, 1132, 1131, 1128, -1000, 599, 409, -1000, 178,
	-1000, 2039, 596, 595, 45724, -1000, -1000, -1000, -1000, -1000,
	120386, -1000, -1000, 120205, -1000, -1000, 120017, -1000, -1000, 119756,
	-1000, -1000, -1000, 122705, 13744, 13127, 12248, 6475, 11545, 11283,
	-147, 407, -149, 406, 850, 846, 404, 402, 401, -150,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -152, 400, -1000, 2779, -103, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 399, -1000, 398, -1000, 122524,
	-103, 396, 591, -1000, 49721, 49721, 49721, -1000, 391, -1000,
	121011, -1000, 122261, 34683, 34683, 34683, 389, 122080, 45724, -103,
	-155, -1000, -157, -1000, -1000, 494, -158, 899, 34100, 52519,
	23741, -1000, 899, 899, 45724, -1000, 45724, 2485, -1000, -1000,
	-1000, -1000, 2479, 1743, 2463, 53609, -1000, -1000, -1000, -1000,
	100965, -1000, 3418, 2556, -1000, 100965, -1000, -1000, 111835, 463,
	-1000, 100965, 100965, 23741, 823, -1000, 823, 100965, 634, -1000,
	-1000, -1000, -1000, -1000, 388, 59141, 57, 177, 23741, 930,
	-1000, 2524, 2524, 2524, 2524, -1000, -1000, 111835, 1127, -70,
	-132, -1000, 3388, -1000, 1922, -1000, 65104, -1000, 728, 997,
	23741, -1000, -1000, -1000, 588, -1000, 3444, 3444, -1000, 3444,
	111835, 2778, 180, -1000, 132, 68904, 68904, 3522, -1000, -1000,
	214, -1000, 89629, 214, 214, -1000, 89629, 89629, 2069, -1000,
	223, -1000, 215, -1000, -1000, -85, -1000, 942, 31804, -1000,
	1263, -1000, -1000, 1465, -1000, 1844, -1000, 1195, -1000, -1000,
	-1000, -1000, 31804, -1000, 2340, 111835, 111835, 89629, -1000, 111835,
	-1000, 1984, 3386, 1742, 2412, 2407, 68904, -1000, 2264, 114525,
	2247, 65104, 111835, -1000, -1000, 577, 871, 2469, 2467, 1004,
	111835, 111835, 2465, 113987, 113449, -1000, 3521, 111835, 1913, 45724,
	3253, 2049, 4837, 79, 79, -1000, -1000, 79, 576, 1283,
	89629, 89629, 111835, 68904, 89629, 1735, -1000, -1000, -1000, -1000,
	-1000, 80930, -1000, -1000, 3450, 3448, -1000, 1331, -1000, -1000,
	-1000, 1331, 1995, 1697, 111835, 68904, 89629, 68904, 111835, 111835,
	-1000, 1593, 111835, 1397, -1000, 765, 1937, 79, 79, -1000,
	-1000, 79, 575, 23741, 1801, -1000, 2877, 111835, 3474, 112911,
	3472, 111835, 111835, 111835, 68904, 3180, 111835, 111835, 68904, 6973,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 70012, 1016, 930, 1564, 1126, 1123, 80392, 56350, 912,
	56350, 2619, -1000, -1000, 20965, -1000, 122886, 122886, -1000, 122886,
	-1000, 65646, 111835, -1000, 964, 111835, 76046, 885, 2949, 61310,
	-124, 896, 73884, 89629, -66, 2552, 111835, -1000, -1000, 1995,
	2942, 463, 2262, -1000, 73884, 3356, 2939, 571, 3516, 3514,
	-1000, 89629, 2141, 2255, -1000, -1000, 112373, 3057, 765, 111835,
	899, 53609, 1834, -1000, 59686, 983, 111835, 1597, 103, -1000,
	-1000, -1000, -23, 111835, -1000, 605, -1000, -1000, 5400, 5400,
	896, -181, 570, -1000, 813, 802, 56912, 73884, -160, -1000,
	-1000, -1000, -1000, 2247, 89629, 111835, 1237, 2603, 111835, -163,
	-1000, 176, 566, -1000, 2177, -1000, -166, -1000, 925, 56350,
	2776, 2775, -1000, -1000, 939, -1000, 1236, 896, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -51,
	111835, -124, -124, -68, -70, -1000, 928, -1000, 928, -1000,
	928, -1000, 122886, -1000, -1000, 1525, 1485, 111835, -1000, 23741,
	111835, 89629, 23741, 89629, 2831, 2829, -1000, -1000, -1000, 111835,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1020, -1000, 1626,
	2094, -1000, 563, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2370, -1000, -71, 31233, 830, -1000, -1000, 89629,
	-52, 45724, 45724, 8051, 6296, 45724, 49721, 49721, -1000, 45724,
	4767, -1000, -1000, -1000, -1000, -1000, 2771, 562, 45724, 65104,
	6267, 6065, -1000, 380, 8710, 5534, -1000, 45724, -1000, 379,
	33529, -1000, 121636, -56, -168, -1000, 17619, -103, -169, -1000,
	-1000, 724, -1000, 2950, -1000, 45724, 121899, 2309, 1854, 1765,
	1539, 3444, 3469, 20410, -1000, 62936, 946, 2073, 119568, -1000,
	-1000, -1000, -1000, 65104, 65104, 45724, 45724, -1000, 45724, 45724,
	45724, -1000, -1000, -1000, 3444, 845, -1000, -1000, -1000, 845,
	-1000, -1000, 1331, -1000, 1331, -1000, 45724, -1000, -1000, 2767,
	45724, -1000, 65104, 65104, 49721, 49721, 49721, 49721, 49721, 49721,
	49721, 49721, 49721, 49721, 49721, 49721, 49721, 49721, 49721, 49721,
	49721, 49721, 49721, 2399, 49721, 3410, 3410, 3410, -1000, 2813,
	2767, 45724, 45724, 65104, 378, 372, 365, -1000, 45724, -103,
	-1000, -1000, 5400, 559, -1000, 2353, -1000, 2686, -1000, 45724,
	-1000, -165, -1000, 2495, -1000, -1000, 2686, 2686, -170, 122886,
	53609, 53609, -1000, 558, 45724, 2468, -1000, -1000, 702, -317,
	-1000, 800, -1000, -1000, -1000, -1000, -1000, 463, -1000, -1000,
	-1000, 175, 100965, 100965, 701, -1000, -171, -1000, -1000, -176,
	-1000, 3349, 363, 23741, -1000, 899, 2788, -1000, -1000, -1000,
	-1000, -1000, -1000, -124, 111835, 111835, 2080, 3468, -1000, 3445,
	721, 700, 173, 3444, 362, 352, 349, -124, 111835, 111835,
	111835, -1000, -1000, -1000, -1000, 214, -1000, -1000, -1000, 213,
	-1000, -1000, -1000, -1000, 2522, -1000, -72, -1000, -1000, -1000,
	45724, -1000, -1000, 3172, 1120, 1119, -1000, -1000, -1000, -1000,
	2270, 1740, 90167, 3385, 1736, 1715, -1000, 2938, -1000, 2243,
	-1000, 992, -1000, 1479, -1000, 45724, 555, 2595, 554, 553,
	3510, 1818, 3508, 1006, 2933, 2069, 2931, 2069, -1000, -1000,
	-1000, 860, -1000, 122886, 2049, -1000, 552, 551, -1000, -73,
	1502, 1817, 1118, 938, -1000, -1000, 45724, 45724, 100427, -1000,
	422, 3163, -53, -1000, -1000, -1000, 1552, 1117, 1116, -1000,
	-1000, -1000, -1000, 1995, 1548, 1110, 1108, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 937, -1000, 2882, 2878, 843, 111835,
	-1000, 936, -1000, -1000, 45724, -1000, -76, 1106, 3309, 2242,
	89629, -1000, 2069, 2930, 1100, -1000, 1099, -1000, -1000, -1000,
	3302, 3300, 1102, -1000, -1000, -1000, -1000, -1000, 69458, -1000,
	111835, 68904, 89629, 1635, 820, -1000, 2387, 820, 912, 2761,
	-1000, 2543, 934, 89629, 3507, 346, -178, -77, 65104, 3347,
	-1000, 2164, 539, 89629, 805, -1000, 3418, -1000, -1000, -1000,
	933, -1000, 3298, 89629, 3346, 2929, 930, 79, 89629, 3420,
	-1000, -1000, 3345, 89629, 2926, 2132, 2227, 2425, 765, 74970,
	930, 2062, -84, -1000, 1597, 32946, 3161, -184, -1000, -1000,
	-1000, 899, 62398, 53609, 45724, 3506, -186, -1000, -1000, -1000,
	-1000, -1000, 97732, 97732, 73884, 73884, 73884, 896, 111835, 111835,
	76046, -1000, -1000, 549, 111835, 111835, 544, -1000, 111835, 111835,
	3505, 73884, -78, 541, -1000, 799, 798, 797, -1000, -1000,
	-1000, -1000, -1000, 925, -1000, -166, 56350, 79, -1000, 2078,
	89629, -1000, 19855, -1000, -1000, -1000, -1000, -1000, -1000, 928,
	-1000, -1000, 1951, 2171, 1951, 1686, 1668, -1000, -1000, 2093,
	-1000, -1000, -1000, -1000, 2542, 3168, 23741, 3301, 5208, 45724,
	45724, 4755, 1113, 542, 5208, 45724, 45724, 65104, 16104, -189,
	45724, 45724, -1000, 45724, 699, 122886, 3467, 45724, 344, 341,
	-1000, -1000, -1000, 3443, -1000, -1000, -1000, 122886, 45724, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 339, -1000, 168, -1000,
	-1000, -1000, 117753, -1000, 45724, 338, 3246, -1000, 336, 335,
	8284, 453, 119387, 119124, 118943, 330, -1000, -1000, 323, 322,
	122886, 2813, 122886, -1000, -1000, 941, 941, 1299, 1299, 1299,
	1299, 3410, 366, 856, 2139, 2050, 2050, 2050, 1941, 897,
	897, 2050, 2050, 2050, 2755, 2366, 528, 6532, -1000, -1000,
	122886, 122886, 321, -1000, -1000, -1000, -103, 317, 5400, -1000,
	2681, 3244, 122886, -1000, 53609, 2681, 2681, -1000, -1000, 1743,
	111835, 122886, 53609, -1000, 2556, -1000, 18185, -1000, 23741, -1000,
	-1000, -1000, -1000, 3418, -1000, 59141, -1000, 522, -1000, -45,
	-1000, 2788, -1000, 794, -1000, -1000, 73884, 73884, -124, -124,
	-1000, -1000, 696, 3503, 718, 23741, 313, -1000, -1000, -1000,
	-124, -124, -124, -1000, -1000, -1000, 3108, 122886, 111835, 111835,
	1431, 99889, 3344, 3343, 95554, 1650, -1000, -1000, 1761, 2406,
	-1000, 3379, 3378, 111835, 2913, -1000, 3333, -1000, 1004, 118755,
	54153, -1000, 54153, 111835, -1000, -1000, 1769, 2561, 1036, -1000,
	3211, 111835, -1000, 111835, -1000, -1000, -1000, 111835, 111835, 89629,
	111835, -1000, 68904, 2890, -194, 122886, -79, -1000, 790, -1000,
	1323, -1000, 19300, 111835, 68904, 89629, 111835, 68904, 89629, 1983,
	-1000, -1000, 2867, -1000, 2883, -195, 23741, -1000, 3465, 3464,
	2909, 3215, -1000, 111835, 3463, 111835, 89629, 3107, -1000, -1000,
	-1000, -1000, -1000, 1545, 1098, 1096, 912, -80, 521, -1000,
	788, -1000, -1000, 786, 912, -1000, 73884, 56350, 3502, 463,
	-1000, 2584, -1000, 95016, 2096, 79, -1000, 3499, 98275, 520,
	-1000, 2061, -1000, 695, -1000, 2308, 68904, 1995, 79, 89629,
	-1000, -1000, 463, 311, -81, -1000, 2976, 998, 23741, 89629,
	2902, 2396, 765, 74970, -1000, 1114, 2487, -1000, -82, -1000,
	616, 79, 2062, -1000, -84, 122886, -1000, 779, -1000, -196,
	-1000, -1000, 310, -1000, 3106, 3103, -1000, 2711, 54153, 519,
	518, 111835, 3101, -1000, -1000, -197, 2104, 2104, 73884, 56350,
	73884, -1000, 925, 820, -1000, 2313, -1000, -1000, -1000, -1000,
	-1000, 23741, 1439, -1000, 515, 514, -1000, -1000, -1000, -1000,
	3168, 5208, 5208, 45724, 45724, 45724, 5208, 16104, -202, -1000,
	5208, 5208, -103, -1000, -1000, 121636, -1000, -1000, -1000, 122886,
	-1000, 18745, 1952, -1000, 118367, -1000, 31233, -1000, -1000, 45724,
	45724, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 49721,
	2753, 513, 65104, -1000, -1000, 307, 944, 45724, 47437, 2495,
	944, 944, -1000, -203, -1000, -1000, -1000, 3418, -45, -1000,
	-1000, 3497, 23741, -1000, 73884, -1000, -1000, 716, -1000, 3496,
	-1000, -1000, -1000, -1000, -1000, 2641, 3341, -1000, 1760, 111835,
	111835, -1000, -1000, 1758, 2403, -1000, 3340, 1091, 3338, -1000,
	111835, -1000, 111835, -1000, 23741, 111835, 2712, 1168, -1000, 871,
	2452, 512, 49721, 89629, 868, -1000, 3372, 2697, -208, -1000,
	111835, 45724, 111835, -211, -214, 2213, -1000, -1000, 2203, 45724,
	-1000, 65104, 510, 2069, 2069, -217, -219, -1000, -1000, -1000,
	45724, 1071, 111835, 32375, -1000, 3493, 3163, -1000, -1000, -1000,
	-1000, -1000, -1000, 111835, -1000, 45724, 1063, -1000, -1000, -1000,
	3458, 2069, 23741, 2069, -1000, 2069, 3215, 1032, 111835, 68904,
	89629, -1000, 2072, 2072, 73884, 56350, -1000, -85, 912, -1000,
	3336, 2574, 3492, -1000, -1000, -1000, -1000, 2450, -1000, -1000,
	111835, 2448, 898, -1000, -222, -1000, 778, 777, 76046, 885,
	878, -1000, -86, 509, -1000, 775, -1000, -1000, -1000, -1000,
	463, 3335, -1000, 3457, 507, 506, 111835, 2128, 504, 23741,
	3159, 765, 74970, -1000, 3057, 1597, -1000, 2219, 111835, 3149,
	-1000, 2487, 503, -1000, 896, 502, 500, 2717, 2717, -224,
	54153, 54153, -225, 499, 896, -1000, -227, -1000, -1000, -1000,
	-1000, -1000, -87, -1000, 828, 824, -1000, -1000, 89629, 89629,
	45724, 45724, -1000, 5208, 5208, 5208, -1000, 268, -1000, -1000,
	2062, 3238, -1000, -88, 118329, 118300, 1985, 49721, 65104, -230,
	-1000, -1000, 111835, 122886, -89, -1000, 122886, 498, 493, 395,
	-1000, -1000, -1000, 635, -1000, -1000, 3491, -1000, 99351, 111835,
	-1000, -1000, -1000, -1000, 3334, 111835, 98813, 111835, -1000, 1759,
	-1000, -1000, -1000, 111835, 2225, -1000, -1000, -1000, 1003, 45724,
	6532, 491, 45724, -1000, 3332, -1000, 2563, 2748, 1698, 54153,
	-1000, 3168, -1000, 15907, -1000, 995, 1807, -1000, -1000, 122886,
	3215, 54153, -1000, -1000, 490, 489, 122886, 488, 769, 2733,
	-1000, -1000, -1000, -1000, 122886, 486, 3309, -1000, -1000, -1000,
	-1000, 2069, 89629, -1000, -1000, -1000, -1000, -232, -1000, -1000,
	1835, 79, 1948, 2627, -1000, 2096, 483, -1000, -1000, 2105,
	2512, -1000, 98275, 31804, 31804, 263, 3330, 878, -1000, 3406,
	-1000, 3088, 3088, 45724, 3324, 79, -1000, 3420, 54153, -1000,
	89629, 54153, 2126, 1875, 2389, 74970, -1000, 2425, -1000, -1000,
	-233, 111835, 1597, -1000, -1000, 73884, 73884, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 995, -235,
	-240, -1000, 73884, -1000, -1000, 2313, -1000, 111835, -1000, 111835,
	-1000, -1000, -241, -242, -1000, 1904, 45724, 31233, -1000, -1000,
	1985, -243, -1000, -94, -1000, 3321, 47437, 3490, 3489, 3488,
	-1000, -1000, -1000, 1755, -1000, 111835, -1000, -1000, 1747, -1000,
	-1000, -1000, 2899, 2679, 14940, 2363, 111835, 14522, -1000, 2734,
	-1000, -1000, 2574, 472, -1000, -1000, -1000, -1000, 830, 111835,
	2574, 2676, 89629, 999, -248, 1951, 1951, 45724, 30662, 1979,
	45724, -1000, -1000, 3215, -1000, 2710, 3432, -1000, 885, -1000,
	1975, 111835, -1000, 3204, -1000, 3099, -1000, -1000, -1000, 2584,
	79, -1000, -1000, -1000, -249, 122886, 79, -1000, 261, -250,
	998, -251, 89629, 1721, -1000, 765, -1000, 2396, 899, -1000,
	-1000, -256, -257, 1698, 995, 1937, -258, -1000, -259, -265,
	-1000, -1000, 259, 46866, 46866, 46866, -103, -106, -1000, 111835,
	471, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2864, 903,
	-1000, 2106, 1671, 255, 1022, -1000, -1000, 1937, 111835, -1000,
	-1000, -1000, 901, 463, -1000, 45724, 995, -266, -1000, 981,
	-267, -1000, 976, -272, -1000, 2728, -1000, -273, 2069, 900,
	3290, -1000, -1000, -1000, 2105, 89629, -274, -1000, -1000, 2278,
	-1000, 2574, 898, -1000, -1000, -1000, 995, 462, 1698, 459,
	1260, 765, -1000, -1000, 1331, 3159, 3016, 896, 896, 2574,
	1698, 895, -1000, 896, -1000, -1000, -1000, 2917, -1000, 50863,
	2085, 1644, 120830, 2917, 2917, -1000, -1000, 111835, 3277, -1000,
	2125, 2121, 1427, -1000, -1000, -1000, -1000, -1000, -1000, 2697,
	-279, 3274, 2363, 122886, 2574, -1000, 1951, 2625, -1000, 1951,
	2722, -1000, 1957, -1000, -1000, -1000, 1585, 3414, 1727, 457,
	-1000, 111835, 1620, 1618, 3484, 1948, 2105, 1698, 54153, 2574,
	54153, -1000, -1000, 111835, -1000, 1875, 1268, -1000, -1000, 1937,
	2574, 899, 432, -1000, -1000, 1723, 3368, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 762, -1000, 3078, -1000, 1019,
	2042, 2042, 899, -1000, 753, 2106, -1000, -1000, 430, -1000,
	428, -1000, 2051, -1000, -1000, -1000, -1000, 111835, -1000, -1000,
	3483, -1000, 885, -1000, 2574, -280, 1937, -282, -1000, -124,
	1721, -1000, 1433, 895, 1937, -1000, 1630, -1000, -1000, 2048,
	46295, 45724, -1000, 3391, -1000, -1000, 2408, -1000, -1000, 45724,
	2697, 45724, 45724, 60772, -285, -1000, 2105, 1937, 995, 895,
	1698, 1260, 62398, 899, 895, -1000, -1000, -1000, 122886, -1000,
	-1000, -1000, 122886, -1000, -294, -301, -181, 97732, 2059, 1727,
	895, 1698, 899, 2574, -1000, -275, -1000, 899, 1937, 1061,
	-302, -1000, -1000, -1000, -1000, 899, 2574, -1000, 1937, -1000,
	-1000, -1000, -1000, 425, -1000, -1000, 1937, 895, 45724, 895,
	899, -310, 899, -1000, 1937, -1000, -1000,
}

var sqlPgo = [...]int{
	0, 4265, 4259, 4258, 4253, 4252, 4251, 4250, 4243, 4240,
	4238, 4237, 4236, 4235, 4233, 4232, 4231, 4230, 4229, 4228,
	4226, 4225, 4224, 4223, 4222, 4221, 4218, 4217, 4216, 4215,
	4214, 4213, 4211, 4210, 4209, 4208, 4207, 4206, 4203, 4202,
	4198, 4197, 4196, 4195, 4192, 4189, 4188, 4187, 4186, 4185,
	4184, 4183, 4182, 4176, 4173, 4171, 4166, 4165, 4164, 4163,
	4161, 4158, 4157, 57, 4156, 4155, 4154, 4147, 4145, 4143,
	4141, 4135, 4130, 4129, 4128, 4127, 4125, 4123, 4122, 4119,
	4117, 4115, 4114, 4113, 71, 4109, 259, 4108, 4106, 4105,
	4101, 4099, 4098, 4096, 4095, 4094, 4092, 4089, 4088, 256,
	4087, 108, 4085, 4084, 4082, 4081, 4080, 254, 4079, 4078,
	4075, 4073, 264, 4071, 4070, 4068, 4066, 4064, 4063, 4062,
	4061, 4060, 4057, 4056, 90, 199, 4055, 4054, 92, 4053,
	4051, 4050, 4048, 4047, 4044, 4043, 4041, 4039, 4032, 237,
	4031, 253, 4030, 4025, 4024, 4022, 4021, 4020, 4018, 4017,
	4016, 4013, 4012, 4009, 4007, 4006, 4005, 4004, 4003, 4001,
	3999, 3998, 3997, 3996, 3995, 3993, 3991, 3990, 3987, 3986,
	3985, 3984, 3982, 3981, 3980, 3978, 3977, 3976, 236, 268,
	184, 3974, 3973, 252, 251, 3972, 3971, 3970, 3963, 3961,
	121, 12, 45, 3959, 3957, 88, 77, 82, 105, 98,
	96, 3951, 106, 3949, 126, 61, 3948, 21, 2, 214,
	235, 9137, 233, 3947, 3946, 3944, 231, 186, 3942, 226,
	3939, 3938, 3937, 3936, 60, 51, 167, 166, 157, 156,
	371, 3935, 145, 99, 86, 52, 43, 17, 111, 206,
	22, 3934, 245, 10, 122, 1, 30, 3933, 3931, 3930,
	3927, 3517, 127, 3922, 250, 230, 151, 3921, 3919, 3918,
	688, 3917, 3916, 49, 3915, 115, 79, 132, 31, 118,
	3914, 138, 36, 3904, 158, 65, 3900, 154, 95, 83,
	11572, 7836, 3899, 102, 72, 150, 2853, 183, 182, 189,
	162, 165, 148, 191, 204, 200, 159, 170, 3894, 240,
	3892, 3346, 69, 169, 3891, 3889, 3887, 84, 193, 113,
	3882, 3877, 70, 13, 3, 4, 6, 116, 23, 20,
	16, 3876, 27, 119, 46, 34, 3875, 28, 3874, 3871,
	3870, 3869, 3868, 40, 164, 3867, 263, 3866, 93, 54,
	63, 3862, 11, 211, 3858, 222, 128, 3856, 3855, 244,
	201, 178, 3854, 73, 220, 3852, 3850, 3848, 3847, 3846,
	142, 8, 130, 3845, 3844, 131, 3843, 47, 227, 188,
	3840, 55, 3838, 3835, 163, 100, 134, 255, 190, 210,
	110, 218, 176, 221, 3834, 3832, 3831, 195, 3829, 3828,
	207, 147, 3827, 3823, 234, 269, 89, 39, 76, 225,
	78, 185, 141, 3822, 196, 3821, 3820, 262, 175, 205,
	14, 7, 94, 120, 3818, 5, 228, 144, 223, 109,
	3817, 5627, 2216, 1965, 3816, 3815, 137, 114, 74, 125,
	140, 247, 112, 3814, 3812, 2875, 3811, 3810, 3809, 3808,
	177, 3804, 3802, 3801, 139, 135, 173, 3799, 87, 67,
	44, 26, 117, 238, 261, 107, 215, 161, 241, 3796,
	3794, 3793, 179, 3792, 81, 124, 155, 194, 239, 58,
	3791, 168, 3790, 146, 217, 64, 143, 3786, 213, 3785,
	3784, 3783, 3782, 3781, 3780, 3779, 160, 224, 3778, 3775,
	3774, 35, 181, 3773, 246, 153, 192, 104, 53, 3772,
	91, 3249, 3771, 136, 3387, 66, 248, 1278, 249, 3770,
	1815, 50, 3766, 0, 12783, 6914, 9505, 12564, 3765, 2221,
	3764, 3759, 3756, 209, 129, 3747, 3746, 3738, 103, 3736,
	80, 3735, 3734, 68, 3731, 24, 18, 19, 32, 29,
	323, 297, 3730, 3729, 56, 133, 171, 3728, 260, 219,
	3727, 3724, 3723, 3722, 97, 3719, 42, 3718, 38, 3717,
	3715, 48, 15, 33, 3714, 3710, 198, 3709, 216, 243,
	3708, 149, 3707, 3335, 123, 3705, 3704, 3703, 62, 59,
	242, 85, 3702, 275, 3701, 3282, 3697, 3693, 25, 3692,
	3691, 229, 174, 203, 3690, 3689, 152, 3688, 3687, 3686,
	267, 3685, 3684, 3683, 37, 3682, 9, 3681, 3680, 197,
	3061, 3678, 3675, 41, 3673, 180,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 11, 11, 7, 7, 7, 7, 8, 8, 8,
	8, 8, 49, 49, 9, 9, 9, 9, 9, 9,
	9, 9, 9, 36, 31, 32, 33, 34, 34, 10,
	10, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	17, 17, 37, 37, 18, 18, 39, 39, 19, 19,
	40, 40, 580, 580, 22, 42, 23, 43, 16, 581,
	581, 581, 581, 35, 24, 44, 28, 28, 28, 28,
	28, 193, 193, 193, 193, 21, 21, 38, 38, 227,
	227, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 576, 576, 229, 229, 228,
	223, 223, 582, 582, 230, 230, 230, 232, 232, 13,
	13, 13, 13, 13, 13, 13, 13, 13, 13, 475,
	475, 475, 508, 508, 507, 507, 507, 506, 506, 595,
	595, 596, 596, 596, 596, 596, 127, 127, 373, 373,
	373, 52, 52, 52, 52, 52, 571, 571, 195, 195,
	195, 197, 197, 196, 196, 196, 196, 75, 75, 587,
	587, 588, 588, 586, 589, 589, 589, 194, 194, 194,
	123, 123, 123, 123, 123, 123, 124, 124, 125, 125,
	198, 198, 198, 200, 200, 199, 199, 199, 199, 199,
	199, 199, 199, 204, 15, 108, 108, 108, 108, 108,
	108, 108, 108, 108, 103, 103, 510, 510, 511, 511,
	189, 189, 190, 190, 190, 190, 191, 191, 192, 192,
	192, 66, 201, 201, 203, 203, 202, 202, 202, 202,
	202, 54, 54, 54, 54, 54, 54, 54, 55, 55,
	55, 55, 55, 56, 56, 56, 56, 56, 56, 57,
	57, 57, 57, 57, 57, 64, 64, 64, 64, 64,
	180, 180, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 72, 72, 72, 72, 597,
	597, 597, 597, 597, 597, 597, 597, 597, 597, 597,
	597, 597, 597, 597, 597, 597, 597, 597, 598, 598,
	599, 599, 600, 600, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 70, 70, 70, 70, 70, 70, 70,
	70, 70, 70, 70, 70, 70, 70, 70, 70, 70,
	81, 81, 335, 335, 300, 300, 82, 82, 82, 83,
	83, 84, 84, 68, 68, 569, 569, 350, 350, 466,
	466, 69, 577, 577, 577, 579, 579, 578, 578, 86,
	86, 372, 372, 87, 87, 87, 87, 87, 87, 88,
	88, 88, 88, 88, 88, 88, 89, 89, 89, 89,
	89, 89, 89, 89, 89, 89, 89, 89, 89, 89,
	96, 96, 96, 96, 96, 97, 97, 97, 94, 94,
	94, 91, 91, 91, 90, 90, 90, 95, 95, 95,
	568, 289, 289, 93, 93, 93, 92, 92, 92, 351,
	351, 98, 98, 98, 98, 301, 99, 99, 99, 99,
	99, 99, 99, 99, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 102, 102, 102, 102, 102,
	102, 102, 102, 102, 102, 102, 102, 468, 468, 100,
	100, 100, 433, 433, 104, 104, 104, 388, 388, 105,
	105, 105, 105, 105, 106, 106, 106, 106, 106, 106,
	106, 126, 126, 126, 126, 126, 126, 126, 573, 573,
	343, 343, 254, 254, 254, 254, 116, 116, 116, 116,
	117, 117, 117, 118, 118, 185, 185, 133, 133, 133,
	133, 133, 132, 132, 132, 132, 132, 132, 58, 58,
	58, 59, 59, 60, 60, 61, 61, 62, 62, 63,
	63, 63, 63, 63, 135, 135, 592, 592, 137, 134,
	134, 134, 136, 136, 136, 136, 138, 139, 139, 139,
	139, 139, 139, 139, 139, 140, 140, 500, 500, 359,
	359, 498, 498, 520, 520, 499, 499, 305, 305, 305,
	305, 305, 306, 306, 306, 509, 509, 509, 509, 509,
	509, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 186,
	186, 187, 188, 188, 188, 188, 188, 164, 164, 164,
	179, 179, 179, 179, 179, 179, 179, 167, 167, 167,
	151, 151, 142, 142, 142, 142, 142, 142, 142, 146,
	146, 146, 146, 146, 146, 146, 146, 143, 143, 153,
	153, 153, 153, 153, 147, 147, 148, 148, 148, 148,
	174, 174, 150, 150, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 144, 144, 144, 144, 155, 155, 155,
	155, 395, 395, 395, 178, 178, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 177, 177, 177,
	177, 177, 177, 590, 590, 591, 591, 171, 171, 171,
	171, 171, 171, 447, 447, 165, 165, 165, 165, 170,
	170, 170, 170, 173, 173, 173, 173, 378, 378, 162,
	162, 162, 163, 163, 163, 168, 168, 169, 166, 166,
	172, 172, 172, 172, 145, 145, 145, 145, 602, 602,
	602, 175, 175, 161, 161, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 603, 603, 157, 157,
	157, 156, 156, 156, 156, 159, 159, 160, 160, 160,
	160, 160, 160, 158, 149, 570, 570, 566, 566, 566,
	566, 566, 566, 566, 566, 567, 567, 567, 567, 572,
	572, 109, 109, 109, 109, 109, 119, 119, 119, 119,
	119, 110, 110, 110, 110, 110, 112, 112, 111, 111,
	111, 111, 76, 76, 76, 76, 76, 14, 14, 14,
	77, 77, 245, 245, 207, 207, 207, 324, 324, 208,
	208, 313, 313, 313, 313, 205, 205, 206, 206, 78,
	78, 604, 604, 604, 583, 583, 583, 584, 584, 584,
	584, 584, 584, 307, 307, 308, 308, 413, 413, 413,
	413, 413, 311, 311, 311, 312, 312, 312, 312, 312,
	312, 312, 312, 312, 314, 314, 231, 231, 231, 322,
	323, 323, 315, 315, 321, 320, 320, 319, 319, 318,
	318, 316, 317, 317, 317, 326, 326, 325, 328, 328,
	327, 412, 529, 529, 531, 531, 531, 531, 531, 531,
	531, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 396, 396, 605, 605, 527, 527, 527,
	528, 523, 523, 524, 524, 524, 524, 524, 309, 309,
	310, 310, 310, 310, 525, 526, 341, 341, 451, 530,
	530, 532, 532, 534, 606, 606, 606, 606, 606, 606,
	607, 607, 607, 411, 411, 410, 410, 333, 333, 535,
	535, 535, 535, 536, 536, 536, 536, 536, 539, 538,
	537, 537, 537, 537, 537, 80, 80, 80, 375, 375,
	374, 374, 376, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 182, 182, 257,
	257, 74, 74, 74, 12, 12, 12, 585, 585, 585,
	79, 79, 79, 79, 79, 79, 256, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 575, 575, 574, 574,
	258, 258, 609, 609, 85, 85, 85, 85, 85, 85,
	85, 85, 469, 469, 470, 470, 73, 73, 73, 73,
	73, 397, 397, 394, 394, 393, 393, 340, 340, 449,
	449, 449, 450, 262, 262, 263, 263, 224, 224, 224,
	30, 29, 20, 20, 25, 25, 26, 26, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 27, 27, 46, 46,
	46, 46, 47, 47, 47, 47, 50, 50, 51, 51,
	45, 45, 45, 45, 48, 48, 41, 41, 593, 593,
	594, 594, 115, 115, 120, 120, 120, 120, 120, 121,
	121, 121, 121, 122, 122, 122, 122, 131, 131, 181,
	181, 181, 181, 181, 181, 181, 53, 53, 53, 53,
	65, 65, 65, 65, 129, 611, 611, 611, 130, 130,
	130, 610, 610, 255, 255, 407, 407, 408, 408, 612,
	612, 409, 409, 409, 409, 409, 248, 247, 249, 249,
	250, 250, 71, 71, 71, 240, 240, 239, 237, 237,
	512, 512, 242, 242, 242, 243, 243, 233, 233, 234,
	234, 235, 235, 236, 236, 246, 246, 613, 613, 107,
	107, 107, 184, 184, 299, 299, 299, 404, 404, 404,
	334, 334, 269, 269, 406, 406, 406, 406, 371, 371,
	371, 183, 183, 348, 348, 361, 361, 362, 362, 463,
	463, 363, 113, 113, 114, 114, 128, 128, 211, 211,
	209, 209, 209, 209, 209, 209, 209, 209, 216, 216,
	217, 217, 218, 218, 219, 220, 220, 220, 220, 352,
	352, 221, 221, 221, 210, 210, 210, 212, 212, 212,
	212, 212, 212, 212, 215, 215, 215, 215, 222, 222,
	222, 214, 214, 546, 546, 546, 548, 548, 550, 550,
	549, 549, 545, 545, 547, 547, 608, 608, 377, 377,
	377, 331, 332, 329, 329, 330, 330, 338, 338, 336,
	337, 337, 339, 339, 448, 448, 448, 225, 225, 225,
	368, 368, 368, 368, 369, 369, 400, 400, 398, 398,
	398, 398, 399, 399, 401, 401, 401, 402, 402, 403,
	403, 365, 365, 366, 366, 367, 367, 367, 367, 429,
	429, 213, 213, 213, 345, 345, 345, 346, 346, 419,
	419, 419, 419, 419, 419, 420, 420, 418, 418, 418,
	418, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	453, 454, 454, 347, 347, 455, 405, 405, 564, 564,
	564, 565, 565, 446, 446, 456, 456, 456, 456, 456,
	456, 444, 444, 445, 445, 464, 465, 465, 381, 381,
	381, 381, 379, 379, 382, 382, 382, 382, 382, 380,
	380, 457, 457, 457, 457, 370, 370, 458, 458, 458,
	458, 459, 460, 460, 461, 461, 414, 415, 415, 471,
	471, 471, 471, 473, 344, 344, 344, 344, 344, 522,
	521, 521, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 487, 487, 487, 487, 487, 487, 487, 487, 487,
	487, 487, 487, 487, 487, 487, 487, 487, 487, 487,
	487, 487, 487, 487, 487, 487, 487, 487, 487, 487,
	487, 487, 487, 488, 488, 488, 488, 488, 488, 488,
	474, 474, 474, 474, 474, 478, 478, 478, 477, 477,
	477, 477, 477, 477, 477, 477, 477, 477, 477, 479,
	479, 484, 484, 485, 485, 485, 480, 481, 486, 486,
	486, 486, 614, 614, 490, 490, 482, 482, 482, 482,
	482, 482, 482, 482, 482, 476, 476, 476, 483, 483,
	483, 390, 390, 390, 390, 390, 390, 390, 390, 390,
	390, 390, 390, 390, 389, 389, 391, 391, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 423, 423, 423, 423, 424,
	424, 424, 424, 424, 424, 424, 424, 424, 424, 424,
	424, 424, 424, 424, 424, 424, 424, 424, 424, 424,
	424, 424, 424, 424, 540, 540, 540, 540, 540, 540,
	540, 540, 425, 425, 543, 543, 544, 544, 541, 541,
	541, 541, 541, 541, 541, 541, 541, 541, 541, 541,
	541, 541, 541, 541, 541, 541, 541, 541, 541, 541,
	541, 542, 542, 542, 542, 542, 542, 542, 542, 542,
	542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
	542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
	542, 542, 542, 542, 542, 542, 542, 551, 551, 552,
	552, 554, 554, 555, 555, 556, 557, 557, 557, 558,
	559, 559, 553, 553, 560, 560, 560, 560, 561, 561,
	562, 562, 562, 562, 562, 563, 563, 563, 563, 563,
	435, 435, 436, 436, 442, 442, 442, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 259, 259, 259, 259, 259, 357, 357,
	355, 355, 355, 358, 358, 356, 356, 354, 354, 353,
	353, 432, 432, 430, 430, 434, 434, 383, 383, 489,
	489, 489, 489, 489, 489, 489, 489, 384, 384, 384,
	392, 385, 385, 386, 386, 386, 386, 386, 426, 427,
	387, 387, 387, 428, 428, 437, 441, 441, 440, 439,
	439, 438, 438, 416, 416, 417, 417, 364, 364, 615,
	615, 360, 360, 462, 462, 462, 462, 303, 303, 349,
	349, 302, 302, 294, 294, 295, 295, 295, 295, 342,
	342, 443, 443, 491, 491, 492, 492, 493, 493, 494,
	494, 495, 496, 497, 431, 431, 279, 278, 266, 267,
	277, 276, 275, 265, 268, 272, 273, 274, 270, 271,
	285, 284, 283, 238, 241, 290, 291, 291, 293, 293,
	292, 292, 281, 282, 467, 264, 296, 296, 297, 297,
	297, 298, 298, 298, 298, 260, 260, 261, 261, 286,
	286, 287, 288, 288, 280, 280, 280, 251, 251, 251,
	252, 252, 253, 253, 505, 505, 502, 502, 502, 503,
	503, 503, 504, 504, 504, 504, 501, 501, 501, 501,
	501, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 517, 517, 517,
	517, 517, 517, 517, 517, 517, 517, 517, 517, 517,
	517, 517, 517, 517, 517, 517, 517, 517, 517, 517,
	517, 517, 517, 517, 517, 517, 517, 517, 517, 517,
	517, 517, 517, 517, 517, 517, 517, 517, 517, 517,
	517, 517, 517, 517, 517, 517, 517, 517, 517, 514,
	514, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 516,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 519, 519,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 3, 1, 1, 1,
	1, 3, 4, 6, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 6, 6, 6, 4, 4, 5, 1,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	4, 6, 4, 6, 6, 9, 6, 9, 6, 5,
	6, 5, 1, 1, 5, 5, 6, 6, 4, 4,
	4, 4, 3, 4, 4, 4, 7, 7, 9, 8,
	9, 5, 3, 5, 7, 4, 12, 4, 12, 1,
	3, 5, 5, 2, 5, 3, 6, 4, 6, 5,
	6, 6, 4, 8, 3, 4, 2, 3, 10, 3,
	6, 4, 3, 1, 3, 2, 1, 1, 3, 1,
	3, 2, 2, 0, 1, 1, 0, 2, 0, 7,
	10, 6, 8, 6, 6, 6, 9, 4, 3, 2,
	2, 0, 1, 3, 1, 1, 1, 1, 1, 1,
	3, 6, 4, 6, 7, 9, 6, 2, 2, 3,
	0, 8, 6, 8, 7, 2, 0, 1, 2, 5,
	0, 1, 3, 3, 1, 1, 3, 12, 3, 1,
	0, 1, 1, 2, 3, 3, 0, 4, 6, 0,
	5, 7, 6, 8, 8, 2, 1, 3, 1, 3,
	2, 5, 0, 1, 3, 3, 3, 3, 1, 1,
	1, 1, 1, 1, 3, 6, 4, 9, 7, 12,
	12, 12, 9, 2, 7, 2, 1, 1, 1, 3,
	3, 0, 3, 1, 3, 1, 1, 3, 2, 5,
	0, 7, 2, 0, 1, 2, 3, 1, 1, 2,
	2, 1, 2, 1, 2, 1, 2, 2, 3, 3,
	3, 3, 3, 3, 5, 3, 3, 5, 3, 3,
	5, 3, 3, 5, 3, 6, 6, 6, 6, 4,
	1, 1, 1, 2, 1, 1, 2, 1, 2, 1,
	1, 1, 2, 1, 2, 6, 3, 8, 3, 4,
	3, 3, 4, 3, 4, 4, 4, 3, 5, 7,
	3, 3, 4, 3, 3, 3, 3, 3, 2, 0,
	1, 0, 1, 0, 4, 3, 3, 3, 3, 3,
	6, 4, 4, 4, 3, 5, 3, 3, 3, 3,
	3, 3, 3, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 4, 1, 2, 1, 2, 1, 2,
	7, 3, 2, 0, 1, 3, 3, 1, 0, 1,
	2, 2, 1, 6, 5, 1, 2, 1, 3, 2,
	0, 7, 2, 5, 0, 1, 3, 3, 1, 9,
	3, 2, 0, 2, 2, 2, 2, 2, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	4, 6, 5, 7, 3, 4, 6, 3, 4, 6,
	3, 5, 7, 3, 4, 6, 3, 4, 6, 3,
	1, 1, 3, 4, 6, 3, 3, 5, 3, 1,
	3, 2, 2, 2, 2, 1, 2, 2, 5, 3,
	3, 6, 6, 3, 1, 1, 2, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 2, 1, 1, 2, 1, 1, 1, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 2, 1, 2, 1, 3, 5,
	7, 2, 3, 0, 3, 5, 2, 3, 0, 2,
	3, 2, 3, 2, 6, 4, 7, 7, 7, 5,
	2, 6, 4, 7, 7, 7, 5, 2, 2, 1,
	1, 3, 1, 1, 1, 1, 1, 2, 1, 2,
	2, 3, 2, 4, 3, 2, 2, 1, 2, 1,
	3, 3, 1, 2, 1, 2, 1, 2, 1, 1,
	3, 5, 4, 6, 4, 3, 0, 1, 3, 2,
	4, 2, 4, 1, 6, 3, 1, 1, 5, 3,
	2, 6, 3, 3, 4, 4, 3, 1, 3, 2,
	3, 3, 1, 3, 1, 2, 1, 1, 2, 2,
	3, 1, 1, 1, 1, 1, 3, 2, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 2, 1, 2,
	2, 1, 3, 3, 3, 3, 3, 2, 3, 3,
	1, 1, 1, 1, 1, 2, 2, 5, 7, 3,
	3, 3, 4, 4, 6, 5, 5, 5, 3, 4,
	4, 3, 4, 4, 3, 4, 4, 5, 3, 5,
	5, 5, 7, 3, 3, 3, 2, 6, 4, 3,
	2, 3, 4, 3, 5, 3, 6, 5, 6, 3,
	5, 6, 3, 4, 3, 4, 3, 3, 4, 4,
	5, 0, 1, 1, 1, 1, 3, 2, 4, 3,
	3, 5, 3, 4, 3, 5, 3, 3, 4, 4,
	5, 3, 3, 1, 1, 0, 2, 5, 4, 6,
	4, 6, 4, 1, 0, 3, 4, 4, 5, 7,
	5, 3, 3, 3, 4, 4, 5, 2, 0, 4,
	2, 3, 4, 2, 3, 3, 3, 4, 3, 3,
	4, 3, 3, 3, 3, 4, 4, 3, 1, 1,
	1, 2, 3, 2, 3, 6, 6, 7, 9, 7,
	9, 4, 3, 4, 4, 5, 1, 1, 10, 10,
	3, 5, 5, 5, 3, 5, 6, 4, 4, 5,
	5, 2, 3, 2, 5, 2, 0, 1, 1, 1,
	1, 3, 2, 2, 2, 2, 2, 2, 1, 2,
	0, 1, 2, 1, 2, 2, 1, 2, 1, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 6, 5, 8, 3, 6, 6, 3,
	13, 16, 1, 0, 1, 2, 3, 0, 2, 0,
	4, 0, 4, 5, 4, 3, 3, 1, 3, 10,
	13, 0, 2, 3, 1, 1, 0, 1, 2, 2,
	2, 2, 1, 1, 0, 1, 3, 1, 1, 1,
	2, 3, 3, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 8, 0, 1, 1, 0, 2,
	1, 0, 1, 0, 1, 1, 0, 1, 4, 1,
	0, 3, 7, 7, 1, 1, 3, 7, 1, 3,
	11, 3, 2, 0, 3, 1, 2, 2, 3, 2,
	6, 2, 1, 2, 2, 2, 8, 4, 2, 5,
	5, 5, 2, 2, 0, 1, 3, 11, 12, 9,
	5, 3, 1, 5, 10, 7, 11, 3, 3, 0,
	2, 4, 3, 3, 1, 5, 1, 3, 1, 2,
	0, 1, 2, 2, 0, 1, 3, 3, 2, 2,
	1, 1, 1, 4, 0, 6, 0, 3, 0, 2,
	2, 2, 0, 1, 1, 2, 2, 0, 3, 3,
	2, 1, 1, 2, 2, 5, 8, 4, 1, 0,
	1, 2, 2, 1, 2, 3, 3, 2, 2, 3,
	2, 2, 2, 2, 2, 3, 1, 4, 2, 2,
	2, 4, 7, 3, 4, 6, 3, 1, 1, 1,
	8, 10, 11, 7, 10, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 0,
	3, 3, 0, 1, 8, 11, 3, 6, 6, 5,
	3, 4, 1, 0, 1, 3, 17, 20, 16, 19,
	4, 2, 0, 1, 0, 1, 0, 1, 3, 2,
	4, 2, 3, 1, 0, 2, 0, 1, 1, 0,
	9, 6, 6, 8, 6, 8, 5, 7, 2, 6,
	7, 4, 5, 2, 4, 4, 6, 3, 5, 3,
	5, 4, 4, 5, 5, 7, 3, 3, 4, 4,
	6, 3, 6, 7, 4, 6, 6, 8, 6, 7,
	8, 9, 6, 7, 8, 9, 6, 8, 6, 8,
	6, 7, 8, 9, 6, 8, 6, 8, 1, 0,
	2, 0, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 1,
	2, 1, 2, 1, 2, 1, 3, 2, 3, 2,
	2, 2, 2, 2, 2, 1, 1, 0, 2, 4,
	2, 1, 0, 2, 1, 1, 0, 1, 3, 1,
	0, 1, 1, 1, 1, 1, 2, 3, 2, 2,
	1, 2, 12, 15, 3, 1, 0, 4, 3, 0,
	1, 1, 4, 4, 5, 1, 0, 3, 0, 3,
	0, 3, 0, 3, 0, 4, 0, 1, 0, 6,
	7, 3, 6, 3, 1, 3, 1, 1, 4, 2,
	1, 3, 1, 3, 4, 8, 11, 5, 2, 2,
	0, 10, 3, 2, 0, 1, 3, 1, 1, 3,
	3, 5, 6, 4, 5, 4, 1, 1, 3, 3,
	1, 2, 4, 4, 2, 3, 5, 5, 1, 3,
	1, 0, 1, 2, 3, 2, 4, 2, 3, 0,
	2, 0, 2, 1, 2, 1, 1, 1, 2, 1,
	2, 1, 2, 1, 8, 8, 8, 2, 4, 4,
	4, 2, 2, 2, 2, 3, 1, 3, 1, 2,
	6, 7, 1, 0, 1, 0, 1, 0, 1, 1,
	0, 1, 5, 1, 0, 1, 0, 1, 0, 3,
	3, 5, 1, 3, 3, 4, 5, 2, 2, 0,
	2, 2, 1, 1, 1, 0, 1, 0, 2, 2,
	5, 4, 2, 3, 1, 1, 1, 1, 1, 1,
	1, 3, 0, 1, 3, 1, 3, 3, 3, 2,
	0, 4, 2, 5, 3, 2, 0, 1, 3, 3,
	5, 1, 1, 1, 1, 1, 3, 2, 4, 4,
	0, 4, 4, 3, 4, 1, 5, 3, 4, 5,
	5, 1, 5, 1, 3, 2, 0, 3, 0, 2,
	3, 1, 3, 2, 0, 3, 5, 6, 4, 6,
	4, 3, 2, 1, 0, 5, 1, 0, 2, 2,
	2, 1, 1, 0, 1, 1, 1, 1, 0, 4,
	2, 1, 2, 2, 4, 1, 3, 1, 2, 3,
	2, 4, 1, 0, 1, 0, 2, 1, 0, 2,
	5, 7, 2, 1, 2, 4, 3, 5, 0, 1,
	3, 5, 1, 2, 1, 1, 1, 1, 1, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 4, 6, 6,
	1, 1, 1, 1, 1, 3, 5, 0, 1, 1,
	1, 1, 1, 2, 2, 2, 2, 2, 1, 3,
	0, 5, 4, 1, 2, 1, 4, 1, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 2, 5, 1,
	4, 2, 5, 1, 4, 3, 3, 0, 1, 2,
	4, 1, 1, 1, 1, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 1, 0, 1, 4, 1, 3,
	3, 3, 5, 2, 2, 2, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 2, 3, 5, 4, 6, 3, 5,
	4, 6, 4, 6, 5, 7, 3, 3, 3, 3,
	3, 4, 3, 2, 4, 2, 3, 3, 4, 3,
	4, 3, 4, 5, 6, 6, 7, 6, 7, 6,
	7, 3, 4, 4, 1, 3, 1, 3, 3, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 5, 6, 6, 7, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 6, 1, 1, 1, 1, 1,
	1, 2, 1, 5, 5, 6, 3, 1, 1, 1,
	2, 2, 2, 4, 3, 5, 6, 8, 6, 5,
	4, 3, 2, 2, 4, 1, 1, 1, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	6, 6, 8, 8, 6, 4, 6, 6, 6, 4,
	1, 3, 3, 3, 3, 3, 4, 3, 3, 4,
	3, 3, 4, 3, 3, 4, 3, 3, 3, 4,
	3, 4, 3, 4, 3, 4, 4, 3, 6, 5,
	5, 5, 4, 4, 3, 4, 3, 5, 0, 5,
	0, 2, 0, 1, 3, 3, 2, 2, 0, 6,
	1, 0, 3, 0, 3, 3, 3, 0, 1, 4,
	2, 2, 2, 2, 2, 3, 2, 2, 3, 0,
	4, 1, 1, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 1, 2, 2, 3,
	1, 2, 3, 2, 3, 2, 3, 1, 0, 1,
	3, 1, 3, 3, 3, 1, 3, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 3, 1,
	2, 3, 0, 3, 3, 2, 2, 1, 2, 2,
	3, 2, 1, 1, 1, 5, 1, 2, 4, 2,
	0, 1, 0, 3, 5, 1, 0, 1, 2, 1,
	0, 1, 3, 3, 2, 1, 1, 1, 3, 1,
	3, 3, 1, 1, 1, 1, 5, 3, 1, 1,
	3, 1, 1, 1, 1, 2, 2, 1, 1, 2,
	2, 1, 1, 1, 3, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 3,
	1, 0, 1, 1, 1, 1, 1, 1, 3, 5,
	7, 1, 7, 5, 3, 1, 1, 1, 1, 1,
	1, 1, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 0, 3, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 585, -101, -98, -66, -64, -104, -105,
	-87, -106, -100, -126, -131, -113, -114, -115, -127, -133,
	-181, -186, -187, -188, -3, -52, -54, -67, -86, -88,
	-99, -108, -107, -109, -116, -123, -119, -103, -58, -128,
	-132, -141, -182, -183, -184, 33, 32, 101, 81, 155,
	129, 138, 202, 381, 423, 434, 395, 143, 415, 400,
	-136, -137, 451, -53, -65, -130, -129, 74, 130, 409,
	-4, -12, -15, 30, 47, -55, -56, -57, 63, -74,
	-70, -81, -75, -68, -69, -72, -597, 103, -547, -89,
	-92, -122, -601, 162, 220, -110, -111, 364, -117, -118,
	417, -120, -121, 419, 163, -60, -59, 157, -209, -211,
	-134, -135, -185, -142, -143, -144, -145, -146, -147, -148,
	-174, -149, -150, -151, -152, -153, -154, -158, -177, -155,
	-156, -157, -160, -159, -161, -166, -162, -163, -164, -165,
	-167, -168, -170, -171, -172, -173, -175, -176, 456, -169,
	516, 50, 470, 83, 147, 427, 21, -5, -6, -7,
	-8, -9, -10, -11, -14, -13, -71, -73, -76, -77,
	-78, -85, -79, -80, -546, -90, -91, -94, -96, -97,
	-93, -95, 416, -212, -210, 582, 531, -17, -22, -23,
	-18, -19, -21, -24, -20, -25, -26, -27, -37, -42,
	-43, -39, -40, -38, -41, -44, -45, -46, -47, -48,
	-49, -50, -51, -29, -35, -36, -30, -31, -32, -33,
	-34, -16, -28, 551, 560, -215, -213, -214, -222, 443,
	539, 490, 585, 585, 585, 585, 585, 585, 585, 585,
	585, 585, 585, 585, 585, 585, 585, 585, 585, 585,
	585, 585, 585, 585, -301, 2, -281, -286, -287, -288,
	-280, -251, -516, -519, 4, -513, -517, 169, 229, 327,
	21, 23, 22, 24, 25, 26, 27, 28, 30, 31,
	42, 43, 45, 46, 47, 48, 49, 50, 54, 56,
	60, 61, 62, 63, 64, 65, 69, 74, 75, 80,
	81, 82, 83, 84, 85, 86, 92, 89, 90, 91,
	93, 95, 97, 98, 99, 100, 101, 102, 104, 105,
	106, 108, 109, 110, 118, 119, 120, 121, 122, 124,
	129, 130, 133, 128, 132, 134, 136, 137, 138, 141,
	142, 143, 145, 146, 148, 149, 150, 152, 153, 155,
	156, 157, 160, 158, 498, 159, 161, 162, 163, 164,
	167, 175, 176, 177, 182, 184, 185, 189, 190, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 203, 207,
	209, 210, 211, 212, 213, 219, 220, 222, 223, 224,
	225, 230, 231, 232, 236, 233, 242, 243, 247, 248,
	249, 251, 255, 256, 257, 258, 259, 260, 262, 264,
	263, 266, 269, 270, 273, 277, 278, 282, 283, 279,
	284, 285, 287, 288, 291, 289, 292, 293, 290, 294,
	296, 297, 298, 299, 300, 301, 302, 303, 304, 305,
	306, 307, 295, 310, 308, 312, 313, 314, 325, 323,
	318, 319, 315, 320, 316, 317, 321, 322, 329, 330,
	333, 217, 335, 336, 339, 357, 343, 344, 345, 348,
	349, 352, 355, 356, 358, 359, 360, 361, 362, 363,
	364, 365, 366, 368, 369, 371, 372, 373, 375, 376,
	377, 379, 381, 382, 384, 385, 387, 388, 389, 390,
	391, 392, 393, 395, 397, 396, 398, 400, 402, 403,
	404, 409, 415, 411, 412, 413, 414, 416, 417, 418,
	419, 421, 422, 423, 425, 426, 427, 428, 430, 432,
	433, 436, 437, 453, 454, 472, 434, 435, 438, 439,
	440, 441, 442, 446, 444, 445, 447, 448, 449, 451,
	452, 455, 456, 458, 459, 460, 461, 462, 463, 466,
	468, 469, 470, 489, 471, 473, 477, 478, 479, 480,
	474, 475, 488, 482, 483, 485, 486, 491, 492, 493,
	494, 495, 496, 497, 499, 501, 509, 510, 511, 513,
	516, 517, 518, 519, 507, 521, 522, 525, 526, 527,
	530, 528, 529, 531, 533, 536, 537, 538, 544, 543,
	545, 552, 553, 555, 556, 557, 37, 51, 52, 55,
	57, 59, 70, 71, 72, 76, 125, 126, 154, 165,
	166, 178, 191, 192, 204, 206, 214, 215, 216, 237,
	238, 240, 245, 267, 332, 334, 350, 354, 370, 374,
	378, 380, 394, 429, 464, 476, 481, 502, 503, 504,
	505, 512, 514, 539, 540, 541, 546, 554, -301, 2,
	-281, 341, -274, 2, -251, -251, 381, 29, 2, 29,
	369, 445, 493, 495, 2, -573, -343, 2, 29, -254,
	-251, 103, 202, 443, -274, 2, -573, -343, 25, 2,
	-251, 2, 355, 22, 28, 67, 78, 99, 141, 164,
	186, 189, -600, 357, 388, 432, 447, 488, 499, 513,
	2, 543, 288, 444, 490, 229, 121, 518, 438, -585,
	436, 437, 355, 386, 425, 205, 532, -255, 2, 434,
	-251, 288, 2, 585, 95, 278, 75, 429, 448, -139,
	510, -138, 502, 438, -140, -500, 2, 310, -251, 585,
	585, 585, 29, -264, -251, 490, 229, 438, 121, 486,
	585, 2, 490, 360, 543, 444, 121, 391, 229, 518,
	189, 438, -585, 288, -571, 2, -566, 4, -517, -513,
	-295, -294, 490, 496, 121, -288, -280, 575, -287, 585,
	585, 585, 2, 248, 249, 390, 389, 448, 449, 585,
	585, 585, 585, 436, 2, 164, 22, 28, 67, 94,
	99, 127, 186, 189, 346, -598, 357, 388, 447, 488,
	492, 499, 513, -584, 471, 69, 414, 438, -583, -585,
	288, 518, 141, -393, 121, 278, 200, 526, 495, 493,
	524, 133, 236, 529, 528, 585, 585, -101, 2, 582,
	33, 32, 143, 451, -204, 490, 241, 2, -251, 585,
	585, 2, 248, 249, 436, 437, 585, 585, 187, -566,
	2, 585, 585, 2, 248, 249, 436, 437, 241, 2,
	69, 440, 585, 585, 585, 585, 585, 585, 585, 585,
	585, 585, 585, 585, 585, 585, 585, 585, 585, 585,
	585, 585, 585, 585, 585, 585, 585, 585, 585, 585,
	585, 585, 585, 585, 585, 585, 2, -179, 448, 471,
	211, 48, 47, 75, 29, 387, 80, 362, 122, 149,
	519, 203, 229, 230, 256, 94, 95, -395, 45, 249,
	248, 437, -590, 436, -447, 491, 439, 445, 485, 260,
	434, 510, 103, 533, 426, 557, 391, 392, 483, 404,
	279, 158, 4, 121, 310, 450, 502, 278, 433, 365,
	85, -608, 2, 490, -610, 2, 510, 510, 2, -610,
	2, -610, 2, -610, 2, -611, 510, 554, 585, 585,
	585, 585, 585, 585, 585, 585, 585, 585, 585, 585,
	585, 585, 585, 585, 585, -210, -212, -211, 585, 585,
	585, 585, 585, 585, 585, -179, 448, 2, 75, 29,
	-336, -338, 523, 239, 151, 347, -209, -211, 2, -546,
	-498, 2, -421, -520, -423, 573, 574, 566, 487, 68,
	326, 558, -435, 127, 524, 341, -519, -424, -437, 154,
	429, -358, 8, 9, 5, 6, 7, -260, -425, -431,
	515, 168, 331, -298, 586, 10, 582, -543, -211, -436,
	38, 206, 66, -502, -297, -261, -474, 240, -296, -280,
	-540, -541, 4, -513, -514, -503, -477, -485, -481, -482,
	-488, -251, -516, 78, 112, 113, 111, 116, 115, 281,
	280, 117, 114, 450, 532, 67, 37, 214, 215, 245,
	332, 216, 76, -542, 142, -515, 237, 238, 464, 52,
	394, 178, 126, 125, 334, 57, 55, 540, -486, 123,
	502, 503, 504, 505, 191, 192, 59, 165, 166, 354,
	378, 481, 512, 514, 204, 267, 44, 107, 188, 235,
	218, 244, 246, 250, 268, 271, 311, 324, 328, 351,
	353, 424, 457, -614, 541, 476, 70, 71, -548, 396,
	-549, -274, -548, 585, 585, 587, 585, -329, -331, -332,
	2, 29, 139, 582, 2, -452, 2, -453, -457, -211,
	261, -456, 582, -454, 580, -281, 342, -544, 430, -540,
	-541, -260, -280, -297, 4, -513, -515, 584, -333, 582,
	121, 490, 79, 229, 164, -388, 582, -251, 29, 341,
	506, 587, -330, 385, -433, 582, 341, 187, 344, 61,
	292, 2, 2, 2, 2, 2, 214, -251, 490, 120,
	2, 259, 2, 2, 2, 2, 2, 2, 2, -351,
	214, 2, -281, 543, -351, 214, 2, -351, 214, 2,
	-394, 2, 88, -265, 214, 2, -251, -289, 214, 2,
	-284, -286, -293, 214, 2, -291, -251, -511, 214, 2,
	-510, -505, 10, -504, 5, 4, -513, -517, -514, -516,
	78, -421, 2, -128, 2, 61, -251, 543, 2, 2,
	453, 2, 582, -139, 72, 510, 44, 448, -408, 2,
	-409, -247, -248, -249, -464, -250, 247, 384, 393, 561,
	131, 326, 557, -498, -592, 187, 565, 506, -498, -359,
	584, 2, 2, 2, 2, 2, 2, -457, 214, -281,
	2, -278, -501, 4, -513, -517, -514, -518, 29, 32,
	33, 34, 36, 38, 39, 40, 41, 58, 66, 67,
	73, 77, 79, 88, 94, 103, 111, 112, 114, 113,
	115, 116, 117, 127, 131, 135, 139, 140, 144, 147,
	151, 168, 170, 183, 186, 187, 202, 205, 208, 221,
	234, 239, 241, 261, 265, 272, 280, 281, 326, 331,
	337, 341, 342, 346, 347, 367, 383, 399, 420, 443,
	450, 467, 484, 490, 500, 506, 508, 515, 523, 524,
	532, 534, 542, 547, 548, 549, 550, 551, -519, 2,
	-457, 214, 2, -283, 214, -457, -286, 2, -265, 2,
	-277, -501, 2, -302, 214, -281, -282, -286, -284, 2,
	2, -291, 2, -510, 214, 2, 543, 241, 506, 587,
	-349, -294, -295, -497, 8, -342, -251, 584, -421, 2,
	-128, -112, 2, 183, -421, 214, 2, -128, 214, 2,
	-421, 214, 2, -128, 214, 2, -587, 2, -510, 214,
	-251, 2, 292, 2, 2, 513, 2, 99, 490, 120,
	2, 413, -599, 432, 517, 2, 2, 2, 2, 2,
	2, 2, 490, -270, 2, -251, 183, 474, -291, 214,
	-292, 2, 444, -609, 396, -510, 214, 2, 543, -284,
	214, 2, -284, 229, 243, -265, 214, 2, 495, 493,
	495, 493, 187, 2, 241, 2, 241, 2, -458, 2,
	-459, -453, -460, 580, 342, -468, 2, -467, -504, 539,
	-101, 582, -101, 582, 448, 582, -510, -281, -281, -421,
	2, -128, -112, 2, -421, 2, -128, 2, -125, -510,
	-124, 582, 187, -421, 2, -128, -112, 2, -421, 2,
	-128, 2, -204, 183, 2, 121, 490, -179, 2, 183,
	534, 2, 8, 2, 221, -510, 439, 392, 175, 2,
	453, 2, 454, 75, -395, 557, 75, 187, 2, 187,
	2, -378, 2, 551, 187, 2, 2, -570, 2, 341,
	187, 2, 187, 2, 187, 2, 187, 2, 187, 2,
	-178, 449, 511, 489, 389, 249, 2, -128, 548, -112,
	-421, 548, 2, -591, 183, 437, -421, 2, 509, 258,
	159, 187, -378, 2, 187, 2, 187, 2, 5, 2,
	390, 472, 2, 247, 384, 472, 2, -281, -602, 29,
	2, 490, 543, 444, 2, 2, 89, 90, 187, 2,
	187, 2, 201, 187, 2, 187, 557, 2, -370, -457,
	-407, -408, -407, 506, -336, -338, -179, 453, 2, -216,
	-368, -218, 183, -398, -399, -219, 272, 170, 337, -220,
	-377, 29, 139, -377, -377, 61, 583, 583, 11, 12,
	77, 42, 573, 574, 575, 576, 181, 577, 578, 571,
	572, 570, 563, 564, 568, 253, 254, 96, 567, 565,
	87, 286, 431, 171, 172, 173, 174, 410, 227, 35,
	228, 14, 15, 16, 34, 346, 271, 558, 218, 457,
	566, 17, 18, 19, 244, 246, 328, 51, 221, -259,
	-304, -421, -421, -421, -421, -421, -421, -421, 353, 582,
	-364, -416, 580, -211, 582, 582, 582, -497, -211, -421,
	-435, 583, -356, 582, -211, -435, -430, 582, 429, 580,
	582, -438, -421, 5, 5, 5, 582, 584, -551, 552,
	183, 582, 582, 582, 582, 582, 582, 582, 582, 582,
	582, 582, 582, 582, 582, 582, 380, -479, 582, -478,
	582, -478, -478, 544, -476, 582, 560, 553, 582, -476,
	582, 582, 582, 582, 582, 582, 582, 582, 582, 582,
	582, 582, 582, 544, 587, -548, -333, 582, -360, -462,
	-421, 575, -360, -360, 341, -353, -421, 107, -381, 250,
	311, 188, 268, 424, 235, -418, 586, -418, -446, 560,
	-211, -454, -280, -211, -456, 582, -452, -446, -102, -497,
	-86, -99, -107, -128, -141, -183, -184, 575, -281, 582,
	187, 582, 584, -501, 187, -342, -265, -281, -296, -297,
	-302, 2, 138, -353, -566, 518, 438, 444, -342, -254,
	39, -432, -471, -472, -522, 586, -521, -474, -484, -480,
	-483, 370, 374, -503, 55, 540, -486, 240, 4, -513,
	-515, 237, 238, 464, 52, 394, 178, 126, 125, 334,
	57, 502, 503, 504, 505, 191, 192, 59, 541, 476,
	70, 71, -566, 518, 438, 444, -342, 183, -508, 2,
	-507, -506, 117, 450, -504, 5, 2, 154, 2, 2,
	2, -251, -230, 587, 65, 418, 154, -351, 214, -230,
	154, -230, 154, -303, 214, -302, -230, 154, -230, 587,
	154, -230, 587, 154, 584, 587, 154, -508, 2, -394,
	-500, -353, 39, -408, 2, 127, -506, -612, 587, 270,
	-306, 285, 325, 210, 342, 555, 335, 131, -509, 5,
	4, -431, -443, 127, 278, 240, -491, -493, 8, -492,
	9, -494, 573, 574, -499, -498, 110, 584, -501, -227,
	411, 451, 356, -226, 24, 30, 143, 231, 314, 537,
	160, -319, 232, -316, 360, 154, 468, 527, -580, -581,
	435, 497, 498, 91, 335, 451, 356, 411, 154, -374,
	-376, 39, 119, 314, 355, 62, 224, 290, 291, 470,
	546, 154, 451, 356, 411, 356, 24, 143, -242, -239,
	451, -581, 100, 411, 482, 383, -581, -229, 468, 527,
	-580, -581, 435, 411, -228, -321, -316, 360, 154, 586,
	24, 143, 411, 451, 356, -595, -596, 30, 411, 356,
	-574, -545, 551, 154, -457, 214, -588, -124, 262, 5,
	10, -510, -124, -349, 587, 587, -501, 575, 437, 436,
	154, 154, 154, 154, 183, 326, 2, 2, 2, 2,
	2, 189, -583, -600, 2, 2, -281, 214, -335, 341,
	-569, -350, 490, -281, 183, 326, 44, -283, 214, 2,
	-286, 543, -574, 326, -285, 214, -281, 39, 582, 326,
	2, -394, 2, 229, -545, 326, -458, -299, -281, -453,
	-299, 451, -274, 39, -418, -281, 583, 587, -468, -468,
	-510, -192, 551, 187, 103, 582, 582, -204, -465, 587,
	-464, 221, -511, -125, -510, 414, -510, -569, -265, 2,
	-281, 2, 490, 251, -510, -192, 221, -510, -510, -510,
	-500, 29, 454, 2, -178, 449, 511, 90, 454, 2,
	-281, 490, 121, 229, 81, -251, -572, 183, -567, 425,
	438, 518, -566, -281, 121, -281, 121, -281, 121, -281,
	-281, 2, 2, 2, 2, 2, 86, 86, 2, 47,
	-591, 183, 2, 509, 2, 509, 2, -251, -251, -251,
	471, 270, -281, 491, -603, 2, 187, 183, 2, 490,
	229, 490, 229, 121, 187, 75, 121, 29, 490, -230,
	587, -255, -216, -368, -500, -369, -368, -217, -216, -219,
	183, 393, 528, 314, 455, 255, -399, -398, 29, -421,
	-403, 177, 313, -421, -401, -423, 573, 574, -492, -494,
	-352, 335, -210, -210, -210, -339, -448, -421, 383, 229,
	-473, -471, -471, -279, -501, 502, -421, -421, -421, -421,
	-421, -421, -421, -421, -421, -421, -421, -421, -421, -421,
	-421, -421, -421, -421, -421, -421, -421, -421, -421, -421,
	-421, -421, -421, -421, -421, -421, -421, -421, -421, -421,
	-421, 271, 218, 457, 51, 221, -421, 506, -421, -421,
	-421, -421, 308, 326, 331, 515, 168, 525, 139, 335,
	-615, 484, 41, -428, -211, -357, 582, -442, 36, 467,
	29, -435, 582, 2, -416, -421, -417, -354, -353, -353,
	583, 542, 29, 139, 575, 2, 583, 587, 39, 583,
	-421, -354, -434, -430, -353, -441, -440, 548, -389, -390,
	556, 295, 124, 212, 293, -391, 442, -495, 8, -501,
	575, -552, 176, 205, 582, 583, 2, 583, 2, 583,
	-421, 2, 583, -421, 2, 583, -421, 2, 583, -421,
	2, 583, 2, -421, -421, -421, -421, -421, -421, -421,
	-353, 8, -495, -495, 502, 502, -495, -495, -495, -487,
	370, 371, 372, 373, 273, 274, 275, 276, 374, 375,
	376, 377, 300, 301, 302, 303, 296, 297, 298, 299,
	304, 305, 306, 307, 196, 197, 198, 199, 192, 193,
	194, 195, -487, -383, 2, -489, -353, 4, 556, 295,
	124, 212, 293, 442, 5, -383, 2, -384, 2, -421,
	-353, -385, -422, -423, 573, 574, 566, -435, -386, 2,
	-421, -354, -421, 58, 265, 508, -387, -421, 187, -353,
	-353, 2, -353, 2, -549, 39, -353, -345, 587, 187,
	39, 4, -345, -345, 582, 583, 587, -382, 209, 289,
	284, 243, -382, -452, -381, 250, -379, 351, -379, -379,
	-446, -266, 580, 588, -501, -446, -445, -444, 39, -274,
	348, -446, -446, 584, 583, -445, 581, -564, 582, 585,
	585, 585, 585, 585, -281, 582, -353, -501, 584, 473,
	583, 244, 244, 244, 244, 430, 583, 506, -568, -289,
	-293, 2, 551, -101, 343, 583, 587, -344, 38, 580,
	584, -495, 2, 2, -490, 544, 582, 582, -390, 582,
	187, -568, -293, 2, -343, 587, 506, -251, 2, -281,
	-351, -230, 154, -351, -351, -230, 587, 154, -265, -284,
	-289, -291, -293, -251, -510, -511, -230, -285, -592, 583,
	510, -409, -305, 393, 466, 412, 446, 486, 8, 9,
	8, 9, 587, -501, 587, -593, 94, 506, 79, 438,
	-244, 279, 403, 314, 490, 429, 506, -412, 214, 79,
	-523, -268, 94, -524, -251, 73, 524, 383, 186, 152,
	-593, 94, 383, -593, 94, 2, 231, 94, 451, 471,
	29, 61, -457, 42, 42, 29, -128, 266, 187, 557,
	490, 229, 438, 506, 506, -457, -376, -471, 119, 290,
	291, 61, -496, -491, 573, 574, -496, 61, -496, -496,
	-496, 551, -283, -457, 438, 506, 506, 506, 402, 402,
	-239, 506, 506, -613, 565, 402, 587, 42, 42, 29,
	-128, 266, 187, 506, -302, -266, 538, 43, 538, 43,
	538, 506, 43, 438, 506, 587, 43, 506, 506, -575,
	-256, 106, 320, 283, 321, 98, 317, 97, 316, 104,
	318, 105, 319, 545, 329, 64, 315, 294, 322, -257,
	-258, 363, 536, -510, 451, 356, 411, 154, 221, -465,
	221, -465, -294, -251, 584, -128, -421, -421, -128, -421,
	-128, 47, 154, 2, -609, 259, 582, -309, 326, 187,
	-342, -466, 241, 587, -350, -566, 154, -507, -375, -374,
	326, -285, 214, 2, 154, -333, 326, 148, 582, 391,
	2, 154, -267, 214, -252, -251, -394, -233, 494, 154,
	-372, 534, -404, -128, 582, 127, 39, -404, -361, -362,
	-463, -363, -268, 582, -274, -418, -101, -467, 583, 583,
	583, -191, 345, -190, -251, 5, -204, 534, -308, -413,
	-412, -527, -528, -523, 271, 229, 524, 243, 169, -334,
	-269, -268, 120, -198, 551, -124, -125, 583, -465, 221,
	474, -192, -192, -465, -465, -281, 183, -510, -192, -192,
	-192, 2, 2, 2, 2, -378, -281, -265, -302, -281,
	584, -342, -342, -293, -289, -378, -265, -378, -265, -378,
	-265, -128, -421, 2, 448, 183, 183, 584, -378, 391,
	121, 490, 360, 229, -281, -302, -281, -302, -265, 121,
	-265, 122, -281, -457, -369, -217, 342, 255, 455, -401,
	-402, -423, 429, 430, -402, 429, 430, 8, 9, 8,
	9, -221, 459, 330, -351, 587, -224, 40, 135, 255,
	-281, 557, 150, -421, -421, 506, -615, 484, -428, 150,
	-421, 308, 331, 515, 168, 525, 139, 335, 187, 582,
	-422, -422, 583, -355, -421, -421, 581, 590, 583, -338,
	587, -336, -421, -353, -353, 583, 584, -353, -342, 581,
	581, 587, 583, -439, -440, 144, -421, 506, 506, 506,
	506, 582, 583, 584, -557, 352, 582, 582, -421, 583,
	583, 583, 583, 39, 587, 587, 587, 583, 587, 587,
	587, 583, 583, 583, 587, 583, 557, 557, 583, 583,
	583, 583, 587, 583, 587, 583, 187, 583, 583, -392,
	367, 583, 11, 12, 573, 574, 575, 576, 181, 577,
	578, 571, 572, 570, 563, 564, 565, 87, 286, 431,
	14, 15, 16, 244, 221, -422, -422, -422, 583, -426,
	-427, 187, 183, 39, -387, -387, -387, 583, 187, -353,
	583, 583, 582, -550, 288, 326, 583, -415, -414, 549,
	-462, -346, 2, -452, -276, -501, -415, -415, -353, -421,
	250, 250, -380, 534, 341, -382, -452, -445, -497, -420,
	-419, 185, 40, 135, 323, 217, -445, -274, -333, -445,
	-445, -501, -446, -446, -444, 583, -565, -497, 583, -347,
	-455, -544, -338, 584, -501, -201, -545, -180, 5, 331,
	-180, -180, -180, -342, 506, 506, 25, 368, -471, 580,
	581, 8, -501, 582, -495, -495, -495, -342, 187, 187,
	187, -507, -507, 2, -230, -351, -230, -230, -302, -303,
	-230, -230, -230, -373, 551, -498, -408, 522, 84, 393,
	502, -498, -226, 411, -268, -268, -281, -290, -251, 200,
	403, 361, 26, 403, 270, 270, -507, 326, -412, 214,
	-232, 326, -471, -275, -251, 582, -396, 553, 255, 255,
	534, -268, -275, 255, 214, -268, 214, -275, 2, -275,
	-576, 393, 336, -421, 61, -317, 277, 391, 327, -227,
	411, 451, 356, -128, -128, -128, 582, -592, 534, 138,
	-281, -302, -281, -290, -507, -285, 451, 356, 411, 324,
	-296, -496, -496, -374, 451, 356, 411, -290, -507, -283,
	-507, -238, -251, -238, 438, -265, 402, 557, 46, -613,
	-228, -128, -128, -128, 582, -266, -229, 411, 5, 214,
	-268, 5, -268, 214, 5, -251, -268, -290, -507, -596,
	24, 143, -268, -290, -507, -256, -510, 331, 530, -574,
	438, 506, 506, -457, -124, -195, 551, -124, -189, 225,
	575, -571, -251, 543, -251, -307, -310, -308, -268, -207,
	-208, 553, 551, 154, -300, -281, 580, -192, -510, -281,
	-466, -291, -292, 154, -333, 326, -510, 39, 154, 582,
	2, 2, -284, 341, 326, -267, 214, -234, 145, -613,
	-265, -415, -346, -371, -406, 420, 341, -334, 539, -274,
	-371, -348, 587, 187, 565, 584, -334, -461, 575, -101,
	-101, -192, 587, 582, 565, 565, 582, -510, -510, 583,
	587, -232, -281, -267, 229, 229, -273, -252, 583, 587,
	584, 582, -200, 345, -199, 146, 257, 242, 460, 461,
	462, 463, 137, -465, -198, -125, 187, 187, -61, 551,
	490, -192, 586, -251, -378, -378, -378, 448, 448, -251,
	-277, -265, -281, -278, -302, 183, 183, -265, 528, -402,
	342, 282, -448, -225, 559, -281, 586, -421, -421, 150,
	150, -421, -422, -422, -421, 150, 187, 582, -421, -432,
	34, 34, 583, 587, -417, -421, 583, 542, -338, -338,
	583, 575, -501, 586, 583, -430, 147, -421, 500, 295,
	212, 293, -391, 293, -391, -391, -495, 5, -501, 575,
	-558, -271, 582, -251, 549, -337, 347, 583, -473, -471,
	-421, -421, -421, -421, -421, -495, -476, -476, -491, -491,
	-421, -426, -421, -473, -471, -422, -422, -422, -422, -422,
	-422, -422, -422, -422, -422, -422, -422, -422, -422, -422,
	-422, -422, -422, -422, 139, 326, 335, -422, -427, -426,
	-421, -421, -471, 583, 583, 583, -353, -101, 582, 288,
	-365, 205, -421, -465, 587, -365, -365, 583, -452, -452,
	582, -421, 250, 581, 587, 589, 565, -333, 584, -444,
	-445, 581, 583, 587, 583, 587, -405, 39, 583, -501,
	-415, -203, -202, 136, 54, 108, 134, 331, -342, -342,
	344, 5, 8, 580, 581, 584, -495, 583, 583, 583,
	-342, -342, -342, -230, -230, 120, 314, -421, 506, 506,
	61, 221, 361, 403, 506, 42, 324, -238, 383, 429,
	26, 403, 403, 154, 326, 536, -529, -524, 152, -421,
	582, 229, 582, 582, 2, -223, 143, 451, -594, 2,
	534, 154, -230, 154, -230, 555, -317, 582, 582, 506,
	438, -244, 506, 551, -353, -421, -193, 127, -500, -581,
	586, -581, 586, 438, 506, 506, 438, 506, 506, 551,
	167, 167, 557, -238, 551, -353, 506, -475, 49, 27,
	326, -284, -230, 154, 506, 506, 518, 451, -510, 331,
	-290, -507, -285, 451, 356, 411, -465, -197, 345, -196,
	146, 422, 137, 257, -465, -195, 187, 241, 551, -285,
	2, 583, 583, 587, -530, 39, 339, 339, 582, -281,
	-82, 551, -464, -497, -577, 551, 44, -283, 39, 154,
	-574, -128, -285, -469, -470, 5, 39, -281, 154, 341,
	326, -235, 264, -613, -505, -545, -338, -371, -360, 327,
	92, 583, -415, -362, -346, -421, 2, 583, -190, -191,
	-510, -510, -510, -192, -204, -204, -413, -311, 582, -267,
	-252, 582, -204, -269, 2, -511, 587, 582, 565, 565,
	565, -198, -465, -124, -128, 345, -281, 575, -378, -323,
	-322, 360, 335, -323, 429, 429, 342, 177, 260, -224,
	-266, -421, -421, 150, 34, 34, -421, -421, -432, 583,
	-421, -421, -353, 581, 5, -421, 583, 583, 8, -421,
	583, 584, -559, -251, -421, 583, 61, 583, 583, 587,
	587, 583, 583, 583, 583, 583, 583, 583, -427, 187,
	139, 335, 582, 583, 583, -101, -429, 208, 61, -452,
	-429, -429, -380, -342, -452, -419, -266, 580, -501, -497,
	-455, 582, 584, -202, 565, -510, -510, 581, 2, 580,
	-501, 583, 120, -268, -268, 490, 429, -238, 383, 39,
	39, 324, -238, 383, 429, 402, 270, 26, 26, -412,
	154, -531, 94, -533, 77, 169, 103, 326, 331, 524,
	383, 73, 127, 399, -605, 39, 562, 583, -340, -449,
	-544, 582, -251, -340, -342, 326, 479, 127, 326, 127,
	120, 518, 80, -268, -275, -342, -342, -281, -290, -507,
	161, 583, 587, 565, 2, 575, 575, -290, -507, -285,
	-290, -507, -283, 358, 167, 161, 583, -266, 5, 5,
	154, -263, 77, -268, 5, -268, -284, 120, 438, 506,
	506, -195, 587, 582, 565, 565, -195, -511, -124, 2,
	-333, -324, 231, -268, -528, -525, -526, 383, -532, -534,
	169, 383, -128, 2, -206, -205, -251, 5, 582, -309,
	345, 581, -579, 345, -578, 118, 137, -507, -375, -128,
	-285, -333, 583, 587, 148, -397, 534, -266, -281, 154,
	-236, 263, -613, -505, -233, -400, -398, 140, 582, 341,
	-128, -338, 565, 583, 583, 120, 120, 223, 153, -340,
	582, 582, -342, 120, 583, -199, -200, -510, -124, -510,
	-198, -465, -62, -63, 229, 94, 366, -278, 490, 229,
	582, 582, -224, -421, -421, -421, 583, -338, -501, 575,
	-553, 360, 583, -448, -421, -421, -422, 187, 582, -432,
	583, -554, 550, -421, -366, -367, -421, 428, 109, 206,
	-554, -554, 583, -497, 2, -510, 580, 2, 221, 39,
	402, -251, -251, 402, 270, 39, 506, 39, -412, -275,
	-279, -272, -251, 169, 214, 331, 547, -396, 255, 582,
	-422, -281, 582, 2, 31, -606, 131, 234, 583, 587,
	-450, -262, -251, -421, -450, 583, 583, 331, 331, -421,
	-471, 582, -230, -230, 583, 583, -421, 506, -500, 101,
	-498, 2, -581, -265, -421, 506, 5, -230, -279, -230,
	-230, -263, 518, -290, -507, -285, -196, -197, -510, -124,
	-195, 39, -314, 233, 2, -530, 255, -272, 255, -604,
	551, 583, 587, 565, 565, -307, -207, -83, -84, 507,
	-464, 587, 582, 565, -333, 39, 5, 582, 582, -251,
	341, 582, -266, -246, 93, -613, -505, -234, -371, 327,
	-342, 94, -400, -428, -192, 582, 582, -312, 82, 95,
	128, 213, 190, 230, 471, 477, 29, -312, 583, -340,
	-340, 583, 582, -192, 583, 587, 29, 582, 29, 582,
	-281, -302, -353, -353, 583, -338, 61, 587, 583, 583,
	-422, -432, 583, -555, -556, -271, 587, 582, 582, 452,
	581, 2, -238, 383, -251, 39, -251, -238, 383, -251,
	-533, -272, 326, 534, -421, -253, 582, -421, 39, 234,
	132, 219, -411, -607, 102, 480, 222, -449, -224, 583,
	-410, 534, 399, -263, -340, 582, 582, 582, 565, 187,
	582, -475, -230, -284, 583, -586, 397, -128, -318, -319,
	221, 582, -313, 341, 120, 314, -205, -498, -498, 583,
	39, -84, 9, -578, -579, -421, 39, -128, -469, -340,
	-281, -340, 341, -240, -239, 272, -505, -235, 583, -275,
	-371, -511, -511, -410, 583, 583, -511, -63, -342, -342,
	583, 583, -560, 391, 430, 207, -353, -339, 583, 587,
	39, -367, 2, 2, 2, 402, -251, 402, 154, 209,
	583, -535, 287, -251, 583, 132, 219, -314, 582, -225,
	-450, -314, 209, -281, -582, 534, 583, -326, -325, -322,
	-328, -327, -322, -353, -498, 101, 358, -353, -263, -589,
	188, -588, 5, 10, -207, 358, -341, -451, -268, 83,
	120, -324, -128, 583, -128, 583, 583, -397, 583, -281,
	-237, -512, 402, 404, -613, -236, -415, 583, 583, -411,
	-410, -320, -316, 583, 583, 583, 583, -561, -562, 51,
	521, 110, -421, -561, -561, -556, -558, 169, 551, -536,
	-539, -538, 341, 458, 188, 359, 583, 479, 546, -320,
	-342, 551, -333, -421, -410, 583, 587, 539, 583, 587,
	539, 583, 187, 583, -230, -194, 551, 47, -313, -281,
	583, 587, 382, 133, 143, -314, -604, -410, 582, -411,
	582, -243, -242, -613, -491, -246, 140, -192, -192, -314,
	-411, -208, 551, -192, -563, 152, -562, 379, 182, 429,
	379, 182, -563, -563, -272, 56, -538, 341, -539, 341,
	528, 133, -606, 583, 56, -535, -314, -325, 221, -327,
	187, 358, 436, -588, 31, -245, -244, 582, -451, 430,
	430, 2, -318, -313, -411, -340, -314, -340, -241, -342,
	-240, 327, 528, -320, -314, -415, 110, 205, 501, 314,
	34, 565, -537, 314, 418, 65, 451, -537, -415, 565,
	-536, 582, 582, 345, -342, 2, -207, -314, 583, -320,
	583, -237, 451, -208, -320, 429, 349, -562, -421, 23,
	331, 127, -421, -606, -353, -353, -191, 582, 583, -313,
	-320, -410, -208, -411, -243, -361, -415, -208, 583, 583,
	-191, -231, 65, 418, -245, -208, -411, -415, -314, -415,
	-415, -315, -316, 506, 583, -415, -314, -320, 582, -320,
	-208, -353, -208, -415, 583, -415, -315,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 524, 525, 527, 528, 529, 531,
	532, 534, 536, 538, 539, 540, 542, 543, 545, 546,
	547, 548, 549, 551, 553, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	617, 619, 0, 1329, 1331, 1333, 1335, 0, 761, 0,
	36, 37, 39, 0, -2, 311, 313, 315, 0, 342,
	344, 345, 347, 349, 350, 351, 353, -2, 0, 459,
	460, 462, 464, -2, 0, 951, 953, 0, 606, 608,
	0, 956, 958, 0, 0, 628, 629, 0, 1436, -2,
	622, 624, 626, 691, 693, 695, 697, 699, 701, 703,
	705, 707, 708, 710, 712, 714, 716, 718, 719, 721,
	723, 725, 726, 728, 729, 731, 733, 735, 737, 739,
	741, 743, 745, 747, 749, 751, 753, 755, -2, 758,
	-2, -2, 0, -2, -2, -2, 1347, 41, 43, 45,
	47, 49, 51, 53, 55, 57, 403, 405, 407, 409,
	411, 414, 416, 418, 1494, 466, 468, 470, 472, 474,
	476, 478, 0, -2, 1508, 0, 0, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 101, 102,
	103, 104, 105, 106, 107, 108, 73, 74, 75, 77,
	78, 79, 80, 84, 85, 86, 87, 88, 89, 90,
	91, 99, 71, 0, 0, 1467, 1469, 1471, 1473, -2,
	0, 0, 5, 9, 11, 13, 15, 17, 19, 21,
	23, 25, 27, 29, 526, 530, 533, 535, 537, 541,
	544, 550, 552, 554, 511, 512, 515, 2172, 2189, 2190,
	2191, 2194, 2195, 2196, 2197, 2198, 2199, 2639, 2721, 2722,
	2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230,
	2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240,
	2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250,
	2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260,
	2261, 2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270,
	2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280,
	2281, 2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290,
	2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300,
	2301, 2302, 2303, 2304, 2305, 2306, 2307, 2308, 2309, 2310,
	2311, 2312, 2313, 2314, 2315, 2316, 2317, 2318, 2319, 2320,
	2321, 2322, 2323, 2324, 2325, 2326, 2327, 2328, 2329, 2330,
	2331, 2332, 2333, 2334, 2335, 2336, 2337, 2338, 2339, 2340,
	2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348, 2349, 2350,
	2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360,
	2361, 2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370,
	2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380,
	2381, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390,
	2391, 2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400,
	2401, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410,
	2411, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420,
	2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430,
	2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440,
	2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450,
	2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460,
	2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470,
	2471, 2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480,
	2481, 2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490,
	2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500,
	2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510,
	2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519, 2520,
	2521, 2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530,
	2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540,
	2541, 2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550,
	2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560,
	2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570,
	2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580,
	2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590,
	2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599, 2600,
	2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610,
	2611, 2612, 2613, 2614, 2615, 2616, 2617, 2618, 513, 514,
	1128, 0, 578, 576, 2157, 579, 2443, 581, 583, 453,
	454, 455, 456, 457, 458, 0, 599, 590, 1506, 600,
	602, 603, 604, 605, 573, 571, 0, 599, 2225, 597,
	1327, 1328, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	465, 0, 0, 0, 0, -2, 0, 0, 0, 0,
	0, 0, 0, 382, 1177, 1178, 1179, 1312, 1313, 2487,
	1354, 0, 217, 618, -2, -2, -2, 2604, -2, 650,
	-2, 657, 2608, 2489, 662, 0, 664, -2, 667, 1330,
	1332, 1334, 759, 760, 2175, 0, 0, 0, 0, 0,
	38, 40, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 227, -2, -2, -2,
	-2, 0, 0, 2533, 2278, 2125, 2191, 2128, 2123, 312,
	314, 316, 317, 0, 0, 0, 0, 0, 0, 343,
	346, 348, 352, -2, 354, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 381, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, -2, 0,
	0, 0, 0, 0, 0, 0, 0, 1012, 1004, 1005,
	1235, 0, 0, 0, -2, 461, 463, 516, 517, 0,
	1495, 1495, -2, 0, 0, 0, 0, 283, 273, 952,
	954, 955, 0, 0, 0, 0, 607, 609, 0, 0,
	255, 957, 959, 960, 0, 0, 0, 0, 0, 285,
	0, 0, 623, 625, 627, 692, 694, 696, 698, 700,
	702, 704, 706, 709, 711, 713, 715, 717, 720, 722,
	724, 727, 730, 732, 734, 736, 738, 740, 742, 744,
	746, 748, 750, 752, 754, 756, 757, 767, 0, 0,
	0, 0, 0, -2, -2, 0, 0, 0, -2, -2,
	-2, -2, 0, 0, 0, 0, 0, 0, 0, -2,
	0, 855, 0, 0, 0, -2, -2, -2, 0, 0,
	0, 0, 0, -2, -2, 0, 0, 0, 0, -2,
	933, 0, 770, 772, 773, 774, 0, 833, 853, 854,
	863, 0, 1168, 1496, 1356, 1337, 1351, 1356, 1339, 1340,
	1341, 1342, 1343, 1348, 1350, 1344, 1345, 1346, 42, 44,
	46, 48, 50, 52, 54, 56, 58, 404, 406, 408,
	410, 412, 415, 417, 419, -2, 1465, 1466, 467, 469,
	471, 473, 475, 477, 479, 610, 0, 612, 0, 771,
	-2, 0, 1500, 1500, 1500, 0, 0, 1466, 1464, 0,
	615, 616, 671, 672, 1768, 0, 0, 0, 0, 0,
	0, 0, 2022, 1854, 0, 673, -2, 1885, 1887, 2579,
	2604, 2021, 1889, 1890, 1891, 1892, 1893, 0, 1895, 1896,
	1897, 1898, 1899, 1900, 0, 1902, 0, 1907, 1908, 1909,
	0, 2586, 2102, 2185, -2, 0, 0, 2592, 2181, 0,
	1988, 1925, -2, -2, 2208, 2187, 1700, 1701, 1702, 1703,
	1704, -2, -2, 2622, 1929, 1930, 1931, 1932, 1933, 1934,
	1935, 1936, 1937, 1938, 1939, 0, 2567, 2587, 2588, 2593,
	2595, 2589, 2576, 1950, 2291, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, 1727, 1736,
	-2, -2, -2, -2, -2, -2, -2, 2580, 2581, 2598,
	2601, 2607, 2612, 2613, 2585, 2594, 2621, 2623, 2624, 2625,
	2626, 2627, 2628, 2629, 2630, 2631, 2632, 2633, 2634, 2635,
	2636, 2637, 2638, 1728, -2, -2, -2, -2, 1483, 2456,
	1486, 1128, 1484, 1468, 1470, 0, 1472, 0, 0, 0,
	1477, 1503, 1501, 0, 1552, 1481, 1482, 1570, 1570, 1594,
	0, 1575, 0, 1594, 1495, 1621, 0, 1581, 2479, 1926,
	1927, 0, 2191, 2186, -2, -2, 2619, 0, 0, 0,
	0, 0, 0, 0, 0, 574, 0, 580, 582, 0,
	0, 0, 598, 1505, 0, 0, 0, 0, 0, 0,
	0, 385, 386, 387, 388, 389, 2587, 0, 0, 0,
	394, 0, 396, 397, 398, 399, 400, 401, 402, 186,
	2587, 484, 509, 0, 186, 2587, 487, 186, 2587, 490,
	0, 493, 1233, 186, 2587, 496, 2153, 186, 2587, 499,
	501, 2161, 186, 2587, 505, 2168, 2166, 506, 2587, 508,
	288, 286, 287, 2204, 2205, 2212, 2213, 2214, 2215, 2620,
	2622, 1323, 1324, 1325, 1326, 0, 1353, 1234, 620, 621,
	0, 645, 0, 649, 2575, -2, 0, 2498, -2, 653,
	1357, 1361, 1362, 1363, 1364, 1365, 0, 0, 0, 0,
	1370, 0, 0, 659, 0, 0, 646, 647, 665, 668,
	0, 762, 763, 764, 765, 766, 70, 0, 2587, 1621,
	72, 0, 2147, 2216, 2217, 2218, 2219, 2220, 2640, 2641,
	2642, 2643, 2644, 2645, 2646, 2647, 2648, 2649, 2650, 2651,
	2652, 2653, 2654, 2655, 2656, 2657, 2658, 2659, 2660, 2661,
	2662, 2663, 2664, 2665, 2666, 2667, 2668, 2669, 2670, 2671,
	2672, 2673, 2674, 2675, 2676, 2677, 2678, 2679, 2680, 2681,
	2682, 2683, 2684, 2685, 2686, 2687, 2688, 2689, 2690, 2691,
	2692, 2693, 2694, 2695, 2696, 2697, 2698, 2699, 2700, 2701,
	2702, 2703, 2704, 2705, 2706, 2707, 2708, 2709, 2710, 2711,
	2712, 2713, 2714, 2715, 2716, 2717, 2718, 2719, 2720, 76,
	0, 2587, 81, 0, 2587, 0, -2, 92, 0, 100,
	0, 2150, 109, 0, 2587, 0, 2122, -2, 0, 198,
	274, 0, 979, -2, 2587, 1176, 0, 0, 0, 0,
	942, 2119, 2124, 943, 2143, 944, 2129, 0, 318, 319,
	320, 321, 322, 0, 323, 2587, 325, 326, 0, 328,
	329, 2587, 331, 332, 0, 334, 0, 238, 239, 2587,
	356, 358, 0, 360, 361, 0, 363, 0, 0, 0,
	367, -2, 383, 0, 380, 370, 371, 373, 374, 375,
	376, 377, 0, 423, 421, 2158, 0, 0, -2, 2587,
	0, 976, 0, 0, 1213, -2, 2587, 1173, 0, 1220,
	2587, 1216, 0, -2, 0, 1493, 2587, 1374, 1008, 1009,
	1010, 1011, 1633, 450, 0, 1401, 0, 1403, 0, 1422,
	1627, 1570, 0, 0, 1632, 0, -2, 567, 2174, -2,
	519, 0, 520, 0, -2, 0, 300, 0, 0, 961,
	962, 963, 964, 965, 968, 969, 970, 971, 1607, 256,
	258, 0, 0, 1314, 1315, 1316, 1317, 1318, 1319, 1320,
	1321, 1322, 0, 0, 630, 0, 0, 768, 769, 0,
	0, 779, 780, 781, 0, 300, 2490, 2452, 2312, 788,
	0, 791, 794, -2, 0, 0, 0, 0, 798, 0,
	803, 804, 805, 0, 0, 809, 811, 950, 813, 0,
	0, 815, 0, 819, 0, 822, 0, 824, 0, 826,
	-2, -2, -2, 834, 835, -2, 839, -2, 0, 842,
	844, 0, 846, -2, 0, 855, 851, 852, 0, 0,
	0, 0, 871, 872, 0, 881, 0, 884, 885, 886,
	0, 888, 889, 0, 891, 892, 893, 894, 0, 0,
	897, 898, -2, -2, 902, 904, 0, -2, 0, 920,
	0, 924, 0, 0, 932, 0, 775, 776, 186, 1625,
	1336, -2, 1338, 0, -2, 0, 611, 0, 614, 1525,
	1451, 1448, 0, 1522, 1523, 1452, 0, 0, 0, 1459,
	0, 1498, 1499, 0, 0, 0, 1438, 1439, 0, 0,
	0, 0, 2027, 2028, 2029, 2030, 2031, 2032, 2035, 2036,
	2033, 2034, 2037, 2038, 0, 0, 0, 0, 0, 2039,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2040, 2041, 2042, 0, 0, 2044, 0, 2046, 0,
	0, 0, 0, 0, 0, 1833, 1835, 2110, 0, 0,
	2043, 1773, 1774, 1775, 1776, 1777, 1812, 1813, 0, 0,
	1886, 2107, 2106, 1888, 0, 2058, 0, 1901, -2, 0,
	2022, 2053, 0, 0, 1910, 1911, 1912, 0, 0, 2058,
	0, 0, 2101, 1922, 1923, 1765, 0, 0, 1990, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1714, 1713, 0, 1715,
	0, 1716, 1717, 1724, 1737, 0, 0, 0, 0, 1741,
	0, 0, 0, 0, 0, 0, 0, 2082, -2, 0,
	0, 0, 0, 1729, 0, 1485, 0, 0, 1556, 2111,
	2115, 2116, 1556, 1556, 0, 0, 2059, 1618, 1618, 0,
	0, 1613, 1613, 1613, 1611, 1594, 0, 1594, 1604, 0,
	1594, 1594, 0, -2, 1575, 0, 0, 1604, 0, 1588,
	555, 557, 559, 561, 562, 563, 565, 1622, 1623, 0,
	0, 0, 0, 2192, 0, 0, 0, 0, 0, 2177,
	0, 339, 0, 0, 0, 2543, 2489, -2, 585, 601,
	1495, 0, 2061, 1648, 1652, 0, 1654, 1655, 1656, 1657,
	1658, 0, 0, 1649, -2, 1725, 1727, 1748, 2209, 2210,
	2211, 1708, 1709, 1710, 1711, 1712, 1720, 1707, 1707, 1707,
	1718, 1747, 1739, 1747, 1743, 1693, 1694, 1695, 1730, 1731,
	1732, 1733, 0, 2543, 2489, -2, 592, 0, 0, 1433,
	202, 204, 205, 206, 207, 208, 384, 0, 391, 392,
	393, 0, 480, 0, 184, 185, 0, 186, 2587, 485,
	0, 488, 0, 186, 2587, 2117, 494, 0, 497, 0,
	0, 503, 0, 0, 0, 0, 0, 186, 1435, 0,
	0, 0, 0, -2, 655, 660, 661, 0, 1359, 0,
	1366, 682, 683, 684, 1368, 1369, 0, 1371, 658, 685,
	686, 687, 688, 689, 690, 0, 2131, 2132, 2133, 2134,
	2137, 2138, 0, 0, 656, 675, 663, 0, 669, 110,
	1309, 0, 0, 149, 0, 1309, 1309, 0, 0, 0,
	0, 173, 0, 1047, 0, 0, 0, 0, 0, 134,
	145, 122, 123, 0, 0, 0, 0, 0, 0, 82,
	1150, 0, 1153, 0, 0, 0, 0, 0, 0, 0,
	1166, 0, 0, 0, 0, 0, 0, 0, 96, 97,
	0, 133, 0, 0, 1398, 0, 128, 112, 0, 0,
	0, 135, 147, 0, 177, 179, 1044, 0, 0, 0,
	0, 0, 0, 0, 0, 197, 209, 0, 0, 0,
	1174, 0, 1492, 0, 0, 2587, 0, 1607, 2359, -2,
	-2, 256, 1607, 941, 0, 0, 2192, 2127, 0, 0,
	0, 0, 0, 0, 0, 0, 359, 362, 364, 365,
	366, 0, 1212, 0, 372, 413, 1099, 2587, 0, 0,
	440, 435, 0, 437, 0, 0, 0, 1149, 2587, 1147,
	2162, 0, 1171, 0, 1128, 2587, 2160, 0, 0, 0,
	1221, 2201, 1230, 1234, 1388, 0, 452, 0, 1404, 1406,
	0, 0, 1628, 0, 1630, 1570, 1495, 0, 0, 0,
	0, 276, 0, 0, 0, 0, 0, 0, 262, 0,
	1606, 0, 0, 1607, 256, 2467, 300, 300, 1607, 632,
	1607, 634, 0, 0, 782, 783, 0, 300, 300, 300,
	789, 790, 792, 793, -2, -2, -2, -2, 795, 796,
	878, 0, 0, 0, 877, 808, 812, 0, 935, 2475,
	2489, 2543, 948, 878, 2278, 878, 2278, 878, 2278, 823,
	825, 828, 866, 874, 838, 843, 0, 0, 848, 856,
	-2, 0, 858, 0, 860, 0, 862, 878, 879, 882,
	887, 890, 895, 896, 0, 911, 916, 917, 913, 0,
	0, 0, 0, 0, 0, 927, 928, 0, 0, 1167,
	0, 1349, 1525, 1451, 613, 1442, 1524, 1443, 1450, 1453,
	0, 0, 1455, 0, 1457, 0, 1520, 1521, 1528, 1529,
	0, 1539, 1540, 1532, 0, -2, 0, 0, 1535, 1536,
	1461, 0, 1478, 1479, 1480, 1509, 1512, 1249, 0, 2721,
	1769, 1643, 1770, 1771, 2146, 0, 1778, 1779, 1780, 1781,
	1782, 1783, 1784, 1785, 1786, 1787, -2, -2, -2, -2,
	-2, -2, -2, -2, 1796, 1797, 1798, 1799, 1800, 1801,
	1802, 1803, 1804, 1805, 1806, -2, -2, -2, 1810, 1811,
	-2, 2045, 2047, 0, 2110, 0, -2, 0, -2, -2,
	-2, -2, 1830, 0, 1832, 1837, 1839, 1841, 0, 0,
	0, 0, 2109, 1851, 2093, 2094, 0, 0, 2024, 2025,
	2026, 1836, 0, 1855, 2108, 2105, 0, 0, 2057, 1508,
	1914, 0, 0, 0, 0, 1921, 1906, 2055, 0, 2054,
	0, 0, 0, 2065, 0, 2100, 2096, 0, 2144, 1764,
	1751, 1752, 1753, 1754, 1755, 1756, 1766, 0, 2141, 2178,
	2184, 1998, 0, 0, 0, 1951, 1952, 1953, 1954, 1955,
	0, 1957, 1958, 0, 1960, 1961, 0, 1963, 1964, 0,
	1966, 1967, 1968, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670,
	1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680,
	1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690,
	1691, 1692, 0, 0, 1970, 0, 2068, -2, -2, -2,
	-2, -2, -2, -2, -2, 0, 1972, 0, 1974, 2059,
	2079, 0, 0, 1856, 0, 0, 0, 2022, 0, 1977,
	2059, 2087, 0, 0, 0, 0, 0, 2059, 0, 2092,
	0, 1984, 0, 1986, 1487, 0, 0, 1638, 0, 0,
	0, 2114, 1638, 1638, 0, 1551, 0, 0, 1614, 1615,
	1616, 1617, 0, 0, 1618, 0, 1608, 1612, 1609, 1610,
	1604, 1567, 0, 0, 2148, 1604, 1573, 1603, 0, 1128,
	1593, 1604, 1604, 0, -2, 1577, 1594, 0, 0, 556,
	558, 560, 564, 566, 0, 0, 1508, -2, 0, -2,
	1127, 0, 0, 0, 0, 575, 577, 0, 0, 500,
	0, 589, 0, 569, 0, 572, 0, 1639, 1642, 0,
	0, 1653, 1659, 1660, 0, -2, 0, 0, 1749, 0,
	0, 0, 0, 596, 0, 0, 0, 0, 395, 510,
	186, 482, 0, 186, 186, 491, 0, 0, 186, 502,
	186, 2169, 186, 2167, 289, 507, 1434, 220, 0, 648,
	0, 1358, 1367, 0, 679, 0, 681, 0, 2135, 2139,
	2136, 2140, 0, 670, 0, 0, 0, 0, 1308, 0,
	1256, 0, 0, 0, 0, 0, 0, 153, 2587, 0,
	188, 0, 0, 1092, 2154, 0, 1084, 0, 0, 2298,
	0, 0, 0, 0, 0, 166, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 119, 124, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1151, 1152, 1154, 1161,
	1163, 0, 1157, 2142, 0, 0, 1158, 0, 1160, 1162,
	1164, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	98, 0, 0, 0, 1397, 1398, 0, 0, 0, 121,
	125, 0, 0, 0, 0, 2121, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1208,
	1206, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194,
	1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204,
	1205, 0, 0, -2, 0, 0, 0, 0, 0, 230,
	0, 291, 2120, 2130, 0, 966, 967, 324, 327, 330,
	333, 226, 0, 368, 0, 0, 1014, 989, 0, 0,
	422, 300, 0, 0, 436, 440, 2171, 974, 1145, 1148,
	0, 1128, 2587, 1185, 0, 0, 0, 0, 0, 0,
	1219, 0, 0, 2587, 2149, 2200, 2201, 1390, 1398, 0,
	1638, 0, 1420, 1407, 0, 0, 0, 1420, 1424, 1425,
	1427, 1428, 0, 0, 1629, 1635, 518, 568, 1495, 1495,
	300, 298, 2419, 296, 293, 295, 0, 0, 0, 1015,
	1017, 1018, 1019, 188, 0, 2201, 1084, 2348, 2201, 0,
	1410, 1412, 0, 250, 0, 259, 1607, 257, 262, 0,
	0, 0, 434, 631, 636, 777, 0, 300, 785, 786,
	787, 830, 868, 876, 915, 797, 799, 800, 801, 0,
	0, 949, 945, 946, 947, 814, 878, 817, 878, 820,
	878, 841, 845, 850, 857, 0, 0, 0, 870, 0,
	0, 0, 0, 0, 0, 0, 921, 922, 923, 925,
	930, 929, 934, 1626, 1446, 1447, 1449, 0, 1458, 0,
	0, 1534, -2, -2, 1533, 1537, 1538, -2, -2, -2,
	-2, 1454, 0, 1463, 1460, 0, 1519, 1247, 1248, 0,
	0, 0, 0, -2, -2, 0, 0, 0, 1852, 0,
	-2, 1831, 1834, 1838, 1840, 1842, 0, 0, 0, 0,
	0, 0, 2048, 0, 2050, 1853, 2103, 2106, 2020, 0,
	0, 1507, 1508, 1508, 0, 1920, 0, 2056, 0, 2063,
	2064, 0, 1913, 0, 2097, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1924, 0, 0, 0, 0, 1956,
	1959, 1962, 1965, 0, 0, 0, 0, 1945, 0, 0,
	0, 1949, 1719, 1705, 0, 1747, 1745, 1746, 1740, 1747,
	1744, 1697, 0, 1696, 0, 1969, 0, 1971, 1973, 0,
	0, 1975, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1859, 1860, 1861, 1976, 2085,
	2086, 0, 0, 0, 0, 0, 0, 1982, 0, 2091,
	1983, 1985, 1495, 0, 1488, 0, 1553, 1542, 1637, 0,
	2112, 1607, 1555, 1557, 2113, 2151, 1542, 1542, 0, 2060,
	0, 0, 1598, 0, 0, 0, 1600, 1571, 0, 0,
	1565, 0, 1561, 1562, 1563, 1564, 1572, 1128, 1602, 1574,
	1578, 2178, 0, 1604, 0, 1589, 0, 1591, 1624, 0,
	1583, 1586, 0, 0, 2193, 1638, 0, 335, 340, 341,
	336, 337, 338, 584, 0, 0, 0, 0, 2062, 0,
	1644, 0, 1650, 0, 0, 0, 0, 591, 0, 0,
	0, 203, 1432, 390, 481, 186, 486, 489, 2118, 186,
	495, 498, 504, 216, 0, 644, -2, 677, 678, 680,
	0, 676, 150, 1309, 0, 0, 1252, 1254, 2165, 1258,
	1263, 0, 0, 0, 0, 0, 1286, 0, 155, 2587,
	164, 0, 1063, 0, 2152, 0, 0, 0, 0, 0,
	0, 1311, 0, 0, 2587, 186, 2587, 186, 167, 169,
	172, 0, 176, 174, 0, 1051, 0, 0, 1054, 111,
	1309, 0, 0, 114, 118, 126, 0, 0, 0, 132,
	0, 0, 0, 1288, 1292, 1300, 0, 0, 0, 1155,
	1156, 1159, 1165, 83, 0, 0, 0, 1296, 1298, 1304,
	93, 94, 2163, 95, 0, 1251, 0, 0, 0, 0,
	178, 116, 120, 127, 0, 1306, 113, 0, 201, 0,
	0, 191, 186, 2587, 0, 193, 0, 194, 195, 210,
	0, 0, 0, 977, 978, 1207, 1169, 1170, 0, 1175,
	0, 0, 0, 0, 1607, 222, 0, 1607, 230, 0,
	2126, 0, 355, 0, 0, 0, 0, 1013, 1110, 0,
	984, 0, 0, 0, 428, 424, 0, 433, 439, 438,
	444, -2, 0, 0, 0, 0, -2, 0, 0, 1223,
	1217, 1218, 0, 0, 0, 0, 2587, 1392, 1398, 0,
	1493, 1508, 451, 1399, 1420, 0, 0, 0, 1409, 1405,
	1402, 1638, 0, 0, 0, 0, 0, 1631, 1634, 521,
	522, 275, 0, 0, 0, 0, 0, 300, 0, 0,
	0, 1020, 1024, 0, 2201, 2201, 0, 2156, 0, 0,
	0, 0, 260, 0, 263, 0, 0, 0, 268, 269,
	270, 271, 272, 262, 252, 1607, 0, 0, 633, 0,
	0, 784, 0, 807, 816, 818, 821, 859, 861, 878,
	905, 906, 1041, 0, 1041, 0, 0, 926, 1456, 0,
	1531, 1462, 1513, 1514, 0, 1249, 0, 1772, 1815, 0,
	0, -2, 0, 0, 1819, 0, 0, 0, -2, 0,
	0, 0, 2049, 2051, 0, 2105, 1915, 0, 0, 0,
	1919, 1903, 1904, 0, 2023, 2066, 2095, 2099, 0, 1757,
	1758, 1759, 1760, 1761, 1762, 1763, 0, 2145, 2179, 2183,
	1996, 1997, 2001, 2159, 0, 0, 0, 1928, 0, 0,
	0, 0, 0, 0, 0, 0, 1738, 1742, 0, 0,
	2067, 2078, 2080, 1857, 1858, 1862, 1863, 1864, 1865, 1866,
	1867, 1868, 1869, 1870, 1871, -2, -2, -2, 1875, 1876,
	1877, -2, -2, -2, 0, 0, 0, 2081, 2083, 2084,
	2088, 2089, 0, 1979, 1980, 1981, 2090, 0, 1495, 1489,
	1550, 0, 1636, 1554, 0, 1550, 1550, 1502, 1596, 0,
	0, 1620, 0, 1568, 0, 1569, 0, 1601, 0, 1576,
	1579, 1580, 1590, 0, 1582, 0, 1585, 0, 1915, -2,
	301, 302, 304, 0, 307, 308, 0, 0, 587, 588,
	586, 570, 0, 0, 1646, 0, 0, 1722, 1726, 1750,
	594, 595, 593, 483, 492, 218, 0, 1605, 0, 0,
	0, 0, 1267, 1269, 0, 2231, 1276, 1277, 0, 2604,
	1281, 0, 0, 0, 0, 187, 1061, 1091, 0, 0,
	0, 1083, 0, 0, 1097, 157, 0, 0, 0, 165,
	0, 0, 162, 0, 171, 175, 1048, 0, 0, 0,
	0, 1257, 0, 0, 0, 129, 130, 131, 0, 136,
	0, 137, 0, 0, 0, 0, 0, 0, 0, 0,
	1382, 1383, 0, 1377, 0, 0, 0, 189, 0, 0,
	0, 1246, 212, 0, 0, 0, 0, 0, 1210, 1211,
	1289, 1293, 1301, 0, 0, 0, 230, 228, 0, 231,
	0, 234, 235, 0, 230, 224, 0, 0, 0, 1128,
	369, 987, 1098, 0, 1100, 0, 985, 0, 0, 1099,
	420, 0, 427, 0, 441, 0, 0, 1149, 0, 0,
	1172, 1183, 1128, 0, 1222, 1224, 0, 1232, 0, 0,
	0, 1394, 1398, 0, 1387, 1388, 1527, 1400, 1418, -2,
	0, 0, 1508, 1426, 1423, 1429, 1430, 0, 297, 0,
	292, 294, 0, 278, 0, 0, 1016, 1021, 0, 0,
	0, 0, 0, 1411, 1413, 0, 0, 0, 0, 0,
	0, 251, 262, 1607, 284, 0, 778, 802, 869, 907,
	1040, 0, 0, 909, 0, 0, 1530, 1517, 1518, 1515,
	1249, 1817, 1821, 0, 0, 0, 1823, -2, 0, 1845,
	-2, -2, 2052, 2104, 1894, 1508, 1916, 1918, 1905, 2098,
	1767, 0, 2003, 2000, 0, 1987, 0, 1940, 1941, 0,
	0, 1944, 1946, 1947, 1948, 1706, 1699, 1698, 2077, 0,
	0, 0, 0, 1978, 1490, 0, 1992, 0, 0, 1558,
	1992, 1992, 1597, 0, 1599, 1566, 1559, 0, 2179, 1592,
	1584, 0, 0, 305, 0, 309, 310, 1640, 1645, 0,
	1651, 1721, 219, 151, 152, 1264, 1265, 1261, 0, 0,
	0, 1271, 1272, 0, 0, 1278, 1279, 0, 1284, 154,
	0, 1062, 0, 1065, 0, 0, 0, 0, 1072, 1084,
	0, 0, 0, 0, 0, 1085, 0, 1114, 0, 1237,
	1244, 0, -2, 0, 0, 0, 159, 181, 0, 0,
	1310, 0, 0, 186, 186, 0, 0, 1253, 1255, 1287,
	0, 0, 0, 0, 139, 0, 0, 1290, 1294, 1302,
	1297, 1299, 1305, 0, 1384, 0, 0, 1307, 199, 200,
	0, 186, 0, 186, 192, 186, 1246, 0, 0, 0,
	0, 221, 0, 0, 0, 0, 223, 290, 230, 357,
	0, 1035, 0, 1110, 1102, 1103, 1104, 0, 1109, 1111,
	0, 0, 1001, 986, 0, 997, 0, 0, 1014, 989,
	0, 425, 442, 0, 445, 0, 448, 975, 1146, 1180,
	1128, 0, 1214, 0, 0, 0, 0, 0, 0, 0,
	1396, 1398, 0, 1389, 1390, 1420, 1526, 0, 0, 0,
	1408, 1527, 0, 299, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 264, 0, 265, 266, 267,
	253, 254, 635, 637, 0, 0, 643, 1039, 0, 0,
	0, 0, 1516, 1825, -2, -2, 1846, 0, 2180, 2182,
	1508, 0, 1989, 1510, 0, 0, -2, 0, 0, 0,
	1491, 1474, 0, 1549, 1541, 1543, 1545, 2478, 2273, 2586,
	1475, 1476, 1619, 0, 1587, 306, 0, 1647, 0, 0,
	1262, 1268, 1270, 1273, 1274, 0, 0, 0, 156, 0,
	1066, 1067, 2155, 1069, 0, 1071, 1073, 1074, 1075, 0,
	1078, 2203, 0, 1082, 0, 1093, 1115, 0, 1124, 0,
	1239, 1249, 1243, 0, 1241, 1126, 0, 158, 160, 180,
	1246, 0, 161, 170, 0, 0, 115, 0, 0, 2267,
	142, 140, 138, 1250, 117, 0, 201, 211, 1245, 213,
	196, 186, 0, 1291, 1295, 1303, 232, 0, 233, 236,
	0, 0, 1050, 0, 988, 1101, 0, 1112, 1113, 991,
	0, 990, 0, 0, 0, 0, 0, 426, 429, 0,
	432, 0, 0, 0, 0, 0, 1225, 1223, 0, 1231,
	0, 0, 0, 1376, 0, 0, 1391, 1392, 449, 1414,
	0, 0, 1420, 1431, 277, 0, 0, 1022, 1025, 1026,
	1027, 1028, 1029, 1030, 1031, 1032, 1033, 1023, 1126, 0,
	0, 1090, 0, 282, 261, 0, 639, 0, 641, 0,
	908, 910, 0, 0, 1917, 2007, 0, 0, 1942, 1943,
	-2, 0, 1883, 1991, 1993, 0, 0, 0, 0, 0,
	1560, 1641, 1259, 0, 1266, 0, 1280, 1282, 0, 1285,
	1064, 1068, 0, 0, 0, 1132, 0, 0, 1086, 0,
	1118, 1119, 1035, 0, 1120, 1121, 1122, 1238, 1519, 1244,
	1035, 0, 0, 183, 0, 0, 0, 0, 0, 0,
	0, 190, 214, 1246, 229, 246, 0, 1181, 989, 1049,
	0, 0, 999, 0, 1002, 0, 998, 995, 996, 987,
	0, 430, 431, 446, 0, 447, 0, 1184, 0, 0,
	1232, 0, 0, 1379, 1375, 1398, 1393, 1394, 1638, 1417,
	1421, 0, 0, 1124, 1126, 1046, 0, 638, 0, 0,
	918, 919, 0, 0, 0, 0, 2002, 1511, 1884, 0,
	0, 1544, 1546, 1547, 1548, 1260, 1275, 1283, 0, 0,
	1077, 1137, 0, 0, 0, 1116, 1117, 1046, 0, 1242,
	1240, 1095, 0, 1128, 163, 0, 1126, 0, 1055, 0,
	0, 1058, 0, 0, 143, 2267, 141, 0, 186, 249,
	0, 243, 241, 242, 991, 0, 0, 1106, 1108, 0,
	1003, 1035, 1001, 443, 1182, 1215, 1126, 0, 1124, 0,
	1386, 1398, 1380, 1381, 0, 1396, 0, 300, 300, 1035,
	1124, 989, 1045, 300, 640, 642, 1999, 2019, 2008, -2,
	2546, 2274, 0, 2019, 2019, 1994, 1995, 0, 0, 1079,
	1133, 1134, 0, 1129, 1130, 1131, 2202, 1080, 1081, 1114,
	0, 0, 1132, 182, 1035, 1052, 0, 0, 1053, 0,
	0, 146, 0, 148, 215, 237, 0, 0, 983, 0,
	1105, 0, 0, 0, 0, 1050, 991, 1124, 0, 1035,
	0, 1372, 1385, 0, 1395, 1376, 0, 279, 280, 1046,
	1035, 1638, 0, 281, 2004, 0, 0, 2010, 2011, 2012,
	2013, 2014, 2005, 2006, 1070, 0, 1135, 0, 1136, 0,
	0, 0, 1638, 1123, 0, 1137, 168, 1056, 0, 1059,
	0, 144, 0, 244, 245, 980, 982, 0, 1107, 992,
	0, 994, 989, 1000, 1035, 0, 1046, 0, 1378, 2164,
	1379, 1415, 0, 989, 1046, 1089, 0, 2016, 2017, 0,
	0, 0, 1138, 0, 1141, 1142, 0, 1139, 1094, 0,
	1114, 0, 0, 0, 0, 993, 991, 1046, 1126, 989,
	1124, 1386, 0, 1638, 989, 2015, 2018, 2009, 1076, 1140,
	1143, 1144, 1125, 1096, 0, 0, 247, 0, 1038, 983,
	989, 1124, 1638, 1035, 1373, 1638, 1087, 1638, 1043, 0,
	0, 1034, 1036, 1037, 981, 1638, 1035, 1228, 1046, 1416,
	1088, 1057, 1042, 0, 248, 1226, 1046, 989, 0, 989,
	1638, 0, 1638, 1229, 1043, 1227, 1060,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 571, 3, 577, 572, 3,
	582, 583, 575, 573, 587, 574, 584, 576, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 590, 3,
	563, 565, 564, 568, 586, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 580, 3, 581, 578, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 588, 570, 589, 566,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 567, 57906, 569, 57907, 579, 57908, 585, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1302
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1307
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1309
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1312
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1313
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1314
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1315
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1316
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1317
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1318
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1319
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1320
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1321
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1322
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1329
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1338
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1340
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1343
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1344
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1345
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1346
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1347
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1348
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1349
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1350
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1351
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1410
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1436
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 76:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1450
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 81:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1468
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 82:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1472
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 83:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1476
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 92:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1502
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 93:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1506
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.user()}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1512
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1521
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1530
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1539
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1546
		{

			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1571
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1603
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1607
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 111:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1611
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1617
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1621
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1627
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1636
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1647
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1651
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1657
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1665
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1675
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1679
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1689
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1700
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1707
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1719
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1726
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1734
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1739
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1743
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1748
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1754
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 134:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1762
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 135:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1773
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 136:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1783
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 137:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1793
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 138:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1802
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 139:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1813
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 140:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1819
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 141:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1827
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1831
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1835
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 144:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1839
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 145:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1845
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1850
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1861
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1865
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1871
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1875
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 151:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1882
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1887
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1892
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1897
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1902
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1907
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1912
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1917
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1922
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1927
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1932
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1941
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1953
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1963
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1970
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 166:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1973
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1979
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 168:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1986
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1994
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2001
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2010
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2019
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2024
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2031
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2039
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2040
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2044
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2048
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2054
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2062
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2066
		{
			sqlVAL.union.val = nil
		}
	case 182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2072
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 183:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2076
		{
			sqlVAL.union.val = nil
		}
	case 184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2083
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2087
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 186:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2091
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2097
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 188:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2101
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 189:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2126
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2137
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2148
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2157
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2167
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2176
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2185
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 196:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2194
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 197:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2198
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2201
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2205
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2212
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2219
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2225
		{
			sqlVAL.union.val = []security.SQLUsername{sqlDollar[1].union.user()}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2229
		{
			sqlVAL.union.val = append(sqlDollar[1].union.users(), sqlDollar[3].union.user())
		}
	case 204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2234
		{
			sqlVAL.union.val = sqlDollar[1].union.user()
		}
	case 205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2236
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2241
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2248
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2256
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 216:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2280
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2287
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2291
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2295
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2299
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 221:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2328
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2340
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2350
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 224:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2361
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2370
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 226:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2374
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2378
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2386
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 229:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2390
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 230:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2394
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2401
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2405
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2414
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2418
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2422
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2426
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2506
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2517
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 240:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2522
		{
			sqlVAL.union.val = nil
		}
	case 241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2530
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2534
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2544
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2552
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2556
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2560
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 247:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2566
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 248:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2570
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 249:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2574
		{
			sqlVAL.union.val = nil
		}
	case 250:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2605
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2614
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2624
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2633
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2643
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2650
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2654
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2658
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2664
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2668
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2675
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 261:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2679
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 262:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2683
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2690
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2694
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2703
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2707
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2711
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2715
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2719
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2723
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2727
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2731
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2737
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2743
		{
			return unimplemented(sqllex, "alter function")
		}
	case 275:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2781
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2786
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2790
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2796
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2801
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2806
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2811
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2816
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2820
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 284:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2836
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2839
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2843
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2847
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2855
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2859
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2865
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 291:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2869
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2875
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2879
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2883
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2887
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2893
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2897
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 298:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2903
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 299:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2907
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 300:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2911
		{
			sqlVAL.union.val = nil
		}
	case 301:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2923
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2939
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 303:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2943
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2949
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 305:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2953
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2961
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2965
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2969
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2973
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2977
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2985
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2986
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2987
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2988
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2998
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3006
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3008
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3012
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3015
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3025
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3034
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3042
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3044
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3048
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3051
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3061
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3070
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3078
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3080
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3084
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3087
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3091
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3095
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 337:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3099
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3112
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3115
		{
			return unimplemented(sqllex, "comment on extension")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3119
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3124
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3136
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3138
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3139
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3142
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 353:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3143
		{
		}
	case 354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3144
		{
			return helpWith(sqllex, "CREATE")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3151
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3154
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 357:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3157
		{
			return unimplemented(sqllex, "create extension if not exists with")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3158
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3161
		{
			return unimplemented(sqllex, "create access method")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3162
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3163
		{
			return unimplemented(sqllex, "create cast")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3164
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3165
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 364:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3166
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3167
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3168
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3169
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3170
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3171
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3172
		{
			return unimplemented(sqllex, "create operator")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3173
		{
			return unimplemented(sqllex, "create publication")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3174
		{
			return unimplemented(sqllex, "create rule")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3175
		{
			return unimplemented(sqllex, "create server")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3176
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3177
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3178
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3179
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3182
		{
		}
	case 379:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3183
		{
		}
	case 380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3186
		{
		}
	case 381:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3187
		{
		}
	case 382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3190
		{
		}
	case 383:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3191
		{
		}
	case 384:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3194
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3195
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3196
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3197
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3198
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3199
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3200
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 391:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3201
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 392:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3202
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3203
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3204
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3205
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3206
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3207
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3208
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3209
		{
			return unimplemented(sqllex, "drop server")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3210
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3211
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3212
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3215
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3216
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3217
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3218
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3219
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3221
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3222
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3223
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3224
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3234
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3242
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3246
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 423:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3250
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3256
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3260
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3269
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 427:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3276
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 428:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3282
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 429:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3288
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3292
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3303
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 432:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3315
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 433:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3330
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 434:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3338
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 435:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3348
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3352
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3358
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3362
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3369
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 440:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3373
		{

			sqlVAL.union.val = nil
		}
	case 441:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3390
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3401
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 443:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3405
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 444:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3409
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3416
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3420
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3429
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3433
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3446
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3456
		{
			return helpWith(sqllex, "DELETE")
		}
	case 451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3459
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 452:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3460
		{
		}
	case 453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3468
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3471
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3472
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3473
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3474
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3475
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3484
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3485
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3486
		{
		}
	case 465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3487
		{
			return helpWith(sqllex, "DROP")
		}
	case 467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3490
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3491
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3492
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3493
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3494
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3495
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3496
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 480:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3504
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3508
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 482:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3512
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 483:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3521
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3529
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 485:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3537
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3541
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3544
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3552
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 489:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3556
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 490:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3559
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3567
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 492:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3576
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 493:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3584
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3592
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 495:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3600
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3607
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 497:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3614
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3622
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3629
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3633
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3639
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 502:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3643
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 503:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3652
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 504:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3660
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3667
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3675
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 507:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3679
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3682
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3686
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3691
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3704
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3709
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3711
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3716
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 515:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3720
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3743
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3750
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 518:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3752
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3760
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3768
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 521:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3776
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 522:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3784
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3795
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3799
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3802
		{
			return helpWith(sqllex, "DELETE")
		}
	case 533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3804
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3805
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3806
		{
			return helpWith(sqllex, "INSERT")
		}
	case 541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3809
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3811
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3814
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3819
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3820
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3821
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3826
		{
			return helpWith(sqllex, "DELETE")
		}
	case 558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3827
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3828
		{
			return helpWith(sqllex, "INSERT")
		}
	case 561:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3830
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3834
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3835
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 567:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3839
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3843
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 569:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3853
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 570:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3861
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3869
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3873
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 573:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3877
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3887
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 575:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3894
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3902
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3906
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 578:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3910
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3920
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3924
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3928
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3932
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3935
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3957
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 585:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3961
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 586:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3965
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 587:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3969
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 588:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3973
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 589:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3983
		{
			return unimplemented(sqllex, "grant privileges on sequence")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3986
		{
			return helpWith(sqllex, "GRANT")
		}
	case 591:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4008
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 592:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4012
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 593:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4016
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 594:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4020
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 595:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4024
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 596:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4034
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4037
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4042
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4046
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4056
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4060
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4074
		{
			return helpWith(sqllex, "RESET")
		}
	case 609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4075
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4083
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4087
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4090
		{
			return helpWith(sqllex, "RESET")
		}
	case 613:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4098
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4101
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4112
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4115
		{
			return helpWith(sqllex, "USE")
		}
	case 618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4119
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4120
		{
		}
	case 620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4121
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4122
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4126
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4127
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4128
		{
			return helpWith(sqllex, "USE")
		}
	case 630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4144
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 631:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4159
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4162
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 633:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4180
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 634:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4188
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4192
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 636:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4196
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4202
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4206
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4212
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4216
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4220
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 642:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4224
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4228
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4239
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4242
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 648:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4252
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4268
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4272
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 651:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4277
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4296
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4299
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 654:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4301
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 655:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4304
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4308
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4327
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4334
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4339
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 661:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4344
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4349
		{
			return unimplemented(sqllex, "set from current")
		}
	case 664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4350
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4358
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4363
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4370
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4374
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4380
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4384
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 672:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4391
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4412
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4416
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4422
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4426
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4430
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4434
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4438
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4444
		{
			sqlVAL.union.val = tree.Low
		}
	case 683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4448
		{
			sqlVAL.union.val = tree.Normal
		}
	case 684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4452
		{
			sqlVAL.union.val = tree.High
		}
	case 685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4463
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4467
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 687:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4471
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4476
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 690:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4480
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4495
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4496
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4497
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4498
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4499
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4500
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 704:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4501
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4502
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4504
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4505
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4506
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4507
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4508
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4510
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4511
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4512
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4514
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4516
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4517
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4518
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4519
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4520
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4521
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4522
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4523
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4524
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4525
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4526
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4527
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4528
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4529
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4530
		{
			return helpWith(sqllex, "SHOW")
		}
	case 759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4536
		{
		}
	case 760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4537
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 761:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4540
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4544
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4549
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4554
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4559
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4564
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4574
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4575
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4576
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4587
		{
			sqlVAL.str = "client_encoding"
		}
	case 775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4590
		{
			sqlVAL.str = "timezone"
		}
	case 776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4591
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4605
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 778:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4609
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4613
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4624
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4632
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4640
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 783:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4646
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 784:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4654
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4663
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 786:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4672
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 787:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4681
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4689
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 789:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4699
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 790:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4703
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4706
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4708
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4711
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4713
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4717
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4720
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 797:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4728
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4731
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 799:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4739
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 800:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4743
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4747
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4751
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4754
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4762
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4765
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 806:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4772
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4776
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4786
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4795
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 810:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4802
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4805
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 812:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4818
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4826
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 814:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4834
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4837
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 816:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4839
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4843
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4847
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4850
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 820:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4852
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4856
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4859
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 823:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4867
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4870
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 825:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4872
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4875
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4883
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4886
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 829:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4888
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4891
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 831:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4895
		{
			sqlVAL.union.val = true
		}
	case 832:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4897
		{
			sqlVAL.union.val = true
		}
	case 833:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4899
		{
			sqlVAL.union.val = false
		}
	case 836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4916
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4920
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4923
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4924
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4926
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4930
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4934
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4937
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4939
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4947
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4955
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4965
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4971
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 849:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4973
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4979
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4981
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4987
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 853:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4991
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 854:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4995
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 855:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5001
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5005
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 857:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5016
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5019
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5021
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5024
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 861:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5026
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5030
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5033
		{
			sqlVAL.union.val = true
		}
	case 864:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5034
		{
			sqlVAL.union.val = false
		}
	case 865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5042
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5045
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 867:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5047
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5050
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 869:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5058
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5068
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5078
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5081
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5088
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5091
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 875:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5093
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5096
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 877:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5099
		{
			sqlVAL.union.val = true
		}
	case 878:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5100
		{
			sqlVAL.union.val = false
		}
	case 879:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5107
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5111
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5114
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 882:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5121
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5125
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5128
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5135
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5139
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 887:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5143
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5153
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5156
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 890:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5164
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5169
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5174
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5178
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5188
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5192
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5197
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5200
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 901:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5213
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5216
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 903:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5224
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5227
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 905:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5237
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5241
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5245
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5253
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5261
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5268
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5274
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5276
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5279
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 914:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5281
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5284
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 917:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5288
		{
		}
	case 918:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5297
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5305
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5311
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 921:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5320
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5325
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5329
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5332
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 925:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5341
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5345
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5361
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5367
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5373
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5379
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5386
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5391
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 933:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5395
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5401
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5408
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 936:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5413
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 937:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5533
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5537
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5541
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5580
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5584
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5589
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5593
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5601
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5610
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5614
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5618
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5625
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 950:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5629
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 952:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5642
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 954:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5643
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5644
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 957:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5654
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 959:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5655
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 960:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5656
		{
			return helpWith(sqllex, "RESUME")
		}
	case 961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5666
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5674
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5676
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5680
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5683
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5688
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5692
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5707
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5715
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5717
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5723
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5731
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5737
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5744
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.user(),
			}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5751
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.user(),
			}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5758
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 977:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5769
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5778
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5786
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 980:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5825
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Interleave:       sqlDollar[9].union.interleave(),
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[10].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[11].union.storageParams(),
				OnCommit:         sqlDollar[12].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[13].union.locality(),
			}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:5841
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Interleave:       sqlDollar[12].union.interleave(),
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[13].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				OnCommit:         sqlDollar[15].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[16].union.locality(),
			}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5859
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 983:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5863
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 985:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5870
		{

			sqlVAL.union.val = nil
		}
	case 986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5876
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 987:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5882
		{
			sqlVAL.str = ""
		}
	case 988:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5886
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 989:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5892
		{
			sqlVAL.union.val = nil
		}
	case 990:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5896
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 991:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5901
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 992:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5905
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 993:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5909
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 994:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5913
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5919
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5923
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5929
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5933
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 999:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5939
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5953
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5968
		{
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5969
		{
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5970
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5988
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5989
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5990
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5994
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5995
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5996
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5997
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5998
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6003
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6009
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6013
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6019
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6025
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6038
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6047
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6051
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6057
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6062
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6063
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6064
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6065
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6066
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6067
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6068
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6069
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6070
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6075
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6084
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6091
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6096
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6101
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6107
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6114
		{
			sqlVAL.str = ""
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6121
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6127
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6135
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6141
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6147
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6153
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6163
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6169
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6175
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6182
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6189
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6195
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6199
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6205
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6215
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6219
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6225
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6239
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6250
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6254
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6260
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6264
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6268
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6272
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6276
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6280
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6284
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6302
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6306
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6310
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6314
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6320
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6324
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6331
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6335
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6339
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6349
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6353
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6357
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6364
		{
			sqlVAL.union.val = true
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6368
		{
			sqlVAL.union.val = false
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6374
		{
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6375
		{
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6380
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				Interleave:       sqlDollar[8].union.interleave(),
				PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				Predicate:        sqlDollar[11].union.expr(),
			}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6393
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					Interleave:       sqlDollar[9].union.interleave(),
					PartitionByIndex: sqlDollar[10].union.partitionByIndex(),
					StorageParams:    sqlDollar[11].union.storageParams(),
					Predicate:        sqlDollar[12].union.expr(),
				},
			}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6408
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6421
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6433
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6438
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6444
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6451
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					Interleave:       sqlDollar[7].union.interleave(),
					PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
					Predicate:        sqlDollar[10].union.expr(),
				},
			}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6464
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6476
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6487
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6494
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6498
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6504
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6514
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6525
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6529
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6536
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6542
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6553
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6557
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6563
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6569
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6573
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6579
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6583
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6589
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6594
		{
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6595
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6596
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6597
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6598
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6599
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6617
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6621
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6627
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6633
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6639
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6643
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6663
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6667
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6671
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6675
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6684
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6688
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6692
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6696
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6700
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6706
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6712
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6720
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6724
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6728
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6732
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6736
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6755
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6764
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6772
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6776
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6779
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6780
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6783
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6784
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6786
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6787
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6788
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6798
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6801
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6803
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6805
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6807
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6808
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6810
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6811
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6813
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6815
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6823
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6826
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6830
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6834
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6844
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6848
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6851
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6859
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6863
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6866
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6872
		{
			sqlVAL.union.val = true
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6876
		{

			sqlVAL.union.val = true
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6881
		{
			sqlVAL.union.val = false
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6891
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6905
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6917
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6929
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6939
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6949
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6953
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6957
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6961
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6965
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6969
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6973
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6977
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6981
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6985
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6989
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6993
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6997
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7001
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7005
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7009
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7013
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7017
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7021
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7030
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7034
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7040
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7044
		{
			sqlVAL.union.val = nil
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7050
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7054
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7059
		{
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7060
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7069
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7077
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7085
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7087
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7089
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7091
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7093
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7095
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7099
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7103
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7109
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7113
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:7133
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				Interleave:       sqlDollar[14].union.interleave(),
				PartitionByIndex: sqlDollar[15].union.partitionByIndex(),
				StorageParams:    sqlDollar[16].union.storageParams(),
				Predicate:        sqlDollar[17].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:7151
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				Interleave:       sqlDollar[17].union.interleave(),
				PartitionByIndex: sqlDollar[18].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[19].union.storageParams(),
				Predicate:        sqlDollar[20].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7170
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				Interleave:       sqlDollar[13].union.interleave(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7187
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				Interleave:       sqlDollar[16].union.interleave(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7204
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7208
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7223
		{
			sqlVAL.union.val = false
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7229
		{
			sqlVAL.union.val = true
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7233
		{
			sqlVAL.union.val = false
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7239
		{
			sqlVAL.union.val = true
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7243
		{
			sqlVAL.union.val = false
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7249
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7253
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7262
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7268
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7274
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7282
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7306
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7307
		{
			sqlVAL.str = ""
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7310
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7311
		{
			sqlVAL.str = ""
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7315
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7319
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7323
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7329
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7335
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7341
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7347
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7355
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7361
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7369
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7377
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7387
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7393
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7400
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7406
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7413
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7419
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7425
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7431
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7437
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7444
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7450
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[5].str),
			}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7457
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7463
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[5].str),
			}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7470
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7476
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7483
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7489
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7495
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[7].str),
			}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7502
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7508
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7515
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7521
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7527
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7534
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7540
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7547
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7553
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7559
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7568
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
			}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7576
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
			}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7586
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7592
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7602
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7608
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7620
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7629
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.user(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7639
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7648
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.user(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7660
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7666
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7674
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.user(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7683
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.user(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7694
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7700
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7712
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7718
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7732
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7738
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7746
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7750
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7755
		{
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7756
		{
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7759
		{
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7760
		{
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7768
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7771
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7781
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7789
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7791
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7795
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7798
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7811
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7819
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7821
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7827
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7840
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7848
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7850
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7856
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7864
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7867
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7871
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7872
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7873
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7889
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7892
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7894
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7897
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7907
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7910
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7912
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7915
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7919
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7924
		{
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7925
		{
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7926
		{
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7936
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7940
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7943
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7946
		{
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7947
		{
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7951
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7955
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7961
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7965
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7971
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7975
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7988
		{
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7990
		{
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7994
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7999
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8003
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8007
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8011
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8017
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8023
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8029
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8033
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8039
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8043
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:8053
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
			}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:8067
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
			}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8081
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8086
		{
			sqlVAL.str = ""
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8091
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8097
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8101
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8107
		{

		}
	case 1382:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8114
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8118
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8122
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8131
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8137
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8141
		{
			sqlVAL.str = ""
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8147
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8151
		{
			sqlVAL.str = ""
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8157
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8161
		{
			sqlVAL.str = ""
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8167
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8171
		{
			sqlVAL.str = ""
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8177
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8185
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8190
		{
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8191
		{
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8206
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8213
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8220
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8231
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8238
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8242
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8251
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8256
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8262
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8266
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8270
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8276
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8280
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8300
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8304
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8311
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8319
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8327
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8331
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8336
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8340
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8357
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8369
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8372
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8375
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8381
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8385
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8398
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8401
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8405
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8416
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.users(),
				NewRole:  sqlDollar[6].union.user(),
			}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8422
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8431
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.users(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8437
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8478
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8484
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8488
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8503
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8507
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8511
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8515
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8519
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8523
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8527
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8531
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8536
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8537
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8540
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8541
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8545
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8549
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8555
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8564
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8565
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8566
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8567
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8570
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8571
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8574
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8575
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8576
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8581
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8616
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8617
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8618
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8640
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8653
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8667
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8679
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8683
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8692
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8701
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8716
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8723
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8735
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8739
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8744
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8750
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8754
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8760
		{
			sqlVAL.union.val = true
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8764
		{
			sqlVAL.union.val = false
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8770
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8780
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8792
		{
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8793
		{
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8797
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8801
		{
			sqlVAL.union.val = nil
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8806
		{
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8807
		{
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8811
		{
			sqlVAL.union.val = true
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8815
		{
			sqlVAL.union.val = false
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8819
		{
			sqlVAL.union.val = false
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8825
		{
			sqlVAL.union.val = true
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8831
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8836
		{
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8837
		{
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8840
		{
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8841
		{
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8845
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8849
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8855
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8861
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8865
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8872
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8876
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8882
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8903
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8908
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8920
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8924
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8928
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8937
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8946
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8957
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8958
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8962
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8966
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8970
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8984
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8988
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8996
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9003
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9025
		{
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9026
		{
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9029
		{
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9030
		{
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9047
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9051
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9056
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9057
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9063
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9064
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9065
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9066
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9070
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9074
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9093
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9096
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9098
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9110
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9113
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9115
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9121
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9125
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9131
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9135
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9140
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9145
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9151
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9156
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9163
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9168
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9179
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9183
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9187
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9195
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9226
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9236
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9246
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9254
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9263
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9267
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9271
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9282
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9306
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9312
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9323
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9327
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9333
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9335
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9339
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9345
		{
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9347
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9350
		{
			sqlVAL.union.val = nil
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9351
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9352
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9356
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9360
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9366
		{
			sqlVAL.union.val = true
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9370
		{
			sqlVAL.union.val = false
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9390
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9394
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9398
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9402
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9406
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9410
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9416
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9420
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9427
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9433
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9440
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9446
		{
			sqlVAL.str = tree.AstFull
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9450
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9454
		{
			sqlVAL.str = tree.AstRight
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9458
		{
			sqlVAL.str = tree.AstInner
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9464
		{
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9465
		{
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9489
		{
			sqlVAL.str = tree.AstHash
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9493
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9497
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9501
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9505
		{
			sqlVAL.str = ""
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9518
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9522
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9527
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9528
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9529
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9530
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9534
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9539
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9553
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9557
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9563
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9569
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9579
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9589
		{
			sqlVAL.union.val = true
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9593
		{
			sqlVAL.union.val = false
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9599
		{
			sqlVAL.union.val = true
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9603
		{
			sqlVAL.union.val = false
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9609
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9616
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9628
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9641
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9649
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9650
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9660
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9667
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9668
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9670
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9678
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9679
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9691
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9698
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9707
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9747
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9752
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9759
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9760
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9763
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9764
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9765
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9766
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9767
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9768
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9769
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9770
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9771
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9772
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9773
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9774
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9775
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9776
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9777
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9778
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9779
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9780
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9781
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9782
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9783
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9784
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9785
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9786
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9787
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9788
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9789
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9790
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9791
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9792
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9793
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9794
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9797
		{
			sqlVAL.union.val = types.Geography
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9798
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9799
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9801
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9805
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9809
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9817
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9843
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9851
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9859
		{
			sqlVAL.union.val = nil
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9866
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9870
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9874
		{
			sqlVAL.union.val = types.Int2
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9878
		{
			sqlVAL.union.val = types.Int
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9882
		{
			sqlVAL.union.val = types.Float4
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9886
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9890
		{
			sqlVAL.union.val = types.Float
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9894
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9902
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9910
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9918
		{
			sqlVAL.union.val = types.Bool
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9924
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9937
		{
			sqlVAL.union.val = types.Float
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9943
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9949
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9957
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9961
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9965
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9971
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9983
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9989
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9993
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9997
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10001
		{
			sqlVAL.union.val = types.String
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10010
		{
			sqlVAL.union.val = true
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10011
		{
			sqlVAL.union.val = false
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10016
		{
			sqlVAL.union.val = types.Date
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10020
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10028
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10040
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10042
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10051
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10059
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10072
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10076
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10086
		{
			sqlVAL.union.val = true
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10087
		{
			sqlVAL.union.val = false
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10088
		{
			sqlVAL.union.val = false
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10092
		{
			sqlVAL.union.val = types.Interval
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10096
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10100
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10111
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10119
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10127
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10135
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10143
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10151
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10157
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10166
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10175
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10184
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10190
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10199
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10205
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10215
		{
			sqlVAL.union.val = nil
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10221
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10229
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10266
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10270
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10274
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10278
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10289
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10294
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10298
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10302
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10306
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10310
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10314
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10318
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10322
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10326
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10330
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10334
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10338
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10342
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10346
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10350
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10354
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10358
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10362
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10366
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10370
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10374
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10378
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10382
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10386
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10390
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10394
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10398
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10402
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10406
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10410
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10414
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10418
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10422
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10426
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10430
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10434
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10438
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10442
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10446
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10450
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10454
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10458
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10462
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10466
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10470
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10474
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10478
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10482
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10486
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10490
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10494
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10498
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10502
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10506
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10510
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10514
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10518
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10522
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10526
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10530
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10534
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10538
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10541
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10543
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10547
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10551
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10555
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10559
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10563
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10567
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10571
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10575
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10579
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10583
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10587
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10591
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10595
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10599
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10603
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10607
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10624
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10629
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10641
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10645
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10649
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10653
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10657
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10661
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10665
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10669
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10673
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10677
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10681
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10685
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10689
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10693
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10697
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10701
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10705
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10709
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10713
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10717
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10721
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10725
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10729
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10733
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10737
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10741
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10745
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10749
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10763
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10771
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10807
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10811
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10815
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10819
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10823
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10828
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10830
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10834
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10838
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10842
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10846
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10850
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10854
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10863
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10870
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10874
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10878
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10884
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10889
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10893
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10897
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10901
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10905
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10908
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10912
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10916
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10919
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10920
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10922
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10928
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10932
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10935
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10944
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10997
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11010
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11022
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11031
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11032
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11037
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11041
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11045
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11051
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11055
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11059
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11063
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11067
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11071
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11077
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11081
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11085
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11089
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11093
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11097
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11101
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11105
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11109
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11113
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11117
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11121
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11125
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11132
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11135
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11137
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11140
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11142
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11146
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11149
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11151
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11155
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11158
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11160
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11164
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11167
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11169
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11173
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11176
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11178
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11181
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11183
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11186
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11188
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11191
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11193
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11196
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11198
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11202
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11205
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11206
		{
			return unimplemented(sqllex, "treat")
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11208
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11212
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11216
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11220
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11224
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11227
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11229
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11232
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11238
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11242
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11248
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11252
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11259
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11263
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11269
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11273
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11279
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11287
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11291
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11295
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11302
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11322
		{
			sqlVAL.str = ""
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11328
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11332
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11338
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11346
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11354
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11362
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11368
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11381
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11409
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11413
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11417
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11421
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11428
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11437
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11441
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11445
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11449
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11454
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11467
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11471
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11478
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11490
		{
			sqlVAL.union.val = tree.Any
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11494
		{
			sqlVAL.union.val = tree.Some
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11498
		{
			sqlVAL.union.val = tree.All
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11503
		{
			sqlVAL.union.val = tree.Plus
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11504
		{
			sqlVAL.union.val = tree.Minus
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11505
		{
			sqlVAL.union.val = tree.Mult
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11506
		{
			sqlVAL.union.val = tree.Div
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11507
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11508
		{
			sqlVAL.union.val = tree.Mod
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11509
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11510
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11511
		{
			sqlVAL.union.val = tree.Pow
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11512
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11513
		{
			sqlVAL.union.val = tree.LT
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11514
		{
			sqlVAL.union.val = tree.GT
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11515
		{
			sqlVAL.union.val = tree.EQ
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11516
		{
			sqlVAL.union.val = tree.LE
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11517
		{
			sqlVAL.union.val = tree.GE
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11518
		{
			sqlVAL.union.val = tree.NE
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11522
		{
			sqlVAL.union.val = tree.Like
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11523
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11524
		{
			sqlVAL.union.val = tree.ILike
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11525
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11548
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11552
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11558
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11562
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11566
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11577
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11581
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11587
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11591
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11598
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11604
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11608
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11614
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11618
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11624
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11628
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11634
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11638
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11644
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11648
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11671
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11675
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11679
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11685
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11692
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11696
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11713
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11717
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11721
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11725
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11729
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11735
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11741
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11747
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11751
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11755
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11761
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11773
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11780
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11784
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11790
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11796
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11800
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11807
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11813
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11817
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11824
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11830
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11834
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11839
		{
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11840
		{
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11844
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11848
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11854
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11863
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11867
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11871
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11879
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11883
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11889
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11893
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11912
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11920
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11943
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11952
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11956
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11960
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11964
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11970
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11974
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11989
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11993
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12005
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12009
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12018
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12029
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12038
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12046
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12058
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12139
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12147
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12151
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12157
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12161
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12169
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12194
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12201
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12205
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12209
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12223
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12227
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12231
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12244
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12253
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12271
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12284
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12291
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12316
		{
			sqlVAL.str = ""
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12322
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12326
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
