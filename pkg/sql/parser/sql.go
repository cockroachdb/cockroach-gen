// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: tree.ComparisonOperator{
					Symbol:             tree.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case tree.BinaryOperator:

		switch op.Symbol {
		case tree.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case tree.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case tree.ComparisonOperator:
		switch op.Symbol {
		case tree.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:165

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}

func (u *sqlSymUnion) scheduleLabelSpec() *tree.ScheduleLabelSpec {
	return u.val.(*tree.ScheduleLabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}

//line sql-gen.y:875
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTED = lexbase.ENCRYPTED
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FOREIGN = lexbase.FOREIGN
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDE_DEPRECATED_INTERLEAVES = lexbase.INCLUDE_DEPRECATED_INTERLEAVES
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INTERLEAVE = lexbase.INTERLEAVE
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NOSQLLOGIN = lexbase.NOSQLLOGIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NON_VOTERS = lexbase.NON_VOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOVIEWACTIVITYREDACTED = lexbase.NOVIEWACTIVITYREDACTED
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const SQLLOGIN = lexbase.SQLLOGIN
const START = lexbase.START
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIEWACTIVITYREDACTED = lexbase.VIEWACTIVITYREDACTED
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDE_DEPRECATED_INTERLEAVES",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NOSQLLOGIN",
	"NO_FULL_SCAN",
	"NONE",
	"NON_VOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOVIEWACTIVITYREDACTED",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"SQLLOGIN",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIEWACTIVITYREDACTED",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:13674

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1585,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	262, 410,
	-2, 0,
	-1, 74,
	244, 243,
	521, 243,
	-2, 0,
	-1, 87,
	232, 1321,
	246, 1321,
	262, 406,
	394, 406,
	405, 1070,
	444, 406,
	457, 1070,
	505, 1070,
	532, 406,
	558, 1070,
	-2, 0,
	-1, 93,
	133, 1585,
	239, 1585,
	543, 1585,
	544, 1585,
	-2, 0,
	-1, 109,
	152, 1556,
	171, 1556,
	184, 1556,
	242, 1556,
	275, 1556,
	345, 1556,
	355, 1556,
	538, 1556,
	-2, 1527,
	-1, 150,
	160, 919,
	261, 919,
	397, 880,
	462, 880,
	504, 880,
	524, 919,
	526, 880,
	-2, 0,
	-1, 154,
	4, 1587,
	21, 1587,
	22, 1587,
	23, 1587,
	24, 1587,
	25, 1587,
	26, 1587,
	27, 1587,
	29, 1587,
	30, 1587,
	36, 1587,
	41, 1587,
	42, 1587,
	44, 1587,
	45, 1587,
	46, 1587,
	47, 1587,
	48, 1587,
	49, 1587,
	50, 1587,
	51, 1587,
	53, 1587,
	54, 1587,
	55, 1587,
	56, 1587,
	58, 1587,
	59, 1587,
	60, 1587,
	61, 1587,
	62, 1587,
	63, 1587,
	64, 1587,
	68, 1587,
	69, 1587,
	70, 1587,
	71, 1587,
	73, 1587,
	74, 1587,
	75, 1587,
	79, 1587,
	80, 1587,
	81, 1587,
	82, 1587,
	83, 1587,
	84, 1587,
	85, 1587,
	88, 1587,
	89, 1587,
	90, 1587,
	91, 1587,
	92, 1587,
	94, 1587,
	96, 1587,
	97, 1587,
	98, 1587,
	99, 1587,
	100, 1587,
	101, 1587,
	103, 1587,
	104, 1587,
	105, 1587,
	107, 1587,
	108, 1587,
	109, 1587,
	117, 1587,
	118, 1587,
	119, 1587,
	120, 1587,
	121, 1587,
	123, 1587,
	124, 1587,
	125, 1587,
	126, 1587,
	128, 1587,
	129, 1587,
	130, 1587,
	132, 1587,
	133, 1587,
	134, 1587,
	136, 1587,
	137, 1587,
	138, 1587,
	141, 1587,
	142, 1587,
	143, 1587,
	145, 1587,
	146, 1587,
	147, 1587,
	149, 1587,
	150, 1587,
	151, 1587,
	153, 1587,
	154, 1587,
	155, 1587,
	156, 1587,
	157, 1587,
	158, 1587,
	159, 1587,
	160, 1587,
	161, 1587,
	162, 1587,
	163, 1587,
	164, 1587,
	165, 1587,
	166, 1587,
	167, 1587,
	168, 1587,
	170, 1587,
	176, 1587,
	177, 1587,
	178, 1587,
	179, 1587,
	183, 1587,
	185, 1587,
	186, 1587,
	190, 1587,
	191, 1587,
	192, 1587,
	193, 1587,
	194, 1587,
	195, 1587,
	196, 1587,
	197, 1587,
	198, 1587,
	199, 1587,
	200, 1587,
	201, 1587,
	202, 1587,
	203, 1587,
	205, 1587,
	206, 1587,
	208, 1587,
	209, 1587,
	211, 1587,
	212, 1587,
	213, 1587,
	214, 1587,
	215, 1587,
	216, 1587,
	217, 1587,
	218, 1587,
	219, 1587,
	221, 1587,
	222, 1587,
	224, 1587,
	225, 1587,
	226, 1587,
	227, 1587,
	228, 1587,
	232, 1587,
	233, 1587,
	234, 1587,
	235, 1587,
	236, 1587,
	239, 1587,
	240, 1587,
	241, 1587,
	243, 1587,
	245, 1587,
	246, 1587,
	248, 1587,
	250, 1587,
	251, 1587,
	252, 1587,
	254, 1587,
	258, 1587,
	259, 1587,
	260, 1587,
	261, 1587,
	262, 1587,
	263, 1587,
	265, 1587,
	266, 1587,
	267, 1587,
	269, 1587,
	270, 1587,
	272, 1587,
	273, 1587,
	276, 1587,
	277, 1587,
	278, 1587,
	279, 1587,
	280, 1587,
	281, 1587,
	282, 1587,
	285, 1587,
	286, 1587,
	287, 1587,
	288, 1587,
	290, 1587,
	291, 1587,
	292, 1587,
	293, 1587,
	294, 1587,
	295, 1587,
	296, 1587,
	297, 1587,
	298, 1587,
	299, 1587,
	300, 1587,
	301, 1587,
	302, 1587,
	303, 1587,
	304, 1587,
	305, 1587,
	306, 1587,
	307, 1587,
	308, 1587,
	309, 1587,
	310, 1587,
	311, 1587,
	313, 1587,
	315, 1587,
	316, 1587,
	317, 1587,
	318, 1587,
	319, 1587,
	320, 1587,
	321, 1587,
	322, 1587,
	323, 1587,
	324, 1587,
	325, 1587,
	326, 1587,
	327, 1587,
	328, 1587,
	329, 1587,
	331, 1587,
	332, 1587,
	334, 1587,
	336, 1587,
	337, 1587,
	338, 1587,
	340, 1587,
	341, 1587,
	342, 1587,
	343, 1587,
	344, 1587,
	347, 1587,
	350, 1587,
	351, 1587,
	352, 1587,
	353, 1587,
	356, 1587,
	357, 1587,
	358, 1587,
	360, 1587,
	362, 1587,
	363, 1587,
	364, 1587,
	365, 1587,
	366, 1587,
	367, 1587,
	368, 1587,
	369, 1587,
	370, 1587,
	371, 1587,
	372, 1587,
	373, 1587,
	374, 1587,
	376, 1587,
	377, 1587,
	378, 1587,
	379, 1587,
	380, 1587,
	381, 1587,
	382, 1587,
	383, 1587,
	384, 1587,
	385, 1587,
	386, 1587,
	387, 1587,
	388, 1587,
	389, 1587,
	390, 1587,
	392, 1587,
	393, 1587,
	395, 1587,
	396, 1587,
	397, 1587,
	398, 1587,
	399, 1587,
	400, 1587,
	401, 1587,
	402, 1587,
	403, 1587,
	404, 1587,
	405, 1587,
	406, 1587,
	407, 1587,
	409, 1587,
	411, 1587,
	412, 1587,
	413, 1587,
	419, 1587,
	421, 1587,
	422, 1587,
	423, 1587,
	424, 1587,
	425, 1587,
	426, 1587,
	427, 1587,
	428, 1587,
	429, 1587,
	430, 1587,
	432, 1587,
	433, 1587,
	434, 1587,
	436, 1587,
	437, 1587,
	438, 1587,
	439, 1587,
	440, 1587,
	441, 1587,
	442, 1587,
	444, 1587,
	445, 1587,
	446, 1587,
	447, 1587,
	448, 1587,
	449, 1587,
	450, 1587,
	451, 1587,
	452, 1587,
	453, 1587,
	454, 1587,
	455, 1587,
	457, 1587,
	458, 1587,
	459, 1587,
	460, 1587,
	461, 1587,
	462, 1587,
	464, 1587,
	465, 1587,
	466, 1587,
	467, 1587,
	468, 1587,
	469, 1587,
	471, 1587,
	472, 1587,
	473, 1587,
	474, 1587,
	475, 1587,
	476, 1587,
	477, 1587,
	478, 1587,
	480, 1587,
	482, 1587,
	483, 1587,
	484, 1587,
	485, 1587,
	486, 1587,
	487, 1587,
	488, 1587,
	489, 1587,
	490, 1587,
	491, 1587,
	492, 1587,
	493, 1587,
	494, 1587,
	495, 1587,
	496, 1587,
	497, 1587,
	498, 1587,
	500, 1587,
	501, 1587,
	503, 1587,
	504, 1587,
	506, 1587,
	507, 1587,
	508, 1587,
	509, 1587,
	510, 1587,
	511, 1587,
	512, 1587,
	513, 1587,
	514, 1587,
	516, 1587,
	517, 1587,
	518, 1587,
	519, 1587,
	520, 1587,
	522, 1587,
	524, 1587,
	525, 1587,
	526, 1587,
	527, 1587,
	528, 1587,
	529, 1587,
	531, 1587,
	532, 1587,
	533, 1587,
	534, 1587,
	536, 1587,
	537, 1587,
	540, 1587,
	541, 1587,
	542, 1587,
	543, 1587,
	544, 1587,
	545, 1587,
	546, 1587,
	548, 1587,
	551, 1587,
	552, 1587,
	553, 1587,
	554, 1587,
	555, 1587,
	556, 1587,
	558, 1587,
	559, 1587,
	560, 1587,
	561, 1587,
	562, 1587,
	563, 1587,
	564, 1587,
	569, 1587,
	570, 1587,
	571, 1587,
	572, 1587,
	573, 1587,
	574, 1587,
	-2, 0,
	-1, 155,
	1, 1438,
	131, 1438,
	250, 1438,
	333, 1438,
	392, 1438,
	401, 1438,
	578, 1438,
	607, 1438,
	-2, 0,
	-1, 157,
	1, 1438,
	607, 1438,
	-2, 0,
	-1, 158,
	1, 1438,
	607, 1438,
	-2, 0,
	-1, 159,
	1, 1438,
	521, 1438,
	607, 1438,
	-2, 0,
	-1, 188,
	152, 1555,
	171, 1555,
	184, 1555,
	242, 1555,
	275, 1555,
	345, 1555,
	355, 1555,
	538, 1555,
	-2, 1530,
	-1, 236,
	4, 1594,
	5, 1594,
	6, 1594,
	7, 1594,
	8, 1594,
	9, 1594,
	10, 1594,
	21, 1594,
	22, 1594,
	23, 1594,
	24, 1594,
	25, 1594,
	26, 1594,
	27, 1594,
	29, 1594,
	30, 1594,
	36, 1594,
	37, 1594,
	41, 1594,
	42, 1594,
	43, 1594,
	44, 1594,
	45, 1594,
	46, 1594,
	47, 1594,
	48, 1594,
	49, 1594,
	50, 1594,
	51, 1594,
	53, 1594,
	54, 1594,
	55, 1594,
	56, 1594,
	58, 1594,
	59, 1594,
	60, 1594,
	61, 1594,
	62, 1594,
	63, 1594,
	64, 1594,
	65, 1594,
	66, 1594,
	67, 1594,
	68, 1594,
	69, 1594,
	70, 1594,
	71, 1594,
	73, 1594,
	74, 1594,
	75, 1594,
	77, 1594,
	79, 1594,
	80, 1594,
	81, 1594,
	82, 1594,
	83, 1594,
	84, 1594,
	85, 1594,
	88, 1594,
	89, 1594,
	90, 1594,
	91, 1594,
	92, 1594,
	94, 1594,
	96, 1594,
	97, 1594,
	98, 1594,
	99, 1594,
	100, 1594,
	101, 1594,
	103, 1594,
	104, 1594,
	105, 1594,
	106, 1594,
	107, 1594,
	108, 1594,
	109, 1594,
	110, 1594,
	111, 1594,
	112, 1594,
	113, 1594,
	114, 1594,
	115, 1594,
	116, 1594,
	117, 1594,
	118, 1594,
	119, 1594,
	120, 1594,
	121, 1594,
	122, 1594,
	123, 1594,
	124, 1594,
	125, 1594,
	126, 1594,
	127, 1594,
	128, 1594,
	129, 1594,
	130, 1594,
	132, 1594,
	133, 1594,
	134, 1594,
	136, 1594,
	137, 1594,
	138, 1594,
	141, 1594,
	142, 1594,
	143, 1594,
	145, 1594,
	146, 1594,
	147, 1594,
	149, 1594,
	150, 1594,
	151, 1594,
	153, 1594,
	154, 1594,
	155, 1594,
	156, 1594,
	157, 1594,
	158, 1594,
	159, 1594,
	160, 1594,
	161, 1594,
	162, 1594,
	163, 1594,
	164, 1594,
	165, 1594,
	166, 1594,
	167, 1594,
	168, 1594,
	169, 1594,
	170, 1594,
	176, 1594,
	177, 1594,
	178, 1594,
	179, 1594,
	183, 1594,
	185, 1594,
	186, 1594,
	189, 1594,
	190, 1594,
	191, 1594,
	192, 1594,
	193, 1594,
	194, 1594,
	195, 1594,
	196, 1594,
	197, 1594,
	198, 1594,
	199, 1594,
	200, 1594,
	201, 1594,
	202, 1594,
	203, 1594,
	205, 1594,
	206, 1594,
	208, 1594,
	209, 1594,
	211, 1594,
	212, 1594,
	213, 1594,
	214, 1594,
	215, 1594,
	216, 1594,
	217, 1594,
	218, 1594,
	219, 1594,
	220, 1594,
	221, 1594,
	222, 1594,
	224, 1594,
	225, 1594,
	226, 1594,
	227, 1594,
	228, 1594,
	232, 1594,
	233, 1594,
	234, 1594,
	235, 1594,
	236, 1594,
	238, 1594,
	239, 1594,
	240, 1594,
	241, 1594,
	243, 1594,
	245, 1594,
	246, 1594,
	247, 1594,
	248, 1594,
	249, 1594,
	250, 1594,
	251, 1594,
	252, 1594,
	253, 1594,
	254, 1594,
	258, 1594,
	259, 1594,
	260, 1594,
	261, 1594,
	262, 1594,
	263, 1594,
	265, 1594,
	266, 1594,
	267, 1594,
	269, 1594,
	270, 1594,
	271, 1594,
	272, 1594,
	273, 1594,
	274, 1594,
	276, 1594,
	277, 1594,
	278, 1594,
	279, 1594,
	280, 1594,
	281, 1594,
	282, 1594,
	283, 1594,
	284, 1594,
	285, 1594,
	286, 1594,
	287, 1594,
	288, 1594,
	290, 1594,
	291, 1594,
	292, 1594,
	293, 1594,
	294, 1594,
	295, 1594,
	296, 1594,
	297, 1594,
	298, 1594,
	299, 1594,
	300, 1594,
	301, 1594,
	302, 1594,
	303, 1594,
	304, 1594,
	305, 1594,
	306, 1594,
	307, 1594,
	308, 1594,
	309, 1594,
	310, 1594,
	311, 1594,
	313, 1594,
	314, 1594,
	315, 1594,
	316, 1594,
	317, 1594,
	318, 1594,
	319, 1594,
	320, 1594,
	321, 1594,
	322, 1594,
	323, 1594,
	324, 1594,
	325, 1594,
	326, 1594,
	327, 1594,
	328, 1594,
	329, 1594,
	330, 1594,
	331, 1594,
	332, 1594,
	333, 1594,
	334, 1594,
	335, 1594,
	336, 1594,
	337, 1594,
	338, 1594,
	339, 1594,
	340, 1594,
	341, 1594,
	342, 1594,
	343, 1594,
	344, 1594,
	347, 1594,
	351, 1594,
	352, 1594,
	353, 1594,
	356, 1594,
	357, 1594,
	358, 1594,
	359, 1594,
	360, 1594,
	361, 1594,
	362, 1594,
	363, 1594,
	364, 1594,
	365, 1594,
	366, 1594,
	367, 1594,
	368, 1594,
	369, 1594,
	370, 1594,
	371, 1594,
	372, 1594,
	373, 1594,
	374, 1594,
	376, 1594,
	377, 1594,
	378, 1594,
	379, 1594,
	380, 1594,
	381, 1594,
	382, 1594,
	383, 1594,
	384, 1594,
	385, 1594,
	386, 1594,
	387, 1594,
	388, 1594,
	389, 1594,
	390, 1594,
	392, 1594,
	393, 1594,
	395, 1594,
	396, 1594,
	397, 1594,
	398, 1594,
	399, 1594,
	400, 1594,
	401, 1594,
	402, 1594,
	403, 1594,
	404, 1594,
	405, 1594,
	406, 1594,
	407, 1594,
	409, 1594,
	411, 1594,
	412, 1594,
	413, 1594,
	419, 1594,
	421, 1594,
	422, 1594,
	423, 1594,
	424, 1594,
	425, 1594,
	426, 1594,
	427, 1594,
	428, 1594,
	429, 1594,
	430, 1594,
	432, 1594,
	433, 1594,
	434, 1594,
	435, 1594,
	436, 1594,
	437, 1594,
	438, 1594,
	439, 1594,
	440, 1594,
	441, 1594,
	442, 1594,
	444, 1594,
	445, 1594,
	446, 1594,
	447, 1594,
	448, 1594,
	449, 1594,
	450, 1594,
	451, 1594,
	452, 1594,
	453, 1594,
	454, 1594,
	455, 1594,
	457, 1594,
	458, 1594,
	459, 1594,
	460, 1594,
	461, 1594,
	462, 1594,
	463, 1594,
	464, 1594,
	465, 1594,
	466, 1594,
	467, 1594,
	468, 1594,
	469, 1594,
	470, 1594,
	471, 1594,
	472, 1594,
	473, 1594,
	474, 1594,
	475, 1594,
	476, 1594,
	477, 1594,
	478, 1594,
	480, 1594,
	482, 1594,
	483, 1594,
	484, 1594,
	485, 1594,
	486, 1594,
	487, 1594,
	488, 1594,
	489, 1594,
	490, 1594,
	491, 1594,
	492, 1594,
	493, 1594,
	494, 1594,
	495, 1594,
	496, 1594,
	497, 1594,
	498, 1594,
	500, 1594,
	501, 1594,
	502, 1594,
	503, 1594,
	504, 1594,
	506, 1594,
	507, 1594,
	508, 1594,
	509, 1594,
	510, 1594,
	511, 1594,
	512, 1594,
	513, 1594,
	514, 1594,
	516, 1594,
	517, 1594,
	518, 1594,
	519, 1594,
	520, 1594,
	522, 1594,
	524, 1594,
	525, 1594,
	526, 1594,
	527, 1594,
	528, 1594,
	529, 1594,
	530, 1594,
	531, 1594,
	532, 1594,
	533, 1594,
	534, 1594,
	536, 1594,
	537, 1594,
	539, 1594,
	540, 1594,
	541, 1594,
	542, 1594,
	543, 1594,
	544, 1594,
	545, 1594,
	546, 1594,
	547, 1594,
	548, 1594,
	551, 1594,
	552, 1594,
	553, 1594,
	554, 1594,
	555, 1594,
	556, 1594,
	558, 1594,
	559, 1594,
	560, 1594,
	561, 1594,
	562, 1594,
	563, 1594,
	564, 1594,
	569, 1594,
	570, 1594,
	571, 1594,
	572, 1594,
	573, 1594,
	574, 1594,
	575, 1594,
	588, 1594,
	595, 1594,
	596, 1594,
	597, 1594,
	604, 1594,
	608, 1594,
	-2, 0,
	-1, 752,
	4, 1319,
	21, 1319,
	22, 1319,
	23, 1319,
	24, 1319,
	25, 1319,
	26, 1319,
	27, 1319,
	29, 1319,
	30, 1319,
	36, 1319,
	41, 1319,
	42, 1319,
	44, 1319,
	45, 1319,
	46, 1319,
	47, 1319,
	48, 1319,
	49, 1319,
	50, 1319,
	51, 1319,
	53, 1319,
	54, 1319,
	55, 1319,
	56, 1319,
	58, 1319,
	59, 1319,
	60, 1319,
	61, 1319,
	62, 1319,
	63, 1319,
	64, 1319,
	68, 1319,
	69, 1319,
	70, 1319,
	71, 1319,
	73, 1319,
	74, 1319,
	75, 1319,
	79, 1319,
	80, 1319,
	81, 1319,
	82, 1319,
	83, 1319,
	84, 1319,
	85, 1319,
	88, 1319,
	89, 1319,
	90, 1319,
	91, 1319,
	92, 1319,
	94, 1319,
	96, 1319,
	97, 1319,
	98, 1319,
	99, 1319,
	100, 1319,
	101, 1319,
	103, 1319,
	104, 1319,
	105, 1319,
	107, 1319,
	108, 1319,
	109, 1319,
	117, 1319,
	118, 1319,
	119, 1319,
	120, 1319,
	121, 1319,
	123, 1319,
	124, 1319,
	125, 1319,
	126, 1319,
	128, 1319,
	129, 1319,
	130, 1319,
	132, 1319,
	133, 1319,
	134, 1319,
	136, 1319,
	137, 1319,
	138, 1319,
	141, 1319,
	142, 1319,
	143, 1319,
	145, 1319,
	146, 1319,
	147, 1319,
	149, 1319,
	150, 1319,
	151, 1319,
	153, 1319,
	154, 1319,
	155, 1319,
	156, 1319,
	157, 1319,
	158, 1319,
	159, 1319,
	160, 1319,
	161, 1319,
	162, 1319,
	163, 1319,
	164, 1319,
	165, 1319,
	166, 1319,
	167, 1319,
	168, 1319,
	170, 1319,
	176, 1319,
	177, 1319,
	178, 1319,
	179, 1319,
	183, 1319,
	185, 1319,
	186, 1319,
	190, 1319,
	191, 1319,
	192, 1319,
	193, 1319,
	194, 1319,
	195, 1319,
	196, 1319,
	197, 1319,
	198, 1319,
	199, 1319,
	200, 1319,
	201, 1319,
	202, 1319,
	203, 1319,
	205, 1319,
	206, 1319,
	208, 1319,
	209, 1319,
	211, 1319,
	212, 1319,
	213, 1319,
	214, 1319,
	215, 1319,
	216, 1319,
	217, 1319,
	218, 1319,
	219, 1319,
	221, 1319,
	222, 1319,
	224, 1319,
	225, 1319,
	226, 1319,
	227, 1319,
	228, 1319,
	232, 1319,
	233, 1319,
	234, 1319,
	235, 1319,
	236, 1319,
	239, 1319,
	240, 1319,
	241, 1319,
	243, 1319,
	245, 1319,
	246, 1319,
	248, 1319,
	250, 1319,
	251, 1319,
	252, 1319,
	254, 1319,
	258, 1319,
	259, 1319,
	260, 1319,
	261, 1319,
	262, 1319,
	263, 1319,
	265, 1319,
	266, 1319,
	267, 1319,
	269, 1319,
	270, 1319,
	272, 1319,
	273, 1319,
	276, 1319,
	277, 1319,
	278, 1319,
	279, 1319,
	280, 1319,
	281, 1319,
	282, 1319,
	285, 1319,
	286, 1319,
	287, 1319,
	288, 1319,
	290, 1319,
	291, 1319,
	292, 1319,
	293, 1319,
	294, 1319,
	295, 1319,
	296, 1319,
	297, 1319,
	298, 1319,
	299, 1319,
	300, 1319,
	301, 1319,
	302, 1319,
	303, 1319,
	304, 1319,
	305, 1319,
	306, 1319,
	307, 1319,
	308, 1319,
	309, 1319,
	310, 1319,
	311, 1319,
	313, 1319,
	315, 1319,
	316, 1319,
	317, 1319,
	318, 1319,
	319, 1319,
	320, 1319,
	321, 1319,
	322, 1319,
	323, 1319,
	324, 1319,
	325, 1319,
	326, 1319,
	327, 1319,
	328, 1319,
	329, 1319,
	331, 1319,
	332, 1319,
	334, 1319,
	336, 1319,
	337, 1319,
	338, 1319,
	340, 1319,
	341, 1319,
	342, 1319,
	343, 1319,
	344, 1319,
	347, 1319,
	351, 1319,
	352, 1319,
	353, 1319,
	356, 1319,
	357, 1319,
	358, 1319,
	360, 1319,
	362, 1319,
	363, 1319,
	364, 1319,
	365, 1319,
	366, 1319,
	367, 1319,
	368, 1319,
	369, 1319,
	370, 1319,
	371, 1319,
	372, 1319,
	373, 1319,
	374, 1319,
	376, 1319,
	377, 1319,
	378, 1319,
	379, 1319,
	380, 1319,
	381, 1319,
	382, 1319,
	383, 1319,
	384, 1319,
	385, 1319,
	386, 1319,
	387, 1319,
	388, 1319,
	389, 1319,
	390, 1319,
	392, 1319,
	393, 1319,
	395, 1319,
	396, 1319,
	397, 1319,
	398, 1319,
	399, 1319,
	400, 1319,
	401, 1319,
	402, 1319,
	403, 1319,
	404, 1319,
	405, 1319,
	406, 1319,
	407, 1319,
	409, 1319,
	411, 1319,
	412, 1319,
	413, 1319,
	419, 1319,
	421, 1319,
	422, 1319,
	423, 1319,
	424, 1319,
	425, 1319,
	426, 1319,
	427, 1319,
	428, 1319,
	429, 1319,
	430, 1319,
	432, 1319,
	433, 1319,
	434, 1319,
	436, 1319,
	437, 1319,
	438, 1319,
	439, 1319,
	440, 1319,
	441, 1319,
	442, 1319,
	444, 1319,
	445, 1319,
	446, 1319,
	447, 1319,
	448, 1319,
	449, 1319,
	450, 1319,
	451, 1319,
	452, 1319,
	453, 1319,
	454, 1319,
	455, 1319,
	457, 1319,
	458, 1319,
	459, 1319,
	460, 1319,
	461, 1319,
	462, 1319,
	464, 1319,
	465, 1319,
	466, 1319,
	467, 1319,
	468, 1319,
	469, 1319,
	471, 1319,
	472, 1319,
	473, 1319,
	474, 1319,
	475, 1319,
	476, 1319,
	477, 1319,
	478, 1319,
	480, 1319,
	482, 1319,
	483, 1319,
	484, 1319,
	485, 1319,
	486, 1319,
	487, 1319,
	488, 1319,
	489, 1319,
	490, 1319,
	491, 1319,
	492, 1319,
	493, 1319,
	494, 1319,
	495, 1319,
	496, 1319,
	497, 1319,
	498, 1319,
	500, 1319,
	501, 1319,
	503, 1319,
	504, 1319,
	506, 1319,
	507, 1319,
	508, 1319,
	509, 1319,
	510, 1319,
	511, 1319,
	512, 1319,
	513, 1319,
	514, 1319,
	516, 1319,
	517, 1319,
	518, 1319,
	519, 1319,
	520, 1319,
	522, 1319,
	524, 1319,
	525, 1319,
	526, 1319,
	527, 1319,
	528, 1319,
	529, 1319,
	531, 1319,
	532, 1319,
	533, 1319,
	534, 1319,
	536, 1319,
	537, 1319,
	540, 1319,
	541, 1319,
	542, 1319,
	543, 1319,
	544, 1319,
	545, 1319,
	546, 1319,
	548, 1319,
	551, 1319,
	552, 1319,
	553, 1319,
	554, 1319,
	555, 1319,
	556, 1319,
	558, 1319,
	559, 1319,
	560, 1319,
	561, 1319,
	562, 1319,
	563, 1319,
	564, 1319,
	569, 1319,
	570, 1319,
	571, 1319,
	572, 1319,
	573, 1319,
	574, 1319,
	-2, 0,
	-1, 771,
	188, 2383,
	521, 2383,
	587, 2383,
	606, 2383,
	-2, 0,
	-1, 772,
	188, 2370,
	521, 2370,
	587, 2370,
	606, 2370,
	-2, 0,
	-1, 774,
	188, 2635,
	521, 2635,
	587, 2635,
	606, 2635,
	-2, 0,
	-1, 777,
	188, 2495,
	521, 2495,
	587, 2495,
	606, 2495,
	-2, 0,
	-1, 778,
	188, 2677,
	521, 2677,
	587, 2677,
	606, 2677,
	-2, 0,
	-1, 786,
	188, 2522,
	521, 2522,
	587, 2522,
	606, 2522,
	-2, 704,
	-1, 821,
	606, 2319,
	609, 2319,
	-2, 999,
	-1, 822,
	606, 2321,
	609, 2321,
	-2, 1000,
	-1, 823,
	606, 2320,
	609, 2320,
	-2, 1001,
	-1, 824,
	609, 2245,
	-2, 1002,
	-1, 847,
	184, 264,
	-2, 0,
	-1, 871,
	43, 2292,
	-2, 0,
	-1, 872,
	558, 1297,
	-2, 1071,
	-1, 888,
	4, 1725,
	21, 1725,
	22, 1725,
	23, 1725,
	24, 1725,
	25, 1725,
	26, 1725,
	27, 1725,
	29, 1725,
	30, 1725,
	36, 1725,
	41, 1725,
	42, 1725,
	44, 1725,
	45, 1725,
	46, 1725,
	47, 1725,
	48, 1725,
	49, 1725,
	50, 1725,
	51, 1725,
	53, 1725,
	54, 1725,
	55, 1725,
	56, 1725,
	58, 1725,
	59, 1725,
	60, 1725,
	61, 1725,
	62, 1725,
	63, 1725,
	64, 1725,
	68, 1725,
	69, 1725,
	70, 1725,
	71, 1725,
	73, 1725,
	74, 1725,
	75, 1725,
	79, 1725,
	80, 1725,
	81, 1725,
	82, 1725,
	83, 1725,
	84, 1725,
	85, 1725,
	88, 1725,
	89, 1725,
	90, 1725,
	91, 1725,
	92, 1725,
	94, 1725,
	96, 1725,
	97, 1725,
	98, 1725,
	99, 1725,
	100, 1725,
	101, 1725,
	103, 1725,
	104, 1725,
	105, 1725,
	107, 1725,
	108, 1725,
	109, 1725,
	117, 1725,
	118, 1725,
	119, 1725,
	120, 1725,
	121, 1725,
	123, 1725,
	124, 1725,
	125, 1725,
	126, 1725,
	128, 1725,
	129, 1725,
	130, 1725,
	132, 1725,
	133, 1725,
	134, 1725,
	136, 1725,
	137, 1725,
	138, 1725,
	141, 1725,
	142, 1725,
	143, 1725,
	145, 1725,
	146, 1725,
	147, 1725,
	149, 1725,
	150, 1725,
	151, 1725,
	153, 1725,
	154, 1725,
	155, 1725,
	156, 1725,
	157, 1725,
	158, 1725,
	159, 1725,
	160, 1725,
	161, 1725,
	162, 1725,
	163, 1725,
	164, 1725,
	165, 1725,
	166, 1725,
	167, 1725,
	168, 1725,
	170, 1725,
	176, 1725,
	177, 1725,
	178, 1725,
	179, 1725,
	183, 1725,
	185, 1725,
	186, 1725,
	190, 1725,
	191, 1725,
	192, 1725,
	193, 1725,
	194, 1725,
	195, 1725,
	196, 1725,
	197, 1725,
	198, 1725,
	199, 1725,
	200, 1725,
	201, 1725,
	202, 1725,
	203, 1725,
	205, 1725,
	206, 1725,
	208, 1725,
	209, 1725,
	211, 1725,
	212, 1725,
	213, 1725,
	214, 1725,
	215, 1725,
	216, 1725,
	217, 1725,
	218, 1725,
	219, 1725,
	221, 1725,
	222, 1725,
	224, 1725,
	225, 1725,
	226, 1725,
	227, 1725,
	228, 1725,
	232, 1725,
	233, 1725,
	234, 1725,
	235, 1725,
	236, 1725,
	239, 1725,
	240, 1725,
	241, 1725,
	243, 1725,
	245, 1725,
	246, 1725,
	248, 1725,
	250, 1725,
	251, 1725,
	252, 1725,
	254, 1725,
	258, 1725,
	259, 1725,
	260, 1725,
	261, 1725,
	262, 1725,
	263, 1725,
	265, 1725,
	266, 1725,
	267, 1725,
	269, 1725,
	270, 1725,
	272, 1725,
	273, 1725,
	276, 1725,
	277, 1725,
	278, 1725,
	279, 1725,
	280, 1725,
	281, 1725,
	282, 1725,
	285, 1725,
	286, 1725,
	287, 1725,
	288, 1725,
	290, 1725,
	291, 1725,
	292, 1725,
	293, 1725,
	294, 1725,
	295, 1725,
	296, 1725,
	297, 1725,
	298, 1725,
	299, 1725,
	300, 1725,
	301, 1725,
	302, 1725,
	303, 1725,
	304, 1725,
	305, 1725,
	306, 1725,
	307, 1725,
	308, 1725,
	309, 1725,
	310, 1725,
	311, 1725,
	313, 1725,
	315, 1725,
	316, 1725,
	317, 1725,
	318, 1725,
	319, 1725,
	320, 1725,
	321, 1725,
	322, 1725,
	323, 1725,
	324, 1725,
	325, 1725,
	326, 1725,
	327, 1725,
	328, 1725,
	329, 1725,
	331, 1725,
	332, 1725,
	334, 1725,
	336, 1725,
	337, 1725,
	338, 1725,
	340, 1725,
	341, 1725,
	342, 1725,
	343, 1725,
	344, 1725,
	347, 1725,
	351, 1725,
	352, 1725,
	353, 1725,
	356, 1725,
	357, 1725,
	358, 1725,
	360, 1725,
	362, 1725,
	363, 1725,
	364, 1725,
	365, 1725,
	366, 1725,
	367, 1725,
	368, 1725,
	369, 1725,
	370, 1725,
	371, 1725,
	372, 1725,
	373, 1725,
	374, 1725,
	376, 1725,
	377, 1725,
	378, 1725,
	379, 1725,
	380, 1725,
	381, 1725,
	382, 1725,
	383, 1725,
	384, 1725,
	385, 1725,
	386, 1725,
	387, 1725,
	388, 1725,
	389, 1725,
	390, 1725,
	392, 1725,
	393, 1725,
	395, 1725,
	396, 1725,
	397, 1725,
	398, 1725,
	399, 1725,
	400, 1725,
	401, 1725,
	402, 1725,
	403, 1725,
	404, 1725,
	405, 1725,
	406, 1725,
	407, 1725,
	409, 1725,
	411, 1725,
	412, 1725,
	413, 1725,
	419, 1725,
	421, 1725,
	422, 1725,
	423, 1725,
	424, 1725,
	425, 1725,
	426, 1725,
	427, 1725,
	428, 1725,
	429, 1725,
	430, 1725,
	432, 1725,
	433, 1725,
	434, 1725,
	436, 1725,
	437, 1725,
	438, 1725,
	439, 1725,
	440, 1725,
	441, 1725,
	442, 1725,
	444, 1725,
	445, 1725,
	446, 1725,
	447, 1725,
	448, 1725,
	449, 1725,
	450, 1725,
	451, 1725,
	452, 1725,
	453, 1725,
	454, 1725,
	455, 1725,
	457, 1725,
	458, 1725,
	459, 1725,
	460, 1725,
	461, 1725,
	462, 1725,
	464, 1725,
	465, 1725,
	466, 1725,
	467, 1725,
	468, 1725,
	469, 1725,
	471, 1725,
	472, 1725,
	473, 1725,
	474, 1725,
	475, 1725,
	476, 1725,
	477, 1725,
	478, 1725,
	480, 1725,
	482, 1725,
	483, 1725,
	484, 1725,
	485, 1725,
	486, 1725,
	487, 1725,
	488, 1725,
	489, 1725,
	490, 1725,
	491, 1725,
	492, 1725,
	493, 1725,
	494, 1725,
	495, 1725,
	496, 1725,
	497, 1725,
	498, 1725,
	500, 1725,
	501, 1725,
	503, 1725,
	504, 1725,
	506, 1725,
	507, 1725,
	508, 1725,
	509, 1725,
	510, 1725,
	511, 1725,
	512, 1725,
	513, 1725,
	514, 1725,
	516, 1725,
	517, 1725,
	518, 1725,
	519, 1725,
	520, 1725,
	522, 1725,
	524, 1725,
	525, 1725,
	526, 1725,
	527, 1725,
	528, 1725,
	529, 1725,
	531, 1725,
	532, 1725,
	533, 1725,
	534, 1725,
	536, 1725,
	537, 1725,
	540, 1725,
	541, 1725,
	542, 1725,
	543, 1725,
	544, 1725,
	545, 1725,
	546, 1725,
	548, 1725,
	551, 1725,
	552, 1725,
	553, 1725,
	554, 1725,
	555, 1725,
	556, 1725,
	558, 1725,
	559, 1725,
	560, 1725,
	561, 1725,
	562, 1725,
	563, 1725,
	564, 1725,
	569, 1725,
	570, 1725,
	571, 1725,
	572, 1725,
	573, 1725,
	574, 1725,
	-2, 0,
	-1, 898,
	262, 410,
	-2, 0,
	-1, 971,
	397, 881,
	462, 881,
	504, 881,
	526, 881,
	-2, 0,
	-1, 972,
	397, 880,
	462, 880,
	504, 880,
	526, 880,
	-2, 814,
	-1, 976,
	1, 933,
	603, 933,
	605, 933,
	607, 933,
	-2, 0,
	-1, 978,
	1, 855,
	603, 855,
	605, 855,
	607, 855,
	-2, 0,
	-1, 979,
	1, 859,
	603, 859,
	605, 859,
	607, 859,
	-2, 0,
	-1, 980,
	1, 998,
	184, 998,
	603, 998,
	605, 998,
	607, 998,
	-2, 0,
	-1, 988,
	1, 886,
	603, 886,
	605, 886,
	607, 886,
	-2, 0,
	-1, 995,
	1, 933,
	603, 933,
	605, 933,
	607, 933,
	-2, 0,
	-1, 996,
	1, 935,
	603, 935,
	605, 935,
	607, 935,
	-2, 0,
	-1, 997,
	1, 938,
	603, 938,
	605, 938,
	607, 938,
	-2, 0,
	-1, 1003,
	1, 962,
	603, 962,
	605, 962,
	607, 962,
	-2, 0,
	-1, 1004,
	1, 964,
	603, 964,
	605, 964,
	607, 964,
	-2, 0,
	-1, 1009,
	1, 992,
	603, 992,
	605, 992,
	607, 992,
	-2, 0,
	-1, 1061,
	171, 1598,
	184, 1598,
	275, 1598,
	345, 1598,
	-2, 1534,
	-1, 1076,
	171, 1597,
	184, 1597,
	275, 1597,
	345, 1597,
	-2, 1531,
	-1, 1103,
	606, 2318,
	-2, 712,
	-1, 1132,
	5, 2310,
	604, 2308,
	-2, 2299,
	-1, 1140,
	5, 2331,
	604, 2328,
	-2, 2319,
	-1, 1141,
	5, 2332,
	604, 2329,
	-2, 2320,
	-1, 1149,
	606, 2316,
	-2, 2298,
	-1, 1150,
	604, 2762,
	-2, 2317,
	-1, 1173,
	604, 2761,
	-2, 2333,
	-1, 1174,
	5, 1800,
	-2, 2732,
	-1, 1175,
	5, 1801,
	-2, 2733,
	-1, 1176,
	5, 1802,
	-2, 2747,
	-1, 1177,
	5, 1803,
	-2, 2711,
	-1, 1178,
	5, 1804,
	-2, 2745,
	-1, 1179,
	5, 1812,
	-2, 2724,
	-1, 1180,
	5, 1799,
	-2, 2720,
	-1, 1181,
	5, 1799,
	-2, 2719,
	-1, 1182,
	5, 1799,
	-2, 2738,
	-1, 1183,
	5, 1810,
	-2, 2713,
	-1, 1184,
	5, 1815,
	-2, 2712,
	-1, 1185,
	5, 1817,
	-2, 2757,
	-1, 1188,
	5, 1839,
	-2, 2750,
	-1, 1189,
	5, 1831,
	-2, 2751,
	-1, 1190,
	5, 1839,
	-2, 2752,
	-1, 1191,
	5, 1835,
	-2, 2753,
	-1, 1192,
	5, 1785,
	-2, 2725,
	-1, 1193,
	5, 1786,
	-2, 2726,
	-1, 1194,
	5, 1787,
	-2, 2714,
	-1, 1222,
	5, 1822,
	-2, 2758,
	-1, 1223,
	5, 1823,
	-2, 2748,
	-1, 1224,
	5, 1824,
	559, 1824,
	-2, 2715,
	-1, 1225,
	5, 1825,
	559, 1825,
	-2, 2716,
	-1, 1262,
	604, 2328,
	-2, 2319,
	-1, 1263,
	604, 2329,
	-2, 2320,
	-1, 1364,
	188, 2677,
	521, 2677,
	587, 2677,
	606, 2677,
	-2, 0,
	-1, 1369,
	1, 689,
	607, 689,
	-2, 1446,
	-1, 1497,
	364, 2293,
	421, 2293,
	464, 2293,
	597, 2293,
	-2, 2283,
	-1, 1508,
	608, 2293,
	-2, 2295,
	-1, 1516,
	1, 1294,
	426, 1254,
	464, 1254,
	581, 1254,
	603, 1294,
	605, 1294,
	607, 1294,
	-2, 1583,
	-1, 1522,
	204, 1391,
	223, 1391,
	434, 1391,
	-2, 0,
	-1, 1568,
	405, 1070,
	558, 1070,
	-2, 405,
	-1, 1585,
	43, 2291,
	-2, 1036,
	-1, 1592,
	1, 1294,
	603, 1294,
	605, 1294,
	607, 1294,
	-2, 1583,
	-1, 1600,
	4, 1319,
	21, 1319,
	22, 1319,
	23, 1319,
	24, 1319,
	25, 1319,
	26, 1319,
	27, 1319,
	29, 1319,
	30, 1319,
	36, 1319,
	41, 1319,
	42, 1319,
	44, 1319,
	45, 1319,
	46, 1319,
	47, 1319,
	48, 1319,
	49, 1319,
	50, 1319,
	51, 1319,
	53, 1319,
	54, 1319,
	55, 1319,
	56, 1319,
	58, 1319,
	59, 1319,
	60, 1319,
	61, 1319,
	62, 1319,
	63, 1319,
	64, 1319,
	68, 1319,
	69, 1319,
	70, 1319,
	71, 1319,
	73, 1319,
	74, 1319,
	75, 1319,
	79, 1319,
	80, 1319,
	81, 1319,
	82, 1319,
	83, 1319,
	84, 1319,
	85, 1319,
	88, 1319,
	89, 1319,
	90, 1319,
	91, 1319,
	92, 1319,
	94, 1319,
	96, 1319,
	97, 1319,
	98, 1319,
	99, 1319,
	100, 1319,
	101, 1319,
	103, 1319,
	104, 1319,
	105, 1319,
	107, 1319,
	108, 1319,
	109, 1319,
	117, 1319,
	118, 1319,
	119, 1319,
	120, 1319,
	121, 1319,
	123, 1319,
	124, 1319,
	125, 1319,
	126, 1319,
	128, 1319,
	129, 1319,
	130, 1319,
	132, 1319,
	133, 1319,
	134, 1319,
	136, 1319,
	137, 1319,
	138, 1319,
	141, 1319,
	142, 1319,
	143, 1319,
	145, 1319,
	146, 1319,
	147, 1319,
	149, 1319,
	150, 1319,
	151, 1319,
	153, 1319,
	154, 1319,
	155, 1319,
	156, 1319,
	157, 1319,
	158, 1319,
	159, 1319,
	160, 1319,
	161, 1319,
	162, 1319,
	163, 1319,
	164, 1319,
	165, 1319,
	166, 1319,
	167, 1319,
	168, 1319,
	176, 1319,
	177, 1319,
	178, 1319,
	179, 1319,
	183, 1319,
	185, 1319,
	186, 1319,
	190, 1319,
	191, 1319,
	192, 1319,
	193, 1319,
	194, 1319,
	195, 1319,
	196, 1319,
	197, 1319,
	198, 1319,
	199, 1319,
	200, 1319,
	201, 1319,
	202, 1319,
	203, 1319,
	205, 1319,
	206, 1319,
	208, 1319,
	209, 1319,
	211, 1319,
	212, 1319,
	213, 1319,
	214, 1319,
	215, 1319,
	216, 1319,
	217, 1319,
	218, 1319,
	219, 1319,
	221, 1319,
	222, 1319,
	224, 1319,
	225, 1319,
	226, 1319,
	227, 1319,
	228, 1319,
	233, 1319,
	234, 1319,
	235, 1319,
	236, 1319,
	239, 1319,
	240, 1319,
	241, 1319,
	243, 1319,
	245, 1319,
	246, 1319,
	248, 1319,
	250, 1319,
	251, 1319,
	252, 1319,
	254, 1319,
	258, 1319,
	259, 1319,
	260, 1319,
	261, 1319,
	262, 1319,
	263, 1319,
	265, 1319,
	266, 1319,
	267, 1319,
	269, 1319,
	270, 1319,
	272, 1319,
	273, 1319,
	276, 1319,
	277, 1319,
	278, 1319,
	279, 1319,
	280, 1319,
	281, 1319,
	282, 1319,
	285, 1319,
	286, 1319,
	287, 1319,
	288, 1319,
	290, 1319,
	291, 1319,
	292, 1319,
	293, 1319,
	294, 1319,
	295, 1319,
	296, 1319,
	297, 1319,
	298, 1319,
	299, 1319,
	300, 1319,
	301, 1319,
	302, 1319,
	303, 1319,
	304, 1319,
	305, 1319,
	306, 1319,
	307, 1319,
	308, 1319,
	309, 1319,
	310, 1319,
	311, 1319,
	313, 1319,
	315, 1319,
	316, 1319,
	317, 1319,
	318, 1319,
	319, 1319,
	320, 1319,
	321, 1319,
	322, 1319,
	323, 1319,
	324, 1319,
	325, 1319,
	326, 1319,
	327, 1319,
	328, 1319,
	329, 1319,
	331, 1319,
	332, 1319,
	336, 1319,
	337, 1319,
	338, 1319,
	340, 1319,
	341, 1319,
	342, 1319,
	343, 1319,
	344, 1319,
	347, 1319,
	349, 1319,
	351, 1319,
	352, 1319,
	353, 1319,
	356, 1319,
	357, 1319,
	358, 1319,
	360, 1319,
	362, 1319,
	363, 1319,
	364, 1319,
	365, 1319,
	366, 1319,
	367, 1319,
	368, 1319,
	369, 1319,
	370, 1319,
	371, 1319,
	372, 1319,
	373, 1319,
	374, 1319,
	376, 1319,
	377, 1319,
	378, 1319,
	379, 1319,
	380, 1319,
	381, 1319,
	382, 1319,
	383, 1319,
	384, 1319,
	385, 1319,
	386, 1319,
	387, 1319,
	388, 1319,
	389, 1319,
	390, 1319,
	392, 1319,
	393, 1319,
	395, 1319,
	396, 1319,
	397, 1319,
	398, 1319,
	399, 1319,
	400, 1319,
	401, 1319,
	402, 1319,
	403, 1319,
	404, 1319,
	405, 1319,
	406, 1319,
	407, 1319,
	409, 1319,
	411, 1319,
	412, 1319,
	413, 1319,
	419, 1319,
	421, 1319,
	422, 1319,
	423, 1319,
	424, 1319,
	425, 1319,
	426, 1319,
	427, 1319,
	428, 1319,
	429, 1319,
	430, 1319,
	432, 1319,
	433, 1319,
	434, 1319,
	436, 1319,
	437, 1319,
	438, 1319,
	439, 1319,
	440, 1319,
	441, 1319,
	442, 1319,
	444, 1319,
	445, 1319,
	446, 1319,
	447, 1319,
	448, 1319,
	449, 1319,
	450, 1319,
	451, 1319,
	452, 1319,
	453, 1319,
	454, 1319,
	455, 1319,
	457, 1319,
	458, 1319,
	459, 1319,
	460, 1319,
	461, 1319,
	462, 1319,
	464, 1319,
	465, 1319,
	466, 1319,
	467, 1319,
	468, 1319,
	469, 1319,
	471, 1319,
	472, 1319,
	473, 1319,
	474, 1319,
	475, 1319,
	476, 1319,
	477, 1319,
	478, 1319,
	480, 1319,
	482, 1319,
	483, 1319,
	484, 1319,
	485, 1319,
	486, 1319,
	487, 1319,
	488, 1319,
	489, 1319,
	490, 1319,
	491, 1319,
	492, 1319,
	493, 1319,
	494, 1319,
	495, 1319,
	496, 1319,
	497, 1319,
	498, 1319,
	500, 1319,
	501, 1319,
	503, 1319,
	504, 1319,
	506, 1319,
	507, 1319,
	508, 1319,
	509, 1319,
	510, 1319,
	511, 1319,
	512, 1319,
	513, 1319,
	514, 1319,
	516, 1319,
	517, 1319,
	518, 1319,
	519, 1319,
	520, 1319,
	522, 1319,
	524, 1319,
	525, 1319,
	526, 1319,
	527, 1319,
	528, 1319,
	529, 1319,
	531, 1319,
	532, 1319,
	533, 1319,
	534, 1319,
	536, 1319,
	537, 1319,
	540, 1319,
	541, 1319,
	542, 1319,
	543, 1319,
	544, 1319,
	545, 1319,
	546, 1319,
	548, 1319,
	551, 1319,
	552, 1319,
	553, 1319,
	554, 1319,
	555, 1319,
	556, 1319,
	558, 1319,
	559, 1319,
	560, 1319,
	561, 1319,
	562, 1319,
	563, 1319,
	564, 1319,
	569, 1319,
	570, 1319,
	571, 1319,
	572, 1319,
	573, 1319,
	574, 1319,
	-2, 0,
	-1, 1623,
	1, 550,
	603, 550,
	605, 550,
	607, 550,
	-2, 1554,
	-1, 1626,
	4, 2756,
	11, 2756,
	12, 2756,
	14, 2756,
	15, 2756,
	16, 2756,
	17, 2756,
	18, 2756,
	19, 2756,
	21, 2756,
	22, 2756,
	23, 2756,
	24, 2756,
	25, 2756,
	26, 2756,
	27, 2756,
	29, 2756,
	30, 2756,
	33, 2756,
	34, 2756,
	36, 2756,
	38, 2756,
	41, 2756,
	42, 2756,
	44, 2756,
	45, 2756,
	46, 2756,
	47, 2756,
	48, 2756,
	49, 2756,
	50, 2756,
	51, 2756,
	53, 2756,
	54, 2756,
	55, 2756,
	56, 2756,
	58, 2756,
	59, 2756,
	60, 2756,
	61, 2756,
	62, 2756,
	63, 2756,
	64, 2756,
	67, 2756,
	68, 2756,
	69, 2756,
	70, 2756,
	71, 2756,
	73, 2756,
	74, 2756,
	75, 2756,
	76, 2756,
	79, 2756,
	80, 2756,
	81, 2756,
	82, 2756,
	83, 2756,
	84, 2756,
	85, 2756,
	86, 2756,
	88, 2756,
	89, 2756,
	90, 2756,
	91, 2756,
	92, 2756,
	94, 2756,
	95, 2756,
	96, 2756,
	97, 2756,
	98, 2756,
	99, 2756,
	100, 2756,
	101, 2756,
	103, 2756,
	104, 2756,
	105, 2756,
	106, 2756,
	107, 2756,
	108, 2756,
	109, 2756,
	117, 2756,
	118, 2756,
	119, 2756,
	120, 2756,
	121, 2756,
	123, 2756,
	124, 2756,
	125, 2756,
	126, 2756,
	128, 2756,
	129, 2756,
	130, 2756,
	132, 2756,
	133, 2756,
	134, 2756,
	136, 2756,
	137, 2756,
	138, 2756,
	141, 2756,
	142, 2756,
	143, 2756,
	145, 2756,
	146, 2756,
	147, 2756,
	149, 2756,
	150, 2756,
	151, 2756,
	153, 2756,
	154, 2756,
	155, 2756,
	156, 2756,
	157, 2756,
	158, 2756,
	159, 2756,
	160, 2756,
	161, 2756,
	162, 2756,
	163, 2756,
	164, 2756,
	165, 2756,
	166, 2756,
	167, 2756,
	168, 2756,
	172, 2756,
	173, 2756,
	174, 2756,
	175, 2756,
	176, 2756,
	177, 2756,
	178, 2756,
	179, 2756,
	182, 2756,
	183, 2756,
	185, 2756,
	186, 2756,
	189, 2756,
	190, 2756,
	191, 2756,
	192, 2756,
	193, 2756,
	194, 2756,
	195, 2756,
	196, 2756,
	197, 2756,
	198, 2756,
	199, 2756,
	200, 2756,
	201, 2756,
	202, 2756,
	203, 2756,
	205, 2756,
	206, 2756,
	208, 2756,
	209, 2756,
	211, 2756,
	212, 2756,
	213, 2756,
	214, 2756,
	215, 2756,
	216, 2756,
	217, 2756,
	218, 2756,
	219, 2756,
	220, 2756,
	221, 2756,
	222, 2756,
	223, 2756,
	224, 2756,
	225, 2756,
	226, 2756,
	227, 2756,
	228, 2756,
	230, 2756,
	231, 2756,
	233, 2756,
	234, 2756,
	235, 2756,
	236, 2756,
	238, 2756,
	239, 2756,
	240, 2756,
	241, 2756,
	243, 2756,
	245, 2756,
	246, 2756,
	247, 2756,
	248, 2756,
	249, 2756,
	250, 2756,
	251, 2756,
	252, 2756,
	253, 2756,
	254, 2756,
	256, 2756,
	257, 2756,
	258, 2756,
	259, 2756,
	260, 2756,
	261, 2756,
	262, 2756,
	263, 2756,
	265, 2756,
	266, 2756,
	267, 2756,
	269, 2756,
	270, 2756,
	271, 2756,
	272, 2756,
	273, 2756,
	274, 2756,
	276, 2756,
	277, 2756,
	278, 2756,
	279, 2756,
	280, 2756,
	281, 2756,
	282, 2756,
	285, 2756,
	286, 2756,
	287, 2756,
	288, 2756,
	289, 2756,
	290, 2756,
	291, 2756,
	292, 2756,
	293, 2756,
	294, 2756,
	295, 2756,
	296, 2756,
	297, 2756,
	298, 2756,
	299, 2756,
	300, 2756,
	301, 2756,
	302, 2756,
	303, 2756,
	304, 2756,
	305, 2756,
	306, 2756,
	307, 2756,
	308, 2756,
	309, 2756,
	310, 2756,
	311, 2756,
	313, 2756,
	314, 2756,
	315, 2756,
	316, 2756,
	317, 2756,
	318, 2756,
	319, 2756,
	320, 2756,
	321, 2756,
	322, 2756,
	323, 2756,
	324, 2756,
	325, 2756,
	326, 2756,
	327, 2756,
	328, 2756,
	329, 2756,
	331, 2756,
	332, 2756,
	335, 2756,
	336, 2756,
	337, 2756,
	338, 2756,
	340, 2756,
	341, 2756,
	342, 2756,
	343, 2756,
	344, 2756,
	347, 2756,
	351, 2756,
	352, 2756,
	353, 2756,
	354, 2756,
	356, 2756,
	357, 2756,
	358, 2756,
	360, 2756,
	362, 2756,
	363, 2756,
	364, 2756,
	365, 2756,
	366, 2756,
	367, 2756,
	368, 2756,
	369, 2756,
	370, 2756,
	371, 2756,
	372, 2756,
	373, 2756,
	374, 2756,
	376, 2756,
	377, 2756,
	378, 2756,
	379, 2756,
	380, 2756,
	381, 2756,
	382, 2756,
	383, 2756,
	384, 2756,
	385, 2756,
	386, 2756,
	387, 2756,
	388, 2756,
	389, 2756,
	390, 2756,
	392, 2756,
	393, 2756,
	395, 2756,
	396, 2756,
	397, 2756,
	398, 2756,
	399, 2756,
	400, 2756,
	401, 2756,
	402, 2756,
	403, 2756,
	404, 2756,
	405, 2756,
	406, 2756,
	407, 2756,
	409, 2756,
	411, 2756,
	412, 2756,
	413, 2756,
	419, 2756,
	420, 2756,
	421, 2756,
	422, 2756,
	423, 2756,
	424, 2756,
	425, 2756,
	426, 2756,
	427, 2756,
	428, 2756,
	429, 2756,
	430, 2756,
	432, 2756,
	433, 2756,
	434, 2756,
	435, 2756,
	436, 2756,
	437, 2756,
	438, 2756,
	439, 2756,
	440, 2756,
	441, 2756,
	442, 2756,
	443, 2756,
	444, 2756,
	445, 2756,
	446, 2756,
	447, 2756,
	448, 2756,
	449, 2756,
	450, 2756,
	451, 2756,
	452, 2756,
	453, 2756,
	454, 2756,
	455, 2756,
	457, 2756,
	458, 2756,
	459, 2756,
	460, 2756,
	461, 2756,
	462, 2756,
	464, 2756,
	465, 2756,
	466, 2756,
	467, 2756,
	468, 2756,
	469, 2756,
	470, 2756,
	471, 2756,
	472, 2756,
	473, 2756,
	474, 2756,
	475, 2756,
	476, 2756,
	477, 2756,
	478, 2756,
	480, 2756,
	482, 2756,
	483, 2756,
	484, 2756,
	485, 2756,
	486, 2756,
	487, 2756,
	488, 2756,
	489, 2756,
	490, 2756,
	491, 2756,
	492, 2756,
	493, 2756,
	494, 2756,
	495, 2756,
	496, 2756,
	497, 2756,
	498, 2756,
	500, 2756,
	501, 2756,
	502, 2756,
	503, 2756,
	504, 2756,
	506, 2756,
	507, 2756,
	508, 2756,
	509, 2756,
	510, 2756,
	511, 2756,
	512, 2756,
	513, 2756,
	514, 2756,
	516, 2756,
	517, 2756,
	518, 2756,
	519, 2756,
	520, 2756,
	522, 2756,
	524, 2756,
	525, 2756,
	526, 2756,
	527, 2756,
	528, 2756,
	529, 2756,
	531, 2756,
	532, 2756,
	533, 2756,
	534, 2756,
	536, 2756,
	537, 2756,
	540, 2756,
	541, 2756,
	542, 2756,
	543, 2756,
	544, 2756,
	545, 2756,
	546, 2756,
	548, 2756,
	551, 2756,
	552, 2756,
	553, 2756,
	554, 2756,
	555, 2756,
	556, 2756,
	558, 2756,
	559, 2756,
	560, 2756,
	561, 2756,
	562, 2756,
	563, 2756,
	564, 2756,
	569, 2756,
	570, 2756,
	571, 2756,
	572, 2756,
	573, 2756,
	574, 2756,
	575, 2756,
	577, 2756,
	585, 2756,
	586, 2756,
	587, 2756,
	588, 2756,
	589, 2756,
	590, 2756,
	592, 2756,
	593, 2756,
	594, 2756,
	595, 2756,
	596, 2756,
	597, 2756,
	598, 2756,
	599, 2756,
	600, 2756,
	602, 2756,
	605, 2756,
	606, 2756,
	608, 2756,
	609, 2756,
	-2, 0,
	-1, 1631,
	188, 2635,
	521, 2635,
	587, 2635,
	606, 2635,
	-2, 0,
	-1, 1680,
	397, 881,
	462, 881,
	504, 881,
	526, 881,
	-2, 0,
	-1, 1691,
	1, 1391,
	603, 1391,
	605, 1391,
	607, 1391,
	-2, 0,
	-1, 1708,
	1, 876,
	603, 876,
	605, 876,
	607, 876,
	-2, 0,
	-1, 1709,
	1, 920,
	603, 920,
	605, 920,
	607, 920,
	-2, 0,
	-1, 1710,
	1, 928,
	603, 928,
	605, 928,
	607, 928,
	-2, 0,
	-1, 1713,
	1, 885,
	603, 885,
	605, 885,
	607, 885,
	-2, 0,
	-1, 1715,
	1, 891,
	603, 891,
	605, 891,
	607, 891,
	-2, 0,
	-1, 1718,
	1, 887,
	603, 887,
	605, 887,
	607, 887,
	-2, 0,
	-1, 1723,
	1, 901,
	603, 901,
	605, 901,
	607, 901,
	-2, 0,
	-1, 1754,
	1, 2618,
	603, 2618,
	605, 2618,
	606, 2618,
	607, 2618,
	-2, 0,
	-1, 1758,
	1, 973,
	603, 973,
	605, 973,
	607, 973,
	-2, 0,
	-1, 1773,
	1, 1441,
	607, 1441,
	-2, 1446,
	-1, 1776,
	171, 1597,
	184, 1597,
	275, 1597,
	345, 1597,
	-2, 1535,
	-1, 1876,
	152, 1556,
	171, 1556,
	184, 1556,
	242, 1556,
	275, 1556,
	345, 1556,
	355, 1556,
	538, 1556,
	-2, 2004,
	-1, 1937,
	605, 2179,
	-2, 0,
	-1, 1972,
	152, 1556,
	171, 1556,
	184, 1556,
	242, 1556,
	275, 1556,
	345, 1556,
	355, 1556,
	538, 1556,
	-2, 1686,
	-1, 2009,
	521, 2632,
	606, 2632,
	609, 2632,
	-2, 0,
	-1, 2026,
	604, 1827,
	-2, 1815,
	-1, 2058,
	188, 2632,
	606, 2632,
	609, 2632,
	-2, 0,
	-1, 2100,
	1, 691,
	607, 691,
	-2, 1446,
	-1, 2240,
	223, 259,
	-2, 2327,
	-1, 2241,
	223, 260,
	-2, 312,
	-1, 2348,
	1, 878,
	603, 878,
	605, 878,
	607, 878,
	-2, 0,
	-1, 2349,
	1, 922,
	603, 922,
	605, 922,
	607, 922,
	-2, 0,
	-1, 2350,
	1, 930,
	603, 930,
	605, 930,
	607, 930,
	-2, 0,
	-1, 2351,
	1, 975,
	603, 975,
	605, 975,
	607, 975,
	-2, 0,
	-1, 2392,
	1, 903,
	603, 903,
	605, 903,
	607, 903,
	-2, 0,
	-1, 2410,
	1, 958,
	603, 958,
	605, 958,
	607, 958,
	-2, 0,
	-1, 2455,
	441, 1624,
	442, 1624,
	-2, 1860,
	-1, 2486,
	14, 0,
	15, 0,
	16, 0,
	585, 0,
	586, 0,
	587, 0,
	-2, 1880,
	-1, 2487,
	14, 0,
	15, 0,
	16, 0,
	585, 0,
	586, 0,
	587, 0,
	-2, 1881,
	-1, 2488,
	95, 0,
	256, 0,
	257, 0,
	589, 0,
	590, 0,
	-2, 1882,
	-1, 2489,
	95, 0,
	256, 0,
	257, 0,
	589, 0,
	590, 0,
	-2, 1883,
	-1, 2490,
	95, 0,
	256, 0,
	257, 0,
	589, 0,
	590, 0,
	-2, 1884,
	-1, 2491,
	95, 0,
	256, 0,
	257, 0,
	589, 0,
	590, 0,
	-2, 1885,
	-1, 2492,
	95, 0,
	256, 0,
	257, 0,
	589, 0,
	590, 0,
	-2, 1886,
	-1, 2493,
	14, 0,
	15, 0,
	16, 0,
	585, 0,
	586, 0,
	587, 0,
	-2, 1887,
	-1, 2505,
	14, 0,
	15, 0,
	16, 0,
	585, 0,
	586, 0,
	587, 0,
	-2, 1899,
	-1, 2506,
	14, 0,
	15, 0,
	16, 0,
	585, 0,
	586, 0,
	587, 0,
	-2, 1900,
	-1, 2507,
	14, 0,
	15, 0,
	16, 0,
	585, 0,
	586, 0,
	587, 0,
	-2, 1901,
	-1, 2511,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	470, 0,
	575, 0,
	588, 0,
	-2, 1908,
	-1, 2517,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	470, 0,
	575, 0,
	588, 0,
	-2, 1912,
	-1, 2519,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	470, 0,
	575, 0,
	588, 0,
	-2, 1920,
	-1, 2520,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	470, 0,
	575, 0,
	588, 0,
	-2, 1921,
	-1, 2521,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	470, 0,
	575, 0,
	588, 0,
	-2, 1922,
	-1, 2522,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	470, 0,
	575, 0,
	588, 0,
	-2, 1923,
	-1, 2696,
	5, 2331,
	188, 2190,
	604, 2328,
	-2, 2319,
	-1, 2697,
	188, 2191,
	-2, 2707,
	-1, 2698,
	188, 2192,
	-2, 2521,
	-1, 2699,
	188, 2193,
	-2, 2401,
	-1, 2700,
	188, 2194,
	-2, 2458,
	-1, 2701,
	188, 2195,
	-2, 2506,
	-1, 2702,
	188, 2196,
	-2, 2630,
	-1, 2703,
	188, 2197,
	-2, 1987,
	-1, 2774,
	1, 1687,
	2, 1687,
	106, 1687,
	152, 1687,
	171, 1687,
	184, 1687,
	189, 1687,
	207, 1687,
	210, 1687,
	238, 1687,
	242, 1687,
	253, 1687,
	271, 1687,
	275, 1687,
	314, 1687,
	345, 1687,
	349, 1687,
	355, 1687,
	431, 1687,
	435, 1687,
	538, 1687,
	549, 1687,
	566, 1687,
	567, 1687,
	568, 1687,
	578, 1687,
	603, 1687,
	605, 1687,
	607, 1687,
	609, 1687,
	-2, 1686,
	-1, 2787,
	604, 2300,
	-2, 2314,
	-1, 2789,
	1, 329,
	566, 329,
	-2, 1583,
	-1, 2818,
	604, 1826,
	-2, 1816,
	-1, 3008,
	1, 1294,
	426, 1254,
	464, 1254,
	581, 1254,
	603, 1294,
	605, 1294,
	607, 1294,
	-2, 1583,
	-1, 3194,
	350, 1627,
	-2, 2746,
	-1, 3195,
	350, 1628,
	-2, 2615,
	-1, 3199,
	441, 2256,
	442, 2256,
	-2, 1985,
	-1, 3200,
	441, 2260,
	442, 2260,
	-2, 1986,
	-1, 3201,
	441, 2257,
	442, 2257,
	-2, 1985,
	-1, 3202,
	441, 2261,
	442, 2261,
	-2, 1986,
	-1, 3215,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	470, 0,
	575, 0,
	588, 0,
	-2, 1910,
	-1, 3216,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	470, 0,
	575, 0,
	588, 0,
	-2, 1914,
	-1, 3222,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	470, 0,
	575, 0,
	588, 0,
	-2, 1916,
	-1, 3446,
	1, 686,
	603, 686,
	605, 686,
	607, 686,
	-2, 1446,
	-1, 3612,
	43, 2291,
	-2, 1037,
	-1, 3617,
	1, 1294,
	603, 1294,
	605, 1294,
	607, 1294,
	-2, 1583,
	-1, 3728,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	470, 0,
	575, 0,
	588, 0,
	-2, 1918,
	-1, 3735,
	247, 0,
	249, 0,
	335, 0,
	-2, 1937,
	-1, 3803,
	14, 0,
	15, 0,
	16, 0,
	585, 0,
	586, 0,
	587, 0,
	-2, 1966,
	-1, 3804,
	14, 0,
	15, 0,
	16, 0,
	585, 0,
	586, 0,
	587, 0,
	-2, 1967,
	-1, 3805,
	14, 0,
	15, 0,
	16, 0,
	585, 0,
	586, 0,
	587, 0,
	-2, 1968,
	-1, 3809,
	14, 0,
	15, 0,
	16, 0,
	585, 0,
	586, 0,
	587, 0,
	-2, 1972,
	-1, 3810,
	14, 0,
	15, 0,
	16, 0,
	585, 0,
	586, 0,
	587, 0,
	-2, 1973,
	-1, 3811,
	14, 0,
	15, 0,
	16, 0,
	585, 0,
	586, 0,
	587, 0,
	-2, 1974,
	-1, 3858,
	604, 2301,
	-2, 2315,
	-1, 4033,
	606, 2863,
	-2, 1509,
	-1, 4094,
	247, 0,
	249, 0,
	335, 0,
	-2, 1938,
	-1, 4097,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	470, 0,
	575, 0,
	588, 0,
	-2, 1941,
	-1, 4098,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	470, 0,
	575, 0,
	588, 0,
	-2, 1943,
	-1, 4196,
	606, 2316,
	-2, 1329,
	-1, 4350,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	470, 0,
	575, 0,
	588, 0,
	-2, 1942,
	-1, 4351,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	470, 0,
	575, 0,
	588, 0,
	-2, 1944,
	-1, 4362,
	247, 0,
	-2, 1977,
	-1, 4549,
	247, 0,
	-2, 1978,
	-1, 4749,
	50, 0,
	220, 0,
	274, 0,
	470, 0,
	575, 0,
	588, 0,
	-2, 2710,
}

const sqlPrivate = 57344

const sqlLast = 134848

var sqlAct = [...]int{
	272, 4945, 4742, 4471, 3601, 2069, 4582, 3353, 3096, 4866,
	3083, 4411, 4853, 4590, 4807, 4748, 2880, 4730, 4618, 4759,
	4882, 4614, 3600, 2237, 4741, 2150, 4639, 4695, 4717, 4077,
	4698, 4760, 2313, 4761, 4478, 4456, 4502, 2949, 4393, 3768,
	4747, 4675, 4553, 4820, 2924, 4305, 4266, 4300, 4241, 4416,
	4371, 3467, 3720, 1336, 4339, 1340, 2465, 4192, 1266, 4025,
	3634, 4287, 4017, 4289, 4487, 1086, 3053, 3952, 712, 3208,
	2324, 1329, 4516, 4173, 4193, 823, 2534, 3628, 3982, 2729,
	1785, 4280, 4310, 3596, 3998, 2158, 2286, 3470, 4367, 2473,
	3980, 3585, 1978, 3677, 1996, 2466, 783, 3527, 1403, 3120,
	3105, 823, 3675, 2962, 2013, 3107, 2082, 3072, 3039, 3861,
	3578, 3577, 1331, 3376, 1494, 1647, 3398, 3368, 4133, 3336,
	2014, 4076, 3115, 723, 3359, 3067, 3357, 3069, 2322, 900,
	3098, 1688, 3084, 1947, 1255, 1085, 179, 2226, 3104, 896,
	4, 2224, 3015, 2767, 2169, 4854, 2766, 3489, 2882, 1077,
	3829, 2470, 3335, 4554, 2614, 2547, 1923, 3192, 1884, 2185,
	1501, 1854, 3464, 891, 2769, 3043, 2979, 3114, 2612, 818,
	2201, 2208, 1587, 266, 1334, 1246, 779, 1136, 1322, 2220,
	2225, 2923, 3054, 1384, 2138, 1132, 2142, 1773, 2080, 1948,
	2603, 2531, 1141, 2128, 2454, 2747, 2437, 3405, 2435, 3598,
	265, 2801, 756, 1319, 1645, 3049, 1624, 3077, 820, 2273,
	1308, 1590, 2905, 824, 699, 4640, 825, 965, 721, 108,
	1967, 3108, 1371, 2606, 3974, 1918, 2800, 2726, 1957, 179,
	1249, 1228, 2868, 1964, 2756, 2692, 2584, 1786, 1868, 1263,
	2737, 1787, 1708, 2658, 1723, 188, 2436, 189, 829, 2438,
	1622, 2234, 764, 775, 2299, 2272, 1615, 1526, 1143, 2157,
	4808, 4867, 2459, 1117, 3050, 1186, 264, 716, 44, 43,
	1251, 1226, 3245, 739, 829, 832, 813, 713, 41, 724,
	1245, 1772, 872, 1792, 32, 1537, 986, 1139, 30, 28,
	873, 3843, 3239, 3844, 1714, 4958, 2071, 1800, 1801, 2746,
	4948, 832, 2071, 3355, 3653, 4386, 160, 4788, 4932, 915,
	1081, 2071, 2746, 3644, 73, 3431, 46, 45, 3429, 2071,
	1831, 2071, 2071, 4383, 4931, 4921, 4902, 1803, 2746, 2246,
	4415, 74, 3414, 4900, 155, 4839, 1531, 4415, 4796, 2246,
	3653, 1654, 4797, 1800, 1801, 4785, 3643, 78, 2246, 2746,
	4783, 3306, 3307, 1856, 2746, 4780, 4777, 4745, 67, 4781,
	4778, 2246, 1802, 1243, 4744, 48, 1831, 157, 2246, 1081,
	4743, 4738, 4737, 1803, 2092, 2092, 2092, 4728, 4726, 4723,
	4693, 4415, 4415, 4490, 4415, 47, 4664, 87, 4657, 4656,
	2809, 4154, 2746, 2746, 4651, 1229, 1229, 4650, 4415, 1856,
	4644, 4415, 4610, 4551, 2246, 1071, 4257, 2809, 1802, 4533,
	1082, 2089, 4530, 4062, 50, 68, 2246, 4527, 4480, 1380,
	2089, 4415, 4481, 51, 1261, 1062, 4434, 1061, 57, 1380,
	2246, 2829, 2246, 158, 2560, 2561, 2562, 2579, 2580, 2581,
	4433, 49, 4422, 107, 2246, 2246, 2246, 4421, 93, 104,
	2323, 4415, 4414, 4378, 2582, 4352, 4415, 2246, 2739, 2809,
	3833, 4329, 1076, 1800, 1801, 2092, 4318, 4236, 1808, 4219,
	3653, 2746, 2805, 2746, 4096, 4041, 1539, 4035, 2809, 3670,
	3996, 3670, 3853, 1286, 3997, 1279, 3854, 1856, 3851, 52,
	3836, 3752, 3852, 1803, 2746, 2246, 3748, 3207, 2746, 3254,
	2746, 1800, 1801, 1230, 3669, 3255, 2572, 94, 3670, 39,
	1232, 4665, 1233, 2246, 1808, 2568, 1830, 1832, 4555, 2246,
	4546, 3660, 3312, 1539, 1831, 3661, 1258, 4534, 1802, 3352,
	3347, 1803, 3346, 2746, 2746, 3297, 2746, 3295, 3287, 3298,
	3285, 3296, 3288, 3256, 2746, 3124, 3094, 2746, 3093, 2092,
	2309, 2852, 2309, 4490, 2808, 2746, 2798, 1856, 2809, 2092,
	2746, 2791, 1830, 1832, 2746, 2246, 1802, 2745, 2308, 1640,
	3833, 2746, 2309, 1280, 2738, 1823, 1822, 4298, 4257, 2089,
	1280, 4220, 4062, 3661, 2952, 1819, 2867, 2162, 2107, 2070,
	1800, 1801, 2573, 2574, 2575, 2576, 2086, 3045, 2245, 2972,
	2865, 1943, 2567, 1525, 236, 3935, 3723, 3697, 1965, 2213,
	2783, 3645, 1690, 1831, 2782, 2384, 2781, 2780, 2779, 1234,
	1803, 1823, 1231, 3244, 236, 1070, 2609, 1069, 1068, 3322,
	3646, 1530, 1067, 1066, 1808, 1065, 1064, 1060, 1059, 1058,
	1057, 4090, 1056, 1530, 1055, 1054, 1856, 1053, 1538, 1052,
	3166, 1853, 1051, 238, 1050, 1802, 97, 1049, 1048, 1047,
	2072, 1046, 1825, 1826, 1827, 1828, 2072, 1045, 1044, 1043,
	1025, 963, 1808, 238, 53, 2072, 2577, 2578, 962, 1138,
	961, 960, 3080, 2072, 959, 2072, 2072, 958, 957, 56,
	956, 955, 954, 953, 59, 1658, 952, 1853, 951, 950,
	949, 948, 237, 1551, 69, 1853, 947, 3306, 3307, 2570,
	58, 187, 100, 946, 945, 103, 230, 2610, 944, 54,
	1830, 1832, 237, 159, 4149, 231, 2089, 943, 942, 1824,
	941, 55, 4312, 940, 3643, 939, 1280, 1115, 938, 2089,
	937, 236, 936, 935, 934, 933, 1817, 1818, 236, 62,
	932, 1539, 190, 931, 150, 2641, 930, 1345, 1141, 929,
	928, 1808, 918, 917, 913, 912, 906, 905, 890, 889,
	156, 846, 190, 845, 844, 1824, 843, 835, 834, 1823,
	833, 799, 790, 3323, 789, 1141, 1141, 1141, 1855, 788,
	238, 770, 260, 259, 258, 236, 257, 238, 93, 2611,
	256, 2608, 255, 1406, 254, 253, 252, 1406, 251, 1830,
	1832, 250, 249, 248, 1345, 247, 154, 1853, 246, 245,
	244, 243, 242, 241, 240, 239, 4108, 3875, 3306, 3307,
	1539, 191, 3847, 3671, 1855, 3401, 3267, 3250, 1141, 237,
	1141, 2246, 1141, 3241, 238, 3148, 237, 2839, 1345, 1375,
	1388, 1389, 1390, 230, 1545, 1853, 2070, 1716, 3062, 3025,
	230, 2639, 231, 2571, 2089, 2813, 2086, 2430, 1823, 231,
	2788, 1644, 2773, 2625, 1345, 2623, 1886, 1968, 3312, 2738,
	1509, 1804, 1805, 1806, 1807, 1809, 1810, 1353, 2136, 190,
	2091, 4537, 3, 237, 1345, 2316, 190, 1991, 4406, 1895,
	3350, 1345, 1084, 3321, 1280, 1799, 4770, 230, 1533, 1141,
	1829, 1141, 1926, 1392, 1504, 1345, 231, 1550, 1257, 1925,
	1529, 1141, 1855, 1141, 1813, 1811, 1812, 1804, 1805, 1806,
	1807, 1809, 1810, 1824, 3316, 3308, 3309, 3310, 3311, 3313,
	3314, 4314, 3351, 190, 1853, 1893, 1929, 1596, 1599, 1265,
	4769, 4766, 1926, 4746, 1367, 4725, 1326, 4625, 2613, 1925,
	4543, 1313, 1316, 4366, 4535, 4319, 1369, 4297, 4160, 4131,
	4130, 1345, 4558, 4124, 4123, 4122, 1259, 1399, 4115, 1491,
	1496, 2315, 3306, 3307, 1499, 3322, 1924, 1514, 4114, 4112,
	4107, 1141, 1855, 4104, 1141, 3306, 3307, 4103, 3995, 3312,
	829, 4001, 3879, 3878, 3877, 2557, 2558, 2559, 2583, 2569,
	2563, 236, 2565, 2566, 2564, 2551, 2552, 2553, 2554, 2555,
	2556, 1330, 1824, 236, 3857, 1886, 3824, 832, 1361, 3823,
	179, 179, 3822, 3744, 3739, 3396, 3343, 1887, 3334, 1885,
	1528, 3305, 3302, 1527, 3301, 3299, 1585, 1804, 1805, 1806,
	1807, 1809, 1810, 3294, 1659, 3293, 3292, 1602, 1627, 1629,
	238, 1853, 3289, 3286, 3266, 3249, 3242, 1134, 1544, 236,
	3240, 1497, 238, 3095, 1508, 1330, 2607, 2774, 2596, 1820,
	1816, 1855, 1813, 1811, 1812, 1804, 1805, 1806, 1807, 1809,
	1810, 236, 1141, 1141, 1141, 1141, 1141, 1141, 1141, 1141,
	1375, 1799, 236, 1375, 150, 3933, 3322, 2822, 3064, 237,
	1242, 1888, 2289, 1082, 2253, 2251, 1798, 4952, 238, 73,
	4892, 237, 4891, 230, 4002, 1141, 4855, 1732, 4806, 4804,
	1267, 1141, 231, 3770, 4685, 230, 74, 4617, 4601, 3323,
	238, 4598, 1330, 1330, 231, 4597, 4596, 4576, 4575, 236,
	4573, 238, 78, 3312, 4557, 4556, 4531, 236, 4515, 3079,
	4514, 2537, 4500, 4497, 1800, 1801, 3312, 237, 4496, 1618,
	4491, 190, 1811, 1812, 1804, 1805, 1806, 1807, 1809, 1810,
	4430, 230, 1853, 3421, 1664, 4401, 4364, 1831, 2543, 237,
	231, 4347, 87, 4346, 1803, 1639, 4313, 4326, 238, 4325,
	237, 4283, 1771, 230, 4258, 4148, 238, 1653, 4129, 4063,
	4055, 1777, 231, 3348, 230, 1875, 4052, 190, 3921, 3920,
	1856, 3903, 3902, 231, 3900, 3839, 3827, 4559, 3393, 1802,
	3734, 1873, 3672, 898, 3654, 3620, 1141, 1141, 1141, 190,
	3544, 3502, 1141, 3469, 3423, 3271, 49, 237, 107, 1263,
	190, 1263, 3270, 93, 104, 237, 3265, 3231, 4002, 1681,
	3323, 230, 3038, 1932, 1931, 1930, 1406, 1927, 1352, 230,
	231, 1919, 1917, 3322, 1717, 2820, 1141, 2819, 231, 823,
	1800, 1801, 2785, 2778, 2744, 2031, 823, 2621, 1945, 1872,
	1778, 3308, 3309, 3310, 3311, 3313, 3314, 190, 1990, 1946,
	1616, 1941, 1940, 1939, 1938, 190, 1937, 1936, 236, 1935,
	1803, 1934, 94, 3063, 1774, 1933, 1914, 1913, 1912, 2076,
	1911, 1954, 2078, 1910, 1782, 236, 1909, 1781, 2083, 1908,
	1907, 1062, 2085, 1061, 1776, 1808, 1853, 2088, 1906, 1905,
	1904, 236, 1903, 1902, 1082, 1802, 1901, 1928, 1536, 1853,
	1543, 1900, 1549, 1899, 1888, 2004, 236, 238, 2640, 1874,
	1871, 1141, 1866, 1795, 1796, 1360, 1345, 1284, 1275, 4286,
	1951, 1952, 4156, 4100, 238, 1975, 3306, 3307, 3874, 2001,
	3850, 3842, 3253, 1830, 1832, 1141, 2811, 2776, 179, 1621,
	238, 4384, 1229, 1406, 4158, 4222, 3873, 2317, 3306, 3307,
	1887, 3419, 2152, 1869, 3649, 238, 237, 1920, 1921, 3317,
	3315, 3316, 3308, 3309, 3310, 3311, 3313, 3314, 2127, 1638,
	230, 1643, 2127, 237, 1986, 1387, 4889, 3323, 2125, 231,
	4881, 1652, 2950, 1657, 1261, 1375, 1261, 230, 4599, 237,
	2098, 4492, 1823, 4483, 1800, 1801, 231, 1995, 4482, 1999,
	2134, 4317, 829, 230, 237, 2097, 190, 2000, 4762, 829,
	2127, 97, 231, 4260, 2638, 4259, 4221, 4538, 230, 4151,
	1082, 4067, 1976, 190, 1803, 4066, 2624, 231, 2622, 832,
	1966, 1973, 3505, 4835, 4065, 4064, 832, 2005, 3845, 190,
	3674, 1386, 3673, 3656, 2054, 3655, 4833, 2196, 1715, 1944,
	4405, 4488, 1380, 4005, 190, 1381, 1968, 2210, 1926, 1802,
	3721, 1680, 2928, 1380, 2113, 1925, 187, 100, 1853, 1970,
	103, 1985, 1984, 2074, 1345, 1345, 1385, 3947, 3291, 3290,
	1769, 1983, 3213, 2101, 1406, 2977, 1258, 1981, 1258, 1508,
	4536, 1980, 1979, 2025, 1894, 3918, 236, 3312, 2011, 2910,
	2028, 1383, 2100, 1041, 899, 3471, 3603, 1380, 3602, 150,
	2096, 3536, 2227, 1909, 1909, 1897, 3308, 3309, 3310, 3311,
	3313, 3314, 1733, 2340, 1689, 4818, 3317, 3315, 3316, 3308,
	3309, 3310, 3311, 3313, 3314, 2192, 1508, 2200, 3665, 2314,
	2205, 4479, 4792, 4773, 4758, 238, 1824, 3586, 3121, 1042,
	1690, 2228, 4009, 3992, 1994, 2187, 3949, 3594, 3944, 3926,
	3694, 3444, 2321, 4368, 3355, 1808, 2010, 3772, 3259, 2604,
	4767, 154, 2818, 2059, 1377, 2061, 1942, 1922, 2283, 1345,
	2103, 1345, 2969, 1345, 1595, 1521, 191, 1356, 1312, 2238,
	2243, 1620, 4782, 4779, 237, 3639, 2130, 2120, 1621, 1345,
	1345, 2958, 2195, 4425, 2907, 1855, 4397, 2966, 230, 3962,
	1345, 3895, 1381, 4591, 4301, 4692, 4569, 231, 2964, 3474,
	3913, 2162, 1345, 1668, 1345, 1345, 1345, 2168, 2290, 3102,
	2193, 3076, 3569, 4836, 4428, 4424, 4871, 4207, 4768, 4403,
	3715, 2094, 3448, 885, 190, 4204, 4452, 2232, 823, 829,
	2230, 2231, 2326, 2162, 2279, 2339, 4209, 1382, 3147, 4837,
	1562, 1039, 1241, 2957, 1037, 2190, 2906, 1035, 1021, 1033,
	1141, 2853, 1030, 4947, 2188, 2398, 832, 1523, 3961, 4605,
	2711, 1370, 4445, 2396, 2284, 4436, 2114, 4250, 4249, 1528,
	2296, 3017, 1527, 3960, 3959, 3951, 3941, 1812, 1804, 1805,
	1806, 1807, 1809, 1810, 3940, 1141, 3938, 3937, 1731, 3925,
	2189, 2186, 1982, 3890, 2204, 2319, 1378, 3889, 3575, 3574,
	2871, 3413, 3264, 1080, 2344, 1379, 2429, 1730, 3420, 2871,
	3263, 1377, 2304, 2244, 1570, 2869, 3262, 3261, 3217, 1141,
	3450, 1141, 2975, 2974, 2869, 2971, 2960, 2944, 1141, 886,
	2943, 2031, 2031, 1406, 2293, 1141, 1141, 1141, 1141, 1141,
	1141, 1141, 1141, 1141, 1141, 1141, 1141, 1141, 1141, 1141,
	1141, 1141, 1141, 1141, 1141, 1141, 1141, 1141, 1141, 1141,
	1141, 1141, 1141, 1141, 1141, 1141, 1141, 1141, 1141, 1141,
	1141, 2332, 1141, 2265, 1141, 1141, 1141, 1141, 1082, 2162,
	1082, 2264, 2306, 2938, 2327, 1666, 2282, 2119, 2118, 1387,
	1381, 2127, 2129, 1079, 1382, 1387, 2298, 2447, 2302, 1810,
	1141, 829, 1571, 4876, 1141, 1141, 2434, 4426, 1729, 2310,
	4398, 2311, 1141, 2609, 2937, 1361, 1141, 762, 1141, 1141,
	1618, 2936, 2301, 3504, 2301, 4872, 1406, 2445, 832, 2915,
	1620, 4203, 1141, 1141, 1141, 1141, 2369, 2228, 1141, 1141,
	1141, 1141, 1141, 1141, 1141, 1141, 2331, 4205, 2314, 2914,
	762, 2471, 2472, 1378, 2348, 1386, 3471, 3534, 1257, 2875,
	1257, 1386, 1379, 2799, 1141, 1141, 1141, 1141, 1141, 1141,
	1141, 1141, 1141, 2359, 2445, 2184, 2908, 1141, 2518, 2908,
	1775, 2812, 1380, 2585, 2586, 2197, 2443, 2654, 2653, 1263,
	2475, 2826, 3310, 3311, 3313, 3314, 1406, 2585, 2601, 3073,
	2392, 4877, 2199, 2884, 2610, 1263, 1081, 2170, 2932, 1377,
	2122, 1608, 4461, 1607, 2458, 1712, 1259, 3314, 1259, 4166,
	4223, 1141, 1406, 1606, 2649, 1605, 3306, 3307, 2422, 2410,
	2174, 797, 2194, 2443, 1524, 2925, 2926, 2196, 2803, 2925,
	2926, 1682, 1566, 2695, 2695, 2709, 1298, 2585, 2408, 1027,
	2730, 2732, 2263, 2446, 2433, 2439, 2736, 2432, 2431, 3695,
	1806, 1807, 1809, 1810, 2549, 4345, 2912, 2427, 1062, 2604,
	2462, 1062, 1062, 2463, 2464, 2191, 2600, 2925, 2926, 2356,
	2349, 711, 2336, 4165, 3898, 2409, 2611, 2171, 2608, 2025,
	2025, 2159, 1382, 1661, 1767, 2860, 2028, 2028, 1579, 2761,
	2786, 1712, 4584, 3127, 2651, 2533, 2419, 706, 2198, 2652,
	2834, 4879, 2655, 2753, 2656, 2657, 2838, 2441, 2887, 2198,
	3535, 1082, 1711, 1345, 1345, 2155, 2124, 2533, 3161, 1975,
	2849, 1082, 1768, 888, 887, 1082, 2545, 2444, 1229, 1380,
	2421, 2968, 2790, 795, 2350, 2898, 761, 1584, 1742, 4836,
	2802, 1378, 1271, 2775, 2598, 2160, 2161, 2211, 2402, 3190,
	1379, 4206, 2390, 4201, 2123, 2541, 1709, 1406, 1690, 4764,
	1690, 1728, 2539, 2967, 1261, 1678, 3447, 2848, 179, 761,
	2353, 2347, 2806, 2752, 2444, 2156, 3704, 1746, 2842, 1078,
	1261, 2357, 2195, 4904, 1268, 3205, 2175, 3312, 2965, 2825,
	2704, 2031, 2814, 1780, 2721, 2734, 2691, 1375, 1711, 2963,
	2207, 1662, 2442, 2850, 1591, 2760, 2897, 2765, 2754, 1359,
	2771, 2772, 2742, 2743, 1082, 4586, 2758, 2759, 2303, 2143,
	1710, 3703, 1928, 2845, 2144, 1973, 3163, 2206, 2613, 1273,
	1986, 1725, 3910, 3922, 1406, 2613, 4248, 2856, 3939, 2874,
	1667, 3971, 2870, 2874, 3936, 3882, 3172, 763, 2385, 2442,
	1345, 4462, 2176, 2177, 1031, 3869, 1589, 1031, 2858, 3581,
	1031, 2202, 1032, 4460, 2876, 1031, 1258, 2397, 3573, 4458,
	4885, 1141, 1141, 2821, 1141, 2395, 2172, 3532, 926, 2970,
	763, 3761, 1258, 2841, 2844, 1956, 1920, 1921, 2935, 2913,
	4850, 2160, 2161, 1330, 3322, 2859, 1272, 823, 3972, 1345,
	4878, 2851, 2824, 2428, 2833, 2828, 2873, 3521, 2836, 2843,
	2837, 2918, 2886, 2529, 4858, 2933, 2857, 4457, 4857, 3204,
	2797, 2203, 2173, 2250, 2249, 3197, 3198, 1380, 4344, 2911,
	1345, 1342, 4188, 2917, 4907, 4825, 3513, 4765, 2145, 2961,
	3087, 3970, 1330, 2527, 1345, 4459, 1345, 4082, 4081, 2854,
	2901, 3908, 796, 2607, 3579, 3116, 2149, 1013, 3175, 4199,
	883, 1345, 882, 2916, 3522, 3060, 4181, 3698, 1960, 2418,
	1853, 3228, 2019, 1330, 1330, 4202, 2934, 2927, 2929, 2930,
	2931, 1075, 3582, 3128, 3129, 2879, 3636, 3020, 2942, 919,
	3056, 3169, 3022, 3514, 3135, 3136, 3137, 2889, 2892, 2214,
	4935, 3226, 798, 2420, 2221, 2976, 794, 3520, 3923, 1141,
	3009, 3010, 2872, 2948, 2071, 1568, 3637, 1963, 1565, 836,
	4671, 4182, 1297, 2223, 4389, 1743, 3758, 2941, 2951, 2146,
	2151, 1665, 1958, 1013, 2946, 2940, 3512, 2956, 3012, 829,
	2613, 4763, 3458, 4732, 2178, 4733, 707, 4661, 3323, 2025,
	1961, 2939, 4592, 4612, 2355, 1591, 2028, 1075, 3018, 3122,
	2885, 907, 3449, 2211, 179, 3101, 832, 1497, 2131, 2132,
	829, 1141, 3486, 1014, 3119, 2515, 3125, 1141, 1141, 1528,
	2222, 3130, 3023, 3131, 3145, 2523, 4585, 2182, 3118, 1740,
	3089, 760, 3091, 1959, 3174, 3013, 3036, 832, 3636, 1508,
	3151, 1691, 1522, 3490, 3046, 3047, 3142, 2524, 3759, 1282,
	4275, 2199, 2147, 2525, 4824, 1269, 3547, 2530, 2215, 3071,
	4200, 2179, 3153, 4883, 3155, 3171, 3157, 708, 3370, 3485,
	3082, 4799, 2871, 1141, 1141, 1915, 3092, 3103, 3011, 1141,
	2165, 4800, 1028, 3223, 2183, 2197, 3177, 2890, 3179, 1014,
	3123, 3167, 1141, 1141, 3219, 3144, 3417, 3492, 1141, 1141,
	3566, 3090, 2211, 2153, 1141, 3687, 2153, 1744, 4078, 1270,
	3154, 3224, 3156, 1956, 3158, 3229, 2532, 709, 3685, 710,
	4847, 4357, 4715, 3018, 3580, 4703, 1663, 2181, 3678, 2391,
	3152, 4233, 729, 4525, 1865, 3269, 2757, 2166, 3315, 3316,
	3308, 3309, 3310, 3311, 3313, 3314, 4908, 2595, 2540, 1141,
	1141, 1141, 2770, 3220, 1962, 1141, 3453, 1081, 2789, 1019,
	1018, 3180, 3491, 1741, 3182, 1141, 3185, 4177, 3042, 1677,
	1679, 3173, 3196, 4178, 4884, 2352, 2346, 4659, 920, 921,
	2164, 4290, 1141, 4183, 1508, 2513, 4517, 2764, 2516, 4895,
	3187, 3186, 3459, 1090, 4341, 1330, 1960, 1779, 1257, 4518,
	3774, 4291, 1745, 927, 2458, 3191, 1015, 2613, 837, 838,
	4886, 4285, 3909, 1358, 1257, 4072, 1960, 4893, 3985, 4253,
	4660, 3985, 3870, 4083, 1287, 4180, 3680, 3717, 3983, 3247,
	3248, 3983, 3206, 4519, 3251, 1019, 1018, 3188, 1696, 2512,
	4619, 3679, 4184, 4708, 2526, 1963, 1508, 4638, 1508, 4499,
	908, 909, 4252, 4251, 2528, 2947, 1259, 4023, 4823, 3624,
	1958, 3149, 2271, 3150, 1790, 1963, 1953, 3218, 3369, 1285,
	1278, 4276, 1259, 698, 1141, 1141, 1141, 1141, 1961, 2218,
	2755, 4000, 1015, 4079, 1141, 1141, 1141, 2148, 2461, 1141,
	4127, 1789, 2163, 2115, 4423, 4913, 3243, 4521, 1961, 1141,
	1263, 1406, 3225, 4568, 4936, 1141, 3987, 1141, 3406, 3987,
	3362, 3363, 3227, 4508, 2451, 4024, 1263, 1082, 2072, 3026,
	4520, 1959, 3029, 3955, 3031, 3813, 3942, 4620, 4798, 1016,
	2112, 3894, 3886, 4340, 1406, 1789, 2216, 3465, 4522, 3625,
	3863, 3986, 3616, 3461, 3986, 3061, 1263, 3055, 1784, 1406,
	3040, 2297, 2291, 3258, 840, 839, 1017, 2285, 2277, 2257,
	1099, 2256, 3306, 3307, 3757, 3324, 3325, 3326, 3345, 3078,
	2031, 1559, 3078, 4179, 1406, 1289, 922, 923, 3828, 2217,
	769, 4676, 3718, 2919, 3364, 2891, 2874, 2748, 3386, 4641,
	1345, 1789, 2403, 4026, 3864, 1788, 2108, 4306, 4477, 3434,
	3037, 1300, 3436, 3437, 4084, 1016, 2110, 3440, 4475, 3441,
	1020, 3442, 1141, 4189, 4190, 3374, 4400, 4288, 841, 842,
	3477, 3865, 2751, 3862, 3473, 3472, 1141, 3211, 2019, 2019,
	2152, 3395, 1017, 3189, 3981, 2514, 1345, 3321, 2337, 1788,
	3372, 2031, 1962, 3841, 3367, 3454, 3455, 3366, 910, 911,
	2111, 1713, 2452, 3159, 3686, 3681, 3682, 3683, 3684, 1141,
	1719, 1718, 1962, 2750, 2152, 1790, 3475, 3373, 2749, 3479,
	1865, 2796, 3384, 1614, 4342, 1345, 2795, 3445, 3387, 3388,
	3399, 3392, 2794, 1612, 1375, 1261, 1020, 3404, 3356, 4085,
	3418, 3451, 3252, 3385, 4128, 1788, 3400, 1345, 2793, 1345,
	2792, 1261, 3476, 925, 1600, 3481, 3438, 4912, 3483, 1790,
	3371, 3340, 3341, 3342, 3984, 2210, 1079, 3984, 1601, 3814,
	3991, 1406, 3044, 4579, 2210, 4621, 4412, 3457, 4472, 3815,
	3887, 1261, 1345, 3312, 3424, 3425, 1345, 3426, 4267, 3462,
	2895, 3550, 3378, 3552, 3901, 3666, 3556, 2295, 3589, 3537,
	3562, 3408, 3409, 3410, 3411, 3390, 3891, 3391, 2920, 2921,
	4844, 3466, 3511, 4616, 4387, 3016, 1345, 4323, 3509, 3430,
	3415, 3126, 3021, 3019, 4408, 2325, 2227, 1671, 4407, 3507,
	1345, 4395, 1345, 4682, 4580, 1697, 1406, 1258, 3548, 3439,
	3523, 4523, 4689, 823, 1345, 3432, 4673, 4524, 3530, 4134,
	3830, 3446, 4848, 1258, 2620, 1345, 3435, 1763, 4710, 1765,
	4849, 1762, 3525, 4846, 3452, 3599, 1760, 1737, 4784, 4608,
	1345, 4600, 2414, 1735, 3545, 3557, 3866, 4396, 2025, 3563,
	4363, 4126, 4413, 1258, 3990, 2028, 3608, 1263, 3379, 4322,
	3322, 3460, 3407, 3632, 3337, 3733, 3493, 3692, 1707, 1705,
	1703, 1701, 3691, 3428, 3503, 3300, 3116, 3230, 3041, 4464,
	3516, 1699, 1345, 1345, 2959, 3116, 1508, 1508, 2000, 768,
	3517, 3630, 4683, 4581, 3518, 3615, 3519, 2909, 1693, 2823,
	3510, 2423, 1993, 3533, 3538, 1989, 1766, 1345, 3652, 3377,
	1649, 3338, 3546, 3713, 3712, 3584, 3412, 3587, 3623, 2025,
	1784, 3165, 3524, 3641, 3526, 3565, 2028, 2394, 1687, 1685,
	3571, 1610, 3559, 3164, 2942, 1613, 1853, 3133, 2440, 3892,
	3427, 1724, 3383, 2364, 2361, 1611, 2236, 3696, 2276, 2255,
	2060, 1898, 1406, 1660, 1583, 1406, 2619, 3558, 4757, 1508,
	4234, 3564, 3946, 3945, 4235, 924, 3570, 4218, 4672, 3572,
	3576, 4304, 4240, 4231, 1029, 4170, 4022, 3626, 4013, 2917,
	3958, 3943, 3591, 3633, 2282, 1625, 829, 3916, 1141, 3629,
	4812, 3914, 3893, 3611, 1141, 1141, 4821, 3619, 1141, 1141,
	1141, 3613, 1141, 3612, 3614, 3689, 3604, 3074, 3066, 179,
	179, 1141, 2031, 832, 3323, 1764, 3664, 1761, 2019, 3549,
	1141, 3668, 1759, 1736, 2416, 1141, 3640, 3638, 2415, 1734,
	3059, 1406, 3688, 3631, 4299, 3048, 3647, 3650, 3651, 3034,
	1141, 3033, 1261, 3014, 2840, 2835, 2254, 2252, 1406, 3380,
	3381, 3662, 3382, 3710, 1706, 1704, 1702, 1700, 2031, 2031,
	1141, 1141, 3711, 1141, 1141, 1141, 3700, 1698, 3701, 2229,
	3702, 2212, 2180, 2167, 2154, 2093, 2090, 2087, 2084, 1082,
	3754, 1141, 4837, 3719, 1692, 1141, 2079, 2031, 2031, 1141,
	1141, 1141, 1141, 1141, 1141, 1141, 1141, 1141, 1141, 1141,
	1141, 1141, 1141, 1141, 1141, 1141, 1141, 1141, 1141, 2393,
	1141, 3690, 3707, 1330, 1686, 1684, 3736, 1609, 1141, 1141,
	2031, 3786, 2077, 3787, 2073, 1141, 2360, 2064, 2235, 3716,
	1793, 3708, 1034, 1036, 1038, 3583, 1141, 3560, 2003, 4290,
	3714, 2116, 2221, 4578, 1258, 3183, 3209, 1263, 1263, 3181,
	3007, 1141, 4720, 4328, 1238, 4321, 3318, 3319, 3320, 4291,
	4320, 4247, 4162, 3317, 3315, 3316, 3308, 3309, 3310, 3311,
	3313, 3314, 3117, 2135, 1564, 3741, 3746, 3747, 2471, 3777,
	1239, 4510, 1406, 3743, 2896, 4503, 2426, 2871, 4034, 2162,
	2871, 3859, 3497, 3498, 3753, 3499, 3500, 3501, 1321, 1257,
	3764, 2388, 2869, 3769, 3825, 2893, 2351, 2471, 3792, 3776,
	1404, 3760, 3762, 3763, 1502, 1257, 1757, 1758, 2383, 2294,
	1320, 3884, 1508, 3783, 3846, 3885, 3784, 4719, 2358, 4210,
	3785, 1141, 2424, 1800, 1801, 3817, 3789, 4242, 3791, 3687,
	3821, 1794, 3210, 3539, 3540, 1257, 3541, 3542, 3543, 1683,
	1141, 4545, 3685, 2899, 1800, 1801, 3561, 1259, 4410, 4135,
	4113, 3488, 3678, 1803, 179, 3915, 3832, 3917, 3826, 3818,
	2025, 3837, 3838, 1259, 2900, 2922, 1797, 2028, 2425, 1354,
	1288, 4840, 4831, 1141, 1141, 2900, 3706, 3954, 261, 2966,
	4793, 1240, 3032, 3834, 3835, 4010, 2278, 1365, 1802, 2964,
	2973, 2953, 2955, 1259, 1321, 1321, 2902, 2904, 4681, 3953,
	4666, 4632, 4409, 4626, 3848, 2954, 2025, 2025, 3849, 1802,
	2903, 4577, 4494, 2028, 2028, 1141, 4470, 4388, 4020, 4012,
	3999, 3856, 1261, 1261, 3618, 695, 3081, 2735, 3957, 2099,
	2012, 4880, 2945, 4712, 1149, 2025, 2025, 1345, 4713, 1520,
	1345, 1519, 2028, 2028, 3416, 1345, 4911, 4628, 3876, 1530,
	3680, 1670, 3927, 3306, 3307, 1800, 1801, 1669, 4852, 4712,
	2863, 2864, 3932, 3934, 4713, 3679, 2861, 2862, 2025, 4105,
	2031, 3931, 2615, 3872, 2863, 2028, 2861, 2650, 4019, 4495,
	268, 268, 268, 4446, 701, 702, 3897, 717, 701, 717,
	727, 4244, 3956, 767, 3950, 1739, 4239, 787, 1738, 4238,
	4101, 1345, 793, 3871, 3765, 3948, 3919, 1141, 3554, 268,
	1073, 3924, 1013, 4897, 3551, 1263, 1141, 1892, 3973, 3975,
	4036, 1891, 4859, 4670, 1258, 1258, 1345, 1345, 1345, 904,
	3087, 4669, 3969, 4043, 2917, 268, 1075, 4027, 3967, 4668,
	4607, 4606, 4561, 1345, 1345, 1345, 4006, 2104, 4473, 4440,
	3989, 3993, 4385, 4382, 4380, 4278, 4028, 3116, 3676, 4264,
	4208, 4047, 1345, 4157, 3977, 4058, 4031, 4040, 1406, 3994,
	4007, 3912, 3904, 3622, 3621, 3482, 4016, 3433, 3170, 3162,
	3141, 3140, 1074, 3979, 3139, 3138, 3988, 3065, 3035, 2894,
	3466, 2831, 2827, 2816, 1406, 3978, 4059, 1141, 1141, 4011,
	2815, 2804, 3966, 1141, 1141, 2031, 2544, 2417, 1141, 1141,
	2389, 1141, 2382, 2381, 2380, 2379, 1141, 2378, 2292, 2266,
	3867, 3868, 2262, 2261, 2260, 2259, 1257, 1141, 1014, 4014,
	2258, 2067, 2066, 2065, 2063, 3880, 3881, 2002, 3883, 4029,
	4032, 4038, 1756, 1141, 1755, 1694, 4037, 1578, 1577, 1576,
	3968, 1575, 4030, 1574, 4042, 1573, 1572, 1567, 4068, 4048,
	4049, 4053, 4086, 4057, 4054, 701, 701, 1563, 1561, 4056,
	4050, 1560, 1513, 268, 1512, 1511, 1397, 4070, 3686, 3681,
	3682, 3683, 3684, 1396, 1259, 1395, 1394, 1330, 1393, 4069,
	4099, 1357, 1307, 1306, 1305, 1304, 1303, 4087, 1302, 1301,
	1261, 1299, 1294, 4080, 1263, 1293, 1292, 4075, 1291, 4095,
	1290, 1221, 1263, 897, 8, 2106, 1406, 1040, 1406, 1026,
	4583, 4187, 4186, 4185, 2413, 1263, 92, 1569, 2025, 859,
	86, 2219, 3911, 4787, 992, 2028, 1345, 1345, 4709, 4611,
	1552, 867, 4691, 4008, 3484, 2978, 1406, 2019, 2363, 1695,
	2365, 2282, 3394, 2777, 4658, 2143, 4109, 3268, 4552, 4356,
	2144, 2618, 1896, 1992, 3349, 88, 1125, 1171, 4274, 4273,
	4171, 1263, 3896, 1263, 1019, 1018, 4163, 4164, 3106, 4125,
	4271, 4270, 2016, 2018, 1089, 1409, 4731, 2117, 1131, 2133,
	2126, 2817, 2694, 1148, 1145, 1878, 1345, 2020, 2022, 1883,
	1147, 4211, 1258, 1146, 2021, 1916, 1406, 1144, 1345, 2015,
	1625, 1345, 1625, 4018, 3085, 4146, 3648, 1619, 2019, 4143,
	1617, 1015, 1406, 4137, 4138, 994, 4139, 4142, 4136, 2121,
	4197, 2538, 2602, 179, 3257, 1889, 4141, 4132, 4212, 1105,
	4150, 4147, 1127, 2599, 1283, 4243, 1116, 4245, 1104, 3375,
	3354, 3635, 4155, 3855, 2450, 877, 3303, 2605, 1274, 3399,
	4167, 1345, 1345, 2025, 4169, 4161, 2718, 2710, 2706, 3443,
	2028, 3075, 1770, 4370, 2145, 1867, 3086, 1391, 1109, 2536,
	1880, 1345, 3235, 2460, 4268, 3642, 3397, 2810, 4216, 1261,
	2137, 4716, 2149, 1406, 3773, 4227, 3168, 1261, 1345, 2270,
	1237, 4225, 1236, 4246, 4228, 4194, 1281, 4194, 1235, 4697,
	1261, 4232, 4694, 2209, 4262, 4051, 1257, 1257, 3597, 2109,
	2855, 2548, 4265, 1263, 3605, 4237, 4230, 1121, 1507, 2407,
	3360, 3667, 1580, 792, 4307, 1345, 1345, 1345, 1345, 4417,
	1133, 4256, 1852, 3003, 1016, 4296, 3002, 4572, 4293, 1406,
	4261, 1376, 1374, 4308, 1373, 1372, 1261, 4868, 1261, 4255,
	4254, 1141, 1141, 1141, 4934, 2146, 2151, 3907, 3906, 1072,
	4295, 1017, 3905, 4269, 1259, 1259, 235, 4263, 3203, 1406,
	4324, 4311, 4284, 1791, 1141, 1783, 232, 1141, 1141, 234,
	233, 1258, 4279, 3860, 3403, 4791, 4302, 1141, 4015, 1258,
	2031, 4217, 3929, 3588, 23, 1141, 1141, 4309, 22, 21,
	113, 42, 1258, 4226, 20, 152, 4229, 130, 149, 148,
	1406, 122, 1345, 147, 146, 1020, 4330, 4348, 145, 144,
	151, 2247, 143, 142, 137, 141, 4331, 140, 139, 4336,
	138, 136, 134, 135, 129, 1406, 4140, 4343, 2147, 133,
	132, 4333, 131, 1141, 128, 127, 4316, 4194, 1258, 126,
	1258, 125, 124, 123, 121, 153, 1141, 120, 119, 4337,
	118, 117, 4071, 116, 115, 1141, 114, 780, 2282, 4359,
	2031, 781, 61, 60, 112, 110, 4292, 4431, 4432, 1141,
	111, 19, 1141, 40, 4391, 3496, 4376, 4377, 1330, 2153,
	14, 65, 66, 18, 4365, 13, 1141, 4379, 1261, 35,
	4198, 91, 102, 1406, 101, 36, 4420, 4447, 99, 4449,
	1345, 4450, 4353, 98, 34, 17, 16, 4213, 4214, 15,
	1345, 1345, 3232, 3233, 4392, 96, 95, 4399, 1276, 33,
	31, 4390, 11, 9, 37, 1977, 12, 5, 184, 183,
	186, 182, 3494, 185, 90, 181, 180, 4439, 4463, 89,
	29, 10, 176, 4486, 4004, 4451, 81, 178, 177, 2019,
	3599, 1296, 175, 174, 173, 1406, 82, 4485, 1345, 79,
	4441, 172, 85, 268, 4476, 268, 268, 4437, 1325, 268,
	1335, 171, 80, 84, 1257, 3495, 1263, 1263, 83, 4442,
	4429, 1355, 4448, 27, 6, 64, 4465, 4455, 7, 787,
	1258, 4338, 787, 4453, 4504, 2019, 2019, 1141, 1141, 4466,
	3693, 105, 4513, 4474, 4493, 4469, 4489, 106, 38, 77,
	76, 75, 4532, 4505, 1141, 2031, 268, 4484, 268, 268,
	1325, 4507, 268, 268, 2019, 2019, 4468, 1335, 26, 63,
	25, 170, 1259, 4528, 4529, 217, 216, 4506, 2025, 215,
	214, 268, 4327, 1532, 4512, 2028, 4526, 4311, 213, 4511,
	212, 211, 1141, 210, 1141, 205, 1141, 2019, 4501, 204,
	209, 207, 4443, 2148, 1557, 206, 1263, 208, 203, 227,
	226, 220, 219, 225, 2455, 224, 4541, 4542, 223, 1141,
	2474, 1263, 222, 1582, 4567, 221, 1335, 218, 229, 202,
	268, 268, 201, 1325, 3330, 3331, 3332, 3333, 200, 198,
	194, 193, 4540, 197, 199, 4454, 196, 4603, 195, 192,
	4194, 4194, 228, 72, 787, 4566, 268, 268, 2025, 4550,
	168, 169, 71, 167, 2152, 2028, 166, 165, 4594, 164,
	163, 162, 161, 1141, 1141, 4563, 70, 4588, 4595, 904,
	4587, 24, 2, 1141, 1, 0, 0, 4615, 1263, 0,
	0, 1263, 0, 0, 0, 1345, 4544, 0, 0, 4277,
	0, 1261, 1261, 1257, 4602, 1345, 1345, 0, 0, 0,
	0, 1257, 4294, 2616, 4604, 0, 0, 0, 0, 0,
	0, 0, 1345, 4609, 1257, 0, 0, 0, 0, 0,
	0, 4649, 0, 0, 0, 4315, 1141, 1141, 4623, 4624,
	4194, 4627, 0, 4630, 4629, 4635, 1141, 4489, 4637, 4634,
	4642, 0, 4645, 4622, 0, 4194, 4643, 268, 4647, 4648,
	2712, 1259, 4646, 0, 0, 0, 0, 0, 0, 1259,
	1257, 0, 1257, 0, 0, 4652, 4684, 0, 0, 4653,
	2104, 268, 1259, 0, 4688, 0, 0, 0, 2242, 1141,
	1141, 1261, 1141, 4663, 0, 0, 4667, 0, 0, 0,
	0, 0, 1508, 1258, 1258, 0, 1261, 0, 0, 2787,
	0, 1625, 0, 2025, 0, 4662, 4696, 4699, 0, 0,
	2028, 0, 4194, 0, 4718, 4194, 4711, 4714, 1259, 4687,
	1259, 4686, 4679, 4680, 0, 0, 0, 0, 0, 0,
	4509, 0, 4736, 4705, 0, 0, 4739, 0, 0, 0,
	1141, 1141, 1141, 0, 4740, 4701, 2542, 2019, 0, 0,
	0, 0, 4721, 0, 0, 0, 0, 0, 4700, 4734,
	0, 4704, 1878, 1261, 4727, 0, 1261, 0, 0, 4735,
	0, 0, 0, 1141, 0, 0, 0, 0, 0, 0,
	0, 4753, 4754, 1258, 0, 0, 4756, 4776, 4755, 4771,
	0, 4786, 0, 4789, 0, 0, 0, 0, 1258, 1330,
	4560, 0, 0, 4562, 0, 4801, 0, 0, 0, 0,
	0, 0, 1257, 4794, 0, 4805, 0, 2717, 0, 0,
	4803, 0, 0, 4815, 4790, 0, 4817, 4816, 0, 4774,
	1141, 0, 0, 0, 0, 0, 0, 4802, 0, 0,
	0, 0, 0, 0, 2866, 4822, 0, 0, 0, 4809,
	4813, 4814, 4811, 0, 0, 0, 4819, 0, 0, 4810,
	4842, 0, 0, 4838, 0, 1258, 0, 0, 1258, 0,
	1259, 0, 701, 4834, 4832, 0, 4830, 4828, 4829, 0,
	0, 0, 2019, 0, 2152, 1263, 4843, 1263, 4696, 4864,
	4862, 4699, 4845, 268, 4718, 268, 4841, 4851, 0, 268,
	4874, 4861, 0, 4860, 0, 4875, 4856, 4615, 0, 0,
	0, 0, 1532, 1325, 1997, 268, 0, 268, 4870, 0,
	4873, 0, 0, 268, 1532, 717, 4888, 0, 0, 0,
	268, 1532, 0, 1532, 0, 0, 0, 0, 4887, 0,
	0, 4890, 4863, 0, 4865, 2068, 4899, 0, 0, 0,
	0, 0, 0, 4654, 0, 4655, 0, 268, 4905, 0,
	0, 1141, 1141, 4898, 268, 0, 0, 0, 4903, 4901,
	1141, 0, 1141, 1141, 0, 0, 4909, 0, 0, 4906,
	4918, 0, 4915, 0, 4919, 0, 4925, 0, 0, 4926,
	0, 4930, 0, 4929, 4924, 4928, 0, 4922, 4927, 1532,
	0, 3087, 0, 787, 4923, 0, 0, 0, 4938, 4933,
	4941, 4939, 0, 4940, 4946, 4937, 4943, 4942, 4944, 4194,
	0, 4194, 4706, 4950, 0, 4707, 4949, 0, 0, 3729,
	3730, 0, 0, 1141, 0, 0, 4954, 0, 4956, 0,
	4960, 4946, 4957, 0, 4959, 0, 4951, 0, 0, 0,
	0, 4916, 4917, 0, 0, 4953, 0, 0, 0, 0,
	4613, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1261, 0, 1261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4633, 1257, 1257, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4772, 0, 0, 0, 0, 0, 0, 0,
	3306, 3307, 4955, 3324, 3325, 3326, 0, 0, 0, 3793,
	3794, 3795, 3796, 3797, 3798, 3799, 3800, 3801, 3802, 3803,
	3804, 3805, 3806, 3807, 3808, 3809, 3810, 3811, 3812, 0,
	3816, 0, 0, 1259, 1259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3193, 4188, 268, 0, 0, 0,
	268, 0, 1258, 0, 1258, 1257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3321, 0, 0, 0, 0,
	1257, 0, 0, 0, 0, 0, 0, 0, 0, 4181,
	0, 0, 0, 4174, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4722, 0, 0, 0,
	4172, 2104, 4724, 0, 268, 0, 4869, 0, 268, 4176,
	0, 0, 0, 1259, 268, 0, 0, 0, 0, 0,
	268, 0, 0, 0, 0, 2712, 2712, 0, 1259, 0,
	0, 0, 0, 0, 4182, 0, 268, 1257, 268, 0,
	1257, 0, 701, 0, 268, 0, 4894, 2104, 0, 0,
	0, 0, 4896, 0, 0, 0, 787, 2019, 0, 0,
	904, 3312, 0, 0, 0, 0, 0, 3306, 3307, 0,
	3324, 3325, 3326, 0, 0, 0, 0, 4175, 0, 0,
	0, 0, 0, 0, 0, 268, 2104, 1325, 268, 4092,
	0, 0, 0, 0, 0, 1259, 0, 0, 1259, 0,
	0, 0, 787, 0, 0, 0, 0, 0, 2104, 268,
	2104, 2717, 0, 0, 0, 0, 0, 2362, 0, 0,
	0, 0, 268, 268, 0, 268, 3328, 268, 0, 268,
	0, 268, 0, 0, 0, 0, 0, 2019, 0, 0,
	0, 0, 3321, 2104, 0, 0, 0, 2104, 0, 0,
	0, 0, 0, 0, 0, 0, 2399, 0, 0, 2400,
	0, 2401, 0, 0, 0, 0, 0, 0, 3322, 0,
	0, 0, 0, 268, 268, 268, 268, 964, 0, 1013,
	0, 0, 0, 3306, 3307, 0, 3324, 3325, 3326, 0,
	0, 0, 2717, 2717, 0, 0, 0, 0, 0, 0,
	767, 0, 0, 972, 787, 4091, 0, 2712, 2712, 2712,
	2712, 0, 0, 0, 0, 1339, 0, 0, 0, 987,
	0, 970, 969, 0, 0, 0, 0, 0, 3361, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3312, 0,
	4177, 0, 0, 989, 1853, 0, 4178, 0, 0, 971,
	0, 0, 0, 0, 974, 0, 4183, 0, 3321, 1024,
	0, 3389, 0, 0, 0, 0, 0, 0, 984, 985,
	0, 0, 1516, 0, 0, 0, 3402, 1002, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2019, 0, 0, 1014, 976, 2550, 4180, 0,
	0, 3422, 977, 3328, 0, 0, 1554, 0, 0, 0,
	0, 0, 0, 0, 0, 4184, 0, 0, 0, 0,
	0, 0, 3323, 0, 0, 978, 0, 0, 0, 0,
	0, 0, 1592, 0, 1011, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1257, 3322, 1257, 0, 0, 0,
	0, 0, 0, 0, 3312, 0, 0, 0, 0, 1633,
	0, 0, 3306, 3307, 1012, 3324, 3325, 3326, 701, 0,
	0, 0, 0, 1646, 2717, 2717, 2717, 2717, 0, 0,
	980, 0, 0, 268, 3738, 0, 0, 0, 968, 2143,
	0, 0, 701, 0, 2144, 0, 0, 0, 0, 268,
	0, 701, 1259, 0, 1259, 0, 0, 981, 982, 0,
	0, 0, 0, 268, 0, 0, 0, 0, 0, 3328,
	0, 1853, 0, 0, 0, 0, 990, 988, 0, 1672,
	0, 268, 1335, 0, 983, 0, 0, 3321, 999, 0,
	0, 1019, 1018, 0, 0, 0, 4179, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1021, 1010, 0, 0,
	0, 3322, 0, 0, 3318, 3319, 3320, 0, 0, 0,
	0, 3317, 3315, 3316, 3308, 3309, 3310, 3311, 3313, 3314,
	268, 1335, 0, 0, 0, 717, 4189, 4190, 1015, 2830,
	0, 0, 0, 0, 0, 268, 0, 0, 268, 3323,
	0, 0, 268, 0, 268, 0, 0, 0, 2145, 1325,
	0, 268, 268, 3402, 1335, 1335, 2846, 0, 0, 0,
	0, 268, 0, 0, 0, 0, 2149, 0, 0, 0,
	0, 0, 0, 3312, 0, 0, 0, 1853, 0, 0,
	0, 0, 0, 0, 975, 0, 0, 1023, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2883, 0,
	973, 0, 0, 0, 1006, 1007, 0, 0, 0, 268,
	0, 0, 0, 0, 0, 0, 0, 0, 1009, 0,
	0, 0, 268, 0, 0, 0, 0, 0, 3328, 2146,
	2151, 0, 0, 0, 0, 268, 0, 0, 0, 0,
	0, 1016, 1004, 0, 0, 3323, 787, 0, 0, 0,
	1022, 1000, 0, 0, 993, 991, 0, 996, 0, 0,
	0, 0, 0, 997, 0, 0, 966, 268, 1017, 0,
	3322, 3318, 3319, 3320, 0, 0, 0, 0, 3317, 3315,
	3316, 3308, 3309, 3310, 3311, 3313, 3314, 0, 0, 1502,
	0, 967, 1404, 0, 0, 0, 0, 0, 270, 0,
	268, 3024, 0, 1008, 0, 998, 0, 0, 0, 0,
	0, 995, 2147, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1020, 0, 0, 0, 1532, 0, 0, 268,
	1001, 268, 0, 0, 0, 0, 0, 0, 268, 979,
	0, 0, 2712, 2712, 0, 0, 1853, 4362, 3070, 0,
	0, 0, 0, 1003, 0, 0, 0, 0, 2883, 2141,
	701, 0, 0, 2153, 0, 0, 0, 0, 3750, 3099,
	904, 0, 2883, 2883, 0, 0, 2104, 0, 0, 1005,
	0, 0, 0, 0, 0, 3766, 0, 3318, 3319, 3320,
	0, 268, 0, 0, 3317, 3315, 3316, 3308, 3309, 3310,
	3311, 3313, 3314, 4402, 0, 0, 0, 0, 0, 0,
	268, 1325, 268, 0, 0, 0, 2139, 0, 0, 1532,
	0, 1532, 1335, 268, 3323, 0, 1325, 0, 1325, 0,
	1325, 0, 2712, 2712, 2712, 2712, 2712, 2712, 2712, 2712,
	2712, 2712, 2712, 2712, 2712, 2712, 2712, 2712, 2712, 2712,
	2712, 2712, 0, 2712, 0, 0, 0, 0, 0, 2140,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 268, 268, 268, 1325, 0, 0,
	1325, 0, 268, 0, 0, 268, 0, 0, 0, 0,
	1103, 0, 0, 0, 0, 0, 0, 0, 0, 1096,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2717,
	2717, 0, 0, 0, 0, 0, 268, 0, 0, 3858,
	0, 0, 0, 0, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2148, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3318, 3319, 3320, 0,
	0, 0, 0, 3317, 3315, 3316, 3308, 3309, 3310, 3311,
	3313, 3314, 0, 0, 4549, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2717,
	2717, 2717, 2717, 2717, 2717, 2717, 2717, 2717, 2717, 2717,
	2717, 2717, 2717, 2717, 2717, 2717, 2717, 2717, 2717, 0,
	2717, 0, 0, 0, 4571, 0, 0, 0, 0, 1800,
	1801, 0, 0, 0, 0, 1844, 1845, 1846, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4593,
	1532, 0, 1831, 0, 0, 0, 0, 0, 0, 1803,
	0, 0, 0, 0, 0, 0, 0, 0, 1850, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1856, 0, 0, 0, 0,
	0, 0, 0, 0, 1802, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1822, 0, 0, 0, 0, 0,
	0, 0, 0, 1819, 0, 0, 0, 0, 0, 0,
	0, 2312, 0, 0, 0, 0, 0, 2104, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1339, 2328, 2104,
	0, 0, 2104, 0, 0, 0, 0, 0, 2330, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2338, 0, 2341, 2342, 2343, 0, 0, 0, 3306, 3307,
	0, 3324, 3325, 3326, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1825, 1826, 1827, 1828, 268, 0, 0, 0, 0, 0,
	1808, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 2104, 0, 0, 701, 0, 892, 0, 0,
	701, 0, 0, 701, 0, 0, 701, 701, 0, 0,
	0, 0, 701, 0, 0, 0, 0, 0, 1841, 0,
	268, 1851, 0, 3321, 73, 0, 895, 894, 1830, 1832,
	0, 0, 0, 0, 1532, 0, 0, 0, 0, 0,
	0, 74, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1817, 1818, 0, 78, 1532, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 1839, 0, 268, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1823, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 87, 0, 0,
	0, 0, 0, 2883, 2883, 268, 0, 1997, 0, 0,
	0, 0, 0, 2883, 0, 0, 3468, 0, 0, 3312,
	0, 0, 0, 0, 2883, 3468, 0, 2883, 3468, 0,
	0, 3468, 0, 0, 0, 0, 0, 0, 898, 3306,
	3307, 0, 3324, 3325, 3326, 4145, 268, 268, 1997, 0,
	268, 49, 0, 107, 0, 0, 0, 0, 93, 104,
	3329, 3737, 0, 1853, 0, 0, 0, 0, 0, 0,
	1997, 0, 268, 4159, 3529, 3529, 0, 0, 0, 1325,
	0, 0, 0, 0, 3328, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2883,
	0, 2883, 0, 3555, 2883, 1997, 0, 0, 2883, 1997,
	0, 0, 787, 0, 3321, 0, 0, 94, 1829, 0,
	0, 0, 0, 0, 0, 0, 3322, 0, 0, 0,
	0, 2104, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1824, 1325, 0, 0, 0, 0, 0, 0, 268,
	0, 0, 0, 1532, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1103, 1103, 1103, 0, 268, 1842, 3593,
	0, 0, 3595, 2883, 0, 0, 268, 0, 0, 0,
	268, 1489, 0, 1335, 0, 1489, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1855, 268, 1853, 0, 0, 0, 3070, 0, 0, 1325,
	3312, 268, 0, 0, 2883, 0, 701, 0, 0, 0,
	0, 0, 0, 2883, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 3070, 0, 0, 3070, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2847, 1339, 0, 0, 0, 97, 0, 0, 0,
	0, 0, 0, 1840, 0, 3328, 1404, 0, 0, 0,
	3323, 0, 0, 3699, 0, 0, 1843, 1820, 1816, 0,
	1813, 1811, 1812, 1804, 1805, 1806, 1807, 1809, 1810, 0,
	0, 3705, 0, 800, 1532, 0, 4354, 1325, 268, 0,
	268, 0, 0, 0, 0, 0, 1325, 3322, 0, 0,
	0, 187, 100, 0, 0, 103, 0, 0, 811, 0,
	2712, 0, 1800, 1801, 0, 1833, 1834, 1835, 1844, 1845,
	1846, 0, 0, 0, 0, 0, 268, 4354, 0, 0,
	0, 236, 1800, 1801, 1837, 1831, 0, 0, 0, 899,
	0, 0, 1803, 0, 150, 0, 0, 0, 0, 0,
	0, 1850, 2474, 0, 0, 1831, 0, 0, 0, 0,
	0, 0, 1803, 0, 0, 0, 2712, 0, 1856, 0,
	0, 0, 0, 1853, 0, 0, 0, 1802, 3008, 0,
	238, 0, 0, 0, 3771, 0, 0, 1822, 1856, 0,
	0, 0, 0, 0, 0, 0, 1819, 1802, 0, 0,
	0, 805, 3318, 3319, 3320, 0, 154, 1822, 817, 3317,
	3315, 3316, 3308, 3309, 3310, 3311, 3313, 3314, 0, 0,
	2474, 191, 810, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 230, 0, 0, 0, 0, 0, 0,
	0, 3323, 231, 0, 2687, 2688, 2689, 2690, 2683, 2684,
	2685, 2686, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 809, 0, 1825, 1826, 1827, 1828, 2717, 0, 893,
	0, 268, 268, 1808, 0, 0, 0, 0, 762, 3134,
	0, 0, 0, 1825, 1826, 1827, 1828, 0, 0, 0,
	0, 0, 0, 1808, 0, 701, 701, 0, 0, 0,
	0, 0, 0, 807, 0, 0, 0, 0, 0, 0,
	0, 1841, 0, 0, 1851, 0, 0, 0, 1532, 1532,
	0, 1830, 1832, 2717, 0, 1955, 2663, 2664, 2665, 2666,
	0, 0, 0, 1532, 1532, 0, 1532, 2712, 1847, 0,
	1848, 1830, 1832, 0, 0, 0, 0, 1817, 1818, 2675,
	2676, 2677, 2678, 2671, 2672, 2673, 2674, 2679, 2680, 2681,
	2682, 0, 816, 0, 0, 1839, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2712, 0, 0,
	1823, 0, 0, 3318, 3319, 3320, 0, 0, 0, 0,
	3317, 3315, 3316, 3308, 3309, 3310, 3311, 3313, 3314, 0,
	1823, 0, 2712, 0, 0, 0, 0, 0, 0, 787,
	0, 0, 0, 0, 1489, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1849, 0, 2659, 2660,
	2661, 2662, 2667, 2668, 2669, 2670, 0, 0, 1836, 802,
	0, 0, 3529, 0, 0, 1838, 0, 0, 0, 0,
	0, 0, 0, 0, 73, 268, 1853, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	806, 74, 0, 0, 0, 0, 1853, 0, 1997, 0,
	268, 0, 0, 0, 717, 717, 1335, 78, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 0, 0, 0, 2717, 0, 0, 761, 0, 268,
	0, 1829, 0, 0, 0, 0, 0, 1088, 0, 268,
	0, 0, 812, 0, 268, 0, 0, 87, 804, 268,
	0, 1829, 0, 1103, 1824, 0, 0, 0, 0, 0,
	0, 1489, 0, 0, 2717, 0, 0, 0, 2883, 268,
	0, 0, 0, 0, 1824, 0, 0, 0, 3099, 3099,
	0, 1842, 0, 0, 904, 904, 2883, 0, 898, 2717,
	3070, 3070, 0, 0, 904, 2883, 801, 0, 0, 0,
	0, 0, 0, 107, 0, 0, 0, 0, 93, 104,
	0, 0, 0, 1855, 0, 0, 0, 0, 73, 0,
	268, 0, 0, 0, 808, 0, 0, 0, 0, 0,
	0, 0, 0, 1855, 0, 74, 0, 0, 763, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 803,
	0, 78, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 94, 0, 0,
	0, 0, 0, 814, 815, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1840, 0, 0, 0,
	0, 87, 0, 0, 0, 4110, 1814, 1815, 1821, 1843,
	1820, 1816, 1489, 1813, 1811, 1812, 1804, 1805, 1806, 1807,
	1809, 1810, 0, 0, 0, 0, 4678, 0, 0, 0,
	1836, 0, 0, 1813, 1811, 1812, 1804, 1805, 1806, 1807,
	1809, 1810, 898, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 49, 0, 107, 0, 0,
	0, 0, 93, 104, 0, 0, 0, 0, 268, 0,
	0, 0, 0, 0, 1532, 0, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1335, 0, 2807, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1335, 0, 0,
	0, 94, 0, 0, 2883, 2883, 97, 3529, 2883, 0,
	0, 0, 0, 0, 0, 4196, 0, 4196, 1532, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2883,
	0, 3468, 0, 0, 0, 1532, 1532, 268, 1997, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1997, 0, 268, 1997, 0, 268, 0, 3529, 1800,
	1801, 187, 100, 0, 0, 103, 0, 0, 0, 0,
	0, 0, 0, 2883, 0, 2883, 268, 0, 0, 0,
	0, 0, 1831, 0, 0, 0, 0, 0, 0, 1803,
	0, 236, 0, 0, 1836, 0, 0, 0, 0, 899,
	1836, 0, 0, 0, 150, 0, 1836, 0, 0, 0,
	0, 0, 2883, 0, 0, 1856, 0, 4281, 0, 0,
	0, 0, 0, 0, 1802, 0, 0, 0, 268, 0,
	0, 0, 0, 0, 1822, 0, 0, 0, 268, 0,
	238, 0, 0, 1819, 0, 0, 0, 0, 0, 0,
	97, 0, 0, 0, 3567, 0, 0, 0, 0, 0,
	0, 1489, 0, 0, 0, 0, 154, 4196, 0, 0,
	1532, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 191, 3592, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 0, 3609, 0, 0, 1836, 0, 0, 3732,
	0, 1836, 0, 230, 0, 187, 100, 0, 3617, 103,
	1836, 0, 231, 0, 0, 1836, 0, 0, 0, 0,
	1825, 1826, 1827, 1828, 0, 0, 0, 0, 0, 0,
	1808, 0, 0, 0, 0, 236, 0, 0, 0, 190,
	0, 0, 0, 899, 0, 0, 0, 0, 150, 0,
	3658, 3659, 0, 0, 1489, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1830, 1832,
	1836, 0, 0, 0, 238, 2883, 1836, 3468, 0, 0,
	4394, 0, 0, 1350, 0, 0, 0, 0, 0, 268,
	0, 0, 0, 0, 1817, 1818, 0, 0, 0, 4418,
	154, 4418, 0, 0, 0, 0, 0, 0, 0, 0,
	1088, 1088, 1088, 0, 1489, 191, 0, 0, 0, 0,
	0, 0, 0, 237, 0, 787, 0, 1823, 0, 0,
	0, 0, 0, 0, 0, 0, 3529, 230, 1325, 0,
	1489, 0, 0, 0, 0, 0, 231, 0, 0, 73,
	0, 0, 0, 1997, 0, 268, 0, 0, 0, 0,
	0, 0, 0, 1534, 0, 1540, 74, 1546, 0, 0,
	0, 0, 0, 1630, 0, 0, 0, 0, 0, 0,
	4394, 0, 78, 0, 0, 0, 0, 0, 2883, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1853, 0, 0, 4498, 1836, 1836, 1836,
	1836, 1836, 1836, 1836, 1836, 0, 0, 0, 1532, 0,
	0, 0, 87, 0, 0, 0, 0, 1836, 0, 0,
	4196, 4196, 0, 0, 1636, 0, 1641, 0, 0, 0,
	1836, 0, 0, 0, 0, 0, 1650, 0, 1655, 268,
	268, 0, 0, 0, 0, 0, 0, 0, 1829, 0,
	0, 0, 0, 898, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3771, 0, 0, 49, 0, 107, 0,
	0, 1824, 0, 93, 104, 1489, 2716, 0, 1532, 0,
	0, 1532, 3529, 4565, 0, 0, 0, 0, 0, 1836,
	4394, 0, 0, 0, 0, 1836, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1720, 0, 0, 1726,
	4196, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4196, 0, 0, 0, 0,
	1855, 0, 94, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 0,
	0, 0, 1489, 0, 0, 0, 0, 0, 0, 717,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4196, 0, 268, 4196, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3468, 0, 1857, 1858, 1859,
	1860, 1861, 1862, 1863, 1864, 0, 0, 1820, 1816, 0,
	1813, 1811, 1812, 1804, 1805, 1806, 1807, 1809, 1810, 0,
	0, 1532, 0, 1532, 0, 0, 0, 0, 0, 0,
	1877, 0, 0, 1800, 1801, 0, 1890, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1831, 0, 4677, 0,
	0, 0, 0, 1803, 0, 0, 0, 0, 0, 0,
	0, 97, 0, 0, 4418, 0, 0, 268, 0, 0,
	0, 0, 0, 0, 0, 3963, 0, 0, 3964, 1856,
	1532, 0, 0, 1532, 0, 0, 0, 0, 1802, 0,
	0, 0, 2883, 0, 0, 0, 0, 0, 1822, 0,
	0, 0, 0, 0, 0, 0, 0, 1819, 0, 0,
	0, 0, 0, 268, 0, 0, 187, 100, 0, 0,
	103, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1949, 1949, 1949, 0, 0, 0, 0, 0, 0,
	3771, 0, 0, 0, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 899, 0, 0, 0, 0, 150,
	1532, 0, 0, 3727, 4044, 4045, 4046, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1339, 4060, 4061, 1825, 1826, 1827, 1828, 0, 0,
	268, 0, 0, 0, 1808, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 154, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4394, 0, 0, 0, 191, 0, 0, 0,
	1173, 0, 1830, 1832, 237, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 230, 0,
	0, 0, 0, 0, 0, 0, 0, 231, 1817, 1818,
	0, 0, 2883, 0, 0, 0, 0, 0, 2996, 4196,
	1088, 4196, 0, 0, 1532, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1628, 0, 0, 0, 0, 0,
	0, 1823, 0, 0, 0, 0, 1836, 0, 0, 0,
	0, 2986, 2984, 0, 0, 0, 0, 0, 2988, 2990,
	2980, 0, 0, 0, 1532, 0, 0, 0, 0, 0,
	1532, 1836, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3004, 0, 0, 0, 0, 0, 0, 0, 1836,
	3099, 0, 0, 1836, 4152, 4153, 0, 1853, 0, 2883,
	0, 0, 0, 0, 0, 0, 0, 1836, 0, 0,
	0, 0, 0, 0, 0, 3099, 1836, 1836, 1836, 1836,
	1836, 1836, 1836, 1836, 1836, 1836, 1836, 1836, 1836, 1836,
	1836, 1836, 1836, 1836, 1836, 1836, 1836, 1836, 1836, 1836,
	1836, 1836, 1836, 1836, 1836, 1836, 1836, 1836, 1836, 1836,
	1836, 1836, 1829, 0, 0, 0, 0, 1836, 0, 1836,
	1836, 1836, 1836, 0, 0, 0, 0, 0, 0, 0,
	0, 2716, 2716, 0, 0, 1824, 0, 0, 0, 1489,
	0, 0, 0, 0, 0, 0, 1836, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1489, 0, 0, 0, 0, 0, 0, 1339,
	0, 2982, 0, 0, 0, 0, 0, 1489, 0, 0,
	0, 0, 2998, 0, 1855, 0, 0, 1836, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1489, 2997, 2987, 2985, 2989, 2991, 2981, 2983,
	2999, 0, 0, 3001, 0, 0, 0, 1836, 0, 0,
	1836, 2993, 2995, 1836, 0, 0, 1836, 0, 0, 0,
	0, 0, 1836, 1836, 1836, 1836, 1836, 1836, 1836, 0,
	1103, 0, 0, 4332, 0, 4334, 4335, 0, 0, 0,
	0, 0, 0, 0, 1103, 3005, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1820, 1816, 0, 1813, 1811, 1812, 1804, 1805, 1806,
	1807, 1809, 1810, 0, 0, 2386, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1836, 0,
	0, 3327, 0, 2716, 2716, 2716, 2716, 0, 0, 0,
	1836, 0, 1836, 0, 0, 0, 0, 1836, 0, 0,
	2411, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4381, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1489,
	0, 0, 0, 0, 2449, 0, 2453, 0, 0, 0,
	0, 0, 0, 2467, 0, 0, 0, 0, 0, 3000,
	2476, 2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485,
	2486, 2487, 2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495,
	2496, 2497, 2498, 2499, 2500, 2501, 2502, 2503, 2504, 2505,
	2506, 2507, 2508, 2509, 2510, 2511, 0, 2517, 0, 2519,
	2520, 2521, 2522, 0, 1489, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2546, 3006, 0, 4467, 0,
	0, 0, 0, 0, 0, 2992, 2994, 1877, 0, 0,
	0, 2597, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2627, 2630, 2633,
	2636, 0, 0, 2642, 2643, 2644, 2645, 2646, 2647, 2648,
	0, 0, 0, 0, 0, 0, 1800, 1801, 0, 1833,
	1834, 1835, 1844, 1845, 1846, 0, 0, 0, 0, 0,
	0, 2708, 0, 2720, 2722, 2727, 0, 0, 0, 1831,
	0, 0, 0, 0, 0, 0, 1803, 0, 0, 0,
	0, 0, 0, 0, 0, 1850, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1856, 0, 0, 0, 0, 0, 0, 0,
	0, 1802, 0, 0, 0, 0, 0, 0, 0, 0,
	1489, 1822, 0, 1489, 0, 0, 0, 0, 0, 0,
	1819, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 73,
	0, 0, 0, 0, 0, 1800, 1801, 1836, 1836, 0,
	1836, 0, 0, 0, 0, 0, 74, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1831, 1489,
	0, 0, 78, 0, 0, 1803, 0, 1825, 1826, 1827,
	1828, 0, 0, 0, 0, 0, 1489, 1808, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1264, 0, 0,
	0, 1856, 0, 0, 0, 0, 0, 0, 0, 0,
	1802, 0, 87, 0, 0, 0, 0, 0, 0, 0,
	1822, 0, 0, 1339, 1339, 1841, 0, 0, 1851, 1819,
	0, 0, 0, 0, 0, 1830, 1832, 0, 0, 0,
	1339, 0, 0, 1264, 0, 0, 0, 1264, 0, 0,
	0, 0, 0, 898, 1264, 0, 0, 0, 0, 0,
	0, 1817, 1818, 0, 0, 0, 0, 0, 107, 0,
	0, 0, 0, 93, 104, 0, 0, 0, 0, 1839,
	1836, 0, 0, 0, 0, 3726, 0, 0, 1264, 0,
	0, 0, 0, 0, 1823, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1825, 1826, 1827, 1828,
	0, 0, 0, 0, 1264, 0, 1808, 0, 0, 0,
	1489, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 94, 0, 1264, 1836, 1836, 0, 2716, 2716,
	0, 1264, 1836, 0, 0, 0, 3027, 3028, 0, 3030,
	0, 0, 3327, 3327, 0, 1264, 1836, 1836, 0, 0,
	0, 0, 0, 0, 1830, 1832, 1836, 0, 0, 0,
	1853, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1836, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1817, 1818, 1836, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1823, 0, 1829, 0, 0, 2716, 2716,
	2716, 2716, 2716, 2716, 2716, 2716, 2716, 2716, 2716, 2716,
	2716, 2716, 2716, 2716, 2716, 2716, 2716, 2716, 1824, 2716,
	3327, 3327, 3327, 3327, 0, 0, 0, 1800, 1801, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1842, 0, 0, 0, 0,
	1831, 97, 0, 0, 3160, 1836, 0, 1803, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1853,
	0, 0, 0, 0, 0, 0, 0, 1855, 0, 0,
	0, 0, 0, 1856, 0, 0, 0, 0, 0, 0,
	0, 0, 1802, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1822, 0, 0, 0, 187, 100, 0, 0,
	103, 1819, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1857, 1858, 1829, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 899, 0, 0, 1824, 0, 150,
	1840, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1814, 1815, 1821, 1843, 1820, 1816, 0, 1813, 1811, 1812,
	1804, 1805, 1806, 1807, 1809, 1810, 0, 1836, 3215, 3216,
	0, 0, 0, 0, 3222, 238, 1489, 0, 1825, 1826,
	1827, 1828, 0, 0, 0, 0, 0, 0, 1808, 0,
	0, 0, 0, 3236, 3237, 0, 1855, 0, 0, 2597,
	0, 154, 1489, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 191, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1830, 1832, 230, 0,
	0, 0, 0, 0, 3246, 0, 0, 231, 0, 1264,
	0, 1264, 0, 0, 0, 0, 0, 0, 0, 0,
	3260, 0, 1817, 1818, 0, 0, 1264, 0, 0, 0,
	0, 0, 0, 0, 190, 0, 0, 3272, 0, 0,
	0, 0, 0, 1820, 1816, 2032, 1813, 1811, 1812, 1804,
	1805, 1806, 1807, 1809, 1810, 1823, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1489, 0, 1489, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1489, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1264, 0, 0, 0,
	0, 1853, 0, 0, 0, 0, 0, 0, 0, 2727,
	2727, 2727, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1264, 1949, 0, 0, 0, 0, 0,
	0, 0, 3365, 0, 1836, 1836, 0, 0, 1836, 3327,
	3327, 1836, 0, 0, 1489, 1836, 0, 0, 0, 0,
	0, 0, 1836, 0, 0, 0, 1829, 0, 0, 0,
	1489, 0, 0, 0, 0, 1836, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1824,
	0, 0, 0, 0, 0, 0, 0, 0, 1836, 1836,
	1836, 1836, 1836, 0, 0, 0, 0, 0, 1836, 0,
	1836, 0, 0, 3327, 3327, 3327, 3327, 3327, 3327, 3327,
	3327, 3327, 3327, 3327, 3327, 3327, 3327, 3327, 3327, 3327,
	3327, 3327, 3327, 0, 0, 0, 3327, 0, 0, 1836,
	1836, 1489, 0, 0, 0, 0, 0, 1088, 1855, 0,
	0, 1836, 0, 0, 0, 0, 0, 0, 0, 0,
	1836, 1088, 0, 0, 1264, 1264, 0, 0, 0, 0,
	0, 0, 0, 0, 1264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3487, 0, 0, 1489, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1836, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1836,
	0, 0, 0, 0, 0, 0, 0, 1489, 0, 0,
	0, 0, 0, 0, 0, 1820, 1816, 0, 1813, 1811,
	1812, 1804, 1805, 1806, 1807, 1809, 1810, 0, 1836, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1489, 1264,
	0, 1264, 0, 1264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1264,
	1264, 0, 0, 1489, 0, 0, 0, 0, 0, 0,
	1264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1264, 0, 1264, 1264, 1264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1103, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1836,
	0, 1489, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1836, 1836,
	0, 0, 0, 1836, 1836, 0, 0, 1836, 1836, 0,
	0, 0, 1836, 1489, 0, 0, 1836, 0, 0, 0,
	0, 1836, 0, 0, 0, 0, 0, 0, 0, 0,
	1137, 2032, 2032, 1264, 0, 0, 2716, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 267, 267, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2716, 2467, 0, 0, 0, 0, 0, 3724,
	3725, 0, 0, 3728, 0, 830, 0, 3731, 0, 0,
	0, 0, 0, 0, 0, 0, 3735, 0, 0, 0,
	0, 0, 0, 0, 0, 3742, 1264, 0, 0, 0,
	3365, 830, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3755, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3778, 3779, 0, 3780, 3781,
	3782, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3788, 0, 0, 1264,
	3790, 1103, 1103, 0, 0, 0, 1264, 0, 0, 0,
	0, 0, 0, 0, 0, 1264, 0, 0, 0, 0,
	0, 0, 1800, 1801, 0, 1833, 1834, 1835, 1844, 1845,
	1846, 0, 1264, 3819, 3820, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1837, 1831, 0, 0, 0, 0,
	0, 3831, 1803, 0, 0, 0, 0, 0, 0, 0,
	0, 1850, 0, 0, 0, 0, 3840, 0, 0, 1836,
	1836, 1836, 0, 0, 0, 0, 0, 0, 1856, 1260,
	1836, 1836, 3327, 2716, 0, 0, 0, 1802, 0, 1836,
	0, 0, 1836, 0, 0, 0, 0, 1822, 0, 0,
	0, 0, 0, 0, 0, 0, 1819, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1103, 0,
	0, 0, 3327, 2716, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1264, 1264, 0, 0, 0, 0, 1836,
	0, 0, 0, 0, 0, 0, 3888, 1836, 2716, 0,
	0, 0, 0, 0, 0, 1836, 0, 0, 0, 0,
	0, 0, 0, 0, 1836, 3899, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1264, 0, 0,
	0, 0, 0, 1825, 1826, 1827, 1828, 0, 0, 0,
	0, 0, 0, 1808, 0, 0, 0, 0, 0, 3928,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2032, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1841, 0, 0, 1851, 0, 0, 0, 0, 0,
	0, 1830, 1832, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1264, 0, 0, 0, 1847, 0,
	1848, 0, 0, 0, 0, 0, 0, 1817, 1818, 3327,
	1264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1839, 0, 0, 0, 0,
	1836, 3327, 0, 0, 1836, 0, 0, 0, 1800, 1801,
	1823, 1833, 1834, 1835, 1844, 1845, 1846, 0, 0, 0,
	0, 0, 0, 3327, 0, 0, 0, 0, 0, 1264,
	1837, 1831, 0, 0, 0, 0, 0, 0, 1803, 0,
	0, 0, 1949, 0, 0, 0, 0, 1850, 0, 0,
	0, 4039, 0, 0, 0, 0, 1849, 0, 0, 0,
	1264, 1836, 0, 0, 1856, 0, 0, 0, 0, 0,
	0, 0, 0, 1802, 1264, 1838, 1264, 0, 0, 0,
	0, 0, 0, 1822, 0, 0, 1853, 0, 0, 0,
	0, 1264, 1819, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4088, 4089, 0, 0, 0, 0, 4093, 4094,
	0, 1829, 0, 4097, 4098, 0, 0, 0, 0, 0,
	0, 4102, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4106, 0, 1824, 747, 0, 0, 0, 1825,
	1826, 1827, 1828, 0, 0, 0, 0, 0, 4111, 1808,
	0, 0, 1836, 0, 0, 730, 0, 0, 0, 0,
	731, 1842, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1836, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1841, 0, 0,
	1851, 0, 0, 1855, 0, 0, 0, 1830, 1832, 732,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	733, 0, 0, 0, 1847, 0, 1848, 0, 0, 0,
	0, 0, 0, 1817, 1818, 0, 0, 0, 0, 0,
	0, 734, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1839, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 753, 0, 0, 1823, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1840, 0, 0, 267,
	0, 267, 267, 0, 735, 267, 1814, 1815, 1821, 1843,
	1820, 1816, 0, 1813, 1811, 1812, 1804, 1805, 1806, 1807,
	1809, 1810, 0, 0, 0, 0, 4118, 0, 736, 0,
	4117, 0, 1849, 0, 0, 0, 0, 0, 0, 0,
	1836, 0, 0, 0, 1836, 0, 0, 0, 0, 0,
	737, 1838, 267, 738, 267, 267, 0, 0, 267, 267,
	0, 0, 1853, 0, 0, 0, 0, 0, 0, 0,
	762, 0, 0, 0, 0, 0, 0, 830, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 752, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1829, 0, 0,
	0, 0, 0, 0, 0, 0, 267, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1824, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 267, 267, 749, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1842, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1264, 1264, 0, 0, 0, 0, 4349, 4350, 4351, 1855,
	0, 0, 0, 0, 0, 0, 1264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2467,
	0, 0, 4360, 4361, 1264, 0, 759, 0, 740, 0,
	0, 0, 0, 0, 0, 0, 1264, 0, 0, 1264,
	4369, 4372, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 0, 760, 0, 741,
	2032, 0, 0, 0, 1264, 0, 0, 0, 0, 0,
	0, 0, 1840, 0, 0, 0, 0, 267, 0, 0,
	1264, 0, 1814, 1815, 1821, 1843, 1820, 1816, 0, 1813,
	1811, 1812, 1804, 1805, 1806, 1807, 1809, 1810, 0, 761,
	0, 4419, 3281, 0, 0, 0, 3282, 742, 0, 0,
	4427, 0, 757, 758, 755, 0, 0, 0, 0, 0,
	750, 0, 0, 743, 4435, 0, 1264, 1088, 0, 0,
	0, 2032, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4444, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1264, 744, 0, 751, 0,
	0, 0, 0, 0, 0, 0, 0, 745, 0, 0,
	0, 0, 0, 0, 1800, 1801, 0, 1264, 0, 1264,
	0, 746, 0, 0, 0, 0, 754, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1831, 0, 0,
	763, 1264, 0, 0, 1803, 0, 0, 0, 0, 0,
	0, 748, 1264, 0, 0, 0, 1264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1856, 0, 0, 0, 0, 0, 0, 0, 0, 1802,
	0, 0, 0, 0, 0, 0, 1264, 0, 0, 1822,
	0, 0, 0, 0, 0, 0, 0, 0, 1819, 0,
	1264, 0, 1264, 0, 0, 0, 1264, 0, 0, 0,
	0, 0, 0, 0, 1264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1264, 0, 0, 0, 1971,
	0, 1260, 0, 0, 0, 267, 0, 4570, 0, 0,
	1264, 4574, 0, 1126, 109, 0, 0, 0, 0, 0,
	0, 267, 1971, 267, 3221, 0, 0, 1264, 0, 830,
	0, 0, 0, 0, 0, 0, 830, 0, 0, 0,
	0, 0, 0, 0, 0, 1825, 1826, 1827, 1828, 0,
	0, 0, 1264, 1264, 0, 1808, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 0, 0, 0, 0,
	267, 0, 0, 0, 0, 0, 0, 1264, 0, 0,
	0, 0, 1800, 1801, 0, 0, 0, 0, 1088, 1088,
	0, 0, 0, 0, 0, 0, 0, 0, 4631, 0,
	0, 0, 0, 1830, 1832, 1831, 0, 109, 0, 0,
	0, 0, 1803, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1264, 0, 0, 1264, 0, 0, 0, 1817,
	1818, 0, 0, 0, 0, 0, 0, 0, 1856, 0,
	0, 0, 0, 0, 0, 0, 0, 1802, 0, 0,
	0, 0, 2467, 0, 0, 0, 0, 1822, 0, 0,
	0, 4372, 1823, 0, 0, 0, 1819, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2032, 0, 0, 0, 747, 0, 0, 0,
	0, 0, 0, 1063, 0, 0, 0, 0, 0, 0,
	0, 1264, 0, 0, 1083, 1088, 730, 0, 0, 0,
	0, 731, 0, 0, 0, 0, 0, 0, 1264, 0,
	0, 0, 3214, 0, 0, 0, 0, 0, 2032, 2032,
	0, 0, 0, 0, 0, 0, 0, 0, 1853, 0,
	0, 0, 0, 1825, 1826, 1827, 1828, 0, 0, 0,
	732, 0, 1247, 1808, 0, 0, 0, 2032, 2032, 0,
	0, 733, 0, 0, 0, 4752, 4752, 4752, 0, 0,
	0, 0, 267, 0, 0, 0, 830, 0, 0, 0,
	0, 0, 734, 0, 0, 0, 0, 0, 0, 0,
	2032, 0, 0, 1829, 0, 0, 0, 0, 4775, 0,
	0, 1830, 1832, 0, 753, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1824, 1264, 1264, 0,
	0, 0, 0, 0, 0, 735, 0, 1817, 1818, 0,
	267, 0, 0, 0, 267, 0, 0, 0, 0, 0,
	267, 0, 0, 0, 0, 0, 267, 0, 0, 736,
	0, 0, 1264, 0, 0, 4752, 0, 0, 0, 0,
	1823, 0, 267, 0, 267, 0, 0, 0, 0, 0,
	267, 737, 0, 0, 738, 1855, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 762, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 267, 0, 752, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 267, 1853, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 830, 267,
	0, 267, 0, 267, 0, 267, 0, 267, 0, 0,
	0, 0, 1820, 1816, 0, 1813, 1811, 1812, 1804, 1805,
	1806, 1807, 1809, 1810, 0, 749, 0, 0, 0, 0,
	0, 1150, 0, 0, 0, 0, 4752, 4910, 0, 0,
	0, 1829, 0, 0, 0, 4914, 0, 0, 0, 267,
	267, 267, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1824, 0, 0, 1264, 0, 0,
	1264, 0, 0, 0, 0, 1264, 0, 269, 269, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 740,
	2032, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1855, 0, 0, 0, 0, 760, 0,
	741, 1264, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1264, 1264, 1264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	761, 0, 0, 1264, 1264, 1264, 0, 0, 742, 0,
	0, 0, 0, 757, 758, 755, 0, 0, 0, 0,
	0, 750, 1264, 0, 743, 0, 0, 0, 1264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1820, 1816, 0, 1813, 1811, 1812, 1804, 1805, 1806, 1807,
	1809, 1810, 0, 0, 1264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2032, 0, 744, 0, 751,
	0, 0, 0, 0, 0, 0, 0, 0, 745, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1260,
	0, 0, 746, 0, 0, 0, 0, 754, 0, 0,
	0, 0, 0, 0, 0, 1260, 0, 0, 0, 0,
	0, 763, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 748, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 109, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1264, 0, 0, 0, 0, 0,
	0, 0, 1264, 0, 0, 0, 1264, 0, 1264, 0,
	0, 0, 0, 0, 0, 1264, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1264, 1264, 0, 0,
	0, 267, 0, 0, 267, 0, 1264, 0, 267, 0,
	267, 0, 0, 0, 0, 0, 0, 267, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 267, 0, 0,
	0, 1264, 109, 1264, 109, 0, 109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1264, 0, 1264, 0,
	0, 1264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1264, 0, 0, 267, 0, 1083, 109, 109,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 109, 0, 109, 0, 0, 0, 0,
	0, 267, 0, 0, 0, 109, 0, 109, 0, 0,
	0, 1264, 1264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1264, 0, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1264, 0, 0, 0, 0, 1264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 830, 0, 0, 0,
	0, 0, 109, 1264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1264, 1264, 1264, 1264, 0,
	0, 0, 0, 0, 0, 267, 0, 830, 0, 1264,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2032, 0, 0, 0, 0, 0, 0, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1063,
	1264, 0, 1264, 0, 0, 0, 267, 0, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	1870, 0, 0, 0, 0, 1264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1876, 0,
	0, 0, 1882, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2032, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	267, 267, 267, 0, 0, 0, 0, 0, 267, 0,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1264, 0, 0, 0, 0, 0, 0,
	1264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1264, 1264, 267, 0, 0, 0, 0, 0, 0, 0,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 269, 269, 0, 0, 269, 0, 1348, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1264, 0, 0, 1264, 0,
	0, 0, 1969, 0, 1972, 0, 109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1264, 1264, 0, 0,
	0, 0, 0, 269, 1348, 269, 269, 0, 1348, 269,
	269, 0, 0, 0, 0, 1348, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 2032, 0, 0, 0, 0,
	0, 0, 0, 0, 848, 0, 0, 0, 0, 1348,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 850, 0, 0, 0, 0, 851,
	0, 0, 0, 0, 0, 1348, 0, 269, 269, 0,
	0, 0, 0, 0, 0, 0, 1264, 0, 0, 0,
	0, 0, 0, 0, 0, 1348, 0, 0, 0, 0,
	0, 1264, 1348, 269, 269, 0, 0, 0, 852, 0,
	869, 0, 0, 0, 0, 0, 1348, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 853, 0, 0, 0, 0,
	854, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 878, 0, 0, 0, 0, 0, 1264, 855,
	0, 1264, 1348, 0, 0, 1264, 0, 0, 0, 0,
	0, 0, 0, 876, 0, 1264, 1264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1264, 0, 269, 0, 0, 849, 0, 0,
	1260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1260, 0, 269, 856,
	0, 0, 857, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1253, 0, 880, 0, 0, 0, 0, 762,
	0, 0, 0, 0, 0, 0, 1971, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 263,
	697, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 0,
	267, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 879, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 874, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1083, 0, 1083, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 267, 267, 0, 0, 267, 0, 0, 0,
	0, 0, 0, 1971, 0, 0, 858, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 860, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 861, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 109, 0, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 870, 1348, 0, 0,
	0, 0, 269, 269, 269, 1264, 0, 1264, 761, 0,
	269, 0, 0, 0, 0, 267, 0, 269, 0, 0,
	0, 847, 0, 871, 0, 0, 0, 0, 0, 0,
	0, 0, 862, 830, 0, 0, 0, 0, 0, 0,
	0, 0, 267, 0, 269, 0, 267, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 1063, 0, 868, 1063,
	1063, 0, 0, 0, 0, 0, 0, 267, 0, 0,
	0, 0, 0, 0, 0, 863, 0, 1260, 0, 864,
	883, 0, 882, 0, 0, 0, 865, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1348, 0, 0,
	866, 0, 0, 0, 0, 875, 0, 0, 0, 0,
	267, 884, 0, 881, 0, 2535, 0, 0, 0, 763,
	0, 0, 0, 0, 1348, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1083, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1876, 0, 0, 0, 1876,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 0, 267, 1800, 1801, 0,
	1833, 1834, 1835, 1844, 1845, 1846, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1837,
	1831, 0, 0, 0, 0, 0, 0, 1803, 0, 0,
	0, 0, 267, 0, 0, 0, 1850, 0, 0, 0,
	0, 0, 1247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1856, 0, 0, 0, 0, 1972, 0,
	0, 0, 1802, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1822, 269, 0, 1348, 1348, 269, 0, 0,
	0, 1819, 0, 0, 0, 1348, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1825, 1826,
	1827, 1828, 0, 269, 0, 269, 0, 0, 1808, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	1348, 0, 1348, 0, 1348, 0, 0, 1260, 1260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1348, 1348, 0, 0, 0, 0, 1841, 0, 0, 1851,
	0, 1348, 269, 0, 0, 269, 1830, 1832, 0, 0,
	0, 0, 0, 1348, 0, 1348, 1348, 1348, 0, 0,
	0, 0, 0, 1847, 0, 1848, 269, 0, 0, 0,
	0, 0, 1817, 1818, 0, 0, 0, 0, 0, 269,
	269, 0, 269, 0, 269, 0, 269, 0, 269, 0,
	1839, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1823, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 269, 269, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1849, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 109, 0, 0, 109, 0, 109, 0,
	1838, 1311, 0, 1311, 1311, 0, 0, 0, 0, 0,
	0, 1853, 0, 0, 1348, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 109, 0, 0, 109, 0, 0, 0,
	0, 0, 109, 0, 1401, 0, 267, 0, 0, 0,
	1506, 0, 0, 0, 0, 0, 1829, 0, 0, 0,
	0, 0, 0, 0, 0, 267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 267, 0, 0, 0, 1824,
	0, 0, 0, 0, 0, 267, 0, 0, 0, 0,
	267, 0, 0, 0, 0, 267, 0, 1348, 0, 0,
	0, 0, 0, 0, 0, 0, 1842, 0, 0, 0,
	0, 0, 0, 0, 0, 1260, 0, 109, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1855, 0,
	0, 0, 0, 0, 1634, 1635, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 267, 1348, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 1348, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 1840, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1814, 1815, 1821, 1843, 1820, 1816, 0, 1813, 1811,
	1812, 1804, 1805, 1806, 1807, 1809, 1810, 0, 0, 0,
	0, 4674, 0, 0, 0, 1747, 0, 0, 0, 0,
	2535, 0, 0, 0, 273, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1876, 269, 0, 0, 269, 0, 0, 0, 269,
	0, 269, 0, 0, 0, 0, 0, 0, 269, 269,
	0, 0, 0, 0, 1348, 1348, 0, 0, 269, 0,
	0, 0, 0, 0, 1260, 0, 0, 0, 0, 0,
	0, 0, 1260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1971, 0, 0, 0, 822,
	0, 0, 0, 0, 0, 0, 0, 0, 1348, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 822, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 1971, 0, 1971, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 267, 0, 269, 1348, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1348, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1247, 0, 0, 269, 0, 269, 0,
	1348, 0, 0, 0, 267, 269, 0, 0, 0, 1247,
	0, 0, 0, 0, 267, 0, 0, 1987, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1348, 0, 1998, 0, 1506, 0, 0, 0, 0,
	0, 0, 0, 1971, 0, 1348, 0, 1348, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 1348, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1311, 0, 269, 0, 269,
	0, 0, 1506, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1142, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 269, 269, 269, 0, 0, 0, 0, 0, 269,
	0, 0, 269, 0, 0, 0, 109, 109, 0, 109,
	109, 109, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 267, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 109, 109, 0,
	109, 109, 109, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1971, 1971, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1247, 0, 0, 1083, 0, 267, 267, 0, 0, 0,
	0, 0, 2268, 0, 0, 0, 2275, 109, 109, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2300, 0, 2300, 0, 0, 0,
	0, 0, 2307, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1971, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1971, 0, 2275, 0, 0, 2334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 0, 2354, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2370, 1348, 2372, 0, 2374, 0, 2376, 0, 2377,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1971, 0,
	267, 1971, 0, 0, 0, 1348, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1348, 2404, 2405, 2406, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1346, 0, 0, 0, 1348, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1348, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 269, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1407, 0, 0,
	0, 1407, 0, 267, 0, 0, 0, 0, 1346, 0,
	0, 0, 269, 0, 0, 0, 0, 1348, 0, 0,
	0, 0, 109, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1247, 1247, 1346, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 269, 269, 0, 1348, 269, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 1346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1348, 269,
	1348, 0, 0, 0, 0, 0, 0, 0, 1346, 0,
	0, 0, 0, 0, 0, 1346, 0, 0, 0, 0,
	0, 0, 1348, 0, 0, 0, 0, 0, 0, 1346,
	0, 0, 0, 1348, 0, 0, 0, 1348, 0, 0,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1348, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 1348, 0, 1348, 0, 1346, 0, 1348, 0, 0,
	0, 2784, 0, 0, 269, 1348, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 1348, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1348, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 1971, 0, 1971, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1348, 1348, 0, 0, 0, 0, 0,
	0, 269, 0, 2832, 0, 0, 1311, 0, 0, 0,
	1311, 0, 1311, 0, 0, 0, 0, 0, 1348, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 109, 0, 0, 0, 0, 0, 1347, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1348, 0, 269, 1348, 269, 1247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1800, 1801, 0, 1833, 1834,
	1835, 1844, 1845, 1846, 1408, 0, 0, 0, 1408, 0,
	0, 0, 0, 269, 0, 1347, 0, 1837, 1831, 0,
	0, 0, 0, 0, 0, 1803, 109, 0, 0, 0,
	0, 0, 0, 0, 1850, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1347,
	0, 1856, 1348, 0, 0, 1506, 0, 0, 0, 0,
	1802, 0, 0, 0, 0, 0, 0, 0, 0, 1348,
	1822, 0, 0, 0, 0, 1347, 0, 0, 0, 1819,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1347, 0, 0, 0, 0,
	0, 0, 1347, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1347, 2275, 0, 0,
	1407, 0, 0, 0, 0, 0, 2288, 0, 0, 0,
	0, 0, 0, 822, 0, 0, 0, 0, 0, 0,
	822, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1825, 1826, 1827, 1828,
	0, 109, 0, 0, 0, 0, 1808, 1247, 0, 0,
	0, 0, 1347, 0, 0, 1247, 0, 0, 0, 3132,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3143, 0,
	3146, 0, 0, 1348, 1841, 0, 0, 1851, 0, 0,
	0, 0, 0, 0, 1830, 1832, 0, 0, 0, 0,
	1346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1847, 0, 1848, 0, 0, 0, 0, 0, 0,
	1817, 1818, 0, 0, 0, 0, 0, 1407, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1839, 0,
	0, 3176, 1506, 3178, 1506, 0, 0, 0, 0, 0,
	3184, 0, 0, 1823, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1311, 0, 0, 0, 0, 0,
	0, 0, 3212, 0, 0, 0, 0, 0, 0, 1849,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 109, 0, 0, 0, 0, 1838, 0,
	0, 0, 0, 0, 0, 0, 109, 0, 0, 1853,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1348, 109,
	0, 1348, 0, 0, 0, 0, 1348, 269, 1346, 1346,
	0, 0, 0, 0, 0, 0, 0, 0, 1407, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 1829, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 269, 1824, 0, 0,
	0, 0, 1348, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1842, 0, 0, 1348, 1348, 1348,
	0, 0, 0, 0, 0, 0, 0, 1408, 0, 0,
	0, 0, 0, 0, 1348, 1348, 1348, 0, 0, 0,
	0, 0, 0, 1346, 0, 1346, 1855, 1346, 0, 0,
	0, 0, 0, 1348, 0, 0, 0, 269, 0, 1348,
	0, 0, 0, 1346, 1346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1348, 1346, 0, 1346, 1346,
	1346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 822, 0, 0, 0, 0, 0, 0, 1840,
	0, 0, 0, 0, 0, 0, 0, 1347, 0, 1814,
	1815, 1821, 1843, 1820, 1816, 0, 1813, 1811, 1812, 1804,
	1805, 1806, 1807, 1809, 1810, 0, 0, 0, 0, 2593,
	0, 0, 0, 2594, 1408, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1348, 0, 1348,
	0, 2535, 0, 0, 0, 0, 0, 1407, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1348, 1348, 0,
	0, 0, 0, 0, 0, 0, 0, 1348, 1311, 0,
	0, 0, 1506, 1506, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3456, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 1347, 1347, 1348, 0, 0,
	0, 0, 0, 0, 0, 1408, 0, 1348, 0, 1348,
	269, 0, 1348, 269, 0, 0, 0, 0, 0, 0,
	1407, 0, 0, 1348, 3506, 3508, 0, 0, 2288, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1348, 1348, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 109, 0, 0, 0, 0, 0,
	0, 0, 1348, 0, 0, 269, 0, 0, 0, 0,
	1407, 0, 0, 0, 1348, 269, 0, 0, 109, 1348,
	1347, 0, 1347, 0, 1347, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1407, 0, 0, 0,
	1347, 1347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1347, 0, 0, 0, 0, 1348, 1348, 1348, 1348,
	0, 0, 0, 1347, 0, 1347, 1347, 1347, 0, 0,
	1348, 0, 0, 0, 3606, 0, 0, 0, 3610, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1348, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1346, 1346, 0,
	0, 1348, 3663, 1348, 0, 0, 0, 0, 0, 0,
	109, 0, 0, 0, 0, 0, 109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1348, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 1407, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1408, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3709, 0, 1506, 0,
	0, 0, 0, 0, 0, 0, 0, 1800, 1801, 0,
	1833, 1834, 1835, 1844, 1845, 1846, 0, 0, 0, 0,
	0, 0, 0, 0, 1348, 0, 0, 0, 0, 1837,
	1831, 1348, 269, 0, 3722, 0, 0, 1803, 0, 0,
	0, 1348, 1348, 0, 0, 0, 1850, 0, 1407, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1856, 1346, 0, 0, 0, 0, 0,
	0, 0, 1802, 0, 0, 0, 0, 1408, 0, 0,
	0, 0, 1822, 0, 0, 0, 1348, 0, 0, 1348,
	0, 1819, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 822, 0, 1346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1346, 0, 0, 1408, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1346, 0,
	1346, 0, 0, 0, 0, 0, 0, 0, 1825, 1826,
	1827, 1828, 0, 1408, 0, 1346, 0, 0, 1808, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1841, 0, 0, 1851,
	0, 0, 0, 0, 0, 0, 1830, 1832, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 1847, 0, 1848, 0, 0, 0, 0,
	0, 0, 1817, 1818, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1839, 0, 0, 0, 1347, 1347, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 1823, 1348, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1348, 1348, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1348, 0, 0, 0, 0, 1408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1849, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1838, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1853, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1408, 0, 0, 2288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1347, 0, 0, 0, 0, 1829, 2288, 0, 0,
	269, 0, 0, 0, 0, 0, 0, 4003, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1824,
	0, 0, 2288, 0, 0, 0, 0, 4021, 1800, 1801,
	0, 1833, 1834, 1835, 1844, 1845, 1846, 0, 0, 0,
	1347, 0, 0, 0, 0, 0, 1842, 0, 0, 0,
	1837, 1831, 0, 0, 0, 0, 0, 0, 1803, 0,
	0, 0, 0, 0, 0, 0, 0, 1850, 0, 0,
	0, 1347, 0, 0, 0, 0, 0, 269, 1855, 0,
	0, 0, 0, 0, 1856, 1347, 0, 1347, 0, 0,
	0, 0, 0, 1802, 0, 0, 0, 0, 4073, 0,
	0, 0, 1347, 1822, 0, 0, 0, 0, 0, 0,
	0, 0, 1819, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1840, 0, 0, 0, 1407, 0, 0, 0, 0,
	0, 1814, 1815, 1821, 1843, 1820, 1816, 0, 1813, 1811,
	1812, 1804, 1805, 1806, 1807, 1809, 1810, 0, 0, 0,
	0, 0, 0, 0, 0, 4116, 0, 0, 1407, 1825,
	1826, 1827, 1828, 0, 0, 0, 0, 0, 0, 1808,
	0, 0, 0, 1407, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1407, 0,
	0, 0, 0, 0, 0, 0, 0, 1841, 0, 0,
	1851, 0, 0, 0, 1346, 0, 0, 1830, 1832, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1847, 0, 1848, 0, 0, 0,
	0, 0, 0, 1817, 1818, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1346, 1839, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1823, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4215, 0, 0, 0, 1346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1346, 1849, 1346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1838, 0, 0, 0, 1407, 0, 0, 0, 0,
	0, 0, 1853, 0, 0, 0, 1346, 0, 0, 0,
	1346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2288, 0, 0, 0,
	1346, 0, 0, 0, 0, 0, 4303, 0, 0, 0,
	0, 0, 0, 0, 1346, 0, 1346, 1829, 0, 0,
	1407, 0, 0, 0, 0, 0, 0, 822, 1346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1346,
	1824, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1842, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1408, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1346, 1346, 0, 1855,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1408, 0, 0, 0, 0,
	0, 1346, 0, 0, 0, 0, 0, 0, 0, 0,
	1408, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1408, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1407, 4404, 0, 1407,
	0, 1347, 1840, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1814, 1815, 1821, 1843, 1820, 1816, 0, 1813,
	1811, 1812, 1804, 1805, 1806, 1807, 1809, 1810, 0, 0,
	0, 0, 0, 0, 0, 0, 3740, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1407, 0, 1800, 1801, 0,
	1833, 1834, 1835, 1844, 1845, 1846, 1347, 0, 0, 0,
	0, 0, 1407, 0, 0, 0, 0, 0, 0, 1837,
	1831, 0, 0, 0, 0, 0, 0, 1803, 1347, 0,
	1347, 0, 0, 0, 0, 0, 1850, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1408, 1856, 0, 0, 0, 0, 0, 0,
	0, 0, 1802, 1347, 0, 0, 0, 1347, 0, 0,
	0, 0, 1822, 0, 0, 0, 0, 4539, 1506, 0,
	0, 1819, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1347, 0, 1347, 0, 0, 0, 1408, 0, 0,
	0, 0, 0, 0, 0, 1347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1347, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1407, 0, 0, 0,
	0, 1347, 0, 0, 0, 0, 0, 0, 1825, 1826,
	1827, 1828, 0, 0, 0, 0, 0, 0, 1808, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1347, 1347, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1841, 0, 0, 1851,
	0, 0, 0, 0, 0, 0, 1830, 1832, 1347, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4636, 1847, 0, 1848, 0, 0, 0, 0,
	0, 0, 1817, 1818, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1839, 0, 0, 1408, 0, 0, 1408, 0, 0, 0,
	0, 0, 0, 0, 0, 1823, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1346, 0, 0, 1346, 0, 0, 0, 0, 1346,
	0, 1849, 0, 0, 0, 4690, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1838, 0, 1408, 0, 0, 0, 0, 0, 0, 0,
	0, 1853, 0, 0, 0, 0, 0, 0, 0, 1408,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4729, 0, 0, 0, 1346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1346, 1346, 1346, 0, 0, 0, 1829, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1346, 1346, 1346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1824,
	0, 0, 0, 0, 0, 0, 1346, 0, 0, 0,
	0, 0, 1407, 0, 0, 0, 0, 0, 4795, 0,
	0, 0, 0, 0, 0, 0, 1842, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1407, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1855, 0,
	0, 0, 0, 1408, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1840, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1814, 1815, 1821, 1843, 1820, 1816, 0, 1813, 1811,
	1812, 1804, 1805, 1806, 1807, 1809, 1810, 0, 0, 0,
	1407, 0, 1407, 0, 0, 3284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1346, 1346, 0, 0, 0, 0, 0, 0, 0, 0,
	1407, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1800, 1801, 0, 1833, 1834, 1835, 1844, 1845, 1846, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1837, 1831, 0, 0, 0, 0, 1347, 0,
	1803, 1347, 0, 0, 0, 0, 1347, 0, 0, 1850,
	1346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1407, 0, 1346, 0, 0, 1346, 1856, 0, 0, 0,
	0, 0, 0, 0, 0, 1802, 1407, 0, 0, 0,
	0, 0, 0, 0, 0, 1822, 0, 0, 0, 0,
	0, 0, 0, 0, 1819, 0, 0, 0, 0, 0,
	0, 0, 1347, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1346, 1346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1347, 1347, 1347,
	0, 0, 0, 0, 0, 1346, 0, 0, 0, 0,
	0, 0, 0, 0, 1347, 1347, 1347, 1407, 0, 0,
	0, 0, 1346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1347, 0, 0, 0, 0, 0, 1408,
	0, 1825, 1826, 1827, 1828, 0, 0, 0, 0, 0,
	0, 1808, 0, 0, 0, 0, 0, 0, 0, 1346,
	1346, 1346, 1346, 0, 0, 1408, 0, 0, 0, 0,
	0, 0, 0, 1407, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1841,
	0, 0, 1851, 0, 0, 0, 0, 0, 0, 1830,
	1832, 0, 0, 1407, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1847, 0, 1848, 0,
	0, 0, 0, 0, 0, 1817, 1818, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1839, 1407, 0, 1346, 1800, 1801, 0,
	1833, 1834, 1835, 1844, 1845, 1846, 0, 0, 1823, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1407,
	1831, 0, 0, 0, 0, 0, 0, 1803, 0, 0,
	0, 0, 0, 0, 0, 0, 1850, 1408, 0, 1408,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1856, 1849, 0, 0, 1347, 1347, 0,
	0, 0, 1802, 0, 0, 0, 0, 1408, 0, 0,
	0, 0, 1822, 1838, 0, 0, 0, 0, 0, 0,
	0, 1819, 0, 0, 1853, 0, 0, 1407, 0, 0,
	0, 0, 0, 0, 1346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1346, 1346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1408, 0, 1347,
	0, 0, 1347, 0, 0, 0, 0, 0, 0, 1829,
	0, 0, 0, 1408, 0, 0, 0, 0, 0, 1407,
	0, 0, 1346, 0, 0, 0, 0, 0, 1825, 1826,
	1827, 1828, 1824, 0, 0, 0, 0, 0, 1808, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1347, 1347, 0, 0, 0, 0, 0, 1842,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1347, 0, 0, 0, 1841, 0, 0, 1851,
	0, 0, 0, 0, 1408, 0, 1830, 1832, 0, 1347,
	0, 1855, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1847, 0, 1848, 0, 0, 0, 0,
	0, 0, 1817, 1818, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1347, 1347, 1347, 1347,
	1839, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1408, 0, 0, 0, 0, 1823, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1840, 0, 0, 0, 0, 0,
	1408, 0, 0, 0, 1814, 1815, 1821, 1843, 1820, 1816,
	0, 1813, 1811, 1812, 1804, 1805, 1806, 1807, 1809, 1810,
	0, 1849, 0, 0, 0, 0, 0, 0, 3283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1408, 0, 1347, 0, 0, 0, 0, 0, 1346,
	0, 1853, 0, 0, 0, 0, 0, 0, 0, 1346,
	1346, 0, 0, 0, 0, 0, 1408, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1829, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1824,
	0, 0, 0, 0, 1408, 0, 0, 0, 0, 0,
	0, 1347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1347, 1347, 0, 0, 0, 1842, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1855, 0,
	0, 0, 0, 0, 0, 0, 1408, 0, 0, 1347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1840, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1814, 1815, 1821, 1843, 1820, 1816, 0, 1813, 1811,
	1812, 1804, 1805, 1806, 1807, 1809, 1810, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1405, 0, 0, 1347, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1347, 1347, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 1410, 284, 285,
	1411, 1412, 1413, 1347, 1414, 643, 1415, 1416, 1417, 1418,
	286, 287, 1204, 288, 289, 290, 291, 292, 293, 644,
	645, 0, 294, 646, 295, 647, 1419, 648, 296, 297,
	298, 299, 300, 301, 1420, 1421, 0, 302, 649, 650,
	651, 1422, 303, 304, 652, 1423, 1349, 1424, 305, 306,
	307, 308, 309, 310, 311, 0, 1425, 313, 314, 315,
	312, 316, 1426, 317, 0, 318, 319, 320, 321, 322,
	323, 1427, 324, 325, 326, 1205, 327, 328, 329, 1428,
	1429, 1431, 1430, 1432, 1433, 1434, 330, 331, 332, 333,
	334, 0, 335, 337, 653, 654, 1435, 340, 336, 338,
	1436, 341, 339, 342, 1437, 343, 344, 345, 1438, 1439,
	346, 347, 348, 1440, 349, 350, 351, 1441, 352, 353,
	354, 1442, 355, 356, 655, 357, 358, 359, 361, 363,
	360, 364, 365, 366, 367, 656, 657, 368, 1443, 274,
	1444, 0, 0, 0, 0, 369, 370, 371, 658, 0,
	0, 0, 372, 1445, 373, 374, 1446, 1447, 1206, 375,
	376, 377, 659, 660, 378, 379, 380, 381, 382, 383,
	384, 385, 386, 1448, 387, 661, 1449, 662, 388, 1450,
	389, 390, 391, 392, 393, 663, 664, 665, 479, 1208,
	394, 395, 1451, 396, 397, 398, 399, 400, 0, 0,
	0, 275, 401, 402, 403, 405, 1452, 1207, 404, 666,
	667, 1453, 668, 1454, 406, 407, 1209, 669, 1210, 408,
	409, 410, 1211, 411, 0, 0, 0, 412, 413, 414,
	415, 416, 417, 1455, 418, 420, 419, 1456, 421, 670,
	1212, 422, 423, 1213, 1457, 424, 425, 426, 427, 428,
	429, 432, 1458, 1459, 430, 431, 433, 434, 0, 435,
	436, 438, 441, 437, 439, 440, 442, 455, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	457, 0, 456, 1214, 458, 459, 460, 467, 469, 470,
	465, 466, 468, 471, 472, 462, 463, 474, 464, 1215,
	473, 461, 1460, 276, 1216, 475, 476, 477, 1461, 671,
	478, 672, 480, 481, 1462, 0, 482, 0, 1463, 1464,
	484, 485, 486, 1465, 1466, 487, 488, 673, 1217, 489,
	1218, 674, 490, 491, 483, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 1467, 501, 502, 675, 503, 504,
	505, 676, 506, 507, 508, 677, 509, 678, 510, 511,
	1468, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	520, 679, 521, 522, 524, 523, 525, 1469, 526, 0,
	527, 528, 529, 0, 0, 0, 0, 0, 530, 0,
	532, 533, 534, 535, 531, 536, 537, 538, 539, 540,
	1470, 541, 542, 543, 1219, 544, 545, 546, 547, 548,
	680, 549, 0, 550, 551, 557, 558, 559, 552, 553,
	560, 561, 562, 563, 564, 1471, 566, 567, 565, 568,
	569, 570, 1472, 571, 572, 554, 555, 573, 574, 1220,
	575, 576, 577, 578, 579, 580, 581, 681, 0, 582,
	1473, 583, 584, 585, 586, 588, 556, 589, 594, 595,
	682, 590, 591, 592, 593, 683, 597, 598, 1474, 599,
	600, 0, 596, 587, 1475, 601, 602, 603, 604, 605,
	606, 607, 362, 608, 1476, 609, 684, 685, 686, 687,
	1477, 618, 1478, 610, 611, 612, 688, 613, 689, 1479,
	614, 615, 616, 617, 0, 619, 620, 1480, 1481, 621,
	622, 623, 625, 626, 624, 627, 1482, 628, 1483, 0,
	629, 630, 631, 690, 691, 692, 1484, 633, 632, 634,
	635, 693, 636, 637, 1485, 1486, 1487, 1488, 638, 639,
	694, 640, 641, 642, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1405, 0, 0, 0, 0, 0, 0,
	0, 2762, 0, 0, 0, 0, 0, 0, 0, 2763,
	277, 279, 278, 280, 281, 282, 283, 1410, 284, 285,
	1411, 1412, 1413, 0, 1414, 643, 1415, 1416, 1417, 1418,
	286, 287, 1204, 288, 289, 290, 291, 292, 293, 644,
	645, 0, 294, 646, 295, 647, 1419, 648, 296, 297,
	298, 299, 300, 301, 1420, 1421, 0, 302, 649, 650,
	651, 1422, 303, 304, 652, 1423, 1349, 1424, 305, 306,
	307, 308, 309, 310, 311, 0, 1425, 313, 314, 315,
	312, 316, 1426, 317, 0, 318, 319, 320, 321, 322,
	323, 1427, 324, 325, 326, 1205, 327, 328, 329, 1428,
	1429, 1431, 1430, 1432, 1433, 1434, 330, 331, 332, 333,
	334, 0, 335, 337, 653, 654, 1435, 340, 336, 338,
	1436, 341, 339, 342, 1437, 343, 344, 345, 1438, 1439,
	346, 347, 348, 1440, 349, 350, 351, 1441, 352, 353,
	354, 1442, 355, 356, 655, 357, 358, 359, 361, 363,
	360, 364, 365, 366, 367, 656, 657, 368, 1443, 274,
	1444, 0, 0, 0, 0, 369, 370, 371, 658, 0,
	0, 0, 372, 1445, 373, 374, 1446, 1447, 1206, 375,
	376, 377, 659, 660, 378, 379, 380, 381, 382, 383,
	384, 385, 386, 1448, 387, 661, 1449, 662, 388, 1450,
	389, 390, 391, 392, 393, 663, 664, 665, 479, 1208,
	394, 395, 1451, 396, 397, 398, 399, 400, 0, 0,
	0, 275, 401, 402, 403, 405, 1452, 1207, 404, 666,
	667, 1453, 668, 1454, 406, 407, 1209, 669, 1210, 408,
	409, 410, 1211, 411, 0, 0, 0, 412, 413, 414,
	415, 416, 417, 1455, 418, 420, 419, 1456, 421, 670,
	1212, 422, 423, 1213, 1457, 424, 425, 426, 427, 428,
	429, 432, 1458, 1459, 430, 431, 433, 434, 0, 435,
	436, 438, 441, 437, 439, 440, 442, 455, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	457, 0, 456, 1214, 458, 459, 460, 467, 469, 470,
	465, 466, 468, 471, 472, 462, 463, 474, 464, 1215,
	473, 461, 1460, 276, 1216, 475, 476, 477, 1461, 671,
	478, 672, 480, 481, 1462, 0, 482, 0, 1463, 1464,
	484, 485, 486, 1465, 1466, 487, 488, 673, 1217, 489,
	1218, 674, 490, 491, 483, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 1467, 501, 502, 675, 503, 504,
	505, 676, 506, 507, 508, 677, 509, 678, 510, 511,
	1468, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	520, 679, 521, 522, 524, 523, 525, 1469, 526, 0,
	527, 528, 529, 0, 0, 0, 0, 0, 530, 0,
	532, 533, 534, 535, 531, 536, 537, 538, 539, 540,
	1470, 541, 542, 543, 1219, 544, 545, 546, 547, 548,
	680, 549, 0, 550, 551, 557, 558, 559, 552, 553,
	560, 561, 562, 563, 564, 1471, 566, 567, 565, 568,
	569, 570, 1472, 571, 572, 554, 555, 573, 574, 1220,
	575, 576, 577, 578, 579, 580, 581, 681, 0, 582,
	1473, 583, 584, 585, 586, 588, 556, 589, 594, 595,
	682, 590, 591, 592, 593, 683, 597, 598, 1474, 599,
	600, 0, 596, 587, 1475, 601, 602, 603, 604, 605,
	606, 607, 362, 608, 1476, 609, 684, 685, 686, 687,
	1477, 618, 1478, 610, 611, 612, 688, 613, 689, 1479,
	614, 615, 616, 617, 0, 619, 620, 1480, 1481, 621,
	622, 623, 625, 626, 624, 627, 1482, 628, 1483, 0,
	629, 630, 631, 690, 691, 692, 1484, 633, 632, 634,
	635, 693, 636, 637, 1485, 1486, 1487, 1488, 638, 639,
	694, 640, 641, 642, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1405, 0, 0, 0, 0, 3749, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3751, 277, 279,
	278, 280, 281, 282, 283, 1410, 284, 285, 1411, 1412,
	1413, 0, 1414, 643, 1415, 1416, 1417, 1418, 286, 287,
	1204, 288, 289, 290, 291, 292, 293, 644, 645, 0,
	294, 646, 295, 647, 1419, 648, 296, 297, 298, 299,
	300, 301, 1420, 1421, 0, 302, 649, 650, 651, 1422,
	303, 304, 652, 1423, 1349, 1424, 305, 306, 307, 308,
	309, 310, 311, 0, 1425, 313, 314, 315, 312, 316,
	1426, 317, 0, 318, 319, 320, 321, 322, 323, 1427,
	324, 325, 326, 1205, 327, 328, 329, 1428, 1429, 1431,
	1430, 1432, 1433, 1434, 330, 331, 332, 333, 334, 0,
	335, 337, 653, 654, 1435, 340, 336, 338, 1436, 341,
	339, 342, 1437, 343, 344, 345, 1438, 1439, 346, 347,
	348, 1440, 349, 350, 351, 1441, 352, 353, 354, 1442,
	355, 356, 655, 357, 358, 359, 361, 363, 360, 364,
	365, 366, 367, 656, 657, 368, 1443, 274, 1444, 0,
	0, 0, 0, 369, 370, 371, 658, 0, 0, 0,
	372, 1445, 373, 374, 1446, 1447, 1206, 375, 376, 377,
	659, 660, 378, 379, 380, 381, 382, 383, 384, 385,
	386, 1448, 387, 661, 1449, 662, 388, 1450, 389, 390,
	391, 392, 393, 663, 664, 665, 479, 1208, 394, 395,
	1451, 396, 397, 398, 399, 400, 0, 0, 0, 275,
	401, 402, 403, 405, 1452, 1207, 404, 666, 667, 1453,
	668, 1454, 406, 407, 1209, 669, 1210, 408, 409, 410,
	1211, 411, 0, 0, 0, 412, 413, 414, 415, 416,
	417, 1455, 418, 420, 419, 1456, 421, 670, 1212, 422,
	423, 1213, 1457, 424, 425, 426, 427, 428, 429, 432,
	1458, 1459, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 1214, 458, 459, 460, 467, 469, 470, 465, 466,
	468, 471, 472, 462, 463, 474, 464, 1215, 473, 461,
	1460, 276, 1216, 475, 476, 477, 1461, 671, 478, 672,
	480, 481, 1462, 0, 482, 0, 1463, 1464, 484, 485,
	486, 1465, 1466, 487, 488, 673, 1217, 489, 1218, 674,
	490, 491, 483, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 1467, 501, 502, 675, 503, 504, 505, 676,
	506, 507, 508, 677, 509, 678, 510, 511, 1468, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 520, 679,
	521, 522, 524, 523, 525, 1469, 526, 0, 527, 528,
	529, 0, 0, 0, 0, 0, 530, 0, 532, 533,
	534, 535, 531, 536, 537, 538, 539, 540, 1470, 541,
	542, 543, 1219, 544, 545, 546, 547, 548, 680, 549,
	0, 550, 551, 557, 558, 559, 552, 553, 560, 561,
	562, 563, 564, 1471, 566, 567, 565, 568, 569, 570,
	1472, 571, 572, 554, 555, 573, 574, 1220, 575, 576,
	577, 578, 579, 580, 581, 681, 0, 582, 1473, 583,
	584, 585, 586, 588, 556, 589, 594, 595, 682, 590,
	591, 592, 593, 683, 597, 598, 1474, 599, 600, 0,
	596, 587, 1475, 601, 602, 603, 604, 605, 606, 607,
	362, 608, 1476, 609, 684, 685, 686, 687, 1477, 618,
	1478, 610, 611, 612, 688, 613, 689, 1479, 614, 615,
	616, 617, 0, 619, 620, 1480, 1481, 621, 622, 623,
	625, 626, 624, 627, 1482, 628, 1483, 0, 629, 630,
	631, 690, 691, 692, 1484, 633, 632, 634, 635, 693,
	636, 637, 1485, 1486, 1487, 1488, 638, 639, 694, 640,
	641, 642, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1405, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4144,
	277, 279, 278, 280, 281, 282, 283, 1410, 284, 285,
	1411, 1412, 1413, 0, 1414, 643, 1415, 1416, 1417, 1418,
	286, 287, 1204, 288, 289, 290, 291, 292, 293, 644,
	645, 0, 294, 646, 295, 647, 1419, 648, 296, 297,
	298, 299, 300, 301, 1420, 1421, 0, 302, 649, 650,
	651, 1422, 303, 304, 652, 1423, 1349, 1424, 305, 306,
	307, 308, 309, 310, 311, 0, 1425, 313, 314, 315,
	312, 316, 1426, 317, 0, 318, 319, 320, 321, 322,
	323, 1427, 324, 325, 326, 1205, 327, 328, 329, 1428,
	1429, 1431, 1430, 1432, 1433, 1434, 330, 331, 332, 333,
	334, 0, 335, 337, 653, 654, 1435, 340, 336, 338,
	1436, 341, 339, 342, 1437, 343, 344, 345, 1438, 1439,
	346, 347, 348, 1440, 349, 350, 351, 1441, 352, 353,
	354, 1442, 355, 356, 655, 357, 358, 359, 361, 363,
	360, 364, 365, 366, 367, 656, 657, 368, 1443, 274,
	1444, 0, 0, 0, 0, 369, 370, 371, 658, 0,
	0, 0, 372, 1445, 373, 374, 1446, 1447, 1206, 375,
	376, 377, 659, 660, 378, 379, 380, 381, 382, 383,
	384, 385, 386, 1448, 387, 661, 1449, 662, 388, 1450,
	389, 390, 391, 392, 393, 663, 664, 665, 479, 1208,
	394, 395, 1451, 396, 397, 398, 399, 400, 0, 0,
	0, 275, 401, 402, 403, 405, 1452, 1207, 404, 666,
	667, 1453, 668, 1454, 406, 407, 1209, 669, 1210, 408,
	409, 410, 1211, 411, 0, 0, 0, 412, 413, 414,
	415, 416, 417, 1455, 418, 420, 419, 1456, 421, 670,
	1212, 422, 423, 1213, 1457, 424, 425, 426, 427, 428,
	429, 432, 1458, 1459, 430, 431, 433, 434, 0, 435,
	436, 438, 441, 437, 439, 440, 442, 455, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	457, 0, 456, 1214, 458, 459, 460, 467, 469, 470,
	465, 466, 468, 471, 472, 462, 463, 474, 464, 1215,
	473, 461, 1460, 276, 1216, 475, 476, 477, 1461, 671,
	478, 672, 480, 481, 1462, 0, 482, 0, 1463, 1464,
	484, 485, 486, 1465, 1466, 487, 488, 673, 1217, 489,
	1218, 674, 490, 491, 483, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 1467, 501, 502, 675, 503, 504,
	505, 676, 506, 507, 508, 677, 509, 678, 510, 511,
	1468, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	520, 679, 521, 522, 524, 523, 525, 1469, 526, 0,
	527, 528, 529, 0, 0, 0, 0, 0, 530, 0,
	532, 533, 534, 535, 531, 536, 537, 538, 539, 540,
	1470, 541, 542, 543, 1219, 544, 545, 546, 547, 548,
	680, 549, 0, 550, 551, 557, 558, 559, 552, 553,
	560, 561, 562, 563, 564, 1471, 566, 567, 565, 568,
	569, 570, 1472, 571, 572, 554, 555, 573, 574, 1220,
	575, 576, 577, 578, 579, 580, 581, 681, 0, 582,
	1473, 583, 584, 585, 586, 588, 556, 589, 594, 595,
	682, 590, 591, 592, 593, 683, 597, 598, 1474, 599,
	600, 0, 596, 587, 1475, 601, 602, 603, 604, 605,
	606, 607, 362, 608, 1476, 609, 684, 685, 686, 687,
	1477, 618, 1478, 610, 611, 612, 688, 613, 689, 1479,
	614, 615, 616, 617, 0, 619, 620, 1480, 1481, 621,
	622, 623, 625, 626, 624, 627, 1482, 628, 1483, 0,
	629, 630, 631, 690, 691, 692, 1484, 633, 632, 634,
	635, 693, 636, 637, 1485, 1486, 1487, 1488, 638, 639,
	694, 640, 641, 642, 0, 0, 0, 0, 0, 0,
	1405, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4355, 277, 279, 278,
	280, 281, 282, 283, 1410, 284, 285, 1411, 1412, 1413,
	0, 1414, 643, 1415, 1416, 1417, 1418, 286, 287, 1204,
	288, 289, 290, 291, 292, 293, 644, 645, 0, 294,
	646, 295, 647, 1419, 648, 296, 297, 298, 299, 300,
	301, 1420, 1421, 0, 302, 649, 650, 651, 1422, 303,
	304, 652, 1423, 1349, 1424, 305, 306, 307, 308, 309,
	310, 311, 0, 1425, 313, 314, 315, 312, 316, 1426,
	317, 0, 318, 319, 320, 321, 322, 323, 1427, 324,
	325, 326, 1205, 327, 328, 329, 1428, 1429, 1431, 1430,
	1432, 1433, 1434, 330, 331, 332, 333, 334, 0, 335,
	337, 653, 654, 1435, 340, 336, 338, 1436, 341, 339,
	342, 1437, 343, 344, 345, 1438, 1439, 346, 347, 348,
	1440, 349, 350, 351, 1441, 352, 353, 354, 1442, 355,
	356, 655, 357, 358, 359, 361, 363, 360, 364, 365,
	366, 367, 656, 657, 368, 1443, 274, 1444, 0, 0,
	0, 0, 369, 370, 371, 658, 0, 0, 0, 372,
	1445, 373, 374, 1446, 1447, 1206, 375, 376, 377, 659,
	660, 378, 379, 380, 381, 382, 383, 384, 385, 386,
	1448, 387, 661, 1449, 662, 388, 1450, 389, 390, 391,
	392, 393, 663, 664, 665, 479, 1208, 394, 395, 1451,
	396, 397, 398, 399, 400, 0, 0, 0, 275, 401,
	402, 403, 405, 1452, 1207, 404, 666, 667, 1453, 668,
	1454, 406, 407, 1209, 669, 1210, 408, 409, 410, 1211,
	411, 0, 0, 0, 412, 413, 414, 415, 416, 417,
	1455, 418, 420, 419, 1456, 421, 670, 1212, 422, 423,
	1213, 1457, 424, 425, 426, 427, 428, 429, 432, 1458,
	1459, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	1214, 458, 459, 460, 467, 469, 470, 465, 466, 468,
	471, 472, 462, 463, 474, 464, 1215, 473, 461, 1460,
	276, 1216, 475, 476, 477, 1461, 671, 478, 672, 480,
	481, 1462, 0, 482, 0, 1463, 1464, 484, 485, 486,
	1465, 1466, 487, 488, 673, 1217, 489, 1218, 674, 490,
	491, 483, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 1467, 501, 502, 675, 503, 504, 505, 676, 506,
	507, 508, 677, 509, 678, 510, 511, 1468, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 520, 679, 521,
	522, 524, 523, 525, 1469, 526, 0, 527, 528, 529,
	0, 0, 0, 0, 0, 530, 0, 532, 533, 534,
	535, 531, 536, 537, 538, 539, 540, 1470, 541, 542,
	543, 1219, 544, 545, 546, 547, 548, 680, 549, 0,
	550, 551, 557, 558, 559, 552, 553, 560, 561, 562,
	563, 564, 1471, 566, 567, 565, 568, 569, 570, 1472,
	571, 572, 554, 555, 573, 574, 1220, 575, 576, 577,
	578, 579, 580, 581, 681, 0, 582, 1473, 583, 584,
	585, 586, 588, 556, 589, 594, 595, 682, 590, 591,
	592, 593, 683, 597, 598, 1474, 599, 600, 0, 596,
	587, 1475, 601, 602, 603, 604, 605, 606, 607, 362,
	608, 1476, 609, 684, 685, 686, 687, 1477, 618, 1478,
	610, 611, 612, 688, 613, 689, 1479, 614, 615, 616,
	617, 0, 619, 620, 1480, 1481, 621, 622, 623, 625,
	626, 624, 627, 1482, 628, 1483, 0, 629, 630, 631,
	690, 691, 692, 1484, 633, 632, 634, 635, 693, 636,
	637, 1485, 1486, 1487, 1488, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 1405, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4224, 277, 279, 278, 280, 281, 282,
	283, 1410, 284, 285, 1411, 1412, 1413, 0, 1414, 643,
	1415, 1416, 1417, 1418, 286, 287, 1204, 288, 289, 290,
	291, 292, 293, 644, 645, 0, 294, 646, 295, 647,
	1419, 648, 296, 297, 298, 299, 300, 301, 1420, 1421,
	0, 302, 649, 650, 651, 1422, 303, 304, 652, 1423,
	1349, 1424, 305, 306, 307, 308, 309, 310, 311, 0,
	1425, 313, 314, 315, 312, 316, 1426, 317, 0, 318,
	319, 320, 321, 322, 323, 1427, 324, 325, 326, 1205,
	327, 328, 329, 1428, 1429, 1431, 1430, 1432, 1433, 1434,
	330, 331, 332, 333, 334, 0, 335, 337, 653, 654,
	1435, 340, 336, 338, 1436, 341, 339, 342, 1437, 343,
	344, 345, 1438, 1439, 346, 347, 348, 1440, 349, 350,
	351, 1441, 352, 353, 354, 1442, 355, 356, 655, 357,
	358, 359, 361, 363, 360, 364, 365, 366, 367, 656,
	657, 368, 1443, 274, 1444, 0, 0, 0, 0, 369,
	370, 371, 658, 0, 0, 0, 372, 1445, 373, 374,
	1446, 1447, 1206, 375, 376, 377, 659, 660, 378, 379,
	380, 381, 382, 383, 384, 385, 386, 1448, 387, 661,
	1449, 662, 388, 1450, 389, 390, 391, 392, 393, 663,
	664, 665, 479, 1208, 394, 395, 1451, 396, 397, 398,
	399, 400, 0, 0, 0, 275, 401, 402, 403, 405,
	1452, 1207, 404, 666, 667, 1453, 668, 1454, 406, 407,
	1209, 669, 1210, 408, 409, 410, 1211, 411, 0, 0,
	0, 412, 413, 414, 415, 416, 417, 1455, 418, 420,
	419, 1456, 421, 670, 1212, 422, 423, 1213, 1457, 424,
	425, 426, 427, 428, 429, 432, 1458, 1459, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 1214, 458, 459,
	460, 467, 469, 470, 465, 466, 468, 471, 472, 462,
	463, 474, 464, 1215, 473, 461, 1460, 276, 1216, 475,
	476, 477, 1461, 671, 478, 672, 480, 481, 1462, 0,
	482, 0, 1463, 1464, 484, 485, 486, 1465, 1466, 487,
	488, 673, 1217, 489, 1218, 674, 490, 491, 483, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 1467, 501,
	502, 675, 503, 504, 505, 676, 506, 507, 508, 677,
	509, 678, 510, 511, 1468, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 520, 679, 521, 522, 524, 523,
	525, 1469, 526, 0, 527, 528, 529, 0, 0, 0,
	0, 0, 530, 0, 532, 533, 534, 535, 531, 536,
	537, 538, 539, 540, 1470, 541, 542, 543, 1219, 544,
	545, 546, 547, 548, 680, 549, 0, 550, 551, 557,
	558, 559, 552, 553, 560, 561, 562, 563, 564, 1471,
	566, 567, 565, 568, 569, 570, 1472, 571, 572, 554,
	555, 573, 574, 1220, 575, 576, 577, 578, 579, 580,
	581, 681, 0, 582, 1473, 583, 584, 585, 586, 588,
	556, 589, 594, 595, 682, 590, 591, 592, 593, 683,
	597, 598, 1474, 599, 600, 0, 596, 587, 1475, 601,
	602, 603, 604, 605, 606, 607, 362, 608, 1476, 609,
	684, 685, 686, 687, 1477, 618, 1478, 610, 611, 612,
	688, 613, 689, 1479, 614, 615, 616, 617, 0, 619,
	620, 1480, 1481, 621, 622, 623, 625, 626, 624, 627,
	1482, 628, 1483, 0, 629, 630, 631, 690, 691, 692,
	1484, 633, 632, 634, 635, 693, 636, 637, 1485, 1486,
	1487, 1488, 638, 639, 694, 640, 641, 642, 0, 0,
	0, 0, 0, 0, 1405, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4074, 277, 279, 278, 280, 281, 282, 283, 1410, 284,
	285, 1411, 1412, 1413, 0, 1414, 643, 1415, 1416, 1417,
	1418, 286, 287, 1204, 288, 289, 290, 291, 292, 293,
	644, 645, 0, 294, 646, 295, 647, 1419, 648, 296,
	297, 298, 299, 300, 301, 1420, 1421, 0, 302, 649,
	650, 651, 1422, 303, 304, 652, 1423, 1349, 1424, 305,
	306, 307, 308, 309, 310, 311, 0, 1425, 313, 314,
	315, 312, 316, 1426, 317, 0, 318, 319, 320, 321,
	322, 323, 1427, 324, 325, 326, 1205, 327, 328, 329,
	1428, 1429, 1431, 1430, 1432, 1433, 1434, 330, 331, 332,
	333, 334, 0, 335, 337, 653, 654, 1435, 340, 336,
	338, 1436, 341, 339, 342, 1437, 343, 344, 345, 1438,
	1439, 346, 347, 348, 1440, 349, 350, 351, 1441, 352,
	353, 354, 1442, 355, 356, 655, 357, 358, 359, 361,
	363, 360, 364, 365, 366, 367, 656, 657, 368, 1443,
	274, 1444, 0, 0, 0, 0, 369, 370, 371, 658,
	0, 0, 0, 372, 1445, 373, 374, 1446, 1447, 1206,
	375, 376, 377, 659, 660, 378, 379, 380, 381, 382,
	383, 384, 385, 386, 1448, 387, 661, 1449, 662, 388,
	1450, 389, 390, 391, 392, 393, 663, 664, 665, 479,
	1208, 394, 395, 1451, 396, 397, 398, 399, 400, 0,
	0, 0, 275, 401, 402, 403, 405, 1452, 1207, 404,
	666, 667, 1453, 668, 1454, 406, 407, 1209, 669, 1210,
	408, 409, 410, 1211, 411, 0, 0, 0, 412, 413,
	414, 415, 416, 417, 1455, 418, 420, 419, 1456, 421,
	670, 1212, 422, 423, 1213, 1457, 424, 425, 426, 427,
	428, 429, 432, 1458, 1459, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 440, 442, 455, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 456, 1214, 458, 459, 460, 467, 469,
	470, 465, 466, 468, 471, 472, 462, 463, 474, 464,
	1215, 473, 461, 1460, 276, 1216, 475, 476, 477, 1461,
	671, 478, 672, 480, 481, 1462, 0, 482, 0, 1463,
	1464, 484, 485, 486, 1465, 1466, 487, 488, 673, 1217,
	489, 1218, 674, 490, 491, 483, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 1467, 501, 502, 675, 503,
	504, 505, 676, 506, 507, 508, 677, 509, 678, 510,
	511, 1468, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 520, 679, 521, 522, 524, 523, 525, 1469, 526,
	0, 527, 528, 529, 0, 0, 0, 0, 0, 530,
	0, 532, 533, 534, 535, 531, 536, 537, 538, 539,
	540, 1470, 541, 542, 543, 1219, 544, 545, 546, 547,
	548, 680, 549, 0, 550, 551, 557, 558, 559, 552,
	553, 560, 561, 562, 563, 564, 1471, 566, 567, 565,
	568, 569, 570, 1472, 571, 572, 554, 555, 573, 574,
	1220, 575, 576, 577, 578, 579, 580, 581, 681, 0,
	582, 1473, 583, 584, 585, 586, 588, 556, 589, 594,
	595, 682, 590, 591, 592, 593, 683, 597, 598, 1474,
	599, 600, 0, 596, 587, 1475, 601, 602, 603, 604,
	605, 606, 607, 362, 608, 1476, 609, 684, 685, 686,
	687, 1477, 618, 1478, 610, 611, 612, 688, 613, 689,
	1479, 614, 615, 616, 617, 0, 619, 620, 1480, 1481,
	621, 622, 623, 625, 626, 624, 627, 1482, 628, 1483,
	0, 629, 630, 631, 690, 691, 692, 1484, 633, 632,
	634, 635, 693, 636, 637, 1485, 1486, 1487, 1488, 638,
	639, 694, 640, 641, 642, 0, 0, 0, 0, 0,
	0, 1405, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3767, 277, 279,
	278, 280, 281, 282, 283, 1410, 284, 285, 1411, 1412,
	1413, 0, 1414, 643, 1415, 1416, 1417, 1418, 286, 287,
	1204, 288, 289, 290, 291, 292, 293, 644, 645, 0,
	294, 646, 295, 647, 1419, 648, 296, 297, 298, 299,
	300, 301, 1420, 1421, 0, 302, 649, 650, 651, 1422,
	303, 304, 652, 1423, 1349, 1424, 305, 306, 307, 308,
	309, 310, 311, 0, 1425, 313, 314, 315, 312, 316,
	1426, 317, 0, 318, 319, 320, 321, 322, 323, 1427,
	324, 325, 326, 1205, 327, 328, 329, 1428, 1429, 1431,
	1430, 1432, 1433, 1434, 330, 331, 332, 333, 334, 0,
	335, 337, 653, 654, 1435, 340, 336, 338, 1436, 341,
	339, 342, 1437, 343, 344, 345, 1438, 1439, 346, 347,
	348, 1440, 349, 350, 351, 1441, 352, 353, 354, 1442,
	355, 356, 655, 357, 358, 359, 361, 363, 360, 364,
	365, 366, 367, 656, 657, 368, 1443, 274, 1444, 0,
	0, 0, 0, 369, 370, 371, 658, 0, 0, 0,
	372, 1445, 373, 374, 1446, 1447, 1206, 375, 376, 377,
	659, 660, 378, 379, 380, 381, 382, 383, 384, 385,
	386, 1448, 387, 661, 1449, 662, 388, 1450, 389, 390,
	391, 392, 393, 663, 664, 665, 479, 1208, 394, 395,
	1451, 396, 397, 398, 399, 400, 0, 0, 0, 275,
	401, 402, 403, 405, 1452, 1207, 404, 666, 667, 1453,
	668, 1454, 406, 407, 1209, 669, 1210, 408, 409, 410,
	1211, 411, 0, 0, 0, 412, 413, 414, 415, 416,
	417, 1455, 418, 420, 419, 1456, 421, 670, 1212, 422,
	423, 1213, 1457, 424, 425, 426, 427, 428, 429, 432,
	1458, 1459, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 1214, 458, 459, 460, 467, 469, 470, 465, 466,
	468, 471, 472, 462, 463, 474, 464, 1215, 473, 461,
	1460, 276, 1216, 475, 476, 477, 1461, 671, 478, 672,
	480, 481, 1462, 0, 482, 0, 1463, 1464, 484, 485,
	486, 1465, 1466, 487, 488, 673, 1217, 489, 1218, 674,
	490, 491, 483, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 1467, 501, 502, 675, 503, 504, 505, 676,
	506, 507, 508, 677, 509, 678, 510, 511, 1468, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 520, 679,
	521, 522, 524, 523, 525, 1469, 526, 0, 527, 528,
	529, 0, 0, 0, 0, 0, 530, 0, 532, 533,
	534, 535, 531, 536, 537, 538, 539, 540, 1470, 541,
	542, 543, 1219, 544, 545, 546, 547, 548, 680, 549,
	0, 550, 551, 557, 558, 559, 552, 553, 560, 561,
	562, 563, 564, 1471, 566, 567, 565, 568, 569, 570,
	1472, 571, 572, 554, 555, 573, 574, 1220, 575, 576,
	577, 578, 579, 580, 581, 681, 0, 582, 1473, 583,
	584, 585, 586, 588, 556, 589, 594, 595, 682, 590,
	591, 592, 593, 683, 597, 598, 1474, 599, 600, 0,
	596, 587, 1475, 601, 602, 603, 604, 605, 606, 607,
	362, 608, 1476, 609, 684, 685, 686, 687, 1477, 618,
	1478, 610, 611, 612, 688, 613, 689, 1479, 614, 615,
	616, 617, 0, 619, 620, 1480, 1481, 621, 622, 623,
	625, 626, 624, 627, 1482, 628, 1483, 0, 629, 630,
	631, 690, 691, 692, 1484, 633, 632, 634, 635, 693,
	636, 637, 1485, 1486, 1487, 1488, 638, 639, 694, 640,
	641, 642, 0, 0, 0, 0, 0, 0, 1405, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3590, 277, 279, 278, 280, 281,
	282, 283, 1410, 284, 285, 1411, 1412, 1413, 0, 1414,
	643, 1415, 1416, 1417, 1418, 286, 287, 1204, 288, 289,
	290, 291, 292, 293, 644, 645, 0, 294, 646, 295,
	647, 1419, 648, 296, 297, 298, 299, 300, 301, 1420,
	1421, 0, 302, 649, 650, 651, 1422, 303, 304, 652,
	1423, 1349, 1424, 305, 306, 307, 308, 309, 310, 311,
	0, 1425, 313, 314, 315, 312, 316, 1426, 317, 0,
	318, 319, 320, 321, 322, 323, 1427, 324, 325, 326,
	1205, 327, 328, 329, 1428, 1429, 1431, 1430, 1432, 1433,
	1434, 330, 331, 332, 333, 334, 0, 335, 337, 653,
	654, 1435, 340, 336, 338, 1436, 341, 339, 342, 1437,
	343, 344, 345, 1438, 1439, 346, 347, 348, 1440, 349,
	350, 351, 1441, 352, 353, 354, 1442, 355, 356, 655,
	357, 358, 359, 361, 363, 360, 364, 365, 366, 367,
	656, 657, 368, 1443, 274, 1444, 0, 0, 0, 0,
	369, 370, 371, 658, 0, 0, 0, 372, 1445, 373,
	374, 1446, 1447, 1206, 375, 376, 377, 659, 660, 378,
	379, 380, 381, 382, 383, 384, 385, 386, 1448, 387,
	661, 1449, 662, 388, 1450, 389, 390, 391, 392, 393,
	663, 664, 665, 479, 1208, 394, 395, 1451, 396, 397,
	398, 399, 400, 0, 0, 0, 275, 401, 402, 403,
	405, 1452, 1207, 404, 666, 667, 1453, 668, 1454, 406,
	407, 1209, 669, 1210, 408, 409, 410, 1211, 411, 0,
	0, 0, 412, 413, 414, 415, 416, 417, 1455, 418,
	420, 419, 1456, 421, 670, 1212, 422, 423, 1213, 1457,
	424, 425, 426, 427, 428, 429, 432, 1458, 1459, 430,
	431, 433, 434, 0, 435, 436, 438, 441, 437, 439,
	440, 442, 455, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 457, 0, 456, 1214, 458,
	459, 460, 467, 469, 470, 465, 466, 468, 471, 472,
	462, 463, 474, 464, 1215, 473, 461, 1460, 276, 1216,
	475, 476, 477, 1461, 671, 478, 672, 480, 481, 1462,
	0, 482, 0, 1463, 1464, 484, 485, 486, 1465, 1466,
	487, 488, 673, 1217, 489, 1218, 674, 490, 491, 483,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 1467,
	501, 502, 675, 503, 504, 505, 676, 506, 507, 508,
	677, 509, 678, 510, 511, 1468, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 520, 679, 521, 522, 524,
	523, 525, 1469, 526, 0, 527, 528, 529, 0, 0,
	0, 0, 0, 530, 0, 532, 533, 534, 535, 531,
	536, 537, 538, 539, 540, 1470, 541, 542, 543, 1219,
	544, 545, 546, 547, 548, 680, 549, 0, 550, 551,
	557, 558, 559, 552, 553, 560, 561, 562, 563, 564,
	1471, 566, 567, 565, 568, 569, 570, 1472, 571, 572,
	554, 555, 573, 574, 1220, 575, 576, 577, 578, 579,
	580, 581, 681, 0, 582, 1473, 583, 584, 585, 586,
	588, 556, 589, 594, 595, 682, 590, 591, 592, 593,
	683, 597, 598, 1474, 599, 600, 0, 596, 587, 1475,
	601, 602, 603, 604, 605, 606, 607, 362, 608, 1476,
	609, 684, 685, 686, 687, 1477, 618, 1478, 610, 611,
	612, 688, 613, 689, 1479, 614, 615, 616, 617, 0,
	619, 620, 1480, 1481, 621, 622, 623, 625, 626, 624,
	627, 1482, 628, 1483, 0, 629, 630, 631, 690, 691,
	692, 1484, 633, 632, 634, 635, 693, 636, 637, 1485,
	1486, 1487, 1488, 638, 639, 694, 640, 641, 642, 0,
	0, 0, 0, 0, 0, 1405, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2617, 277, 279, 278, 280, 281, 282, 283, 1410,
	284, 285, 1411, 1412, 1413, 0, 1414, 643, 1415, 1416,
	1417, 1418, 286, 287, 1204, 288, 289, 290, 291, 292,
	293, 644, 645, 0, 294, 646, 295, 647, 1419, 648,
	296, 297, 298, 299, 300, 301, 1420, 1421, 0, 302,
	649, 650, 651, 1422, 303, 304, 652, 1423, 1349, 1424,
	305, 306, 307, 308, 309, 310, 311, 0, 1425, 313,
	314, 315, 312, 316, 1426, 317, 0, 318, 319, 320,
	321, 322, 323, 1427, 324, 325, 326, 1205, 327, 328,
	329, 1428, 1429, 1431, 1430, 1432, 1433, 1434, 330, 331,
	332, 333, 334, 0, 335, 337, 653, 654, 1435, 340,
	336, 338, 1436, 341, 339, 342, 1437, 343, 344, 345,
	1438, 1439, 346, 347, 348, 1440, 349, 350, 351, 1441,
	352, 353, 354, 1442, 355, 356, 655, 357, 358, 359,
	361, 363, 360, 364, 365, 366, 367, 656, 657, 368,
	1443, 274, 1444, 0, 0, 0, 0, 369, 370, 371,
	658, 0, 0, 0, 372, 1445, 373, 374, 1446, 1447,
	1206, 375, 376, 377, 659, 660, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 1448, 387, 661, 1449, 662,
	388, 1450, 389, 390, 391, 392, 393, 663, 664, 665,
	479, 1208, 394, 395, 1451, 396, 397, 398, 399, 400,
	0, 0, 0, 275, 401, 402, 403, 405, 1452, 1207,
	404, 666, 667, 1453, 668, 1454, 406, 407, 1209, 669,
	1210, 408, 409, 410, 1211, 411, 0, 0, 0, 412,
	413, 414, 415, 416, 417, 1455, 418, 420, 419, 1456,
	421, 670, 1212, 422, 423, 1213, 1457, 424, 425, 426,
	427, 428, 429, 432, 1458, 1459, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 1214, 458, 459, 460, 467,
	469, 470, 465, 466, 468, 471, 472, 462, 463, 474,
	464, 1215, 473, 461, 1460, 276, 1216, 475, 476, 477,
	1461, 671, 478, 672, 480, 481, 1462, 0, 482, 0,
	1463, 1464, 484, 485, 486, 1465, 1466, 487, 488, 673,
	1217, 489, 1218, 674, 490, 491, 483, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 1467, 501, 502, 675,
	503, 504, 505, 676, 506, 507, 508, 677, 509, 678,
	510, 511, 1468, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 520, 679, 521, 522, 524, 523, 525, 1469,
	526, 0, 527, 528, 529, 0, 0, 0, 0, 0,
	530, 0, 532, 533, 534, 535, 531, 536, 537, 538,
	539, 540, 1470, 541, 542, 543, 1219, 544, 545, 546,
	547, 548, 680, 549, 0, 550, 551, 557, 558, 559,
	552, 553, 560, 561, 562, 563, 564, 1471, 566, 567,
	565, 568, 569, 570, 1472, 571, 572, 554, 555, 573,
	574, 1220, 575, 576, 577, 578, 579, 580, 581, 681,
	0, 582, 1473, 583, 584, 585, 586, 588, 556, 589,
	594, 595, 682, 590, 591, 592, 593, 683, 597, 598,
	1474, 599, 600, 0, 596, 587, 1475, 601, 602, 603,
	604, 605, 606, 607, 362, 608, 1476, 609, 684, 685,
	686, 687, 1477, 618, 1478, 610, 611, 612, 688, 613,
	689, 1479, 614, 615, 616, 617, 0, 619, 620, 1480,
	1481, 621, 622, 623, 625, 626, 624, 627, 1482, 628,
	1483, 0, 629, 630, 631, 690, 691, 692, 1484, 633,
	632, 634, 635, 693, 636, 637, 1485, 1486, 1487, 1488,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	1500, 0, 1405, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2248, 277,
	279, 278, 280, 281, 282, 283, 1410, 284, 285, 1411,
	1412, 1413, 0, 1414, 643, 1415, 1416, 1417, 1418, 286,
	287, 1204, 288, 289, 290, 291, 292, 293, 644, 645,
	0, 294, 646, 295, 647, 1419, 648, 296, 297, 298,
	299, 300, 301, 1420, 1421, 0, 302, 649, 650, 651,
	1422, 303, 304, 652, 1423, 1349, 1424, 305, 306, 307,
	308, 309, 310, 311, 0, 1425, 313, 314, 315, 312,
	316, 1426, 317, 0, 318, 319, 320, 321, 322, 323,
	1427, 324, 325, 326, 1205, 327, 328, 329, 1428, 1429,
	1431, 1430, 1432, 1433, 1434, 330, 331, 332, 333, 334,
	0, 335, 337, 653, 654, 1435, 340, 336, 338, 1436,
	341, 339, 342, 1437, 343, 344, 345, 1438, 1439, 346,
	347, 348, 1440, 349, 350, 351, 1441, 352, 353, 354,
	1442, 355, 356, 655, 357, 358, 359, 361, 363, 360,
	364, 365, 366, 367, 656, 657, 368, 1443, 274, 1444,
	0, 0, 0, 0, 369, 370, 371, 658, 0, 0,
	0, 372, 1445, 373, 374, 1446, 1447, 1206, 375, 376,
	377, 659, 660, 378, 379, 380, 381, 382, 383, 384,
	385, 386, 1448, 387, 661, 1449, 662, 388, 1450, 389,
	390, 391, 392, 393, 663, 664, 665, 479, 1208, 394,
	395, 1451, 396, 397, 398, 399, 400, 0, 0, 0,
	275, 401, 402, 403, 405, 1452, 1207, 404, 666, 667,
	1453, 668, 1454, 406, 407, 1209, 669, 1210, 408, 409,
	410, 1211, 411, 0, 0, 0, 412, 413, 414, 415,
	416, 417, 1455, 418, 420, 419, 1456, 421, 670, 1212,
	422, 423, 1213, 1457, 424, 425, 426, 427, 428, 429,
	432, 1458, 1459, 430, 431, 433, 434, 0, 435, 436,
	438, 441, 437, 439, 440, 442, 455, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 457,
	0, 456, 1214, 458, 459, 460, 467, 469, 470, 465,
	466, 468, 471, 472, 462, 463, 474, 464, 1215, 473,
	461, 1460, 276, 1216, 475, 476, 477, 1461, 671, 478,
	672, 480, 481, 1462, 0, 482, 0, 1463, 1464, 484,
	485, 486, 1465, 1466, 487, 488, 673, 1217, 489, 1218,
	674, 490, 491, 483, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 1467, 501, 502, 675, 503, 504, 505,
	676, 506, 507, 508, 677, 509, 678, 510, 511, 1468,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 520,
	679, 521, 522, 524, 523, 525, 1469, 526, 0, 527,
	528, 529, 0, 0, 0, 0, 0, 530, 0, 532,
	533, 534, 535, 531, 536, 537, 538, 539, 540, 1470,
	541, 542, 543, 1219, 544, 545, 546, 547, 548, 680,
	549, 0, 550, 551, 557, 558, 559, 552, 553, 560,
	561, 562, 563, 564, 1471, 566, 567, 565, 568, 569,
	570, 1472, 571, 572, 554, 555, 573, 574, 1220, 575,
	576, 577, 578, 579, 580, 581, 681, 0, 582, 1473,
	583, 584, 585, 586, 588, 556, 589, 594, 595, 682,
	590, 591, 592, 593, 683, 597, 598, 1474, 599, 600,
	0, 596, 587, 1475, 601, 602, 603, 604, 605, 606,
	607, 362, 608, 1476, 609, 684, 685, 686, 687, 1477,
	618, 1478, 610, 611, 612, 688, 613, 689, 1479, 614,
	615, 616, 617, 0, 619, 620, 1480, 1481, 621, 622,
	623, 625, 626, 624, 627, 1482, 628, 1483, 0, 629,
	630, 631, 690, 691, 692, 1484, 633, 632, 634, 635,
	693, 636, 637, 1485, 1486, 1487, 1488, 638, 639, 694,
	640, 641, 642, 1402, 0, 1405, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 1410,
	284, 285, 1411, 1412, 1413, 0, 1414, 643, 1415, 1416,
	1417, 1418, 286, 287, 1204, 288, 289, 290, 291, 292,
	293, 644, 645, 0, 294, 646, 295, 647, 1419, 648,
	296, 297, 298, 299, 300, 301, 1420, 1421, 0, 302,
	649, 650, 651, 1422, 303, 304, 652, 1423, 1349, 1424,
	305, 306, 307, 308, 309, 310, 311, 0, 1425, 313,
	314, 315, 312, 316, 1426, 317, 0, 318, 319, 320,
	321, 322, 323, 1427, 324, 325, 326, 1205, 327, 328,
	329, 1428, 1429, 1431, 1430, 1432, 1433, 1434, 330, 331,
	332, 333, 334, 0, 335, 337, 653, 654, 1435, 340,
	336, 338, 1436, 341, 339, 342, 1437, 343, 344, 345,
	1438, 1439, 346, 347, 348, 1440, 349, 350, 351, 1441,
	352, 353, 354, 1442, 355, 356, 655, 357, 358, 359,
	361, 363, 360, 364, 365, 366, 367, 656, 657, 368,
	1443, 274, 1444, 0, 0, 0, 0, 369, 370, 371,
	658, 0, 0, 0, 372, 1445, 373, 374, 1446, 1447,
	1206, 375, 376, 377, 659, 660, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 1448, 387, 661, 1449, 662,
	388, 1450, 389, 390, 391, 392, 393, 663, 664, 665,
	479, 1208, 394, 395, 1451, 396, 397, 398, 399, 400,
	0, 0, 0, 275, 401, 402, 403, 405, 1452, 1207,
	404, 666, 667, 1453, 668, 1454, 406, 407, 1209, 669,
	1210, 408, 409, 410, 1211, 411, 0, 0, 0, 412,
	413, 414, 415, 416, 417, 1455, 418, 420, 419, 1456,
	421, 670, 1212, 422, 423, 1213, 1457, 424, 425, 426,
	427, 428, 429, 432, 1458, 1459, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 1214, 458, 459, 460, 467,
	469, 470, 465, 466, 468, 471, 472, 462, 463, 474,
	464, 1215, 473, 461, 1460, 276, 1216, 475, 476, 477,
	1461, 671, 478, 672, 480, 481, 1462, 0, 482, 0,
	1463, 1464, 484, 485, 486, 1465, 1466, 487, 488, 673,
	1217, 489, 1218, 674, 490, 491, 483, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 1467, 501, 502, 675,
	503, 504, 505, 676, 506, 507, 508, 677, 509, 678,
	510, 511, 1468, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 520, 679, 521, 522, 524, 523, 525, 1469,
	526, 0, 527, 528, 529, 0, 0, 0, 0, 0,
	530, 0, 532, 533, 534, 535, 531, 536, 537, 538,
	539, 540, 1470, 541, 542, 543, 1219, 544, 545, 546,
	547, 548, 680, 549, 0, 550, 551, 557, 558, 559,
	552, 553, 560, 561, 562, 563, 564, 1471, 566, 567,
	565, 568, 569, 570, 1472, 571, 572, 554, 555, 573,
	574, 1220, 575, 576, 577, 578, 579, 580, 581, 681,
	0, 582, 1473, 583, 584, 585, 586, 588, 556, 589,
	594, 595, 682, 590, 591, 592, 593, 683, 597, 598,
	1474, 599, 600, 0, 596, 587, 1475, 601, 602, 603,
	604, 605, 606, 607, 362, 608, 1476, 609, 684, 685,
	686, 687, 1477, 618, 1478, 610, 611, 612, 688, 613,
	689, 1479, 614, 615, 616, 617, 0, 619, 620, 1480,
	1481, 621, 622, 623, 625, 626, 624, 627, 1482, 628,
	1483, 0, 629, 630, 631, 690, 691, 692, 1484, 633,
	632, 634, 635, 693, 636, 637, 1485, 1486, 1487, 1488,
	638, 639, 694, 640, 641, 642, 1405, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	1410, 284, 285, 1411, 1412, 1413, 0, 1414, 643, 1415,
	1416, 1417, 1418, 286, 287, 1204, 288, 289, 290, 291,
	292, 293, 644, 645, 0, 294, 646, 295, 647, 1419,
	648, 296, 297, 298, 299, 300, 301, 1420, 1421, 0,
	302, 649, 650, 651, 1422, 303, 304, 652, 1423, 1349,
	1424, 305, 306, 307, 308, 309, 310, 311, 0, 1425,
	313, 314, 315, 312, 316, 1426, 317, 0, 318, 319,
	320, 321, 322, 323, 1427, 324, 325, 326, 1205, 327,
	328, 329, 1428, 1429, 1431, 1430, 1432, 1433, 1434, 330,
	331, 332, 333, 334, 0, 335, 337, 653, 654, 1435,
	340, 336, 338, 1436, 341, 339, 342, 1437, 343, 344,
	345, 1438, 1439, 346, 347, 348, 1440, 349, 350, 351,
	1441, 352, 353, 354, 1442, 355, 356, 655, 357, 358,
	359, 361, 363, 360, 364, 365, 366, 367, 656, 657,
	368, 1443, 274, 1444, 0, 0, 0, 0, 369, 370,
	371, 658, 0, 0, 0, 372, 1445, 373, 374, 1446,
	1447, 1206, 375, 376, 377, 659, 660, 378, 379, 380,
	381, 382, 383, 384, 385, 386, 1448, 387, 661, 1449,
	662, 388, 1450, 389, 390, 391, 392, 393, 663, 664,
	665, 479, 1208, 394, 395, 1451, 396, 397, 398, 399,
	400, 0, 0, 0, 275, 401, 402, 403, 405, 1452,
	1207, 404, 666, 667, 1453, 668, 1454, 406, 407, 1209,
	669, 1210, 408, 409, 410, 1211, 411, 0, 0, 0,
	412, 413, 414, 415, 416, 417, 1455, 418, 420, 419,
	1456, 421, 670, 1212, 422, 423, 1213, 1457, 424, 425,
	426, 427, 428, 429, 432, 1458, 1459, 430, 431, 433,
	434, 0, 435, 436, 438, 441, 437, 439, 440, 442,
	455, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 457, 0, 456, 1214, 458, 459, 460,
	467, 469, 470, 465, 466, 468, 471, 472, 462, 463,
	474, 464, 1215, 473, 461, 1460, 276, 1216, 475, 476,
	477, 1461, 671, 478, 672, 480, 481, 1462, 0, 482,
	0, 1463, 1464, 484, 485, 486, 1465, 1466, 487, 488,
	673, 1217, 489, 1218, 674, 490, 491, 483, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 1467, 501, 502,
	675, 503, 504, 505, 676, 506, 507, 508, 677, 509,
	678, 510, 511, 1468, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 520, 679, 521, 522, 524, 523, 525,
	1469, 526, 0, 527, 528, 529, 0, 0, 0, 0,
	0, 530, 0, 532, 533, 534, 535, 531, 536, 537,
	538, 539, 540, 1470, 541, 542, 543, 1219, 544, 545,
	546, 547, 548, 680, 549, 0, 550, 551, 557, 558,
	559, 552, 553, 560, 561, 562, 563, 564, 1471, 566,
	567, 565, 568, 569, 570, 1472, 571, 572, 554, 555,
	573, 574, 1220, 575, 576, 577, 578, 579, 580, 581,
	681, 0, 582, 1473, 583, 584, 585, 586, 588, 556,
	589, 594, 595, 682, 590, 591, 592, 593, 683, 597,
	598, 1474, 599, 600, 0, 596, 587, 1475, 601, 602,
	603, 604, 605, 606, 607, 362, 608, 1476, 609, 684,
	685, 686, 687, 1477, 618, 1478, 610, 611, 612, 688,
	613, 689, 1479, 614, 615, 616, 617, 0, 619, 620,
	1480, 1481, 621, 622, 623, 625, 626, 624, 627, 1482,
	628, 1483, 0, 629, 630, 631, 690, 691, 692, 1484,
	633, 632, 634, 635, 693, 636, 637, 1485, 1486, 1487,
	1488, 638, 639, 694, 640, 641, 642, 2592, 0, 1140,
	1112, 1113, 1114, 1110, 1111, 1123, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 277, 279, 278, 280,
	281, 282, 283, 2589, 284, 285, 0, 0, 0, 0,
	0, 1164, 1128, 0, 0, 0, 286, 287, 1204, 288,
	289, 290, 291, 292, 293, 644, 1177, 0, 294, 1184,
	295, 1183, 0, 1194, 296, 297, 298, 299, 300, 301,
	1130, 1163, 1095, 302, 1224, 1225, 651, 0, 303, 304,
	1170, 0, 1151, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 1205, 327, 328, 329, 1154, 1152, 1153, 1160, 1156,
	1155, 1159, 330, 331, 332, 333, 334, 1187, 335, 337,
	1181, 1180, 1100, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 2590, 0, 346, 1172, 348, 0,
	349, 350, 351, 0, 352, 353, 354, 0, 355, 356,
	1106, 357, 358, 359, 361, 363, 360, 364, 365, 366,
	367, 1195, 1196, 368, 1119, 274, 0, 0, 0, 0,
	0, 369, 370, 371, 1179, 0, 0, 0, 372, 0,
	373, 374, 0, 0, 1206, 375, 376, 377, 1192, 1193,
	378, 379, 380, 381, 382, 383, 384, 385, 386, 0,
	387, 1202, 0, 1129, 388, 0, 389, 390, 391, 392,
	393, 1165, 1166, 1169, 479, 1208, 394, 395, 0, 396,
	397, 398, 399, 400, 0, 0, 0, 275, 401, 402,
	403, 405, 0, 1207, 404, 1174, 1175, 0, 1135, 0,
	406, 407, 1209, 1167, 1210, 408, 409, 410, 1211, 411,
	0, 0, 0, 412, 413, 414, 415, 416, 417, 0,
	418, 420, 419, 0, 421, 1203, 1212, 422, 423, 1213,
	0, 424, 425, 426, 427, 428, 429, 432, 1158, 1157,
	430, 431, 433, 434, 0, 435, 436, 438, 441, 437,
	439, 440, 442, 455, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 457, 0, 456, 1214,
	458, 459, 460, 467, 469, 470, 465, 466, 468, 471,
	472, 462, 463, 474, 464, 1215, 473, 461, 1097, 276,
	1216, 475, 476, 477, 1120, 1168, 478, 1182, 480, 481,
	0, 0, 482, 0, 0, 0, 484, 485, 486, 0,
	0, 487, 488, 673, 1217, 489, 1218, 1197, 490, 491,
	1107, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	0, 501, 502, 675, 503, 504, 505, 676, 506, 507,
	508, 1198, 509, 678, 510, 511, 0, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 520, 1178, 521, 522,
	524, 523, 525, 0, 526, 0, 527, 528, 529, 0,
	0, 0, 0, 0, 530, 0, 532, 533, 534, 535,
	531, 536, 537, 538, 539, 540, 0, 541, 542, 543,
	1219, 544, 545, 546, 547, 548, 1108, 549, 0, 550,
	551, 557, 558, 559, 552, 553, 560, 561, 562, 563,
	564, 0, 566, 567, 565, 568, 569, 570, 1161, 571,
	572, 554, 555, 573, 574, 1220, 575, 576, 577, 578,
	579, 580, 581, 1176, 0, 582, 0, 583, 584, 585,
	586, 588, 556, 589, 594, 595, 1223, 590, 591, 592,
	593, 1199, 597, 598, 0, 599, 600, 1094, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 362, 608,
	0, 609, 1188, 1189, 1190, 1191, 0, 618, 0, 610,
	611, 612, 1200, 613, 1201, 1118, 614, 615, 616, 617,
	0, 619, 620, 0, 1101, 621, 622, 623, 625, 626,
	624, 627, 1162, 628, 0, 0, 629, 630, 631, 690,
	1185, 1222, 2588, 633, 632, 634, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	1098, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1093, 0, 0, 0, 0, 0, 0,
	1091, 1092, 2591, 0, 0, 0, 0, 0, 0, 1124,
	2587, 0, 1084, 1122, 1140, 1112, 1113, 1114, 1110, 1111,
	1123, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 1164, 1128, 0, 0,
	0, 286, 287, 1204, 288, 289, 290, 291, 292, 293,
	644, 1177, 0, 294, 1184, 295, 1183, 0, 1194, 296,
	297, 298, 299, 300, 301, 1130, 1163, 1095, 302, 1224,
	1225, 651, 0, 303, 304, 1170, 0, 1151, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 1205, 327, 328, 329,
	1154, 1152, 1153, 1160, 1156, 1155, 1159, 330, 331, 332,
	333, 334, 1187, 335, 337, 1181, 1180, 1100, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 1172, 348, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 355, 356, 1106, 357, 358, 359, 361,
	363, 360, 364, 365, 366, 367, 1195, 1196, 368, 1119,
	274, 0, 0, 0, 0, 0, 369, 370, 371, 1179,
	0, 0, 0, 372, 0, 373, 374, 0, 0, 1206,
	375, 376, 377, 1192, 1193, 378, 379, 380, 381, 382,
	383, 384, 385, 386, 0, 387, 1202, 0, 1129, 388,
	0, 389, 390, 391, 392, 393, 1165, 1166, 1169, 479,
	1208, 394, 395, 0, 396, 397, 398, 399, 400, 0,
	0, 0, 275, 401, 402, 403, 405, 0, 1207, 404,
	1174, 1175, 0, 1135, 0, 406, 407, 1209, 1167, 1210,
	408, 409, 410, 1211, 411, 0, 0, 0, 412, 413,
	414, 415, 416, 417, 0, 418, 420, 419, 0, 421,
	1203, 1212, 422, 423, 1213, 0, 424, 425, 426, 427,
	428, 429, 432, 1158, 1157, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 440, 442, 455, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 456, 1214, 458, 459, 460, 467, 469,
	470, 465, 466, 468, 471, 472, 462, 463, 474, 464,
	1215, 473, 461, 1097, 276, 1216, 475, 476, 477, 1120,
	1168, 478, 1182, 480, 481, 0, 0, 482, 0, 0,
	0, 484, 485, 486, 0, 0, 487, 488, 673, 1217,
	489, 1218, 1197, 490, 491, 1107, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 0, 501, 502, 675, 503,
	504, 505, 676, 506, 507, 508, 1198, 509, 678, 510,
	511, 0, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 520, 1178, 521, 522, 524, 523, 525, 0, 526,
	0, 527, 528, 529, 0, 0, 0, 0, 0, 530,
	0, 532, 533, 534, 535, 531, 536, 537, 538, 539,
	540, 0, 541, 542, 543, 1219, 544, 545, 546, 547,
	548, 1108, 549, 0, 550, 551, 557, 558, 559, 552,
	553, 560, 561, 562, 563, 564, 236, 566, 567, 565,
	568, 569, 570, 1161, 571, 572, 554, 555, 573, 574,
	1220, 575, 576, 577, 578, 579, 580, 581, 1176, 0,
	582, 0, 583, 584, 585, 586, 588, 556, 589, 594,
	595, 1223, 590, 591, 592, 593, 1199, 597, 598, 0,
	599, 600, 1094, 596, 587, 238, 601, 602, 603, 604,
	605, 606, 607, 362, 608, 0, 609, 1188, 1189, 1190,
	1191, 0, 618, 0, 610, 611, 612, 1200, 613, 1201,
	1118, 614, 615, 616, 617, 0, 619, 620, 0, 1101,
	621, 622, 623, 625, 626, 624, 627, 1162, 628, 0,
	0, 629, 630, 631, 1626, 1185, 1222, 0, 633, 632,
	634, 635, 693, 636, 637, 0, 0, 0, 230, 638,
	639, 694, 640, 641, 642, 1098, 0, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1093, 0,
	0, 0, 0, 0, 0, 1091, 1092, 1140, 1112, 1113,
	1114, 1110, 1111, 1123, 1881, 1879, 0, 0, 1122, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 1164,
	1128, 0, 0, 0, 286, 287, 1204, 288, 289, 290,
	291, 292, 293, 644, 1177, 0, 294, 1184, 295, 1183,
	0, 1194, 296, 297, 298, 299, 300, 301, 1130, 1163,
	1095, 302, 1224, 1225, 651, 0, 303, 304, 1170, 0,
	1151, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1205,
	327, 328, 329, 1154, 1152, 1153, 1160, 1156, 1155, 1159,
	330, 331, 332, 333, 334, 1187, 335, 337, 1181, 1180,
	1100, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 1172, 348, 0, 349, 350,
	351, 0, 352, 353, 354, 0, 355, 356, 1106, 357,
	358, 359, 361, 363, 360, 364, 365, 366, 367, 1195,
	1196, 368, 1119, 274, 0, 0, 0, 0, 0, 369,
	370, 371, 1179, 0, 0, 0, 372, 0, 373, 374,
	0, 0, 1206, 375, 376, 377, 1192, 1193, 378, 379,
	380, 381, 382, 383, 384, 385, 386, 0, 387, 1202,
	0, 1129, 388, 0, 389, 390, 391, 392, 393, 1165,
	1166, 1169, 479, 1208, 394, 395, 0, 396, 397, 398,
	399, 400, 0, 0, 0, 275, 401, 402, 403, 405,
	0, 1207, 404, 1174, 1175, 0, 1135, 0, 406, 407,
	1209, 1167, 1210, 408, 409, 410, 1211, 411, 0, 0,
	0, 412, 413, 414, 415, 416, 417, 0, 418, 420,
	419, 0, 421, 1203, 1212, 422, 423, 1213, 0, 424,
	425, 426, 427, 428, 429, 432, 1158, 1157, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 1214, 458, 459,
	460, 467, 469, 470, 465, 466, 468, 471, 472, 462,
	463, 474, 464, 1215, 473, 461, 1097, 276, 1216, 475,
	476, 477, 1120, 1168, 478, 1182, 480, 481, 0, 0,
	482, 0, 0, 0, 484, 485, 486, 0, 0, 487,
	488, 673, 1217, 489, 1218, 1197, 490, 491, 1107, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 0, 501,
	502, 675, 503, 504, 505, 676, 506, 507, 508, 1198,
	509, 678, 510, 511, 0, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 520, 1178, 521, 522, 524, 523,
	525, 0, 526, 0, 527, 528, 529, 0, 0, 0,
	0, 0, 530, 0, 532, 533, 534, 535, 531, 536,
	537, 538, 539, 540, 0, 541, 542, 543, 1219, 544,
	545, 546, 547, 548, 1108, 549, 0, 550, 551, 557,
	558, 559, 552, 553, 560, 561, 562, 563, 564, 236,
	566, 567, 565, 568, 569, 570, 1161, 571, 572, 554,
	555, 573, 574, 1220, 575, 576, 577, 578, 579, 580,
	581, 1176, 0, 582, 0, 583, 584, 585, 586, 588,
	556, 589, 594, 595, 1223, 590, 591, 592, 593, 1199,
	597, 598, 0, 599, 600, 1094, 596, 587, 238, 601,
	602, 603, 604, 605, 606, 607, 362, 608, 0, 609,
	1188, 1189, 1190, 1191, 0, 618, 0, 610, 611, 612,
	1200, 613, 1201, 1118, 614, 615, 616, 617, 0, 619,
	620, 0, 1101, 621, 622, 623, 625, 626, 624, 627,
	1162, 628, 0, 0, 629, 630, 631, 1626, 1185, 1222,
	0, 633, 632, 634, 635, 693, 636, 637, 0, 0,
	0, 230, 638, 639, 694, 640, 641, 642, 1098, 0,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1093, 0, 0, 0, 0, 0, 0, 1091, 1092,
	1140, 1112, 1113, 1114, 1110, 1111, 1123, 1881, 3234, 0,
	0, 1122, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 1164, 1128, 0, 0, 0, 286, 287, 1204,
	288, 289, 290, 291, 292, 293, 644, 1177, 0, 294,
	1184, 295, 1183, 0, 1194, 296, 297, 298, 299, 300,
	301, 1130, 1163, 1095, 302, 1224, 1225, 651, 0, 303,
	304, 1170, 0, 1151, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 1205, 327, 328, 329, 1154, 1152, 1153, 1160,
	1156, 1155, 1159, 330, 331, 332, 333, 334, 1187, 335,
	337, 1181, 1180, 1100, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 1172, 348,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 355,
	356, 1106, 357, 358, 359, 361, 363, 360, 364, 365,
	366, 367, 1195, 1196, 368, 1119, 274, 0, 0, 0,
	0, 0, 369, 370, 371, 1179, 0, 0, 0, 372,
	0, 373, 374, 0, 0, 1206, 375, 376, 377, 1192,
	1193, 378, 379, 380, 381, 382, 383, 384, 385, 386,
	0, 387, 1202, 0, 1129, 388, 0, 389, 390, 391,
	392, 393, 1165, 1166, 1169, 479, 1208, 394, 395, 0,
	396, 397, 398, 399, 400, 0, 0, 0, 275, 401,
	402, 403, 405, 0, 1207, 404, 1174, 1175, 0, 1135,
	0, 406, 407, 1209, 1167, 1210, 408, 409, 410, 1211,
	411, 0, 0, 0, 412, 413, 414, 415, 416, 417,
	0, 418, 420, 419, 0, 421, 1203, 1212, 422, 423,
	1213, 0, 424, 425, 426, 427, 428, 429, 432, 1158,
	1157, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	1214, 458, 459, 460, 467, 469, 470, 465, 466, 468,
	471, 472, 462, 463, 474, 464, 1215, 473, 461, 1097,
	276, 1216, 475, 476, 477, 1120, 1168, 478, 1182, 480,
	481, 0, 0, 482, 0, 0, 0, 484, 485, 486,
	0, 0, 487, 488, 673, 1217, 489, 1218, 1197, 490,
	491, 1107, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 0, 501, 502, 675, 503, 504, 505, 676, 506,
	507, 508, 1198, 509, 678, 510, 511, 0, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 520, 1178, 521,
	522, 524, 523, 525, 0, 526, 0, 527, 528, 529,
	0, 0, 0, 0, 0, 530, 0, 532, 533, 534,
	535, 531, 536, 537, 538, 539, 540, 0, 541, 542,
	543, 1219, 544, 545, 546, 547, 548, 1108, 549, 0,
	550, 551, 557, 558, 559, 552, 553, 560, 561, 562,
	563, 564, 236, 566, 567, 565, 568, 569, 570, 1161,
	571, 572, 554, 555, 573, 574, 1220, 575, 576, 577,
	578, 579, 580, 581, 1176, 0, 582, 0, 583, 584,
	585, 586, 588, 556, 589, 594, 595, 1223, 590, 591,
	592, 593, 1199, 597, 598, 0, 599, 600, 1094, 596,
	587, 238, 601, 602, 603, 604, 605, 606, 607, 362,
	608, 0, 609, 1188, 1189, 1190, 1191, 0, 618, 0,
	610, 611, 612, 1200, 613, 1201, 1118, 614, 615, 616,
	617, 0, 619, 620, 0, 1101, 621, 622, 623, 625,
	626, 624, 627, 1162, 628, 0, 0, 629, 630, 631,
	1626, 1185, 1222, 0, 633, 632, 634, 635, 693, 636,
	637, 0, 0, 0, 230, 638, 639, 694, 640, 641,
	642, 1098, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1093, 0, 0, 0, 0, 0,
	0, 1091, 1092, 1140, 1112, 1113, 1114, 1110, 1111, 1123,
	1881, 1879, 0, 0, 1122, 0, 0, 0, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 1164, 1128, 0, 0, 0,
	286, 287, 1204, 288, 289, 290, 291, 292, 293, 644,
	1177, 0, 294, 1184, 295, 1183, 2723, 1194, 296, 297,
	298, 299, 300, 301, 1130, 1163, 1095, 302, 1224, 1225,
	651, 0, 303, 304, 1170, 0, 1151, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 1205, 327, 328, 329, 1154,
	1152, 1153, 1160, 1156, 1155, 1159, 330, 331, 332, 333,
	334, 1187, 335, 337, 1181, 1180, 1100, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 1172, 348, 0, 349, 350, 351, 0, 352, 353,
	354, 0, 355, 356, 1106, 357, 358, 359, 361, 363,
	360, 364, 365, 366, 367, 1195, 1196, 368, 1119, 274,
	0, 0, 0, 0, 0, 369, 370, 371, 1179, 0,
	0, 0, 372, 0, 373, 374, 0, 2728, 1206, 375,
	376, 377, 1192, 1193, 378, 379, 380, 381, 382, 383,
	384, 385, 386, 0, 387, 1202, 0, 1129, 388, 0,
	389, 390, 391, 392, 393, 1165, 1166, 1169, 479, 1208,
	394, 395, 0, 396, 397, 398, 399, 400, 0, 0,
	0, 275, 401, 402, 403, 405, 0, 1207, 404, 1174,
	1175, 0, 1135, 0, 406, 407, 1209, 1167, 1210, 408,
	409, 410, 1211, 411, 0, 0, 0, 412, 413, 414,
	415, 416, 417, 0, 418, 420, 419, 2724, 421, 1203,
	1212, 422, 423, 1213, 0, 424, 425, 426, 427, 428,
	429, 432, 1158, 1157, 430, 431, 433, 434, 0, 435,
	436, 438, 441, 437, 439, 440, 442, 455, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	457, 0, 456, 1214, 458, 459, 460, 467, 469, 470,
	465, 466, 468, 471, 472, 462, 463, 474, 464, 1215,
	473, 461, 1097, 276, 1216, 475, 476, 477, 1120, 1168,
	478, 1182, 480, 481, 0, 0, 482, 0, 0, 0,
	484, 485, 486, 0, 0, 487, 488, 673, 1217, 489,
	1218, 1197, 490, 491, 1107, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 0, 501, 502, 675, 503, 504,
	505, 676, 506, 507, 508, 1198, 509, 678, 510, 511,
	0, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	520, 1178, 521, 522, 524, 523, 525, 0, 526, 0,
	527, 528, 529, 0, 0, 0, 0, 0, 530, 0,
	532, 533, 534, 535, 531, 536, 537, 538, 539, 540,
	0, 541, 542, 543, 1219, 544, 545, 546, 547, 548,
	1108, 549, 0, 550, 551, 557, 558, 559, 552, 553,
	560, 561, 562, 563, 564, 0, 566, 567, 565, 568,
	569, 570, 1161, 571, 572, 554, 555, 573, 574, 1220,
	575, 576, 577, 578, 579, 580, 581, 1176, 0, 582,
	0, 583, 584, 585, 586, 588, 556, 589, 594, 595,
	1223, 590, 591, 592, 593, 1199, 597, 598, 0, 599,
	600, 1094, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 362, 608, 0, 609, 1188, 1189, 1190, 1191,
	0, 618, 2725, 610, 611, 612, 1200, 613, 1201, 1118,
	614, 615, 616, 617, 0, 619, 620, 0, 1101, 621,
	622, 623, 625, 626, 624, 627, 1162, 628, 0, 0,
	629, 630, 631, 690, 1185, 1222, 0, 633, 632, 634,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 1098, 0, 0, 2637, 0, 1140,
	1112, 1113, 1114, 1110, 1111, 1123, 0, 1093, 0, 0,
	0, 0, 0, 0, 1091, 1092, 277, 279, 278, 280,
	281, 282, 283, 1124, 284, 285, 0, 1122, 0, 0,
	0, 1164, 1128, 0, 0, 0, 286, 287, 1204, 288,
	289, 290, 291, 292, 293, 644, 1177, 0, 294, 1184,
	295, 1183, 0, 1194, 296, 297, 298, 299, 300, 301,
	1130, 1163, 1095, 302, 1224, 1225, 651, 0, 303, 304,
	1170, 0, 1151, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 1205, 327, 328, 329, 1154, 1152, 1153, 1160, 1156,
	1155, 1159, 330, 331, 332, 333, 334, 1187, 335, 337,
	1181, 1180, 1100, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 1172, 348, 0,
	349, 350, 351, 0, 352, 353, 354, 0, 355, 356,
	1106, 357, 358, 359, 361, 363, 360, 364, 365, 366,
	367, 1195, 1196, 368, 1119, 274, 0, 0, 0, 0,
	0, 369, 370, 371, 1179, 0, 0, 0, 372, 0,
	373, 374, 0, 0, 1206, 375, 376, 377, 1192, 1193,
	378, 379, 380, 381, 382, 383, 384, 385, 386, 0,
	387, 1202, 0, 1129, 388, 0, 389, 390, 391, 392,
	393, 1165, 1166, 1169, 479, 1208, 394, 395, 0, 396,
	397, 398, 399, 400, 0, 0, 0, 275, 401, 402,
	403, 405, 0, 1207, 404, 1174, 1175, 0, 1135, 0,
	406, 407, 1209, 1167, 1210, 408, 409, 410, 1211, 411,
	0, 0, 0, 412, 413, 414, 415, 416, 417, 0,
	418, 420, 419, 0, 421, 1203, 1212, 422, 423, 1213,
	0, 424, 425, 426, 427, 428, 429, 432, 1158, 1157,
	430, 431, 433, 434, 0, 435, 436, 438, 441, 437,
	439, 440, 442, 455, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 457, 0, 456, 1214,
	458, 459, 460, 467, 469, 470, 465, 466, 468, 471,
	472, 462, 463, 474, 464, 1215, 473, 461, 1097, 276,
	1216, 475, 476, 477, 1120, 1168, 478, 1182, 480, 481,
	0, 0, 482, 0, 0, 0, 484, 485, 486, 0,
	0, 487, 488, 673, 1217, 489, 1218, 1197, 490, 491,
	1107, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	0, 501, 502, 675, 503, 504, 505, 676, 506, 507,
	508, 1198, 509, 678, 510, 511, 0, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 520, 1178, 521, 522,
	524, 523, 525, 0, 526, 0, 527, 528, 529, 0,
	0, 0, 0, 0, 530, 0, 532, 533, 534, 535,
	531, 536, 537, 538, 539, 540, 0, 541, 542, 543,
	1219, 544, 545, 546, 547, 548, 1108, 549, 0, 550,
	551, 557, 558, 559, 552, 553, 560, 561, 562, 563,
	564, 0, 566, 567, 565, 568, 569, 570, 1161, 571,
	572, 554, 555, 573, 574, 1220, 575, 576, 577, 578,
	579, 580, 581, 1176, 0, 582, 0, 583, 584, 585,
	586, 588, 556, 589, 594, 595, 1223, 590, 591, 592,
	593, 1199, 597, 598, 0, 599, 600, 1094, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 362, 608,
	0, 609, 1188, 1189, 1190, 1191, 0, 618, 0, 610,
	611, 612, 1200, 613, 1201, 1118, 614, 615, 616, 617,
	0, 619, 620, 0, 1101, 621, 622, 623, 625, 626,
	624, 627, 1162, 628, 0, 0, 629, 630, 631, 690,
	1185, 1222, 0, 633, 632, 634, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	1098, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1093, 0, 0, 0, 0, 0, 0,
	1091, 1092, 0, 0, 0, 0, 0, 0, 0, 1124,
	2635, 0, 2634, 1122, 1140, 1112, 1113, 1114, 1110, 1111,
	1123, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 1164, 1128, 0, 0,
	0, 286, 287, 1204, 288, 289, 290, 291, 292, 293,
	644, 1177, 0, 294, 1184, 295, 1183, 0, 1194, 296,
	297, 298, 299, 300, 301, 1130, 1163, 1095, 302, 1224,
	1225, 651, 0, 303, 304, 1170, 0, 1151, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 1205, 327, 328, 329,
	1154, 1152, 1153, 1160, 1156, 1155, 1159, 330, 331, 332,
	333, 334, 1187, 335, 337, 1181, 1180, 1100, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 1172, 348, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 355, 356, 1106, 357, 358, 359, 361,
	363, 360, 364, 365, 366, 367, 1195, 1196, 368, 1119,
	274, 0, 0, 0, 0, 0, 369, 370, 371, 1179,
	0, 0, 0, 372, 0, 373, 374, 0, 0, 1206,
	375, 376, 377, 1192, 1193, 378, 379, 380, 381, 382,
	383, 384, 385, 386, 0, 387, 1202, 0, 1129, 388,
	0, 389, 390, 391, 392, 393, 1165, 1166, 1169, 479,
	1208, 394, 395, 0, 396, 397, 398, 399, 400, 0,
	0, 0, 275, 401, 402, 403, 405, 0, 1207, 404,
	1174, 1175, 0, 1135, 0, 406, 407, 1209, 1167, 1210,
	408, 409, 410, 1211, 411, 0, 0, 0, 412, 413,
	414, 415, 416, 417, 0, 418, 420, 419, 0, 421,
	1203, 1212, 422, 423, 1213, 0, 424, 425, 426, 427,
	428, 429, 432, 1158, 1157, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 440, 442, 455, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 456, 1214, 458, 459, 460, 467, 469,
	470, 465, 466, 468, 471, 472, 462, 463, 474, 464,
	1215, 473, 461, 1097, 276, 1216, 475, 476, 477, 1120,
	1168, 478, 1182, 480, 481, 0, 0, 482, 0, 0,
	0, 484, 485, 486, 0, 0, 487, 488, 673, 1217,
	489, 1218, 1197, 490, 491, 1107, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 0, 501, 502, 675, 503,
	504, 505, 676, 506, 507, 508, 1198, 509, 678, 510,
	511, 0, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 520, 1178, 521, 522, 524, 523, 525, 0, 526,
	0, 527, 528, 529, 0, 0, 0, 0, 0, 530,
	0, 532, 533, 534, 535, 531, 536, 537, 538, 539,
	540, 0, 541, 542, 543, 1219, 544, 545, 546, 547,
	548, 1108, 549, 0, 550, 551, 557, 558, 559, 552,
	553, 560, 561, 562, 563, 564, 0, 566, 567, 565,
	568, 569, 570, 1161, 571, 572, 554, 555, 573, 574,
	1220, 575, 576, 577, 578, 579, 580, 581, 1176, 0,
	582, 0, 583, 584, 585, 586, 588, 556, 589, 594,
	595, 1223, 590, 591, 592, 593, 1199, 597, 598, 0,
	599, 600, 1094, 596, 587, 0, 601, 602, 603, 604,
	605, 606, 607, 362, 608, 0, 609, 1188, 1189, 1190,
	1191, 0, 618, 0, 610, 611, 612, 1200, 613, 1201,
	1118, 614, 615, 616, 617, 0, 619, 620, 0, 1101,
	621, 622, 623, 625, 626, 624, 627, 1162, 628, 0,
	0, 629, 630, 631, 690, 1185, 1222, 0, 633, 632,
	634, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 1098, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1093, 0,
	0, 0, 0, 0, 0, 1091, 1092, 0, 0, 0,
	0, 0, 0, 0, 1124, 2632, 0, 2631, 1122, 1140,
	1112, 1113, 1114, 1110, 1111, 1123, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 1164, 1128, 0, 0, 0, 286, 287, 1204, 288,
	289, 290, 291, 292, 293, 644, 1177, 0, 294, 1184,
	295, 1183, 0, 1194, 296, 297, 298, 299, 300, 301,
	1130, 1163, 1095, 302, 1224, 1225, 651, 0, 303, 304,
	1170, 0, 1151, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 1205, 327, 328, 329, 1154, 1152, 1153, 1160, 1156,
	1155, 1159, 330, 331, 332, 333, 334, 1187, 335, 337,
	1181, 1180, 1100, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 1172, 348, 0,
	349, 350, 351, 0, 352, 353, 354, 0, 355, 356,
	1106, 357, 358, 359, 361, 363, 360, 364, 365, 366,
	367, 1195, 1196, 368, 1119, 274, 0, 0, 0, 0,
	0, 369, 370, 371, 1179, 0, 0, 0, 372, 0,
	373, 374, 0, 0, 1206, 375, 376, 377, 1192, 1193,
	378, 379, 380, 381, 382, 383, 384, 385, 386, 0,
	387, 1202, 0, 1129, 388, 0, 389, 390, 391, 392,
	393, 1165, 1166, 1169, 479, 1208, 394, 395, 0, 396,
	397, 398, 399, 400, 0, 0, 0, 275, 401, 402,
	403, 405, 0, 1207, 404, 1174, 1175, 0, 1135, 0,
	406, 407, 1209, 1167, 1210, 408, 409, 410, 1211, 411,
	0, 0, 0, 412, 413, 414, 415, 416, 417, 0,
	418, 420, 419, 0, 421, 1203, 1212, 422, 423, 1213,
	0, 424, 425, 426, 427, 428, 429, 432, 1158, 1157,
	430, 431, 433, 434, 0, 435, 436, 438, 441, 437,
	439, 440, 442, 455, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 457, 0, 456, 1214,
	458, 459, 460, 467, 469, 470, 465, 466, 468, 471,
	472, 462, 463, 474, 464, 1215, 473, 461, 1097, 276,
	1216, 475, 476, 477, 1120, 1168, 478, 1182, 480, 481,
	0, 0, 482, 0, 0, 0, 484, 485, 486, 0,
	0, 487, 488, 673, 1217, 489, 1218, 1197, 490, 491,
	1107, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	0, 501, 502, 675, 503, 504, 505, 676, 506, 507,
	508, 1198, 509, 678, 510, 511, 0, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 520, 1178, 521, 522,
	524, 523, 525, 0, 526, 0, 527, 528, 529, 0,
	0, 0, 0, 0, 530, 0, 532, 533, 534, 535,
	531, 536, 537, 538, 539, 540, 0, 541, 542, 543,
	1219, 544, 545, 546, 547, 548, 1108, 549, 0, 550,
	551, 557, 558, 559, 552, 553, 560, 561, 562, 563,
	564, 0, 566, 567, 565, 568, 569, 570, 1161, 571,
	572, 554, 555, 573, 574, 1220, 575, 576, 577, 578,
	579, 580, 581, 1176, 0, 582, 0, 583, 584, 585,
	586, 588, 556, 589, 594, 595, 1223, 590, 591, 592,
	593, 1199, 597, 598, 0, 599, 600, 1094, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 362, 608,
	0, 609, 1188, 1189, 1190, 1191, 0, 618, 0, 610,
	611, 612, 1200, 613, 1201, 1118, 614, 615, 616, 617,
	0, 619, 620, 0, 1101, 621, 622, 623, 625, 626,
	624, 627, 1162, 628, 0, 0, 629, 630, 631, 690,
	1185, 1222, 0, 633, 632, 634, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	1098, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1093, 0, 0, 0, 0, 0, 0,
	1091, 1092, 0, 0, 0, 0, 0, 0, 0, 1124,
	2629, 0, 2628, 1122, 1140, 1112, 1113, 1114, 1110, 1111,
	1123, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 1164, 1128, 0, 0,
	0, 286, 287, 1204, 288, 289, 290, 291, 292, 293,
	644, 1177, 0, 294, 1184, 295, 1183, 0, 1194, 296,
	297, 298, 299, 300, 301, 1130, 1163, 1095, 302, 1224,
	1225, 651, 0, 303, 304, 1170, 0, 1151, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 1205, 327, 328, 329,
	1154, 1152, 1153, 1160, 1156, 1155, 1159, 330, 331, 332,
	333, 334, 1187, 335, 337, 1181, 1180, 1100, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 1172, 348, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 355, 356, 1106, 357, 358, 359, 361,
	363, 360, 364, 365, 366, 367, 1195, 1196, 368, 1119,
	274, 0, 0, 0, 0, 0, 369, 370, 371, 1179,
	0, 0, 0, 372, 0, 373, 374, 0, 0, 1206,
	375, 376, 377, 1192, 1193, 378, 379, 380, 381, 382,
	383, 384, 385, 386, 0, 387, 1202, 0, 1129, 388,
	0, 389, 390, 391, 392, 393, 1165, 1166, 1169, 479,
	1208, 394, 395, 0, 396, 397, 398, 399, 400, 0,
	0, 0, 275, 401, 402, 403, 405, 0, 1207, 404,
	1174, 1175, 0, 1135, 0, 406, 407, 1209, 1167, 1210,
	408, 409, 410, 1211, 411, 0, 0, 0, 412, 413,
	414, 415, 416, 417, 0, 418, 420, 419, 0, 421,
	1203, 1212, 422, 423, 1213, 0, 424, 425, 426, 427,
	428, 429, 432, 1158, 1157, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 440, 442, 455, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 456, 1214, 458, 459, 460, 467, 469,
	470, 465, 466, 468, 471, 472, 462, 463, 474, 464,
	1215, 473, 461, 1097, 276, 1216, 475, 476, 477, 1120,
	1168, 478, 1182, 480, 481, 0, 0, 482, 0, 0,
	0, 484, 485, 486, 0, 0, 487, 488, 673, 1217,
	489, 1218, 1197, 490, 491, 1107, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 0, 501, 502, 675, 503,
	504, 505, 676, 506, 507, 508, 1198, 509, 678, 510,
	511, 0, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 520, 1178, 521, 522, 524, 523, 525, 0, 526,
	0, 527, 528, 529, 0, 0, 0, 0, 0, 530,
	0, 532, 533, 534, 535, 531, 536, 537, 538, 539,
	540, 0, 541, 542, 543, 1219, 544, 545, 546, 547,
	548, 1108, 549, 0, 550, 551, 557, 558, 559, 552,
	553, 560, 561, 562, 563, 564, 0, 566, 567, 565,
	568, 569, 570, 1161, 571, 572, 554, 555, 573, 574,
	1220, 575, 576, 577, 578, 579, 580, 581, 1176, 0,
	582, 0, 583, 584, 585, 586, 588, 556, 589, 594,
	595, 1223, 590, 591, 592, 593, 1199, 597, 598, 0,
	599, 600, 1094, 596, 587, 0, 601, 602, 603, 604,
	605, 606, 607, 362, 608, 0, 609, 1188, 1189, 1190,
	1191, 0, 618, 0, 610, 611, 612, 1200, 613, 1201,
	1118, 614, 615, 616, 617, 0, 619, 620, 0, 1101,
	621, 622, 623, 625, 626, 624, 627, 1162, 628, 0,
	0, 629, 630, 631, 690, 1185, 1222, 0, 633, 632,
	634, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 1098, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1093, 0,
	0, 0, 0, 0, 0, 1091, 1092, 0, 0, 0,
	0, 0, 0, 0, 1124, 2626, 0, 1722, 1122, 1140,
	1112, 1113, 1114, 1110, 1111, 1123, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 1164, 1128, 0, 0, 0, 286, 287, 1204, 288,
	289, 290, 291, 292, 293, 644, 1177, 0, 294, 1184,
	295, 1183, 0, 1194, 296, 297, 298, 299, 300, 301,
	1130, 1163, 1095, 302, 1224, 1225, 651, 0, 303, 304,
	1170, 0, 1151, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 1205, 327, 328, 329, 1154, 1152, 1153, 1160, 1156,
	1155, 1159, 330, 331, 332, 333, 334, 1187, 335, 337,
	1181, 1180, 1100, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 1172, 348, 0,
	349, 350, 351, 0, 352, 353, 354, 0, 355, 356,
	1106, 357, 358, 359, 361, 363, 360, 364, 365, 366,
	367, 1195, 1196, 368, 1119, 274, 0, 0, 0, 0,
	0, 369, 370, 371, 1179, 0, 0, 0, 372, 0,
	373, 374, 0, 0, 1206, 375, 376, 377, 1192, 1193,
	378, 379, 380, 381, 382, 383, 384, 385, 386, 0,
	387, 1202, 0, 1129, 388, 0, 389, 390, 391, 392,
	393, 1165, 1166, 1169, 479, 1208, 394, 395, 0, 396,
	397, 398, 399, 400, 0, 0, 0, 275, 401, 402,
	403, 405, 0, 1207, 404, 1174, 1175, 0, 1135, 0,
	406, 407, 1209, 1167, 1210, 408, 409, 410, 1211, 411,
	0, 0, 0, 412, 413, 414, 415, 416, 417, 0,
	418, 420, 419, 0, 421, 1203, 1212, 422, 423, 1213,
	0, 424, 425, 426, 427, 428, 429, 432, 1158, 1157,
	430, 431, 433, 434, 0, 435, 436, 438, 441, 437,
	439, 440, 442, 455, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 457, 0, 456, 1214,
	458, 459, 460, 467, 469, 470, 465, 466, 468, 471,
	472, 462, 463, 474, 464, 1215, 473, 461, 1097, 276,
	1216, 475, 476, 477, 1120, 1168, 478, 1182, 480, 481,
	0, 0, 482, 0, 0, 0, 484, 485, 486, 0,
	0, 487, 488, 673, 1217, 489, 1218, 1197, 490, 491,
	1107, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	0, 501, 502, 675, 503, 504, 505, 676, 506, 507,
	508, 1198, 509, 678, 510, 511, 0, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 520, 1178, 521, 522,
	524, 523, 525, 0, 526, 0, 527, 528, 529, 0,
	0, 0, 0, 0, 530, 0, 532, 533, 534, 535,
	531, 536, 537, 538, 539, 540, 0, 541, 542, 543,
	1219, 544, 545, 546, 547, 548, 1108, 549, 0, 550,
	551, 557, 558, 559, 552, 553, 560, 561, 562, 563,
	564, 0, 566, 567, 565, 568, 569, 570, 1161, 571,
	572, 554, 555, 573, 574, 1220, 575, 576, 577, 578,
	579, 580, 581, 1176, 0, 582, 0, 583, 584, 585,
	586, 588, 556, 589, 594, 595, 1223, 590, 591, 592,
	593, 1199, 597, 598, 0, 599, 600, 1094, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 362, 608,
	0, 609, 1188, 1189, 1190, 1191, 0, 618, 0, 610,
	611, 612, 1200, 613, 1201, 1118, 614, 615, 616, 617,
	0, 619, 620, 0, 1101, 621, 622, 623, 625, 626,
	624, 627, 1162, 628, 0, 0, 629, 630, 631, 690,
	1185, 1222, 0, 633, 632, 634, 635, 693, 636, 637,
	1721, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	1098, 0, 0, 1087, 0, 1140, 1112, 1113, 1114, 1110,
	1111, 1123, 0, 1093, 0, 0, 0, 0, 0, 0,
	1091, 1092, 277, 279, 278, 280, 281, 282, 283, 1124,
	284, 285, 0, 1122, 0, 0, 0, 1164, 1128, 0,
	0, 0, 286, 287, 1204, 288, 289, 290, 291, 292,
	293, 644, 1177, 0, 294, 1184, 295, 1183, 0, 1194,
	296, 297, 298, 299, 300, 301, 1130, 1163, 1095, 302,
	1224, 1225, 651, 0, 303, 304, 1170, 0, 1151, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 1205, 327, 328,
	329, 1154, 1152, 1153, 1160, 1156, 1155, 1159, 330, 331,
	332, 333, 334, 1187, 335, 337, 1181, 1180, 1100, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 1172, 348, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 1106, 357, 358, 359,
	361, 363, 360, 364, 365, 366, 367, 1195, 1196, 368,
	1119, 274, 0, 0, 0, 0, 0, 369, 370, 371,
	1179, 0, 0, 0, 372, 0, 373, 374, 0, 0,
	1206, 375, 376, 377, 1192, 1193, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 0, 387, 1202, 0, 1129,
	388, 0, 389, 390, 391, 392, 393, 1165, 1166, 1169,
	479, 1208, 394, 395, 0, 396, 397, 398, 399, 400,
	0, 0, 0, 275, 401, 402, 403, 405, 0, 1207,
	404, 1174, 1175, 0, 1135, 0, 406, 407, 1209, 1167,
	1210, 408, 409, 410, 1211, 411, 0, 0, 0, 412,
	413, 414, 415, 416, 417, 0, 418, 420, 419, 0,
	421, 1203, 1212, 422, 423, 1213, 0, 424, 425, 426,
	427, 428, 429, 432, 1158, 1157, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 1214, 458, 459, 460, 467,
	469, 470, 465, 466, 468, 471, 472, 462, 463, 474,
	464, 1215, 473, 461, 1097, 276, 1216, 475, 476, 477,
	1120, 1168, 478, 1182, 480, 481, 0, 0, 482, 0,
	1102, 0, 484, 485, 486, 0, 0, 487, 488, 673,
	1217, 489, 1218, 1197, 490, 491, 1107, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 0, 501, 502, 675,
	503, 504, 505, 676, 506, 507, 508, 1198, 509, 678,
	510, 511, 0, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 520, 1178, 521, 522, 524, 523, 525, 0,
	526, 0, 527, 528, 529, 0, 0, 0, 0, 0,
	530, 0, 532, 533, 534, 535, 531, 536, 537, 538,
	539, 540, 0, 541, 542, 543, 1219, 544, 545, 546,
	547, 548, 1108, 549, 0, 550, 551, 557, 558, 559,
	552, 553, 560, 561, 562, 563, 564, 0, 566, 567,
	565, 568, 569, 570, 1161, 571, 572, 554, 555, 573,
	574, 1220, 575, 576, 577, 578, 579, 580, 581, 1176,
	0, 582, 0, 583, 584, 585, 586, 588, 556, 589,
	594, 595, 1223, 590, 591, 592, 593, 1199, 597, 598,
	0, 599, 600, 1094, 596, 587, 0, 601, 602, 603,
	604, 605, 606, 607, 362, 608, 0, 609, 1188, 1189,
	1190, 1191, 0, 618, 0, 610, 611, 612, 1200, 613,
	1201, 1118, 614, 615, 616, 617, 0, 619, 620, 0,
	1101, 621, 622, 623, 625, 626, 624, 627, 1162, 628,
	0, 0, 629, 630, 631, 690, 1185, 1222, 0, 633,
	632, 634, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 1098, 0, 0, 0,
	0, 1140, 1112, 1113, 1114, 1110, 1111, 1123, 0, 1093,
	0, 0, 0, 0, 0, 0, 1091, 1092, 277, 279,
	278, 280, 281, 282, 283, 1124, 284, 285, 0, 1122,
	0, 0, 0, 1164, 1128, 0, 0, 0, 286, 287,
	1204, 288, 289, 290, 291, 292, 293, 644, 1177, 0,
	294, 1184, 295, 1183, 0, 1194, 296, 297, 298, 299,
	300, 301, 1130, 1163, 1095, 302, 1224, 1225, 651, 0,
	303, 304, 1170, 0, 1151, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 4702, 323, 0,
	324, 325, 326, 1205, 327, 328, 329, 1154, 1152, 1153,
	1160, 1156, 1155, 1159, 330, 331, 332, 333, 334, 1187,
	335, 337, 1181, 1180, 1100, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 1172,
	348, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 1106, 357, 358, 359, 361, 363, 360, 364,
	365, 366, 367, 1195, 1196, 368, 1119, 274, 0, 0,
	0, 0, 0, 369, 370, 371, 1179, 0, 0, 0,
	372, 0, 373, 374, 0, 0, 1206, 375, 376, 377,
	1192, 1193, 378, 379, 380, 381, 382, 383, 384, 385,
	386, 0, 387, 1202, 0, 1129, 388, 0, 389, 390,
	391, 392, 393, 1165, 1166, 1169, 479, 1208, 394, 395,
	0, 396, 397, 398, 399, 400, 0, 0, 0, 275,
	401, 402, 403, 405, 0, 1207, 404, 1174, 1175, 0,
	1135, 0, 406, 407, 1209, 1167, 1210, 408, 409, 410,
	1211, 411, 0, 0, 0, 412, 413, 414, 415, 416,
	417, 0, 418, 420, 419, 0, 421, 1203, 1212, 422,
	423, 1213, 0, 424, 425, 426, 427, 428, 429, 432,
	1158, 1157, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 1214, 458, 459, 460, 467, 469, 470, 465, 466,
	468, 471, 472, 462, 463, 474, 464, 1215, 473, 461,
	1097, 276, 1216, 475, 476, 477, 1120, 1168, 478, 1182,
	480, 481, 0, 0, 482, 0, 1102, 0, 484, 485,
	486, 0, 0, 487, 488, 673, 1217, 489, 1218, 1197,
	490, 491, 1107, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 0, 501, 502, 675, 503, 504, 505, 676,
	506, 507, 508, 1198, 509, 678, 510, 511, 0, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 520, 1178,
	521, 522, 524, 523, 525, 0, 526, 0, 527, 528,
	529, 0, 0, 0, 0, 0, 530, 0, 532, 533,
	534, 535, 531, 536, 537, 538, 539, 540, 0, 541,
	542, 543, 1219, 544, 545, 546, 547, 548, 1108, 549,
	0, 550, 551, 557, 558, 559, 552, 553, 560, 561,
	562, 563, 564, 0, 566, 567, 565, 568, 569, 570,
	1161, 571, 572, 554, 555, 573, 574, 1220, 575, 576,
	577, 578, 579, 580, 581, 1176, 0, 582, 0, 583,
	584, 585, 586, 588, 556, 589, 594, 595, 1223, 590,
	591, 592, 593, 1199, 597, 598, 0, 599, 600, 1094,
	596, 587, 0, 601, 602, 603, 604, 605, 606, 607,
	362, 608, 0, 609, 1188, 1189, 1190, 1191, 0, 618,
	0, 610, 611, 612, 1200, 613, 1201, 1118, 614, 615,
	616, 617, 0, 619, 620, 0, 1101, 621, 622, 623,
	625, 626, 624, 627, 1162, 628, 0, 0, 629, 630,
	631, 690, 1185, 1222, 0, 633, 632, 634, 635, 693,
	636, 637, 0, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 1098, 0, 0, 0, 0, 1140, 1112, 1113,
	1114, 1110, 1111, 1123, 0, 1093, 0, 0, 0, 0,
	0, 0, 1091, 1092, 277, 279, 278, 280, 281, 282,
	283, 1124, 284, 285, 0, 1122, 0, 0, 0, 1164,
	1128, 0, 0, 0, 286, 287, 1204, 288, 289, 290,
	291, 292, 293, 644, 1177, 0, 294, 1184, 295, 1183,
	0, 1194, 296, 297, 298, 299, 300, 301, 1130, 1163,
	1095, 302, 1224, 1225, 651, 0, 303, 304, 1170, 0,
	1151, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1205,
	327, 328, 329, 1154, 1152, 1153, 1160, 1156, 1155, 1159,
	330, 331, 332, 333, 334, 1187, 335, 337, 1181, 1180,
	1100, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 1172, 348, 0, 349, 350,
	351, 0, 352, 353, 354, 0, 355, 356, 1106, 357,
	358, 359, 361, 363, 360, 364, 365, 366, 367, 1195,
	1196, 368, 1119, 274, 0, 0, 0, 0, 0, 369,
	370, 371, 1179, 0, 0, 0, 372, 0, 373, 374,
	0, 0, 1206, 375, 376, 377, 1192, 1193, 378, 379,
	380, 381, 382, 383, 384, 385, 386, 0, 387, 1202,
	0, 1129, 388, 0, 389, 390, 391, 392, 393, 1165,
	1166, 1169, 479, 1208, 394, 395, 0, 396, 397, 398,
	399, 400, 0, 0, 0, 2469, 401, 402, 403, 405,
	0, 1207, 404, 1174, 1175, 0, 1135, 0, 406, 407,
	1209, 1167, 1210, 408, 409, 410, 1211, 411, 0, 0,
	0, 412, 413, 414, 415, 416, 417, 0, 418, 420,
	419, 0, 421, 1203, 1212, 422, 423, 1213, 0, 424,
	425, 426, 427, 428, 429, 432, 1158, 1157, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 1214, 458, 459,
	460, 467, 469, 470, 465, 466, 468, 471, 472, 462,
	463, 474, 464, 1215, 473, 461, 1097, 276, 1216, 475,
	476, 477, 1120, 1168, 478, 1182, 480, 481, 0, 0,
	482, 0, 0, 0, 484, 485, 486, 0, 0, 487,
	488, 673, 1217, 489, 1218, 1197, 490, 491, 1107, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 0, 501,
	502, 675, 503, 504, 505, 676, 506, 507, 508, 1198,
	509, 678, 510, 511, 2468, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 520, 1178, 521, 522, 524, 523,
	525, 0, 526, 0, 527, 528, 529, 0, 0, 0,
	0, 0, 530, 0, 532, 533, 534, 535, 531, 536,
	537, 538, 539, 540, 0, 541, 542, 543, 1219, 544,
	545, 546, 547, 548, 1108, 549, 0, 550, 551, 557,
	558, 559, 552, 553, 560, 561, 562, 563, 564, 0,
	566, 567, 565, 568, 569, 570, 1161, 571, 572, 554,
	555, 573, 574, 1220, 575, 576, 577, 578, 579, 580,
	581, 1176, 0, 582, 0, 583, 584, 585, 586, 588,
	556, 589, 594, 595, 1223, 590, 591, 592, 593, 1199,
	597, 598, 0, 599, 600, 1094, 596, 587, 0, 601,
	602, 603, 604, 605, 606, 607, 362, 608, 0, 609,
	1188, 1189, 1190, 1191, 0, 618, 0, 610, 611, 612,
	1200, 613, 1201, 1118, 614, 615, 616, 617, 0, 619,
	620, 0, 1101, 621, 622, 623, 625, 626, 624, 627,
	1162, 628, 0, 0, 629, 630, 631, 690, 1185, 1222,
	0, 633, 632, 634, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 1098, 0,
	0, 0, 0, 1140, 1112, 1113, 1114, 1110, 1111, 1123,
	0, 1093, 0, 0, 0, 0, 0, 0, 1091, 1092,
	277, 279, 278, 280, 281, 282, 283, 1124, 284, 285,
	0, 1122, 0, 0, 0, 1164, 1128, 0, 0, 0,
	286, 287, 1204, 288, 289, 290, 291, 292, 293, 644,
	1177, 0, 294, 1184, 295, 1183, 0, 1194, 296, 297,
	298, 299, 300, 301, 1130, 1163, 1095, 302, 1224, 1225,
	651, 0, 303, 304, 1170, 0, 1151, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 1205, 327, 328, 329, 1154,
	1152, 1153, 1160, 1156, 1155, 1159, 330, 331, 332, 333,
	334, 1187, 335, 337, 1181, 1180, 1100, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 1172, 348, 0, 349, 350, 351, 0, 352, 353,
	354, 0, 355, 356, 1106, 357, 358, 359, 361, 363,
	360, 364, 365, 366, 367, 1195, 1196, 368, 1119, 274,
	0, 0, 0, 0, 0, 369, 370, 371, 1179, 0,
	0, 0, 372, 0, 373, 374, 0, 0, 1206, 375,
	376, 377, 1192, 1193, 378, 379, 380, 381, 382, 383,
	384, 385, 386, 0, 387, 1202, 0, 1129, 388, 0,
	389, 390, 391, 392, 393, 1165, 1166, 1169, 479, 1208,
	394, 395, 0, 396, 397, 398, 399, 400, 0, 0,
	0, 275, 401, 402, 403, 405, 0, 1207, 404, 1174,
	1175, 0, 1135, 0, 406, 407, 1209, 1167, 1210, 408,
	409, 410, 1211, 411, 0, 0, 0, 412, 413, 414,
	415, 416, 417, 0, 418, 420, 419, 0, 421, 1203,
	1212, 422, 423, 1213, 0, 424, 425, 426, 427, 428,
	429, 432, 1158, 1157, 430, 431, 433, 434, 0, 435,
	436, 438, 441, 437, 439, 440, 442, 455, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	457, 0, 456, 1214, 458, 459, 460, 467, 469, 470,
	465, 466, 468, 471, 472, 462, 463, 474, 464, 1215,
	473, 461, 1097, 276, 1216, 475, 476, 477, 1120, 1168,
	478, 1182, 480, 481, 0, 0, 482, 0, 1102, 0,
	484, 485, 486, 0, 0, 487, 488, 673, 1217, 489,
	1218, 1197, 490, 491, 1107, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 0, 501, 502, 675, 503, 504,
	505, 676, 506, 507, 508, 1198, 509, 678, 510, 511,
	0, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	520, 1178, 521, 522, 524, 523, 525, 0, 526, 0,
	527, 528, 529, 0, 0, 0, 0, 0, 530, 0,
	532, 533, 534, 535, 531, 536, 537, 538, 539, 540,
	0, 541, 542, 543, 1219, 544, 545, 546, 547, 548,
	1108, 549, 0, 550, 551, 557, 558, 559, 552, 553,
	560, 561, 562, 563, 564, 0, 566, 567, 565, 568,
	569, 570, 1161, 571, 572, 554, 555, 573, 574, 1220,
	575, 576, 577, 578, 579, 580, 581, 1176, 0, 582,
	0, 583, 584, 585, 586, 588, 556, 589, 594, 595,
	1223, 590, 591, 592, 593, 1199, 597, 598, 0, 599,
	600, 1094, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 362, 608, 0, 609, 1188, 1189, 1190, 1191,
	0, 618, 0, 610, 611, 612, 1200, 613, 1201, 1118,
	614, 615, 616, 617, 0, 619, 620, 0, 1101, 621,
	622, 623, 625, 626, 624, 627, 1162, 628, 0, 0,
	629, 630, 631, 690, 1185, 1222, 0, 633, 632, 634,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 1098, 0, 0, 0, 0, 1140,
	1112, 1113, 1114, 1110, 1111, 1123, 0, 1093, 0, 0,
	0, 0, 0, 0, 1091, 1092, 277, 279, 278, 280,
	281, 282, 283, 1124, 284, 285, 0, 1122, 0, 0,
	0, 1164, 1128, 0, 0, 0, 286, 287, 1204, 288,
	289, 290, 291, 292, 293, 644, 1177, 0, 294, 1184,
	295, 1183, 0, 1194, 296, 297, 298, 299, 300, 301,
	1130, 1163, 1095, 302, 1224, 1225, 651, 0, 303, 304,
	1170, 0, 1151, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 4438, 323, 0, 324, 325,
	326, 1205, 327, 328, 329, 1154, 1152, 1153, 1160, 1156,
	1155, 1159, 330, 331, 332, 333, 334, 1187, 335, 337,
	1181, 1180, 1100, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 1172, 348, 0,
	349, 350, 351, 0, 352, 353, 354, 0, 355, 356,
	1106, 357, 358, 359, 361, 363, 360, 364, 365, 366,
	367, 1195, 1196, 368, 1119, 274, 0, 0, 0, 0,
	0, 369, 370, 371, 1179, 0, 0, 0, 372, 0,
	373, 374, 0, 0, 1206, 375, 376, 377, 1192, 1193,
	378, 379, 380, 381, 382, 383, 384, 385, 386, 0,
	387, 1202, 0, 1129, 388, 0, 389, 390, 391, 392,
	393, 1165, 1166, 1169, 479, 1208, 394, 395, 0, 396,
	397, 398, 399, 400, 0, 0, 0, 275, 401, 402,
	403, 405, 0, 1207, 404, 1174, 1175, 0, 1135, 0,
	406, 407, 1209, 1167, 1210, 408, 409, 410, 1211, 411,
	0, 0, 0, 412, 413, 414, 415, 416, 417, 0,
	418, 420, 419, 0, 421, 1203, 1212, 422, 423, 1213,
	0, 424, 425, 426, 427, 428, 429, 432, 1158, 1157,
	430, 431, 433, 434, 0, 435, 436, 438, 441, 437,
	439, 440, 442, 455, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 457, 0, 456, 1214,
	458, 459, 460, 467, 469, 470, 465, 466, 468, 471,
	472, 462, 463, 474, 464, 1215, 473, 461, 1097, 276,
	1216, 475, 476, 477, 1120, 1168, 478, 1182, 480, 481,
	0, 0, 482, 0, 1102, 0, 484, 485, 486, 0,
	0, 487, 488, 673, 1217, 489, 1218, 1197, 490, 491,
	1107, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	0, 501, 502, 675, 503, 504, 505, 676, 506, 507,
	508, 1198, 509, 678, 510, 511, 0, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 520, 1178, 521, 522,
	524, 523, 525, 0, 526, 0, 527, 528, 529, 0,
	0, 0, 0, 0, 530, 0, 532, 533, 534, 535,
	531, 536, 537, 538, 539, 540, 0, 541, 542, 543,
	1219, 544, 545, 546, 547, 548, 1108, 549, 0, 550,
	551, 557, 558, 559, 552, 553, 560, 561, 562, 563,
	564, 0, 566, 567, 565, 568, 569, 570, 1161, 571,
	572, 554, 555, 573, 574, 1220, 575, 576, 577, 578,
	579, 580, 581, 1176, 0, 582, 0, 583, 584, 585,
	586, 588, 556, 589, 594, 595, 1223, 590, 591, 592,
	593, 1199, 597, 598, 0, 599, 600, 1094, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 362, 608,
	0, 609, 1188, 1189, 1190, 1191, 0, 618, 0, 610,
	611, 612, 1200, 613, 1201, 1118, 614, 615, 616, 617,
	0, 619, 620, 0, 1101, 621, 622, 623, 625, 626,
	624, 627, 1162, 628, 0, 0, 629, 630, 631, 690,
	1185, 1222, 0, 633, 632, 634, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	1098, 0, 0, 0, 0, 1140, 1112, 1113, 1114, 1110,
	1111, 1123, 0, 1093, 0, 0, 0, 0, 0, 0,
	1091, 1092, 277, 279, 278, 280, 281, 282, 283, 1124,
	284, 285, 0, 1122, 0, 0, 0, 1164, 1128, 0,
	0, 0, 286, 287, 1204, 288, 289, 290, 291, 292,
	293, 644, 1177, 0, 294, 1184, 295, 1183, 0, 1194,
	296, 297, 298, 299, 300, 301, 1130, 1163, 1095, 302,
	1224, 1225, 651, 0, 303, 304, 1170, 0, 1151, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 1205, 327, 328,
	329, 1154, 1152, 1153, 1160, 1156, 1155, 1159, 330, 331,
	332, 333, 334, 1187, 335, 337, 1181, 1180, 1100, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 1172, 348, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 1106, 357, 358, 359,
	361, 363, 360, 364, 365, 366, 367, 1195, 1196, 368,
	1119, 274, 0, 0, 0, 0, 0, 369, 370, 371,
	1179, 0, 0, 0, 372, 0, 373, 374, 0, 0,
	1206, 375, 376, 377, 1192, 1193, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 0, 387, 1202, 0, 1129,
	388, 0, 389, 390, 391, 392, 393, 1165, 1166, 1169,
	479, 1208, 394, 395, 0, 396, 397, 398, 399, 400,
	0, 0, 0, 275, 401, 402, 403, 405, 0, 1207,
	404, 1174, 1175, 0, 1135, 0, 406, 407, 1209, 1167,
	1210, 408, 409, 410, 1211, 411, 0, 0, 0, 412,
	413, 414, 415, 416, 417, 0, 418, 420, 419, 0,
	421, 1203, 1212, 422, 423, 1213, 0, 424, 425, 426,
	427, 428, 429, 432, 1158, 1157, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 1214, 458, 459, 460, 467,
	469, 470, 465, 466, 468, 471, 472, 462, 463, 474,
	464, 1215, 473, 461, 1097, 4033, 1216, 475, 476, 477,
	1120, 1168, 478, 1182, 480, 481, 0, 0, 482, 0,
	0, 0, 484, 485, 486, 0, 0, 487, 488, 673,
	1217, 489, 1218, 1197, 490, 491, 1107, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 0, 501, 502, 675,
	503, 504, 505, 676, 506, 507, 508, 1198, 509, 678,
	510, 511, 0, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 520, 1178, 521, 522, 524, 523, 525, 0,
	526, 0, 527, 528, 529, 0, 0, 0, 0, 0,
	530, 0, 532, 533, 534, 535, 531, 536, 537, 538,
	539, 540, 0, 541, 542, 543, 1219, 544, 545, 546,
	547, 548, 1108, 549, 0, 550, 551, 557, 558, 559,
	552, 553, 560, 561, 562, 563, 564, 0, 566, 567,
	565, 568, 569, 570, 1161, 571, 572, 554, 555, 573,
	574, 1220, 575, 576, 577, 578, 579, 580, 581, 1176,
	0, 582, 0, 583, 584, 585, 586, 588, 556, 589,
	594, 595, 1223, 590, 591, 592, 593, 1199, 597, 598,
	0, 599, 600, 1094, 596, 587, 0, 601, 602, 603,
	604, 605, 606, 607, 362, 608, 0, 609, 1188, 1189,
	1190, 1191, 0, 618, 0, 610, 611, 612, 1200, 613,
	1201, 1118, 614, 615, 616, 617, 0, 619, 620, 0,
	1101, 621, 622, 623, 625, 626, 624, 627, 1162, 628,
	0, 0, 629, 630, 631, 690, 1185, 1222, 0, 633,
	632, 634, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 1098, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1093,
	0, 0, 0, 0, 0, 0, 1091, 1092, 1950, 0,
	0, 0, 0, 0, 0, 1124, 0, 0, 0, 1122,
	1140, 1112, 1113, 1114, 1110, 1111, 1123, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 1164, 1128, 0, 0, 0, 286, 287, 1204,
	288, 289, 290, 291, 292, 293, 644, 1177, 0, 294,
	1184, 295, 1183, 0, 1194, 296, 297, 298, 299, 300,
	301, 1130, 1163, 1095, 302, 1224, 1225, 651, 0, 303,
	304, 1170, 0, 1151, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 1205, 327, 328, 329, 1154, 1152, 1153, 1160,
	1156, 1155, 1159, 330, 331, 332, 333, 334, 1187, 335,
	337, 1181, 1180, 1100, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 1172, 348,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 355,
	356, 1106, 357, 358, 359, 361, 363, 360, 364, 365,
	366, 367, 1195, 1196, 368, 1119, 274, 0, 0, 0,
	0, 0, 369, 370, 371, 1179, 0, 0, 0, 372,
	0, 373, 374, 0, 0, 1206, 375, 376, 377, 1192,
	1193, 378, 379, 380, 381, 382, 383, 384, 385, 386,
	0, 387, 1202, 0, 1129, 388, 0, 389, 390, 391,
	392, 393, 1165, 1166, 1169, 479, 1208, 394, 395, 0,
	396, 397, 398, 399, 400, 0, 0, 0, 275, 401,
	402, 403, 405, 0, 1207, 404, 1174, 1175, 0, 1135,
	0, 406, 407, 1209, 1167, 1210, 408, 409, 410, 1211,
	411, 0, 0, 0, 412, 413, 414, 415, 416, 417,
	0, 418, 420, 419, 0, 421, 1203, 1212, 422, 423,
	1213, 0, 424, 425, 426, 427, 428, 429, 432, 1158,
	1157, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	1214, 458, 459, 460, 467, 469, 470, 465, 466, 468,
	471, 472, 462, 463, 474, 464, 1215, 473, 461, 1097,
	276, 1216, 475, 476, 477, 1120, 1168, 478, 1182, 480,
	481, 0, 0, 482, 0, 0, 0, 484, 485, 486,
	0, 0, 487, 488, 673, 1217, 489, 1218, 1197, 490,
	491, 1107, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 0, 501, 502, 675, 503, 504, 505, 676, 506,
	507, 508, 1198, 509, 678, 510, 511, 0, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 520, 1178, 521,
	522, 524, 523, 525, 0, 526, 0, 527, 528, 529,
	0, 0, 0, 0, 0, 530, 0, 532, 533, 534,
	535, 531, 536, 537, 538, 539, 540, 0, 541, 542,
	543, 1219, 544, 545, 546, 547, 548, 1108, 549, 0,
	550, 551, 557, 558, 559, 552, 553, 560, 561, 562,
	563, 564, 0, 566, 567, 565, 568, 569, 570, 1161,
	571, 572, 554, 555, 573, 574, 1220, 575, 576, 577,
	578, 579, 580, 581, 1176, 0, 582, 0, 583, 584,
	585, 586, 588, 556, 589, 594, 595, 1223, 590, 591,
	592, 593, 1199, 597, 598, 0, 599, 600, 1094, 596,
	587, 0, 601, 602, 603, 604, 605, 606, 607, 362,
	608, 0, 609, 1188, 1189, 1190, 1191, 0, 618, 0,
	610, 611, 612, 1200, 613, 1201, 1118, 614, 615, 616,
	617, 0, 619, 620, 0, 1101, 621, 622, 623, 625,
	626, 624, 627, 1162, 628, 0, 0, 629, 630, 631,
	690, 1185, 1222, 3745, 633, 632, 634, 635, 693, 636,
	637, 0, 0, 0, 0, 638, 639, 694, 640, 641,
	642, 1098, 0, 0, 0, 0, 1140, 1112, 1113, 1114,
	1110, 1111, 1123, 0, 1093, 0, 0, 0, 0, 0,
	0, 1091, 1092, 277, 279, 278, 280, 281, 282, 283,
	1124, 284, 285, 0, 1122, 0, 0, 0, 1164, 1128,
	0, 0, 0, 286, 287, 1204, 288, 289, 290, 291,
	292, 293, 644, 1177, 0, 294, 1184, 295, 1183, 0,
	1194, 296, 297, 298, 299, 300, 301, 1130, 1163, 1095,
	302, 1224, 1225, 651, 0, 303, 304, 1170, 0, 1151,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 1205, 327,
	328, 329, 1154, 1152, 1153, 1160, 1156, 1155, 1159, 330,
	331, 332, 333, 334, 1187, 335, 337, 1181, 1180, 1100,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 1172, 348, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 355, 356, 1106, 357, 358,
	359, 361, 363, 360, 364, 365, 366, 367, 1195, 1196,
	368, 1119, 274, 0, 0, 0, 0, 0, 369, 370,
	371, 1179, 0, 0, 0, 372, 0, 373, 374, 0,
	0, 1206, 375, 376, 377, 1192, 1193, 378, 379, 380,
	381, 382, 383, 384, 385, 386, 0, 387, 1202, 0,
	1129, 388, 0, 389, 390, 391, 392, 393, 1165, 1166,
	1169, 479, 1208, 394, 395, 0, 396, 397, 398, 399,
	400, 0, 0, 0, 275, 401, 402, 403, 405, 0,
	1207, 404, 1174, 1175, 0, 1135, 0, 406, 407, 1209,
	1167, 1210, 408, 409, 410, 1211, 411, 0, 0, 0,
	412, 413, 414, 415, 416, 417, 0, 418, 420, 419,
	0, 421, 1203, 1212, 422, 423, 1213, 0, 424, 425,
	426, 427, 428, 429, 432, 1158, 1157, 430, 431, 433,
	434, 0, 435, 436, 438, 441, 437, 439, 440, 442,
	455, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 457, 0, 456, 1214, 458, 459, 460,
	467, 469, 470, 465, 466, 468, 471, 472, 462, 463,
	474, 464, 1215, 473, 461, 1097, 276, 1216, 475, 476,
	477, 1120, 1168, 478, 1182, 480, 481, 0, 0, 482,
	0, 0, 0, 484, 485, 486, 0, 0, 487, 488,
	673, 1217, 489, 1218, 1197, 490, 491, 1107, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 0, 501, 502,
	675, 503, 504, 505, 676, 506, 507, 508, 1198, 509,
	678, 510, 511, 0, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 520, 1178, 521, 522, 524, 523, 525,
	0, 526, 0, 527, 528, 529, 0, 0, 0, 0,
	0, 530, 0, 532, 533, 534, 535, 531, 536, 537,
	538, 539, 540, 0, 541, 542, 543, 1219, 544, 545,
	546, 547, 548, 1108, 549, 0, 550, 551, 557, 558,
	559, 552, 553, 560, 561, 562, 563, 564, 0, 566,
	567, 565, 568, 569, 570, 1161, 571, 572, 554, 555,
	573, 574, 1220, 575, 576, 577, 578, 579, 580, 581,
	1176, 0, 582, 0, 583, 584, 585, 586, 588, 556,
	589, 594, 595, 1223, 590, 591, 592, 593, 1199, 597,
	598, 0, 599, 600, 1094, 596, 587, 0, 601, 602,
	603, 604, 605, 606, 607, 362, 608, 0, 609, 1188,
	1189, 1190, 1191, 0, 618, 0, 610, 611, 612, 1200,
	613, 1201, 1118, 614, 615, 616, 617, 0, 619, 620,
	0, 1101, 621, 622, 623, 625, 626, 624, 627, 1162,
	628, 0, 0, 629, 630, 631, 690, 1185, 1222, 0,
	633, 632, 634, 635, 693, 636, 637, 0, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 1098, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1093, 0, 0, 0, 0, 0, 0, 1091, 1092, 1950,
	0, 0, 0, 0, 0, 0, 1124, 0, 0, 0,
	1122, 1140, 1112, 1113, 1114, 1110, 1111, 1123, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 1164, 1128, 0, 0, 0, 286, 287,
	1204, 288, 289, 290, 291, 292, 293, 644, 1177, 0,
	294, 1184, 295, 1183, 0, 1194, 296, 297, 298, 299,
	300, 301, 1130, 1163, 1095, 302, 1224, 1225, 651, 0,
	303, 304, 1170, 0, 1151, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 1205, 327, 328, 329, 1154, 1152, 1153,
	1160, 1156, 1155, 1159, 330, 331, 332, 333, 334, 1187,
	335, 337, 1181, 1180, 1100, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 1172,
	348, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 1106, 357, 358, 359, 361, 363, 360, 364,
	365, 366, 367, 1195, 1196, 368, 1119, 274, 0, 0,
	0, 0, 0, 369, 370, 371, 1179, 0, 0, 0,
	372, 0, 373, 374, 0, 2728, 1206, 375, 376, 377,
	1192, 1193, 378, 379, 380, 381, 382, 383, 384, 385,
	386, 0, 387, 1202, 0, 1129, 388, 0, 389, 390,
	391, 392, 393, 1165, 1166, 1169, 479, 1208, 394, 395,
	0, 396, 397, 398, 399, 400, 0, 0, 0, 275,
	401, 402, 403, 405, 0, 1207, 404, 1174, 1175, 0,
	1135, 0, 406, 407, 1209, 1167, 1210, 408, 409, 410,
	1211, 411, 0, 0, 0, 412, 413, 414, 415, 416,
	417, 0, 418, 420, 419, 0, 421, 1203, 1212, 422,
	423, 1213, 0, 424, 425, 426, 427, 428, 429, 432,
	1158, 1157, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 1214, 458, 459, 460, 467, 469, 470, 465, 466,
	468, 471, 472, 462, 463, 474, 464, 1215, 473, 461,
	1097, 276, 1216, 475, 476, 477, 1120, 1168, 478, 1182,
	480, 481, 0, 0, 482, 0, 0, 0, 484, 485,
	486, 0, 0, 487, 488, 673, 1217, 489, 1218, 1197,
	490, 491, 1107, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 0, 501, 502, 675, 503, 504, 505, 676,
	506, 507, 508, 1198, 509, 678, 510, 511, 0, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 520, 1178,
	521, 522, 524, 523, 525, 0, 526, 0, 527, 528,
	529, 0, 0, 0, 0, 0, 530, 0, 532, 533,
	534, 535, 531, 536, 537, 538, 539, 540, 0, 541,
	542, 543, 1219, 544, 545, 546, 547, 548, 1108, 549,
	0, 550, 551, 557, 558, 559, 552, 553, 560, 561,
	562, 563, 564, 0, 566, 567, 565, 568, 569, 570,
	1161, 571, 572, 554, 555, 573, 574, 1220, 575, 576,
	577, 578, 579, 580, 581, 1176, 0, 582, 0, 583,
	584, 585, 586, 588, 556, 589, 594, 595, 1223, 590,
	591, 592, 593, 1199, 597, 598, 0, 599, 600, 1094,
	596, 587, 0, 601, 602, 603, 604, 605, 606, 607,
	362, 608, 0, 609, 1188, 1189, 1190, 1191, 0, 618,
	0, 610, 611, 612, 1200, 613, 1201, 1118, 614, 615,
	616, 617, 0, 619, 620, 0, 1101, 621, 622, 623,
	625, 626, 624, 627, 1162, 628, 0, 0, 629, 630,
	631, 690, 1185, 1222, 0, 633, 632, 634, 635, 693,
	636, 637, 0, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 1098, 0, 0, 0, 0, 1140, 1112, 1113,
	1114, 1110, 1111, 1123, 0, 1093, 0, 0, 0, 0,
	0, 0, 1091, 1092, 277, 279, 278, 280, 281, 282,
	283, 1124, 284, 285, 0, 1122, 0, 0, 0, 1164,
	1128, 0, 0, 0, 286, 287, 1204, 288, 289, 290,
	291, 292, 293, 644, 1177, 0, 294, 1184, 295, 1183,
	0, 1194, 296, 297, 298, 299, 300, 301, 1130, 1163,
	1095, 302, 1224, 1225, 651, 0, 303, 304, 1170, 0,
	1151, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1205,
	327, 328, 329, 1154, 1152, 1153, 1160, 1156, 1155, 1159,
	330, 331, 332, 333, 334, 1187, 335, 337, 1181, 1180,
	1100, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 1172, 348, 0, 349, 350,
	351, 0, 352, 353, 354, 0, 355, 356, 1106, 357,
	358, 359, 361, 363, 360, 364, 365, 366, 367, 1195,
	1196, 368, 1119, 274, 0, 0, 0, 0, 0, 369,
	370, 371, 1179, 0, 0, 0, 372, 0, 373, 374,
	0, 0, 1206, 375, 376, 377, 1192, 1193, 378, 379,
	380, 381, 382, 383, 384, 385, 386, 0, 387, 1202,
	0, 1129, 388, 0, 389, 390, 391, 392, 393, 1165,
	1166, 1169, 479, 1208, 394, 395, 0, 396, 397, 398,
	399, 400, 0, 0, 0, 275, 401, 402, 403, 405,
	0, 1207, 404, 1174, 1175, 0, 1135, 0, 406, 407,
	1209, 1167, 1210, 408, 409, 410, 1211, 411, 0, 0,
	0, 412, 413, 414, 415, 416, 417, 0, 418, 420,
	419, 0, 421, 1203, 1212, 422, 423, 1213, 0, 424,
	425, 426, 427, 428, 429, 432, 1158, 1157, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 1214, 458, 459,
	460, 467, 469, 470, 465, 466, 468, 471, 472, 462,
	463, 474, 464, 1215, 473, 461, 1097, 276, 1216, 475,
	476, 477, 1120, 1168, 478, 1182, 480, 481, 0, 0,
	482, 0, 0, 0, 484, 485, 486, 0, 0, 487,
	488, 673, 1217, 489, 1218, 1197, 490, 491, 1107, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 0, 501,
	502, 675, 503, 504, 505, 676, 506, 507, 508, 1198,
	509, 678, 510, 511, 0, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 520, 1178, 521, 522, 524, 523,
	525, 0, 526, 0, 527, 528, 529, 0, 0, 0,
	0, 0, 530, 0, 532, 533, 534, 535, 531, 536,
	537, 538, 539, 540, 0, 541, 542, 543, 1219, 544,
	545, 546, 547, 548, 1108, 549, 0, 550, 551, 557,
	558, 559, 552, 553, 560, 561, 562, 563, 564, 0,
	566, 567, 565, 568, 569, 570, 1161, 571, 572, 554,
	555, 573, 574, 1220, 575, 576, 577, 578, 579, 580,
	581, 1176, 0, 582, 0, 583, 584, 585, 586, 588,
	556, 589, 594, 595, 1223, 590, 591, 592, 593, 1199,
	597, 598, 0, 599, 600, 1094, 596, 587, 0, 601,
	602, 603, 604, 605, 606, 607, 362, 608, 0, 609,
	1188, 1189, 1190, 1191, 0, 618, 0, 610, 611, 612,
	1200, 613, 1201, 1118, 614, 615, 616, 617, 0, 619,
	620, 0, 1101, 621, 622, 623, 625, 626, 624, 627,
	1162, 628, 0, 0, 629, 630, 631, 690, 1185, 1222,
	0, 633, 632, 634, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 1098, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1093, 0, 0, 0, 0, 0, 0, 1091, 1092,
	0, 0, 0, 0, 0, 0, 0, 1124, 1879, 0,
	2733, 1122, 1140, 1112, 1113, 1114, 1110, 1111, 1123, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 1164, 1128, 0, 0, 0, 286,
	287, 1204, 288, 289, 290, 291, 292, 293, 644, 1177,
	0, 294, 1184, 295, 1183, 0, 1194, 296, 297, 298,
	299, 300, 301, 1130, 1163, 1095, 302, 1224, 1225, 651,
	0, 303, 304, 1170, 0, 1151, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 1205, 327, 328, 329, 1154, 1152,
	1153, 1160, 1156, 1155, 1159, 330, 331, 332, 333, 334,
	1187, 335, 337, 1181, 1180, 1100, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	1172, 348, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 355, 356, 1106, 357, 358, 359, 361, 363, 360,
	364, 365, 366, 367, 1195, 1196, 368, 1119, 274, 0,
	0, 0, 0, 0, 369, 370, 371, 1179, 0, 0,
	0, 372, 0, 373, 374, 0, 0, 1206, 375, 376,
	377, 1192, 1193, 378, 379, 380, 381, 382, 383, 384,
	385, 386, 0, 387, 1202, 0, 1129, 388, 0, 389,
	390, 391, 392, 393, 1165, 1166, 1169, 479, 1208, 394,
	395, 0, 396, 397, 398, 399, 400, 0, 0, 0,
	275, 401, 402, 403, 405, 0, 1207, 404, 1174, 1175,
	0, 1135, 0, 406, 407, 1209, 1167, 1210, 408, 409,
	410, 1211, 411, 0, 0, 0, 412, 413, 414, 415,
	416, 417, 0, 418, 420, 419, 0, 421, 1203, 1212,
	422, 423, 1213, 0, 424, 425, 426, 427, 428, 429,
	432, 1158, 1157, 430, 431, 433, 434, 0, 435, 436,
	438, 441, 437, 439, 440, 442, 455, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 457,
	0, 456, 1214, 458, 459, 460, 467, 469, 470, 465,
	466, 468, 471, 472, 462, 463, 474, 464, 1215, 473,
	461, 1097, 276, 1216, 475, 476, 477, 1120, 1168, 478,
	1182, 480, 481, 0, 0, 482, 0, 0, 0, 484,
	485, 486, 0, 0, 487, 488, 673, 1217, 489, 1218,
	1197, 490, 491, 1107, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 0, 501, 502, 675, 503, 504, 505,
	676, 506, 507, 508, 1198, 509, 678, 510, 511, 0,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 520,
	1178, 521, 522, 524, 523, 525, 0, 526, 0, 527,
	528, 529, 0, 0, 0, 0, 0, 530, 0, 532,
	533, 534, 535, 531, 536, 537, 538, 539, 540, 0,
	541, 542, 543, 1219, 544, 545, 546, 547, 548, 1108,
	549, 0, 550, 551, 557, 558, 559, 552, 553, 560,
	561, 562, 563, 564, 0, 566, 567, 565, 568, 569,
	570, 1161, 571, 572, 554, 555, 573, 574, 1220, 575,
	576, 577, 578, 579, 580, 581, 1176, 0, 582, 0,
	583, 584, 585, 586, 588, 556, 589, 594, 595, 1223,
	590, 591, 592, 593, 1199, 597, 598, 0, 599, 600,
	1094, 596, 587, 0, 601, 602, 603, 604, 605, 606,
	607, 362, 608, 0, 609, 1188, 1189, 1190, 1191, 0,
	618, 0, 610, 611, 612, 1200, 613, 1201, 1118, 614,
	615, 616, 617, 0, 619, 620, 0, 1101, 621, 622,
	623, 625, 626, 624, 627, 1162, 628, 0, 0, 629,
	630, 631, 690, 1185, 1222, 0, 633, 632, 634, 635,
	693, 636, 637, 0, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 1098, 0, 0, 2731, 0, 1140, 1112,
	1113, 1114, 1110, 1111, 1123, 0, 1093, 0, 0, 0,
	0, 0, 0, 1091, 1092, 277, 279, 278, 280, 281,
	282, 283, 1124, 284, 285, 0, 1122, 0, 0, 0,
	1164, 1128, 0, 0, 0, 286, 287, 1204, 288, 289,
	290, 291, 292, 293, 644, 1177, 0, 294, 1184, 295,
	1183, 0, 1194, 296, 297, 298, 299, 300, 301, 1130,
	1163, 1095, 302, 1224, 1225, 651, 0, 303, 304, 1170,
	0, 1151, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	1205, 327, 328, 329, 1154, 1152, 1153, 1160, 1156, 1155,
	1159, 330, 331, 332, 333, 334, 1187, 335, 337, 1181,
	1180, 1100, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 1172, 348, 0, 349,
	350, 351, 0, 352, 353, 354, 0, 355, 356, 1106,
	357, 358, 359, 361, 363, 360, 364, 365, 366, 367,
	1195, 1196, 368, 1119, 274, 0, 0, 0, 0, 0,
	369, 370, 371, 1179, 0, 0, 0, 372, 0, 373,
	374, 0, 0, 1206, 375, 376, 377, 1192, 1193, 378,
	379, 380, 381, 382, 383, 384, 385, 386, 0, 387,
	1202, 0, 1129, 388, 0, 389, 390, 391, 392, 393,
	1165, 1166, 1169, 479, 1208, 394, 395, 0, 396, 397,
	398, 399, 400, 0, 0, 0, 275, 401, 402, 403,
	405, 0, 1207, 404, 1174, 1175, 0, 1135, 0, 406,
	407, 1209, 1167, 1210, 408, 409, 410, 1211, 411, 0,
	0, 0, 412, 413, 414, 415, 416, 417, 0, 418,
	420, 419, 0, 421, 1203, 1212, 422, 423, 1213, 0,
	424, 425, 426, 427, 428, 429, 432, 1158, 1157, 430,
	431, 433, 434, 0, 435, 436, 438, 441, 437, 439,
	440, 442, 455, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 457, 0, 456, 1214, 458,
	459, 460, 467, 469, 470, 465, 466, 468, 471, 472,
	462, 463, 474, 464, 1215, 473, 461, 1097, 276, 1216,
	475, 476, 477, 1120, 1168, 478, 1182, 480, 481, 0,
	0, 482, 0, 0, 0, 484, 485, 486, 0, 0,
	487, 488, 673, 1217, 489, 1218, 1197, 490, 491, 1107,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 0,
	501, 502, 675, 503, 504, 505, 676, 506, 507, 508,
	1198, 509, 678, 510, 511, 0, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 520, 1178, 521, 522, 524,
	523, 525, 0, 526, 0, 527, 528, 529, 0, 0,
	0, 0, 0, 530, 0, 532, 533, 534, 535, 531,
	536, 537, 538, 539, 540, 0, 541, 542, 543, 1219,
	544, 545, 546, 547, 548, 1108, 549, 0, 550, 551,
	557, 558, 559, 552, 553, 560, 561, 562, 563, 564,
	0, 566, 567, 565, 568, 569, 570, 1161, 571, 572,
	554, 555, 573, 574, 1220, 575, 576, 577, 578, 579,
	580, 581, 1176, 0, 582, 0, 583, 584, 585, 586,
	588, 556, 589, 594, 595, 1223, 590, 591, 592, 593,
	1199, 597, 598, 0, 599, 600, 1094, 596, 587, 0,
	601, 602, 603, 604, 605, 606, 607, 362, 608, 0,
	609, 1188, 1189, 1190, 1191, 0, 618, 0, 610, 611,
	612, 1200, 613, 1201, 1118, 614, 615, 616, 617, 0,
	619, 620, 0, 1101, 621, 622, 623, 625, 626, 624,
	627, 1162, 628, 0, 0, 629, 630, 631, 690, 1185,
	1222, 0, 633, 632, 634, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 1098,
	0, 0, 2719, 0, 1140, 1112, 1113, 1114, 1110, 1111,
	1123, 0, 1093, 0, 0, 0, 0, 0, 0, 1091,
	1092, 277, 279, 278, 280, 281, 282, 283, 1124, 284,
	285, 0, 1122, 0, 0, 0, 1164, 1128, 0, 0,
	0, 286, 287, 1204, 288, 289, 290, 291, 292, 293,
	644, 1177, 0, 294, 1184, 295, 1183, 0, 1194, 296,
	297, 298, 299, 300, 301, 1130, 1163, 1095, 302, 1224,
	1225, 651, 0, 303, 304, 1170, 0, 1151, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 1205, 327, 328, 329,
	1154, 1152, 1153, 1160, 1156, 1155, 1159, 330, 331, 332,
	333, 334, 1187, 335, 337, 1181, 1180, 1100, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 1172, 348, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 355, 356, 1106, 357, 358, 359, 361,
	363, 360, 364, 365, 366, 367, 1195, 1196, 368, 1119,
	274, 0, 0, 0, 0, 0, 369, 370, 371, 1179,
	0, 0, 0, 372, 0, 373, 374, 0, 0, 1206,
	375, 376, 377, 1192, 1193, 378, 379, 380, 381, 382,
	383, 384, 385, 386, 0, 387, 1202, 0, 1129, 388,
	0, 389, 390, 391, 392, 393, 1165, 1166, 1169, 479,
	1208, 394, 395, 0, 396, 397, 398, 399, 400, 0,
	0, 0, 275, 401, 402, 403, 405, 0, 1207, 404,
	1174, 1175, 0, 1135, 0, 406, 407, 1209, 1167, 1210,
	408, 409, 410, 1211, 411, 0, 0, 0, 412, 413,
	414, 415, 416, 417, 0, 418, 420, 419, 0, 421,
	1203, 1212, 422, 423, 1213, 0, 424, 425, 426, 427,
	428, 429, 432, 1158, 1157, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 440, 442, 455, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 456, 1214, 458, 459, 460, 467, 469,
	470, 465, 466, 468, 471, 472, 462, 463, 474, 464,
	1215, 473, 461, 1097, 276, 1216, 475, 476, 477, 1120,
	1168, 478, 1182, 480, 481, 0, 0, 482, 0, 0,
	0, 484, 485, 486, 0, 0, 487, 488, 673, 1217,
	489, 1218, 1197, 490, 491, 1107, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 0, 501, 502, 675, 503,
	504, 505, 676, 506, 507, 508, 1198, 509, 678, 510,
	511, 0, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 520, 1178, 521, 522, 524, 523, 525, 0, 526,
	0, 527, 528, 529, 0, 0, 0, 0, 0, 530,
	0, 532, 533, 534, 535, 531, 536, 537, 538, 539,
	540, 0, 541, 542, 543, 1219, 544, 545, 546, 547,
	548, 1108, 549, 0, 550, 551, 557, 558, 559, 552,
	553, 560, 561, 562, 563, 564, 0, 566, 567, 565,
	568, 569, 570, 1161, 571, 572, 554, 555, 573, 574,
	1220, 575, 576, 577, 578, 579, 580, 581, 1176, 0,
	582, 0, 583, 584, 585, 586, 588, 556, 589, 594,
	595, 1223, 590, 591, 592, 593, 1199, 597, 598, 0,
	599, 600, 1094, 596, 587, 0, 601, 602, 603, 604,
	605, 606, 607, 362, 608, 0, 609, 1188, 1189, 1190,
	1191, 0, 618, 0, 610, 611, 612, 1200, 613, 1201,
	1118, 614, 615, 616, 617, 0, 619, 620, 0, 1101,
	621, 622, 623, 625, 626, 624, 627, 1162, 628, 0,
	0, 629, 630, 631, 690, 1185, 1222, 0, 633, 632,
	634, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 1098, 0, 0, 2707, 0,
	1140, 1112, 1113, 1114, 1110, 1111, 1123, 0, 1093, 0,
	0, 0, 0, 0, 0, 1091, 1092, 277, 279, 278,
	280, 281, 282, 283, 1124, 284, 285, 0, 1122, 0,
	0, 0, 1164, 1128, 0, 0, 0, 286, 287, 1204,
	288, 289, 290, 291, 292, 293, 644, 1177, 0, 294,
	1184, 295, 1183, 0, 1194, 296, 297, 298, 299, 300,
	301, 1130, 1163, 1095, 302, 1224, 1225, 651, 0, 303,
	304, 1170, 0, 1151, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 1205, 327, 328, 329, 1154, 1152, 1153, 1160,
	1156, 1155, 1159, 330, 331, 332, 333, 334, 1187, 335,
	337, 1181, 1180, 1100, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 1172, 348,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 355,
	356, 1106, 357, 358, 359, 361, 363, 360, 364, 365,
	366, 367, 1195, 1196, 368, 1119, 274, 0, 0, 0,
	0, 0, 369, 370, 371, 1179, 0, 0, 0, 372,
	0, 373, 374, 0, 0, 1206, 375, 376, 377, 1192,
	1193, 378, 379, 380, 381, 382, 383, 384, 385, 386,
	0, 387, 1202, 0, 1129, 388, 0, 389, 390, 391,
	392, 393, 1165, 1166, 1169, 479, 1208, 394, 395, 0,
	396, 397, 398, 399, 400, 0, 0, 0, 275, 401,
	402, 403, 405, 0, 1207, 404, 1174, 1175, 0, 1135,
	0, 406, 407, 1209, 1167, 1210, 408, 409, 410, 1211,
	411, 0, 0, 0, 412, 413, 414, 415, 416, 417,
	0, 418, 420, 419, 0, 421, 1203, 1212, 422, 423,
	1213, 0, 424, 425, 426, 427, 428, 429, 432, 1158,
	1157, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	1214, 458, 459, 460, 467, 469, 470, 465, 466, 468,
	471, 472, 462, 463, 474, 464, 1215, 473, 461, 1097,
	276, 1216, 475, 476, 477, 1120, 1168, 478, 1182, 480,
	481, 0, 0, 482, 0, 0, 0, 484, 485, 486,
	0, 0, 487, 488, 673, 1217, 489, 1218, 1197, 490,
	491, 1107, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 0, 501, 502, 675, 503, 504, 505, 676, 506,
	507, 508, 1198, 509, 678, 510, 511, 0, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 520, 1178, 521,
	522, 524, 523, 525, 0, 526, 0, 527, 528, 529,
	0, 0, 0, 0, 0, 530, 0, 532, 533, 534,
	535, 531, 536, 537, 538, 539, 540, 0, 541, 542,
	543, 1219, 544, 545, 546, 547, 548, 1108, 549, 0,
	550, 551, 557, 558, 559, 552, 553, 560, 561, 562,
	563, 564, 0, 566, 567, 565, 568, 569, 570, 1161,
	571, 572, 554, 555, 573, 574, 1220, 575, 576, 577,
	578, 579, 580, 581, 1176, 0, 582, 0, 583, 584,
	585, 586, 588, 556, 589, 594, 595, 1223, 590, 591,
	592, 593, 1199, 597, 598, 0, 599, 600, 1094, 596,
	587, 0, 601, 602, 603, 604, 605, 606, 607, 362,
	608, 0, 609, 1188, 1189, 1190, 1191, 0, 618, 0,
	610, 611, 612, 1200, 613, 1201, 1118, 614, 615, 616,
	617, 0, 619, 620, 0, 1101, 621, 622, 623, 625,
	626, 624, 627, 1162, 628, 0, 0, 629, 630, 631,
	690, 1185, 1222, 0, 633, 632, 634, 635, 693, 636,
	637, 0, 0, 0, 0, 638, 639, 694, 640, 641,
	642, 1098, 0, 0, 2705, 0, 2696, 2703, 1113, 1114,
	1110, 1111, 1123, 0, 1093, 0, 0, 0, 0, 0,
	0, 1091, 1092, 277, 279, 278, 280, 281, 282, 283,
	1124, 284, 285, 0, 1122, 0, 0, 0, 1164, 1128,
	0, 0, 0, 286, 287, 1204, 288, 289, 290, 291,
	292, 293, 644, 1177, 0, 294, 1184, 295, 1183, 0,
	1194, 296, 297, 298, 299, 300, 301, 1130, 1163, 1095,
	302, 1224, 1225, 651, 0, 303, 304, 1170, 0, 1151,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 1205, 327,
	328, 329, 1154, 1152, 1153, 1160, 1156, 1155, 1159, 330,
	331, 332, 333, 334, 1187, 2699, 337, 1181, 1180, 1100,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 1172, 348, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 355, 356, 1106, 357, 358,
	359, 361, 363, 360, 364, 365, 366, 367, 1195, 1196,
	368, 1119, 274, 0, 0, 0, 0, 0, 369, 370,
	371, 1179, 0, 0, 0, 372, 0, 373, 374, 0,
	0, 1206, 375, 376, 377, 1192, 1193, 378, 379, 380,
	381, 382, 383, 384, 385, 386, 0, 387, 1202, 0,
	1129, 388, 0, 389, 390, 391, 2700, 393, 1165, 1166,
	1169, 479, 1208, 394, 395, 0, 396, 397, 398, 399,
	400, 0, 0, 0, 275, 401, 402, 403, 405, 0,
	1207, 404, 1174, 1175, 0, 1135, 0, 406, 407, 1209,
	1167, 1210, 408, 409, 410, 1211, 411, 0, 0, 0,
	412, 413, 414, 415, 416, 417, 0, 418, 420, 419,
	0, 421, 1203, 1212, 422, 423, 1213, 0, 424, 425,
	426, 427, 428, 429, 432, 1158, 1157, 430, 431, 433,
	434, 0, 435, 436, 438, 441, 437, 439, 2701, 442,
	2698, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 457, 0, 456, 1214, 458, 459, 460,
	467, 469, 470, 465, 466, 468, 471, 472, 462, 463,
	474, 464, 1215, 473, 461, 1097, 276, 1216, 475, 476,
	477, 1120, 1168, 478, 1182, 480, 481, 0, 0, 482,
	0, 0, 0, 484, 485, 486, 0, 0, 487, 488,
	673, 1217, 489, 1218, 1197, 490, 491, 1107, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 0, 501, 502,
	675, 503, 504, 505, 676, 506, 507, 508, 1198, 509,
	678, 510, 511, 0, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 520, 1178, 521, 522, 524, 523, 525,
	0, 526, 0, 527, 528, 529, 0, 0, 0, 0,
	0, 530, 0, 532, 533, 534, 535, 531, 536, 537,
	538, 539, 540, 0, 541, 542, 543, 1219, 544, 545,
	546, 547, 548, 1108, 549, 0, 550, 551, 557, 558,
	559, 552, 553, 560, 561, 562, 563, 2702, 0, 566,
	567, 565, 568, 569, 570, 1161, 571, 572, 554, 555,
	573, 574, 1220, 575, 576, 577, 578, 579, 580, 581,
	1176, 0, 582, 0, 583, 584, 585, 586, 588, 556,
	589, 594, 595, 1223, 590, 591, 592, 593, 1199, 597,
	598, 0, 599, 600, 1094, 596, 587, 0, 601, 602,
	603, 604, 605, 606, 607, 362, 608, 0, 609, 1188,
	1189, 1190, 1191, 0, 618, 0, 610, 611, 612, 1200,
	613, 1201, 1118, 614, 615, 616, 617, 0, 619, 620,
	0, 1101, 621, 622, 623, 625, 626, 624, 627, 1162,
	628, 0, 0, 629, 630, 631, 690, 1185, 1222, 0,
	633, 632, 634, 635, 693, 636, 637, 0, 0, 0,
	0, 638, 639, 694, 640, 2697, 642, 1098, 0, 0,
	2693, 0, 2696, 2703, 1113, 1114, 1110, 1111, 1123, 0,
	1093, 0, 0, 0, 0, 0, 0, 1091, 1092, 277,
	279, 278, 280, 281, 282, 283, 1124, 284, 285, 0,
	1122, 0, 0, 0, 1164, 1128, 0, 0, 0, 286,
	287, 1204, 288, 289, 290, 291, 292, 293, 644, 1177,
	0, 294, 1184, 295, 1183, 0, 1194, 296, 297, 298,
	299, 300, 301, 1130, 1163, 1095, 302, 1224, 1225, 651,
	0, 303, 304, 1170, 0, 1151, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 1205, 327, 328, 329, 1154, 1152,
	1153, 1160, 1156, 1155, 1159, 330, 331, 332, 333, 334,
	1187, 2699, 337, 1181, 1180, 1100, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	1172, 348, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 355, 356, 1106, 357, 358, 359, 361, 363, 360,
	364, 365, 366, 367, 1195, 1196, 368, 1119, 274, 0,
	0, 0, 0, 0, 369, 370, 371, 1179, 0, 0,
	0, 372, 0, 373, 374, 0, 0, 1206, 375, 376,
	377, 1192, 1193, 378, 379, 380, 381, 382, 383, 384,
	385, 386, 0, 387, 1202, 0, 1129, 388, 0, 389,
	390, 391, 2700, 393, 1165, 1166, 1169, 479, 1208, 394,
	395, 0, 396, 397, 398, 399, 400, 0, 0, 0,
	275, 401, 402, 403, 405, 0, 1207, 404, 1174, 1175,
	0, 1135, 0, 406, 407, 1209, 1167, 1210, 408, 409,
	410, 1211, 411, 0, 0, 0, 412, 413, 414, 415,
	416, 417, 0, 418, 420, 419, 0, 421, 1203, 1212,
	422, 423, 1213, 0, 424, 425, 426, 427, 428, 429,
	432, 1158, 1157, 430, 431, 433, 434, 0, 435, 436,
	438, 441, 437, 439, 2701, 442, 2698, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 457,
	0, 456, 1214, 458, 459, 460, 467, 469, 470, 465,
	466, 468, 471, 472, 462, 463, 474, 464, 1215, 473,
	461, 1097, 276, 1216, 475, 476, 477, 1120, 1168, 478,
	1182, 480, 481, 0, 0, 482, 0, 0, 0, 484,
	485, 486, 0, 0, 487, 488, 673, 1217, 489, 1218,
	1197, 490, 491, 1107, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 0, 501, 502, 675, 503, 504, 505,
	676, 506, 507, 508, 1198, 509, 678, 510, 511, 0,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 520,
	1178, 521, 522, 524, 523, 525, 0, 526, 0, 527,
	528, 529, 0, 0, 0, 0, 0, 530, 0, 532,
	533, 534, 535, 531, 536, 537, 538, 539, 540, 0,
	541, 542, 543, 1219, 544, 545, 546, 547, 548, 1108,
	549, 0, 550, 551, 557, 558, 559, 552, 553, 560,
	561, 562, 563, 2702, 0, 566, 567, 565, 568, 569,
	570, 1161, 571, 572, 554, 555, 573, 574, 1220, 575,
	576, 577, 578, 579, 580, 581, 1176, 0, 582, 0,
	583, 584, 585, 586, 588, 556, 589, 594, 595, 1223,
	590, 591, 592, 593, 1199, 597, 598, 0, 599, 600,
	1094, 596, 587, 0, 601, 602, 603, 604, 605, 606,
	607, 362, 608, 0, 609, 1188, 1189, 1190, 1191, 0,
	618, 0, 610, 611, 612, 1200, 613, 1201, 1118, 614,
	615, 616, 617, 0, 619, 620, 0, 1101, 621, 622,
	623, 625, 626, 624, 627, 1162, 628, 0, 0, 629,
	630, 631, 690, 1185, 1222, 0, 633, 632, 634, 635,
	693, 636, 637, 0, 0, 0, 0, 638, 639, 694,
	640, 2697, 642, 1098, 0, 0, 0, 0, 1140, 1112,
	1113, 1114, 1110, 1111, 1123, 0, 1093, 0, 0, 0,
	0, 0, 0, 1091, 1092, 277, 279, 278, 280, 281,
	282, 283, 1124, 284, 285, 0, 1122, 0, 0, 0,
	1164, 1128, 0, 0, 0, 286, 287, 1204, 288, 289,
	290, 291, 292, 293, 644, 1177, 0, 294, 1184, 295,
	1183, 0, 1194, 296, 297, 298, 299, 300, 301, 1130,
	1163, 1095, 302, 1224, 1225, 651, 0, 303, 304, 1170,
	0, 1151, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	1205, 327, 328, 329, 1154, 1152, 1153, 1160, 1156, 1155,
	1159, 330, 331, 332, 333, 334, 1187, 335, 337, 1181,
	1180, 1100, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 1172, 348, 0, 349,
	350, 351, 0, 352, 353, 354, 0, 355, 356, 1106,
	357, 358, 359, 361, 363, 360, 364, 365, 366, 367,
	1195, 1196, 368, 1119, 274, 0, 0, 0, 0, 0,
	369, 370, 371, 1179, 0, 0, 0, 372, 0, 373,
	374, 0, 0, 1206, 375, 376, 377, 1192, 1193, 378,
	379, 380, 381, 382, 383, 384, 385, 386, 0, 387,
	1202, 0, 1129, 388, 0, 389, 390, 391, 392, 393,
	1165, 1166, 1169, 479, 1208, 394, 395, 0, 396, 397,
	398, 399, 400, 0, 0, 0, 275, 401, 402, 403,
	405, 0, 1207, 404, 1174, 1175, 0, 1135, 0, 406,
	407, 1209, 1167, 1210, 408, 409, 410, 1211, 411, 0,
	0, 0, 412, 413, 414, 415, 416, 417, 0, 418,
	420, 419, 0, 421, 1203, 1212, 422, 423, 1213, 0,
	424, 425, 426, 427, 428, 429, 432, 1158, 1157, 430,
	431, 433, 434, 0, 435, 436, 438, 441, 437, 439,
	440, 442, 455, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 457, 0, 456, 1214, 458,
	459, 460, 467, 469, 470, 465, 466, 468, 471, 472,
	462, 463, 474, 464, 1215, 473, 461, 1097, 276, 1216,
	475, 476, 477, 1120, 1168, 478, 1182, 480, 481, 0,
	0, 482, 0, 0, 0, 484, 485, 486, 0, 0,
	487, 488, 673, 1217, 489, 1218, 1197, 490, 491, 1107,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 0,
	501, 502, 675, 503, 504, 505, 676, 506, 507, 508,
	1198, 509, 678, 510, 511, 0, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 520, 1178, 521, 522, 524,
	523, 525, 0, 526, 0, 527, 528, 529, 0, 0,
	0, 0, 0, 530, 0, 532, 533, 534, 535, 531,
	536, 537, 538, 539, 540, 0, 541, 542, 543, 1219,
	544, 545, 546, 547, 548, 1108, 549, 0, 550, 551,
	557, 558, 559, 552, 553, 560, 561, 562, 563, 564,
	0, 566, 567, 565, 568, 569, 570, 1161, 571, 572,
	554, 555, 573, 574, 1220, 575, 576, 577, 578, 579,
	580, 581, 1176, 0, 582, 0, 583, 584, 585, 586,
	588, 556, 589, 594, 595, 1223, 590, 591, 592, 593,
	1199, 597, 598, 0, 599, 600, 1094, 596, 587, 0,
	601, 602, 603, 604, 605, 606, 607, 362, 608, 0,
	609, 1188, 1189, 1190, 1191, 0, 618, 0, 610, 611,
	612, 1200, 613, 1201, 1118, 614, 615, 616, 617, 0,
	619, 620, 0, 1101, 621, 622, 623, 625, 626, 624,
	627, 1162, 628, 0, 0, 629, 630, 631, 690, 1185,
	1222, 0, 633, 632, 634, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 1098,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1093, 0, 0, 0, 0, 0, 0, 1091,
	1092, 0, 0, 0, 0, 0, 1887, 0, 1124, 0,
	0, 0, 1122, 1140, 1112, 1113, 1114, 1110, 1111, 1123,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 2448, 284, 285,
	0, 0, 0, 0, 0, 1164, 1128, 0, 0, 0,
	286, 287, 1204, 288, 289, 290, 291, 292, 293, 644,
	1177, 0, 294, 1184, 295, 1183, 0, 1194, 296, 297,
	298, 299, 300, 301, 1130, 1163, 1095, 302, 1224, 1225,
	651, 0, 303, 304, 1170, 0, 1151, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 1205, 327, 328, 329, 1154,
	1152, 1153, 1160, 1156, 1155, 1159, 330, 331, 332, 333,
	334, 1187, 335, 337, 1181, 1180, 1100, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 1172, 348, 0, 349, 350, 351, 0, 352, 353,
	354, 0, 355, 356, 1106, 357, 358, 359, 361, 363,
	360, 364, 365, 366, 367, 1195, 1196, 368, 1119, 274,
	0, 0, 0, 0, 0, 369, 370, 371, 1179, 0,
	0, 0, 372, 0, 373, 374, 0, 0, 1206, 375,
	376, 377, 1192, 1193, 378, 379, 380, 381, 382, 383,
	384, 385, 386, 0, 387, 1202, 0, 1129, 388, 0,
	389, 390, 391, 392, 393, 1165, 1166, 1169, 479, 1208,
	394, 395, 0, 396, 397, 398, 399, 400, 0, 0,
	0, 275, 401, 402, 403, 405, 0, 1207, 404, 1174,
	1175, 0, 1135, 0, 406, 407, 1209, 1167, 1210, 408,
	409, 410, 1211, 411, 0, 0, 0, 412, 413, 414,
	415, 416, 417, 0, 418, 420, 419, 0, 421, 1203,
	1212, 422, 423, 1213, 0, 424, 425, 426, 427, 428,
	429, 432, 1158, 1157, 430, 431, 433, 434, 0, 435,
	436, 438, 441, 437, 439, 440, 442, 455, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	457, 0, 456, 1214, 458, 459, 460, 467, 469, 470,
	465, 466, 468, 471, 472, 462, 463, 474, 464, 1215,
	473, 461, 1097, 276, 1216, 475, 476, 477, 1120, 1168,
	478, 1182, 480, 481, 0, 0, 482, 0, 0, 0,
	484, 485, 486, 0, 0, 487, 488, 673, 1217, 489,
	1218, 1197, 490, 491, 1107, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 0, 501, 502, 675, 503, 504,
	505, 676, 506, 507, 508, 1198, 509, 678, 510, 511,
	0, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	520, 1178, 521, 522, 524, 523, 525, 0, 526, 0,
	527, 528, 529, 0, 0, 0, 0, 0, 530, 0,
	532, 533, 534, 535, 531, 536, 537, 538, 539, 540,
	0, 541, 542, 543, 1219, 544, 545, 546, 547, 548,
	1108, 549, 0, 550, 551, 557, 558, 559, 552, 553,
	560, 561, 562, 563, 564, 0, 566, 567, 565, 568,
	569, 570, 1161, 571, 572, 554, 555, 573, 574, 1220,
	575, 576, 577, 578, 579, 580, 581, 1176, 0, 582,
	0, 583, 584, 585, 586, 588, 556, 589, 594, 595,
	1223, 590, 591, 592, 593, 1199, 597, 598, 0, 599,
	600, 1094, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 362, 608, 0, 609, 1188, 1189, 1190, 1191,
	0, 618, 0, 610, 611, 612, 1200, 613, 1201, 1118,
	614, 615, 616, 617, 0, 619, 620, 0, 1101, 621,
	622, 623, 625, 626, 624, 627, 1162, 628, 0, 0,
	629, 630, 631, 690, 1185, 1222, 0, 633, 632, 634,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 1098, 0, 0, 2412, 0, 1140,
	1112, 1113, 1114, 1110, 1111, 1123, 0, 1093, 0, 0,
	0, 0, 0, 0, 1091, 1092, 277, 279, 278, 280,
	281, 282, 283, 1124, 284, 285, 0, 1122, 0, 0,
	0, 1164, 1128, 0, 0, 0, 286, 287, 1204, 288,
	289, 290, 291, 292, 293, 644, 1177, 0, 294, 1184,
	295, 1183, 0, 1194, 296, 297, 298, 299, 300, 301,
	1130, 1163, 1095, 302, 1224, 1225, 651, 0, 303, 304,
	1170, 0, 1151, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 1205, 327, 328, 329, 1154, 1152, 1153, 1160, 1156,
	1155, 1159, 330, 331, 332, 333, 334, 1187, 335, 337,
	1181, 1180, 1100, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 1172, 348, 0,
	349, 350, 351, 0, 352, 353, 354, 0, 355, 356,
	1106, 357, 358, 359, 361, 363, 360, 364, 365, 366,
	367, 1195, 1196, 368, 1119, 274, 0, 0, 0, 0,
	0, 369, 370, 371, 1179, 0, 0, 0, 372, 0,
	373, 374, 0, 0, 1206, 375, 376, 377, 1192, 1193,
	378, 379, 380, 381, 382, 383, 384, 385, 386, 0,
	387, 1202, 0, 1129, 388, 0, 389, 390, 391, 392,
	393, 1165, 1166, 1169, 479, 1208, 394, 395, 0, 396,
	397, 398, 399, 400, 0, 0, 0, 275, 401, 402,
	403, 405, 0, 1207, 404, 1174, 1175, 0, 1135, 0,
	406, 407, 1209, 1167, 1210, 408, 409, 410, 1211, 411,
	0, 0, 0, 412, 413, 414, 415, 416, 417, 0,
	418, 420, 419, 0, 421, 1203, 1212, 422, 423, 1213,
	0, 424, 425, 426, 427, 428, 429, 432, 1158, 1157,
	430, 431, 433, 434, 0, 435, 436, 438, 441, 437,
	439, 440, 442, 455, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 457, 0, 456, 1214,
	458, 459, 460, 467, 469, 470, 465, 466, 468, 471,
	472, 462, 463, 474, 464, 1215, 473, 461, 1097, 276,
	1216, 475, 476, 477, 1120, 1168, 478, 1182, 480, 481,
	0, 0, 482, 0, 0, 0, 484, 485, 486, 0,
	0, 487, 488, 673, 1217, 489, 1218, 1197, 490, 491,
	1107, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	0, 501, 502, 675, 503, 504, 505, 676, 506, 507,
	508, 1198, 509, 678, 510, 511, 0, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 520, 1178, 521, 522,
	524, 523, 525, 0, 526, 0, 527, 528, 529, 0,
	0, 0, 0, 0, 530, 0, 532, 533, 534, 535,
	531, 536, 537, 538, 539, 540, 0, 541, 542, 543,
	1219, 544, 545, 546, 547, 548, 1108, 549, 0, 550,
	551, 557, 558, 559, 552, 553, 560, 561, 562, 563,
	564, 0, 566, 567, 565, 568, 569, 570, 1161, 571,
	572, 554, 555, 573, 574, 1220, 575, 576, 577, 578,
	579, 580, 581, 1176, 0, 582, 0, 583, 584, 585,
	586, 588, 556, 589, 594, 595, 1223, 590, 591, 592,
	593, 1199, 597, 598, 0, 599, 600, 1094, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 362, 608,
	0, 609, 1188, 1189, 1190, 1191, 0, 618, 0, 610,
	611, 612, 1200, 613, 1201, 1118, 614, 615, 616, 617,
	0, 619, 620, 0, 1101, 621, 622, 623, 625, 626,
	624, 627, 1162, 628, 0, 0, 629, 630, 631, 690,
	1185, 1222, 0, 633, 632, 634, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	1098, 0, 0, 2387, 0, 1140, 1112, 1113, 1114, 1110,
	1111, 1123, 0, 1093, 0, 0, 0, 0, 0, 0,
	1091, 1092, 277, 279, 278, 280, 281, 282, 283, 1124,
	284, 285, 0, 1122, 0, 0, 0, 1164, 1128, 0,
	0, 0, 286, 287, 1204, 288, 289, 290, 291, 292,
	293, 644, 1177, 0, 294, 1184, 295, 1183, 0, 1194,
	296, 297, 298, 299, 300, 301, 1130, 1163, 1095, 302,
	1224, 1225, 651, 0, 303, 304, 1170, 0, 1151, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 1205, 327, 328,
	329, 1154, 1152, 1153, 1160, 1156, 1155, 1159, 330, 331,
	332, 333, 334, 1187, 335, 337, 1181, 1180, 1100, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 1172, 348, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 1106, 357, 358, 359,
	361, 363, 360, 364, 365, 366, 367, 1195, 1196, 368,
	1119, 274, 0, 0, 0, 0, 0, 369, 370, 371,
	1179, 0, 0, 0, 372, 0, 373, 374, 0, 0,
	1206, 375, 376, 377, 1192, 1193, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 0, 387, 1202, 0, 1129,
	388, 0, 389, 390, 391, 392, 393, 1165, 1166, 1169,
	479, 1208, 394, 395, 0, 396, 397, 398, 399, 400,
	0, 0, 0, 275, 401, 402, 403, 405, 0, 1207,
	404, 1174, 1175, 0, 1135, 0, 406, 407, 1209, 1167,
	1210, 408, 409, 410, 1211, 411, 0, 0, 0, 412,
	413, 414, 415, 416, 417, 0, 418, 420, 419, 0,
	421, 1203, 1212, 422, 423, 1213, 0, 424, 425, 426,
	427, 428, 429, 432, 1158, 1157, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 1214, 458, 459, 460, 467,
	469, 470, 465, 466, 468, 471, 472, 462, 463, 474,
	464, 1215, 473, 461, 1097, 276, 1216, 475, 476, 477,
	1120, 1168, 478, 1182, 480, 481, 0, 0, 482, 0,
	0, 0, 484, 485, 486, 0, 0, 487, 488, 673,
	1217, 489, 1218, 1197, 490, 491, 1107, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 0, 501, 502, 675,
	503, 504, 505, 676, 506, 507, 508, 1198, 509, 678,
	510, 511, 0, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 520, 1178, 521, 522, 524, 523, 525, 0,
	526, 0, 527, 528, 529, 0, 0, 0, 0, 0,
	530, 0, 532, 533, 534, 535, 531, 536, 537, 538,
	539, 540, 0, 541, 542, 543, 1219, 544, 545, 546,
	547, 548, 1108, 549, 0, 550, 551, 557, 558, 559,
	552, 553, 560, 561, 562, 563, 564, 0, 566, 567,
	565, 568, 569, 570, 1161, 571, 572, 554, 555, 573,
	574, 1220, 575, 576, 577, 578, 579, 580, 581, 1176,
	0, 582, 0, 583, 584, 585, 586, 588, 556, 589,
	594, 595, 1223, 590, 591, 592, 593, 1199, 597, 598,
	0, 599, 600, 1094, 596, 587, 0, 601, 602, 603,
	604, 605, 606, 607, 362, 608, 0, 609, 1188, 1189,
	1190, 1191, 0, 618, 0, 610, 611, 612, 1200, 613,
	1201, 1118, 614, 615, 616, 617, 0, 619, 620, 0,
	1101, 621, 622, 623, 625, 626, 624, 627, 1162, 628,
	0, 0, 629, 630, 631, 690, 1185, 1222, 0, 633,
	632, 634, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 1098, 0, 0, 1727,
	0, 1140, 1112, 1113, 1114, 1110, 1111, 1123, 0, 1093,
	0, 0, 0, 0, 0, 0, 1091, 1092, 277, 279,
	278, 280, 281, 282, 283, 1124, 284, 285, 0, 1122,
	0, 0, 0, 1164, 1128, 0, 0, 0, 286, 287,
	1204, 288, 289, 290, 291, 292, 293, 644, 1177, 0,
	294, 1184, 295, 1183, 0, 1194, 296, 297, 298, 299,
	300, 301, 1130, 1163, 1095, 302, 1224, 1225, 651, 0,
	303, 304, 1170, 0, 1151, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 1205, 327, 328, 329, 1154, 1152, 1153,
	1160, 1156, 1155, 1159, 330, 331, 332, 333, 334, 1187,
	335, 337, 1181, 1180, 1100, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 1172,
	348, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 1106, 357, 358, 359, 361, 363, 360, 364,
	365, 366, 367, 1195, 1196, 368, 1119, 274, 0, 0,
	0, 0, 0, 369, 370, 371, 1179, 0, 0, 0,
	372, 0, 373, 374, 0, 0, 1206, 375, 376, 377,
	1192, 1193, 378, 379, 380, 381, 382, 383, 384, 385,
	386, 0, 387, 1202, 0, 1129, 388, 0, 389, 390,
	391, 392, 393, 1165, 1166, 1169, 479, 1208, 394, 395,
	0, 396, 397, 398, 399, 400, 0, 0, 0, 275,
	401, 402, 403, 405, 0, 1207, 404, 1174, 1175, 0,
	1135, 0, 406, 407, 1209, 1167, 1210, 408, 409, 410,
	1211, 411, 0, 0, 0, 412, 413, 414, 415, 416,
	417, 0, 418, 420, 419, 0, 421, 1203, 1212, 422,
	423, 1213, 0, 424, 425, 426, 427, 428, 429, 432,
	1158, 1157, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 1214, 458, 459, 460, 467, 469, 470, 465, 466,
	468, 471, 472, 462, 463, 474, 464, 1215, 473, 461,
	1097, 276, 1216, 475, 476, 477, 1120, 1168, 478, 1182,
	480, 481, 0, 0, 482, 0, 0, 0, 484, 485,
	486, 0, 0, 487, 488, 673, 1217, 489, 1218, 1197,
	490, 491, 1107, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 0, 501, 502, 675, 503, 504, 505, 676,
	506, 507, 508, 1198, 509, 678, 510, 511, 0, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 520, 1178,
	521, 522, 524, 523, 525, 0, 526, 0, 527, 528,
	529, 0, 0, 0, 0, 0, 530, 0, 532, 533,
	534, 535, 531, 536, 537, 538, 539, 540, 0, 541,
	542, 543, 1219, 544, 545, 546, 547, 548, 1108, 549,
	0, 550, 551, 557, 558, 559, 552, 553, 560, 561,
	562, 563, 564, 0, 566, 567, 565, 568, 569, 570,
	1161, 571, 572, 554, 555, 573, 574, 1220, 575, 576,
	577, 578, 579, 580, 581, 1176, 0, 582, 0, 583,
	584, 585, 586, 588, 556, 589, 594, 595, 1223, 590,
	591, 592, 593, 1199, 597, 598, 0, 599, 600, 1094,
	596, 587, 0, 601, 602, 603, 604, 605, 606, 607,
	362, 608, 0, 609, 1188, 1189, 1190, 1191, 0, 618,
	0, 610, 611, 612, 1200, 613, 1201, 1118, 614, 615,
	616, 617, 0, 619, 620, 0, 1101, 621, 622, 623,
	625, 626, 624, 627, 1162, 628, 0, 0, 629, 630,
	631, 690, 1185, 1222, 0, 633, 632, 634, 635, 693,
	636, 637, 0, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 1098, 0, 0, 1656, 0, 1140, 1112, 1113,
	1114, 1110, 1111, 1123, 0, 1093, 0, 0, 0, 0,
	0, 0, 1091, 1092, 277, 279, 278, 280, 281, 282,
	283, 1124, 284, 285, 0, 1122, 0, 0, 0, 1164,
	1128, 0, 0, 0, 286, 287, 1204, 288, 289, 290,
	291, 292, 293, 644, 1177, 0, 294, 1184, 295, 1183,
	0, 1194, 296, 297, 298, 299, 300, 301, 1130, 1163,
	1095, 302, 1224, 1225, 651, 0, 303, 304, 1170, 0,
	1151, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1205,
	327, 328, 329, 1154, 1152, 1153, 1160, 1156, 1155, 1159,
	330, 331, 332, 333, 334, 1187, 335, 337, 1181, 1180,
	1100, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 1172, 348, 0, 349, 350,
	351, 0, 352, 353, 354, 0, 355, 356, 1106, 357,
	358, 359, 361, 363, 360, 364, 365, 366, 367, 1195,
	1196, 368, 1119, 274, 0, 0, 0, 0, 0, 369,
	370, 371, 1179, 0, 0, 0, 372, 0, 373, 374,
	0, 0, 1206, 375, 376, 377, 1192, 1193, 378, 379,
	380, 381, 382, 383, 384, 385, 386, 0, 387, 1202,
	0, 1129, 388, 0, 389, 390, 391, 392, 393, 1165,
	1166, 1169, 479, 1208, 394, 395, 0, 396, 397, 398,
	399, 400, 0, 0, 0, 275, 401, 402, 403, 405,
	0, 1207, 404, 1174, 1175, 0, 1135, 0, 406, 407,
	1209, 1167, 1210, 408, 409, 410, 1211, 411, 0, 0,
	0, 412, 413, 414, 415, 416, 417, 0, 418, 420,
	419, 0, 421, 1203, 1212, 422, 423, 1213, 0, 424,
	425, 426, 427, 428, 429, 432, 1158, 1157, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 1214, 458, 459,
	460, 467, 469, 470, 465, 466, 468, 471, 472, 462,
	463, 474, 464, 1215, 473, 461, 1097, 276, 1216, 475,
	476, 477, 1120, 1168, 478, 1182, 480, 481, 0, 0,
	482, 0, 0, 0, 484, 485, 486, 0, 0, 487,
	488, 673, 1217, 489, 1218, 1197, 490, 491, 1107, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 0, 501,
	502, 675, 503, 504, 505, 676, 506, 507, 508, 1198,
	509, 678, 510, 511, 0, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 520, 1178, 521, 522, 524, 523,
	525, 0, 526, 0, 527, 528, 529, 0, 0, 0,
	0, 0, 530, 0, 532, 533, 534, 535, 531, 536,
	537, 538, 539, 540, 0, 541, 542, 543, 1219, 544,
	545, 546, 547, 548, 1108, 549, 0, 550, 551, 557,
	558, 559, 552, 553, 560, 561, 562, 563, 564, 0,
	566, 567, 565, 568, 569, 570, 1161, 571, 572, 554,
	555, 573, 574, 1220, 575, 576, 577, 578, 579, 580,
	581, 1176, 0, 582, 0, 583, 584, 585, 586, 588,
	556, 589, 594, 595, 1223, 590, 591, 592, 593, 1199,
	597, 598, 0, 599, 600, 1094, 596, 587, 0, 601,
	602, 603, 604, 605, 606, 607, 362, 608, 0, 609,
	1188, 1189, 1190, 1191, 0, 618, 0, 610, 611, 612,
	1200, 613, 1201, 1118, 614, 615, 616, 617, 0, 619,
	620, 0, 1101, 621, 622, 623, 625, 626, 624, 627,
	1162, 628, 0, 0, 629, 630, 631, 690, 1185, 1222,
	0, 633, 632, 634, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 1098, 0,
	0, 1651, 0, 1140, 1112, 1113, 1114, 1110, 1111, 1123,
	0, 1093, 0, 0, 0, 0, 0, 0, 1091, 1092,
	277, 279, 278, 280, 281, 282, 283, 1124, 284, 285,
	0, 1122, 0, 0, 0, 1164, 1128, 0, 0, 0,
	286, 287, 1204, 288, 289, 290, 291, 292, 293, 644,
	1177, 0, 294, 1184, 295, 1183, 0, 1194, 296, 297,
	298, 299, 300, 301, 1130, 1163, 1095, 302, 1224, 1225,
	651, 0, 303, 304, 1170, 0, 1151, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 1205, 327, 328, 329, 1154,
	1152, 1153, 1160, 1156, 1155, 1159, 330, 331, 332, 333,
	334, 1187, 335, 337, 1181, 1180, 1100, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 1172, 348, 0, 349, 350, 351, 0, 352, 353,
	354, 0, 355, 356, 1106, 357, 358, 359, 361, 363,
	360, 364, 365, 366, 367, 1195, 1196, 368, 1119, 274,
	0, 0, 0, 0, 0, 369, 370, 371, 1179, 0,
	0, 0, 372, 0, 373, 374, 0, 0, 1206, 375,
	376, 377, 1192, 1193, 378, 379, 380, 381, 382, 383,
	384, 385, 386, 0, 387, 1202, 0, 1129, 388, 0,
	389, 390, 391, 392, 393, 1165, 1166, 1169, 479, 1208,
	394, 395, 0, 396, 397, 398, 399, 400, 0, 0,
	0, 275, 401, 402, 403, 405, 0, 1207, 404, 1174,
	1175, 0, 1135, 0, 406, 407, 1209, 1167, 1210, 408,
	409, 410, 1211, 411, 0, 0, 0, 412, 413, 414,
	415, 416, 417, 0, 418, 420, 419, 0, 421, 1203,
	1212, 422, 423, 1213, 0, 424, 425, 426, 427, 428,
	429, 432, 1158, 1157, 430, 431, 433, 434, 0, 435,
	436, 438, 441, 437, 439, 440, 442, 455, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	457, 0, 456, 1214, 458, 459, 460, 467, 469, 470,
	465, 466, 468, 471, 472, 462, 463, 474, 464, 1215,
	473, 461, 1097, 276, 1216, 475, 476, 477, 1120, 1168,
	478, 1182, 480, 481, 0, 0, 482, 0, 0, 0,
	484, 485, 486, 0, 0, 487, 488, 673, 1217, 489,
	1218, 1197, 490, 491, 1107, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 0, 501, 502, 675, 503, 504,
	505, 676, 506, 507, 508, 1198, 509, 678, 510, 511,
	0, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	520, 1178, 521, 522, 524, 523, 525, 0, 526, 0,
	527, 528, 529, 0, 0, 0, 0, 0, 530, 0,
	532, 533, 534, 535, 531, 536, 537, 538, 539, 540,
	0, 541, 542, 543, 1219, 544, 545, 546, 547, 548,
	1108, 549, 0, 550, 551, 557, 558, 559, 552, 553,
	560, 561, 562, 563, 564, 0, 566, 567, 565, 568,
	569, 570, 1161, 571, 572, 554, 555, 573, 574, 1220,
	575, 576, 577, 578, 579, 580, 581, 1176, 0, 582,
	0, 583, 584, 585, 586, 588, 556, 589, 594, 595,
	1223, 590, 591, 592, 593, 1199, 597, 598, 0, 599,
	600, 1094, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 362, 608, 0, 609, 1188, 1189, 1190, 1191,
	0, 618, 0, 610, 611, 612, 1200, 613, 1201, 1118,
	614, 615, 616, 617, 0, 619, 620, 0, 1101, 621,
	622, 623, 625, 626, 624, 627, 1162, 628, 0, 0,
	629, 630, 631, 690, 1185, 1222, 0, 633, 632, 634,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 1098, 0, 0, 1642, 0, 1140,
	1112, 1113, 1114, 1110, 1111, 1123, 0, 1093, 0, 0,
	0, 0, 0, 0, 1091, 1092, 277, 279, 278, 280,
	281, 282, 283, 1124, 284, 285, 0, 1122, 0, 0,
	0, 1164, 1128, 0, 0, 0, 286, 287, 1204, 288,
	289, 290, 291, 292, 293, 644, 1177, 0, 294, 1184,
	295, 1183, 0, 1194, 296, 297, 298, 299, 300, 301,
	1130, 1163, 1095, 302, 1224, 1225, 651, 0, 303, 304,
	1170, 0, 1151, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 1205, 327, 328, 329, 1154, 1152, 1153, 1160, 1156,
	1155, 1159, 330, 331, 332, 333, 334, 1187, 335, 337,
	1181, 1180, 1100, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 1172, 348, 0,
	349, 350, 351, 0, 352, 353, 354, 0, 355, 356,
	1106, 357, 358, 359, 361, 363, 360, 364, 365, 366,
	367, 1195, 1196, 368, 1119, 274, 0, 0, 0, 0,
	0, 369, 370, 371, 1179, 0, 0, 0, 372, 0,
	373, 374, 0, 0, 1206, 375, 376, 377, 1192, 1193,
	378, 379, 380, 381, 382, 383, 384, 385, 386, 0,
	387, 1202, 0, 1129, 388, 0, 389, 390, 391, 392,
	393, 1165, 1166, 1169, 479, 1208, 394, 395, 0, 396,
	397, 398, 399, 400, 0, 0, 0, 275, 401, 402,
	403, 405, 0, 1207, 404, 1174, 1175, 0, 1135, 0,
	406, 407, 1209, 1167, 1210, 408, 409, 410, 1211, 411,
	0, 0, 0, 412, 413, 414, 415, 416, 417, 0,
	418, 420, 419, 0, 421, 1203, 1212, 422, 423, 1213,
	0, 424, 425, 426, 427, 428, 429, 432, 1158, 1157,
	430, 431, 433, 434, 0, 435, 436, 438, 441, 437,
	439, 440, 442, 455, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 457, 0, 456, 1214,
	458, 459, 460, 467, 469, 470, 465, 466, 468, 471,
	472, 462, 463, 474, 464, 1215, 473, 461, 1097, 276,
	1216, 475, 476, 477, 1120, 1168, 478, 1182, 480, 481,
	0, 0, 482, 0, 0, 0, 484, 485, 486, 0,
	0, 487, 488, 673, 1217, 489, 1218, 1197, 490, 491,
	1107, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	0, 501, 502, 675, 503, 504, 505, 676, 506, 507,
	508, 1198, 509, 678, 510, 511, 0, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 520, 1178, 521, 522,
	524, 523, 525, 0, 526, 0, 527, 528, 529, 0,
	0, 0, 0, 0, 530, 0, 532, 533, 534, 535,
	531, 536, 537, 538, 539, 540, 0, 541, 542, 543,
	1219, 544, 545, 546, 547, 548, 1108, 549, 0, 550,
	551, 557, 558, 559, 552, 553, 560, 561, 562, 563,
	564, 0, 566, 567, 565, 568, 569, 570, 1161, 571,
	572, 554, 555, 573, 574, 1220, 575, 576, 577, 578,
	579, 580, 581, 1176, 0, 582, 0, 583, 584, 585,
	586, 588, 556, 589, 594, 595, 1223, 590, 591, 592,
	593, 1199, 597, 598, 0, 599, 600, 1094, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 362, 608,
	0, 609, 1188, 1189, 1190, 1191, 0, 618, 0, 610,
	611, 612, 1200, 613, 1201, 1118, 614, 615, 616, 617,
	0, 619, 620, 0, 1101, 621, 622, 623, 625, 626,
	624, 627, 1162, 628, 0, 0, 629, 630, 631, 690,
	1185, 1222, 0, 633, 632, 634, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	1098, 0, 0, 1637, 0, 1140, 1112, 1113, 1114, 1110,
	1111, 1123, 0, 1093, 0, 0, 0, 0, 0, 0,
	1091, 1092, 277, 279, 278, 280, 281, 282, 283, 1124,
	284, 285, 0, 1122, 0, 0, 0, 1164, 1128, 0,
	0, 0, 286, 287, 1204, 288, 289, 290, 291, 292,
	293, 644, 1177, 0, 294, 1184, 295, 1183, 0, 1194,
	296, 297, 298, 299, 300, 301, 1130, 1163, 1095, 302,
	1224, 1225, 651, 0, 303, 304, 1170, 0, 1151, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 1205, 327, 328,
	329, 1154, 1152, 1153, 1160, 1156, 1155, 1159, 330, 331,
	332, 333, 334, 1187, 335, 337, 1181, 1180, 1100, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 1172, 348, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 1106, 357, 358, 359,
	361, 363, 360, 364, 365, 366, 367, 1195, 1196, 368,
	1119, 274, 0, 0, 0, 0, 0, 369, 370, 371,
	1179, 0, 0, 0, 372, 0, 373, 374, 0, 0,
	1206, 375, 376, 377, 1192, 1193, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 0, 387, 1202, 0, 1129,
	388, 0, 389, 390, 391, 392, 393, 1165, 1166, 1169,
	479, 1208, 394, 395, 0, 396, 397, 398, 399, 400,
	0, 0, 0, 275, 401, 402, 403, 405, 0, 1207,
	404, 1174, 1175, 0, 1135, 0, 406, 407, 1209, 1167,
	1210, 408, 409, 410, 1211, 411, 0, 0, 0, 412,
	413, 414, 415, 416, 417, 0, 418, 420, 419, 0,
	421, 1203, 1212, 422, 423, 1213, 0, 424, 425, 426,
	427, 428, 429, 432, 1158, 1157, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 1214, 458, 459, 460, 467,
	469, 470, 465, 466, 468, 471, 472, 462, 463, 474,
	464, 1215, 473, 461, 1097, 276, 1216, 475, 476, 477,
	1120, 1168, 478, 1182, 480, 481, 0, 0, 482, 0,
	0, 0, 484, 485, 486, 0, 0, 487, 488, 673,
	1217, 489, 1218, 1197, 490, 491, 1107, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 0, 501, 502, 675,
	503, 504, 505, 676, 506, 507, 508, 1198, 509, 678,
	510, 511, 0, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 520, 1178, 521, 522, 524, 523, 525, 0,
	526, 0, 527, 528, 529, 0, 0, 0, 0, 0,
	530, 0, 532, 533, 534, 535, 531, 536, 537, 538,
	539, 540, 0, 541, 542, 543, 1219, 544, 545, 546,
	547, 548, 1108, 549, 0, 550, 551, 557, 558, 559,
	552, 553, 560, 561, 562, 563, 564, 0, 566, 567,
	565, 568, 569, 570, 1161, 571, 572, 554, 555, 573,
	574, 1220, 575, 576, 577, 578, 579, 580, 581, 1176,
	0, 582, 0, 583, 584, 585, 586, 588, 556, 589,
	594, 595, 1223, 590, 591, 592, 593, 1199, 597, 598,
	0, 599, 600, 1094, 596, 587, 0, 601, 602, 603,
	604, 605, 606, 607, 362, 608, 0, 609, 1188, 1189,
	1190, 1191, 0, 618, 0, 610, 611, 612, 1200, 613,
	1201, 1118, 614, 615, 616, 617, 0, 619, 620, 0,
	1101, 621, 622, 623, 625, 626, 624, 627, 1162, 628,
	0, 0, 629, 630, 631, 690, 1185, 1222, 0, 633,
	632, 634, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 1098, 0, 0, 1548,
	0, 1140, 1112, 1113, 1114, 1110, 1111, 1123, 0, 1093,
	0, 0, 0, 0, 0, 0, 1091, 1092, 277, 279,
	278, 280, 281, 282, 283, 1124, 284, 285, 0, 1122,
	0, 0, 0, 1164, 1128, 0, 0, 0, 286, 287,
	1204, 288, 289, 290, 291, 292, 293, 644, 1177, 0,
	294, 1184, 295, 1183, 0, 1194, 296, 297, 298, 299,
	300, 301, 1130, 1163, 1095, 302, 1224, 1225, 651, 0,
	303, 304, 1170, 0, 1151, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 1205, 327, 328, 329, 1154, 1152, 1153,
	1160, 1156, 1155, 1159, 330, 331, 332, 333, 334, 1187,
	335, 337, 1181, 1180, 1100, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 1172,
	348, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 1106, 357, 358, 359, 361, 363, 360, 364,
	365, 366, 367, 1195, 1196, 368, 1119, 274, 0, 0,
	0, 0, 0, 369, 370, 371, 1179, 0, 0, 0,
	372, 0, 373, 374, 0, 0, 1206, 375, 376, 377,
	1192, 1193, 378, 379, 380, 381, 382, 383, 384, 385,
	386, 0, 387, 1202, 0, 1129, 388, 0, 389, 390,
	391, 392, 393, 1547, 1166, 1169, 479, 1208, 394, 395,
	0, 396, 397, 398, 399, 400, 0, 0, 0, 275,
	401, 402, 403, 405, 0, 1207, 404, 1174, 1175, 0,
	1135, 0, 406, 407, 1209, 1167, 1210, 408, 409, 410,
	1211, 411, 0, 0, 0, 412, 413, 414, 415, 416,
	417, 0, 418, 420, 419, 0, 421, 1203, 1212, 422,
	423, 1213, 0, 424, 425, 426, 427, 428, 429, 432,
	1158, 1157, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 1214, 458, 459, 460, 467, 469, 470, 465, 466,
	468, 471, 472, 462, 463, 474, 464, 1215, 473, 461,
	1097, 276, 1216, 475, 476, 477, 1120, 1168, 478, 1182,
	480, 481, 0, 0, 482, 0, 0, 0, 484, 485,
	486, 0, 0, 487, 488, 673, 1217, 489, 1218, 1197,
	490, 491, 1107, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 0, 501, 502, 675, 503, 504, 505, 676,
	506, 507, 508, 1198, 509, 678, 510, 511, 0, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 520, 1178,
	521, 522, 524, 523, 525, 0, 526, 0, 527, 528,
	529, 0, 0, 0, 0, 0, 530, 0, 532, 533,
	534, 535, 531, 536, 537, 538, 539, 540, 0, 541,
	542, 543, 1219, 544, 545, 546, 547, 548, 1108, 549,
	0, 550, 551, 557, 558, 559, 552, 553, 560, 561,
	562, 563, 564, 0, 566, 567, 565, 568, 569, 570,
	1161, 571, 572, 554, 555, 573, 574, 1220, 575, 576,
	577, 578, 579, 580, 581, 1176, 0, 582, 0, 583,
	584, 585, 586, 588, 556, 589, 594, 595, 1223, 590,
	591, 592, 593, 1199, 597, 598, 0, 599, 600, 1094,
	596, 587, 0, 601, 602, 603, 604, 605, 606, 607,
	362, 608, 0, 609, 1188, 1189, 1190, 1191, 0, 618,
	0, 610, 611, 612, 1200, 613, 1201, 1118, 614, 615,
	616, 617, 0, 619, 620, 0, 1101, 621, 622, 623,
	625, 626, 624, 627, 1162, 628, 0, 0, 629, 630,
	631, 690, 1185, 1222, 0, 633, 632, 634, 635, 693,
	636, 637, 0, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 1098, 0, 0, 1542, 0, 1140, 1112, 1113,
	1114, 1110, 1111, 1123, 0, 1093, 0, 0, 0, 0,
	0, 0, 1091, 1092, 277, 279, 278, 280, 281, 282,
	283, 1124, 284, 285, 0, 1122, 0, 0, 0, 1164,
	1128, 0, 0, 0, 286, 287, 1204, 288, 289, 290,
	291, 292, 293, 644, 1177, 0, 294, 1184, 295, 1183,
	0, 1194, 296, 297, 298, 299, 300, 301, 1130, 1163,
	1095, 302, 1224, 1225, 651, 0, 303, 304, 1170, 0,
	1151, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1205,
	327, 328, 329, 1154, 1152, 1153, 1160, 1156, 1155, 1159,
	330, 331, 332, 333, 334, 1187, 335, 337, 1181, 1180,
	1100, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 1172, 348, 0, 349, 350,
	351, 0, 352, 353, 354, 0, 355, 356, 1106, 357,
	358, 359, 361, 363, 360, 364, 365, 366, 367, 1195,
	1196, 368, 1119, 274, 0, 0, 0, 0, 0, 369,
	370, 371, 1179, 0, 0, 0, 372, 0, 373, 374,
	0, 0, 1206, 375, 376, 377, 1192, 1193, 378, 379,
	380, 381, 382, 383, 384, 385, 386, 0, 387, 1202,
	0, 1129, 388, 0, 389, 390, 391, 392, 393, 1541,
	1166, 1169, 479, 1208, 394, 395, 0, 396, 397, 398,
	399, 400, 0, 0, 0, 275, 401, 402, 403, 405,
	0, 1207, 404, 1174, 1175, 0, 1135, 0, 406, 407,
	1209, 1167, 1210, 408, 409, 410, 1211, 411, 0, 0,
	0, 412, 413, 414, 415, 416, 417, 0, 418, 420,
	419, 0, 421, 1203, 1212, 422, 423, 1213, 0, 424,
	425, 426, 427, 428, 429, 432, 1158, 1157, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 1214, 458, 459,
	460, 467, 469, 470, 465, 466, 468, 471, 472, 462,
	463, 474, 464, 1215, 473, 461, 1097, 276, 1216, 475,
	476, 477, 1120, 1168, 478, 1182, 480, 481, 0, 0,
	482, 0, 0, 0, 484, 485, 486, 0, 0, 487,
	488, 673, 1217, 489, 1218, 1197, 490, 491, 1107, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 0, 501,
	502, 675, 503, 504, 505, 676, 506, 507, 508, 1198,
	509, 678, 510, 511, 0, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 520, 1178, 521, 522, 524, 523,
	525, 0, 526, 0, 527, 528, 529, 0, 0, 0,
	0, 0, 530, 0, 532, 533, 534, 535, 531, 536,
	537, 538, 539, 540, 0, 541, 542, 543, 1219, 544,
	545, 546, 547, 548, 1108, 549, 0, 550, 551, 557,
	558, 559, 552, 553, 560, 561, 562, 563, 564, 0,
	566, 567, 565, 568, 569, 570, 1161, 571, 572, 554,
	555, 573, 574, 1220, 575, 576, 577, 578, 579, 580,
	581, 1176, 0, 582, 0, 583, 584, 585, 586, 588,
	556, 589, 594, 595, 1223, 590, 591, 592, 593, 1199,
	597, 598, 0, 599, 600, 1094, 596, 587, 0, 601,
	602, 603, 604, 605, 606, 607, 362, 608, 0, 609,
	1188, 1189, 1190, 1191, 0, 618, 0, 610, 611, 612,
	1200, 613, 1201, 1118, 614, 615, 616, 617, 0, 619,
	620, 0, 1101, 621, 622, 623, 625, 626, 624, 627,
	1162, 628, 0, 0, 629, 630, 631, 690, 1185, 1222,
	0, 633, 632, 634, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 1098, 0,
	0, 1535, 0, 1140, 1112, 1113, 1114, 1110, 1111, 1123,
	0, 1093, 0, 0, 0, 0, 0, 0, 1091, 1092,
	277, 279, 278, 280, 281, 282, 283, 1124, 284, 285,
	0, 1122, 0, 0, 0, 1164, 1128, 0, 0, 0,
	286, 287, 1204, 288, 289, 290, 291, 292, 293, 644,
	1177, 0, 294, 1184, 295, 1183, 0, 1194, 296, 297,
	298, 299, 300, 301, 1130, 1163, 1095, 302, 1224, 1225,
	651, 0, 303, 304, 1170, 0, 1151, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 1205, 327, 328, 329, 1154,
	1152, 1153, 1160, 1156, 1155, 1159, 330, 331, 332, 333,
	334, 1187, 335, 337, 1181, 1180, 1100, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 1172, 348, 0, 349, 350, 351, 0, 352, 353,
	354, 0, 355, 356, 1106, 357, 358, 359, 361, 363,
	360, 364, 365, 366, 367, 1195, 1196, 368, 1119, 274,
	0, 0, 0, 0, 0, 369, 370, 371, 1179, 0,
	0, 0, 372, 0, 373, 374, 0, 0, 1206, 375,
	376, 377, 1192, 1193, 378, 379, 380, 381, 382, 383,
	384, 385, 386, 0, 387, 1202, 0, 1129, 388, 0,
	389, 390, 391, 392, 393, 1165, 1166, 1169, 479, 1208,
	394, 395, 0, 396, 397, 398, 399, 400, 0, 0,
	0, 275, 401, 402, 403, 405, 0, 1207, 404, 1174,
	1175, 0, 1135, 0, 406, 407, 1209, 1167, 1210, 408,
	409, 410, 1211, 411, 0, 0, 0, 412, 413, 414,
	415, 416, 417, 0, 418, 420, 419, 0, 421, 1203,
	1212, 422, 423, 1213, 0, 424, 425, 426, 427, 428,
	429, 432, 1158, 1157, 430, 431, 433, 434, 0, 435,
	436, 438, 441, 437, 439, 440, 442, 455, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	457, 0, 456, 1214, 458, 459, 460, 467, 469, 470,
	465, 466, 468, 471, 472, 462, 463, 474, 464, 1215,
	473, 461, 1097, 276, 1216, 475, 476, 477, 1120, 1168,
	478, 1182, 480, 481, 0, 0, 482, 0, 0, 0,
	484, 485, 486, 0, 0, 487, 488, 673, 1217, 489,
	1218, 1197, 490, 491, 1107, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 0, 501, 502, 675, 503, 504,
	505, 676, 506, 507, 508, 1198, 509, 678, 510, 511,
	0, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	520, 1178, 521, 522, 524, 523, 525, 0, 526, 0,
	527, 528, 529, 0, 0, 0, 0, 0, 530, 0,
	532, 533, 534, 535, 531, 536, 537, 538, 539, 540,
	0, 541, 542, 543, 1219, 544, 545, 546, 547, 548,
	1108, 549, 0, 550, 551, 557, 558, 559, 552, 553,
	560, 561, 562, 563, 564, 0, 566, 567, 565, 568,
	569, 570, 1161, 571, 572, 554, 555, 573, 574, 1220,
	575, 576, 577, 578, 579, 580, 581, 1176, 0, 582,
	0, 583, 584, 585, 586, 588, 556, 589, 594, 595,
	1223, 590, 591, 592, 593, 1199, 597, 598, 0, 599,
	600, 1094, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 362, 608, 0, 609, 1188, 1189, 1190, 1191,
	0, 618, 0, 610, 611, 612, 1200, 613, 1201, 1118,
	614, 615, 616, 617, 0, 619, 620, 0, 1101, 621,
	622, 623, 625, 626, 624, 627, 1162, 628, 0, 0,
	629, 630, 631, 690, 1185, 1222, 0, 633, 632, 634,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 1098, 0, 0, 1351, 0, 1140,
	1112, 1113, 1114, 1110, 1111, 1123, 0, 1093, 0, 0,
	0, 0, 0, 0, 1091, 1092, 277, 279, 278, 280,
	281, 282, 283, 1124, 284, 285, 0, 1122, 0, 0,
	0, 1164, 1128, 0, 0, 0, 286, 287, 1204, 288,
	289, 290, 291, 292, 293, 644, 1177, 0, 294, 1184,
	295, 1183, 0, 1194, 296, 297, 298, 299, 300, 301,
	1130, 1163, 1095, 302, 1224, 1225, 651, 0, 303, 304,
	1170, 0, 1151, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 1205, 327, 328, 329, 1154, 1152, 1153, 1160, 1156,
	1155, 1159, 330, 331, 332, 333, 334, 1187, 335, 337,
	1181, 1180, 1100, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 1172, 348, 0,
	349, 350, 351, 0, 352, 353, 354, 0, 355, 356,
	1106, 357, 358, 359, 361, 363, 360, 364, 365, 366,
	367, 1195, 1196, 368, 1119, 274, 0, 0, 0, 0,
	0, 369, 370, 371, 1179, 0, 0, 0, 372, 0,
	373, 374, 0, 0, 1206, 375, 376, 377, 1192, 1193,
	378, 379, 380, 381, 382, 383, 384, 385, 386, 0,
	387, 1202, 0, 1129, 388, 0, 389, 390, 391, 392,
	393, 1165, 1166, 1169, 479, 1208, 394, 395, 0, 396,
	397, 398, 399, 400, 0, 0, 0, 275, 401, 402,
	403, 405, 0, 1207, 404, 1174, 1175, 0, 1135, 0,
	406, 407, 1209, 1167, 1210, 408, 409, 410, 1211, 411,
	0, 0, 0, 412, 413, 414, 415, 416, 417, 0,
	418, 420, 419, 0, 421, 1203, 1212, 422, 423, 1213,
	0, 424, 425, 426, 427, 428, 429, 432, 1158, 1157,
	430, 431, 433, 434, 0, 435, 436, 438, 441, 437,
	439, 440, 442, 455, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 457, 0, 456, 1214,
	458, 459, 460, 467, 469, 470, 465, 466, 468, 471,
	472, 462, 463, 474, 464, 1215, 473, 461, 1097, 276,
	1216, 475, 476, 477, 1120, 1168, 478, 1182, 480, 481,
	0, 0, 482, 0, 0, 0, 484, 485, 486, 0,
	0, 487, 488, 673, 1217, 489, 1218, 1197, 490, 491,
	1107, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	0, 501, 502, 675, 503, 504, 505, 676, 506, 507,
	508, 1198, 509, 678, 510, 511, 0, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 520, 1178, 521, 522,
	524, 523, 525, 0, 526, 0, 527, 528, 529, 0,
	0, 0, 0, 0, 530, 0, 532, 533, 534, 535,
	531, 536, 537, 538, 539, 540, 0, 541, 542, 543,
	1219, 544, 545, 546, 547, 548, 1108, 549, 0, 550,
	551, 557, 558, 559, 552, 553, 560, 561, 562, 563,
	564, 0, 566, 567, 565, 568, 569, 570, 1161, 571,
	572, 554, 555, 573, 574, 1220, 575, 576, 577, 578,
	579, 580, 581, 1176, 0, 582, 0, 583, 584, 585,
	586, 588, 556, 589, 594, 595, 1223, 590, 591, 592,
	593, 1199, 597, 598, 0, 599, 600, 1094, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 362, 608,
	0, 609, 1188, 1189, 1190, 1191, 0, 618, 0, 610,
	611, 612, 1200, 613, 1201, 1118, 614, 615, 616, 617,
	0, 619, 620, 0, 1101, 621, 622, 623, 625, 626,
	624, 627, 1162, 628, 0, 0, 629, 630, 631, 690,
	1185, 1222, 0, 633, 632, 634, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	1098, 0, 0, 0, 0, 1140, 1112, 1113, 1114, 1110,
	1111, 1123, 0, 1093, 0, 0, 0, 0, 0, 0,
	1091, 1092, 277, 279, 278, 280, 281, 282, 283, 1124,
	284, 285, 0, 1122, 0, 0, 0, 1164, 1128, 0,
	0, 0, 286, 287, 1204, 288, 289, 290, 291, 292,
	293, 644, 1177, 0, 294, 1184, 295, 1183, 0, 1194,
	296, 297, 298, 299, 300, 301, 1130, 1163, 1095, 302,
	1224, 1225, 651, 0, 303, 304, 1170, 0, 1151, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 1205, 327, 328,
	329, 1154, 1152, 1153, 1160, 1156, 1155, 1159, 330, 331,
	332, 333, 334, 1187, 335, 337, 1181, 1180, 1100, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 1172, 348, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 1106, 357, 358, 359,
	361, 363, 360, 364, 365, 366, 367, 1195, 1196, 368,
	1119, 274, 0, 0, 0, 0, 0, 369, 370, 371,
	1179, 0, 0, 0, 372, 0, 373, 374, 0, 0,
	1206, 375, 376, 377, 1192, 1193, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 0, 387, 1202, 0, 1129,
	388, 0, 389, 390, 391, 392, 393, 1165, 1166, 1169,
	479, 1208, 394, 395, 0, 396, 397, 398, 399, 400,
	0, 0, 0, 275, 401, 402, 403, 405, 0, 1207,
	404, 1174, 1175, 0, 1135, 0, 406, 407, 1209, 1167,
	1210, 408, 409, 410, 1211, 411, 0, 0, 0, 412,
	413, 414, 415, 416, 417, 0, 418, 420, 419, 0,
	421, 1203, 1212, 422, 423, 1213, 0, 424, 425, 426,
	427, 428, 429, 432, 1158, 1157, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 1214, 458, 459, 460, 467,
	469, 470, 465, 466, 468, 471, 472, 462, 463, 474,
	464, 1215, 473, 461, 1097, 276, 1216, 475, 476, 477,
	1120, 1168, 478, 1182, 480, 481, 0, 0, 482, 0,
	0, 0, 484, 485, 486, 0, 0, 487, 488, 673,
	1217, 489, 1218, 1197, 490, 491, 1107, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 0, 501, 502, 675,
	503, 504, 505, 676, 506, 507, 508, 1198, 509, 678,
	510, 511, 0, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 520, 1178, 521, 522, 524, 523, 525, 0,
	526, 0, 527, 528, 529, 0, 0, 0, 0, 0,
	530, 0, 532, 533, 534, 535, 531, 536, 537, 538,
	539, 540, 0, 541, 542, 543, 1219, 544, 545, 546,
	547, 548, 1108, 549, 0, 550, 551, 557, 558, 559,
	552, 553, 560, 561, 562, 563, 564, 0, 566, 567,
	565, 568, 569, 570, 1161, 571, 572, 554, 555, 573,
	574, 1220, 575, 576, 577, 578, 579, 580, 581, 1176,
	0, 582, 0, 583, 584, 585, 586, 588, 556, 589,
	594, 595, 1223, 590, 591, 592, 593, 1199, 597, 598,
	0, 599, 600, 1094, 596, 587, 0, 601, 602, 603,
	604, 605, 606, 607, 362, 608, 0, 609, 1188, 1189,
	1190, 1191, 0, 618, 0, 610, 611, 612, 1200, 613,
	1201, 1118, 614, 615, 616, 617, 0, 619, 620, 0,
	1101, 621, 622, 623, 625, 626, 624, 627, 1162, 628,
	0, 0, 629, 630, 631, 690, 1185, 1222, 0, 633,
	632, 634, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 1098, 0, 0, 0,
	0, 1140, 1112, 1113, 1114, 1110, 1111, 1123, 0, 1093,
	0, 0, 0, 0, 0, 0, 1091, 1092, 277, 279,
	278, 280, 281, 282, 283, 1124, 284, 285, 0, 1122,
	0, 0, 0, 1164, 1128, 0, 0, 0, 286, 287,
	1204, 288, 289, 290, 291, 292, 293, 644, 1177, 0,
	294, 1184, 295, 1183, 0, 1194, 296, 297, 298, 299,
	300, 301, 1130, 1163, 1095, 302, 1224, 1225, 651, 0,
	303, 304, 1170, 0, 1151, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 1205, 327, 328, 4751, 1154, 1152, 1153,
	1160, 1156, 1155, 1159, 330, 331, 332, 333, 334, 1187,
	335, 337, 1181, 1180, 1100, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 1172,
	348, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 1106, 357, 358, 359, 361, 363, 360, 364,
	365, 366, 367, 1195, 1196, 368, 1119, 274, 0, 0,
	0, 0, 0, 369, 370, 371, 1179, 0, 0, 0,
	372, 0, 373, 374, 0, 0, 1206, 375, 376, 377,
	1192, 1193, 378, 379, 380, 381, 382, 383, 384, 385,
	386, 0, 387, 1202, 0, 1129, 388, 0, 389, 390,
	391, 392, 393, 1165, 1166, 1169, 479, 1208, 394, 395,
	0, 396, 397, 398, 399, 400, 0, 0, 0, 275,
	401, 402, 403, 405, 0, 1207, 404, 1174, 1175, 0,
	1135, 0, 406, 407, 1209, 1167, 1210, 408, 409, 410,
	1211, 411, 0, 0, 0, 412, 413, 414, 415, 416,
	417, 0, 418, 420, 419, 0, 421, 1203, 1212, 422,
	423, 1213, 0, 424, 425, 426, 427, 428, 429, 432,
	1158, 1157, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 1214, 458, 459, 460, 467, 469, 470, 465, 466,
	468, 471, 472, 462, 463, 474, 464, 1215, 473, 461,
	1097, 276, 1216, 475, 476, 477, 1120, 1168, 478, 1182,
	480, 481, 0, 0, 482, 0, 0, 0, 484, 485,
	486, 0, 0, 487, 488, 673, 1217, 489, 1218, 1197,
	490, 491, 1107, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 0, 501, 502, 675, 503, 504, 505, 676,
	506, 507, 508, 1198, 509, 678, 510, 511, 0, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 520, 1178,
	521, 522, 524, 523, 525, 0, 526, 0, 527, 528,
	529, 0, 0, 0, 0, 0, 530, 0, 532, 533,
	534, 535, 531, 536, 537, 538, 539, 540, 0, 541,
	542, 543, 1219, 544, 545, 546, 547, 548, 1108, 549,
	0, 550, 551, 557, 558, 559, 552, 553, 560, 561,
	562, 563, 564, 0, 566, 567, 565, 568, 569, 570,
	1161, 571, 572, 554, 555, 573, 574, 1220, 575, 576,
	577, 578, 579, 580, 581, 1176, 0, 582, 0, 583,
	584, 585, 586, 588, 556, 589, 594, 595, 1223, 590,
	591, 592, 593, 1199, 597, 598, 0, 599, 600, 1094,
	596, 587, 0, 601, 602, 603, 604, 605, 606, 607,
	362, 608, 0, 609, 1188, 1189, 1190, 1191, 0, 618,
	0, 610, 611, 612, 1200, 613, 1201, 1118, 614, 615,
	616, 617, 0, 4750, 620, 0, 1101, 621, 622, 623,
	625, 626, 624, 627, 1162, 628, 0, 0, 629, 630,
	631, 690, 1185, 1222, 0, 633, 632, 634, 635, 693,
	636, 637, 0, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 1098, 0, 0, 0, 0, 1140, 1112, 1113,
	1114, 1110, 1111, 1123, 0, 1093, 0, 0, 0, 0,
	0, 0, 1091, 1092, 277, 279, 278, 280, 281, 282,
	283, 1124, 284, 285, 0, 1122, 0, 0, 0, 1164,
	1128, 0, 0, 0, 286, 287, 1204, 288, 289, 290,
	291, 292, 293, 4749, 1177, 0, 294, 1184, 295, 1183,
	0, 1194, 296, 297, 298, 299, 300, 301, 1130, 1163,
	1095, 302, 1224, 1225, 651, 0, 303, 304, 1170, 0,
	1151, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1205,
	327, 328, 4751, 1154, 1152, 1153, 1160, 1156, 1155, 1159,
	330, 331, 332, 333, 334, 1187, 335, 337, 1181, 1180,
	1100, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 1172, 348, 0, 349, 350,
	351, 0, 352, 353, 354, 0, 355, 356, 1106, 357,
	358, 359, 361, 363, 360, 364, 365, 366, 367, 1195,
	1196, 368, 1119, 274, 0, 0, 0, 0, 0, 369,
	370, 371, 1179, 0, 0, 0, 372, 0, 373, 374,
	0, 0, 1206, 375, 376, 377, 1192, 1193, 378, 379,
	380, 381, 382, 383, 384, 385, 386, 0, 387, 1202,
	0, 1129, 388, 0, 389, 390, 391, 392, 393, 1165,
	1166, 1169, 479, 1208, 394, 395, 0, 396, 397, 398,
	399, 400, 0, 0, 0, 275, 401, 402, 403, 405,
	0, 1207, 404, 1174, 1175, 0, 1135, 0, 406, 407,
	1209, 1167, 1210, 408, 409, 410, 1211, 411, 0, 0,
	0, 412, 413, 414, 415, 416, 417, 0, 418, 420,
	419, 0, 421, 1203, 1212, 422, 423, 1213, 0, 424,
	425, 426, 427, 428, 429, 432, 1158, 1157, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 1214, 458, 459,
	460, 467, 469, 470, 465, 466, 468, 471, 472, 462,
	463, 474, 464, 1215, 473, 461, 1097, 276, 1216, 475,
	476, 477, 1120, 1168, 478, 1182, 480, 481, 0, 0,
	482, 0, 0, 0, 484, 485, 486, 0, 0, 487,
	488, 673, 1217, 489, 1218, 1197, 490, 491, 1107, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 0, 501,
	502, 675, 503, 504, 505, 676, 506, 507, 508, 1198,
	509, 678, 510, 511, 0, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 520, 1178, 521, 522, 524, 523,
	525, 0, 526, 0, 527, 528, 529, 0, 0, 0,
	0, 0, 530, 0, 532, 533, 534, 535, 531, 536,
	537, 538, 539, 540, 0, 541, 542, 543, 1219, 544,
	545, 546, 547, 548, 1108, 549, 0, 550, 551, 557,
	558, 559, 552, 553, 560, 561, 562, 563, 564, 0,
	566, 567, 565, 568, 569, 570, 1161, 571, 572, 554,
	555, 573, 574, 1220, 575, 576, 577, 578, 579, 580,
	581, 1176, 0, 582, 0, 583, 584, 585, 586, 588,
	556, 589, 594, 595, 1223, 590, 591, 592, 593, 1199,
	597, 598, 0, 599, 600, 1094, 596, 587, 0, 601,
	602, 603, 604, 605, 606, 607, 362, 608, 0, 609,
	1188, 1189, 1190, 1191, 0, 618, 0, 610, 611, 612,
	1200, 613, 1201, 1118, 614, 615, 616, 617, 0, 4750,
	620, 0, 1101, 621, 622, 623, 625, 626, 624, 627,
	1162, 628, 0, 0, 629, 630, 631, 690, 1185, 1222,
	0, 633, 632, 634, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 1098, 0,
	0, 0, 0, 1140, 1112, 1113, 1114, 1110, 1111, 1123,
	0, 1093, 0, 0, 0, 0, 0, 0, 1091, 1092,
	277, 279, 278, 280, 281, 282, 283, 1124, 284, 285,
	0, 1122, 0, 0, 0, 1164, 1128, 0, 0, 0,
	286, 287, 1204, 288, 289, 290, 291, 292, 293, 644,
	1177, 0, 294, 1184, 295, 1183, 0, 1194, 296, 297,
	298, 299, 300, 301, 1130, 1163, 1095, 302, 1224, 1225,
	651, 0, 303, 304, 1170, 0, 1151, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 1205, 327, 4374, 329, 1154,
	1152, 1153, 1160, 1156, 1155, 1159, 330, 331, 332, 333,
	334, 1187, 335, 337, 1181, 1180, 1100, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 1172, 348, 0, 349, 350, 351, 0, 352, 353,
	354, 0, 355, 356, 1106, 357, 358, 359, 361, 363,
	360, 364, 365, 366, 367, 1195, 1196, 368, 1119, 274,
	0, 0, 0, 0, 0, 369, 370, 371, 1179, 0,
	0, 0, 372, 0, 373, 374, 0, 0, 1206, 375,
	376, 377, 1192, 1193, 378, 379, 380, 381, 382, 383,
	384, 385, 386, 0, 387, 1202, 0, 4375, 388, 0,
	389, 390, 391, 392, 393, 1165, 1166, 1169, 479, 1208,
	394, 395, 0, 396, 397, 398, 399, 400, 0, 0,
	0, 275, 401, 402, 403, 405, 0, 1207, 404, 1174,
	1175, 0, 1135, 0, 406, 407, 1209, 1167, 1210, 408,
	409, 410, 1211, 411, 0, 0, 0, 412, 413, 414,
	415, 416, 417, 0, 418, 420, 419, 0, 421, 1203,
	1212, 422, 423, 1213, 0, 424, 425, 426, 427, 428,
	429, 432, 1158, 1157, 430, 431, 433, 434, 0, 435,
	436, 438, 441, 437, 439, 440, 442, 455, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	457, 0, 456, 1214, 458, 459, 460, 467, 469, 470,
	465, 466, 468, 471, 472, 462, 463, 474, 464, 1215,
	473, 461, 1097, 276, 1216, 475, 476, 477, 1120, 1168,
	478, 1182, 480, 481, 0, 0, 482, 0, 0, 0,
	484, 485, 486, 0, 0, 487, 488, 673, 1217, 489,
	1218, 1197, 490, 491, 1107, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 0, 501, 502, 675, 503, 504,
	505, 676, 506, 507, 508, 1198, 509, 678, 510, 511,
	0, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	520, 1178, 521, 522, 524, 523, 525, 0, 526, 0,
	527, 528, 529, 0, 0, 0, 0, 0, 530, 0,
	532, 533, 534, 535, 531, 536, 537, 538, 539, 540,
	0, 541, 542, 543, 1219, 544, 545, 546, 4373, 548,
	1108, 549, 0, 550, 551, 557, 558, 559, 552, 553,
	560, 561, 562, 563, 564, 0, 566, 567, 565, 568,
	569, 570, 1161, 571, 572, 554, 555, 573, 574, 1220,
	575, 576, 577, 578, 579, 580, 581, 1176, 0, 582,
	0, 583, 584, 585, 586, 588, 556, 589, 594, 595,
	1223, 590, 591, 592, 593, 1199, 597, 598, 0, 599,
	600, 1094, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 362, 608, 0, 609, 1188, 1189, 1190, 1191,
	0, 618, 0, 610, 611, 612, 1200, 613, 1201, 1118,
	614, 615, 616, 617, 0, 619, 620, 0, 1101, 621,
	622, 623, 625, 626, 624, 627, 1162, 628, 0, 0,
	629, 630, 631, 690, 1185, 1222, 0, 633, 632, 634,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 1098, 0, 0, 0, 0, 1140,
	1112, 1113, 1114, 3201, 3202, 1123, 0, 1093, 0, 0,
	0, 0, 0, 0, 1091, 1092, 277, 279, 278, 280,
	281, 282, 283, 1124, 284, 285, 0, 1122, 0, 0,
	0, 1164, 1128, 0, 0, 0, 286, 287, 1204, 288,
	289, 290, 291, 292, 293, 644, 1177, 0, 294, 1184,
	295, 1183, 0, 1194, 296, 297, 298, 299, 300, 301,
	1130, 1163, 1095, 302, 1224, 1225, 651, 0, 303, 304,
	1170, 0, 1151, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 1205, 327, 328, 329, 1154, 1152, 1153, 1160, 1156,
	1155, 1159, 330, 331, 332, 333, 334, 1187, 335, 337,
	1181, 1180, 1100, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 1172, 348, 0,
	349, 350, 351, 0, 352, 353, 354, 0, 355, 356,
	1106, 357, 358, 359, 361, 363, 360, 364, 365, 366,
	367, 1195, 1196, 368, 1119, 274, 0, 0, 0, 0,
	0, 369, 370, 371, 1179, 0, 0, 0, 372, 0,
	373, 374, 0, 0, 1206, 375, 376, 377, 1192, 1193,
	378, 379, 380, 381, 382, 383, 384, 385, 386, 0,
	387, 1202, 0, 1129, 388, 0, 389, 390, 391, 392,
	393, 1165, 1166, 1169, 479, 1208, 394, 395, 0, 396,
	397, 398, 399, 400, 0, 0, 0, 275, 401, 402,
	403, 405, 0, 1207, 404, 1174, 1175, 0, 1135, 0,
	406, 407, 1209, 1167, 1210, 408, 409, 410, 1211, 411,
	0, 0, 0, 412, 413, 414, 415, 416, 417, 0,
	418, 420, 419, 0, 421, 1203, 1212, 422, 423, 1213,
	0, 424, 425, 426, 427, 428, 429, 432, 1158, 1157,
	430, 431, 433, 434, 0, 435, 436, 438, 441, 437,
	439, 440, 442, 455, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 457, 0, 456, 1214,
	458, 459, 460, 467, 469, 470, 465, 466, 468, 471,
	472, 462, 463, 474, 464, 1215, 473, 461, 1097, 276,
	1216, 475, 476, 477, 1120, 1168, 478, 1182, 480, 481,
	0, 0, 482, 0, 0, 0, 484, 485, 486, 0,
	0, 487, 488, 673, 1217, 489, 1218, 1197, 490, 491,
	1107, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	0, 501, 502, 675, 503, 504, 505, 676, 506, 507,
	508, 1198, 509, 678, 510, 511, 0, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 520, 1178, 521, 522,
	524, 523, 525, 0, 526, 0, 527, 528, 529, 0,
	0, 0, 0, 0, 530, 0, 532, 533, 534, 535,
	531, 536, 537, 538, 539, 540, 0, 541, 542, 543,
	1219, 544, 545, 546, 547, 548, 1108, 549, 0, 550,
	551, 557, 558, 559, 552, 553, 560, 561, 562, 563,
	564, 0, 566, 567, 565, 568, 569, 570, 1161, 571,
	572, 554, 555, 573, 574, 1220, 575, 576, 577, 578,
	579, 580, 581, 1176, 0, 582, 0, 583, 584, 585,
	586, 588, 556, 589, 594, 595, 1223, 590, 591, 592,
	593, 1199, 597, 598, 0, 599, 600, 1094, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 362, 608,
	0, 609, 1188, 1189, 1190, 1191, 0, 618, 0, 610,
	611, 612, 1200, 613, 1201, 1118, 614, 615, 616, 617,
	0, 619, 620, 0, 1101, 621, 622, 623, 625, 626,
	624, 627, 1162, 628, 0, 0, 629, 630, 631, 690,
	1185, 1222, 0, 633, 632, 634, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	1098, 0, 0, 0, 0, 1140, 1112, 1113, 1114, 3199,
	3200, 1123, 0, 1093, 0, 0, 0, 0, 0, 0,
	1091, 1092, 277, 279, 278, 280, 281, 282, 283, 1124,
	284, 285, 0, 1122, 0, 0, 0, 1164, 1128, 0,
	0, 0, 286, 287, 1204, 288, 289, 290, 291, 292,
	293, 644, 1177, 0, 294, 1184, 295, 1183, 0, 1194,
	296, 297, 298, 299, 300, 301, 1130, 1163, 1095, 302,
	1224, 1225, 651, 0, 303, 304, 1170, 0, 1151, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 1205, 327, 328,
	329, 1154, 1152, 1153, 1160, 1156, 1155, 1159, 330, 331,
	332, 333, 334, 1187, 335, 337, 1181, 1180, 1100, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 1172, 348, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 1106, 357, 358, 359,
	361, 363, 360, 364, 365, 366, 367, 1195, 1196, 368,
	1119, 274, 0, 0, 0, 0, 0, 369, 370, 371,
	1179, 0, 0, 0, 372, 0, 373, 374, 0, 0,
	1206, 375, 376, 377, 1192, 1193, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 0, 387, 1202, 0, 1129,
	388, 0, 389, 390, 391, 392, 393, 1165, 1166, 1169,
	479, 1208, 394, 395, 0, 396, 397, 398, 399, 400,
	0, 0, 0, 275, 401, 402, 403, 405, 0, 1207,
	404, 1174, 1175, 0, 1135, 0, 406, 407, 1209, 1167,
	1210, 408, 409, 410, 1211, 411, 0, 0, 0, 412,
	413, 414, 415, 416, 417, 0, 418, 420, 419, 0,
	421, 1203, 1212, 422, 423, 1213, 0, 424, 425, 426,
	427, 428, 429, 432, 1158, 1157, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 1214, 458, 459, 460, 467,
	469, 470, 465, 466, 468, 471, 472, 462, 463, 474,
	464, 1215, 473, 461, 1097, 276, 1216, 475, 476, 477,
	1120, 1168, 478, 1182, 480, 481, 0, 0, 482, 0,
	0, 0, 484, 485, 486, 0, 0, 487, 488, 673,
	1217, 489, 1218, 1197, 490, 491, 1107, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 0, 501, 502, 675,
	503, 504, 505, 676, 506, 507, 508, 1198, 509, 678,
	510, 511, 0, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 520, 1178, 521, 522, 524, 523, 525, 0,
	526, 0, 527, 528, 529, 0, 0, 0, 0, 0,
	530, 0, 532, 533, 534, 535, 531, 536, 537, 538,
	539, 540, 0, 541, 542, 543, 1219, 544, 545, 546,
	547, 548, 1108, 549, 0, 550, 551, 557, 558, 559,
	552, 553, 560, 561, 562, 563, 564, 0, 566, 567,
	565, 568, 569, 570, 1161, 571, 572, 554, 555, 573,
	574, 1220, 575, 576, 577, 578, 579, 580, 581, 1176,
	0, 582, 0, 583, 584, 585, 586, 588, 556, 589,
	594, 595, 1223, 590, 591, 592, 593, 1199, 597, 598,
	0, 599, 600, 1094, 596, 587, 0, 601, 602, 603,
	604, 605, 606, 607, 362, 608, 0, 609, 1188, 1189,
	1190, 1191, 0, 618, 0, 610, 611, 612, 1200, 613,
	1201, 1118, 614, 615, 616, 617, 0, 619, 620, 0,
	1101, 621, 622, 623, 625, 626, 624, 627, 1162, 628,
	0, 0, 629, 630, 631, 690, 1185, 1222, 0, 633,
	632, 634, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 1098, 0, 0, 0,
	0, 1140, 1112, 1113, 1114, 1110, 1111, 1123, 0, 1093,
	0, 0, 0, 0, 0, 0, 1091, 1092, 277, 279,
	278, 280, 281, 282, 283, 1124, 284, 285, 0, 1122,
	0, 0, 0, 1164, 1128, 0, 0, 0, 286, 287,
	1204, 288, 289, 290, 291, 292, 293, 644, 1177, 0,
	294, 1184, 295, 1183, 0, 1194, 296, 297, 298, 299,
	300, 301, 1130, 1163, 1095, 302, 1224, 1225, 651, 0,
	303, 304, 1170, 0, 1151, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 1205, 327, 328, 329, 1154, 1152, 1153,
	1160, 1156, 1155, 1159, 330, 331, 332, 333, 334, 1187,
	335, 337, 1181, 1180, 1100, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 1172,
	348, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 1106, 357, 358, 359, 361, 363, 360, 364,
	365, 366, 367, 1195, 1196, 368, 1119, 274, 0, 0,
	0, 0, 0, 369, 370, 371, 1179, 0, 0, 0,
	372, 0, 373, 374, 0, 0, 1206, 375, 376, 377,
	1192, 1193, 378, 379, 380, 381, 382, 383, 384, 385,
	386, 0, 387, 1202, 0, 1129, 388, 0, 389, 390,
	391, 392, 393, 1165, 1166, 1169, 479, 1208, 394, 395,
	0, 396, 397, 398, 399, 400, 0, 0, 0, 275,
	401, 402, 403, 405, 0, 1207, 404, 1174, 1175, 0,
	1135, 0, 406, 407, 1209, 1167, 1210, 408, 409, 410,
	1211, 411, 0, 0, 0, 412, 413, 414, 415, 416,
	417, 0, 418, 420, 419, 0, 421, 1203, 1212, 422,
	423, 1213, 0, 424, 425, 426, 427, 428, 429, 432,
	1158, 1157, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 1214, 458, 459, 460, 467, 469, 470, 465, 466,
	468, 471, 472, 462, 463, 474, 464, 1215, 473, 461,
	1097, 276, 1216, 475, 476, 477, 1120, 1168, 478, 1182,
	480, 481, 0, 0, 482, 0, 0, 0, 484, 485,
	486, 0, 0, 487, 488, 673, 1217, 489, 1218, 1197,
	490, 491, 1107, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 0, 501, 502, 675, 503, 504, 505, 676,
	506, 507, 508, 1198, 509, 678, 510, 511, 0, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 520, 1178,
	521, 522, 524, 523, 525, 0, 526, 0, 527, 528,
	529, 0, 0, 0, 0, 0, 530, 0, 532, 533,
	534, 535, 531, 536, 537, 538, 539, 540, 0, 541,
	542, 543, 1219, 544, 545, 546, 547, 548, 1108, 549,
	0, 550, 551, 557, 558, 559, 552, 553, 560, 561,
	562, 563, 564, 0, 566, 567, 565, 568, 569, 570,
	1161, 571, 572, 554, 555, 573, 574, 1220, 575, 576,
	577, 578, 579, 580, 581, 1176, 0, 582, 0, 583,
	584, 585, 586, 588, 556, 589, 594, 595, 1223, 590,
	591, 592, 593, 1199, 597, 598, 0, 599, 600, 1094,
	596, 587, 0, 601, 602, 603, 604, 605, 606, 607,
	362, 608, 0, 609, 1188, 1189, 1190, 1191, 0, 618,
	0, 610, 611, 612, 1200, 613, 1201, 1118, 614, 615,
	616, 617, 0, 619, 620, 0, 1101, 621, 622, 623,
	625, 626, 624, 627, 1162, 628, 0, 0, 629, 630,
	631, 690, 1185, 1222, 0, 633, 632, 634, 635, 693,
	636, 637, 0, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 1098, 0, 0, 0, 0, 1140, 1112, 1113,
	1114, 1110, 1111, 1123, 0, 1093, 0, 0, 0, 0,
	0, 0, 2456, 2457, 277, 279, 278, 280, 281, 282,
	283, 1124, 284, 285, 0, 1122, 0, 0, 0, 1164,
	1128, 0, 0, 0, 286, 287, 1204, 288, 289, 290,
	291, 292, 293, 644, 1177, 0, 294, 1184, 295, 1183,
	0, 1194, 296, 297, 298, 299, 300, 301, 1130, 1163,
	0, 302, 1224, 1225, 651, 0, 303, 304, 1170, 0,
	1151, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1205,
	327, 328, 329, 1154, 1152, 1153, 1160, 1156, 1155, 1159,
	330, 331, 332, 333, 334, 1187, 335, 337, 1181, 1180,
	0, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 1172, 348, 0, 349, 350,
	351, 0, 352, 353, 354, 0, 355, 356, 1106, 357,
	358, 359, 361, 363, 360, 364, 365, 366, 367, 1195,
	1196, 368, 1119, 274, 0, 0, 0, 0, 0, 369,
	370, 371, 1179, 0, 0, 0, 372, 0, 373, 374,
	0, 0, 1206, 375, 376, 377, 1192, 1193, 378, 379,
	380, 381, 382, 383, 384, 385, 386, 0, 387, 1202,
	0, 1129, 388, 0, 389, 390, 391, 392, 393, 1165,
	1166, 1169, 479, 1208, 394, 395, 0, 396, 397, 398,
	399, 400, 0, 0, 0, 275, 401, 402, 403, 405,
	0, 1207, 404, 1174, 1175, 0, 1135, 0, 406, 407,
	1209, 1167, 1210, 408, 409, 410, 1211, 411, 0, 0,
	0, 412, 413, 414, 415, 416, 417, 0, 418, 420,
	419, 0, 421, 1203, 1212, 422, 423, 1213, 0, 424,
	425, 426, 427, 428, 429, 432, 1158, 1157, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 1214, 458, 459,
	460, 467, 469, 470, 465, 466, 468, 471, 472, 462,
	463, 474, 464, 1215, 473, 461, 0, 276, 1216, 475,
	476, 477, 1120, 1168, 478, 1182, 480, 481, 0, 0,
	482, 0, 0, 0, 484, 485, 486, 0, 0, 487,
	488, 673, 1217, 489, 1218, 1197, 490, 491, 1107, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 0, 501,
	502, 675, 503, 504, 505, 676, 506, 507, 508, 1198,
	509, 678, 510, 511, 0, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 520, 1178, 521, 522, 524, 523,
	525, 0, 526, 0, 527, 528, 529, 0, 0, 0,
	0, 0, 530, 0, 532, 533, 534, 535, 531, 536,
	537, 538, 539, 540, 0, 541, 542, 543, 1219, 544,
	545, 546, 547, 548, 1108, 549, 0, 550, 551, 557,
	558, 559, 552, 553, 560, 561, 562, 563, 564, 0,
	566, 567, 565, 568, 569, 570, 1161, 571, 572, 554,
	555, 573, 574, 1220, 575, 576, 577, 578, 579, 580,
	581, 1176, 0, 582, 0, 583, 584, 585, 586, 588,
	556, 589, 594, 595, 1223, 590, 591, 592, 593, 1199,
	597, 598, 0, 599, 600, 0, 596, 587, 0, 601,
	602, 603, 604, 605, 606, 607, 362, 608, 0, 609,
	1188, 1189, 1190, 1191, 0, 618, 0, 610, 611, 612,
	1200, 613, 1201, 1118, 614, 615, 616, 617, 0, 619,
	620, 0, 0, 621, 622, 623, 625, 626, 624, 627,
	1162, 628, 0, 0, 629, 630, 631, 690, 1185, 1222,
	0, 633, 632, 634, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 0, 0,
	0, 0, 0, 1140, 1112, 1113, 1114, 1110, 1111, 1123,
	0, 2715, 0, 0, 0, 0, 0, 0, 2713, 2714,
	277, 279, 278, 280, 281, 282, 283, 1124, 284, 285,
	0, 1122, 0, 0, 0, 1164, 1128, 0, 0, 0,
	286, 287, 1204, 288, 289, 290, 291, 292, 293, 644,
	1177, 0, 294, 1184, 295, 1183, 0, 1194, 296, 297,
	298, 299, 300, 301, 1130, 1163, 0, 302, 1224, 1225,
	651, 0, 303, 304, 1170, 0, 1151, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 1205, 327, 328, 329, 1154,
	1152, 1153, 1160, 1156, 1155, 1159, 330, 331, 332, 333,
	334, 1187, 335, 337, 1181, 1180, 0, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 1172, 348, 0, 349, 350, 351, 0, 352, 353,
	354, 0, 355, 356, 1106, 357, 358, 359, 361, 363,
	360, 364, 365, 366, 367, 1195, 1196, 368, 1119, 274,
	0, 0, 0, 0, 0, 369, 370, 371, 1179, 0,
	0, 0, 372, 0, 373, 374, 0, 0, 1206, 375,
	376, 377, 1192, 1193, 378, 379, 380, 381, 382, 383,
	384, 385, 386, 0, 387, 1202, 0, 1129, 388, 0,
	389, 390, 391, 392, 393, 1165, 1166, 1169, 479, 1208,
	394, 395, 0, 396, 397, 398, 399, 400, 0, 0,
	0, 275, 401, 402, 403, 405, 0, 1207, 404, 1174,
	1175, 0, 1135, 0, 406, 407, 1209, 1167, 1210, 408,
	409, 410, 1211, 411, 0, 0, 0, 412, 413, 414,
	415, 416, 417, 0, 418, 420, 419, 0, 421, 1203,
	1212, 422, 423, 1213, 0, 424, 425, 426, 427, 428,
	429, 432, 1158, 1157, 430, 431, 433, 434, 0, 435,
	436, 438, 441, 437, 439, 440, 442, 455, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	457, 0, 456, 1214, 458, 459, 460, 467, 469, 470,
	465, 466, 468, 471, 472, 462, 463, 474, 464, 1215,
	473, 461, 0, 276, 1216, 475, 476, 477, 1120, 1168,
	478, 1182, 480, 481, 0, 0, 482, 0, 0, 0,
	484, 485, 486, 0, 0, 487, 488, 673, 1217, 489,
	1218, 1197, 490, 491, 483, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 0, 501, 502, 675, 503, 504,
	505, 676, 506, 507, 508, 1198, 509, 678, 510, 511,
	0, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	520, 1178, 521, 522, 524, 523, 525, 0, 526, 0,
	527, 528, 529, 0, 0, 0, 0, 0, 530, 0,
	532, 533, 534, 535, 531, 536, 537, 538, 539, 540,
	0, 541, 542, 543, 1219, 544, 545, 546, 547, 548,
	3194, 3195, 0, 550, 551, 557, 558, 559, 552, 553,
	560, 561, 562, 563, 564, 0, 566, 567, 565, 568,
	569, 570, 1161, 571, 572, 554, 555, 573, 574, 1220,
	575, 576, 577, 578, 579, 580, 581, 1176, 0, 582,
	0, 583, 584, 585, 586, 588, 556, 589, 594, 595,
	1223, 590, 591, 592, 593, 1199, 597, 598, 0, 599,
	600, 0, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 362, 608, 0, 609, 1188, 1189, 1190, 1191,
	0, 618, 0, 610, 611, 612, 1200, 613, 1201, 1118,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 1162, 628, 0, 0,
	629, 630, 631, 690, 1185, 1222, 0, 633, 632, 634,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 0, 0, 0, 0, 0, 1140,
	1112, 1113, 1114, 1110, 1111, 1123, 0, 0, 0, 0,
	0, 0, 0, 0, 2131, 2132, 277, 279, 278, 280,
	281, 282, 283, 1124, 284, 285, 0, 1122, 0, 0,
	0, 1164, 1128, 0, 0, 0, 286, 287, 1204, 288,
	289, 290, 291, 292, 293, 0, 1177, 0, 294, 1184,
	295, 1183, 0, 1194, 296, 297, 298, 299, 300, 301,
	1130, 1163, 1095, 302, 1224, 1225, 651, 0, 303, 304,
	1170, 0, 1151, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 1205, 327, 328, 4751, 1154, 1152, 1153, 1160, 1156,
	1155, 1159, 330, 331, 332, 333, 334, 1187, 335, 337,
	1181, 1180, 1100, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 1172, 348, 0,
	349, 350, 351, 0, 352, 353, 354, 0, 355, 356,
	1106, 357, 358, 359, 361, 363, 360, 364, 365, 366,
	367, 1195, 1196, 368, 1119, 274, 0, 0, 0, 0,
	0, 369, 370, 371, 1179, 0, 0, 0, 372, 0,
	373, 374, 0, 0, 1206, 375, 376, 377, 1192, 1193,
	378, 379, 380, 381, 382, 383, 384, 385, 386, 0,
	387, 1202, 0, 1129, 388, 0, 389, 390, 391, 392,
	393, 1165, 1166, 1169, 479, 0, 394, 395, 0, 396,
	397, 398, 399, 400, 0, 0, 0, 275, 401, 402,
	403, 405, 0, 1207, 404, 1174, 1175, 0, 1135, 0,
	406, 407, 0, 1167, 0, 408, 409, 410, 1211, 411,
	0, 0, 0, 412, 413, 414, 415, 416, 417, 0,
	418, 420, 419, 0, 421, 1203, 1212, 422, 423, 0,
	0, 424, 425, 426, 427, 428, 429, 432, 1158, 1157,
	430, 431, 433, 434, 0, 435, 436, 438, 441, 437,
	439, 440, 442, 455, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 457, 0, 456, 1214,
	458, 459, 460, 467, 469, 470, 465, 466, 468, 471,
	472, 462, 463, 474, 464, 1215, 473, 461, 1097, 276,
	0, 475, 476, 477, 1120, 1168, 478, 1182, 480, 481,
	0, 0, 482, 0, 0, 0, 484, 485, 486, 0,
	0, 487, 488, 673, 1217, 489, 1218, 1197, 490, 491,
	1107, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	0, 501, 502, 675, 503, 504, 505, 676, 506, 507,
	508, 1198, 509, 678, 510, 511, 0, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 520, 1178, 521, 522,
	524, 523, 525, 0, 526, 0, 527, 528, 529, 0,
	0, 0, 0, 0, 530, 0, 532, 533, 534, 535,
	531, 536, 537, 538, 539, 540, 0, 541, 542, 543,
	1219, 544, 545, 546, 547, 548, 1108, 549, 0, 550,
	551, 557, 558, 559, 552, 553, 560, 561, 562, 563,
	564, 0, 566, 567, 565, 568, 569, 570, 1161, 571,
	572, 554, 555, 573, 574, 0, 575, 576, 577, 578,
	579, 580, 581, 1176, 0, 582, 0, 583, 584, 585,
	586, 588, 556, 589, 594, 595, 1223, 590, 591, 592,
	593, 1199, 597, 598, 0, 599, 600, 1094, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 362, 608,
	0, 609, 1188, 1189, 1190, 1191, 0, 618, 0, 610,
	611, 612, 1200, 613, 1201, 1118, 614, 615, 616, 617,
	0, 4750, 620, 0, 1101, 621, 622, 623, 625, 626,
	624, 627, 1162, 628, 0, 0, 629, 630, 631, 690,
	1185, 1222, 0, 633, 632, 634, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	0, 0, 0, 1084, 0, 1262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1091, 1092, 277, 279, 278, 280, 281, 282, 283, 1124,
	284, 285, 0, 1122, 0, 0, 0, 1164, 0, 0,
	0, 0, 286, 287, 1204, 288, 289, 290, 291, 292,
	293, 644, 645, 0, 294, 646, 295, 647, 0, 648,
	296, 297, 298, 299, 300, 301, 0, 1163, 0, 302,
	649, 650, 651, 0, 303, 304, 1170, 0, 1151, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 1205, 327, 328,
	329, 1154, 1152, 1153, 1160, 1156, 1155, 1159, 330, 331,
	332, 333, 334, 0, 335, 337, 653, 654, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 655, 357, 358, 359,
	361, 363, 360, 364, 365, 366, 367, 1195, 1196, 368,
	0, 274, 0, 0, 0, 0, 0, 369, 370, 371,
	658, 0, 0, 0, 372, 0, 373, 374, 0, 0,
	1206, 375, 376, 377, 659, 660, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 0, 387, 1202, 0, 662,
	388, 0, 389, 390, 391, 392, 393, 1165, 1166, 1169,
	479, 1208, 394, 395, 0, 396, 397, 398, 399, 400,
	0, 0, 0, 275, 401, 402, 403, 405, 0, 1207,
	404, 666, 667, 0, 668, 0, 406, 407, 1209, 1167,
	1210, 408, 409, 410, 1211, 411, 0, 0, 0, 412,
	413, 414, 415, 416, 417, 1248, 418, 420, 419, 0,
	421, 1203, 1212, 422, 423, 1213, 0, 424, 425, 426,
	427, 428, 429, 432, 1158, 1157, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 1214, 458, 459, 460, 467,
	469, 470, 465, 466, 468, 471, 472, 462, 463, 474,
	464, 1215, 473, 461, 0, 276, 1216, 475, 476, 477,
	0, 1168, 478, 672, 480, 481, 0, 0, 482, 0,
	0, 1254, 484, 485, 486, 0, 0, 487, 488, 673,
	1217, 489, 1218, 1197, 490, 491, 483, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 0, 501, 502, 675,
	503, 504, 505, 676, 506, 507, 508, 1198, 509, 678,
	510, 511, 0, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 520, 679, 521, 522, 524, 523, 525, 0,
	526, 0, 527, 528, 529, 0, 0, 0, 0, 0,
	530, 0, 532, 533, 534, 535, 531, 536, 537, 538,
	539, 540, 0, 541, 542, 543, 1219, 544, 545, 546,
	547, 548, 680, 1256, 0, 550, 551, 557, 558, 559,
	552, 553, 560, 561, 562, 563, 564, 236, 566, 567,
	565, 568, 569, 570, 1161, 571, 572, 554, 555, 573,
	574, 1220, 575, 576, 577, 578, 579, 580, 581, 681,
	0, 582, 0, 583, 584, 585, 586, 588, 556, 589,
	594, 595, 682, 590, 591, 592, 593, 1199, 597, 598,
	0, 599, 600, 0, 596, 587, 238, 601, 602, 603,
	604, 605, 606, 607, 362, 608, 0, 609, 684, 685,
	686, 687, 0, 618, 0, 610, 611, 612, 1200, 613,
	1201, 0, 614, 615, 616, 617, 0, 619, 620, 0,
	0, 621, 622, 623, 625, 626, 624, 627, 1162, 628,
	0, 0, 629, 630, 631, 1626, 691, 692, 0, 633,
	632, 634, 635, 693, 636, 637, 0, 0, 0, 230,
	638, 639, 694, 640, 641, 642, 1262, 0, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 1252, 0, 1974, 0, 0, 1164, 0,
	0, 0, 0, 286, 287, 1204, 288, 289, 290, 291,
	292, 293, 644, 645, 0, 294, 646, 295, 647, 0,
	648, 296, 297, 298, 299, 300, 301, 0, 1163, 0,
	302, 649, 650, 651, 0, 303, 304, 1170, 0, 1151,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 1205, 327,
	328, 329, 1154, 1152, 1153, 1160, 1156, 1155, 1159, 330,
	331, 332, 333, 334, 0, 335, 337, 653, 654, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 355, 356, 655, 357, 358,
	359, 361, 363, 360, 364, 365, 366, 367, 1195, 1196,
	368, 0, 274, 0, 0, 0, 0, 0, 369, 370,
	371, 658, 0, 0, 0, 372, 0, 373, 374, 0,
	0, 1206, 375, 376, 377, 659, 660, 378, 379, 380,
	381, 382, 383, 384, 385, 386, 0, 387, 1202, 0,
	662, 388, 0, 389, 390, 391, 392, 393, 1165, 1166,
	1169, 479, 1208, 394, 395, 0, 396, 397, 398, 399,
	400, 0, 0, 0, 275, 401, 402, 403, 405, 0,
	1207, 404, 666, 667, 0, 668, 0, 406, 407, 1209,
	1167, 1210, 408, 409, 410, 1211, 411, 0, 0, 0,
	412, 413, 414, 415, 416, 417, 1248, 418, 420, 419,
	0, 421, 1203, 1212, 422, 423, 1213, 0, 424, 425,
	426, 427, 428, 429, 432, 1158, 1157, 430, 431, 433,
	434, 0, 435, 436, 438, 441, 437, 439, 440, 442,
	455, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 457, 0, 456, 1214, 458, 459, 460,
	467, 469, 470, 465, 466, 468, 471, 472, 462, 463,
	474, 464, 1215, 473, 461, 0, 276, 1216, 475, 476,
	477, 0, 1168, 478, 672, 480, 481, 0, 0, 482,
	0, 0, 1254, 484, 485, 486, 0, 0, 487, 488,
	673, 1217, 489, 1218, 1197, 490, 491, 483, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 0, 501, 502,
	675, 503, 504, 505, 676, 506, 507, 508, 1198, 509,
	678, 510, 511, 0, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 520, 679, 521, 522, 524, 523, 525,
	0, 526, 0, 527, 528, 529, 0, 0, 0, 0,
	0, 530, 0, 532, 533, 534, 535, 531, 536, 537,
	538, 539, 540, 0, 541, 542, 543, 1219, 544, 545,
	546, 547, 548, 680, 1256, 0, 550, 551, 557, 558,
	559, 552, 553, 560, 561, 562, 563, 564, 236, 566,
	567, 565, 568, 569, 570, 1161, 571, 572, 554, 555,
	573, 574, 1220, 575, 576, 577, 578, 579, 580, 581,
	681, 0, 582, 0, 583, 584, 585, 586, 588, 556,
	589, 594, 595, 682, 590, 591, 592, 593, 1199, 597,
	598, 0, 599, 600, 0, 596, 587, 238, 601, 602,
	603, 604, 605, 606, 607, 362, 608, 0, 609, 684,
	685, 686, 687, 0, 618, 0, 610, 611, 612, 1200,
	613, 1201, 0, 614, 615, 616, 617, 0, 619, 620,
	0, 0, 621, 622, 623, 625, 626, 624, 627, 1162,
	628, 0, 0, 629, 630, 631, 1626, 691, 692, 0,
	633, 632, 634, 635, 693, 636, 637, 0, 0, 0,
	230, 638, 639, 694, 640, 641, 642, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 3358, 0,
	1262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1252, 0, 1974, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 1164, 0, 0, 0, 0, 286, 287, 1204,
	288, 289, 290, 291, 292, 293, 644, 645, 0, 294,
	646, 295, 647, 0, 648, 296, 297, 298, 299, 300,
	301, 0, 1163, 0, 302, 649, 650, 651, 0, 303,
	304, 1170, 0, 1151, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 1205, 327, 328, 329, 1154, 1152, 1153, 1160,
	1156, 1155, 1159, 330, 331, 332, 333, 334, 0, 335,
	337, 653, 654, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 355,
	356, 655, 357, 358, 359, 361, 363, 360, 364, 365,
	366, 367, 1195, 1196, 368, 0, 274, 0, 0, 0,
	0, 0, 369, 370, 371, 658, 0, 0, 0, 372,
	0, 373, 374, 0, 0, 1206, 375, 376, 377, 659,
	660, 378, 379, 380, 381, 382, 383, 384, 385, 386,
	0, 387, 1202, 0, 662, 388, 0, 389, 390, 391,
	392, 393, 1165, 1166, 1169, 479, 1208, 394, 395, 0,
	396, 397, 398, 399, 400, 0, 0, 0, 275, 401,
	402, 403, 405, 0, 1207, 404, 666, 667, 0, 668,
	0, 406, 407, 1209, 1167, 1210, 408, 409, 410, 1211,
	411, 0, 0, 0, 412, 413, 414, 415, 416, 417,
	1248, 418, 420, 419, 0, 421, 1203, 1212, 422, 423,
	1213, 0, 424, 425, 426, 427, 428, 429, 432, 1158,
	1157, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	1214, 458, 459, 460, 467, 469, 470, 465, 466, 468,
	471, 472, 462, 463, 474, 464, 1215, 473, 461, 0,
	276, 1216, 475, 476, 477, 0, 1168, 478, 672, 480,
	481, 0, 0, 482, 0, 0, 1254, 484, 485, 486,
	0, 0, 487, 488, 673, 1217, 489, 1218, 1197, 490,
	491, 483, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 0, 501, 502, 675, 503, 504, 505, 676, 506,
	507, 508, 1198, 509, 678, 510, 511, 0, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 520, 679, 521,
	522, 524, 523, 525, 0, 526, 0, 527, 528, 529,
	0, 0, 0, 0, 0, 530, 0, 532, 533, 534,
	535, 531, 536, 537, 538, 539, 540, 0, 541, 542,
	543, 1219, 544, 545, 546, 547, 548, 680, 1256, 0,
	550, 551, 557, 558, 559, 552, 553, 560, 561, 562,
	563, 564, 0, 566, 567, 565, 568, 569, 570, 1161,
	571, 572, 554, 555, 573, 574, 1220, 575, 576, 577,
	578, 579, 580, 581, 681, 0, 582, 0, 583, 584,
	585, 586, 588, 556, 589, 594, 595, 682, 590, 591,
	592, 593, 1199, 597, 598, 0, 599, 600, 0, 596,
	587, 0, 601, 602, 603, 604, 605, 606, 607, 362,
	608, 0, 609, 684, 685, 686, 687, 0, 618, 0,
	610, 611, 612, 1200, 613, 1201, 0, 614, 615, 616,
	617, 0, 619, 620, 0, 0, 621, 622, 623, 625,
	626, 624, 627, 1162, 628, 0, 0, 629, 630, 631,
	690, 691, 692, 0, 633, 632, 634, 635, 693, 636,
	637, 0, 1244, 0, 1262, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 1164, 0, 1252, 0,
	1250, 286, 287, 1204, 288, 289, 290, 291, 292, 293,
	644, 645, 0, 294, 646, 295, 647, 0, 648, 296,
	297, 298, 299, 300, 301, 0, 1163, 0, 302, 649,
	650, 651, 0, 303, 304, 1170, 0, 1151, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 1205, 327, 328, 329,
	1154, 1152, 1153, 1160, 1156, 1155, 1159, 330, 331, 332,
	333, 334, 0, 335, 337, 653, 654, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 355, 356, 655, 357, 358, 359, 361,
	363, 360, 364, 365, 366, 367, 1195, 1196, 368, 0,
	274, 0, 0, 0, 0, 0, 369, 370, 371, 658,
	0, 0, 0, 372, 0, 373, 374, 0, 0, 1206,
	375, 376, 377, 659, 660, 378, 379, 380, 381, 382,
	383, 384, 385, 386, 0, 387, 1202, 0, 662, 388,
	0, 389, 390, 391, 392, 393, 1165, 1166, 1169, 479,
	1208, 394, 395, 0, 396, 397, 398, 399, 400, 0,
	0, 0, 275, 401, 402, 403, 405, 0, 1207, 404,
	666, 667, 0, 668, 0, 406, 407, 1209, 1167, 1210,
	408, 409, 410, 1211, 411, 0, 0, 0, 412, 413,
	414, 415, 416, 417, 1248, 418, 420, 419, 0, 421,
	1203, 1212, 422, 423, 1213, 0, 424, 425, 426, 427,
	428, 429, 432, 1158, 1157, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 440, 442, 455, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 456, 1214, 458, 459, 460, 467, 469,
	470, 465, 466, 468, 471, 472, 462, 463, 474, 464,
	1215, 473, 461, 0, 276, 1216, 475, 476, 477, 0,
	1168, 478, 672, 480, 481, 0, 0, 482, 0, 0,
	1254, 484, 485, 486, 0, 0, 487, 488, 673, 1217,
	489, 1218, 1197, 490, 491, 483, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 0, 501, 502, 675, 503,
	504, 505, 676, 506, 507, 508, 1198, 509, 678, 510,
	511, 0, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 520, 679, 521, 522, 524, 523, 525, 0, 526,
	0, 527, 528, 529, 0, 0, 0, 0, 0, 530,
	0, 532, 533, 534, 535, 531, 536, 537, 538, 539,
	540, 0, 541, 542, 543, 1219, 544, 545, 546, 547,
	548, 680, 1256, 0, 550, 551, 557, 558, 559, 552,
	553, 560, 561, 562, 563, 564, 0, 566, 567, 565,
	568, 569, 570, 1161, 571, 572, 554, 555, 573, 574,
	1220, 575, 576, 577, 578, 579, 580, 581, 681, 0,
	582, 0, 583, 584, 585, 586, 588, 556, 589, 594,
	595, 682, 590, 591, 592, 593, 1199, 597, 598, 0,
	599, 600, 0, 596, 587, 0, 601, 602, 603, 604,
	605, 606, 607, 362, 608, 0, 609, 684, 685, 686,
	687, 0, 618, 0, 610, 611, 612, 1200, 613, 1201,
	0, 614, 615, 616, 617, 0, 619, 620, 0, 0,
	621, 622, 623, 625, 626, 624, 627, 1162, 628, 0,
	0, 629, 630, 631, 690, 691, 692, 0, 633, 632,
	634, 635, 693, 636, 637, 0, 0, 0, 1262, 638,
	639, 694, 640, 641, 642, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	1164, 0, 1252, 0, 1250, 286, 287, 1204, 288, 289,
	290, 291, 292, 293, 644, 645, 0, 294, 646, 295,
	647, 0, 648, 296, 297, 298, 299, 300, 301, 0,
	1163, 0, 302, 649, 650, 651, 0, 303, 304, 1170,
	0, 1151, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	1205, 327, 328, 329, 1154, 1152, 1153, 1160, 1156, 1155,
	1159, 330, 331, 332, 333, 334, 0, 335, 337, 653,
	654, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 354, 0, 355, 356, 655,
	357, 358, 359, 361, 363, 360, 364, 365, 366, 367,
	1195, 1196, 368, 0, 274, 0, 0, 0, 0, 0,
	369, 370, 371, 658, 0, 0, 0, 372, 0, 373,
	374, 0, 0, 1206, 375, 376, 377, 659, 660, 378,
	379, 380, 381, 382, 383, 384, 385, 386, 0, 387,
	1202, 0, 662, 388, 0, 389, 390, 391, 392, 393,
	1165, 1166, 1169, 479, 1208, 394, 395, 0, 396, 397,
	398, 399, 400, 0, 0, 0, 275, 401, 402, 403,
	405, 0, 1207, 404, 666, 667, 0, 668, 0, 406,
	407, 1209, 1167, 1210, 408, 409, 410, 1211, 411, 0,
	0, 0, 412, 413, 414, 415, 416, 417, 1248, 418,
	420, 419, 0, 421, 1203, 1212, 422, 423, 1213, 0,
	424, 425, 426, 427, 428, 429, 432, 1158, 1157, 430,
	431, 433, 434, 0, 435, 436, 438, 441, 437, 439,
	440, 442, 455, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 457, 0, 456, 1214, 458,
	459, 460, 467, 469, 470, 465, 466, 468, 471, 472,
	462, 463, 474, 464, 1215, 473, 461, 0, 276, 1216,
	475, 476, 477, 0, 1168, 478, 672, 480, 481, 0,
	0, 482, 0, 0, 1254, 484, 485, 486, 0, 0,
	487, 488, 673, 1217, 489, 1218, 1197, 490, 491, 483,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 0,
	501, 502, 675, 503, 504, 505, 676, 506, 507, 508,
	1198, 509, 678, 510, 511, 0, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 520, 679, 521, 522, 524,
	523, 525, 0, 526, 0, 527, 528, 529, 0, 0,
	0, 0, 0, 530, 0, 532, 533, 534, 535, 531,
	536, 537, 538, 539, 540, 0, 541, 542, 543, 1219,
	544, 545, 546, 547, 548, 680, 1256, 0, 550, 551,
	557, 558, 559, 552, 553, 560, 561, 562, 563, 564,
	0, 566, 567, 565, 568, 569, 570, 1161, 571, 572,
	554, 555, 573, 574, 1220, 575, 576, 577, 578, 579,
	580, 581, 681, 0, 582, 0, 583, 584, 585, 586,
	588, 556, 589, 594, 595, 682, 590, 591, 592, 593,
	1199, 597, 598, 0, 599, 600, 0, 596, 587, 0,
	601, 602, 603, 604, 605, 606, 607, 362, 608, 0,
	609, 684, 685, 686, 687, 0, 618, 0, 610, 611,
	612, 1200, 613, 1201, 0, 614, 615, 616, 617, 0,
	619, 620, 0, 0, 621, 622, 623, 625, 626, 624,
	627, 1162, 628, 0, 0, 629, 630, 631, 690, 691,
	692, 0, 633, 632, 634, 635, 693, 636, 637, 0,
	0, 0, 1262, 638, 639, 694, 640, 641, 642, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 1164, 0, 1252, 0, 1250, 286,
	287, 1204, 288, 289, 290, 291, 292, 293, 644, 645,
	0, 294, 646, 295, 647, 0, 648, 296, 297, 298,
	299, 300, 301, 0, 1163, 0, 302, 649, 650, 651,
	0, 303, 304, 1170, 0, 1151, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 1205, 327, 328, 329, 1154, 1152,
	1153, 1160, 1156, 1155, 1159, 330, 331, 332, 333, 334,
	0, 335, 337, 653, 654, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 355, 356, 655, 357, 358, 359, 361, 363, 360,
	364, 365, 366, 367, 1195, 1196, 368, 0, 274, 0,
	0, 0, 0, 0, 369, 370, 371, 658, 0, 0,
	0, 372, 0, 373, 374, 0, 0, 1206, 375, 376,
	377, 659, 660, 378, 379, 380, 381, 382, 383, 384,
	385, 386, 0, 387, 1202, 0, 662, 388, 0, 389,
	390, 391, 392, 393, 1165, 1166, 1169, 479, 1208, 394,
	395, 0, 396, 397, 398, 399, 400, 0, 0, 0,
	275, 401, 402, 403, 405, 0, 1207, 404, 666, 667,
	0, 668, 0, 406, 407, 1209, 1167, 1210, 408, 409,
	410, 1211, 411, 0, 0, 0, 412, 413, 414, 415,
	416, 417, 0, 418, 420, 419, 0, 421, 1203, 1212,
	422, 423, 1213, 0, 424, 425, 426, 427, 428, 429,
	432, 1158, 1157, 430, 431, 433, 434, 0, 435, 436,
	438, 441, 437, 439, 440, 442, 455, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 457,
	0, 456, 1214, 458, 459, 460, 467, 469, 470, 465,
	466, 468, 471, 472, 462, 463, 474, 464, 1215, 473,
	461, 0, 276, 1216, 475, 476, 477, 0, 1168, 478,
	672, 480, 481, 0, 0, 482, 0, 0, 0, 484,
	485, 486, 0, 0, 487, 488, 673, 1217, 489, 1218,
	1197, 490, 491, 483, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 0, 501, 502, 675, 503, 504, 505,
	676, 506, 507, 508, 1198, 509, 678, 510, 511, 0,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 520,
	679, 521, 522, 524, 523, 525, 0, 526, 0, 527,
	528, 529, 0, 0, 0, 0, 0, 530, 0, 532,
	533, 534, 535, 531, 536, 537, 538, 539, 540, 0,
	541, 542, 543, 1219, 544, 545, 546, 547, 548, 680,
	549, 0, 550, 551, 557, 558, 559, 552, 553, 560,
	561, 562, 563, 564, 0, 566, 567, 565, 568, 569,
	570, 1161, 571, 572, 554, 555, 573, 574, 1220, 575,
	576, 577, 578, 579, 580, 581, 681, 0, 582, 0,
	583, 584, 585, 586, 588, 556, 589, 594, 595, 682,
	590, 591, 592, 593, 1199, 597, 598, 0, 599, 600,
	0, 596, 587, 0, 601, 602, 603, 604, 605, 606,
	607, 362, 608, 0, 609, 684, 685, 686, 687, 0,
	618, 0, 610, 611, 612, 1200, 613, 1201, 0, 614,
	615, 616, 617, 0, 619, 620, 0, 0, 621, 622,
	623, 625, 626, 624, 627, 1162, 628, 0, 0, 629,
	630, 631, 690, 691, 692, 0, 633, 632, 634, 635,
	693, 636, 637, 0, 0, 0, 1262, 638, 639, 694,
	640, 641, 642, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 1164, 0,
	0, 0, 4195, 286, 287, 1204, 288, 289, 290, 291,
	292, 293, 644, 645, 0, 294, 646, 295, 647, 0,
	648, 296, 297, 298, 299, 300, 301, 0, 1163, 0,
	302, 649, 650, 651, 0, 303, 304, 1170, 0, 1151,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 1205, 327,
	328, 329, 1154, 1152, 1153, 1160, 1156, 1155, 1159, 330,
	331, 332, 333, 334, 0, 335, 337, 653, 654, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 355, 356, 655, 357, 358,
	359, 361, 363, 360, 364, 365, 366, 367, 1195, 1196,
	368, 0, 274, 0, 0, 0, 0, 0, 369, 370,
	371, 658, 0, 0, 0, 372, 0, 373, 374, 0,
	0, 1206, 375, 376, 377, 659, 660, 378, 379, 380,
	381, 382, 383, 384, 385, 386, 0, 387, 1202, 0,
	662, 388, 0, 389, 390, 391, 392, 393, 1165, 1166,
	1169, 479, 1208, 394, 395, 0, 396, 397, 398, 399,
	400, 0, 0, 0, 275, 401, 402, 403, 405, 0,
	1207, 404, 666, 667, 0, 668, 0, 406, 407, 1209,
	1167, 1210, 408, 409, 410, 1211, 411, 0, 0, 0,
	412, 413, 414, 415, 416, 417, 0, 418, 420, 419,
	0, 421, 1203, 1212, 422, 423, 1213, 0, 424, 425,
	426, 427, 428, 429, 432, 1158, 1157, 430, 431, 433,
	434, 0, 435, 436, 438, 441, 437, 439, 440, 442,
	455, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 457, 0, 456, 1214, 458, 459, 460,
	467, 469, 470, 465, 466, 468, 471, 472, 462, 463,
	474, 464, 1215, 473, 461, 0, 276, 1216, 475, 476,
	477, 0, 1168, 478, 672, 480, 481, 0, 0, 482,
	0, 0, 0, 484, 485, 486, 0, 0, 487, 488,
	673, 1217, 489, 1218, 1197, 490, 491, 483, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 0, 501, 502,
	675, 503, 504, 505, 676, 506, 507, 508, 1198, 509,
	678, 510, 511, 0, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 520, 679, 521, 522, 524, 523, 525,
	0, 526, 0, 527, 528, 529, 0, 0, 0, 0,
	0, 530, 0, 532, 533, 534, 535, 531, 536, 537,
	538, 539, 540, 0, 541, 542, 543, 1219, 544, 545,
	546, 547, 548, 680, 1256, 0, 550, 551, 557, 558,
	559, 552, 553, 560, 561, 562, 563, 564, 0, 566,
	567, 565, 568, 569, 570, 1161, 571, 572, 554, 555,
	573, 574, 1220, 575, 576, 577, 578, 579, 580, 581,
	681, 0, 582, 0, 583, 584, 585, 586, 588, 556,
	589, 594, 595, 682, 590, 591, 592, 593, 1199, 597,
	598, 0, 599, 600, 0, 596, 587, 0, 601, 602,
	603, 604, 605, 606, 607, 362, 608, 0, 609, 684,
	685, 686, 687, 0, 618, 0, 610, 611, 612, 1200,
	613, 1201, 0, 614, 615, 616, 617, 0, 619, 620,
	0, 0, 621, 622, 623, 625, 626, 624, 627, 1162,
	628, 0, 0, 629, 630, 631, 690, 691, 692, 0,
	633, 632, 634, 635, 693, 636, 637, 271, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 2560, 2561, 2562,
	2579, 2580, 2581, 0, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 2582, 0, 643,
	0, 0, 0, 0, 286, 287, 1871, 288, 289, 290,
	291, 292, 293, 644, 645, 0, 294, 646, 295, 647,
	0, 648, 296, 297, 298, 299, 300, 301, 0, 0,
	1856, 302, 649, 650, 651, 0, 303, 304, 652, 0,
	0, 0, 305, 306, 307, 308, 309, 310, 311, 2572,
	0, 313, 314, 315, 312, 316, 0, 317, 2568, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 337, 653, 654,
	0, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 347, 348, 0, 349, 350,
	351, 0, 352, 353, 354, 0, 355, 356, 655, 357,
	358, 359, 361, 363, 360, 364, 365, 366, 367, 656,
	657, 368, 0, 0, 0, 2573, 2574, 2575, 2576, 369,
	370, 371, 658, 0, 0, 2567, 372, 0, 373, 374,
	0, 0, 0, 375, 376, 377, 659, 660, 378, 379,
	380, 381, 382, 383, 384, 385, 386, 0, 387, 661,
	0, 662, 388, 0, 389, 390, 391, 392, 393, 663,
	664, 665, 479, 0, 394, 395, 0, 396, 397, 398,
	399, 400, 0, 0, 0, 0, 401, 402, 403, 405,
	0, 0, 404, 666, 667, 0, 668, 0, 406, 407,
	0, 669, 0, 408, 409, 410, 0, 411, 0, 2577,
	2578, 412, 413, 414, 415, 416, 417, 0, 418, 420,
	419, 0, 421, 670, 0, 422, 423, 0, 0, 424,
	425, 426, 427, 428, 429, 432, 0, 0, 430, 431,
	433, 434, 2570, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 0, 458, 459,
	460, 467, 469, 470, 465, 466, 468, 471, 472, 462,
	463, 474, 464, 0, 473, 461, 0, 0, 0, 475,
	476, 477, 0, 671, 478, 672, 480, 481, 0, 0,
	482, 0, 0, 0, 484, 485, 486, 0, 0, 487,
	488, 673, 0, 489, 0, 674, 490, 491, 483, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 0, 501,
	502, 675, 503, 504, 505, 676, 506, 507, 508, 677,
	509, 678, 510, 511, 0, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 520, 679, 521, 522, 524, 523,
	525, 0, 526, 0, 527, 528, 529, 0, 0, 0,
	0, 0, 530, 0, 532, 533, 534, 535, 531, 536,
	537, 538, 539, 540, 0, 541, 542, 543, 0, 544,
	545, 546, 547, 548, 680, 549, 2571, 550, 551, 557,
	558, 559, 552, 553, 560, 561, 562, 563, 564, 0,
	566, 567, 565, 568, 569, 570, 0, 571, 572, 554,
	555, 573, 574, 0, 575, 576, 577, 578, 579, 580,
	581, 681, 0, 582, 0, 583, 584, 585, 586, 588,
	556, 589, 594, 595, 682, 590, 591, 592, 593, 683,
	597, 598, 0, 599, 600, 1855, 596, 587, 0, 601,
	602, 603, 604, 605, 606, 607, 362, 608, 0, 609,
	684, 685, 686, 687, 0, 618, 0, 610, 611, 612,
	688, 613, 689, 0, 614, 615, 616, 617, 0, 619,
	620, 0, 0, 621, 622, 623, 625, 626, 624, 627,
	0, 628, 0, 0, 629, 630, 631, 690, 691, 692,
	0, 633, 632, 634, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 0, 0,
	0, 0, 0, 0, 0, 1084, 0, 1344, 2557, 2558,
	2559, 2583, 2569, 2563, 0, 2565, 2566, 2564, 2551, 2552,
	2553, 2554, 2555, 2556, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 286, 287, 1204, 288, 289, 290,
	291, 292, 293, 644, 645, 0, 294, 646, 295, 647,
	0, 648, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 649, 650, 651, 0, 303, 304, 652, 0,
	1349, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1205,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 337, 653, 654,
	0, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 347, 348, 0, 349, 350,
	351, 0, 352, 353, 354, 0, 355, 356, 655, 357,
	358, 359, 361, 363, 360, 364, 365, 366, 367, 656,
	657, 368, 0, 274, 0, 0, 0, 0, 0, 369,
	370, 371, 658, 0, 0, 0, 372, 0, 373, 374,
	0, 0, 1206, 375, 376, 377, 659, 660, 378, 379,
	380, 381, 382, 383, 384, 385, 386, 0, 387, 661,
	0, 662, 388, 0, 389, 390, 391, 392, 393, 663,
	664, 665, 479, 1208, 394, 395, 0, 396, 397, 398,
	399, 400, 0, 0, 0, 0, 401, 402, 403, 405,
	0, 1207, 404, 666, 667, 0, 668, 0, 406, 407,
	1209, 669, 1210, 408, 409, 410, 1211, 411, 0, 0,
	0, 412, 413, 414, 415, 416, 417, 0, 418, 420,
	419, 0, 421, 670, 1212, 422, 423, 1213, 0, 424,
	425, 426, 427, 428, 429, 432, 0, 0, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 1214, 458, 459,
	460, 467, 469, 470, 465, 466, 468, 471, 472, 462,
	463, 474, 464, 1215, 473, 461, 0, 0, 1216, 475,
	476, 477, 0, 671, 478, 672, 480, 481, 0, 0,
	482, 0, 0, 0, 484, 485, 486, 0, 0, 487,
	488, 673, 1217, 489, 1218, 674, 490, 491, 483, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 0, 501,
	502, 675, 503, 504, 505, 676, 506, 507, 508, 677,
	509, 678, 510, 511, 0, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 520, 679, 521, 522, 524, 523,
	525, 0, 526, 0, 527, 528, 529, 0, 0, 0,
	0, 0, 530, 0, 532, 533, 534, 535, 531, 536,
	537, 538, 539, 540, 0, 541, 542, 543, 1219, 544,
	545, 546, 547, 548, 680, 549, 0, 550, 551, 557,
	558, 559, 552, 553, 560, 561, 562, 563, 564, 236,
	566, 567, 565, 568, 569, 570, 0, 571, 572, 554,
	555, 573, 574, 1220, 575, 576, 577, 578, 579, 580,
	581, 681, 0, 582, 0, 583, 584, 585, 586, 588,
	556, 589, 594, 595, 682, 590, 591, 592, 593, 683,
	597, 598, 0, 599, 600, 0, 596, 587, 238, 601,
	602, 603, 604, 605, 606, 607, 362, 608, 0, 609,
	684, 685, 686, 687, 0, 618, 0, 610, 611, 612,
	688, 613, 689, 0, 614, 615, 616, 617, 0, 619,
	620, 0, 0, 621, 622, 623, 625, 626, 624, 627,
	0, 628, 0, 0, 629, 630, 631, 1626, 691, 692,
	0, 633, 632, 634, 635, 693, 636, 637, 0, 0,
	0, 230, 638, 639, 694, 640, 641, 642, 0, 0,
	231, 1623, 0, 1344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 190, 284, 285,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	286, 287, 1204, 288, 289, 290, 291, 292, 293, 644,
	645, 0, 294, 646, 295, 647, 0, 648, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 649, 650,
	651, 0, 303, 304, 652, 0, 1349, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 1205, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 337, 653, 654, 0, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 347, 348, 0, 349, 350, 351, 0, 352, 353,
	354, 0, 355, 356, 655, 357, 358, 359, 361, 363,
	360, 364, 365, 366, 367, 656, 657, 368, 0, 274,
	0, 0, 0, 0, 0, 369, 370, 371, 658, 0,
	0, 0, 372, 0, 373, 374, 0, 0, 1206, 375,
	376, 377, 659, 660, 378, 379, 380, 381, 382, 383,
	384, 385, 386, 0, 387, 661, 0, 662, 388, 0,
	389, 390, 391, 392, 393, 663, 664, 665, 479, 1208,
	394, 395, 0, 396, 397, 398, 399, 400, 0, 0,
	0, 0, 401, 402, 403, 405, 0, 1207, 404, 666,
	667, 0, 668, 0, 406, 407, 1209, 669, 1210, 408,
	409, 410, 1211, 411, 0, 0, 0, 412, 413, 414,
	415, 416, 417, 0, 418, 420, 419, 0, 421, 670,
	1212, 422, 423, 1213, 0, 424, 425, 426, 427, 428,
	429, 432, 0, 0, 430, 431, 433, 434, 0, 435,
	436, 438, 441, 437, 439, 440, 442, 455, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	457, 0, 456, 1214, 458, 459, 460, 467, 469, 470,
	465, 466, 468, 471, 472, 462, 463, 474, 464, 1215,
	473, 461, 0, 0, 1216, 475, 476, 477, 0, 671,
	478, 672, 480, 481, 0, 0, 482, 0, 0, 0,
	484, 485, 486, 0, 0, 487, 488, 673, 1217, 489,
	1218, 674, 490, 491, 483, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 0, 501, 502, 675, 503, 504,
	505, 676, 506, 507, 508, 677, 509, 678, 510, 511,
	0, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	520, 679, 521, 522, 524, 523, 525, 0, 526, 0,
	527, 528, 529, 0, 0, 0, 0, 0, 530, 0,
	532, 533, 534, 535, 531, 536, 537, 538, 539, 540,
	0, 541, 542, 543, 1219, 544, 545, 546, 547, 548,
	680, 549, 0, 550, 551, 557, 558, 559, 552, 553,
	560, 561, 562, 563, 564, 236, 566, 567, 565, 568,
	569, 570, 0, 571, 572, 554, 555, 573, 574, 1220,
	575, 576, 577, 578, 579, 580, 581, 681, 0, 582,
	0, 583, 584, 585, 586, 588, 556, 589, 594, 595,
	682, 590, 591, 592, 593, 683, 597, 598, 0, 599,
	600, 0, 596, 587, 238, 601, 602, 603, 604, 605,
	606, 607, 362, 608, 0, 609, 684, 685, 686, 687,
	0, 618, 0, 610, 611, 612, 688, 613, 689, 0,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 0, 628, 0, 0,
	629, 630, 631, 1626, 691, 692, 0, 633, 632, 634,
	635, 693, 636, 637, 0, 0, 0, 230, 638, 639,
	694, 640, 641, 642, 1344, 1343, 231, 0, 0, 0,
	1341, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 190, 0, 0, 643, 0, 0, 0,
	0, 286, 287, 1204, 288, 289, 290, 291, 292, 293,
	644, 645, 0, 294, 646, 295, 647, 0, 648, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 649,
	650, 651, 0, 303, 304, 652, 0, 1349, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 1205, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 337, 653, 654, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 355, 356, 655, 357, 358, 359, 361,
	363, 360, 364, 365, 366, 367, 656, 657, 368, 0,
	274, 0, 0, 0, 0, 0, 369, 370, 371, 658,
	0, 0, 0, 372, 0, 373, 374, 0, 0, 1206,
	375, 376, 377, 659, 660, 378, 379, 380, 381, 382,
	383, 384, 385, 386, 0, 387, 661, 0, 662, 388,
	0, 389, 390, 391, 392, 393, 663, 664, 665, 479,
	1208, 394, 395, 0, 396, 397, 398, 399, 400, 0,
	0, 0, 0, 401, 402, 403, 405, 0, 1207, 404,
	666, 667, 0, 668, 0, 406, 407, 1209, 669, 1210,
	408, 409, 410, 1211, 411, 0, 0, 0, 412, 413,
	414, 415, 416, 417, 0, 418, 420, 419, 0, 421,
	670, 1212, 422, 423, 1213, 0, 424, 425, 426, 427,
	428, 429, 432, 0, 0, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 440, 442, 455, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 456, 1214, 458, 459, 460, 467, 469,
	470, 465, 466, 468, 471, 472, 462, 463, 474, 464,
	1215, 473, 461, 0, 0, 1216, 475, 476, 477, 0,
	671, 478, 672, 480, 481, 0, 0, 482, 0, 0,
	0, 484, 485, 486, 0, 0, 487, 488, 673, 1217,
	489, 1218, 674, 490, 491, 483, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 0, 501, 502, 675, 503,
	504, 505, 676, 506, 507, 508, 677, 509, 678, 510,
	511, 0, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 520, 679, 521, 522, 524, 523, 525, 0, 526,
	0, 527, 528, 529, 0, 0, 0, 0, 0, 530,
	0, 532, 533, 534, 535, 531, 536, 537, 538, 539,
	540, 0, 541, 542, 543, 1219, 544, 545, 546, 547,
	548, 680, 549, 0, 550, 551, 557, 558, 559, 552,
	553, 560, 561, 562, 563, 564, 0, 566, 567, 565,
	568, 569, 570, 0, 571, 572, 554, 555, 573, 574,
	1220, 575, 576, 577, 578, 579, 580, 581, 681, 0,
	582, 0, 583, 584, 585, 586, 588, 556, 589, 594,
	595, 682, 590, 591, 592, 593, 683, 597, 598, 0,
	599, 600, 0, 596, 587, 0, 601, 602, 603, 604,
	605, 606, 607, 362, 608, 0, 609, 684, 685, 686,
	687, 0, 618, 0, 610, 611, 612, 688, 613, 689,
	0, 614, 615, 616, 617, 0, 619, 620, 0, 0,
	621, 622, 623, 625, 626, 624, 627, 0, 628, 0,
	0, 629, 630, 631, 690, 691, 692, 0, 633, 632,
	634, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 1344, 1343, 0, 0, 0,
	0, 1341, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 1648, 0, 0, 643, 0, 0,
	0, 0, 286, 287, 1204, 288, 289, 290, 291, 292,
	293, 644, 645, 0, 294, 646, 295, 647, 0, 648,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	649, 650, 651, 0, 303, 304, 652, 0, 1349, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 1205, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 337, 653, 654, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 655, 357, 358, 359,
	361, 363, 360, 364, 365, 366, 367, 656, 657, 368,
	0, 274, 0, 0, 0, 0, 0, 369, 370, 371,
	658, 0, 0, 0, 372, 0, 373, 374, 0, 0,
	1206, 375, 376, 377, 659, 660, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 0, 387, 661, 0, 662,
	388, 0, 389, 390, 391, 392, 393, 663, 664, 665,
	479, 1208, 394, 395, 0, 396, 397, 398, 399, 400,
	0, 0, 0, 0, 401, 402, 403, 405, 0, 1207,
	404, 666, 667, 0, 668, 0, 406, 407, 1209, 669,
	1210, 408, 409, 410, 1211, 411, 0, 0, 0, 412,
	413, 414, 415, 416, 417, 0, 418, 420, 419, 0,
	421, 670, 1212, 422, 423, 1213, 0, 424, 425, 426,
	427, 428, 429, 432, 0, 0, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 1214, 458, 459, 460, 467,
	469, 470, 465, 466, 468, 471, 472, 462, 463, 474,
	464, 1215, 473, 461, 0, 0, 1216, 475, 476, 477,
	0, 671, 478, 672, 480, 481, 0, 0, 482, 0,
	0, 0, 484, 485, 486, 0, 0, 487, 488, 673,
	1217, 489, 1218, 674, 490, 491, 483, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 0, 501, 502, 675,
	503, 504, 505, 676, 506, 507, 508, 677, 509, 678,
	510, 511, 0, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 520, 679, 521, 522, 524, 523, 525, 0,
	526, 0, 527, 528, 529, 0, 0, 0, 0, 0,
	530, 0, 532, 533, 534, 535, 531, 536, 537, 538,
	539, 540, 0, 541, 542, 543, 1219, 544, 545, 546,
	547, 548, 680, 549, 0, 550, 551, 557, 558, 559,
	552, 553, 560, 561, 562, 563, 564, 0, 566, 567,
	565, 568, 569, 570, 0, 571, 572, 554, 555, 573,
	574, 1220, 575, 576, 577, 578, 579, 580, 581, 681,
	0, 582, 0, 583, 584, 585, 586, 588, 556, 589,
	594, 595, 682, 590, 591, 592, 593, 683, 597, 598,
	0, 599, 600, 0, 596, 587, 0, 601, 602, 603,
	604, 605, 606, 607, 362, 608, 0, 609, 684, 685,
	686, 687, 0, 618, 0, 610, 611, 612, 688, 613,
	689, 0, 614, 615, 616, 617, 0, 619, 620, 0,
	0, 621, 622, 623, 625, 626, 624, 627, 0, 628,
	0, 0, 629, 630, 631, 690, 691, 692, 0, 633,
	632, 634, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 1344, 1343, 0, 0,
	0, 0, 1341, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 3657, 0, 0, 643, 0,
	0, 0, 0, 286, 287, 1204, 288, 289, 290, 291,
	292, 293, 644, 645, 0, 294, 646, 295, 647, 0,
	648, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 649, 650, 651, 0, 303, 304, 652, 0, 1349,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 1205, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 337, 653, 654, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 355, 356, 655, 357, 358,
	359, 361, 363, 360, 364, 365, 366, 367, 656, 657,
	368, 0, 274, 0, 0, 0, 0, 0, 369, 370,
	371, 658, 0, 0, 0, 372, 0, 373, 374, 0,
	0, 1206, 375, 376, 377, 659, 660, 378, 379, 380,
	381, 382, 383, 384, 385, 386, 0, 387, 661, 0,
	662, 388, 0, 389, 390, 391, 392, 393, 663, 664,
	665, 479, 1208, 394, 395, 0, 396, 397, 398, 399,
	400, 0, 0, 0, 0, 401, 402, 403, 405, 0,
	1207, 404, 666, 667, 0, 668, 0, 406, 407, 1209,
	669, 1210, 408, 409, 410, 1211, 411, 0, 0, 0,
	412, 413, 414, 415, 416, 417, 0, 418, 420, 419,
	0, 421, 670, 1212, 422, 423, 1213, 0, 424, 425,
	426, 427, 428, 429, 432, 0, 0, 430, 431, 433,
	434, 0, 435, 436, 438, 441, 437, 439, 440, 442,
	455, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 457, 0, 456, 1214, 458, 459, 460,
	467, 469, 470, 465, 466, 468, 471, 472, 462, 463,
	474, 464, 1215, 473, 461, 0, 0, 1216, 475, 476,
	477, 0, 671, 478, 672, 480, 481, 0, 0, 482,
	0, 0, 0, 484, 485, 486, 0, 0, 487, 488,
	673, 1217, 489, 1218, 674, 490, 491, 483, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 0, 501, 502,
	675, 503, 504, 505, 676, 506, 507, 508, 677, 509,
	678, 510, 511, 0, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 520, 679, 521, 522, 524, 523, 525,
	0, 526, 0, 527, 528, 529, 0, 0, 0, 0,
	0, 530, 0, 532, 533, 534, 2329, 531, 536, 537,
	538, 539, 540, 0, 541, 542, 543, 1219, 544, 545,
	546, 547, 548, 680, 549, 0, 550, 551, 557, 558,
	559, 552, 553, 560, 561, 562, 563, 564, 0, 566,
	567, 565, 568, 569, 570, 0, 571, 572, 554, 555,
	573, 574, 1220, 575, 576, 577, 578, 579, 580, 581,
	681, 0, 582, 0, 583, 584, 585, 586, 588, 556,
	589, 594, 595, 682, 590, 591, 592, 593, 683, 597,
	598, 0, 599, 600, 0, 596, 587, 0, 601, 602,
	603, 604, 605, 606, 607, 362, 608, 0, 609, 684,
	685, 686, 687, 0, 618, 0, 610, 611, 612, 688,
	613, 689, 0, 614, 615, 616, 617, 0, 619, 620,
	0, 0, 621, 622, 623, 625, 626, 624, 627, 0,
	628, 0, 0, 629, 630, 631, 690, 691, 692, 0,
	633, 632, 634, 635, 693, 636, 637, 0, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 1344, 2240, 0,
	0, 0, 0, 2241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 1648, 0, 0, 643,
	0, 0, 0, 0, 286, 287, 1204, 288, 289, 290,
	291, 292, 293, 644, 645, 0, 294, 646, 295, 647,
	0, 648, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 649, 650, 651, 0, 303, 304, 652, 0,
	1349, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1205,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 337, 653, 654,
	0, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 347, 348, 0, 349, 350,
	351, 0, 352, 353, 354, 0, 355, 356, 655, 357,
	358, 359, 361, 363, 360, 364, 365, 366, 367, 656,
	657, 368, 0, 274, 0, 0, 0, 0, 0, 369,
	370, 371, 658, 0, 0, 0, 372, 0, 373, 374,
	0, 0, 1206, 375, 376, 377, 659, 660, 378, 379,
	380, 381, 382, 383, 384, 385, 386, 0, 387, 661,
	0, 662, 388, 0, 389, 390, 391, 392, 393, 663,
	664, 665, 479, 1208, 394, 395, 0, 396, 397, 398,
	399, 400, 0, 0, 0, 0, 401, 402, 403, 405,
	0, 1207, 404, 666, 667, 0, 668, 0, 406, 407,
	1209, 669, 1210, 408, 409, 410, 1211, 411, 0, 0,
	0, 412, 413, 414, 415, 416, 417, 0, 2239, 420,
	419, 0, 421, 670, 1212, 422, 423, 1213, 0, 424,
	425, 426, 427, 428, 429, 432, 0, 0, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 1214, 458, 459,
	460, 467, 469, 470, 465, 466, 468, 471, 472, 462,
	463, 474, 464, 1215, 473, 461, 0, 0, 1216, 475,
	476, 477, 0, 671, 478, 672, 480, 481, 0, 0,
	482, 0, 0, 0, 484, 485, 486, 0, 0, 487,
	488, 673, 1217, 489, 1218, 674, 490, 491, 483, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 0, 501,
	502, 675, 503, 504, 505, 676, 506, 507, 508, 677,
	509, 678, 510, 511, 0, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 520, 679, 521, 522, 524, 523,
	525, 0, 526, 0, 527, 528, 529, 0, 0, 0,
	0, 0, 530, 0, 532, 533, 534, 535, 531, 536,
	537, 538, 539, 540, 0, 541, 542, 543, 1219, 544,
	545, 546, 547, 548, 680, 549, 0, 550, 551, 557,
	558, 559, 552, 553, 560, 561, 562, 563, 564, 0,
	566, 567, 565, 568, 569, 570, 0, 571, 572, 554,
	555, 573, 574, 1220, 575, 576, 577, 578, 579, 580,
	581, 681, 0, 582, 0, 583, 584, 585, 586, 588,
	556, 589, 594, 595, 682, 590, 591, 592, 593, 683,
	597, 598, 0, 599, 600, 0, 596, 587, 0, 601,
	602, 603, 604, 605, 606, 607, 362, 608, 0, 609,
	684, 685, 686, 687, 0, 618, 0, 610, 611, 612,
	688, 613, 689, 0, 614, 615, 616, 617, 0, 619,
	620, 0, 0, 621, 622, 623, 625, 626, 624, 627,
	0, 628, 0, 0, 629, 630, 631, 690, 691, 692,
	0, 633, 632, 634, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 1344, 1343,
	0, 0, 0, 0, 1341, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 1648, 0, 0,
	643, 0, 0, 0, 0, 286, 287, 1204, 288, 289,
	290, 291, 292, 293, 644, 645, 0, 294, 646, 295,
	647, 0, 648, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 649, 650, 651, 0, 303, 304, 652,
	0, 1349, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	1205, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 337, 653,
	654, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 354, 0, 355, 356, 655,
	357, 358, 359, 361, 363, 360, 364, 365, 366, 367,
	656, 657, 368, 0, 274, 0, 0, 0, 0, 0,
	369, 370, 371, 658, 0, 0, 0, 372, 0, 373,
	374, 0, 0, 1206, 375, 376, 377, 659, 660, 378,
	379, 380, 381, 382, 383, 384, 385, 386, 0, 387,
	661, 0, 662, 388, 0, 389, 390, 391, 392, 393,
	663, 664, 665, 479, 1208, 394, 395, 0, 396, 397,
	398, 399, 400, 0, 0, 0, 0, 401, 402, 403,
	405, 0, 1207, 404, 666, 667, 0, 668, 0, 406,
	407, 1209, 669, 1210, 408, 409, 410, 1211, 411, 0,
	0, 0, 412, 413, 414, 415, 416, 417, 0, 418,
	420, 419, 0, 421, 670, 1212, 422, 423, 1213, 0,
	424, 425, 426, 427, 428, 429, 432, 0, 0, 430,
	431, 433, 434, 0, 435, 436, 438, 441, 437, 439,
	440, 442, 455, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 457, 0, 456, 1214, 458,
	459, 460, 467, 469, 470, 465, 466, 468, 471, 472,
	462, 463, 474, 464, 1215, 473, 461, 0, 0, 1216,
	475, 476, 477, 0, 671, 478, 672, 480, 481, 0,
	0, 482, 0, 0, 0, 484, 485, 486, 0, 0,
	487, 488, 673, 1217, 489, 1218, 674, 490, 491, 483,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 0,
	501, 502, 675, 503, 504, 505, 676, 506, 507, 508,
	677, 509, 678, 510, 511, 0, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 520, 679, 521, 522, 524,
	523, 525, 0, 526, 0, 527, 528, 529, 0, 0,
	0, 0, 0, 530, 0, 532, 533, 534, 535, 531,
	536, 537, 538, 539, 540, 0, 541, 542, 543, 1219,
	544, 545, 546, 547, 548, 680, 549, 0, 550, 551,
	557, 558, 559, 552, 553, 560, 561, 562, 563, 564,
	0, 566, 567, 565, 568, 569, 570, 0, 571, 572,
	554, 555, 573, 574, 1220, 575, 576, 577, 578, 579,
	580, 581, 681, 0, 582, 0, 583, 584, 585, 586,
	588, 556, 589, 594, 595, 682, 590, 591, 592, 593,
	683, 597, 598, 0, 599, 600, 0, 596, 587, 0,
	601, 602, 603, 604, 605, 606, 607, 362, 608, 0,
	609, 684, 685, 686, 687, 0, 618, 0, 610, 611,
	612, 688, 613, 689, 0, 614, 615, 616, 617, 0,
	619, 620, 0, 0, 621, 622, 623, 625, 626, 624,
	627, 0, 628, 0, 0, 629, 630, 631, 690, 691,
	692, 0, 633, 632, 634, 635, 693, 636, 637, 0,
	1084, 0, 271, 638, 639, 694, 640, 641, 642, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 1632, 286,
	287, 0, 288, 289, 290, 291, 292, 293, 644, 645,
	0, 294, 646, 295, 647, 0, 648, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 649, 650, 651,
	0, 303, 304, 652, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 337, 653, 654, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 355, 356, 655, 357, 358, 359, 361, 363, 360,
	364, 365, 366, 367, 656, 657, 368, 0, 0, 0,
	0, 0, 0, 0, 369, 370, 371, 658, 0, 0,
	0, 372, 0, 373, 374, 0, 0, 0, 375, 376,
	377, 659, 660, 378, 379, 380, 381, 382, 383, 384,
	385, 386, 0, 387, 661, 0, 662, 388, 0, 389,
	390, 391, 392, 393, 663, 664, 665, 479, 0, 394,
	395, 0, 396, 397, 398, 399, 400, 0, 0, 0,
	0, 401, 402, 403, 405, 0, 0, 404, 666, 667,
	0, 668, 0, 406, 407, 0, 669, 0, 408, 409,
	410, 0, 411, 0, 0, 0, 412, 413, 414, 415,
	416, 417, 0, 418, 420, 419, 0, 421, 670, 0,
	422, 423, 0, 0, 424, 425, 426, 427, 428, 429,
	432, 0, 0, 430, 431, 433, 434, 0, 435, 436,
	438, 441, 437, 439, 440, 442, 455, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 457,
	0, 456, 0, 458, 459, 460, 467, 469, 470, 465,
	466, 468, 471, 472, 462, 463, 474, 464, 0, 473,
	461, 0, 0, 0, 475, 476, 477, 0, 671, 478,
	672, 480, 481, 0, 0, 482, 0, 0, 0, 484,
	485, 486, 0, 0, 487, 488, 673, 0, 489, 0,
	674, 490, 491, 483, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 0, 501, 502, 675, 503, 504, 505,
	676, 506, 507, 508, 677, 509, 678, 510, 511, 0,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 520,
	679, 521, 522, 524, 523, 525, 0, 526, 0, 527,
	528, 529, 0, 0, 0, 0, 0, 530, 0, 532,
	533, 534, 535, 531, 536, 537, 538, 539, 540, 0,
	541, 542, 543, 0, 544, 545, 546, 547, 548, 680,
	549, 0, 550, 551, 557, 558, 559, 552, 553, 560,
	561, 562, 563, 564, 236, 566, 567, 565, 568, 569,
	570, 0, 571, 572, 554, 555, 573, 574, 0, 575,
	576, 577, 578, 579, 580, 581, 681, 0, 582, 0,
	583, 584, 585, 586, 588, 556, 589, 594, 595, 682,
	590, 591, 592, 593, 683, 597, 598, 0, 599, 600,
	0, 596, 587, 238, 601, 602, 603, 604, 605, 606,
	607, 362, 608, 0, 609, 684, 685, 686, 687, 0,
	618, 0, 610, 611, 612, 688, 613, 689, 0, 614,
	615, 616, 617, 0, 619, 620, 0, 0, 621, 622,
	623, 625, 626, 624, 627, 0, 628, 0, 0, 629,
	630, 631, 1626, 691, 692, 0, 633, 632, 634, 635,
	693, 636, 637, 271, 0, 0, 230, 638, 639, 694,
	640, 641, 642, 0, 0, 231, 0, 0, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	286, 287, 190, 288, 289, 290, 291, 292, 293, 644,
	645, 0, 294, 646, 295, 647, 0, 648, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 649, 650,
	651, 0, 303, 304, 652, 0, 0, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 337, 653, 654, 0, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 347, 348, 0, 349, 350, 351, 0, 352, 353,
	354, 0, 355, 356, 655, 357, 358, 359, 361, 363,
	360, 364, 365, 366, 367, 656, 657, 368, 0, 274,
	0, 0, 0, 0, 0, 369, 370, 371, 658, 0,
	0, 0, 372, 0, 373, 374, 0, 0, 0, 375,
	376, 377, 659, 660, 378, 379, 380, 381, 382, 383,
	384, 385, 386, 0, 387, 661, 0, 662, 388, 0,
	389, 390, 391, 392, 393, 663, 664, 665, 479, 0,
	394, 395, 0, 396, 397, 398, 399, 400, 0, 0,
	0, 275, 401, 402, 403, 405, 0, 0, 404, 666,
	667, 0, 668, 0, 406, 407, 0, 669, 0, 408,
	409, 410, 0, 411, 0, 0, 0, 412, 413, 414,
	415, 416, 417, 0, 418, 420, 419, 0, 421, 670,
	0, 422, 423, 0, 0, 424, 425, 426, 427, 428,
	429, 432, 0, 0, 430, 431, 433, 434, 0, 435,
	436, 438, 441, 437, 439, 440, 442, 455, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	457, 0, 456, 0, 458, 459, 460, 467, 469, 470,
	465, 466, 468, 471, 472, 462, 463, 474, 464, 0,
	473, 461, 0, 276, 0, 475, 476, 477, 0, 671,
	478, 672, 480, 481, 0, 0, 482, 0, 0, 0,
	484, 485, 486, 0, 0, 487, 488, 673, 0, 489,
	0, 674, 490, 491, 483, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 0, 501, 502, 675, 503, 504,
	505, 676, 506, 507, 508, 677, 509, 678, 510, 511,
	0, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	520, 679, 521, 522, 524, 523, 525, 0, 526, 0,
	527, 528, 529, 0, 0, 0, 0, 0, 530, 0,
	532, 533, 534, 535, 531, 536, 537, 538, 539, 540,
	0, 541, 542, 543, 0, 544, 545, 546, 547, 548,
	680, 549, 0, 550, 551, 557, 558, 559, 552, 553,
	560, 561, 562, 563, 564, 0, 566, 567, 565, 568,
	569, 570, 0, 571, 572, 554, 555, 573, 574, 0,
	575, 576, 577, 578, 579, 580, 581, 681, 0, 582,
	0, 583, 584, 585, 586, 588, 556, 589, 594, 595,
	682, 590, 591, 592, 593, 683, 597, 598, 0, 599,
	600, 0, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 362, 608, 0, 609, 684, 685, 686, 687,
	0, 618, 0, 610, 611, 612, 688, 613, 689, 0,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 0, 628, 0, 0,
	629, 630, 631, 690, 691, 692, 0, 633, 632, 634,
	635, 693, 636, 637, 0, 0, 0, 1262, 638, 639,
	694, 640, 641, 642, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 1164,
	0, 0, 0, 1988, 286, 287, 1204, 288, 289, 290,
	291, 292, 293, 644, 645, 0, 294, 646, 295, 647,
	0, 648, 296, 297, 298, 299, 300, 301, 0, 1163,
	0, 302, 649, 650, 651, 0, 303, 304, 1170, 0,
	1151, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1205,
	327, 328, 329, 1154, 1152, 1153, 1160, 1156, 1155, 1159,
	330, 331, 332, 333, 334, 0, 335, 337, 653, 654,
	0, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 347, 348, 0, 349, 350,
	351, 0, 352, 353, 354, 0, 355, 356, 655, 357,
	358, 359, 361, 363, 360, 364, 365, 366, 367, 1195,
	1196, 368, 0, 274, 0, 0, 0, 0, 0, 369,
	370, 371, 658, 0, 0, 0, 372, 0, 373, 374,
	0, 0, 1206, 375, 376, 377, 659, 660, 378, 379,
	380, 381, 382, 383, 384, 385, 386, 0, 387, 1202,
	0, 662, 388, 0, 389, 390, 391, 392, 393, 1165,
	1166, 1169, 479, 1208, 394, 395, 0, 396, 397, 398,
	399, 400, 0, 0, 0, 275, 401, 402, 403, 405,
	0, 1207, 404, 666, 667, 0, 668, 0, 406, 407,
	1209, 1167, 1210, 408, 409, 410, 1211, 411, 0, 0,
	0, 412, 413, 414, 415, 416, 417, 0, 418, 420,
	419, 0, 421, 1203, 1212, 422, 423, 1213, 0, 424,
	425, 426, 427, 428, 429, 432, 1158, 1157, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 1214, 458, 459,
	460, 467, 469, 470, 465, 466, 468, 471, 472, 462,
	463, 474, 464, 1215, 473, 461, 0, 276, 1216, 475,
	476, 477, 0, 1168, 478, 672, 480, 481, 0, 0,
	482, 0, 0, 0, 484, 485, 486, 0, 0, 487,
	488, 673, 1217, 489, 1218, 1197, 490, 491, 483, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 0, 501,
	502, 675, 503, 504, 505, 676, 506, 507, 508, 1198,
	509, 678, 510, 511, 0, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 520, 679, 521, 522, 524, 523,
	525, 0, 526, 0, 527, 528, 529, 0, 0, 0,
	0, 0, 530, 0, 532, 533, 534, 535, 531, 536,
	537, 538, 539, 540, 0, 541, 542, 543, 1219, 544,
	545, 546, 547, 548, 680, 549, 0, 550, 551, 557,
	558, 559, 552, 553, 560, 561, 562, 563, 564, 0,
	566, 567, 565, 568, 569, 570, 1161, 571, 572, 554,
	555, 573, 574, 1220, 575, 576, 577, 578, 579, 580,
	581, 681, 0, 582, 0, 583, 584, 585, 586, 588,
	556, 589, 594, 595, 682, 590, 591, 592, 593, 1199,
	597, 598, 0, 599, 600, 0, 596, 587, 0, 601,
	602, 603, 604, 605, 606, 607, 362, 608, 0, 609,
	684, 685, 686, 687, 0, 618, 0, 610, 611, 612,
	1200, 613, 1201, 0, 614, 615, 616, 617, 0, 619,
	620, 0, 0, 621, 622, 623, 625, 626, 624, 627,
	1162, 628, 0, 0, 629, 630, 631, 690, 691, 692,
	0, 633, 632, 634, 635, 693, 636, 637, 271, 3100,
	0, 0, 638, 639, 694, 640, 641, 642, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 286, 287, 0, 288, 289,
	290, 291, 292, 293, 644, 645, 0, 294, 646, 295,
	647, 0, 648, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 649, 650, 651, 0, 303, 304, 652,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 337, 653,
	654, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 354, 0, 355, 356, 655,
	357, 358, 359, 361, 363, 360, 364, 365, 366, 367,
	656, 657, 368, 0, 0, 0, 0, 0, 0, 0,
	369, 370, 371, 658, 0, 0, 0, 372, 0, 373,
	374, 0, 0, 0, 375, 376, 377, 659, 660, 378,
	379, 380, 381, 382, 383, 384, 385, 386, 0, 387,
	661, 0, 662, 388, 0, 389, 390, 391, 392, 393,
	663, 664, 665, 479, 0, 394, 395, 0, 396, 397,
	398, 399, 400, 0, 0, 0, 0, 401, 402, 403,
	405, 0, 0, 404, 666, 667, 0, 668, 0, 406,
	407, 0, 669, 0, 408, 409, 410, 0, 411, 0,
	0, 0, 412, 413, 414, 415, 416, 417, 0, 418,
	420, 419, 0, 421, 670, 0, 422, 423, 0, 0,
	424, 425, 426, 427, 428, 429, 432, 0, 0, 430,
	431, 433, 434, 0, 435, 436, 438, 441, 437, 439,
	440, 442, 455, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 457, 0, 456, 0, 458,
	459, 460, 467, 469, 470, 465, 466, 468, 471, 472,
	462, 463, 474, 464, 0, 473, 461, 0, 0, 0,
	475, 476, 477, 0, 671, 478, 672, 480, 481, 0,
	0, 482, 0, 0, 0, 484, 485, 486, 0, 0,
	487, 488, 673, 0, 489, 0, 674, 490, 491, 483,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 0,
	501, 502, 675, 503, 504, 505, 676, 506, 507, 508,
	677, 509, 678, 510, 511, 0, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 520, 679, 521, 522, 524,
	523, 525, 0, 526, 0, 527, 528, 529, 0, 0,
	0, 0, 0, 530, 0, 532, 533, 534, 535, 531,
	536, 537, 538, 539, 540, 0, 541, 542, 543, 0,
	544, 545, 546, 547, 548, 680, 549, 0, 550, 551,
	557, 558, 559, 552, 553, 560, 561, 562, 563, 564,
	0, 566, 567, 565, 568, 569, 570, 0, 571, 572,
	554, 555, 573, 574, 0, 575, 576, 577, 578, 579,
	580, 581, 681, 0, 582, 0, 583, 584, 585, 586,
	588, 556, 589, 594, 595, 682, 590, 591, 592, 593,
	683, 597, 598, 0, 599, 600, 0, 596, 587, 0,
	601, 602, 603, 604, 605, 606, 607, 362, 608, 0,
	609, 684, 685, 686, 687, 0, 618, 0, 610, 611,
	612, 688, 613, 689, 0, 614, 615, 616, 617, 0,
	619, 620, 0, 0, 621, 622, 623, 625, 626, 624,
	627, 0, 628, 0, 0, 629, 630, 631, 690, 691,
	692, 0, 633, 632, 634, 635, 693, 636, 637, 271,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 0,
	0, 0, 0, 0, 0, 0, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 286, 287, 4920, 288,
	289, 290, 291, 292, 293, 644, 645, 0, 294, 646,
	295, 647, 0, 648, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 649, 650, 651, 0, 303, 304,
	652, 0, 0, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 335, 337,
	653, 654, 0, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 347, 348, 0,
	349, 350, 351, 0, 352, 353, 354, 0, 355, 356,
	655, 357, 358, 359, 361, 363, 360, 364, 365, 366,
	367, 656, 657, 368, 0, 274, 0, 0, 0, 0,
	0, 369, 370, 371, 658, 0, 0, 0, 372, 0,
	373, 374, 0, 0, 0, 375, 376, 377, 659, 660,
	378, 379, 380, 381, 382, 383, 384, 385, 386, 0,
	387, 661, 0, 662, 388, 0, 389, 390, 391, 392,
	393, 663, 664, 665, 479, 0, 394, 395, 0, 396,
	397, 398, 399, 400, 0, 0, 0, 275, 401, 402,
	403, 405, 0, 0, 404, 666, 667, 0, 668, 0,
	406, 407, 0, 669, 0, 408, 409, 410, 0, 411,
	0, 0, 0, 412, 413, 414, 415, 416, 417, 0,
	418, 420, 419, 0, 421, 670, 0, 422, 423, 0,
	0, 424, 425, 426, 427, 428, 429, 432, 0, 0,
	430, 431, 433, 434, 0, 435, 436, 438, 441, 437,
	439, 440, 442, 455, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 457, 0, 456, 0,
	458, 459, 460, 467, 469, 470, 465, 466, 468, 471,
	472, 462, 463, 474, 464, 0, 473, 461, 0, 276,
	0, 475, 476, 477, 0, 671, 478, 672, 480, 481,
	0, 0, 482, 0, 0, 0, 484, 485, 486, 0,
	0, 487, 488, 673, 0, 489, 0, 674, 490, 491,
	483, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	0, 501, 502, 675, 503, 504, 505, 676, 506, 507,
	508, 677, 509, 678, 510, 511, 0, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 520, 679, 521, 522,
	524, 523, 525, 0, 526, 0, 527, 528, 529, 0,
	0, 0, 0, 0, 530, 0, 532, 533, 534, 535,
	531, 536, 537, 538, 539, 540, 0, 541, 542, 543,
	0, 544, 545, 546, 547, 548, 680, 549, 0, 550,
	551, 557, 558, 559, 552, 553, 560, 561, 562, 563,
	564, 0, 566, 567, 565, 568, 569, 570, 0, 571,
	572, 554, 555, 573, 574, 0, 575, 576, 577, 578,
	579, 580, 581, 681, 0, 582, 0, 583, 584, 585,
	586, 588, 556, 589, 594, 595, 682, 590, 591, 592,
	593, 683, 597, 598, 0, 599, 600, 0, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 362, 608,
	0, 609, 684, 685, 686, 687, 0, 618, 0, 610,
	611, 612, 688, 613, 689, 0, 614, 615, 616, 617,
	0, 619, 620, 0, 0, 621, 622, 623, 625, 626,
	624, 627, 0, 628, 0, 0, 629, 630, 631, 690,
	691, 692, 0, 633, 632, 634, 635, 693, 636, 637,
	0, 271, 0, 0, 638, 639, 694, 640, 641, 642,
	0, 0, 0, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 3607, 286, 287,
	0, 288, 289, 290, 291, 292, 293, 644, 645, 0,
	294, 646, 295, 647, 0, 648, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 649, 650, 651, 0,
	303, 304, 652, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 337, 653, 654, 0, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 347,
	348, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 655, 357, 358, 359, 361, 363, 360, 364,
	365, 366, 367, 656, 657, 368, 0, 274, 0, 0,
	0, 0, 0, 369, 370, 371, 658, 0, 0, 0,
	372, 0, 373, 374, 0, 0, 0, 375, 376, 377,
	659, 660, 378, 379, 380, 381, 382, 383, 384, 385,
	386, 0, 387, 661, 0, 662, 388, 0, 389, 390,
	391, 392, 393, 663, 664, 665, 479, 0, 394, 395,
	0, 396, 397, 398, 399, 400, 0, 0, 0, 275,
	401, 402, 403, 405, 0, 0, 404, 666, 667, 0,
	668, 0, 406, 407, 0, 669, 0, 408, 409, 410,
	0, 411, 0, 0, 0, 412, 413, 414, 415, 416,
	417, 0, 418, 420, 419, 0, 421, 670, 0, 422,
	423, 0, 0, 424, 425, 426, 427, 428, 429, 432,
	0, 0, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 0, 458, 459, 460, 467, 469, 470, 465, 466,
	468, 471, 472, 462, 463, 474, 464, 0, 473, 461,
	0, 276, 0, 475, 476, 477, 0, 671, 478, 672,
	480, 481, 0, 0, 482, 0, 0, 0, 484, 485,
	486, 0, 0, 487, 488, 673, 0, 489, 0, 674,
	490, 491, 483, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 0, 501, 502, 675, 503, 504, 505, 676,
	506, 507, 508, 677, 509, 678, 510, 511, 0, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 520, 679,
	521, 522, 524, 523, 525, 0, 526, 0, 527, 528,
	529, 0, 0, 0, 0, 0, 530, 0, 532, 533,
	534, 535, 531, 536, 537, 538, 539, 540, 0, 541,
	542, 543, 0, 544, 545, 546, 547, 548, 680, 549,
	0, 550, 551, 557, 558, 559, 552, 553, 560, 561,
	562, 563, 564, 0, 566, 567, 565, 568, 569, 570,
	0, 571, 572, 554, 555, 573, 574, 0, 575, 576,
	577, 578, 579, 580, 581, 681, 0, 582, 0, 583,
	584, 585, 586, 588, 556, 589, 594, 595, 682, 590,
	591, 592, 593, 683, 597, 598, 0, 599, 600, 0,
	596, 587, 0, 601, 602, 603, 604, 605, 606, 607,
	362, 608, 0, 609, 684, 685, 686, 687, 0, 618,
	0, 610, 611, 612, 688, 613, 689, 0, 614, 615,
	616, 617, 0, 619, 620, 0, 0, 621, 622, 623,
	625, 626, 624, 627, 0, 628, 0, 0, 629, 630,
	631, 690, 691, 692, 0, 633, 632, 634, 635, 693,
	636, 637, 0, 271, 0, 0, 638, 639, 694, 640,
	641, 642, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 1620,
	286, 287, 0, 288, 289, 290, 291, 292, 293, 644,
	645, 0, 294, 646, 295, 647, 0, 648, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 649, 650,
	651, 0, 303, 304, 652, 0, 0, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 337, 653, 654, 0, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 347, 348, 0, 349, 350, 351, 0, 352, 353,
	354, 0, 355, 356, 655, 357, 358, 359, 361, 363,
	360, 364, 365, 366, 367, 656, 657, 368, 0, 0,
	0, 0, 0, 0, 0, 369, 370, 371, 658, 0,
	0, 0, 372, 0, 373, 374, 0, 0, 0, 375,
	376, 377, 659, 660, 378, 379, 380, 381, 382, 383,
	384, 385, 386, 0, 387, 661, 0, 662, 388, 0,
	389, 390, 391, 392, 393, 663, 664, 665, 479, 0,
	394, 395, 0, 396, 397, 398, 399, 400, 0, 0,
	0, 0, 401, 402, 403, 405, 0, 0, 404, 666,
	667, 0, 668, 0, 406, 407, 0, 669, 0, 408,
	409, 410, 0, 411, 0, 0, 0, 412, 413, 414,
	415, 416, 417, 0, 418, 420, 419, 0, 421, 670,
	0, 422, 423, 0, 0, 424, 425, 426, 427, 428,
	429, 432, 0, 0, 430, 431, 433, 434, 0, 435,
	436, 438, 441, 437, 439, 440, 442, 455, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	457, 0, 456, 0, 458, 459, 460, 467, 469, 470,
	465, 466, 468, 471, 472, 462, 463, 474, 464, 0,
	473, 461, 0, 0, 0, 475, 476, 477, 0, 671,
	478, 672, 480, 481, 0, 0, 482, 0, 0, 0,
	484, 485, 486, 0, 0, 487, 488, 673, 0, 489,
	0, 674, 490, 491, 483, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 0, 501, 502, 675, 503, 504,
	505, 676, 506, 507, 508, 677, 509, 678, 510, 511,
	0, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	520, 679, 521, 522, 524, 523, 525, 0, 526, 0,
	527, 528, 529, 0, 0, 0, 0, 0, 530, 0,
	532, 533, 534, 535, 531, 536, 537, 538, 539, 540,
	0, 541, 542, 543, 0, 544, 545, 546, 547, 548,
	680, 549, 0, 550, 551, 557, 558, 559, 552, 553,
	560, 561, 562, 563, 564, 0, 566, 567, 565, 568,
	569, 570, 0, 571, 572, 554, 555, 573, 574, 0,
	575, 576, 577, 578, 579, 580, 581, 681, 0, 582,
	0, 583, 584, 585, 586, 588, 556, 589, 594, 595,
	682, 590, 591, 592, 593, 683, 597, 598, 0, 599,
	600, 0, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 362, 608, 0, 609, 684, 685, 686, 687,
	0, 618, 0, 610, 611, 612, 688, 613, 689, 0,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 0, 628, 0, 0,
	629, 630, 631, 690, 691, 692, 0, 633, 632, 634,
	635, 693, 636, 637, 271, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 286, 287, 3088, 288, 289, 290, 291, 292, 293,
	644, 645, 0, 294, 646, 295, 647, 0, 648, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 649,
	650, 651, 0, 303, 304, 652, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 337, 653, 654, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 355, 356, 655, 357, 358, 359, 361,
	363, 360, 364, 365, 366, 367, 656, 657, 368, 0,
	0, 0, 0, 0, 0, 0, 369, 370, 371, 658,
	0, 0, 0, 372, 0, 373, 374, 0, 0, 0,
	375, 376, 377, 659, 660, 378, 379, 380, 381, 382,
	383, 384, 385, 386, 0, 387, 661, 0, 662, 388,
	0, 389, 390, 391, 392, 393, 663, 664, 665, 479,
	0, 394, 395, 0, 396, 397, 398, 399, 400, 0,
	0, 0, 0, 401, 402, 403, 405, 0, 0, 404,
	666, 667, 0, 668, 0, 406, 407, 0, 669, 0,
	408, 409, 410, 0, 411, 0, 0, 0, 412, 413,
	414, 415, 416, 417, 0, 418, 420, 419, 0, 421,
	670, 0, 422, 423, 0, 0, 424, 425, 426, 427,
	428, 429, 432, 0, 0, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 440, 442, 455, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 456, 0, 458, 459, 460, 467, 469,
	470, 465, 466, 468, 471, 472, 462, 463, 474, 464,
	0, 473, 461, 0, 0, 0, 475, 476, 477, 0,
	671, 478, 672, 480, 481, 0, 0, 482, 0, 0,
	0, 484, 485, 486, 0, 0, 487, 488, 673, 0,
	489, 0, 674, 490, 491, 483, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 0, 501, 502, 675, 503,
	504, 505, 676, 506, 507, 508, 677, 509, 678, 510,
	511, 0, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 520, 679, 521, 522, 524, 523, 525, 0, 526,
	0, 527, 528, 529, 0, 0, 0, 0, 0, 530,
	0, 532, 533, 534, 535, 531, 536, 537, 538, 539,
	540, 0, 541, 542, 543, 0, 544, 545, 546, 547,
	548, 680, 549, 0, 550, 551, 557, 558, 559, 552,
	553, 560, 561, 562, 563, 564, 0, 566, 567, 565,
	568, 569, 570, 0, 571, 572, 554, 555, 573, 574,
	0, 575, 576, 577, 578, 579, 580, 581, 681, 0,
	582, 0, 583, 584, 585, 586, 588, 556, 589, 594,
	595, 682, 590, 591, 592, 593, 683, 597, 598, 0,
	599, 600, 0, 596, 587, 0, 601, 602, 603, 604,
	605, 606, 607, 362, 608, 0, 609, 684, 685, 686,
	687, 0, 618, 0, 610, 611, 612, 688, 613, 689,
	0, 614, 615, 616, 617, 0, 619, 620, 0, 0,
	621, 622, 623, 625, 626, 624, 627, 0, 628, 0,
	0, 629, 630, 631, 690, 691, 692, 0, 633, 632,
	634, 635, 693, 636, 637, 271, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 286, 287, 3770, 288, 289, 290, 291, 292,
	293, 644, 645, 0, 294, 646, 295, 647, 0, 648,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	649, 650, 651, 0, 303, 304, 652, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 337, 653, 654, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 655, 357, 358, 359,
	361, 363, 360, 364, 365, 366, 367, 656, 657, 368,
	0, 0, 0, 0, 0, 0, 0, 369, 370, 371,
	658, 0, 0, 0, 372, 0, 373, 374, 0, 0,
	0, 375, 376, 377, 659, 660, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 0, 387, 661, 0, 662,
	388, 0, 389, 390, 391, 392, 393, 663, 664, 665,
	479, 0, 394, 395, 0, 396, 397, 398, 399, 400,
	0, 0, 0, 0, 401, 402, 403, 405, 0, 0,
	404, 666, 667, 0, 668, 0, 406, 407, 0, 669,
	0, 408, 409, 410, 0, 411, 0, 0, 0, 412,
	413, 414, 415, 416, 417, 0, 418, 420, 419, 0,
	421, 670, 0, 422, 423, 0, 0, 424, 425, 426,
	427, 428, 429, 432, 0, 0, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 0, 458, 459, 460, 467,
	469, 470, 465, 466, 468, 471, 472, 462, 463, 474,
	464, 0, 473, 461, 0, 0, 0, 475, 476, 477,
	0, 671, 478, 672, 480, 481, 0, 0, 482, 0,
	0, 0, 484, 485, 486, 0, 0, 487, 488, 673,
	0, 489, 0, 674, 490, 491, 483, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 0, 501, 502, 675,
	503, 504, 505, 676, 506, 507, 508, 677, 509, 678,
	510, 511, 0, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 520, 679, 521, 522, 524, 523, 525, 0,
	526, 0, 527, 528, 529, 0, 0, 0, 0, 0,
	530, 0, 532, 533, 534, 535, 531, 536, 537, 538,
	539, 540, 0, 541, 542, 543, 0, 544, 545, 546,
	547, 548, 680, 549, 0, 550, 551, 557, 558, 559,
	552, 553, 560, 561, 562, 563, 564, 0, 566, 567,
	565, 568, 569, 570, 0, 571, 572, 554, 555, 573,
	574, 0, 575, 576, 577, 578, 579, 580, 581, 681,
	0, 582, 0, 583, 584, 585, 586, 588, 556, 589,
	594, 595, 682, 590, 591, 592, 593, 683, 597, 598,
	0, 599, 600, 0, 596, 587, 0, 601, 602, 603,
	604, 605, 606, 607, 362, 608, 0, 609, 684, 685,
	686, 687, 0, 618, 0, 610, 611, 612, 688, 613,
	689, 0, 614, 615, 616, 617, 0, 619, 620, 0,
	0, 621, 622, 623, 625, 626, 624, 627, 0, 628,
	0, 0, 629, 630, 631, 690, 691, 692, 0, 633,
	632, 634, 635, 693, 636, 637, 0, 916, 0, 821,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 2318, 286, 287, 0, 288,
	289, 290, 291, 292, 293, 644, 645, 0, 294, 646,
	295, 647, 0, 648, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 649, 650, 651, 0, 303, 304,
	652, 0, 0, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 828, 334, 0, 335, 337,
	653, 654, 0, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 347, 348, 0,
	349, 350, 351, 0, 352, 353, 354, 0, 355, 356,
	655, 357, 358, 359, 361, 363, 360, 364, 365, 366,
	367, 656, 657, 368, 0, 274, 0, 0, 0, 0,
	0, 369, 370, 371, 658, 0, 0, 0, 372, 0,
	373, 374, 0, 914, 0, 375, 376, 377, 659, 660,
	378, 379, 380, 381, 382, 383, 384, 385, 386, 0,
	387, 661, 0, 662, 388, 0, 389, 390, 391, 392,
	393, 663, 664, 665, 479, 0, 394, 395, 0, 396,
	397, 398, 399, 400, 0, 0, 0, 275, 401, 402,
	403, 405, 0, 0, 404, 666, 667, 0, 668, 0,
	406, 407, 0, 669, 0, 408, 409, 410, 0, 411,
	0, 0, 0, 412, 413, 414, 415, 416, 417, 0,
	418, 420, 419, 0, 421, 670, 0, 422, 423, 0,
	0, 424, 425, 426, 427, 428, 429, 432, 0, 0,
	430, 431, 433, 434, 0, 435, 436, 438, 441, 437,
	439, 440, 442, 455, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 457, 0, 456, 0,
	458, 459, 460, 467, 469, 470, 465, 466, 468, 471,
	472, 462, 463, 474, 464, 0, 473, 461, 0, 276,
	0, 475, 476, 477, 0, 671, 478, 672, 480, 481,
	0, 0, 482, 0, 0, 0, 484, 485, 486, 0,
	0, 487, 488, 673, 0, 489, 0, 674, 490, 491,
	483, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	0, 501, 502, 675, 503, 504, 505, 676, 506, 507,
	508, 677, 509, 678, 510, 511, 0, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 520, 679, 521, 522,
	524, 523, 525, 0, 526, 0, 527, 528, 529, 0,
	0, 0, 0, 0, 530, 0, 532, 533, 534, 535,
	531, 536, 537, 538, 539, 540, 0, 541, 542, 543,
	0, 544, 545, 546, 547, 548, 680, 549, 0, 550,
	551, 557, 558, 559, 552, 553, 560, 561, 562, 563,
	564, 0, 566, 567, 565, 568, 569, 570, 0, 571,
	572, 554, 555, 573, 574, 0, 575, 576, 577, 578,
	579, 580, 581, 681, 0, 582, 0, 583, 584, 585,
	586, 588, 556, 589, 594, 595, 682, 590, 591, 592,
	593, 683, 597, 598, 0, 599, 600, 0, 596, 587,
	826, 601, 602, 603, 604, 605, 827, 607, 362, 608,
	0, 609, 684, 685, 686, 687, 0, 618, 0, 610,
	611, 612, 688, 613, 689, 0, 614, 615, 616, 617,
	0, 619, 620, 0, 0, 621, 622, 623, 625, 626,
	624, 627, 0, 628, 0, 0, 629, 630, 631, 690,
	691, 692, 0, 633, 632, 634, 635, 693, 636, 637,
	0, 821, 0, 0, 638, 639, 694, 640, 641, 642,
	0, 0, 0, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 2057, 284, 285, 0, 0,
	0, 0, 831, 643, 0, 0, 0, 0, 286, 287,
	0, 288, 289, 290, 291, 292, 293, 644, 645, 0,
	294, 646, 295, 647, 0, 648, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 649, 650, 651, 0,
	303, 304, 652, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 828, 334, 0,
	335, 337, 653, 654, 0, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 347,
	348, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 655, 357, 358, 359, 361, 363, 360, 364,
	365, 366, 367, 656, 657, 368, 0, 274, 0, 0,
	0, 0, 0, 369, 370, 371, 658, 0, 0, 0,
	372, 0, 373, 374, 0, 0, 0, 375, 376, 377,
	659, 660, 378, 379, 380, 381, 382, 383, 384, 385,
	386, 0, 387, 661, 0, 662, 388, 0, 389, 390,
	391, 392, 393, 663, 664, 665, 479, 0, 394, 395,
	0, 396, 397, 398, 399, 400, 0, 0, 0, 275,
	401, 402, 403, 405, 0, 0, 404, 666, 667, 0,
	668, 0, 406, 407, 0, 669, 0, 408, 409, 410,
	0, 411, 0, 0, 0, 412, 413, 414, 415, 416,
	417, 0, 418, 420, 419, 0, 421, 670, 0, 422,
	423, 0, 0, 424, 425, 426, 427, 428, 429, 432,
	0, 0, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 0, 458, 459, 460, 467, 469, 470, 465, 466,
	468, 471, 472, 462, 463, 474, 464, 0, 473, 461,
	0, 276, 0, 475, 476, 477, 0, 671, 478, 672,
	480, 481, 0, 0, 482, 0, 0, 0, 484, 485,
	486, 0, 0, 487, 488, 673, 0, 489, 0, 674,
	490, 491, 483, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 0, 501, 502, 675, 503, 504, 505, 676,
	506, 507, 508, 677, 509, 678, 510, 511, 0, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 520, 679,
	521, 522, 524, 523, 525, 0, 526, 0, 527, 528,
	529, 0, 0, 0, 0, 0, 530, 0, 532, 533,
	534, 535, 531, 536, 537, 538, 539, 540, 0, 541,
	542, 543, 0, 544, 545, 546, 547, 548, 680, 549,
	0, 550, 551, 557, 558, 559, 552, 553, 2056, 561,
	562, 563, 564, 0, 2058, 567, 565, 568, 569, 570,
	0, 571, 572, 554, 555, 573, 574, 0, 575, 576,
	577, 578, 579, 580, 581, 681, 0, 582, 0, 583,
	584, 585, 586, 588, 556, 589, 594, 595, 682, 590,
	591, 592, 593, 683, 597, 598, 0, 599, 600, 0,
	596, 587, 826, 601, 602, 603, 604, 605, 827, 607,
	362, 608, 0, 609, 684, 685, 686, 687, 0, 618,
	0, 610, 611, 612, 688, 613, 689, 0, 614, 615,
	2055, 617, 0, 619, 620, 0, 0, 621, 622, 623,
	625, 626, 624, 627, 0, 628, 0, 0, 629, 630,
	631, 690, 691, 692, 0, 633, 632, 634, 635, 693,
	636, 637, 0, 821, 0, 0, 638, 639, 694, 640,
	641, 642, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 2008, 284, 285,
	0, 0, 0, 0, 831, 643, 0, 0, 0, 0,
	286, 287, 0, 288, 289, 290, 291, 292, 293, 644,
	645, 0, 294, 646, 295, 647, 0, 648, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 649, 650,
	651, 0, 303, 304, 652, 0, 0, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 828,
	334, 0, 335, 337, 653, 654, 0, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 347, 348, 0, 349, 350, 351, 0, 352, 353,
	354, 0, 355, 356, 655, 357, 358, 359, 361, 363,
	360, 364, 365, 366, 367, 656, 657, 368, 0, 274,
	0, 0, 0, 0, 0, 369, 370, 371, 658, 0,
	0, 0, 372, 0, 373, 374, 0, 0, 0, 375,
	376, 377, 659, 660, 378, 379, 380, 381, 382, 383,
	384, 385, 386, 0, 387, 661, 0, 662, 388, 0,
	389, 390, 391, 392, 393, 663, 664, 665, 479, 0,
	394, 395, 0, 396, 397, 398, 399, 400, 0, 0,
	0, 275, 401, 402, 403, 405, 0, 0, 404, 666,
	667, 0, 668, 0, 406, 407, 0, 669, 0, 408,
	409, 410, 0, 411, 0, 0, 0, 412, 413, 414,
	415, 416, 417, 0, 418, 420, 419, 0, 421, 670,
	0, 422, 423, 0, 0, 424, 425, 426, 427, 428,
	429, 432, 0, 0, 430, 431, 433, 434, 0, 435,
	436, 438, 441, 437, 439, 440, 442, 455, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	457, 0, 456, 0, 458, 459, 460, 467, 469, 470,
	465, 466, 468, 471, 472, 462, 463, 474, 464, 0,
	473, 461, 0, 276, 0, 475, 476, 477, 0, 671,
	478, 672, 480, 481, 0, 0, 482, 0, 0, 0,
	484, 485, 486, 0, 0, 487, 488, 673, 0, 489,
	0, 674, 490, 491, 483, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 0, 501, 502, 675, 503, 504,
	505, 676, 506, 507, 508, 677, 509, 678, 510, 511,
	0, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	520, 679, 521, 522, 524, 523, 525, 0, 526, 0,
	527, 528, 529, 0, 0, 0, 0, 0, 530, 0,
	532, 533, 534, 535, 531, 536, 537, 538, 539, 540,
	0, 541, 542, 543, 0, 544, 545, 546, 547, 548,
	680, 549, 0, 550, 551, 557, 558, 559, 552, 553,
	2007, 561, 562, 563, 564, 0, 2009, 567, 565, 568,
	569, 570, 0, 571, 572, 554, 555, 573, 574, 0,
	575, 576, 577, 578, 579, 580, 581, 681, 0, 582,
	0, 583, 584, 585, 586, 588, 556, 589, 594, 595,
	682, 590, 591, 592, 593, 683, 597, 598, 0, 599,
	600, 0, 596, 587, 826, 601, 602, 603, 604, 605,
	827, 607, 362, 608, 0, 609, 684, 685, 686, 687,
	0, 618, 0, 610, 611, 612, 688, 613, 689, 0,
	614, 615, 2006, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 0, 628, 0, 0,
	629, 630, 631, 690, 691, 692, 0, 633, 632, 634,
	635, 693, 636, 637, 819, 0, 821, 0, 638, 639,
	694, 640, 641, 642, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 831, 0, 643, 0,
	0, 0, 0, 286, 287, 0, 288, 289, 290, 291,
	292, 293, 644, 645, 0, 294, 646, 295, 647, 0,
	648, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 649, 650, 651, 0, 303, 304, 652, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 828, 334, 0, 335, 337, 653, 654, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 355, 356, 655, 357, 358,
	359, 361, 363, 360, 364, 365, 366, 367, 656, 657,
	368, 0, 274, 0, 0, 0, 0, 0, 369, 370,
	371, 658, 0, 0, 0, 372, 0, 373, 374, 0,
	0, 0, 375, 376, 377, 659, 660, 378, 379, 380,
	381, 382, 383, 384, 385, 386, 0, 387, 661, 0,
	662, 388, 0, 389, 390, 391, 392, 393, 663, 664,
	665, 479, 0, 394, 395, 0, 396, 397, 398, 399,
	400, 0, 0, 0, 275, 401, 402, 403, 405, 0,
	0, 404, 666, 667, 0, 668, 0, 406, 407, 0,
	669, 0, 408, 409, 410, 0, 411, 0, 0, 0,
	412, 413, 414, 415, 416, 417, 0, 418, 420, 419,
	0, 421, 670, 0, 422, 423, 0, 0, 424, 425,
	426, 427, 428, 429, 432, 0, 0, 430, 431, 433,
	434, 0, 435, 436, 438, 441, 437, 439, 440, 442,
	455, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 457, 0, 456, 0, 458, 459, 460,
	467, 469, 470, 465, 466, 468, 471, 472, 462, 463,
	474, 464, 0, 473, 461, 0, 276, 0, 475, 476,
	477, 0, 671, 478, 672, 480, 481, 0, 0, 482,
	0, 0, 0, 484, 485, 486, 0, 0, 487, 488,
	673, 0, 489, 0, 674, 490, 491, 483, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 0, 501, 502,
	675, 503, 504, 505, 676, 506, 507, 508, 677, 509,
	678, 510, 511, 0, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 520, 679, 521, 522, 524, 523, 525,
	0, 526, 0, 527, 528, 529, 0, 0, 0, 0,
	0, 530, 0, 532, 533, 534, 535, 531, 536, 537,
	538, 539, 540, 0, 541, 542, 543, 0, 544, 545,
	546, 547, 548, 680, 549, 0, 550, 551, 557, 558,
	559, 552, 553, 560, 561, 562, 563, 564, 0, 566,
	567, 565, 568, 569, 570, 0, 571, 572, 554, 555,
	573, 574, 0, 575, 576, 577, 578, 579, 580, 581,
	681, 0, 582, 0, 583, 584, 585, 586, 588, 556,
	589, 594, 595, 682, 590, 591, 592, 593, 683, 597,
	598, 0, 599, 600, 0, 596, 587, 826, 601, 602,
	603, 604, 605, 827, 607, 362, 608, 0, 609, 684,
	685, 686, 687, 0, 618, 0, 610, 611, 612, 688,
	613, 689, 0, 614, 615, 616, 617, 0, 619, 620,
	0, 0, 621, 622, 623, 625, 626, 624, 627, 0,
	628, 0, 0, 629, 630, 631, 690, 691, 692, 0,
	633, 632, 634, 635, 693, 636, 637, 2030, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 0, 0, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 831,
	0, 0, 0, 0, 286, 287, 1204, 288, 289, 290,
	291, 292, 293, 0, 2036, 0, 294, 2026, 295, 2042,
	0, 2049, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 2052, 2053, 0, 0, 303, 304, 0, 0,
	1349, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1205,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 1187, 335, 337, 2040, 2039,
	0, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 1172, 348, 0, 349, 350,
	351, 0, 352, 353, 354, 0, 355, 356, 0, 357,
	358, 359, 361, 363, 360, 364, 365, 366, 367, 0,
	0, 368, 0, 0, 0, 0, 0, 0, 0, 369,
	370, 371, 2038, 0, 0, 0, 372, 0, 373, 374,
	0, 0, 1206, 375, 376, 377, 2047, 2048, 378, 379,
	380, 381, 382, 383, 384, 385, 386, 0, 387, 0,
	0, 0, 388, 0, 389, 390, 391, 392, 393, 0,
	0, 0, 479, 1208, 394, 395, 0, 396, 397, 398,
	399, 400, 0, 0, 0, 0, 401, 402, 403, 405,
	0, 1207, 404, 2033, 2034, 0, 2029, 0, 406, 407,
	1209, 0, 1210, 408, 409, 410, 1211, 411, 0, 0,
	0, 412, 413, 414, 415, 416, 417, 0, 418, 420,
	419, 0, 421, 0, 1212, 422, 423, 1213, 0, 424,
	425, 426, 427, 428, 429, 432, 0, 0, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 1214, 458, 459,
	460, 467, 469, 470, 465, 466, 468, 471, 472, 462,
	463, 474, 464, 1215, 473, 461, 0, 0, 1216, 475,
	476, 477, 0, 0, 478, 2041, 480, 481, 0, 0,
	482, 0, 0, 0, 484, 485, 486, 0, 0, 487,
	488, 0, 1217, 489, 1218, 0, 490, 491, 483, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 0, 501,
	502, 2023, 503, 504, 505, 2024, 506, 507, 508, 0,
	509, 0, 510, 511, 0, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 520, 2037, 521, 522, 524, 523,
	525, 0, 526, 0, 527, 528, 529, 0, 0, 0,
	0, 0, 530, 0, 532, 533, 534, 535, 531, 536,
	537, 538, 539, 540, 0, 541, 542, 543, 1219, 544,
	545, 546, 547, 548, 0, 549, 0, 550, 551, 557,
	558, 559, 552, 553, 560, 561, 562, 563, 564, 0,
	566, 567, 565, 568, 569, 570, 0, 571, 572, 554,
	555, 573, 574, 1220, 575, 576, 577, 578, 579, 580,
	581, 2035, 0, 582, 0, 583, 584, 585, 586, 588,
	556, 589, 594, 595, 2051, 590, 591, 592, 593, 0,
	597, 598, 0, 599, 600, 0, 596, 587, 0, 601,
	602, 603, 604, 605, 606, 607, 362, 608, 0, 609,
	2043, 2044, 2045, 2046, 0, 618, 0, 610, 611, 612,
	0, 613, 0, 0, 614, 615, 616, 617, 0, 619,
	620, 0, 0, 621, 622, 623, 625, 626, 624, 627,
	0, 628, 0, 0, 629, 630, 631, 0, 2027, 2050,
	0, 633, 632, 634, 635, 0, 636, 637, 0, 0,
	0, 0, 638, 639, 0, 640, 641, 642, 821, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	643, 2017, 0, 0, 0, 286, 287, 0, 288, 289,
	290, 291, 292, 293, 644, 645, 0, 294, 646, 295,
	647, 0, 648, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 649, 650, 651, 0, 303, 304, 652,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 828, 334, 0, 335, 337, 653,
	654, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 354, 0, 355, 356, 655,
	357, 358, 359, 361, 363, 360, 364, 365, 366, 367,
	656, 657, 368, 0, 274, 0, 0, 0, 0, 0,
	369, 370, 371, 658, 0, 0, 0, 372, 0, 373,
	374, 0, 0, 0, 375, 376, 377, 659, 660, 378,
	379, 380, 381, 382, 383, 384, 385, 386, 0, 387,
	661, 0, 662, 388, 0, 389, 390, 391, 392, 393,
	663, 664, 665, 479, 0, 394, 395, 0, 396, 397,
	398, 399, 400, 0, 0, 0, 275, 401, 402, 403,
	405, 0, 0, 404, 666, 667, 0, 668, 0, 406,
	407, 0, 669, 0, 408, 409, 410, 0, 411, 0,
	0, 0, 412, 413, 414, 415, 416, 417, 0, 418,
	420, 419, 0, 421, 670, 0, 422, 423, 0, 0,
	424, 425, 426, 427, 428, 429, 432, 0, 0, 430,
	431, 433, 434, 0, 435, 436, 438, 441, 437, 439,
	440, 442, 455, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 457, 0, 456, 0, 458,
	459, 460, 467, 469, 470, 465, 466, 468, 471, 472,
	462, 463, 474, 464, 0, 473, 461, 0, 276, 0,
	475, 476, 477, 0, 671, 478, 672, 480, 481, 0,
	0, 482, 0, 0, 0, 484, 485, 486, 0, 0,
	487, 488, 673, 0, 489, 0, 674, 490, 491, 483,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 0,
	501, 502, 675, 503, 504, 505, 676, 506, 507, 508,
	677, 509, 678, 510, 511, 0, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 520, 679, 521, 522, 524,
	523, 525, 0, 526, 0, 527, 528, 529, 0, 0,
	0, 0, 0, 530, 0, 532, 533, 534, 535, 531,
	536, 537, 538, 539, 540, 0, 541, 542, 543, 0,
	544, 545, 546, 547, 548, 680, 549, 0, 550, 551,
	557, 558, 559, 552, 553, 560, 561, 562, 563, 564,
	0, 566, 567, 565, 568, 569, 570, 0, 571, 572,
	554, 555, 573, 574, 0, 575, 576, 577, 578, 579,
	580, 581, 681, 0, 582, 0, 583, 584, 585, 586,
	588, 556, 589, 594, 595, 682, 590, 591, 592, 593,
	683, 597, 598, 0, 599, 600, 0, 596, 587, 826,
	601, 602, 603, 604, 605, 827, 607, 362, 608, 0,
	609, 684, 685, 686, 687, 0, 618, 0, 610, 611,
	612, 688, 613, 689, 0, 614, 615, 616, 617, 0,
	619, 620, 0, 0, 621, 622, 623, 625, 626, 624,
	627, 0, 628, 0, 0, 629, 630, 631, 690, 691,
	692, 0, 633, 632, 634, 635, 693, 636, 637, 0,
	821, 0, 0, 638, 639, 694, 640, 641, 642, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 831, 643, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 644, 645, 0, 294,
	646, 295, 647, 0, 648, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 649, 650, 651, 0, 303,
	304, 652, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 828, 334, 0, 335,
	337, 653, 654, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 355,
	356, 655, 357, 358, 359, 361, 363, 360, 364, 365,
	366, 367, 656, 657, 368, 0, 274, 0, 0, 0,
	0, 0, 369, 370, 371, 658, 0, 0, 0, 372,
	0, 373, 374, 0, 0, 0, 375, 376, 377, 659,
	660, 378, 379, 380, 381, 382, 383, 384, 385, 386,
	0, 387, 661, 0, 662, 388, 0, 389, 390, 391,
	392, 393, 663, 664, 665, 479, 0, 394, 395, 0,
	396, 397, 398, 399, 400, 0, 0, 0, 275, 401,
	402, 403, 405, 0, 0, 404, 666, 667, 0, 668,
	0, 406, 407, 0, 669, 0, 408, 409, 410, 0,
	411, 0, 0, 0, 412, 413, 414, 415, 416, 417,
	0, 418, 420, 419, 0, 421, 670, 0, 422, 423,
	0, 0, 424, 425, 426, 427, 428, 429, 432, 0,
	0, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	0, 458, 459, 460, 467, 469, 470, 465, 466, 468,
	471, 472, 462, 463, 474, 464, 0, 473, 461, 0,
	276, 0, 475, 476, 477, 0, 671, 478, 672, 480,
	481, 0, 0, 482, 0, 0, 0, 484, 485, 486,
	0, 0, 487, 488, 673, 0, 489, 0, 674, 490,
	491, 483, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 0, 501, 502, 675, 503, 504, 505, 676, 506,
	507, 508, 677, 509, 678, 510, 511, 0, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 520, 679, 521,
	522, 524, 523, 525, 0, 526, 0, 527, 528, 529,
	0, 0, 0, 0, 0, 530, 0, 532, 533, 534,
	535, 531, 536, 537, 538, 539, 540, 0, 541, 542,
	543, 0, 2366, 545, 546, 547, 548, 680, 549, 0,
	550, 551, 557, 558, 559, 552, 553, 2367, 561, 562,
	563, 564, 0, 566, 567, 565, 568, 569, 570, 0,
	571, 572, 554, 555, 573, 574, 0, 575, 576, 577,
	578, 579, 580, 581, 681, 0, 582, 0, 583, 584,
	585, 586, 588, 556, 589, 594, 595, 682, 590, 591,
	592, 593, 683, 597, 598, 0, 599, 600, 0, 596,
	587, 826, 601, 602, 603, 604, 605, 827, 607, 362,
	608, 0, 609, 684, 685, 686, 687, 0, 618, 0,
	610, 611, 612, 688, 613, 689, 0, 614, 615, 2368,
	617, 0, 619, 620, 0, 0, 621, 622, 623, 625,
	626, 624, 627, 0, 628, 0, 0, 629, 630, 631,
	690, 691, 692, 0, 633, 632, 634, 635, 693, 636,
	637, 0, 271, 0, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 831, 643, 0, 0, 0, 0, 286,
	287, 0, 288, 289, 290, 291, 292, 293, 644, 645,
	0, 294, 646, 295, 647, 0, 648, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 649, 650, 651,
	0, 303, 304, 652, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 337, 653, 654, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 355, 356, 655, 357, 358, 359, 361, 363, 360,
	364, 365, 366, 367, 656, 657, 368, 0, 274, 0,
	0, 0, 0, 0, 369, 370, 371, 658, 0, 0,
	0, 372, 0, 373, 374, 0, 0, 0, 375, 376,
	377, 659, 660, 378, 379, 380, 381, 382, 383, 384,
	385, 386, 0, 387, 661, 0, 662, 388, 0, 389,
	390, 391, 392, 393, 663, 664, 665, 479, 0, 394,
	395, 0, 396, 397, 398, 399, 400, 0, 0, 0,
	275, 401, 402, 403, 405, 0, 0, 404, 666, 667,
	0, 668, 0, 406, 407, 0, 669, 0, 408, 409,
	410, 0, 411, 0, 0, 0, 412, 413, 414, 415,
	416, 417, 0, 418, 420, 419, 0, 421, 670, 0,
	422, 423, 0, 0, 424, 425, 426, 427, 428, 429,
	432, 0, 0, 430, 431, 433, 434, 0, 435, 436,
	438, 441, 437, 439, 440, 442, 455, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 457,
	0, 456, 0, 458, 459, 460, 467, 469, 470, 465,
	466, 468, 471, 472, 462, 463, 474, 464, 0, 473,
	461, 0, 276, 0, 475, 476, 477, 0, 671, 478,
	672, 480, 481, 0, 0, 482, 0, 0, 0, 484,
	485, 486, 0, 0, 487, 488, 673, 0, 489, 0,
	674, 490, 491, 483, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 0, 501, 502, 675, 503, 504, 505,
	676, 506, 507, 508, 677, 509, 678, 510, 511, 0,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 520,
	679, 521, 522, 524, 523, 525, 0, 526, 0, 527,
	528, 529, 0, 0, 0, 0, 0, 530, 0, 532,
	533, 534, 535, 531, 536, 537, 538, 539, 540, 0,
	541, 542, 543, 0, 544, 545, 546, 547, 548, 680,
	549, 0, 550, 551, 557, 558, 559, 552, 553, 560,
	561, 562, 563, 564, 0, 566, 567, 565, 568, 569,
	570, 0, 571, 572, 554, 555, 573, 574, 0, 575,
	576, 577, 578, 579, 580, 581, 681, 0, 582, 0,
	583, 584, 585, 586, 588, 556, 589, 594, 595, 682,
	590, 591, 592, 593, 683, 597, 598, 0, 599, 600,
	0, 596, 587, 0, 601, 602, 603, 604, 605, 606,
	607, 362, 608, 0, 609, 684, 685, 686, 687, 0,
	618, 0, 610, 611, 612, 688, 613, 689, 0, 614,
	615, 616, 617, 0, 619, 620, 0, 0, 621, 622,
	623, 625, 626, 624, 627, 0, 628, 0, 0, 629,
	630, 631, 690, 691, 692, 0, 633, 632, 634, 635,
	693, 636, 637, 0, 1344, 2105, 0, 638, 639, 694,
	640, 641, 642, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 831, 643, 0, 0, 0,
	0, 286, 287, 1204, 288, 289, 290, 291, 292, 293,
	644, 645, 0, 294, 646, 295, 647, 0, 648, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 649,
	650, 651, 0, 303, 304, 652, 0, 1349, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 1205, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 3051, 330, 331, 332,
	333, 334, 0, 335, 337, 653, 654, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 355, 356, 655, 357, 358, 359, 361,
	363, 360, 364, 365, 366, 367, 656, 657, 368, 0,
	274, 0, 0, 0, 0, 0, 369, 370, 371, 658,
	0, 0, 0, 372, 0, 373, 374, 0, 0, 1206,
	375, 376, 377, 659, 660, 378, 379, 380, 381, 382,
	383, 384, 385, 386, 0, 387, 661, 0, 662, 388,
	0, 389, 390, 391, 392, 393, 663, 664, 665, 479,
	1208, 394, 395, 0, 396, 397, 398, 399, 400, 0,
	0, 0, 0, 401, 402, 403, 405, 0, 1207, 404,
	666, 667, 0, 668, 0, 406, 407, 1209, 669, 1210,
	408, 409, 410, 1211, 411, 0, 0, 0, 412, 413,
	414, 415, 416, 417, 0, 418, 420, 419, 0, 421,
	670, 1212, 422, 423, 1213, 0, 424, 425, 426, 427,
	428, 429, 432, 0, 0, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 440, 442, 455, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 456, 1214, 458, 459, 460, 467, 469,
	470, 465, 466, 468, 471, 472, 462, 463, 474, 464,
	1215, 473, 461, 0, 0, 1216, 475, 476, 477, 0,
	671, 478, 672, 480, 481, 0, 0, 482, 0, 0,
	0, 484, 485, 486, 0, 0, 487, 488, 673, 1217,
	489, 1218, 674, 490, 491, 483, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 0, 501, 502, 675, 503,
	504, 505, 676, 506, 507, 508, 677, 509, 678, 510,
	511, 0, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 520, 679, 521, 522, 524, 523, 525, 0, 526,
	0, 527, 528, 529, 0, 0, 0, 0, 0, 530,
	0, 532, 533, 534, 535, 531, 536, 537, 538, 539,
	540, 0, 541, 542, 543, 1219, 544, 545, 546, 547,
	548, 680, 549, 0, 550, 551, 557, 558, 559, 552,
	553, 560, 561, 562, 563, 564, 0, 566, 567, 565,
	568, 569, 570, 3052, 571, 572, 554, 555, 573, 574,
	1220, 575, 576, 577, 578, 579, 580, 581, 681, 0,
	582, 0, 583, 584, 585, 586, 588, 556, 589, 594,
	595, 682, 590, 591, 592, 593, 683, 597, 598, 0,
	599, 600, 0, 596, 587, 0, 601, 602, 603, 604,
	605, 606, 607, 362, 608, 0, 609, 684, 685, 686,
	687, 0, 618, 0, 610, 611, 612, 688, 613, 689,
	0, 614, 615, 616, 617, 0, 619, 620, 0, 0,
	621, 622, 623, 625, 626, 624, 627, 0, 628, 0,
	0, 629, 630, 631, 690, 691, 692, 0, 633, 632,
	634, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 1344, 1343, 0, 0, 0,
	0, 1341, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 286, 287, 1204, 288, 289, 290, 291, 292,
	293, 644, 645, 0, 294, 646, 295, 647, 0, 648,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	649, 650, 651, 0, 303, 304, 652, 0, 1349, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 1205, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 337, 653, 654, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 655, 357, 358, 359,
	361, 363, 360, 364, 365, 366, 367, 656, 657, 368,
	0, 274, 0, 0, 0, 0, 0, 369, 370, 371,
	658, 0, 0, 0, 372, 0, 373, 374, 0, 0,
	1206, 375, 376, 377, 659, 660, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 0, 387, 661, 0, 662,
	388, 0, 389, 390, 391, 392, 393, 663, 664, 665,
	479, 1208, 394, 395, 0, 396, 397, 398, 399, 400,
	0, 0, 0, 0, 401, 402, 403, 405, 0, 1207,
	404, 666, 667, 0, 668, 0, 406, 407, 1209, 669,
	1210, 408, 409, 410, 1211, 411, 0, 0, 0, 412,
	413, 414, 415, 416, 417, 0, 418, 420, 419, 0,
	421, 670, 1212, 422, 423, 1213, 0, 424, 425, 426,
	427, 428, 429, 432, 0, 0, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 1214, 458, 459, 460, 467,
	469, 470, 465, 466, 468, 471, 472, 462, 463, 474,
	464, 1215, 473, 461, 0, 0, 1216, 475, 476, 477,
	3965, 671, 478, 672, 480, 481, 0, 0, 482, 0,
	0, 0, 484, 485, 486, 0, 0, 487, 488, 673,
	1217, 489, 1218, 674, 490, 491, 483, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 0, 501, 502, 675,
	503, 504, 505, 676, 506, 507, 508, 677, 509, 678,
	510, 511, 0, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 520, 679, 521, 522, 524, 523, 525, 0,
	526, 0, 527, 528, 529, 0, 0, 0, 0, 0,
	530, 0, 532, 533, 534, 535, 531, 536, 537, 538,
	539, 540, 0, 541, 542, 543, 1219, 544, 545, 546,
	547, 548, 680, 549, 0, 550, 551, 557, 558, 559,
	552, 553, 560, 561, 562, 563, 564, 0, 566, 567,
	565, 568, 569, 570, 0, 571, 572, 554, 555, 573,
	574, 1220, 575, 576, 577, 578, 579, 580, 581, 681,
	0, 582, 0, 583, 584, 585, 586, 588, 556, 589,
	594, 595, 682, 590, 591, 592, 593, 683, 597, 598,
	0, 599, 600, 0, 596, 587, 0, 601, 602, 603,
	604, 605, 606, 607, 362, 608, 0, 609, 684, 685,
	686, 687, 0, 618, 0, 610, 611, 612, 688, 613,
	689, 0, 614, 615, 616, 617, 0, 619, 620, 0,
	0, 621, 622, 623, 625, 626, 624, 627, 0, 628,
	0, 0, 629, 630, 631, 690, 691, 692, 0, 633,
	632, 634, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 1344, 1343, 0, 0,
	0, 0, 1341, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 286, 287, 1204, 288, 289, 290, 291,
	292, 293, 644, 645, 0, 294, 646, 295, 647, 0,
	648, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 649, 650, 651, 0, 303, 304, 652, 0, 1349,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 1205, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 337, 653, 654, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 355, 356, 655, 357, 358,
	359, 361, 363, 360, 364, 365, 366, 367, 656, 657,
	368, 0, 274, 0, 0, 0, 0, 0, 369, 370,
	371, 658, 0, 0, 0, 372, 0, 373, 374, 0,
	0, 1206, 375, 376, 377, 659, 660, 378, 379, 380,
	381, 382, 383, 384, 385, 386, 0, 387, 661, 0,
	662, 388, 0, 389, 390, 391, 392, 393, 663, 664,
	665, 479, 1208, 394, 395, 0, 396, 397, 398, 399,
	400, 0, 0, 0, 0, 401, 402, 403, 405, 0,
	1207, 404, 666, 667, 0, 668, 0, 406, 407, 1209,
	669, 1210, 408, 409, 410, 1211, 411, 0, 0, 0,
	412, 413, 414, 415, 416, 417, 0, 418, 420, 419,
	0, 421, 670, 1212, 422, 423, 1213, 0, 424, 425,
	426, 427, 428, 429, 432, 0, 0, 430, 431, 433,
	434, 0, 435, 436, 438, 441, 437, 439, 440, 442,
	455, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 457, 0, 456, 1214, 458, 459, 460,
	467, 469, 470, 465, 466, 468, 471, 472, 462, 463,
	474, 464, 1215, 473, 461, 0, 0, 1216, 475, 476,
	477, 3568, 671, 478, 672, 480, 481, 0, 0, 482,
	0, 0, 0, 484, 485, 486, 0, 0, 487, 488,
	673, 1217, 489, 1218, 674, 490, 491, 483, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 0, 501, 502,
	675, 503, 504, 505, 676, 506, 507, 508, 677, 509,
	678, 510, 511, 0, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 520, 679, 521, 522, 524, 523, 525,
	0, 526, 0, 527, 528, 529, 0, 0, 0, 0,
	0, 530, 0, 532, 533, 534, 535, 531, 536, 537,
	538, 539, 540, 0, 541, 542, 543, 1219, 544, 545,
	546, 547, 548, 680, 549, 0, 550, 551, 557, 558,
	559, 552, 553, 560, 561, 562, 563, 564, 0, 566,
	567, 565, 568, 569, 570, 0, 571, 572, 554, 555,
	573, 574, 1220, 575, 576, 577, 578, 579, 580, 581,
	681, 0, 582, 0, 583, 584, 585, 586, 588, 556,
	589, 594, 595, 682, 590, 591, 592, 593, 683, 597,
	598, 0, 599, 600, 0, 596, 587, 0, 601, 602,
	603, 604, 605, 606, 607, 362, 608, 0, 609, 684,
	685, 686, 687, 0, 618, 0, 610, 611, 612, 688,
	613, 689, 0, 614, 615, 616, 617, 0, 619, 620,
	0, 0, 621, 622, 623, 625, 626, 624, 627, 0,
	628, 0, 0, 629, 630, 631, 690, 691, 692, 0,
	633, 632, 634, 635, 693, 636, 637, 0, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 1676, 0, 1344,
	1343, 0, 0, 0, 0, 1341, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 286, 287, 1204, 288,
	289, 290, 291, 292, 293, 644, 645, 0, 294, 646,
	295, 647, 0, 648, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 649, 650, 651, 0, 303, 304,
	652, 0, 1349, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 1205, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 335, 337,
	653, 654, 0, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 347, 348, 0,
	349, 350, 351, 0, 352, 353, 354, 0, 355, 356,
	655, 357, 358, 359, 361, 363, 360, 364, 365, 366,
	367, 656, 657, 368, 0, 274, 0, 0, 0, 0,
	0, 1675, 370, 371, 658, 0, 0, 0, 372, 0,
	373, 374, 0, 0, 1206, 375, 376, 377, 659, 660,
	378, 379, 380, 381, 382, 383, 384, 385, 386, 0,
	387, 661, 0, 662, 388, 0, 389, 390, 391, 392,
	393, 663, 664, 665, 479, 1208, 394, 395, 0, 396,
	397, 398, 399, 400, 0, 0, 0, 0, 401, 402,
	403, 405, 0, 1207, 404, 666, 667, 0, 668, 0,
	406, 407, 1209, 669, 1210, 408, 409, 410, 1211, 411,
	0, 0, 0, 412, 413, 414, 415, 416, 417, 0,
	418, 420, 419, 0, 421, 670, 1212, 422, 423, 1213,
	0, 424, 425, 426, 427, 428, 429, 432, 0, 0,
	430, 431, 433, 434, 0, 435, 436, 438, 441, 437,
	439, 440, 442, 455, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 457, 0, 456, 1214,
	458, 459, 460, 467, 469, 470, 465, 466, 468, 471,
	472, 462, 463, 474, 464, 1215, 473, 461, 0, 0,
	1216, 475, 476, 477, 0, 671, 478, 672, 480, 481,
	0, 0, 482, 0, 0, 0, 484, 485, 486, 0,
	0, 487, 488, 673, 1217, 489, 1218, 674, 490, 491,
	483, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	0, 501, 502, 675, 503, 504, 505, 676, 506, 507,
	508, 677, 509, 678, 510, 511, 0, 512, 513, 0,
	514, 515, 516, 517, 518, 1674, 520, 679, 521, 522,
	524, 523, 525, 0, 526, 0, 527, 528, 529, 0,
	0, 0, 0, 0, 530, 0, 532, 533, 534, 535,
	531, 536, 537, 538, 539, 540, 0, 541, 542, 543,
	1219, 544, 545, 546, 547, 548, 680, 549, 0, 550,
	551, 557, 558, 559, 552, 553, 560, 1673, 562, 563,
	564, 0, 566, 567, 565, 568, 569, 570, 0, 571,
	572, 554, 555, 573, 574, 1220, 575, 576, 577, 578,
	579, 580, 581, 681, 0, 582, 0, 583, 584, 585,
	586, 588, 556, 589, 594, 595, 682, 590, 591, 592,
	593, 683, 597, 598, 0, 599, 600, 0, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 362, 608,
	0, 609, 684, 685, 686, 687, 0, 618, 0, 610,
	611, 612, 688, 613, 689, 0, 614, 615, 616, 617,
	0, 619, 620, 0, 0, 621, 622, 623, 625, 626,
	624, 627, 0, 628, 0, 0, 629, 630, 631, 690,
	691, 692, 0, 633, 632, 634, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	1594, 0, 1344, 1343, 0, 0, 0, 0, 1341, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 0, 286,
	287, 1204, 288, 289, 290, 291, 292, 293, 644, 645,
	0, 294, 646, 295, 647, 0, 648, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 649, 650, 651,
	0, 303, 304, 652, 0, 1349, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 1205, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 337, 653, 654, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 355, 356, 655, 357, 358, 359, 361, 363, 360,
	364, 365, 366, 367, 656, 657, 368, 0, 274, 0,
	0, 0, 0, 0, 369, 370, 371, 658, 0, 0,
	0, 372, 0, 373, 374, 0, 0, 1206, 375, 376,
	377, 659, 660, 378, 379, 380, 381, 382, 383, 384,
	385, 386, 0, 387, 661, 0, 662, 388, 0, 389,
	390, 391, 392, 393, 1593, 664, 665, 479, 1208, 394,
	395, 0, 396, 397, 398, 399, 400, 0, 0, 0,
	0, 401, 402, 403, 405, 0, 1207, 404, 666, 667,
	0, 668, 0, 406, 407, 1209, 669, 1210, 408, 409,
	410, 1211, 411, 0, 0, 0, 412, 413, 414, 415,
	416, 417, 0, 418, 420, 419, 0, 421, 670, 1212,
	422, 423, 1213, 0, 424, 425, 426, 427, 428, 429,
	432, 0, 0, 430, 431, 433, 434, 0, 435, 436,
	438, 441, 437, 439, 440, 442, 455, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 457,
	0, 456, 1214, 458, 459, 460, 467, 469, 470, 465,
	466, 468, 471, 472, 462, 463, 474, 464, 1215, 473,
	461, 0, 0, 1216, 475, 476, 477, 0, 671, 478,
	672, 480, 481, 0, 0, 482, 0, 0, 0, 484,
	485, 486, 0, 0, 487, 488, 673, 1217, 489, 1218,
	674, 490, 491, 483, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 0, 501, 502, 675, 503, 504, 505,
	676, 506, 507, 508, 677, 509, 678, 510, 511, 0,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 520,
	679, 521, 522, 524, 523, 525, 0, 526, 0, 527,
	528, 529, 0, 0, 0, 0, 0, 530, 0, 532,
	533, 534, 535, 531, 536, 537, 538, 539, 540, 0,
	541, 542, 543, 1219, 544, 545, 546, 547, 548, 680,
	549, 0, 550, 551, 557, 558, 559, 552, 553, 560,
	561, 562, 563, 564, 0, 566, 567, 565, 568, 569,
	570, 0, 571, 572, 554, 555, 573, 574, 1220, 575,
	576, 577, 578, 579, 580, 581, 681, 0, 582, 0,
	583, 584, 585, 586, 588, 556, 589, 594, 595, 682,
	590, 591, 592, 593, 683, 597, 598, 0, 599, 600,
	0, 596, 587, 0, 601, 602, 603, 604, 605, 606,
	607, 362, 608, 0, 609, 684, 685, 686, 687, 0,
	618, 0, 610, 611, 612, 688, 613, 689, 0, 614,
	615, 616, 617, 0, 619, 620, 0, 0, 621, 622,
	623, 625, 626, 624, 627, 0, 628, 0, 0, 629,
	630, 631, 690, 691, 692, 0, 633, 632, 634, 635,
	693, 636, 637, 0, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 1553, 0, 1344, 1343, 0, 0, 0,
	0, 1341, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 286, 287, 1204, 288, 289, 290, 291, 292,
	293, 644, 645, 0, 294, 646, 295, 647, 0, 648,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	649, 650, 651, 0, 303, 304, 652, 0, 1349, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 1205, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 337, 653, 654, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 655, 357, 358, 359,
	361, 363, 360, 364, 365, 366, 367, 656, 657, 368,
	0, 274, 0, 0, 0, 0, 0, 369, 370, 371,
	658, 0, 0, 0, 372, 0, 373, 374, 0, 0,
	1206, 375, 376, 377, 659, 660, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 0, 387, 661, 0, 662,
	388, 0, 389, 390, 391, 392, 393, 1555, 664, 665,
	479, 1208, 394, 395, 0, 396, 397, 398, 399, 400,
	0, 0, 0, 0, 401, 402, 403, 405, 0, 1207,
	404, 666, 667, 0, 668, 0, 406, 407, 1209, 669,
	1210, 408, 409, 410, 1211, 411, 0, 0, 0, 412,
	413, 414, 415, 416, 417, 0, 418, 420, 419, 0,
	421, 670, 1212, 422, 423, 1213, 0, 424, 425, 426,
	427, 428, 429, 432, 0, 0, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 1214, 458, 459, 460, 467,
	469, 470, 465, 466, 468, 471, 472, 462, 463, 474,
	464, 1215, 473, 461, 0, 0, 1216, 475, 476, 477,
	0, 671, 478, 672, 480, 481, 0, 0, 482, 0,
	0, 0, 484, 485, 486, 0, 0, 487, 488, 673,
	1217, 489, 1218, 674, 490, 491, 483, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 0, 501, 502, 675,
	503, 504, 505, 676, 506, 507, 508, 677, 509, 678,
	510, 511, 0, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 520, 679, 521, 522, 524, 523, 525, 0,
	526, 0, 527, 528, 529, 0, 0, 0, 0, 0,
	530, 0, 532, 533, 534, 535, 531, 536, 537, 538,
	539, 540, 0, 541, 542, 543, 1219, 544, 545, 546,
	547, 548, 680, 549, 0, 550, 551, 557, 558, 559,
	552, 553, 560, 561, 562, 563, 564, 0, 566, 567,
	565, 568, 569, 570, 0, 571, 572, 554, 555, 573,
	574, 1220, 575, 576, 577, 578, 579, 580, 581, 681,
	0, 582, 0, 583, 584, 585, 586, 588, 556, 589,
	594, 595, 682, 590, 591, 592, 593, 683, 597, 598,
	0, 599, 600, 0, 596, 587, 0, 601, 602, 603,
	604, 605, 606, 607, 362, 608, 0, 609, 684, 685,
	686, 687, 0, 618, 0, 610, 611, 612, 688, 613,
	689, 0, 614, 615, 616, 617, 0, 619, 620, 0,
	0, 621, 622, 623, 625, 626, 624, 627, 0, 628,
	0, 0, 629, 630, 631, 690, 691, 692, 0, 633,
	632, 634, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 1518, 0, 1344, 1343,
	0, 0, 0, 0, 1341, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 286, 287, 1204, 288, 289,
	290, 291, 292, 293, 644, 645, 0, 294, 646, 295,
	647, 0, 648, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 649, 650, 651, 0, 303, 304, 652,
	0, 1349, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	1205, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 337, 653,
	654, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 354, 0, 355, 356, 655,
	357, 358, 359, 361, 363, 360, 364, 365, 366, 367,
	656, 657, 368, 0, 274, 0, 0, 0, 0, 0,
	369, 370, 371, 658, 0, 0, 0, 372, 0, 373,
	374, 0, 0, 1206, 375, 376, 377, 659, 660, 378,
	379, 380, 381, 382, 383, 384, 385, 386, 0, 387,
	661, 0, 662, 388, 0, 389, 390, 391, 392, 393,
	1517, 664, 665, 479, 1208, 394, 395, 0, 396, 397,
	398, 399, 400, 0, 0, 0, 0, 401, 402, 403,
	405, 0, 1207, 404, 666, 667, 0, 668, 0, 406,
	407, 1209, 669, 1210, 408, 409, 410, 1211, 411, 0,
	0, 0, 412, 413, 414, 415, 416, 417, 0, 418,
	420, 419, 0, 421, 670, 1212, 422, 423, 1213, 0,
	424, 425, 426, 427, 428, 429, 432, 0, 0, 430,
	431, 433, 434, 0, 435, 436, 438, 441, 437, 439,
	440, 442, 455, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 457, 0, 456, 1214, 458,
	459, 460, 467, 469, 470, 465, 466, 468, 471, 472,
	462, 463, 474, 464, 1215, 473, 461, 0, 0, 1216,
	475, 476, 477, 0, 671, 478, 672, 480, 481, 0,
	0, 482, 0, 0, 0, 484, 485, 486, 0, 0,
	487, 488, 673, 1217, 489, 1218, 674, 490, 491, 483,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 0,
	501, 502, 675, 503, 504, 505, 676, 506, 507, 508,
	677, 509, 678, 510, 511, 0, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 520, 679, 521, 522, 524,
	523, 525, 0, 526, 0, 527, 528, 529, 0, 0,
	0, 0, 0, 530, 0, 532, 533, 534, 535, 531,
	536, 537, 538, 539, 540, 0, 541, 542, 543, 1219,
	544, 545, 546, 547, 548, 680, 549, 0, 550, 551,
	557, 558, 559, 552, 553, 560, 561, 562, 563, 564,
	0, 566, 567, 565, 568, 569, 570, 0, 571, 572,
	554, 555, 573, 574, 1220, 575, 576, 577, 578, 579,
	580, 581, 681, 0, 582, 0, 583, 584, 585, 586,
	588, 556, 589, 594, 595, 682, 590, 591, 592, 593,
	683, 597, 598, 0, 599, 600, 0, 596, 587, 0,
	601, 602, 603, 604, 605, 606, 607, 362, 608, 0,
	609, 684, 685, 686, 687, 0, 618, 0, 610, 611,
	612, 688, 613, 689, 0, 614, 615, 616, 617, 0,
	619, 620, 0, 0, 621, 622, 623, 625, 626, 624,
	627, 0, 628, 0, 0, 629, 630, 631, 690, 691,
	692, 0, 633, 632, 634, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 1338,
	0, 1344, 1343, 0, 0, 0, 0, 1341, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 286, 287,
	1204, 288, 289, 290, 291, 292, 293, 644, 645, 0,
	294, 646, 295, 647, 0, 648, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 649, 650, 651, 0,
	303, 304, 652, 0, 1349, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 1205, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 337, 653, 654, 0, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 347,
	348, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 655, 357, 358, 359, 361, 363, 360, 364,
	365, 366, 367, 656, 657, 368, 0, 274, 0, 0,
	0, 0, 0, 369, 370, 371, 658, 0, 0, 0,
	372, 0, 373, 374, 0, 0, 1206, 375, 376, 377,
	659, 660, 378, 379, 380, 381, 382, 383, 384, 385,
	386, 0, 387, 661, 0, 662, 388, 0, 389, 390,
	391, 392, 393, 1337, 664, 665, 479, 1208, 394, 395,
	0, 396, 397, 398, 399, 400, 0, 0, 0, 0,
	401, 402, 403, 405, 0, 1207, 404, 666, 667, 0,
	668, 0, 406, 407, 1209, 669, 1210, 408, 409, 410,
	1211, 411, 0, 0, 0, 412, 413, 414, 415, 416,
	417, 0, 418, 420, 419, 0, 421, 670, 1212, 422,
	423, 1213, 0, 424, 425, 426, 427, 428, 429, 432,
	0, 0, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 1214, 458, 459, 460, 467, 469, 470, 465, 466,
	468, 471, 472, 462, 463, 474, 464, 1215, 473, 461,
	0, 0, 1216, 475, 476, 477, 0, 671, 478, 672,
	480, 481, 0, 0, 482, 0, 0, 0, 484, 485,
	486, 0, 0, 487, 488, 673, 1217, 489, 1218, 674,
	490, 491, 483, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 0, 501, 502, 675, 503, 504, 505, 676,
	506, 507, 508, 677, 509, 678, 510, 511, 0, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 520, 679,
	521, 522, 524, 523, 525, 0, 526, 0, 527, 528,
	529, 0, 0, 0, 0, 0, 530, 0, 532, 533,
	534, 535, 531, 536, 537, 538, 539, 540, 0, 541,
	542, 543, 1219, 544, 545, 546, 547, 548, 680, 549,
	0, 550, 551, 557, 558, 559, 552, 553, 560, 561,
	562, 563, 564, 0, 566, 567, 565, 568, 569, 570,
	0, 571, 572, 554, 555, 573, 574, 1220, 575, 576,
	577, 578, 579, 580, 581, 681, 0, 582, 0, 583,
	584, 585, 586, 588, 556, 589, 594, 595, 682, 590,
	591, 592, 593, 683, 597, 598, 0, 599, 600, 0,
	596, 587, 0, 601, 602, 603, 604, 605, 606, 607,
	362, 608, 0, 609, 684, 685, 686, 687, 0, 618,
	0, 610, 611, 612, 688, 613, 689, 0, 614, 615,
	616, 617, 0, 619, 620, 0, 0, 621, 622, 623,
	625, 626, 624, 627, 0, 628, 0, 0, 629, 630,
	631, 690, 691, 692, 0, 633, 632, 634, 635, 693,
	636, 637, 0, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 1344, 1343, 0, 0, 0, 0, 1341, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 0, 286,
	287, 1204, 288, 289, 290, 291, 292, 293, 644, 645,
	0, 294, 646, 295, 647, 0, 648, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 649, 650, 651,
	0, 303, 304, 652, 0, 1349, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 1205, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 337, 653, 654, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 355, 356, 655, 357, 358, 359, 361, 363, 360,
	364, 365, 366, 367, 656, 657, 368, 0, 274, 0,
	0, 0, 0, 0, 369, 370, 371, 658, 0, 0,
	0, 372, 0, 373, 374, 0, 0, 1206, 375, 376,
	377, 659, 660, 378, 379, 380, 381, 382, 383, 384,
	385, 386, 0, 387, 661, 0, 662, 388, 0, 389,
	390, 391, 392, 393, 663, 664, 665, 479, 1208, 394,
	395, 0, 396, 397, 398, 399, 400, 0, 0, 0,
	0, 401, 402, 403, 405, 0, 1207, 404, 666, 667,
	0, 668, 0, 406, 407, 1209, 669, 1210, 408, 409,
	410, 1211, 411, 0, 0, 0, 412, 413, 414, 415,
	416, 417, 0, 418, 420, 419, 0, 421, 670, 1212,
	422, 423, 1213, 0, 424, 425, 426, 427, 428, 429,
	432, 0, 0, 430, 431, 433, 434, 0, 435, 436,
	438, 441, 437, 439, 440, 442, 455, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 457,
	0, 456, 1214, 458, 459, 460, 467, 469, 470, 465,
	466, 468, 471, 472, 462, 463, 474, 464, 1215, 473,
	461, 0, 0, 1216, 475, 476, 477, 0, 671, 478,
	672, 480, 481, 0, 0, 482, 0, 0, 0, 484,
	485, 486, 0, 0, 487, 488, 673, 1217, 489, 1218,
	674, 490, 491, 483, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 0, 501, 502, 675, 503, 504, 505,
	676, 506, 507, 508, 677, 509, 678, 510, 511, 0,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 520,
	679, 521, 522, 524, 523, 525, 0, 526, 0, 527,
	528, 529, 0, 0, 0, 0, 0, 530, 0, 532,
	533, 534, 535, 531, 536, 537, 538, 539, 540, 0,
	541, 542, 543, 1219, 544, 545, 546, 547, 548, 680,
	549, 0, 550, 551, 557, 558, 559, 552, 553, 560,
	561, 562, 563, 564, 0, 566, 567, 565, 568, 569,
	570, 0, 571, 572, 554, 555, 573, 574, 1220, 575,
	576, 577, 578, 579, 580, 581, 681, 0, 582, 0,
	583, 584, 585, 586, 588, 556, 589, 594, 595, 682,
	590, 591, 592, 593, 683, 597, 598, 0, 599, 600,
	0, 596, 587, 0, 601, 602, 603, 604, 605, 606,
	607, 362, 608, 0, 609, 684, 685, 686, 687, 0,
	618, 0, 610, 611, 612, 688, 613, 689, 0, 614,
	615, 616, 617, 0, 619, 620, 0, 0, 621, 622,
	623, 625, 626, 624, 627, 0, 628, 0, 0, 629,
	630, 631, 690, 691, 692, 0, 633, 632, 634, 635,
	693, 636, 637, 1344, 2105, 0, 0, 638, 639, 694,
	640, 641, 642, 0, 0, 0, 0, 0, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	286, 287, 1204, 288, 289, 290, 291, 292, 293, 644,
	645, 0, 294, 646, 295, 647, 0, 648, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 649, 650,
	651, 0, 303, 304, 652, 0, 1349, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 1205, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 337, 653, 654, 2102, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 347, 348, 0, 349, 350, 351, 0, 352, 353,
	354, 0, 355, 356, 655, 357, 358, 359, 361, 363,
	360, 364, 365, 366, 367, 656, 657, 368, 0, 274,
	0, 0, 0, 0, 0, 369, 370, 371, 658, 0,
	0, 0, 372, 0, 373, 374, 0, 0, 1206, 375,
	376, 377, 659, 660, 378, 379, 380, 381, 382, 383,
	384, 385, 386, 0, 387, 661, 0, 662, 388, 0,
	389, 390, 391, 392, 393, 663, 664, 665, 479, 1208,
	394, 395, 0, 396, 397, 398, 399, 400, 0, 0,
	0, 0, 401, 402, 403, 405, 0, 1207, 404, 666,
	667, 0, 668, 0, 406, 407, 1209, 669, 1210, 408,
	409, 410, 1211, 411, 0, 0, 0, 412, 413, 414,
	415, 416, 417, 0, 418, 420, 419, 0, 421, 670,
	1212, 422, 423, 1213, 0, 424, 425, 426, 427, 428,
	429, 432, 0, 0, 430, 431, 433, 434, 0, 435,
	436, 438, 441, 437, 439, 440, 442, 455, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	457, 0, 456, 1214, 458, 459, 460, 467, 469, 470,
	465, 466, 468, 471, 472, 462, 463, 474, 464, 1215,
	473, 461, 0, 0, 1216, 475, 476, 477, 0, 671,
	478, 672, 480, 481, 0, 0, 482, 0, 0, 0,
	484, 485, 486, 0, 0, 487, 488, 673, 1217, 489,
	1218, 674, 490, 491, 483, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 0, 501, 502, 675, 503, 504,
	505, 676, 506, 507, 508, 677, 509, 678, 510, 511,
	0, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	520, 679, 521, 522, 524, 523, 525, 0, 526, 0,
	527, 528, 529, 0, 0, 0, 0, 0, 530, 0,
	532, 533, 534, 535, 531, 536, 537, 538, 539, 540,
	0, 541, 542, 543, 1219, 544, 545, 546, 547, 548,
	680, 549, 0, 550, 551, 557, 558, 559, 552, 553,
	560, 561, 562, 563, 564, 0, 566, 567, 565, 568,
	569, 570, 0, 571, 572, 554, 555, 573, 574, 1220,
	575, 576, 577, 578, 579, 580, 581, 681, 0, 582,
	0, 583, 584, 585, 586, 588, 556, 589, 594, 595,
	682, 590, 591, 592, 593, 683, 597, 598, 0, 599,
	600, 0, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 362, 608, 0, 609, 684, 685, 686, 687,
	0, 618, 0, 610, 611, 612, 688, 613, 689, 0,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 0, 628, 0, 0,
	629, 630, 631, 690, 691, 692, 0, 633, 632, 634,
	635, 693, 636, 637, 1344, 1343, 0, 0, 638, 639,
	694, 640, 641, 642, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 286, 287, 1204, 288, 289, 290, 291, 292, 293,
	644, 645, 0, 294, 646, 295, 647, 0, 648, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 649,
	650, 651, 0, 303, 304, 652, 0, 1349, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 1205, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 337, 653, 654, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 355, 356, 655, 357, 358, 359, 361,
	363, 360, 364, 365, 366, 367, 656, 657, 368, 0,
	274, 0, 0, 0, 0, 0, 369, 370, 371, 658,
	0, 0, 0, 372, 0, 373, 374, 0, 0, 1206,
	375, 376, 377, 659, 660, 378, 379, 380, 381, 382,
	383, 384, 385, 386, 0, 387, 661, 0, 662, 388,
	0, 389, 390, 391, 392, 393, 663, 664, 665, 479,
	1208, 394, 395, 0, 396, 397, 398, 399, 400, 0,
	0, 0, 0, 401, 402, 403, 405, 0, 1207, 404,
	666, 667, 0, 668, 0, 406, 407, 1209, 669, 1210,
	408, 409, 410, 1211, 411, 0, 0, 0, 412, 413,
	414, 415, 416, 417, 0, 418, 420, 419, 0, 421,
	670, 1212, 422, 423, 1213, 0, 424, 425, 426, 427,
	428, 429, 432, 0, 0, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 440, 442, 455, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 456, 1214, 458, 459, 460, 467, 469,
	470, 465, 466, 468, 471, 472, 462, 463, 474, 464,
	1215, 473, 461, 0, 0, 1216, 475, 476, 477, 0,
	671, 478, 672, 480, 481, 0, 0, 482, 0, 0,
	0, 484, 485, 486, 0, 0, 487, 488, 673, 1217,
	489, 1218, 674, 490, 491, 483, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 0, 501, 502, 675, 503,
	504, 505, 676, 506, 507, 508, 677, 509, 678, 510,
	511, 0, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 520, 679, 521, 522, 524, 523, 525, 0, 526,
	0, 527, 528, 529, 0, 0, 0, 0, 0, 530,
	0, 532, 533, 534, 535, 531, 536, 537, 538, 539,
	540, 0, 541, 542, 543, 1219, 544, 545, 546, 547,
	548, 680, 549, 0, 550, 551, 557, 558, 559, 552,
	553, 560, 561, 562, 563, 564, 0, 566, 567, 565,
	568, 569, 570, 0, 571, 572, 554, 555, 573, 574,
	1220, 575, 576, 577, 578, 579, 580, 581, 681, 0,
	582, 0, 583, 584, 585, 586, 588, 556, 589, 594,
	595, 682, 590, 591, 592, 593, 683, 597, 598, 0,
	599, 600, 0, 596, 587, 0, 601, 602, 603, 604,
	605, 606, 607, 362, 608, 0, 609, 684, 685, 686,
	687, 0, 618, 0, 610, 611, 612, 688, 613, 689,
	0, 614, 615, 616, 617, 0, 619, 620, 0, 0,
	621, 622, 623, 625, 626, 624, 627, 0, 628, 0,
	0, 629, 630, 631, 690, 691, 692, 0, 633, 632,
	634, 635, 693, 636, 637, 1344, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 286, 287, 1204, 288, 289, 290, 291, 292,
	293, 644, 645, 0, 294, 646, 295, 647, 0, 648,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	649, 650, 651, 0, 303, 304, 652, 0, 1349, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 1205, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 337, 653, 654, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 655, 357, 358, 359,
	361, 363, 360, 364, 365, 366, 367, 656, 657, 368,
	0, 274, 0, 0, 0, 0, 0, 369, 370, 371,
	658, 0, 0, 0, 372, 0, 373, 374, 0, 0,
	1206, 375, 376, 377, 659, 660, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 0, 387, 661, 0, 662,
	388, 0, 389, 390, 391, 392, 393, 663, 664, 665,
	479, 1208, 394, 395, 0, 396, 397, 398, 399, 400,
	0, 0, 0, 0, 401, 402, 403, 405, 0, 1207,
	404, 666, 667, 0, 668, 0, 406, 407, 1209, 669,
	1210, 408, 409, 410, 1211, 411, 0, 0, 0, 412,
	413, 414, 415, 416, 417, 0, 418, 420, 419, 0,
	421, 670, 1212, 422, 423, 1213, 0, 424, 425, 426,
	427, 428, 429, 432, 0, 0, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 1214, 458, 459, 460, 467,
	469, 470, 465, 466, 468, 471, 472, 462, 463, 474,
	464, 1215, 473, 461, 0, 0, 1216, 475, 476, 477,
	0, 671, 478, 672, 480, 481, 0, 0, 482, 0,
	0, 0, 484, 485, 486, 0, 0, 487, 488, 673,
	1217, 489, 1218, 674, 490, 491, 483, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 0, 501, 502, 675,
	503, 504, 505, 676, 506, 507, 508, 677, 509, 678,
	510, 511, 0, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 520, 679, 521, 522, 524, 523, 525, 0,
	526, 0, 527, 528, 529, 0, 0, 0, 0, 0,
	530, 0, 532, 533, 534, 535, 531, 536, 537, 538,
	539, 540, 0, 541, 542, 543, 1219, 544, 545, 546,
	547, 548, 680, 549, 0, 550, 551, 557, 558, 559,
	552, 553, 560, 561, 562, 563, 564, 0, 566, 567,
	565, 568, 569, 570, 0, 571, 572, 554, 555, 573,
	574, 1220, 575, 576, 577, 578, 579, 580, 581, 681,
	0, 582, 0, 583, 584, 585, 586, 588, 556, 589,
	594, 595, 682, 590, 591, 592, 593, 683, 597, 598,
	0, 599, 600, 0, 596, 587, 0, 601, 602, 603,
	604, 605, 606, 607, 362, 608, 0, 609, 684, 685,
	686, 687, 0, 618, 0, 610, 611, 612, 688, 613,
	689, 0, 614, 615, 616, 617, 0, 619, 620, 0,
	0, 621, 622, 623, 625, 626, 624, 627, 0, 628,
	0, 0, 629, 630, 631, 690, 691, 692, 0, 633,
	632, 634, 635, 693, 636, 637, 271, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 286, 287, 0, 288, 289, 290, 291,
	292, 293, 644, 645, 0, 294, 646, 295, 647, 0,
	648, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 649, 650, 651, 2884, 303, 304, 652, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 2881, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 337, 653, 654, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 2888, 356, 655, 357, 358,
	359, 361, 363, 360, 364, 365, 366, 367, 656, 657,
	368, 0, 3113, 0, 0, 0, 0, 0, 369, 370,
	371, 658, 0, 0, 0, 372, 0, 373, 374, 2887,
	0, 0, 375, 376, 377, 659, 660, 378, 379, 380,
	381, 382, 383, 384, 385, 386, 0, 387, 661, 0,
	662, 388, 0, 389, 390, 391, 392, 393, 663, 664,
	665, 479, 0, 394, 395, 0, 396, 397, 398, 399,
	400, 0, 0, 0, 3110, 401, 402, 403, 405, 0,
	0, 404, 666, 667, 0, 668, 0, 406, 3112, 0,
	669, 0, 408, 409, 410, 0, 411, 0, 0, 0,
	412, 413, 414, 415, 416, 417, 0, 418, 420, 419,
	0, 421, 670, 0, 422, 423, 3109, 0, 424, 425,
	426, 427, 428, 429, 432, 0, 0, 430, 431, 433,
	434, 0, 435, 436, 438, 441, 437, 439, 440, 442,
	455, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 457, 0, 456, 0, 458, 459, 460,
	467, 469, 470, 465, 466, 468, 471, 472, 462, 463,
	474, 464, 0, 473, 461, 0, 0, 0, 475, 476,
	477, 0, 671, 478, 672, 480, 481, 0, 0, 482,
	0, 0, 0, 484, 485, 486, 0, 0, 487, 488,
	673, 0, 489, 0, 674, 490, 491, 483, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 0, 501, 502,
	675, 503, 504, 505, 676, 506, 507, 508, 677, 509,
	678, 510, 511, 2886, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 520, 679, 521, 522, 524, 523, 525,
	0, 526, 0, 527, 528, 529, 0, 0, 0, 0,
	0, 530, 0, 532, 533, 534, 535, 531, 536, 537,
	538, 539, 540, 0, 541, 542, 543, 0, 544, 545,
	546, 547, 548, 680, 549, 0, 550, 551, 557, 558,
	559, 552, 553, 560, 561, 562, 563, 564, 0, 566,
	567, 565, 568, 569, 570, 0, 571, 572, 554, 555,
	573, 574, 0, 575, 576, 577, 578, 579, 580, 581,
	681, 0, 582, 0, 583, 584, 585, 586, 588, 556,
	589, 594, 595, 682, 590, 591, 592, 593, 683, 597,
	598, 0, 599, 600, 0, 596, 587, 0, 601, 602,
	603, 604, 605, 606, 607, 362, 608, 0, 609, 684,
	685, 686, 687, 0, 618, 0, 610, 611, 612, 688,
	613, 689, 0, 614, 615, 616, 617, 0, 619, 620,
	0, 3111, 621, 622, 623, 625, 626, 624, 627, 0,
	628, 0, 0, 629, 630, 631, 690, 691, 692, 0,
	633, 632, 634, 635, 693, 636, 637, 271, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 0, 0, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 286, 287, 0, 288, 289, 290,
	291, 292, 293, 644, 645, 0, 294, 646, 295, 647,
	0, 648, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 649, 650, 651, 2884, 303, 304, 652, 0,
	0, 2878, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 2881, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 337, 653, 654,
	0, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 347, 348, 0, 349, 350,
	351, 0, 352, 353, 354, 0, 2888, 356, 655, 357,
	358, 359, 361, 363, 360, 364, 365, 366, 367, 656,
	657, 368, 0, 0, 0, 0, 0, 0, 0, 369,
	370, 371, 658, 0, 0, 0, 372, 0, 373, 374,
	2887, 0, 0, 375, 376, 377, 659, 660, 378, 379,
	380, 381, 382, 383, 384, 385, 386, 0, 387, 661,
	0, 662, 388, 0, 389, 390, 391, 392, 393, 2877,
	664, 665, 479, 0, 394, 395, 0, 396, 397, 398,
	399, 400, 0, 0, 0, 0, 401, 402, 403, 405,
	0, 0, 404, 666, 667, 0, 668, 0, 406, 407,
	0, 669, 0, 408, 409, 410, 0, 411, 0, 0,
	0, 412, 413, 414, 415, 416, 417, 0, 418, 420,
	419, 0, 421, 670, 0, 422, 423, 0, 0, 424,
	425, 426, 427, 428, 429, 432, 0, 0, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 0, 458, 459,
	460, 467, 469, 470, 465, 466, 468, 471, 472, 462,
	463, 474, 464, 0, 473, 461, 0, 0, 0, 475,
	476, 477, 0, 671, 478, 672, 480, 481, 0, 0,
	482, 0, 0, 0, 484, 485, 486, 0, 0, 487,
	488, 673, 0, 489, 0, 674, 490, 491, 483, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 0, 501,
	502, 675, 503, 504, 505, 676, 506, 507, 508, 677,
	509, 678, 510, 511, 2886, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 520, 679, 521, 522, 524, 523,
	525, 0, 526, 0, 527, 528, 529, 0, 0, 0,
	0, 0, 530, 0, 532, 533, 534, 535, 531, 536,
	537, 538, 539, 540, 0, 541, 542, 543, 0, 544,
	545, 546, 547, 548, 680, 549, 0, 550, 551, 557,
	558, 559, 552, 553, 560, 561, 562, 563, 564, 0,
	566, 567, 565, 568, 569, 570, 0, 571, 572, 554,
	555, 573, 574, 0, 575, 576, 577, 578, 579, 580,
	581, 681, 0, 582, 0, 583, 584, 585, 586, 588,
	556, 589, 594, 595, 682, 590, 591, 592, 593, 683,
	597, 598, 0, 599, 600, 0, 596, 587, 0, 601,
	602, 603, 604, 605, 606, 607, 362, 608, 0, 609,
	684, 685, 686, 687, 0, 618, 0, 610, 611, 612,
	688, 613, 689, 0, 614, 615, 616, 617, 0, 619,
	620, 0, 2885, 621, 622, 623, 625, 626, 624, 627,
	0, 628, 0, 0, 629, 630, 631, 690, 691, 692,
	0, 633, 632, 634, 635, 693, 636, 637, 1753, 0,
	271, 0, 638, 639, 694, 640, 641, 642, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 1752, 284, 285, 0, 0, 0,
	0, 0, 643, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 644, 645, 0, 294,
	646, 295, 647, 0, 648, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 649, 650, 651, 0, 303,
	304, 652, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 1751, 334, 0, 335,
	337, 653, 654, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 355,
	356, 655, 357, 358, 359, 361, 363, 360, 364, 365,
	366, 367, 656, 657, 368, 0, 274, 0, 0, 0,
	0, 0, 369, 370, 371, 658, 0, 0, 0, 372,
	0, 373, 374, 0, 0, 0, 375, 376, 377, 659,
	660, 378, 379, 380, 381, 382, 383, 384, 385, 386,
	0, 387, 661, 0, 662, 388, 0, 389, 390, 391,
	392, 393, 663, 664, 665, 479, 0, 394, 395, 0,
	396, 397, 398, 399, 400, 0, 0, 0, 275, 401,
	402, 403, 405, 0, 0, 404, 666, 667, 0, 668,
	0, 406, 407, 0, 669, 0, 408, 409, 410, 0,
	411, 0, 0, 0, 412, 413, 414, 415, 416, 417,
	0, 418, 420, 419, 0, 421, 670, 0, 422, 423,
	0, 0, 424, 425, 426, 427, 428, 429, 432, 0,
	0, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	0, 458, 459, 460, 467, 469, 470, 465, 466, 468,
	471, 472, 462, 463, 474, 464, 0, 473, 461, 0,
	276, 0, 475, 476, 477, 0, 671, 478, 672, 480,
	481, 0, 0, 482, 0, 0, 0, 484, 485, 486,
	0, 0, 487, 488, 673, 0, 489, 0, 674, 490,
	491, 483, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 0, 501, 502, 675, 503, 504, 505, 676, 506,
	507, 508, 677, 509, 678, 510, 511, 0, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 520, 679, 521,
	522, 524, 523, 525, 0, 526, 0, 527, 528, 529,
	0, 0, 0, 0, 0, 530, 0, 532, 533, 534,
	535, 531, 536, 537, 538, 539, 540, 0, 541, 542,
	543, 0, 544, 545, 546, 547, 548, 680, 549, 0,
	550, 551, 557, 558, 559, 1754, 553, 560, 561, 562,
	563, 564, 0, 1750, 567, 565, 568, 569, 570, 0,
	571, 572, 554, 555, 573, 574, 0, 575, 576, 577,
	578, 579, 580, 581, 681, 0, 582, 0, 583, 584,
	585, 586, 588, 556, 589, 594, 595, 682, 590, 591,
	592, 593, 683, 597, 598, 0, 599, 600, 0, 596,
	587, 1748, 601, 602, 603, 604, 605, 606, 607, 362,
	608, 0, 609, 684, 685, 686, 687, 0, 618, 0,
	610, 611, 612, 688, 613, 689, 0, 614, 615, 616,
	617, 0, 619, 620, 0, 0, 621, 622, 623, 625,
	626, 624, 627, 0, 628, 0, 0, 629, 630, 631,
	690, 691, 692, 0, 1749, 632, 634, 635, 693, 636,
	637, 1493, 0, 271, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	286, 287, 0, 288, 289, 290, 291, 292, 293, 644,
	645, 0, 294, 646, 295, 647, 0, 648, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 649, 650,
	651, 0, 303, 304, 652, 0, 0, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 337, 653, 654, 0, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 347, 348, 0, 349, 350, 351, 0, 352, 353,
	354, 0, 355, 356, 655, 357, 358, 359, 361, 363,
	360, 364, 365, 366, 367, 656, 657, 368, 0, 274,
	0, 0, 0, 0, 0, 369, 370, 371, 658, 0,
	0, 0, 372, 0, 373, 374, 0, 0, 0, 375,
	376, 377, 659, 660, 378, 379, 380, 381, 382, 383,
	384, 385, 386, 0, 387, 661, 0, 662, 388, 0,
	389, 390, 391, 392, 393, 1495, 664, 665, 479, 0,
	394, 395, 0, 396, 397, 398, 399, 400, 0, 0,
	0, 275, 401, 402, 403, 405, 0, 0, 404, 666,
	667, 0, 668, 0, 406, 407, 0, 669, 0, 408,
	409, 410, 0, 411, 0, 0, 0, 412, 413, 414,
	415, 416, 417, 0, 418, 420, 419, 0, 421, 670,
	0, 422, 423, 0, 0, 424, 425, 426, 427, 428,
	429, 432, 0, 0, 430, 431, 433, 434, 0, 435,
	436, 438, 441, 437, 439, 440, 442, 455, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	457, 0, 456, 0, 458, 459, 460, 467, 469, 470,
	465, 466, 468, 471, 472, 462, 463, 474, 464, 0,
	473, 461, 0, 276, 0, 475, 476, 477, 0, 671,
	478, 672, 480, 481, 0, 0, 482, 0, 0, 1254,
	484, 485, 486, 0, 0, 487, 488, 673, 0, 489,
	0, 674, 490, 491, 483, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 0, 501, 502, 675, 503, 504,
	505, 676, 506, 507, 508, 677, 509, 678, 510, 511,
	0, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	520, 679, 521, 522, 524, 523, 525, 0, 526, 0,
	527, 528, 529, 0, 0, 0, 0, 0, 530, 0,
	532, 533, 534, 535, 531, 536, 537, 538, 539, 540,
	0, 541, 542, 543, 0, 544, 545, 546, 547, 548,
	680, 549, 0, 550, 551, 557, 558, 559, 552, 553,
	560, 561, 562, 563, 564, 0, 566, 567, 565, 568,
	569, 570, 0, 571, 572, 554, 555, 573, 574, 0,
	575, 576, 577, 578, 579, 580, 581, 681, 0, 582,
	0, 583, 584, 585, 586, 588, 556, 589, 594, 595,
	682, 590, 591, 592, 593, 683, 597, 598, 0, 599,
	600, 0, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 362, 608, 0, 609, 684, 685, 686, 687,
	0, 618, 0, 610, 611, 612, 688, 613, 689, 0,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 0, 628, 0, 0,
	629, 630, 631, 690, 691, 692, 0, 633, 632, 634,
	635, 693, 636, 637, 1490, 0, 271, 0, 638, 639,
	694, 640, 641, 642, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 286, 287, 0, 288, 289, 290, 291,
	292, 293, 644, 645, 0, 294, 646, 295, 647, 0,
	648, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 649, 650, 651, 0, 303, 304, 652, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 337, 653, 654, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 355, 356, 655, 357, 358,
	359, 361, 363, 360, 364, 365, 366, 367, 656, 657,
	368, 0, 274, 0, 0, 0, 0, 0, 369, 370,
	371, 658, 0, 0, 0, 372, 0, 373, 374, 0,
	0, 0, 375, 376, 377, 659, 660, 378, 379, 380,
	381, 382, 383, 384, 385, 386, 0, 387, 661, 0,
	662, 388, 0, 389, 390, 391, 392, 393, 1492, 664,
	665, 479, 0, 394, 395, 0, 396, 397, 398, 399,
	400, 0, 0, 0, 275, 401, 402, 403, 405, 0,
	0, 404, 666, 667, 0, 668, 0, 406, 407, 0,
	669, 0, 408, 409, 410, 0, 411, 0, 0, 0,
	412, 413, 414, 415, 416, 417, 0, 418, 420, 419,
	0, 421, 670, 0, 422, 423, 0, 0, 424, 425,
	426, 427, 428, 429, 432, 0, 0, 430, 431, 433,
	434, 0, 435, 436, 438, 441, 437, 439, 440, 442,
	455, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 457, 0, 456, 0, 458, 459, 460,
	467, 469, 470, 465, 466, 468, 471, 472, 462, 463,
	474, 464, 0, 473, 461, 0, 276, 0, 475, 476,
	477, 0, 671, 478, 672, 480, 481, 0, 0, 482,
	0, 0, 1254, 484, 485, 486, 0, 0, 487, 488,
	673, 0, 489, 0, 674, 490, 491, 483, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 0, 501, 502,
	675, 503, 504, 505, 676, 506, 507, 508, 677, 509,
	678, 510, 511, 0, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 520, 679, 521, 522, 524, 523, 525,
	0, 526, 0, 527, 528, 529, 0, 0, 0, 0,
	0, 530, 0, 532, 533, 534, 535, 531, 536, 537,
	538, 539, 540, 0, 541, 542, 543, 0, 544, 545,
	546, 547, 548, 680, 549, 0, 550, 551, 557, 558,
	559, 552, 553, 560, 561, 562, 563, 564, 0, 566,
	567, 565, 568, 569, 570, 0, 571, 572, 554, 555,
	573, 574, 0, 575, 576, 577, 578, 579, 580, 581,
	681, 0, 582, 0, 583, 584, 585, 586, 588, 556,
	589, 594, 595, 682, 590, 591, 592, 593, 683, 597,
	598, 0, 599, 600, 0, 596, 587, 0, 601, 602,
	603, 604, 605, 606, 607, 362, 608, 0, 609, 684,
	685, 686, 687, 0, 618, 0, 610, 611, 612, 688,
	613, 689, 0, 614, 615, 616, 617, 0, 619, 620,
	0, 0, 621, 622, 623, 625, 626, 624, 627, 0,
	628, 0, 0, 629, 630, 631, 690, 691, 692, 0,
	633, 632, 634, 635, 693, 636, 637, 1398, 0, 271,
	0, 638, 639, 694, 640, 641, 642, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 286, 287, 0, 288,
	289, 290, 291, 292, 293, 644, 645, 0, 294, 646,
	295, 647, 0, 648, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 649, 650, 651, 0, 303, 304,
	652, 0, 0, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 335, 337,
	653, 654, 0, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 347, 348, 0,
	349, 350, 351, 0, 352, 353, 354, 0, 355, 356,
	655, 357, 358, 359, 361, 363, 360, 364, 365, 366,
	367, 656, 657, 368, 0, 274, 0, 0, 0, 0,
	0, 369, 370, 371, 658, 0, 0, 0, 372, 0,
	373, 374, 0, 0, 0, 375, 376, 377, 659, 660,
	378, 379, 380, 381, 382, 383, 384, 385, 386, 0,
	387, 661, 0, 662, 388, 0, 389, 390, 391, 392,
	393, 1400, 664, 665, 479, 0, 394, 395, 0, 396,
	397, 398, 399, 400, 0, 0, 0, 275, 401, 402,
	403, 405, 0, 0, 404, 666, 667, 0, 668, 0,
	406, 407, 0, 669, 0, 408, 409, 410, 0, 411,
	0, 0, 0, 412, 413, 414, 415, 416, 417, 0,
	418, 420, 419, 0, 421, 670, 0, 422, 423, 0,
	0, 424, 425, 426, 427, 428, 429, 432, 0, 0,
	430, 431, 433, 434, 0, 435, 436, 438, 441, 437,
	439, 440, 442, 455, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 457, 0, 456, 0,
	458, 459, 460, 467, 469, 470, 465, 466, 468, 471,
	472, 462, 463, 474, 464, 0, 473, 461, 0, 276,
	0, 475, 476, 477, 0, 671, 478, 672, 480, 481,
	0, 0, 482, 0, 0, 1254, 484, 485, 486, 0,
	0, 487, 488, 673, 0, 489, 0, 674, 490, 491,
	483, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	0, 501, 502, 675, 503, 504, 505, 676, 506, 507,
	508, 677, 509, 678, 510, 511, 0, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 520, 679, 521, 522,
	524, 523, 525, 0, 526, 0, 527, 528, 529, 0,
	0, 0, 0, 0, 530, 0, 532, 533, 534, 535,
	531, 536, 537, 538, 539, 540, 0, 541, 542, 543,
	0, 544, 545, 546, 547, 548, 680, 549, 0, 550,
	551, 557, 558, 559, 552, 553, 560, 561, 562, 563,
	564, 0, 566, 567, 565, 568, 569, 570, 0, 571,
	572, 554, 555, 573, 574, 0, 575, 576, 577, 578,
	579, 580, 581, 681, 0, 582, 0, 583, 584, 585,
	586, 588, 556, 589, 594, 595, 682, 590, 591, 592,
	593, 683, 597, 598, 0, 599, 600, 0, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 362, 608,
	0, 609, 684, 685, 686, 687, 0, 618, 0, 610,
	611, 612, 688, 613, 689, 0, 614, 615, 616, 617,
	0, 619, 620, 0, 0, 621, 622, 623, 625, 626,
	624, 627, 0, 628, 0, 0, 629, 630, 631, 690,
	691, 692, 0, 633, 632, 634, 635, 693, 636, 637,
	726, 0, 271, 0, 638, 639, 694, 640, 641, 642,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 725, 282, 283, 715, 284, 285, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 0, 286,
	287, 0, 288, 289, 290, 291, 292, 293, 644, 645,
	0, 294, 646, 295, 647, 0, 648, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 649, 650, 651,
	0, 303, 304, 652, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	718, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 337, 653, 654, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 355, 356, 655, 357, 358, 359, 361, 363, 360,
	364, 365, 366, 367, 656, 657, 368, 0, 0, 0,
	0, 0, 0, 0, 369, 370, 371, 658, 0, 0,
	0, 372, 0, 373, 374, 0, 0, 0, 375, 376,
	377, 659, 660, 378, 379, 380, 381, 382, 383, 384,
	385, 386, 719, 387, 661, 0, 662, 388, 0, 389,
	390, 391, 392, 393, 663, 664, 665, 479, 0, 394,
	395, 0, 396, 397, 398, 399, 400, 0, 0, 0,
	0, 401, 402, 403, 405, 0, 0, 404, 666, 667,
	0, 668, 0, 406, 407, 0, 669, 0, 408, 409,
	410, 0, 411, 0, 0, 0, 412, 413, 414, 415,
	416, 417, 0, 418, 420, 419, 0, 421, 670, 0,
	422, 423, 0, 0, 424, 425, 426, 427, 428, 429,
	432, 0, 0, 430, 431, 433, 434, 0, 435, 436,
	438, 441, 437, 439, 440, 442, 455, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 457,
	0, 456, 0, 458, 459, 460, 467, 469, 470, 465,
	466, 468, 471, 472, 462, 463, 474, 464, 0, 473,
	461, 0, 0, 0, 475, 476, 477, 0, 671, 478,
	672, 480, 481, 0, 0, 482, 0, 0, 0, 484,
	485, 486, 0, 0, 487, 488, 673, 0, 489, 0,
	674, 490, 491, 483, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 0, 501, 502, 675, 503, 504, 505,
	676, 506, 507, 508, 677, 509, 678, 510, 511, 0,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 520,
	679, 521, 522, 524, 523, 525, 0, 526, 0, 527,
	528, 529, 0, 0, 0, 0, 0, 530, 0, 532,
	533, 534, 535, 531, 536, 537, 538, 539, 540, 0,
	541, 542, 543, 0, 544, 545, 546, 547, 548, 680,
	549, 0, 550, 551, 557, 558, 559, 552, 553, 560,
	561, 562, 563, 564, 720, 566, 567, 565, 568, 569,
	570, 0, 571, 572, 554, 555, 573, 574, 0, 575,
	576, 577, 578, 579, 580, 581, 681, 0, 582, 0,
	583, 584, 585, 586, 588, 556, 589, 594, 595, 682,
	590, 591, 592, 593, 683, 597, 598, 0, 599, 600,
	0, 596, 587, 0, 601, 602, 603, 604, 605, 606,
	607, 362, 608, 0, 609, 684, 685, 686, 687, 0,
	618, 0, 610, 611, 612, 688, 613, 689, 0, 614,
	615, 616, 617, 0, 619, 620, 0, 0, 621, 622,
	623, 625, 626, 624, 627, 0, 628, 0, 0, 629,
	630, 631, 690, 691, 692, 0, 633, 632, 634, 635,
	693, 636, 637, 714, 0, 271, 0, 638, 639, 694,
	640, 641, 642, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 715,
	284, 285, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 644, 645, 0, 294, 646, 295, 647, 0, 648,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	649, 650, 651, 0, 303, 304, 652, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 718, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 337, 653, 654, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 655, 357, 358, 359,
	361, 363, 360, 364, 365, 366, 367, 656, 657, 368,
	0, 0, 0, 0, 0, 0, 0, 369, 370, 371,
	658, 0, 0, 0, 372, 0, 373, 374, 0, 0,
	0, 375, 376, 377, 659, 660, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 719, 387, 661, 0, 662,
	388, 0, 389, 390, 391, 392, 393, 663, 664, 665,
	479, 0, 394, 395, 0, 396, 397, 398, 399, 400,
	0, 0, 0, 0, 401, 402, 403, 405, 0, 0,
	404, 666, 667, 0, 668, 0, 406, 407, 0, 669,
	0, 408, 409, 410, 0, 411, 0, 0, 0, 412,
	413, 414, 415, 416, 417, 0, 418, 420, 419, 0,
	421, 670, 0, 422, 423, 0, 0, 424, 425, 426,
	427, 428, 429, 432, 0, 0, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 0, 458, 459, 460, 467,
	469, 470, 465, 466, 468, 471, 472, 462, 463, 474,
	464, 0, 473, 461, 0, 0, 0, 475, 476, 477,
	0, 671, 478, 672, 480, 481, 0, 0, 482, 0,
	0, 0, 484, 485, 486, 0, 0, 487, 488, 673,
	0, 489, 0, 674, 490, 491, 483, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 0, 501, 502, 675,
	503, 504, 505, 676, 506, 507, 508, 677, 509, 678,
	510, 511, 0, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 520, 679, 521, 522, 524, 523, 525, 0,
	526, 0, 527, 528, 529, 0, 0, 0, 0, 0,
	530, 0, 532, 533, 534, 535, 531, 536, 537, 538,
	539, 540, 0, 541, 542, 543, 0, 544, 545, 546,
	547, 548, 680, 549, 0, 550, 551, 557, 558, 559,
	552, 553, 560, 561, 562, 563, 564, 720, 566, 567,
	565, 568, 569, 570, 0, 571, 572, 554, 555, 573,
	574, 0, 575, 576, 577, 578, 579, 580, 581, 681,
	0, 582, 0, 583, 584, 585, 586, 588, 556, 589,
	594, 595, 682, 590, 591, 592, 593, 683, 597, 598,
	0, 599, 600, 0, 596, 587, 0, 601, 602, 603,
	604, 605, 606, 607, 362, 608, 0, 609, 684, 685,
	686, 687, 0, 618, 0, 610, 611, 612, 688, 613,
	689, 0, 614, 615, 616, 617, 0, 619, 620, 0,
	0, 621, 622, 623, 625, 626, 624, 627, 0, 628,
	0, 0, 629, 630, 631, 690, 691, 692, 0, 633,
	632, 634, 635, 693, 636, 637, 271, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	715, 284, 285, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 286, 287, 0, 288, 289, 290, 291,
	292, 293, 644, 645, 0, 294, 646, 295, 647, 0,
	648, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 649, 650, 651, 0, 303, 304, 652, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 718, 324, 325, 326, 0, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 337, 653, 654, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 355, 356, 655, 357, 358,
	359, 361, 363, 360, 364, 365, 366, 367, 656, 657,
	368, 0, 0, 0, 0, 0, 0, 0, 369, 370,
	371, 658, 0, 0, 0, 372, 0, 373, 374, 0,
	0, 0, 375, 376, 377, 659, 660, 378, 379, 380,
	381, 382, 383, 384, 385, 386, 719, 387, 661, 0,
	662, 388, 0, 389, 390, 391, 392, 393, 663, 664,
	665, 479, 0, 394, 395, 0, 396, 397, 398, 399,
	400, 0, 0, 0, 0, 401, 402, 403, 405, 0,
	0, 404, 666, 667, 0, 668, 0, 406, 407, 0,
	669, 0, 408, 409, 410, 0, 411, 0, 0, 0,
	412, 413, 414, 415, 416, 417, 0, 418, 420, 419,
	0, 421, 670, 0, 422, 423, 0, 0, 424, 425,
	426, 427, 428, 429, 432, 0, 0, 430, 431, 433,
	434, 0, 435, 436, 438, 441, 437, 439, 440, 442,
	455, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 457, 0, 456, 0, 458, 459, 460,
	467, 469, 470, 465, 466, 468, 471, 472, 462, 463,
	474, 464, 0, 473, 461, 0, 0, 0, 475, 476,
	477, 0, 671, 478, 672, 480, 481, 0, 0, 482,
	0, 0, 0, 484, 485, 486, 0, 0, 487, 488,
	673, 0, 489, 0, 674, 490, 491, 483, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 0, 501, 502,
	675, 503, 504, 505, 676, 506, 507, 508, 677, 509,
	678, 510, 511, 0, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 520, 679, 521, 522, 524, 523, 525,
	0, 526, 0, 527, 528, 529, 0, 0, 0, 0,
	0, 530, 0, 532, 533, 534, 535, 531, 536, 537,
	538, 539, 540, 0, 541, 542, 543, 0, 544, 545,
	546, 547, 548, 680, 549, 0, 550, 551, 557, 558,
	559, 552, 553, 560, 561, 562, 563, 564, 720, 566,
	567, 565, 568, 569, 570, 0, 571, 572, 554, 555,
	573, 574, 0, 575, 576, 577, 578, 579, 580, 581,
	681, 0, 582, 0, 583, 584, 585, 586, 588, 556,
	589, 594, 595, 682, 590, 591, 592, 593, 683, 597,
	598, 0, 599, 600, 0, 596, 587, 0, 601, 602,
	603, 604, 605, 606, 607, 362, 608, 0, 609, 684,
	685, 686, 687, 0, 618, 0, 610, 611, 612, 688,
	613, 689, 0, 614, 615, 616, 617, 0, 619, 620,
	0, 0, 621, 622, 623, 625, 626, 624, 627, 0,
	628, 0, 0, 629, 630, 631, 690, 691, 692, 0,
	633, 632, 634, 635, 693, 636, 637, 271, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 0, 0, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 715, 284, 285, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 286, 287, 0, 288, 289, 290,
	291, 292, 293, 644, 645, 0, 294, 646, 295, 647,
	0, 648, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 649, 650, 651, 0, 303, 304, 652, 0,
	0, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 718, 324, 325, 326, 0,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 337, 653, 654,
	0, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 347, 348, 0, 349, 350,
	351, 0, 352, 353, 354, 0, 355, 356, 655, 357,
	358, 359, 361, 363, 360, 364, 365, 366, 367, 656,
	657, 368, 0, 0, 0, 0, 0, 0, 0, 369,
	370, 371, 658, 0, 0, 0, 372, 0, 373, 374,
	0, 0, 0, 375, 376, 377, 659, 660, 378, 379,
	380, 381, 382, 383, 384, 385, 386, 3976, 387, 661,
	0, 662, 388, 0, 389, 390, 391, 392, 393, 663,
	664, 665, 479, 0, 394, 395, 0, 396, 397, 398,
	399, 400, 0, 0, 0, 0, 401, 402, 403, 405,
	0, 0, 404, 666, 667, 0, 668, 0, 406, 407,
	0, 669, 0, 408, 409, 410, 0, 411, 0, 0,
	0, 412, 413, 414, 415, 416, 417, 0, 418, 420,
	419, 0, 421, 670, 0, 422, 423, 0, 0, 424,
	425, 426, 427, 428, 429, 432, 0, 0, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 0, 458, 459,
	460, 467, 469, 470, 465, 466, 468, 471, 472, 462,
	463, 474, 464, 0, 473, 461, 0, 0, 0, 475,
	476, 477, 0, 671, 478, 672, 480, 481, 0, 0,
	482, 0, 0, 0, 484, 485, 486, 0, 0, 487,
	488, 673, 0, 489, 0, 674, 490, 491, 483, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 0, 501,
	502, 675, 503, 504, 505, 676, 506, 507, 508, 677,
	509, 678, 510, 511, 0, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 520, 679, 521, 522, 524, 523,
	525, 0, 526, 0, 527, 528, 529, 0, 0, 0,
	0, 0, 530, 0, 532, 533, 534, 535, 531, 536,
	537, 538, 539, 540, 0, 541, 542, 543, 0, 544,
	545, 546, 547, 548, 680, 549, 0, 550, 551, 557,
	558, 559, 552, 553, 560, 561, 562, 563, 564, 720,
	566, 567, 565, 568, 569, 570, 0, 571, 572, 554,
	555, 573, 574, 0, 575, 576, 577, 578, 579, 580,
	581, 681, 0, 582, 0, 583, 584, 585, 586, 588,
	556, 589, 594, 595, 682, 590, 591, 592, 593, 683,
	597, 598, 0, 599, 600, 0, 596, 587, 0, 601,
	602, 603, 604, 605, 606, 607, 362, 608, 0, 609,
	684, 685, 686, 687, 0, 618, 0, 610, 611, 612,
	688, 613, 689, 0, 614, 615, 616, 617, 0, 619,
	620, 0, 0, 621, 622, 623, 625, 626, 624, 627,
	0, 628, 0, 0, 629, 630, 631, 690, 691, 692,
	0, 633, 632, 634, 635, 693, 636, 637, 271, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 286, 287, 0, 288, 289,
	290, 291, 292, 293, 644, 645, 0, 294, 646, 295,
	647, 0, 648, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 649, 650, 651, 0, 303, 304, 652,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 337, 653,
	654, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 354, 0, 355, 356, 655,
	357, 358, 359, 361, 363, 360, 364, 365, 366, 367,
	656, 657, 368, 0, 274, 0, 0, 0, 0, 0,
	369, 370, 371, 658, 0, 0, 0, 372, 0, 373,
	374, 0, 0, 0, 375, 376, 377, 659, 660, 378,
	379, 380, 381, 382, 383, 384, 385, 386, 0, 387,
	661, 0, 662, 388, 0, 389, 390, 391, 392, 393,
	663, 664, 665, 479, 0, 394, 395, 0, 396, 397,
	398, 399, 400, 0, 0, 0, 275, 401, 402, 403,
	405, 0, 0, 404, 666, 667, 0, 668, 0, 406,
	407, 0, 669, 0, 408, 409, 410, 0, 411, 0,
	0, 0, 412, 413, 414, 415, 416, 417, 0, 418,
	420, 419, 0, 421, 670, 0, 422, 423, 0, 0,
	424, 425, 426, 427, 428, 429, 432, 0, 0, 430,
	431, 433, 434, 0, 435, 436, 438, 441, 437, 439,
	440, 442, 455, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 457, 0, 456, 0, 458,
	459, 460, 467, 469, 470, 465, 466, 468, 471, 472,
	462, 463, 474, 464, 0, 473, 461, 0, 276, 0,
	475, 476, 477, 0, 671, 478, 672, 480, 481, 0,
	0, 482, 0, 0, 1254, 484, 485, 486, 0, 0,
	487, 488, 673, 0, 489, 0, 674, 490, 491, 483,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 0,
	501, 502, 675, 503, 504, 505, 676, 506, 507, 508,
	677, 509, 678, 510, 511, 0, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 520, 679, 521, 522, 524,
	523, 525, 0, 526, 0, 527, 528, 529, 0, 0,
	0, 0, 0, 530, 0, 532, 533, 534, 535, 531,
	536, 537, 538, 539, 540, 0, 541, 542, 543, 0,
	544, 545, 546, 547, 548, 680, 549, 0, 550, 551,
	557, 558, 559, 552, 553, 560, 561, 562, 563, 564,
	0, 566, 567, 565, 568, 569, 570, 0, 571, 572,
	554, 555, 573, 574, 0, 575, 576, 577, 578, 579,
	580, 581, 681, 0, 582, 0, 583, 584, 585, 586,
	588, 556, 589, 594, 595, 682, 590, 591, 592, 593,
	683, 597, 598, 0, 599, 600, 0, 596, 587, 0,
	601, 602, 603, 604, 605, 606, 607, 362, 608, 0,
	609, 684, 685, 686, 687, 0, 618, 0, 610, 611,
	612, 688, 613, 689, 0, 614, 615, 616, 617, 0,
	619, 620, 0, 0, 621, 622, 623, 625, 626, 624,
	627, 0, 628, 0, 0, 629, 630, 631, 690, 691,
	692, 0, 633, 632, 634, 635, 693, 636, 637, 271,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 0,
	0, 0, 0, 0, 0, 0, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 286, 287, 0, 288,
	289, 290, 291, 292, 293, 644, 645, 0, 294, 646,
	295, 647, 0, 648, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 649, 650, 651, 0, 303, 304,
	652, 0, 0, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 335, 337,
	653, 654, 0, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 347, 348, 0,
	349, 350, 351, 0, 352, 353, 354, 0, 355, 356,
	655, 357, 358, 359, 361, 363, 360, 364, 365, 366,
	367, 656, 657, 368, 0, 274, 0, 0, 0, 0,
	0, 369, 370, 371, 658, 0, 0, 0, 372, 0,
	373, 374, 0, 0, 0, 375, 376, 377, 659, 660,
	378, 379, 380, 381, 382, 383, 384, 385, 386, 0,
	387, 661, 0, 662, 388, 0, 389, 390, 391, 392,
	393, 663, 664, 665, 479, 0, 394, 395, 0, 396,
	397, 398, 399, 400, 0, 0, 0, 275, 401, 402,
	403, 405, 0, 0, 404, 666, 667, 0, 668, 0,
	406, 407, 0, 669, 0, 408, 409, 410, 0, 411,
	0, 0, 0, 412, 413, 414, 415, 416, 417, 0,
	418, 420, 419, 0, 421, 670, 0, 422, 423, 0,
	0, 424, 425, 426, 427, 428, 429, 432, 0, 0,
	430, 431, 433, 434, 0, 435, 436, 438, 441, 437,
	439, 440, 442, 455, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 457, 0, 456, 0,
	458, 459, 460, 467, 469, 470, 465, 466, 468, 471,
	472, 462, 463, 474, 464, 3515, 473, 461, 0, 276,
	0, 475, 476, 477, 0, 671, 478, 672, 480, 481,
	0, 0, 482, 0, 0, 0, 484, 485, 486, 0,
	0, 487, 488, 673, 0, 489, 0, 674, 490, 491,
	483, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	0, 501, 502, 675, 503, 504, 505, 676, 506, 507,
	508, 677, 509, 678, 510, 511, 0, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 520, 679, 521, 522,
	524, 523, 525, 0, 526, 0, 527, 528, 529, 0,
	0, 0, 0, 0, 530, 0, 532, 533, 534, 535,
	531, 536, 537, 538, 539, 540, 0, 541, 542, 543,
	0, 544, 545, 546, 547, 548, 680, 549, 0, 550,
	551, 557, 558, 559, 552, 553, 560, 561, 562, 563,
	564, 0, 566, 567, 565, 568, 569, 570, 0, 571,
	572, 554, 555, 573, 574, 0, 575, 576, 577, 578,
	579, 580, 581, 681, 0, 582, 0, 583, 584, 585,
	586, 588, 556, 589, 594, 595, 682, 590, 591, 592,
	593, 683, 597, 598, 0, 599, 600, 0, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 362, 608,
	0, 609, 684, 685, 686, 687, 0, 618, 0, 610,
	611, 612, 688, 613, 689, 0, 614, 615, 616, 617,
	0, 619, 620, 0, 0, 621, 622, 623, 625, 626,
	624, 627, 0, 628, 0, 0, 629, 630, 631, 690,
	691, 692, 0, 633, 632, 634, 635, 693, 636, 637,
	3058, 0, 271, 0, 638, 639, 694, 640, 641, 642,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 0, 286,
	287, 0, 288, 289, 290, 291, 292, 293, 644, 645,
	0, 294, 646, 295, 647, 0, 648, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 649, 650, 651,
	0, 303, 304, 652, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 337, 653, 654, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 355, 356, 655, 357, 358, 359, 361, 363, 360,
	364, 365, 366, 367, 656, 657, 368, 0, 274, 0,
	0, 0, 0, 0, 369, 370, 371, 658, 0, 0,
	0, 372, 0, 373, 374, 0, 0, 0, 375, 376,
	377, 659, 660, 378, 379, 380, 381, 382, 383, 384,
	385, 386, 0, 387, 661, 0, 662, 388, 0, 389,
	390, 391, 392, 393, 3057, 664, 665, 479, 0, 394,
	395, 0, 396, 397, 398, 399, 400, 0, 0, 0,
	275, 401, 402, 403, 405, 0, 0, 404, 666, 667,
	0, 668, 0, 406, 407, 0, 669, 0, 408, 409,
	410, 0, 411, 0, 0, 0, 412, 413, 414, 415,
	416, 417, 0, 418, 420, 419, 0, 421, 670, 0,
	422, 423, 0, 0, 424, 425, 426, 427, 428, 429,
	432, 0, 0, 430, 431, 433, 434, 0, 435, 436,
	438, 441, 437, 439, 440, 442, 455, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 457,
	0, 456, 0, 458, 459, 460, 467, 469, 470, 465,
	466, 468, 471, 472, 462, 463, 474, 464, 0, 473,
	461, 0, 276, 0, 475, 476, 477, 0, 671, 478,
	672, 480, 481, 0, 0, 482, 0, 0, 0, 484,
	485, 486, 0, 0, 487, 488, 673, 0, 489, 0,
	674, 490, 491, 483, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 0, 501, 502, 675, 503, 504, 505,
	676, 506, 507, 508, 677, 509, 678, 510, 511, 0,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 520,
	679, 521, 522, 524, 523, 525, 0, 526, 0, 527,
	528, 529, 0, 0, 0, 0, 0, 530, 0, 532,
	533, 534, 535, 531, 536, 537, 538, 539, 540, 0,
	541, 542, 543, 0, 544, 545, 546, 547, 548, 680,
	549, 0, 550, 551, 557, 558, 559, 552, 553, 560,
	561, 562, 563, 564, 0, 566, 567, 565, 568, 569,
	570, 0, 571, 572, 554, 555, 573, 574, 0, 575,
	576, 577, 578, 579, 580, 581, 681, 0, 582, 0,
	583, 584, 585, 586, 588, 556, 589, 594, 595, 682,
	590, 591, 592, 593, 683, 597, 598, 0, 599, 600,
	0, 596, 587, 0, 601, 602, 603, 604, 605, 606,
	607, 362, 608, 0, 609, 684, 685, 686, 687, 0,
	618, 0, 610, 611, 612, 688, 613, 689, 0, 614,
	615, 616, 617, 0, 619, 620, 0, 0, 621, 622,
	623, 625, 626, 624, 627, 0, 628, 0, 0, 629,
	630, 631, 690, 691, 692, 0, 633, 632, 634, 635,
	693, 636, 637, 2335, 0, 271, 0, 638, 639, 694,
	640, 641, 642, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 644, 645, 0, 294, 646, 295, 647, 0, 648,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	649, 650, 651, 0, 303, 304, 652, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 337, 653, 654, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 655, 357, 358, 359,
	361, 363, 360, 364, 365, 366, 367, 656, 657, 368,
	0, 274, 0, 0, 0, 0, 0, 369, 370, 371,
	658, 0, 0, 0, 372, 0, 373, 374, 0, 0,
	0, 375, 376, 377, 659, 660, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 0, 387, 661, 0, 662,
	388, 0, 389, 390, 391, 392, 393, 663, 664, 665,
	479, 0, 394, 395, 0, 396, 397, 398, 399, 400,
	0, 0, 0, 275, 401, 402, 403, 405, 0, 0,
	404, 666, 667, 0, 668, 0, 406, 407, 0, 669,
	0, 408, 409, 410, 0, 411, 0, 0, 0, 412,
	413, 414, 415, 416, 417, 0, 418, 420, 419, 0,
	421, 670, 0, 422, 423, 0, 0, 424, 425, 426,
	427, 428, 429, 432, 0, 0, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 0, 458, 459, 460, 467,
	469, 470, 465, 466, 468, 471, 472, 462, 463, 474,
	464, 0, 473, 461, 0, 276, 0, 475, 476, 477,
	0, 671, 478, 672, 480, 481, 0, 0, 482, 0,
	0, 0, 484, 485, 486, 0, 0, 487, 488, 673,
	0, 489, 0, 674, 490, 491, 483, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 0, 501, 502, 675,
	503, 504, 505, 676, 506, 507, 508, 677, 509, 678,
	510, 511, 0, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 520, 679, 521, 522, 524, 523, 525, 0,
	526, 0, 527, 528, 529, 0, 0, 0, 0, 0,
	530, 0, 532, 533, 534, 535, 531, 536, 537, 538,
	539, 540, 0, 541, 542, 543, 0, 544, 545, 546,
	547, 548, 680, 549, 0, 550, 551, 557, 558, 559,
	552, 553, 560, 561, 562, 563, 564, 0, 566, 567,
	565, 568, 569, 570, 0, 571, 572, 554, 555, 573,
	574, 0, 575, 576, 577, 578, 579, 580, 581, 681,
	0, 582, 0, 583, 584, 585, 586, 588, 556, 589,
	594, 595, 682, 590, 591, 592, 593, 683, 597, 598,
	0, 599, 600, 0, 596, 587, 0, 601, 602, 603,
	604, 605, 606, 607, 362, 608, 0, 609, 684, 685,
	686, 687, 0, 618, 0, 610, 611, 612, 688, 613,
	689, 0, 614, 615, 616, 617, 0, 619, 620, 0,
	0, 621, 622, 623, 625, 626, 624, 627, 0, 628,
	0, 0, 629, 630, 631, 690, 691, 692, 0, 633,
	632, 634, 635, 693, 636, 637, 271, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 286, 287, 0, 288, 289, 290, 291,
	292, 293, 644, 645, 0, 294, 646, 295, 647, 0,
	648, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 649, 650, 651, 0, 303, 304, 652, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 337, 653, 654, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 355, 356, 655, 357, 358,
	359, 361, 363, 360, 364, 365, 366, 367, 656, 657,
	368, 0, 274, 0, 0, 0, 0, 0, 369, 370,
	371, 658, 0, 0, 0, 372, 0, 373, 374, 0,
	0, 0, 375, 376, 377, 659, 660, 378, 379, 380,
	381, 382, 383, 384, 385, 386, 0, 387, 661, 0,
	662, 388, 0, 389, 390, 391, 392, 393, 663, 664,
	665, 479, 0, 394, 395, 0, 396, 397, 398, 399,
	400, 0, 0, 0, 275, 401, 402, 403, 405, 0,
	0, 404, 666, 667, 0, 668, 0, 406, 407, 0,
	669, 0, 408, 409, 410, 0, 411, 0, 0, 0,
	412, 413, 414, 415, 416, 417, 0, 418, 420, 419,
	0, 421, 670, 0, 422, 423, 0, 0, 424, 425,
	426, 427, 428, 429, 432, 0, 0, 430, 431, 433,
	434, 0, 435, 436, 438, 441, 437, 439, 440, 442,
	455, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 457, 0, 456, 0, 458, 459, 460,
	467, 469, 470, 465, 466, 468, 471, 472, 462, 463,
	474, 464, 0, 473, 461, 0, 276, 0, 475, 476,
	477, 0, 671, 478, 672, 480, 481, 0, 0, 482,
	0, 0, 0, 484, 485, 486, 0, 0, 487, 488,
	673, 0, 489, 0, 674, 490, 491, 483, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 0, 501, 502,
	675, 503, 504, 505, 676, 506, 507, 508, 677, 509,
	678, 510, 511, 0, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 520, 679, 521, 522, 524, 523, 525,
	0, 526, 0, 527, 528, 529, 0, 0, 0, 0,
	0, 530, 0, 532, 533, 534, 535, 531, 536, 537,
	538, 539, 540, 0, 541, 542, 543, 0, 544, 545,
	546, 547, 548, 680, 549, 0, 550, 551, 557, 558,
	559, 552, 553, 560, 561, 562, 563, 564, 0, 566,
	567, 565, 568, 569, 570, 0, 571, 572, 554, 555,
	573, 574, 0, 575, 576, 577, 578, 579, 580, 581,
	681, 0, 582, 0, 583, 584, 585, 586, 588, 556,
	589, 594, 595, 682, 590, 591, 592, 593, 683, 597,
	598, 0, 599, 600, 0, 596, 587, 2274, 601, 602,
	603, 604, 605, 606, 607, 362, 608, 0, 609, 684,
	685, 686, 687, 0, 618, 0, 610, 611, 612, 688,
	613, 689, 0, 614, 615, 616, 617, 0, 619, 620,
	0, 0, 621, 622, 623, 625, 626, 624, 627, 0,
	628, 0, 0, 629, 630, 631, 690, 691, 692, 0,
	633, 632, 634, 635, 693, 636, 637, 2281, 0, 271,
	0, 638, 639, 694, 640, 641, 642, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 286, 287, 0, 288,
	289, 290, 291, 292, 293, 644, 645, 0, 294, 646,
	295, 647, 0, 648, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 649, 650, 651, 0, 303, 304,
	652, 0, 0, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 335, 337,
	653, 654, 0, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 347, 348, 0,
	349, 350, 351, 0, 352, 353, 354, 0, 355, 356,
	655, 357, 358, 359, 361, 363, 360, 364, 365, 366,
	367, 656, 657, 368, 0, 274, 0, 0, 0, 0,
	0, 369, 370, 371, 658, 0, 0, 0, 372, 0,
	373, 374, 0, 0, 0, 375, 376, 377, 659, 660,
	378, 379, 380, 381, 382, 383, 384, 385, 386, 0,
	387, 661, 0, 662, 388, 0, 389, 390, 391, 392,
	393, 2280, 664, 665, 479, 0, 394, 395, 0, 396,
	397, 398, 399, 400, 0, 0, 0, 275, 401, 402,
	403, 405, 0, 0, 404, 666, 667, 0, 668, 0,
	406, 407, 0, 669, 0, 408, 409, 410, 0, 411,
	0, 0, 0, 412, 413, 414, 415, 416, 417, 0,
	418, 420, 419, 0, 421, 670, 0, 422, 423, 0,
	0, 424, 425, 426, 427, 428, 429, 432, 0, 0,
	430, 431, 433, 434, 0, 435, 436, 438, 441, 437,
	439, 440, 442, 455, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 457, 0, 456, 0,
	458, 459, 460, 467, 469, 470, 465, 466, 468, 471,
	472, 462, 463, 474, 464, 0, 473, 461, 0, 276,
	0, 475, 476, 477, 0, 671, 478, 672, 480, 481,
	0, 0, 482, 0, 0, 0, 484, 485, 486, 0,
	0, 487, 488, 673, 0, 489, 0, 674, 490, 491,
	483, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	0, 501, 502, 675, 503, 504, 505, 676, 506, 507,
	508, 677, 509, 678, 510, 511, 0, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 520, 679, 521, 522,
	524, 523, 525, 0, 526, 0, 527, 528, 529, 0,
	0, 0, 0, 0, 530, 0, 532, 533, 534, 535,
	531, 536, 537, 538, 539, 540, 0, 541, 542, 543,
	0, 544, 545, 546, 547, 548, 680, 549, 0, 550,
	551, 557, 558, 559, 552, 553, 560, 561, 562, 563,
	564, 0, 566, 567, 565, 568, 569, 570, 0, 571,
	572, 554, 555, 573, 574, 0, 575, 576, 577, 578,
	579, 580, 581, 681, 0, 582, 0, 583, 584, 585,
	586, 588, 556, 589, 594, 595, 682, 590, 591, 592,
	593, 683, 597, 598, 0, 599, 600, 0, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 362, 608,
	0, 609, 684, 685, 686, 687, 0, 618, 0, 610,
	611, 612, 688, 613, 689, 0, 614, 615, 616, 617,
	0, 619, 620, 0, 0, 621, 622, 623, 625, 626,
	624, 627, 0, 628, 0, 0, 629, 630, 631, 690,
	691, 692, 0, 633, 632, 634, 635, 693, 636, 637,
	2267, 0, 271, 0, 638, 639, 694, 640, 641, 642,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 0, 286,
	287, 0, 288, 289, 290, 291, 292, 293, 644, 645,
	0, 294, 646, 295, 647, 0, 648, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 649, 650, 651,
	0, 303, 304, 652, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 337, 653, 654, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 355, 356, 655, 357, 358, 359, 361, 363, 360,
	364, 365, 366, 367, 656, 657, 368, 0, 274, 0,
	0, 0, 0, 0, 369, 370, 371, 658, 0, 0,
	0, 372, 0, 373, 374, 0, 0, 0, 375, 376,
	377, 659, 660, 378, 379, 380, 381, 382, 383, 384,
	385, 386, 0, 387, 661, 0, 662, 388, 0, 389,
	390, 391, 392, 393, 2269, 664, 665, 479, 0, 394,
	395, 0, 396, 397, 398, 399, 400, 0, 0, 0,
	275, 401, 402, 403, 405, 0, 0, 404, 666, 667,
	0, 668, 0, 406, 407, 0, 669, 0, 408, 409,
	410, 0, 411, 0, 0, 0, 412, 413, 414, 415,
	416, 417, 0, 418, 420, 419, 0, 421, 670, 0,
	422, 423, 0, 0, 424, 425, 426, 427, 428, 429,
	432, 0, 0, 430, 431, 433, 434, 0, 435, 436,
	438, 441, 437, 439, 440, 442, 455, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 457,
	0, 456, 0, 458, 459, 460, 467, 469, 470, 465,
	466, 468, 471, 472, 462, 463, 474, 464, 0, 473,
	461, 0, 276, 0, 475, 476, 477, 0, 671, 478,
	672, 480, 481, 0, 0, 482, 0, 0, 0, 484,
	485, 486, 0, 0, 487, 488, 673, 0, 489, 0,
	674, 490, 491, 483, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 0, 501, 502, 675, 503, 504, 505,
	676, 506, 507, 508, 677, 509, 678, 510, 511, 0,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 520,
	679, 521, 522, 524, 523, 525, 0, 526, 0, 527,
	528, 529, 0, 0, 0, 0, 0, 530, 0, 532,
	533, 534, 535, 531, 536, 537, 538, 539, 540, 0,
	541, 542, 543, 0, 544, 545, 546, 547, 548, 680,
	549, 0, 550, 551, 557, 558, 559, 552, 553, 560,
	561, 562, 563, 564, 0, 566, 567, 565, 568, 569,
	570, 0, 571, 572, 554, 555, 573, 574, 0, 575,
	576, 577, 578, 579, 580, 581, 681, 0, 582, 0,
	583, 584, 585, 586, 588, 556, 589, 594, 595, 682,
	590, 591, 592, 593, 683, 597, 598, 0, 599, 600,
	0, 596, 587, 0, 601, 602, 603, 604, 605, 606,
	607, 362, 608, 0, 609, 684, 685, 686, 687, 0,
	618, 0, 610, 611, 612, 688, 613, 689, 0, 614,
	615, 616, 617, 0, 619, 620, 0, 0, 621, 622,
	623, 625, 626, 624, 627, 0, 628, 0, 0, 629,
	630, 631, 690, 691, 692, 0, 633, 632, 634, 635,
	693, 636, 637, 271, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 0, 0, 0, 0, 0, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	286, 287, 0, 288, 289, 290, 291, 292, 293, 644,
	645, 0, 294, 646, 295, 647, 0, 648, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 649, 650,
	651, 0, 303, 304, 652, 0, 0, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 337, 653, 654, 0, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 347, 348, 0, 349, 350, 351, 0, 352, 353,
	354, 0, 355, 356, 655, 357, 358, 359, 361, 363,
	360, 364, 365, 366, 367, 656, 657, 368, 0, 274,
	0, 0, 0, 0, 0, 369, 370, 371, 658, 0,
	0, 0, 372, 0, 373, 374, 0, 0, 0, 375,
	376, 377, 659, 660, 378, 379, 380, 381, 382, 383,
	384, 385, 386, 0, 387, 661, 0, 662, 388, 0,
	389, 390, 391, 392, 393, 2233, 664, 665, 479, 0,
	394, 395, 0, 396, 397, 398, 399, 400, 0, 0,
	0, 275, 401, 402, 403, 405, 0, 0, 404, 666,
	667, 0, 668, 0, 406, 407, 0, 669, 0, 408,
	409, 410, 0, 411, 0, 0, 0, 412, 413, 414,
	415, 416, 417, 0, 418, 420, 419, 0, 421, 670,
	0, 422, 423, 0, 0, 424, 425, 426, 427, 428,
	429, 432, 0, 0, 430, 431, 433, 434, 0, 435,
	436, 438, 441, 437, 439, 440, 442, 455, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	457, 0, 456, 0, 458, 459, 460, 467, 469, 470,
	465, 466, 468, 471, 472, 462, 463, 474, 464, 0,
	473, 461, 0, 276, 0, 475, 476, 477, 0, 671,
	478, 672, 480, 481, 0, 0, 482, 0, 0, 1254,
	484, 485, 486, 0, 0, 487, 488, 673, 0, 489,
	0, 674, 490, 491, 483, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 0, 501, 502, 675, 503, 504,
	505, 676, 506, 507, 508, 677, 509, 678, 510, 511,
	0, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	520, 679, 521, 522, 524, 523, 525, 0, 526, 0,
	527, 528, 529, 0, 0, 0, 0, 0, 530, 0,
	532, 533, 534, 535, 531, 536, 537, 538, 539, 540,
	0, 541, 542, 543, 0, 544, 545, 546, 547, 548,
	680, 549, 0, 550, 551, 557, 558, 559, 552, 553,
	560, 561, 562, 563, 564, 0, 566, 567, 565, 568,
	569, 570, 0, 571, 572, 554, 555, 573, 574, 0,
	575, 576, 577, 578, 579, 580, 581, 681, 0, 582,
	0, 583, 584, 585, 586, 588, 556, 589, 594, 595,
	682, 590, 591, 592, 593, 683, 597, 598, 0, 599,
	600, 0, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 362, 608, 0, 609, 684, 685, 686, 687,
	0, 618, 0, 610, 611, 612, 688, 613, 689, 0,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 0, 628, 0, 0,
	629, 630, 631, 690, 691, 692, 0, 633, 632, 634,
	635, 693, 636, 637, 1598, 0, 271, 0, 638, 639,
	694, 640, 641, 642, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 286, 287, 0, 288, 289, 290, 291,
	292, 293, 644, 645, 0, 294, 646, 295, 647, 0,
	648, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 649, 650, 651, 0, 303, 304, 652, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 337, 653, 654, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 355, 356, 655, 357, 358,
	359, 361, 363, 360, 364, 365, 366, 367, 656, 657,
	368, 0, 274, 0, 0, 0, 0, 0, 369, 370,
	371, 658, 0, 0, 0, 372, 0, 373, 374, 0,
	0, 0, 375, 376, 377, 659, 660, 378, 379, 380,
	381, 382, 383, 384, 385, 386, 0, 387, 661, 0,
	662, 388, 0, 389, 390, 391, 392, 393, 1597, 664,
	665, 479, 0, 394, 395, 0, 396, 397, 398, 399,
	400, 0, 0, 0, 275, 401, 402, 403, 405, 0,
	0, 404, 666, 667, 0, 668, 0, 406, 407, 0,
	669, 0, 408, 409, 410, 0, 411, 0, 0, 0,
	412, 413, 414, 415, 416, 417, 0, 418, 420, 419,
	0, 421, 670, 0, 422, 423, 0, 0, 424, 425,
	426, 427, 428, 429, 432, 0, 0, 430, 431, 433,
	434, 0, 435, 436, 438, 441, 437, 439, 440, 442,
	455, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 457, 0, 456, 0, 458, 459, 460,
	467, 469, 470, 465, 466, 468, 471, 472, 462, 463,
	474, 464, 0, 473, 461, 0, 276, 0, 475, 476,
	477, 0, 671, 478, 672, 480, 481, 0, 0, 482,
	0, 0, 0, 484, 485, 486, 0, 0, 487, 488,
	673, 0, 489, 0, 674, 490, 491, 483, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 0, 501, 502,
	675, 503, 504, 505, 676, 506, 507, 508, 677, 509,
	678, 510, 511, 0, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 520, 679, 521, 522, 524, 523, 525,
	0, 526, 0, 527, 528, 529, 0, 0, 0, 0,
	0, 530, 0, 532, 533, 534, 535, 531, 536, 537,
	538, 539, 540, 0, 541, 542, 543, 0, 544, 545,
	546, 547, 548, 680, 549, 0, 550, 551, 557, 558,
	559, 552, 553, 560, 561, 562, 563, 564, 0, 566,
	567, 565, 568, 569, 570, 0, 571, 572, 554, 555,
	573, 574, 0, 575, 576, 577, 578, 579, 580, 581,
	681, 0, 582, 0, 583, 584, 585, 586, 588, 556,
	589, 594, 595, 682, 590, 591, 592, 593, 683, 597,
	598, 0, 599, 600, 0, 596, 587, 0, 601, 602,
	603, 604, 605, 606, 607, 362, 608, 0, 609, 684,
	685, 686, 687, 0, 618, 0, 610, 611, 612, 688,
	613, 689, 0, 614, 615, 616, 617, 0, 619, 620,
	0, 0, 621, 622, 623, 625, 626, 624, 627, 0,
	628, 0, 0, 629, 630, 631, 690, 691, 692, 0,
	633, 632, 634, 635, 693, 636, 637, 1510, 0, 271,
	0, 638, 639, 694, 640, 641, 642, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 286, 287, 0, 288,
	289, 290, 291, 292, 293, 644, 645, 0, 294, 646,
	295, 647, 0, 648, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 649, 650, 651, 0, 303, 304,
	652, 0, 0, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 335, 337,
	653, 654, 0, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 347, 348, 0,
	349, 350, 351, 0, 352, 353, 354, 0, 355, 356,
	655, 357, 358, 359, 361, 363, 360, 364, 365, 366,
	367, 656, 657, 368, 0, 274, 0, 0, 0, 0,
	0, 369, 370, 371, 658, 0, 0, 0, 372, 0,
	373, 374, 0, 0, 0, 375, 376, 377, 659, 660,
	378, 379, 380, 381, 382, 383, 384, 385, 386, 0,
	387, 661, 0, 662, 388, 0, 389, 390, 391, 392,
	393, 663, 664, 665, 479, 0, 394, 395, 0, 396,
	397, 398, 399, 400, 0, 0, 0, 275, 401, 402,
	403, 405, 0, 0, 404, 666, 667, 0, 668, 0,
	406, 407, 0, 669, 0, 408, 409, 410, 0, 411,
	0, 0, 0, 412, 413, 414, 415, 416, 417, 0,
	418, 420, 419, 0, 421, 670, 0, 422, 423, 0,
	0, 424, 425, 426, 427, 428, 429, 432, 0, 0,
	430, 431, 433, 434, 0, 435, 436, 438, 441, 437,
	439, 440, 442, 455, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 457, 0, 456, 0,
	458, 459, 460, 467, 469, 470, 465, 466, 468, 471,
	472, 462, 463, 474, 464, 0, 473, 461, 0, 276,
	0, 475, 476, 477, 0, 671, 478, 672, 480, 481,
	0, 0, 482, 0, 0, 0, 484, 485, 486, 0,
	0, 487, 488, 673, 0, 489, 0, 674, 490, 491,
	483, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	0, 501, 502, 675, 503, 504, 505, 676, 506, 507,
	508, 677, 509, 678, 510, 511, 0, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 520, 679, 521, 522,
	524, 523, 525, 0, 526, 0, 527, 528, 529, 0,
	0, 0, 0, 0, 530, 0, 532, 533, 534, 535,
	531, 536, 537, 538, 539, 540, 0, 541, 542, 543,
	0, 544, 545, 546, 547, 548, 680, 549, 0, 550,
	551, 557, 558, 559, 552, 553, 560, 561, 562, 563,
	564, 0, 566, 567, 565, 568, 569, 570, 0, 571,
	572, 554, 555, 573, 574, 0, 575, 576, 577, 578,
	579, 580, 581, 681, 0, 582, 0, 583, 584, 585,
	586, 588, 556, 589, 594, 595, 682, 590, 591, 592,
	593, 683, 597, 598, 0, 599, 600, 0, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 362, 608,
	0, 609, 684, 685, 686, 687, 0, 618, 0, 610,
	611, 612, 688, 613, 689, 0, 614, 615, 616, 617,
	0, 619, 620, 0, 0, 621, 622, 623, 625, 626,
	624, 627, 0, 628, 0, 0, 629, 630, 631, 690,
	691, 692, 0, 633, 632, 634, 635, 693, 636, 637,
	1503, 0, 271, 0, 638, 639, 694, 640, 641, 642,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 0, 286,
	287, 0, 288, 289, 290, 291, 292, 293, 644, 645,
	0, 294, 646, 295, 647, 0, 648, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 649, 650, 651,
	0, 303, 304, 652, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 337, 653, 654, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 355, 356, 655, 357, 358, 359, 361, 363, 360,
	364, 365, 366, 367, 656, 657, 368, 0, 274, 0,
	0, 0, 0, 0, 369, 370, 371, 658, 0, 0,
	0, 372, 0, 373, 374, 0, 0, 0, 375, 376,
	377, 659, 660, 378, 379, 380, 381, 382, 383, 384,
	385, 386, 0, 387, 661, 0, 662, 388, 0, 389,
	390, 391, 392, 393, 1505, 664, 665, 479, 0, 394,
	395, 0, 396, 397, 398, 399, 400, 0, 0, 0,
	275, 401, 402, 403, 405, 0, 0, 404, 666, 667,
	0, 668, 0, 406, 407, 0, 669, 0, 408, 409,
	410, 0, 411, 0, 0, 0, 412, 413, 414, 415,
	416, 417, 0, 418, 420, 419, 0, 421, 670, 0,
	422, 423, 0, 0, 424, 425, 426, 427, 428, 429,
	432, 0, 0, 430, 431, 433, 434, 0, 435, 436,
	438, 441, 437, 439, 440, 442, 455, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 457,
	0, 456, 0, 458, 459, 460, 467, 469, 470, 465,
	466, 468, 471, 472, 462, 463, 474, 464, 0, 473,
	461, 0, 276, 0, 475, 476, 477, 0, 671, 478,
	672, 480, 481, 0, 0, 482, 0, 0, 0, 484,
	485, 486, 0, 0, 487, 488, 673, 0, 489, 0,
	674, 490, 491, 483, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 0, 501, 502, 675, 503, 504, 505,
	676, 506, 507, 508, 677, 509, 678, 510, 511, 0,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 520,
	679, 521, 522, 524, 523, 525, 0, 526, 0, 527,
	528, 529, 0, 0, 0, 0, 0, 530, 0, 532,
	533, 534, 535, 531, 536, 537, 538, 539, 540, 0,
	541, 542, 543, 0, 544, 545, 546, 547, 548, 680,
	549, 0, 550, 551, 557, 558, 559, 552, 553, 560,
	561, 562, 563, 564, 0, 566, 567, 565, 568, 569,
	570, 0, 571, 572, 554, 555, 573, 574, 0, 575,
	576, 577, 578, 579, 580, 581, 681, 0, 582, 0,
	583, 584, 585, 586, 588, 556, 589, 594, 595, 682,
	590, 591, 592, 593, 683, 597, 598, 0, 599, 600,
	0, 596, 587, 0, 601, 602, 603, 604, 605, 606,
	607, 362, 608, 0, 609, 684, 685, 686, 687, 0,
	618, 0, 610, 611, 612, 688, 613, 689, 0, 614,
	615, 616, 617, 0, 619, 620, 0, 0, 621, 622,
	623, 625, 626, 624, 627, 0, 628, 0, 0, 629,
	630, 631, 690, 691, 692, 0, 633, 632, 634, 635,
	693, 636, 637, 1328, 0, 271, 0, 638, 639, 694,
	640, 641, 642, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 644, 645, 0, 294, 646, 295, 647, 0, 648,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	649, 650, 651, 0, 303, 304, 652, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 337, 653, 654, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 655, 357, 358, 359,
	361, 363, 360, 364, 365, 366, 367, 656, 657, 368,
	0, 274, 0, 0, 0, 0, 0, 369, 370, 371,
	658, 0, 0, 0, 372, 0, 373, 374, 0, 0,
	0, 375, 376, 377, 659, 660, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 0, 387, 661, 0, 662,
	388, 0, 389, 390, 391, 392, 393, 1327, 664, 665,
	479, 0, 394, 395, 0, 396, 397, 398, 399, 400,
	0, 0, 0, 275, 401, 402, 403, 405, 0, 0,
	404, 666, 667, 0, 668, 0, 406, 407, 0, 669,
	0, 408, 409, 410, 0, 411, 0, 0, 0, 412,
	413, 414, 415, 416, 417, 0, 418, 420, 419, 0,
	421, 670, 0, 422, 423, 0, 0, 424, 425, 426,
	427, 428, 429, 432, 0, 0, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 0, 458, 459, 460, 467,
	469, 470, 465, 466, 468, 471, 472, 462, 463, 474,
	464, 0, 473, 461, 0, 276, 0, 475, 476, 477,
	0, 671, 478, 672, 480, 481, 0, 0, 482, 0,
	0, 0, 484, 485, 486, 0, 0, 487, 488, 673,
	0, 489, 0, 674, 490, 491, 483, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 0, 501, 502, 675,
	503, 504, 505, 676, 506, 507, 508, 677, 509, 678,
	510, 511, 0, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 520, 679, 521, 522, 524, 523, 525, 0,
	526, 0, 527, 528, 529, 0, 0, 0, 0, 0,
	530, 0, 532, 533, 534, 535, 531, 536, 537, 538,
	539, 540, 0, 541, 542, 543, 0, 544, 545, 546,
	547, 548, 680, 549, 0, 550, 551, 557, 558, 559,
	552, 553, 560, 561, 562, 563, 564, 0, 566, 567,
	565, 568, 569, 570, 0, 571, 572, 554, 555, 573,
	574, 0, 575, 576, 577, 578, 579, 580, 581, 681,
	0, 582, 0, 583, 584, 585, 586, 588, 556, 589,
	594, 595, 682, 590, 591, 592, 593, 683, 597, 598,
	0, 599, 600, 0, 596, 587, 0, 601, 602, 603,
	604, 605, 606, 607, 362, 608, 0, 609, 684, 685,
	686, 687, 0, 618, 0, 610, 611, 612, 688, 613,
	689, 0, 614, 615, 616, 617, 0, 619, 620, 0,
	0, 621, 622, 623, 625, 626, 624, 627, 0, 628,
	0, 0, 629, 630, 631, 690, 691, 692, 0, 633,
	632, 634, 635, 693, 636, 637, 1318, 0, 271, 0,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 286, 287, 0, 288, 289,
	290, 291, 292, 293, 644, 645, 0, 294, 646, 295,
	647, 0, 648, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 649, 650, 651, 0, 303, 304, 652,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 337, 653,
	654, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 354, 0, 355, 356, 655,
	357, 358, 359, 361, 363, 360, 364, 365, 366, 367,
	656, 657, 368, 0, 274, 0, 0, 0, 0, 0,
	369, 370, 371, 658, 0, 0, 0, 372, 0, 373,
	374, 0, 0, 0, 375, 376, 377, 659, 660, 378,
	379, 380, 381, 382, 383, 384, 385, 386, 0, 387,
	661, 0, 662, 388, 0, 389, 390, 391, 392, 393,
	1317, 664, 665, 479, 0, 394, 395, 0, 396, 397,
	398, 399, 400, 0, 0, 0, 275, 401, 402, 403,
	405, 0, 0, 404, 666, 667, 0, 668, 0, 406,
	407, 0, 669, 0, 408, 409, 410, 0, 411, 0,
	0, 0, 412, 413, 414, 415, 416, 417, 0, 418,
	420, 419, 0, 421, 670, 0, 422, 423, 0, 0,
	424, 425, 426, 427, 428, 429, 432, 0, 0, 430,
	431, 433, 434, 0, 435, 436, 438, 441, 437, 439,
	440, 442, 455, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 457, 0, 456, 0, 458,
	459, 460, 467, 469, 470, 465, 466, 468, 471, 472,
	462, 463, 474, 464, 0, 473, 461, 0, 276, 0,
	475, 476, 477, 0, 671, 478, 672, 480, 481, 0,
	0, 482, 0, 0, 0, 484, 485, 486, 0, 0,
	487, 488, 673, 0, 489, 0, 674, 490, 491, 483,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 0,
	501, 502, 675, 503, 504, 505, 676, 506, 507, 508,
	677, 509, 678, 510, 511, 0, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 520, 679, 521, 522, 524,
	523, 525, 0, 526, 0, 527, 528, 529, 0, 0,
	0, 0, 0, 530, 0, 532, 533, 534, 535, 531,
	536, 537, 538, 539, 540, 0, 541, 542, 543, 0,
	544, 545, 546, 547, 548, 680, 549, 0, 550, 551,
	557, 558, 559, 552, 553, 560, 561, 562, 563, 564,
	0, 566, 567, 565, 568, 569, 570, 0, 571, 572,
	554, 555, 573, 574, 0, 575, 576, 577, 578, 579,
	580, 581, 681, 0, 582, 0, 583, 584, 585, 586,
	588, 556, 589, 594, 595, 682, 590, 591, 592, 593,
	683, 597, 598, 0, 599, 600, 0, 596, 587, 0,
	601, 602, 603, 604, 605, 606, 607, 362, 608, 0,
	609, 684, 685, 686, 687, 0, 618, 0, 610, 611,
	612, 688, 613, 689, 0, 614, 615, 616, 617, 0,
	619, 620, 0, 0, 621, 622, 623, 625, 626, 624,
	627, 0, 628, 0, 0, 629, 630, 631, 690, 691,
	692, 0, 633, 632, 634, 635, 693, 636, 637, 1315,
	0, 271, 0, 638, 639, 694, 640, 641, 642, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 286, 287,
	0, 288, 289, 290, 291, 292, 293, 644, 645, 0,
	294, 646, 295, 647, 0, 648, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 649, 650, 651, 0,
	303, 304, 652, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 337, 653, 654, 0, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 347,
	348, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 655, 357, 358, 359, 361, 363, 360, 364,
	365, 366, 367, 656, 657, 368, 0, 274, 0, 0,
	0, 0, 0, 369, 370, 371, 658, 0, 0, 0,
	372, 0, 373, 374, 0, 0, 0, 375, 376, 377,
	659, 660, 378, 379, 380, 381, 382, 383, 384, 385,
	386, 0, 387, 661, 0, 662, 388, 0, 389, 390,
	391, 392, 393, 1314, 664, 665, 479, 0, 394, 395,
	0, 396, 397, 398, 399, 400, 0, 0, 0, 275,
	401, 402, 403, 405, 0, 0, 404, 666, 667, 0,
	668, 0, 406, 407, 0, 669, 0, 408, 409, 410,
	0, 411, 0, 0, 0, 412, 413, 414, 415, 416,
	417, 0, 418, 420, 419, 0, 421, 670, 0, 422,
	423, 0, 0, 424, 425, 426, 427, 428, 429, 432,
	0, 0, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 0, 458, 459, 460, 467, 469, 470, 465, 466,
	468, 471, 472, 462, 463, 474, 464, 0, 473, 461,
	0, 276, 0, 475, 476, 477, 0, 671, 478, 672,
	480, 481, 0, 0, 482, 0, 0, 0, 484, 485,
	486, 0, 0, 487, 488, 673, 0, 489, 0, 674,
	490, 491, 483, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 0, 501, 502, 675, 503, 504, 505, 676,
	506, 507, 508, 677, 509, 678, 510, 511, 0, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 520, 679,
	521, 522, 524, 523, 525, 0, 526, 0, 527, 528,
	529, 0, 0, 0, 0, 0, 530, 0, 532, 533,
	534, 535, 531, 536, 537, 538, 539, 540, 0, 541,
	542, 543, 0, 544, 545, 546, 547, 548, 680, 549,
	0, 550, 551, 557, 558, 559, 552, 553, 560, 561,
	562, 563, 564, 0, 566, 567, 565, 568, 569, 570,
	0, 571, 572, 554, 555, 573, 574, 0, 575, 576,
	577, 578, 579, 580, 581, 681, 0, 582, 0, 583,
	584, 585, 586, 588, 556, 589, 594, 595, 682, 590,
	591, 592, 593, 683, 597, 598, 0, 599, 600, 0,
	596, 587, 0, 601, 602, 603, 604, 605, 606, 607,
	362, 608, 0, 609, 684, 685, 686, 687, 0, 618,
	0, 610, 611, 612, 688, 613, 689, 0, 614, 615,
	616, 617, 0, 619, 620, 0, 0, 621, 622, 623,
	625, 626, 624, 627, 0, 628, 0, 0, 629, 630,
	631, 690, 691, 692, 0, 633, 632, 634, 635, 693,
	636, 637, 1310, 0, 271, 0, 638, 639, 694, 640,
	641, 642, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 286, 287, 0, 288, 289, 290, 291, 292, 293,
	644, 645, 0, 294, 646, 295, 647, 0, 648, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 649,
	650, 651, 0, 303, 304, 652, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 337, 653, 654, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 355, 356, 655, 357, 358, 359, 361,
	363, 360, 364, 365, 366, 367, 656, 657, 368, 0,
	274, 0, 0, 0, 0, 0, 369, 370, 371, 658,
	0, 0, 0, 372, 0, 373, 374, 0, 0, 0,
	375, 376, 377, 659, 660, 378, 379, 380, 381, 382,
	383, 384, 385, 386, 0, 387, 661, 0, 662, 388,
	0, 389, 390, 391, 392, 393, 1309, 664, 665, 479,
	0, 394, 395, 0, 396, 397, 398, 399, 400, 0,
	0, 0, 275, 401, 402, 403, 405, 0, 0, 404,
	666, 667, 0, 668, 0, 406, 407, 0, 669, 0,
	408, 409, 410, 0, 411, 0, 0, 0, 412, 413,
	414, 415, 416, 417, 0, 418, 420, 419, 0, 421,
	670, 0, 422, 423, 0, 0, 424, 425, 426, 427,
	428, 429, 432, 0, 0, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 440, 442, 455, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 456, 0, 458, 459, 460, 467, 469,
	470, 465, 466, 468, 471, 472, 462, 463, 474, 464,
	0, 473, 461, 0, 276, 0, 475, 476, 477, 0,
	671, 478, 672, 480, 481, 0, 0, 482, 0, 0,
	0, 484, 485, 486, 0, 0, 487, 488, 673, 0,
	489, 0, 674, 490, 491, 483, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 0, 501, 502, 675, 503,
	504, 505, 676, 506, 507, 508, 677, 509, 678, 510,
	511, 0, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 520, 679, 521, 522, 524, 523, 525, 0, 526,
	0, 527, 528, 529, 0, 0, 0, 0, 0, 530,
	0, 532, 533, 534, 535, 531, 536, 537, 538, 539,
	540, 0, 541, 542, 543, 0, 544, 545, 546, 547,
	548, 680, 549, 0, 550, 551, 557, 558, 559, 552,
	553, 560, 561, 562, 563, 564, 0, 566, 567, 565,
	568, 569, 570, 0, 571, 572, 554, 555, 573, 574,
	0, 575, 576, 577, 578, 579, 580, 581, 681, 0,
	582, 0, 583, 584, 585, 586, 588, 556, 589, 594,
	595, 682, 590, 591, 592, 593, 683, 597, 598, 0,
	599, 600, 0, 596, 587, 0, 601, 602, 603, 604,
	605, 606, 607, 362, 608, 0, 609, 684, 685, 686,
	687, 0, 618, 0, 610, 611, 612, 688, 613, 689,
	0, 614, 615, 616, 617, 0, 619, 620, 0, 0,
	621, 622, 623, 625, 626, 624, 627, 0, 628, 0,
	0, 629, 630, 631, 690, 691, 692, 0, 633, 632,
	634, 635, 693, 636, 637, 696, 0, 271, 0, 638,
	639, 694, 640, 641, 642, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 286, 287, 0, 288, 289, 290,
	291, 292, 293, 644, 645, 0, 294, 646, 295, 647,
	0, 648, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 649, 650, 651, 0, 303, 304, 652, 0,
	0, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 337, 653, 654,
	0, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 347, 348, 0, 349, 350,
	351, 0, 352, 353, 354, 0, 355, 356, 655, 357,
	358, 359, 361, 363, 360, 364, 365, 366, 367, 656,
	657, 368, 0, 274, 0, 0, 0, 0, 0, 369,
	370, 371, 658, 0, 0, 0, 372, 0, 373, 374,
	0, 0, 0, 375, 376, 377, 659, 660, 378, 379,
	380, 381, 382, 383, 384, 385, 386, 0, 387, 661,
	0, 662, 388, 0, 389, 390, 391, 392, 393, 663,
	664, 665, 479, 0, 394, 395, 0, 396, 397, 398,
	399, 400, 0, 0, 0, 275, 401, 402, 403, 405,
	0, 0, 404, 666, 667, 0, 668, 0, 406, 407,
	0, 669, 0, 408, 409, 410, 0, 411, 0, 0,
	0, 412, 413, 414, 415, 416, 417, 0, 418, 420,
	419, 0, 421, 670, 0, 422, 423, 0, 0, 424,
	425, 426, 427, 428, 429, 432, 0, 0, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 0, 458, 459,
	460, 467, 469, 470, 465, 466, 468, 471, 472, 462,
	463, 474, 464, 0, 473, 461, 0, 276, 0, 475,
	476, 477, 0, 671, 478, 672, 480, 481, 0, 0,
	482, 0, 0, 0, 484, 485, 486, 0, 0, 487,
	488, 673, 0, 489, 0, 674, 490, 491, 483, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 0, 501,
	502, 675, 503, 504, 505, 676, 506, 507, 508, 677,
	509, 678, 510, 511, 0, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 520, 679, 521, 522, 524, 523,
	525, 0, 526, 0, 527, 528, 529, 0, 0, 0,
	0, 0, 530, 0, 532, 533, 534, 535, 531, 536,
	537, 538, 539, 540, 0, 541, 542, 543, 0, 544,
	545, 546, 547, 548, 680, 549, 0, 550, 551, 557,
	558, 559, 552, 553, 560, 561, 562, 563, 564, 0,
	566, 567, 565, 568, 569, 570, 0, 571, 572, 554,
	555, 573, 574, 0, 575, 576, 577, 578, 579, 580,
	581, 681, 0, 582, 0, 583, 584, 585, 586, 588,
	556, 589, 594, 595, 682, 590, 591, 592, 593, 683,
	597, 598, 0, 599, 600, 0, 596, 587, 0, 601,
	602, 603, 604, 605, 606, 607, 362, 608, 0, 609,
	684, 685, 686, 687, 0, 618, 0, 610, 611, 612,
	688, 613, 689, 0, 614, 615, 616, 617, 0, 619,
	620, 0, 0, 621, 622, 623, 625, 626, 624, 627,
	0, 628, 0, 0, 629, 630, 631, 690, 691, 692,
	0, 633, 632, 634, 635, 693, 636, 637, 262, 0,
	271, 0, 638, 639, 694, 640, 641, 642, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 643, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 644, 645, 0, 294,
	646, 295, 647, 0, 648, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 649, 650, 651, 0, 303,
	304, 652, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 653, 654, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 355,
	356, 655, 357, 358, 359, 361, 363, 360, 364, 365,
	366, 367, 656, 657, 368, 0, 274, 0, 0, 0,
	0, 0, 369, 370, 371, 658, 0, 0, 0, 372,
	0, 373, 374, 0, 0, 0, 375, 376, 377, 659,
	660, 378, 379, 380, 381, 382, 383, 384, 385, 386,
	0, 387, 661, 0, 662, 388, 0, 389, 390, 391,
	392, 393, 663, 664, 665, 479, 0, 394, 395, 0,
	396, 397, 398, 399, 400, 0, 0, 0, 275, 401,
	402, 403, 405, 0, 0, 404, 666, 667, 0, 668,
	0, 406, 407, 0, 669, 0, 408, 409, 410, 0,
	411, 0, 0, 0, 412, 413, 414, 415, 416, 417,
	0, 418, 420, 419, 0, 421, 670, 0, 422, 423,
	0, 0, 424, 425, 426, 427, 428, 429, 432, 0,
	0, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	0, 458, 459, 460, 467, 469, 470, 465, 466, 468,
	471, 472, 462, 463, 474, 464, 0, 473, 461, 0,
	276, 0, 475, 476, 477, 0, 671, 478, 672, 480,
	481, 0, 0, 482, 0, 0, 0, 484, 485, 486,
	0, 0, 487, 488, 673, 0, 489, 0, 674, 490,
	491, 483, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 0, 501, 502, 675, 503, 504, 505, 676, 506,
	507, 508, 677, 509, 678, 510, 511, 0, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 520, 679, 521,
	522, 524, 523, 525, 0, 526, 0, 527, 528, 529,
	0, 0, 0, 0, 0, 530, 0, 532, 533, 534,
	535, 531, 536, 537, 538, 539, 540, 0, 541, 542,
	543, 0, 544, 545, 546, 547, 548, 680, 549, 0,
	550, 551, 557, 558, 559, 552, 553, 560, 561, 562,
	563, 564, 0, 566, 567, 565, 568, 569, 570, 0,
	571, 572, 554, 555, 573, 574, 0, 575, 576, 577,
	578, 579, 580, 581, 681, 0, 582, 0, 583, 584,
	585, 586, 588, 556, 589, 594, 595, 682, 590, 591,
	592, 593, 683, 597, 598, 0, 599, 600, 0, 596,
	587, 0, 601, 602, 603, 604, 605, 606, 607, 362,
	608, 0, 609, 684, 685, 686, 687, 0, 618, 0,
	610, 611, 612, 688, 613, 689, 0, 614, 615, 616,
	617, 0, 619, 620, 0, 0, 621, 622, 623, 625,
	626, 624, 627, 0, 628, 0, 0, 629, 630, 631,
	690, 691, 692, 0, 633, 632, 634, 635, 693, 636,
	637, 271, 0, 0, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 286, 287,
	0, 288, 289, 290, 291, 292, 293, 644, 645, 0,
	294, 646, 295, 647, 0, 648, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 649, 650, 651, 0,
	303, 304, 652, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 337, 653, 654, 0, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 347,
	348, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 655, 357, 358, 359, 361, 363, 360, 364,
	365, 366, 367, 656, 657, 368, 0, 274, 0, 0,
	0, 0, 0, 369, 370, 371, 658, 0, 0, 0,
	372, 0, 373, 374, 0, 0, 0, 375, 376, 377,
	659, 660, 378, 379, 380, 381, 382, 383, 384, 385,
	386, 0, 387, 661, 0, 662, 388, 0, 389, 390,
	391, 392, 393, 663, 664, 665, 479, 0, 394, 395,
	0, 396, 397, 398, 399, 400, 0, 0, 0, 275,
	401, 402, 403, 405, 0, 0, 404, 666, 667, 0,
	668, 0, 406, 407, 0, 669, 0, 408, 409, 410,
	0, 411, 0, 0, 0, 412, 413, 414, 415, 416,
	417, 0, 418, 420, 419, 0, 421, 670, 0, 422,
	423, 0, 0, 424, 425, 426, 427, 428, 429, 432,
	0, 0, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 0, 458, 459, 460, 467, 469, 470, 465, 466,
	468, 471, 472, 462, 463, 474, 464, 0, 473, 461,
	0, 276, 0, 475, 476, 477, 0, 671, 478, 672,
	480, 481, 0, 0, 482, 0, 0, 0, 484, 485,
	486, 0, 0, 487, 488, 673, 0, 489, 0, 674,
	490, 491, 483, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 0, 501, 502, 675, 503, 504, 505, 676,
	506, 507, 508, 677, 509, 678, 510, 511, 0, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 520, 679,
	521, 522, 524, 523, 525, 0, 526, 0, 527, 528,
	529, 0, 0, 0, 0, 0, 530, 0, 532, 533,
	534, 535, 531, 536, 537, 538, 539, 540, 0, 541,
	542, 543, 0, 544, 545, 546, 547, 548, 680, 549,
	0, 550, 551, 557, 558, 559, 552, 553, 560, 561,
	562, 563, 564, 0, 566, 567, 565, 568, 569, 570,
	0, 571, 572, 554, 555, 573, 574, 0, 575, 576,
	577, 578, 579, 580, 581, 681, 0, 582, 0, 583,
	584, 585, 586, 588, 556, 589, 594, 595, 682, 590,
	591, 592, 593, 683, 597, 598, 0, 599, 600, 0,
	596, 587, 0, 601, 602, 603, 604, 605, 606, 607,
	362, 608, 0, 609, 684, 685, 686, 687, 0, 618,
	0, 610, 611, 612, 688, 613, 689, 0, 614, 615,
	616, 617, 0, 619, 620, 0, 0, 621, 622, 623,
	625, 626, 624, 627, 0, 628, 0, 0, 629, 630,
	631, 690, 691, 692, 0, 633, 632, 634, 635, 693,
	636, 637, 271, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 0, 286,
	287, 0, 288, 289, 290, 291, 292, 293, 644, 645,
	0, 294, 646, 295, 647, 0, 648, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 649, 650, 651,
	0, 303, 304, 652, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	718, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 337, 653, 654, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 355, 356, 655, 357, 358, 359, 361, 363, 360,
	364, 365, 366, 367, 656, 657, 368, 0, 0, 0,
	0, 0, 0, 0, 369, 370, 371, 658, 0, 0,
	0, 372, 0, 373, 374, 0, 0, 0, 375, 376,
	377, 659, 660, 378, 379, 380, 381, 382, 383, 384,
	385, 386, 719, 387, 661, 0, 662, 388, 0, 389,
	390, 391, 392, 393, 663, 664, 665, 479, 0, 394,
	395, 0, 396, 397, 398, 399, 400, 0, 0, 0,
	0, 401, 402, 403, 405, 0, 0, 404, 666, 667,
	0, 668, 0, 406, 407, 0, 669, 0, 408, 409,
	410, 0, 411, 0, 0, 0, 412, 413, 414, 415,
	416, 417, 0, 418, 420, 419, 0, 421, 670, 0,
	422, 423, 0, 0, 424, 425, 426, 427, 428, 429,
	432, 0, 0, 430, 431, 433, 434, 0, 435, 436,
	438, 441, 437, 439, 440, 442, 455, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 457,
	0, 456, 0, 458, 459, 460, 467, 469, 470, 465,
	466, 468, 471, 472, 462, 463, 474, 464, 0, 473,
	461, 0, 0, 0, 475, 476, 477, 0, 671, 478,
	672, 480, 481, 0, 0, 482, 0, 0, 0, 484,
	485, 486, 0, 0, 487, 488, 673, 0, 489, 0,
	674, 490, 491, 483, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 0, 501, 502, 675, 503, 504, 505,
	676, 506, 507, 508, 677, 509, 678, 510, 511, 0,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 520,
	679, 521, 522, 524, 523, 525, 0, 526, 0, 527,
	528, 529, 0, 0, 0, 0, 0, 530, 0, 532,
	533, 534, 535, 531, 536, 537, 538, 539, 540, 0,
	541, 542, 543, 0, 544, 545, 546, 547, 548, 680,
	549, 0, 550, 551, 557, 558, 559, 552, 553, 560,
	561, 562, 563, 564, 720, 566, 567, 565, 568, 569,
	570, 0, 571, 572, 554, 555, 573, 574, 0, 575,
	576, 577, 578, 579, 580, 581, 681, 0, 582, 0,
	583, 584, 585, 586, 588, 556, 589, 594, 595, 682,
	590, 591, 592, 593, 683, 597, 598, 0, 599, 600,
	0, 596, 587, 0, 601, 602, 603, 604, 605, 606,
	607, 362, 608, 0, 609, 684, 685, 686, 687, 0,
	618, 0, 610, 611, 612, 688, 613, 689, 0, 614,
	615, 616, 617, 0, 619, 620, 0, 0, 621, 622,
	623, 625, 626, 624, 627, 0, 628, 0, 0, 629,
	630, 631, 690, 691, 692, 0, 633, 632, 634, 635,
	693, 636, 637, 271, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 0, 0, 0, 0, 0, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	286, 287, 0, 288, 289, 290, 291, 292, 293, 644,
	645, 0, 294, 646, 295, 647, 0, 648, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 649, 650,
	651, 0, 303, 304, 652, 0, 0, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 2375,
	334, 0, 335, 337, 653, 654, 0, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 347, 348, 0, 349, 350, 351, 0, 352, 353,
	354, 0, 355, 356, 655, 357, 358, 359, 361, 363,
	360, 364, 365, 366, 367, 656, 657, 368, 0, 274,
	0, 0, 0, 0, 0, 369, 370, 371, 658, 0,
	0, 0, 372, 0, 373, 374, 0, 0, 0, 375,
	376, 377, 659, 660, 378, 379, 380, 381, 382, 383,
	384, 385, 386, 0, 387, 661, 0, 662, 388, 0,
	389, 390, 391, 392, 393, 663, 664, 665, 479, 0,
	394, 395, 0, 396, 397, 398, 399, 400, 0, 0,
	0, 275, 401, 402, 403, 405, 0, 0, 404, 666,
	667, 0, 668, 0, 406, 407, 0, 669, 0, 408,
	409, 410, 0, 411, 0, 0, 0, 412, 413, 414,
	415, 416, 417, 0, 418, 420, 419, 0, 421, 670,
	0, 422, 423, 0, 0, 424, 425, 426, 427, 428,
	429, 432, 0, 0, 430, 431, 433, 434, 0, 435,
	436, 438, 441, 437, 439, 440, 442, 455, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	457, 0, 456, 0, 458, 459, 460, 467, 469, 470,
	465, 466, 468, 471, 472, 462, 463, 474, 464, 0,
	473, 461, 0, 276, 0, 475, 476, 477, 0, 671,
	478, 672, 480, 481, 0, 0, 482, 0, 0, 0,
	484, 485, 486, 0, 0, 487, 488, 673, 0, 489,
	0, 674, 490, 491, 483, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 0, 501, 502, 675, 503, 504,
	505, 676, 506, 507, 508, 677, 509, 678, 510, 511,
	0, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	520, 679, 521, 522, 524, 523, 525, 0, 526, 0,
	527, 528, 529, 0, 0, 0, 0, 0, 530, 0,
	532, 533, 534, 535, 531, 536, 537, 538, 539, 540,
	0, 541, 542, 543, 0, 544, 545, 546, 547, 548,
	680, 549, 0, 550, 551, 557, 558, 559, 552, 553,
	560, 561, 562, 563, 564, 0, 566, 567, 565, 568,
	569, 570, 0, 571, 572, 554, 555, 573, 574, 0,
	575, 576, 577, 578, 579, 580, 581, 681, 0, 582,
	0, 583, 584, 585, 586, 588, 556, 589, 594, 595,
	682, 590, 591, 592, 593, 683, 597, 598, 0, 599,
	600, 0, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 362, 608, 0, 609, 684, 685, 686, 687,
	0, 618, 0, 610, 611, 612, 688, 613, 689, 0,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 0, 628, 0, 0,
	629, 630, 631, 690, 691, 692, 0, 633, 632, 634,
	635, 693, 636, 637, 271, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 286, 287, 0, 288, 289, 290, 291, 292, 293,
	644, 645, 0, 294, 646, 295, 647, 0, 648, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 649,
	650, 651, 0, 303, 304, 652, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	2373, 334, 0, 335, 337, 653, 654, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 355, 356, 655, 357, 358, 359, 361,
	363, 360, 364, 365, 366, 367, 656, 657, 368, 0,
	274, 0, 0, 0, 0, 0, 369, 370, 371, 658,
	0, 0, 0, 372, 0, 373, 374, 0, 0, 0,
	375, 376, 377, 659, 660, 378, 379, 380, 381, 382,
	383, 384, 385, 386, 0, 387, 661, 0, 662, 388,
	0, 389, 390, 391, 392, 393, 663, 664, 665, 479,
	0, 394, 395, 0, 396, 397, 398, 399, 400, 0,
	0, 0, 275, 401, 402, 403, 405, 0, 0, 404,
	666, 667, 0, 668, 0, 406, 407, 0, 669, 0,
	408, 409, 410, 0, 411, 0, 0, 0, 412, 413,
	414, 415, 416, 417, 0, 418, 420, 419, 0, 421,
	670, 0, 422, 423, 0, 0, 424, 425, 426, 427,
	428, 429, 432, 0, 0, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 440, 442, 455, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 456, 0, 458, 459, 460, 467, 469,
	470, 465, 466, 468, 471, 472, 462, 463, 474, 464,
	0, 473, 461, 0, 276, 0, 475, 476, 477, 0,
	671, 478, 672, 480, 481, 0, 0, 482, 0, 0,
	0, 484, 485, 486, 0, 0, 487, 488, 673, 0,
	489, 0, 674, 490, 491, 483, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 0, 501, 502, 675, 503,
	504, 505, 676, 506, 507, 508, 677, 509, 678, 510,
	511, 0, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 520, 679, 521, 522, 524, 523, 525, 0, 526,
	0, 527, 528, 529, 0, 0, 0, 0, 0, 530,
	0, 532, 533, 534, 535, 531, 536, 537, 538, 539,
	540, 0, 541, 542, 543, 0, 544, 545, 546, 547,
	548, 680, 549, 0, 550, 551, 557, 558, 559, 552,
	553, 560, 561, 562, 563, 564, 0, 566, 567, 565,
	568, 569, 570, 0, 571, 572, 554, 555, 573, 574,
	0, 575, 576, 577, 578, 579, 580, 581, 681, 0,
	582, 0, 583, 584, 585, 586, 588, 556, 589, 594,
	595, 682, 590, 591, 592, 593, 683, 597, 598, 0,
	599, 600, 0, 596, 587, 0, 601, 602, 603, 604,
	605, 606, 607, 362, 608, 0, 609, 684, 685, 686,
	687, 0, 618, 0, 610, 611, 612, 688, 613, 689,
	0, 614, 615, 616, 617, 0, 619, 620, 0, 0,
	621, 622, 623, 625, 626, 624, 627, 0, 628, 0,
	0, 629, 630, 631, 690, 691, 692, 0, 633, 632,
	634, 635, 693, 636, 637, 271, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 644, 645, 0, 294, 646, 295, 647, 0, 648,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	649, 650, 651, 0, 303, 304, 652, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 2371, 334, 0, 335, 337, 653, 654, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 655, 357, 358, 359,
	361, 363, 360, 364, 365, 366, 367, 656, 657, 368,
	0, 274, 0, 0, 0, 0, 0, 369, 370, 371,
	658, 0, 0, 0, 372, 0, 373, 374, 0, 0,
	0, 375, 376, 377, 659, 660, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 0, 387, 661, 0, 662,
	388, 0, 389, 390, 391, 392, 393, 663, 664, 665,
	479, 0, 394, 395, 0, 396, 397, 398, 399, 400,
	0, 0, 0, 275, 401, 402, 403, 405, 0, 0,
	404, 666, 667, 0, 668, 0, 406, 407, 0, 669,
	0, 408, 409, 410, 0, 411, 0, 0, 0, 412,
	413, 414, 415, 416, 417, 0, 418, 420, 419, 0,
	421, 670, 0, 422, 423, 0, 0, 424, 425, 426,
	427, 428, 429, 432, 0, 0, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 0, 458, 459, 460, 467,
	469, 470, 465, 466, 468, 471, 472, 462, 463, 474,
	464, 0, 473, 461, 0, 276, 0, 475, 476, 477,
	0, 671, 478, 672, 480, 481, 0, 0, 482, 0,
	0, 0, 484, 485, 486, 0, 0, 487, 488, 673,
	0, 489, 0, 674, 490, 491, 483, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 0, 501, 502, 675,
	503, 504, 505, 676, 506, 507, 508, 677, 509, 678,
	510, 511, 0, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 520, 679, 521, 522, 524, 523, 525, 0,
	526, 0, 527, 528, 529, 0, 0, 0, 0, 0,
	530, 0, 532, 533, 534, 535, 531, 536, 537, 538,
	539, 540, 0, 541, 542, 543, 0, 544, 545, 546,
	547, 548, 680, 549, 0, 550, 551, 557, 558, 559,
	552, 553, 560, 561, 562, 563, 564, 0, 566, 567,
	565, 568, 569, 570, 0, 571, 572, 554, 555, 573,
	574, 0, 575, 576, 577, 578, 579, 580, 581, 681,
	0, 582, 0, 583, 584, 585, 586, 588, 556, 589,
	594, 595, 682, 590, 591, 592, 593, 683, 597, 598,
	0, 599, 600, 0, 596, 587, 0, 601, 602, 603,
	604, 605, 606, 607, 362, 608, 0, 609, 684, 685,
	686, 687, 0, 618, 0, 610, 611, 612, 688, 613,
	689, 0, 614, 615, 616, 617, 0, 619, 620, 0,
	0, 621, 622, 623, 625, 626, 624, 627, 0, 628,
	0, 0, 629, 630, 631, 690, 691, 692, 0, 633,
	632, 634, 635, 693, 636, 637, 271, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 286, 287, 0, 288, 289, 290, 291,
	292, 293, 644, 645, 0, 294, 646, 295, 647, 0,
	648, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 649, 650, 651, 0, 303, 304, 652, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 337, 653, 654, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 355, 356, 655, 357, 358,
	359, 361, 363, 360, 364, 365, 366, 367, 656, 657,
	368, 0, 274, 0, 0, 0, 0, 0, 369, 370,
	371, 658, 0, 0, 0, 372, 0, 373, 374, 0,
	0, 0, 375, 376, 377, 659, 660, 378, 379, 380,
	381, 382, 383, 384, 385, 386, 0, 387, 661, 0,
	662, 388, 0, 389, 390, 391, 392, 393, 2287, 664,
	665, 479, 0, 394, 395, 0, 396, 397, 398, 399,
	400, 0, 0, 0, 275, 401, 402, 403, 405, 0,
	0, 404, 666, 667, 0, 668, 0, 406, 407, 0,
	669, 0, 408, 409, 410, 0, 411, 0, 0, 0,
	412, 413, 414, 415, 416, 417, 0, 418, 420, 419,
	0, 421, 670, 0, 422, 423, 0, 0, 424, 425,
	426, 427, 428, 429, 432, 0, 0, 430, 431, 433,
	434, 0, 435, 436, 438, 441, 437, 439, 440, 442,
	455, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 457, 0, 456, 0, 458, 459, 460,
	467, 469, 470, 465, 466, 468, 471, 472, 462, 463,
	474, 464, 0, 473, 461, 0, 276, 0, 475, 476,
	477, 0, 671, 478, 672, 480, 481, 0, 0, 482,
	0, 0, 0, 484, 485, 486, 0, 0, 487, 488,
	673, 0, 489, 0, 674, 490, 491, 483, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 0, 501, 502,
	675, 503, 504, 505, 676, 506, 507, 508, 677, 509,
	678, 510, 511, 0, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 520, 679, 521, 522, 524, 523, 525,
	0, 526, 0, 527, 528, 529, 0, 0, 0, 0,
	0, 530, 0, 532, 533, 534, 535, 531, 536, 537,
	538, 539, 540, 0, 541, 542, 543, 0, 544, 545,
	546, 547, 548, 680, 549, 0, 550, 551, 557, 558,
	559, 552, 553, 560, 561, 562, 563, 564, 0, 566,
	567, 565, 568, 569, 570, 0, 571, 572, 554, 555,
	573, 574, 0, 575, 576, 577, 578, 579, 580, 581,
	681, 0, 582, 0, 583, 584, 585, 586, 588, 556,
	589, 594, 595, 682, 590, 591, 592, 593, 683, 597,
	598, 0, 599, 600, 0, 596, 587, 0, 601, 602,
	603, 604, 605, 606, 607, 362, 608, 0, 609, 684,
	685, 686, 687, 0, 618, 0, 610, 611, 612, 688,
	613, 689, 0, 614, 615, 616, 617, 0, 619, 620,
	0, 0, 621, 622, 623, 625, 626, 624, 627, 0,
	628, 0, 0, 629, 630, 631, 690, 691, 692, 0,
	633, 632, 634, 635, 693, 636, 637, 271, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 0, 0, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 286, 287, 0, 288, 289, 290,
	291, 292, 293, 644, 645, 0, 294, 646, 295, 647,
	0, 648, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 649, 650, 651, 0, 303, 304, 652, 0,
	0, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 337, 653, 654,
	0, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 347, 348, 0, 349, 350,
	351, 0, 352, 353, 354, 0, 355, 356, 655, 357,
	358, 359, 361, 363, 360, 364, 365, 366, 367, 656,
	657, 368, 0, 274, 0, 0, 0, 0, 0, 369,
	370, 371, 658, 0, 0, 0, 372, 0, 373, 374,
	0, 0, 0, 375, 376, 377, 659, 660, 378, 379,
	380, 381, 382, 383, 384, 385, 386, 0, 387, 661,
	0, 662, 388, 0, 389, 390, 391, 392, 393, 2081,
	664, 665, 479, 0, 394, 395, 0, 396, 397, 398,
	399, 400, 0, 0, 0, 275, 401, 402, 403, 405,
	0, 0, 404, 666, 667, 0, 668, 0, 406, 407,
	0, 669, 0, 408, 409, 410, 0, 411, 0, 0,
	0, 412, 413, 414, 415, 416, 417, 0, 418, 420,
	419, 0, 421, 670, 0, 422, 423, 0, 0, 424,
	425, 426, 427, 428, 429, 432, 0, 0, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 0, 458, 459,
	460, 467, 469, 470, 465, 466, 468, 471, 472, 462,
	463, 474, 464, 0, 473, 461, 0, 276, 0, 475,
	476, 477, 0, 671, 478, 672, 480, 481, 0, 0,
	482, 0, 0, 0, 484, 485, 486, 0, 0, 487,
	488, 673, 0, 489, 0, 674, 490, 491, 483, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 0, 501,
	502, 675, 503, 504, 505, 676, 506, 507, 508, 677,
	509, 678, 510, 511, 0, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 520, 679, 521, 522, 524, 523,
	525, 0, 526, 0, 527, 528, 529, 0, 0, 0,
	0, 0, 530, 0, 532, 533, 534, 535, 531, 536,
	537, 538, 539, 540, 0, 541, 542, 543, 0, 544,
	545, 546, 547, 548, 680, 549, 0, 550, 551, 557,
	558, 559, 552, 553, 560, 561, 562, 563, 564, 0,
	566, 567, 565, 568, 569, 570, 0, 571, 572, 554,
	555, 573, 574, 0, 575, 576, 577, 578, 579, 580,
	581, 681, 0, 582, 0, 583, 584, 585, 586, 588,
	556, 589, 594, 595, 682, 590, 591, 592, 593, 683,
	597, 598, 0, 599, 600, 0, 596, 587, 0, 601,
	602, 603, 604, 605, 606, 607, 362, 608, 0, 609,
	684, 685, 686, 687, 0, 618, 0, 610, 611, 612,
	688, 613, 689, 0, 614, 615, 616, 617, 0, 619,
	620, 0, 0, 621, 622, 623, 625, 626, 624, 627,
	0, 628, 0, 0, 629, 630, 631, 690, 691, 692,
	0, 633, 632, 634, 635, 693, 636, 637, 271, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 286, 287, 0, 288, 289,
	290, 291, 292, 293, 644, 645, 0, 294, 646, 295,
	647, 0, 648, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 649, 650, 651, 0, 303, 304, 652,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 337, 653,
	654, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 354, 0, 355, 356, 655,
	357, 358, 359, 361, 363, 360, 364, 365, 366, 367,
	656, 657, 368, 0, 274, 0, 0, 0, 0, 0,
	369, 370, 371, 658, 0, 0, 0, 372, 0, 373,
	374, 0, 0, 0, 375, 376, 377, 659, 660, 378,
	379, 380, 381, 382, 383, 384, 385, 386, 0, 387,
	661, 0, 662, 388, 0, 389, 390, 391, 392, 393,
	2075, 664, 665, 479, 0, 394, 395, 0, 396, 397,
	398, 399, 400, 0, 0, 0, 275, 401, 402, 403,
	405, 0, 0, 404, 666, 667, 0, 668, 0, 406,
	407, 0, 669, 0, 408, 409, 410, 0, 411, 0,
	0, 0, 412, 413, 414, 415, 416, 417, 0, 418,
	420, 419, 0, 421, 670, 0, 422, 423, 0, 0,
	424, 425, 426, 427, 428, 429, 432, 0, 0, 430,
	431, 433, 434, 0, 435, 436, 438, 441, 437, 439,
	440, 442, 455, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 457, 0, 456, 0, 458,
	459, 460, 467, 469, 470, 465, 466, 468, 471, 472,
	462, 463, 474, 464, 0, 473, 461, 0, 276, 0,
	475, 476, 477, 0, 671, 478, 672, 480, 481, 0,
	0, 482, 0, 0, 0, 484, 485, 486, 0, 0,
	487, 488, 673, 0, 489, 0, 674, 490, 491, 483,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 0,
	501, 502, 675, 503, 504, 505, 676, 506, 507, 508,
	677, 509, 678, 510, 511, 0, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 520, 679, 521, 522, 524,
	523, 525, 0, 526, 0, 527, 528, 529, 0, 0,
	0, 0, 0, 530, 0, 532, 533, 534, 535, 531,
	536, 537, 538, 539, 540, 0, 541, 542, 543, 0,
	544, 545, 546, 547, 548, 680, 549, 0, 550, 551,
	557, 558, 559, 552, 553, 560, 561, 562, 563, 564,
	0, 566, 567, 565, 568, 569, 570, 0, 571, 572,
	554, 555, 573, 574, 0, 575, 576, 577, 578, 579,
	580, 581, 681, 0, 582, 0, 583, 584, 585, 586,
	588, 556, 589, 594, 595, 682, 590, 591, 592, 593,
	683, 597, 598, 0, 599, 600, 0, 596, 587, 0,
	601, 602, 603, 604, 605, 606, 607, 362, 608, 0,
	609, 684, 685, 686, 687, 0, 618, 0, 610, 611,
	612, 688, 613, 689, 0, 614, 615, 616, 617, 0,
	619, 620, 0, 0, 621, 622, 623, 625, 626, 624,
	627, 0, 628, 0, 0, 629, 630, 631, 690, 691,
	692, 0, 633, 632, 634, 635, 693, 636, 637, 903,
	0, 271, 0, 638, 639, 694, 640, 641, 642, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 286, 287,
	0, 288, 289, 290, 291, 292, 293, 644, 645, 0,
	294, 646, 295, 647, 0, 648, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 649, 650, 651, 0,
	303, 304, 652, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 337, 653, 654, 0, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 347,
	348, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 655, 357, 358, 359, 361, 363, 360, 364,
	365, 366, 367, 656, 657, 368, 0, 0, 0, 0,
	0, 0, 0, 369, 370, 371, 658, 0, 0, 0,
	372, 0, 373, 374, 0, 0, 0, 375, 376, 377,
	659, 660, 378, 379, 380, 381, 382, 383, 384, 385,
	386, 0, 387, 661, 0, 662, 388, 0, 389, 390,
	391, 392, 393, 663, 664, 665, 479, 0, 394, 395,
	0, 396, 397, 398, 399, 400, 0, 0, 0, 0,
	401, 402, 403, 405, 0, 0, 404, 666, 667, 0,
	668, 902, 406, 407, 0, 669, 0, 408, 409, 410,
	0, 411, 0, 0, 0, 412, 413, 414, 415, 416,
	417, 0, 418, 420, 419, 0, 421, 670, 0, 422,
	423, 0, 0, 424, 425, 426, 427, 428, 429, 432,
	0, 0, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 0, 458, 459, 460, 467, 469, 470, 465, 466,
	468, 471, 472, 462, 463, 474, 464, 0, 473, 461,
	0, 0, 0, 475, 476, 477, 0, 671, 478, 672,
	480, 481, 0, 0, 482, 0, 0, 0, 484, 485,
	486, 0, 0, 487, 488, 673, 0, 489, 0, 674,
	490, 491, 483, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 0, 501, 502, 675, 503, 504, 505, 676,
	506, 507, 508, 677, 509, 678, 510, 511, 0, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 520, 679,
	521, 522, 524, 523, 525, 0, 526, 0, 527, 528,
	529, 0, 0, 0, 0, 0, 530, 0, 532, 533,
	534, 535, 531, 536, 537, 538, 539, 540, 0, 541,
	542, 543, 0, 544, 545, 546, 547, 548, 680, 549,
	0, 550, 551, 557, 558, 559, 552, 553, 560, 561,
	562, 563, 564, 0, 566, 567, 565, 568, 569, 570,
	0, 571, 572, 554, 555, 573, 574, 0, 575, 576,
	577, 578, 579, 580, 581, 681, 0, 582, 0, 583,
	584, 585, 586, 588, 556, 589, 594, 595, 682, 590,
	591, 592, 593, 683, 597, 598, 0, 599, 600, 0,
	596, 587, 901, 601, 602, 603, 604, 605, 606, 607,
	362, 608, 0, 609, 684, 685, 686, 687, 0, 618,
	0, 610, 611, 612, 688, 613, 689, 0, 614, 615,
	616, 617, 0, 619, 620, 0, 0, 621, 622, 623,
	625, 626, 624, 627, 0, 628, 0, 0, 629, 630,
	631, 690, 691, 692, 0, 633, 632, 634, 635, 693,
	636, 637, 271, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 0, 286,
	287, 0, 288, 289, 290, 291, 292, 293, 644, 645,
	0, 294, 646, 295, 647, 0, 648, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 649, 650, 651,
	0, 303, 304, 652, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 337, 653, 654, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 355, 356, 655, 357, 358, 359, 361, 363, 360,
	364, 365, 366, 367, 656, 657, 368, 0, 3113, 0,
	0, 0, 0, 0, 369, 370, 371, 658, 0, 0,
	0, 372, 0, 373, 374, 0, 0, 0, 375, 376,
	377, 659, 660, 378, 379, 380, 381, 382, 383, 384,
	385, 386, 0, 387, 661, 0, 662, 388, 0, 389,
	390, 391, 392, 393, 663, 664, 665, 479, 0, 394,
	395, 0, 396, 397, 398, 399, 400, 0, 0, 0,
	0, 401, 402, 403, 405, 0, 0, 404, 666, 667,
	0, 668, 0, 406, 407, 0, 669, 0, 408, 409,
	410, 0, 411, 0, 0, 0, 412, 413, 414, 415,
	416, 417, 0, 418, 420, 419, 0, 421, 670, 0,
	422, 423, 0, 0, 424, 425, 426, 427, 428, 429,
	432, 0, 0, 430, 431, 433, 434, 0, 435, 436,
	438, 441, 437, 439, 440, 442, 455, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 457,
	0, 456, 0, 458, 459, 460, 467, 469, 470, 465,
	466, 468, 471, 472, 462, 463, 474, 464, 0, 473,
	461, 0, 0, 0, 475, 476, 477, 0, 671, 478,
	672, 480, 481, 0, 0, 482, 0, 0, 0, 484,
	485, 486, 0, 0, 487, 488, 673, 0, 489, 0,
	674, 490, 491, 483, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 0, 501, 502, 675, 503, 504, 505,
	676, 506, 507, 508, 677, 509, 678, 510, 511, 4272,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 520,
	679, 521, 522, 524, 523, 525, 0, 526, 0, 527,
	528, 529, 0, 0, 0, 0, 0, 530, 0, 532,
	533, 534, 535, 531, 536, 537, 538, 539, 540, 0,
	541, 542, 543, 0, 544, 545, 546, 547, 548, 680,
	549, 0, 550, 551, 557, 558, 559, 552, 553, 560,
	561, 562, 563, 564, 0, 566, 567, 565, 568, 569,
	570, 0, 571, 572, 554, 555, 573, 574, 0, 575,
	576, 577, 578, 579, 580, 581, 681, 0, 582, 0,
	583, 584, 585, 586, 588, 556, 589, 594, 595, 682,
	590, 591, 592, 593, 683, 597, 598, 0, 599, 600,
	0, 596, 587, 0, 601, 602, 603, 604, 605, 606,
	607, 362, 608, 0, 609, 684, 685, 686, 687, 0,
	618, 0, 610, 611, 612, 688, 613, 689, 0, 614,
	615, 616, 617, 0, 619, 620, 0, 0, 621, 622,
	623, 625, 626, 624, 627, 0, 628, 0, 0, 629,
	630, 631, 690, 691, 692, 0, 633, 632, 634, 635,
	693, 636, 637, 1362, 0, 271, 0, 638, 639, 694,
	640, 641, 642, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 286, 287, 1365, 288, 289, 290, 291, 292,
	293, 644, 645, 0, 294, 646, 295, 647, 0, 648,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	649, 650, 1363, 0, 303, 304, 652, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 337, 653, 654, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 655, 357, 358, 359,
	361, 363, 360, 364, 365, 366, 367, 656, 657, 368,
	0, 0, 0, 0, 0, 0, 0, 369, 370, 371,
	658, 0, 0, 0, 372, 0, 373, 374, 0, 0,
	0, 375, 376, 377, 659, 660, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 0, 387, 661, 0, 662,
	388, 0, 389, 390, 391, 392, 393, 663, 664, 665,
	479, 0, 394, 395, 0, 396, 397, 398, 399, 400,
	0, 0, 0, 0, 401, 402, 403, 405, 0, 0,
	404, 666, 667, 0, 668, 0, 406, 407, 0, 669,
	0, 408, 409, 410, 0, 411, 0, 0, 0, 412,
	413, 414, 415, 416, 417, 0, 418, 420, 419, 0,
	421, 670, 0, 422, 423, 0, 0, 424, 425, 426,
	427, 428, 429, 432, 0, 0, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 786, 0, 458, 459, 460, 467,
	469, 470, 465, 466, 468, 471, 472, 462, 463, 474,
	464, 0, 473, 461, 0, 0, 0, 475, 476, 477,
	0, 671, 478, 672, 480, 481, 0, 0, 482, 0,
	0, 0, 484, 485, 486, 0, 0, 487, 488, 673,
	0, 489, 0, 674, 490, 491, 483, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 0, 501, 502, 675,
	503, 504, 505, 676, 506, 507, 508, 677, 509, 678,
	510, 511, 0, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 520, 679, 521, 522, 524, 523, 525, 0,
	526, 0, 527, 528, 529, 0, 0, 0, 0, 0,
	530, 0, 532, 533, 534, 535, 531, 536, 537, 538,
	539, 540, 0, 541, 542, 543, 0, 785, 545, 546,
	547, 548, 680, 549, 0, 550, 551, 557, 558, 559,
	552, 553, 784, 561, 562, 563, 564, 0, 566, 567,
	565, 568, 1366, 570, 0, 571, 572, 554, 555, 573,
	574, 0, 575, 576, 577, 578, 579, 580, 581, 681,
	0, 582, 0, 583, 584, 585, 586, 588, 556, 589,
	594, 595, 682, 590, 591, 592, 593, 683, 597, 598,
	0, 599, 600, 0, 596, 587, 0, 601, 602, 603,
	604, 605, 606, 607, 362, 608, 0, 609, 782, 685,
	686, 687, 0, 618, 0, 610, 611, 612, 688, 613,
	689, 0, 614, 615, 616, 617, 0, 619, 620, 0,
	0, 621, 622, 623, 625, 626, 624, 627, 0, 628,
	0, 0, 629, 630, 631, 690, 691, 692, 0, 633,
	632, 634, 635, 693, 636, 637, 1362, 0, 271, 0,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 286, 287, 1365, 288, 289,
	290, 291, 292, 293, 644, 645, 0, 294, 646, 295,
	647, 0, 648, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 649, 650, 1363, 0, 303, 304, 652,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 337, 653,
	654, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 354, 0, 355, 356, 655,
	357, 358, 359, 361, 363, 360, 364, 365, 366, 367,
	656, 657, 368, 0, 0, 0, 0, 0, 0, 0,
	369, 370, 371, 658, 0, 0, 0, 372, 0, 373,
	374, 0, 0, 0, 375, 376, 377, 659, 660, 378,
	379, 380, 381, 382, 383, 384, 385, 386, 0, 387,
	661, 0, 662, 388, 0, 389, 390, 391, 392, 393,
	663, 664, 665, 479, 0, 394, 395, 0, 396, 397,
	398, 399, 400, 0, 0, 0, 0, 401, 402, 403,
	405, 0, 0, 404, 666, 667, 0, 668, 0, 406,
	407, 0, 669, 0, 408, 409, 410, 0, 411, 0,
	0, 0, 412, 413, 414, 415, 416, 417, 0, 418,
	420, 419, 0, 421, 670, 0, 422, 423, 0, 0,
	424, 425, 426, 427, 428, 429, 432, 0, 0, 430,
	431, 433, 434, 0, 435, 436, 438, 441, 437, 439,
	440, 442, 455, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 457, 0, 786, 0, 458,
	459, 460, 467, 469, 470, 465, 466, 468, 471, 472,
	462, 463, 474, 464, 0, 473, 461, 0, 0, 0,
	475, 476, 477, 0, 671, 478, 672, 480, 481, 0,
	0, 482, 0, 0, 0, 484, 485, 486, 0, 0,
	487, 488, 673, 0, 489, 0, 674, 490, 491, 483,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 0,
	501, 502, 675, 503, 504, 505, 676, 506, 507, 508,
	677, 509, 678, 510, 511, 0, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 520, 679, 521, 522, 524,
	523, 525, 0, 526, 0, 527, 528, 529, 0, 0,
	0, 0, 0, 530, 0, 532, 533, 534, 535, 531,
	536, 537, 538, 539, 540, 0, 541, 542, 543, 0,
	785, 545, 546, 547, 548, 680, 549, 0, 550, 551,
	557, 558, 559, 552, 553, 784, 561, 562, 563, 564,
	0, 566, 567, 565, 568, 1366, 570, 0, 571, 572,
	554, 555, 573, 574, 0, 575, 576, 577, 578, 579,
	580, 581, 681, 0, 582, 0, 583, 584, 585, 586,
	588, 556, 589, 594, 595, 682, 590, 591, 592, 593,
	683, 597, 598, 0, 599, 600, 0, 596, 587, 0,
	601, 602, 603, 604, 605, 606, 607, 362, 608, 0,
	609, 782, 685, 686, 687, 0, 618, 0, 610, 1364,
	612, 688, 613, 689, 0, 614, 615, 616, 617, 0,
	619, 620, 0, 0, 621, 622, 623, 625, 626, 624,
	627, 0, 628, 0, 0, 629, 630, 631, 690, 691,
	692, 0, 633, 632, 634, 635, 693, 636, 637, 705,
	0, 271, 0, 638, 639, 694, 640, 641, 642, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 704, 284, 285, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 286, 287,
	0, 288, 289, 290, 291, 292, 293, 644, 645, 0,
	294, 646, 295, 647, 0, 648, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 649, 650, 651, 0,
	303, 304, 652, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 337, 653, 654, 0, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 347,
	348, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 655, 357, 358, 359, 361, 363, 360, 364,
	365, 366, 367, 656, 657, 368, 0, 0, 0, 0,
	0, 0, 0, 369, 370, 371, 658, 0, 0, 0,
	372, 0, 373, 374, 0, 0, 0, 375, 376, 377,
	659, 660, 378, 379, 380, 381, 382, 383, 384, 385,
	386, 0, 387, 661, 0, 662, 388, 0, 389, 390,
	391, 392, 393, 663, 664, 665, 479, 0, 394, 395,
	0, 396, 397, 398, 399, 400, 0, 0, 0, 0,
	401, 402, 403, 405, 0, 0, 404, 666, 667, 0,
	668, 0, 406, 407, 0, 669, 0, 408, 409, 410,
	0, 411, 0, 0, 0, 412, 413, 414, 415, 416,
	417, 0, 418, 420, 419, 0, 421, 670, 0, 422,
	423, 0, 0, 424, 425, 426, 427, 428, 429, 432,
	0, 0, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 0, 458, 459, 460, 467, 469, 470, 465, 466,
	468, 471, 472, 462, 463, 474, 464, 0, 473, 461,
	0, 0, 0, 475, 476, 477, 0, 671, 478, 672,
	480, 481, 0, 0, 482, 0, 0, 0, 484, 485,
	486, 0, 0, 487, 488, 673, 0, 489, 0, 674,
	490, 491, 483, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 0, 501, 502, 675, 503, 504, 505, 676,
	506, 507, 508, 677, 509, 678, 703, 511, 0, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 520, 679,
	521, 522, 524, 523, 525, 0, 526, 0, 527, 528,
	529, 0, 0, 0, 0, 0, 530, 0, 532, 533,
	534, 535, 531, 536, 537, 538, 539, 540, 0, 541,
	542, 543, 0, 544, 545, 546, 547, 548, 680, 549,
	0, 550, 551, 557, 558, 559, 552, 553, 560, 561,
	562, 563, 564, 0, 566, 567, 565, 568, 569, 570,
	0, 571, 572, 554, 555, 573, 574, 0, 575, 576,
	577, 578, 579, 580, 581, 681, 0, 582, 0, 583,
	584, 585, 586, 588, 556, 589, 594, 595, 682, 590,
	591, 592, 593, 683, 597, 598, 0, 599, 600, 0,
	596, 587, 0, 601, 602, 603, 604, 605, 606, 607,
	362, 608, 0, 609, 684, 685, 686, 687, 0, 618,
	0, 610, 611, 612, 688, 613, 689, 0, 614, 615,
	616, 617, 0, 619, 620, 0, 0, 621, 622, 623,
	625, 626, 624, 627, 0, 628, 0, 0, 629, 630,
	631, 690, 691, 692, 0, 633, 632, 634, 635, 693,
	636, 637, 271, 3100, 0, 0, 638, 639, 694, 640,
	641, 642, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 0, 286,
	287, 0, 288, 289, 290, 291, 292, 293, 644, 645,
	0, 294, 646, 295, 647, 0, 648, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 649, 650, 651,
	0, 303, 304, 652, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 337, 653, 654, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 355, 356, 655, 357, 358, 359, 361, 363, 360,
	364, 365, 366, 367, 656, 657, 368, 0, 0, 0,
	0, 0, 0, 0, 369, 370, 371, 658, 0, 0,
	0, 372, 0, 373, 374, 0, 0, 0, 375, 376,
	377, 659, 660, 378, 379, 380, 381, 382, 383, 384,
	385, 386, 0, 387, 661, 0, 662, 388, 0, 389,
	390, 391, 392, 393, 663, 664, 665, 479, 0, 394,
	395, 0, 396, 397, 398, 399, 400, 0, 0, 0,
	0, 401, 402, 403, 405, 0, 0, 404, 666, 667,
	0, 668, 0, 406, 407, 0, 669, 0, 408, 409,
	410, 0, 411, 0, 0, 0, 412, 413, 414, 415,
	416, 417, 0, 418, 420, 419, 0, 421, 670, 0,
	422, 423, 0, 0, 424, 425, 426, 427, 428, 429,
	432, 0, 0, 430, 431, 433, 434, 0, 435, 436,
	438, 441, 437, 439, 440, 442, 455, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 457,
	0, 456, 0, 458, 459, 460, 467, 469, 470, 465,
	466, 468, 471, 472, 462, 463, 474, 464, 0, 473,
	461, 0, 0, 0, 475, 476, 477, 0, 671, 478,
	672, 480, 481, 0, 0, 482, 0, 0, 0, 484,
	485, 486, 0, 0, 487, 488, 673, 0, 489, 0,
	674, 490, 491, 483, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 0, 501, 502, 675, 503, 504, 505,
	676, 506, 507, 508, 677, 509, 678, 510, 511, 0,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 520,
	679, 521, 522, 524, 523, 525, 0, 526, 0, 527,
	528, 529, 0, 0, 0, 0, 0, 530, 0, 532,
	533, 534, 535, 531, 536, 537, 538, 539, 540, 0,
	541, 542, 543, 0, 544, 545, 546, 547, 548, 680,
	549, 0, 550, 551, 557, 558, 559, 552, 553, 560,
	561, 562, 563, 564, 0, 566, 567, 565, 568, 569,
	570, 0, 571, 572, 554, 555, 573, 574, 0, 575,
	576, 577, 578, 579, 580, 581, 681, 0, 582, 0,
	583, 584, 585, 586, 588, 556, 589, 594, 595, 682,
	590, 591, 592, 593, 683, 597, 598, 0, 599, 600,
	0, 596, 587, 0, 601, 602, 603, 604, 605, 606,
	607, 362, 608, 0, 609, 684, 685, 686, 687, 0,
	618, 0, 610, 611, 612, 688, 613, 689, 0, 614,
	615, 616, 617, 0, 619, 620, 0, 0, 621, 622,
	623, 625, 626, 624, 627, 0, 628, 0, 0, 629,
	630, 631, 690, 691, 692, 0, 633, 632, 634, 635,
	693, 636, 637, 271, 4282, 0, 0, 638, 639, 694,
	640, 641, 642, 0, 0, 0, 0, 0, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	286, 287, 0, 288, 289, 290, 291, 292, 293, 644,
	645, 0, 294, 646, 295, 647, 0, 648, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 649, 650,
	651, 0, 303, 304, 652, 0, 0, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 337, 653, 654, 0, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 347, 348, 0, 349, 350, 351, 0, 352, 353,
	354, 0, 355, 356, 655, 357, 358, 359, 361, 363,
	360, 364, 365, 366, 367, 656, 657, 368, 0, 0,
	0, 0, 0, 0, 0, 369, 370, 371, 658, 0,
	0, 0, 372, 0, 373, 374, 0, 0, 0, 375,
	376, 377, 659, 660, 378, 379, 380, 381, 382, 383,
	384, 385, 386, 0, 387, 661, 0, 662, 388, 0,
	389, 390, 391, 392, 393, 663, 664, 665, 479, 0,
	394, 395, 0, 396, 397, 398, 399, 400, 0, 0,
	0, 0, 401, 402, 403, 405, 0, 0, 404, 666,
	667, 0, 668, 0, 406, 407, 0, 669, 0, 408,
	409, 410, 0, 411, 0, 0, 0, 412, 413, 414,
	415, 416, 417, 0, 418, 420, 419, 0, 421, 670,
	0, 422, 423, 0, 0, 424, 425, 426, 427, 428,
	429, 432, 0, 0, 430, 431, 433, 434, 0, 435,
	436, 438, 441, 437, 439, 440, 442, 455, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	457, 0, 456, 0, 458, 459, 460, 467, 469, 470,
	465, 466, 468, 471, 472, 462, 463, 474, 464, 0,
	473, 461, 0, 0, 0, 475, 476, 477, 0, 671,
	478, 672, 480, 481, 0, 0, 482, 0, 0, 0,
	484, 485, 486, 0, 0, 487, 488, 673, 0, 489,
	0, 674, 490, 491, 483, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 0, 501, 502, 675, 503, 504,
	505, 676, 506, 507, 508, 677, 509, 678, 510, 511,
	0, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	520, 679, 521, 522, 524, 523, 525, 0, 526, 0,
	527, 528, 529, 0, 0, 0, 0, 0, 530, 0,
	532, 533, 534, 535, 531, 536, 537, 538, 539, 540,
	0, 541, 542, 543, 0, 544, 545, 546, 547, 548,
	680, 549, 0, 550, 551, 557, 558, 559, 552, 553,
	560, 561, 562, 563, 564, 0, 566, 567, 565, 568,
	569, 570, 0, 571, 572, 554, 555, 573, 574, 0,
	575, 576, 577, 578, 579, 580, 581, 681, 0, 582,
	0, 583, 584, 585, 586, 588, 556, 589, 594, 595,
	682, 590, 591, 592, 593, 683, 597, 598, 0, 599,
	600, 0, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 362, 608, 0, 609, 684, 685, 686, 687,
	0, 618, 0, 610, 611, 612, 688, 613, 689, 0,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 0, 628, 0, 0,
	629, 630, 631, 690, 691, 692, 0, 633, 632, 634,
	635, 693, 636, 637, 271, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 286, 287, 0, 288, 289, 290, 291, 292, 293,
	644, 645, 0, 294, 646, 295, 647, 0, 648, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 649,
	650, 651, 0, 303, 304, 652, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 337, 653, 654, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 355, 356, 655, 357, 358, 359, 361,
	363, 360, 364, 365, 366, 367, 656, 657, 368, 0,
	0, 0, 0, 0, 0, 0, 369, 370, 371, 658,
	0, 0, 0, 372, 0, 373, 374, 0, 0, 0,
	375, 376, 377, 659, 660, 378, 379, 380, 381, 382,
	383, 384, 385, 386, 0, 387, 661, 0, 662, 388,
	0, 389, 390, 391, 392, 393, 663, 664, 665, 479,
	0, 394, 395, 0, 396, 397, 398, 399, 400, 0,
	0, 0, 0, 401, 402, 403, 405, 0, 0, 404,
	666, 667, 0, 668, 0, 406, 407, 0, 669, 0,
	408, 409, 410, 0, 411, 0, 0, 0, 412, 413,
	414, 415, 416, 417, 0, 418, 420, 419, 0, 421,
	670, 0, 422, 423, 0, 0, 424, 425, 426, 427,
	428, 429, 432, 0, 0, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 440, 442, 455, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 456, 0, 458, 459, 460, 467, 469,
	470, 465, 466, 468, 471, 472, 462, 463, 474, 464,
	0, 473, 461, 0, 0, 0, 475, 476, 477, 0,
	671, 478, 672, 480, 481, 0, 0, 482, 0, 0,
	0, 484, 485, 486, 0, 0, 487, 488, 673, 0,
	489, 0, 674, 490, 491, 483, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 0, 501, 502, 675, 503,
	504, 505, 676, 506, 507, 508, 677, 509, 678, 510,
	511, 4564, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 520, 679, 521, 522, 524, 523, 525, 0, 526,
	0, 527, 528, 529, 0, 0, 0, 0, 0, 530,
	0, 532, 533, 534, 535, 531, 536, 537, 538, 539,
	540, 0, 541, 542, 543, 0, 544, 545, 546, 547,
	548, 680, 549, 0, 550, 551, 557, 558, 559, 552,
	553, 560, 561, 562, 563, 564, 0, 566, 567, 565,
	568, 569, 570, 0, 571, 572, 554, 555, 573, 574,
	0, 575, 576, 577, 578, 579, 580, 581, 681, 0,
	582, 0, 583, 584, 585, 586, 588, 556, 589, 594,
	595, 682, 590, 591, 592, 593, 683, 597, 598, 0,
	599, 600, 0, 596, 587, 0, 601, 602, 603, 604,
	605, 606, 607, 362, 608, 0, 609, 684, 685, 686,
	687, 0, 618, 0, 610, 611, 612, 688, 613, 689,
	0, 614, 615, 616, 617, 0, 619, 620, 0, 0,
	621, 622, 623, 625, 626, 624, 627, 0, 628, 0,
	0, 629, 630, 631, 690, 691, 692, 0, 633, 632,
	634, 635, 693, 636, 637, 271, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 644, 645, 0, 294, 646, 295, 647, 0, 648,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	649, 650, 651, 0, 303, 304, 652, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 337, 653, 654, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 655, 357, 358, 359,
	361, 363, 360, 364, 365, 366, 367, 656, 657, 368,
	0, 0, 0, 0, 0, 0, 0, 369, 370, 371,
	658, 0, 0, 0, 372, 0, 373, 374, 0, 0,
	0, 375, 376, 377, 659, 660, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 0, 387, 661, 0, 662,
	388, 0, 389, 390, 391, 392, 393, 663, 664, 665,
	479, 0, 394, 395, 0, 396, 397, 398, 399, 400,
	0, 0, 0, 0, 401, 402, 403, 405, 0, 0,
	404, 666, 667, 0, 668, 0, 406, 407, 0, 669,
	0, 408, 409, 410, 0, 411, 0, 0, 0, 412,
	413, 414, 415, 416, 417, 0, 418, 420, 419, 0,
	421, 670, 0, 422, 423, 0, 0, 424, 425, 426,
	427, 428, 429, 432, 0, 0, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 0, 458, 459, 460, 467,
	469, 470, 465, 466, 468, 471, 472, 462, 463, 474,
	464, 0, 473, 461, 0, 0, 0, 475, 476, 477,
	0, 671, 478, 672, 480, 481, 0, 0, 482, 0,
	0, 0, 484, 485, 486, 0, 0, 487, 488, 673,
	0, 489, 0, 674, 490, 491, 483, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 0, 501, 502, 675,
	503, 504, 505, 676, 506, 507, 508, 677, 509, 678,
	510, 511, 4168, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 520, 679, 521, 522, 524, 523, 525, 0,
	526, 0, 527, 528, 529, 0, 0, 0, 0, 0,
	530, 0, 532, 533, 534, 535, 531, 536, 537, 538,
	539, 540, 0, 541, 542, 543, 0, 544, 545, 546,
	547, 548, 680, 549, 0, 550, 551, 557, 558, 559,
	552, 553, 560, 561, 562, 563, 564, 0, 566, 567,
	565, 568, 569, 570, 0, 571, 572, 554, 555, 573,
	574, 0, 575, 576, 577, 578, 579, 580, 581, 681,
	0, 582, 0, 583, 584, 585, 586, 588, 556, 589,
	594, 595, 682, 590, 591, 592, 593, 683, 597, 598,
	0, 599, 600, 0, 596, 587, 0, 601, 602, 603,
	604, 605, 606, 607, 362, 608, 0, 609, 684, 685,
	686, 687, 0, 618, 0, 610, 611, 612, 688, 613,
	689, 0, 614, 615, 616, 617, 0, 619, 620, 0,
	0, 621, 622, 623, 625, 626, 624, 627, 0, 628,
	0, 0, 629, 630, 631, 690, 691, 692, 0, 633,
	632, 634, 635, 693, 636, 637, 271, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 286, 287, 0, 288, 289, 290, 291,
	292, 293, 644, 645, 0, 294, 646, 295, 647, 0,
	648, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 649, 650, 651, 0, 303, 304, 652, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 337, 653, 654, 3930,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 355, 356, 655, 357, 358,
	359, 361, 363, 360, 364, 365, 366, 367, 656, 657,
	368, 0, 0, 0, 0, 0, 0, 0, 369, 370,
	371, 658, 0, 0, 0, 372, 0, 373, 374, 0,
	0, 0, 375, 376, 377, 659, 660, 378, 379, 380,
	381, 382, 383, 384, 385, 386, 0, 387, 661, 0,
	662, 388, 0, 389, 390, 391, 392, 393, 663, 664,
	665, 479, 0, 394, 395, 0, 396, 397, 398, 399,
	400, 0, 0, 0, 0, 401, 402, 403, 405, 0,
	0, 404, 666, 667, 0, 668, 0, 406, 407, 0,
	669, 0, 408, 409, 410, 0, 411, 0, 0, 0,
	412, 413, 414, 415, 416, 417, 0, 418, 420, 419,
	0, 421, 670, 0, 422, 423, 0, 0, 424, 425,
	426, 427, 428, 429, 432, 0, 0, 430, 431, 433,
	434, 0, 435, 436, 438, 441, 437, 439, 440, 442,
	455, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 457, 0, 456, 0, 458, 459, 460,
	467, 469, 470, 465, 466, 468, 471, 472, 462, 463,
	474, 464, 0, 473, 461, 0, 0, 0, 475, 476,
	477, 0, 671, 478, 672, 480, 481, 0, 0, 482,
	0, 0, 0, 484, 485, 486, 0, 0, 487, 488,
	673, 0, 489, 0, 674, 490, 491, 483, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 0, 501, 502,
	675, 503, 504, 505, 676, 506, 507, 508, 677, 509,
	678, 510, 511, 0, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 520, 679, 521, 522, 524, 523, 525,
	0, 526, 0, 527, 528, 529, 0, 0, 0, 0,
	0, 530, 0, 532, 533, 534, 535, 531, 536, 537,
	538, 539, 540, 0, 541, 542, 543, 0, 544, 545,
	546, 547, 548, 680, 549, 0, 550, 551, 557, 558,
	559, 552, 553, 560, 561, 562, 563, 564, 0, 566,
	567, 565, 568, 569, 570, 0, 571, 572, 554, 555,
	573, 574, 0, 575, 576, 577, 578, 579, 580, 581,
	681, 0, 582, 0, 583, 584, 585, 586, 588, 556,
	589, 594, 595, 682, 590, 591, 592, 593, 683, 597,
	598, 0, 599, 600, 0, 596, 587, 0, 601, 602,
	603, 604, 605, 606, 607, 362, 608, 0, 609, 684,
	685, 686, 687, 0, 618, 0, 610, 611, 612, 688,
	613, 689, 0, 614, 615, 616, 617, 0, 619, 620,
	0, 0, 621, 622, 623, 625, 626, 624, 627, 0,
	628, 0, 0, 629, 630, 631, 690, 691, 692, 0,
	633, 632, 634, 635, 693, 636, 637, 271, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 0, 0, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 643,
	0, 2768, 0, 0, 286, 287, 0, 288, 289, 290,
	291, 292, 293, 644, 645, 0, 294, 646, 295, 647,
	0, 648, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 649, 650, 651, 0, 303, 304, 652, 0,
	0, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 337, 653, 654,
	0, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 347, 348, 0, 349, 350,
	351, 0, 352, 353, 354, 0, 355, 356, 655, 357,
	358, 359, 361, 363, 360, 364, 365, 366, 367, 656,
	657, 368, 0, 0, 0, 0, 0, 0, 0, 369,
	370, 371, 658, 0, 0, 0, 372, 0, 373, 374,
	0, 0, 0, 375, 376, 377, 659, 660, 378, 379,
	380, 381, 382, 383, 384, 385, 386, 0, 387, 661,
	0, 662, 388, 0, 389, 390, 391, 392, 393, 663,
	664, 665, 479, 0, 394, 395, 0, 396, 397, 398,
	399, 400, 0, 0, 0, 0, 401, 402, 403, 405,
	0, 0, 404, 666, 667, 0, 668, 0, 406, 407,
	0, 669, 0, 408, 409, 410, 0, 411, 0, 0,
	0, 412, 413, 414, 415, 416, 417, 0, 418, 420,
	419, 0, 421, 670, 0, 422, 423, 0, 0, 424,
	425, 426, 427, 428, 429, 432, 0, 0, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 0, 458, 459,
	460, 467, 469, 470, 465, 466, 468, 471, 472, 462,
	463, 474, 464, 0, 473, 461, 0, 0, 0, 475,
	476, 477, 0, 671, 478, 672, 480, 481, 0, 0,
	482, 0, 0, 0, 484, 485, 486, 0, 0, 487,
	488, 673, 0, 489, 0, 674, 490, 491, 483, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 0, 501,
	502, 675, 503, 504, 505, 676, 506, 507, 508, 677,
	509, 678, 510, 511, 0, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 520, 679, 521, 522, 524, 523,
	525, 0, 526, 0, 527, 528, 529, 0, 0, 0,
	0, 0, 530, 0, 532, 533, 534, 535, 531, 536,
	537, 538, 539, 540, 0, 541, 542, 543, 0, 544,
	545, 546, 547, 548, 680, 549, 0, 550, 551, 557,
	558, 559, 552, 553, 560, 561, 562, 563, 564, 0,
	566, 567, 565, 568, 569, 570, 0, 571, 572, 554,
	555, 573, 574, 0, 575, 576, 577, 578, 579, 580,
	581, 681, 0, 582, 0, 583, 584, 585, 586, 588,
	556, 589, 594, 595, 682, 590, 591, 592, 593, 683,
	597, 598, 0, 599, 600, 0, 596, 587, 0, 601,
	602, 603, 604, 605, 606, 607, 362, 608, 0, 609,
	684, 685, 686, 687, 0, 618, 0, 610, 611, 612,
	688, 613, 689, 0, 614, 615, 616, 617, 0, 619,
	620, 0, 0, 621, 622, 623, 625, 626, 624, 627,
	0, 628, 0, 0, 629, 630, 631, 690, 691, 692,
	0, 633, 632, 634, 635, 693, 636, 637, 271, 3100,
	0, 0, 638, 639, 694, 640, 641, 642, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 286, 287, 0, 288, 289,
	290, 291, 292, 293, 644, 645, 0, 294, 646, 295,
	647, 0, 648, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 649, 650, 651, 0, 303, 304, 652,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 337, 653,
	654, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 354, 0, 355, 356, 655,
	357, 358, 359, 361, 363, 360, 364, 365, 366, 367,
	656, 657, 368, 0, 0, 0, 0, 0, 0, 0,
	369, 370, 371, 658, 0, 0, 0, 372, 0, 373,
	374, 0, 0, 0, 375, 376, 377, 659, 660, 378,
	379, 380, 381, 382, 383, 384, 385, 386, 0, 387,
	661, 0, 662, 388, 0, 389, 390, 391, 392, 393,
	663, 664, 665, 479, 0, 394, 395, 0, 396, 397,
	398, 399, 400, 0, 0, 0, 0, 401, 402, 403,
	405, 0, 0, 404, 666, 667, 0, 668, 0, 406,
	407, 0, 669, 0, 408, 409, 410, 0, 411, 0,
	0, 0, 412, 413, 414, 415, 416, 417, 0, 418,
	420, 419, 0, 421, 670, 0, 422, 423, 0, 0,
	424, 425, 426, 427, 428, 429, 432, 0, 0, 430,
	431, 433, 434, 0, 435, 436, 438, 441, 437, 439,
	440, 442, 455, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 457, 0, 456, 0, 458,
	459, 460, 467, 469, 470, 465, 466, 468, 471, 472,
	462, 463, 474, 464, 0, 473, 461, 0, 0, 0,
	475, 476, 477, 0, 671, 478, 672, 480, 481, 0,
	0, 482, 0, 0, 0, 484, 485, 3097, 0, 0,
	487, 488, 673, 0, 489, 0, 674, 490, 491, 483,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 0,
	501, 502, 675, 503, 504, 505, 676, 506, 507, 508,
	677, 509, 678, 510, 511, 0, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 520, 679, 521, 522, 524,
	523, 525, 0, 526, 0, 527, 528, 529, 0, 0,
	0, 0, 0, 530, 0, 532, 533, 534, 535, 531,
	536, 537, 538, 539, 540, 0, 541, 542, 543, 0,
	544, 545, 546, 547, 548, 680, 549, 0, 550, 551,
	557, 558, 559, 552, 553, 560, 561, 562, 563, 564,
	0, 566, 567, 565, 568, 569, 570, 0, 571, 572,
	554, 555, 573, 574, 0, 575, 576, 577, 578, 579,
	580, 581, 681, 0, 582, 0, 583, 584, 585, 586,
	588, 556, 589, 594, 595, 682, 590, 591, 592, 593,
	683, 597, 598, 0, 599, 600, 0, 596, 587, 0,
	601, 602, 603, 604, 605, 606, 607, 362, 608, 0,
	609, 684, 685, 686, 687, 0, 618, 0, 610, 611,
	612, 688, 613, 689, 0, 614, 615, 616, 617, 0,
	619, 620, 0, 0, 621, 622, 623, 625, 626, 624,
	627, 0, 628, 0, 0, 629, 630, 631, 690, 691,
	692, 0, 633, 632, 634, 635, 693, 636, 637, 271,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 0,
	0, 0, 0, 0, 0, 0, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 286, 287, 0, 288,
	289, 290, 291, 292, 293, 644, 645, 0, 294, 646,
	295, 647, 0, 648, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 649, 650, 651, 0, 303, 304,
	652, 0, 0, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 335, 337,
	653, 654, 0, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 347, 348, 0,
	349, 350, 351, 0, 352, 353, 354, 0, 355, 356,
	655, 357, 358, 359, 361, 363, 360, 364, 365, 366,
	367, 656, 657, 368, 0, 0, 0, 0, 0, 0,
	0, 369, 370, 371, 658, 0, 0, 0, 372, 0,
	373, 374, 0, 0, 0, 375, 376, 377, 659, 660,
	378, 379, 380, 381, 382, 383, 384, 385, 386, 0,
	387, 661, 0, 662, 388, 0, 389, 390, 391, 392,
	393, 663, 664, 665, 479, 0, 394, 395, 0, 396,
	397, 398, 399, 400, 0, 0, 0, 0, 401, 402,
	403, 405, 0, 0, 404, 666, 667, 0, 668, 0,
	406, 407, 0, 669, 0, 408, 409, 410, 0, 411,
	0, 0, 0, 412, 413, 414, 415, 416, 417, 0,
	418, 420, 419, 0, 421, 670, 0, 422, 423, 0,
	0, 424, 425, 426, 427, 428, 429, 432, 0, 0,
	430, 431, 433, 434, 0, 435, 436, 438, 441, 437,
	439, 440, 442, 455, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 457, 0, 456, 0,
	458, 459, 460, 467, 469, 470, 465, 466, 468, 471,
	472, 462, 463, 474, 464, 0, 473, 461, 0, 0,
	0, 475, 476, 477, 0, 671, 478, 672, 480, 481,
	0, 0, 482, 0, 0, 0, 484, 485, 486, 0,
	0, 487, 488, 673, 0, 489, 0, 674, 490, 491,
	483, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	0, 501, 502, 675, 503, 504, 505, 676, 506, 507,
	508, 677, 509, 678, 510, 511, 2199, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 520, 679, 521, 522,
	524, 523, 525, 0, 526, 0, 527, 528, 529, 0,
	0, 0, 0, 0, 530, 0, 532, 533, 534, 535,
	531, 536, 537, 538, 539, 540, 0, 541, 542, 543,
	0, 785, 545, 546, 547, 548, 680, 549, 0, 550,
	551, 557, 558, 559, 552, 553, 784, 561, 562, 563,
	564, 0, 566, 567, 565, 568, 569, 570, 0, 571,
	572, 554, 555, 573, 574, 0, 575, 576, 577, 578,
	579, 580, 581, 681, 0, 582, 0, 583, 584, 585,
	586, 588, 556, 589, 594, 595, 682, 590, 591, 592,
	593, 683, 597, 598, 0, 599, 600, 0, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 362, 608,
	0, 609, 782, 685, 686, 687, 0, 618, 0, 610,
	611, 612, 688, 613, 689, 0, 614, 615, 616, 617,
	0, 619, 620, 0, 0, 621, 622, 623, 625, 626,
	624, 627, 0, 628, 0, 0, 629, 630, 631, 690,
	691, 692, 0, 633, 632, 634, 635, 693, 636, 637,
	271, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 2345, 284, 285, 0, 0, 0,
	0, 0, 643, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 644, 645, 0, 294,
	646, 295, 647, 0, 648, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 649, 650, 651, 0, 303,
	304, 652, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 653, 654, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 355,
	356, 655, 357, 358, 359, 361, 363, 360, 364, 365,
	366, 367, 656, 657, 368, 0, 0, 0, 0, 0,
	0, 0, 369, 370, 371, 658, 0, 0, 0, 372,
	0, 373, 374, 0, 0, 0, 375, 376, 377, 659,
	660, 378, 379, 380, 381, 382, 383, 384, 385, 386,
	0, 387, 661, 0, 662, 388, 0, 389, 390, 391,
	392, 393, 663, 664, 665, 479, 0, 394, 395, 0,
	396, 397, 398, 399, 400, 0, 0, 0, 0, 401,
	402, 403, 405, 0, 0, 404, 666, 667, 0, 668,
	0, 406, 407, 0, 669, 0, 408, 409, 410, 0,
	411, 0, 0, 0, 412, 413, 414, 415, 416, 417,
	0, 418, 420, 419, 0, 421, 670, 0, 422, 423,
	0, 0, 424, 425, 426, 427, 428, 429, 432, 0,
	0, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	0, 458, 459, 460, 467, 469, 470, 465, 466, 468,
	471, 472, 462, 463, 474, 464, 0, 473, 461, 0,
	0, 0, 475, 476, 477, 0, 671, 478, 672, 480,
	481, 0, 0, 482, 0, 0, 0, 484, 485, 486,
	0, 0, 487, 488, 673, 0, 489, 0, 674, 490,
	491, 483, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 0, 501, 502, 675, 503, 504, 505, 676, 506,
	507, 508, 677, 509, 678, 510, 511, 0, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 520, 679, 521,
	522, 524, 523, 525, 0, 526, 0, 527, 528, 529,
	0, 0, 0, 0, 0, 530, 0, 532, 533, 534,
	535, 531, 536, 537, 538, 539, 540, 0, 541, 542,
	543, 0, 544, 545, 546, 547, 548, 680, 549, 0,
	550, 551, 557, 558, 559, 552, 553, 560, 561, 562,
	563, 564, 0, 566, 567, 565, 568, 569, 570, 0,
	571, 572, 554, 555, 573, 574, 0, 575, 576, 577,
	578, 579, 580, 581, 681, 0, 582, 0, 583, 584,
	585, 586, 588, 556, 589, 594, 595, 682, 590, 591,
	592, 593, 683, 597, 598, 0, 599, 600, 0, 596,
	587, 0, 601, 602, 603, 604, 605, 606, 607, 362,
	608, 0, 609, 684, 685, 686, 687, 0, 618, 0,
	610, 611, 612, 688, 613, 689, 0, 614, 615, 616,
	617, 0, 619, 620, 0, 0, 621, 622, 623, 625,
	626, 624, 627, 0, 628, 0, 0, 629, 630, 631,
	690, 691, 692, 0, 633, 632, 634, 635, 693, 636,
	637, 2333, 0, 271, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	286, 287, 0, 288, 289, 290, 291, 292, 293, 644,
	645, 0, 294, 646, 295, 647, 0, 648, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 649, 650,
	651, 0, 303, 304, 652, 0, 0, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 337, 653, 654, 0, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 347, 348, 0, 349, 350, 351, 0, 352, 353,
	354, 0, 355, 356, 655, 357, 358, 359, 361, 363,
	360, 364, 365, 366, 367, 656, 657, 368, 0, 0,
	0, 0, 0, 0, 0, 369, 370, 371, 658, 0,
	0, 0, 372, 0, 373, 374, 0, 0, 0, 375,
	376, 377, 659, 660, 378, 379, 380, 381, 382, 383,
	384, 385, 386, 0, 387, 661, 0, 662, 388, 0,
	389, 390, 391, 392, 393, 663, 664, 665, 479, 0,
	394, 395, 0, 396, 397, 398, 399, 400, 0, 0,
	0, 0, 401, 402, 403, 405, 0, 0, 404, 666,
	667, 0, 668, 0, 406, 407, 0, 669, 0, 408,
	409, 410, 0, 411, 0, 0, 0, 412, 413, 414,
	415, 416, 417, 0, 418, 420, 419, 0, 421, 670,
	0, 422, 423, 0, 0, 424, 425, 426, 427, 428,
	429, 432, 0, 0, 430, 431, 433, 434, 0, 435,
	436, 438, 441, 437, 439, 440, 442, 455, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	457, 0, 456, 0, 458, 459, 460, 467, 469, 470,
	465, 466, 468, 471, 472, 462, 463, 474, 464, 0,
	473, 461, 0, 0, 0, 475, 476, 477, 0, 671,
	478, 672, 480, 481, 0, 0, 482, 0, 0, 0,
	484, 485, 486, 0, 0, 487, 488, 673, 0, 489,
	0, 674, 490, 491, 483, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 0, 501, 502, 675, 503, 504,
	505, 676, 506, 507, 508, 677, 509, 678, 510, 511,
	0, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	520, 679, 521, 522, 524, 523, 525, 0, 526, 0,
	527, 528, 529, 0, 0, 0, 0, 0, 530, 0,
	532, 533, 534, 535, 531, 536, 537, 538, 539, 540,
	0, 541, 542, 543, 0, 544, 545, 546, 547, 548,
	680, 549, 0, 550, 551, 557, 558, 559, 552, 553,
	560, 561, 562, 563, 564, 0, 566, 567, 565, 568,
	569, 570, 0, 571, 572, 554, 555, 573, 574, 0,
	575, 576, 577, 578, 579, 580, 581, 681, 0, 582,
	0, 583, 584, 585, 586, 588, 556, 589, 594, 595,
	682, 590, 591, 592, 593, 683, 597, 598, 0, 599,
	600, 0, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 362, 608, 0, 609, 684, 685, 686, 687,
	0, 618, 0, 610, 611, 612, 688, 613, 689, 0,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 0, 628, 0, 0,
	629, 630, 631, 690, 691, 692, 0, 633, 632, 634,
	635, 693, 636, 637, 2095, 0, 271, 0, 638, 639,
	694, 640, 641, 642, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 286, 287, 0, 288, 289, 290, 291,
	292, 293, 644, 645, 0, 294, 646, 295, 647, 0,
	648, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 649, 650, 651, 0, 303, 304, 652, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 337, 653, 654, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 355, 356, 655, 357, 358,
	359, 361, 363, 360, 364, 365, 366, 367, 656, 657,
	368, 0, 0, 0, 0, 0, 0, 0, 369, 370,
	371, 658, 0, 0, 0, 372, 0, 373, 374, 0,
	0, 0, 375, 376, 377, 659, 660, 378, 379, 380,
	381, 382, 383, 384, 385, 386, 0, 387, 661, 0,
	662, 388, 0, 389, 390, 391, 392, 393, 663, 664,
	665, 479, 0, 394, 395, 0, 396, 397, 398, 399,
	400, 0, 0, 0, 0, 401, 402, 403, 405, 0,
	0, 404, 666, 667, 0, 668, 0, 406, 407, 0,
	669, 0, 408, 409, 410, 0, 411, 0, 0, 0,
	412, 413, 414, 415, 416, 417, 0, 418, 420, 419,
	0, 421, 670, 0, 422, 423, 0, 0, 424, 425,
	426, 427, 428, 429, 432, 0, 0, 430, 431, 433,
	434, 0, 435, 436, 438, 441, 437, 439, 440, 442,
	455, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 457, 0, 456, 0, 458, 459, 460,
	467, 469, 470, 465, 466, 468, 471, 472, 462, 463,
	474, 464, 0, 473, 461, 0, 0, 0, 475, 476,
	477, 0, 671, 478, 672, 480, 481, 0, 0, 482,
	0, 0, 0, 484, 485, 486, 0, 0, 487, 488,
	673, 0, 489, 0, 674, 490, 491, 483, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 0, 501, 502,
	675, 503, 504, 505, 676, 506, 507, 508, 677, 509,
	678, 510, 511, 0, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 520, 679, 521, 522, 524, 523, 525,
	0, 526, 0, 527, 528, 529, 0, 0, 0, 0,
	0, 530, 0, 532, 533, 534, 535, 531, 536, 537,
	538, 539, 540, 0, 541, 542, 543, 0, 544, 545,
	546, 547, 548, 680, 549, 0, 550, 551, 557, 558,
	559, 552, 553, 560, 561, 562, 563, 564, 0, 566,
	567, 565, 568, 569, 570, 0, 571, 572, 554, 555,
	573, 574, 0, 575, 576, 577, 578, 579, 580, 581,
	681, 0, 582, 0, 583, 584, 585, 586, 588, 556,
	589, 594, 595, 682, 590, 591, 592, 593, 683, 597,
	598, 0, 599, 600, 0, 596, 587, 0, 601, 602,
	603, 604, 605, 606, 607, 362, 608, 0, 609, 684,
	685, 686, 687, 0, 618, 0, 610, 611, 612, 688,
	613, 689, 0, 614, 615, 616, 617, 0, 619, 620,
	0, 0, 621, 622, 623, 625, 626, 624, 627, 0,
	628, 0, 0, 629, 630, 631, 690, 691, 692, 0,
	633, 632, 634, 635, 693, 636, 637, 2062, 0, 271,
	0, 638, 639, 694, 640, 641, 642, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 286, 287, 0, 288,
	289, 290, 291, 292, 293, 644, 645, 0, 294, 646,
	295, 647, 0, 648, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 649, 650, 651, 0, 303, 304,
	652, 0, 0, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 335, 337,
	653, 654, 0, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 347, 348, 0,
	349, 350, 351, 0, 352, 353, 354, 0, 355, 356,
	655, 357, 358, 359, 361, 363, 360, 364, 365, 366,
	367, 656, 657, 368, 0, 0, 0, 0, 0, 0,
	0, 369, 370, 371, 658, 0, 0, 0, 372, 0,
	373, 374, 0, 0, 0, 375, 376, 377, 659, 660,
	378, 379, 380, 381, 382, 383, 384, 385, 386, 0,
	387, 661, 0, 662, 388, 0, 389, 390, 391, 392,
	393, 663, 664, 665, 479, 0, 394, 395, 0, 396,
	397, 398, 399, 400, 0, 0, 0, 0, 401, 402,
	403, 405, 0, 0, 404, 666, 667, 0, 668, 0,
	406, 407, 0, 669, 0, 408, 409, 410, 0, 411,
	0, 0, 0, 412, 413, 414, 415, 416, 417, 0,
	418, 420, 419, 0, 421, 670, 0, 422, 423, 0,
	0, 424, 425, 426, 427, 428, 429, 432, 0, 0,
	430, 431, 433, 434, 0, 435, 436, 438, 441, 437,
	439, 440, 442, 455, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 457, 0, 456, 0,
	458, 459, 460, 467, 469, 470, 465, 466, 468, 471,
	472, 462, 463, 474, 464, 0, 473, 461, 0, 0,
	0, 475, 476, 477, 0, 671, 478, 672, 480, 481,
	0, 0, 482, 0, 0, 0, 484, 485, 486, 0,
	0, 487, 488, 673, 0, 489, 0, 674, 490, 491,
	483, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	0, 501, 502, 675, 503, 504, 505, 676, 506, 507,
	508, 677, 509, 678, 510, 511, 0, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 520, 679, 521, 522,
	524, 523, 525, 0, 526, 0, 527, 528, 529, 0,
	0, 0, 0, 0, 530, 0, 532, 533, 534, 535,
	531, 536, 537, 538, 539, 540, 0, 541, 542, 543,
	0, 544, 545, 546, 547, 548, 680, 549, 0, 550,
	551, 557, 558, 559, 552, 553, 560, 561, 562, 563,
	564, 0, 566, 567, 565, 568, 569, 570, 0, 571,
	572, 554, 555, 573, 574, 0, 575, 576, 577, 578,
	579, 580, 581, 681, 0, 582, 0, 583, 584, 585,
	586, 588, 556, 589, 594, 595, 682, 590, 591, 592,
	593, 683, 597, 598, 0, 599, 600, 0, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 362, 608,
	0, 609, 684, 685, 686, 687, 0, 618, 0, 610,
	611, 612, 688, 613, 689, 0, 614, 615, 616, 617,
	0, 619, 620, 0, 0, 621, 622, 623, 625, 626,
	624, 627, 0, 628, 0, 0, 629, 630, 631, 690,
	691, 692, 0, 633, 632, 634, 635, 693, 636, 637,
	776, 0, 271, 0, 638, 639, 694, 640, 641, 642,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 0, 286,
	287, 0, 288, 289, 290, 291, 292, 293, 644, 645,
	0, 294, 646, 295, 647, 0, 648, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 649, 650, 651,
	0, 303, 772, 652, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 337, 653, 654, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 355, 356, 655, 357, 358, 359, 361, 363, 360,
	364, 365, 366, 367, 656, 657, 368, 0, 0, 0,
	0, 0, 0, 0, 369, 370, 371, 658, 0, 0,
	0, 372, 0, 373, 374, 0, 0, 0, 375, 376,
	377, 659, 660, 378, 379, 380, 381, 382, 383, 384,
	385, 386, 0, 387, 661, 0, 662, 388, 0, 389,
	390, 391, 392, 393, 663, 664, 665, 479, 0, 394,
	395, 0, 396, 397, 398, 399, 400, 0, 0, 0,
	0, 401, 402, 403, 405, 0, 0, 404, 666, 667,
	0, 668, 0, 406, 407, 0, 669, 0, 408, 409,
	410, 0, 411, 0, 0, 0, 412, 413, 414, 415,
	416, 417, 0, 418, 420, 419, 0, 421, 670, 0,
	422, 423, 0, 0, 424, 425, 426, 427, 428, 777,
	432, 0, 0, 430, 431, 433, 434, 0, 435, 436,
	438, 441, 437, 439, 440, 442, 455, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 457,
	0, 786, 0, 458, 459, 460, 467, 469, 470, 465,
	466, 468, 471, 472, 462, 463, 474, 464, 0, 473,
	461, 0, 0, 0, 475, 476, 477, 0, 671, 478,
	672, 480, 481, 0, 0, 482, 0, 0, 0, 484,
	485, 486, 0, 0, 487, 488, 673, 0, 489, 0,
	674, 490, 491, 483, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 0, 501, 502, 675, 503, 504, 505,
	676, 506, 507, 508, 677, 509, 678, 510, 511, 0,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 520,
	679, 521, 522, 524, 523, 525, 0, 526, 0, 527,
	528, 529, 0, 0, 0, 0, 0, 530, 0, 532,
	533, 534, 535, 531, 536, 537, 538, 539, 540, 0,
	541, 542, 543, 0, 785, 545, 546, 547, 548, 680,
	549, 0, 550, 551, 557, 558, 559, 552, 553, 784,
	561, 562, 563, 564, 0, 566, 567, 565, 568, 1631,
	570, 0, 571, 572, 554, 555, 573, 574, 0, 575,
	576, 577, 578, 579, 580, 581, 681, 0, 582, 0,
	583, 584, 585, 586, 588, 556, 589, 594, 595, 682,
	590, 591, 592, 593, 683, 597, 598, 0, 599, 600,
	0, 596, 587, 0, 601, 602, 603, 604, 605, 606,
	607, 362, 608, 0, 609, 782, 685, 686, 687, 0,
	618, 0, 610, 611, 612, 688, 613, 689, 0, 614,
	615, 616, 617, 0, 619, 620, 0, 0, 621, 622,
	623, 625, 626, 624, 627, 0, 628, 0, 0, 629,
	630, 631, 690, 691, 692, 0, 633, 632, 634, 635,
	693, 636, 637, 1604, 0, 271, 0, 638, 639, 694,
	640, 641, 642, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 644, 645, 0, 294, 646, 295, 647, 0, 648,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	649, 650, 651, 0, 303, 304, 652, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 337, 653, 654, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 655, 357, 358, 359,
	361, 363, 360, 364, 365, 366, 367, 656, 657, 368,
	0, 0, 0, 0, 0, 0, 0, 369, 370, 371,
	658, 0, 0, 0, 372, 0, 373, 374, 0, 0,
	0, 375, 376, 377, 659, 660, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 0, 387, 661, 0, 662,
	388, 0, 389, 390, 391, 392, 393, 1603, 664, 665,
	479, 0, 394, 395, 0, 396, 397, 398, 399, 400,
	0, 0, 0, 0, 401, 402, 403, 405, 0, 0,
	404, 666, 667, 0, 668, 0, 406, 407, 0, 669,
	0, 408, 409, 410, 0, 411, 0, 0, 0, 412,
	413, 414, 415, 416, 417, 0, 418, 420, 419, 0,
	421, 670, 0, 422, 423, 0, 0, 424, 425, 426,
	427, 428, 429, 432, 0, 0, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 0, 458, 459, 460, 467,
	469, 470, 465, 466, 468, 471, 472, 462, 463, 474,
	464, 0, 473, 461, 0, 0, 0, 475, 476, 477,
	0, 671, 478, 672, 480, 481, 0, 0, 482, 0,
	0, 0, 484, 485, 486, 0, 0, 487, 488, 673,
	0, 489, 0, 674, 490, 491, 483, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 0, 501, 502, 675,
	503, 504, 505, 676, 506, 507, 508, 677, 509, 678,
	510, 511, 0, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 520, 679, 521, 522, 524, 523, 525, 0,
	526, 0, 527, 528, 529, 0, 0, 0, 0, 0,
	530, 0, 532, 533, 534, 535, 531, 536, 537, 538,
	539, 540, 0, 541, 542, 543, 0, 544, 545, 546,
	547, 548, 680, 549, 0, 550, 551, 557, 558, 559,
	552, 553, 560, 561, 562, 563, 564, 0, 566, 567,
	565, 568, 569, 570, 0, 571, 572, 554, 555, 573,
	574, 0, 575, 576, 577, 578, 579, 580, 581, 681,
	0, 582, 0, 583, 584, 585, 586, 588, 556, 589,
	594, 595, 682, 590, 591, 592, 593, 683, 597, 598,
	0, 599, 600, 0, 596, 587, 0, 601, 602, 603,
	604, 605, 606, 607, 362, 608, 0, 609, 684, 685,
	686, 687, 0, 618, 0, 610, 611, 612, 688, 613,
	689, 0, 614, 615, 616, 617, 0, 619, 620, 0,
	0, 621, 622, 623, 625, 626, 624, 627, 0, 628,
	0, 0, 629, 630, 631, 690, 691, 692, 0, 633,
	632, 634, 635, 693, 636, 637, 1588, 0, 271, 0,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 286, 287, 0, 288, 289,
	290, 291, 292, 293, 644, 645, 0, 294, 646, 295,
	647, 0, 648, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 649, 650, 651, 0, 303, 304, 652,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 337, 653,
	654, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 354, 0, 355, 356, 655,
	357, 358, 359, 361, 363, 360, 364, 365, 366, 367,
	656, 657, 368, 0, 0, 0, 0, 0, 0, 0,
	369, 370, 371, 658, 0, 0, 0, 372, 0, 373,
	374, 0, 0, 0, 375, 376, 377, 659, 660, 378,
	379, 380, 381, 382, 383, 384, 385, 386, 0, 387,
	661, 0, 662, 388, 0, 389, 390, 391, 392, 393,
	1586, 664, 665, 479, 0, 394, 395, 0, 396, 397,
	398, 399, 400, 0, 0, 0, 0, 401, 402, 403,
	405, 0, 0, 404, 666, 667, 0, 668, 0, 406,
	407, 0, 669, 0, 408, 409, 410, 0, 411, 0,
	0, 0, 412, 413, 414, 415, 416, 417, 0, 418,
	420, 419, 0, 421, 670, 0, 422, 423, 0, 0,
	424, 425, 426, 427, 428, 429, 432, 0, 0, 430,
	431, 433, 434, 0, 435, 436, 438, 441, 437, 439,
	440, 442, 455, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 457, 0, 456, 0, 458,
	459, 460, 467, 469, 470, 465, 466, 468, 471, 472,
	462, 463, 474, 464, 0, 473, 461, 0, 0, 0,
	475, 476, 477, 0, 671, 478, 672, 480, 481, 0,
	0, 482, 0, 0, 0, 484, 485, 486, 0, 0,
	487, 488, 673, 0, 489, 0, 674, 490, 491, 483,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 0,
	501, 502, 675, 503, 504, 505, 676, 506, 507, 508,
	677, 509, 678, 510, 511, 0, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 520, 679, 521, 522, 524,
	523, 525, 0, 526, 0, 527, 528, 529, 0, 0,
	0, 0, 0, 530, 0, 532, 533, 534, 535, 531,
	536, 537, 538, 539, 540, 0, 541, 542, 543, 0,
	544, 545, 546, 547, 548, 680, 549, 0, 550, 551,
	557, 558, 559, 552, 553, 560, 561, 562, 563, 564,
	0, 566, 567, 565, 568, 569, 570, 0, 571, 572,
	554, 555, 573, 574, 0, 575, 576, 577, 578, 579,
	580, 581, 681, 0, 582, 0, 583, 584, 585, 586,
	588, 556, 589, 594, 595, 682, 590, 591, 592, 593,
	683, 597, 598, 0, 599, 600, 0, 596, 587, 0,
	601, 602, 603, 604, 605, 606, 607, 362, 608, 0,
	609, 684, 685, 686, 687, 0, 618, 0, 610, 611,
	612, 688, 613, 689, 0, 614, 615, 616, 617, 0,
	619, 620, 0, 0, 621, 622, 623, 625, 626, 624,
	627, 0, 628, 0, 0, 629, 630, 631, 690, 691,
	692, 0, 633, 632, 634, 635, 693, 636, 637, 1581,
	0, 271, 0, 638, 639, 694, 640, 641, 642, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 286, 287,
	0, 288, 289, 290, 291, 292, 293, 644, 645, 0,
	294, 646, 295, 647, 0, 648, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 649, 650, 651, 0,
	303, 304, 652, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 337, 653, 654, 0, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 347,
	348, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 655, 357, 358, 359, 361, 363, 360, 364,
	365, 366, 367, 656, 657, 368, 0, 0, 0, 0,
	0, 0, 0, 369, 370, 371, 658, 0, 0, 0,
	372, 0, 373, 374, 0, 0, 0, 375, 376, 377,
	659, 660, 378, 379, 380, 381, 382, 383, 384, 385,
	386, 0, 387, 661, 0, 662, 388, 0, 389, 390,
	391, 392, 393, 663, 664, 665, 479, 0, 394, 395,
	0, 396, 397, 398, 399, 400, 0, 0, 0, 0,
	401, 402, 403, 405, 0, 0, 404, 666, 667, 0,
	668, 0, 406, 407, 0, 669, 0, 408, 409, 410,
	0, 411, 0, 0, 0, 412, 413, 414, 415, 416,
	417, 0, 418, 420, 419, 0, 421, 670, 0, 422,
	423, 0, 0, 424, 425, 426, 427, 428, 429, 432,
	0, 0, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 0, 458, 459, 460, 467, 469, 470, 465, 466,
	468, 471, 472, 462, 463, 474, 464, 0, 473, 461,
	0, 0, 0, 475, 476, 477, 0, 671, 478, 672,
	480, 481, 0, 0, 482, 0, 0, 0, 484, 485,
	486, 0, 0, 487, 488, 673, 0, 489, 0, 674,
	490, 491, 483, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 0, 501, 502, 675, 503, 504, 505, 676,
	506, 507, 508, 677, 509, 678, 510, 511, 0, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 520, 679,
	521, 522, 524, 523, 525, 0, 526, 0, 527, 528,
	529, 0, 0, 0, 0, 0, 530, 0, 532, 533,
	534, 535, 531, 536, 537, 538, 539, 540, 0, 541,
	542, 543, 0, 544, 545, 546, 547, 548, 680, 549,
	0, 550, 551, 557, 558, 559, 552, 553, 560, 561,
	562, 563, 564, 0, 566, 567, 565, 568, 569, 570,
	0, 571, 572, 554, 555, 573, 574, 0, 575, 576,
	577, 578, 579, 580, 581, 681, 0, 582, 0, 583,
	584, 585, 586, 588, 556, 589, 594, 595, 682, 590,
	591, 592, 593, 683, 597, 598, 0, 599, 600, 0,
	596, 587, 0, 601, 602, 603, 604, 605, 606, 607,
	362, 608, 0, 609, 684, 685, 686, 687, 0, 618,
	0, 610, 611, 612, 688, 613, 689, 0, 614, 615,
	616, 617, 0, 619, 620, 0, 0, 621, 622, 623,
	625, 626, 624, 627, 0, 628, 0, 0, 629, 630,
	631, 690, 691, 692, 0, 633, 632, 634, 635, 693,
	636, 637, 1558, 0, 271, 0, 638, 639, 694, 640,
	641, 642, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 286, 287, 0, 288, 289, 290, 291, 292, 293,
	644, 645, 0, 294, 646, 295, 647, 0, 648, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 649,
	650, 651, 0, 303, 304, 652, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 337, 653, 654, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 355, 356, 655, 357, 358, 359, 361,
	363, 360, 364, 365, 366, 367, 656, 657, 368, 0,
	0, 0, 0, 0, 0, 0, 369, 370, 371, 658,
	0, 0, 0, 372, 0, 373, 374, 0, 0, 0,
	375, 376, 377, 659, 660, 378, 379, 380, 381, 382,
	383, 384, 385, 386, 0, 387, 661, 0, 662, 388,
	0, 389, 390, 391, 392, 393, 1556, 664, 665, 479,
	0, 394, 395, 0, 396, 397, 398, 399, 400, 0,
	0, 0, 0, 401, 402, 403, 405, 0, 0, 404,
	666, 667, 0, 668, 0, 406, 407, 0, 669, 0,
	408, 409, 410, 0, 411, 0, 0, 0, 412, 413,
	414, 415, 416, 417, 0, 418, 420, 419, 0, 421,
	670, 0, 422, 423, 0, 0, 424, 425, 426, 427,
	428, 429, 432, 0, 0, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 440, 442, 455, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 456, 0, 458, 459, 460, 467, 469,
	470, 465, 466, 468, 471, 472, 462, 463, 474, 464,
	0, 473, 461, 0, 0, 0, 475, 476, 477, 0,
	671, 478, 672, 480, 481, 0, 0, 482, 0, 0,
	0, 484, 485, 486, 0, 0, 487, 488, 673, 0,
	489, 0, 674, 490, 491, 483, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 0, 501, 502, 675, 503,
	504, 505, 676, 506, 507, 508, 677, 509, 678, 510,
	511, 0, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 520, 679, 521, 522, 524, 523, 525, 0, 526,
	0, 527, 528, 529, 0, 0, 0, 0, 0, 530,
	0, 532, 533, 534, 535, 531, 536, 537, 538, 539,
	540, 0, 541, 542, 543, 0, 544, 545, 546, 547,
	548, 680, 549, 0, 550, 551, 557, 558, 559, 552,
	553, 560, 561, 562, 563, 564, 0, 566, 567, 565,
	568, 569, 570, 0, 571, 572, 554, 555, 573, 574,
	0, 575, 576, 577, 578, 579, 580, 581, 681, 0,
	582, 0, 583, 584, 585, 586, 588, 556, 589, 594,
	595, 682, 590, 591, 592, 593, 683, 597, 598, 0,
	599, 600, 0, 596, 587, 0, 601, 602, 603, 604,
	605, 606, 607, 362, 608, 0, 609, 684, 685, 686,
	687, 0, 618, 0, 610, 611, 612, 688, 613, 689,
	0, 614, 615, 616, 617, 0, 619, 620, 0, 0,
	621, 622, 623, 625, 626, 624, 627, 0, 628, 0,
	0, 629, 630, 631, 690, 691, 692, 0, 633, 632,
	634, 635, 693, 636, 637, 1515, 0, 271, 0, 638,
	639, 694, 640, 641, 642, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 286, 287, 0, 288, 289, 290,
	291, 292, 293, 644, 645, 0, 294, 646, 295, 647,
	0, 648, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 649, 650, 651, 0, 303, 304, 652, 0,
	0, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 337, 653, 654,
	0, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 347, 348, 0, 349, 350,
	351, 0, 352, 353, 354, 0, 355, 356, 655, 357,
	358, 359, 361, 363, 360, 364, 365, 366, 367, 656,
	657, 368, 0, 0, 0, 0, 0, 0, 0, 369,
	370, 371, 658, 0, 0, 0, 372, 0, 373, 374,
	0, 0, 0, 375, 376, 377, 659, 660, 378, 379,
	380, 381, 382, 383, 384, 385, 386, 0, 387, 661,
	0, 662, 388, 0, 389, 390, 391, 392, 393, 663,
	664, 665, 479, 0, 394, 395, 0, 396, 397, 398,
	399, 400, 0, 0, 0, 0, 401, 402, 403, 405,
	0, 0, 404, 666, 667, 0, 668, 0, 406, 407,
	0, 669, 0, 408, 409, 410, 0, 411, 0, 0,
	0, 412, 413, 414, 415, 416, 417, 0, 418, 420,
	419, 0, 421, 670, 0, 422, 423, 0, 0, 424,
	425, 426, 427, 428, 429, 432, 0, 0, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 0, 458, 459,
	460, 467, 469, 470, 465, 466, 468, 471, 472, 462,
	463, 474, 464, 0, 473, 461, 0, 0, 0, 475,
	476, 477, 0, 671, 478, 672, 480, 481, 0, 0,
	482, 0, 0, 0, 484, 485, 486, 0, 0, 487,
	488, 673, 0, 489, 0, 674, 490, 491, 483, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 0, 501,
	502, 675, 503, 504, 505, 676, 506, 507, 508, 677,
	509, 678, 510, 511, 0, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 520, 679, 521, 522, 524, 523,
	525, 0, 526, 0, 527, 528, 529, 0, 0, 0,
	0, 0, 530, 0, 532, 533, 534, 535, 531, 536,
	537, 538, 539, 540, 0, 541, 542, 543, 0, 544,
	545, 546, 547, 548, 680, 549, 0, 550, 551, 557,
	558, 559, 552, 553, 560, 561, 562, 563, 564, 0,
	566, 567, 565, 568, 569, 570, 0, 571, 572, 554,
	555, 573, 574, 0, 575, 576, 577, 578, 579, 580,
	581, 681, 0, 582, 0, 583, 584, 585, 586, 588,
	556, 589, 594, 595, 682, 590, 591, 592, 593, 683,
	597, 598, 0, 599, 600, 0, 596, 587, 0, 601,
	602, 603, 604, 605, 606, 607, 362, 608, 0, 609,
	684, 685, 686, 687, 0, 618, 0, 610, 611, 612,
	688, 613, 689, 0, 614, 615, 616, 617, 0, 619,
	620, 0, 0, 621, 622, 623, 625, 626, 624, 627,
	0, 628, 0, 0, 629, 630, 631, 690, 691, 692,
	0, 633, 632, 634, 635, 693, 636, 637, 1498, 0,
	271, 0, 638, 639, 694, 640, 641, 642, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 643, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 644, 645, 0, 294,
	646, 295, 647, 0, 648, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 649, 650, 651, 0, 303,
	304, 652, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 653, 654, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 355,
	356, 655, 357, 358, 359, 361, 363, 360, 364, 365,
	366, 367, 656, 657, 368, 0, 0, 0, 0, 0,
	0, 0, 369, 370, 371, 658, 0, 0, 0, 372,
	0, 373, 374, 0, 0, 0, 375, 376, 377, 659,
	660, 378, 379, 380, 381, 382, 383, 384, 385, 386,
	0, 387, 661, 0, 662, 388, 0, 389, 390, 391,
	392, 393, 663, 664, 665, 479, 0, 394, 395, 0,
	396, 397, 398, 399, 400, 0, 0, 0, 0, 401,
	402, 403, 405, 0, 0, 404, 666, 667, 0, 668,
	0, 406, 407, 0, 669, 0, 408, 409, 410, 0,
	411, 0, 0, 0, 412, 413, 414, 415, 416, 417,
	0, 418, 420, 419, 0, 421, 670, 0, 422, 423,
	0, 0, 424, 425, 426, 427, 428, 429, 432, 0,
	0, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	0, 458, 459, 460, 467, 469, 470, 465, 466, 468,
	471, 472, 462, 463, 474, 464, 0, 473, 461, 0,
	0, 0, 475, 476, 477, 0, 671, 478, 672, 480,
	481, 0, 0, 482, 0, 0, 0, 484, 485, 486,
	0, 0, 487, 488, 673, 0, 489, 0, 674, 490,
	491, 483, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 0, 501, 502, 675, 503, 504, 505, 676, 506,
	507, 508, 677, 509, 678, 510, 511, 0, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 520, 679, 521,
	522, 524, 523, 525, 0, 526, 0, 527, 528, 529,
	0, 0, 0, 0, 0, 530, 0, 532, 533, 534,
	535, 531, 536, 537, 538, 539, 540, 0, 541, 542,
	543, 0, 544, 545, 546, 547, 548, 680, 549, 0,
	550, 551, 557, 558, 559, 552, 553, 560, 561, 562,
	563, 564, 0, 566, 567, 565, 568, 569, 570, 0,
	571, 572, 554, 555, 573, 574, 0, 575, 576, 577,
	578, 579, 580, 581, 681, 0, 582, 0, 583, 584,
	585, 586, 588, 556, 589, 594, 595, 682, 590, 591,
	592, 593, 683, 597, 598, 0, 599, 600, 0, 596,
	587, 0, 601, 602, 603, 604, 605, 606, 607, 362,
	608, 0, 609, 684, 685, 686, 687, 0, 618, 0,
	610, 611, 612, 688, 613, 689, 0, 614, 615, 616,
	617, 0, 619, 620, 0, 0, 621, 622, 623, 625,
	626, 624, 627, 0, 628, 0, 0, 629, 630, 631,
	690, 691, 692, 0, 633, 632, 634, 635, 693, 636,
	637, 1368, 0, 271, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	286, 287, 0, 288, 289, 290, 291, 292, 293, 644,
	645, 0, 294, 646, 295, 647, 0, 648, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 649, 650,
	651, 0, 303, 304, 652, 0, 0, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 337, 653, 654, 0, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 347, 348, 0, 349, 350, 351, 0, 352, 353,
	354, 0, 355, 356, 655, 357, 358, 359, 361, 363,
	360, 364, 365, 366, 367, 656, 657, 368, 0, 0,
	0, 0, 0, 0, 0, 369, 370, 371, 658, 0,
	0, 0, 372, 0, 373, 374, 0, 0, 0, 375,
	376, 377, 659, 660, 378, 379, 380, 381, 382, 383,
	384, 385, 386, 0, 387, 661, 0, 662, 388, 0,
	389, 390, 391, 392, 393, 663, 664, 665, 479, 0,
	394, 395, 0, 396, 397, 398, 399, 400, 0, 0,
	0, 0, 401, 402, 403, 405, 0, 0, 404, 666,
	667, 0, 668, 0, 406, 407, 0, 669, 0, 408,
	409, 410, 0, 411, 0, 0, 0, 412, 413, 414,
	415, 416, 417, 0, 418, 420, 419, 0, 421, 670,
	0, 422, 423, 0, 0, 424, 425, 426, 427, 428,
	429, 432, 0, 0, 430, 431, 433, 434, 0, 435,
	436, 438, 441, 437, 439, 440, 442, 455, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	457, 0, 456, 0, 458, 459, 460, 467, 469, 470,
	465, 466, 468, 471, 472, 462, 463, 474, 464, 0,
	473, 461, 0, 0, 0, 475, 476, 477, 0, 671,
	478, 672, 480, 481, 0, 0, 482, 0, 0, 0,
	484, 485, 486, 0, 0, 487, 488, 673, 0, 489,
	0, 674, 490, 491, 483, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 0, 501, 502, 675, 503, 504,
	505, 676, 506, 507, 508, 677, 509, 678, 510, 511,
	0, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	520, 679, 521, 522, 524, 523, 525, 0, 526, 0,
	527, 528, 529, 0, 0, 0, 0, 0, 530, 0,
	532, 533, 534, 535, 531, 536, 537, 538, 539, 540,
	0, 541, 542, 543, 0, 785, 545, 546, 547, 548,
	680, 549, 0, 550, 551, 557, 558, 559, 552, 553,
	784, 561, 562, 563, 564, 0, 566, 567, 565, 568,
	569, 570, 0, 571, 572, 554, 555, 573, 574, 0,
	575, 576, 577, 578, 579, 580, 581, 681, 0, 582,
	0, 583, 584, 585, 586, 588, 556, 589, 594, 595,
	682, 590, 591, 592, 593, 683, 597, 598, 0, 599,
	600, 0, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 362, 608, 0, 609, 782, 685, 686, 687,
	0, 618, 0, 610, 611, 612, 688, 613, 689, 0,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 0, 628, 0, 0,
	629, 630, 631, 690, 691, 692, 0, 633, 632, 634,
	635, 693, 636, 637, 1333, 0, 271, 0, 638, 639,
	694, 640, 641, 642, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 286, 287, 0, 288, 289, 290, 291,
	292, 293, 644, 645, 0, 294, 646, 295, 647, 0,
	648, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 649, 650, 651, 0, 303, 304, 652, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 337, 653, 654, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 355, 356, 655, 357, 358,
	359, 361, 363, 360, 364, 365, 366, 367, 656, 657,
	368, 0, 0, 0, 0, 0, 0, 0, 369, 370,
	371, 658, 0, 0, 0, 372, 0, 373, 374, 0,
	0, 0, 375, 376, 377, 659, 660, 378, 379, 380,
	381, 382, 383, 384, 385, 386, 0, 387, 661, 0,
	662, 388, 0, 389, 390, 391, 392, 393, 1332, 664,
	665, 479, 0, 394, 395, 0, 396, 397, 398, 399,
	400, 0, 0, 0, 0, 401, 402, 403, 405, 0,
	0, 404, 666, 667, 0, 668, 0, 406, 407, 0,
	669, 0, 408, 409, 410, 0, 411, 0, 0, 0,
	412, 413, 414, 415, 416, 417, 0, 418, 420, 419,
	0, 421, 670, 0, 422, 423, 0, 0, 424, 425,
	426, 427, 428, 429, 432, 0, 0, 430, 431, 433,
	434, 0, 435, 436, 438, 441, 437, 439, 440, 442,
	455, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 457, 0, 456, 0, 458, 459, 460,
	467, 469, 470, 465, 466, 468, 471, 472, 462, 463,
	474, 464, 0, 473, 461, 0, 0, 0, 475, 476,
	477, 0, 671, 478, 672, 480, 481, 0, 0, 482,
	0, 0, 0, 484, 485, 486, 0, 0, 487, 488,
	673, 0, 489, 0, 674, 490, 491, 483, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 0, 501, 502,
	675, 503, 504, 505, 676, 506, 507, 508, 677, 509,
	678, 510, 511, 0, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 520, 679, 521, 522, 524, 523, 525,
	0, 526, 0, 527, 528, 529, 0, 0, 0, 0,
	0, 530, 0, 532, 533, 534, 535, 531, 536, 537,
	538, 539, 540, 0, 541, 542, 543, 0, 544, 545,
	546, 547, 548, 680, 549, 0, 550, 551, 557, 558,
	559, 552, 553, 560, 561, 562, 563, 564, 0, 566,
	567, 565, 568, 569, 570, 0, 571, 572, 554, 555,
	573, 574, 0, 575, 576, 577, 578, 579, 580, 581,
	681, 0, 582, 0, 583, 584, 585, 586, 588, 556,
	589, 594, 595, 682, 590, 591, 592, 593, 683, 597,
	598, 0, 599, 600, 0, 596, 587, 0, 601, 602,
	603, 604, 605, 606, 607, 362, 608, 0, 609, 684,
	685, 686, 687, 0, 618, 0, 610, 611, 612, 688,
	613, 689, 0, 614, 615, 616, 617, 0, 619, 620,
	0, 0, 621, 622, 623, 625, 626, 624, 627, 0,
	628, 0, 0, 629, 630, 631, 690, 691, 692, 0,
	633, 632, 634, 635, 693, 636, 637, 1324, 0, 271,
	0, 638, 639, 694, 640, 641, 642, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 286, 287, 0, 288,
	289, 290, 291, 292, 293, 644, 645, 0, 294, 646,
	295, 647, 0, 648, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 649, 650, 651, 0, 303, 304,
	652, 0, 0, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 335, 337,
	653, 654, 0, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 347, 348, 0,
	349, 350, 351, 0, 352, 353, 354, 0, 355, 356,
	655, 357, 358, 359, 361, 363, 360, 364, 365, 366,
	367, 656, 657, 368, 0, 0, 0, 0, 0, 0,
	0, 369, 370, 371, 658, 0, 0, 0, 372, 0,
	373, 374, 0, 0, 0, 375, 376, 377, 659, 660,
	378, 379, 380, 381, 382, 383, 384, 385, 386, 0,
	387, 661, 0, 662, 388, 0, 389, 390, 391, 392,
	393, 1323, 664, 665, 479, 0, 394, 395, 0, 396,
	397, 398, 399, 400, 0, 0, 0, 0, 401, 402,
	403, 405, 0, 0, 404, 666, 667, 0, 668, 0,
	406, 407, 0, 669, 0, 408, 409, 410, 0, 411,
	0, 0, 0, 412, 413, 414, 415, 416, 417, 0,
	418, 420, 419, 0, 421, 670, 0, 422, 423, 0,
	0, 424, 425, 426, 427, 428, 429, 432, 0, 0,
	430, 431, 433, 434, 0, 435, 436, 438, 441, 437,
	439, 440, 442, 455, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 457, 0, 456, 0,
	458, 459, 460, 467, 469, 470, 465, 466, 468, 471,
	472, 462, 463, 474, 464, 0, 473, 461, 0, 0,
	0, 475, 476, 477, 0, 671, 478, 672, 480, 481,
	0, 0, 482, 0, 0, 0, 484, 485, 486, 0,
	0, 487, 488, 673, 0, 489, 0, 674, 490, 491,
	483, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	0, 501, 502, 675, 503, 504, 505, 676, 506, 507,
	508, 677, 509, 678, 510, 511, 0, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 520, 679, 521, 522,
	524, 523, 525, 0, 526, 0, 527, 528, 529, 0,
	0, 0, 0, 0, 530, 0, 532, 533, 534, 535,
	531, 536, 537, 538, 539, 540, 0, 541, 542, 543,
	0, 544, 545, 546, 547, 548, 680, 549, 0, 550,
	551, 557, 558, 559, 552, 553, 560, 561, 562, 563,
	564, 0, 566, 567, 565, 568, 569, 570, 0, 571,
	572, 554, 555, 573, 574, 0, 575, 576, 577, 578,
	579, 580, 581, 681, 0, 582, 0, 583, 584, 585,
	586, 588, 556, 589, 594, 595, 682, 590, 591, 592,
	593, 683, 597, 598, 0, 599, 600, 0, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 362, 608,
	0, 609, 684, 685, 686, 687, 0, 618, 0, 610,
	611, 612, 688, 613, 689, 0, 614, 615, 616, 617,
	0, 619, 620, 0, 0, 621, 622, 623, 625, 626,
	624, 627, 0, 628, 0, 0, 629, 630, 631, 690,
	691, 692, 0, 633, 632, 634, 635, 693, 636, 637,
	271, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 1277, 284, 285, 0, 0, 0,
	0, 0, 643, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 644, 645, 0, 294,
	646, 295, 647, 0, 648, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 649, 650, 651, 0, 303,
	304, 652, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 653, 654, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 355,
	356, 655, 357, 358, 359, 361, 363, 360, 364, 365,
	366, 367, 656, 657, 368, 0, 0, 0, 0, 0,
	0, 0, 369, 370, 371, 658, 0, 0, 0, 372,
	0, 373, 374, 0, 0, 0, 375, 376, 377, 659,
	660, 378, 379, 380, 381, 382, 383, 384, 385, 386,
	0, 387, 661, 0, 662, 388, 0, 389, 390, 391,
	392, 393, 663, 664, 665, 479, 0, 394, 395, 0,
	396, 397, 398, 399, 400, 0, 0, 0, 0, 401,
	402, 403, 405, 0, 0, 404, 666, 667, 0, 668,
	0, 406, 407, 0, 669, 0, 408, 409, 410, 0,
	411, 0, 0, 0, 412, 413, 414, 415, 416, 417,
	0, 418, 420, 419, 0, 421, 670, 0, 422, 423,
	0, 0, 424, 425, 426, 427, 428, 429, 432, 0,
	0, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	0, 458, 459, 460, 467, 469, 470, 465, 466, 468,
	471, 472, 462, 463, 474, 464, 0, 473, 461, 0,
	0, 0, 475, 476, 477, 0, 671, 478, 672, 480,
	481, 0, 0, 482, 0, 0, 0, 484, 485, 486,
	0, 0, 487, 488, 673, 0, 489, 0, 674, 490,
	491, 483, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 0, 501, 502, 675, 503, 504, 505, 676, 506,
	507, 508, 677, 509, 678, 510, 511, 0, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 520, 679, 521,
	522, 524, 523, 525, 0, 526, 0, 527, 528, 529,
	0, 0, 0, 0, 0, 530, 0, 532, 533, 534,
	535, 531, 536, 537, 538, 539, 540, 0, 541, 542,
	543, 0, 544, 545, 546, 547, 548, 680, 549, 0,
	550, 551, 557, 558, 559, 552, 553, 560, 561, 562,
	563, 564, 0, 566, 567, 565, 568, 569, 570, 0,
	571, 572, 554, 555, 573, 574, 0, 575, 576, 577,
	578, 579, 580, 581, 681, 0, 582, 0, 583, 584,
	585, 586, 588, 556, 589, 594, 595, 682, 590, 591,
	592, 593, 683, 597, 598, 0, 599, 600, 0, 596,
	587, 0, 601, 602, 603, 604, 605, 606, 607, 362,
	608, 0, 609, 684, 685, 686, 687, 0, 618, 0,
	610, 611, 612, 688, 613, 689, 0, 614, 615, 616,
	617, 0, 619, 620, 0, 0, 621, 622, 623, 625,
	626, 624, 627, 0, 628, 0, 0, 629, 630, 631,
	690, 691, 692, 0, 633, 632, 634, 635, 693, 636,
	637, 271, 0, 0, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 791, 284, 285, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 286, 287,
	0, 288, 289, 290, 291, 292, 293, 644, 645, 0,
	294, 646, 295, 647, 0, 648, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 649, 650, 651, 0,
	303, 304, 652, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 337, 653, 654, 0, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 347,
	348, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 655, 357, 358, 359, 361, 363, 360, 364,
	365, 366, 367, 656, 657, 368, 0, 0, 0, 0,
	0, 0, 0, 369, 370, 371, 658, 0, 0, 0,
	372, 0, 373, 374, 0, 0, 0, 375, 376, 377,
	659, 660, 378, 379, 380, 381, 382, 383, 384, 385,
	386, 0, 387, 661, 0, 662, 388, 0, 389, 390,
	391, 392, 393, 663, 664, 665, 479, 0, 394, 395,
	0, 396, 397, 398, 399, 400, 0, 0, 0, 0,
	401, 402, 403, 405, 0, 0, 404, 666, 667, 0,
	668, 0, 406, 407, 0, 669, 0, 408, 409, 410,
	0, 411, 0, 0, 0, 412, 413, 414, 415, 416,
	417, 0, 418, 420, 419, 0, 421, 670, 0, 422,
	423, 0, 0, 424, 425, 426, 427, 428, 429, 432,
	0, 0, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 0, 458, 459, 460, 467, 469, 470, 465, 466,
	468, 471, 472, 462, 463, 474, 464, 0, 473, 461,
	0, 0, 0, 475, 476, 477, 0, 671, 478, 672,
	480, 481, 0, 0, 482, 0, 0, 0, 484, 485,
	486, 0, 0, 487, 488, 673, 0, 489, 0, 674,
	490, 491, 483, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 0, 501, 502, 675, 503, 504, 505, 676,
	506, 507, 508, 677, 509, 678, 510, 511, 0, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 520, 679,
	521, 522, 524, 523, 525, 0, 526, 0, 527, 528,
	529, 0, 0, 0, 0, 0, 530, 0, 532, 533,
	534, 535, 531, 536, 537, 538, 539, 540, 0, 541,
	542, 543, 0, 544, 545, 546, 547, 548, 680, 549,
	0, 550, 551, 557, 558, 559, 552, 553, 560, 561,
	562, 563, 564, 0, 566, 567, 565, 568, 569, 570,
	0, 571, 572, 554, 555, 573, 574, 0, 575, 576,
	577, 578, 579, 580, 581, 681, 0, 582, 0, 583,
	584, 585, 586, 588, 556, 589, 594, 595, 682, 590,
	591, 592, 593, 683, 597, 598, 0, 599, 600, 0,
	596, 587, 0, 601, 602, 603, 604, 605, 606, 607,
	362, 608, 0, 609, 684, 685, 686, 687, 0, 618,
	0, 610, 611, 612, 688, 613, 689, 0, 614, 615,
	616, 617, 0, 619, 620, 0, 0, 621, 622, 623,
	625, 626, 624, 627, 0, 628, 0, 0, 629, 630,
	631, 690, 691, 692, 0, 633, 632, 634, 635, 693,
	636, 637, 776, 0, 271, 0, 638, 639, 694, 640,
	641, 642, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 286, 287, 0, 288, 289, 290, 291, 292, 293,
	644, 645, 0, 294, 646, 295, 647, 0, 648, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 649,
	650, 651, 0, 303, 772, 652, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 771, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 337, 653, 654, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 355, 356, 655, 357, 358, 359, 361,
	363, 360, 364, 365, 366, 367, 656, 657, 368, 0,
	0, 0, 0, 0, 0, 0, 369, 370, 371, 658,
	0, 0, 0, 372, 0, 373, 374, 0, 0, 0,
	375, 376, 377, 659, 660, 378, 379, 380, 381, 382,
	383, 384, 385, 386, 0, 387, 661, 0, 662, 388,
	0, 389, 390, 391, 392, 393, 663, 664, 665, 479,
	0, 394, 395, 0, 396, 397, 398, 399, 400, 0,
	0, 0, 0, 401, 402, 403, 405, 0, 0, 404,
	666, 667, 0, 668, 0, 406, 407, 0, 669, 0,
	408, 409, 410, 0, 411, 0, 0, 0, 412, 413,
	414, 415, 416, 417, 0, 418, 420, 419, 0, 421,
	670, 0, 422, 423, 0, 0, 424, 425, 426, 427,
	428, 777, 432, 0, 0, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 440, 442, 455, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 786, 0, 458, 459, 460, 467, 469,
	470, 465, 466, 468, 471, 472, 462, 463, 474, 464,
	0, 473, 461, 0, 0, 0, 475, 476, 477, 0,
	671, 478, 672, 480, 481, 0, 0, 482, 0, 0,
	0, 484, 485, 486, 0, 0, 487, 488, 673, 0,
	489, 0, 674, 490, 491, 483, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 0, 501, 502, 675, 503,
	504, 505, 676, 506, 507, 508, 677, 509, 678, 510,
	511, 0, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 520, 679, 521, 522, 524, 523, 525, 0, 526,
	0, 527, 528, 529, 0, 0, 0, 0, 0, 530,
	0, 532, 533, 534, 535, 531, 536, 537, 538, 539,
	540, 0, 541, 542, 543, 0, 785, 545, 546, 547,
	548, 773, 549, 0, 550, 551, 557, 558, 559, 552,
	553, 784, 561, 562, 563, 564, 0, 566, 567, 565,
	568, 774, 570, 0, 571, 572, 554, 555, 573, 574,
	0, 575, 576, 577, 578, 579, 580, 581, 681, 0,
	582, 0, 583, 584, 585, 586, 588, 556, 589, 594,
	595, 682, 590, 591, 592, 593, 683, 597, 598, 0,
	599, 600, 0, 596, 587, 0, 601, 602, 603, 604,
	605, 606, 607, 362, 608, 0, 609, 782, 685, 686,
	687, 0, 618, 0, 610, 778, 612, 688, 613, 689,
	0, 614, 615, 616, 617, 0, 619, 620, 0, 0,
	621, 622, 623, 625, 626, 624, 627, 0, 628, 0,
	0, 629, 630, 631, 690, 691, 692, 0, 633, 632,
	634, 635, 693, 636, 637, 765, 0, 271, 0, 638,
	639, 694, 640, 641, 642, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 286, 287, 0, 288, 289, 290,
	291, 292, 293, 644, 645, 0, 294, 646, 295, 647,
	0, 648, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 649, 650, 651, 0, 303, 304, 652, 0,
	0, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 337, 653, 654,
	0, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 347, 348, 0, 349, 350,
	351, 0, 352, 353, 354, 0, 355, 356, 655, 357,
	358, 359, 361, 363, 360, 364, 365, 366, 367, 656,
	657, 368, 0, 0, 0, 0, 0, 0, 0, 369,
	370, 371, 658, 0, 0, 0, 372, 0, 373, 374,
	0, 0, 0, 375, 376, 377, 659, 660, 378, 379,
	380, 381, 382, 383, 384, 385, 386, 0, 387, 661,
	0, 662, 388, 0, 389, 390, 391, 392, 393, 663,
	664, 665, 479, 0, 394, 395, 0, 396, 397, 398,
	399, 400, 0, 0, 0, 0, 401, 402, 403, 405,
	0, 0, 404, 666, 667, 0, 668, 0, 406, 407,
	0, 669, 0, 408, 409, 410, 0, 411, 0, 0,
	0, 412, 413, 414, 415, 416, 417, 0, 418, 420,
	419, 0, 421, 670, 0, 422, 423, 0, 0, 424,
	425, 426, 427, 428, 429, 432, 0, 0, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 0, 458, 459,
	460, 467, 469, 470, 465, 466, 468, 471, 472, 462,
	463, 474, 464, 0, 473, 461, 0, 0, 0, 475,
	476, 477, 0, 671, 478, 672, 480, 481, 0, 0,
	482, 0, 0, 0, 484, 485, 486, 0, 0, 487,
	488, 673, 0, 489, 0, 674, 490, 491, 483, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 0, 501,
	502, 675, 503, 504, 505, 676, 506, 507, 508, 677,
	509, 678, 510, 511, 0, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 520, 679, 521, 522, 524, 523,
	525, 0, 526, 0, 527, 528, 529, 0, 0, 0,
	0, 0, 530, 0, 532, 533, 534, 535, 531, 536,
	537, 538, 539, 540, 0, 541, 542, 543, 0, 544,
	545, 546, 547, 548, 680, 549, 0, 550, 551, 766,
	558, 559, 552, 553, 560, 561, 562, 563, 564, 0,
	566, 567, 565, 568, 569, 570, 0, 571, 572, 554,
	555, 573, 574, 0, 575, 576, 577, 578, 579, 580,
	581, 681, 0, 582, 0, 583, 584, 585, 586, 588,
	556, 589, 594, 595, 682, 590, 591, 592, 593, 683,
	597, 598, 0, 599, 600, 0, 596, 587, 0, 601,
	602, 603, 604, 605, 606, 607, 362, 608, 0, 609,
	684, 685, 686, 687, 0, 618, 0, 610, 611, 612,
	688, 613, 689, 0, 614, 615, 616, 617, 0, 619,
	620, 0, 0, 621, 622, 623, 625, 626, 624, 627,
	0, 628, 0, 0, 629, 630, 631, 690, 691, 692,
	0, 633, 632, 634, 635, 693, 636, 637, 728, 0,
	271, 0, 638, 639, 694, 640, 641, 642, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 643, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 644, 645, 0, 294,
	646, 295, 647, 0, 648, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 649, 650, 651, 0, 303,
	304, 652, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 653, 654, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 355,
	356, 655, 357, 358, 359, 361, 363, 360, 364, 365,
	366, 367, 656, 657, 368, 0, 0, 0, 0, 0,
	0, 0, 369, 370, 371, 658, 0, 0, 0, 372,
	0, 373, 374, 0, 0, 0, 375, 376, 377, 659,
	660, 378, 379, 380, 381, 382, 383, 384, 385, 386,
	0, 387, 661, 0, 662, 388, 0, 389, 390, 391,
	392, 393, 663, 664, 665, 479, 0, 394, 395, 0,
	396, 397, 398, 399, 400, 0, 0, 0, 0, 401,
	402, 403, 405, 0, 0, 404, 666, 667, 0, 668,
	0, 406, 407, 0, 669, 0, 408, 409, 410, 0,
	411, 0, 0, 0, 412, 413, 414, 415, 416, 417,
	0, 418, 420, 419, 0, 421, 670, 0, 422, 423,
	0, 0, 424, 425, 426, 427, 428, 429, 432, 0,
	0, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	0, 458, 459, 460, 467, 469, 470, 465, 466, 468,
	471, 472, 462, 463, 474, 464, 0, 473, 461, 0,
	0, 0, 475, 476, 477, 0, 671, 478, 672, 480,
	481, 0, 0, 482, 0, 0, 0, 484, 485, 486,
	0, 0, 487, 488, 673, 0, 489, 0, 674, 490,
	491, 483, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 0, 501, 502, 675, 503, 504, 505, 676, 506,
	507, 508, 677, 509, 678, 510, 511, 0, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 520, 679, 521,
	522, 524, 523, 525, 0, 526, 0, 527, 528, 529,
	0, 0, 0, 0, 0, 530, 0, 532, 533, 534,
	535, 531, 536, 537, 538, 539, 540, 0, 541, 542,
	543, 0, 544, 545, 546, 547, 548, 680, 549, 0,
	550, 551, 557, 558, 559, 552, 553, 560, 561, 562,
	563, 564, 0, 566, 567, 565, 568, 569, 570, 0,
	571, 572, 554, 555, 573, 574, 0, 575, 576, 577,
	578, 579, 580, 581, 681, 0, 582, 0, 583, 584,
	585, 586, 588, 556, 589, 594, 595, 682, 590, 591,
	592, 593, 683, 597, 598, 0, 599, 600, 0, 596,
	587, 0, 601, 602, 603, 604, 605, 606, 607, 362,
	608, 0, 609, 684, 685, 686, 687, 0, 618, 0,
	610, 611, 612, 688, 613, 689, 0, 614, 615, 616,
	617, 0, 619, 620, 0, 0, 621, 622, 623, 625,
	626, 624, 627, 0, 628, 0, 0, 629, 630, 631,
	690, 691, 692, 0, 633, 632, 634, 635, 693, 636,
	637, 722, 0, 271, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	286, 287, 0, 288, 289, 290, 291, 292, 293, 644,
	645, 0, 294, 646, 295, 647, 0, 648, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 649, 650,
	651, 0, 303, 304, 652, 0, 0, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 337, 653, 654, 0, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 347, 348, 0, 349, 350, 351, 0, 352, 353,
	354, 0, 355, 356, 655, 357, 358, 359, 361, 363,
	360, 364, 365, 366, 367, 656, 657, 368, 0, 0,
	0, 0, 0, 0, 0, 369, 370, 371, 658, 0,
	0, 0, 372, 0, 373, 374, 0, 0, 0, 375,
	376, 377, 659, 660, 378, 379, 380, 381, 382, 383,
	384, 385, 386, 0, 387, 661, 0, 662, 388, 0,
	389, 390, 391, 392, 393, 663, 664, 665, 479, 0,
	394, 395, 0, 396, 397, 398, 399, 400, 0, 0,
	0, 0, 401, 402, 403, 405, 0, 0, 404, 666,
	667, 0, 668, 0, 406, 407, 0, 669, 0, 408,
	409, 410, 0, 411, 0, 0, 0, 412, 413, 414,
	415, 416, 417, 0, 418, 420, 419, 0, 421, 670,
	0, 422, 423, 0, 0, 424, 425, 426, 427, 428,
	429, 432, 0, 0, 430, 431, 433, 434, 0, 435,
	436, 438, 441, 437, 439, 440, 442, 455, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	457, 0, 456, 0, 458, 459, 460, 467, 469, 470,
	465, 466, 468, 471, 472, 462, 463, 474, 464, 0,
	473, 461, 0, 0, 0, 475, 476, 477, 0, 671,
	478, 672, 480, 481, 0, 0, 482, 0, 0, 0,
	484, 485, 486, 0, 0, 487, 488, 673, 0, 489,
	0, 674, 490, 491, 483, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 0, 501, 502, 675, 503, 504,
	505, 676, 506, 507, 508, 677, 509, 678, 510, 511,
	0, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	520, 679, 521, 522, 524, 523, 525, 0, 526, 0,
	527, 528, 529, 0, 0, 0, 0, 0, 530, 0,
	532, 533, 534, 535, 531, 536, 537, 538, 539, 540,
	0, 541, 542, 543, 0, 544, 545, 546, 547, 548,
	680, 549, 0, 550, 551, 557, 558, 559, 552, 553,
	560, 561, 562, 563, 564, 0, 566, 567, 565, 568,
	569, 570, 0, 571, 572, 554, 555, 573, 574, 0,
	575, 576, 577, 578, 579, 580, 581, 681, 0, 582,
	0, 583, 584, 585, 586, 588, 556, 589, 594, 595,
	682, 590, 591, 592, 593, 683, 597, 598, 0, 599,
	600, 0, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 362, 608, 0, 609, 684, 685, 686, 687,
	0, 618, 0, 610, 611, 612, 688, 613, 689, 0,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 0, 628, 0, 0,
	629, 630, 631, 690, 691, 692, 0, 633, 632, 634,
	635, 693, 636, 637, 700, 0, 271, 0, 638, 639,
	694, 640, 641, 642, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 286, 287, 0, 288, 289, 290, 291,
	292, 293, 644, 645, 0, 294, 646, 295, 647, 0,
	648, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 649, 650, 651, 0, 303, 304, 652, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 337, 653, 654, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 355, 356, 655, 357, 358,
	359, 361, 363, 360, 364, 365, 366, 367, 656, 657,
	368, 0, 0, 0, 0, 0, 0, 0, 369, 370,
	371, 658, 0, 0, 0, 372, 0, 373, 374, 0,
	0, 0, 375, 376, 377, 659, 660, 378, 379, 380,
	381, 382, 383, 384, 385, 386, 0, 387, 661, 0,
	662, 388, 0, 389, 390, 391, 392, 393, 663, 664,
	665, 479, 0, 394, 395, 0, 396, 397, 398, 399,
	400, 0, 0, 0, 0, 401, 402, 403, 405, 0,
	0, 404, 666, 667, 0, 668, 0, 406, 407, 0,
	669, 0, 408, 409, 410, 0, 411, 0, 0, 0,
	412, 413, 414, 415, 416, 417, 0, 418, 420, 419,
	0, 421, 670, 0, 422, 423, 0, 0, 424, 425,
	426, 427, 428, 429, 432, 0, 0, 430, 431, 433,
	434, 0, 435, 436, 438, 441, 437, 439, 440, 442,
	455, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 457, 0, 456, 0, 458, 459, 460,
	467, 469, 470, 465, 466, 468, 471, 472, 462, 463,
	474, 464, 0, 473, 461, 0, 0, 0, 475, 476,
	477, 0, 671, 478, 672, 480, 481, 0, 0, 482,
	0, 0, 0, 484, 485, 486, 0, 0, 487, 488,
	673, 0, 489, 0, 674, 490, 491, 483, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 0, 501, 502,
	675, 503, 504, 505, 676, 506, 507, 508, 677, 509,
	678, 510, 511, 0, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 520, 679, 521, 522, 524, 523, 525,
	0, 526, 0, 527, 528, 529, 0, 0, 0, 0,
	0, 530, 0, 532, 533, 534, 535, 531, 536, 537,
	538, 539, 540, 0, 541, 542, 543, 0, 544, 545,
	546, 547, 548, 680, 549, 0, 550, 551, 557, 558,
	559, 552, 553, 560, 561, 562, 563, 564, 0, 566,
	567, 565, 568, 569, 570, 0, 571, 572, 554, 555,
	573, 574, 0, 575, 576, 577, 578, 579, 580, 581,
	681, 0, 582, 0, 583, 584, 585, 586, 588, 556,
	589, 594, 595, 682, 590, 591, 592, 593, 683, 597,
	598, 0, 599, 600, 0, 596, 587, 0, 601, 602,
	603, 604, 605, 606, 607, 362, 608, 0, 609, 684,
	685, 686, 687, 0, 618, 0, 610, 611, 612, 688,
	613, 689, 0, 614, 615, 616, 617, 0, 619, 620,
	0, 0, 621, 622, 623, 625, 626, 624, 627, 0,
	628, 0, 0, 629, 630, 631, 690, 691, 692, 0,
	633, 632, 634, 635, 693, 636, 637, 271, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 0, 0, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 286, 287, 0, 288, 289, 290,
	291, 292, 293, 644, 645, 0, 294, 646, 295, 647,
	0, 648, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 649, 650, 651, 0, 303, 304, 652, 0,
	0, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 337, 653, 654,
	0, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 347, 348, 0, 349, 350,
	351, 0, 352, 353, 354, 0, 355, 356, 655, 357,
	358, 359, 361, 363, 360, 364, 365, 366, 367, 656,
	657, 368, 0, 0, 0, 0, 0, 0, 0, 369,
	370, 371, 658, 0, 0, 0, 372, 0, 373, 374,
	0, 0, 0, 375, 376, 377, 659, 660, 378, 379,
	380, 381, 382, 383, 384, 385, 386, 0, 387, 661,
	0, 662, 388, 0, 389, 390, 391, 392, 393, 663,
	664, 665, 479, 0, 394, 395, 0, 396, 397, 398,
	399, 400, 0, 0, 0, 0, 401, 402, 403, 405,
	0, 0, 404, 666, 667, 0, 668, 0, 406, 407,
	0, 669, 0, 408, 409, 410, 0, 411, 0, 0,
	0, 412, 413, 414, 415, 416, 417, 0, 418, 420,
	419, 0, 421, 670, 0, 422, 423, 0, 0, 424,
	425, 426, 427, 428, 429, 432, 0, 0, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 0, 458, 459,
	460, 467, 469, 470, 465, 466, 468, 471, 472, 462,
	463, 474, 464, 0, 473, 461, 0, 0, 0, 475,
	476, 477, 0, 671, 478, 672, 480, 481, 0, 0,
	482, 0, 0, 0, 484, 485, 486, 0, 0, 487,
	488, 673, 0, 489, 0, 674, 490, 491, 483, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 0, 501,
	502, 675, 503, 504, 505, 676, 506, 507, 508, 677,
	509, 678, 510, 511, 0, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 520, 679, 521, 522, 524, 523,
	525, 0, 526, 0, 527, 528, 529, 0, 0, 0,
	0, 0, 530, 0, 532, 533, 534, 535, 531, 536,
	537, 538, 539, 540, 0, 541, 542, 543, 0, 544,
	545, 546, 547, 548, 680, 549, 0, 550, 551, 557,
	558, 559, 552, 553, 560, 561, 562, 563, 564, 0,
	566, 567, 565, 568, 569, 570, 0, 571, 572, 554,
	555, 573, 574, 0, 575, 576, 577, 578, 579, 580,
	581, 681, 0, 582, 0, 583, 584, 585, 586, 588,
	556, 589, 594, 595, 682, 590, 591, 592, 593, 683,
	597, 598, 0, 599, 600, 0, 596, 587, 0, 601,
	602, 603, 604, 605, 606, 607, 362, 608, 0, 609,
	684, 685, 686, 687, 0, 618, 0, 610, 611, 612,
	688, 613, 689, 0, 614, 615, 616, 617, 0, 619,
	620, 0, 0, 621, 622, 623, 625, 626, 624, 627,
	0, 628, 0, 0, 629, 630, 631, 690, 691, 692,
	0, 633, 632, 634, 635, 693, 636, 637, 271, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 286, 287, 0, 288, 289,
	290, 291, 292, 293, 644, 645, 0, 294, 646, 295,
	647, 0, 648, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 649, 650, 651, 0, 303, 304, 652,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 337, 653,
	654, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 354, 0, 355, 356, 655,
	357, 358, 359, 361, 363, 360, 364, 365, 366, 367,
	656, 657, 368, 0, 0, 0, 0, 0, 0, 0,
	369, 370, 371, 658, 0, 0, 0, 372, 0, 373,
	374, 0, 0, 0, 375, 376, 377, 659, 660, 378,
	379, 380, 381, 382, 383, 384, 385, 386, 0, 387,
	661, 0, 662, 388, 0, 389, 390, 391, 392, 393,
	3627, 664, 665, 479, 0, 394, 395, 0, 396, 397,
	398, 399, 400, 0, 0, 0, 0, 401, 402, 403,
	405, 0, 0, 404, 666, 667, 0, 668, 0, 406,
	407, 0, 669, 0, 408, 409, 410, 0, 411, 0,
	0, 0, 412, 413, 414, 415, 416, 417, 0, 418,
	420, 419, 0, 421, 670, 0, 422, 423, 0, 0,
	424, 425, 426, 427, 428, 429, 432, 0, 0, 430,
	431, 433, 434, 0, 435, 436, 438, 441, 437, 439,
	440, 442, 455, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 457, 0, 456, 0, 458,
	459, 460, 467, 469, 470, 465, 466, 468, 471, 472,
	462, 463, 474, 464, 0, 473, 461, 0, 0, 0,
	475, 476, 477, 0, 671, 478, 672, 480, 481, 0,
	0, 482, 0, 0, 0, 484, 485, 486, 0, 0,
	487, 488, 673, 0, 489, 0, 674, 490, 491, 483,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 0,
	501, 502, 675, 503, 504, 505, 676, 506, 507, 508,
	677, 509, 678, 510, 511, 0, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 520, 679, 521, 522, 524,
	523, 525, 0, 526, 0, 527, 528, 529, 0, 0,
	0, 0, 0, 530, 0, 532, 533, 534, 535, 531,
	536, 537, 538, 539, 540, 0, 541, 542, 543, 0,
	544, 545, 546, 547, 548, 680, 549, 0, 550, 551,
	557, 558, 559, 552, 553, 560, 561, 562, 563, 564,
	0, 566, 567, 565, 568, 569, 570, 0, 571, 572,
	554, 555, 573, 574, 0, 575, 576, 577, 578, 579,
	580, 581, 681, 0, 582, 0, 583, 584, 585, 586,
	588, 556, 589, 594, 595, 682, 590, 591, 592, 593,
	683, 597, 598, 0, 599, 600, 0, 596, 587, 0,
	601, 602, 603, 604, 605, 606, 607, 362, 608, 0,
	609, 684, 685, 686, 687, 0, 618, 0, 610, 611,
	612, 688, 613, 689, 0, 614, 615, 616, 617, 0,
	619, 620, 0, 0, 621, 622, 623, 625, 626, 624,
	627, 0, 628, 0, 0, 629, 630, 631, 690, 691,
	692, 0, 633, 632, 634, 635, 693, 636, 637, 271,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 0,
	0, 0, 0, 0, 0, 0, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 286, 287, 0, 288,
	289, 290, 291, 292, 293, 644, 645, 0, 294, 646,
	295, 647, 0, 648, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 649, 650, 651, 0, 303, 304,
	652, 0, 0, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 335, 337,
	653, 654, 0, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 347, 348, 0,
	349, 350, 351, 0, 352, 353, 354, 0, 355, 356,
	655, 357, 358, 359, 361, 363, 360, 364, 365, 366,
	367, 656, 657, 368, 0, 0, 0, 0, 0, 0,
	0, 369, 370, 371, 658, 0, 0, 0, 372, 0,
	373, 374, 0, 0, 0, 375, 376, 377, 659, 660,
	378, 379, 380, 381, 382, 383, 384, 385, 386, 0,
	387, 661, 0, 662, 388, 0, 389, 390, 391, 392,
	393, 663, 664, 665, 479, 0, 394, 395, 0, 396,
	397, 398, 399, 400, 0, 0, 0, 0, 401, 402,
	403, 405, 0, 0, 404, 666, 667, 0, 668, 0,
	406, 407, 0, 669, 0, 408, 409, 410, 0, 411,
	0, 0, 0, 412, 413, 414, 415, 416, 417, 0,
	418, 420, 419, 0, 421, 670, 0, 422, 423, 0,
	0, 424, 425, 426, 427, 428, 429, 432, 0, 0,
	430, 431, 433, 434, 0, 435, 436, 438, 441, 437,
	439, 440, 442, 455, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 457, 0, 456, 0,
	458, 459, 460, 467, 469, 470, 465, 466, 468, 471,
	472, 462, 463, 474, 464, 0, 473, 461, 0, 0,
	0, 475, 476, 477, 0, 671, 478, 672, 480, 481,
	0, 0, 482, 0, 0, 0, 484, 485, 486, 0,
	0, 487, 488, 673, 0, 489, 0, 674, 490, 491,
	483, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	0, 501, 502, 675, 503, 504, 505, 676, 506, 507,
	508, 677, 509, 678, 510, 511, 0, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 520, 679, 521, 522,
	524, 523, 525, 0, 526, 0, 527, 528, 529, 0,
	0, 0, 0, 0, 530, 0, 532, 533, 534, 535,
	531, 536, 537, 538, 539, 540, 0, 541, 542, 543,
	0, 785, 545, 546, 547, 548, 680, 549, 0, 550,
	551, 557, 558, 559, 552, 553, 784, 561, 562, 563,
	564, 0, 566, 567, 565, 568, 569, 570, 0, 571,
	572, 554, 555, 573, 574, 0, 575, 576, 577, 578,
	579, 580, 581, 681, 0, 582, 0, 583, 584, 585,
	586, 588, 556, 589, 594, 595, 682, 590, 591, 592,
	593, 683, 597, 598, 0, 599, 600, 0, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 362, 608,
	0, 609, 782, 685, 686, 687, 0, 618, 0, 610,
	611, 612, 688, 613, 689, 0, 614, 615, 616, 617,
	0, 619, 620, 0, 0, 621, 622, 623, 625, 626,
	624, 627, 0, 628, 0, 0, 629, 630, 631, 690,
	691, 692, 0, 633, 632, 634, 635, 693, 636, 637,
	271, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 643, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 644, 645, 0, 294,
	646, 295, 647, 0, 648, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 649, 650, 651, 0, 303,
	304, 652, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 653, 654, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 355,
	356, 655, 357, 358, 359, 361, 363, 360, 364, 365,
	366, 367, 656, 657, 368, 0, 0, 0, 0, 0,
	0, 0, 369, 370, 371, 658, 0, 0, 0, 372,
	0, 373, 374, 0, 0, 0, 375, 376, 377, 659,
	660, 378, 379, 380, 381, 382, 383, 384, 385, 386,
	0, 387, 661, 0, 662, 388, 0, 389, 390, 391,
	392, 393, 3553, 664, 665, 479, 0, 394, 395, 0,
	396, 397, 398, 399, 400, 0, 0, 0, 0, 401,
	402, 403, 405, 0, 0, 404, 666, 667, 0, 668,
	0, 406, 407, 0, 669, 0, 408, 409, 410, 0,
	411, 0, 0, 0, 412, 413, 414, 415, 416, 417,
	0, 418, 420, 419, 0, 421, 670, 0, 422, 423,
	0, 0, 424, 425, 426, 427, 428, 429, 432, 0,
	0, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	0, 458, 459, 460, 467, 469, 470, 465, 466, 468,
	471, 472, 462, 463, 474, 464, 0, 473, 461, 0,
	0, 0, 475, 476, 477, 0, 671, 478, 672, 480,
	481, 0, 0, 482, 0, 0, 0, 484, 485, 486,
	0, 0, 487, 488, 673, 0, 489, 0, 674, 490,
	491, 483, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 0, 501, 502, 675, 503, 504, 505, 676, 506,
	507, 508, 677, 509, 678, 510, 511, 0, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 520, 679, 521,
	522, 524, 523, 525, 0, 526, 0, 527, 528, 529,
	0, 0, 0, 0, 0, 530, 0, 532, 533, 534,
	535, 531, 536, 537, 538, 539, 540, 0, 541, 542,
	543, 0, 544, 545, 546, 547, 548, 680, 549, 0,
	550, 551, 557, 558, 559, 552, 553, 560, 561, 562,
	563, 564, 0, 566, 567, 565, 568, 569, 570, 0,
	571, 572, 554, 555, 573, 574, 0, 575, 576, 577,
	578, 579, 580, 581, 681, 0, 582, 0, 583, 584,
	585, 586, 588, 556, 589, 594, 595, 682, 590, 591,
	592, 593, 683, 597, 598, 0, 599, 600, 0, 596,
	587, 0, 601, 602, 603, 604, 605, 606, 607, 362,
	608, 0, 609, 684, 685, 686, 687, 0, 618, 0,
	610, 611, 612, 688, 613, 689, 0, 614, 615, 616,
	617, 0, 619, 620, 0, 0, 621, 622, 623, 625,
	626, 624, 627, 0, 628, 0, 0, 629, 630, 631,
	690, 691, 692, 0, 633, 632, 634, 635, 693, 636,
	637, 271, 0, 0, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 286, 287,
	0, 288, 289, 290, 291, 292, 293, 644, 645, 0,
	294, 646, 295, 647, 0, 648, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 649, 650, 651, 0,
	303, 304, 652, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 337, 653, 654, 0, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 347,
	348, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 655, 357, 358, 359, 361, 363, 360, 364,
	365, 366, 367, 656, 657, 368, 0, 0, 0, 0,
	0, 0, 0, 369, 370, 371, 658, 0, 0, 0,
	372, 0, 373, 374, 0, 0, 0, 375, 376, 377,
	659, 660, 378, 379, 380, 381, 382, 383, 384, 385,
	386, 0, 387, 661, 0, 662, 388, 0, 389, 390,
	391, 392, 393, 3531, 664, 665, 479, 0, 394, 395,
	0, 396, 397, 398, 399, 400, 0, 0, 0, 0,
	401, 402, 403, 405, 0, 0, 404, 666, 667, 0,
	668, 0, 406, 407, 0, 669, 0, 408, 409, 410,
	0, 411, 0, 0, 0, 412, 413, 414, 415, 416,
	417, 0, 418, 420, 419, 0, 421, 670, 0, 422,
	423, 0, 0, 424, 425, 426, 427, 428, 429, 432,
	0, 0, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 0, 458, 459, 460, 467, 469, 470, 465, 466,
	468, 471, 472, 462, 463, 474, 464, 0, 473, 461,
	0, 0, 0, 475, 476, 477, 0, 671, 478, 672,
	480, 481, 0, 0, 482, 0, 0, 0, 484, 485,
	486, 0, 0, 487, 488, 673, 0, 489, 0, 674,
	490, 491, 483, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 0, 501, 502, 675, 503, 504, 505, 676,
	506, 507, 508, 677, 509, 678, 510, 511, 0, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 520, 679,
	521, 522, 524, 523, 525, 0, 526, 0, 527, 528,
	529, 0, 0, 0, 0, 0, 530, 0, 532, 533,
	534, 535, 531, 536, 537, 538, 539, 540, 0, 541,
	542, 543, 0, 544, 545, 546, 547, 548, 680, 549,
	0, 550, 551, 557, 558, 559, 552, 553, 560, 561,
	562, 563, 564, 0, 566, 567, 565, 568, 569, 570,
	0, 571, 572, 554, 555, 573, 574, 0, 575, 576,
	577, 578, 579, 580, 581, 681, 0, 582, 0, 583,
	584, 585, 586, 588, 556, 589, 594, 595, 682, 590,
	591, 592, 593, 683, 597, 598, 0, 599, 600, 0,
	596, 587, 0, 601, 602, 603, 604, 605, 606, 607,
	362, 608, 0, 609, 684, 685, 686, 687, 0, 618,
	0, 610, 611, 612, 688, 613, 689, 0, 614, 615,
	616, 617, 0, 619, 620, 0, 0, 621, 622, 623,
	625, 626, 624, 627, 0, 628, 0, 0, 629, 630,
	631, 690, 691, 692, 0, 633, 632, 634, 635, 693,
	636, 637, 271, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 0, 286,
	287, 0, 288, 289, 290, 291, 292, 293, 644, 645,
	0, 294, 646, 295, 647, 0, 648, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 649, 650, 651,
	0, 303, 304, 652, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 337, 653, 654, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 355, 356, 655, 357, 358, 359, 361, 363, 360,
	364, 365, 366, 367, 656, 657, 368, 0, 0, 0,
	0, 0, 0, 0, 369, 370, 371, 658, 0, 0,
	0, 372, 0, 373, 374, 0, 0, 0, 375, 376,
	377, 659, 660, 378, 379, 380, 381, 382, 383, 384,
	385, 386, 0, 387, 661, 0, 662, 388, 0, 389,
	390, 391, 392, 393, 3528, 664, 665, 479, 0, 394,
	395, 0, 396, 397, 398, 399, 400, 0, 0, 0,
	0, 401, 402, 403, 405, 0, 0, 404, 666, 667,
	0, 668, 0, 406, 407, 0, 669, 0, 408, 409,
	410, 0, 411, 0, 0, 0, 412, 413, 414, 415,
	416, 417, 0, 418, 420, 419, 0, 421, 670, 0,
	422, 423, 0, 0, 424, 425, 426, 427, 428, 429,
	432, 0, 0, 430, 431, 433, 434, 0, 435, 436,
	438, 441, 437, 439, 440, 442, 455, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 457,
	0, 456, 0, 458, 459, 460, 467, 469, 470, 465,
	466, 468, 471, 472, 462, 463, 474, 464, 0, 473,
	461, 0, 0, 0, 475, 476, 477, 0, 671, 478,
	672, 480, 481, 0, 0, 482, 0, 0, 0, 484,
	485, 486, 0, 0, 487, 488, 673, 0, 489, 0,
	674, 490, 491, 483, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 0, 501, 502, 675, 503, 504, 505,
	676, 506, 507, 508, 677, 509, 678, 510, 511, 0,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 520,
	679, 521, 522, 524, 523, 525, 0, 526, 0, 527,
	528, 529, 0, 0, 0, 0, 0, 530, 0, 532,
	533, 534, 535, 531, 536, 537, 538, 539, 540, 0,
	541, 542, 543, 0, 544, 545, 546, 547, 548, 680,
	549, 0, 550, 551, 557, 558, 559, 552, 553, 560,
	561, 562, 563, 564, 0, 566, 567, 565, 568, 569,
	570, 0, 571, 572, 554, 555, 573, 574, 0, 575,
	576, 577, 578, 579, 580, 581, 681, 0, 582, 0,
	583, 584, 585, 586, 588, 556, 589, 594, 595, 682,
	590, 591, 592, 593, 683, 597, 598, 0, 599, 600,
	0, 596, 587, 0, 601, 602, 603, 604, 605, 606,
	607, 362, 608, 0, 609, 684, 685, 686, 687, 0,
	618, 0, 610, 611, 612, 688, 613, 689, 0, 614,
	615, 616, 617, 0, 619, 620, 0, 0, 621, 622,
	623, 625, 626, 624, 627, 0, 628, 0, 0, 629,
	630, 631, 690, 691, 692, 0, 633, 632, 634, 635,
	693, 636, 637, 271, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 0, 0, 0, 0, 0, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	286, 287, 0, 288, 289, 290, 291, 292, 293, 644,
	645, 0, 294, 646, 295, 647, 0, 648, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 649, 650,
	651, 0, 303, 304, 652, 0, 0, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 337, 653, 654, 0, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 347, 348, 0, 349, 350, 351, 0, 352, 353,
	354, 0, 355, 356, 655, 357, 358, 359, 361, 363,
	360, 364, 365, 366, 367, 656, 657, 368, 0, 0,
	0, 0, 0, 0, 0, 369, 370, 371, 658, 0,
	0, 0, 372, 0, 373, 374, 0, 0, 0, 375,
	376, 377, 659, 660, 378, 379, 380, 381, 382, 383,
	384, 385, 386, 0, 387, 661, 0, 662, 388, 0,
	389, 390, 391, 392, 393, 3480, 664, 665, 479, 0,
	394, 395, 0, 396, 397, 398, 399, 400, 0, 0,
	0, 0, 401, 402, 403, 405, 0, 0, 404, 666,
	667, 0, 668, 0, 406, 407, 0, 669, 0, 408,
	409, 410, 0, 411, 0, 0, 0, 412, 413, 414,
	415, 416, 417, 0, 418, 420, 419, 0, 421, 670,
	0, 422, 423, 0, 0, 424, 425, 426, 427, 428,
	429, 432, 0, 0, 430, 431, 433, 434, 0, 435,
	436, 438, 441, 437, 439, 440, 442, 455, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	457, 0, 456, 0, 458, 459, 460, 467, 469, 470,
	465, 466, 468, 471, 472, 462, 463, 474, 464, 0,
	473, 461, 0, 0, 0, 475, 476, 477, 0, 671,
	478, 672, 480, 481, 0, 0, 482, 0, 0, 0,
	484, 485, 486, 0, 0, 487, 488, 673, 0, 489,
	0, 674, 490, 491, 483, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 0, 501, 502, 675, 503, 504,
	505, 676, 506, 507, 508, 677, 509, 678, 510, 511,
	0, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	520, 679, 521, 522, 524, 523, 525, 0, 526, 0,
	527, 528, 529, 0, 0, 0, 0, 0, 530, 0,
	532, 533, 534, 535, 531, 536, 537, 538, 539, 540,
	0, 541, 542, 543, 0, 544, 545, 546, 547, 548,
	680, 549, 0, 550, 551, 557, 558, 559, 552, 553,
	560, 561, 562, 563, 564, 0, 566, 567, 565, 568,
	569, 570, 0, 571, 572, 554, 555, 573, 574, 0,
	575, 576, 577, 578, 579, 580, 581, 681, 0, 582,
	0, 583, 584, 585, 586, 588, 556, 589, 594, 595,
	682, 590, 591, 592, 593, 683, 597, 598, 0, 599,
	600, 0, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 362, 608, 0, 609, 684, 685, 686, 687,
	0, 618, 0, 610, 611, 612, 688, 613, 689, 0,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 0, 628, 0, 0,
	629, 630, 631, 690, 691, 692, 0, 633, 632, 634,
	635, 693, 636, 637, 271, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 286, 287, 0, 288, 289, 290, 291, 292, 293,
	644, 645, 0, 294, 646, 295, 647, 0, 648, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 649,
	650, 651, 0, 303, 304, 652, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 337, 653, 654, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 355, 356, 655, 357, 358, 359, 361,
	363, 360, 364, 365, 366, 367, 656, 657, 368, 0,
	0, 0, 0, 0, 0, 0, 369, 370, 371, 658,
	0, 0, 0, 372, 0, 373, 374, 0, 0, 0,
	375, 376, 377, 659, 660, 378, 379, 380, 381, 382,
	383, 384, 385, 386, 0, 387, 661, 0, 662, 388,
	0, 389, 390, 391, 392, 393, 3478, 664, 665, 479,
	0, 394, 395, 0, 396, 397, 398, 399, 400, 0,
	0, 0, 0, 401, 402, 403, 405, 0, 0, 404,
	666, 667, 0, 668, 0, 406, 407, 0, 669, 0,
	408, 409, 410, 0, 411, 0, 0, 0, 412, 413,
	414, 415, 416, 417, 0, 418, 420, 419, 0, 421,
	670, 0, 422, 423, 0, 0, 424, 425, 426, 427,
	428, 429, 432, 0, 0, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 440, 442, 455, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 456, 0, 458, 459, 460, 467, 469,
	470, 465, 466, 468, 471, 472, 462, 463, 474, 464,
	0, 473, 461, 0, 0, 0, 475, 476, 477, 0,
	671, 478, 672, 480, 481, 0, 0, 482, 0, 0,
	0, 484, 485, 486, 0, 0, 487, 488, 673, 0,
	489, 0, 674, 490, 491, 483, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 0, 501, 502, 675, 503,
	504, 505, 676, 506, 507, 508, 677, 509, 678, 510,
	511, 0, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 520, 679, 521, 522, 524, 523, 525, 0, 526,
	0, 527, 528, 529, 0, 0, 0, 0, 0, 530,
	0, 532, 533, 534, 535, 531, 536, 537, 538, 539,
	540, 0, 541, 542, 543, 0, 544, 545, 546, 547,
	548, 680, 549, 0, 550, 551, 557, 558, 559, 552,
	553, 560, 561, 562, 563, 564, 0, 566, 567, 565,
	568, 569, 570, 0, 571, 572, 554, 555, 573, 574,
	0, 575, 576, 577, 578, 579, 580, 581, 681, 0,
	582, 0, 583, 584, 585, 586, 588, 556, 589, 594,
	595, 682, 590, 591, 592, 593, 683, 597, 598, 0,
	599, 600, 0, 596, 587, 0, 601, 602, 603, 604,
	605, 606, 607, 362, 608, 0, 609, 684, 685, 686,
	687, 0, 618, 0, 610, 611, 612, 688, 613, 689,
	0, 614, 615, 616, 617, 0, 619, 620, 0, 0,
	621, 622, 623, 625, 626, 624, 627, 0, 628, 0,
	0, 629, 630, 631, 690, 691, 692, 0, 633, 632,
	634, 635, 693, 636, 637, 271, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 644, 645, 0, 294, 646, 295, 647, 0, 648,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	649, 650, 651, 0, 303, 304, 652, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 337, 653, 654, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 655, 357, 358, 359,
	361, 363, 360, 364, 365, 366, 367, 656, 657, 368,
	0, 0, 0, 0, 0, 0, 0, 369, 370, 371,
	658, 0, 0, 0, 372, 0, 373, 374, 0, 0,
	0, 375, 376, 377, 659, 660, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 0, 387, 661, 0, 662,
	388, 0, 389, 390, 391, 392, 393, 3463, 664, 665,
	479, 0, 394, 395, 0, 396, 397, 398, 399, 400,
	0, 0, 0, 0, 401, 402, 403, 405, 0, 0,
	404, 666, 667, 0, 668, 0, 406, 407, 0, 669,
	0, 408, 409, 410, 0, 411, 0, 0, 0, 412,
	413, 414, 415, 416, 417, 0, 418, 420, 419, 0,
	421, 670, 0, 422, 423, 0, 0, 424, 425, 426,
	427, 428, 429, 432, 0, 0, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 0, 458, 459, 460, 467,
	469, 470, 465, 466, 468, 471, 472, 462, 463, 474,
	464, 0, 473, 461, 0, 0, 0, 475, 476, 477,
	0, 671, 478, 672, 480, 481, 0, 0, 482, 0,
	0, 0, 484, 485, 486, 0, 0, 487, 488, 673,
	0, 489, 0, 674, 490, 491, 483, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 0, 501, 502, 675,
	503, 504, 505, 676, 506, 507, 508, 677, 509, 678,
	510, 511, 0, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 520, 679, 521, 522, 524, 523, 525, 0,
	526, 0, 527, 528, 529, 0, 0, 0, 0, 0,
	530, 0, 532, 533, 534, 535, 531, 536, 537, 538,
	539, 540, 0, 541, 542, 543, 0, 544, 545, 546,
	547, 548, 680, 549, 0, 550, 551, 557, 558, 559,
	552, 553, 560, 561, 562, 563, 564, 0, 566, 567,
	565, 568, 569, 570, 0, 571, 572, 554, 555, 573,
	574, 0, 575, 576, 577, 578, 579, 580, 581, 681,
	0, 582, 0, 583, 584, 585, 586, 588, 556, 589,
	594, 595, 682, 590, 591, 592, 593, 683, 597, 598,
	0, 599, 600, 0, 596, 587, 0, 601, 602, 603,
	604, 605, 606, 607, 362, 608, 0, 609, 684, 685,
	686, 687, 0, 618, 0, 610, 611, 612, 688, 613,
	689, 0, 614, 615, 616, 617, 0, 619, 620, 0,
	0, 621, 622, 623, 625, 626, 624, 627, 0, 628,
	0, 0, 629, 630, 631, 690, 691, 692, 0, 633,
	632, 634, 635, 693, 636, 637, 271, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 286, 287, 0, 288, 289, 290, 291,
	292, 293, 644, 645, 0, 294, 646, 295, 647, 0,
	648, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 649, 650, 651, 0, 303, 304, 652, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 337, 653, 654, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 355, 356, 655, 357, 358,
	359, 361, 363, 360, 364, 365, 366, 367, 656, 657,
	368, 0, 0, 0, 0, 0, 0, 0, 369, 370,
	371, 658, 0, 0, 0, 372, 0, 373, 374, 0,
	0, 0, 375, 376, 377, 659, 660, 378, 379, 380,
	381, 382, 383, 384, 385, 386, 0, 387, 661, 0,
	662, 388, 0, 389, 390, 391, 392, 393, 3068, 664,
	665, 479, 0, 394, 395, 0, 396, 397, 398, 399,
	400, 0, 0, 0, 0, 401, 402, 403, 405, 0,
	0, 404, 666, 667, 0, 668, 0, 406, 407, 0,
	669, 0, 408, 409, 410, 0, 411, 0, 0, 0,
	412, 413, 414, 415, 416, 417, 0, 418, 420, 419,
	0, 421, 670, 0, 422, 423, 0, 0, 424, 425,
	426, 427, 428, 429, 432, 0, 0, 430, 431, 433,
	434, 0, 435, 436, 438, 441, 437, 439, 440, 442,
	455, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 457, 0, 456, 0, 458, 459, 460,
	467, 469, 470, 465, 466, 468, 471, 472, 462, 463,
	474, 464, 0, 473, 461, 0, 0, 0, 475, 476,
	477, 0, 671, 478, 672, 480, 481, 0, 0, 482,
	0, 0, 0, 484, 485, 486, 0, 0, 487, 488,
	673, 0, 489, 0, 674, 490, 491, 483, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 0, 501, 502,
	675, 503, 504, 505, 676, 506, 507, 508, 677, 509,
	678, 510, 511, 0, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 520, 679, 521, 522, 524, 523, 525,
	0, 526, 0, 527, 528, 529, 0, 0, 0, 0,
	0, 530, 0, 532, 533, 534, 535, 531, 536, 537,
	538, 539, 540, 0, 541, 542, 543, 0, 544, 545,
	546, 547, 548, 680, 549, 0, 550, 551, 557, 558,
	559, 552, 553, 560, 561, 562, 563, 564, 0, 566,
	567, 565, 568, 569, 570, 0, 571, 572, 554, 555,
	573, 574, 0, 575, 576, 577, 578, 579, 580, 581,
	681, 0, 582, 0, 583, 584, 585, 586, 588, 556,
	589, 594, 595, 682, 590, 591, 592, 593, 683, 597,
	598, 0, 599, 600, 0, 596, 587, 0, 601, 602,
	603, 604, 605, 606, 607, 362, 608, 0, 609, 684,
	685, 686, 687, 0, 618, 0, 610, 611, 612, 688,
	613, 689, 0, 614, 615, 616, 617, 0, 619, 620,
	0, 0, 621, 622, 623, 625, 626, 624, 627, 0,
	628, 0, 0, 629, 630, 631, 690, 691, 692, 0,
	633, 632, 634, 635, 693, 636, 637, 271, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 0, 0, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 286, 287, 0, 288, 289, 290,
	291, 292, 293, 644, 645, 0, 294, 646, 295, 647,
	0, 648, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 649, 650, 651, 0, 303, 304, 652, 0,
	0, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 337, 653, 654,
	0, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 347, 348, 0, 349, 350,
	351, 0, 352, 353, 354, 0, 355, 356, 655, 357,
	358, 359, 361, 363, 360, 364, 365, 366, 367, 656,
	657, 368, 0, 0, 0, 0, 0, 0, 0, 369,
	370, 371, 658, 0, 0, 0, 372, 0, 373, 374,
	0, 0, 0, 375, 376, 377, 659, 660, 378, 379,
	380, 381, 382, 383, 384, 385, 386, 0, 387, 661,
	0, 662, 388, 0, 389, 390, 391, 392, 393, 663,
	664, 665, 479, 0, 394, 395, 0, 396, 397, 398,
	399, 400, 0, 0, 0, 0, 401, 402, 403, 405,
	0, 0, 404, 666, 667, 0, 668, 0, 406, 407,
	0, 669, 0, 408, 409, 410, 0, 411, 0, 0,
	0, 412, 413, 414, 415, 416, 417, 0, 418, 420,
	419, 0, 421, 670, 0, 422, 423, 0, 0, 424,
	425, 426, 427, 428, 429, 432, 0, 0, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 0, 458, 459,
	460, 467, 469, 470, 465, 466, 468, 471, 472, 462,
	463, 474, 464, 0, 473, 461, 0, 0, 0, 475,
	476, 477, 0, 671, 478, 672, 480, 481, 0, 0,
	482, 0, 0, 0, 484, 485, 486, 0, 0, 487,
	488, 673, 0, 489, 0, 674, 490, 491, 483, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 0, 501,
	502, 675, 503, 504, 505, 676, 506, 507, 508, 677,
	509, 678, 510, 511, 0, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 520, 679, 521, 522, 524, 523,
	525, 0, 526, 0, 527, 528, 529, 0, 0, 0,
	0, 0, 530, 0, 532, 533, 534, 535, 531, 536,
	537, 538, 539, 540, 0, 541, 542, 543, 0, 544,
	545, 546, 547, 548, 680, 549, 0, 550, 551, 766,
	558, 559, 552, 553, 560, 561, 562, 563, 564, 0,
	566, 567, 565, 568, 569, 570, 0, 571, 572, 554,
	555, 573, 574, 0, 575, 576, 577, 578, 579, 580,
	581, 681, 0, 582, 0, 583, 584, 585, 586, 588,
	556, 589, 594, 595, 682, 590, 591, 592, 593, 683,
	597, 598, 0, 599, 600, 0, 596, 587, 0, 601,
	602, 603, 604, 605, 606, 607, 362, 608, 0, 609,
	684, 685, 686, 687, 0, 618, 0, 610, 611, 612,
	688, 613, 689, 0, 614, 615, 616, 617, 0, 619,
	620, 0, 0, 621, 622, 623, 625, 626, 624, 627,
	0, 628, 0, 0, 629, 630, 631, 690, 691, 692,
	0, 633, 632, 634, 635, 693, 636, 637, 271, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	643, 0, 2305, 0, 0, 286, 287, 0, 288, 289,
	290, 291, 292, 293, 644, 645, 0, 294, 646, 295,
	647, 0, 648, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 649, 650, 651, 0, 303, 304, 652,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 337, 653,
	654, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 354, 0, 355, 356, 655,
	357, 358, 359, 361, 363, 360, 364, 365, 366, 367,
	656, 657, 368, 0, 0, 0, 0, 0, 0, 0,
	369, 370, 371, 658, 0, 0, 0, 372, 0, 373,
	374, 0, 0, 0, 375, 376, 377, 659, 660, 378,
	379, 380, 381, 382, 383, 384, 385, 386, 0, 387,
	661, 0, 662, 388, 0, 389, 390, 391, 392, 393,
	663, 664, 665, 479, 0, 394, 395, 0, 396, 397,
	398, 399, 400, 0, 0, 0, 0, 401, 402, 403,
	405, 0, 0, 404, 666, 667, 0, 668, 0, 406,
	407, 0, 669, 0, 408, 409, 410, 0, 411, 0,
	0, 0, 412, 413, 414, 415, 416, 417, 0, 418,
	420, 419, 0, 421, 670, 0, 422, 423, 0, 0,
	424, 425, 426, 427, 428, 429, 432, 0, 0, 430,
	431, 433, 434, 0, 435, 436, 438, 441, 437, 439,
	440, 442, 455, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 457, 0, 456, 0, 458,
	459, 460, 467, 469, 470, 465, 466, 468, 471, 472,
	462, 463, 474, 464, 0, 473, 461, 0, 0, 0,
	475, 476, 477, 0, 671, 478, 672, 480, 481, 0,
	0, 482, 0, 0, 0, 484, 485, 486, 0, 0,
	487, 488, 673, 0, 489, 0, 674, 490, 491, 483,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 0,
	501, 502, 675, 503, 504, 505, 676, 506, 507, 508,
	677, 509, 678, 510, 511, 0, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 520, 679, 521, 522, 524,
	523, 525, 0, 526, 0, 527, 528, 529, 0, 0,
	0, 0, 0, 530, 0, 532, 533, 534, 535, 531,
	536, 537, 538, 539, 540, 0, 541, 542, 543, 0,
	544, 545, 546, 547, 548, 680, 549, 0, 550, 551,
	557, 558, 559, 552, 553, 560, 561, 562, 563, 564,
	0, 566, 567, 565, 568, 569, 570, 0, 0, 572,
	554, 555, 573, 574, 0, 575, 576, 577, 578, 579,
	580, 581, 681, 0, 582, 0, 583, 584, 585, 586,
	588, 556, 589, 594, 595, 682, 590, 591, 592, 593,
	683, 597, 598, 0, 599, 600, 0, 596, 587, 0,
	601, 602, 603, 604, 605, 606, 607, 362, 608, 0,
	609, 684, 685, 686, 687, 0, 618, 0, 610, 611,
	612, 688, 613, 689, 0, 614, 615, 616, 617, 0,
	619, 620, 0, 0, 621, 622, 623, 625, 626, 624,
	627, 0, 628, 0, 0, 629, 630, 631, 690, 691,
	692, 0, 633, 632, 634, 635, 693, 636, 637, 271,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 0,
	0, 0, 0, 0, 0, 0, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 286, 287, 0, 288,
	289, 290, 291, 292, 293, 644, 645, 0, 294, 646,
	295, 647, 0, 648, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 649, 650, 651, 0, 303, 304,
	652, 0, 0, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 335, 337,
	653, 654, 0, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 347, 348, 0,
	349, 350, 351, 0, 352, 353, 354, 0, 355, 356,
	655, 357, 358, 359, 361, 363, 360, 364, 365, 366,
	367, 656, 657, 368, 0, 0, 0, 0, 0, 0,
	0, 369, 370, 371, 658, 0, 0, 0, 372, 0,
	373, 374, 0, 0, 0, 375, 376, 377, 659, 660,
	378, 379, 380, 381, 382, 383, 384, 385, 386, 0,
	387, 661, 0, 662, 388, 0, 389, 390, 391, 392,
	393, 1295, 664, 665, 479, 0, 394, 395, 0, 396,
	397, 398, 399, 400, 0, 0, 0, 0, 401, 402,
	403, 405, 0, 0, 404, 666, 667, 0, 668, 0,
	406, 407, 0, 669, 0, 408, 409, 410, 0, 411,
	0, 0, 0, 412, 413, 414, 415, 416, 417, 0,
	418, 420, 419, 0, 421, 670, 0, 422, 423, 0,
	0, 424, 425, 426, 427, 428, 429, 432, 0, 0,
	430, 431, 433, 434, 0, 435, 436, 438, 441, 437,
	439, 440, 442, 455, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 457, 0, 456, 0,
	458, 459, 460, 467, 469, 470, 465, 466, 468, 471,
	472, 462, 463, 474, 464, 0, 473, 461, 0, 0,
	0, 475, 476, 477, 0, 671, 478, 672, 480, 481,
	0, 0, 482, 0, 0, 0, 484, 485, 486, 0,
	0, 487, 488, 673, 0, 489, 0, 674, 490, 491,
	483, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	0, 501, 502, 675, 503, 504, 505, 676, 506, 507,
	508, 677, 509, 678, 510, 511, 0, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 520, 679, 521, 522,
	524, 523, 525, 0, 526, 0, 527, 528, 529, 0,
	0, 0, 0, 0, 530, 0, 532, 533, 534, 535,
	531, 536, 537, 538, 539, 540, 0, 541, 542, 543,
	0, 544, 545, 546, 547, 548, 680, 549, 0, 550,
	551, 557, 558, 559, 552, 553, 560, 561, 562, 563,
	564, 0, 566, 567, 565, 568, 569, 570, 0, 571,
	572, 554, 555, 573, 574, 0, 575, 576, 577, 578,
	579, 580, 581, 681, 0, 582, 0, 583, 584, 585,
	586, 588, 556, 589, 594, 595, 682, 590, 591, 592,
	593, 683, 597, 598, 0, 599, 600, 0, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 362, 608,
	0, 609, 684, 685, 686, 687, 0, 618, 0, 610,
	611, 612, 688, 613, 689, 0, 614, 615, 616, 617,
	0, 619, 620, 0, 0, 621, 622, 623, 625, 626,
	624, 627, 0, 628, 0, 0, 629, 630, 631, 690,
	691, 692, 0, 633, 632, 634, 635, 693, 636, 637,
	271, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 643, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 644, 645, 0, 294,
	646, 295, 647, 0, 648, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 649, 650, 651, 0, 303,
	304, 652, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 653, 654, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 355,
	356, 655, 357, 358, 359, 361, 363, 360, 364, 365,
	366, 367, 656, 657, 368, 0, 0, 0, 0, 0,
	0, 0, 369, 370, 371, 658, 0, 0, 0, 372,
	0, 373, 374, 0, 0, 0, 375, 376, 377, 659,
	660, 378, 379, 380, 381, 382, 383, 384, 385, 386,
	0, 387, 661, 0, 662, 388, 0, 389, 390, 391,
	392, 393, 663, 664, 665, 479, 0, 394, 395, 0,
	396, 397, 398, 399, 400, 0, 0, 0, 0, 401,
	402, 403, 405, 0, 0, 404, 666, 667, 0, 668,
	0, 406, 407, 0, 669, 0, 408, 409, 410, 0,
	411, 0, 0, 0, 412, 413, 414, 415, 416, 417,
	0, 418, 420, 419, 0, 421, 670, 0, 422, 423,
	0, 0, 424, 425, 426, 427, 428, 429, 432, 0,
	0, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	0, 458, 459, 460, 467, 469, 470, 465, 466, 468,
	471, 472, 462, 463, 474, 464, 0, 473, 461, 0,
	0, 0, 475, 476, 477, 0, 671, 478, 672, 480,
	481, 0, 0, 482, 0, 0, 0, 484, 485, 486,
	0, 0, 487, 488, 673, 0, 489, 0, 674, 490,
	491, 483, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 0, 501, 502, 675, 503, 504, 505, 676, 506,
	507, 508, 677, 509, 678, 510, 511, 0, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 520, 679, 521,
	522, 1227, 523, 525, 0, 526, 0, 527, 528, 529,
	0, 0, 0, 0, 0, 530, 0, 532, 533, 534,
	535, 531, 536, 537, 538, 539, 540, 0, 541, 542,
	543, 0, 544, 545, 546, 547, 548, 680, 549, 0,
	550, 551, 557, 558, 559, 552, 553, 560, 561, 562,
	563, 564, 0, 566, 567, 565, 568, 569, 570, 0,
	571, 572, 554, 555, 573, 574, 0, 575, 576, 577,
	578, 579, 580, 581, 681, 0, 582, 0, 583, 584,
	585, 586, 588, 556, 589, 594, 595, 682, 590, 591,
	592, 593, 683, 597, 598, 0, 599, 600, 0, 596,
	587, 0, 601, 602, 603, 604, 605, 606, 607, 362,
	608, 0, 609, 684, 685, 686, 687, 0, 618, 0,
	610, 611, 612, 688, 613, 689, 0, 614, 615, 616,
	617, 0, 619, 620, 0, 0, 621, 622, 623, 625,
	626, 624, 627, 0, 628, 0, 0, 629, 630, 631,
	690, 691, 692, 0, 633, 632, 634, 635, 693, 636,
	637, 271, 0, 0, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 286, 287,
	0, 288, 289, 290, 291, 292, 293, 644, 645, 0,
	294, 646, 295, 647, 0, 648, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 649, 650, 651, 0,
	303, 304, 652, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 337, 653, 654, 0, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 347,
	348, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 655, 357, 358, 359, 361, 363, 360, 364,
	365, 366, 367, 656, 657, 368, 0, 0, 0, 0,
	0, 0, 0, 369, 370, 371, 658, 0, 0, 0,
	372, 0, 373, 374, 0, 0, 0, 375, 376, 377,
	659, 660, 378, 379, 380, 381, 382, 383, 384, 385,
	386, 0, 387, 661, 0, 662, 0, 0, 389, 390,
	391, 392, 393, 663, 664, 665, 479, 0, 394, 395,
	0, 396, 397, 398, 399, 400, 0, 0, 0, 0,
	401, 402, 403, 405, 0, 0, 404, 666, 667, 0,
	668, 0, 406, 407, 0, 669, 0, 408, 409, 410,
	0, 411, 0, 0, 0, 412, 413, 414, 415, 416,
	417, 0, 418, 420, 419, 0, 421, 670, 0, 422,
	423, 0, 0, 424, 425, 426, 427, 428, 429, 432,
	0, 0, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 0, 458, 459, 460, 467, 469, 470, 465, 466,
	468, 471, 472, 462, 463, 474, 464, 0, 473, 461,
	0, 0, 0, 475, 476, 477, 0, 671, 478, 672,
	480, 481, 0, 0, 482, 0, 0, 0, 484, 485,
	486, 0, 0, 487, 488, 673, 0, 489, 0, 674,
	490, 491, 483, 492, 493, 0, 495, 496, 497, 498,
	499, 500, 0, 501, 502, 675, 503, 504, 505, 676,
	506, 507, 508, 677, 509, 678, 510, 511, 0, 512,
	513, 0, 514, 515, 516, 517, 0, 519, 520, 679,
	521, 522, 524, 523, 525, 0, 526, 0, 527, 528,
	529, 0, 0, 0, 0, 0, 530, 0, 532, 533,
	534, 535, 531, 536, 537, 538, 539, 540, 0, 541,
	542, 543, 0, 544, 545, 546, 547, 548, 680, 0,
	0, 550, 551, 557, 558, 559, 552, 553, 560, 561,
	562, 563, 564, 0, 566, 567, 565, 568, 569, 570,
	0, 571, 572, 554, 555, 573, 574, 0, 575, 576,
	577, 578, 579, 580, 581, 681, 0, 582, 0, 583,
	584, 585, 586, 588, 556, 589, 594, 595, 682, 590,
	591, 592, 593, 683, 597, 598, 0, 599, 600, 0,
	596, 587, 0, 601, 602, 603, 604, 605, 606, 607,
	362, 608, 0, 609, 684, 685, 686, 687, 0, 618,
	0, 610, 611, 612, 688, 613, 689, 0, 614, 615,
	616, 617, 0, 619, 620, 0, 0, 621, 622, 623,
	625, 626, 624, 627, 0, 628, 0, 0, 629, 630,
	631, 690, 691, 692, 0, 633, 632, 634, 635, 693,
	636, 637, 0, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 1800, 1801, 0, 1833, 1834, 1835, 1844, 1845,
	1846, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1837, 1831, 0, 0, 0, 0,
	0, 0, 1803, 0, 0, 0, 0, 0, 0, 0,
	0, 1850, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1856, 0,
	0, 0, 0, 0, 0, 1800, 1801, 1802, 1833, 1834,
	1835, 1844, 1845, 1846, 0, 0, 0, 1822, 0, 0,
	0, 0, 0, 0, 0, 0, 1819, 1837, 1831, 0,
	0, 0, 0, 0, 0, 1803, 0, 0, 0, 0,
	0, 0, 0, 0, 1850, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1856, 0, 0, 0, 0, 0, 0, 0, 0,
	1802, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1822, 0, 0, 0, 0, 0, 0, 0, 0, 1819,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1825, 1826, 1827, 1828, 0, 0, 0,
	0, 0, 0, 1808, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1800, 1801, 0, 1833,
	1834, 1835, 1844, 1845, 1846, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1837, 1831,
	0, 1841, 0, 0, 1851, 0, 1803, 0, 0, 0,
	0, 1830, 1832, 0, 0, 1850, 1825, 1826, 1827, 1828,
	0, 0, 0, 0, 0, 0, 1808, 0, 1847, 0,
	1848, 0, 1856, 0, 0, 0, 0, 1817, 1818, 0,
	0, 1802, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1822, 0, 0, 0, 1839, 0, 0, 0, 0,
	1819, 0, 0, 0, 1841, 0, 0, 1851, 0, 0,
	1823, 0, 0, 0, 1830, 1832, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1847, 0, 1848, 0, 0, 0, 0, 0, 0,
	1817, 1818, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1849, 0, 1839, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1823, 0, 1838, 0, 1825, 1826, 1827,
	1828, 0, 0, 0, 0, 0, 1853, 1808, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1849,
	0, 0, 0, 0, 0, 1841, 0, 0, 1851, 0,
	0, 0, 0, 0, 0, 1830, 1832, 0, 1838, 0,
	0, 1829, 0, 0, 0, 0, 0, 0, 0, 1853,
	0, 0, 1847, 0, 1848, 0, 0, 0, 0, 0,
	0, 1817, 1818, 0, 1824, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1839,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1842, 1800, 1801, 1823, 1833, 1834, 1835, 1844, 1845,
	1846, 0, 0, 0, 1829, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1837, 1831, 0, 0, 0, 0,
	0, 0, 1803, 1855, 0, 0, 0, 1824, 0, 0,
	0, 1850, 0, 0, 0, 0, 0, 0, 0, 0,
	1849, 0, 0, 0, 0, 0, 0, 0, 1856, 0,
	0, 0, 0, 0, 1842, 0, 0, 1802, 0, 1838,
	0, 0, 0, 0, 0, 0, 0, 1822, 0, 0,
	1853, 0, 0, 0, 0, 0, 1819, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1855, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1840, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1814, 1815, 1821, 1843,
	1820, 1816, 0, 1813, 1811, 1812, 1804, 1805, 1806, 1807,
	1809, 1810, 0, 0, 0, 1829, 0, 0, 0, 0,
	3280, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1824, 0,
	0, 0, 0, 1825, 1826, 1827, 1828, 0, 0, 1840,
	0, 0, 0, 1808, 0, 0, 0, 0, 0, 1814,
	1815, 1821, 1843, 1820, 1816, 1842, 1813, 1811, 1812, 1804,
	1805, 1806, 1807, 1809, 1810, 0, 0, 0, 0, 0,
	0, 0, 0, 3279, 0, 0, 0, 0, 0, 0,
	0, 1841, 0, 0, 1851, 0, 0, 1855, 0, 0,
	0, 1830, 1832, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1847, 0,
	1848, 0, 0, 0, 0, 0, 0, 1817, 1818, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1839, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1823, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1840, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1814, 1815, 1821, 1843, 1820, 1816, 0, 1813, 1811, 1812,
	1804, 1805, 1806, 1807, 1809, 1810, 0, 0, 0, 0,
	0, 0, 0, 0, 3278, 0, 1849, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1838, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1853, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1800, 1801, 0, 1833, 1834, 1835, 1844,
	1845, 1846, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1837, 1831, 0, 0, 0,
	0, 1829, 0, 1803, 0, 0, 0, 0, 0, 0,
	0, 0, 1850, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1824, 0, 0, 0, 0, 1856,
	0, 0, 0, 0, 0, 0, 1800, 1801, 1802, 1833,
	1834, 1835, 1844, 1845, 1846, 0, 0, 0, 1822, 0,
	0, 1842, 0, 0, 0, 0, 0, 1819, 1837, 1831,
	0, 0, 0, 0, 0, 0, 1803, 0, 0, 0,
	0, 0, 0, 0, 0, 1850, 0, 0, 0, 0,
	0, 0, 0, 1855, 0, 0, 0, 0, 0, 0,
	0, 0, 1856, 0, 0, 0, 0, 0, 0, 0,
	0, 1802, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1822, 0, 0, 0, 0, 0, 0, 0, 0,
	1819, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1825, 1826, 1827, 1828, 0, 0,
	0, 0, 0, 0, 1808, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1840, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1814, 1815, 1821, 1843,
	1820, 1816, 0, 1813, 1811, 1812, 1804, 1805, 1806, 1807,
	1809, 1810, 1841, 0, 0, 1851, 0, 0, 0, 0,
	2594, 0, 1830, 1832, 0, 0, 0, 1825, 1826, 1827,
	1828, 0, 0, 0, 0, 0, 0, 1808, 0, 1847,
	0, 1848, 0, 0, 0, 0, 0, 0, 1817, 1818,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1839, 0, 0, 0,
	0, 0, 0, 0, 0, 1841, 0, 0, 1851, 0,
	0, 1823, 0, 0, 0, 1830, 1832, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1847, 0, 1848, 0, 0, 0, 0, 0,
	0, 1817, 1818, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1849, 0, 1839,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1823, 0, 1838, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1853, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1849, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1838,
	0, 0, 1829, 0, 0, 0, 0, 0, 0, 0,
	1853, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1824, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1800, 1801, 0,
	1833, 1834, 1835, 1844, 1845, 1846, 0, 0, 0, 0,
	0, 0, 1842, 0, 0, 0, 0, 0, 0, 1837,
	1831, 0, 0, 0, 0, 1829, 0, 1803, 0, 0,
	0, 0, 0, 0, 0, 0, 1850, 0, 0, 0,
	0, 0, 0, 0, 1855, 0, 0, 0, 1824, 0,
	0, 0, 0, 1856, 0, 0, 0, 0, 0, 0,
	0, 0, 1802, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1822, 0, 0, 1842, 0, 0, 0, 0,
	0, 1819, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1855, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1840, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1814, 1815, 1821,
	1843, 1820, 1816, 0, 1813, 1811, 1812, 1804, 1805, 1806,
	1807, 1809, 1810, 0, 0, 0, 0, 4589, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1825, 1826,
	1827, 1828, 0, 0, 0, 0, 0, 0, 1808, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1840, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1814, 1815, 1821, 1843, 1820, 1816, 0, 1813, 1811, 1812,
	1804, 1805, 1806, 1807, 1809, 1810, 1841, 0, 0, 1851,
	4548, 0, 0, 0, 0, 0, 1830, 1832, 0, 0,
	0, 0, 0, 1800, 1801, 0, 1833, 1834, 1835, 1844,
	1845, 1846, 0, 1847, 0, 1848, 0, 0, 0, 0,
	0, 0, 1817, 1818, 0, 1837, 1831, 0, 0, 0,
	0, 0, 0, 1803, 0, 0, 0, 0, 0, 0,
	1839, 0, 1850, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1823, 0, 0, 0, 1856,
	0, 0, 0, 0, 0, 0, 0, 0, 1802, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1822, 0,
	0, 0, 0, 0, 0, 0, 0, 1819, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1849, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1838, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1853, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1825, 1826, 1827, 1828, 0, 0,
	0, 0, 0, 0, 1808, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1829, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1824,
	0, 0, 1841, 0, 0, 1851, 0, 0, 0, 0,
	0, 0, 1830, 1832, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1842, 0, 0, 1847,
	0, 1848, 0, 0, 0, 0, 0, 0, 1817, 1818,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1839, 0, 1855, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1823, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1849, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1840, 0, 0, 0, 0, 1838, 0, 0, 0,
	0, 1814, 1815, 1821, 1843, 1820, 1816, 1853, 1813, 1811,
	1812, 1804, 1805, 1806, 1807, 1809, 1810, 0, 0, 0,
	0, 4547, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1800, 1801, 0, 1833, 1834, 1835,
	1844, 1845, 1846, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1837, 1831, 0, 0,
	0, 0, 1829, 0, 1803, 0, 0, 0, 0, 0,
	0, 0, 0, 1850, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1824, 0, 0, 0, 0,
	1856, 0, 0, 0, 0, 0, 0, 1800, 1801, 1802,
	1833, 1834, 1835, 1844, 1845, 1846, 0, 0, 0, 1822,
	0, 0, 1842, 0, 0, 0, 0, 0, 1819, 1837,
	1831, 0, 0, 0, 0, 0, 0, 1803, 0, 0,
	0, 0, 0, 0, 0, 0, 1850, 0, 0, 0,
	0, 0, 0, 0, 1855, 0, 0, 0, 0, 0,
	0, 0, 0, 1856, 0, 0, 0, 0, 0, 0,
	0, 0, 1802, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1822, 0, 0, 0, 0, 0, 0, 0,
	0, 1819, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1825, 1826, 1827, 1828, 0,
	0, 0, 0, 0, 0, 1808, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1840, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1814, 1815, 1821,
	1843, 1820, 1816, 0, 1813, 1811, 1812, 1804, 1805, 1806,
	1807, 1809, 1810, 1841, 0, 0, 1851, 4358, 0, 0,
	0, 0, 0, 1830, 1832, 0, 0, 0, 1825, 1826,
	1827, 1828, 0, 0, 0, 0, 0, 0, 1808, 0,
	1847, 0, 1848, 0, 0, 0, 0, 0, 0, 1817,
	1818, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1839, 0, 0,
	0, 0, 0, 0, 0, 0, 1841, 0, 0, 1851,
	0, 0, 1823, 0, 0, 0, 1830, 1832, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1847, 0, 1848, 0, 0, 0, 0,
	0, 0, 1817, 1818, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1849, 0,
	1839, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1823, 0, 1838, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1853, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1849, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1838, 0, 0, 1829, 0, 0, 0, 0, 0, 0,
	0, 1853, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1824, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1800, 1801,
	0, 1833, 1834, 1835, 1844, 1845, 1846, 0, 0, 0,
	0, 0, 0, 1842, 0, 0, 0, 0, 0, 0,
	1837, 1831, 0, 0, 0, 0, 1829, 0, 1803, 0,
	0, 0, 0, 0, 0, 0, 0, 1850, 0, 0,
	0, 0, 0, 0, 0, 1855, 0, 0, 0, 1824,
	0, 0, 0, 0, 1856, 0, 0, 0, 0, 0,
	0, 0, 0, 1802, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1822, 0, 0, 1842, 0, 0, 0,
	0, 0, 1819, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1855, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1840, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1814, 1815,
	1821, 1843, 1820, 1816, 0, 1813, 1811, 1812, 1804, 1805,
	1806, 1807, 1809, 1810, 0, 0, 0, 0, 4191, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1825,
	1826, 1827, 1828, 0, 0, 0, 0, 0, 0, 1808,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1840, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1814, 1815, 1821, 1843, 1820, 1816, 0, 1813, 1811,
	1812, 1804, 1805, 1806, 1807, 1809, 1810, 1841, 0, 0,
	1851, 4121, 0, 0, 0, 0, 0, 1830, 1832, 0,
	0, 0, 0, 0, 1800, 1801, 0, 1833, 1834, 1835,
	1844, 1845, 1846, 0, 1847, 0, 1848, 0, 0, 0,
	0, 0, 0, 1817, 1818, 0, 1837, 1831, 0, 0,
	0, 0, 0, 0, 1803, 0, 0, 0, 0, 0,
	0, 1839, 0, 1850, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1823, 0, 0, 0,
	1856, 0, 0, 0, 0, 0, 0, 0, 0, 1802,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1822,
	0, 0, 0, 0, 0, 0, 0, 0, 1819, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1849, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1838, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1853, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1825, 1826, 1827, 1828, 0,
	0, 0, 0, 0, 0, 1808, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1829, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1824, 0, 0, 1841, 0, 0, 1851, 0, 0, 0,
	0, 0, 0, 1830, 1832, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1842, 0, 0,
	1847, 0, 1848, 0, 0, 0, 0, 0, 0, 1817,
	1818, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1839, 0, 1855,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1823, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1849, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1840, 0, 0, 0, 0, 1838, 0, 0,
	0, 0, 1814, 1815, 1821, 1843, 1820, 1816, 1853, 1813,
	1811, 1812, 1804, 1805, 1806, 1807, 1809, 1810, 0, 0,
	0, 0, 4120, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1800, 1801, 0, 1833, 1834,
	1835, 1844, 1845, 1846, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1837, 1831, 0,
	0, 0, 0, 1829, 0, 1803, 0, 0, 0, 0,
	0, 0, 0, 0, 1850, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1824, 0, 0, 0,
	0, 1856, 0, 0, 0, 0, 0, 0, 1800, 1801,
	1802, 1833, 1834, 1835, 1844, 1845, 1846, 0, 0, 0,
	1822, 0, 0, 1842, 0, 0, 0, 0, 0, 1819,
	1837, 1831, 0, 0, 0, 0, 0, 0, 1803, 0,
	0, 0, 0, 0, 0, 0, 0, 1850, 0, 0,
	0, 0, 0, 0, 0, 1855, 0, 0, 0, 0,
	0, 0, 0, 0, 1856, 0, 0, 0, 0, 0,
	0, 0, 0, 1802, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1822, 0, 0, 0, 0, 0, 0,
	0, 0, 1819, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1825, 1826, 1827, 1828,
	0, 0, 0, 0, 0, 0, 1808, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1840, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1814, 1815,
	1821, 1843, 1820, 1816, 0, 1813, 1811, 1812, 1804, 1805,
	1806, 1807, 1809, 1810, 1841, 0, 0, 1851, 4119, 0,
	0, 0, 0, 0, 1830, 1832, 0, 0, 0, 1825,
	1826, 1827, 1828, 0, 0, 0, 0, 0, 0, 1808,
	0, 1847, 0, 1848, 0, 0, 0, 0, 0, 0,
	1817, 1818, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1839, 0,
	0, 0, 0, 0, 0, 0, 0, 1841, 0, 0,
	1851, 0, 0, 1823, 0, 0, 0, 1830, 1832, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1847, 0, 1848, 0, 0, 0,
	0, 0, 0, 1817, 1818, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1849,
	0, 1839, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1823, 0, 1838, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1853,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1849, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1838, 0, 0, 1829, 0, 0, 0, 0, 0,
	0, 0, 1853, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1824, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1800,
	1801, 0, 1833, 1834, 1835, 1844, 1845, 1846, 0, 0,
	0, 0, 0, 0, 1842, 0, 0, 0, 0, 0,
	0, 1837, 1831, 0, 0, 0, 0, 1829, 0, 1803,
	0, 0, 0, 0, 0, 0, 0, 0, 1850, 0,
	0, 0, 0, 0, 0, 0, 1855, 0, 0, 0,
	1824, 0, 0, 0, 0, 1856, 0, 0, 0, 0,
	0, 0, 0, 0, 1802, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1822, 0, 0, 1842, 0, 0,
	0, 0, 0, 1819, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1855,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1840,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1814,
	1815, 1821, 1843, 1820, 1816, 0, 1813, 1811, 1812, 1804,
	1805, 1806, 1807, 1809, 1810, 0, 0, 0, 0, 3775,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1825, 1826, 1827, 1828, 0, 0, 0, 0, 0, 0,
	1808, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1840, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1814, 1815, 1821, 1843, 1820, 1816, 0, 1813,
	1811, 1812, 1804, 1805, 1806, 1807, 1809, 1810, 1841, 0,
	0, 1851, 3276, 0, 0, 0, 0, 0, 1830, 1832,
	0, 0, 0, 0, 0, 1800, 1801, 0, 1833, 1834,
	1835, 1844, 1845, 1846, 0, 1847, 0, 1848, 0, 0,
	0, 0, 0, 0, 1817, 1818, 0, 1837, 1831, 0,
	0, 0, 0, 0, 0, 1803, 0, 0, 0, 0,
	0, 0, 1839, 0, 1850, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1823, 0, 0,
	0, 1856, 0, 0, 0, 0, 0, 0, 0, 0,
	1802, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1822, 0, 0, 0, 0, 0, 0, 0, 0, 1819,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1849, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1838, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1853, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1825, 1826, 1827, 1828,
	0, 0, 0, 0, 0, 0, 1808, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1829, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1824, 0, 0, 1841, 0, 0, 1851, 0, 0,
	0, 0, 0, 0, 1830, 1832, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1842, 0,
	0, 1847, 0, 1848, 0, 0, 0, 0, 0, 0,
	1817, 1818, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1839, 0,
	1855, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1823, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1849,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1840, 0, 0, 0, 0, 1838, 0,
	0, 0, 0, 1814, 1815, 1821, 1843, 1820, 1816, 1853,
	1813, 1811, 1812, 1804, 1805, 1806, 1807, 1809, 1810, 0,
	0, 0, 0, 3275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1800, 1801, 0, 1833,
	1834, 1835, 1844, 1845, 1846, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1837, 1831,
	0, 0, 0, 0, 1829, 0, 1803, 0, 0, 0,
	0, 0, 0, 0, 0, 1850, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1824, 0, 0,
	0, 0, 1856, 0, 0, 0, 0, 0, 0, 1800,
	1801, 1802, 1833, 1834, 1835, 1844, 1845, 1846, 0, 0,
	0, 1822, 0, 0, 1842, 0, 0, 0, 0, 0,
	1819, 1837, 1831, 0, 0, 0, 0, 0, 0, 1803,
	0, 0, 0, 0, 0, 0, 0, 0, 1850, 0,
	0, 0, 0, 0, 0, 0, 1855, 0, 0, 0,
	0, 0, 0, 0, 0, 1856, 0, 0, 0, 0,
	0, 0, 0, 0, 1802, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1822, 0, 0, 0, 0, 0,
	0, 0, 0, 1819, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1825, 1826, 1827,
	1828, 0, 0, 0, 0, 0, 0, 1808, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1840,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1814,
	1815, 1821, 1843, 1820, 1816, 0, 1813, 1811, 1812, 1804,
	1805, 1806, 1807, 1809, 1810, 1841, 0, 0, 1851, 3274,
	0, 0, 0, 0, 0, 1830, 1832, 0, 0, 0,
	1825, 1826, 1827, 1828, 0, 0, 0, 0, 0, 0,
	1808, 0, 1847, 0, 1848, 0, 0, 0, 0, 0,
	0, 1817, 1818, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1839,
	0, 0, 0, 0, 0, 0, 0, 0, 1841, 0,
	0, 1851, 0, 0, 1823, 0, 0, 0, 1830, 1832,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1847, 0, 1848, 0, 0,
	0, 0, 0, 0, 1817, 1818, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1849, 0, 1839, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1823, 0, 1838,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1853, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1849, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1838, 0, 0, 1829, 0, 0, 0, 0,
	0, 0, 0, 1853, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1824, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1800, 1801, 0, 1833, 1834, 1835, 1844, 1845, 1846, 0,
	0, 0, 0, 0, 0, 1842, 0, 0, 0, 0,
	0, 0, 1837, 1831, 0, 0, 0, 0, 1829, 0,
	1803, 0, 0, 0, 0, 0, 0, 0, 0, 1850,
	0, 0, 0, 0, 0, 0, 0, 1855, 0, 0,
	0, 1824, 0, 0, 0, 0, 1856, 0, 0, 0,
	0, 0, 0, 0, 0, 1802, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1822, 0, 0, 1842, 0,
	0, 0, 0, 0, 1819, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1855, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1840, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1814, 1815, 1821, 1843, 1820, 1816, 0, 1813, 1811, 1812,
	1804, 1805, 1806, 1807, 1809, 1810, 0, 0, 0, 0,
	3273, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1825, 1826, 1827, 1828, 0, 0, 0, 0, 0,
	0, 1808, 4827, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1840, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1814, 1815, 1821, 1843, 1820, 1816, 0,
	1813, 1811, 1812, 1804, 1805, 1806, 1807, 1809, 1810, 1841,
	0, 3238, 1851, 0, 0, 0, 0, 0, 0, 1830,
	1832, 0, 0, 0, 0, 0, 1800, 1801, 0, 1833,
	1834, 1835, 1844, 1845, 1846, 0, 1847, 0, 1848, 0,
	0, 0, 0, 0, 0, 1817, 1818, 0, 1837, 1831,
	0, 0, 0, 0, 0, 0, 1803, 0, 0, 0,
	0, 0, 0, 1839, 0, 1850, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1823, 0,
	0, 0, 1856, 0, 0, 0, 0, 0, 0, 0,
	0, 1802, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1822, 0, 0, 0, 0, 0, 0, 0, 0,
	1819, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1849, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1838, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1853, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4826, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1825, 1826, 1827,
	1828, 0, 0, 0, 0, 0, 0, 1808, 0, 3338,
	0, 0, 0, 3337, 0, 0, 0, 0, 0, 1829,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1824, 0, 0, 1841, 0, 0, 1851, 0,
	0, 0, 0, 0, 0, 1830, 1832, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1842,
	0, 0, 1847, 0, 1848, 0, 0, 0, 0, 0,
	0, 1817, 1818, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1839,
	0, 1855, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1823, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1849, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1840, 0, 0, 0, 0, 1838,
	0, 0, 0, 0, 1814, 1815, 1821, 1843, 1820, 1816,
	1853, 1813, 1811, 1812, 1804, 1805, 1806, 1807, 1809, 1810,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1800, 1801,
	0, 1833, 1834, 1835, 1844, 1845, 1846, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1837, 1831, 0, 0, 0, 1829, 3209, 0, 1803, 0,
	0, 0, 0, 0, 0, 0, 0, 1850, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1824, 0,
	0, 0, 0, 0, 1856, 0, 0, 0, 0, 0,
	0, 0, 0, 1802, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1822, 0, 1842, 0, 0, 0, 0,
	0, 0, 1819, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1855, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3210, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1825,
	1826, 1827, 1828, 0, 0, 0, 0, 0, 0, 1808,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1840, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1814, 1815, 1821, 1843, 1820, 1816, 0, 1813, 1811, 1812,
	1804, 1805, 1806, 1807, 1809, 1810, 0, 1841, 0, 0,
	1851, 0, 0, 0, 0, 0, 0, 1830, 1832, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1847, 0, 1848, 0, 0, 0,
	0, 0, 0, 1817, 1818, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2741, 0, 0,
	0, 1839, 0, 0, 1800, 1801, 0, 1833, 1834, 1835,
	1844, 1845, 1846, 0, 0, 0, 1823, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1837, 1831, 0, 0,
	0, 2740, 0, 0, 1803, 0, 0, 0, 0, 0,
	0, 0, 0, 1850, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1856, 0, 1849, 0, 0, 0, 0, 0, 0, 1802,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1822,
	0, 1838, 0, 0, 0, 0, 0, 0, 1819, 0,
	0, 0, 1853, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1829, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1825, 1826, 1827, 1828, 0,
	1824, 0, 0, 0, 0, 1808, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1800, 1801,
	0, 1833, 1834, 1835, 1844, 1845, 1846, 1842, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1837, 1831, 0, 1841, 0, 0, 1851, 0, 1803, 0,
	0, 0, 0, 1830, 1832, 0, 0, 1850, 0, 1855,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1847, 0, 1848, 0, 1856, 0, 0, 0, 0, 1817,
	1818, 0, 0, 1802, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1822, 0, 0, 0, 1839, 0, 0,
	0, 0, 1819, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1823, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1840, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1814, 1815, 1821, 1843, 1820, 1816, 0, 1813,
	1811, 1812, 1804, 1805, 1806, 1807, 1809, 1810, 1849, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1838, 0, 1825,
	1826, 1827, 1828, 0, 0, 0, 0, 0, 1853, 1808,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1841, 0, 0,
	1851, 0, 0, 0, 0, 0, 0, 1830, 1832, 0,
	0, 0, 0, 1829, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1847, 0, 1848, 0, 0, 0,
	0, 0, 0, 1817, 1818, 0, 1824, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1839, 0, 0, 1800, 1801, 0, 1833, 1834, 1835,
	1844, 1845, 1846, 1842, 0, 0, 1823, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1837, 1831, 0, 0,
	0, 0, 0, 0, 1803, 0, 0, 0, 0, 0,
	0, 0, 0, 1850, 0, 1855, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1856, 0, 1849, 0, 0, 0, 0, 0, 0, 1802,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1822,
	0, 1838, 1081, 0, 0, 0, 0, 0, 1819, 0,
	0, 0, 1853, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1840, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1814, 1815,
	1821, 1843, 1820, 1816, 0, 1813, 1811, 1812, 1804, 1805,
	1806, 1807, 1809, 1810, 0, 0, 0, 1829, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1825, 1826, 1827, 1828, 0,
	1824, 0, 0, 0, 0, 1808, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1800, 1801,
	0, 1833, 1834, 1835, 1844, 1845, 1846, 1842, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1837, 1831, 0, 1841, 0, 0, 1851, 0, 1803, 0,
	0, 0, 0, 1830, 1832, 0, 0, 1850, 0, 1855,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1847, 0, 1848, 0, 1856, 0, 0, 0, 0, 1817,
	1818, 0, 0, 1802, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1822, 0, 0, 0, 1839, 0, 0,
	0, 0, 1819, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1823, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1840, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1814, 1815, 1821, 1843, 1820, 1816, 0, 1813,
	1811, 1812, 1804, 1805, 1806, 1807, 1809, 1810, 1849, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1838, 0, 1825,
	1826, 1827, 1828, 0, 0, 0, 0, 0, 1853, 1808,
	0, 0, 0, 0, 0, 3344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1841, 0, 0,
	1851, 0, 0, 0, 0, 0, 0, 1830, 1832, 0,
	0, 0, 0, 1829, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1847, 0, 1848, 0, 0, 0,
	0, 0, 0, 1817, 1818, 0, 1824, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1839, 0, 0, 1800, 1801, 0, 1833, 1834, 1835,
	1844, 1845, 1846, 1842, 0, 0, 1823, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1837, 1831, 0, 0,
	0, 3339, 0, 0, 1803, 0, 0, 0, 0, 0,
	0, 0, 0, 1850, 0, 1855, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3756, 0,
	1856, 0, 1849, 0, 0, 0, 0, 0, 0, 1802,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1822,
	0, 1838, 0, 0, 0, 0, 0, 0, 1819, 0,
	0, 0, 1853, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1840, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1814, 1815,
	1821, 1843, 1820, 1816, 0, 1813, 1811, 1812, 1804, 1805,
	1806, 1807, 1809, 1810, 0, 0, 0, 1829, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1825, 1826, 1827, 1828, 0,
	1824, 0, 0, 0, 0, 1808, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1800, 1801,
	0, 1833, 1834, 1835, 1844, 1845, 1846, 1842, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1837, 1831, 0, 1841, 0, 0, 1851, 0, 1803, 0,
	0, 0, 0, 1830, 1832, 0, 0, 1850, 0, 1855,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1847, 0, 1848, 0, 1856, 0, 0, 0, 0, 1817,
	1818, 0, 0, 1802, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1822, 0, 0, 0, 1839, 0, 0,
	0, 0, 1819, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1823, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1840, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1814, 1815, 1821, 1843, 1820, 1816, 0, 1813,
	1811, 1812, 1804, 1805, 1806, 1807, 1809, 1810, 1849, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1838, 0, 1825,
	1826, 1827, 1828, 0, 0, 0, 0, 0, 1853, 1808,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1841, 0, 0,
	1851, 0, 0, 0, 0, 0, 0, 1830, 1832, 0,
	0, 0, 0, 1829, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1847, 0, 1848, 0, 0, 0,
	0, 0, 0, 1817, 1818, 0, 1824, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1839, 0, 0, 1800, 1801, 0, 1833, 1834, 1835,
	1844, 1845, 1846, 1842, 0, 0, 1823, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1837, 1831, 0, 0,
	0, 3277, 0, 0, 1803, 0, 0, 0, 0, 0,
	0, 0, 0, 1850, 0, 1855, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1856, 0, 1849, 0, 0, 0, 0, 0, 0, 1802,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1822,
	0, 1838, 0, 0, 0, 0, 0, 0, 1819, 0,
	0, 0, 1853, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3304, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1840, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1814, 1815,
	1821, 1843, 1820, 1816, 0, 1813, 1811, 1812, 1804, 1805,
	1806, 1807, 1809, 1810, 0, 0, 0, 1829, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1825, 1826, 1827, 1828, 0,
	1824, 0, 0, 0, 0, 1808, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1800, 1801,
	0, 1833, 1834, 1835, 1844, 1845, 1846, 1842, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1837, 1831, 0, 1841, 0, 0, 1851, 0, 1803, 0,
	0, 0, 0, 1830, 1832, 0, 0, 1850, 0, 1855,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1847, 0, 1848, 0, 1856, 0, 0, 0, 0, 1817,
	1818, 0, 0, 1802, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1822, 0, 0, 0, 1839, 0, 0,
	0, 0, 1819, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1823, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1840, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1814, 1815, 1821, 1843, 1820, 1816, 0, 1813,
	1811, 1812, 1804, 1805, 1806, 1807, 1809, 1810, 1849, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1838, 0, 1825,
	1826, 1827, 1828, 0, 0, 0, 0, 0, 1853, 1808,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1841, 0, 0,
	1851, 0, 0, 0, 0, 0, 0, 1830, 1832, 0,
	0, 0, 0, 1829, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1847, 0, 1848, 0, 0, 0,
	0, 0, 0, 1817, 1818, 0, 1824, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1839, 0, 0, 1800, 1801, 0, 1833, 1834, 1835,
	1844, 1845, 1846, 1842, 0, 0, 1823, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1837, 1831, 0, 0,
	0, 0, 0, 0, 1803, 0, 0, 0, 0, 0,
	0, 0, 0, 1850, 0, 1855, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1856, 0, 1849, 0, 0, 0, 0, 0, 0, 1802,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1822,
	0, 1838, 0, 0, 0, 0, 0, 0, 1819, 0,
	0, 0, 1853, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1840, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1814, 1815,
	1821, 1843, 1820, 1816, 0, 1813, 1811, 1812, 1804, 1805,
	1806, 1807, 1809, 1810, 0, 0, 0, 1829, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1825, 1826, 1827, 1828, 0,
	1824, 0, 0, 0, 0, 1808, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1800, 1801,
	0, 1833, 1834, 1835, 1844, 1845, 1846, 1842, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1837, 1831, 0, 1841, 0, 0, 1851, 0, 1803, 0,
	0, 0, 0, 1830, 1832, 0, 0, 1850, 0, 1855,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1847, 0, 1848, 0, 1856, 0, 0, 0, 0, 1817,
	1818, 0, 0, 1802, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1822, 0, 0, 0, 1839, 0, 0,
	0, 0, 1819, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1823, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2320, 0, 0, 0, 0,
	0, 0, 1840, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1814, 1815, 1821, 1843, 1820, 1816, 0, 1813,
	1811, 1812, 1804, 1805, 1806, 1807, 1809, 1810, 1849, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1838, 0, 1825,
	1826, 1827, 1828, 0, 0, 0, 0, 0, 1853, 1808,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1841, 0, 0,
	1851, 0, 0, 0, 0, 0, 0, 1830, 1832, 0,
	0, 0, 0, 1829, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1847, 0, 1848, 0, 0, 0,
	0, 0, 0, 1817, 1818, 0, 1824, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1839, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1842, 0, 0, 1823, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1855, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1849, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1853, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1840, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1814, 1815,
	1821, 1843, 1820, 1816, 0, 1813, 1811, 1812, 1804, 1805,
	1806, 1807, 1809, 1810, 0, 0, 0, 1829, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1824, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1842, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1855,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1840, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1814, 1815, 1821, 1843, 1820, 1816, 0, 1813,
	1811, 1812, 1804, 1805, 1806, 1807, 1809, 1810,
}

var sqlPact = [...]int{
	285, -1000, -1000, -1000, -1000, 218, -1000, -1000, 217, 216,
	215, 214, 213, 212, 211, 208, 206, 205, 204, -1000,
	-1000, -1000, -1000, -1000, -1000, 201, -1000, -1000, 199, -1000,
	198, 197, 195, -1000, -1000, 193, -1000, 189, -1000, -1000,
	-1000, -1000, 187, 186, 185, 94366, 93803, 94927, 2364, 117972,
	101667, 2049, 83681, 117409, 83118, 116846, 2209, 10743, 116283, 2818,
	184, -1000, 115720, 182, 177, 175, -1000, 115157, -1000, 1881,
	-1000, 174, -1000, 6731, 70102, 173, 171, 170, 2397, 169,
	-1000, 167, 166, -1000, -1000, 164, -1000, 12702, 1560, -1000,
	162, 161, -1000, 6325, 99417, 160, 159, 2439, 158, 157,
	68415, 156, 155, 2367, 2941, -1000, -1000, 2190, -1000, -1000,
	153, 152, 149, 146, 143, 138, 137, 136, 135, 133,
	131, 128, 126, -1000, 123, 121, 120, 111, 107, -1000,
	106, 99, 94, -1000, 93, -1000, 92, 91, 89, 86,
	85, 84, 83, 81, 80, 77, 74, 73, 71, 64,
	5315, -1000, -1000, 63, 2017, 1720, 1717, 1715, 1712, 1709,
	1028, 62, 61, 60, 54, 52, 51, 50, 47, 45,
	42, 40, 38, 37, 35, 33, 32, 31, 30, 168,
	29, 28, 26, 25, 21, 20, 18, 3638, -1000, 1621,
	900, 32231, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	125826, 118533, 15, -97, 12, -1000, 3372, 1108, 56530, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 343, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 526, 2044, 764,
	-1000, -1000, -1000, 114596, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2361, -36, -1000, 2096, -1000, -1000, -1000, -1000,
	-1000, 763, -1000, 2360, 295, 2312, -1000, -1000, -1000, 3440,
	2520, 3838, 3836, 3834, 3833, 3830, 125265, 1897, 3829, 2579,
	3827, 3826, 3824, 3823, 3822, 3821, 3820, -1000, 93240, 1080,
	92677, 92114, 3438, 114035, 91551, 113472, 76927, 48475, 885, 3439,
	-1000, -1000, -1000, -1000, -1000, -1000, 118533, -1000, 1079, -1000,
	-1000, 3819, 2187, 761, 101104, -1000, -1000, 112909, 1729, -1000,
	-1000, -1000, 977, 1338, 33959, 33959, 33959, 307, -1000, -1000,
	-1000, -1000, -1000, -1000, 3816, 3814, 3813, 3811, 3804, -1000,
	-1000, 82555, 25131, 81992, 81429, 112346, 24558, 90988, 90425, 3803,
	3802, 3800, 111783, 76354, 3543, 3541, 1077, 2089, 1483, -1000,
	-1000, -1000, -1000, -1000, -1000, -6, 72358, 3571, 118533, -1000,
	302, -1000, -1000, -1000, -1000, -1000, -1000, 47899, 646, 47323,
	852, 46747, 701, -1000, -1000, -1000, -1000, 75781, -1000, 111220,
	2516, 3799, 3796, 1182, 3795, 3296, 1893, 3785, 1972, 1340,
	3784, 3783, 3781, 3779, 3777, 3776, 3775, 1563, 110657, 2990,
	1628, 110094, 1779, 75208, 1076, 89862, 94927, 2712, 109531, 1485,
	1473, -1000, -1000, -1000, -1000, 3149, 2921, 2911, 1298, -1000,
	-1000, -1000, -1000, 59939, 7780, 7229, -1000, -1000, 11564, 108968,
	62794, 94927, 94927, -1000, -1000, -1000, -1000, -1000, 46171, 567,
	45595, 869, -1000, -1000, 60510, 2942, -1000, -1000, -1000, -1000,
	45019, 339, 44443, 693, 118533, -1000, 2989, 2061, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2409, 1671, 3579, 2794,
	74635, 2143, 1437, 3395, 3147, 3146, 1572, 2088, 3116, 3773,
	2676, 3099, 3089, 3088, 3087, 3086, 1674, 2639, 292, 2649,
	31655, 2977, 1761, 43867, 1617, 1570, 3061, 3055, 3623, 2071,
	2116, 2155, 80866, 3772, 3770, 3348, 3054, 3049, 2844, 3047,
	-1000, 2938, 1559, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1528, -1000, -1000, -1000, -1000, -1000, 85364, -1000, -1000, 1374,
	-1000, -1000, 1374, -1000, -1000, -1000, -1000, -1000, 1429, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1621, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2333, -1000, 2171, -1000, -1000, 2604, 3322, 3322,
	3322, 3436, 511, 496, -1000, 168, -1000, -1000, 134063, -1000,
	-1000, 49051, 49051, 49051, 49051, 49051, 49051, 49051, 49051, 2213,
	-1000, 758, -1000, -1000, 801, -1000, 756, 685, 627, -1000,
	-1000, -1000, -1000, -1000, -1000, 755, -1000, -1000, -1000, -1000,
	-1000, -1000, 3571, -1000, 28066, -1000, -1000, -1000, 435, 750,
	49051, -1000, -1000, 3646, 3642, 940, -1000, 293, 996, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2987, 749, 747, -1000, 742, 739, 738, 736, 735,
	-1000, 734, -1000, 726, 725, 722, 719, 716, 714, 713,
	712, -1000, 2127, -1000, -1000, -1000, -1000, -1000, -1000, 668,
	667, 667, 667, -1000, 1068, -1000, -1000, -1000, 382, 663,
	342, 661, 660, 659, -1000, 711, 707, 705, 703, 702,
	700, 699, 698, 697, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1067, -1000, -1000, -1000, -1000, -8, 118533, -1000, 526,
	-8, -1000, -1000, 695, -1000, 36292, 36292, 36292, -1000, -1000,
	2357, 49051, -1000, 2447, -1000, 0, 0, 929, 58222, -1000,
	55382, 929, 635, 827, 63919, -1000, 2937, -1000, -1000, 694,
	291, -1000, -1000, -1000, -1000, 25702, 2934, 118533, 118533, 118533,
	94927, 94927, 94927, 3765, 3220, 49051, -1000, -1000, 69539, 118533,
	95488, -1000, -1000, 3522, 70663, 68977, 118533, 2986, 108405, 3762,
	-1000, -1000, -1000, -1000, -1000, 3192, 3761, 3760, 3759, -1000,
	118533, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 247, 3189,
	-1000, -1000, 98854, 247, 3187, -1000, 247, 3151, -1000, 98293,
	-1000, -1000, 2330, 3143, -1000, -1000, 257, 3142, -1000, -1000,
	-1000, 255, 3141, -1000, -1000, 284, -50, 3140, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	134063, -1000, -1000, -1000, 107842, -1000, 3331, -1000, 118533, -1000,
	49051, -1000, -1000, 3521, 1531, 78059, 3474, -1000, -1000, -21,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2563, 2558, 1164,
	2390, -1000, 3230, 1853, 33959, 3284, -1000, -1000, -1000, -1000,
	-1000, 282, 25702, -1000, -1000, -1000, -1000, -1000, -1000, 5505,
	3139, 1613, -1000, 2389, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2156, 3138, -1000, 1939, 3137, 2103, -1000, -1000, 1581,
	-1000, 3319, -1000, -1000, 1759, 3136, 1, -1000, -1000, 2355,
	-1000, -1000, -1000, -1000, 2039, -1000, 1339, 3134, -1000, 2793,
	2793, 89299, 3164, 62223, 60510, 72358, -11, -1000, -1000, -1000,
	-1000, -164, -1000, 23981, 134063, -1000, -1000, -1000, -1000, 1854,
	134063, 960, -1000, -1000, 3112, -1000, 134063, 959, -1000, -1000,
	3111, -1000, 2985, -1000, -1000, 2468, 2466, -1000, -1000, 3758,
	-1000, -1000, 3753, -1000, 3752, 3751, 3750, -1000, 1832, 2077,
	3747, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 88738,
	2353, -1000, -1000, 87612, 2984, -1000, 2465, 3473, -1000, 88175,
	1070, -1000, 1033, 2464, -1000, 97732, 1074, 2459, -1000, 3746,
	3437, 2755, 1033, 2458, -1000, -1000, -1000, -1000, -1000, 1039,
	-1000, 66167, -1000, 66167, -1000, 1734, -1000, 124704, 0, 94927,
	3571, -1000, -37, -1000, -1000, -1000, 1108, -1000, 59363, -1000,
	59363, 100541, 77498, 1021, 793, 67851, 133797, -1000, 1044, -1000,
	-1000, 134063, -1000, -1000, -1000, -159, 2792, -1000, 77498, 61652,
	134063, -1000, -1000, -1000, -1000, 134063, -1000, -1000, -1000, 77498,
	87612, -1000, 107279, 87051, -1000, -1000, 1547, 2624, -1000, -1000,
	-1000, 77498, 1350, 77498, 77498, 77498, -1000, 106716, -1000, -1000,
	2149, 1588, 3337, 2148, 94927, -1000, 1929, -1000, -1000, -1000,
	3368, 3162, 118533, -1000, -1000, 2979, -1000, 71796, 97171, -1000,
	96610, -1000, 96049, -1000, 94927, -1000, 94927, -1000, 3745, 3743,
	3742, -1000, -1000, 3741, -1000, 3740, 3353, -1000, 613, 43291,
	134063, 3336, -1000, 3738, 2086, 2977, 134063, -1000, 3145, 1731,
	1723, 118533, -1000, -1000, 118533, -1000, 118533, -1000, -1000, -1000,
	1642, -1000, -1000, 2559, -1000, -1000, -1000, -1000, 94927, 94927,
	94927, 94927, 1549, -1000, 42715, -1000, -1000, 3060, 3735, 1844,
	-1000, 1878, -1000, 2933, 3378, -1000, 1532, 1836, -1000, -1000,
	258, -1000, -1000, -21, -1000, 124143, -1000, 2604, -1000, 118533,
	-1000, 2560, 2956, 2974, 1686, 2359, 2660, -1000, 42139, 2576,
	52507, 2385, 168, -1000, -1000, 168, 168, 33383, -1000, -1000,
	70663, 70663, 25702, 1443, 49051, 49051, 49051, 49051, 49051, 49051,
	49051, 49051, 49051, 49051, 49051, 49051, 49051, 49051, 49051, 49051,
	49051, 49051, 49051, 49051, 49051, 49051, 49051, 49051, 49051, 49051,
	49051, 49051, 49051, 49051, 49051, 49051, 49051, 49051, 49051, 49051,
	2405, 49051, 1427, 49051, 49051, 49051, 49051, 2154, -1000, -1000,
	2057, 557, 2107, 685, -1000, -1000, -1000, 3574, 3574, 3574,
	452, 452, 452, 18056, 18056, 584, 3734, 801, -1000, 49051,
	-1000, 148, 58783, 49051, 26275, -1000, 496, 15044, 2549, -1000,
	473, 26880, -1000, -1000, -1000, 28066, 627, 41534, 49051, 1054,
	134063, -1000, -1000, 1760, 3594, 23404, 2999, 2837, 683, 873,
	871, 31050, 30445, 29840, 29235, 859, 753, 49051, 49051, 49051,
	49051, 49051, 49051, 49051, 49051, -1000, -1000, 3599, -1000, 3594,
	-1000, -1000, -1000, -1000, 3594, 1441, 1440, 3594, -1000, 3594,
	3594, 6710, 6710, 40958, 40382, 39806, 53083, 39230, 49051, 28659,
	38654, 38078, -1000, 118533, -8, 3519, 49051, 270, -1000, 132263,
	-1000, 270, 270, 680, -38, 134063, 2616, 2616, 57094, 2467,
	2217, 2217, 2217, -1000, 929, 18759, 929, 105033, 2236, 929,
	929, 266, 300, 472, 54811, 2447, 105033, 784, 679, 11,
	10, 9, -1000, -1000, 7, 3, -1000, -1000, 94927, 678,
	26275, 25702, 264, 2110, -44, 2693, 2691, -1000, 2675, 2669,
	-1000, 2664, -1000, 1858, -49, 1412, 94927, 118533, 1502, 3729,
	-96, -1000, 7085, -51, -1000, 1349, 259, 3594, -1000, -1000,
	-1000, -1000, -1000, 3728, 3721, -1000, 1063, 673, 671, 503,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 668, 667,
	667, 667, -1000, 382, 663, 342, 661, 660, 659, -1000,
	-1000, -1000, -1000, -1000, 2931, 94927, 118533, 1455, 3720, -164,
	95488, -90, -1000, -1000, 118533, -1000, -1000, -1000, 3719, -1000,
	94927, -1000, -1000, 94927, 247, 3110, -1000, 94927, -1000, 94927,
	238, 3109, -1000, -1000, 118533, -1000, 94927, 94927, -1000, 118533,
	118533, 118533, 77498, 77498, 232, -1000, 94927, 904, -54, 1196,
	-21, -1000, -1000, -1000, -1000, -1000, 1374, -1000, 1816, -1000,
	-1000, -1000, -1000, -1000, -1000, 1564, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 940, -1000, -1000, -1000, -1000, -1000,
	-1000, 3588, 3582, -9, -1000, -1000, 25702, -1000, -23, 1701,
	1941, 1408, -1000, 80303, 2434, 3332, 3717, 2746, 3311, 1722,
	-1000, 1629, -1000, 3445, 85364, 3485, 3499, 1385, -1000, 2929,
	-1000, -1000, 975, 1804, 1818, 1398, 1378, 85364, 1939, -1000,
	70663, -1000, 2705, 3435, 1414, 1452, 1414, 1414, 1410, -1000,
	85364, 1817, 1370, 1363, 1332, -1000, -1000, 2020, 2004, -1000,
	-1000, 106155, -1000, 1279, 1276, 3534, 2333, 2266, 845, 1997,
	-1000, -25, 3480, 3494, 1382, -1000, 2916, 1275, -1000, -1000,
	-1000, 3434, 94927, 25702, 1626, 1615, 1590, 1808, 1274, -10,
	-1000, 3478, 1272, 1271, -1000, 1071, 8305, 3250, -1000, 77498,
	1071, 1071, 2054, 3108, 2782, 1713, -1000, 2790, 924, 2789,
	-1000, -1000, -1000, 924, -11, 72358, 118533, 253, -1000, 148,
	49051, 49051, 148, 49051, 148, 3466, 3106, 3104, -1000, -1000,
	-1000, -1000, -1000, 3716, 2030, 2578, -1000, -1000, 658, 2457,
	2910, 118533, 2718, -12, 94927, -1000, 71234, 3100, 72920, 1939,
	2454, -1000, -1000, 86488, -1000, 3095, 526, 2452, -1000, 709,
	3715, 3073, -1000, 123582, -1000, 3331, 1460, 3072, 1132, 555,
	3518, -1000, 555, 66729, -1000, 118533, -1000, 0, 1090, 79181,
	-57, -59, 468, -1000, 105594, 118533, 1130, 79742, 118533, 3273,
	2065, 2051, 1030, 60510, -1000, 60510, -60, -159, 2788, 1584,
	1021, 1021, 924, -1000, 924, -1000, 94927, 2973, -1000, -1000,
	77498, 1021, 1021, 1021, -1000, -1000, -1000, -1000, 3713, 3712,
	3709, 3708, -1000, -1000, 1032, 94927, 118533, 94927, -1000, -1000,
	1680, -1000, 239, -1000, 118533, -1000, 118533, 118533, 94927, -1000,
	1032, 118533, 1032, 118533, 1032, 118533, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 148, -1000, -1000, 134063, -1000, 49051, -1000,
	-1000, 1612, 3707, 1745, -1000, 2969, -1000, 2957, -1000, 44,
	-1000, -1000, 1940, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	3706, 134063, -1000, 2106, -1000, -1000, -1000, -1000, 94927, 94927,
	94927, 94927, 118533, 3249, -1000, 118533, 3244, 94927, -1000, -1000,
	85364, -1000, 2560, 2956, -1000, -1000, -1000, -1000, -1000, -1000,
	1639, 2327, -1000, 2615, -1000, 1661, -1000, -1000, -1000, 134063,
	53659, -1000, -1000, 134063, 1864, -1000, 51931, 51355, -1000, -1000,
	1827, 94927, 2714, -1000, 2714, -112, -1000, 131997, 2609, 94927,
	-1000, -1000, -1000, -1000, -1000, 958, 1433, 1433, 1269, 1269,
	1269, 1269, 3442, 1153, 286, 579, 6128, 6128, 6771, 6771,
	6771, 6771, 6771, 6128, 332, 452, 452, 332, 332, 332,
	332, 332, 452, 452, 452, 6128, 6128, 6128, 452, 18056,
	134247, 11451, 49051, 49051, 1267, 2035, 557, 11253, 49051, 9336,
	9336, 9336, 9336, -1000, 2212, -1000, -1000, -1000, -1000, 2909,
	653, 53083, 53083, -1000, -1000, -1000, -1000, 27473, 49051, -1000,
	-1000, -1000, -1000, 37473, -1000, -1000, 131008, -320, 465, -1000,
	237, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 461, -111, 14, -1000, 49051, 49051,
	49051, 460, -1000, 231, 49051, 118533, -1000, 127411, 779, -104,
	-1000, -62, 1474, -1000, 49051, -1000, -1000, 1266, -1000, 1265,
	1259, 1251, -1000, 652, 459, -1000, 230, -1000, 2215, 648,
	641, 49051, -1000, -1000, -1000, -1000, -1000, 130945, -1000, -1000,
	130564, -1000, -1000, 130338, -1000, -1000, 129957, -1000, -1000, -1000,
	-1000, -1000, 133613, 127135, 127014, 126951, 10577, 17789, 17156, -65,
	458, -67, 457, 955, 954, 451, 450, 448, -68, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -70, 440, -1000, 2907, -111, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 439, -1000, 437, -1000, 133347, -111,
	436, 6267, -1000, 53083, 53083, 53083, 53083, -1000, 433, -1000,
	131615, -1000, 133163, 36897, 36897, 36897, 431, 132897, 49051, -111,
	-73, -1000, -75, -1000, -1000, 609, -76, 1048, 36292, 55966,
	25702, -1000, 1048, 1048, 49051, -1000, 49051, 2634, -1000, -1000,
	-1000, -1000, 2631, 2159, 2616, 57094, -1000, -1000, -1000, -1000,
	105033, -1000, 3571, 2943, -1000, 105033, -1000, -1000, 118533, 526,
	-1000, 105033, 105033, 25702, 929, -1000, 929, 105033, 623, -1000,
	-1000, -1000, -1000, -1000, 430, 64483, 14, 229, 25702, 1033,
	-1000, -1000, 2743, 2743, 2743, 2743, 2743, -1000, -1000, 118533,
	1250, -13, -189, 2787, -1000, 3549, -1000, 2160, -1000, 70663,
	-1000, 799, 1175, 25702, -1000, -1000, -1000, 640, -1000, 3594,
	3594, -1000, 3594, 118533, 2905, 130, 2786, -1000, 127, 72920,
	3705, -1000, -1000, 247, -1000, 94927, 247, 247, -1000, 94927,
	94927, 2330, -1000, 257, -1000, 255, -1000, -1000, -50, -1000,
	1043, 33959, -1000, 1374, -1000, -1000, 1609, -1000, 2041, -1000,
	1273, -1000, -1000, -1000, -1000, 33959, -1000, 2175, 118533, 118533,
	94927, -1000, 118533, -1000, 2220, 72920, -1000, 2450, 123021, 2444,
	70663, 118533, -1000, -1000, 639, 985, 2607, 2606, 1120, 118533,
	118533, 2602, 122460, 121899, -1000, 3703, 118533, 2108, 49051, 3421,
	2203, 3861, 148, 148, -1000, 148, 148, 148, -1000, 637,
	1344, 94927, 94927, 118533, 72920, 94927, 1952, -1000, -1000, -1000,
	-1000, -1000, 85925, -1000, -1000, 3598, 3596, -1000, 1414, -1000,
	-1000, -1000, 1414, 1939, 1923, 118533, 72920, 94927, 72920, 121338,
	120777, -1000, -1000, 1806, 118533, -1000, -1000, -1000, -1000, 1516,
	-1000, 845, 2174, 148, 148, -1000, 148, 148, 148, 636,
	25702, 2075, -1000, 3023, 118533, 3639, 120216, 3633, 118533, 118533,
	118533, 72920, 3333, 118533, 118533, 72920, -1000, 119655, 8305, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2170, 74062, 1137, 118533, 1339, -1000,
	-1000, 1797, 1248, 1247, 85364, 2130, 1788, 1925, 118533, 60510,
	1029, 60510, 2760, -1000, -1000, 22827, -1000, 134063, 134063, -1000,
	134063, -1000, 71234, 77498, 118533, -1000, 1049, 118533, 79742, 988,
	3071, 65605, -164, 1021, 77498, 94927, -12, 2718, 118533, -1000,
	-1000, -1000, -1000, -1000, 1939, 3069, 526, 2449, -1000, 77498,
	3516, 3062, 631, 3702, 3701, -1000, 94927, 2350, 2446, -1000,
	-1000, 119094, 3064, 845, 118533, 1048, 57094, 2047, -1000, 63358,
	1091, 118533, 1935, 125, -1000, -1000, -1000, 24, 118533, -1000,
	807, -1000, -1000, 1090, 1090, 1021, -269, 630, -1000, 908,
	906, 61081, 77498, -84, -1000, -1000, -1000, -1000, 2444, 94927,
	118533, 1356, 2753, 118533, -101, -1000, 227, 628, 905, 903,
	-1000, 3335, -1000, -159, -1000, 1030, 60510, 2904, 2899, -1000,
	-1000, 1042, -1000, 1524, 1021, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1, 1910, 118533, -164,
	-164, -30, -13, -1000, 1032, -1000, 1032, -1000, 1032, -1000,
	134063, -1000, -1000, -1000, 1740, 1695, 118533, -1000, -1000, 118533,
	-1000, 25702, 118533, 94927, 25702, 94927, 2950, 2949, -1000, -1000,
	-1000, 118533, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1147,
	-1000, 1864, 2317, -1000, 627, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2537, -1000, -20, 33383, 934, -1000,
	-1000, 94927, -2, 49051, 49051, 9024, 8102, 49051, 53083, 53083,
	-1000, 49051, 7498, -1000, -1000, -1000, -1000, -1000, 2897, 626,
	49051, 70663, 6458, 5491, -1000, 429, 16517, 332, -1000, 49051,
	-1000, 420, -1000, 428, 35716, -1000, 132447, -45, -109, -1000,
	19349, -111, -114, -1000, -1000, 798, -1000, 3152, -1000, 49051,
	132713, 2506, 2192, 1965, 1753, 3594, 3629, 22250, -1000, 67290,
	1051, 2285, 129894, -1000, -1000, -1000, -1000, 70663, 70663, 49051,
	49051, -1000, 49051, 49051, 49051, -1000, -1000, -1000, 3594, 938,
	-1000, -1000, -1000, 938, -1000, -1000, 1414, -1000, 1414, -1000,
	49051, -1000, -1000, 2896, 49051, -1000, 70663, 70663, 53083, 53083,
	53083, 53083, 53083, 53083, 53083, 53083, 53083, 53083, 53083, 53083,
	53083, 53083, 53083, 53083, 53083, 53083, 53083, 53083, 2626, 53083,
	3572, 3572, 3572, 971, -1000, 2947, 2896, 49051, 49051, 70663,
	427, 424, 421, -1000, 49051, -111, -1000, -1000, 9000, 622,
	-1000, 2527, -1000, 2833, -1000, 49051, -1000, -149, -1000, 2447,
	-1000, -1000, 2833, 2833, -115, 134063, 57094, 57094, -1000, 621,
	49051, 2630, -1000, -1000, 778, -318, -1000, 901, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 526, -1000, -1000, -1000, 226,
	105033, 105033, 777, -1000, -117, -1000, -1000, -123, -1000, 3513,
	419, 25702, -1000, 1048, 2727, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -164, 118533, 118533, 1784, 2310, 3628, -1000, 3595,
	794, 775, 221, 3594, 399, 398, 397, -164, 118533, 118533,
	1774, 118533, -1000, -1000, -1000, 247, -1000, -1000, -1000, 238,
	-1000, -1000, -1000, -1000, 2653, -1000, -21, -1000, -1000, -1000,
	49051, -1000, -1000, 3329, 1246, 1242, -1000, -1000, -1000, 2936,
	-1000, 3057, -1000, 2438, -1000, 1110, -1000, 1901, -1000, 49051,
	620, 2752, 618, 617, 3700, 2188, 3699, 1121, 3056, 2330,
	3052, 2330, -1000, -1000, -1000, 973, -1000, 134063, 2203, -1000,
	615, 614, -1000, -23, 1692, 1937, 1238, 1041, -1000, -1000,
	-1000, -1000, 49051, 49051, 104472, -1000, 497, 3319, -3, -1000,
	-1000, -1000, 1773, 1236, 1235, -1000, -1000, -1000, -1000, 1939,
	1767, 1233, 1225, -1000, -1000, -1000, -1000, -1000, 2433, -1000,
	-1000, 3046, 1040, -1000, 3015, 3014, 953, 118533, -1000, 1038,
	-1000, -1000, -1000, -1000, 49051, -1000, -25, 1224, 3481, 2430,
	94927, -1000, 2330, 3045, 1223, -1000, 1222, -1000, -1000, -1000,
	3477, 3467, 1195, -1000, -1000, -1000, 77498, -1000, -1000, 73491,
	-1000, -1000, 1071, 118533, 72920, 94927, 1857, -1000, -1000, 84242,
	84803, 118533, 2782, -164, 924, -1000, 2521, 924, 1029, 2886,
	-1000, 2716, -1000, 1035, 94927, 3697, 393, -125, -26, 70663,
	3512, -1000, 2374, 654, 94927, 935, -1000, 3571, -1000, -1000,
	-1000, 1034, -1000, 3472, 94927, 3511, 3043, 1033, 148, 94927,
	3603, -1000, -1000, 3510, 94927, 3041, 2348, 2422, 2566, 845,
	78620, 1033, 2242, -39, -1000, 1935, 35111, 3317, -128, -1000,
	-1000, -1000, 1048, 66729, 57094, 49051, 3695, -130, -1000, -1000,
	-1000, -1000, -1000, 102228, 102228, 77498, 77498, 77498, 1021, 118533,
	118533, 79742, -1000, -1000, 612, 118533, 118533, 606, -1000, 118533,
	118533, 3693, 77498, 77498, 77498, -27, 605, -1000, 898, 897,
	888, -1000, -1000, -1000, -1000, -1000, -1000, 884, 1030, -1000,
	-159, 60510, 148, -1000, 2302, 94927, -1000, 21673, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1032, -164, -1000, -1000, 2180,
	2380, 2180, 1887, 1886, -1000, -1000, 2313, -1000, -1000, -1000,
	-1000, 2666, 3327, 25702, 3463, 9336, 49051, 49051, 490, 5312,
	5196, 9336, 49051, 49051, 70663, 8895, -131, 49051, 49051, -1000,
	49051, 770, 134063, -1000, 3625, 49051, 392, 388, -1000, -1000,
	-1000, 3591, -1000, -1000, -1000, 134063, 49051, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 385, -1000, 220, -1000, -1000, -1000,
	126387, -1000, 49051, 384, 3420, -1000, 383, 373, 16076, 10301,
	129513, 129287, 128906, 370, -1000, -1000, 369, 368, 134063, 2947,
	134063, -1000, -1000, 1365, 1365, 1387, 1387, 1387, 1387, 3572,
	340, 696, 1985, 817, 817, 817, 984, 971, 971, 817,
	817, 817, 971, 2883, 2591, 604, 5019, -1000, -1000, 134063,
	134063, 365, -1000, -1000, -1000, -111, 364, 9000, -1000, 2829,
	3419, 134063, -1000, 57094, 2829, 2829, -1000, -1000, 2159, 118533,
	134063, 57094, -1000, 2943, -1000, 19937, -1000, 25702, -1000, -1000,
	-1000, -1000, 3571, -1000, 64483, -1000, 601, -1000, 118, -1000,
	2727, -1000, 882, -1000, -1000, 77498, 77498, -164, -177, 118533,
	-1000, -1000, 769, 3691, 792, 25702, 363, -1000, -1000, -1000,
	-164, -164, 118533, -164, -1000, -1000, -1000, 3263, 134063, 118533,
	118533, 1548, 103911, 118533, 3040, -1000, 5047, -1000, 1120, 128843,
	57658, -1000, 57658, 118533, -1000, -1000, -1000, -1000, 2006, 1568,
	3688, 1173, -1000, 3370, 118533, -1000, 118533, -1000, -1000, -1000,
	118533, 118533, 94927, 118533, -1000, 72920, 3025, -136, 134063, -28,
	-1000, 879, -1000, 1393, -1000, 21096, 118533, 72920, 94927, 118533,
	72920, 94927, 3038, 118533, 2205, -1000, -1000, 3012, -1000, 3022,
	-138, 25702, -1000, 3624, 3621, 3037, 3381, -1000, 118533, 3616,
	118533, 94927, 3262, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1765, 1217, 1216, 2344, -29, 2343, 2307, -30, 2130, 1029,
	-31, 600, -1000, 878, -1000, -1000, 876, -1000, 1029, -1000,
	77498, 60510, 3687, 526, -1000, 2744, -1000, 99978, 2320, 148,
	-1000, 3683, 102789, 597, -1000, 2298, -1000, 766, -1000, 2504,
	72920, 1939, 148, 94927, -1000, -1000, 526, 362, -32, -1000,
	3105, 1115, 25702, 94927, 3036, 2571, 845, 78620, -1000, 1460,
	2660, -1000, -35, -1000, 592, 148, 2242, -1000, -39, 134063,
	-1000, 864, -1000, -139, -1000, -1000, 360, -1000, 3261, 3256,
	-1000, 2853, 57658, 595, 593, 118533, 3254, -1000, -1000, -144,
	-1000, -1000, 2421, 2421, 77498, 60510, 77498, 77498, -1000, 1030,
	924, -1000, 2541, -1000, -1000, -1000, -1000, -1000, 25702, 1803,
	-1000, 589, 587, -1000, -1000, -1000, -1000, 3327, 9336, 9336,
	49051, 49051, 49051, 9336, 8895, -150, -1000, 9336, 9336, -111,
	-1000, -1000, 132447, -1000, -1000, -1000, 134063, -1000, 20519, 2193,
	-1000, 128462, -1000, 33383, -1000, -1000, 49051, 49051, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 53083, 2882, 582, 70663,
	-1000, -1000, 358, 1046, 49051, 50779, 2447, 1046, 1046, -1000,
	-152, -1000, -1000, -1000, 3571, 118, -1000, -1000, 3682, 25702,
	-1000, 77498, -1000, -1000, 3681, -198, 789, -1000, 3680, -1000,
	-1000, 117, -1000, -1000, -1000, 2781, 3509, -1000, 1993, -1000,
	118533, -1000, 118533, -1000, 25702, 118533, 2851, 1317, -1000, 985,
	2598, 581, 53083, 1146, 94927, 896, 2803, 2799, -1000, 3502,
	3418, 2835, -153, -1000, 118533, 49051, 118533, -158, -163, 2395,
	-1000, -1000, 1142, 1314, 49051, 1141, -1000, -1000, -1000, 70663,
	576, 2330, 2330, -165, -179, -1000, -1000, -1000, 49051, 1214,
	118533, 34535, -1000, 3677, 3319, -1000, -1000, -1000, -1000, -1000,
	-1000, 118533, -1000, 118533, -1000, 49051, 1211, -1000, -1000, -1000,
	3608, 2330, 25702, 2330, -1000, 2330, 3381, 1163, 118533, 72920,
	94927, 1791, 1791, 2915, -1000, -1000, -1000, 2524, 2524, 77498,
	60510, -1000, -50, 1029, -1000, 3508, 2732, 3676, -1000, -1000,
	-1000, -1000, 2590, -1000, -1000, 118533, 2580, 1023, -1000, -187,
	-1000, 861, 856, 79742, 988, 979, -1000, -56, 566, -1000,
	854, -1000, -1000, -1000, -1000, 526, 3504, -1000, 3604, 564,
	559, 118533, 2340, 558, 25702, 3313, 845, 78620, -1000, 3064,
	1935, -1000, 2419, 118533, 3308, -1000, 2660, 557, -1000, 1021,
	556, 554, 2545, 2545, -188, 57658, 57658, -193, 552, 1021,
	-1000, -196, -1000, -1000, -1000, -1000, -1000, -1000, -82, -1000,
	936, 863, -1000, -1000, 94927, 94927, 49051, 49051, -1000, 9336,
	9336, 9336, -1000, 355, -1000, -1000, 2242, 3411, -1000, -89,
	128236, 127855, 2791, 53083, 70663, -202, -1000, -1000, 118533, 134063,
	-91, -1000, 134063, 551, 550, 507, -1000, -1000, -1000, 624,
	-1000, -1000, -1000, 118533, 3670, -1000, 118533, 103350, 118533, -1000,
	-1000, 2274, -1000, -1000, -1000, 118533, 2410, -1000, -1000, -1000,
	1117, 49051, 5019, 53083, 546, 49051, -1000, 544, 543, 3503,
	3236, -1000, 2726, 2892, 1971, 57658, -1000, 3327, -1000, 127792,
	-1000, 1114, 2024, -1000, -1000, -1000, -1000, 134063, 53083, 3381,
	57658, -1000, -1000, 542, 541, 134063, 537, 851, 2873, -1000,
	-1000, -1000, -1000, -1000, 134063, 534, 3481, -1000, -1000, -1000,
	-1000, 2330, 94927, -1000, -1000, -1000, 1208, -1000, -1000, -1000,
	-1000, 3669, 3668, 2871, 84242, -1000, -203, -1000, -1000, 2027,
	148, 2178, 2780, -1000, 2320, 533, -1000, -1000, 2331, 2648,
	-1000, 102789, 33959, 33959, 352, 3495, 979, -1000, 3568, -1000,
	3242, 3242, 49051, 3493, 148, -1000, 3603, 57658, -1000, 94927,
	57658, 2338, 2100, 2554, 78620, -1000, 2566, -1000, -1000, -205,
	118533, 1935, -1000, -1000, 77498, 77498, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1114, -208, -211,
	-1000, 77498, -1000, -1000, 2541, -1000, 118533, -1000, 118533, -1000,
	-1000, -216, -217, -1000, 2218, 49051, 33383, -1000, -1000, 2791,
	-219, -1000, -98, -1000, 3492, 50779, 3667, 3659, 3651, -1000,
	-164, -1000, -164, -1000, 1989, -1000, -1000, -1000, 3033, 2825,
	13296, 5019, 2531, 118533, 6751, 1939, 1939, -1000, 3490, 2891,
	-1000, -1000, 2732, 530, -1000, -1000, -1000, -1000, 934, 118533,
	2732, 2821, 94927, 5019, 1116, -225, 2180, 2180, 49051, 32807,
	2199, 49051, -1000, -1000, 3381, 118533, -1000, -1000, 118533, 2334,
	-1000, 2859, 3584, -1000, 988, -1000, 2196, 118533, -1000, 3365,
	-1000, 3253, -1000, -1000, -1000, 2744, 148, -1000, -1000, -1000,
	-226, 134063, 148, -1000, 350, -227, 1115, -228, 94927, 2012,
	-1000, 845, -1000, 2571, 1048, -1000, -1000, -233, -234, 1971,
	1114, 2174, -235, -1000, -241, -248, -1000, -1000, 348, 50203,
	50203, 50203, -111, -112, -1000, 118533, 529, -1000, -1000, -1000,
	-1000, -1000, 3008, 1026, -1000, 874, 1950, 346, 1126, 345,
	301, -1000, -1000, -1000, 2174, 118533, -1000, -1000, -1000, 1025,
	526, -1000, 49051, 1114, -249, -1000, 1089, -250, -1000, 1088,
	-255, -1000, 2870, -1000, -260, 2330, -261, 232, 1791, 1024,
	3464, -1000, -1000, -1000, 2331, 94927, -267, -1000, -1000, 2378,
	-1000, 2732, 1023, -1000, -1000, -1000, 1114, 525, 1971, 524,
	1592, 845, -1000, -1000, 1414, 3313, 3070, 1021, 1021, 2732,
	1971, 1007, -1000, 1021, -1000, -1000, -1000, 3063, -1000, 54235,
	2311, 1874, 131389, 3063, 3063, -1000, -1000, 118533, 3447, -1000,
	912, 899, 1576, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2835, -270, 3446, 2531, 134063, 2732, -1000, 2180, 2777,
	-1000, 2180, 2865, -1000, 2194, -1000, -1000, -1000, 2838, -1000,
	2862, -1000, 1821, 3558, 2544, 522, -1000, 118533, 1856, 1852,
	3650, 2178, 2331, 1971, 57658, 2732, 57658, 2151, -1000, 118533,
	-1000, 2100, 1352, -1000, -1000, 2174, 2732, 1048, 520, -1000,
	-1000, 1764, 3528, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 843, -1000, 3169, -1000, 1140, 2186, 2186, 1048, -1000,
	839, 874, -1000, -1000, 518, -1000, 516, -1000, 2305, 118533,
	2276, -1000, -1000, -1000, -1000, 118533, -1000, -1000, 3641, -1000,
	988, -1000, 2732, -272, 2174, -279, -1000, -1000, -1000, -164,
	2012, -1000, 1699, 1007, 2174, -1000, 1873, -1000, -1000, 2229,
	49627, 49051, -1000, 3553, -1000, -1000, 2608, -1000, -1000, 49051,
	2835, 49051, 49051, -1000, 232, 65044, -280, -1000, 2331, 2174,
	1114, 1007, 1971, 1592, 66729, 1048, 1007, -1000, -1000, -1000,
	134063, -1000, -1000, -1000, 134063, -1000, -281, -297, -1000, -269,
	102228, 2316, 2544, 1007, 1971, 1048, 2732, 2151, -263, -1000,
	1048, 2174, 1202, -305, -1000, -1000, -1000, -1000, 1048, 2732,
	-1000, 2174, -1000, -1000, -1000, -1000, -1000, 513, -1000, -1000,
	2174, 1007, 49051, 1007, 1048, -310, 1048, -1000, 2174, -1000,
	-1000,
}

var sqlPgo = [...]int{
	0, 4494, 4492, 4491, 4486, 4482, 4481, 4480, 4479, 4477,
	4476, 4473, 4472, 159, 4471, 4470, 4463, 4462, 4459, 4458,
	4456, 4454, 4453, 4451, 4450, 4449, 4448, 4442, 4439, 4438,
	4437, 4435, 4432, 4428, 4425, 4423, 4422, 4421, 4420, 4419,
	4418, 4417, 4415, 4411, 4410, 4409, 4405, 4403, 4401, 4400,
	4398, 4390, 4389, 4386, 4385, 4381, 4380, 4379, 4378, 4361,
	4360, 4359, 4358, 4357, 4351, 4350, 4341, 54, 4338, 4335,
	4334, 4333, 4328, 4323, 4322, 4321, 4312, 4311, 4309, 4306,
	4304, 4303, 4302, 4298, 4297, 4296, 4294, 4293, 64, 4292,
	289, 4291, 4290, 4289, 4286, 4285, 4284, 4283, 4281, 4280,
	4279, 4278, 4277, 288, 4276, 139, 163, 4275, 4274, 3843,
	4273, 4272, 284, 4270, 4269, 4266, 4265, 285, 4259, 4256,
	4255, 4254, 4253, 4248, 4245, 4244, 4242, 4241, 4239, 115,
	204, 4235, 4233, 509, 4232, 4231, 4230, 4223, 4221, 4220,
	4215, 4214, 4213, 4212, 4211, 253, 176, 4207, 278, 4206,
	4204, 4203, 4201, 4200, 4198, 4197, 4195, 4194, 4193, 4192,
	4191, 4189, 4185, 4184, 4182, 4180, 4179, 4174, 4173, 4172,
	4171, 4170, 4168, 4167, 4165, 4164, 4163, 4162, 4160, 4159,
	4158, 4154, 4153, 4151, 4149, 4148, 4147, 4145, 242, 217,
	197, 4144, 4141, 269, 268, 4140, 4139, 4138, 4134, 4133,
	130, 8, 32, 4132, 4125, 91, 78, 90, 99, 93,
	102, 4124, 109, 4123, 129, 81, 4122, 22, 4, 219,
	247, 11393, 245, 4120, 4119, 4116, 249, 196, 4115, 241,
	4113, 4108, 4106, 4102, 4098, 4097, 69, 52, 186, 184,
	171, 170, 5, 4094, 162, 107, 77, 59, 45, 17,
	97, 215, 26, 9, 261, 4087, 260, 14, 145, 12,
	36, 4085, 4084, 4082, 4081, 3564, 127, 4077, 267, 252,
	166, 4076, 4073, 4072, 737, 4070, 4069, 48, 4063, 178,
	103, 125, 16, 122, 4062, 153, 180, 38, 4061, 164,
	51, 4060, 160, 98, 89, 10130, 12902, 4059, 4058, 114,
	71, 86, 266, 200, 173, 201, 94, 174, 172, 112,
	216, 213, 177, 185, 4057, 254, 4054, 3508, 106, 188,
	161, 6009, 4051, 4050, 4049, 83, 199, 108, 4048, 4045,
	72, 18, 3, 1, 2, 147, 21, 25, 24, 4043,
	29, 121, 46, 27, 4042, 30, 4039, 4038, 4036, 4032,
	4030, 58, 167, 4029, 4026, 272, 4024, 149, 56, 57,
	4021, 336, 224, 4017, 240, 126, 4016, 4015, 257, 209,
	210, 4013, 79, 236, 4012, 4010, 4009, 4008, 4007, 133,
	10, 132, 4006, 4005, 150, 4003, 50, 246, 198, 4002,
	60, 4001, 3999, 182, 66, 144, 283, 131, 234, 117,
	228, 195, 235, 3998, 3997, 3996, 227, 3988, 3987, 223,
	168, 3986, 3985, 203, 286, 87, 47, 80, 237, 82,
	194, 157, 3984, 207, 3983, 3981, 281, 187, 222, 13,
	6, 100, 138, 3980, 7, 238, 155, 233, 113, 3979,
	6985, 1730, 2633, 3978, 3976, 152, 119, 76, 118, 158,
	263, 104, 3974, 3973, 2800, 3972, 3969, 3965, 3964, 190,
	3962, 3961, 3959, 143, 146, 220, 3955, 95, 74, 49,
	28, 124, 280, 270, 116, 230, 175, 256, 3950, 3947,
	3946, 189, 3944, 70, 128, 165, 206, 250, 62, 3943,
	120, 3939, 151, 1067, 67, 156, 3937, 225, 3935, 3934,
	3933, 3930, 3928, 3927, 3924, 265, 243, 3923, 3922, 3921,
	44, 193, 3920, 262, 154, 181, 92, 65, 3919, 96,
	2627, 3918, 258, 2311, 55, 264, 205, 3917, 4598, 53,
	3916, 0, 14261, 8330, 11861, 13914, 3915, 5808, 3914, 3913,
	3912, 221, 148, 3911, 3910, 3908, 105, 3902, 84, 3900,
	3899, 73, 3898, 41, 19, 20, 33, 31, 679, 287,
	3897, 3896, 134, 137, 135, 3895, 271, 231, 3894, 3892,
	3891, 3889, 88, 3888, 42, 3887, 39, 3886, 3884, 40,
	15, 43, 3883, 3882, 208, 3880, 226, 255, 3879, 169,
	3878, 68, 141, 3875, 3874, 3873, 63, 61, 259, 85,
	3872, 282, 3871, 202, 3870, 3869, 3869, 23, 3868, 3864,
	244, 111, 110, 3863, 251, 142, 35, 212, 183, 232,
	3862, 3861, 179, 3860, 3859, 3857, 273, 3856, 3854, 34,
	3853, 3852, 3851, 11, 3850, 3849, 211, 3194, 3847, 3845,
	37, 3841, 191,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 11, 11, 7, 7, 7, 7, 8,
	8, 8, 8, 8, 52, 52, 9, 9, 9, 9,
	9, 9, 9, 9, 9, 9, 9, 37, 39, 38,
	32, 32, 33, 33, 34, 35, 35, 10, 10, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 18, 18,
	40, 40, 19, 19, 42, 42, 20, 20, 43, 43,
	598, 598, 617, 617, 23, 23, 45, 45, 24, 46,
	17, 599, 599, 599, 599, 36, 25, 47, 29, 29,
	29, 29, 29, 203, 203, 203, 203, 22, 22, 41,
	41, 239, 239, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	594, 594, 241, 241, 240, 233, 233, 234, 234, 235,
	235, 600, 600, 242, 242, 242, 244, 244, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 494, 494,
	494, 526, 526, 526, 525, 525, 621, 621, 622, 622,
	622, 622, 622, 132, 132, 392, 392, 392, 56, 56,
	56, 56, 56, 589, 589, 205, 205, 205, 207, 207,
	206, 206, 206, 206, 206, 79, 79, 606, 606, 607,
	607, 605, 604, 604, 604, 608, 608, 608, 204, 204,
	204, 128, 128, 128, 128, 128, 128, 129, 129, 130,
	130, 208, 208, 208, 210, 210, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 214, 16, 16, 16,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 108,
	108, 528, 528, 529, 529, 199, 199, 200, 200, 200,
	200, 201, 201, 202, 202, 202, 70, 70, 211, 211,
	213, 213, 212, 212, 212, 212, 212, 58, 58, 58,
	58, 58, 58, 58, 59, 59, 59, 59, 59, 60,
	60, 60, 60, 60, 60, 61, 61, 61, 61, 61,
	61, 68, 68, 68, 68, 68, 68, 190, 190, 71,
	71, 71, 71, 71, 71, 71, 71, 71, 71, 71,
	71, 71, 76, 76, 76, 76, 623, 623, 623, 623,
	623, 623, 623, 623, 623, 623, 623, 623, 623, 623,
	623, 623, 623, 623, 623, 624, 624, 625, 625, 626,
	626, 627, 627, 627, 627, 627, 627, 627, 627, 627,
	627, 627, 627, 627, 627, 627, 627, 627, 627, 627,
	74, 74, 74, 74, 74, 74, 74, 74, 74, 74,
	74, 74, 74, 74, 74, 74, 74, 85, 85, 353,
	353, 316, 316, 86, 86, 86, 87, 87, 88, 88,
	72, 72, 587, 587, 369, 369, 485, 485, 73, 595,
	595, 595, 597, 597, 596, 596, 90, 90, 391, 391,
	91, 91, 91, 91, 91, 91, 92, 92, 92, 92,
	92, 92, 92, 93, 93, 93, 93, 93, 93, 93,
	93, 93, 93, 93, 93, 93, 93, 100, 100, 100,
	100, 100, 101, 101, 101, 98, 98, 98, 95, 95,
	95, 94, 94, 94, 99, 99, 99, 586, 305, 305,
	97, 97, 97, 96, 96, 96, 370, 370, 102, 102,
	102, 102, 317, 103, 103, 103, 103, 103, 103, 103,
	103, 106, 106, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 107, 107, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 107, 487, 487, 104, 104,
	104, 452, 452, 109, 109, 109, 407, 407, 110, 110,
	110, 110, 110, 111, 111, 111, 111, 111, 111, 111,
	111, 111, 131, 131, 131, 131, 131, 131, 131, 131,
	591, 591, 362, 362, 268, 268, 268, 268, 121, 121,
	121, 121, 122, 122, 122, 123, 123, 195, 195, 138,
	138, 138, 138, 137, 137, 137, 137, 137, 137, 137,
	137, 62, 62, 62, 63, 63, 64, 64, 65, 65,
	66, 66, 67, 67, 67, 67, 67, 141, 141, 618,
	618, 143, 140, 140, 140, 140, 140, 139, 139, 142,
	142, 142, 142, 144, 146, 146, 146, 146, 146, 145,
	145, 145, 145, 147, 147, 519, 519, 378, 378, 517,
	517, 538, 538, 518, 518, 323, 323, 323, 323, 323,
	324, 324, 324, 527, 527, 527, 527, 527, 527, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 196, 196, 197, 198, 198, 198, 198, 198,
	173, 173, 173, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 176, 176, 176, 160, 160, 149, 149,
	149, 149, 149, 149, 149, 154, 154, 154, 154, 154,
	154, 154, 154, 150, 150, 162, 162, 162, 162, 162,
	155, 155, 156, 156, 156, 157, 157, 157, 157, 183,
	183, 159, 159, 161, 161, 161, 161, 161, 161, 161,
	161, 161, 151, 151, 151, 151, 164, 164, 164, 164,
	414, 414, 414, 188, 188, 163, 163, 163, 163, 163,
	163, 163, 163, 163, 163, 163, 163, 163, 163, 163,
	163, 186, 186, 186, 186, 186, 186, 609, 609, 610,
	610, 610, 180, 180, 180, 180, 180, 180, 466, 466,
	174, 174, 174, 174, 179, 179, 179, 179, 182, 182,
	182, 182, 397, 397, 171, 171, 171, 172, 172, 172,
	177, 177, 178, 354, 354, 175, 175, 181, 181, 181,
	181, 152, 152, 152, 152, 152, 152, 152, 153, 153,
	153, 153, 184, 184, 170, 170, 185, 185, 185, 185,
	185, 185, 185, 185, 185, 185, 185, 628, 628, 166,
	166, 166, 165, 165, 165, 165, 168, 168, 169, 169,
	169, 169, 169, 169, 167, 158, 187, 588, 588, 584,
	584, 584, 584, 584, 584, 584, 584, 585, 585, 585,
	585, 590, 590, 114, 114, 114, 114, 114, 124, 124,
	124, 124, 124, 115, 115, 115, 115, 115, 115, 115,
	117, 117, 116, 116, 116, 116, 80, 80, 80, 80,
	80, 15, 15, 15, 81, 81, 259, 259, 217, 217,
	217, 342, 342, 218, 218, 331, 331, 331, 331, 215,
	215, 216, 216, 82, 82, 629, 629, 629, 601, 601,
	601, 602, 602, 602, 602, 602, 602, 325, 325, 326,
	326, 432, 432, 432, 432, 432, 329, 329, 329, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 332, 332,
	243, 243, 243, 340, 341, 341, 333, 333, 339, 338,
	338, 337, 337, 336, 336, 334, 335, 335, 335, 344,
	344, 343, 346, 346, 345, 431, 547, 547, 549, 549,
	549, 549, 549, 549, 549, 551, 551, 551, 551, 551,
	551, 551, 551, 551, 551, 551, 551, 551, 551, 551,
	551, 551, 415, 415, 630, 630, 631, 632, 545, 545,
	545, 546, 541, 541, 542, 542, 542, 542, 542, 327,
	327, 328, 328, 328, 328, 543, 544, 360, 360, 470,
	548, 548, 550, 550, 552, 633, 633, 633, 633, 633,
	633, 634, 634, 634, 430, 430, 429, 429, 351, 351,
	553, 553, 553, 553, 554, 554, 554, 554, 554, 557,
	556, 555, 555, 555, 555, 555, 84, 84, 84, 394,
	394, 393, 393, 395, 395, 395, 395, 395, 395, 395,
	395, 395, 395, 395, 395, 395, 395, 395, 192, 192,
	271, 271, 271, 78, 78, 78, 12, 12, 12, 12,
	12, 12, 12, 286, 286, 13, 13, 13, 603, 603,
	603, 83, 83, 83, 83, 83, 83, 270, 270, 270,
	270, 270, 270, 270, 270, 270, 270, 270, 270, 270,
	270, 270, 270, 270, 270, 270, 270, 270, 270, 270,
	270, 593, 593, 592, 592, 272, 272, 636, 636, 89,
	89, 89, 89, 89, 89, 89, 89, 488, 488, 489,
	489, 77, 77, 77, 77, 77, 416, 416, 413, 413,
	412, 412, 359, 359, 468, 468, 468, 469, 276, 276,
	277, 277, 236, 236, 236, 31, 30, 21, 21, 26,
	26, 27, 27, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 28, 28, 49, 49, 49, 49, 50, 50,
	50, 50, 53, 53, 54, 54, 48, 48, 48, 48,
	51, 51, 44, 44, 55, 55, 55, 55, 55, 611,
	613, 613, 612, 612, 616, 616, 616, 616, 616, 616,
	614, 614, 615, 615, 619, 619, 620, 620, 120, 120,
	125, 125, 125, 125, 125, 126, 126, 126, 126, 127,
	127, 127, 127, 136, 136, 191, 191, 191, 191, 191,
	191, 191, 57, 57, 57, 57, 69, 69, 69, 69,
	134, 638, 638, 638, 135, 135, 135, 637, 637, 269,
	269, 426, 426, 427, 427, 639, 639, 428, 428, 428,
	428, 428, 262, 261, 263, 263, 264, 264, 75, 75,
	75, 252, 252, 251, 253, 253, 254, 254, 249, 249,
	530, 530, 256, 256, 256, 257, 257, 245, 245, 246,
	246, 247, 247, 248, 248, 260, 260, 640, 640, 112,
	112, 112, 194, 194, 315, 315, 315, 423, 423, 423,
	352, 352, 283, 283, 425, 425, 425, 425, 390, 390,
	390, 193, 193, 367, 367, 380, 380, 381, 381, 482,
	482, 382, 118, 118, 119, 119, 133, 133, 221, 221,
	219, 219, 219, 219, 219, 219, 219, 219, 226, 226,
	227, 227, 228, 228, 229, 230, 230, 230, 230, 371,
	371, 231, 231, 231, 220, 220, 220, 222, 222, 222,
	222, 222, 222, 222, 225, 225, 225, 225, 232, 232,
	232, 224, 224, 564, 564, 564, 566, 566, 568, 568,
	567, 567, 563, 563, 565, 565, 635, 635, 396, 396,
	396, 349, 350, 347, 347, 348, 348, 357, 357, 355,
	356, 356, 358, 358, 467, 467, 467, 237, 237, 237,
	387, 387, 387, 387, 388, 388, 419, 419, 417, 417,
	417, 417, 418, 418, 420, 420, 420, 421, 421, 422,
	422, 384, 384, 385, 385, 386, 386, 386, 386, 448,
	448, 223, 223, 223, 364, 364, 364, 365, 365, 438,
	438, 438, 438, 438, 438, 438, 438, 439, 439, 437,
	437, 437, 437, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 472, 473, 473, 366, 366, 474, 424, 424,
	582, 582, 582, 583, 583, 465, 465, 475, 475, 475,
	475, 475, 475, 463, 463, 464, 464, 483, 484, 484,
	400, 400, 400, 400, 398, 398, 401, 401, 401, 401,
	401, 399, 399, 476, 476, 476, 476, 389, 389, 477,
	477, 477, 477, 478, 479, 479, 480, 480, 433, 434,
	434, 490, 490, 490, 490, 492, 363, 363, 363, 363,
	363, 540, 539, 539, 491, 491, 491, 491, 491, 491,
	491, 491, 491, 506, 506, 506, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 507, 507, 507, 507, 507,
	507, 507, 493, 493, 493, 493, 493, 497, 497, 497,
	496, 496, 496, 496, 496, 496, 496, 496, 496, 496,
	496, 498, 498, 503, 503, 504, 504, 504, 499, 500,
	505, 505, 505, 505, 641, 641, 509, 509, 501, 501,
	501, 501, 501, 501, 501, 501, 501, 495, 495, 495,
	502, 502, 502, 409, 409, 409, 409, 409, 409, 409,
	409, 409, 409, 409, 409, 409, 408, 408, 410, 410,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 442, 442, 442, 442, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	558, 558, 558, 558, 558, 558, 558, 558, 444, 444,
	561, 561, 562, 562, 559, 559, 559, 559, 559, 559,
	559, 559, 559, 559, 559, 559, 559, 559, 559, 559,
	559, 559, 559, 559, 559, 559, 559, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 569, 569, 570, 570, 572,
	572, 573, 573, 574, 575, 575, 575, 576, 577, 577,
	571, 571, 578, 578, 578, 578, 579, 579, 580, 580,
	580, 580, 580, 581, 581, 581, 581, 581, 454, 454,
	455, 455, 461, 461, 461, 320, 320, 320, 320, 320,
	320, 320, 320, 320, 320, 320, 320, 320, 320, 320,
	320, 320, 320, 320, 320, 320, 320, 320, 320, 320,
	320, 320, 320, 320, 320, 320, 320, 320, 320, 320,
	322, 322, 321, 273, 273, 273, 273, 273, 273, 376,
	376, 374, 374, 374, 377, 377, 375, 375, 373, 373,
	372, 372, 451, 451, 449, 449, 453, 453, 402, 402,
	508, 508, 508, 508, 508, 508, 508, 508, 403, 403,
	403, 411, 404, 404, 405, 405, 405, 405, 405, 445,
	446, 406, 406, 406, 447, 447, 456, 460, 460, 459,
	458, 458, 457, 457, 435, 435, 436, 436, 383, 383,
	642, 642, 379, 379, 481, 481, 481, 481, 319, 319,
	368, 368, 318, 318, 310, 310, 311, 311, 311, 311,
	361, 361, 462, 462, 510, 510, 511, 511, 512, 512,
	513, 513, 514, 515, 516, 450, 450, 294, 293, 280,
	281, 292, 291, 290, 279, 282, 287, 288, 289, 284,
	285, 301, 300, 299, 250, 255, 306, 307, 307, 309,
	309, 308, 308, 296, 297, 298, 486, 278, 312, 312,
	313, 313, 313, 314, 314, 314, 314, 274, 274, 275,
	275, 302, 302, 303, 304, 304, 295, 295, 295, 265,
	265, 265, 266, 266, 267, 267, 524, 524, 521, 521,
	521, 522, 522, 522, 523, 523, 523, 523, 520, 520,
	520, 520, 520, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 532, 532, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 534, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 537, 537,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 1, 1, 1, 3, 1,
	1, 1, 1, 3, 4, 6, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 6, 4, 4,
	6, 9, 6, 8, 4, 4, 5, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 4, 6,
	4, 6, 6, 9, 6, 9, 6, 5, 6, 5,
	1, 1, 1, 0, 6, 6, 6, 6, 6, 6,
	4, 4, 4, 4, 3, 4, 4, 4, 7, 7,
	9, 8, 9, 5, 3, 5, 7, 4, 12, 4,
	12, 1, 3, 5, 5, 2, 5, 3, 6, 4,
	4, 4, 6, 5, 6, 5, 6, 4, 8, 3,
	4, 2, 3, 10, 3, 6, 4, 3, 1, 3,
	2, 1, 1, 3, 1, 3, 2, 4, 3, 2,
	3, 2, 0, 1, 1, 0, 2, 0, 7, 10,
	6, 8, 6, 6, 6, 9, 4, 3, 2, 2,
	0, 1, 1, 1, 1, 1, 1, 3, 6, 4,
	6, 7, 9, 6, 2, 2, 3, 0, 8, 6,
	8, 7, 2, 0, 1, 2, 5, 0, 1, 3,
	3, 1, 1, 3, 1, 12, 3, 1, 0, 1,
	1, 2, 1, 4, 0, 3, 3, 0, 4, 6,
	0, 5, 7, 6, 8, 8, 2, 1, 3, 1,
	3, 2, 5, 0, 1, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 1, 3, 1, 3, 3, 3,
	6, 4, 9, 7, 12, 12, 12, 9, 2, 7,
	2, 1, 1, 1, 3, 3, 0, 3, 1, 3,
	1, 1, 3, 2, 5, 0, 7, 5, 2, 0,
	1, 2, 3, 1, 1, 2, 2, 1, 2, 1,
	2, 1, 2, 2, 3, 3, 3, 3, 3, 3,
	5, 3, 3, 5, 3, 3, 5, 3, 3, 5,
	3, 6, 6, 6, 6, 6, 4, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 1, 1, 2,
	1, 2, 6, 3, 8, 3, 4, 3, 3, 4,
	3, 4, 4, 4, 3, 5, 7, 3, 3, 4,
	3, 3, 3, 3, 3, 2, 0, 1, 0, 1,
	0, 4, 3, 3, 3, 3, 3, 6, 4, 4,
	4, 3, 5, 3, 3, 3, 3, 3, 3, 3,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	4, 1, 2, 1, 2, 1, 2, 7, 3, 2,
	0, 1, 3, 3, 1, 0, 1, 2, 2, 1,
	6, 5, 1, 2, 1, 3, 2, 0, 7, 2,
	5, 0, 1, 3, 3, 1, 9, 3, 2, 0,
	2, 2, 2, 2, 2, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 4, 6, 5,
	7, 3, 4, 6, 3, 4, 6, 3, 5, 7,
	3, 4, 6, 3, 4, 6, 3, 1, 1, 3,
	4, 6, 3, 3, 5, 3, 1, 3, 2, 2,
	2, 2, 1, 2, 2, 5, 3, 3, 6, 6,
	3, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 1, 1,
	2, 1, 1, 2, 1, 1, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 3, 5, 7,
	2, 3, 0, 3, 5, 2, 3, 0, 2, 3,
	2, 3, 2, 6, 4, 7, 7, 7, 9, 10,
	5, 2, 6, 4, 7, 7, 7, 10, 5, 2,
	2, 1, 1, 3, 1, 1, 1, 1, 1, 2,
	1, 2, 2, 3, 2, 4, 3, 2, 2, 1,
	2, 1, 3, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 3, 5, 4, 6, 4, 3, 0,
	1, 3, 2, 4, 2, 4, 1, 6, 3, 1,
	1, 5, 3, 3, 2, 2, 6, 3, 3, 3,
	3, 4, 4, 3, 1, 3, 3, 2, 2, 1,
	3, 3, 1, 2, 1, 1, 2, 2, 3, 1,
	1, 1, 1, 1, 3, 2, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 2, 1, 1,
	1, 2, 2, 2, 1, 3, 3, 3, 3, 3,
	2, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 5, 7, 3, 3, 3, 4, 4,
	6, 5, 5, 5, 3, 4, 4, 3, 4, 4,
	3, 4, 4, 5, 3, 5, 5, 5, 7, 3,
	3, 3, 4, 6, 4, 2, 6, 4, 3, 2,
	3, 4, 3, 5, 3, 6, 5, 6, 3, 5,
	6, 3, 4, 3, 4, 3, 3, 4, 4, 5,
	0, 1, 1, 1, 1, 3, 2, 3, 4, 3,
	4, 3, 5, 3, 4, 4, 3, 4, 5, 3,
	4, 3, 4, 4, 5, 3, 3, 1, 1, 0,
	2, 3, 5, 4, 6, 4, 6, 4, 1, 0,
	3, 4, 4, 5, 7, 5, 3, 3, 3, 4,
	4, 5, 2, 0, 4, 2, 3, 4, 2, 3,
	3, 3, 5, 2, 0, 3, 3, 4, 3, 3,
	3, 3, 4, 4, 4, 4, 4, 3, 4, 5,
	4, 4, 2, 3, 2, 3, 6, 6, 7, 9,
	7, 9, 4, 3, 4, 4, 5, 1, 1, 10,
	10, 3, 5, 5, 5, 3, 5, 6, 4, 4,
	5, 5, 2, 3, 2, 5, 4, 2, 0, 1,
	1, 1, 1, 3, 2, 2, 2, 2, 2, 2,
	1, 2, 0, 1, 2, 1, 2, 2, 1, 2,
	1, 2, 2, 3, 7, 3, 3, 7, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 6, 5, 8,
	3, 6, 6, 3, 13, 16, 1, 0, 1, 2,
	3, 0, 2, 0, 4, 0, 4, 5, 4, 3,
	3, 1, 3, 10, 13, 0, 2, 3, 1, 1,
	0, 1, 2, 2, 2, 2, 1, 1, 0, 1,
	3, 1, 1, 1, 2, 3, 3, 3, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 8, 0,
	1, 1, 0, 2, 1, 0, 1, 0, 1, 1,
	0, 1, 4, 1, 0, 3, 7, 7, 1, 1,
	3, 7, 1, 3, 11, 3, 2, 0, 3, 1,
	2, 2, 3, 2, 6, 2, 1, 2, 2, 2,
	8, 4, 2, 3, 5, 5, 5, 2, 5, 5,
	2, 2, 2, 0, 1, 1, 3, 4, 11, 12,
	9, 5, 3, 1, 5, 10, 7, 11, 3, 3,
	0, 2, 4, 3, 3, 1, 5, 1, 3, 1,
	2, 0, 1, 2, 2, 0, 1, 3, 3, 2,
	2, 1, 1, 1, 4, 0, 6, 0, 3, 0,
	2, 2, 2, 0, 1, 1, 2, 2, 0, 3,
	3, 2, 1, 1, 2, 2, 5, 8, 4, 1,
	0, 1, 2, 2, 1, 2, 3, 3, 2, 2,
	3, 2, 2, 2, 2, 2, 3, 1, 4, 2,
	3, 2, 2, 4, 7, 3, 4, 6, 5, 7,
	5, 5, 3, 3, 0, 2, 2, 2, 1, 1,
	1, 8, 10, 11, 7, 10, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 0, 3, 3, 0, 1, 8,
	11, 3, 6, 6, 5, 3, 4, 1, 0, 1,
	3, 17, 20, 16, 19, 4, 2, 0, 1, 0,
	1, 0, 1, 3, 2, 4, 2, 3, 1, 0,
	2, 0, 1, 1, 0, 9, 6, 6, 8, 6,
	8, 5, 7, 2, 6, 7, 4, 4, 5, 2,
	4, 6, 6, 8, 6, 7, 8, 9, 6, 7,
	8, 9, 6, 8, 6, 8, 6, 7, 8, 9,
	6, 8, 6, 8, 6, 6, 8, 8, 4, 7,
	3, 0, 7, 10, 1, 1, 1, 1, 2, 2,
	3, 0, 3, 0, 1, 0, 2, 0, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 1, 2, 1, 2, 1,
	2, 1, 3, 2, 3, 2, 2, 2, 2, 2,
	2, 1, 1, 0, 2, 4, 2, 1, 0, 2,
	1, 1, 0, 1, 3, 1, 0, 1, 1, 1,
	1, 1, 2, 3, 2, 2, 1, 2, 13, 16,
	3, 1, 0, 4, 1, 0, 2, 2, 3, 0,
	1, 1, 4, 4, 5, 1, 0, 3, 0, 3,
	0, 3, 0, 3, 0, 4, 0, 1, 0, 6,
	7, 3, 6, 3, 1, 3, 1, 1, 4, 2,
	1, 3, 1, 3, 4, 8, 11, 5, 2, 2,
	0, 10, 3, 2, 0, 1, 3, 1, 1, 3,
	3, 5, 6, 4, 5, 4, 1, 1, 3, 3,
	1, 2, 4, 4, 2, 3, 5, 5, 1, 3,
	1, 0, 1, 2, 3, 2, 4, 2, 3, 0,
	2, 0, 2, 1, 2, 1, 1, 1, 2, 1,
	2, 1, 2, 1, 8, 8, 8, 2, 4, 4,
	4, 2, 2, 2, 2, 3, 1, 3, 1, 2,
	6, 7, 1, 0, 1, 0, 1, 0, 1, 1,
	0, 1, 5, 1, 0, 1, 0, 1, 0, 3,
	3, 5, 1, 3, 3, 4, 5, 2, 2, 0,
	2, 2, 1, 1, 1, 0, 1, 0, 2, 2,
	5, 4, 2, 3, 1, 1, 1, 1, 1, 1,
	1, 3, 0, 1, 3, 1, 3, 3, 3, 2,
	0, 4, 2, 5, 3, 2, 0, 1, 3, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 3, 2,
	4, 4, 0, 4, 4, 3, 4, 1, 5, 3,
	4, 5, 5, 1, 5, 1, 3, 2, 0, 3,
	0, 2, 3, 1, 3, 2, 0, 3, 5, 6,
	4, 6, 4, 3, 2, 1, 0, 5, 1, 0,
	2, 2, 2, 1, 1, 0, 1, 1, 1, 1,
	0, 4, 2, 1, 2, 2, 4, 1, 3, 1,
	2, 3, 2, 4, 1, 0, 1, 0, 2, 1,
	0, 2, 5, 7, 2, 1, 2, 4, 3, 5,
	0, 1, 3, 5, 1, 2, 1, 1, 1, 1,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 4,
	6, 6, 1, 1, 1, 1, 1, 3, 5, 0,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 2,
	1, 3, 0, 5, 4, 1, 2, 1, 4, 1,
	1, 2, 1, 1, 1, 1, 1, 0, 1, 2,
	5, 1, 4, 2, 5, 1, 4, 3, 3, 0,
	1, 2, 4, 1, 1, 1, 1, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 1, 0, 1, 4,
	1, 3, 3, 3, 5, 2, 2, 2, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 3, 3, 3, 2, 2, 3, 5,
	4, 6, 3, 5, 4, 6, 4, 6, 5, 7,
	3, 3, 3, 3, 3, 4, 3, 2, 4, 2,
	3, 3, 4, 3, 4, 3, 4, 5, 6, 6,
	7, 6, 7, 6, 7, 3, 4, 4, 1, 3,
	1, 3, 3, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 3, 5, 6, 6,
	7, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	6, 1, 1, 1, 1, 1, 1, 2, 1, 5,
	5, 6, 3, 1, 1, 1, 2, 2, 2, 4,
	3, 5, 6, 8, 6, 5, 4, 3, 2, 2,
	4, 1, 1, 1, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 6, 6, 8, 8,
	6, 4, 6, 6, 6, 4, 1, 3, 3, 3,
	3, 3, 4, 3, 3, 4, 3, 3, 4, 3,
	3, 4, 3, 3, 3, 3, 3, 4, 3, 4,
	3, 4, 3, 4, 4, 3, 6, 5, 5, 5,
	4, 4, 3, 4, 3, 5, 0, 5, 0, 2,
	0, 1, 3, 3, 2, 2, 0, 6, 1, 0,
	3, 0, 3, 3, 3, 0, 1, 4, 2, 2,
	2, 2, 2, 3, 2, 2, 3, 0, 4, 1,
	1, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 1, 1, 1, 2, 1, 2, 2,
	3, 1, 2, 3, 2, 3, 2, 3, 1, 0,
	1, 3, 1, 3, 3, 3, 1, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 3,
	1, 2, 3, 0, 3, 3, 2, 2, 1, 2,
	2, 3, 2, 1, 1, 1, 5, 1, 2, 4,
	2, 0, 1, 0, 3, 5, 1, 0, 1, 2,
	1, 0, 1, 3, 3, 2, 1, 1, 1, 3,
	1, 3, 3, 1, 1, 1, 1, 5, 3, 1,
	1, 3, 1, 1, 1, 1, 2, 2, 1, 1,
	2, 2, 1, 1, 1, 3, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	3, 1, 0, 1, 1, 1, 1, 1, 1, 1,
	3, 5, 7, 1, 7, 5, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 5, 1, 1, 1, 1,
	1, 1, 1, 0, 3, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 607, -105, -102, -70, -68, -109, -110,
	-91, -111, -104, -131, -136, -118, -119, -120, -132, -138,
	-191, -196, -197, -198, -3, -56, -58, -71, -90, -92,
	-103, -113, -112, -114, -121, -128, -124, -108, -62, -133,
	-137, -148, -192, -193, -194, 32, 31, 100, 80, 156,
	129, 138, 204, 389, 434, 446, 404, 143, 425, 409,
	-142, -143, 464, -57, -69, -135, -134, 73, 130, 419,
	-4, -12, -16, 29, 46, -59, -60, -61, 62, -78,
	-74, -85, -79, -72, -73, -76, -623, 102, -565, -93,
	-96, -127, -627, 163, 222, -115, -116, 371, -122, -123,
	427, -125, -126, 430, 164, -64, -63, 158, -219, -221,
	-140, -139, -141, -195, -149, -150, -151, -152, -153, -154,
	-155, -157, -183, -158, -159, -160, -161, -162, -163, -167,
	-186, -164, -165, -166, -169, -168, -170, -175, -171, -172,
	-173, -174, -176, -177, -179, -180, -181, -182, -184, -185,
	469, -178, -187, -156, 531, 49, 485, 82, 148, 438,
	21, -5, -6, -7, -8, -9, -10, -11, -15, -14,
	-55, -75, -77, -80, -81, -82, -89, -83, -84, -564,
	-94, -95, -98, -100, -101, -97, -99, 426, -222, -220,
	604, 546, -18, -23, -24, -19, -20, -22, -25, -21,
	-26, -27, -28, -40, -45, -46, -42, -43, -41, -44,
	-47, -48, -49, -50, -51, -52, -53, -54, -30, -36,
	-37, -31, -32, -33, -34, -35, -38, -39, -17, -29,
	568, 577, -225, -223, -224, -232, 456, 554, 505, 607,
	607, 607, 607, 607, 607, 607, 607, 607, 607, 607,
	607, 607, 607, 607, 607, 607, 607, 607, 607, 607,
	607, -317, 2, -296, -302, -303, -304, -295, -265, -534,
	-537, 4, -531, -535, 170, 232, 334, 21, 23, 22,
	24, 25, 26, 27, 29, 30, 41, 42, 44, 45,
	46, 47, 48, 49, 53, 55, 59, 60, 61, 62,
	63, 64, 68, 73, 74, 79, 80, 81, 82, 83,
	84, 85, 91, 88, 89, 90, 92, 94, 96, 97,
	98, 99, 100, 101, 103, 104, 105, 107, 108, 109,
	117, 118, 119, 120, 121, 123, 129, 124, 130, 133,
	128, 132, 134, 136, 137, 138, 141, 142, 143, 145,
	146, 147, 149, 150, 151, 153, 154, 156, 157, 158,
	161, 159, 513, 160, 162, 163, 164, 165, 168, 176,
	177, 178, 183, 185, 186, 190, 191, 192, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 205, 209, 211,
	212, 213, 214, 215, 221, 222, 224, 225, 226, 227,
	228, 233, 234, 235, 239, 236, 245, 246, 250, 251,
	252, 254, 258, 259, 260, 261, 262, 263, 265, 267,
	266, 269, 272, 273, 276, 277, 278, 279, 280, 281,
	285, 286, 282, 287, 288, 290, 291, 294, 292, 295,
	296, 293, 297, 299, 300, 301, 302, 303, 304, 305,
	306, 307, 308, 309, 310, 298, 313, 311, 315, 316,
	317, 332, 326, 327, 329, 321, 322, 318, 323, 319,
	320, 324, 325, 331, 328, 336, 337, 338, 341, 219,
	343, 344, 347, 365, 351, 352, 353, 356, 357, 360,
	363, 364, 366, 367, 368, 369, 370, 371, 372, 373,
	374, 376, 377, 379, 380, 381, 383, 384, 385, 387,
	389, 390, 392, 393, 395, 396, 397, 398, 399, 400,
	401, 403, 404, 406, 405, 407, 409, 411, 412, 413,
	419, 425, 421, 422, 423, 424, 426, 427, 428, 429,
	430, 432, 433, 434, 436, 437, 438, 439, 440, 442,
	444, 445, 449, 450, 466, 467, 487, 446, 447, 448,
	451, 452, 453, 454, 455, 459, 457, 458, 460, 461,
	462, 464, 465, 468, 469, 471, 472, 473, 474, 475,
	476, 477, 480, 482, 483, 484, 485, 504, 486, 488,
	492, 493, 494, 495, 489, 490, 503, 497, 498, 500,
	501, 506, 507, 508, 509, 510, 511, 512, 514, 516,
	524, 525, 526, 528, 531, 532, 533, 534, 522, 536,
	537, 540, 541, 542, 545, 543, 544, 546, 548, 551,
	552, 553, 559, 558, 560, 561, 563, 564, 569, 570,
	572, 573, 574, 36, 50, 51, 54, 56, 58, 69,
	70, 71, 75, 125, 126, 155, 166, 167, 179, 193,
	194, 206, 208, 216, 217, 218, 240, 241, 243, 248,
	270, 340, 342, 358, 362, 378, 382, 386, 388, 402,
	441, 478, 491, 496, 517, 518, 519, 520, 527, 529,
	554, 555, 556, 562, 571, -317, 2, -296, 349, -289,
	2, -265, -265, 389, 28, 2, 28, 377, 458, 508,
	510, 2, -591, -362, 2, 28, -268, -265, 102, 204,
	456, -289, 2, -591, -362, 25, 2, -265, 2, 363,
	22, 27, 66, 77, 98, 141, 165, 187, 190, -626,
	365, 396, 444, 460, 503, 514, 528, 2, 558, 291,
	457, 505, 232, 120, 533, 451, -603, 449, 450, 363,
	394, 436, 207, 547, -269, 2, 446, -265, 291, 2,
	607, 94, 74, 441, 461, -145, 2, 281, 525, -146,
	-147, -144, 517, -519, 451, 436, 313, -265, 607, 607,
	607, 28, -278, -265, 505, 232, 451, 120, 501, 607,
	2, 505, 368, 558, 457, 120, 399, 232, 533, 190,
	141, 27, 451, -603, 582, 583, 291, 127, -589, 2,
	-584, 4, -535, -531, -311, -310, 505, 511, 120, -304,
	-295, 597, -303, 607, 607, 607, 2, 251, 252, 398,
	397, 461, 462, 607, 607, 607, 607, 449, 2, 165,
	22, 27, 66, 93, 98, 127, 187, 190, 354, -624,
	365, 396, 460, 503, 507, 514, 528, -602, 486, 68,
	424, 451, -601, -603, 291, 533, 141, -412, 120, 281,
	202, 541, 510, 508, 539, 133, 239, 544, 543, 607,
	607, -106, 2, 604, 32, 31, -105, -109, 143, 464,
	-214, 505, 244, 2, -265, 607, 607, 2, 251, 252,
	449, 450, 607, 607, 188, -584, 2, 607, 607, 2,
	251, 252, 449, 450, 244, 2, 68, 453, 607, 607,
	607, 607, 607, 607, 607, 607, 607, 607, 607, 607,
	607, 607, 607, 607, 607, 607, 607, 607, 607, 607,
	607, 607, 607, 607, 607, 607, 607, 607, 607, 607,
	607, 607, 607, 607, 2, -189, 461, 486, 213, 47,
	46, 74, 28, 395, 79, 369, 121, 127, 150, 534,
	205, 232, 233, 259, 93, 94, -414, 44, 252, 68,
	251, 450, -609, 449, -466, 506, 452, 458, 500, 263,
	446, 525, 102, 548, 437, 574, 399, 400, 498, 413,
	282, 159, 189, 4, 120, 313, 436, 463, 267, 266,
	517, 281, 445, 372, 84, 607, -635, 2, 505, -637,
	2, 525, 525, 2, -637, 2, -637, 2, -637, 2,
	-638, 525, 571, 607, 607, 607, 607, 607, 607, 607,
	607, 607, 607, 607, 607, 607, 607, 607, 607, 607,
	607, -220, -222, -221, 607, 607, 607, 607, 607, 607,
	607, -189, 461, 2, 74, 28, -355, -357, 538, 242,
	152, 355, -219, -221, 2, -564, -517, 2, -440, -538,
	-442, 595, 596, 588, 502, 67, -321, 333, 575, -454,
	127, 539, 349, -537, -443, -456, 155, 365, 441, -377,
	8, 9, 5, 6, 7, -274, -444, -450, 530, 169,
	339, -314, 608, 10, 604, -561, -221, -455, 37, 208,
	65, -521, -313, -275, -493, 243, -312, -295, -558, -559,
	4, -531, -532, -522, -496, -504, -500, -501, -507, -265,
	-534, 77, 111, 112, 110, 115, 114, 284, 283, 116,
	113, 463, 547, 66, 36, 216, 217, 248, 340, 218,
	75, -560, 142, -533, 240, 241, 478, 51, 402, 179,
	126, 125, 342, 56, 54, 555, -505, 122, 517, 518,
	519, 520, 193, 194, 58, 166, 167, 362, 386, 496,
	527, 529, 206, 270, 43, 106, 189, 238, 220, 247,
	249, 253, 271, 274, 314, 330, 335, 359, 361, 435,
	470, -641, 556, 491, 69, 70, -566, 405, -567, -289,
	-566, 607, 607, 609, 607, -347, -349, -350, 2, 28,
	139, 604, 2, -471, 2, -472, -476, -221, 264, -475,
	604, -473, 602, -296, 350, -562, 442, -558, -559, -274,
	-295, -313, 4, -531, -533, 606, -351, 604, 120, 451,
	505, 78, 232, 165, -407, 604, -265, 28, 349, 521,
	609, -348, 393, -452, 604, 349, 188, 352, 60, 295,
	2, 2, 2, 2, 2, 216, -265, 505, 119, 2,
	262, 2, 2, 2, 2, 2, 2, 2, -370, 216,
	2, -296, 558, -370, 216, 2, -370, 216, 2, -413,
	2, 87, -279, 216, 2, -265, -305, 216, 2, -300,
	-302, -309, 216, 2, -307, -265, -529, 216, 2, -528,
	-524, 10, -523, 5, 4, -531, -535, -532, -534, 77,
	-440, 2, -133, 2, 60, -265, 558, 2, 466, 2,
	604, -145, 2, 71, 525, 43, 461, -146, 2, -427,
	2, -428, -261, -262, -263, -483, -264, 250, 392, 401,
	578, 131, 333, 574, -618, 188, 587, 521, -517, -517,
	-517, -378, 606, 2, 2, 2, 2, 2, 2, -476,
	216, -296, 2, -293, -520, 4, -531, -535, -532, -536,
	28, 31, 32, 33, 35, 37, 38, 39, 40, 57,
	65, 66, 72, 76, 78, 87, 93, 102, 110, 111,
	113, 112, 114, 115, 116, 127, 131, 135, 139, 140,
	144, 148, 152, 169, 171, 184, 187, 188, 204, 207,
	210, 223, 237, 242, 244, 264, 268, 275, 283, 284,
	333, 339, 345, 349, 350, 354, 355, 375, 391, 408,
	431, 456, 463, 481, 499, 505, 515, 521, 523, 530,
	538, 539, 547, 549, 557, 565, 566, 567, 568, -537,
	2, -476, 216, 2, -299, 216, -476, -302, 2, -279,
	2, -292, -520, 2, -318, 216, -296, -298, -302, -300,
	2, 2, 2, 2, -307, 2, -528, 216, 2, 28,
	28, 558, 393, 244, 521, 609, -368, -310, -311, -516,
	8, -361, -265, 606, -440, 2, -133, -117, 2, 184,
	-440, 216, 2, -133, 216, 2, -440, 216, 2, -133,
	216, 2, -604, 2, -528, 216, 216, -265, 2, 295,
	2, 2, 528, 2, 98, 505, 119, 2, 423, -625,
	444, 532, 2, 2, 2, 2, 2, 2, 2, 505,
	-284, 2, -265, 184, 489, -307, 216, -308, 2, 457,
	-636, 405, -528, 216, 2, 558, -300, 216, 2, -300,
	232, 246, -279, 216, 2, 510, 508, 510, 508, 188,
	2, 244, 2, 244, 2, -477, 2, -478, -472, -479,
	602, 350, -487, 2, -486, -523, 554, -106, 604, -106,
	604, 461, 604, -528, -296, -296, -440, 2, -133, -117,
	2, -440, 2, -133, 2, -130, -528, -129, 604, 188,
	-440, 2, -133, -117, 2, -440, 2, -133, 2, -214,
	184, 2, 120, 505, -189, 2, 184, 549, 2, 8,
	2, 223, -528, 452, 400, 176, 2, 466, 2, 467,
	74, -414, 574, 74, 188, 2, 188, 2, -397, 2,
	568, 393, 188, 2, 2, -588, 2, 349, 188, 2,
	188, 2, 188, 2, 188, 2, 188, 2, -188, 462,
	526, 504, 397, 252, 2, -133, 565, -117, 252, 251,
	-440, 565, 2, -610, 184, 450, -440, 2, 524, 261,
	160, 188, -397, 2, 188, 2, 188, 2, 5, 2,
	398, 487, 2, 250, 392, 487, 2, -296, 505, 558,
	457, 120, 28, 2, 449, 2, 2, 88, 89, 188,
	2, 188, 2, 203, 188, 2, 188, 505, 574, 2,
	-389, -476, -426, -427, -426, 521, -355, -357, -189, 466,
	2, -226, -387, -228, 184, -417, -418, -229, 275, 171,
	345, -230, -396, 28, 139, -396, -396, 60, 605, 605,
	11, 12, 76, 41, 595, 596, 597, 598, 182, 599,
	600, 593, 594, 592, 585, 586, 590, 256, 257, 95,
	589, 587, 86, 289, 443, 172, 173, 174, 175, 420,
	230, 34, 231, 14, 15, 16, -321, 33, 354, 274,
	575, 220, 470, 588, 17, 18, 19, 247, 249, 335,
	50, 223, -273, 365, -320, 502, 67, -440, -440, -440,
	-440, -440, -440, -440, -440, 361, 604, -383, -435, 602,
	-221, 604, 604, 604, 604, -516, -221, -440, -454, 605,
	-375, 604, -221, -454, -449, 604, 441, 602, 604, -457,
	-440, 5, 5, 5, 604, 606, -569, 569, 184, 604,
	604, 604, 604, 604, 604, 604, 604, 604, 604, 604,
	604, 604, 604, 604, 604, 388, -498, 604, -497, 604,
	-497, -497, 559, -495, 604, 577, 570, 604, -495, 604,
	604, 604, 604, 604, 604, 604, 604, 604, 604, 604,
	604, 604, 559, 609, -566, -351, 604, -379, -481, -440,
	597, -379, -379, 349, -372, -440, 106, -400, 253, 314,
	189, 271, 435, 238, -437, 608, -437, -465, 577, -221,
	-473, -295, -221, -475, 604, -471, -465, -107, -516, -90,
	-103, -112, -133, -148, -193, -194, 597, -296, 604, 188,
	604, 606, -520, 188, -361, -279, -306, -265, -296, -312,
	-313, -318, 2, 138, -372, -584, 533, 451, 28, 457,
	-361, -268, 38, -451, -490, -491, -540, 608, -539, -493,
	-503, -499, -502, 378, 382, -522, 54, 555, -505, 243,
	4, -531, -533, 240, 241, 478, 51, 402, 179, 126,
	125, 342, 56, 517, 518, 519, 520, 193, 194, 58,
	556, 491, 69, 70, -584, 533, 451, 28, 457, -361,
	184, -361, 2, 2, 155, 2, 2, 2, -265, -242,
	609, 64, 428, 155, -370, 216, -242, 155, -242, 155,
	-319, 216, -318, -242, 155, -242, 609, 155, -242, 609,
	155, 606, 609, 155, -361, 2, -413, -519, -372, 38,
	-427, 2, 127, -525, -523, 5, -639, 609, 273, -324,
	288, 332, 212, 350, 572, 343, 131, -527, 5, 4,
	-450, -462, 127, 281, 243, -510, -512, 8, -511, 9,
	-513, 595, 596, -518, -517, 109, 606, -520, -239, 421,
	464, 364, -238, 24, 29, 143, 234, 317, 552, 161,
	-337, 235, -334, 368, 155, 482, 542, -598, -599, 448,
	512, 513, 90, 343, 464, 364, 421, 155, -393, -395,
	38, 118, 317, 363, 61, 227, 293, 294, 485, 562,
	155, 464, 364, 421, 364, -13, -254, 24, 143, -256,
	-251, 464, -599, 99, 421, 581, 426, 374, 497, 391,
	-599, -241, 482, 542, -598, -599, 448, 421, -240, -339,
	-334, 368, 155, 608, 24, 143, 421, 464, 364, -621,
	-622, 29, 421, 364, -592, -286, -563, 223, 568, 155,
	-286, -286, -476, 216, -614, 184, 2, -607, -129, 265,
	5, 10, -528, -129, -368, 609, 609, -520, 597, 450,
	449, 155, 155, 155, 155, 184, 333, 333, 2, 2,
	2, 2, 2, 190, -601, -626, 2, 2, -296, 216,
	-353, 349, -587, -369, 505, -296, 184, 333, 43, -299,
	216, 2, -302, 558, -592, 333, -301, 216, -296, 38,
	604, 333, 2, -413, 2, 232, -563, 333, -477, -315,
	-296, -472, -315, 464, -289, 38, -437, -296, 605, 609,
	-487, -487, -528, -202, 568, 188, 102, 604, 604, -214,
	568, 568, -484, 609, -483, 223, -529, -130, -528, 424,
	-528, -587, -279, 2, -296, 2, 505, 254, -528, -202,
	223, -528, -528, -528, -519, 28, 467, 2, -188, 462,
	526, 89, 467, 2, -296, 505, 120, 232, 80, -614,
	184, 2, -265, -590, 184, -585, 436, 451, 533, -584,
	-296, 120, -296, 120, -296, 120, -296, -296, 2, 2,
	2, 2, 2, 85, 2, -133, -440, 2, 85, 2,
	46, 483, -610, 184, 2, 524, 2, 524, 2, -265,
	-265, -265, 486, 273, -296, -296, -296, -297, -302, 506,
	450, -440, 2, -628, 2, 188, 184, 2, 505, 232,
	505, 232, 120, 188, 74, 120, 28, 505, 447, -242,
	609, -269, -226, -387, -519, -388, -387, -227, -226, -229,
	184, 401, 543, 317, 468, 258, -418, -417, 28, -440,
	-422, 178, 316, -440, -420, -442, 595, 596, -511, -513,
	-371, 343, -220, -220, -220, -358, -467, -440, 391, 232,
	-492, -490, -490, -294, -520, 517, -440, -440, -440, -440,
	-440, -440, -440, -440, -440, -440, -440, -440, -440, -440,
	-440, -440, -440, -440, -440, -440, -440, -440, -440, -440,
	-440, -440, -440, -440, -440, -440, -440, -440, -440, -440,
	-440, -440, 274, 220, 470, 50, 223, -440, 521, -440,
	-440, -440, -440, 311, 333, 339, 530, 169, 540, 139,
	343, -642, 499, 40, -447, -221, -376, 604, -461, 35,
	481, 28, -454, 604, 2, -435, -440, -436, -322, -320,
	-265, 595, 596, 597, 598, 599, 600, 585, 586, 587,
	14, 15, 16, 590, 594, 592, 593, 182, 95, 589,
	289, 443, 86, 172, 173, 174, 175, 256, 257, 17,
	18, 19, 34, 588, -373, -372, -372, 605, 557, 28,
	139, 597, 2, 605, 609, 38, 605, -440, -373, -453,
	-449, -372, -460, -459, 565, -408, -409, 573, 298, 123,
	214, 296, -410, 455, -514, 8, -520, 597, -570, 177,
	207, 604, 605, 2, 605, 2, 605, -440, 2, 605,
	-440, 2, 605, -440, 2, 605, -440, 2, 605, 2,
	605, 2, -440, -440, -440, -440, -440, -440, -440, -372,
	8, -514, -514, 517, 517, -514, -514, -514, -506, 378,
	379, 380, 381, 276, 277, 278, 279, 382, 383, 384,
	385, 303, 304, 305, 306, 299, 300, 301, 302, 307,
	308, 309, 310, 198, 199, 200, 201, 194, 195, 196,
	197, -506, -402, 2, -508, -372, 4, 573, 298, 123,
	214, 296, 455, 5, -402, 2, -403, 2, -440, -372,
	-404, -441, -442, 595, 596, 588, -321, -454, -405, 2,
	-440, -373, -440, 57, 268, 523, -406, -440, 188, -372,
	-372, 2, -372, 2, -567, 38, -372, -364, 609, 188,
	38, 4, -364, -364, 604, 605, 609, -401, 211, 292,
	287, 246, -401, -471, -400, 253, -398, 359, -398, -398,
	-465, -280, 602, 610, -520, -465, -464, -463, 38, -289,
	356, -465, -465, 606, 605, -464, 603, -582, 604, 607,
	607, 607, 607, 607, -296, 604, -372, -520, 606, 488,
	2, 605, 247, 247, 247, 247, 247, 442, 605, 521,
	-586, -305, -309, 506, 2, 568, -105, 351, 605, 609,
	-363, 37, 602, 606, -514, 2, 2, -509, 559, 604,
	604, -409, 604, 188, -586, -309, 506, 2, -362, 521,
	-265, 2, -296, -370, -242, 155, -370, -370, -242, 609,
	155, -279, -300, -305, -307, -309, -265, -528, -529, -242,
	-301, -618, 605, 525, -428, -323, 401, 480, 422, 459,
	501, 8, 9, 8, 9, 609, -520, 609, -619, 93,
	521, 78, 451, -258, 282, 521, -431, 216, 78, -541,
	-282, 93, -542, -265, 72, 539, 391, 187, 153, -619,
	93, 391, -619, 93, 2, 234, 93, 464, 486, 28,
	60, -476, 41, 41, 28, -617, 331, 269, 564, 188,
	574, 505, 232, 451, 521, 521, -476, -395, -490, 118,
	293, 294, 60, -515, -510, 595, 596, -515, 60, -515,
	-515, -515, 568, -299, -476, 451, 521, 521, 521, 411,
	411, -251, -146, 521, 521, 28, -189, 429, 127, -640,
	587, 411, 609, 41, 41, 28, -617, 331, 269, 188,
	521, -318, -280, 553, 42, 553, 42, 553, 521, 42,
	451, 521, 609, 42, 521, 521, -13, 464, -593, -270,
	105, 323, 286, 324, 97, 320, 96, 319, 103, 321,
	104, 322, 560, 336, 561, 337, 63, 318, 297, 325,
	484, 328, -271, -272, 146, 370, 551, 120, -528, -13,
	-13, 464, 364, 421, 155, -615, 223, 28, -603, 223,
	-484, 223, -484, -310, -265, 606, -133, -440, -440, -133,
	-440, -133, 46, 155, 155, 2, -636, 262, 604, -327,
	333, 188, -361, -485, 244, 609, -369, -584, 155, -526,
	-525, 116, 463, -394, -393, 333, -301, 216, 2, 155,
	-351, 333, 149, 604, 399, 2, 155, -281, 216, -266,
	-265, -413, -245, 509, 155, -391, 549, -423, -133, 604,
	127, 38, -423, -380, -381, -482, -382, -282, 604, -289,
	-437, -106, -486, 605, 605, 605, -201, 353, -200, -265,
	5, -214, 549, -326, -432, -431, -545, -546, -541, 274,
	232, 539, 246, 170, -352, -283, -282, 119, 403, 403,
	-208, 568, -129, -130, 605, -484, 223, 489, -202, -202,
	-484, -484, -296, 184, -528, -202, -202, -202, 2, 2,
	2, 2, -397, -296, -279, -318, -296, 28, 606, -361,
	-361, -309, -305, -397, -279, -397, -279, -397, -279, -133,
	-440, 486, 2, 461, 184, 184, 606, -397, -354, 431,
	2, 399, 120, 505, 368, 232, -296, -318, -296, -318,
	-279, 120, -279, 121, -296, -476, -388, -227, 350, 258,
	468, -420, -421, -442, 441, 442, -421, 441, 442, 8,
	9, 8, 9, -231, 472, 338, -370, 609, -236, 39,
	135, 258, -296, 574, 151, -440, -440, 521, -642, 499,
	-447, 151, -440, 311, 339, 530, 169, 540, 139, 343,
	188, 604, -441, -441, 605, -374, -440, -440, 603, 612,
	605, 606, 605, -357, 609, -355, -440, -372, -372, 605,
	606, -372, -361, 603, 603, 609, 605, -458, -459, 144,
	-440, 521, 521, 521, 521, 604, 605, 606, -575, 360,
	604, 604, -440, 605, 605, 605, 605, 38, 609, 609,
	609, 605, 609, 609, 609, 605, 605, 605, 609, 605,
	574, 574, 605, 605, 605, 605, 609, 605, 609, 605,
	188, 605, 605, -411, 375, 605, 11, 12, 595, 596,
	597, 598, 182, 599, 600, 593, 594, 592, 585, 586,
	587, 86, 289, 443, 14, 15, 16, -321, 247, 223,
	-441, -441, -441, -441, 605, -445, -446, 188, 184, 38,
	-406, -406, -406, 605, 188, -372, 605, 605, 604, -568,
	291, 333, 605, -434, -433, 566, -481, -365, 2, -471,
	-291, -520, -434, -434, -372, -440, 253, 253, -399, 549,
	349, -401, -471, -464, -516, -439, -438, 186, 39, 135,
	326, 327, 329, 219, -464, -289, -351, -464, -464, -520,
	-465, -465, -463, 605, -583, -516, 605, -366, -474, -562,
	-357, 606, -520, -211, -563, -190, 5, 339, -190, -190,
	-190, -190, -361, 521, 521, 223, 25, 376, -490, 602,
	603, 8, -520, 604, -514, -514, -514, -361, 188, 188,
	223, 188, -526, 2, -242, -370, -242, -242, -318, -319,
	-242, -242, -242, -392, 568, -517, -427, 537, 83, 401,
	517, -517, -238, 421, -282, -282, -296, -306, 202, 412,
	-526, 333, -431, 216, -244, 333, -490, -290, -265, 604,
	-415, 570, 258, 258, 549, -282, -290, 258, 216, -282,
	216, -290, 2, -290, -594, 401, 344, -440, 60, -335,
	280, 399, 334, -239, 421, 464, 364, -133, -133, -133,
	-133, -133, 604, -618, 549, 138, -296, -318, -296, -306,
	-526, -301, 464, 364, 421, 330, -312, -515, -515, -393,
	464, 364, 421, -306, -526, -299, -526, -250, 216, -265,
	-250, 216, 451, -279, 411, 574, 45, -640, -240, -133,
	-133, -133, -133, -133, 604, -280, -241, 421, 5, 216,
	-282, 5, -282, 216, 5, -265, -282, -306, -526, -622,
	24, 143, -282, -306, -526, -270, 370, -528, 339, 545,
	-279, -592, -286, 451, 521, 521, -476, -611, -612, 204,
	434, 451, 437, -361, -129, -205, 568, -129, -199, 228,
	597, -589, -528, -265, 558, -265, -325, -328, -326, -282,
	-217, -218, 570, 568, 155, -316, -296, 602, -202, -528,
	-296, -485, -307, -308, 155, -351, 333, -528, 38, 155,
	604, 2, 2, -300, 349, 333, -281, 216, -246, 145,
	-640, -279, -434, -365, -390, -425, 431, 349, -352, 554,
	-289, -390, -367, 609, 188, 587, 606, -352, -480, 597,
	-106, -106, -202, 609, 604, 587, 587, 604, -528, -528,
	605, 609, -244, -296, -281, 232, 232, -288, -266, 605,
	609, 606, 604, 587, 587, -210, 353, -209, 147, 260,
	245, 474, 475, 476, 477, 137, 473, 124, -484, -208,
	-130, 188, 188, -65, 568, 505, -202, 608, 437, -265,
	-397, -397, -397, 461, 461, -265, -361, -292, -279, -296,
	-293, -318, 184, 184, -279, 543, -421, 350, 285, -467,
	-237, 576, -296, 608, -440, -440, 151, 151, -440, -441,
	-441, -440, 151, 188, 604, -440, -451, 33, 33, 605,
	609, -436, -440, -320, 605, 557, -357, -357, 605, 597,
	-520, 608, 605, -449, 148, -440, 515, 298, 214, 296,
	-410, 296, -410, -410, -514, 5, -520, 597, -576, -285,
	604, -265, 566, -356, 355, 605, -492, -490, -440, -440,
	-440, -440, -440, -514, -495, -495, -510, -510, -440, -445,
	-440, -492, -490, -441, -441, -441, -441, -441, -441, -441,
	-441, -441, -441, -441, -441, -441, -441, -441, -441, -441,
	-441, -441, -441, 139, 333, 343, -441, -446, -445, -440,
	-440, -490, 605, 605, 605, -372, -105, 604, 291, -384,
	207, -440, -484, 609, -384, -384, 605, -471, -471, 604,
	-440, 253, 603, 609, 611, 587, -351, 606, -463, -464,
	603, 605, 609, 605, 609, -424, 38, 605, -520, -434,
	-213, -212, 136, 53, 107, 134, 339, -361, -361, 451,
	352, 5, 8, 602, 603, 606, -514, 605, 605, 605,
	-361, -361, 451, -361, -242, -242, 119, 317, -440, 521,
	521, 60, 223, 155, 333, 551, -547, -542, 153, -440,
	604, 232, 604, 604, 2, -233, -234, -235, 143, 464,
	24, -620, 2, 549, 155, -242, 155, -242, 572, -335,
	604, 604, 521, 451, -258, 521, 568, -372, -440, -203,
	127, -519, -599, 608, -599, 608, 451, 521, 521, 451,
	521, 521, 333, 155, 568, 168, 168, 574, -250, 568,
	-372, 521, -494, 48, 26, 333, -300, -242, 155, 521,
	521, 533, 464, -528, -528, 339, -13, -306, -526, -301,
	464, 364, 421, -591, -362, -591, 204, -309, -615, -484,
	-207, 353, -206, 147, 433, 137, 260, 225, -484, -205,
	188, 244, 568, -301, 2, 605, 605, 609, -548, 38,
	347, 347, 604, -296, -86, 568, -483, -516, -595, 568,
	43, -299, 38, 155, -592, -133, -301, -488, -489, 5,
	38, -296, 155, 349, 333, -247, 267, -640, -524, -563,
	-357, -390, -379, 334, 91, 605, -434, -381, -365, -440,
	2, 605, -200, -201, -528, -528, -528, -202, -214, -214,
	-432, -329, 604, -281, -266, 604, -214, -283, 2, -529,
	-528, -528, 609, 604, 587, 587, 587, 587, -208, -484,
	-129, -133, 353, -296, 597, -397, -341, -340, 368, 343,
	-341, 441, 441, 350, 178, 263, -236, -280, -440, -440,
	151, 33, 33, -440, -440, -451, 605, -440, -440, -372,
	603, 5, -440, 605, 605, 8, -440, 605, 606, -577,
	-265, -440, 605, 60, 605, 605, 609, 609, 605, 605,
	605, 605, 605, 605, 605, -446, 188, 139, 343, 604,
	605, 605, -105, -448, 210, 60, -471, -448, -448, -399,
	-361, -471, -438, -280, 602, -520, -516, -474, 604, 606,
	-212, 587, -528, -528, 568, -309, 603, 2, 602, -520,
	605, -309, 119, -282, -282, 505, 441, -250, 391, -431,
	155, -549, 93, -551, 76, 170, 102, 333, 339, 539,
	391, 72, 127, 349, 408, -630, -631, -632, 38, 579,
	580, 605, -359, -468, -562, 604, -265, -359, -361, 333,
	494, 127, 349, 333, 127, 349, 563, 119, 2, 533,
	79, -282, -290, -361, -361, -296, -306, -526, 162, 605,
	609, 587, 2, 597, 597, -306, -526, -301, -306, -526,
	-299, 155, -250, 366, 168, 162, 605, -280, 5, 5,
	155, -277, 76, -282, 5, -282, -300, 119, 451, 521,
	521, 349, 349, 352, -611, -612, -205, 609, 604, 587,
	587, -205, -529, -129, 2, -351, -342, 234, -282, -546,
	-543, -544, 391, -550, -552, 170, 391, -133, 2, -216,
	-215, -265, 5, 604, -327, 353, 603, -597, 353, -596,
	117, 137, -526, -394, -133, -301, -351, 605, 609, 149,
	-416, 549, -280, -296, 155, -248, 266, -640, -524, -245,
	-419, -417, 140, 604, 349, -133, -357, 587, 605, 605,
	119, 119, 226, 154, -359, 604, 604, -361, 119, 605,
	-209, -210, -528, -129, -528, -528, -208, -484, -66, -67,
	232, 93, 373, -293, 505, 232, 604, 604, -236, -440,
	-440, -440, 605, -357, -520, 597, -571, 368, 605, -467,
	-440, -440, -441, 188, 604, -451, 605, -572, 567, -440,
	-385, -386, -440, 439, 108, 208, -572, -572, 605, -516,
	2, -528, 2, 521, 602, 2, 188, 223, 38, 411,
	-431, -290, -294, -287, -265, 170, 216, 339, 563, -415,
	258, 604, -441, 543, -296, 604, 2, 215, 215, 30,
	60, -633, 131, 237, 605, 609, -469, -276, -265, -440,
	-469, 605, 605, 339, 543, 339, 563, -440, 543, -490,
	604, -242, -242, 605, 605, -440, 521, -519, 100, -517,
	2, -599, -250, -279, -440, 521, 5, -242, -294, -242,
	-242, -277, 533, -306, -526, -301, -616, 506, 458, 534,
	452, 191, 440, -616, 184, -206, -207, -528, -129, -205,
	38, -332, 236, 2, -548, 258, -287, 258, -629, 568,
	605, 609, 587, 587, -325, -217, -87, -88, 522, -483,
	609, 604, 587, -351, 38, 5, 604, 604, -265, 349,
	604, -280, -260, 92, -640, -524, -246, -390, 334, -361,
	93, -419, -447, -202, 604, 604, -330, 81, 94, 128,
	215, 192, 233, 486, 492, 28, -330, 605, -359, -359,
	605, 604, -202, 605, 609, 28, 604, 28, 604, -296,
	-318, -372, -372, 605, -357, 60, 609, 605, 605, -441,
	-451, 605, -573, -574, -285, 609, 604, 604, 465, 603,
	-361, 2, -361, -250, 391, -265, -551, -287, 333, 549,
	-440, -441, -267, 604, -440, 604, 604, 38, 127, 237,
	132, 221, -430, -634, 101, 495, 224, -468, -236, 605,
	-429, 549, 408, -441, -277, -359, 604, 604, 604, 587,
	188, 604, -494, -242, -300, 521, 2, 2, 188, -591,
	605, -605, 406, -133, -336, -337, 223, 604, -331, 349,
	119, 317, -215, -517, -517, 605, 38, -88, 9, -596,
	-597, -440, 38, -133, -488, -359, -296, -359, 349, -252,
	-251, 275, -524, -247, 605, -290, -390, -529, -529, -429,
	605, 605, -529, -67, -361, -361, 605, 605, -578, 399,
	442, 209, -372, -358, 605, 609, 38, -386, 2, 2,
	2, 411, 155, 211, 605, -553, 290, -265, 605, -394,
	-394, 38, 132, 221, -332, 604, -237, -469, -332, 211,
	-296, -600, 549, 605, -344, -343, -340, -346, -345, -340,
	-372, -517, 100, 366, -372, -277, -361, -361, 349, -608,
	189, -607, 5, 10, -217, 366, -360, -470, -282, 82,
	119, -342, -133, 605, -133, 605, 605, -416, 605, -296,
	-249, -530, 411, 413, -640, -248, -434, 605, 605, -430,
	-429, -338, -334, 605, 605, 605, 605, -579, -580, 50,
	536, 109, -440, -579, -579, -574, -576, 170, 568, -554,
	-557, -556, 584, 471, 189, 367, 605, 494, 562, 605,
	605, -338, -361, 568, -351, -440, -429, 605, 609, 554,
	605, 609, 554, 605, 188, 605, -242, -613, 568, -242,
	-616, -204, 568, 46, -331, -296, 605, 609, 390, 133,
	143, -332, -629, -429, 604, -430, 604, -257, -256, -640,
	-510, -260, 140, -202, -202, -332, -430, -218, 568, -202,
	-581, 153, -580, 387, 183, 441, 387, 183, -581, -581,
	-287, 55, -556, 584, -557, 584, 543, 133, -633, 605,
	55, -553, -332, -343, 223, -345, 188, 366, 204, 188,
	449, -607, 30, -259, -258, 604, -470, 442, 442, 2,
	-336, -331, -430, -359, -332, -359, -253, -254, -255, -361,
	-252, 334, 543, -338, -332, -434, 109, 207, 516, 317,
	33, 587, -555, 317, 428, 64, 464, -555, -434, 587,
	-554, 604, 604, 352, -361, 353, -361, 2, -217, -332,
	605, -338, 605, -249, 464, -218, -338, 441, 357, -580,
	-440, 23, 339, 127, -440, -633, -372, -372, -242, -201,
	604, 605, -331, -338, -429, -218, -430, -257, -380, -434,
	-218, 605, 605, -201, -243, 64, 428, -259, -218, -430,
	-434, -332, -253, -434, -434, -333, -334, 521, 605, -434,
	-332, -338, 604, -338, -218, -372, -218, -434, 605, -434,
	-333,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 553, 554, 556, 557, 558, 560,
	561, 563, 565, 567, 568, 569, 571, 572, 574, 575,
	576, 577, 578, 580, 582, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	649, 651, 0, 1415, 1417, 1419, 1421, 0, 804, 0,
	36, 37, 39, 0, -2, 337, 339, 341, 0, 369,
	371, 372, 374, 376, 377, 378, 380, -2, 0, 486,
	487, 489, 491, -2, 0, 1013, 1015, 0, 638, 640,
	0, 1018, 1020, 0, 0, 661, 662, 0, 1526, -2,
	653, 655, 657, 659, 729, 731, 733, 735, 737, 739,
	741, 743, 745, 747, 748, 750, 752, 754, 756, 758,
	759, 761, 763, 765, 766, 768, 769, 771, 773, 775,
	777, 779, 781, 783, 785, 787, 789, 791, 793, 795,
	-2, 798, 799, 800, -2, -2, 0, -2, -2, -2,
	1433, 41, 43, 45, 47, 49, 51, 53, 55, 57,
	59, 430, 432, 434, 436, 438, 441, 443, 445, 1584,
	493, 495, 497, 499, 501, 503, 505, 0, -2, 1598,
	0, 0, 61, 62, 63, 64, 65, 66, 67, 68,
	69, 70, 71, 109, 110, 111, 112, 113, 114, 115,
	116, 75, 76, 77, 79, 80, 81, 82, 86, 87,
	88, 89, 90, 91, 92, 93, 94, 95, 107, 73,
	0, 0, 1557, 1559, 1561, 1563, -2, 0, 0, 5,
	9, 11, 13, 15, 17, 19, 21, 23, 25, 27,
	29, 555, 559, 562, 564, 566, 570, 573, 579, 581,
	583, 538, 539, 542, 2293, 2311, 2312, 2313, 2316, 2317,
	2318, 2319, 2320, 2321, 2781, 2862, 2863, 2343, 2344, 2345,
	2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355,
	2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365,
	2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375,
	2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385,
	2386, 2387, 2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395,
	2396, 2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405,
	2406, 2407, 2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415,
	2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425,
	2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435,
	2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445,
	2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455,
	2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465,
	2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473, 2474, 2475,
	2476, 2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485,
	2486, 2487, 2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495,
	2496, 2497, 2498, 2499, 2500, 2501, 2502, 2503, 2504, 2505,
	2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515,
	2516, 2517, 2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525,
	2526, 2527, 2528, 2529, 2530, 2531, 2532, 2533, 2534, 2535,
	2536, 2537, 2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545,
	2546, 2547, 2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555,
	2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565,
	2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575,
	2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585,
	2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595,
	2596, 2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605,
	2606, 2607, 2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615,
	2616, 2617, 2618, 2619, 2620, 2621, 2622, 2623, 2624, 2625,
	2626, 2627, 2628, 2629, 2630, 2631, 2632, 2633, 2634, 2635,
	2636, 2637, 2638, 2639, 2640, 2641, 2642, 2643, 2644, 2645,
	2646, 2647, 2648, 2649, 2650, 2651, 2652, 2653, 2654, 2655,
	2656, 2657, 2658, 2659, 2660, 2661, 2662, 2663, 2664, 2665,
	2666, 2667, 2668, 2669, 2670, 2671, 2672, 2673, 2674, 2675,
	2676, 2677, 2678, 2679, 2680, 2681, 2682, 2683, 2684, 2685,
	2686, 2687, 2688, 2689, 2690, 2691, 2692, 2693, 2694, 2695,
	2696, 2697, 2698, 2699, 2700, 2701, 2702, 2703, 2704, 2705,
	2706, 2707, 2708, 2709, 2710, 2711, 2712, 2713, 2714, 2715,
	2716, 2717, 2718, 2719, 2720, 2721, 2722, 2723, 2724, 2725,
	2726, 2727, 2728, 2729, 2730, 2731, 2732, 2733, 2734, 2735,
	2736, 2737, 2738, 2739, 2740, 2741, 2742, 2743, 2744, 2745,
	2746, 2747, 2748, 2749, 2750, 2751, 2752, 2753, 2754, 2755,
	2756, 2757, 2758, 2759, 2760, 540, 541, 1199, 0, 607,
	605, 2278, 608, 2576, 610, 612, 480, 481, 482, 483,
	484, 485, 0, 631, 621, 1596, 632, 634, 635, 636,
	637, 602, 600, 0, 631, 2347, 629, 1413, 1414, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 492, 0, 0,
	0, 0, -2, 0, 0, 0, 0, 0, 0, 0,
	409, 1258, 1259, 1260, 1398, 1399, 2623, 1440, 0, 234,
	650, -2, -2, 2746, -2, 684, 685, -2, -2, 699,
	702, 694, 2750, 0, 2626, 2610, -2, 705, 1416, 1418,
	1420, 802, 803, 2297, 0, 0, 0, 0, 0, 38,
	40, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	244, -2, -2, -2, -2, 0, 0, 2672, 2399, 2246,
	2313, 2249, 2244, 338, 340, 342, 343, 0, 0, 0,
	0, 0, 0, 370, 373, 375, 379, -2, 381, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 408,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, -2, -2, 0, 0, 0, 0, 0, 0, 0,
	0, 1076, 1068, 1069, 1320, 0, 0, 0, -2, 488,
	490, 543, 544, 0, 1585, 1585, 551, 552, -2, 0,
	0, 0, 0, 308, 296, 1014, 1016, 1017, 0, 0,
	0, 0, 639, 641, 0, 0, 276, 1019, 1021, 1022,
	0, 0, 0, 0, 0, 310, 0, 0, 654, 656,
	658, 660, 730, 732, 734, 736, 738, 740, 742, 744,
	746, 749, 751, 753, 755, 757, 760, 762, 764, 767,
	770, 772, 774, 776, 778, 780, 782, 784, 786, 788,
	790, 792, 794, 796, 797, 810, 0, 0, 0, 0,
	0, -2, -2, 0, 0, 0, -2, 0, -2, -2,
	-2, 0, 0, 0, 0, 0, 0, 0, -2, 0,
	0, 909, 0, 0, 0, -2, -2, -2, 0, 0,
	0, 0, 0, -2, -2, 0, 0, 0, 0, -2,
	994, 0, 0, 813, 815, 816, 817, 818, 819, 820,
	0, 882, 907, 908, 918, 801, 0, 1239, 1586, 1442,
	1423, 1437, 1442, 1425, 1426, 1427, 1428, 1429, 1434, 1436,
	1430, 1431, 1432, 42, 44, 46, 48, 50, 52, 54,
	56, 58, 60, 431, 433, 435, 437, 439, 442, 444,
	446, -2, 1555, 1556, 494, 496, 498, 500, 502, 504,
	506, 642, 0, 644, 0, 814, -2, 0, 1590, 1590,
	1590, 0, 0, 1556, 1554, 0, 647, 648, 709, 710,
	1860, 0, 0, 0, 0, 0, 0, 0, 0, 2120,
	1948, 0, 711, -2, 1981, 1983, 2721, 2549, 2746, 2119,
	1985, 1986, 1987, 1988, 1989, 0, 1991, 1992, 1993, 1994,
	1995, 1996, 0, 1998, 0, 2003, 2004, 2005, 0, 2728,
	2223, 2307, -2, 0, 0, 2734, 2303, 0, 2086, 2021,
	-2, -2, 2330, 2309, 1792, 1793, 1794, 1795, 1796, -2,
	-2, 2764, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032,
	2033, 2034, 2035, 0, 2709, 2729, 2730, 2735, 2737, 2731,
	2718, 2046, 2413, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, 1819, 1828, -2, -2,
	-2, -2, -2, -2, -2, 2722, 2723, 2740, 2743, 2749,
	2754, 2755, 2727, 2736, 2763, 2765, 2766, 2767, 2768, 2769,
	2770, 2771, 2772, 2773, 2774, 2775, 2776, 2777, 2778, 2779,
	2780, 1820, -2, -2, -2, -2, 1573, 2590, 1576, 1199,
	1574, 1558, 1560, 0, 1562, 0, 0, 0, 1567, 1593,
	1591, 0, 1642, 1571, 1572, 1662, 1662, 1686, 0, 1667,
	0, 1686, 1585, 1713, 0, 1673, 2615, 2022, 2023, 0,
	2313, 2308, -2, -2, 2761, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 603, 0, 609, 611, 0, 0,
	0, 630, 1595, 0, 0, 0, 0, 0, 0, 0,
	412, 413, 414, 415, 416, 2729, 0, 0, 0, 421,
	0, 423, 424, 425, 426, 427, 428, 429, 205, 2729,
	511, 536, 0, 205, 2729, 514, 205, 2729, 517, 0,
	520, 1318, 205, 2729, 523, 2274, 205, 2729, 526, 528,
	2282, 205, 2729, 532, 2289, 2287, 533, 2729, 535, 313,
	311, 312, 2326, 2327, 2334, 2335, 2336, 2337, 2762, 2764,
	1409, 1410, 1411, 1412, 0, 1439, 1319, 652, 0, 678,
	0, 682, 683, 2717, -2, 0, 2635, 687, 688, -2,
	690, 1443, 1447, 1448, 1449, 1450, 1451, 0, 0, 0,
	0, 1456, 0, 0, 0, 0, 679, 680, 697, 698,
	703, 706, 0, 805, 806, 807, 808, 809, 72, 0,
	2729, 1713, 74, 0, 2268, 2338, 2339, 2340, 2341, 2342,
	2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791,
	2792, 2793, 2794, 2795, 2796, 2797, 2798, 2799, 2800, 2801,
	2802, 2803, 2804, 2805, 2806, 2807, 2808, 2809, 2810, 2811,
	2812, 2813, 2814, 2815, 2816, 2817, 2818, 2819, 2820, 2821,
	2822, 2823, 2824, 2825, 2826, 2827, 2828, 2829, 2830, 2831,
	2832, 2833, 2834, 2835, 2836, 2837, 2838, 2839, 2840, 2841,
	2842, 2843, 2844, 2845, 2846, 2847, 2848, 2849, 2850, 2851,
	2852, 2853, 2854, 2855, 2856, 2857, 2858, 2859, 2860, 2861,
	78, 0, 2729, 83, 0, 2729, 0, -2, 96, 0,
	108, 0, 2271, 117, 0, 2729, 0, 2243, -2, 0,
	217, 297, 298, 299, 0, 1043, -2, 2729, 1252, 1254,
	1254, 0, -2, 0, 0, 0, 1004, 2240, 2245, 1005,
	2264, 1006, 2250, 0, 344, 345, 346, 347, 348, 0,
	349, 2729, 351, 352, 0, 354, 355, 2729, 357, 358,
	0, 360, 0, 256, 262, 2729, 2729, 383, 385, 0,
	387, 388, 0, 390, 0, 0, 0, 394, -2, 410,
	0, 407, 397, 398, 400, 401, 402, 403, 404, 0,
	450, 448, 2279, 0, 0, -2, 2729, 0, 1040, 0,
	0, 1298, -2, 2729, 1245, 0, 1305, 2729, 1301, 0,
	-2, 0, 1583, 2729, 1460, 1072, 1073, 1074, 1075, 1725,
	477, 0, 1491, 0, 1493, 0, 1512, 1719, 1662, 0,
	0, 1724, 0, -2, 596, 2296, -2, 546, 0, 547,
	0, -2, 0, 325, 0, 0, 1023, 1025, 1026, 1028,
	1029, 1032, 1033, 1034, 1035, 1699, 277, 279, 0, 0,
	1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 0,
	0, 663, 0, 0, 811, 812, 0, 0, 825, 826,
	827, 0, 325, 2627, 2585, 2435, 834, 0, 837, 840,
	-2, 0, 0, 0, 0, 844, 0, 849, 850, 851,
	0, -2, 0, 858, 860, 1012, 862, 0, 0, 864,
	0, 868, 0, 871, 0, 873, 0, 875, -2, -2,
	-2, 883, 884, -2, 889, -2, 0, 893, -2, 0,
	896, 0, 899, -2, 0, 909, 905, 906, 0, 0,
	0, 0, 926, 927, 0, 936, 0, 939, 940, 941,
	0, 945, 946, 0, 948, 949, 950, 951, 0, 2699,
	2632, 2399, 0, 957, -2, 963, 965, 0, -2, 0,
	981, 0, 985, 0, 0, 993, 0, 0, 821, 822,
	205, 1717, 1422, -2, 1424, 0, -2, 0, 643, 0,
	646, 1615, 1541, 1538, 0, 1612, 1613, 1542, 0, 0,
	0, 1549, 0, 1588, 1589, 0, 0, 0, 1528, 1529,
	0, 0, 0, 0, 2125, 2126, 2127, 2128, 2141, 2129,
	2130, 2140, 2138, 2139, 2131, 2132, 2137, 2151, 2152, 2142,
	2143, 2133, 2146, 2144, 2145, 2147, 2148, 2149, 2150, 0,
	0, 2156, 0, 2134, 2135, 2136, 2164, 0, 0, 2165,
	0, 2167, 0, 2157, 2153, 2154, 2155, 0, 1927, 1929,
	2231, 0, 0, 0, 2163, 2158, 2159, 1865, 1866, 1867,
	1868, 1869, 1902, 1906, 1907, 0, 0, 1982, 2228, 2227,
	1984, 0, 0, 2179, 0, 1997, -2, 0, 2120, 2174,
	0, 0, 2006, 2007, 2008, 0, 0, 2179, 0, 0,
	2222, 2018, 2019, 1857, 0, 0, 2088, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1806, 1805, 0, 1807, 0,
	1808, 1809, 1816, 1829, 0, 0, 0, 0, 1833, 0,
	0, 0, 0, 0, 0, 0, 2203, -2, 0, 0,
	0, 0, 1821, 0, 1575, 0, 0, 1646, 2232, 2236,
	2237, 1646, 1646, 0, 0, 2180, 1710, 1710, 0, 0,
	1705, 1705, 1705, 1703, 1686, 0, 1686, 1696, 0, 1686,
	1686, 0, -2, 1667, 0, 0, 1696, 0, 1680, 584,
	586, 588, 590, 591, 592, 594, 1714, 1715, 0, 0,
	0, 0, 2314, 0, 0, 0, 0, 2286, 0, 0,
	2299, 0, 366, 0, 0, 0, 2682, 2626, 0, -2,
	614, 633, 1585, 0, 2182, 1740, 1744, 0, 1746, 1747,
	1748, 1749, 1750, 0, 0, 1741, -2, 1817, 1819, 1840,
	2331, 2332, 2333, 1800, 1801, 1802, 1803, 1804, 1812, 1799,
	1799, 1799, 1810, 1839, 1831, 1839, 1835, 1785, 1786, 1787,
	1822, 1823, 1824, 1825, 0, 2682, 2626, 0, -2, 623,
	0, 0, 1523, 411, 0, 418, 419, 420, 0, 507,
	0, 203, 204, 0, 205, 2729, 512, 0, 515, 0,
	205, 2729, 2238, 521, 0, 524, 0, 0, 530, 0,
	0, 0, 0, 0, 205, 1525, 0, 0, 0, 0,
	-2, 692, 700, 701, 224, 225, 0, 1445, 0, 1452,
	720, 721, 722, 1454, 1455, 0, 1457, 695, 723, 724,
	725, 726, 727, 728, 0, 2252, 2253, 2254, 2255, 2258,
	2259, 0, 0, 693, 713, 696, 0, 707, 118, 1395,
	0, 0, 161, 0, 1395, 1395, 0, 0, 0, 0,
	188, 0, 1111, 0, 0, 0, 0, 133, 146, 157,
	130, 131, 0, 0, 0, 0, 0, 0, 84, 1221,
	0, 1224, 0, 0, 0, 0, 0, 0, 0, 1237,
	0, 0, 0, 0, 0, 98, 99, 0, 0, 104,
	105, 0, 145, 0, 0, 0, 0, 0, 1488, 0,
	140, 120, 0, 0, 133, 147, 159, 0, 192, 194,
	1108, 0, 0, 0, 0, 0, 0, 0, 0, 216,
	226, 0, 0, 0, 1246, 0, 0, 0, 1582, 0,
	0, 0, 0, 2729, 1393, 0, 1378, 0, 1699, 2484,
	-2, -2, 277, 1699, 1003, 0, 0, 2314, 2248, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 386, 389,
	391, 392, 393, 0, 1297, 0, 399, 440, 1170, 2729,
	0, 0, 467, 462, 0, 464, 0, 0, 0, 1220,
	2729, 1218, 2283, 0, 1243, 0, 1199, 2729, 2281, 0,
	0, 0, 1306, 2323, 1315, 1319, 1478, 0, 479, 0,
	1494, 1496, 0, 0, 1720, 0, 1722, 1662, 1585, 0,
	0, 0, 0, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 283, 0, 1698, 0, 0, 1699, 277, 2601,
	325, 325, 1699, 665, 1699, 667, 0, 0, 828, 829,
	0, 325, 325, 325, 835, 836, 838, 839, -2, -2,
	-2, -2, 841, 842, 933, 0, 0, 0, 932, 852,
	0, 854, 857, 861, 0, 997, 2610, 2626, 2682, 1010,
	933, 2399, 933, 2399, 933, 2399, 872, 874, 877, 921,
	929, 888, 895, 0, 890, 894, 897, 900, 0, 902,
	910, 0, -2, 0, 913, 0, 915, 0, 917, 933,
	934, 937, 944, 947, 952, 953, 954, 955, 2294, 956,
	-2, 960, 961, 0, 972, 977, 978, 974, 0, 0,
	0, 0, 0, 0, 988, 989, 0, 0, 996, 1238,
	0, 1435, 1615, 1541, 645, 1532, 1614, 1533, 1540, 1543,
	0, 0, 1545, 0, 1547, 0, 1610, 1611, 1618, 1619,
	0, 1629, 1630, 1622, 0, -2, 0, 0, 1625, 1626,
	1551, 0, 1568, 1569, 1570, 1599, 1602, 1334, 0, 2862,
	1861, 1735, 1862, 1863, 2267, 0, 1870, 1871, 1872, 1873,
	1874, 1875, 1876, 1877, 1878, 1879, -2, -2, -2, -2,
	-2, -2, -2, -2, 1888, 1889, 1890, 1891, 1892, 1893,
	1894, 1895, 1896, 1897, 1898, -2, -2, -2, 1903, 1904,
	1905, -2, 2166, 2168, 0, 2231, 0, -2, 0, -2,
	-2, -2, -2, 1924, 0, 1926, 1931, 1933, 1935, 0,
	0, 0, 0, 2230, 1945, 2214, 2215, 0, 0, 2122,
	2123, 2124, 1930, 0, 1949, 2229, 2226, 0, 0, 2160,
	0, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133,
	2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143,
	2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153,
	2154, 2155, 2156, 2157, 0, 2178, 1598, 2010, 0, 0,
	0, 0, 2017, 2002, 2176, 0, 2175, 0, 0, 0,
	2186, 0, 2221, 2217, 0, 2265, 1856, 1843, 1844, 1845,
	1846, 1847, 1848, 1858, 0, 2262, 2300, 2306, 2096, 0,
	0, 0, 2047, 2048, 2049, 2050, 2051, 0, 2053, 2054,
	0, 2056, 2057, 0, 2059, 2060, 0, 2062, 2063, 2064,
	2065, 2066, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1753,
	1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763,
	1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773,
	1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783,
	1784, 0, 0, 2068, 0, 2189, -2, -2, -2, -2,
	-2, -2, -2, -2, 0, 2070, 0, 2072, 2180, 2200,
	0, 0, 1950, 0, 0, 0, 0, 2120, 0, 2075,
	2180, 2208, 0, 0, 0, 0, 0, 2180, 0, 2213,
	0, 2082, 0, 2084, 1577, 0, 0, 1730, 0, 0,
	0, 2235, 1730, 1730, 0, 1641, 0, 0, 1706, 1707,
	1708, 1709, 0, 0, 1710, 0, 1700, 1704, 1701, 1702,
	1696, 1659, 0, 0, 2269, 1696, 1665, 1695, 0, 1199,
	1685, 1696, 1696, 0, -2, 1669, 1686, 0, 0, 585,
	587, 589, 593, 595, 0, 0, 1598, -2, 0, -2,
	327, 1198, 0, 0, 0, 0, 0, 604, 606, 0,
	0, 527, 0, 0, 620, 0, 598, 0, 601, 0,
	1731, 1734, 0, 0, 1745, 1751, 1752, 0, -2, 0,
	0, 1841, 0, 0, 0, 0, 0, 628, 0, 0,
	0, 422, 537, 205, 509, 0, 205, 205, 518, 0,
	0, 205, 529, 205, 2290, 205, 2288, 314, 534, 1524,
	237, 0, 681, 0, 1444, 1453, 0, 717, 0, 719,
	0, 2256, 2260, 2257, 2261, 0, 708, 0, 0, 0,
	0, 1394, 0, 1341, 0, 0, 165, 2729, 0, 207,
	0, 0, 1163, 2275, 0, 1153, 0, 0, 2421, 0,
	0, 0, 0, 0, 181, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 127, 0, 0, 0, 132, 0,
	0, 0, 0, 0, 0, 0, 0, 1222, 1223, 1225,
	1232, 1234, 0, 1228, 2263, 0, 0, 1229, 0, 1231,
	1233, 1235, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 106, 1255, 0, 0, 1256, 1257, 1466, 1467, 0,
	1487, 1488, 0, 0, 0, 129, 0, 0, 0, 0,
	0, 0, 2242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1248, 0, 1293, 1291,
	1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276,
	1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286,
	1287, 1288, 1289, 1290, 0, 0, 0, 0, -2, 1250,
	1251, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 0, 316, 2241, 2251, 0, 1030, 1031, 350, 353,
	356, 359, 243, 0, 0, 395, 0, 0, 1078, 1053,
	0, 0, 449, 325, 0, 0, 463, 467, 2292, 1038,
	221, 222, 223, 1216, 1219, 0, 1199, 2729, 1266, 0,
	0, 0, 0, 0, 0, 1304, 0, 0, 2729, 2270,
	2322, 2323, 1480, 1488, 0, 1730, 0, 1510, 1497, 0,
	0, 0, 1510, 1514, 1515, 1517, 1518, 0, 0, 1721,
	1727, 545, 597, 1585, 1585, 325, 323, 2552, 321, 318,
	320, 0, 0, 0, 1079, 1081, 1082, 1083, 207, 0,
	2323, 1153, 2473, 2323, 0, 1500, 1502, 0, 0, 0,
	271, 0, 280, 1699, 278, 283, 0, 0, 0, 461,
	664, 669, 823, 0, 325, 831, 832, 833, 879, 923,
	931, 976, 843, 845, 846, 847, 0, 0, 0, 1011,
	1007, 1008, 1009, 863, 933, 866, 933, 869, 933, 892,
	898, 911, 904, 912, 0, 0, 0, 925, 942, 0,
	959, 0, 0, 0, 0, 0, 0, 0, 982, 983,
	984, 986, 991, 990, 995, 1718, 1536, 1537, 1539, 0,
	1548, 0, 0, 1624, -2, -2, 1623, 1627, 1628, -2,
	-2, -2, -2, 1544, 0, 1553, 1550, 0, 1609, 1332,
	1333, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	1946, 0, -2, 1925, 1928, 1932, 1934, 1936, 0, 0,
	0, 0, 0, 0, 2169, 0, 2171, 1947, 2224, 2227,
	2162, 0, 2118, 0, 0, 1597, 1598, 1598, 0, 2016,
	0, 2177, 0, 2184, 2185, 0, 2009, 0, 2218, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2020, 0,
	0, 0, 0, 2052, 2055, 2058, 2061, 0, 0, 0,
	0, 2041, 0, 0, 0, 2045, 1811, 1797, 0, 1839,
	1837, 1838, 1832, 1839, 1836, 1789, 0, 1788, 0, 2067,
	0, 2069, 2071, 0, 0, 2073, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1953, 1954, 1955, 1975, 2074, 2206, 2207, 0, 0, 0,
	0, 0, 0, 2080, 0, 2212, 2081, 2083, 1585, 0,
	1578, 0, 1643, 1632, 1729, 0, 2233, 1699, 1645, 1647,
	2234, 2272, 1632, 1632, 0, 2181, 0, 0, 1690, 0,
	0, 0, 1692, 1663, 0, 0, 1657, 0, 1651, 1652,
	1653, 1654, 1655, 1656, 1664, 1199, 1694, 1666, 1670, 2300,
	0, 1696, 0, 1681, 0, 1683, 1716, 0, 1675, 1678,
	0, 0, 2315, 1730, 0, 361, 367, 368, 362, 363,
	364, 365, 613, 0, 0, 0, 0, 0, 2183, 0,
	1736, 0, 1742, 0, 0, 0, 0, 622, 0, 0,
	0, 0, 1522, 417, 508, 205, 513, 516, 2239, 205,
	522, 525, 531, 233, 0, 677, -2, 715, 716, 718,
	0, 714, 162, 1395, 0, 0, 1337, 1339, 1343, 1349,
	1352, 0, 167, 2729, 179, 0, 1127, 0, 2273, 0,
	0, 0, 0, 0, 0, 1397, 0, 0, 2729, 205,
	2729, 205, 182, 184, 187, 0, 191, 189, 0, 1115,
	0, 0, 1118, 119, 1395, 0, 0, 122, 126, 134,
	135, 138, 0, 0, 0, 144, 0, 0, 0, 1354,
	1358, 1366, 0, 0, 0, 1226, 1227, 1230, 1236, 85,
	0, 0, 0, 1362, 1364, 1370, 97, 100, 2729, 2284,
	102, 2729, 0, 1336, 0, 0, 0, 0, 193, 124,
	128, 136, 137, 139, 0, 1372, 121, 0, 220, 0,
	0, 210, 205, 2729, 0, 212, 0, 213, 214, 227,
	0, 0, 0, 1041, 1042, 1292, 0, 1241, 1242, 0,
	1253, 1247, 0, 0, 0, 0, 0, 1374, 1375, 0,
	0, 0, 1393, 1390, 1699, 239, 0, 1699, 247, 0,
	2247, 0, 263, 382, 0, 0, 0, 0, 1077, 1181,
	0, 1048, 0, 0, 0, 455, 451, 0, 460, 466,
	465, 471, -2, 0, 0, 0, 0, -2, 0, 0,
	1308, 1302, 1303, 0, 0, 0, 0, 2729, 1482, 1488,
	0, 1583, 1598, 478, 1489, 1510, 0, 0, 0, 1499,
	1495, 1492, 1730, 0, 0, 0, 0, 0, 1723, 1726,
	548, 549, 300, 0, 0, 0, 0, 0, 325, 0,
	0, 0, 1084, 1088, 0, 2323, 2323, 0, 2277, 0,
	0, 0, 0, 0, 0, 281, 0, 284, 0, 0,
	0, 289, 290, 291, 292, 293, 294, 0, 283, 273,
	1699, 0, 0, 666, 0, 0, 830, 0, 853, 856,
	865, 867, 870, 914, 916, 933, 943, 966, 967, 1105,
	0, 1105, 0, 0, 987, 1546, 0, 1621, 1552, 1603,
	1604, 0, 1334, 0, 1864, 1909, 0, 0, -2, 0,
	0, 1913, 0, 0, 0, -2, 0, 0, 0, 2170,
	2172, 0, 2226, 2161, 2011, 0, 0, 0, 2015, 1999,
	2000, 0, 2121, 2187, 2216, 2220, 0, 1849, 1850, 1851,
	1852, 1853, 1854, 1855, 0, 2266, 2301, 2305, 2094, 2095,
	2099, 2280, 0, 0, 0, 2024, 0, 0, 0, 0,
	0, 0, 0, 0, 1830, 1834, 0, 0, 2188, 2199,
	2201, 1951, 1952, 1956, 1957, 1958, 1959, 1960, 1961, 1962,
	1963, 1964, 1965, -2, -2, -2, 1969, 1970, 1971, -2,
	-2, -2, 1976, 0, 0, 0, 2202, 2204, 2205, 2209,
	2210, 0, 2077, 2078, 2079, 2211, 0, 1585, 1579, 1640,
	0, 1728, 1644, 0, 1640, 1640, 1592, 1688, 0, 0,
	1712, 0, 1660, 0, 1661, 0, 1693, 0, 1668, 1671,
	1672, 1682, 0, 1674, 0, 1677, 0, 2011, -2, 326,
	328, 330, 0, 333, 334, 0, 0, 616, 617, 0,
	615, 599, 0, 0, 1738, 0, 0, 1814, 1818, 1842,
	625, 626, 0, 624, 510, 519, 235, 0, 1697, 0,
	0, 0, 0, 0, 0, 206, 1125, 1162, 0, 0,
	0, 1152, 0, 0, 1168, 169, 170, 171, 0, 0,
	0, 0, 180, 0, 0, 177, 0, 186, 190, 1112,
	0, 0, 0, 0, 1342, 0, 0, 0, 141, 142,
	143, 0, 148, 0, 149, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1472, 1473, 0, 1463, 0,
	0, 0, 208, 0, 0, 0, 1331, 229, 0, 0,
	0, 0, 0, 1240, 1295, 1296, 1249, 1355, 1359, 1367,
	0, 0, 0, 0, 631, 0, 636, 1392, 0, 247,
	245, 0, 248, 0, 251, 252, 0, 254, 247, 241,
	0, 0, 0, 1199, 396, 1051, 1169, 0, 1171, 0,
	1049, 0, 0, 1170, 447, 0, 454, 0, 468, 0,
	0, 1220, 0, 0, 1244, 1264, 1199, 0, 1307, 1309,
	0, 1317, 0, 0, 0, 1484, 1488, 0, 1477, 1478,
	1617, 1490, 1508, -2, 0, 0, 1598, 1516, 1513, 1519,
	1520, 0, 322, 0, 317, 319, 0, 303, 0, 0,
	1080, 1085, 0, 0, 0, 0, 0, 1501, 1503, 0,
	1024, 1027, 0, 0, 0, 0, 0, 0, 272, 283,
	1699, 309, 0, 824, 848, 924, 968, 1104, 0, 0,
	970, 0, 0, 1620, 1607, 1608, 1605, 1334, 1911, 1915,
	0, 0, 0, 1917, -2, 0, 1939, -2, -2, 2173,
	2225, 1990, 1598, 2012, 2014, 2001, 2219, 1859, 0, 2101,
	2098, 0, 2085, 0, 2036, 2037, 0, 0, 2040, 2042,
	2043, 2044, 1798, 1791, 1790, 2198, 0, 0, 0, 0,
	2076, 1580, 0, 2090, 0, 0, 1648, 2090, 2090, 1689,
	0, 1691, 1658, 1649, 0, 2301, 1684, 1676, 0, 0,
	331, 0, 335, 336, 0, 0, 1732, 1737, 0, 1743,
	1813, 0, 236, 163, 164, 1346, 1350, 1347, 0, 166,
	0, 1126, 0, 1129, 0, 0, 0, 0, 1136, 1153,
	0, 0, 0, 0, 0, 0, 1155, 0, 1154, 0,
	0, 1185, 0, 1322, 1329, 0, -2, 0, 0, 0,
	173, 196, 0, 0, 0, 0, 199, 1396, 175, 0,
	0, 205, 205, 0, 0, 1338, 1340, 1353, 0, 0,
	0, 0, 151, 0, 0, 1356, 1360, 1368, 1363, 1365,
	1371, 0, 103, 0, 1474, 0, 0, 1373, 218, 219,
	0, 205, 0, 205, 211, 205, 1331, 0, 0, 0,
	0, 0, 0, 0, 1376, 1377, 238, 0, 0, 0,
	0, 240, 315, 247, 384, 0, 1099, 0, 1181, 1173,
	1174, 1175, 0, 1180, 1182, 0, 0, 1065, 1050, 0,
	1061, 0, 0, 1078, 1053, 0, 452, 469, 0, 472,
	0, 475, 1039, 1217, 1261, 1199, 0, 1299, 0, 0,
	0, 0, 0, 0, 0, 1486, 1488, 0, 1479, 1480,
	1510, 1616, 0, 0, 0, 1498, 1617, 0, 324, 325,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 325,
	285, 0, 286, 287, 288, 295, 274, 275, 668, 670,
	0, 0, 676, 1103, 0, 0, 0, 0, 1606, 1919,
	-2, -2, 1940, 0, 2302, 2304, 1598, 0, 2087, 1600,
	0, 0, -2, 0, 0, 0, 1581, 1564, 0, 1639,
	1631, 1633, 1635, 2613, 2394, 2728, 1565, 1566, 1711, 0,
	1679, 332, 618, 0, 0, 1739, 0, 0, 0, 1348,
	168, 0, 1130, 1131, 2276, 1133, 0, 1135, 1137, 1138,
	1139, 0, 1142, 0, 2325, 0, 1147, 1150, 1151, 0,
	0, 1164, 1186, 0, 1195, 0, 1324, 1334, 1328, 0,
	1326, 1197, 0, 172, 198, 174, 200, 195, 0, 1331,
	0, 176, 185, 0, 0, 123, 0, 0, 2388, 154,
	152, 150, 101, 1335, 125, 0, 220, 228, 1330, 230,
	215, 205, 0, 1357, 1361, 1369, 0, 1384, 1385, 1386,
	1387, 0, 0, 0, 0, 249, 0, 250, 253, 0,
	0, 1114, 0, 1052, 1172, 0, 1183, 1184, 1055, 0,
	1054, 0, 0, 0, 0, 0, 453, 456, 0, 459,
	0, 0, 0, 0, 0, 1310, 1308, 0, 1316, 0,
	0, 0, 1462, 0, 0, 1481, 1482, 476, 1504, 0,
	0, 1510, 1521, 302, 0, 0, 1086, 1089, 1090, 1091,
	1092, 1093, 1094, 1095, 1096, 1097, 1087, 1197, 0, 0,
	1161, 0, 307, 282, 0, 672, 0, 674, 0, 969,
	971, 0, 0, 2013, 2105, 0, 0, 2038, 2039, -2,
	0, 1979, 2089, 2091, 0, 0, 0, 0, 0, 1650,
	619, 1733, 627, 1344, 0, 1351, 1128, 1132, 0, 0,
	0, 1143, 1203, 0, 0, 1220, 1220, 1156, 0, 0,
	1189, 1190, 1099, 0, 1191, 1192, 1193, 1323, 1609, 1329,
	1099, 0, 0, 197, 202, 0, 0, 0, 0, 0,
	0, 0, 209, 231, 1331, 0, 1388, 1389, 0, 0,
	246, 267, 0, 1262, 1053, 1113, 0, 0, 1063, 0,
	1066, 0, 1062, 1059, 1060, 1051, 0, 457, 458, 473,
	0, 474, 0, 1265, 0, 0, 1317, 0, 0, 1469,
	1461, 1488, 1483, 1484, 1730, 1507, 1511, 0, 0, 1195,
	1197, 1110, 0, 671, 0, 0, 979, 980, 0, 0,
	0, 0, 2100, 1601, 1980, 0, 0, 1634, 1636, 1637,
	1638, 1345, 0, 0, 1141, 1208, 0, 0, 0, 0,
	0, 1157, 1187, 1188, 1110, 0, 1327, 1325, 1166, 0,
	1199, 178, 0, 1197, 0, 1119, 0, 0, 1122, 0,
	0, 155, 2388, 153, 0, 205, 1381, 205, 0, 270,
	0, 261, 259, 260, 1055, 0, 0, 1177, 1179, 0,
	1067, 1099, 1065, 470, 1263, 1300, 1197, 0, 1195, 0,
	1476, 1488, 1470, 1471, 0, 1486, 0, 325, 325, 1099,
	1195, 1053, 1109, 325, 673, 675, 2097, 2117, 2106, -2,
	2685, 2395, 0, 2117, 2117, 2092, 2093, 0, 0, 1144,
	1204, 1205, 0, 1200, 1201, 1202, 2324, 1145, 1146, 1148,
	1149, 1185, 0, 0, 1203, 201, 1099, 1116, 0, 0,
	1117, 0, 0, 158, 0, 160, 232, 1379, 0, 1382,
	0, 255, 0, 0, 1047, 0, 1176, 0, 0, 0,
	0, 1114, 1055, 1195, 0, 1099, 0, 1465, 1475, 0,
	1485, 1462, 0, 304, 305, 1110, 1099, 1730, 0, 306,
	2102, 0, 0, 2108, 2109, 2110, 2111, 2112, 2103, 2104,
	1134, 0, 1206, 0, 1207, 0, 0, 0, 1730, 1194,
	0, 1208, 183, 1120, 0, 1123, 0, 156, 0, 0,
	0, 265, 266, 1044, 1046, 0, 1178, 1056, 0, 1058,
	1053, 1064, 1099, 0, 1110, 0, 1458, 1464, 1468, 2285,
	1469, 1505, 0, 1053, 1110, 1160, 0, 2114, 2115, 0,
	0, 0, 1209, 0, 1212, 1213, 0, 1210, 1165, 0,
	1185, 0, 0, 1380, 205, 0, 0, 1057, 1055, 1110,
	1197, 1053, 1195, 1476, 0, 1730, 1053, 2113, 2116, 2107,
	1140, 1211, 1214, 1215, 1196, 1167, 0, 0, 1383, 268,
	0, 1102, 1047, 1053, 1195, 1730, 1099, 1465, 1730, 1158,
	1730, 1107, 0, 0, 1098, 1100, 1101, 1045, 1730, 1099,
	1313, 1110, 1459, 1506, 1159, 1121, 1106, 0, 269, 1311,
	1110, 1053, 0, 1053, 1730, 0, 1730, 1314, 1107, 1312,
	1124,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 593, 3, 599, 594, 3,
	604, 605, 597, 595, 609, 596, 606, 598, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 612, 3,
	585, 587, 586, 590, 608, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 602, 3, 603, 600, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 610, 592, 611, 588,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 582,
	57925, 583, 57926, 584, 57927, 589, 57928, 591, 57929, 601,
	57930, 607, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1477
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1482
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1484
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1487
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1488
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1489
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1490
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1491
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1492
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1493
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1494
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1495
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1496
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1497
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1504
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1513
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1515
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1518
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1519
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1520
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1521
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1522
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1523
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1524
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1525
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1526
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1527
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1586
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 74:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1612
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 78:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1626
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 83:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1644
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 84:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1648
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 85:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1652
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1684
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 97:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1688
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.user()}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1695
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1707
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1717
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1724
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1734
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1741
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1751
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1760
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1767
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1791
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1823
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 118:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1827
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1831
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1837
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1841
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1847
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1856
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1867
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1871
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1877
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1885
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1895
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1899
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1908
		{
		}
	case 133:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1909
		{
		}
	case 134:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1913
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1922
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:      tree.TableIndexName{Table: name},
				Rows:              sqlDollar[6].union.slct(),
				RelocateNonVoters: true,
			}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1934
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1939
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateNonVoters: true}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1946
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1958
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1965
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1973
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1978
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1982
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1987
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1993
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2001
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2012
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 148:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2022
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 149:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2032
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 150:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2041
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 151:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2052
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 152:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2058
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 153:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2066
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2070
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2074
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 156:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2078
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2084
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2089
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2100
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2104
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2110
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2114
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 163:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2121
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2126
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2131
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2136
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2141
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2146
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2151
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2156
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2161
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2166
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2171
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2176
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2180
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 176:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2185
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2194
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2206
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2216
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2223
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2226
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2232
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 183:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2239
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2247
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2254
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2263
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2272
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2277
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2284
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2292
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2293
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2297
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2301
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2307
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2315
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2319
		{
			sqlVAL.union.val = nil
		}
	case 197:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2325
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2329
		{
			sqlVAL.union.val = nil
		}
	case 199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2335
		{
			sqlVAL.union.val = true
		}
	case 200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2339
		{
			sqlVAL.union.val = false
		}
	case 201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2345
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2349
		{
			sqlVAL.union.val = nil
		}
	case 203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2356
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2360
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 205:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2364
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2370
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 207:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2374
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 208:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2399
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2410
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2421
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2430
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2440
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2449
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2458
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2467
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 216:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2471
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2474
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2478
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2485
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2492
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2497
		{
			sqlVAL.union.val = sqlDollar[1].union.user()
		}
	case 222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2499
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2504
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2511
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2518
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 233:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2542
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2549
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2553
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2557
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 237:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2561
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 238:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2591
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2603
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2613
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2624
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2633
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 243:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2637
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2641
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2649
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 246:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2653
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 247:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2657
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2664
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2668
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2677
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2681
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2685
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2689
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2693
		{
			sqlVAL.union.val = &tree.BackupOptions{IncludeDeprecatedInterleaves: true}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2775
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.targetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2786
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 258:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2791
		{
			sqlVAL.union.val = nil
		}
	case 259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2799
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2803
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2813
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2819
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2823
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2827
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{IfNotExists: false}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2836
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2840
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2844
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 268:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2850
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 269:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2854
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 270:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2858
		{
			sqlVAL.union.val = nil
		}
	case 271:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2891
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2900
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2910
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2919
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2929
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2936
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2940
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2944
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2950
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2954
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2961
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 282:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2965
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 283:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2969
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2976
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2980
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2989
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2993
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2997
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3001
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3005
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3009
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3013
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3017
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3021
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3025
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3031
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3037
		{
			return unimplemented(sqllex, "alter function")
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3041
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3045
		{
			return unimplemented(sqllex, "alter aggregate")
		}
	case 300:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3082
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3087
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3091
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3097
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3102
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3107
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3112
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3117
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3121
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 309:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3137
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3140
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3144
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3148
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3156
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3160
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3166
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 316:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3170
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3176
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3180
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3184
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3188
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3194
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3198
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3204
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 324:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3208
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 325:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3212
		{
			sqlVAL.union.val = nil
		}
	case 326:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3224
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3238
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3244
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 329:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3248
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3254
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3258
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3266
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3270
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3274
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3278
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3282
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3290
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3291
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3292
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3293
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3303
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3311
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3313
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3317
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3320
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3330
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3339
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3347
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3349
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3353
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3356
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3366
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3375
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3383
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3385
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3389
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3392
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3396
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3400
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3404
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3408
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3421
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3424
		{
			return unimplemented(sqllex, "comment on extension")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3428
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3433
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 370:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3445
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3447
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3448
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3451
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3452
		{
		}
	case 381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3453
		{
			return helpWith(sqllex, "CREATE")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3460
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3463
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 384:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3466
		{
			return unimplemented(sqllex, "create extension if not exists with")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3467
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3470
		{
			return unimplemented(sqllex, "create access method")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3471
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3472
		{
			return unimplemented(sqllex, "create cast")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3473
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3474
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3475
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3476
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3477
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3478
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3479
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3480
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3481
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3482
		{
			return unimplemented(sqllex, "create publication")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3483
		{
			return unimplemented(sqllex, "create rule")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3484
		{
			return unimplemented(sqllex, "create server")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3485
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3486
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3487
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3488
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3491
		{
		}
	case 406:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3492
		{
		}
	case 407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3495
		{
		}
	case 408:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3496
		{
		}
	case 409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3499
		{
		}
	case 410:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3500
		{
		}
	case 411:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3503
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3504
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3505
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3506
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3507
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3508
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3509
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 418:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3510
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 419:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3511
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3512
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3513
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3514
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3515
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3516
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3517
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3518
		{
			return unimplemented(sqllex, "drop server")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3519
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3520
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3521
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3524
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3525
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3526
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3527
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3528
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3530
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3531
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3532
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3533
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3543
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3551
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3555
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 450:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3559
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3565
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3569
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3578
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3585
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3591
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3597
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3601
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3612
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3624
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3639
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3647
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3657
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3661
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3667
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3671
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3678
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 467:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3682
		{

			sqlVAL.union.val = nil
		}
	case 468:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3699
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3710
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 470:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3714
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 471:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3718
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3725
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3729
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3738
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3742
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 476:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3755
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3765
		{
			return helpWith(sqllex, "DELETE")
		}
	case 478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3768
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3769
		{
		}
	case 480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3777
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3780
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3781
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3782
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3783
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3784
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3793
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3794
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3795
		{
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3796
		{
			return helpWith(sqllex, "DROP")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3799
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3800
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3801
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3802
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3803
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3804
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3805
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3813
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 508:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3817
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 509:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3821
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 510:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3830
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 511:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3838
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 512:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3846
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 513:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3850
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 514:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3853
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 515:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3861
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 516:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3865
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3868
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 518:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3876
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 519:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3885
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3893
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 521:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3901
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 522:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3909
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3916
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 524:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3923
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 525:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3931
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3938
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3942
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3948
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3952
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 530:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3961
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3969
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3976
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3984
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3988
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3991
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 536:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3995
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4000
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4013
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4018
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4020
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4025
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 542:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4029
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4052
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4059
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4061
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4069
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4077
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4085
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4093
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4104
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4112
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4115
		{
			return helpWith(sqllex, "DELETE")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4117
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4118
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4119
		{
			return helpWith(sqllex, "INSERT")
		}
	case 570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4122
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4124
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4127
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4132
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4133
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4134
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4139
		{
			return helpWith(sqllex, "DELETE")
		}
	case 587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4140
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4141
		{
			return helpWith(sqllex, "INSERT")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4143
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4147
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4148
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4152
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4156
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 598:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4166
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 599:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4174
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4182
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4186
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 602:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4190
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4200
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 604:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4207
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 605:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4215
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4219
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 607:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4223
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4233
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4237
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4241
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4245
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4248
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 613:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4271
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4275
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4279
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4283
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4287
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4297
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 619:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4301
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.nameList(),
			}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4312
		{
			return unimplemented(sqllex, "grant privileges on sequence")
		}
	case 621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4315
		{
			return helpWith(sqllex, "GRANT")
		}
	case 622:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4338
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4342
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4346
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4350
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4354
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 627:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4364
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.nameList(),
			}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4375
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4378
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4383
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 631:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4387
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4397
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4401
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4415
		{
			return helpWith(sqllex, "RESET")
		}
	case 641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4416
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4424
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4428
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4431
		{
			return helpWith(sqllex, "RESET")
		}
	case 645:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4439
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4442
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4453
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4456
		{
			return helpWith(sqllex, "USE")
		}
	case 650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4460
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4461
		{
		}
	case 652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4462
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4466
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4467
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4468
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4469
		{
			return helpWith(sqllex, "USE")
		}
	case 663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4485
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 664:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4500
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 665:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4503
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 666:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4521
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 667:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4529
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 668:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4533
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 669:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4537
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4543
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4547
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4553
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 673:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4557
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4561
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 675:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4565
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4569
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4580
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4583
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4593
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4609
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4612
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4614
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4617
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4620
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4634
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4639
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4656
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4659
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 691:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4661
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 692:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4664
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 693:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4668
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4687
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4691
		{
			return unimplemented(sqllex, "set from current")
		}
	case 697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4695
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4700
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4709
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4714
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4726
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4731
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 705:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4738
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4742
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4748
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4752
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4759
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4780
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4784
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4790
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4794
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4798
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4802
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4806
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4812
		{
			sqlVAL.union.val = tree.Low
		}
	case 721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4816
		{
			sqlVAL.union.val = tree.Normal
		}
	case 722:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4820
		{
			sqlVAL.union.val = tree.High
		}
	case 723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4831
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 724:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4835
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4839
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4844
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4848
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4863
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4864
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4865
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4866
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4867
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4868
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4869
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4870
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4871
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4873
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4874
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4875
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4876
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4877
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4879
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4880
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4881
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4883
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4885
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 772:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4886
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4887
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4888
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4889
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4890
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4891
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4892
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4893
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4894
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4895
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4896
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4897
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4898
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 797:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4899
		{
			return helpWith(sqllex, "SHOW")
		}
	case 801:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4902
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4907
		{
		}
	case 803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4908
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 804:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4911
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4915
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4920
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4925
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4930
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4935
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 810:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4945
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4946
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4947
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 816:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4958
		{
			sqlVAL.str = "client_encoding"
		}
	case 821:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4964
		{
			sqlVAL.str = "timezone"
		}
	case 822:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4965
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 823:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4979
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4983
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4987
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4998
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5006
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 828:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5014
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5020
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5028
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5037
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5046
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5055
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5063
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 835:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5073
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5077
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5080
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5082
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5085
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5087
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5091
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5094
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 843:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5102
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5105
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 845:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5113
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5117
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5121
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5125
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5128
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5136
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5139
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 852:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5145
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles: sqlDollar[4].union.nameList(),
			}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5150
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
			}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5155
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 855:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5162
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5166
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5176
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5185
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5192
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5195
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 861:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5208
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5216
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5224
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5227
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 865:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5229
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5233
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5237
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5240
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 869:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5242
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5246
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5249
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 872:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5257
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5260
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 874:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5262
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5265
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5273
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5276
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 878:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5278
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5281
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 880:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5285
		{
			sqlVAL.union.val = true
		}
	case 881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5287
		{
			sqlVAL.union.val = true
		}
	case 882:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5289
		{
			sqlVAL.union.val = false
		}
	case 885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5306
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5310
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5314
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5317
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5318
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 890:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5319
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5321
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5325
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5329
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5333
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5336
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5338
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5346
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5354
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5362
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 900:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5363
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5373
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5379
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 903:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5381
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5387
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5389
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5395
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5399
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5403
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 909:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5409
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 910:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5413
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5417
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 912:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5428
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5431
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 914:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5433
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5436
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 916:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5438
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5442
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 918:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5445
		{
			sqlVAL.union.val = true
		}
	case 919:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5446
		{
			sqlVAL.union.val = false
		}
	case 920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5454
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5457
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 922:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5459
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5462
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 924:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5470
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5480
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5490
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5493
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5500
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5503
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 930:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5505
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5508
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 932:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5511
		{
			sqlVAL.union.val = true
		}
	case 933:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5512
		{
			sqlVAL.union.val = false
		}
	case 934:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5519
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5523
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5526
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 937:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5533
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5537
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5540
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5547
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5551
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 942:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5555
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5562
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 944:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5566
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5577
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5580
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 947:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5588
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5593
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5598
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5602
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5612
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5616
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5621
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5626
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5631
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5636
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5639
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 958:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5649
		{

			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5653
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 960:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5655
		{

			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5659
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 962:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5667
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5670
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5678
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5681
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 966:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5691
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5695
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5699
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5707
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5715
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5722
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5728
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5730
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5733
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 975:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5735
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5738
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 978:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5742
		{
		}
	case 979:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5751
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5759
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5765
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 982:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5774
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5779
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5783
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5786
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 986:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5795
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5799
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5815
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5821
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5827
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5833
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5840
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5845
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 994:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5849
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5855
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5862
		{

			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5869
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 998:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5874
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5994
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5998
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6002
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6041
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6045
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6050
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6054
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6062
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6071
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6075
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6079
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6086
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6090
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6103
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6104
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6105
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6115
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6116
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6117
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6127
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6136
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6145
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6147
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6151
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6155
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6158
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6163
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6167
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6182
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6190
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6192
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6198
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6206
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6212
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6219
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.user(),
			}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6226
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.user(),
			}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6233
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6244
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6253
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6261
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6300
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Interleave:       sqlDollar[9].union.interleave(),
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[10].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[11].union.storageParams(),
				OnCommit:         sqlDollar[12].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[13].union.locality(),
			}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6316
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Interleave:       sqlDollar[12].union.interleave(),
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[13].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				OnCommit:         sqlDollar[15].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[16].union.locality(),
			}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6334
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6338
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6345
		{

			sqlVAL.union.val = nil
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6351
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6357
		{
			sqlVAL.str = ""
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6361
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6367
		{
			sqlVAL.union.val = nil
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6371
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6376
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6380
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6384
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6388
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6394
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6398
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6404
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6408
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6414
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6428
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6443
		{
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6444
		{
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6445
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6463
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6464
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6465
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6469
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6470
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6471
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6472
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6473
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6478
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6484
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6488
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6494
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6500
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6513
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6522
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6526
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6532
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6537
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6538
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6539
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6540
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6541
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6542
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6543
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6544
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6545
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6550
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6559
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6566
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6571
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6576
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6582
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6589
		{
			sqlVAL.str = ""
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6596
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6602
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6610
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6616
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6622
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6628
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6638
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6644
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6650
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6657
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6664
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6670
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6674
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6680
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6690
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6694
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6700
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6714
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6725
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6729
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6735
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6739
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6743
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6747
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6751
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6755
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6759
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6777
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6781
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6785
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6789
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6795
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6799
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6806
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6810
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6814
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6818
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6828
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6832
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6836
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6841
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6847
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6853
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6857
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6863
		{

			sqlVAL.union.val = true
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6868
		{
			sqlVAL.union.val = false
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6873
		{
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6877
		{
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6880
		{
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6884
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				Interleave:       sqlDollar[8].union.interleave(),
				PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				Predicate:        sqlDollar[11].union.expr(),
			}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6897
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					Interleave:       sqlDollar[9].union.interleave(),
					PartitionByIndex: sqlDollar[10].union.partitionByIndex(),
					StorageParams:    sqlDollar[11].union.storageParams(),
					Predicate:        sqlDollar[12].union.expr(),
				},
			}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6912
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6925
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6937
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6942
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6948
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6955
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					Interleave:       sqlDollar[7].union.interleave(),
					PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
					Predicate:        sqlDollar[10].union.expr(),
				},
			}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6968
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6980
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6991
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6998
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7002
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7008
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7018
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7029
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7033
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7040
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7046
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7057
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7061
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7067
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7073
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7077
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7083
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7087
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7093
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7098
		{
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7099
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7100
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7101
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7102
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7103
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7121
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7125
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7131
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7137
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7143
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7147
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7167
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7171
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7175
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7179
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7188
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7192
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7196
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7200
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7204
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7210
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7216
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7224
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7228
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7232
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7236
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7240
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7259
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7268
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7276
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7280
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7283
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7284
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7287
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7288
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7290
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7291
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7292
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7302
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7304
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7306
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7308
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7310
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7311
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7313
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7314
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7316
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7318
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7326
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7329
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7333
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7339
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7343
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7353
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7357
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7360
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7371
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7375
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7379
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.expr(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7383
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.expr(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7387
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7391
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7394
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7398
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7402
		{
			sqlVAL.str = ""
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7408
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7412
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7416
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7424
		{
			sqlVAL.union.val = true
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7428
		{

			sqlVAL.union.val = true
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7433
		{
			sqlVAL.union.val = false
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7443
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7457
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7469
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7481
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7491
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7501
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7505
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7509
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7513
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7517
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7521
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7525
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7529
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7533
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7537
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7541
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7545
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7549
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7553
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7557
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7561
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7565
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7569
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7573
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7577
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7581
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7585
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7589
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7598
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7602
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7608
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7612
		{
			sqlVAL.union.val = nil
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7618
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7622
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7627
		{
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7628
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7637
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7645
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7653
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7655
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7657
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7659
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7661
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7663
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7667
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7671
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7677
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7681
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:7701
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				Interleave:       sqlDollar[14].union.interleave(),
				PartitionByIndex: sqlDollar[15].union.partitionByIndex(),
				StorageParams:    sqlDollar[16].union.storageParams(),
				Predicate:        sqlDollar[17].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:7719
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				Interleave:       sqlDollar[17].union.interleave(),
				PartitionByIndex: sqlDollar[18].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[19].union.storageParams(),
				Predicate:        sqlDollar[20].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7738
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				Interleave:       sqlDollar[13].union.interleave(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7755
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				Interleave:       sqlDollar[16].union.interleave(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7772
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7776
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7791
		{
			sqlVAL.union.val = false
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7797
		{
			sqlVAL.union.val = true
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7801
		{
			sqlVAL.union.val = false
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7807
		{
			sqlVAL.union.val = true
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7811
		{
			sqlVAL.union.val = false
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7817
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7821
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7830
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7836
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7842
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7850
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7874
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7875
		{
			sqlVAL.str = ""
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7878
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7879
		{
			sqlVAL.str = ""
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7883
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7887
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7891
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7897
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7903
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7909
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7915
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7923
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7929
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7937
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7945
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7955
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7961
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7968
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7974
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7980
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7987
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7993
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7999
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8005
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8014
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
			}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8022
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
			}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8032
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8038
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8048
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8054
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8066
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8075
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.user(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8085
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8094
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.user(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8106
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8112
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8120
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.user(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8129
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.user(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8140
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8146
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8158
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8164
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8178
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8184
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8192
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8196
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8208
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.nameList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8217
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.nameList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8226
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8235
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8243
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8247
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.nameList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8258
		{
			sqlVAL.union.val = true
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8262
		{
			sqlVAL.union.val = false
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8268
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.nameList(),
			}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8276
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.nameList(),
				GrantOptionFor: true,
			}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8287
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8291
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8295
		{
			sqlVAL.union.val = tree.Types
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8299
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8303
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8307
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8313
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8316
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8322
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8326
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8331
		{
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8332
		{
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8335
		{
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8336
		{
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8344
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8347
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8357
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8365
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8367
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8371
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8374
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8387
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8395
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8397
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8403
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8416
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8424
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8426
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8432
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8440
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8443
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8447
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8448
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8449
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8465
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8468
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8470
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8473
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8483
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8486
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8488
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8491
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8495
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8500
		{
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8501
		{
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8502
		{
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8512
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8516
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8519
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8522
		{
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8523
		{
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8527
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8531
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8537
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8541
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8547
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8551
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8564
		{
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8566
		{
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8570
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8575
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8579
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8583
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8587
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8593
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8599
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8605
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8609
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8615
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8619
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:8629
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
			}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8644
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8659
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8664
		{
			sqlVAL.str = ""
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8669
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8676
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8682
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8687
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8694
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8698
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8704
		{

		}
	case 1472:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8711
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8715
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8719
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8728
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8734
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8738
		{
			sqlVAL.str = ""
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8744
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8748
		{
			sqlVAL.str = ""
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8754
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8758
		{
			sqlVAL.str = ""
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8764
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8768
		{
			sqlVAL.str = ""
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8774
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8782
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8787
		{
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8788
		{
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8803
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8810
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8817
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8828
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8835
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8839
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8848
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8853
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8859
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8863
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8867
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8873
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8877
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8897
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8901
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8908
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8916
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8924
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8928
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8933
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8937
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8954
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8966
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8969
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8972
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8978
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8982
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8995
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8998
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9002
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9013
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.nameList(),
				NewRole:  sqlDollar[6].union.user(),
			}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9019
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9028
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.nameList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9034
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9075
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9081
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9085
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9100
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9104
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9108
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9112
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9116
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9120
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9124
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9128
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9133
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9134
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9137
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9138
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9142
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9146
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9152
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9161
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9162
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9163
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9164
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9167
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9168
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9171
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9172
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9173
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9178
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9213
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9214
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9215
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9237
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9250
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9264
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9276
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9280
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9289
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9298
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9313
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9320
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9332
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9336
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9341
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9347
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9351
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9357
		{
			sqlVAL.union.val = true
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9361
		{
			sqlVAL.union.val = false
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9367
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9377
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9389
		{
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9390
		{
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9394
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9398
		{
			sqlVAL.union.val = nil
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9403
		{
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9404
		{
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9408
		{
			sqlVAL.union.val = true
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9412
		{
			sqlVAL.union.val = false
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9416
		{
			sqlVAL.union.val = false
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9422
		{
			sqlVAL.union.val = true
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9428
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9433
		{
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9434
		{
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9437
		{
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9438
		{
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9442
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9446
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9452
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9458
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9462
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9469
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9473
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9479
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9500
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9505
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9517
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9521
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9525
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9531
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9540
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9551
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9552
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9556
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9560
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9564
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9578
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9582
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9590
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9597
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9619
		{
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9620
		{
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9623
		{
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9624
		{
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9641
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9645
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9650
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9651
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9657
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9658
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9659
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9660
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9664
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9668
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9687
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9690
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9692
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9704
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9707
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9709
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9715
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9719
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9725
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9729
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9734
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9739
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9745
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9750
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9755
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9760
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9767
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9772
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9783
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9787
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9791
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9799
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9832
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9842
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9852
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9860
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9869
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9873
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9877
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9888
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9912
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9918
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9929
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9933
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9939
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9941
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9945
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9951
		{
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9953
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9956
		{
			sqlVAL.union.val = nil
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9957
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9958
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9962
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9966
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9972
		{
			sqlVAL.union.val = true
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9976
		{
			sqlVAL.union.val = false
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9996
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10000
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10004
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10008
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10012
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10016
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10022
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10026
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10033
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10039
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10046
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10052
		{
			sqlVAL.str = tree.AstFull
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10056
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10060
		{
			sqlVAL.str = tree.AstRight
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10064
		{
			sqlVAL.str = tree.AstInner
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10070
		{
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10071
		{
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10095
		{
			sqlVAL.str = tree.AstHash
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10099
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10103
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10107
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10111
		{
			sqlVAL.str = ""
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10124
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10128
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10133
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10134
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10135
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10136
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10140
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10145
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10159
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10163
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10169
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10175
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10185
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10195
		{
			sqlVAL.union.val = true
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10199
		{
			sqlVAL.union.val = false
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10205
		{
			sqlVAL.union.val = true
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10209
		{
			sqlVAL.union.val = false
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10215
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10222
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10234
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10247
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10255
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10256
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10266
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10273
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10274
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10276
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10284
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10285
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10297
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10304
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10313
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10353
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10358
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10365
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10366
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10369
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10370
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10371
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10372
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10373
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10374
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10375
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10376
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10377
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10378
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10379
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10380
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10381
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10382
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10383
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10384
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10385
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10386
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10387
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10388
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10389
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10390
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10391
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10392
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10393
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10394
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10395
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10396
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10397
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10398
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10399
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10400
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10403
		{
			sqlVAL.union.val = types.Geography
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10404
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10405
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10407
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10411
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10415
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10423
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10449
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10457
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10465
		{
			sqlVAL.union.val = nil
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10472
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10476
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10480
		{
			sqlVAL.union.val = types.Int2
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10484
		{
			sqlVAL.union.val = types.Int
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10488
		{
			sqlVAL.union.val = types.Float4
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10492
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10496
		{
			sqlVAL.union.val = types.Float
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10500
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10508
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10516
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10524
		{
			sqlVAL.union.val = types.Bool
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10530
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10543
		{
			sqlVAL.union.val = types.Float
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10549
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10555
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10563
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10567
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10571
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10577
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10589
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10595
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10599
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10603
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10607
		{
			sqlVAL.union.val = types.String
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10616
		{
			sqlVAL.union.val = true
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10617
		{
			sqlVAL.union.val = false
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10622
		{
			sqlVAL.union.val = types.Date
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10626
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10634
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10646
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10648
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10657
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10665
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10678
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10682
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10692
		{
			sqlVAL.union.val = true
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10693
		{
			sqlVAL.union.val = false
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10694
		{
			sqlVAL.union.val = false
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10698
		{
			sqlVAL.union.val = types.Interval
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10702
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10706
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10717
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10725
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10733
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10741
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10749
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10757
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10763
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10772
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10781
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10790
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10796
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10805
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10811
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10821
		{
			sqlVAL.union.val = nil
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10827
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10835
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10872
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10876
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10880
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10884
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10895
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10900
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10904
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10908
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10912
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10916
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10920
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10924
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10928
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10932
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10936
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10940
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10944
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10948
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10952
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10956
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10960
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10964
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10968
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10972
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10976
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10980
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10984
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10988
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10992
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10996
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11000
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11004
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11008
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11012
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11016
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11020
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11024
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11028
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11032
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11036
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11040
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11044
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11052
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11062
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11066
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11070
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11074
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11078
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11082
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11086
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11090
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11094
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11098
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11102
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11106
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11110
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11114
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11118
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11122
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11126
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11130
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11134
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11138
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11142
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11146
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11150
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11154
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11158
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11162
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11165
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11167
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11171
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11175
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11179
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11183
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11187
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11191
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11195
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11199
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11203
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11207
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11211
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11215
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11219
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11223
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11227
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11231
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11248
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11253
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11265
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11269
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11273
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11277
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11281
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11285
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11289
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11293
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11297
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11301
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11305
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11309
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11313
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11317
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11321
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11325
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11329
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11333
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11337
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11341
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11345
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11349
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11353
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11357
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11361
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11369
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11379
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11383
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11387
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11391
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11405
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11413
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11449
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11453
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11457
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11461
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11465
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11470
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11472
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11476
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11480
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11484
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11488
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11492
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11496
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11505
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11512
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11516
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11520
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if idx <= 0 {
				err := errors.New("invalid numeric tuple index: indexes must be > 0")
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11530
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11535
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11539
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11543
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11547
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11551
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11554
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11558
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11562
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11565
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11566
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11568
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11574
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11578
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11581
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11590
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11643
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11656
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11668
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11677
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11678
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11683
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11687
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11691
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11697
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11701
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11705
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11709
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11713
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11717
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11723
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11727
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11731
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11735
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11739
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11743
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11747
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11751
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11755
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11759
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11763
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11767
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11771
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11778
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11781
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11783
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11786
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11788
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11792
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11795
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11797
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11801
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11804
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11806
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11810
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11813
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11815
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11819
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11822
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11824
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11827
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11829
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11832
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11834
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11837
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11839
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11842
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11844
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11847
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11849
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11853
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11856
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11857
		{
			return unimplemented(sqllex, "treat")
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11859
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11863
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11867
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11871
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11875
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11878
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11880
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11883
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11889
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11893
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11899
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11903
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11910
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11914
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11920
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11924
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11930
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11938
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11942
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11946
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11953
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11973
		{
			sqlVAL.str = ""
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11979
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11983
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11989
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11997
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12005
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12013
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12019
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12032
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12060
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12064
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12068
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12072
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12079
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12088
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12092
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12096
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12100
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12105
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12118
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12122
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12129
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12141
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Any)
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12145
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Some)
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12149
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.All)
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12165
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Plus)
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12166
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Minus)
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12167
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mult)
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12168
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Div)
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12169
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mod)
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12170
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Pow)
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12171
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LT)
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12172
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GT)
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12173
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.EQ)
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12174
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LE)
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12175
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GE)
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12176
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NE)
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12178
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONExists)
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12179
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitand)
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12180
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitor)
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12181
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitxor)
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12182
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.FloorDiv)
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12183
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Contains)
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12184
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ContainedBy)
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12185
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.LShift)
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12186
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.RShift)
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12187
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Concat)
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12188
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchVal)
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12189
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchText)
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12190
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchValPath)
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12191
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchTextPath)
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12192
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONSomeExists)
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12193
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONAllExists)
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12194
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegMatch)
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12195
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.RegIMatch)
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12196
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegIMatch)
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12197
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Overlaps)
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12198
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12199
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12200
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12205
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12221
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12228
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Like)
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12229
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotLike)
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12230
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ILike)
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12231
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotILike)
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12254
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12258
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12264
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12268
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12272
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12283
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12287
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12293
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12297
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12304
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12310
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12314
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12320
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12324
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12330
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12334
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12340
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12344
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12350
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12354
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12377
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12381
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12385
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12391
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12398
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12402
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12419
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12423
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12427
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12431
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12435
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12441
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12447
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12453
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12457
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12461
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12467
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12479
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12486
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12490
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12496
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12502
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12506
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12513
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12519
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12523
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12530
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12536
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12540
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12545
		{
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12546
		{
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12550
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12554
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12560
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12569
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12573
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12577
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12585
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12589
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12595
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12599
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12618
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12626
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12649
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12658
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12662
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12666
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12670
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12676
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12680
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12695
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12699
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12711
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12715
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12724
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12735
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12744
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12752
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12769
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12854
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12862
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12866
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12872
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12876
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2292:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12884
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12911
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12918
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2301:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12922
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2302:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12926
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2304:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12940
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2305:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12944
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12948
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12961
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12970
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12988
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13001
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2315:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13008
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2323:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13033
		{
			sqlVAL.str = ""
		}
	case 2324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13039
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2325:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13043
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
