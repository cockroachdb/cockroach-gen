// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: tree.ComparisonOperator{
					Symbol:             tree.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case tree.BinaryOperator:

		switch op.Symbol {
		case tree.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case tree.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case tree.ComparisonOperator:
		switch op.Symbol {
		case tree.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:165

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}

func (u *sqlSymUnion) scheduleLabelSpec() *tree.ScheduleLabelSpec {
	return u.val.(*tree.ScheduleLabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}

//line sql-gen.y:873
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FOREIGN = lexbase.FOREIGN
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDE_DEPRECATED_INTERLEAVES = lexbase.INCLUDE_DEPRECATED_INTERLEAVES
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INTERLEAVE = lexbase.INTERLEAVE
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NON_VOTERS = lexbase.NON_VOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const START = lexbase.START
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDE_DEPRECATED_INTERLEAVES",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NON_VOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:13636

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1580,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	261, 410,
	-2, 0,
	-1, 74,
	243, 243,
	517, 243,
	-2, 0,
	-1, 87,
	231, 1316,
	245, 1316,
	261, 406,
	391, 406,
	402, 1070,
	441, 406,
	454, 1070,
	501, 1070,
	528, 406,
	554, 1070,
	-2, 0,
	-1, 93,
	133, 1580,
	238, 1580,
	539, 1580,
	540, 1580,
	-2, 0,
	-1, 109,
	151, 1551,
	170, 1551,
	183, 1551,
	241, 1551,
	274, 1551,
	342, 1551,
	352, 1551,
	534, 1551,
	-2, 1522,
	-1, 150,
	159, 919,
	260, 919,
	394, 880,
	459, 880,
	500, 880,
	520, 919,
	522, 880,
	-2, 0,
	-1, 154,
	4, 1582,
	21, 1582,
	22, 1582,
	23, 1582,
	24, 1582,
	25, 1582,
	26, 1582,
	27, 1582,
	29, 1582,
	30, 1582,
	36, 1582,
	41, 1582,
	42, 1582,
	44, 1582,
	45, 1582,
	46, 1582,
	47, 1582,
	48, 1582,
	49, 1582,
	50, 1582,
	51, 1582,
	53, 1582,
	54, 1582,
	55, 1582,
	56, 1582,
	58, 1582,
	59, 1582,
	60, 1582,
	61, 1582,
	62, 1582,
	63, 1582,
	64, 1582,
	68, 1582,
	69, 1582,
	70, 1582,
	71, 1582,
	73, 1582,
	74, 1582,
	75, 1582,
	79, 1582,
	80, 1582,
	81, 1582,
	82, 1582,
	83, 1582,
	84, 1582,
	85, 1582,
	88, 1582,
	89, 1582,
	90, 1582,
	91, 1582,
	92, 1582,
	94, 1582,
	96, 1582,
	97, 1582,
	98, 1582,
	99, 1582,
	100, 1582,
	101, 1582,
	103, 1582,
	104, 1582,
	105, 1582,
	107, 1582,
	108, 1582,
	109, 1582,
	117, 1582,
	118, 1582,
	119, 1582,
	120, 1582,
	121, 1582,
	123, 1582,
	124, 1582,
	125, 1582,
	126, 1582,
	128, 1582,
	129, 1582,
	130, 1582,
	132, 1582,
	133, 1582,
	134, 1582,
	136, 1582,
	137, 1582,
	138, 1582,
	141, 1582,
	142, 1582,
	143, 1582,
	145, 1582,
	146, 1582,
	148, 1582,
	149, 1582,
	150, 1582,
	152, 1582,
	153, 1582,
	154, 1582,
	155, 1582,
	156, 1582,
	157, 1582,
	158, 1582,
	159, 1582,
	160, 1582,
	161, 1582,
	162, 1582,
	163, 1582,
	164, 1582,
	165, 1582,
	166, 1582,
	167, 1582,
	169, 1582,
	175, 1582,
	176, 1582,
	177, 1582,
	178, 1582,
	182, 1582,
	184, 1582,
	185, 1582,
	189, 1582,
	190, 1582,
	191, 1582,
	192, 1582,
	193, 1582,
	194, 1582,
	195, 1582,
	196, 1582,
	197, 1582,
	198, 1582,
	199, 1582,
	200, 1582,
	201, 1582,
	202, 1582,
	204, 1582,
	205, 1582,
	207, 1582,
	208, 1582,
	210, 1582,
	211, 1582,
	212, 1582,
	213, 1582,
	214, 1582,
	215, 1582,
	216, 1582,
	217, 1582,
	218, 1582,
	220, 1582,
	221, 1582,
	223, 1582,
	224, 1582,
	225, 1582,
	226, 1582,
	227, 1582,
	231, 1582,
	232, 1582,
	233, 1582,
	234, 1582,
	235, 1582,
	238, 1582,
	239, 1582,
	240, 1582,
	242, 1582,
	244, 1582,
	245, 1582,
	247, 1582,
	249, 1582,
	250, 1582,
	251, 1582,
	253, 1582,
	257, 1582,
	258, 1582,
	259, 1582,
	260, 1582,
	261, 1582,
	262, 1582,
	264, 1582,
	265, 1582,
	266, 1582,
	268, 1582,
	269, 1582,
	271, 1582,
	272, 1582,
	275, 1582,
	279, 1582,
	280, 1582,
	281, 1582,
	284, 1582,
	285, 1582,
	286, 1582,
	287, 1582,
	289, 1582,
	290, 1582,
	291, 1582,
	292, 1582,
	293, 1582,
	294, 1582,
	295, 1582,
	296, 1582,
	297, 1582,
	298, 1582,
	299, 1582,
	300, 1582,
	301, 1582,
	302, 1582,
	303, 1582,
	304, 1582,
	305, 1582,
	306, 1582,
	307, 1582,
	308, 1582,
	309, 1582,
	310, 1582,
	312, 1582,
	314, 1582,
	315, 1582,
	316, 1582,
	317, 1582,
	318, 1582,
	319, 1582,
	320, 1582,
	321, 1582,
	322, 1582,
	323, 1582,
	324, 1582,
	325, 1582,
	326, 1582,
	327, 1582,
	329, 1582,
	330, 1582,
	332, 1582,
	334, 1582,
	335, 1582,
	337, 1582,
	338, 1582,
	339, 1582,
	340, 1582,
	341, 1582,
	344, 1582,
	347, 1582,
	348, 1582,
	349, 1582,
	350, 1582,
	353, 1582,
	354, 1582,
	355, 1582,
	357, 1582,
	359, 1582,
	360, 1582,
	361, 1582,
	362, 1582,
	363, 1582,
	364, 1582,
	365, 1582,
	366, 1582,
	367, 1582,
	368, 1582,
	369, 1582,
	370, 1582,
	371, 1582,
	373, 1582,
	374, 1582,
	375, 1582,
	376, 1582,
	377, 1582,
	378, 1582,
	379, 1582,
	380, 1582,
	381, 1582,
	382, 1582,
	383, 1582,
	384, 1582,
	385, 1582,
	386, 1582,
	387, 1582,
	389, 1582,
	390, 1582,
	392, 1582,
	393, 1582,
	394, 1582,
	395, 1582,
	396, 1582,
	397, 1582,
	398, 1582,
	399, 1582,
	400, 1582,
	401, 1582,
	402, 1582,
	403, 1582,
	404, 1582,
	406, 1582,
	408, 1582,
	409, 1582,
	410, 1582,
	416, 1582,
	418, 1582,
	419, 1582,
	420, 1582,
	421, 1582,
	422, 1582,
	423, 1582,
	424, 1582,
	425, 1582,
	426, 1582,
	427, 1582,
	429, 1582,
	430, 1582,
	431, 1582,
	433, 1582,
	434, 1582,
	435, 1582,
	436, 1582,
	437, 1582,
	438, 1582,
	439, 1582,
	441, 1582,
	442, 1582,
	443, 1582,
	444, 1582,
	445, 1582,
	446, 1582,
	447, 1582,
	448, 1582,
	449, 1582,
	450, 1582,
	451, 1582,
	452, 1582,
	454, 1582,
	455, 1582,
	456, 1582,
	457, 1582,
	458, 1582,
	459, 1582,
	461, 1582,
	462, 1582,
	463, 1582,
	464, 1582,
	465, 1582,
	466, 1582,
	468, 1582,
	469, 1582,
	470, 1582,
	471, 1582,
	472, 1582,
	473, 1582,
	474, 1582,
	475, 1582,
	477, 1582,
	479, 1582,
	480, 1582,
	481, 1582,
	482, 1582,
	483, 1582,
	484, 1582,
	485, 1582,
	486, 1582,
	487, 1582,
	488, 1582,
	489, 1582,
	490, 1582,
	491, 1582,
	492, 1582,
	493, 1582,
	494, 1582,
	496, 1582,
	497, 1582,
	499, 1582,
	500, 1582,
	502, 1582,
	503, 1582,
	504, 1582,
	505, 1582,
	506, 1582,
	507, 1582,
	508, 1582,
	509, 1582,
	510, 1582,
	512, 1582,
	513, 1582,
	514, 1582,
	515, 1582,
	516, 1582,
	518, 1582,
	520, 1582,
	521, 1582,
	522, 1582,
	523, 1582,
	524, 1582,
	525, 1582,
	527, 1582,
	528, 1582,
	529, 1582,
	530, 1582,
	532, 1582,
	533, 1582,
	536, 1582,
	537, 1582,
	538, 1582,
	539, 1582,
	540, 1582,
	541, 1582,
	542, 1582,
	544, 1582,
	547, 1582,
	548, 1582,
	549, 1582,
	550, 1582,
	551, 1582,
	552, 1582,
	554, 1582,
	555, 1582,
	556, 1582,
	557, 1582,
	559, 1582,
	564, 1582,
	565, 1582,
	566, 1582,
	567, 1582,
	568, 1582,
	569, 1582,
	-2, 0,
	-1, 155,
	1, 1433,
	131, 1433,
	249, 1433,
	331, 1433,
	389, 1433,
	398, 1433,
	573, 1433,
	602, 1433,
	-2, 0,
	-1, 157,
	1, 1433,
	602, 1433,
	-2, 0,
	-1, 158,
	1, 1433,
	602, 1433,
	-2, 0,
	-1, 159,
	1, 1433,
	517, 1433,
	602, 1433,
	-2, 0,
	-1, 188,
	151, 1550,
	170, 1550,
	183, 1550,
	241, 1550,
	274, 1550,
	342, 1550,
	352, 1550,
	534, 1550,
	-2, 1525,
	-1, 236,
	4, 1589,
	5, 1589,
	6, 1589,
	7, 1589,
	8, 1589,
	9, 1589,
	10, 1589,
	21, 1589,
	22, 1589,
	23, 1589,
	24, 1589,
	25, 1589,
	26, 1589,
	27, 1589,
	29, 1589,
	30, 1589,
	36, 1589,
	37, 1589,
	41, 1589,
	42, 1589,
	43, 1589,
	44, 1589,
	45, 1589,
	46, 1589,
	47, 1589,
	48, 1589,
	49, 1589,
	50, 1589,
	51, 1589,
	53, 1589,
	54, 1589,
	55, 1589,
	56, 1589,
	58, 1589,
	59, 1589,
	60, 1589,
	61, 1589,
	62, 1589,
	63, 1589,
	64, 1589,
	65, 1589,
	66, 1589,
	67, 1589,
	68, 1589,
	69, 1589,
	70, 1589,
	71, 1589,
	73, 1589,
	74, 1589,
	75, 1589,
	77, 1589,
	79, 1589,
	80, 1589,
	81, 1589,
	82, 1589,
	83, 1589,
	84, 1589,
	85, 1589,
	88, 1589,
	89, 1589,
	90, 1589,
	91, 1589,
	92, 1589,
	94, 1589,
	96, 1589,
	97, 1589,
	98, 1589,
	99, 1589,
	100, 1589,
	101, 1589,
	103, 1589,
	104, 1589,
	105, 1589,
	106, 1589,
	107, 1589,
	108, 1589,
	109, 1589,
	110, 1589,
	111, 1589,
	112, 1589,
	113, 1589,
	114, 1589,
	115, 1589,
	116, 1589,
	117, 1589,
	118, 1589,
	119, 1589,
	120, 1589,
	121, 1589,
	122, 1589,
	123, 1589,
	124, 1589,
	125, 1589,
	126, 1589,
	127, 1589,
	128, 1589,
	129, 1589,
	130, 1589,
	132, 1589,
	133, 1589,
	134, 1589,
	136, 1589,
	137, 1589,
	138, 1589,
	141, 1589,
	142, 1589,
	143, 1589,
	145, 1589,
	146, 1589,
	148, 1589,
	149, 1589,
	150, 1589,
	152, 1589,
	153, 1589,
	154, 1589,
	155, 1589,
	156, 1589,
	157, 1589,
	158, 1589,
	159, 1589,
	160, 1589,
	161, 1589,
	162, 1589,
	163, 1589,
	164, 1589,
	165, 1589,
	166, 1589,
	167, 1589,
	168, 1589,
	169, 1589,
	175, 1589,
	176, 1589,
	177, 1589,
	178, 1589,
	182, 1589,
	184, 1589,
	185, 1589,
	188, 1589,
	189, 1589,
	190, 1589,
	191, 1589,
	192, 1589,
	193, 1589,
	194, 1589,
	195, 1589,
	196, 1589,
	197, 1589,
	198, 1589,
	199, 1589,
	200, 1589,
	201, 1589,
	202, 1589,
	204, 1589,
	205, 1589,
	207, 1589,
	208, 1589,
	210, 1589,
	211, 1589,
	212, 1589,
	213, 1589,
	214, 1589,
	215, 1589,
	216, 1589,
	217, 1589,
	218, 1589,
	219, 1589,
	220, 1589,
	221, 1589,
	223, 1589,
	224, 1589,
	225, 1589,
	226, 1589,
	227, 1589,
	231, 1589,
	232, 1589,
	233, 1589,
	234, 1589,
	235, 1589,
	237, 1589,
	238, 1589,
	239, 1589,
	240, 1589,
	242, 1589,
	244, 1589,
	245, 1589,
	246, 1589,
	247, 1589,
	248, 1589,
	249, 1589,
	250, 1589,
	251, 1589,
	252, 1589,
	253, 1589,
	257, 1589,
	258, 1589,
	259, 1589,
	260, 1589,
	261, 1589,
	262, 1589,
	264, 1589,
	265, 1589,
	266, 1589,
	268, 1589,
	269, 1589,
	270, 1589,
	271, 1589,
	272, 1589,
	273, 1589,
	275, 1589,
	279, 1589,
	280, 1589,
	281, 1589,
	282, 1589,
	283, 1589,
	284, 1589,
	285, 1589,
	286, 1589,
	287, 1589,
	289, 1589,
	290, 1589,
	291, 1589,
	292, 1589,
	293, 1589,
	294, 1589,
	295, 1589,
	296, 1589,
	297, 1589,
	298, 1589,
	299, 1589,
	300, 1589,
	301, 1589,
	302, 1589,
	303, 1589,
	304, 1589,
	305, 1589,
	306, 1589,
	307, 1589,
	308, 1589,
	309, 1589,
	310, 1589,
	312, 1589,
	313, 1589,
	314, 1589,
	315, 1589,
	316, 1589,
	317, 1589,
	318, 1589,
	319, 1589,
	320, 1589,
	321, 1589,
	322, 1589,
	323, 1589,
	324, 1589,
	325, 1589,
	326, 1589,
	327, 1589,
	328, 1589,
	329, 1589,
	330, 1589,
	331, 1589,
	332, 1589,
	333, 1589,
	334, 1589,
	335, 1589,
	336, 1589,
	337, 1589,
	338, 1589,
	339, 1589,
	340, 1589,
	341, 1589,
	344, 1589,
	348, 1589,
	349, 1589,
	350, 1589,
	353, 1589,
	354, 1589,
	355, 1589,
	356, 1589,
	357, 1589,
	358, 1589,
	359, 1589,
	360, 1589,
	361, 1589,
	362, 1589,
	363, 1589,
	364, 1589,
	365, 1589,
	366, 1589,
	367, 1589,
	368, 1589,
	369, 1589,
	370, 1589,
	371, 1589,
	373, 1589,
	374, 1589,
	375, 1589,
	376, 1589,
	377, 1589,
	378, 1589,
	379, 1589,
	380, 1589,
	381, 1589,
	382, 1589,
	383, 1589,
	384, 1589,
	385, 1589,
	386, 1589,
	387, 1589,
	389, 1589,
	390, 1589,
	392, 1589,
	393, 1589,
	394, 1589,
	395, 1589,
	396, 1589,
	397, 1589,
	398, 1589,
	399, 1589,
	400, 1589,
	401, 1589,
	402, 1589,
	403, 1589,
	404, 1589,
	406, 1589,
	408, 1589,
	409, 1589,
	410, 1589,
	416, 1589,
	418, 1589,
	419, 1589,
	420, 1589,
	421, 1589,
	422, 1589,
	423, 1589,
	424, 1589,
	425, 1589,
	426, 1589,
	427, 1589,
	429, 1589,
	430, 1589,
	431, 1589,
	432, 1589,
	433, 1589,
	434, 1589,
	435, 1589,
	436, 1589,
	437, 1589,
	438, 1589,
	439, 1589,
	441, 1589,
	442, 1589,
	443, 1589,
	444, 1589,
	445, 1589,
	446, 1589,
	447, 1589,
	448, 1589,
	449, 1589,
	450, 1589,
	451, 1589,
	452, 1589,
	454, 1589,
	455, 1589,
	456, 1589,
	457, 1589,
	458, 1589,
	459, 1589,
	460, 1589,
	461, 1589,
	462, 1589,
	463, 1589,
	464, 1589,
	465, 1589,
	466, 1589,
	467, 1589,
	468, 1589,
	469, 1589,
	470, 1589,
	471, 1589,
	472, 1589,
	473, 1589,
	474, 1589,
	475, 1589,
	477, 1589,
	479, 1589,
	480, 1589,
	481, 1589,
	482, 1589,
	483, 1589,
	484, 1589,
	485, 1589,
	486, 1589,
	487, 1589,
	488, 1589,
	489, 1589,
	490, 1589,
	491, 1589,
	492, 1589,
	493, 1589,
	494, 1589,
	496, 1589,
	497, 1589,
	498, 1589,
	499, 1589,
	500, 1589,
	502, 1589,
	503, 1589,
	504, 1589,
	505, 1589,
	506, 1589,
	507, 1589,
	508, 1589,
	509, 1589,
	510, 1589,
	512, 1589,
	513, 1589,
	514, 1589,
	515, 1589,
	516, 1589,
	518, 1589,
	520, 1589,
	521, 1589,
	522, 1589,
	523, 1589,
	524, 1589,
	525, 1589,
	526, 1589,
	527, 1589,
	528, 1589,
	529, 1589,
	530, 1589,
	532, 1589,
	533, 1589,
	535, 1589,
	536, 1589,
	537, 1589,
	538, 1589,
	539, 1589,
	540, 1589,
	541, 1589,
	542, 1589,
	543, 1589,
	544, 1589,
	547, 1589,
	548, 1589,
	549, 1589,
	550, 1589,
	551, 1589,
	552, 1589,
	554, 1589,
	555, 1589,
	556, 1589,
	557, 1589,
	559, 1589,
	564, 1589,
	565, 1589,
	566, 1589,
	567, 1589,
	568, 1589,
	569, 1589,
	570, 1589,
	583, 1589,
	590, 1589,
	591, 1589,
	592, 1589,
	599, 1589,
	603, 1589,
	-2, 0,
	-1, 743,
	4, 1314,
	21, 1314,
	22, 1314,
	23, 1314,
	24, 1314,
	25, 1314,
	26, 1314,
	27, 1314,
	29, 1314,
	30, 1314,
	36, 1314,
	41, 1314,
	42, 1314,
	44, 1314,
	45, 1314,
	46, 1314,
	47, 1314,
	48, 1314,
	49, 1314,
	50, 1314,
	51, 1314,
	53, 1314,
	54, 1314,
	55, 1314,
	56, 1314,
	58, 1314,
	59, 1314,
	60, 1314,
	61, 1314,
	62, 1314,
	63, 1314,
	64, 1314,
	68, 1314,
	69, 1314,
	70, 1314,
	71, 1314,
	73, 1314,
	74, 1314,
	75, 1314,
	79, 1314,
	80, 1314,
	81, 1314,
	82, 1314,
	83, 1314,
	84, 1314,
	85, 1314,
	88, 1314,
	89, 1314,
	90, 1314,
	91, 1314,
	92, 1314,
	94, 1314,
	96, 1314,
	97, 1314,
	98, 1314,
	99, 1314,
	100, 1314,
	101, 1314,
	103, 1314,
	104, 1314,
	105, 1314,
	107, 1314,
	108, 1314,
	109, 1314,
	117, 1314,
	118, 1314,
	119, 1314,
	120, 1314,
	121, 1314,
	123, 1314,
	124, 1314,
	125, 1314,
	126, 1314,
	128, 1314,
	129, 1314,
	130, 1314,
	132, 1314,
	133, 1314,
	134, 1314,
	136, 1314,
	137, 1314,
	138, 1314,
	141, 1314,
	142, 1314,
	143, 1314,
	145, 1314,
	146, 1314,
	148, 1314,
	149, 1314,
	150, 1314,
	152, 1314,
	153, 1314,
	154, 1314,
	155, 1314,
	156, 1314,
	157, 1314,
	158, 1314,
	159, 1314,
	160, 1314,
	161, 1314,
	162, 1314,
	163, 1314,
	164, 1314,
	165, 1314,
	166, 1314,
	167, 1314,
	169, 1314,
	175, 1314,
	176, 1314,
	177, 1314,
	178, 1314,
	182, 1314,
	184, 1314,
	185, 1314,
	189, 1314,
	190, 1314,
	191, 1314,
	192, 1314,
	193, 1314,
	194, 1314,
	195, 1314,
	196, 1314,
	197, 1314,
	198, 1314,
	199, 1314,
	200, 1314,
	201, 1314,
	202, 1314,
	204, 1314,
	205, 1314,
	207, 1314,
	208, 1314,
	210, 1314,
	211, 1314,
	212, 1314,
	213, 1314,
	214, 1314,
	215, 1314,
	216, 1314,
	217, 1314,
	218, 1314,
	220, 1314,
	221, 1314,
	223, 1314,
	224, 1314,
	225, 1314,
	226, 1314,
	227, 1314,
	231, 1314,
	232, 1314,
	233, 1314,
	234, 1314,
	235, 1314,
	238, 1314,
	239, 1314,
	240, 1314,
	242, 1314,
	244, 1314,
	245, 1314,
	247, 1314,
	249, 1314,
	250, 1314,
	251, 1314,
	253, 1314,
	257, 1314,
	258, 1314,
	259, 1314,
	260, 1314,
	261, 1314,
	262, 1314,
	264, 1314,
	265, 1314,
	266, 1314,
	268, 1314,
	269, 1314,
	271, 1314,
	272, 1314,
	275, 1314,
	279, 1314,
	280, 1314,
	281, 1314,
	284, 1314,
	285, 1314,
	286, 1314,
	287, 1314,
	289, 1314,
	290, 1314,
	291, 1314,
	292, 1314,
	293, 1314,
	294, 1314,
	295, 1314,
	296, 1314,
	297, 1314,
	298, 1314,
	299, 1314,
	300, 1314,
	301, 1314,
	302, 1314,
	303, 1314,
	304, 1314,
	305, 1314,
	306, 1314,
	307, 1314,
	308, 1314,
	309, 1314,
	310, 1314,
	312, 1314,
	314, 1314,
	315, 1314,
	316, 1314,
	317, 1314,
	318, 1314,
	319, 1314,
	320, 1314,
	321, 1314,
	322, 1314,
	323, 1314,
	324, 1314,
	325, 1314,
	326, 1314,
	327, 1314,
	329, 1314,
	330, 1314,
	332, 1314,
	334, 1314,
	335, 1314,
	337, 1314,
	338, 1314,
	339, 1314,
	340, 1314,
	341, 1314,
	344, 1314,
	348, 1314,
	349, 1314,
	350, 1314,
	353, 1314,
	354, 1314,
	355, 1314,
	357, 1314,
	359, 1314,
	360, 1314,
	361, 1314,
	362, 1314,
	363, 1314,
	364, 1314,
	365, 1314,
	366, 1314,
	367, 1314,
	368, 1314,
	369, 1314,
	370, 1314,
	371, 1314,
	373, 1314,
	374, 1314,
	375, 1314,
	376, 1314,
	377, 1314,
	378, 1314,
	379, 1314,
	380, 1314,
	381, 1314,
	382, 1314,
	383, 1314,
	384, 1314,
	385, 1314,
	386, 1314,
	387, 1314,
	389, 1314,
	390, 1314,
	392, 1314,
	393, 1314,
	394, 1314,
	395, 1314,
	396, 1314,
	397, 1314,
	398, 1314,
	399, 1314,
	400, 1314,
	401, 1314,
	402, 1314,
	403, 1314,
	404, 1314,
	406, 1314,
	408, 1314,
	409, 1314,
	410, 1314,
	416, 1314,
	418, 1314,
	419, 1314,
	420, 1314,
	421, 1314,
	422, 1314,
	423, 1314,
	424, 1314,
	425, 1314,
	426, 1314,
	427, 1314,
	429, 1314,
	430, 1314,
	431, 1314,
	433, 1314,
	434, 1314,
	435, 1314,
	436, 1314,
	437, 1314,
	438, 1314,
	439, 1314,
	441, 1314,
	442, 1314,
	443, 1314,
	444, 1314,
	445, 1314,
	446, 1314,
	447, 1314,
	448, 1314,
	449, 1314,
	450, 1314,
	451, 1314,
	452, 1314,
	454, 1314,
	455, 1314,
	456, 1314,
	457, 1314,
	458, 1314,
	459, 1314,
	461, 1314,
	462, 1314,
	463, 1314,
	464, 1314,
	465, 1314,
	466, 1314,
	468, 1314,
	469, 1314,
	470, 1314,
	471, 1314,
	472, 1314,
	473, 1314,
	474, 1314,
	475, 1314,
	477, 1314,
	479, 1314,
	480, 1314,
	481, 1314,
	482, 1314,
	483, 1314,
	484, 1314,
	485, 1314,
	486, 1314,
	487, 1314,
	488, 1314,
	489, 1314,
	490, 1314,
	491, 1314,
	492, 1314,
	493, 1314,
	494, 1314,
	496, 1314,
	497, 1314,
	499, 1314,
	500, 1314,
	502, 1314,
	503, 1314,
	504, 1314,
	505, 1314,
	506, 1314,
	507, 1314,
	508, 1314,
	509, 1314,
	510, 1314,
	512, 1314,
	513, 1314,
	514, 1314,
	515, 1314,
	516, 1314,
	518, 1314,
	520, 1314,
	521, 1314,
	522, 1314,
	523, 1314,
	524, 1314,
	525, 1314,
	527, 1314,
	528, 1314,
	529, 1314,
	530, 1314,
	532, 1314,
	533, 1314,
	536, 1314,
	537, 1314,
	538, 1314,
	539, 1314,
	540, 1314,
	541, 1314,
	542, 1314,
	544, 1314,
	547, 1314,
	548, 1314,
	549, 1314,
	550, 1314,
	551, 1314,
	552, 1314,
	554, 1314,
	555, 1314,
	556, 1314,
	557, 1314,
	559, 1314,
	564, 1314,
	565, 1314,
	566, 1314,
	567, 1314,
	568, 1314,
	569, 1314,
	-2, 0,
	-1, 762,
	187, 2378,
	517, 2378,
	582, 2378,
	601, 2378,
	-2, 0,
	-1, 763,
	187, 2365,
	517, 2365,
	582, 2365,
	601, 2365,
	-2, 0,
	-1, 765,
	187, 2624,
	517, 2624,
	582, 2624,
	601, 2624,
	-2, 0,
	-1, 768,
	187, 2486,
	517, 2486,
	582, 2486,
	601, 2486,
	-2, 0,
	-1, 769,
	187, 2665,
	517, 2665,
	582, 2665,
	601, 2665,
	-2, 0,
	-1, 777,
	187, 2513,
	517, 2513,
	582, 2513,
	601, 2513,
	-2, 704,
	-1, 812,
	601, 2314,
	604, 2314,
	-2, 999,
	-1, 813,
	601, 2316,
	604, 2316,
	-2, 1000,
	-1, 814,
	601, 2315,
	604, 2315,
	-2, 1001,
	-1, 815,
	604, 2240,
	-2, 1002,
	-1, 838,
	183, 264,
	-2, 0,
	-1, 862,
	43, 2287,
	-2, 0,
	-1, 863,
	554, 1292,
	-2, 1071,
	-1, 879,
	4, 1720,
	21, 1720,
	22, 1720,
	23, 1720,
	24, 1720,
	25, 1720,
	26, 1720,
	27, 1720,
	29, 1720,
	30, 1720,
	36, 1720,
	41, 1720,
	42, 1720,
	44, 1720,
	45, 1720,
	46, 1720,
	47, 1720,
	48, 1720,
	49, 1720,
	50, 1720,
	51, 1720,
	53, 1720,
	54, 1720,
	55, 1720,
	56, 1720,
	58, 1720,
	59, 1720,
	60, 1720,
	61, 1720,
	62, 1720,
	63, 1720,
	64, 1720,
	68, 1720,
	69, 1720,
	70, 1720,
	71, 1720,
	73, 1720,
	74, 1720,
	75, 1720,
	79, 1720,
	80, 1720,
	81, 1720,
	82, 1720,
	83, 1720,
	84, 1720,
	85, 1720,
	88, 1720,
	89, 1720,
	90, 1720,
	91, 1720,
	92, 1720,
	94, 1720,
	96, 1720,
	97, 1720,
	98, 1720,
	99, 1720,
	100, 1720,
	101, 1720,
	103, 1720,
	104, 1720,
	105, 1720,
	107, 1720,
	108, 1720,
	109, 1720,
	117, 1720,
	118, 1720,
	119, 1720,
	120, 1720,
	121, 1720,
	123, 1720,
	124, 1720,
	125, 1720,
	126, 1720,
	128, 1720,
	129, 1720,
	130, 1720,
	132, 1720,
	133, 1720,
	134, 1720,
	136, 1720,
	137, 1720,
	138, 1720,
	141, 1720,
	142, 1720,
	143, 1720,
	145, 1720,
	146, 1720,
	148, 1720,
	149, 1720,
	150, 1720,
	152, 1720,
	153, 1720,
	154, 1720,
	155, 1720,
	156, 1720,
	157, 1720,
	158, 1720,
	159, 1720,
	160, 1720,
	161, 1720,
	162, 1720,
	163, 1720,
	164, 1720,
	165, 1720,
	166, 1720,
	167, 1720,
	169, 1720,
	175, 1720,
	176, 1720,
	177, 1720,
	178, 1720,
	182, 1720,
	184, 1720,
	185, 1720,
	189, 1720,
	190, 1720,
	191, 1720,
	192, 1720,
	193, 1720,
	194, 1720,
	195, 1720,
	196, 1720,
	197, 1720,
	198, 1720,
	199, 1720,
	200, 1720,
	201, 1720,
	202, 1720,
	204, 1720,
	205, 1720,
	207, 1720,
	208, 1720,
	210, 1720,
	211, 1720,
	212, 1720,
	213, 1720,
	214, 1720,
	215, 1720,
	216, 1720,
	217, 1720,
	218, 1720,
	220, 1720,
	221, 1720,
	223, 1720,
	224, 1720,
	225, 1720,
	226, 1720,
	227, 1720,
	231, 1720,
	232, 1720,
	233, 1720,
	234, 1720,
	235, 1720,
	238, 1720,
	239, 1720,
	240, 1720,
	242, 1720,
	244, 1720,
	245, 1720,
	247, 1720,
	249, 1720,
	250, 1720,
	251, 1720,
	253, 1720,
	257, 1720,
	258, 1720,
	259, 1720,
	260, 1720,
	261, 1720,
	262, 1720,
	264, 1720,
	265, 1720,
	266, 1720,
	268, 1720,
	269, 1720,
	271, 1720,
	272, 1720,
	275, 1720,
	279, 1720,
	280, 1720,
	281, 1720,
	284, 1720,
	285, 1720,
	286, 1720,
	287, 1720,
	289, 1720,
	290, 1720,
	291, 1720,
	292, 1720,
	293, 1720,
	294, 1720,
	295, 1720,
	296, 1720,
	297, 1720,
	298, 1720,
	299, 1720,
	300, 1720,
	301, 1720,
	302, 1720,
	303, 1720,
	304, 1720,
	305, 1720,
	306, 1720,
	307, 1720,
	308, 1720,
	309, 1720,
	310, 1720,
	312, 1720,
	314, 1720,
	315, 1720,
	316, 1720,
	317, 1720,
	318, 1720,
	319, 1720,
	320, 1720,
	321, 1720,
	322, 1720,
	323, 1720,
	324, 1720,
	325, 1720,
	326, 1720,
	327, 1720,
	329, 1720,
	330, 1720,
	332, 1720,
	334, 1720,
	335, 1720,
	337, 1720,
	338, 1720,
	339, 1720,
	340, 1720,
	341, 1720,
	344, 1720,
	348, 1720,
	349, 1720,
	350, 1720,
	353, 1720,
	354, 1720,
	355, 1720,
	357, 1720,
	359, 1720,
	360, 1720,
	361, 1720,
	362, 1720,
	363, 1720,
	364, 1720,
	365, 1720,
	366, 1720,
	367, 1720,
	368, 1720,
	369, 1720,
	370, 1720,
	371, 1720,
	373, 1720,
	374, 1720,
	375, 1720,
	376, 1720,
	377, 1720,
	378, 1720,
	379, 1720,
	380, 1720,
	381, 1720,
	382, 1720,
	383, 1720,
	384, 1720,
	385, 1720,
	386, 1720,
	387, 1720,
	389, 1720,
	390, 1720,
	392, 1720,
	393, 1720,
	394, 1720,
	395, 1720,
	396, 1720,
	397, 1720,
	398, 1720,
	399, 1720,
	400, 1720,
	401, 1720,
	402, 1720,
	403, 1720,
	404, 1720,
	406, 1720,
	408, 1720,
	409, 1720,
	410, 1720,
	416, 1720,
	418, 1720,
	419, 1720,
	420, 1720,
	421, 1720,
	422, 1720,
	423, 1720,
	424, 1720,
	425, 1720,
	426, 1720,
	427, 1720,
	429, 1720,
	430, 1720,
	431, 1720,
	433, 1720,
	434, 1720,
	435, 1720,
	436, 1720,
	437, 1720,
	438, 1720,
	439, 1720,
	441, 1720,
	442, 1720,
	443, 1720,
	444, 1720,
	445, 1720,
	446, 1720,
	447, 1720,
	448, 1720,
	449, 1720,
	450, 1720,
	451, 1720,
	452, 1720,
	454, 1720,
	455, 1720,
	456, 1720,
	457, 1720,
	458, 1720,
	459, 1720,
	461, 1720,
	462, 1720,
	463, 1720,
	464, 1720,
	465, 1720,
	466, 1720,
	468, 1720,
	469, 1720,
	470, 1720,
	471, 1720,
	472, 1720,
	473, 1720,
	474, 1720,
	475, 1720,
	477, 1720,
	479, 1720,
	480, 1720,
	481, 1720,
	482, 1720,
	483, 1720,
	484, 1720,
	485, 1720,
	486, 1720,
	487, 1720,
	488, 1720,
	489, 1720,
	490, 1720,
	491, 1720,
	492, 1720,
	493, 1720,
	494, 1720,
	496, 1720,
	497, 1720,
	499, 1720,
	500, 1720,
	502, 1720,
	503, 1720,
	504, 1720,
	505, 1720,
	506, 1720,
	507, 1720,
	508, 1720,
	509, 1720,
	510, 1720,
	512, 1720,
	513, 1720,
	514, 1720,
	515, 1720,
	516, 1720,
	518, 1720,
	520, 1720,
	521, 1720,
	522, 1720,
	523, 1720,
	524, 1720,
	525, 1720,
	527, 1720,
	528, 1720,
	529, 1720,
	530, 1720,
	532, 1720,
	533, 1720,
	536, 1720,
	537, 1720,
	538, 1720,
	539, 1720,
	540, 1720,
	541, 1720,
	542, 1720,
	544, 1720,
	547, 1720,
	548, 1720,
	549, 1720,
	550, 1720,
	551, 1720,
	552, 1720,
	554, 1720,
	555, 1720,
	556, 1720,
	557, 1720,
	559, 1720,
	564, 1720,
	565, 1720,
	566, 1720,
	567, 1720,
	568, 1720,
	569, 1720,
	-2, 0,
	-1, 889,
	261, 410,
	-2, 0,
	-1, 962,
	394, 881,
	459, 881,
	500, 881,
	522, 881,
	-2, 0,
	-1, 963,
	394, 880,
	459, 880,
	500, 880,
	522, 880,
	-2, 814,
	-1, 967,
	1, 933,
	598, 933,
	600, 933,
	602, 933,
	-2, 0,
	-1, 969,
	1, 855,
	598, 855,
	600, 855,
	602, 855,
	-2, 0,
	-1, 970,
	1, 859,
	598, 859,
	600, 859,
	602, 859,
	-2, 0,
	-1, 971,
	1, 998,
	183, 998,
	598, 998,
	600, 998,
	602, 998,
	-2, 0,
	-1, 979,
	1, 886,
	598, 886,
	600, 886,
	602, 886,
	-2, 0,
	-1, 986,
	1, 933,
	598, 933,
	600, 933,
	602, 933,
	-2, 0,
	-1, 987,
	1, 935,
	598, 935,
	600, 935,
	602, 935,
	-2, 0,
	-1, 988,
	1, 938,
	598, 938,
	600, 938,
	602, 938,
	-2, 0,
	-1, 994,
	1, 962,
	598, 962,
	600, 962,
	602, 962,
	-2, 0,
	-1, 995,
	1, 964,
	598, 964,
	600, 964,
	602, 964,
	-2, 0,
	-1, 1000,
	1, 992,
	598, 992,
	600, 992,
	602, 992,
	-2, 0,
	-1, 1052,
	170, 1593,
	183, 1593,
	274, 1593,
	342, 1593,
	-2, 1529,
	-1, 1067,
	170, 1592,
	183, 1592,
	274, 1592,
	342, 1592,
	-2, 1526,
	-1, 1094,
	601, 2313,
	-2, 712,
	-1, 1123,
	5, 2305,
	599, 2303,
	-2, 2294,
	-1, 1131,
	5, 2326,
	599, 2323,
	-2, 2314,
	-1, 1132,
	5, 2327,
	599, 2324,
	-2, 2315,
	-1, 1140,
	601, 2311,
	-2, 2293,
	-1, 1141,
	599, 2748,
	-2, 2312,
	-1, 1164,
	599, 2747,
	-2, 2328,
	-1, 1165,
	5, 1795,
	-2, 2718,
	-1, 1166,
	5, 1796,
	-2, 2719,
	-1, 1167,
	5, 1797,
	-2, 2733,
	-1, 1168,
	5, 1798,
	-2, 2697,
	-1, 1169,
	5, 1799,
	-2, 2731,
	-1, 1170,
	5, 1807,
	-2, 2710,
	-1, 1171,
	5, 1794,
	-2, 2706,
	-1, 1172,
	5, 1794,
	-2, 2705,
	-1, 1173,
	5, 1794,
	-2, 2724,
	-1, 1174,
	5, 1805,
	-2, 2699,
	-1, 1175,
	5, 1810,
	-2, 2698,
	-1, 1176,
	5, 1812,
	-2, 2743,
	-1, 1179,
	5, 1834,
	-2, 2736,
	-1, 1180,
	5, 1826,
	-2, 2737,
	-1, 1181,
	5, 1834,
	-2, 2738,
	-1, 1182,
	5, 1830,
	-2, 2739,
	-1, 1183,
	5, 1780,
	-2, 2711,
	-1, 1184,
	5, 1781,
	-2, 2712,
	-1, 1185,
	5, 1782,
	-2, 2700,
	-1, 1213,
	5, 1817,
	-2, 2744,
	-1, 1214,
	5, 1818,
	-2, 2734,
	-1, 1215,
	5, 1819,
	555, 1819,
	-2, 2701,
	-1, 1216,
	5, 1820,
	555, 1820,
	-2, 2702,
	-1, 1253,
	599, 2323,
	-2, 2314,
	-1, 1254,
	599, 2324,
	-2, 2315,
	-1, 1355,
	187, 2665,
	517, 2665,
	582, 2665,
	601, 2665,
	-2, 0,
	-1, 1360,
	1, 689,
	602, 689,
	-2, 1441,
	-1, 1489,
	361, 2288,
	418, 2288,
	461, 2288,
	592, 2288,
	-2, 2278,
	-1, 1500,
	603, 2288,
	-2, 2290,
	-1, 1508,
	1, 1289,
	423, 1253,
	461, 1253,
	576, 1253,
	598, 1289,
	600, 1289,
	602, 1289,
	-2, 1578,
	-1, 1514,
	203, 1386,
	222, 1386,
	431, 1386,
	-2, 0,
	-1, 1560,
	402, 1070,
	554, 1070,
	-2, 405,
	-1, 1577,
	43, 2286,
	-2, 1036,
	-1, 1584,
	1, 1289,
	598, 1289,
	600, 1289,
	602, 1289,
	-2, 1578,
	-1, 1592,
	4, 1314,
	21, 1314,
	22, 1314,
	23, 1314,
	24, 1314,
	25, 1314,
	26, 1314,
	27, 1314,
	29, 1314,
	30, 1314,
	36, 1314,
	41, 1314,
	42, 1314,
	44, 1314,
	45, 1314,
	46, 1314,
	47, 1314,
	48, 1314,
	49, 1314,
	50, 1314,
	51, 1314,
	53, 1314,
	54, 1314,
	55, 1314,
	56, 1314,
	58, 1314,
	59, 1314,
	60, 1314,
	61, 1314,
	62, 1314,
	63, 1314,
	64, 1314,
	68, 1314,
	69, 1314,
	70, 1314,
	71, 1314,
	73, 1314,
	74, 1314,
	75, 1314,
	79, 1314,
	80, 1314,
	81, 1314,
	82, 1314,
	83, 1314,
	84, 1314,
	85, 1314,
	88, 1314,
	89, 1314,
	90, 1314,
	91, 1314,
	92, 1314,
	94, 1314,
	96, 1314,
	97, 1314,
	98, 1314,
	99, 1314,
	100, 1314,
	101, 1314,
	103, 1314,
	104, 1314,
	105, 1314,
	107, 1314,
	108, 1314,
	109, 1314,
	117, 1314,
	118, 1314,
	119, 1314,
	120, 1314,
	121, 1314,
	123, 1314,
	124, 1314,
	125, 1314,
	126, 1314,
	128, 1314,
	129, 1314,
	130, 1314,
	132, 1314,
	133, 1314,
	134, 1314,
	136, 1314,
	137, 1314,
	138, 1314,
	141, 1314,
	142, 1314,
	143, 1314,
	145, 1314,
	146, 1314,
	148, 1314,
	149, 1314,
	150, 1314,
	152, 1314,
	153, 1314,
	154, 1314,
	155, 1314,
	156, 1314,
	157, 1314,
	158, 1314,
	159, 1314,
	160, 1314,
	161, 1314,
	162, 1314,
	163, 1314,
	164, 1314,
	165, 1314,
	166, 1314,
	167, 1314,
	175, 1314,
	176, 1314,
	177, 1314,
	178, 1314,
	182, 1314,
	184, 1314,
	185, 1314,
	189, 1314,
	190, 1314,
	191, 1314,
	192, 1314,
	193, 1314,
	194, 1314,
	195, 1314,
	196, 1314,
	197, 1314,
	198, 1314,
	199, 1314,
	200, 1314,
	201, 1314,
	202, 1314,
	204, 1314,
	205, 1314,
	207, 1314,
	208, 1314,
	210, 1314,
	211, 1314,
	212, 1314,
	213, 1314,
	214, 1314,
	215, 1314,
	216, 1314,
	217, 1314,
	218, 1314,
	220, 1314,
	221, 1314,
	223, 1314,
	224, 1314,
	225, 1314,
	226, 1314,
	227, 1314,
	232, 1314,
	233, 1314,
	234, 1314,
	235, 1314,
	238, 1314,
	239, 1314,
	240, 1314,
	242, 1314,
	244, 1314,
	245, 1314,
	247, 1314,
	249, 1314,
	250, 1314,
	251, 1314,
	253, 1314,
	257, 1314,
	258, 1314,
	259, 1314,
	260, 1314,
	261, 1314,
	262, 1314,
	264, 1314,
	265, 1314,
	266, 1314,
	268, 1314,
	269, 1314,
	271, 1314,
	272, 1314,
	275, 1314,
	279, 1314,
	280, 1314,
	281, 1314,
	284, 1314,
	285, 1314,
	286, 1314,
	287, 1314,
	289, 1314,
	290, 1314,
	291, 1314,
	292, 1314,
	293, 1314,
	294, 1314,
	295, 1314,
	296, 1314,
	297, 1314,
	298, 1314,
	299, 1314,
	300, 1314,
	301, 1314,
	302, 1314,
	303, 1314,
	304, 1314,
	305, 1314,
	306, 1314,
	307, 1314,
	308, 1314,
	309, 1314,
	310, 1314,
	312, 1314,
	314, 1314,
	315, 1314,
	316, 1314,
	317, 1314,
	318, 1314,
	319, 1314,
	320, 1314,
	321, 1314,
	322, 1314,
	323, 1314,
	324, 1314,
	325, 1314,
	326, 1314,
	327, 1314,
	329, 1314,
	330, 1314,
	334, 1314,
	335, 1314,
	337, 1314,
	338, 1314,
	339, 1314,
	340, 1314,
	341, 1314,
	344, 1314,
	346, 1314,
	348, 1314,
	349, 1314,
	350, 1314,
	353, 1314,
	354, 1314,
	355, 1314,
	357, 1314,
	359, 1314,
	360, 1314,
	361, 1314,
	362, 1314,
	363, 1314,
	364, 1314,
	365, 1314,
	366, 1314,
	367, 1314,
	368, 1314,
	369, 1314,
	370, 1314,
	371, 1314,
	373, 1314,
	374, 1314,
	375, 1314,
	376, 1314,
	377, 1314,
	378, 1314,
	379, 1314,
	380, 1314,
	381, 1314,
	382, 1314,
	383, 1314,
	384, 1314,
	385, 1314,
	386, 1314,
	387, 1314,
	389, 1314,
	390, 1314,
	392, 1314,
	393, 1314,
	394, 1314,
	395, 1314,
	396, 1314,
	397, 1314,
	398, 1314,
	399, 1314,
	400, 1314,
	401, 1314,
	402, 1314,
	403, 1314,
	404, 1314,
	406, 1314,
	408, 1314,
	409, 1314,
	410, 1314,
	416, 1314,
	418, 1314,
	419, 1314,
	420, 1314,
	421, 1314,
	422, 1314,
	423, 1314,
	424, 1314,
	425, 1314,
	426, 1314,
	427, 1314,
	429, 1314,
	430, 1314,
	431, 1314,
	433, 1314,
	434, 1314,
	435, 1314,
	436, 1314,
	437, 1314,
	438, 1314,
	439, 1314,
	441, 1314,
	442, 1314,
	443, 1314,
	444, 1314,
	445, 1314,
	446, 1314,
	447, 1314,
	448, 1314,
	449, 1314,
	450, 1314,
	451, 1314,
	452, 1314,
	454, 1314,
	455, 1314,
	456, 1314,
	457, 1314,
	458, 1314,
	459, 1314,
	461, 1314,
	462, 1314,
	463, 1314,
	464, 1314,
	465, 1314,
	466, 1314,
	468, 1314,
	469, 1314,
	470, 1314,
	471, 1314,
	472, 1314,
	473, 1314,
	474, 1314,
	475, 1314,
	477, 1314,
	479, 1314,
	480, 1314,
	481, 1314,
	482, 1314,
	483, 1314,
	484, 1314,
	485, 1314,
	486, 1314,
	487, 1314,
	488, 1314,
	489, 1314,
	490, 1314,
	491, 1314,
	492, 1314,
	493, 1314,
	494, 1314,
	496, 1314,
	497, 1314,
	499, 1314,
	500, 1314,
	502, 1314,
	503, 1314,
	504, 1314,
	505, 1314,
	506, 1314,
	507, 1314,
	508, 1314,
	509, 1314,
	510, 1314,
	512, 1314,
	513, 1314,
	514, 1314,
	515, 1314,
	516, 1314,
	518, 1314,
	520, 1314,
	521, 1314,
	522, 1314,
	523, 1314,
	524, 1314,
	525, 1314,
	527, 1314,
	528, 1314,
	529, 1314,
	530, 1314,
	532, 1314,
	533, 1314,
	536, 1314,
	537, 1314,
	538, 1314,
	539, 1314,
	540, 1314,
	541, 1314,
	542, 1314,
	544, 1314,
	547, 1314,
	548, 1314,
	549, 1314,
	550, 1314,
	551, 1314,
	552, 1314,
	554, 1314,
	555, 1314,
	556, 1314,
	557, 1314,
	559, 1314,
	564, 1314,
	565, 1314,
	566, 1314,
	567, 1314,
	568, 1314,
	569, 1314,
	-2, 0,
	-1, 1615,
	1, 550,
	598, 550,
	600, 550,
	602, 550,
	-2, 1549,
	-1, 1618,
	4, 2742,
	11, 2742,
	12, 2742,
	14, 2742,
	15, 2742,
	16, 2742,
	17, 2742,
	18, 2742,
	19, 2742,
	21, 2742,
	22, 2742,
	23, 2742,
	24, 2742,
	25, 2742,
	26, 2742,
	27, 2742,
	29, 2742,
	30, 2742,
	33, 2742,
	34, 2742,
	36, 2742,
	38, 2742,
	41, 2742,
	42, 2742,
	44, 2742,
	45, 2742,
	46, 2742,
	47, 2742,
	48, 2742,
	49, 2742,
	50, 2742,
	51, 2742,
	53, 2742,
	54, 2742,
	55, 2742,
	56, 2742,
	58, 2742,
	59, 2742,
	60, 2742,
	61, 2742,
	62, 2742,
	63, 2742,
	64, 2742,
	67, 2742,
	68, 2742,
	69, 2742,
	70, 2742,
	71, 2742,
	73, 2742,
	74, 2742,
	75, 2742,
	76, 2742,
	79, 2742,
	80, 2742,
	81, 2742,
	82, 2742,
	83, 2742,
	84, 2742,
	85, 2742,
	86, 2742,
	88, 2742,
	89, 2742,
	90, 2742,
	91, 2742,
	92, 2742,
	94, 2742,
	95, 2742,
	96, 2742,
	97, 2742,
	98, 2742,
	99, 2742,
	100, 2742,
	101, 2742,
	103, 2742,
	104, 2742,
	105, 2742,
	106, 2742,
	107, 2742,
	108, 2742,
	109, 2742,
	117, 2742,
	118, 2742,
	119, 2742,
	120, 2742,
	121, 2742,
	123, 2742,
	124, 2742,
	125, 2742,
	126, 2742,
	128, 2742,
	129, 2742,
	130, 2742,
	132, 2742,
	133, 2742,
	134, 2742,
	136, 2742,
	137, 2742,
	138, 2742,
	141, 2742,
	142, 2742,
	143, 2742,
	145, 2742,
	146, 2742,
	148, 2742,
	149, 2742,
	150, 2742,
	152, 2742,
	153, 2742,
	154, 2742,
	155, 2742,
	156, 2742,
	157, 2742,
	158, 2742,
	159, 2742,
	160, 2742,
	161, 2742,
	162, 2742,
	163, 2742,
	164, 2742,
	165, 2742,
	166, 2742,
	167, 2742,
	171, 2742,
	172, 2742,
	173, 2742,
	174, 2742,
	175, 2742,
	176, 2742,
	177, 2742,
	178, 2742,
	181, 2742,
	182, 2742,
	184, 2742,
	185, 2742,
	188, 2742,
	189, 2742,
	190, 2742,
	191, 2742,
	192, 2742,
	193, 2742,
	194, 2742,
	195, 2742,
	196, 2742,
	197, 2742,
	198, 2742,
	199, 2742,
	200, 2742,
	201, 2742,
	202, 2742,
	204, 2742,
	205, 2742,
	207, 2742,
	208, 2742,
	210, 2742,
	211, 2742,
	212, 2742,
	213, 2742,
	214, 2742,
	215, 2742,
	216, 2742,
	217, 2742,
	218, 2742,
	219, 2742,
	220, 2742,
	221, 2742,
	222, 2742,
	223, 2742,
	224, 2742,
	225, 2742,
	226, 2742,
	227, 2742,
	229, 2742,
	230, 2742,
	232, 2742,
	233, 2742,
	234, 2742,
	235, 2742,
	237, 2742,
	238, 2742,
	239, 2742,
	240, 2742,
	242, 2742,
	244, 2742,
	245, 2742,
	246, 2742,
	247, 2742,
	248, 2742,
	249, 2742,
	250, 2742,
	251, 2742,
	252, 2742,
	253, 2742,
	255, 2742,
	256, 2742,
	257, 2742,
	258, 2742,
	259, 2742,
	260, 2742,
	261, 2742,
	262, 2742,
	264, 2742,
	265, 2742,
	266, 2742,
	268, 2742,
	269, 2742,
	270, 2742,
	271, 2742,
	272, 2742,
	273, 2742,
	275, 2742,
	279, 2742,
	280, 2742,
	281, 2742,
	284, 2742,
	285, 2742,
	286, 2742,
	287, 2742,
	288, 2742,
	289, 2742,
	290, 2742,
	291, 2742,
	292, 2742,
	293, 2742,
	294, 2742,
	295, 2742,
	296, 2742,
	297, 2742,
	298, 2742,
	299, 2742,
	300, 2742,
	301, 2742,
	302, 2742,
	303, 2742,
	304, 2742,
	305, 2742,
	306, 2742,
	307, 2742,
	308, 2742,
	309, 2742,
	310, 2742,
	312, 2742,
	313, 2742,
	314, 2742,
	315, 2742,
	316, 2742,
	317, 2742,
	318, 2742,
	319, 2742,
	320, 2742,
	321, 2742,
	322, 2742,
	323, 2742,
	324, 2742,
	325, 2742,
	326, 2742,
	327, 2742,
	329, 2742,
	330, 2742,
	333, 2742,
	334, 2742,
	335, 2742,
	337, 2742,
	338, 2742,
	339, 2742,
	340, 2742,
	341, 2742,
	344, 2742,
	348, 2742,
	349, 2742,
	350, 2742,
	351, 2742,
	353, 2742,
	354, 2742,
	355, 2742,
	357, 2742,
	359, 2742,
	360, 2742,
	361, 2742,
	362, 2742,
	363, 2742,
	364, 2742,
	365, 2742,
	366, 2742,
	367, 2742,
	368, 2742,
	369, 2742,
	370, 2742,
	371, 2742,
	373, 2742,
	374, 2742,
	375, 2742,
	376, 2742,
	377, 2742,
	378, 2742,
	379, 2742,
	380, 2742,
	381, 2742,
	382, 2742,
	383, 2742,
	384, 2742,
	385, 2742,
	386, 2742,
	387, 2742,
	389, 2742,
	390, 2742,
	392, 2742,
	393, 2742,
	394, 2742,
	395, 2742,
	396, 2742,
	397, 2742,
	398, 2742,
	399, 2742,
	400, 2742,
	401, 2742,
	402, 2742,
	403, 2742,
	404, 2742,
	406, 2742,
	408, 2742,
	409, 2742,
	410, 2742,
	416, 2742,
	417, 2742,
	418, 2742,
	419, 2742,
	420, 2742,
	421, 2742,
	422, 2742,
	423, 2742,
	424, 2742,
	425, 2742,
	426, 2742,
	427, 2742,
	429, 2742,
	430, 2742,
	431, 2742,
	432, 2742,
	433, 2742,
	434, 2742,
	435, 2742,
	436, 2742,
	437, 2742,
	438, 2742,
	439, 2742,
	440, 2742,
	441, 2742,
	442, 2742,
	443, 2742,
	444, 2742,
	445, 2742,
	446, 2742,
	447, 2742,
	448, 2742,
	449, 2742,
	450, 2742,
	451, 2742,
	452, 2742,
	454, 2742,
	455, 2742,
	456, 2742,
	457, 2742,
	458, 2742,
	459, 2742,
	461, 2742,
	462, 2742,
	463, 2742,
	464, 2742,
	465, 2742,
	466, 2742,
	467, 2742,
	468, 2742,
	469, 2742,
	470, 2742,
	471, 2742,
	472, 2742,
	473, 2742,
	474, 2742,
	475, 2742,
	477, 2742,
	479, 2742,
	480, 2742,
	481, 2742,
	482, 2742,
	483, 2742,
	484, 2742,
	485, 2742,
	486, 2742,
	487, 2742,
	488, 2742,
	489, 2742,
	490, 2742,
	491, 2742,
	492, 2742,
	493, 2742,
	494, 2742,
	496, 2742,
	497, 2742,
	498, 2742,
	499, 2742,
	500, 2742,
	502, 2742,
	503, 2742,
	504, 2742,
	505, 2742,
	506, 2742,
	507, 2742,
	508, 2742,
	509, 2742,
	510, 2742,
	512, 2742,
	513, 2742,
	514, 2742,
	515, 2742,
	516, 2742,
	518, 2742,
	520, 2742,
	521, 2742,
	522, 2742,
	523, 2742,
	524, 2742,
	525, 2742,
	527, 2742,
	528, 2742,
	529, 2742,
	530, 2742,
	532, 2742,
	533, 2742,
	536, 2742,
	537, 2742,
	538, 2742,
	539, 2742,
	540, 2742,
	541, 2742,
	542, 2742,
	544, 2742,
	547, 2742,
	548, 2742,
	549, 2742,
	550, 2742,
	551, 2742,
	552, 2742,
	554, 2742,
	555, 2742,
	556, 2742,
	557, 2742,
	559, 2742,
	564, 2742,
	565, 2742,
	566, 2742,
	567, 2742,
	568, 2742,
	569, 2742,
	570, 2742,
	572, 2742,
	580, 2742,
	581, 2742,
	582, 2742,
	583, 2742,
	584, 2742,
	585, 2742,
	587, 2742,
	588, 2742,
	589, 2742,
	590, 2742,
	591, 2742,
	592, 2742,
	593, 2742,
	594, 2742,
	595, 2742,
	597, 2742,
	600, 2742,
	601, 2742,
	603, 2742,
	604, 2742,
	-2, 0,
	-1, 1623,
	187, 2624,
	517, 2624,
	582, 2624,
	601, 2624,
	-2, 0,
	-1, 1672,
	394, 881,
	459, 881,
	500, 881,
	522, 881,
	-2, 0,
	-1, 1683,
	1, 1386,
	598, 1386,
	600, 1386,
	602, 1386,
	-2, 0,
	-1, 1700,
	1, 876,
	598, 876,
	600, 876,
	602, 876,
	-2, 0,
	-1, 1701,
	1, 920,
	598, 920,
	600, 920,
	602, 920,
	-2, 0,
	-1, 1702,
	1, 928,
	598, 928,
	600, 928,
	602, 928,
	-2, 0,
	-1, 1705,
	1, 885,
	598, 885,
	600, 885,
	602, 885,
	-2, 0,
	-1, 1707,
	1, 891,
	598, 891,
	600, 891,
	602, 891,
	-2, 0,
	-1, 1710,
	1, 887,
	598, 887,
	600, 887,
	602, 887,
	-2, 0,
	-1, 1715,
	1, 901,
	598, 901,
	600, 901,
	602, 901,
	-2, 0,
	-1, 1746,
	1, 2607,
	598, 2607,
	600, 2607,
	601, 2607,
	602, 2607,
	-2, 0,
	-1, 1750,
	1, 973,
	598, 973,
	600, 973,
	602, 973,
	-2, 0,
	-1, 1765,
	1, 1436,
	602, 1436,
	-2, 1441,
	-1, 1768,
	170, 1592,
	183, 1592,
	274, 1592,
	342, 1592,
	-2, 1530,
	-1, 1868,
	151, 1551,
	170, 1551,
	183, 1551,
	241, 1551,
	274, 1551,
	342, 1551,
	352, 1551,
	534, 1551,
	-2, 1999,
	-1, 1929,
	600, 2174,
	-2, 0,
	-1, 1964,
	151, 1551,
	170, 1551,
	183, 1551,
	241, 1551,
	274, 1551,
	342, 1551,
	352, 1551,
	534, 1551,
	-2, 1681,
	-1, 2001,
	517, 2621,
	601, 2621,
	604, 2621,
	-2, 0,
	-1, 2018,
	599, 1822,
	-2, 1810,
	-1, 2050,
	187, 2621,
	601, 2621,
	604, 2621,
	-2, 0,
	-1, 2092,
	1, 691,
	602, 691,
	-2, 1441,
	-1, 2232,
	222, 259,
	-2, 2322,
	-1, 2233,
	222, 260,
	-2, 312,
	-1, 2340,
	1, 878,
	598, 878,
	600, 878,
	602, 878,
	-2, 0,
	-1, 2341,
	1, 922,
	598, 922,
	600, 922,
	602, 922,
	-2, 0,
	-1, 2342,
	1, 930,
	598, 930,
	600, 930,
	602, 930,
	-2, 0,
	-1, 2343,
	1, 975,
	598, 975,
	600, 975,
	602, 975,
	-2, 0,
	-1, 2384,
	1, 903,
	598, 903,
	600, 903,
	602, 903,
	-2, 0,
	-1, 2402,
	1, 958,
	598, 958,
	600, 958,
	602, 958,
	-2, 0,
	-1, 2447,
	438, 1619,
	439, 1619,
	-2, 1855,
	-1, 2478,
	14, 0,
	15, 0,
	16, 0,
	580, 0,
	581, 0,
	582, 0,
	-2, 1875,
	-1, 2479,
	14, 0,
	15, 0,
	16, 0,
	580, 0,
	581, 0,
	582, 0,
	-2, 1876,
	-1, 2480,
	95, 0,
	255, 0,
	256, 0,
	584, 0,
	585, 0,
	-2, 1877,
	-1, 2481,
	95, 0,
	255, 0,
	256, 0,
	584, 0,
	585, 0,
	-2, 1878,
	-1, 2482,
	95, 0,
	255, 0,
	256, 0,
	584, 0,
	585, 0,
	-2, 1879,
	-1, 2483,
	95, 0,
	255, 0,
	256, 0,
	584, 0,
	585, 0,
	-2, 1880,
	-1, 2484,
	95, 0,
	255, 0,
	256, 0,
	584, 0,
	585, 0,
	-2, 1881,
	-1, 2485,
	14, 0,
	15, 0,
	16, 0,
	580, 0,
	581, 0,
	582, 0,
	-2, 1882,
	-1, 2497,
	14, 0,
	15, 0,
	16, 0,
	580, 0,
	581, 0,
	582, 0,
	-2, 1894,
	-1, 2498,
	14, 0,
	15, 0,
	16, 0,
	580, 0,
	581, 0,
	582, 0,
	-2, 1895,
	-1, 2499,
	14, 0,
	15, 0,
	16, 0,
	580, 0,
	581, 0,
	582, 0,
	-2, 1896,
	-1, 2503,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	219, 0,
	222, 0,
	273, 0,
	467, 0,
	570, 0,
	583, 0,
	-2, 1903,
	-1, 2509,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	219, 0,
	222, 0,
	273, 0,
	467, 0,
	570, 0,
	583, 0,
	-2, 1907,
	-1, 2511,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	219, 0,
	222, 0,
	273, 0,
	467, 0,
	570, 0,
	583, 0,
	-2, 1915,
	-1, 2512,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	219, 0,
	222, 0,
	273, 0,
	467, 0,
	570, 0,
	583, 0,
	-2, 1916,
	-1, 2513,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	219, 0,
	222, 0,
	273, 0,
	467, 0,
	570, 0,
	583, 0,
	-2, 1917,
	-1, 2514,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	219, 0,
	222, 0,
	273, 0,
	467, 0,
	570, 0,
	583, 0,
	-2, 1918,
	-1, 2688,
	5, 2326,
	187, 2185,
	599, 2323,
	-2, 2314,
	-1, 2689,
	187, 2186,
	-2, 2693,
	-1, 2690,
	187, 2187,
	-2, 2512,
	-1, 2691,
	187, 2188,
	-2, 2396,
	-1, 2692,
	187, 2189,
	-2, 2452,
	-1, 2693,
	187, 2190,
	-2, 2497,
	-1, 2694,
	187, 2191,
	-2, 2619,
	-1, 2695,
	187, 2192,
	-2, 1982,
	-1, 2766,
	1, 1682,
	2, 1682,
	106, 1682,
	151, 1682,
	170, 1682,
	183, 1682,
	188, 1682,
	206, 1682,
	209, 1682,
	237, 1682,
	241, 1682,
	252, 1682,
	270, 1682,
	274, 1682,
	313, 1682,
	342, 1682,
	346, 1682,
	352, 1682,
	428, 1682,
	432, 1682,
	534, 1682,
	545, 1682,
	561, 1682,
	562, 1682,
	563, 1682,
	573, 1682,
	598, 1682,
	600, 1682,
	602, 1682,
	604, 1682,
	-2, 1681,
	-1, 2779,
	599, 2295,
	-2, 2309,
	-1, 2781,
	1, 329,
	561, 329,
	-2, 1578,
	-1, 2810,
	599, 1821,
	-2, 1811,
	-1, 2995,
	1, 1289,
	423, 1253,
	461, 1253,
	576, 1253,
	598, 1289,
	600, 1289,
	602, 1289,
	-2, 1578,
	-1, 3181,
	347, 1622,
	-2, 2732,
	-1, 3182,
	347, 1623,
	-2, 2604,
	-1, 3186,
	438, 2251,
	439, 2251,
	-2, 1980,
	-1, 3187,
	438, 2255,
	439, 2255,
	-2, 1981,
	-1, 3188,
	438, 2252,
	439, 2252,
	-2, 1980,
	-1, 3189,
	438, 2256,
	439, 2256,
	-2, 1981,
	-1, 3202,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	219, 0,
	222, 0,
	273, 0,
	467, 0,
	570, 0,
	583, 0,
	-2, 1905,
	-1, 3203,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	219, 0,
	222, 0,
	273, 0,
	467, 0,
	570, 0,
	583, 0,
	-2, 1909,
	-1, 3209,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	219, 0,
	222, 0,
	273, 0,
	467, 0,
	570, 0,
	583, 0,
	-2, 1911,
	-1, 3433,
	1, 686,
	598, 686,
	600, 686,
	602, 686,
	-2, 1441,
	-1, 3598,
	43, 2286,
	-2, 1037,
	-1, 3603,
	1, 1289,
	598, 1289,
	600, 1289,
	602, 1289,
	-2, 1578,
	-1, 3714,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	219, 0,
	222, 0,
	273, 0,
	467, 0,
	570, 0,
	583, 0,
	-2, 1913,
	-1, 3721,
	246, 0,
	248, 0,
	333, 0,
	-2, 1932,
	-1, 3789,
	14, 0,
	15, 0,
	16, 0,
	580, 0,
	581, 0,
	582, 0,
	-2, 1961,
	-1, 3790,
	14, 0,
	15, 0,
	16, 0,
	580, 0,
	581, 0,
	582, 0,
	-2, 1962,
	-1, 3791,
	14, 0,
	15, 0,
	16, 0,
	580, 0,
	581, 0,
	582, 0,
	-2, 1963,
	-1, 3795,
	14, 0,
	15, 0,
	16, 0,
	580, 0,
	581, 0,
	582, 0,
	-2, 1967,
	-1, 3796,
	14, 0,
	15, 0,
	16, 0,
	580, 0,
	581, 0,
	582, 0,
	-2, 1968,
	-1, 3797,
	14, 0,
	15, 0,
	16, 0,
	580, 0,
	581, 0,
	582, 0,
	-2, 1969,
	-1, 3844,
	599, 2296,
	-2, 2310,
	-1, 4018,
	601, 2850,
	-2, 1504,
	-1, 4079,
	246, 0,
	248, 0,
	333, 0,
	-2, 1933,
	-1, 4082,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	219, 0,
	222, 0,
	273, 0,
	467, 0,
	570, 0,
	583, 0,
	-2, 1936,
	-1, 4083,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	219, 0,
	222, 0,
	273, 0,
	467, 0,
	570, 0,
	583, 0,
	-2, 1938,
	-1, 4181,
	601, 2311,
	-2, 1324,
	-1, 4335,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	219, 0,
	222, 0,
	273, 0,
	467, 0,
	570, 0,
	583, 0,
	-2, 1937,
	-1, 4336,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	219, 0,
	222, 0,
	273, 0,
	467, 0,
	570, 0,
	583, 0,
	-2, 1939,
	-1, 4347,
	246, 0,
	-2, 1972,
	-1, 4534,
	246, 0,
	-2, 1973,
	-1, 4734,
	50, 0,
	219, 0,
	273, 0,
	467, 0,
	570, 0,
	583, 0,
	-2, 2696,
}

const sqlPrivate = 57344

const sqlLast = 132090

var sqlAct = [...]int{
	272, 4851, 3587, 3070, 4930, 3340, 4727, 4838, 2872, 4396,
	4726, 3083, 4792, 4733, 4744, 4456, 4567, 4715, 3586, 4603,
	4867, 4624, 4599, 2142, 4575, 4680, 4660, 4745, 4683, 4702,
	4062, 4463, 4746, 4805, 2229, 2941, 4378, 2916, 4487, 1523,
	3754, 1246, 4538, 4441, 4732, 4290, 4285, 4226, 4251, 4401,
	2457, 3706, 2305, 4356, 4324, 3620, 4272, 4002, 3040, 4010,
	4177, 4265, 4472, 703, 1327, 4178, 3454, 3938, 4274, 4158,
	1331, 3195, 3514, 1320, 2721, 814, 4501, 2526, 2074, 1257,
	1077, 1777, 4295, 3614, 2458, 3582, 3983, 2954, 3967, 2150,
	3965, 3457, 2465, 2278, 1394, 3571, 774, 2316, 3107, 3661,
	3026, 814, 4352, 3663, 3092, 3094, 1970, 3059, 1333, 3847,
	2061, 3564, 3363, 1639, 2005, 3355, 1486, 1068, 714, 3385,
	3563, 3323, 4118, 4061, 1322, 887, 4, 3085, 891, 3102,
	3346, 2314, 3071, 3054, 3056, 3091, 2216, 1939, 2218, 3344,
	3002, 4839, 2177, 1076, 179, 3476, 2161, 2874, 2758, 1915,
	4539, 3322, 2759, 2604, 2462, 1876, 1846, 2539, 3179, 1493,
	809, 3815, 3451, 882, 2761, 2217, 770, 3101, 1325, 2006,
	1237, 1134, 1579, 266, 2971, 3030, 2212, 2193, 2915, 2200,
	2130, 2134, 3041, 1375, 3036, 1127, 2072, 2739, 1299, 1765,
	1940, 1988, 1132, 2523, 1959, 2595, 2120, 2446, 3392, 2718,
	265, 2427, 1680, 2429, 747, 1637, 3584, 2793, 1616, 3064,
	2265, 1582, 2897, 1362, 690, 956, 2606, 815, 712, 816,
	811, 4625, 2792, 3095, 3959, 2598, 2860, 1240, 1910, 1956,
	2748, 1219, 2576, 2684, 1949, 2729, 1860, 179, 1778, 1254,
	1310, 2650, 1779, 188, 2428, 189, 2264, 2430, 820, 1700,
	1715, 755, 2226, 766, 1607, 1236, 2149, 1518, 2291, 4793,
	4852, 1614, 2451, 1108, 707, 3037, 44, 43, 41, 32,
	30, 28, 1217, 730, 820, 823, 1784, 704, 804, 715,
	863, 1242, 3232, 1529, 1764, 1123, 977, 3829, 3226, 3830,
	4943, 3342, 864, 4371, 2738, 2063, 4773, 108, 2063, 4933,
	2063, 823, 4368, 3639, 4917, 1072, 2063, 2063, 2738, 2063,
	4916, 4906, 4887, 4885, 2738, 2238, 4400, 4400, 4824, 4781,
	4770, 906, 2238, 4782, 2738, 4768, 4765, 4762, 4730, 2738,
	4766, 4763, 2238, 3630, 3629, 4729, 4728, 2238, 4723, 2238,
	2084, 4722, 2084, 4713, 4711, 2084, 4708, 4400, 4400, 4678,
	4475, 4649, 4642, 4400, 4641, 2801, 2738, 4636, 2738, 4635,
	4629, 4400, 3401, 4400, 2238, 3418, 3293, 3294, 4595, 1234,
	4536, 4518, 4242, 4515, 2801, 4047, 4512, 2238, 4465, 4419,
	4400, 4418, 4466, 2238, 4407, 2238, 4406, 4399, 2238, 2081,
	4400, 4400, 4139, 4363, 4337, 1220, 1220, 2238, 2801, 1371,
	4314, 4303, 4221, 1062, 2084, 3639, 2738, 4204, 4081, 4026,
	4020, 2738, 2801, 3656, 3656, 1371, 2821, 3981, 3839, 1706,
	1313, 3982, 3840, 1053, 3837, 1052, 3416, 3822, 3838, 3639,
	2315, 2738, 3738, 2238, 3734, 1072, 2238, 2731, 2738, 1130,
	3655, 3308, 2797, 3646, 3656, 1277, 3819, 3647, 3339, 2081,
	3334, 3333, 2738, 3284, 2738, 2738, 3282, 3285, 2238, 3274,
	3283, 3272, 883, 3275, 3243, 2738, 3111, 3241, 2738, 1270,
	2084, 3081, 1067, 3242, 3080, 2301, 2844, 2800, 2301, 3194,
	2738, 2801, 2790, 2238, 2738, 4650, 2738, 1177, 1073, 73,
	4540, 886, 885, 4531, 3293, 3294, 2783, 3311, 3312, 3313,
	2238, 2737, 4519, 2238, 1221, 2738, 74, 2300, 1223, 4475,
	1224, 2301, 2084, 3819, 2730, 4283, 4077, 4242, 2081, 1271,
	4205, 4047, 78, 3647, 1252, 2552, 2553, 2554, 2571, 2572,
	2573, 3293, 3294, 2944, 2154, 2859, 3299, 2099, 2062, 2601,
	2078, 3032, 2237, 2964, 2857, 2574, 1935, 1517, 3921, 3709,
	3067, 3683, 1957, 236, 2205, 3631, 1271, 2738, 2775, 2774,
	1682, 2773, 87, 2772, 2771, 3293, 3294, 1225, 236, 3308,
	1222, 1061, 1060, 1059, 3632, 1522, 1058, 1057, 1848, 1056,
	1055, 1051, 1792, 1793, 1050, 1825, 1826, 1827, 1836, 1837,
	1838, 1049, 1048, 1047, 1046, 1792, 1793, 2564, 3153, 4134,
	1531, 238, 1045, 889, 1829, 1823, 2560, 1044, 1043, 1042,
	1041, 1040, 1795, 1039, 1038, 49, 238, 107, 1037, 3293,
	3294, 1842, 93, 104, 1036, 1795, 1035, 1034, 1016, 2602,
	954, 953, 1792, 1793, 952, 951, 950, 949, 1848, 948,
	947, 1125, 946, 3309, 945, 944, 943, 1794, 942, 941,
	237, 1129, 940, 939, 938, 1823, 2064, 1814, 937, 2064,
	1794, 2064, 1795, 230, 3299, 237, 1811, 2064, 2064, 1106,
	2064, 936, 231, 935, 934, 933, 932, 931, 1249, 930,
	929, 94, 2565, 2566, 2567, 2568, 928, 3231, 1848, 927,
	926, 925, 2559, 924, 923, 922, 921, 1794, 920, 190,
	919, 3299, 1878, 909, 3293, 3294, 908, 3311, 3312, 3313,
	2081, 2603, 904, 2600, 190, 903, 897, 1845, 896, 881,
	880, 837, 836, 835, 834, 826, 4076, 825, 824, 3315,
	790, 781, 780, 779, 761, 3299, 260, 259, 258, 257,
	256, 255, 1817, 1818, 1819, 1820, 254, 253, 1336, 1132,
	3629, 252, 1800, 1646, 251, 250, 249, 248, 247, 246,
	245, 244, 243, 242, 241, 1800, 2569, 2570, 240, 239,
	4093, 3309, 4297, 1632, 3861, 3833, 1132, 1132, 1132, 3308,
	3657, 3388, 1271, 3254, 3237, 3228, 3135, 3012, 3049, 3299,
	1833, 2805, 1543, 1843, 1397, 3310, 2780, 1960, 1397, 2562,
	1822, 1824, 1800, 2765, 2128, 1336, 2308, 2633, 3309, 2083,
	2376, 3337, 2631, 2617, 1918, 1983, 2615, 1839, 1887, 1840,
	1525, 1917, 1383, 1256, 4755, 1791, 1809, 1810, 97, 1132,
	1918, 1132, 4754, 1132, 4543, 2238, 1885, 1917, 2831, 1336,
	2062, 4751, 3309, 2081, 1831, 1845, 2081, 2078, 1921, 2422,
	1822, 1824, 3338, 4731, 2730, 4710, 1379, 1380, 1381, 1815,
	4610, 1879, 1271, 1877, 1916, 1336, 4528, 1366, 2605, 4391,
	236, 4522, 4351, 1501, 3299, 1530, 236, 1496, 4304, 1650,
	1522, 4520, 1845, 187, 100, 1336, 4282, 103, 4145, 4116,
	1248, 2307, 1336, 4115, 4109, 4108, 3309, 4107, 4100, 4099,
	1132, 4097, 1132, 4092, 1841, 4089, 1336, 4088, 1250, 1815,
	3980, 3865, 1132, 236, 1132, 3864, 1845, 3986, 238, 3863,
	3843, 890, 1830, 3310, 238, 1521, 150, 3810, 3809, 3808,
	1304, 1307, 3730, 1845, 1531, 1358, 3725, 3383, 3330, 3315,
	1588, 1591, 3304, 3302, 3303, 3295, 3296, 3297, 3298, 3300,
	3301, 2563, 3321, 1317, 1531, 1233, 3292, 3289, 3288, 1360,
	3310, 238, 1336, 1390, 3286, 1483, 1488, 237, 3281, 3280,
	1845, 1880, 1506, 237, 1537, 3279, 3276, 1708, 4299, 3273,
	230, 3309, 1132, 1845, 2599, 1132, 230, 154, 1821, 231,
	3253, 820, 3236, 1617, 3310, 231, 3229, 3227, 3082, 2766,
	2588, 1791, 191, 1636, 2281, 1542, 2245, 1344, 1878, 1847,
	237, 1816, 1790, 4937, 2243, 2814, 190, 4877, 823, 1352,
	4876, 3987, 3066, 230, 3293, 3294, 4840, 4791, 4789, 179,
	179, 1577, 231, 1258, 93, 1520, 3051, 1519, 1834, 3756,
	4670, 4602, 1075, 4544, 1651, 4586, 4583, 3919, 3310, 1619,
	1621, 4582, 3293, 3294, 4581, 1845, 1531, 4561, 4560, 884,
	4558, 1816, 4542, 3305, 3306, 3307, 3293, 3294, 4541, 1847,
	3304, 3302, 3303, 3295, 3296, 3297, 3298, 3300, 3301, 4516,
	4500, 4499, 3408, 1132, 1132, 1132, 1132, 1132, 1132, 1132,
	1132, 2549, 2550, 2551, 2575, 2561, 2555, 2529, 2557, 2558,
	2556, 2543, 2544, 2545, 2546, 2547, 2548, 3304, 3302, 3303,
	3295, 3296, 3297, 3298, 3300, 3301, 1132, 4485, 1366, 1847,
	3335, 1366, 1132, 4482, 4481, 4476, 4415, 1792, 1793, 4386,
	4349, 4332, 4331, 3310, 4311, 1610, 4310, 4268, 4243, 4133,
	4114, 1832, 3302, 3303, 3295, 3296, 3297, 3298, 3300, 3301,
	1823, 1806, 1807, 1813, 1835, 1812, 1808, 1795, 1805, 1803,
	1804, 1796, 1797, 1798, 1799, 1801, 1802, 3380, 4048, 2535,
	1769, 4103, 3987, 1656, 4040, 4102, 1798, 1799, 1801, 1802,
	4037, 3907, 1073, 1848, 1631, 3906, 3889, 1536, 1763, 1724,
	3888, 3886, 1794, 3825, 3299, 3813, 1645, 3303, 3295, 3296,
	3297, 3298, 3300, 3301, 236, 3720, 1865, 4271, 1805, 1803,
	1804, 1796, 1797, 1798, 1799, 1801, 1802, 1491, 3658, 3640,
	1867, 3606, 3299, 3531, 236, 3489, 3456, 1132, 1132, 1132,
	3410, 4298, 3258, 1132, 3257, 3252, 3299, 3218, 3025, 3050,
	1254, 1924, 1254, 236, 1923, 1922, 1919, 1911, 1909, 2812,
	1673, 2811, 238, 2777, 2770, 2736, 2613, 1397, 1864, 1792,
	1793, 236, 1982, 1709, 1938, 270, 1933, 1132, 1932, 1931,
	814, 1930, 238, 3305, 3306, 3307, 2023, 814, 1929, 1770,
	3304, 3302, 3303, 3295, 3296, 3297, 3298, 3300, 3301, 1795,
	1594, 238, 2803, 1928, 1927, 1926, 1925, 1800, 1986, 1906,
	1937, 237, 1905, 2309, 1904, 1903, 1902, 1946, 1766, 238,
	2002, 1901, 1900, 1774, 230, 39, 1773, 2051, 1899, 2053,
	1053, 237, 1052, 231, 1794, 236, 236, 1898, 1897, 3309,
	236, 1920, 1896, 1895, 230, 1768, 1894, 1893, 150, 1892,
	237, 1996, 1993, 231, 1891, 1822, 1824, 1787, 1788, 1880,
	190, 1866, 1132, 230, 1863, 1858, 1351, 1336, 237, 1275,
	1266, 4141, 231, 4085, 3860, 1943, 1944, 3836, 3828, 1613,
	190, 230, 1967, 238, 238, 3240, 1132, 2768, 238, 4369,
	231, 4143, 1608, 1220, 1397, 2086, 3859, 179, 1879, 190,
	1792, 1793, 3293, 3294, 3406, 1861, 4207, 2144, 3635, 1978,
	4874, 1912, 1913, 1845, 1815, 2632, 2119, 190, 2119, 1378,
	2630, 2616, 2117, 1073, 2614, 2068, 2119, 1845, 2070, 4866,
	1795, 2942, 237, 237, 2075, 236, 2090, 237, 2077, 4584,
	1886, 4477, 4468, 2080, 4747, 230, 230, 1968, 4467, 4302,
	230, 4245, 4523, 820, 231, 231, 2089, 2017, 1991, 231,
	820, 1901, 4521, 1366, 236, 1794, 2126, 1094, 236, 1901,
	2920, 4244, 4206, 4136, 4052, 2096, 4390, 1958, 4051, 1965,
	823, 190, 190, 238, 1377, 4050, 190, 823, 1845, 4049,
	3831, 3310, 3660, 3659, 3642, 3641, 4820, 4818, 3990, 1371,
	1997, 1936, 2066, 236, 2154, 4473, 1960, 2046, 1371, 3707,
	2188, 1761, 238, 2202, 2111, 2110, 238, 3933, 2119, 2121,
	1977, 1976, 1975, 1973, 1972, 1971, 1336, 1336, 3278, 3277,
	1376, 1962, 237, 1918, 3200, 1252, 1397, 1252, 1672, 3523,
	1917, 2902, 1374, 1032, 2105, 230, 2003, 3904, 2969, 1073,
	3458, 238, 3651, 3492, 231, 2092, 2219, 3589, 1992, 3588,
	1371, 237, 1232, 1725, 1889, 237, 1816, 2332, 1681, 4803,
	1800, 2306, 4464, 4777, 230, 2282, 4758, 4743, 230, 3572,
	3108, 190, 1682, 231, 2220, 2596, 4353, 231, 1033, 3994,
	3977, 2184, 3935, 2192, 1372, 3580, 2197, 3930, 2088, 3912,
	237, 3680, 3431, 2313, 3342, 2601, 3758, 2810, 2950, 1934,
	190, 1914, 2275, 230, 190, 3297, 3298, 3300, 3301, 3246,
	1587, 1513, 231, 1347, 1847, 4752, 1303, 4767, 4764, 1612,
	2961, 1336, 2095, 1336, 4410, 1336, 3625, 2114, 2093, 2230,
	2235, 3295, 3296, 3297, 3298, 3300, 3301, 2122, 2112, 190,
	3881, 1336, 1336, 4192, 4576, 3295, 3296, 3297, 3298, 3300,
	3301, 4189, 1336, 2187, 2899, 4286, 4677, 4382, 2958, 2949,
	4554, 2956, 3461, 3899, 1336, 3089, 1336, 1336, 1336, 2160,
	3555, 3063, 3407, 2179, 4821, 3134, 4413, 2222, 2223, 1249,
	1987, 1249, 4753, 4822, 2224, 2602, 4409, 3004, 4388, 3701,
	814, 820, 3948, 3435, 4437, 4194, 1554, 2845, 2271, 1562,
	2437, 2390, 1368, 2388, 1030, 2318, 1796, 1797, 1798, 1799,
	1801, 1802, 1132, 2182, 4856, 2898, 1028, 2331, 823, 1361,
	4932, 2276, 4590, 1026, 4430, 4421, 4235, 1613, 4234, 1617,
	2437, 1617, 1024, 2288, 1012, 1520, 1021, 1519, 1723, 2154,
	3946, 1845, 2116, 3945, 1722, 3937, 3927, 1132, 2185, 2863,
	3926, 2181, 2178, 2196, 2106, 1515, 2311, 1372, 3924, 2435,
	3947, 2863, 3923, 2020, 2861, 1660, 2336, 2603, 3911, 2600,
	3876, 3875, 3437, 3561, 2296, 2236, 2861, 3560, 3400, 3251,
	2115, 1132, 3250, 1132, 1373, 3249, 1563, 3248, 3204, 2435,
	1132, 2967, 2180, 2023, 2023, 1397, 2966, 1132, 1132, 1132,
	1132, 1132, 1132, 1132, 1132, 1132, 1132, 1132, 1132, 1132,
	1132, 1132, 1132, 1132, 1132, 1132, 1132, 1132, 1132, 1132,
	1132, 1132, 1132, 1132, 1132, 1132, 1132, 1132, 1132, 1132,
	1132, 1132, 1132, 2285, 1132, 2257, 1132, 1132, 1132, 1132,
	2298, 2256, 1369, 1802, 2963, 1721, 4411, 2319, 1372, 2151,
	1378, 1370, 2804, 753, 1071, 4188, 2290, 1610, 2952, 2293,
	2439, 2293, 1132, 820, 2294, 753, 1132, 1132, 2426, 2936,
	4190, 2433, 2935, 2421, 1132, 1368, 3458, 1352, 1132, 4383,
	1132, 1132, 2302, 2147, 2303, 2930, 2929, 2220, 1397, 2900,
	823, 1248, 3521, 1248, 1132, 1132, 1132, 1132, 2306, 2323,
	1132, 1132, 1132, 1132, 1132, 1132, 1132, 1132, 2436, 1250,
	2361, 1250, 2152, 2153, 2928, 1377, 2907, 2011, 1073, 2906,
	1073, 4857, 1378, 2340, 2605, 4861, 1132, 1132, 1132, 1132,
	1132, 1132, 1132, 1132, 1132, 2867, 2351, 2791, 2436, 1132,
	2577, 2578, 2148, 2510, 1070, 2900, 1658, 876, 1767, 2646,
	3491, 1254, 2645, 2467, 2577, 2593, 3060, 1373, 1397, 2818,
	2414, 2924, 2463, 2464, 2017, 2017, 1368, 1254, 2384, 1796,
	1797, 1798, 1799, 1801, 1802, 1653, 3301, 1612, 1600, 2450,
	1599, 2641, 2434, 1132, 1397, 2795, 4208, 1377, 2917, 2918,
	2917, 2918, 2402, 4330, 1948, 1704, 1978, 2876, 2917, 2918,
	2687, 2687, 2701, 4151, 2577, 2904, 2411, 2722, 2724, 1598,
	2176, 1597, 2434, 2728, 2425, 1369, 2438, 2424, 2431, 2423,
	2189, 2541, 4862, 1674, 1370, 2596, 1371, 2255, 1053, 1516,
	2454, 1053, 1053, 2455, 2456, 2592, 1558, 2191, 1289, 1018,
	2599, 1094, 1094, 1094, 3215, 2753, 3114, 2401, 1373, 3681,
	2419, 2162, 877, 3522, 2328, 1072, 1759, 2778, 1571, 1481,
	2341, 2852, 4446, 1481, 2154, 1343, 4150, 2186, 1760, 2190,
	3148, 2413, 2188, 3213, 2166, 2324, 1952, 3884, 2348, 2525,
	752, 2745, 4191, 4569, 2525, 1336, 1336, 4173, 1576, 4821,
	2123, 2124, 752, 1654, 1734, 2960, 2537, 1967, 2782, 2890,
	1220, 1703, 2394, 2382, 1704, 1720, 1369, 4186, 3177, 4749,
	2183, 2879, 2590, 1772, 1682, 1370, 1350, 2767, 788, 1682,
	1064, 4166, 1004, 2342, 2794, 1955, 2345, 2959, 2643, 1397,
	2798, 2163, 4864, 2644, 1670, 4889, 2647, 2744, 2648, 2649,
	1950, 2339, 2190, 3434, 3192, 1528, 1066, 1535, 179, 1541,
	2840, 2752, 2834, 2757, 2889, 2295, 2763, 2764, 1953, 1583,
	2696, 1073, 2713, 2023, 3690, 2957, 2683, 2726, 2955, 1701,
	3689, 1073, 702, 2817, 4870, 1073, 4167, 2826, 3896, 2734,
	2735, 3150, 2842, 2830, 2750, 2751, 2746, 1920, 3908, 2349,
	754, 2605, 1065, 4173, 1965, 4233, 1366, 2841, 697, 1371,
	2862, 1951, 754, 917, 2135, 4571, 1397, 2837, 3925, 2136,
	1703, 1581, 3922, 3747, 3868, 3210, 1630, 3855, 1635, 2389,
	2521, 2387, 1336, 1022, 3567, 2187, 2806, 4166, 1644, 786,
	1649, 4159, 1702, 2866, 3357, 1022, 1252, 1069, 1005, 2167,
	2868, 3211, 1022, 1132, 1132, 3216, 1132, 2813, 4157, 2519,
	2836, 1023, 1252, 2507, 2825, 1022, 2866, 4161, 2828, 3559,
	2829, 1912, 1913, 4329, 1073, 2533, 3519, 2962, 1738, 814,
	2816, 1336, 2531, 2843, 2865, 2903, 2410, 2820, 3191, 3744,
	2020, 2020, 4167, 2953, 2927, 4750, 1717, 2835, 3159, 2925,
	1371, 1004, 2905, 2848, 4835, 1707, 2420, 3894, 4843, 827,
	2242, 2241, 1336, 3029, 3074, 2168, 2169, 2909, 1659, 4447,
	4842, 4184, 2846, 2878, 2850, 1066, 1336, 2893, 1336, 3103,
	1954, 4445, 2789, 2137, 4160, 4892, 4187, 4443, 4863, 2164,
	2908, 4810, 2910, 1336, 2017, 3184, 3185, 4067, 4066, 2203,
	2141, 2412, 874, 2926, 873, 3684, 2919, 2921, 2922, 2923,
	2934, 2851, 2135, 879, 878, 3622, 3568, 2136, 3047, 2871,
	2968, 3745, 3007, 2881, 2884, 2996, 2997, 3009, 3156, 3043,
	2605, 1560, 2849, 2165, 4442, 3115, 3116, 4656, 3565, 2096,
	4162, 1132, 2940, 1010, 1009, 4163, 3122, 3123, 3124, 4748,
	1249, 2515, 2199, 4920, 2203, 4168, 3136, 3623, 3137, 3162,
	3909, 4374, 4444, 910, 2938, 2933, 1249, 1005, 3956, 2948,
	1617, 820, 2516, 2138, 2143, 2063, 4646, 2517, 1557, 2198,
	1288, 2522, 2505, 2864, 2215, 2508, 4868, 3445, 3132, 3109,
	1006, 3212, 3005, 3356, 2011, 2011, 3088, 4165, 823, 2943,
	2932, 3214, 820, 1132, 179, 4597, 787, 3534, 2931, 1132,
	1132, 3112, 1583, 2194, 4169, 1520, 3117, 3010, 3118, 2347,
	2877, 1657, 3076, 1004, 3078, 3957, 4577, 3106, 3023, 823,
	4185, 2137, 3105, 4570, 1655, 3436, 2504, 3033, 4717, 3622,
	4718, 2214, 2152, 2153, 3138, 3473, 4162, 1066, 2141, 3034,
	3164, 4163, 3166, 1732, 2170, 789, 2139, 2833, 751, 785,
	4260, 4168, 2863, 1683, 3069, 1132, 1132, 1514, 3955, 3508,
	3079, 1132, 2195, 898, 1262, 1735, 3090, 2882, 2605, 1273,
	3477, 2191, 1481, 3110, 1132, 1132, 1907, 2189, 3058, 3077,
	1132, 1132, 3500, 3161, 3206, 4869, 1132, 2383, 1019, 2524,
	4784, 2756, 3472, 4165, 698, 2145, 3970, 828, 829, 3129,
	4785, 1007, 1010, 1009, 3404, 3968, 1259, 3005, 4809, 1974,
	4169, 2138, 2143, 2203, 3158, 3140, 3509, 3142, 3139, 3144,
	2171, 4871, 4326, 3479, 1771, 1733, 1063, 1349, 1008, 1005,
	2781, 1132, 1132, 1132, 4164, 918, 3207, 1132, 2344, 3501,
	2145, 4832, 4063, 3172, 3154, 1669, 1671, 1132, 3440, 1006,
	1264, 3970, 1248, 2338, 4644, 3183, 3566, 2518, 4342, 3507,
	3968, 4510, 4700, 4688, 1132, 3895, 1952, 2520, 1248, 4218,
	1250, 1948, 2999, 4174, 4175, 699, 3173, 3239, 720, 3174,
	2587, 1011, 3499, 3972, 1857, 3446, 1250, 3478, 2174, 2450,
	3178, 1094, 3193, 2157, 2139, 3256, 2749, 4645, 1081, 1481,
	2020, 911, 912, 4893, 2762, 1736, 3234, 3235, 1072, 3760,
	4880, 3238, 4275, 4270, 4502, 1955, 4057, 1263, 3971, 3160,
	2506, 4878, 4238, 2206, 700, 3856, 701, 4503, 2213, 3000,
	2747, 2939, 4276, 1278, 4068, 2703, 3703, 3175, 3972, 3483,
	4164, 831, 830, 2145, 1688, 2175, 3230, 3799, 1953, 4604,
	2158, 3205, 4693, 1952, 4623, 4484, 1132, 1132, 1132, 1132,
	4325, 4504, 4237, 4236, 4008, 2532, 1132, 1132, 1132, 4261,
	1007, 1132, 2998, 3971, 1010, 1009, 3610, 2263, 2140, 4174,
	4175, 1132, 1254, 1397, 1945, 1276, 1269, 1132, 2173, 1132,
	3349, 3350, 689, 2156, 3985, 1782, 3481, 1008, 1254, 1737,
	4064, 2453, 1955, 4112, 4921, 832, 833, 2155, 2107, 3966,
	4808, 899, 900, 1781, 3393, 4408, 1397, 1950, 4553, 3131,
	1090, 1006, 4898, 4493, 4506, 4009, 2064, 3941, 1254, 3928,
	2104, 1397, 3880, 3452, 3141, 1953, 3143, 3611, 3145, 3482,
	3245, 1481, 2207, 3602, 4783, 3332, 3448, 4505, 3849, 3048,
	1011, 3042, 2023, 3027, 2011, 1781, 1397, 2289, 2283, 2277,
	3743, 3351, 2883, 2269, 2249, 4507, 2248, 4605, 1776, 3386,
	1551, 3872, 1336, 2911, 2443, 1280, 3814, 1073, 1951, 760,
	4661, 3399, 3704, 2866, 4626, 3167, 2395, 1781, 3169, 3969,
	2100, 3373, 4011, 4291, 1132, 3024, 1291, 913, 914, 4327,
	3827, 2740, 3850, 4462, 4460, 3414, 2102, 4069, 1132, 4385,
	1954, 3361, 3464, 3460, 3459, 3198, 2144, 1780, 1336, 3441,
	3442, 2329, 3176, 2023, 3354, 3353, 2140, 3382, 3359, 3851,
	1705, 3848, 1711, 1710, 1260, 2788, 2743, 1606, 2787, 3800,
	3462, 1132, 1007, 3466, 3969, 4273, 3387, 2786, 3801, 2103,
	2144, 3360, 2785, 3365, 2784, 1604, 3371, 1336, 916, 1780,
	3425, 3976, 3374, 3375, 1592, 3327, 3328, 3329, 3031, 1008,
	3391, 3343, 3379, 1070, 3432, 3372, 4564, 2742, 1593, 1336,
	2096, 1336, 2741, 4252, 3358, 1782, 3421, 1261, 3438, 3423,
	3424, 1780, 4070, 1366, 3427, 4397, 3428, 1954, 3429, 3463,
	1857, 2202, 3468, 1397, 4113, 3470, 4457, 901, 902, 2887,
	2202, 3377, 2444, 3378, 1336, 3537, 3887, 3539, 1336, 3652,
	3543, 3405, 1011, 2017, 3549, 3449, 2096, 1782, 2287, 3524,
	3575, 4897, 4308, 3494, 3395, 3396, 3397, 3398, 3877, 4829,
	4601, 4372, 3003, 1336, 3417, 3402, 3113, 2912, 2913, 3366,
	3008, 3498, 3006, 2317, 2219, 3517, 3419, 1336, 1663, 1336,
	2210, 4380, 3535, 1397, 4606, 2096, 3422, 1252, 3873, 3426,
	814, 1336, 4393, 4667, 4565, 4392, 2377, 4674, 3411, 3412,
	4658, 3413, 1336, 1252, 3585, 3433, 3816, 2096, 1689, 2096,
	3532, 3439, 3453, 4119, 2017, 3569, 3512, 1336, 1755, 3364,
	4398, 2612, 3447, 4833, 4307, 2406, 3444, 4381, 4695, 4834,
	1481, 1757, 4831, 1252, 1254, 4508, 1754, 2208, 3618, 1752,
	4769, 4509, 2096, 4593, 3480, 3103, 2096, 1729, 1727, 1699,
	4585, 3852, 3370, 3594, 3103, 4348, 3490, 4111, 1697, 1336,
	1336, 3497, 1695, 1693, 3975, 3394, 3616, 3496, 1691, 3504,
	3503, 1685, 1679, 3505, 3324, 1677, 1602, 3719, 3506, 3678,
	2209, 4668, 4566, 3511, 1336, 3513, 3677, 759, 3415, 3510,
	3570, 3287, 3573, 3601, 3525, 3627, 3217, 3609, 1605, 3028,
	2951, 3533, 3557, 2901, 2815, 3638, 2934, 2415, 1985, 1981,
	1758, 3546, 1641, 2386, 4449, 3552, 1603, 2353, 3545, 915,
	3878, 3325, 3551, 1481, 3544, 2228, 3699, 3698, 3550, 1397,
	1776, 3558, 1397, 3152, 3151, 3120, 2432, 1716, 2356, 2268,
	2247, 1249, 3562, 2052, 3682, 1890, 1652, 1575, 2611, 4742,
	3577, 4219, 3932, 3931, 4220, 4203, 4657, 1249, 2909, 3367,
	3368, 3369, 3612, 820, 4289, 1132, 3692, 4225, 4216, 4155,
	1992, 1132, 1132, 3619, 3598, 1132, 1132, 1132, 3599, 1132,
	3597, 3675, 1020, 4284, 4007, 3998, 3944, 1249, 1132, 2023,
	823, 4806, 3536, 1481, 179, 179, 3929, 1132, 3902, 3740,
	1995, 3650, 1132, 3626, 3624, 3654, 2408, 3900, 1397, 3879,
	2407, 3697, 3674, 3633, 3636, 3637, 1756, 1132, 3605, 1481,
	4797, 1753, 3600, 3615, 1751, 1397, 3696, 1785, 3648, 3590,
	3061, 3053, 1728, 1726, 1698, 2023, 2023, 1132, 1132, 3046,
	1132, 1132, 1132, 1696, 3035, 3021, 3020, 1694, 1692, 3705,
	3001, 2832, 2827, 1690, 2246, 2244, 1684, 1678, 1132, 2020,
	1676, 1601, 1132, 2221, 2023, 2023, 1132, 1132, 1132, 1132,
	1132, 1132, 1132, 1132, 1132, 1132, 1132, 1132, 1132, 1132,
	1132, 1132, 1132, 1132, 1132, 1132, 2204, 1132, 3693, 3676,
	2172, 3772, 2159, 3773, 2385, 1132, 1132, 2023, 2352, 2146,
	2085, 2082, 1132, 3722, 2079, 1395, 2227, 3702, 2076, 1494,
	2071, 2069, 2065, 1132, 3686, 2056, 3687, 4275, 3688, 1252,
	1229, 3732, 3733, 3196, 1254, 1254, 4822, 3520, 1132, 2108,
	2020, 3547, 4563, 3170, 1073, 3168, 2213, 4276, 1786, 2994,
	1025, 1027, 1029, 4705, 4313, 4306, 1230, 4305, 2418, 4232,
	4147, 3104, 2127, 1248, 3727, 3729, 1556, 2863, 4495, 1397,
	2017, 2888, 4488, 2863, 1481, 4019, 3845, 2154, 3739, 1248,
	3673, 1250, 2861, 3746, 3748, 3749, 3811, 3755, 2885, 1749,
	1750, 2343, 2286, 3671, 1311, 3556, 1312, 1250, 2380, 3762,
	2375, 4704, 3664, 2350, 2416, 4195, 3770, 4227, 1675, 1248,
	3771, 4530, 4395, 4120, 2463, 3763, 2017, 2017, 1132, 4098,
	3853, 3854, 3775, 2011, 3803, 2891, 3475, 1250, 3777, 3197,
	1792, 1793, 3832, 2892, 1140, 3866, 3867, 1132, 3869, 1792,
	1793, 3812, 2135, 2463, 3778, 2017, 2017, 2136, 2914, 3750,
	2417, 1481, 3940, 1789, 1345, 3804, 3818, 2892, 1279, 179,
	3548, 4825, 3617, 4816, 3823, 3824, 4778, 1231, 3019, 1795,
	1132, 1132, 3769, 261, 3939, 3995, 3807, 1312, 2017, 1312,
	268, 268, 268, 1249, 692, 693, 2270, 708, 692, 708,
	718, 3820, 3821, 758, 2011, 1794, 1356, 778, 2958, 2956,
	3666, 3673, 784, 2965, 1794, 2947, 2896, 3835, 2945, 268,
	3834, 2894, 1132, 3870, 3671, 3665, 3403, 3871, 2946, 2895,
	686, 4666, 4651, 3664, 4617, 4611, 4562, 4479, 4455, 895,
	4373, 4005, 3997, 3984, 3842, 268, 1336, 3013, 3604, 3068,
	3016, 1336, 3018, 2727, 3913, 2091, 2004, 4865, 4697, 4394,
	2937, 1512, 1511, 4698, 4896, 3293, 3294, 3901, 4613, 3903,
	3694, 2137, 4697, 3918, 3920, 4004, 2023, 4698, 3917, 3700,
	1792, 1793, 1522, 4837, 2855, 2856, 4090, 3934, 2141, 2853,
	2854, 2607, 3883, 1662, 3858, 2855, 3936, 3065, 2853, 1661,
	3065, 3942, 2642, 1731, 4480, 4431, 1730, 1336, 4229, 4224,
	4223, 3905, 4086, 1132, 3910, 3857, 3662, 3862, 3751, 3958,
	3960, 1254, 1132, 3541, 4021, 3538, 1884, 1883, 3074, 1252,
	1252, 3666, 1336, 1336, 1336, 4882, 4844, 4655, 4654, 4653,
	3943, 4012, 4028, 2909, 4592, 3954, 3665, 4591, 4546, 1336,
	1336, 1336, 4458, 4425, 4370, 3103, 4367, 4365, 4263, 2096,
	3974, 2138, 2143, 4249, 3978, 4193, 4142, 4016, 1336, 4043,
	4025, 3979, 3898, 3890, 1397, 692, 692, 4013, 3608, 3991,
	3607, 3146, 3962, 268, 3469, 3420, 3157, 4032, 3149, 4001,
	3992, 3951, 3964, 3128, 3127, 3973, 2020, 3126, 3125, 3963,
	1397, 3052, 3022, 1132, 1132, 1248, 2886, 3996, 2823, 1132,
	1132, 2023, 2819, 4044, 1132, 1132, 2808, 1132, 2807, 2796,
	2536, 2409, 1132, 1250, 2381, 2374, 4015, 2373, 2372, 2371,
	3999, 2370, 2284, 1132, 2258, 3953, 3672, 3667, 3668, 3669,
	3670, 3952, 2020, 2020, 2139, 3453, 4014, 2017, 2254, 1132,
	4017, 2253, 4022, 2252, 2251, 2250, 2059, 4027, 2058, 2057,
	4023, 2055, 1994, 4053, 4033, 4034, 1748, 1747, 1686, 1570,
	4071, 2020, 2020, 4035, 4041, 4038, 4042, 4039, 1569, 1568,
	1567, 4055, 1566, 1249, 1249, 1565, 1564, 4072, 1984, 2133,
	1559, 4084, 1555, 2145, 1553, 1552, 1505, 1504, 4054, 1503,
	1388, 1387, 1386, 1385, 2020, 1384, 1348, 1298, 1297, 1296,
	1254, 4065, 1295, 1294, 1293, 1292, 1290, 1285, 1254, 1284,
	1283, 1282, 1397, 1281, 1397, 4080, 888, 8, 1212, 2098,
	1031, 1254, 1017, 4568, 4172, 4171, 4170, 2405, 92, 1561,
	850, 86, 1336, 1336, 2211, 3897, 2131, 4772, 983, 4694,
	2011, 4596, 1397, 1544, 858, 4125, 4676, 3672, 3667, 3668,
	3669, 3670, 3993, 3471, 2970, 2355, 1687, 2357, 3381, 2769,
	4643, 4094, 3386, 3255, 4148, 4149, 1870, 1254, 4537, 1254,
	1875, 4341, 2017, 2610, 4060, 1888, 3336, 4110, 88, 2132,
	1116, 1162, 4259, 4258, 4156, 3882, 2011, 2011, 3093, 4196,
	4256, 4255, 1336, 2008, 2010, 1080, 1252, 1400, 4716, 4128,
	2109, 1122, 1397, 2125, 1336, 2129, 2118, 1336, 4179, 4183,
	4179, 2809, 2686, 1139, 1136, 2011, 2011, 2012, 1397, 4117,
	4124, 2014, 4127, 4122, 4123, 4131, 4198, 4199, 1138, 4182,
	4121, 4152, 1137, 4228, 2013, 4230, 4135, 179, 4126, 1908,
	4132, 1135, 2007, 4003, 3072, 3634, 1611, 1609, 2011, 4197,
	985, 2113, 2530, 2594, 3244, 1881, 1336, 1336, 1096, 1118,
	4140, 2591, 1274, 1107, 4154, 1095, 2140, 3362, 3341, 3621,
	3841, 4253, 2442, 4146, 868, 3290, 1336, 2597, 1481, 1265,
	2710, 2702, 4217, 2698, 3430, 1248, 1248, 3062, 1397, 1762,
	4355, 1859, 3073, 1336, 1382, 1100, 2528, 1872, 4212, 3222,
	2096, 4231, 2452, 1250, 1250, 4222, 3628, 3384, 2802, 4701,
	3759, 1481, 2096, 3155, 2262, 2096, 1228, 1227, 1254, 1272,
	4247, 1226, 4682, 4679, 4215, 2201, 1481, 4292, 4036, 3583,
	1336, 1336, 1336, 1336, 2101, 4278, 2847, 2540, 4250, 3591,
	4241, 1112, 1499, 2399, 1397, 3347, 3653, 2239, 1572, 4246,
	1249, 1481, 783, 2020, 4402, 4240, 1132, 1132, 1132, 4179,
	4312, 4281, 1124, 4293, 4239, 1844, 2991, 2990, 4254, 4269,
	4248, 4557, 4280, 1367, 1397, 4287, 4202, 4296, 4309, 1132,
	1365, 4201, 1132, 1132, 2096, 1252, 1364, 1363, 4211, 1094,
	4853, 4214, 1132, 1252, 4210, 2023, 4919, 4213, 3893, 3892,
	1132, 1132, 4294, 1094, 3891, 235, 1252, 3190, 1783, 1775,
	232, 234, 233, 4264, 3846, 1397, 3390, 1336, 4776, 4301,
	3915, 3574, 23, 22, 4333, 21, 113, 42, 4316, 1267,
	20, 4315, 152, 4321, 130, 149, 148, 122, 4328, 147,
	1397, 146, 145, 144, 4318, 151, 143, 142, 1132, 137,
	141, 140, 1252, 139, 1252, 138, 136, 134, 135, 129,
	4277, 1132, 1287, 4344, 133, 132, 131, 4322, 128, 127,
	1132, 126, 125, 124, 268, 2023, 268, 268, 123, 1316,
	268, 1326, 121, 153, 1132, 4338, 120, 1132, 2020, 119,
	3484, 3485, 1346, 3486, 3487, 3488, 118, 117, 1481, 116,
	778, 1132, 115, 778, 4376, 4361, 4362, 2011, 1397, 4350,
	114, 4405, 771, 772, 61, 1336, 4364, 60, 112, 110,
	111, 19, 40, 14, 65, 1336, 1336, 268, 66, 268,
	268, 1316, 4377, 268, 268, 18, 4384, 13, 1326, 1249,
	4375, 3526, 3527, 35, 3528, 3529, 3530, 1249, 91, 102,
	101, 36, 268, 99, 1524, 98, 34, 3585, 1481, 4436,
	1249, 4448, 1248, 17, 16, 15, 2017, 4424, 4470, 4427,
	1397, 96, 95, 1336, 264, 1549, 33, 4461, 31, 4426,
	1250, 11, 4422, 9, 37, 1969, 12, 4416, 4417, 5,
	184, 1254, 1254, 183, 1574, 186, 182, 1326, 185, 90,
	4433, 268, 268, 1252, 1316, 181, 1249, 4489, 1249, 4440,
	180, 4450, 1132, 1132, 4451, 89, 2466, 4432, 4494, 4434,
	4459, 4435, 29, 2096, 4454, 778, 10, 268, 268, 1132,
	2023, 4492, 4179, 4179, 4469, 176, 4471, 4498, 3989, 4453,
	4478, 81, 2011, 4490, 4414, 178, 2017, 4517, 4474, 177,
	895, 4513, 4514, 175, 174, 173, 82, 4486, 4491, 79,
	4497, 172, 85, 4296, 4496, 4511, 171, 1132, 80, 1132,
	84, 1132, 83, 27, 6, 64, 7, 4323, 3679, 105,
	106, 1254, 38, 77, 76, 75, 4526, 4527, 4545, 4525,
	26, 4547, 63, 25, 1132, 170, 1254, 4552, 217, 4439,
	216, 215, 214, 213, 1481, 4438, 212, 1481, 211, 2608,
	210, 2447, 205, 204, 209, 207, 206, 208, 203, 227,
	226, 220, 4179, 219, 225, 4548, 4551, 224, 268, 223,
	222, 221, 218, 229, 202, 201, 200, 4179, 198, 4529,
	194, 193, 4579, 2144, 4535, 197, 4572, 199, 1132, 1132,
	196, 1248, 268, 195, 4573, 192, 4580, 1249, 1132, 1248,
	4600, 228, 72, 1254, 168, 169, 1254, 71, 167, 1250,
	1336, 166, 1248, 165, 164, 163, 162, 1250, 161, 4587,
	1336, 1336, 70, 1481, 24, 2, 2234, 1, 0, 0,
	1250, 4589, 0, 4594, 0, 0, 0, 1336, 0, 0,
	1481, 2017, 0, 0, 4179, 2779, 0, 4179, 4607, 0,
	0, 1132, 1132, 4615, 4612, 0, 0, 4634, 1248, 4619,
	1248, 1132, 0, 4620, 4614, 0, 4622, 4588, 4608, 4609,
	0, 4628, 4631, 0, 0, 0, 1250, 0, 1250, 0,
	4627, 4639, 4630, 4640, 4632, 4633, 0, 0, 0, 4474,
	0, 0, 0, 0, 4638, 0, 0, 2704, 0, 0,
	0, 4637, 4648, 4669, 1132, 1132, 0, 1132, 0, 0,
	0, 4673, 0, 0, 4652, 0, 1252, 1252, 0, 0,
	0, 0, 2020, 0, 0, 4647, 0, 0, 0, 0,
	0, 4703, 4681, 4684, 0, 0, 0, 0, 4699, 4664,
	4665, 0, 0, 0, 4672, 4671, 0, 0, 2534, 0,
	4691, 0, 4696, 4692, 0, 4721, 0, 4690, 0, 4428,
	0, 0, 0, 0, 1870, 1132, 1132, 1132, 0, 0,
	0, 4724, 0, 0, 1481, 0, 0, 0, 4685, 4706,
	4725, 4689, 4719, 0, 0, 4686, 0, 0, 4712, 0,
	2858, 0, 0, 692, 4720, 0, 0, 0, 1132, 0,
	4756, 0, 2020, 0, 0, 0, 1252, 0, 0, 1248,
	4738, 4739, 4741, 4740, 268, 0, 268, 0, 0, 2709,
	268, 1252, 0, 4761, 0, 0, 0, 1250, 0, 0,
	4757, 0, 0, 1524, 1316, 1989, 268, 0, 268, 4779,
	0, 0, 4786, 0, 268, 1524, 708, 0, 0, 4802,
	4790, 268, 1524, 0, 1524, 1132, 4788, 4775, 0, 4787,
	4800, 0, 4801, 0, 0, 0, 2060, 0, 4807, 0,
	1249, 1249, 4794, 0, 0, 4759, 2011, 4795, 268, 4796,
	0, 0, 0, 0, 0, 268, 4823, 0, 1252, 0,
	0, 1252, 4813, 4814, 4819, 4798, 4799, 4827, 4817, 4815,
	0, 4804, 0, 0, 0, 0, 4826, 0, 0, 4828,
	1254, 4703, 1254, 2144, 4681, 4830, 0, 4684, 0, 0,
	1524, 4771, 0, 4774, 778, 4847, 4849, 4846, 4860, 4845,
	4600, 4858, 4841, 4836, 0, 0, 0, 4859, 4855, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4873,
	0, 4179, 0, 4179, 4854, 0, 2011, 2020, 0, 0,
	1249, 4875, 0, 4872, 0, 0, 0, 0, 0, 0,
	4848, 0, 4850, 0, 0, 1249, 0, 0, 0, 0,
	4886, 4890, 0, 4884, 4883, 0, 1132, 1132, 0, 0,
	4891, 0, 0, 4888, 4879, 1132, 0, 1132, 1132, 4894,
	4881, 0, 0, 0, 0, 4900, 0, 0, 0, 4910,
	0, 0, 4904, 4913, 4915, 4908, 4914, 0, 3074, 0,
	0, 4912, 0, 4907, 4911, 0, 0, 0, 0, 0,
	4909, 4923, 0, 0, 4927, 4922, 4925, 4918, 0, 4928,
	4000, 4929, 1249, 4931, 0, 1249, 4924, 4926, 0, 4934,
	0, 0, 0, 0, 0, 0, 0, 4936, 1132, 4939,
	4935, 4941, 0, 0, 0, 4942, 4938, 4944, 4945, 1481,
	4931, 4901, 4902, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1248, 1248, 0, 0, 0, 0, 268, 0,
	0, 0, 268, 0, 0, 1481, 0, 0, 0, 0,
	1250, 1250, 0, 0, 0, 0, 0, 0, 0, 0,
	4903, 2011, 0, 0, 4056, 0, 0, 0, 3293, 3294,
	0, 3311, 3312, 3313, 0, 0, 0, 0, 0, 0,
	0, 0, 4940, 0, 0, 0, 0, 0, 0, 0,
	3724, 0, 0, 0, 0, 0, 268, 0, 0, 0,
	268, 0, 0, 0, 0, 0, 268, 0, 0, 0,
	1321, 0, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1248, 0, 0, 0, 0, 0, 268, 0,
	268, 0, 0, 0, 692, 0, 268, 1248, 0, 0,
	1250, 0, 0, 3308, 0, 1252, 0, 1252, 778, 0,
	0, 0, 895, 0, 0, 1250, 0, 0, 0, 0,
	1489, 3180, 0, 1500, 1321, 0, 0, 1481, 0, 1481,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 1316,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 778, 0, 0, 1481, 0, 0,
	0, 268, 0, 0, 1248, 0, 0, 1248, 0, 2354,
	0, 0, 0, 0, 268, 268, 0, 268, 0, 268,
	0, 268, 1250, 268, 0, 1250, 0, 0, 0, 0,
	0, 1321, 1321, 0, 0, 0, 0, 0, 3299, 0,
	0, 0, 2704, 2704, 0, 0, 0, 0, 2391, 0,
	0, 2392, 0, 2393, 0, 0, 0, 1481, 0, 0,
	0, 0, 0, 0, 0, 268, 268, 268, 268, 0,
	0, 0, 0, 1481, 0, 0, 0, 0, 0, 3219,
	3220, 0, 0, 2709, 0, 0, 0, 0, 0, 0,
	0, 0, 758, 0, 0, 0, 778, 0, 0, 1249,
	0, 1249, 0, 3315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 73, 0, 0,
	0, 0, 0, 0, 1330, 0, 0, 0, 0, 0,
	0, 0, 1792, 1793, 74, 0, 0, 0, 0, 0,
	0, 0, 0, 1481, 3348, 3309, 0, 0, 0, 0,
	78, 0, 0, 0, 0, 1823, 0, 0, 0, 0,
	0, 0, 1795, 0, 2709, 2709, 0, 0, 0, 0,
	4262, 0, 0, 0, 0, 0, 0, 3376, 0, 0,
	0, 1508, 0, 4279, 0, 0, 0, 0, 1848, 2542,
	87, 0, 3389, 0, 0, 0, 0, 1794, 0, 1481,
	0, 0, 0, 0, 0, 0, 4300, 0, 0, 0,
	0, 0, 0, 0, 0, 1546, 0, 3409, 0, 1845,
	0, 0, 0, 0, 2704, 2704, 2704, 2704, 0, 1481,
	0, 889, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1584, 0, 49, 0, 107, 0, 0, 0, 0,
	93, 104, 0, 0, 0, 0, 0, 0, 0, 0,
	692, 3317, 3318, 3319, 3320, 0, 0, 0, 1625, 0,
	1481, 0, 0, 0, 0, 268, 0, 0, 0, 0,
	0, 0, 1638, 0, 692, 0, 0, 0, 0, 0,
	0, 268, 0, 692, 0, 1481, 0, 3310, 0, 0,
	0, 0, 1800, 1792, 1793, 268, 0, 0, 0, 94,
	0, 1248, 0, 1248, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 1326, 0, 1823, 0, 0, 1250,
	0, 1250, 0, 1795, 0, 0, 0, 0, 1664, 0,
	3293, 3294, 1094, 3311, 3312, 3313, 2709, 2709, 2709, 2709,
	1822, 1824, 0, 0, 0, 0, 0, 0, 0, 1848,
	0, 0, 3723, 1481, 0, 0, 0, 0, 1794, 0,
	0, 0, 268, 1326, 0, 0, 0, 708, 1814, 0,
	0, 2822, 0, 0, 0, 0, 0, 268, 0, 0,
	268, 0, 0, 0, 268, 0, 268, 0, 0, 0,
	0, 1316, 0, 268, 268, 0, 1326, 1326, 2838, 1815,
	0, 0, 0, 268, 0, 3308, 0, 0, 0, 0,
	0, 0, 0, 0, 3389, 1481, 0, 0, 1500, 0,
	0, 0, 0, 0, 0, 0, 0, 3305, 3306, 3307,
	0, 0, 0, 0, 3304, 3302, 3303, 3295, 3296, 3297,
	3298, 3300, 3301, 0, 0, 0, 97, 0, 0, 0,
	2875, 0, 0, 1817, 1818, 1819, 1820, 0, 0, 0,
	0, 268, 0, 1800, 0, 1500, 0, 0, 0, 0,
	0, 0, 0, 1845, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 778, 0,
	3299, 187, 100, 0, 0, 103, 0, 0, 0, 0,
	0, 1822, 1824, 0, 0, 0, 0, 0, 0, 268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 890,
	0, 0, 0, 0, 150, 0, 0, 0, 0, 0,
	0, 1816, 268, 3011, 0, 0, 0, 0, 0, 0,
	1494, 0, 0, 1395, 0, 3315, 0, 0, 0, 0,
	1815, 0, 0, 0, 0, 0, 0, 0, 1524, 238,
	0, 268, 0, 268, 0, 0, 0, 0, 0, 0,
	268, 0, 0, 1094, 1094, 0, 0, 0, 0, 0,
	3057, 0, 0, 0, 0, 154, 0, 3309, 0, 1847,
	2875, 0, 692, 0, 0, 0, 0, 0, 0, 0,
	191, 3086, 895, 0, 2875, 2875, 0, 0, 237, 0,
	0, 4598, 0, 0, 0, 0, 0, 0, 0, 3736,
	0, 230, 0, 268, 1845, 0, 0, 0, 0, 0,
	231, 0, 0, 0, 0, 4618, 3752, 0, 0, 0,
	0, 0, 268, 1316, 268, 0, 0, 0, 0, 0,
	0, 1524, 0, 1524, 1326, 268, 0, 190, 1316, 0,
	1316, 1845, 1316, 0, 0, 0, 0, 1087, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1821,
	1804, 1796, 1797, 1798, 1799, 1801, 1802, 0, 0, 0,
	1094, 0, 0, 0, 2704, 2704, 0, 0, 0, 0,
	0, 0, 1816, 0, 0, 268, 268, 268, 268, 1316,
	0, 0, 1316, 0, 268, 0, 2274, 268, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3715, 3716, 0, 0, 0, 0, 0, 0, 3310,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 0, 0,
	1847, 0, 0, 0, 0, 0, 0, 4707, 0, 0,
	3844, 0, 0, 4709, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2704, 2704, 2704, 2704, 2704, 2704,
	2704, 2704, 2704, 2704, 2704, 2704, 2704, 2704, 2704, 2704,
	2704, 2704, 2704, 2704, 0, 2704, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2709, 2709, 0, 0,
	0, 3779, 3780, 3781, 3782, 3783, 3784, 3785, 3786, 3787,
	3788, 3789, 3790, 3791, 3792, 3793, 3794, 3795, 3796, 3797,
	3798, 0, 3802, 0, 0, 0, 0, 0, 0, 1805,
	1803, 1804, 1796, 1797, 1798, 1799, 1801, 1802, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2400, 3305,
	3306, 3307, 1524, 0, 0, 0, 3304, 3302, 3303, 3295,
	3296, 3297, 3298, 3300, 3301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2709, 2709, 2709, 2709,
	2709, 2709, 2709, 2709, 2709, 2709, 2709, 2709, 2709, 2709,
	2709, 2709, 2709, 2709, 2709, 2709, 0, 2709, 1792, 1793,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 73, 0,
	0, 1823, 0, 0, 0, 0, 0, 0, 1795, 0,
	0, 0, 0, 0, 0, 74, 0, 0, 0, 0,
	0, 2304, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 78, 0, 0, 1848, 0, 0, 1330, 2320, 0,
	0, 0, 0, 1794, 0, 0, 0, 0, 2322, 0,
	1792, 1793, 0, 1825, 1826, 1827, 1836, 1837, 1838, 0,
	2330, 0, 2333, 2334, 2335, 0, 0, 0, 0, 0,
	0, 87, 1829, 1823, 0, 0, 268, 0, 0, 0,
	1795, 0, 0, 0, 0, 0, 0, 0, 0, 1842,
	0, 0, 268, 0, 0, 0, 0, 692, 0, 0,
	0, 0, 692, 0, 0, 692, 1848, 0, 692, 692,
	0, 0, 889, 0, 692, 1794, 0, 0, 0, 0,
	0, 0, 268, 0, 0, 1814, 107, 0, 0, 0,
	0, 93, 104, 0, 1811, 0, 1524, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1800, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1524, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 0, 0, 268, 268, 0, 0,
	0, 0, 0, 1321, 0, 0, 0, 0, 0, 0,
	94, 0, 0, 0, 0, 0, 1822, 1824, 0, 0,
	0, 0, 0, 0, 0, 2875, 2875, 268, 0, 1989,
	1817, 1818, 1819, 1820, 0, 2875, 0, 0, 3455, 0,
	1800, 0, 0, 0, 0, 0, 2875, 3455, 0, 2875,
	3455, 0, 1321, 3455, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 268,
	1989, 0, 268, 0, 0, 1815, 0, 0, 1833, 0,
	0, 1843, 0, 1321, 1321, 4130, 0, 0, 1822, 1824,
	0, 0, 1989, 0, 268, 0, 3516, 3516, 0, 0,
	0, 1316, 0, 0, 0, 1839, 0, 1840, 0, 0,
	0, 0, 0, 4144, 1809, 1810, 0, 0, 0, 0,
	0, 2875, 0, 2875, 0, 3542, 2875, 1989, 0, 0,
	2875, 1989, 1831, 0, 778, 0, 0, 2799, 73, 0,
	0, 0, 0, 0, 0, 0, 0, 1815, 0, 1845,
	0, 0, 0, 0, 0, 74, 0, 97, 0, 1316,
	0, 0, 0, 0, 0, 0, 268, 0, 0, 0,
	1524, 78, 0, 0, 0, 0, 0, 1489, 0, 0,
	0, 0, 0, 0, 268, 0, 3579, 0, 0, 3581,
	2875, 0, 1841, 268, 0, 0, 0, 268, 0, 0,
	1326, 0, 0, 0, 0, 0, 0, 0, 0, 1500,
	1830, 87, 187, 100, 0, 0, 103, 0, 268, 0,
	0, 1845, 0, 3057, 0, 0, 1316, 1816, 268, 0,
	0, 2875, 0, 692, 0, 0, 0, 0, 0, 0,
	2875, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	890, 0, 889, 0, 0, 150, 0, 0, 0, 0,
	0, 268, 3057, 0, 49, 3057, 107, 0, 0, 0,
	0, 93, 104, 0, 0, 0, 1821, 0, 0, 0,
	0, 0, 0, 0, 0, 1847, 0, 0, 0, 0,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 1816,
	3685, 2839, 1330, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1395, 154, 0, 3691, 0,
	0, 1524, 0, 0, 1316, 268, 1834, 268, 0, 0,
	94, 191, 0, 1316, 0, 0, 0, 0, 0, 237,
	0, 0, 0, 0, 0, 4339, 0, 0, 0, 0,
	0, 0, 230, 0, 1500, 0, 0, 1847, 0, 0,
	0, 231, 0, 268, 0, 1321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1803, 1804, 1796, 1797, 1798,
	1799, 1801, 1802, 0, 0, 0, 4339, 0, 190, 3293,
	3294, 0, 3311, 3312, 3313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2466, 0, 0, 0, 0, 1500, 0, 1500, 0,
	0, 3757, 0, 0, 0, 0, 0, 0, 0, 1832,
	0, 0, 0, 0, 0, 0, 0, 0, 2995, 1806,
	1807, 1813, 1835, 1812, 1808, 0, 1805, 1803, 1804, 1796,
	1797, 1798, 1799, 1801, 1802, 0, 0, 0, 0, 3268,
	0, 0, 0, 3269, 3308, 0, 0, 0, 0, 0,
	2704, 0, 0, 0, 0, 0, 0, 97, 0, 2466,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1947, 0, 0, 73, 0, 4347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 268,
	0, 0, 74, 0, 0, 0, 2704, 0, 0, 0,
	0, 0, 187, 100, 0, 0, 103, 0, 78, 0,
	0, 0, 692, 692, 0, 0, 0, 0, 0, 3121,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3299,
	0, 0, 236, 4387, 0, 1524, 1524, 0, 0, 0,
	890, 0, 0, 0, 0, 150, 0, 0, 87, 0,
	1524, 1524, 0, 1524, 0, 0, 0, 0, 0, 0,
	0, 0, 2709, 0, 0, 0, 0, 0, 0, 0,
	3316, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 0, 0, 0, 0, 1828, 0, 889,
	0, 0, 0, 0, 3315, 0, 0, 0, 0, 0,
	0, 49, 0, 107, 0, 0, 154, 0, 93, 104,
	0, 0, 0, 0, 0, 0, 0, 0, 2709, 0,
	0, 191, 0, 0, 0, 0, 778, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 3309, 0, 0, 0,
	0, 0, 230, 0, 0, 0, 0, 0, 0, 0,
	0, 231, 0, 0, 0, 0, 0, 0, 0, 3516,
	0, 0, 0, 0, 1079, 0, 0, 94, 0, 0,
	0, 0, 268, 0, 0, 0, 0, 2704, 1622, 0,
	0, 0, 1792, 1793, 0, 1825, 1826, 1827, 1836, 1837,
	1838, 0, 0, 0, 1989, 0, 268, 0, 0, 0,
	708, 708, 1326, 0, 1829, 1823, 0, 0, 0, 0,
	1845, 0, 1795, 0, 4534, 268, 0, 2704, 0, 0,
	0, 1842, 0, 0, 0, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 0, 1848, 0,
	268, 0, 2704, 0, 0, 268, 0, 1794, 1792, 1793,
	0, 0, 0, 0, 4556, 0, 0, 1814, 0, 0,
	0, 0, 0, 0, 2875, 268, 1811, 0, 0, 0,
	0, 1823, 0, 0, 3086, 3086, 0, 0, 1795, 4578,
	895, 895, 2875, 0, 0, 0, 3057, 3057, 3310, 0,
	895, 2875, 0, 0, 0, 0, 0, 0, 0, 2709,
	0, 0, 0, 0, 1848, 0, 1500, 1500, 0, 0,
	0, 0, 0, 1794, 97, 0, 268, 0, 0, 0,
	0, 0, 0, 1814, 0, 0, 0, 0, 0, 0,
	0, 0, 1811, 0, 0, 0, 0, 0, 0, 2709,
	0, 0, 1817, 1818, 1819, 1820, 0, 0, 0, 1828,
	0, 0, 1800, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2709, 0, 0, 0, 0, 187,
	100, 0, 0, 103, 0, 0, 0, 0, 0, 1500,
	0, 0, 0, 0, 0, 0, 0, 4075, 0, 0,
	1833, 4095, 0, 1843, 0, 0, 0, 0, 0, 236,
	1822, 1824, 0, 0, 2274, 0, 0, 890, 1817, 1818,
	1819, 1820, 150, 0, 0, 0, 0, 1839, 1800, 1840,
	0, 0, 0, 0, 0, 0, 1809, 1810, 3305, 3306,
	3307, 0, 0, 0, 0, 3304, 3302, 3303, 3295, 3296,
	3297, 3298, 3300, 3301, 1831, 0, 0, 238, 0, 0,
	0, 0, 791, 0, 268, 0, 0, 0, 0, 1815,
	1524, 0, 268, 0, 0, 0, 1822, 1824, 0, 0,
	0, 0, 0, 154, 0, 268, 0, 802, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 191, 0,
	1326, 0, 1809, 1810, 0, 0, 237, 0, 0, 0,
	0, 0, 0, 1326, 1841, 0, 0, 0, 0, 230,
	2875, 2875, 0, 3516, 2875, 0, 0, 0, 231, 0,
	0, 4181, 1830, 4181, 1524, 1815, 0, 0, 1321, 0,
	0, 0, 0, 1845, 1828, 2875, 0, 3455, 0, 0,
	1828, 1524, 1524, 268, 1989, 1620, 1828, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1989, 0, 268,
	1989, 0, 268, 0, 3516, 0, 0, 1792, 1793, 0,
	796, 0, 0, 0, 0, 0, 0, 808, 0, 2875,
	0, 2875, 268, 0, 0, 0, 0, 0, 1821, 0,
	1823, 801, 0, 0, 0, 0, 0, 1795, 0, 1845,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1816, 0, 0, 0, 0, 0, 2875, 0, 0,
	0, 0, 4266, 1848, 0, 0, 0, 0, 0, 0,
	0, 0, 1794, 268, 0, 0, 1828, 1500, 1834, 800,
	0, 1828, 1814, 268, 0, 0, 0, 0, 0, 0,
	1828, 1811, 0, 0, 1821, 1828, 753, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1847,
	0, 0, 4181, 0, 0, 1524, 0, 1816, 0, 3553,
	0, 798, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 73, 3718, 3578, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3595, 0,
	1828, 1341, 74, 0, 0, 0, 1828, 1817, 1818, 1819,
	1820, 0, 0, 3603, 0, 1847, 0, 1800, 78, 0,
	807, 1832, 3293, 3294, 0, 3311, 3312, 3313, 1079, 1079,
	1079, 1806, 1807, 1813, 1835, 1812, 1808, 0, 1805, 1803,
	1804, 1796, 1797, 1798, 1799, 1801, 1802, 0, 0, 0,
	0, 4663, 0, 0, 0, 3644, 3645, 0, 87, 0,
	0, 0, 0, 0, 0, 1822, 1824, 0, 0, 0,
	2875, 0, 3455, 0, 0, 4379, 0, 0, 0, 0,
	0, 1526, 0, 1532, 268, 1538, 0, 0, 0, 0,
	0, 1809, 1810, 0, 4403, 793, 4403, 3308, 0, 889,
	0, 1812, 1808, 0, 1805, 1803, 1804, 1796, 1797, 1798,
	1799, 1801, 1802, 107, 0, 0, 0, 0, 93, 104,
	778, 0, 0, 0, 1815, 0, 797, 0, 0, 0,
	0, 3516, 0, 1316, 0, 0, 0, 1828, 1828, 1828,
	1828, 1828, 1828, 1828, 1828, 0, 0, 0, 1989, 0,
	268, 0, 1628, 0, 1633, 0, 0, 1828, 1792, 1793,
	0, 0, 0, 752, 1642, 0, 1647, 0, 0, 0,
	1828, 0, 0, 0, 0, 4379, 0, 94, 803, 0,
	0, 1823, 0, 2875, 795, 0, 0, 0, 1795, 0,
	0, 0, 3299, 0, 0, 0, 0, 0, 1845, 0,
	0, 4483, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1524, 1848, 0, 2708, 0, 0, 0,
	0, 0, 0, 1794, 0, 4181, 4181, 0, 0, 1828,
	0, 792, 0, 1814, 1712, 1828, 0, 1718, 0, 0,
	0, 0, 1811, 0, 268, 268, 0, 0, 0, 0,
	0, 0, 0, 1821, 0, 0, 0, 3315, 0, 799,
	0, 0, 0, 0, 0, 0, 0, 0, 3757, 0,
	0, 0, 0, 754, 0, 0, 1816, 0, 0, 0,
	0, 0, 0, 1524, 794, 0, 1524, 3516, 4550, 0,
	0, 0, 1321, 0, 0, 4379, 0, 3713, 0, 3309,
	0, 0, 0, 0, 0, 0, 0, 805, 806, 0,
	0, 0, 0, 0, 0, 4181, 0, 0, 1817, 1818,
	1819, 1820, 0, 0, 97, 0, 0, 0, 1800, 0,
	4181, 0, 0, 0, 1847, 1849, 1850, 1851, 1852, 1853,
	1854, 1855, 1856, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 0, 2274, 0, 0, 0, 0,
	0, 0, 0, 0, 708, 0, 0, 0, 1869, 0,
	0, 0, 0, 1845, 1882, 0, 1822, 1824, 0, 187,
	100, 4266, 0, 103, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4181, 0, 268,
	4181, 0, 1809, 1810, 0, 0, 0, 0, 0, 236,
	3455, 0, 0, 2986, 0, 0, 0, 890, 0, 0,
	1812, 1808, 150, 1805, 1803, 1804, 1796, 1797, 1798, 1799,
	1801, 1802, 0, 0, 0, 1815, 1524, 0, 1524, 0,
	0, 0, 0, 0, 0, 0, 2978, 2976, 0, 0,
	0, 3310, 0, 2980, 2982, 2972, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 2679, 2680, 2681, 2682, 2675,
	2676, 2677, 2678, 4662, 0, 0, 0, 0, 0, 1941,
	1941, 1941, 0, 154, 0, 0, 0, 0, 0, 4403,
	0, 0, 268, 0, 0, 0, 0, 0, 191, 0,
	0, 0, 0, 0, 0, 1524, 237, 0, 1524, 1845,
	0, 0, 0, 0, 0, 0, 0, 2875, 0, 230,
	0, 0, 3949, 0, 0, 0, 0, 0, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 2655, 2656, 2657,
	2658, 0, 0, 0, 0, 190, 0, 0, 3293, 3294,
	0, 3311, 3312, 3313, 1821, 3757, 0, 0, 0, 0,
	2667, 2668, 2669, 2670, 2663, 2664, 2665, 2666, 2671, 2672,
	2673, 2674, 0, 0, 0, 1524, 0, 1816, 0, 0,
	0, 3305, 3306, 3307, 0, 0, 0, 0, 3304, 3302,
	3303, 3295, 3296, 3297, 3298, 3300, 3301, 0, 4029, 4030,
	4031, 0, 0, 0, 0, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1330, 4045, 4046, 1079, 0,
	0, 0, 0, 3308, 0, 2974, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1847, 2988, 2651, 2652, 2653,
	2654, 2659, 2660, 2661, 2662, 0, 0, 4379, 0, 0,
	0, 0, 0, 0, 0, 0, 1828, 2987, 2979, 2977,
	2981, 2983, 2973, 2975, 2989, 0, 0, 0, 0, 0,
	0, 0, 2274, 0, 2985, 0, 0, 0, 0, 0,
	0, 1828, 0, 0, 0, 0, 0, 2875, 0, 0,
	0, 0, 1321, 0, 4181, 0, 4181, 0, 0, 1524,
	0, 0, 0, 0, 0, 0, 0, 2992, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3299, 1828,
	0, 1812, 1808, 1828, 1805, 1803, 1804, 1796, 1797, 1798,
	1799, 1801, 1802, 0, 0, 0, 0, 1828, 0, 1524,
	0, 0, 0, 0, 0, 1524, 1828, 1828, 1828, 1828,
	1828, 1828, 1828, 1828, 1828, 1828, 1828, 1828, 1828, 1828,
	1828, 1828, 1828, 1828, 1828, 1828, 1828, 1828, 1828, 1828,
	1828, 1828, 1828, 1828, 1828, 1828, 1828, 1828, 1828, 1828,
	1828, 1828, 0, 0, 0, 3086, 0, 1828, 0, 1828,
	1828, 1828, 1828, 0, 2875, 0, 0, 0, 0, 0,
	0, 2708, 2708, 0, 0, 0, 0, 0, 4137, 4138,
	3086, 160, 0, 0, 0, 0, 1828, 0, 0, 73,
	0, 46, 45, 0, 0, 3309, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 74, 0, 0, 155,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 78, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 67, 0, 0, 0, 1828, 0, 0,
	48, 0, 157, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2993, 0, 0,
	47, 0, 87, 0, 0, 0, 2984, 1828, 0, 1845,
	1828, 0, 0, 1828, 0, 0, 1828, 0, 0, 0,
	0, 0, 1828, 1828, 1828, 1828, 1828, 1828, 1828, 50,
	68, 0, 1164, 0, 0, 0, 0, 0, 51, 0,
	0, 0, 1330, 57, 0, 0, 0, 158, 0, 0,
	0, 0, 0, 0, 0, 49, 0, 107, 0, 0,
	0, 0, 93, 104, 2378, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3310, 1828, 0,
	0, 3314, 0, 2708, 2708, 2708, 2708, 0, 0, 2403,
	1828, 0, 1828, 52, 0, 0, 0, 1828, 0, 0,
	0, 0, 0, 0, 0, 0, 4317, 0, 4319, 4320,
	0, 94, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2441, 0, 2445, 0, 0, 0, 0,
	0, 0, 2459, 0, 0, 0, 0, 0, 0, 2468,
	2469, 2470, 2471, 2472, 2473, 2474, 2475, 2476, 2477, 2478,
	2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486, 2487, 2488,
	2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498,
	2499, 2500, 2501, 2502, 2503, 1500, 2509, 0, 2511, 2512,
	2513, 2514, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4366, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2538, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1869, 3305, 3306, 3307,
	2589, 0, 0, 0, 3304, 3302, 3303, 3295, 3296, 3297,
	3298, 3300, 3301, 0, 0, 0, 2619, 2622, 2625, 2628,
	0, 0, 2634, 2635, 2636, 2637, 2638, 2639, 2640, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 97, 0,
	0, 1255, 0, 0, 0, 0, 0, 0, 0, 0,
	2700, 0, 2712, 2714, 2719, 0, 53, 0, 0, 0,
	0, 0, 1321, 0, 0, 0, 0, 0, 0, 0,
	0, 56, 0, 0, 0, 0, 59, 0, 0, 0,
	0, 4452, 0, 0, 0, 0, 69, 0, 0, 0,
	0, 0, 58, 187, 100, 0, 0, 103, 0, 0,
	0, 54, 0, 0, 0, 159, 0, 0, 0, 0,
	0, 0, 0, 55, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 62, 0, 0, 0, 0, 150, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 156, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 1828, 1828, 0, 1828, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 154, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 191, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 230, 0, 0, 0, 0, 0, 0,
	0, 0, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 190,
	0, 0, 3, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1828, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1792,
	1793, 0, 0, 0, 0, 0, 1330, 1330, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1823, 1330, 0, 0, 0, 0, 0, 1795,
	1828, 1828, 0, 2708, 2708, 3014, 3015, 1828, 3017, 0,
	0, 0, 0, 0, 0, 0, 0, 3314, 3314, 0,
	0, 1828, 1828, 0, 0, 1848, 0, 0, 0, 0,
	0, 1828, 0, 0, 1794, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1814, 1828, 0, 0, 0, 0,
	0, 0, 0, 1811, 0, 0, 0, 1828, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2708, 2708, 2708, 2708, 2708, 2708, 2708,
	2708, 2708, 2708, 2708, 2708, 2708, 2708, 2708, 2708, 2708,
	2708, 2708, 2708, 0, 2708, 3314, 3314, 3314, 3314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1817,
	1818, 1819, 1820, 0, 0, 0, 0, 0, 0, 1800,
	0, 0, 0, 3147, 0, 0, 0, 0, 0, 0,
	1828, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1792, 1793, 0, 1825, 1826, 1827, 1836, 1837, 1838, 0,
	0, 0, 0, 0, 0, 0, 0, 1822, 1824, 0,
	1255, 0, 1829, 1823, 0, 0, 0, 0, 0, 0,
	1795, 0, 0, 0, 0, 0, 0, 0, 0, 1842,
	0, 1849, 1850, 1809, 1810, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1848, 0, 0, 0,
	0, 0, 0, 0, 0, 1794, 1255, 0, 0, 0,
	1255, 0, 0, 0, 0, 1814, 1815, 1255, 0, 0,
	0, 0, 0, 0, 1811, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3202, 3203, 0,
	0, 0, 1828, 3209, 0, 0, 0, 0, 0, 1792,
	1793, 1255, 1825, 1826, 1827, 1836, 1837, 1838, 0, 0,
	0, 0, 3223, 3224, 0, 0, 0, 0, 2589, 0,
	0, 0, 1823, 0, 0, 0, 0, 1255, 0, 1795,
	0, 0, 0, 0, 0, 0, 0, 0, 1842, 0,
	1845, 0, 0, 0, 0, 0, 0, 1255, 0, 0,
	1817, 1818, 1819, 1820, 1255, 1848, 0, 0, 0, 0,
	1800, 0, 0, 3233, 1794, 0, 0, 0, 1255, 0,
	0, 0, 0, 0, 1814, 0, 0, 0, 0, 3247,
	0, 0, 0, 1811, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1821, 3259, 0, 1833, 0,
	0, 1843, 0, 0, 0, 0, 0, 0, 1822, 1824,
	0, 0, 0, 0, 0, 0, 0, 0, 1816, 0,
	0, 0, 0, 0, 1255, 1839, 0, 1840, 0, 0,
	0, 0, 0, 0, 1809, 1810, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1831, 0, 0, 0, 0, 0, 0, 1817,
	1818, 1819, 1820, 0, 0, 0, 0, 1815, 0, 1800,
	0, 0, 0, 0, 0, 0, 1847, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2719, 2719,
	2719, 0, 0, 0, 0, 0, 0, 1833, 0, 0,
	1843, 0, 1841, 1941, 0, 0, 0, 1822, 1824, 0,
	0, 3352, 0, 0, 0, 0, 0, 0, 1828, 1828,
	1830, 0, 1828, 3314, 3314, 1828, 0, 0, 0, 1828,
	0, 1845, 0, 1809, 1810, 0, 1828, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1828,
	0, 1831, 1812, 1808, 0, 1805, 1803, 1804, 1796, 1797,
	1798, 1799, 1801, 1802, 0, 0, 1815, 0, 0, 0,
	0, 0, 1828, 1828, 1828, 1828, 1828, 0, 0, 0,
	0, 0, 1828, 0, 1828, 0, 1821, 3314, 3314, 3314,
	3314, 3314, 3314, 3314, 3314, 3314, 3314, 3314, 3314, 3314,
	3314, 3314, 3314, 3314, 3314, 3314, 3314, 0, 0, 1816,
	3314, 0, 0, 1828, 1828, 0, 1079, 0, 0, 0,
	0, 0, 0, 0, 0, 1828, 0, 0, 0, 0,
	1079, 0, 0, 0, 1828, 0, 1834, 0, 0, 0,
	1845, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3474, 0, 0, 0, 1847, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1828, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1255, 1828, 1255, 1821, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1255,
	0, 0, 0, 0, 0, 0, 0, 0, 1816, 0,
	0, 0, 1828, 0, 0, 0, 0, 0, 2024, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1832,
	0, 0, 0, 0, 0, 1834, 0, 0, 0, 1806,
	1807, 1813, 1835, 1812, 1808, 0, 1805, 1803, 1804, 1796,
	1797, 1798, 1799, 1801, 1802, 0, 0, 0, 0, 2585,
	0, 0, 0, 2586, 0, 0, 1847, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1828, 0, 0, 0, 1255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1832, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1806, 1807,
	1813, 1835, 1812, 1808, 0, 1805, 1803, 1804, 1796, 1797,
	1798, 1799, 1801, 1802, 0, 0, 0, 0, 0, 0,
	0, 1828, 1828, 0, 0, 0, 1828, 1828, 0, 0,
	1828, 1828, 0, 0, 0, 1828, 0, 0, 0, 1828,
	0, 0, 0, 0, 1828, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2708,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1792, 1793, 0, 1825, 1826, 1827, 1836, 1837, 1838, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1829, 1823, 0, 0, 0, 2459, 1255, 1255,
	1795, 0, 0, 3710, 3711, 2708, 0, 3714, 1255, 1842,
	0, 3717, 0, 0, 0, 0, 0, 0, 0, 0,
	3721, 0, 0, 0, 0, 0, 1848, 0, 0, 3728,
	0, 0, 0, 0, 3352, 1794, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1814, 0, 0, 0, 3741,
	0, 0, 0, 0, 1811, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3764,
	3765, 0, 3766, 3767, 3768, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3774, 0, 0, 0, 3776, 0, 0, 0, 0, 0,
	0, 0, 0, 1255, 0, 1255, 0, 1255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1255, 1255, 0, 0, 3805, 3806, 0,
	1817, 1818, 1819, 1820, 1255, 0, 0, 0, 0, 0,
	1800, 0, 0, 0, 0, 3817, 1255, 0, 1255, 1255,
	1255, 0, 1128, 0, 0, 0, 0, 0, 0, 0,
	3826, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1828, 1828, 1828, 0, 0, 0, 1833, 0,
	0, 1843, 0, 1828, 1828, 3314, 2708, 0, 1822, 1824,
	0, 0, 1828, 0, 0, 1828, 0, 0, 267, 267,
	267, 0, 0, 0, 0, 1839, 0, 1840, 0, 0,
	0, 0, 0, 0, 1809, 1810, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3314, 2708, 821, 0, 0,
	0, 0, 1831, 0, 0, 0, 0, 0, 0, 0,
	3874, 0, 1828, 0, 0, 0, 0, 1815, 0, 0,
	1828, 2708, 0, 821, 0, 0, 0, 0, 1828, 3885,
	0, 1792, 1793, 0, 0, 0, 0, 1828, 0, 0,
	0, 0, 0, 0, 0, 2024, 2024, 1255, 0, 0,
	0, 0, 0, 0, 1823, 0, 0, 0, 0, 0,
	0, 1795, 1841, 3914, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1830, 0, 0, 0, 0, 0, 0, 1848, 0, 0,
	0, 1845, 0, 0, 0, 0, 1794, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1814, 0, 0, 0,
	0, 0, 0, 0, 0, 1811, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1255, 0, 3314, 0, 0, 0, 1821, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1251, 0, 1828, 3314, 0, 0, 1828, 0, 1816,
	3712, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3314, 0, 0, 0,
	0, 1817, 1818, 1819, 1820, 1941, 1834, 0, 0, 0,
	0, 1800, 0, 1255, 4024, 0, 0, 0, 0, 0,
	1255, 0, 0, 0, 0, 0, 0, 0, 0, 1255,
	0, 0, 0, 0, 1828, 0, 0, 1847, 0, 0,
	0, 0, 0, 0, 0, 0, 1255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1822,
	1824, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1809, 1810, 0, 0, 0,
	0, 0, 0, 0, 0, 4073, 4074, 0, 0, 0,
	0, 4078, 4079, 0, 0, 0, 4082, 4083, 0, 1832,
	0, 0, 0, 0, 4087, 0, 0, 0, 1815, 1806,
	1807, 1813, 1835, 1812, 1808, 4091, 1805, 1803, 1804, 1796,
	1797, 1798, 1799, 1801, 1802, 0, 0, 0, 0, 0,
	0, 4096, 0, 4101, 0, 0, 0, 1255, 1255, 0,
	0, 0, 0, 0, 0, 1828, 0, 0, 0, 0,
	0, 0, 0, 0, 1792, 1793, 0, 1825, 1826, 1827,
	1836, 1837, 1838, 0, 0, 0, 0, 0, 1828, 0,
	0, 0, 0, 0, 0, 0, 1829, 1823, 0, 0,
	0, 1255, 1845, 0, 1795, 0, 0, 0, 0, 0,
	0, 0, 0, 1842, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1848, 0, 0, 0, 0, 2024, 0, 0, 0, 1794,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1814,
	0, 0, 0, 0, 0, 0, 0, 1821, 1811, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1255, 0,
	1816, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1828, 0, 0, 0, 1828, 0, 0,
	0, 0, 0, 0, 1817, 1818, 1819, 1820, 1847, 0,
	0, 0, 0, 1255, 1800, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1255, 0, 0, 0, 0, 0,
	0, 0, 1833, 0, 0, 1843, 0, 0, 1255, 0,
	1255, 0, 1822, 1824, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1255, 0, 0, 0, 1839,
	0, 1840, 0, 0, 0, 0, 0, 0, 1809, 1810,
	0, 0, 0, 0, 1812, 1808, 0, 1805, 1803, 1804,
	1796, 1797, 1798, 1799, 1801, 1802, 1831, 0, 0, 0,
	839, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1815, 0, 0, 0, 0, 0, 0, 0, 0,
	841, 0, 0, 0, 0, 842, 0, 0, 4334, 4335,
	4336, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 267, 0, 267, 267, 0, 0, 267, 0,
	0, 2459, 0, 0, 4345, 4346, 1841, 0, 0, 0,
	0, 0, 0, 0, 843, 0, 860, 0, 0, 0,
	0, 0, 4354, 4357, 1830, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1845, 0, 0, 0, 0,
	0, 844, 0, 0, 0, 267, 845, 267, 267, 0,
	0, 267, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 869, 0,
	821, 0, 0, 0, 0, 846, 0, 0, 0, 0,
	0, 0, 0, 4404, 0, 0, 0, 0, 0, 867,
	1821, 0, 4412, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4420, 0, 0, 1079,
	0, 0, 840, 1816, 0, 0, 0, 0, 0, 267,
	267, 0, 0, 4429, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 847, 0, 0, 848, 0, 0,
	1834, 0, 0, 0, 0, 267, 267, 0, 0, 871,
	0, 0, 0, 0, 753, 0, 1792, 1793, 0, 1825,
	1826, 1827, 1836, 1837, 1838, 0, 0, 0, 0, 0,
	0, 1847, 0, 0, 0, 0, 0, 0, 1829, 1823,
	0, 0, 0, 0, 0, 0, 1795, 0, 0, 0,
	0, 0, 0, 0, 0, 1842, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1848, 0, 0, 0, 0, 0, 0, 0,
	0, 1794, 0, 0, 0, 0, 0, 0, 870, 0,
	0, 1814, 0, 0, 0, 0, 0, 0, 865, 0,
	1811, 0, 0, 1832, 0, 0, 267, 0, 0, 0,
	0, 0, 0, 1806, 1807, 1813, 1835, 1812, 1808, 0,
	1805, 1803, 1804, 1796, 1797, 1798, 1799, 1801, 1802, 0,
	267, 0, 0, 0, 0, 0, 0, 3726, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4555,
	0, 0, 0, 4559, 0, 0, 0, 0, 0, 849,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	851, 0, 0, 0, 1255, 1255, 1817, 1818, 1819, 1820,
	0, 0, 0, 0, 0, 0, 1800, 0, 0, 0,
	1255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 852, 1792, 1793, 0, 0, 0, 0, 1255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1255, 0, 0, 1255, 1833, 1823, 0, 1843, 0, 861,
	1079, 1079, 1795, 0, 1822, 1824, 0, 0, 0, 0,
	4616, 752, 0, 0, 2024, 0, 0, 0, 1255, 0,
	0, 1839, 0, 1840, 838, 0, 862, 0, 1848, 0,
	1809, 1810, 0, 0, 1255, 853, 0, 1794, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1814, 1831, 0,
	0, 0, 0, 0, 0, 0, 1811, 0, 0, 0,
	859, 0, 0, 1815, 2459, 0, 0, 0, 0, 0,
	0, 0, 0, 4357, 0, 0, 0, 854, 0, 0,
	1255, 855, 874, 0, 873, 2024, 0, 0, 856, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 857, 0, 0, 0, 0, 866, 1841, 0,
	0, 3208, 0, 875, 0, 872, 0, 1079, 0, 1255,
	0, 754, 1963, 0, 1251, 0, 1830, 0, 267, 0,
	0, 0, 1817, 1818, 1819, 1820, 0, 1845, 0, 0,
	0, 1255, 1800, 1255, 267, 1963, 267, 0, 0, 0,
	0, 0, 821, 0, 0, 0, 0, 0, 0, 821,
	0, 0, 0, 0, 0, 1255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1255, 4737, 4737, 4737,
	1255, 0, 0, 0, 0, 0, 267, 0, 0, 0,
	1822, 1824, 1821, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1255, 0, 0, 0, 0,
	4760, 0, 0, 0, 0, 1816, 1809, 1810, 0, 1255,
	0, 1255, 0, 0, 0, 1255, 0, 0, 0, 0,
	0, 0, 0, 1255, 0, 0, 0, 0, 0, 0,
	0, 0, 1834, 0, 1255, 0, 0, 0, 0, 1815,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1255,
	0, 0, 0, 0, 0, 0, 0, 4737, 0, 0,
	0, 0, 0, 1847, 0, 0, 1255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1255, 1255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1845, 0, 0, 1255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1832, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1806, 1807, 1813, 1835, 1812,
	1808, 0, 1805, 1803, 1804, 1796, 1797, 1798, 1799, 1801,
	1802, 1255, 0, 0, 1255, 0, 0, 0, 1821, 3271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 267, 0, 4737, 4895,
	821, 1816, 0, 0, 0, 0, 0, 4899, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2024, 0, 1792, 1793, 0, 1825, 1826, 1827, 1836,
	1837, 1838, 0, 0, 0, 0, 0, 0, 0, 0,
	1255, 0, 0, 0, 267, 1829, 1823, 0, 267, 1847,
	0, 0, 0, 1795, 267, 0, 0, 1255, 0, 0,
	267, 0, 1842, 0, 0, 0, 0, 2024, 2024, 0,
	0, 0, 0, 0, 0, 0, 267, 0, 267, 1848,
	0, 0, 0, 0, 267, 0, 0, 0, 1794, 0,
	0, 0, 0, 0, 0, 0, 2024, 2024, 1814, 0,
	0, 0, 0, 0, 0, 0, 0, 1811, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 267, 0, 0, 267, 2024,
	0, 0, 0, 0, 0, 1812, 1808, 0, 1805, 1803,
	1804, 1796, 1797, 1798, 1799, 1801, 1802, 0, 0, 267,
	0, 0, 0, 0, 0, 0, 1255, 1255, 0, 0,
	0, 0, 821, 267, 0, 267, 0, 267, 0, 267,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	1792, 1793, 0, 1817, 1818, 1819, 1820, 0, 0, 0,
	0, 1255, 0, 1800, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1823, 0, 0, 0, 0, 0, 0,
	1795, 0, 0, 267, 267, 267, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1833, 0, 0, 1843, 0, 1848, 0, 0, 0,
	0, 1822, 1824, 0, 0, 1794, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1814, 0, 0, 1839, 0,
	1840, 1141, 0, 0, 1811, 0, 0, 1809, 1810, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1831, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1815, 0, 0, 0, 0, 0, 0, 269, 269, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3201,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	1817, 1818, 1819, 1820, 0, 1841, 0, 0, 0, 0,
	1800, 0, 0, 0, 0, 0, 0, 0, 1255, 0,
	0, 0, 269, 1255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1845, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2024, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1822, 1824,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1255,
	0, 0, 0, 1251, 1809, 1810, 0, 0, 0, 1821,
	0, 0, 0, 1255, 0, 0, 0, 0, 0, 1251,
	0, 0, 0, 0, 1255, 1255, 1255, 0, 0, 0,
	0, 0, 1816, 267, 0, 0, 0, 1815, 0, 0,
	0, 1255, 1255, 1255, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 1834,
	1255, 0, 0, 0, 0, 0, 1255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1847, 0, 1255, 0, 0, 0, 0, 0, 0, 0,
	267, 1244, 0, 2024, 0, 0, 0, 0, 0, 0,
	0, 1845, 0, 0, 0, 267, 0, 0, 267, 0,
	0, 0, 267, 0, 267, 0, 0, 0, 0, 0,
	0, 267, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 0, 0, 0, 263, 263, 688,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1832, 0, 0, 0, 1821, 0, 0, 0,
	0, 0, 1806, 1807, 1813, 1835, 1812, 1808, 0, 1805,
	1803, 1804, 1796, 1797, 1798, 1799, 1801, 1802, 0, 1816,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 1255, 0, 0, 0, 0, 0, 0, 0,
	1255, 0, 267, 0, 1255, 0, 1255, 0, 0, 0,
	0, 0, 0, 1255, 0, 267, 0, 0, 0, 0,
	0, 0, 0, 0, 1255, 1255, 0, 0, 0, 0,
	0, 0, 0, 0, 1255, 0, 0, 1847, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1255,
	0, 1255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	821, 0, 0, 0, 1255, 0, 0, 738, 0, 0,
	0, 0, 0, 0, 1255, 0, 1255, 0, 0, 1255,
	0, 0, 0, 0, 0, 0, 0, 721, 0, 267,
	1255, 821, 722, 0, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 1812, 1808, 0, 1805, 1803, 1804, 1796,
	1797, 1798, 1799, 1801, 1802, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1255, 1255,
	0, 723, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 724, 0, 0, 0, 0, 0, 1255, 0,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	1255, 0, 0, 725, 0, 1255, 0, 0, 0, 0,
	267, 0, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 744, 0, 0, 0, 0,
	1255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1255, 1255, 1255, 1255, 726, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 727,
	0, 0, 0, 267, 267, 267, 267, 0, 0, 0,
	0, 0, 267, 0, 0, 267, 1255, 0, 0, 0,
	0, 728, 0, 0, 729, 0, 0, 0, 1117, 109,
	0, 0, 0, 0, 0, 0, 0, 2024, 0, 0,
	0, 753, 0, 0, 0, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 1255, 0, 1255,
	0, 0, 0, 0, 0, 0, 743, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2024, 0, 0,
	0, 269, 109, 269, 269, 740, 0, 269, 0, 1339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1255, 0, 0, 0, 0, 0, 0, 1255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1255, 1255, 0,
	0, 0, 0, 0, 269, 1339, 269, 269, 0, 1339,
	269, 269, 0, 0, 0, 0, 1339, 0, 0, 0,
	0, 0, 0, 0, 0, 750, 0, 731, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 1054, 0,
	0, 0, 1255, 0, 0, 1255, 0, 0, 0, 1074,
	1339, 0, 0, 0, 0, 0, 751, 0, 732, 0,
	0, 0, 0, 1255, 1255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1339, 0, 269, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1339, 1238, 752, 0,
	0, 0, 2024, 1339, 269, 269, 733, 0, 0, 0,
	0, 748, 749, 746, 0, 0, 0, 1339, 0, 741,
	0, 0, 734, 0, 0, 0, 0, 738, 0, 0,
	0, 0, 1792, 1793, 0, 1825, 1826, 1827, 1836, 1837,
	1838, 0, 0, 0, 0, 0, 0, 721, 0, 0,
	0, 0, 722, 1255, 1251, 1823, 0, 0, 0, 0,
	0, 0, 1795, 0, 735, 0, 742, 0, 1255, 0,
	1251, 1842, 0, 1339, 0, 736, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1848, 737,
	0, 723, 0, 0, 745, 0, 0, 1794, 0, 0,
	1963, 0, 724, 0, 0, 269, 0, 1814, 754, 0,
	0, 1302, 0, 1302, 1302, 0, 1811, 0, 0, 739,
	0, 0, 0, 725, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 0, 1255, 0, 0, 1255, 0,
	0, 0, 1255, 0, 0, 744, 0, 0, 0, 0,
	267, 0, 1255, 1255, 267, 267, 0, 0, 0, 0,
	0, 0, 0, 0, 1392, 0, 726, 0, 0, 1255,
	1498, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 267, 0, 0, 0, 727,
	0, 0, 1817, 1818, 1819, 1820, 0, 0, 0, 0,
	0, 0, 1800, 0, 0, 0, 0, 0, 0, 0,
	0, 728, 0, 0, 729, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 267, 267, 0, 0,
	267, 753, 0, 0, 0, 0, 0, 1963, 0, 0,
	1833, 0, 0, 1843, 0, 0, 0, 0, 0, 0,
	1822, 1824, 267, 0, 0, 0, 743, 0, 0, 0,
	0, 0, 0, 0, 1626, 1627, 0, 1839, 0, 1840,
	0, 0, 0, 0, 0, 0, 1809, 1810, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1831, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1815,
	0, 0, 0, 0, 0, 740, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 821, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 1841, 267, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 1739, 0, 0, 1339, 0,
	0, 0, 0, 269, 269, 269, 267, 0, 0, 0,
	0, 269, 0, 1845, 0, 0, 1251, 731, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 751, 0, 732, 267,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1821, 0,
	0, 0, 1255, 0, 1255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 752, 0,
	0, 1816, 0, 0, 0, 0, 733, 0, 1339, 0,
	0, 748, 749, 746, 0, 0, 0, 0, 0, 741,
	0, 0, 734, 267, 0, 267, 0, 0, 1834, 0,
	0, 0, 0, 0, 0, 1339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 109, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1847,
	0, 267, 0, 0, 735, 0, 742, 0, 0, 0,
	0, 0, 0, 0, 0, 736, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 737,
	0, 0, 0, 0, 745, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 754, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 739,
	0, 0, 0, 0, 0, 0, 0, 0, 109, 0,
	109, 1832, 109, 0, 0, 0, 0, 0, 0, 0,
	0, 1806, 1807, 1813, 1835, 1812, 1808, 0, 1805, 1803,
	1804, 1796, 1797, 1798, 1799, 1801, 1802, 1979, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 1339, 1339, 269,
	0, 0, 0, 1990, 0, 1498, 0, 1339, 0, 0,
	0, 0, 0, 1074, 109, 109, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 109,
	0, 109, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 109, 0, 109, 0, 1302, 1251, 1251, 0, 0,
	0, 0, 1498, 269, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 269, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 1339, 0, 1339, 0, 1339, 0, 109, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1339, 1339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1339, 269, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 1339, 0, 1339, 1339, 1339,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 269, 0, 269, 0, 269, 0, 269, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1054, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 269, 269, 269, 1862, 0, 0, 0,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1868, 0, 0, 0, 1874, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 1339, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2260, 0, 0, 0, 2267, 0, 0,
	0, 0, 0, 1251, 0, 0, 0, 0, 0, 2280,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	273, 0, 0, 0, 0, 2292, 0, 2292, 0, 0,
	0, 0, 0, 2299, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1961, 1339,
	1964, 0, 109, 0, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2267, 0, 0, 2326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 813, 0, 0, 2346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2362, 0, 2364, 0, 2366, 0, 2368, 1339,
	2369, 813, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 1339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 2396, 2397, 2398, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1251, 0, 0, 0, 0, 0, 0, 0,
	1251, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 1963, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 269, 0, 0,
	0, 269, 0, 269, 0, 0, 0, 0, 0, 0,
	269, 269, 0, 0, 0, 0, 1339, 1339, 0, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 1963,
	0, 1963, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	1339, 0, 0, 0, 0, 0, 0, 267, 0, 0,
	267, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	267, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 1339, 0, 0,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 1339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 2776, 0, 0, 0, 0, 0, 0, 0,
	1963, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 1074,
	269, 1074, 1339, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1339, 0, 1339,
	0, 0, 0, 0, 2824, 0, 0, 1302, 0, 0,
	269, 1302, 0, 1302, 1339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	2280, 269, 0, 0, 0, 0, 0, 0, 0, 109,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 269, 269, 269, 0, 0, 0, 0,
	0, 269, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 1054, 0, 0, 1054, 1054, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 1498, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2527, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1074, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1868, 1963, 1963, 0, 1868, 0, 2267, 0,
	0, 0, 0, 0, 0, 0, 0, 2280, 0, 0,
	0, 0, 267, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1133, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3119, 0, 0, 0, 0, 0, 0, 0, 0, 1238,
	0, 0, 0, 0, 0, 0, 0, 0, 1337, 3130,
	0, 3133, 0, 1963, 0, 1964, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1963, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	267, 0, 0, 109, 1398, 0, 0, 0, 1398, 0,
	0, 0, 0, 0, 0, 1337, 0, 0, 0, 0,
	0, 0, 3163, 1498, 3165, 1498, 0, 0, 0, 0,
	0, 3171, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1963, 0, 267, 1963, 1337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1302, 0, 0, 0, 0,
	0, 0, 0, 3199, 0, 1337, 0, 0, 0, 0,
	0, 0, 0, 0, 1339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1337, 0, 0, 0, 0,
	0, 0, 1337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1337, 1339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1339, 0, 0, 0, 0, 0, 0, 0,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1337, 1339, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 269, 269, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 1339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	109, 0, 0, 109, 0, 109, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 269, 0, 1339, 269,
	0, 0, 0, 267, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1339, 269, 1339, 0, 0, 0, 0, 0, 0, 0,
	109, 0, 0, 109, 0, 0, 0, 0, 0, 109,
	0, 0, 0, 0, 1339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1339, 0, 0, 0, 1339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1339, 0, 0, 0, 0, 0,
	0, 0, 1963, 269, 1963, 0, 0, 0, 1339, 0,
	1339, 0, 0, 0, 1339, 0, 0, 0, 0, 0,
	0, 269, 1339, 0, 109, 0, 0, 0, 0, 0,
	269, 0, 0, 1339, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1339, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1302,
	1339, 1339, 0, 1498, 1498, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1339, 0, 1398, 0, 0,
	0, 0, 0, 0, 3443, 0, 0, 0, 0, 0,
	813, 0, 0, 0, 0, 0, 0, 813, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2527, 0, 0,
	1339, 0, 269, 1339, 269, 3493, 3495, 0, 0, 2280,
	0, 0, 0, 0, 0, 0, 0, 0, 1868, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1339,
	0, 0, 0, 0, 1398, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3592, 0, 0, 0, 3596, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1338, 0, 0, 0,
	0, 0, 0, 0, 1792, 1793, 0, 1825, 1826, 1827,
	1836, 1837, 1838, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1829, 1823, 0, 0,
	0, 0, 0, 0, 1795, 0, 0, 0, 0, 0,
	0, 0, 1399, 1842, 0, 0, 1399, 0, 3649, 0,
	0, 0, 0, 1338, 0, 0, 0, 0, 0, 0,
	1848, 0, 0, 0, 0, 0, 1337, 1337, 0, 1794,
	1238, 0, 0, 0, 0, 0, 1398, 0, 0, 1814,
	1339, 0, 0, 0, 0, 0, 1238, 1338, 1811, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3695, 1338, 1498, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1338, 0, 0, 0, 0, 0, 0,
	1338, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3708, 0, 0, 0, 1338, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1817, 1818, 1819, 1820, 0, 0,
	0, 1337, 0, 1337, 1800, 1337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1337, 1337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1337, 0, 0, 0, 0, 0, 0, 0,
	1338, 0, 1833, 0, 1337, 1843, 1337, 1337, 1337, 0,
	0, 0, 1822, 1824, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 109, 109, 0, 109, 109, 109, 1839,
	813, 1840, 0, 0, 0, 0, 0, 1339, 1809, 1810,
	0, 0, 1339, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1831, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 1815, 269, 0, 109, 109, 0, 109, 109, 109,
	0, 0, 269, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 0, 1339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1841, 0, 0, 0,
	0, 0, 0, 1339, 1339, 1339, 0, 0, 0, 0,
	0, 0, 0, 0, 1830, 1398, 0, 0, 0, 0,
	1339, 1339, 1339, 0, 0, 1845, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1339,
	0, 0, 0, 269, 0, 1339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1339, 1238, 0, 0, 1074, 0, 0, 0, 0,
	1821, 0, 0, 0, 0, 0, 0, 0, 0, 109,
	109, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1816, 0, 0, 0, 0, 1398, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1834, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1847, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1399, 0, 0, 1398, 0,
	0, 0, 0, 2280, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1339, 0, 1339, 0, 0, 0, 0,
	0, 0, 2280, 0, 1398, 0, 0, 0, 0, 0,
	0, 0, 3988, 1339, 1339, 0, 0, 0, 0, 0,
	0, 0, 0, 1339, 0, 0, 0, 2280, 0, 0,
	0, 0, 4006, 1832, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1806, 1807, 1813, 1835, 1812, 1808, 0,
	1805, 1803, 1804, 1796, 1797, 1798, 1799, 1801, 1802, 0,
	0, 0, 0, 0, 0, 0, 0, 3270, 0, 0,
	269, 0, 0, 1339, 0, 1338, 0, 0, 0, 0,
	0, 0, 0, 1339, 0, 1339, 269, 0, 1339, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1339,
	0, 0, 1399, 4058, 0, 1337, 1337, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1339, 1339, 0,
	0, 0, 0, 0, 109, 0, 0, 0, 0, 1398,
	0, 0, 0, 0, 0, 0, 0, 1339, 0, 0,
	269, 0, 1238, 1238, 0, 0, 0, 0, 0, 1339,
	269, 0, 0, 0, 1339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1339, 1339, 1339, 1339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1339, 1398, 0, 0, 0,
	0, 0, 0, 0, 1338, 1338, 0, 0, 0, 1792,
	1793, 0, 1337, 0, 1399, 1836, 1837, 1838, 0, 0,
	0, 0, 0, 0, 0, 1339, 0, 0, 0, 0,
	0, 0, 1823, 0, 0, 0, 0, 0, 0, 1795,
	0, 0, 0, 0, 0, 0, 0, 0, 1842, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 813,
	0, 1337, 0, 0, 0, 1848, 1339, 0, 1339, 0,
	0, 0, 0, 0, 1794, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1814, 0, 0, 0, 0, 0,
	0, 1339, 1337, 1811, 0, 0, 0, 0, 0, 0,
	4200, 269, 0, 0, 0, 0, 1337, 0, 1337, 1338,
	0, 1338, 0, 1338, 0, 0, 2280, 0, 0, 0,
	0, 0, 0, 1337, 0, 0, 0, 0, 0, 1338,
	1338, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1338, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1338, 0, 1338, 1338, 1338, 0, 0, 1339,
	0, 0, 0, 0, 0, 0, 1339, 269, 0, 1817,
	1818, 1819, 1820, 0, 0, 0, 1339, 1339, 0, 1800,
	0, 0, 0, 109, 0, 0, 0, 0, 0, 0,
	2280, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4288, 0, 0, 0, 0, 0, 0, 0, 0, 1238,
	0, 0, 0, 0, 0, 0, 0, 1833, 0, 0,
	1843, 1339, 0, 0, 1339, 0, 0, 1822, 1824, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1809, 1810, 0, 0, 109, 0, 0,
	0, 269, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 1831, 0, 1792, 1793, 0, 1825, 1826, 1827, 1836,
	1837, 1838, 0, 1399, 0, 0, 1815, 0, 0, 0,
	0, 0, 0, 0, 0, 1829, 1823, 0, 0, 0,
	0, 0, 0, 1795, 0, 0, 0, 0, 0, 0,
	0, 0, 1842, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1848,
	0, 0, 0, 0, 0, 0, 0, 0, 1794, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1814, 0,
	0, 0, 0, 0, 0, 0, 0, 1811, 0, 0,
	1845, 4389, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 1399, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 109, 0, 0, 0, 0, 0, 1238, 0,
	0, 0, 0, 0, 0, 0, 1238, 0, 0, 0,
	0, 0, 0, 0, 0, 1821, 269, 0, 0, 0,
	0, 1339, 0, 0, 0, 0, 0, 2280, 0, 0,
	0, 1339, 1339, 1817, 1818, 1819, 1820, 0, 1816, 0,
	0, 0, 0, 1800, 0, 0, 1399, 0, 1339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1834, 0, 0, 0, 0,
	0, 0, 1399, 0, 0, 0, 0, 0, 0, 0,
	0, 1833, 0, 0, 1843, 0, 0, 0, 0, 0,
	0, 1822, 1824, 0, 0, 0, 1847, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1839, 269,
	1840, 0, 0, 0, 0, 0, 0, 1809, 1810, 0,
	0, 4524, 1498, 1398, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1831, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1815, 0, 0, 0, 0, 269, 1398, 0, 0, 0,
	0, 0, 0, 109, 0, 0, 0, 0, 1832, 0,
	0, 1398, 0, 1338, 1338, 0, 109, 0, 0, 0,
	0, 1835, 1812, 1808, 0, 1805, 1803, 1804, 1796, 1797,
	1798, 1799, 1801, 1802, 0, 1841, 1398, 0, 0, 109,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1337, 1830, 0, 0, 0, 1399, 0, 0,
	0, 0, 0, 0, 1845, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1337, 0,
	0, 0, 0, 0, 0, 0, 1792, 1793, 0, 1825,
	1826, 1827, 1836, 1837, 1838, 0, 4621, 0, 0, 1821,
	0, 0, 0, 0, 0, 0, 0, 0, 1829, 1823,
	0, 0, 0, 0, 1399, 0, 1795, 1337, 0, 0,
	0, 0, 1816, 0, 0, 1842, 0, 0, 0, 0,
	1338, 0, 0, 0, 0, 0, 0, 0, 0, 1337,
	0, 1337, 1848, 0, 0, 0, 0, 0, 0, 1834,
	0, 1794, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1814, 0, 1398, 0, 0, 0, 0, 0, 0,
	1811, 0, 0, 0, 1337, 0, 0, 0, 1337, 1338,
	1847, 0, 0, 0, 0, 0, 0, 0, 0, 4675,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1337, 0, 0, 0, 0, 0, 0,
	1338, 0, 0, 0, 0, 0, 0, 1337, 0, 1337,
	0, 0, 0, 1398, 1338, 0, 1338, 0, 0, 0,
	813, 1337, 0, 0, 0, 4714, 0, 0, 0, 0,
	0, 1338, 1337, 0, 0, 0, 1817, 1818, 1819, 1820,
	0, 0, 1832, 0, 0, 0, 1800, 1337, 0, 0,
	0, 0, 1806, 1807, 1813, 1835, 1812, 1808, 0, 1805,
	1803, 1804, 1796, 1797, 1798, 1799, 1801, 1802, 0, 0,
	0, 0, 0, 0, 0, 0, 3267, 0, 0, 0,
	0, 0, 0, 0, 1833, 0, 0, 1843, 0, 1337,
	1337, 2527, 0, 0, 1822, 1824, 0, 0, 0, 0,
	0, 0, 4780, 0, 0, 0, 0, 0, 0, 0,
	0, 1839, 0, 1840, 1337, 0, 0, 0, 0, 0,
	1809, 1810, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1831, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1815, 0, 0, 0, 0, 0, 1398,
	0, 0, 1398, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1841, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1830, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1845, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1398, 0,
	0, 0, 0, 0, 109, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1398, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 109, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1821, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1816, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1792, 1793, 0, 1825, 1826, 1827, 1836,
	1837, 1838, 1834, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1829, 1823, 0, 0, 0,
	0, 0, 0, 1795, 0, 0, 0, 0, 0, 0,
	0, 0, 1842, 1847, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1848,
	0, 0, 0, 0, 0, 0, 0, 0, 1794, 1398,
	0, 0, 0, 0, 0, 0, 0, 0, 1814, 0,
	109, 0, 0, 0, 0, 0, 109, 1811, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1399, 0, 0, 0, 1832, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1806, 1807, 1813, 1835, 1812,
	1808, 0, 1805, 1803, 1804, 1796, 1797, 1798, 1799, 1801,
	1802, 0, 0, 0, 1399, 0, 0, 0, 0, 3266,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1399,
	0, 0, 0, 1817, 1818, 1819, 1820, 0, 0, 0,
	0, 0, 0, 1800, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1399, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1338, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1833, 0, 0, 1843, 0, 0, 0, 0, 0,
	0, 1822, 1824, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1337, 0, 1839, 0,
	1840, 1337, 0, 0, 0, 0, 1338, 1809, 1810, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1831, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1815, 0, 0, 0, 0, 1338, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1338, 0, 1338,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1337, 1337, 1337, 1841, 0, 0, 0, 0,
	0, 1399, 0, 0, 0, 0, 0, 0, 0, 1337,
	1337, 1337, 1338, 1830, 0, 0, 1338, 0, 0, 0,
	0, 0, 0, 0, 1845, 0, 0, 0, 1337, 0,
	0, 0, 0, 0, 1398, 0, 0, 0, 0, 0,
	0, 1338, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1338, 0, 1338, 0, 0,
	1398, 1399, 0, 0, 0, 0, 0, 0, 0, 1338,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1821,
	1338, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1338, 0, 0, 0, 0,
	0, 0, 1816, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1834,
	0, 0, 0, 0, 0, 0, 0, 1338, 1338, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1847, 0, 1338, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1398, 0, 1398, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1337, 1337, 0, 0, 0, 1399, 0, 0,
	1399, 0, 1398, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1832, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1806, 1807, 1813, 1835, 1812, 1808, 0, 1805,
	1803, 1804, 1796, 1797, 1798, 1799, 1801, 1802, 0, 0,
	0, 0, 1337, 0, 0, 0, 3265, 0, 0, 0,
	0, 0, 1398, 0, 1337, 0, 0, 1337, 0, 0,
	0, 0, 0, 0, 0, 0, 1399, 0, 1398, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1399, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1337, 1337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1398, 0,
	0, 0, 0, 1337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1337, 1337, 1337, 1337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1398, 0, 0, 0, 0, 1792,
	1793, 0, 1825, 1826, 1827, 1836, 1837, 1838, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1399, 0, 0,
	0, 1829, 1823, 0, 1398, 0, 0, 0, 0, 1795,
	0, 0, 0, 0, 0, 0, 0, 0, 1842, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1848, 0, 0, 0, 0,
	0, 0, 0, 0, 1794, 1398, 0, 1337, 0, 0,
	0, 0, 0, 0, 1814, 0, 0, 0, 0, 0,
	0, 0, 0, 1811, 0, 0, 0, 0, 0, 0,
	1398, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1398, 1817,
	1818, 1819, 1820, 0, 0, 1337, 0, 0, 0, 1800,
	0, 0, 0, 0, 0, 1337, 1337, 0, 0, 0,
	0, 0, 0, 0, 1338, 0, 0, 0, 0, 1338,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1833, 0, 0,
	1843, 0, 0, 0, 0, 0, 0, 1822, 1824, 0,
	1398, 0, 0, 1337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1839, 0, 1840, 0, 0, 0,
	0, 0, 0, 1809, 1810, 1338, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1831, 0, 0, 0, 0, 0, 0, 0, 0,
	1338, 1338, 1338, 0, 0, 0, 1815, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1338, 1338, 1338,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1338, 0, 0, 0,
	0, 0, 1399, 0, 0, 0, 0, 0, 0, 0,
	0, 1841, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1399, 1830,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1845, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1821, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1337, 0, 0, 0, 0, 0, 0, 0, 1816, 0,
	1337, 1337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1337, 0, 0,
	0, 0, 0, 0, 0, 1834, 0, 0, 0, 0,
	1399, 0, 1399, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1338, 1338, 0, 0, 0, 0, 1847, 0, 0, 0,
	1399, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 955,
	0, 1004, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1338, 0, 0, 0, 0, 963, 0, 0, 0, 0,
	1399, 0, 1338, 0, 0, 1338, 0, 0, 1832, 0,
	0, 978, 0, 961, 960, 0, 1399, 0, 1806, 1807,
	1813, 1835, 1812, 1808, 0, 1805, 1803, 1804, 1796, 1797,
	1798, 1799, 1801, 1802, 0, 980, 0, 0, 0, 0,
	0, 962, 2586, 0, 0, 0, 965, 0, 0, 0,
	0, 1015, 0, 0, 1338, 1338, 0, 0, 0, 0,
	975, 976, 0, 0, 0, 0, 0, 0, 0, 993,
	0, 0, 0, 0, 1338, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1399, 1005, 967, 0,
	0, 1338, 0, 0, 968, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 969, 0, 0, 0,
	0, 0, 0, 0, 0, 1002, 0, 0, 1338, 1338,
	1338, 1338, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1399, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1003, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 971, 1399, 0, 0, 0, 0, 0, 0, 959,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 972, 973,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1399, 0, 1338, 0, 981, 979, 0,
	0, 0, 0, 0, 0, 974, 0, 0, 0, 990,
	0, 0, 1010, 1009, 0, 0, 0, 0, 1399, 0,
	0, 0, 0, 0, 0, 0, 0, 1012, 1001, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1006,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1399, 0, 0, 0,
	0, 0, 0, 1338, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1338, 1338, 0, 0, 0, 0, 0,
	0, 0, 0, 966, 0, 0, 1014, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 964,
	0, 0, 0, 997, 998, 0, 0, 0, 1399, 0,
	0, 1338, 0, 0, 0, 0, 0, 1000, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1007, 995, 0, 0, 0, 0, 0, 0, 0, 1013,
	991, 0, 0, 984, 982, 0, 987, 0, 0, 0,
	0, 0, 988, 0, 0, 957, 0, 1008, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 958,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 999, 0, 989, 0, 0, 0, 0, 0, 986,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1011, 0, 0, 0, 0, 0, 0, 0, 992, 0,
	0, 0, 0, 0, 0, 0, 0, 970, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 994, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 996, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1396, 0, 0, 1338, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1338, 1338,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 1401,
	284, 285, 1402, 1403, 1404, 1338, 1405, 634, 1406, 1407,
	1408, 1409, 286, 287, 1195, 288, 289, 290, 291, 292,
	293, 635, 636, 0, 294, 637, 295, 638, 1410, 639,
	296, 297, 298, 299, 300, 301, 1411, 1412, 0, 302,
	640, 641, 642, 1413, 303, 304, 643, 1414, 1340, 1415,
	305, 306, 307, 308, 309, 310, 311, 0, 1416, 313,
	314, 315, 312, 316, 1417, 317, 0, 318, 319, 320,
	321, 322, 323, 1418, 324, 325, 326, 1196, 327, 328,
	329, 1419, 1420, 1422, 1421, 1423, 1424, 1425, 330, 331,
	332, 333, 334, 0, 335, 337, 644, 645, 1426, 340,
	336, 338, 1427, 341, 339, 342, 1428, 343, 344, 345,
	1429, 1430, 346, 347, 348, 1431, 349, 350, 1432, 351,
	352, 353, 1433, 354, 355, 646, 356, 357, 358, 360,
	362, 359, 363, 364, 365, 366, 647, 648, 367, 1434,
	274, 1435, 0, 0, 0, 0, 368, 369, 370, 649,
	0, 0, 0, 371, 1436, 372, 373, 1437, 1438, 1197,
	374, 375, 376, 650, 651, 377, 378, 379, 380, 381,
	382, 383, 384, 385, 1439, 386, 652, 1440, 653, 387,
	1441, 388, 389, 390, 391, 392, 654, 655, 656, 473,
	1199, 393, 394, 1442, 395, 396, 397, 398, 399, 0,
	0, 0, 275, 400, 401, 402, 404, 1443, 1198, 403,
	657, 658, 1444, 659, 1445, 405, 406, 1200, 660, 1201,
	407, 408, 409, 1202, 410, 0, 0, 0, 411, 412,
	413, 414, 415, 416, 1446, 417, 419, 418, 1447, 420,
	661, 1203, 421, 422, 1204, 1448, 423, 0, 0, 0,
	424, 425, 428, 1449, 1450, 426, 427, 429, 430, 0,
	431, 432, 434, 437, 433, 435, 436, 438, 451, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 453, 0, 452, 1205, 454, 455, 456, 463, 465,
	466, 461, 462, 464, 467, 468, 458, 459, 460, 1206,
	469, 457, 1451, 276, 1207, 470, 471, 1452, 662, 472,
	663, 474, 475, 1453, 0, 476, 0, 1454, 1455, 478,
	479, 480, 1456, 1457, 481, 482, 664, 1208, 483, 1209,
	665, 484, 485, 477, 486, 487, 488, 489, 490, 491,
	492, 493, 494, 1458, 495, 496, 666, 497, 498, 499,
	667, 500, 501, 502, 668, 503, 669, 504, 505, 1459,
	506, 507, 0, 508, 509, 510, 511, 512, 513, 514,
	670, 515, 516, 518, 517, 519, 1460, 520, 0, 521,
	522, 523, 0, 0, 0, 0, 0, 524, 0, 526,
	527, 528, 529, 525, 530, 531, 532, 533, 534, 1461,
	535, 536, 537, 1210, 538, 539, 540, 541, 542, 671,
	543, 0, 544, 545, 551, 552, 553, 546, 547, 554,
	555, 556, 557, 558, 1462, 560, 561, 559, 562, 563,
	564, 1463, 565, 566, 548, 549, 567, 568, 1211, 569,
	570, 571, 572, 573, 574, 575, 672, 0, 576, 1464,
	577, 578, 579, 581, 550, 582, 587, 588, 673, 583,
	584, 585, 586, 674, 590, 591, 1465, 592, 593, 0,
	589, 580, 1466, 594, 595, 596, 597, 598, 599, 600,
	361, 601, 1467, 602, 675, 676, 677, 678, 1468, 611,
	1469, 603, 604, 605, 679, 606, 680, 1470, 607, 608,
	609, 610, 0, 612, 613, 1471, 1472, 614, 615, 616,
	618, 619, 617, 620, 1473, 621, 1474, 0, 622, 623,
	624, 681, 682, 683, 1475, 626, 625, 627, 684, 1476,
	628, 1477, 1478, 1479, 1480, 629, 630, 685, 631, 632,
	633, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1396, 0, 0, 0, 0, 0, 0, 0, 2754, 0,
	0, 0, 0, 0, 0, 0, 2755, 277, 279, 278,
	280, 281, 282, 283, 1401, 284, 285, 1402, 1403, 1404,
	0, 1405, 634, 1406, 1407, 1408, 1409, 286, 287, 1195,
	288, 289, 290, 291, 292, 293, 635, 636, 0, 294,
	637, 295, 638, 1410, 639, 296, 297, 298, 299, 300,
	301, 1411, 1412, 0, 302, 640, 641, 642, 1413, 303,
	304, 643, 1414, 1340, 1415, 305, 306, 307, 308, 309,
	310, 311, 0, 1416, 313, 314, 315, 312, 316, 1417,
	317, 0, 318, 319, 320, 321, 322, 323, 1418, 324,
	325, 326, 1196, 327, 328, 329, 1419, 1420, 1422, 1421,
	1423, 1424, 1425, 330, 331, 332, 333, 334, 0, 335,
	337, 644, 645, 1426, 340, 336, 338, 1427, 341, 339,
	342, 1428, 343, 344, 345, 1429, 1430, 346, 347, 348,
	1431, 349, 350, 1432, 351, 352, 353, 1433, 354, 355,
	646, 356, 357, 358, 360, 362, 359, 363, 364, 365,
	366, 647, 648, 367, 1434, 274, 1435, 0, 0, 0,
	0, 368, 369, 370, 649, 0, 0, 0, 371, 1436,
	372, 373, 1437, 1438, 1197, 374, 375, 376, 650, 651,
	377, 378, 379, 380, 381, 382, 383, 384, 385, 1439,
	386, 652, 1440, 653, 387, 1441, 388, 389, 390, 391,
	392, 654, 655, 656, 473, 1199, 393, 394, 1442, 395,
	396, 397, 398, 399, 0, 0, 0, 275, 400, 401,
	402, 404, 1443, 1198, 403, 657, 658, 1444, 659, 1445,
	405, 406, 1200, 660, 1201, 407, 408, 409, 1202, 410,
	0, 0, 0, 411, 412, 413, 414, 415, 416, 1446,
	417, 419, 418, 1447, 420, 661, 1203, 421, 422, 1204,
	1448, 423, 0, 0, 0, 424, 425, 428, 1449, 1450,
	426, 427, 429, 430, 0, 431, 432, 434, 437, 433,
	435, 436, 438, 451, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 453, 0, 452, 1205,
	454, 455, 456, 463, 465, 466, 461, 462, 464, 467,
	468, 458, 459, 460, 1206, 469, 457, 1451, 276, 1207,
	470, 471, 1452, 662, 472, 663, 474, 475, 1453, 0,
	476, 0, 1454, 1455, 478, 479, 480, 1456, 1457, 481,
	482, 664, 1208, 483, 1209, 665, 484, 485, 477, 486,
	487, 488, 489, 490, 491, 492, 493, 494, 1458, 495,
	496, 666, 497, 498, 499, 667, 500, 501, 502, 668,
	503, 669, 504, 505, 1459, 506, 507, 0, 508, 509,
	510, 511, 512, 513, 514, 670, 515, 516, 518, 517,
	519, 1460, 520, 0, 521, 522, 523, 0, 0, 0,
	0, 0, 524, 0, 526, 527, 528, 529, 525, 530,
	531, 532, 533, 534, 1461, 535, 536, 537, 1210, 538,
	539, 540, 541, 542, 671, 543, 0, 544, 545, 551,
	552, 553, 546, 547, 554, 555, 556, 557, 558, 1462,
	560, 561, 559, 562, 563, 564, 1463, 565, 566, 548,
	549, 567, 568, 1211, 569, 570, 571, 572, 573, 574,
	575, 672, 0, 576, 1464, 577, 578, 579, 581, 550,
	582, 587, 588, 673, 583, 584, 585, 586, 674, 590,
	591, 1465, 592, 593, 0, 589, 580, 1466, 594, 595,
	596, 597, 598, 599, 600, 361, 601, 1467, 602, 675,
	676, 677, 678, 1468, 611, 1469, 603, 604, 605, 679,
	606, 680, 1470, 607, 608, 609, 610, 0, 612, 613,
	1471, 1472, 614, 615, 616, 618, 619, 617, 620, 1473,
	621, 1474, 0, 622, 623, 624, 681, 682, 683, 1475,
	626, 625, 627, 684, 1476, 628, 1477, 1478, 1479, 1480,
	629, 630, 685, 631, 632, 633, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1396, 0, 0, 0, 0, 3735, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3737,
	277, 279, 278, 280, 281, 282, 283, 1401, 284, 285,
	1402, 1403, 1404, 0, 1405, 634, 1406, 1407, 1408, 1409,
	286, 287, 1195, 288, 289, 290, 291, 292, 293, 635,
	636, 0, 294, 637, 295, 638, 1410, 639, 296, 297,
	298, 299, 300, 301, 1411, 1412, 0, 302, 640, 641,
	642, 1413, 303, 304, 643, 1414, 1340, 1415, 305, 306,
	307, 308, 309, 310, 311, 0, 1416, 313, 314, 315,
	312, 316, 1417, 317, 0, 318, 319, 320, 321, 322,
	323, 1418, 324, 325, 326, 1196, 327, 328, 329, 1419,
	1420, 1422, 1421, 1423, 1424, 1425, 330, 331, 332, 333,
	334, 0, 335, 337, 644, 645, 1426, 340, 336, 338,
	1427, 341, 339, 342, 1428, 343, 344, 345, 1429, 1430,
	346, 347, 348, 1431, 349, 350, 1432, 351, 352, 353,
	1433, 354, 355, 646, 356, 357, 358, 360, 362, 359,
	363, 364, 365, 366, 647, 648, 367, 1434, 274, 1435,
	0, 0, 0, 0, 368, 369, 370, 649, 0, 0,
	0, 371, 1436, 372, 373, 1437, 1438, 1197, 374, 375,
	376, 650, 651, 377, 378, 379, 380, 381, 382, 383,
	384, 385, 1439, 386, 652, 1440, 653, 387, 1441, 388,
	389, 390, 391, 392, 654, 655, 656, 473, 1199, 393,
	394, 1442, 395, 396, 397, 398, 399, 0, 0, 0,
	275, 400, 401, 402, 404, 1443, 1198, 403, 657, 658,
	1444, 659, 1445, 405, 406, 1200, 660, 1201, 407, 408,
	409, 1202, 410, 0, 0, 0, 411, 412, 413, 414,
	415, 416, 1446, 417, 419, 418, 1447, 420, 661, 1203,
	421, 422, 1204, 1448, 423, 0, 0, 0, 424, 425,
	428, 1449, 1450, 426, 427, 429, 430, 0, 431, 432,
	434, 437, 433, 435, 436, 438, 451, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 450, 453,
	0, 452, 1205, 454, 455, 456, 463, 465, 466, 461,
	462, 464, 467, 468, 458, 459, 460, 1206, 469, 457,
	1451, 276, 1207, 470, 471, 1452, 662, 472, 663, 474,
	475, 1453, 0, 476, 0, 1454, 1455, 478, 479, 480,
	1456, 1457, 481, 482, 664, 1208, 483, 1209, 665, 484,
	485, 477, 486, 487, 488, 489, 490, 491, 492, 493,
	494, 1458, 495, 496, 666, 497, 498, 499, 667, 500,
	501, 502, 668, 503, 669, 504, 505, 1459, 506, 507,
	0, 508, 509, 510, 511, 512, 513, 514, 670, 515,
	516, 518, 517, 519, 1460, 520, 0, 521, 522, 523,
	0, 0, 0, 0, 0, 524, 0, 526, 527, 528,
	529, 525, 530, 531, 532, 533, 534, 1461, 535, 536,
	537, 1210, 538, 539, 540, 541, 542, 671, 543, 0,
	544, 545, 551, 552, 553, 546, 547, 554, 555, 556,
	557, 558, 1462, 560, 561, 559, 562, 563, 564, 1463,
	565, 566, 548, 549, 567, 568, 1211, 569, 570, 571,
	572, 573, 574, 575, 672, 0, 576, 1464, 577, 578,
	579, 581, 550, 582, 587, 588, 673, 583, 584, 585,
	586, 674, 590, 591, 1465, 592, 593, 0, 589, 580,
	1466, 594, 595, 596, 597, 598, 599, 600, 361, 601,
	1467, 602, 675, 676, 677, 678, 1468, 611, 1469, 603,
	604, 605, 679, 606, 680, 1470, 607, 608, 609, 610,
	0, 612, 613, 1471, 1472, 614, 615, 616, 618, 619,
	617, 620, 1473, 621, 1474, 0, 622, 623, 624, 681,
	682, 683, 1475, 626, 625, 627, 684, 1476, 628, 1477,
	1478, 1479, 1480, 629, 630, 685, 631, 632, 633, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1396, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4129, 277, 279, 278,
	280, 281, 282, 283, 1401, 284, 285, 1402, 1403, 1404,
	0, 1405, 634, 1406, 1407, 1408, 1409, 286, 287, 1195,
	288, 289, 290, 291, 292, 293, 635, 636, 0, 294,
	637, 295, 638, 1410, 639, 296, 297, 298, 299, 300,
	301, 1411, 1412, 0, 302, 640, 641, 642, 1413, 303,
	304, 643, 1414, 1340, 1415, 305, 306, 307, 308, 309,
	310, 311, 0, 1416, 313, 314, 315, 312, 316, 1417,
	317, 0, 318, 319, 320, 321, 322, 323, 1418, 324,
	325, 326, 1196, 327, 328, 329, 1419, 1420, 1422, 1421,
	1423, 1424, 1425, 330, 331, 332, 333, 334, 0, 335,
	337, 644, 645, 1426, 340, 336, 338, 1427, 341, 339,
	342, 1428, 343, 344, 345, 1429, 1430, 346, 347, 348,
	1431, 349, 350, 1432, 351, 352, 353, 1433, 354, 355,
	646, 356, 357, 358, 360, 362, 359, 363, 364, 365,
	366, 647, 648, 367, 1434, 274, 1435, 0, 0, 0,
	0, 368, 369, 370, 649, 0, 0, 0, 371, 1436,
	372, 373, 1437, 1438, 1197, 374, 375, 376, 650, 651,
	377, 378, 379, 380, 381, 382, 383, 384, 385, 1439,
	386, 652, 1440, 653, 387, 1441, 388, 389, 390, 391,
	392, 654, 655, 656, 473, 1199, 393, 394, 1442, 395,
	396, 397, 398, 399, 0, 0, 0, 275, 400, 401,
	402, 404, 1443, 1198, 403, 657, 658, 1444, 659, 1445,
	405, 406, 1200, 660, 1201, 407, 408, 409, 1202, 410,
	0, 0, 0, 411, 412, 413, 414, 415, 416, 1446,
	417, 419, 418, 1447, 420, 661, 1203, 421, 422, 1204,
	1448, 423, 0, 0, 0, 424, 425, 428, 1449, 1450,
	426, 427, 429, 430, 0, 431, 432, 434, 437, 433,
	435, 436, 438, 451, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 453, 0, 452, 1205,
	454, 455, 456, 463, 465, 466, 461, 462, 464, 467,
	468, 458, 459, 460, 1206, 469, 457, 1451, 276, 1207,
	470, 471, 1452, 662, 472, 663, 474, 475, 1453, 0,
	476, 0, 1454, 1455, 478, 479, 480, 1456, 1457, 481,
	482, 664, 1208, 483, 1209, 665, 484, 485, 477, 486,
	487, 488, 489, 490, 491, 492, 493, 494, 1458, 495,
	496, 666, 497, 498, 499, 667, 500, 501, 502, 668,
	503, 669, 504, 505, 1459, 506, 507, 0, 508, 509,
	510, 511, 512, 513, 514, 670, 515, 516, 518, 517,
	519, 1460, 520, 0, 521, 522, 523, 0, 0, 0,
	0, 0, 524, 0, 526, 527, 528, 529, 525, 530,
	531, 532, 533, 534, 1461, 535, 536, 537, 1210, 538,
	539, 540, 541, 542, 671, 543, 0, 544, 545, 551,
	552, 553, 546, 547, 554, 555, 556, 557, 558, 1462,
	560, 561, 559, 562, 563, 564, 1463, 565, 566, 548,
	549, 567, 568, 1211, 569, 570, 571, 572, 573, 574,
	575, 672, 0, 576, 1464, 577, 578, 579, 581, 550,
	582, 587, 588, 673, 583, 584, 585, 586, 674, 590,
	591, 1465, 592, 593, 0, 589, 580, 1466, 594, 595,
	596, 597, 598, 599, 600, 361, 601, 1467, 602, 675,
	676, 677, 678, 1468, 611, 1469, 603, 604, 605, 679,
	606, 680, 1470, 607, 608, 609, 610, 0, 612, 613,
	1471, 1472, 614, 615, 616, 618, 619, 617, 620, 1473,
	621, 1474, 0, 622, 623, 624, 681, 682, 683, 1475,
	626, 625, 627, 684, 1476, 628, 1477, 1478, 1479, 1480,
	629, 630, 685, 631, 632, 633, 0, 0, 0, 0,
	0, 0, 1396, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4340, 277,
	279, 278, 280, 281, 282, 283, 1401, 284, 285, 1402,
	1403, 1404, 0, 1405, 634, 1406, 1407, 1408, 1409, 286,
	287, 1195, 288, 289, 290, 291, 292, 293, 635, 636,
	0, 294, 637, 295, 638, 1410, 639, 296, 297, 298,
	299, 300, 301, 1411, 1412, 0, 302, 640, 641, 642,
	1413, 303, 304, 643, 1414, 1340, 1415, 305, 306, 307,
	308, 309, 310, 311, 0, 1416, 313, 314, 315, 312,
	316, 1417, 317, 0, 318, 319, 320, 321, 322, 323,
	1418, 324, 325, 326, 1196, 327, 328, 329, 1419, 1420,
	1422, 1421, 1423, 1424, 1425, 330, 331, 332, 333, 334,
	0, 335, 337, 644, 645, 1426, 340, 336, 338, 1427,
	341, 339, 342, 1428, 343, 344, 345, 1429, 1430, 346,
	347, 348, 1431, 349, 350, 1432, 351, 352, 353, 1433,
	354, 355, 646, 356, 357, 358, 360, 362, 359, 363,
	364, 365, 366, 647, 648, 367, 1434, 274, 1435, 0,
	0, 0, 0, 368, 369, 370, 649, 0, 0, 0,
	371, 1436, 372, 373, 1437, 1438, 1197, 374, 375, 376,
	650, 651, 377, 378, 379, 380, 381, 382, 383, 384,
	385, 1439, 386, 652, 1440, 653, 387, 1441, 388, 389,
	390, 391, 392, 654, 655, 656, 473, 1199, 393, 394,
	1442, 395, 396, 397, 398, 399, 0, 0, 0, 275,
	400, 401, 402, 404, 1443, 1198, 403, 657, 658, 1444,
	659, 1445, 405, 406, 1200, 660, 1201, 407, 408, 409,
	1202, 410, 0, 0, 0, 411, 412, 413, 414, 415,
	416, 1446, 417, 419, 418, 1447, 420, 661, 1203, 421,
	422, 1204, 1448, 423, 0, 0, 0, 424, 425, 428,
	1449, 1450, 426, 427, 429, 430, 0, 431, 432, 434,
	437, 433, 435, 436, 438, 451, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 453, 0,
	452, 1205, 454, 455, 456, 463, 465, 466, 461, 462,
	464, 467, 468, 458, 459, 460, 1206, 469, 457, 1451,
	276, 1207, 470, 471, 1452, 662, 472, 663, 474, 475,
	1453, 0, 476, 0, 1454, 1455, 478, 479, 480, 1456,
	1457, 481, 482, 664, 1208, 483, 1209, 665, 484, 485,
	477, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	1458, 495, 496, 666, 497, 498, 499, 667, 500, 501,
	502, 668, 503, 669, 504, 505, 1459, 506, 507, 0,
	508, 509, 510, 511, 512, 513, 514, 670, 515, 516,
	518, 517, 519, 1460, 520, 0, 521, 522, 523, 0,
	0, 0, 0, 0, 524, 0, 526, 527, 528, 529,
	525, 530, 531, 532, 533, 534, 1461, 535, 536, 537,
	1210, 538, 539, 540, 541, 542, 671, 543, 0, 544,
	545, 551, 552, 553, 546, 547, 554, 555, 556, 557,
	558, 1462, 560, 561, 559, 562, 563, 564, 1463, 565,
	566, 548, 549, 567, 568, 1211, 569, 570, 571, 572,
	573, 574, 575, 672, 0, 576, 1464, 577, 578, 579,
	581, 550, 582, 587, 588, 673, 583, 584, 585, 586,
	674, 590, 591, 1465, 592, 593, 0, 589, 580, 1466,
	594, 595, 596, 597, 598, 599, 600, 361, 601, 1467,
	602, 675, 676, 677, 678, 1468, 611, 1469, 603, 604,
	605, 679, 606, 680, 1470, 607, 608, 609, 610, 0,
	612, 613, 1471, 1472, 614, 615, 616, 618, 619, 617,
	620, 1473, 621, 1474, 0, 622, 623, 624, 681, 682,
	683, 1475, 626, 625, 627, 684, 1476, 628, 1477, 1478,
	1479, 1480, 629, 630, 685, 631, 632, 633, 0, 0,
	0, 0, 0, 0, 1396, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4209, 277, 279, 278, 280, 281, 282, 283, 1401, 284,
	285, 1402, 1403, 1404, 0, 1405, 634, 1406, 1407, 1408,
	1409, 286, 287, 1195, 288, 289, 290, 291, 292, 293,
	635, 636, 0, 294, 637, 295, 638, 1410, 639, 296,
	297, 298, 299, 300, 301, 1411, 1412, 0, 302, 640,
	641, 642, 1413, 303, 304, 643, 1414, 1340, 1415, 305,
	306, 307, 308, 309, 310, 311, 0, 1416, 313, 314,
	315, 312, 316, 1417, 317, 0, 318, 319, 320, 321,
	322, 323, 1418, 324, 325, 326, 1196, 327, 328, 329,
	1419, 1420, 1422, 1421, 1423, 1424, 1425, 330, 331, 332,
	333, 334, 0, 335, 337, 644, 645, 1426, 340, 336,
	338, 1427, 341, 339, 342, 1428, 343, 344, 345, 1429,
	1430, 346, 347, 348, 1431, 349, 350, 1432, 351, 352,
	353, 1433, 354, 355, 646, 356, 357, 358, 360, 362,
	359, 363, 364, 365, 366, 647, 648, 367, 1434, 274,
	1435, 0, 0, 0, 0, 368, 369, 370, 649, 0,
	0, 0, 371, 1436, 372, 373, 1437, 1438, 1197, 374,
	375, 376, 650, 651, 377, 378, 379, 380, 381, 382,
	383, 384, 385, 1439, 386, 652, 1440, 653, 387, 1441,
	388, 389, 390, 391, 392, 654, 655, 656, 473, 1199,
	393, 394, 1442, 395, 396, 397, 398, 399, 0, 0,
	0, 275, 400, 401, 402, 404, 1443, 1198, 403, 657,
	658, 1444, 659, 1445, 405, 406, 1200, 660, 1201, 407,
	408, 409, 1202, 410, 0, 0, 0, 411, 412, 413,
	414, 415, 416, 1446, 417, 419, 418, 1447, 420, 661,
	1203, 421, 422, 1204, 1448, 423, 0, 0, 0, 424,
	425, 428, 1449, 1450, 426, 427, 429, 430, 0, 431,
	432, 434, 437, 433, 435, 436, 438, 451, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	453, 0, 452, 1205, 454, 455, 456, 463, 465, 466,
	461, 462, 464, 467, 468, 458, 459, 460, 1206, 469,
	457, 1451, 276, 1207, 470, 471, 1452, 662, 472, 663,
	474, 475, 1453, 0, 476, 0, 1454, 1455, 478, 479,
	480, 1456, 1457, 481, 482, 664, 1208, 483, 1209, 665,
	484, 485, 477, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 1458, 495, 496, 666, 497, 498, 499, 667,
	500, 501, 502, 668, 503, 669, 504, 505, 1459, 506,
	507, 0, 508, 509, 510, 511, 512, 513, 514, 670,
	515, 516, 518, 517, 519, 1460, 520, 0, 521, 522,
	523, 0, 0, 0, 0, 0, 524, 0, 526, 527,
	528, 529, 525, 530, 531, 532, 533, 534, 1461, 535,
	536, 537, 1210, 538, 539, 540, 541, 542, 671, 543,
	0, 544, 545, 551, 552, 553, 546, 547, 554, 555,
	556, 557, 558, 1462, 560, 561, 559, 562, 563, 564,
	1463, 565, 566, 548, 549, 567, 568, 1211, 569, 570,
	571, 572, 573, 574, 575, 672, 0, 576, 1464, 577,
	578, 579, 581, 550, 582, 587, 588, 673, 583, 584,
	585, 586, 674, 590, 591, 1465, 592, 593, 0, 589,
	580, 1466, 594, 595, 596, 597, 598, 599, 600, 361,
	601, 1467, 602, 675, 676, 677, 678, 1468, 611, 1469,
	603, 604, 605, 679, 606, 680, 1470, 607, 608, 609,
	610, 0, 612, 613, 1471, 1472, 614, 615, 616, 618,
	619, 617, 620, 1473, 621, 1474, 0, 622, 623, 624,
	681, 682, 683, 1475, 626, 625, 627, 684, 1476, 628,
	1477, 1478, 1479, 1480, 629, 630, 685, 631, 632, 633,
	0, 0, 0, 0, 0, 0, 1396, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4059, 277, 279, 278, 280, 281, 282, 283,
	1401, 284, 285, 1402, 1403, 1404, 0, 1405, 634, 1406,
	1407, 1408, 1409, 286, 287, 1195, 288, 289, 290, 291,
	292, 293, 635, 636, 0, 294, 637, 295, 638, 1410,
	639, 296, 297, 298, 299, 300, 301, 1411, 1412, 0,
	302, 640, 641, 642, 1413, 303, 304, 643, 1414, 1340,
	1415, 305, 306, 307, 308, 309, 310, 311, 0, 1416,
	313, 314, 315, 312, 316, 1417, 317, 0, 318, 319,
	320, 321, 322, 323, 1418, 324, 325, 326, 1196, 327,
	328, 329, 1419, 1420, 1422, 1421, 1423, 1424, 1425, 330,
	331, 332, 333, 334, 0, 335, 337, 644, 645, 1426,
	340, 336, 338, 1427, 341, 339, 342, 1428, 343, 344,
	345, 1429, 1430, 346, 347, 348, 1431, 349, 350, 1432,
	351, 352, 353, 1433, 354, 355, 646, 356, 357, 358,
	360, 362, 359, 363, 364, 365, 366, 647, 648, 367,
	1434, 274, 1435, 0, 0, 0, 0, 368, 369, 370,
	649, 0, 0, 0, 371, 1436, 372, 373, 1437, 1438,
	1197, 374, 375, 376, 650, 651, 377, 378, 379, 380,
	381, 382, 383, 384, 385, 1439, 386, 652, 1440, 653,
	387, 1441, 388, 389, 390, 391, 392, 654, 655, 656,
	473, 1199, 393, 394, 1442, 395, 396, 397, 398, 399,
	0, 0, 0, 275, 400, 401, 402, 404, 1443, 1198,
	403, 657, 658, 1444, 659, 1445, 405, 406, 1200, 660,
	1201, 407, 408, 409, 1202, 410, 0, 0, 0, 411,
	412, 413, 414, 415, 416, 1446, 417, 419, 418, 1447,
	420, 661, 1203, 421, 422, 1204, 1448, 423, 0, 0,
	0, 424, 425, 428, 1449, 1450, 426, 427, 429, 430,
	0, 431, 432, 434, 437, 433, 435, 436, 438, 451,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 453, 0, 452, 1205, 454, 455, 456, 463,
	465, 466, 461, 462, 464, 467, 468, 458, 459, 460,
	1206, 469, 457, 1451, 276, 1207, 470, 471, 1452, 662,
	472, 663, 474, 475, 1453, 0, 476, 0, 1454, 1455,
	478, 479, 480, 1456, 1457, 481, 482, 664, 1208, 483,
	1209, 665, 484, 485, 477, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 1458, 495, 496, 666, 497, 498,
	499, 667, 500, 501, 502, 668, 503, 669, 504, 505,
	1459, 506, 507, 0, 508, 509, 510, 511, 512, 513,
	514, 670, 515, 516, 518, 517, 519, 1460, 520, 0,
	521, 522, 523, 0, 0, 0, 0, 0, 524, 0,
	526, 527, 528, 529, 525, 530, 531, 532, 533, 534,
	1461, 535, 536, 537, 1210, 538, 539, 540, 541, 542,
	671, 543, 0, 544, 545, 551, 552, 553, 546, 547,
	554, 555, 556, 557, 558, 1462, 560, 561, 559, 562,
	563, 564, 1463, 565, 566, 548, 549, 567, 568, 1211,
	569, 570, 571, 572, 573, 574, 575, 672, 0, 576,
	1464, 577, 578, 579, 581, 550, 582, 587, 588, 673,
	583, 584, 585, 586, 674, 590, 591, 1465, 592, 593,
	0, 589, 580, 1466, 594, 595, 596, 597, 598, 599,
	600, 361, 601, 1467, 602, 675, 676, 677, 678, 1468,
	611, 1469, 603, 604, 605, 679, 606, 680, 1470, 607,
	608, 609, 610, 0, 612, 613, 1471, 1472, 614, 615,
	616, 618, 619, 617, 620, 1473, 621, 1474, 0, 622,
	623, 624, 681, 682, 683, 1475, 626, 625, 627, 684,
	1476, 628, 1477, 1478, 1479, 1480, 629, 630, 685, 631,
	632, 633, 0, 0, 0, 0, 0, 0, 1396, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3753, 277, 279, 278, 280, 281,
	282, 283, 1401, 284, 285, 1402, 1403, 1404, 0, 1405,
	634, 1406, 1407, 1408, 1409, 286, 287, 1195, 288, 289,
	290, 291, 292, 293, 635, 636, 0, 294, 637, 295,
	638, 1410, 639, 296, 297, 298, 299, 300, 301, 1411,
	1412, 0, 302, 640, 641, 642, 1413, 303, 304, 643,
	1414, 1340, 1415, 305, 306, 307, 308, 309, 310, 311,
	0, 1416, 313, 314, 315, 312, 316, 1417, 317, 0,
	318, 319, 320, 321, 322, 323, 1418, 324, 325, 326,
	1196, 327, 328, 329, 1419, 1420, 1422, 1421, 1423, 1424,
	1425, 330, 331, 332, 333, 334, 0, 335, 337, 644,
	645, 1426, 340, 336, 338, 1427, 341, 339, 342, 1428,
	343, 344, 345, 1429, 1430, 346, 347, 348, 1431, 349,
	350, 1432, 351, 352, 353, 1433, 354, 355, 646, 356,
	357, 358, 360, 362, 359, 363, 364, 365, 366, 647,
	648, 367, 1434, 274, 1435, 0, 0, 0, 0, 368,
	369, 370, 649, 0, 0, 0, 371, 1436, 372, 373,
	1437, 1438, 1197, 374, 375, 376, 650, 651, 377, 378,
	379, 380, 381, 382, 383, 384, 385, 1439, 386, 652,
	1440, 653, 387, 1441, 388, 389, 390, 391, 392, 654,
	655, 656, 473, 1199, 393, 394, 1442, 395, 396, 397,
	398, 399, 0, 0, 0, 275, 400, 401, 402, 404,
	1443, 1198, 403, 657, 658, 1444, 659, 1445, 405, 406,
	1200, 660, 1201, 407, 408, 409, 1202, 410, 0, 0,
	0, 411, 412, 413, 414, 415, 416, 1446, 417, 419,
	418, 1447, 420, 661, 1203, 421, 422, 1204, 1448, 423,
	0, 0, 0, 424, 425, 428, 1449, 1450, 426, 427,
	429, 430, 0, 431, 432, 434, 437, 433, 435, 436,
	438, 451, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 453, 0, 452, 1205, 454, 455,
	456, 463, 465, 466, 461, 462, 464, 467, 468, 458,
	459, 460, 1206, 469, 457, 1451, 276, 1207, 470, 471,
	1452, 662, 472, 663, 474, 475, 1453, 0, 476, 0,
	1454, 1455, 478, 479, 480, 1456, 1457, 481, 482, 664,
	1208, 483, 1209, 665, 484, 485, 477, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 1458, 495, 496, 666,
	497, 498, 499, 667, 500, 501, 502, 668, 503, 669,
	504, 505, 1459, 506, 507, 0, 508, 509, 510, 511,
	512, 513, 514, 670, 515, 516, 518, 517, 519, 1460,
	520, 0, 521, 522, 523, 0, 0, 0, 0, 0,
	524, 0, 526, 527, 528, 529, 525, 530, 531, 532,
	533, 534, 1461, 535, 536, 537, 1210, 538, 539, 540,
	541, 542, 671, 543, 0, 544, 545, 551, 552, 553,
	546, 547, 554, 555, 556, 557, 558, 1462, 560, 561,
	559, 562, 563, 564, 1463, 565, 566, 548, 549, 567,
	568, 1211, 569, 570, 571, 572, 573, 574, 575, 672,
	0, 576, 1464, 577, 578, 579, 581, 550, 582, 587,
	588, 673, 583, 584, 585, 586, 674, 590, 591, 1465,
	592, 593, 0, 589, 580, 1466, 594, 595, 596, 597,
	598, 599, 600, 361, 601, 1467, 602, 675, 676, 677,
	678, 1468, 611, 1469, 603, 604, 605, 679, 606, 680,
	1470, 607, 608, 609, 610, 0, 612, 613, 1471, 1472,
	614, 615, 616, 618, 619, 617, 620, 1473, 621, 1474,
	0, 622, 623, 624, 681, 682, 683, 1475, 626, 625,
	627, 684, 1476, 628, 1477, 1478, 1479, 1480, 629, 630,
	685, 631, 632, 633, 0, 0, 0, 0, 0, 0,
	1396, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3576, 277, 279, 278,
	280, 281, 282, 283, 1401, 284, 285, 1402, 1403, 1404,
	0, 1405, 634, 1406, 1407, 1408, 1409, 286, 287, 1195,
	288, 289, 290, 291, 292, 293, 635, 636, 0, 294,
	637, 295, 638, 1410, 639, 296, 297, 298, 299, 300,
	301, 1411, 1412, 0, 302, 640, 641, 642, 1413, 303,
	304, 643, 1414, 1340, 1415, 305, 306, 307, 308, 309,
	310, 311, 0, 1416, 313, 314, 315, 312, 316, 1417,
	317, 0, 318, 319, 320, 321, 322, 323, 1418, 324,
	325, 326, 1196, 327, 328, 329, 1419, 1420, 1422, 1421,
	1423, 1424, 1425, 330, 331, 332, 333, 334, 0, 335,
	337, 644, 645, 1426, 340, 336, 338, 1427, 341, 339,
	342, 1428, 343, 344, 345, 1429, 1430, 346, 347, 348,
	1431, 349, 350, 1432, 351, 352, 353, 1433, 354, 355,
	646, 356, 357, 358, 360, 362, 359, 363, 364, 365,
	366, 647, 648, 367, 1434, 274, 1435, 0, 0, 0,
	0, 368, 369, 370, 649, 0, 0, 0, 371, 1436,
	372, 373, 1437, 1438, 1197, 374, 375, 376, 650, 651,
	377, 378, 379, 380, 381, 382, 383, 384, 385, 1439,
	386, 652, 1440, 653, 387, 1441, 388, 389, 390, 391,
	392, 654, 655, 656, 473, 1199, 393, 394, 1442, 395,
	396, 397, 398, 399, 0, 0, 0, 275, 400, 401,
	402, 404, 1443, 1198, 403, 657, 658, 1444, 659, 1445,
	405, 406, 1200, 660, 1201, 407, 408, 409, 1202, 410,
	0, 0, 0, 411, 412, 413, 414, 415, 416, 1446,
	417, 419, 418, 1447, 420, 661, 1203, 421, 422, 1204,
	1448, 423, 0, 0, 0, 424, 425, 428, 1449, 1450,
	426, 427, 429, 430, 0, 431, 432, 434, 437, 433,
	435, 436, 438, 451, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 453, 0, 452, 1205,
	454, 455, 456, 463, 465, 466, 461, 462, 464, 467,
	468, 458, 459, 460, 1206, 469, 457, 1451, 276, 1207,
	470, 471, 1452, 662, 472, 663, 474, 475, 1453, 0,
	476, 0, 1454, 1455, 478, 479, 480, 1456, 1457, 481,
	482, 664, 1208, 483, 1209, 665, 484, 485, 477, 486,
	487, 488, 489, 490, 491, 492, 493, 494, 1458, 495,
	496, 666, 497, 498, 499, 667, 500, 501, 502, 668,
	503, 669, 504, 505, 1459, 506, 507, 0, 508, 509,
	510, 511, 512, 513, 514, 670, 515, 516, 518, 517,
	519, 1460, 520, 0, 521, 522, 523, 0, 0, 0,
	0, 0, 524, 0, 526, 527, 528, 529, 525, 530,
	531, 532, 533, 534, 1461, 535, 536, 537, 1210, 538,
	539, 540, 541, 542, 671, 543, 0, 544, 545, 551,
	552, 553, 546, 547, 554, 555, 556, 557, 558, 1462,
	560, 561, 559, 562, 563, 564, 1463, 565, 566, 548,
	549, 567, 568, 1211, 569, 570, 571, 572, 573, 574,
	575, 672, 0, 576, 1464, 577, 578, 579, 581, 550,
	582, 587, 588, 673, 583, 584, 585, 586, 674, 590,
	591, 1465, 592, 593, 0, 589, 580, 1466, 594, 595,
	596, 597, 598, 599, 600, 361, 601, 1467, 602, 675,
	676, 677, 678, 1468, 611, 1469, 603, 604, 605, 679,
	606, 680, 1470, 607, 608, 609, 610, 0, 612, 613,
	1471, 1472, 614, 615, 616, 618, 619, 617, 620, 1473,
	621, 1474, 0, 622, 623, 624, 681, 682, 683, 1475,
	626, 625, 627, 684, 1476, 628, 1477, 1478, 1479, 1480,
	629, 630, 685, 631, 632, 633, 0, 0, 0, 0,
	0, 0, 1396, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2609, 277,
	279, 278, 280, 281, 282, 283, 1401, 284, 285, 1402,
	1403, 1404, 0, 1405, 634, 1406, 1407, 1408, 1409, 286,
	287, 1195, 288, 289, 290, 291, 292, 293, 635, 636,
	0, 294, 637, 295, 638, 1410, 639, 296, 297, 298,
	299, 300, 301, 1411, 1412, 0, 302, 640, 641, 642,
	1413, 303, 304, 643, 1414, 1340, 1415, 305, 306, 307,
	308, 309, 310, 311, 0, 1416, 313, 314, 315, 312,
	316, 1417, 317, 0, 318, 319, 320, 321, 322, 323,
	1418, 324, 325, 326, 1196, 327, 328, 329, 1419, 1420,
	1422, 1421, 1423, 1424, 1425, 330, 331, 332, 333, 334,
	0, 335, 337, 644, 645, 1426, 340, 336, 338, 1427,
	341, 339, 342, 1428, 343, 344, 345, 1429, 1430, 346,
	347, 348, 1431, 349, 350, 1432, 351, 352, 353, 1433,
	354, 355, 646, 356, 357, 358, 360, 362, 359, 363,
	364, 365, 366, 647, 648, 367, 1434, 274, 1435, 0,
	0, 0, 0, 368, 369, 370, 649, 0, 0, 0,
	371, 1436, 372, 373, 1437, 1438, 1197, 374, 375, 376,
	650, 651, 377, 378, 379, 380, 381, 382, 383, 384,
	385, 1439, 386, 652, 1440, 653, 387, 1441, 388, 389,
	390, 391, 392, 654, 655, 656, 473, 1199, 393, 394,
	1442, 395, 396, 397, 398, 399, 0, 0, 0, 275,
	400, 401, 402, 404, 1443, 1198, 403, 657, 658, 1444,
	659, 1445, 405, 406, 1200, 660, 1201, 407, 408, 409,
	1202, 410, 0, 0, 0, 411, 412, 413, 414, 415,
	416, 1446, 417, 419, 418, 1447, 420, 661, 1203, 421,
	422, 1204, 1448, 423, 0, 0, 0, 424, 425, 428,
	1449, 1450, 426, 427, 429, 430, 0, 431, 432, 434,
	437, 433, 435, 436, 438, 451, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 453, 0,
	452, 1205, 454, 455, 456, 463, 465, 466, 461, 462,
	464, 467, 468, 458, 459, 460, 1206, 469, 457, 1451,
	276, 1207, 470, 471, 1452, 662, 472, 663, 474, 475,
	1453, 0, 476, 0, 1454, 1455, 478, 479, 480, 1456,
	1457, 481, 482, 664, 1208, 483, 1209, 665, 484, 485,
	477, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	1458, 495, 496, 666, 497, 498, 499, 667, 500, 501,
	502, 668, 503, 669, 504, 505, 1459, 506, 507, 0,
	508, 509, 510, 511, 512, 513, 514, 670, 515, 516,
	518, 517, 519, 1460, 520, 0, 521, 522, 523, 0,
	0, 0, 0, 0, 524, 0, 526, 527, 528, 529,
	525, 530, 531, 532, 533, 534, 1461, 535, 536, 537,
	1210, 538, 539, 540, 541, 542, 671, 543, 0, 544,
	545, 551, 552, 553, 546, 547, 554, 555, 556, 557,
	558, 1462, 560, 561, 559, 562, 563, 564, 1463, 565,
	566, 548, 549, 567, 568, 1211, 569, 570, 571, 572,
	573, 574, 575, 672, 0, 576, 1464, 577, 578, 579,
	581, 550, 582, 587, 588, 673, 583, 584, 585, 586,
	674, 590, 591, 1465, 592, 593, 0, 589, 580, 1466,
	594, 595, 596, 597, 598, 599, 600, 361, 601, 1467,
	602, 675, 676, 677, 678, 1468, 611, 1469, 603, 604,
	605, 679, 606, 680, 1470, 607, 608, 609, 610, 0,
	612, 613, 1471, 1472, 614, 615, 616, 618, 619, 617,
	620, 1473, 621, 1474, 0, 622, 623, 624, 681, 682,
	683, 1475, 626, 625, 627, 684, 1476, 628, 1477, 1478,
	1479, 1480, 629, 630, 685, 631, 632, 633, 0, 0,
	0, 0, 1492, 0, 1396, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2240, 277, 279, 278, 280, 281, 282, 283, 1401, 284,
	285, 1402, 1403, 1404, 0, 1405, 634, 1406, 1407, 1408,
	1409, 286, 287, 1195, 288, 289, 290, 291, 292, 293,
	635, 636, 0, 294, 637, 295, 638, 1410, 639, 296,
	297, 298, 299, 300, 301, 1411, 1412, 0, 302, 640,
	641, 642, 1413, 303, 304, 643, 1414, 1340, 1415, 305,
	306, 307, 308, 309, 310, 311, 0, 1416, 313, 314,
	315, 312, 316, 1417, 317, 0, 318, 319, 320, 321,
	322, 323, 1418, 324, 325, 326, 1196, 327, 328, 329,
	1419, 1420, 1422, 1421, 1423, 1424, 1425, 330, 331, 332,
	333, 334, 0, 335, 337, 644, 645, 1426, 340, 336,
	338, 1427, 341, 339, 342, 1428, 343, 344, 345, 1429,
	1430, 346, 347, 348, 1431, 349, 350, 1432, 351, 352,
	353, 1433, 354, 355, 646, 356, 357, 358, 360, 362,
	359, 363, 364, 365, 366, 647, 648, 367, 1434, 274,
	1435, 0, 0, 0, 0, 368, 369, 370, 649, 0,
	0, 0, 371, 1436, 372, 373, 1437, 1438, 1197, 374,
	375, 376, 650, 651, 377, 378, 379, 380, 381, 382,
	383, 384, 385, 1439, 386, 652, 1440, 653, 387, 1441,
	388, 389, 390, 391, 392, 654, 655, 656, 473, 1199,
	393, 394, 1442, 395, 396, 397, 398, 399, 0, 0,
	0, 275, 400, 401, 402, 404, 1443, 1198, 403, 657,
	658, 1444, 659, 1445, 405, 406, 1200, 660, 1201, 407,
	408, 409, 1202, 410, 0, 0, 0, 411, 412, 413,
	414, 415, 416, 1446, 417, 419, 418, 1447, 420, 661,
	1203, 421, 422, 1204, 1448, 423, 0, 0, 0, 424,
	425, 428, 1449, 1450, 426, 427, 429, 430, 0, 431,
	432, 434, 437, 433, 435, 436, 438, 451, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	453, 0, 452, 1205, 454, 455, 456, 463, 465, 466,
	461, 462, 464, 467, 468, 458, 459, 460, 1206, 469,
	457, 1451, 276, 1207, 470, 471, 1452, 662, 472, 663,
	474, 475, 1453, 0, 476, 0, 1454, 1455, 478, 479,
	480, 1456, 1457, 481, 482, 664, 1208, 483, 1209, 665,
	484, 485, 477, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 1458, 495, 496, 666, 497, 498, 499, 667,
	500, 501, 502, 668, 503, 669, 504, 505, 1459, 506,
	507, 0, 508, 509, 510, 511, 512, 513, 514, 670,
	515, 516, 518, 517, 519, 1460, 520, 0, 521, 522,
	523, 0, 0, 0, 0, 0, 524, 0, 526, 527,
	528, 529, 525, 530, 531, 532, 533, 534, 1461, 535,
	536, 537, 1210, 538, 539, 540, 541, 542, 671, 543,
	0, 544, 545, 551, 552, 553, 546, 547, 554, 555,
	556, 557, 558, 1462, 560, 561, 559, 562, 563, 564,
	1463, 565, 566, 548, 549, 567, 568, 1211, 569, 570,
	571, 572, 573, 574, 575, 672, 0, 576, 1464, 577,
	578, 579, 581, 550, 582, 587, 588, 673, 583, 584,
	585, 586, 674, 590, 591, 1465, 592, 593, 0, 589,
	580, 1466, 594, 595, 596, 597, 598, 599, 600, 361,
	601, 1467, 602, 675, 676, 677, 678, 1468, 611, 1469,
	603, 604, 605, 679, 606, 680, 1470, 607, 608, 609,
	610, 0, 612, 613, 1471, 1472, 614, 615, 616, 618,
	619, 617, 620, 1473, 621, 1474, 0, 622, 623, 624,
	681, 682, 683, 1475, 626, 625, 627, 684, 1476, 628,
	1477, 1478, 1479, 1480, 629, 630, 685, 631, 632, 633,
	1393, 0, 1396, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 1401, 284, 285, 1402,
	1403, 1404, 0, 1405, 634, 1406, 1407, 1408, 1409, 286,
	287, 1195, 288, 289, 290, 291, 292, 293, 635, 636,
	0, 294, 637, 295, 638, 1410, 639, 296, 297, 298,
	299, 300, 301, 1411, 1412, 0, 302, 640, 641, 642,
	1413, 303, 304, 643, 1414, 1340, 1415, 305, 306, 307,
	308, 309, 310, 311, 0, 1416, 313, 314, 315, 312,
	316, 1417, 317, 0, 318, 319, 320, 321, 322, 323,
	1418, 324, 325, 326, 1196, 327, 328, 329, 1419, 1420,
	1422, 1421, 1423, 1424, 1425, 330, 331, 332, 333, 334,
	0, 335, 337, 644, 645, 1426, 340, 336, 338, 1427,
	341, 339, 342, 1428, 343, 344, 345, 1429, 1430, 346,
	347, 348, 1431, 349, 350, 1432, 351, 352, 353, 1433,
	354, 355, 646, 356, 357, 358, 360, 362, 359, 363,
	364, 365, 366, 647, 648, 367, 1434, 274, 1435, 0,
	0, 0, 0, 368, 369, 370, 649, 0, 0, 0,
	371, 1436, 372, 373, 1437, 1438, 1197, 374, 375, 376,
	650, 651, 377, 378, 379, 380, 381, 382, 383, 384,
	385, 1439, 386, 652, 1440, 653, 387, 1441, 388, 389,
	390, 391, 392, 654, 655, 656, 473, 1199, 393, 394,
	1442, 395, 396, 397, 398, 399, 0, 0, 0, 275,
	400, 401, 402, 404, 1443, 1198, 403, 657, 658, 1444,
	659, 1445, 405, 406, 1200, 660, 1201, 407, 408, 409,
	1202, 410, 0, 0, 0, 411, 412, 413, 414, 415,
	416, 1446, 417, 419, 418, 1447, 420, 661, 1203, 421,
	422, 1204, 1448, 423, 0, 0, 0, 424, 425, 428,
	1449, 1450, 426, 427, 429, 430, 0, 431, 432, 434,
	437, 433, 435, 436, 438, 451, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 453, 0,
	452, 1205, 454, 455, 456, 463, 465, 466, 461, 462,
	464, 467, 468, 458, 459, 460, 1206, 469, 457, 1451,
	276, 1207, 470, 471, 1452, 662, 472, 663, 474, 475,
	1453, 0, 476, 0, 1454, 1455, 478, 479, 480, 1456,
	1457, 481, 482, 664, 1208, 483, 1209, 665, 484, 485,
	477, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	1458, 495, 496, 666, 497, 498, 499, 667, 500, 501,
	502, 668, 503, 669, 504, 505, 1459, 506, 507, 0,
	508, 509, 510, 511, 512, 513, 514, 670, 515, 516,
	518, 517, 519, 1460, 520, 0, 521, 522, 523, 0,
	0, 0, 0, 0, 524, 0, 526, 527, 528, 529,
	525, 530, 531, 532, 533, 534, 1461, 535, 536, 537,
	1210, 538, 539, 540, 541, 542, 671, 543, 0, 544,
	545, 551, 552, 553, 546, 547, 554, 555, 556, 557,
	558, 1462, 560, 561, 559, 562, 563, 564, 1463, 565,
	566, 548, 549, 567, 568, 1211, 569, 570, 571, 572,
	573, 574, 575, 672, 0, 576, 1464, 577, 578, 579,
	581, 550, 582, 587, 588, 673, 583, 584, 585, 586,
	674, 590, 591, 1465, 592, 593, 0, 589, 580, 1466,
	594, 595, 596, 597, 598, 599, 600, 361, 601, 1467,
	602, 675, 676, 677, 678, 1468, 611, 1469, 603, 604,
	605, 679, 606, 680, 1470, 607, 608, 609, 610, 0,
	612, 613, 1471, 1472, 614, 615, 616, 618, 619, 617,
	620, 1473, 621, 1474, 0, 622, 623, 624, 681, 682,
	683, 1475, 626, 625, 627, 684, 1476, 628, 1477, 1478,
	1479, 1480, 629, 630, 685, 631, 632, 633, 1396, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 1401, 284, 285, 1402, 1403, 1404, 0, 1405,
	634, 1406, 1407, 1408, 1409, 286, 287, 1195, 288, 289,
	290, 291, 292, 293, 635, 636, 0, 294, 637, 295,
	638, 1410, 639, 296, 297, 298, 299, 300, 301, 1411,
	1412, 0, 302, 640, 641, 642, 1413, 303, 304, 643,
	1414, 1340, 1415, 305, 306, 307, 308, 309, 310, 311,
	0, 1416, 313, 314, 315, 312, 316, 1417, 317, 0,
	318, 319, 320, 321, 322, 323, 1418, 324, 325, 326,
	1196, 327, 328, 329, 1419, 1420, 1422, 1421, 1423, 1424,
	1425, 330, 331, 332, 333, 334, 0, 335, 337, 644,
	645, 1426, 340, 336, 338, 1427, 341, 339, 342, 1428,
	343, 344, 345, 1429, 1430, 346, 347, 348, 1431, 349,
	350, 1432, 351, 352, 353, 1433, 354, 355, 646, 356,
	357, 358, 360, 362, 359, 363, 364, 365, 366, 647,
	648, 367, 1434, 274, 1435, 0, 0, 0, 0, 368,
	369, 370, 649, 0, 0, 0, 371, 1436, 372, 373,
	1437, 1438, 1197, 374, 375, 376, 650, 651, 377, 378,
	379, 380, 381, 382, 383, 384, 385, 1439, 386, 652,
	1440, 653, 387, 1441, 388, 389, 390, 391, 392, 654,
	655, 656, 473, 1199, 393, 394, 1442, 395, 396, 397,
	398, 399, 0, 0, 0, 275, 400, 401, 402, 404,
	1443, 1198, 403, 657, 658, 1444, 659, 1445, 405, 406,
	1200, 660, 1201, 407, 408, 409, 1202, 410, 0, 0,
	0, 411, 412, 413, 414, 415, 416, 1446, 417, 419,
	418, 1447, 420, 661, 1203, 421, 422, 1204, 1448, 423,
	0, 0, 0, 424, 425, 428, 1449, 1450, 426, 427,
	429, 430, 0, 431, 432, 434, 437, 433, 435, 436,
	438, 451, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 453, 0, 452, 1205, 454, 455,
	456, 463, 465, 466, 461, 462, 464, 467, 468, 458,
	459, 460, 1206, 469, 457, 1451, 276, 1207, 470, 471,
	1452, 662, 472, 663, 474, 475, 1453, 0, 476, 0,
	1454, 1455, 478, 479, 480, 1456, 1457, 481, 482, 664,
	1208, 483, 1209, 665, 484, 485, 477, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 1458, 495, 496, 666,
	497, 498, 499, 667, 500, 501, 502, 668, 503, 669,
	504, 505, 1459, 506, 507, 0, 508, 509, 510, 511,
	512, 513, 514, 670, 515, 516, 518, 517, 519, 1460,
	520, 0, 521, 522, 523, 0, 0, 0, 0, 0,
	524, 0, 526, 527, 528, 529, 525, 530, 531, 532,
	533, 534, 1461, 535, 536, 537, 1210, 538, 539, 540,
	541, 542, 671, 543, 0, 544, 545, 551, 552, 553,
	546, 547, 554, 555, 556, 557, 558, 1462, 560, 561,
	559, 562, 563, 564, 1463, 565, 566, 548, 549, 567,
	568, 1211, 569, 570, 571, 572, 573, 574, 575, 672,
	0, 576, 1464, 577, 578, 579, 581, 550, 582, 587,
	588, 673, 583, 584, 585, 586, 674, 590, 591, 1465,
	592, 593, 0, 589, 580, 1466, 594, 595, 596, 597,
	598, 599, 600, 361, 601, 1467, 602, 675, 676, 677,
	678, 1468, 611, 1469, 603, 604, 605, 679, 606, 680,
	1470, 607, 608, 609, 610, 0, 612, 613, 1471, 1472,
	614, 615, 616, 618, 619, 617, 620, 1473, 621, 1474,
	0, 622, 623, 624, 681, 682, 683, 1475, 626, 625,
	627, 684, 1476, 628, 1477, 1478, 1479, 1480, 629, 630,
	685, 631, 632, 633, 2584, 0, 1131, 1103, 1104, 1105,
	1101, 1102, 1114, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	2581, 284, 285, 0, 0, 0, 0, 0, 1155, 1119,
	0, 0, 0, 286, 287, 1195, 288, 289, 290, 291,
	292, 293, 635, 1168, 0, 294, 1175, 295, 1174, 0,
	1185, 296, 297, 298, 299, 300, 301, 1121, 1154, 1086,
	302, 1215, 1216, 642, 0, 303, 304, 1161, 0, 1142,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 1196, 327,
	328, 329, 1145, 1143, 1144, 1151, 1147, 1146, 1150, 330,
	331, 332, 333, 334, 1178, 335, 337, 1172, 1171, 1091,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 2582, 0, 346, 1163, 348, 0, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 1097, 356, 357, 358,
	360, 362, 359, 363, 364, 365, 366, 1186, 1187, 367,
	1110, 274, 0, 0, 0, 0, 0, 368, 369, 370,
	1170, 0, 0, 0, 371, 0, 372, 373, 0, 0,
	1197, 374, 375, 376, 1183, 1184, 377, 378, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 1193, 0, 1120,
	387, 0, 388, 389, 390, 391, 392, 1156, 1157, 1160,
	473, 1199, 393, 394, 0, 395, 396, 397, 398, 399,
	0, 0, 0, 275, 400, 401, 402, 404, 0, 1198,
	403, 1165, 1166, 0, 1126, 0, 405, 406, 1200, 1158,
	1201, 407, 408, 409, 1202, 410, 0, 0, 0, 411,
	412, 413, 414, 415, 416, 0, 417, 419, 418, 0,
	420, 1194, 1203, 421, 422, 1204, 0, 423, 0, 0,
	0, 424, 425, 428, 1149, 1148, 426, 427, 429, 430,
	0, 431, 432, 434, 437, 433, 435, 436, 438, 451,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 453, 0, 452, 1205, 454, 455, 456, 463,
	465, 466, 461, 462, 464, 467, 468, 458, 459, 460,
	1206, 469, 457, 1088, 276, 1207, 470, 471, 1111, 1159,
	472, 1173, 474, 475, 0, 0, 476, 0, 0, 0,
	478, 479, 480, 0, 0, 481, 482, 664, 1208, 483,
	1209, 1188, 484, 485, 1098, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 0, 495, 496, 666, 497, 498,
	499, 667, 500, 501, 502, 1189, 503, 669, 504, 505,
	0, 506, 507, 0, 508, 509, 510, 511, 512, 513,
	514, 1169, 515, 516, 518, 517, 519, 0, 520, 0,
	521, 522, 523, 0, 0, 0, 0, 0, 524, 0,
	526, 527, 528, 529, 525, 530, 531, 532, 533, 534,
	0, 535, 536, 537, 1210, 538, 539, 540, 541, 542,
	1099, 543, 0, 544, 545, 551, 552, 553, 546, 547,
	554, 555, 556, 557, 558, 0, 560, 561, 559, 562,
	563, 564, 1152, 565, 566, 548, 549, 567, 568, 1211,
	569, 570, 571, 572, 573, 574, 575, 1167, 0, 576,
	0, 577, 578, 579, 581, 550, 582, 587, 588, 1214,
	583, 584, 585, 586, 1190, 590, 591, 0, 592, 593,
	1085, 589, 580, 0, 594, 595, 596, 597, 598, 599,
	600, 361, 601, 0, 602, 1179, 1180, 1181, 1182, 0,
	611, 0, 603, 604, 605, 1191, 606, 1192, 1109, 607,
	608, 609, 610, 0, 612, 613, 0, 1092, 614, 615,
	616, 618, 619, 617, 620, 1153, 621, 0, 0, 622,
	623, 624, 681, 1176, 1213, 2580, 626, 625, 627, 684,
	0, 628, 0, 0, 0, 0, 629, 630, 685, 631,
	632, 633, 1089, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1084, 0, 0, 0, 0,
	0, 0, 1082, 1083, 2583, 0, 0, 0, 0, 0,
	0, 1115, 2579, 0, 1075, 1113, 1131, 1103, 1104, 1105,
	1101, 1102, 1114, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 1155, 1119,
	0, 0, 0, 286, 287, 1195, 288, 289, 290, 291,
	292, 293, 635, 1168, 0, 294, 1175, 295, 1174, 0,
	1185, 296, 297, 298, 299, 300, 301, 1121, 1154, 1086,
	302, 1215, 1216, 642, 0, 303, 304, 1161, 0, 1142,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 1196, 327,
	328, 329, 1145, 1143, 1144, 1151, 1147, 1146, 1150, 330,
	331, 332, 333, 334, 1178, 335, 337, 1172, 1171, 1091,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 1163, 348, 0, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 1097, 356, 357, 358,
	360, 362, 359, 363, 364, 365, 366, 1186, 1187, 367,
	1110, 274, 0, 0, 0, 0, 0, 368, 369, 370,
	1170, 0, 0, 0, 371, 0, 372, 373, 0, 0,
	1197, 374, 375, 376, 1183, 1184, 377, 378, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 1193, 0, 1120,
	387, 0, 388, 389, 390, 391, 392, 1156, 1157, 1160,
	473, 1199, 393, 394, 0, 395, 396, 397, 398, 399,
	0, 0, 0, 275, 400, 401, 402, 404, 0, 1198,
	403, 1165, 1166, 0, 1126, 0, 405, 406, 1200, 1158,
	1201, 407, 408, 409, 1202, 410, 0, 0, 0, 411,
	412, 413, 414, 415, 416, 0, 417, 419, 418, 0,
	420, 1194, 1203, 421, 422, 1204, 0, 423, 0, 0,
	0, 424, 425, 428, 1149, 1148, 426, 427, 429, 430,
	0, 431, 432, 434, 437, 433, 435, 436, 438, 451,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 453, 0, 452, 1205, 454, 455, 456, 463,
	465, 466, 461, 462, 464, 467, 468, 458, 459, 460,
	1206, 469, 457, 1088, 276, 1207, 470, 471, 1111, 1159,
	472, 1173, 474, 475, 0, 0, 476, 0, 0, 0,
	478, 479, 480, 0, 0, 481, 482, 664, 1208, 483,
	1209, 1188, 484, 485, 1098, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 0, 495, 496, 666, 497, 498,
	499, 667, 500, 501, 502, 1189, 503, 669, 504, 505,
	0, 506, 507, 0, 508, 509, 510, 511, 512, 513,
	514, 1169, 515, 516, 518, 517, 519, 0, 520, 0,
	521, 522, 523, 0, 0, 0, 0, 0, 524, 0,
	526, 527, 528, 529, 525, 530, 531, 532, 533, 534,
	0, 535, 536, 537, 1210, 538, 539, 540, 541, 542,
	1099, 543, 0, 544, 545, 551, 552, 553, 546, 547,
	554, 555, 556, 557, 558, 236, 560, 561, 559, 562,
	563, 564, 1152, 565, 566, 548, 549, 567, 568, 1211,
	569, 570, 571, 572, 573, 574, 575, 1167, 0, 576,
	0, 577, 578, 579, 581, 550, 582, 587, 588, 1214,
	583, 584, 585, 586, 1190, 590, 591, 0, 592, 593,
	1085, 589, 580, 238, 594, 595, 596, 597, 598, 599,
	600, 361, 601, 0, 602, 1179, 1180, 1181, 1182, 0,
	611, 0, 603, 604, 605, 1191, 606, 1192, 1109, 607,
	608, 609, 610, 0, 612, 613, 0, 1092, 614, 615,
	616, 618, 619, 617, 620, 1153, 621, 0, 0, 622,
	623, 624, 1618, 1176, 1213, 0, 626, 625, 627, 684,
	0, 628, 0, 0, 0, 230, 629, 630, 685, 631,
	632, 633, 1089, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1084, 0, 0, 0, 0,
	0, 0, 1082, 1083, 1131, 1103, 1104, 1105, 1101, 1102,
	1114, 1873, 1871, 0, 0, 1113, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 1155, 1119, 0, 0,
	0, 286, 287, 1195, 288, 289, 290, 291, 292, 293,
	635, 1168, 0, 294, 1175, 295, 1174, 0, 1185, 296,
	297, 298, 299, 300, 301, 1121, 1154, 1086, 302, 1215,
	1216, 642, 0, 303, 304, 1161, 0, 1142, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 1196, 327, 328, 329,
	1145, 1143, 1144, 1151, 1147, 1146, 1150, 330, 331, 332,
	333, 334, 1178, 335, 337, 1172, 1171, 1091, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 1163, 348, 0, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 1097, 356, 357, 358, 360, 362,
	359, 363, 364, 365, 366, 1186, 1187, 367, 1110, 274,
	0, 0, 0, 0, 0, 368, 369, 370, 1170, 0,
	0, 0, 371, 0, 372, 373, 0, 0, 1197, 374,
	375, 376, 1183, 1184, 377, 378, 379, 380, 381, 382,
	383, 384, 385, 0, 386, 1193, 0, 1120, 387, 0,
	388, 389, 390, 391, 392, 1156, 1157, 1160, 473, 1199,
	393, 394, 0, 395, 396, 397, 398, 399, 0, 0,
	0, 275, 400, 401, 402, 404, 0, 1198, 403, 1165,
	1166, 0, 1126, 0, 405, 406, 1200, 1158, 1201, 407,
	408, 409, 1202, 410, 0, 0, 0, 411, 412, 413,
	414, 415, 416, 0, 417, 419, 418, 0, 420, 1194,
	1203, 421, 422, 1204, 0, 423, 0, 0, 0, 424,
	425, 428, 1149, 1148, 426, 427, 429, 430, 0, 431,
	432, 434, 437, 433, 435, 436, 438, 451, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	453, 0, 452, 1205, 454, 455, 456, 463, 465, 466,
	461, 462, 464, 467, 468, 458, 459, 460, 1206, 469,
	457, 1088, 276, 1207, 470, 471, 1111, 1159, 472, 1173,
	474, 475, 0, 0, 476, 0, 0, 0, 478, 479,
	480, 0, 0, 481, 482, 664, 1208, 483, 1209, 1188,
	484, 485, 1098, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 0, 495, 496, 666, 497, 498, 499, 667,
	500, 501, 502, 1189, 503, 669, 504, 505, 0, 506,
	507, 0, 508, 509, 510, 511, 512, 513, 514, 1169,
	515, 516, 518, 517, 519, 0, 520, 0, 521, 522,
	523, 0, 0, 0, 0, 0, 524, 0, 526, 527,
	528, 529, 525, 530, 531, 532, 533, 534, 0, 535,
	536, 537, 1210, 538, 539, 540, 541, 542, 1099, 543,
	0, 544, 545, 551, 552, 553, 546, 547, 554, 555,
	556, 557, 558, 236, 560, 561, 559, 562, 563, 564,
	1152, 565, 566, 548, 549, 567, 568, 1211, 569, 570,
	571, 572, 573, 574, 575, 1167, 0, 576, 0, 577,
	578, 579, 581, 550, 582, 587, 588, 1214, 583, 584,
	585, 586, 1190, 590, 591, 0, 592, 593, 1085, 589,
	580, 238, 594, 595, 596, 597, 598, 599, 600, 361,
	601, 0, 602, 1179, 1180, 1181, 1182, 0, 611, 0,
	603, 604, 605, 1191, 606, 1192, 1109, 607, 608, 609,
	610, 0, 612, 613, 0, 1092, 614, 615, 616, 618,
	619, 617, 620, 1153, 621, 0, 0, 622, 623, 624,
	1618, 1176, 1213, 0, 626, 625, 627, 684, 0, 628,
	0, 0, 0, 230, 629, 630, 685, 631, 632, 633,
	1089, 0, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1084, 0, 0, 0, 0, 0, 0,
	1082, 1083, 1131, 1103, 1104, 1105, 1101, 1102, 1114, 1873,
	3221, 0, 0, 1113, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 1155, 1119, 0, 0, 0, 286,
	287, 1195, 288, 289, 290, 291, 292, 293, 635, 1168,
	0, 294, 1175, 295, 1174, 0, 1185, 296, 297, 298,
	299, 300, 301, 1121, 1154, 1086, 302, 1215, 1216, 642,
	0, 303, 304, 1161, 0, 1142, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 1196, 327, 328, 329, 1145, 1143,
	1144, 1151, 1147, 1146, 1150, 330, 331, 332, 333, 334,
	1178, 335, 337, 1172, 1171, 1091, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	1163, 348, 0, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 1097, 356, 357, 358, 360, 362, 359, 363,
	364, 365, 366, 1186, 1187, 367, 1110, 274, 0, 0,
	0, 0, 0, 368, 369, 370, 1170, 0, 0, 0,
	371, 0, 372, 373, 0, 0, 1197, 374, 375, 376,
	1183, 1184, 377, 378, 379, 380, 381, 382, 383, 384,
	385, 0, 386, 1193, 0, 1120, 387, 0, 388, 389,
	390, 391, 392, 1156, 1157, 1160, 473, 1199, 393, 394,
	0, 395, 396, 397, 398, 399, 0, 0, 0, 275,
	400, 401, 402, 404, 0, 1198, 403, 1165, 1166, 0,
	1126, 0, 405, 406, 1200, 1158, 1201, 407, 408, 409,
	1202, 410, 0, 0, 0, 411, 412, 413, 414, 415,
	416, 0, 417, 419, 418, 0, 420, 1194, 1203, 421,
	422, 1204, 0, 423, 0, 0, 0, 424, 425, 428,
	1149, 1148, 426, 427, 429, 430, 0, 431, 432, 434,
	437, 433, 435, 436, 438, 451, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 453, 0,
	452, 1205, 454, 455, 456, 463, 465, 466, 461, 462,
	464, 467, 468, 458, 459, 460, 1206, 469, 457, 1088,
	276, 1207, 470, 471, 1111, 1159, 472, 1173, 474, 475,
	0, 0, 476, 0, 0, 0, 478, 479, 480, 0,
	0, 481, 482, 664, 1208, 483, 1209, 1188, 484, 485,
	1098, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	0, 495, 496, 666, 497, 498, 499, 667, 500, 501,
	502, 1189, 503, 669, 504, 505, 0, 506, 507, 0,
	508, 509, 510, 511, 512, 513, 514, 1169, 515, 516,
	518, 517, 519, 0, 520, 0, 521, 522, 523, 0,
	0, 0, 0, 0, 524, 0, 526, 527, 528, 529,
	525, 530, 531, 532, 533, 534, 0, 535, 536, 537,
	1210, 538, 539, 540, 541, 542, 1099, 543, 0, 544,
	545, 551, 552, 553, 546, 547, 554, 555, 556, 557,
	558, 236, 560, 561, 559, 562, 563, 564, 1152, 565,
	566, 548, 549, 567, 568, 1211, 569, 570, 571, 572,
	573, 574, 575, 1167, 0, 576, 0, 577, 578, 579,
	581, 550, 582, 587, 588, 1214, 583, 584, 585, 586,
	1190, 590, 591, 0, 592, 593, 1085, 589, 580, 238,
	594, 595, 596, 597, 598, 599, 600, 361, 601, 0,
	602, 1179, 1180, 1181, 1182, 0, 611, 0, 603, 604,
	605, 1191, 606, 1192, 1109, 607, 608, 609, 610, 0,
	612, 613, 0, 1092, 614, 615, 616, 618, 619, 617,
	620, 1153, 621, 0, 0, 622, 623, 624, 1618, 1176,
	1213, 0, 626, 625, 627, 684, 0, 628, 0, 0,
	0, 230, 629, 630, 685, 631, 632, 633, 1089, 0,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1084, 0, 0, 0, 0, 0, 0, 1082, 1083,
	1131, 1103, 1104, 1105, 1101, 1102, 1114, 1873, 1871, 0,
	0, 1113, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 1155, 1119, 0, 0, 0, 286, 287, 1195,
	288, 289, 290, 291, 292, 293, 635, 1168, 0, 294,
	1175, 295, 1174, 2715, 1185, 296, 297, 298, 299, 300,
	301, 1121, 1154, 1086, 302, 1215, 1216, 642, 0, 303,
	304, 1161, 0, 1142, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 1196, 327, 328, 329, 1145, 1143, 1144, 1151,
	1147, 1146, 1150, 330, 331, 332, 333, 334, 1178, 335,
	337, 1172, 1171, 1091, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 1163, 348,
	0, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	1097, 356, 357, 358, 360, 362, 359, 363, 364, 365,
	366, 1186, 1187, 367, 1110, 274, 0, 0, 0, 0,
	0, 368, 369, 370, 1170, 0, 0, 0, 371, 0,
	372, 373, 0, 2720, 1197, 374, 375, 376, 1183, 1184,
	377, 378, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 1193, 0, 1120, 387, 0, 388, 389, 390, 391,
	392, 1156, 1157, 1160, 473, 1199, 393, 394, 0, 395,
	396, 397, 398, 399, 0, 0, 0, 275, 400, 401,
	402, 404, 0, 1198, 403, 1165, 1166, 0, 1126, 0,
	405, 406, 1200, 1158, 1201, 407, 408, 409, 1202, 410,
	0, 0, 0, 411, 412, 413, 414, 415, 416, 0,
	417, 419, 418, 2716, 420, 1194, 1203, 421, 422, 1204,
	0, 423, 0, 0, 0, 424, 425, 428, 1149, 1148,
	426, 427, 429, 430, 0, 431, 432, 434, 437, 433,
	435, 436, 438, 451, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 453, 0, 452, 1205,
	454, 455, 456, 463, 465, 466, 461, 462, 464, 467,
	468, 458, 459, 460, 1206, 469, 457, 1088, 276, 1207,
	470, 471, 1111, 1159, 472, 1173, 474, 475, 0, 0,
	476, 0, 0, 0, 478, 479, 480, 0, 0, 481,
	482, 664, 1208, 483, 1209, 1188, 484, 485, 1098, 486,
	487, 488, 489, 490, 491, 492, 493, 494, 0, 495,
	496, 666, 497, 498, 499, 667, 500, 501, 502, 1189,
	503, 669, 504, 505, 0, 506, 507, 0, 508, 509,
	510, 511, 512, 513, 514, 1169, 515, 516, 518, 517,
	519, 0, 520, 0, 521, 522, 523, 0, 0, 0,
	0, 0, 524, 0, 526, 527, 528, 529, 525, 530,
	531, 532, 533, 534, 0, 535, 536, 537, 1210, 538,
	539, 540, 541, 542, 1099, 543, 0, 544, 545, 551,
	552, 553, 546, 547, 554, 555, 556, 557, 558, 0,
	560, 561, 559, 562, 563, 564, 1152, 565, 566, 548,
	549, 567, 568, 1211, 569, 570, 571, 572, 573, 574,
	575, 1167, 0, 576, 0, 577, 578, 579, 581, 550,
	582, 587, 588, 1214, 583, 584, 585, 586, 1190, 590,
	591, 0, 592, 593, 1085, 589, 580, 0, 594, 595,
	596, 597, 598, 599, 600, 361, 601, 0, 602, 1179,
	1180, 1181, 1182, 0, 611, 2717, 603, 604, 605, 1191,
	606, 1192, 1109, 607, 608, 609, 610, 0, 612, 613,
	0, 1092, 614, 615, 616, 618, 619, 617, 620, 1153,
	621, 0, 0, 622, 623, 624, 681, 1176, 1213, 0,
	626, 625, 627, 684, 0, 628, 0, 0, 0, 0,
	629, 630, 685, 631, 632, 633, 1089, 0, 0, 2629,
	0, 1131, 1103, 1104, 1105, 1101, 1102, 1114, 0, 1084,
	0, 0, 0, 0, 0, 0, 1082, 1083, 277, 279,
	278, 280, 281, 282, 283, 1115, 284, 285, 0, 1113,
	0, 0, 0, 1155, 1119, 0, 0, 0, 286, 287,
	1195, 288, 289, 290, 291, 292, 293, 635, 1168, 0,
	294, 1175, 295, 1174, 0, 1185, 296, 297, 298, 299,
	300, 301, 1121, 1154, 1086, 302, 1215, 1216, 642, 0,
	303, 304, 1161, 0, 1142, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 1196, 327, 328, 329, 1145, 1143, 1144,
	1151, 1147, 1146, 1150, 330, 331, 332, 333, 334, 1178,
	335, 337, 1172, 1171, 1091, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 1163,
	348, 0, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 1097, 356, 357, 358, 360, 362, 359, 363, 364,
	365, 366, 1186, 1187, 367, 1110, 274, 0, 0, 0,
	0, 0, 368, 369, 370, 1170, 0, 0, 0, 371,
	0, 372, 373, 0, 0, 1197, 374, 375, 376, 1183,
	1184, 377, 378, 379, 380, 381, 382, 383, 384, 385,
	0, 386, 1193, 0, 1120, 387, 0, 388, 389, 390,
	391, 392, 1156, 1157, 1160, 473, 1199, 393, 394, 0,
	395, 396, 397, 398, 399, 0, 0, 0, 275, 400,
	401, 402, 404, 0, 1198, 403, 1165, 1166, 0, 1126,
	0, 405, 406, 1200, 1158, 1201, 407, 408, 409, 1202,
	410, 0, 0, 0, 411, 412, 413, 414, 415, 416,
	0, 417, 419, 418, 0, 420, 1194, 1203, 421, 422,
	1204, 0, 423, 0, 0, 0, 424, 425, 428, 1149,
	1148, 426, 427, 429, 430, 0, 431, 432, 434, 437,
	433, 435, 436, 438, 451, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 453, 0, 452,
	1205, 454, 455, 456, 463, 465, 466, 461, 462, 464,
	467, 468, 458, 459, 460, 1206, 469, 457, 1088, 276,
	1207, 470, 471, 1111, 1159, 472, 1173, 474, 475, 0,
	0, 476, 0, 0, 0, 478, 479, 480, 0, 0,
	481, 482, 664, 1208, 483, 1209, 1188, 484, 485, 1098,
	486, 487, 488, 489, 490, 491, 492, 493, 494, 0,
	495, 496, 666, 497, 498, 499, 667, 500, 501, 502,
	1189, 503, 669, 504, 505, 0, 506, 507, 0, 508,
	509, 510, 511, 512, 513, 514, 1169, 515, 516, 518,
	517, 519, 0, 520, 0, 521, 522, 523, 0, 0,
	0, 0, 0, 524, 0, 526, 527, 528, 529, 525,
	530, 531, 532, 533, 534, 0, 535, 536, 537, 1210,
	538, 539, 540, 541, 542, 1099, 543, 0, 544, 545,
	551, 552, 553, 546, 547, 554, 555, 556, 557, 558,
	0, 560, 561, 559, 562, 563, 564, 1152, 565, 566,
	548, 549, 567, 568, 1211, 569, 570, 571, 572, 573,
	574, 575, 1167, 0, 576, 0, 577, 578, 579, 581,
	550, 582, 587, 588, 1214, 583, 584, 585, 586, 1190,
	590, 591, 0, 592, 593, 1085, 589, 580, 0, 594,
	595, 596, 597, 598, 599, 600, 361, 601, 0, 602,
	1179, 1180, 1181, 1182, 0, 611, 0, 603, 604, 605,
	1191, 606, 1192, 1109, 607, 608, 609, 610, 0, 612,
	613, 0, 1092, 614, 615, 616, 618, 619, 617, 620,
	1153, 621, 0, 0, 622, 623, 624, 681, 1176, 1213,
	0, 626, 625, 627, 684, 0, 628, 0, 0, 0,
	0, 629, 630, 685, 631, 632, 633, 1089, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1084, 0, 0, 0, 0, 0, 0, 1082, 1083, 0,
	0, 0, 0, 0, 0, 0, 1115, 2627, 0, 2626,
	1113, 1131, 1103, 1104, 1105, 1101, 1102, 1114, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 1155, 1119, 0, 0, 0, 286, 287,
	1195, 288, 289, 290, 291, 292, 293, 635, 1168, 0,
	294, 1175, 295, 1174, 0, 1185, 296, 297, 298, 299,
	300, 301, 1121, 1154, 1086, 302, 1215, 1216, 642, 0,
	303, 304, 1161, 0, 1142, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 1196, 327, 328, 329, 1145, 1143, 1144,
	1151, 1147, 1146, 1150, 330, 331, 332, 333, 334, 1178,
	335, 337, 1172, 1171, 1091, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 1163,
	348, 0, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 1097, 356, 357, 358, 360, 362, 359, 363, 364,
	365, 366, 1186, 1187, 367, 1110, 274, 0, 0, 0,
	0, 0, 368, 369, 370, 1170, 0, 0, 0, 371,
	0, 372, 373, 0, 0, 1197, 374, 375, 376, 1183,
	1184, 377, 378, 379, 380, 381, 382, 383, 384, 385,
	0, 386, 1193, 0, 1120, 387, 0, 388, 389, 390,
	391, 392, 1156, 1157, 1160, 473, 1199, 393, 394, 0,
	395, 396, 397, 398, 399, 0, 0, 0, 275, 400,
	401, 402, 404, 0, 1198, 403, 1165, 1166, 0, 1126,
	0, 405, 406, 1200, 1158, 1201, 407, 408, 409, 1202,
	410, 0, 0, 0, 411, 412, 413, 414, 415, 416,
	0, 417, 419, 418, 0, 420, 1194, 1203, 421, 422,
	1204, 0, 423, 0, 0, 0, 424, 425, 428, 1149,
	1148, 426, 427, 429, 430, 0, 431, 432, 434, 437,
	433, 435, 436, 438, 451, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 453, 0, 452,
	1205, 454, 455, 456, 463, 465, 466, 461, 462, 464,
	467, 468, 458, 459, 460, 1206, 469, 457, 1088, 276,
	1207, 470, 471, 1111, 1159, 472, 1173, 474, 475, 0,
	0, 476, 0, 0, 0, 478, 479, 480, 0, 0,
	481, 482, 664, 1208, 483, 1209, 1188, 484, 485, 1098,
	486, 487, 488, 489, 490, 491, 492, 493, 494, 0,
	495, 496, 666, 497, 498, 499, 667, 500, 501, 502,
	1189, 503, 669, 504, 505, 0, 506, 507, 0, 508,
	509, 510, 511, 512, 513, 514, 1169, 515, 516, 518,
	517, 519, 0, 520, 0, 521, 522, 523, 0, 0,
	0, 0, 0, 524, 0, 526, 527, 528, 529, 525,
	530, 531, 532, 533, 534, 0, 535, 536, 537, 1210,
	538, 539, 540, 541, 542, 1099, 543, 0, 544, 545,
	551, 552, 553, 546, 547, 554, 555, 556, 557, 558,
	0, 560, 561, 559, 562, 563, 564, 1152, 565, 566,
	548, 549, 567, 568, 1211, 569, 570, 571, 572, 573,
	574, 575, 1167, 0, 576, 0, 577, 578, 579, 581,
	550, 582, 587, 588, 1214, 583, 584, 585, 586, 1190,
	590, 591, 0, 592, 593, 1085, 589, 580, 0, 594,
	595, 596, 597, 598, 599, 600, 361, 601, 0, 602,
	1179, 1180, 1181, 1182, 0, 611, 0, 603, 604, 605,
	1191, 606, 1192, 1109, 607, 608, 609, 610, 0, 612,
	613, 0, 1092, 614, 615, 616, 618, 619, 617, 620,
	1153, 621, 0, 0, 622, 623, 624, 681, 1176, 1213,
	0, 626, 625, 627, 684, 0, 628, 0, 0, 0,
	0, 629, 630, 685, 631, 632, 633, 1089, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1084, 0, 0, 0, 0, 0, 0, 1082, 1083, 0,
	0, 0, 0, 0, 0, 0, 1115, 2624, 0, 2623,
	1113, 1131, 1103, 1104, 1105, 1101, 1102, 1114, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 1155, 1119, 0, 0, 0, 286, 287,
	1195, 288, 289, 290, 291, 292, 293, 635, 1168, 0,
	294, 1175, 295, 1174, 0, 1185, 296, 297, 298, 299,
	300, 301, 1121, 1154, 1086, 302, 1215, 1216, 642, 0,
	303, 304, 1161, 0, 1142, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 1196, 327, 328, 329, 1145, 1143, 1144,
	1151, 1147, 1146, 1150, 330, 331, 332, 333, 334, 1178,
	335, 337, 1172, 1171, 1091, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 1163,
	348, 0, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 1097, 356, 357, 358, 360, 362, 359, 363, 364,
	365, 366, 1186, 1187, 367, 1110, 274, 0, 0, 0,
	0, 0, 368, 369, 370, 1170, 0, 0, 0, 371,
	0, 372, 373, 0, 0, 1197, 374, 375, 376, 1183,
	1184, 377, 378, 379, 380, 381, 382, 383, 384, 385,
	0, 386, 1193, 0, 1120, 387, 0, 388, 389, 390,
	391, 392, 1156, 1157, 1160, 473, 1199, 393, 394, 0,
	395, 396, 397, 398, 399, 0, 0, 0, 275, 400,
	401, 402, 404, 0, 1198, 403, 1165, 1166, 0, 1126,
	0, 405, 406, 1200, 1158, 1201, 407, 408, 409, 1202,
	410, 0, 0, 0, 411, 412, 413, 414, 415, 416,
	0, 417, 419, 418, 0, 420, 1194, 1203, 421, 422,
	1204, 0, 423, 0, 0, 0, 424, 425, 428, 1149,
	1148, 426, 427, 429, 430, 0, 431, 432, 434, 437,
	433, 435, 436, 438, 451, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 453, 0, 452,
	1205, 454, 455, 456, 463, 465, 466, 461, 462, 464,
	467, 468, 458, 459, 460, 1206, 469, 457, 1088, 276,
	1207, 470, 471, 1111, 1159, 472, 1173, 474, 475, 0,
	0, 476, 0, 0, 0, 478, 479, 480, 0, 0,
	481, 482, 664, 1208, 483, 1209, 1188, 484, 485, 1098,
	486, 487, 488, 489, 490, 491, 492, 493, 494, 0,
	495, 496, 666, 497, 498, 499, 667, 500, 501, 502,
	1189, 503, 669, 504, 505, 0, 506, 507, 0, 508,
	509, 510, 511, 512, 513, 514, 1169, 515, 516, 518,
	517, 519, 0, 520, 0, 521, 522, 523, 0, 0,
	0, 0, 0, 524, 0, 526, 527, 528, 529, 525,
	530, 531, 532, 533, 534, 0, 535, 536, 537, 1210,
	538, 539, 540, 541, 542, 1099, 543, 0, 544, 545,
	551, 552, 553, 546, 547, 554, 555, 556, 557, 558,
	0, 560, 561, 559, 562, 563, 564, 1152, 565, 566,
	548, 549, 567, 568, 1211, 569, 570, 571, 572, 573,
	574, 575, 1167, 0, 576, 0, 577, 578, 579, 581,
	550, 582, 587, 588, 1214, 583, 584, 585, 586, 1190,
	590, 591, 0, 592, 593, 1085, 589, 580, 0, 594,
	595, 596, 597, 598, 599, 600, 361, 601, 0, 602,
	1179, 1180, 1181, 1182, 0, 611, 0, 603, 604, 605,
	1191, 606, 1192, 1109, 607, 608, 609, 610, 0, 612,
	613, 0, 1092, 614, 615, 616, 618, 619, 617, 620,
	1153, 621, 0, 0, 622, 623, 624, 681, 1176, 1213,
	0, 626, 625, 627, 684, 0, 628, 0, 0, 0,
	0, 629, 630, 685, 631, 632, 633, 1089, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1084, 0, 0, 0, 0, 0, 0, 1082, 1083, 0,
	0, 0, 0, 0, 0, 0, 1115, 2621, 0, 2620,
	1113, 1131, 1103, 1104, 1105, 1101, 1102, 1114, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 1155, 1119, 0, 0, 0, 286, 287,
	1195, 288, 289, 290, 291, 292, 293, 635, 1168, 0,
	294, 1175, 295, 1174, 0, 1185, 296, 297, 298, 299,
	300, 301, 1121, 1154, 1086, 302, 1215, 1216, 642, 0,
	303, 304, 1161, 0, 1142, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 1196, 327, 328, 329, 1145, 1143, 1144,
	1151, 1147, 1146, 1150, 330, 331, 332, 333, 334, 1178,
	335, 337, 1172, 1171, 1091, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 1163,
	348, 0, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 1097, 356, 357, 358, 360, 362, 359, 363, 364,
	365, 366, 1186, 1187, 367, 1110, 274, 0, 0, 0,
	0, 0, 368, 369, 370, 1170, 0, 0, 0, 371,
	0, 372, 373, 0, 0, 1197, 374, 375, 376, 1183,
	1184, 377, 378, 379, 380, 381, 382, 383, 384, 385,
	0, 386, 1193, 0, 1120, 387, 0, 388, 389, 390,
	391, 392, 1156, 1157, 1160, 473, 1199, 393, 394, 0,
	395, 396, 397, 398, 399, 0, 0, 0, 275, 400,
	401, 402, 404, 0, 1198, 403, 1165, 1166, 0, 1126,
	0, 405, 406, 1200, 1158, 1201, 407, 408, 409, 1202,
	410, 0, 0, 0, 411, 412, 413, 414, 415, 416,
	0, 417, 419, 418, 0, 420, 1194, 1203, 421, 422,
	1204, 0, 423, 0, 0, 0, 424, 425, 428, 1149,
	1148, 426, 427, 429, 430, 0, 431, 432, 434, 437,
	433, 435, 436, 438, 451, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 453, 0, 452,
	1205, 454, 455, 456, 463, 465, 466, 461, 462, 464,
	467, 468, 458, 459, 460, 1206, 469, 457, 1088, 276,
	1207, 470, 471, 1111, 1159, 472, 1173, 474, 475, 0,
	0, 476, 0, 0, 0, 478, 479, 480, 0, 0,
	481, 482, 664, 1208, 483, 1209, 1188, 484, 485, 1098,
	486, 487, 488, 489, 490, 491, 492, 493, 494, 0,
	495, 496, 666, 497, 498, 499, 667, 500, 501, 502,
	1189, 503, 669, 504, 505, 0, 506, 507, 0, 508,
	509, 510, 511, 512, 513, 514, 1169, 515, 516, 518,
	517, 519, 0, 520, 0, 521, 522, 523, 0, 0,
	0, 0, 0, 524, 0, 526, 527, 528, 529, 525,
	530, 531, 532, 533, 534, 0, 535, 536, 537, 1210,
	538, 539, 540, 541, 542, 1099, 543, 0, 544, 545,
	551, 552, 553, 546, 547, 554, 555, 556, 557, 558,
	0, 560, 561, 559, 562, 563, 564, 1152, 565, 566,
	548, 549, 567, 568, 1211, 569, 570, 571, 572, 573,
	574, 575, 1167, 0, 576, 0, 577, 578, 579, 581,
	550, 582, 587, 588, 1214, 583, 584, 585, 586, 1190,
	590, 591, 0, 592, 593, 1085, 589, 580, 0, 594,
	595, 596, 597, 598, 599, 600, 361, 601, 0, 602,
	1179, 1180, 1181, 1182, 0, 611, 0, 603, 604, 605,
	1191, 606, 1192, 1109, 607, 608, 609, 610, 0, 612,
	613, 0, 1092, 614, 615, 616, 618, 619, 617, 620,
	1153, 621, 0, 0, 622, 623, 624, 681, 1176, 1213,
	0, 626, 625, 627, 684, 0, 628, 0, 0, 0,
	0, 629, 630, 685, 631, 632, 633, 1089, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1084, 0, 0, 0, 0, 0, 0, 1082, 1083, 0,
	0, 0, 0, 0, 0, 0, 1115, 2618, 0, 1714,
	1113, 1131, 1103, 1104, 1105, 1101, 1102, 1114, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 1155, 1119, 0, 0, 0, 286, 287,
	1195, 288, 289, 290, 291, 292, 293, 635, 1168, 0,
	294, 1175, 295, 1174, 0, 1185, 296, 297, 298, 299,
	300, 301, 1121, 1154, 1086, 302, 1215, 1216, 642, 0,
	303, 304, 1161, 0, 1142, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 1196, 327, 328, 329, 1145, 1143, 1144,
	1151, 1147, 1146, 1150, 330, 331, 332, 333, 334, 1178,
	335, 337, 1172, 1171, 1091, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 1163,
	348, 0, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 1097, 356, 357, 358, 360, 362, 359, 363, 364,
	365, 366, 1186, 1187, 367, 1110, 274, 0, 0, 0,
	0, 0, 368, 369, 370, 1170, 0, 0, 0, 371,
	0, 372, 373, 0, 0, 1197, 374, 375, 376, 1183,
	1184, 377, 378, 379, 380, 381, 382, 383, 384, 385,
	0, 386, 1193, 0, 1120, 387, 0, 388, 389, 390,
	391, 392, 1156, 1157, 1160, 473, 1199, 393, 394, 0,
	395, 396, 397, 398, 399, 0, 0, 0, 275, 400,
	401, 402, 404, 0, 1198, 403, 1165, 1166, 0, 1126,
	0, 405, 406, 1200, 1158, 1201, 407, 408, 409, 1202,
	410, 0, 0, 0, 411, 412, 413, 414, 415, 416,
	0, 417, 419, 418, 0, 420, 1194, 1203, 421, 422,
	1204, 0, 423, 0, 0, 0, 424, 425, 428, 1149,
	1148, 426, 427, 429, 430, 0, 431, 432, 434, 437,
	433, 435, 436, 438, 451, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 453, 0, 452,
	1205, 454, 455, 456, 463, 465, 466, 461, 462, 464,
	467, 468, 458, 459, 460, 1206, 469, 457, 1088, 276,
	1207, 470, 471, 1111, 1159, 472, 1173, 474, 475, 0,
	0, 476, 0, 0, 0, 478, 479, 480, 0, 0,
	481, 482, 664, 1208, 483, 1209, 1188, 484, 485, 1098,
	486, 487, 488, 489, 490, 491, 492, 493, 494, 0,
	495, 496, 666, 497, 498, 499, 667, 500, 501, 502,
	1189, 503, 669, 504, 505, 0, 506, 507, 0, 508,
	509, 510, 511, 512, 513, 514, 1169, 515, 516, 518,
	517, 519, 0, 520, 0, 521, 522, 523, 0, 0,
	0, 0, 0, 524, 0, 526, 527, 528, 529, 525,
	530, 531, 532, 533, 534, 0, 535, 536, 537, 1210,
	538, 539, 540, 541, 542, 1099, 543, 0, 544, 545,
	551, 552, 553, 546, 547, 554, 555, 556, 557, 558,
	0, 560, 561, 559, 562, 563, 564, 1152, 565, 566,
	548, 549, 567, 568, 1211, 569, 570, 571, 572, 573,
	574, 575, 1167, 0, 576, 0, 577, 578, 579, 581,
	550, 582, 587, 588, 1214, 583, 584, 585, 586, 1190,
	590, 591, 0, 592, 593, 1085, 589, 580, 0, 594,
	595, 596, 597, 598, 599, 600, 361, 601, 0, 602,
	1179, 1180, 1181, 1182, 0, 611, 0, 603, 604, 605,
	1191, 606, 1192, 1109, 607, 608, 609, 610, 0, 612,
	613, 0, 1092, 614, 615, 616, 618, 619, 617, 620,
	1153, 621, 0, 0, 622, 623, 624, 681, 1176, 1213,
	0, 626, 625, 627, 684, 0, 628, 1713, 0, 0,
	0, 629, 630, 685, 631, 632, 633, 1089, 0, 0,
	1078, 0, 1131, 1103, 1104, 1105, 1101, 1102, 1114, 0,
	1084, 0, 0, 0, 0, 0, 0, 1082, 1083, 277,
	279, 278, 280, 281, 282, 283, 1115, 284, 285, 0,
	1113, 0, 0, 0, 1155, 1119, 0, 0, 0, 286,
	287, 1195, 288, 289, 290, 291, 292, 293, 635, 1168,
	0, 294, 1175, 295, 1174, 0, 1185, 296, 297, 298,
	299, 300, 301, 1121, 1154, 1086, 302, 1215, 1216, 642,
	0, 303, 304, 1161, 0, 1142, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 1196, 327, 328, 329, 1145, 1143,
	1144, 1151, 1147, 1146, 1150, 330, 331, 332, 333, 334,
	1178, 335, 337, 1172, 1171, 1091, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	1163, 348, 0, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 1097, 356, 357, 358, 360, 362, 359, 363,
	364, 365, 366, 1186, 1187, 367, 1110, 274, 0, 0,
	0, 0, 0, 368, 369, 370, 1170, 0, 0, 0,
	371, 0, 372, 373, 0, 0, 1197, 374, 375, 376,
	1183, 1184, 377, 378, 379, 380, 381, 382, 383, 384,
	385, 0, 386, 1193, 0, 1120, 387, 0, 388, 389,
	390, 391, 392, 1156, 1157, 1160, 473, 1199, 393, 394,
	0, 395, 396, 397, 398, 399, 0, 0, 0, 275,
	400, 401, 402, 404, 0, 1198, 403, 1165, 1166, 0,
	1126, 0, 405, 406, 1200, 1158, 1201, 407, 408, 409,
	1202, 410, 0, 0, 0, 411, 412, 413, 414, 415,
	416, 0, 417, 419, 418, 0, 420, 1194, 1203, 421,
	422, 1204, 0, 423, 0, 0, 0, 424, 425, 428,
	1149, 1148, 426, 427, 429, 430, 0, 431, 432, 434,
	437, 433, 435, 436, 438, 451, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 453, 0,
	452, 1205, 454, 455, 456, 463, 465, 466, 461, 462,
	464, 467, 468, 458, 459, 460, 1206, 469, 457, 1088,
	276, 1207, 470, 471, 1111, 1159, 472, 1173, 474, 475,
	0, 0, 476, 0, 1093, 0, 478, 479, 480, 0,
	0, 481, 482, 664, 1208, 483, 1209, 1188, 484, 485,
	1098, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	0, 495, 496, 666, 497, 498, 499, 667, 500, 501,
	502, 1189, 503, 669, 504, 505, 0, 506, 507, 0,
	508, 509, 510, 511, 512, 513, 514, 1169, 515, 516,
	518, 517, 519, 0, 520, 0, 521, 522, 523, 0,
	0, 0, 0, 0, 524, 0, 526, 527, 528, 529,
	525, 530, 531, 532, 533, 534, 0, 535, 536, 537,
	1210, 538, 539, 540, 541, 542, 1099, 543, 0, 544,
	545, 551, 552, 553, 546, 547, 554, 555, 556, 557,
	558, 0, 560, 561, 559, 562, 563, 564, 1152, 565,
	566, 548, 549, 567, 568, 1211, 569, 570, 571, 572,
	573, 574, 575, 1167, 0, 576, 0, 577, 578, 579,
	581, 550, 582, 587, 588, 1214, 583, 584, 585, 586,
	1190, 590, 591, 0, 592, 593, 1085, 589, 580, 0,
	594, 595, 596, 597, 598, 599, 600, 361, 601, 0,
	602, 1179, 1180, 1181, 1182, 0, 611, 0, 603, 604,
	605, 1191, 606, 1192, 1109, 607, 608, 609, 610, 0,
	612, 613, 0, 1092, 614, 615, 616, 618, 619, 617,
	620, 1153, 621, 0, 0, 622, 623, 624, 681, 1176,
	1213, 0, 626, 625, 627, 684, 0, 628, 0, 0,
	0, 0, 629, 630, 685, 631, 632, 633, 1089, 0,
	0, 0, 0, 1131, 1103, 1104, 1105, 1101, 1102, 1114,
	0, 1084, 0, 0, 0, 0, 0, 0, 1082, 1083,
	277, 279, 278, 280, 281, 282, 283, 1115, 284, 285,
	0, 1113, 0, 0, 0, 1155, 1119, 0, 0, 0,
	286, 287, 1195, 288, 289, 290, 291, 292, 293, 635,
	1168, 0, 294, 1175, 295, 1174, 0, 1185, 296, 297,
	298, 299, 300, 301, 1121, 1154, 1086, 302, 1215, 1216,
	642, 0, 303, 304, 1161, 0, 1142, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 4687,
	323, 0, 324, 325, 326, 1196, 327, 328, 329, 1145,
	1143, 1144, 1151, 1147, 1146, 1150, 330, 331, 332, 333,
	334, 1178, 335, 337, 1172, 1171, 1091, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 1163, 348, 0, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 1097, 356, 357, 358, 360, 362, 359,
	363, 364, 365, 366, 1186, 1187, 367, 1110, 274, 0,
	0, 0, 0, 0, 368, 369, 370, 1170, 0, 0,
	0, 371, 0, 372, 373, 0, 0, 1197, 374, 375,
	376, 1183, 1184, 377, 378, 379, 380, 381, 382, 383,
	384, 385, 0, 386, 1193, 0, 1120, 387, 0, 388,
	389, 390, 391, 392, 1156, 1157, 1160, 473, 1199, 393,
	394, 0, 395, 396, 397, 398, 399, 0, 0, 0,
	275, 400, 401, 402, 404, 0, 1198, 403, 1165, 1166,
	0, 1126, 0, 405, 406, 1200, 1158, 1201, 407, 408,
	409, 1202, 410, 0, 0, 0, 411, 412, 413, 414,
	415, 416, 0, 417, 419, 418, 0, 420, 1194, 1203,
	421, 422, 1204, 0, 423, 0, 0, 0, 424, 425,
	428, 1149, 1148, 426, 427, 429, 430, 0, 431, 432,
	434, 437, 433, 435, 436, 438, 451, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 450, 453,
	0, 452, 1205, 454, 455, 456, 463, 465, 466, 461,
	462, 464, 467, 468, 458, 459, 460, 1206, 469, 457,
	1088, 276, 1207, 470, 471, 1111, 1159, 472, 1173, 474,
	475, 0, 0, 476, 0, 1093, 0, 478, 479, 480,
	0, 0, 481, 482, 664, 1208, 483, 1209, 1188, 484,
	485, 1098, 486, 487, 488, 489, 490, 491, 492, 493,
	494, 0, 495, 496, 666, 497, 498, 499, 667, 500,
	501, 502, 1189, 503, 669, 504, 505, 0, 506, 507,
	0, 508, 509, 510, 511, 512, 513, 514, 1169, 515,
	516, 518, 517, 519, 0, 520, 0, 521, 522, 523,
	0, 0, 0, 0, 0, 524, 0, 526, 527, 528,
	529, 525, 530, 531, 532, 533, 534, 0, 535, 536,
	537, 1210, 538, 539, 540, 541, 542, 1099, 543, 0,
	544, 545, 551, 552, 553, 546, 547, 554, 555, 556,
	557, 558, 0, 560, 561, 559, 562, 563, 564, 1152,
	565, 566, 548, 549, 567, 568, 1211, 569, 570, 571,
	572, 573, 574, 575, 1167, 0, 576, 0, 577, 578,
	579, 581, 550, 582, 587, 588, 1214, 583, 584, 585,
	586, 1190, 590, 591, 0, 592, 593, 1085, 589, 580,
	0, 594, 595, 596, 597, 598, 599, 600, 361, 601,
	0, 602, 1179, 1180, 1181, 1182, 0, 611, 0, 603,
	604, 605, 1191, 606, 1192, 1109, 607, 608, 609, 610,
	0, 612, 613, 0, 1092, 614, 615, 616, 618, 619,
	617, 620, 1153, 621, 0, 0, 622, 623, 624, 681,
	1176, 1213, 0, 626, 625, 627, 684, 0, 628, 0,
	0, 0, 0, 629, 630, 685, 631, 632, 633, 1089,
	0, 0, 0, 0, 1131, 1103, 1104, 1105, 1101, 1102,
	1114, 0, 1084, 0, 0, 0, 0, 0, 0, 1082,
	1083, 277, 279, 278, 280, 281, 282, 283, 1115, 284,
	285, 0, 1113, 0, 0, 0, 1155, 1119, 0, 0,
	0, 286, 287, 1195, 288, 289, 290, 291, 292, 293,
	635, 1168, 0, 294, 1175, 295, 1174, 0, 1185, 296,
	297, 298, 299, 300, 301, 1121, 1154, 1086, 302, 1215,
	1216, 642, 0, 303, 304, 1161, 0, 1142, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 1196, 327, 328, 329,
	1145, 1143, 1144, 1151, 1147, 1146, 1150, 330, 331, 332,
	333, 334, 1178, 335, 337, 1172, 1171, 1091, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 1163, 348, 0, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 1097, 356, 357, 358, 360, 362,
	359, 363, 364, 365, 366, 1186, 1187, 367, 1110, 274,
	0, 0, 0, 0, 0, 368, 369, 370, 1170, 0,
	0, 0, 371, 0, 372, 373, 0, 0, 1197, 374,
	375, 376, 1183, 1184, 377, 378, 379, 380, 381, 382,
	383, 384, 385, 0, 386, 1193, 0, 1120, 387, 0,
	388, 389, 390, 391, 392, 1156, 1157, 1160, 473, 1199,
	393, 394, 0, 395, 396, 397, 398, 399, 0, 0,
	0, 2461, 400, 401, 402, 404, 0, 1198, 403, 1165,
	1166, 0, 1126, 0, 405, 406, 1200, 1158, 1201, 407,
	408, 409, 1202, 410, 0, 0, 0, 411, 412, 413,
	414, 415, 416, 0, 417, 419, 418, 0, 420, 1194,
	1203, 421, 422, 1204, 0, 423, 0, 0, 0, 424,
	425, 428, 1149, 1148, 426, 427, 429, 430, 0, 431,
	432, 434, 437, 433, 435, 436, 438, 451, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	453, 0, 452, 1205, 454, 455, 456, 463, 465, 466,
	461, 462, 464, 467, 468, 458, 459, 460, 1206, 469,
	457, 1088, 276, 1207, 470, 471, 1111, 1159, 472, 1173,
	474, 475, 0, 0, 476, 0, 0, 0, 478, 479,
	480, 0, 0, 481, 482, 664, 1208, 483, 1209, 1188,
	484, 485, 1098, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 0, 495, 496, 666, 497, 498, 499, 667,
	500, 501, 502, 1189, 503, 669, 504, 505, 2460, 506,
	507, 0, 508, 509, 510, 511, 512, 513, 514, 1169,
	515, 516, 518, 517, 519, 0, 520, 0, 521, 522,
	523, 0, 0, 0, 0, 0, 524, 0, 526, 527,
	528, 529, 525, 530, 531, 532, 533, 534, 0, 535,
	536, 537, 1210, 538, 539, 540, 541, 542, 1099, 543,
	0, 544, 545, 551, 552, 553, 546, 547, 554, 555,
	556, 557, 558, 0, 560, 561, 559, 562, 563, 564,
	1152, 565, 566, 548, 549, 567, 568, 1211, 569, 570,
	571, 572, 573, 574, 575, 1167, 0, 576, 0, 577,
	578, 579, 581, 550, 582, 587, 588, 1214, 583, 584,
	585, 586, 1190, 590, 591, 0, 592, 593, 1085, 589,
	580, 0, 594, 595, 596, 597, 598, 599, 600, 361,
	601, 0, 602, 1179, 1180, 1181, 1182, 0, 611, 0,
	603, 604, 605, 1191, 606, 1192, 1109, 607, 608, 609,
	610, 0, 612, 613, 0, 1092, 614, 615, 616, 618,
	619, 617, 620, 1153, 621, 0, 0, 622, 623, 624,
	681, 1176, 1213, 0, 626, 625, 627, 684, 0, 628,
	0, 0, 0, 0, 629, 630, 685, 631, 632, 633,
	1089, 0, 0, 0, 0, 1131, 1103, 1104, 1105, 1101,
	1102, 1114, 0, 1084, 0, 0, 0, 0, 0, 0,
	1082, 1083, 277, 279, 278, 280, 281, 282, 283, 1115,
	284, 285, 0, 1113, 0, 0, 0, 1155, 1119, 0,
	0, 0, 286, 287, 1195, 288, 289, 290, 291, 292,
	293, 635, 1168, 0, 294, 1175, 295, 1174, 0, 1185,
	296, 297, 298, 299, 300, 301, 1121, 1154, 1086, 302,
	1215, 1216, 642, 0, 303, 304, 1161, 0, 1142, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 1196, 327, 328,
	329, 1145, 1143, 1144, 1151, 1147, 1146, 1150, 330, 331,
	332, 333, 334, 1178, 335, 337, 1172, 1171, 1091, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 1163, 348, 0, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 1097, 356, 357, 358, 360,
	362, 359, 363, 364, 365, 366, 1186, 1187, 367, 1110,
	274, 0, 0, 0, 0, 0, 368, 369, 370, 1170,
	0, 0, 0, 371, 0, 372, 373, 0, 0, 1197,
	374, 375, 376, 1183, 1184, 377, 378, 379, 380, 381,
	382, 383, 384, 385, 0, 386, 1193, 0, 1120, 387,
	0, 388, 389, 390, 391, 392, 1156, 1157, 1160, 473,
	1199, 393, 394, 0, 395, 396, 397, 398, 399, 0,
	0, 0, 275, 400, 401, 402, 404, 0, 1198, 403,
	1165, 1166, 0, 1126, 0, 405, 406, 1200, 1158, 1201,
	407, 408, 409, 1202, 410, 0, 0, 0, 411, 412,
	413, 414, 415, 416, 0, 417, 419, 418, 0, 420,
	1194, 1203, 421, 422, 1204, 0, 423, 0, 0, 0,
	424, 425, 428, 1149, 1148, 426, 427, 429, 430, 0,
	431, 432, 434, 437, 433, 435, 436, 438, 451, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 453, 0, 452, 1205, 454, 455, 456, 463, 465,
	466, 461, 462, 464, 467, 468, 458, 459, 460, 1206,
	469, 457, 1088, 276, 1207, 470, 471, 1111, 1159, 472,
	1173, 474, 475, 0, 0, 476, 0, 1093, 0, 478,
	479, 480, 0, 0, 481, 482, 664, 1208, 483, 1209,
	1188, 484, 485, 1098, 486, 487, 488, 489, 490, 491,
	492, 493, 494, 0, 495, 496, 666, 497, 498, 499,
	667, 500, 501, 502, 1189, 503, 669, 504, 505, 0,
	506, 507, 0, 508, 509, 510, 511, 512, 513, 514,
	1169, 515, 516, 518, 517, 519, 0, 520, 0, 521,
	522, 523, 0, 0, 0, 0, 0, 524, 0, 526,
	527, 528, 529, 525, 530, 531, 532, 533, 534, 0,
	535, 536, 537, 1210, 538, 539, 540, 541, 542, 1099,
	543, 0, 544, 545, 551, 552, 553, 546, 547, 554,
	555, 556, 557, 558, 0, 560, 561, 559, 562, 563,
	564, 1152, 565, 566, 548, 549, 567, 568, 1211, 569,
	570, 571, 572, 573, 574, 575, 1167, 0, 576, 0,
	577, 578, 579, 581, 550, 582, 587, 588, 1214, 583,
	584, 585, 586, 1190, 590, 591, 0, 592, 593, 1085,
	589, 580, 0, 594, 595, 596, 597, 598, 599, 600,
	361, 601, 0, 602, 1179, 1180, 1181, 1182, 0, 611,
	0, 603, 604, 605, 1191, 606, 1192, 1109, 607, 608,
	609, 610, 0, 612, 613, 0, 1092, 614, 615, 616,
	618, 619, 617, 620, 1153, 621, 0, 0, 622, 623,
	624, 681, 1176, 1213, 0, 626, 625, 627, 684, 0,
	628, 0, 0, 0, 0, 629, 630, 685, 631, 632,
	633, 1089, 0, 0, 0, 0, 1131, 1103, 1104, 1105,
	1101, 1102, 1114, 0, 1084, 0, 0, 0, 0, 0,
	0, 1082, 1083, 277, 279, 278, 280, 281, 282, 283,
	1115, 284, 285, 0, 1113, 0, 0, 0, 1155, 1119,
	0, 0, 0, 286, 287, 1195, 288, 289, 290, 291,
	292, 293, 635, 1168, 0, 294, 1175, 295, 1174, 0,
	1185, 296, 297, 298, 299, 300, 301, 1121, 1154, 1086,
	302, 1215, 1216, 642, 0, 303, 304, 1161, 0, 1142,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 4423, 323, 0, 324, 325, 326, 1196, 327,
	328, 329, 1145, 1143, 1144, 1151, 1147, 1146, 1150, 330,
	331, 332, 333, 334, 1178, 335, 337, 1172, 1171, 1091,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 1163, 348, 0, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 1097, 356, 357, 358,
	360, 362, 359, 363, 364, 365, 366, 1186, 1187, 367,
	1110, 274, 0, 0, 0, 0, 0, 368, 369, 370,
	1170, 0, 0, 0, 371, 0, 372, 373, 0, 0,
	1197, 374, 375, 376, 1183, 1184, 377, 378, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 1193, 0, 1120,
	387, 0, 388, 389, 390, 391, 392, 1156, 1157, 1160,
	473, 1199, 393, 394, 0, 395, 396, 397, 398, 399,
	0, 0, 0, 275, 400, 401, 402, 404, 0, 1198,
	403, 1165, 1166, 0, 1126, 0, 405, 406, 1200, 1158,
	1201, 407, 408, 409, 1202, 410, 0, 0, 0, 411,
	412, 413, 414, 415, 416, 0, 417, 419, 418, 0,
	420, 1194, 1203, 421, 422, 1204, 0, 423, 0, 0,
	0, 424, 425, 428, 1149, 1148, 426, 427, 429, 430,
	0, 431, 432, 434, 437, 433, 435, 436, 438, 451,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 453, 0, 452, 1205, 454, 455, 456, 463,
	465, 466, 461, 462, 464, 467, 468, 458, 459, 460,
	1206, 469, 457, 1088, 276, 1207, 470, 471, 1111, 1159,
	472, 1173, 474, 475, 0, 0, 476, 0, 1093, 0,
	478, 479, 480, 0, 0, 481, 482, 664, 1208, 483,
	1209, 1188, 484, 485, 1098, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 0, 495, 496, 666, 497, 498,
	499, 667, 500, 501, 502, 1189, 503, 669, 504, 505,
	0, 506, 507, 0, 508, 509, 510, 511, 512, 513,
	514, 1169, 515, 516, 518, 517, 519, 0, 520, 0,
	521, 522, 523, 0, 0, 0, 0, 0, 524, 0,
	526, 527, 528, 529, 525, 530, 531, 532, 533, 534,
	0, 535, 536, 537, 1210, 538, 539, 540, 541, 542,
	1099, 543, 0, 544, 545, 551, 552, 553, 546, 547,
	554, 555, 556, 557, 558, 0, 560, 561, 559, 562,
	563, 564, 1152, 565, 566, 548, 549, 567, 568, 1211,
	569, 570, 571, 572, 573, 574, 575, 1167, 0, 576,
	0, 577, 578, 579, 581, 550, 582, 587, 588, 1214,
	583, 584, 585, 586, 1190, 590, 591, 0, 592, 593,
	1085, 589, 580, 0, 594, 595, 596, 597, 598, 599,
	600, 361, 601, 0, 602, 1179, 1180, 1181, 1182, 0,
	611, 0, 603, 604, 605, 1191, 606, 1192, 1109, 607,
	608, 609, 610, 0, 612, 613, 0, 1092, 614, 615,
	616, 618, 619, 617, 620, 1153, 621, 0, 0, 622,
	623, 624, 681, 1176, 1213, 0, 626, 625, 627, 684,
	0, 628, 0, 0, 0, 0, 629, 630, 685, 631,
	632, 633, 1089, 0, 0, 0, 0, 1131, 1103, 1104,
	1105, 1101, 1102, 1114, 0, 1084, 0, 0, 0, 0,
	0, 0, 1082, 1083, 277, 279, 278, 280, 281, 282,
	283, 1115, 284, 285, 0, 1113, 0, 0, 0, 1155,
	1119, 0, 0, 0, 286, 287, 1195, 288, 289, 290,
	291, 292, 293, 635, 1168, 0, 294, 1175, 295, 1174,
	0, 1185, 296, 297, 298, 299, 300, 301, 1121, 1154,
	1086, 302, 1215, 1216, 642, 0, 303, 304, 1161, 0,
	1142, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1196,
	327, 328, 329, 1145, 1143, 1144, 1151, 1147, 1146, 1150,
	330, 331, 332, 333, 334, 1178, 335, 337, 1172, 1171,
	1091, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 1163, 348, 0, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 1097, 356, 357,
	358, 360, 362, 359, 363, 364, 365, 366, 1186, 1187,
	367, 1110, 274, 0, 0, 0, 0, 0, 368, 369,
	370, 1170, 0, 0, 0, 371, 0, 372, 373, 0,
	0, 1197, 374, 375, 376, 1183, 1184, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 1193, 0,
	1120, 387, 0, 388, 389, 390, 391, 392, 1156, 1157,
	1160, 473, 1199, 393, 394, 0, 395, 396, 397, 398,
	399, 0, 0, 0, 275, 400, 401, 402, 404, 0,
	1198, 403, 1165, 1166, 0, 1126, 0, 405, 406, 1200,
	1158, 1201, 407, 408, 409, 1202, 410, 0, 0, 0,
	411, 412, 413, 414, 415, 416, 0, 417, 419, 418,
	0, 420, 1194, 1203, 421, 422, 1204, 0, 423, 0,
	0, 0, 424, 425, 428, 1149, 1148, 426, 427, 429,
	430, 0, 431, 432, 434, 437, 433, 435, 436, 438,
	451, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 453, 0, 452, 1205, 454, 455, 456,
	463, 465, 466, 461, 462, 464, 467, 468, 458, 459,
	460, 1206, 469, 457, 1088, 4018, 1207, 470, 471, 1111,
	1159, 472, 1173, 474, 475, 0, 0, 476, 0, 0,
	0, 478, 479, 480, 0, 0, 481, 482, 664, 1208,
	483, 1209, 1188, 484, 485, 1098, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 0, 495, 496, 666, 497,
	498, 499, 667, 500, 501, 502, 1189, 503, 669, 504,
	505, 0, 506, 507, 0, 508, 509, 510, 511, 512,
	513, 514, 1169, 515, 516, 518, 517, 519, 0, 520,
	0, 521, 522, 523, 0, 0, 0, 0, 0, 524,
	0, 526, 527, 528, 529, 525, 530, 531, 532, 533,
	534, 0, 535, 536, 537, 1210, 538, 539, 540, 541,
	542, 1099, 543, 0, 544, 545, 551, 552, 553, 546,
	547, 554, 555, 556, 557, 558, 0, 560, 561, 559,
	562, 563, 564, 1152, 565, 566, 548, 549, 567, 568,
	1211, 569, 570, 571, 572, 573, 574, 575, 1167, 0,
	576, 0, 577, 578, 579, 581, 550, 582, 587, 588,
	1214, 583, 584, 585, 586, 1190, 590, 591, 0, 592,
	593, 1085, 589, 580, 0, 594, 595, 596, 597, 598,
	599, 600, 361, 601, 0, 602, 1179, 1180, 1181, 1182,
	0, 611, 0, 603, 604, 605, 1191, 606, 1192, 1109,
	607, 608, 609, 610, 0, 612, 613, 0, 1092, 614,
	615, 616, 618, 619, 617, 620, 1153, 621, 0, 0,
	622, 623, 624, 681, 1176, 1213, 0, 626, 625, 627,
	684, 0, 628, 0, 0, 0, 0, 629, 630, 685,
	631, 632, 633, 1089, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1084, 0, 0, 0,
	0, 0, 0, 1082, 1083, 1942, 0, 0, 0, 0,
	0, 0, 1115, 0, 0, 0, 1113, 1131, 1103, 1104,
	1105, 1101, 1102, 1114, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 1155,
	1119, 0, 0, 0, 286, 287, 1195, 288, 289, 290,
	291, 292, 293, 635, 1168, 0, 294, 1175, 295, 1174,
	0, 1185, 296, 297, 298, 299, 300, 301, 1121, 1154,
	1086, 302, 1215, 1216, 642, 0, 303, 304, 1161, 0,
	1142, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1196,
	327, 328, 329, 1145, 1143, 1144, 1151, 1147, 1146, 1150,
	330, 331, 332, 333, 334, 1178, 335, 337, 1172, 1171,
	1091, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 1163, 348, 0, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 1097, 356, 357,
	358, 360, 362, 359, 363, 364, 365, 366, 1186, 1187,
	367, 1110, 274, 0, 0, 0, 0, 0, 368, 369,
	370, 1170, 0, 0, 0, 371, 0, 372, 373, 0,
	0, 1197, 374, 375, 376, 1183, 1184, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 1193, 0,
	1120, 387, 0, 388, 389, 390, 391, 392, 1156, 1157,
	1160, 473, 1199, 393, 394, 0, 395, 396, 397, 398,
	399, 0, 0, 0, 275, 400, 401, 402, 404, 0,
	1198, 403, 1165, 1166, 0, 1126, 0, 405, 406, 1200,
	1158, 1201, 407, 408, 409, 1202, 410, 0, 0, 0,
	411, 412, 413, 414, 415, 416, 0, 417, 419, 418,
	0, 420, 1194, 1203, 421, 422, 1204, 0, 423, 0,
	0, 0, 424, 425, 428, 1149, 1148, 426, 427, 429,
	430, 0, 431, 432, 434, 437, 433, 435, 436, 438,
	451, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 453, 0, 452, 1205, 454, 455, 456,
	463, 465, 466, 461, 462, 464, 467, 468, 458, 459,
	460, 1206, 469, 457, 1088, 276, 1207, 470, 471, 1111,
	1159, 472, 1173, 474, 475, 0, 0, 476, 0, 0,
	0, 478, 479, 480, 0, 0, 481, 482, 664, 1208,
	483, 1209, 1188, 484, 485, 1098, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 0, 495, 496, 666, 497,
	498, 499, 667, 500, 501, 502, 1189, 503, 669, 504,
	505, 0, 506, 507, 0, 508, 509, 510, 511, 512,
	513, 514, 1169, 515, 516, 518, 517, 519, 0, 520,
	0, 521, 522, 523, 0, 0, 0, 0, 0, 524,
	0, 526, 527, 528, 529, 525, 530, 531, 532, 533,
	534, 0, 535, 536, 537, 1210, 538, 539, 540, 541,
	542, 1099, 543, 0, 544, 545, 551, 552, 553, 546,
	547, 554, 555, 556, 557, 558, 0, 560, 561, 559,
	562, 563, 564, 1152, 565, 566, 548, 549, 567, 568,
	1211, 569, 570, 571, 572, 573, 574, 575, 1167, 0,
	576, 0, 577, 578, 579, 581, 550, 582, 587, 588,
	1214, 583, 584, 585, 586, 1190, 590, 591, 0, 592,
	593, 1085, 589, 580, 0, 594, 595, 596, 597, 598,
	599, 600, 361, 601, 0, 602, 1179, 1180, 1181, 1182,
	0, 611, 0, 603, 604, 605, 1191, 606, 1192, 1109,
	607, 608, 609, 610, 0, 612, 613, 0, 1092, 614,
	615, 616, 618, 619, 617, 620, 1153, 621, 0, 0,
	622, 623, 624, 681, 1176, 1213, 3731, 626, 625, 627,
	684, 0, 628, 0, 0, 0, 0, 629, 630, 685,
	631, 632, 633, 1089, 0, 0, 0, 0, 1131, 1103,
	1104, 1105, 1101, 1102, 1114, 0, 1084, 0, 0, 0,
	0, 0, 0, 1082, 1083, 277, 279, 278, 280, 281,
	282, 283, 1115, 284, 285, 0, 1113, 0, 0, 0,
	1155, 1119, 0, 0, 0, 286, 287, 1195, 288, 289,
	290, 291, 292, 293, 635, 1168, 0, 294, 1175, 295,
	1174, 0, 1185, 296, 297, 298, 299, 300, 301, 1121,
	1154, 1086, 302, 1215, 1216, 642, 0, 303, 304, 1161,
	0, 1142, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	1196, 327, 328, 329, 1145, 1143, 1144, 1151, 1147, 1146,
	1150, 330, 331, 332, 333, 334, 1178, 335, 337, 1172,
	1171, 1091, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 1163, 348, 0, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 1097, 356,
	357, 358, 360, 362, 359, 363, 364, 365, 366, 1186,
	1187, 367, 1110, 274, 0, 0, 0, 0, 0, 368,
	369, 370, 1170, 0, 0, 0, 371, 0, 372, 373,
	0, 0, 1197, 374, 375, 376, 1183, 1184, 377, 378,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 1193,
	0, 1120, 387, 0, 388, 389, 390, 391, 392, 1156,
	1157, 1160, 473, 1199, 393, 394, 0, 395, 396, 397,
	398, 399, 0, 0, 0, 275, 400, 401, 402, 404,
	0, 1198, 403, 1165, 1166, 0, 1126, 0, 405, 406,
	1200, 1158, 1201, 407, 408, 409, 1202, 410, 0, 0,
	0, 411, 412, 413, 414, 415, 416, 0, 417, 419,
	418, 0, 420, 1194, 1203, 421, 422, 1204, 0, 423,
	0, 0, 0, 424, 425, 428, 1149, 1148, 426, 427,
	429, 430, 0, 431, 432, 434, 437, 433, 435, 436,
	438, 451, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 453, 0, 452, 1205, 454, 455,
	456, 463, 465, 466, 461, 462, 464, 467, 468, 458,
	459, 460, 1206, 469, 457, 1088, 276, 1207, 470, 471,
	1111, 1159, 472, 1173, 474, 475, 0, 0, 476, 0,
	0, 0, 478, 479, 480, 0, 0, 481, 482, 664,
	1208, 483, 1209, 1188, 484, 485, 1098, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 0, 495, 496, 666,
	497, 498, 499, 667, 500, 501, 502, 1189, 503, 669,
	504, 505, 0, 506, 507, 0, 508, 509, 510, 511,
	512, 513, 514, 1169, 515, 516, 518, 517, 519, 0,
	520, 0, 521, 522, 523, 0, 0, 0, 0, 0,
	524, 0, 526, 527, 528, 529, 525, 530, 531, 532,
	533, 534, 0, 535, 536, 537, 1210, 538, 539, 540,
	541, 542, 1099, 543, 0, 544, 545, 551, 552, 553,
	546, 547, 554, 555, 556, 557, 558, 0, 560, 561,
	559, 562, 563, 564, 1152, 565, 566, 548, 549, 567,
	568, 1211, 569, 570, 571, 572, 573, 574, 575, 1167,
	0, 576, 0, 577, 578, 579, 581, 550, 582, 587,
	588, 1214, 583, 584, 585, 586, 1190, 590, 591, 0,
	592, 593, 1085, 589, 580, 0, 594, 595, 596, 597,
	598, 599, 600, 361, 601, 0, 602, 1179, 1180, 1181,
	1182, 0, 611, 0, 603, 604, 605, 1191, 606, 1192,
	1109, 607, 608, 609, 610, 0, 612, 613, 0, 1092,
	614, 615, 616, 618, 619, 617, 620, 1153, 621, 0,
	0, 622, 623, 624, 681, 1176, 1213, 0, 626, 625,
	627, 684, 0, 628, 0, 0, 0, 0, 629, 630,
	685, 631, 632, 633, 1089, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1084, 0, 0,
	0, 0, 0, 0, 1082, 1083, 1942, 0, 0, 0,
	0, 0, 0, 1115, 0, 0, 0, 1113, 1131, 1103,
	1104, 1105, 1101, 1102, 1114, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	1155, 1119, 0, 0, 0, 286, 287, 1195, 288, 289,
	290, 291, 292, 293, 635, 1168, 0, 294, 1175, 295,
	1174, 0, 1185, 296, 297, 298, 299, 300, 301, 1121,
	1154, 1086, 302, 1215, 1216, 642, 0, 303, 304, 1161,
	0, 1142, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	1196, 327, 328, 329, 1145, 1143, 1144, 1151, 1147, 1146,
	1150, 330, 331, 332, 333, 334, 1178, 335, 337, 1172,
	1171, 1091, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 1163, 348, 0, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 1097, 356,
	357, 358, 360, 362, 359, 363, 364, 365, 366, 1186,
	1187, 367, 1110, 274, 0, 0, 0, 0, 0, 368,
	369, 370, 1170, 0, 0, 0, 371, 0, 372, 373,
	0, 2720, 1197, 374, 375, 376, 1183, 1184, 377, 378,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 1193,
	0, 1120, 387, 0, 388, 389, 390, 391, 392, 1156,
	1157, 1160, 473, 1199, 393, 394, 0, 395, 396, 397,
	398, 399, 0, 0, 0, 275, 400, 401, 402, 404,
	0, 1198, 403, 1165, 1166, 0, 1126, 0, 405, 406,
	1200, 1158, 1201, 407, 408, 409, 1202, 410, 0, 0,
	0, 411, 412, 413, 414, 415, 416, 0, 417, 419,
	418, 0, 420, 1194, 1203, 421, 422, 1204, 0, 423,
	0, 0, 0, 424, 425, 428, 1149, 1148, 426, 427,
	429, 430, 0, 431, 432, 434, 437, 433, 435, 436,
	438, 451, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 453, 0, 452, 1205, 454, 455,
	456, 463, 465, 466, 461, 462, 464, 467, 468, 458,
	459, 460, 1206, 469, 457, 1088, 276, 1207, 470, 471,
	1111, 1159, 472, 1173, 474, 475, 0, 0, 476, 0,
	0, 0, 478, 479, 480, 0, 0, 481, 482, 664,
	1208, 483, 1209, 1188, 484, 485, 1098, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 0, 495, 496, 666,
	497, 498, 499, 667, 500, 501, 502, 1189, 503, 669,
	504, 505, 0, 506, 507, 0, 508, 509, 510, 511,
	512, 513, 514, 1169, 515, 516, 518, 517, 519, 0,
	520, 0, 521, 522, 523, 0, 0, 0, 0, 0,
	524, 0, 526, 527, 528, 529, 525, 530, 531, 532,
	533, 534, 0, 535, 536, 537, 1210, 538, 539, 540,
	541, 542, 1099, 543, 0, 544, 545, 551, 552, 553,
	546, 547, 554, 555, 556, 557, 558, 0, 560, 561,
	559, 562, 563, 564, 1152, 565, 566, 548, 549, 567,
	568, 1211, 569, 570, 571, 572, 573, 574, 575, 1167,
	0, 576, 0, 577, 578, 579, 581, 550, 582, 587,
	588, 1214, 583, 584, 585, 586, 1190, 590, 591, 0,
	592, 593, 1085, 589, 580, 0, 594, 595, 596, 597,
	598, 599, 600, 361, 601, 0, 602, 1179, 1180, 1181,
	1182, 0, 611, 0, 603, 604, 605, 1191, 606, 1192,
	1109, 607, 608, 609, 610, 0, 612, 613, 0, 1092,
	614, 615, 616, 618, 619, 617, 620, 1153, 621, 0,
	0, 622, 623, 624, 681, 1176, 1213, 0, 626, 625,
	627, 684, 0, 628, 0, 0, 0, 0, 629, 630,
	685, 631, 632, 633, 1089, 0, 0, 0, 0, 1131,
	1103, 1104, 1105, 1101, 1102, 1114, 0, 1084, 0, 0,
	0, 0, 0, 0, 1082, 1083, 277, 279, 278, 280,
	281, 282, 283, 1115, 284, 285, 0, 1113, 0, 0,
	0, 1155, 1119, 0, 0, 0, 286, 287, 1195, 288,
	289, 290, 291, 292, 293, 635, 1168, 0, 294, 1175,
	295, 1174, 0, 1185, 296, 297, 298, 299, 300, 301,
	1121, 1154, 1086, 302, 1215, 1216, 642, 0, 303, 304,
	1161, 0, 1142, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 1196, 327, 328, 329, 1145, 1143, 1144, 1151, 1147,
	1146, 1150, 330, 331, 332, 333, 334, 1178, 335, 337,
	1172, 1171, 1091, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 1163, 348, 0,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 1097,
	356, 357, 358, 360, 362, 359, 363, 364, 365, 366,
	1186, 1187, 367, 1110, 274, 0, 0, 0, 0, 0,
	368, 369, 370, 1170, 0, 0, 0, 371, 0, 372,
	373, 0, 0, 1197, 374, 375, 376, 1183, 1184, 377,
	378, 379, 380, 381, 382, 383, 384, 385, 0, 386,
	1193, 0, 1120, 387, 0, 388, 389, 390, 391, 392,
	1156, 1157, 1160, 473, 1199, 393, 394, 0, 395, 396,
	397, 398, 399, 0, 0, 0, 275, 400, 401, 402,
	404, 0, 1198, 403, 1165, 1166, 0, 1126, 0, 405,
	406, 1200, 1158, 1201, 407, 408, 409, 1202, 410, 0,
	0, 0, 411, 412, 413, 414, 415, 416, 0, 417,
	419, 418, 0, 420, 1194, 1203, 421, 422, 1204, 0,
	423, 0, 0, 0, 424, 425, 428, 1149, 1148, 426,
	427, 429, 430, 0, 431, 432, 434, 437, 433, 435,
	436, 438, 451, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 450, 453, 0, 452, 1205, 454,
	455, 456, 463, 465, 466, 461, 462, 464, 467, 468,
	458, 459, 460, 1206, 469, 457, 1088, 276, 1207, 470,
	471, 1111, 1159, 472, 1173, 474, 475, 0, 0, 476,
	0, 0, 0, 478, 479, 480, 0, 0, 481, 482,
	664, 1208, 483, 1209, 1188, 484, 485, 1098, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 0, 495, 496,
	666, 497, 498, 499, 667, 500, 501, 502, 1189, 503,
	669, 504, 505, 0, 506, 507, 0, 508, 509, 510,
	511, 512, 513, 514, 1169, 515, 516, 518, 517, 519,
	0, 520, 0, 521, 522, 523, 0, 0, 0, 0,
	0, 524, 0, 526, 527, 528, 529, 525, 530, 531,
	532, 533, 534, 0, 535, 536, 537, 1210, 538, 539,
	540, 541, 542, 1099, 543, 0, 544, 545, 551, 552,
	553, 546, 547, 554, 555, 556, 557, 558, 0, 560,
	561, 559, 562, 563, 564, 1152, 565, 566, 548, 549,
	567, 568, 1211, 569, 570, 571, 572, 573, 574, 575,
	1167, 0, 576, 0, 577, 578, 579, 581, 550, 582,
	587, 588, 1214, 583, 584, 585, 586, 1190, 590, 591,
	0, 592, 593, 1085, 589, 580, 0, 594, 595, 596,
	597, 598, 599, 600, 361, 601, 0, 602, 1179, 1180,
	1181, 1182, 0, 611, 0, 603, 604, 605, 1191, 606,
	1192, 1109, 607, 608, 609, 610, 0, 612, 613, 0,
	1092, 614, 615, 616, 618, 619, 617, 620, 1153, 621,
	0, 0, 622, 623, 624, 681, 1176, 1213, 0, 626,
	625, 627, 684, 0, 628, 0, 0, 0, 0, 629,
	630, 685, 631, 632, 633, 1089, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1084, 0,
	0, 0, 0, 0, 0, 1082, 1083, 0, 0, 0,
	0, 0, 0, 0, 1115, 1871, 0, 2725, 1113, 1131,
	1103, 1104, 1105, 1101, 1102, 1114, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 1155, 1119, 0, 0, 0, 286, 287, 1195, 288,
	289, 290, 291, 292, 293, 635, 1168, 0, 294, 1175,
	295, 1174, 0, 1185, 296, 297, 298, 299, 300, 301,
	1121, 1154, 1086, 302, 1215, 1216, 642, 0, 303, 304,
	1161, 0, 1142, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 1196, 327, 328, 329, 1145, 1143, 1144, 1151, 1147,
	1146, 1150, 330, 331, 332, 333, 334, 1178, 335, 337,
	1172, 1171, 1091, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 1163, 348, 0,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 1097,
	356, 357, 358, 360, 362, 359, 363, 364, 365, 366,
	1186, 1187, 367, 1110, 274, 0, 0, 0, 0, 0,
	368, 369, 370, 1170, 0, 0, 0, 371, 0, 372,
	373, 0, 0, 1197, 374, 375, 376, 1183, 1184, 377,
	378, 379, 380, 381, 382, 383, 384, 385, 0, 386,
	1193, 0, 1120, 387, 0, 388, 389, 390, 391, 392,
	1156, 1157, 1160, 473, 1199, 393, 394, 0, 395, 396,
	397, 398, 399, 0, 0, 0, 275, 400, 401, 402,
	404, 0, 1198, 403, 1165, 1166, 0, 1126, 0, 405,
	406, 1200, 1158, 1201, 407, 408, 409, 1202, 410, 0,
	0, 0, 411, 412, 413, 414, 415, 416, 0, 417,
	419, 418, 0, 420, 1194, 1203, 421, 422, 1204, 0,
	423, 0, 0, 0, 424, 425, 428, 1149, 1148, 426,
	427, 429, 430, 0, 431, 432, 434, 437, 433, 435,
	436, 438, 451, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 450, 453, 0, 452, 1205, 454,
	455, 456, 463, 465, 466, 461, 462, 464, 467, 468,
	458, 459, 460, 1206, 469, 457, 1088, 276, 1207, 470,
	471, 1111, 1159, 472, 1173, 474, 475, 0, 0, 476,
	0, 0, 0, 478, 479, 480, 0, 0, 481, 482,
	664, 1208, 483, 1209, 1188, 484, 485, 1098, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 0, 495, 496,
	666, 497, 498, 499, 667, 500, 501, 502, 1189, 503,
	669, 504, 505, 0, 506, 507, 0, 508, 509, 510,
	511, 512, 513, 514, 1169, 515, 516, 518, 517, 519,
	0, 520, 0, 521, 522, 523, 0, 0, 0, 0,
	0, 524, 0, 526, 527, 528, 529, 525, 530, 531,
	532, 533, 534, 0, 535, 536, 537, 1210, 538, 539,
	540, 541, 542, 1099, 543, 0, 544, 545, 551, 552,
	553, 546, 547, 554, 555, 556, 557, 558, 0, 560,
	561, 559, 562, 563, 564, 1152, 565, 566, 548, 549,
	567, 568, 1211, 569, 570, 571, 572, 573, 574, 575,
	1167, 0, 576, 0, 577, 578, 579, 581, 550, 582,
	587, 588, 1214, 583, 584, 585, 586, 1190, 590, 591,
	0, 592, 593, 1085, 589, 580, 0, 594, 595, 596,
	597, 598, 599, 600, 361, 601, 0, 602, 1179, 1180,
	1181, 1182, 0, 611, 0, 603, 604, 605, 1191, 606,
	1192, 1109, 607, 608, 609, 610, 0, 612, 613, 0,
	1092, 614, 615, 616, 618, 619, 617, 620, 1153, 621,
	0, 0, 622, 623, 624, 681, 1176, 1213, 0, 626,
	625, 627, 684, 0, 628, 0, 0, 0, 0, 629,
	630, 685, 631, 632, 633, 1089, 0, 0, 2723, 0,
	1131, 1103, 1104, 1105, 1101, 1102, 1114, 0, 1084, 0,
	0, 0, 0, 0, 0, 1082, 1083, 277, 279, 278,
	280, 281, 282, 283, 1115, 284, 285, 0, 1113, 0,
	0, 0, 1155, 1119, 0, 0, 0, 286, 287, 1195,
	288, 289, 290, 291, 292, 293, 635, 1168, 0, 294,
	1175, 295, 1174, 0, 1185, 296, 297, 298, 299, 300,
	301, 1121, 1154, 1086, 302, 1215, 1216, 642, 0, 303,
	304, 1161, 0, 1142, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 1196, 327, 328, 329, 1145, 1143, 1144, 1151,
	1147, 1146, 1150, 330, 331, 332, 333, 334, 1178, 335,
	337, 1172, 1171, 1091, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 1163, 348,
	0, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	1097, 356, 357, 358, 360, 362, 359, 363, 364, 365,
	366, 1186, 1187, 367, 1110, 274, 0, 0, 0, 0,
	0, 368, 369, 370, 1170, 0, 0, 0, 371, 0,
	372, 373, 0, 0, 1197, 374, 375, 376, 1183, 1184,
	377, 378, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 1193, 0, 1120, 387, 0, 388, 389, 390, 391,
	392, 1156, 1157, 1160, 473, 1199, 393, 394, 0, 395,
	396, 397, 398, 399, 0, 0, 0, 275, 400, 401,
	402, 404, 0, 1198, 403, 1165, 1166, 0, 1126, 0,
	405, 406, 1200, 1158, 1201, 407, 408, 409, 1202, 410,
	0, 0, 0, 411, 412, 413, 414, 415, 416, 0,
	417, 419, 418, 0, 420, 1194, 1203, 421, 422, 1204,
	0, 423, 0, 0, 0, 424, 425, 428, 1149, 1148,
	426, 427, 429, 430, 0, 431, 432, 434, 437, 433,
	435, 436, 438, 451, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 453, 0, 452, 1205,
	454, 455, 456, 463, 465, 466, 461, 462, 464, 467,
	468, 458, 459, 460, 1206, 469, 457, 1088, 276, 1207,
	470, 471, 1111, 1159, 472, 1173, 474, 475, 0, 0,
	476, 0, 0, 0, 478, 479, 480, 0, 0, 481,
	482, 664, 1208, 483, 1209, 1188, 484, 485, 1098, 486,
	487, 488, 489, 490, 491, 492, 493, 494, 0, 495,
	496, 666, 497, 498, 499, 667, 500, 501, 502, 1189,
	503, 669, 504, 505, 0, 506, 507, 0, 508, 509,
	510, 511, 512, 513, 514, 1169, 515, 516, 518, 517,
	519, 0, 520, 0, 521, 522, 523, 0, 0, 0,
	0, 0, 524, 0, 526, 527, 528, 529, 525, 530,
	531, 532, 533, 534, 0, 535, 536, 537, 1210, 538,
	539, 540, 541, 542, 1099, 543, 0, 544, 545, 551,
	552, 553, 546, 547, 554, 555, 556, 557, 558, 0,
	560, 561, 559, 562, 563, 564, 1152, 565, 566, 548,
	549, 567, 568, 1211, 569, 570, 571, 572, 573, 574,
	575, 1167, 0, 576, 0, 577, 578, 579, 581, 550,
	582, 587, 588, 1214, 583, 584, 585, 586, 1190, 590,
	591, 0, 592, 593, 1085, 589, 580, 0, 594, 595,
	596, 597, 598, 599, 600, 361, 601, 0, 602, 1179,
	1180, 1181, 1182, 0, 611, 0, 603, 604, 605, 1191,
	606, 1192, 1109, 607, 608, 609, 610, 0, 612, 613,
	0, 1092, 614, 615, 616, 618, 619, 617, 620, 1153,
	621, 0, 0, 622, 623, 624, 681, 1176, 1213, 0,
	626, 625, 627, 684, 0, 628, 0, 0, 0, 0,
	629, 630, 685, 631, 632, 633, 1089, 0, 0, 2711,
	0, 1131, 1103, 1104, 1105, 1101, 1102, 1114, 0, 1084,
	0, 0, 0, 0, 0, 0, 1082, 1083, 277, 279,
	278, 280, 281, 282, 283, 1115, 284, 285, 0, 1113,
	0, 0, 0, 1155, 1119, 0, 0, 0, 286, 287,
	1195, 288, 289, 290, 291, 292, 293, 635, 1168, 0,
	294, 1175, 295, 1174, 0, 1185, 296, 297, 298, 299,
	300, 301, 1121, 1154, 1086, 302, 1215, 1216, 642, 0,
	303, 304, 1161, 0, 1142, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 1196, 327, 328, 329, 1145, 1143, 1144,
	1151, 1147, 1146, 1150, 330, 331, 332, 333, 334, 1178,
	335, 337, 1172, 1171, 1091, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 1163,
	348, 0, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 1097, 356, 357, 358, 360, 362, 359, 363, 364,
	365, 366, 1186, 1187, 367, 1110, 274, 0, 0, 0,
	0, 0, 368, 369, 370, 1170, 0, 0, 0, 371,
	0, 372, 373, 0, 0, 1197, 374, 375, 376, 1183,
	1184, 377, 378, 379, 380, 381, 382, 383, 384, 385,
	0, 386, 1193, 0, 1120, 387, 0, 388, 389, 390,
	391, 392, 1156, 1157, 1160, 473, 1199, 393, 394, 0,
	395, 396, 397, 398, 399, 0, 0, 0, 275, 400,
	401, 402, 404, 0, 1198, 403, 1165, 1166, 0, 1126,
	0, 405, 406, 1200, 1158, 1201, 407, 408, 409, 1202,
	410, 0, 0, 0, 411, 412, 413, 414, 415, 416,
	0, 417, 419, 418, 0, 420, 1194, 1203, 421, 422,
	1204, 0, 423, 0, 0, 0, 424, 425, 428, 1149,
	1148, 426, 427, 429, 430, 0, 431, 432, 434, 437,
	433, 435, 436, 438, 451, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 453, 0, 452,
	1205, 454, 455, 456, 463, 465, 466, 461, 462, 464,
	467, 468, 458, 459, 460, 1206, 469, 457, 1088, 276,
	1207, 470, 471, 1111, 1159, 472, 1173, 474, 475, 0,
	0, 476, 0, 0, 0, 478, 479, 480, 0, 0,
	481, 482, 664, 1208, 483, 1209, 1188, 484, 485, 1098,
	486, 487, 488, 489, 490, 491, 492, 493, 494, 0,
	495, 496, 666, 497, 498, 499, 667, 500, 501, 502,
	1189, 503, 669, 504, 505, 0, 506, 507, 0, 508,
	509, 510, 511, 512, 513, 514, 1169, 515, 516, 518,
	517, 519, 0, 520, 0, 521, 522, 523, 0, 0,
	0, 0, 0, 524, 0, 526, 527, 528, 529, 525,
	530, 531, 532, 533, 534, 0, 535, 536, 537, 1210,
	538, 539, 540, 541, 542, 1099, 543, 0, 544, 545,
	551, 552, 553, 546, 547, 554, 555, 556, 557, 558,
	0, 560, 561, 559, 562, 563, 564, 1152, 565, 566,
	548, 549, 567, 568, 1211, 569, 570, 571, 572, 573,
	574, 575, 1167, 0, 576, 0, 577, 578, 579, 581,
	550, 582, 587, 588, 1214, 583, 584, 585, 586, 1190,
	590, 591, 0, 592, 593, 1085, 589, 580, 0, 594,
	595, 596, 597, 598, 599, 600, 361, 601, 0, 602,
	1179, 1180, 1181, 1182, 0, 611, 0, 603, 604, 605,
	1191, 606, 1192, 1109, 607, 608, 609, 610, 0, 612,
	613, 0, 1092, 614, 615, 616, 618, 619, 617, 620,
	1153, 621, 0, 0, 622, 623, 624, 681, 1176, 1213,
	0, 626, 625, 627, 684, 0, 628, 0, 0, 0,
	0, 629, 630, 685, 631, 632, 633, 1089, 0, 0,
	2699, 0, 1131, 1103, 1104, 1105, 1101, 1102, 1114, 0,
	1084, 0, 0, 0, 0, 0, 0, 1082, 1083, 277,
	279, 278, 280, 281, 282, 283, 1115, 284, 285, 0,
	1113, 0, 0, 0, 1155, 1119, 0, 0, 0, 286,
	287, 1195, 288, 289, 290, 291, 292, 293, 635, 1168,
	0, 294, 1175, 295, 1174, 0, 1185, 296, 297, 298,
	299, 300, 301, 1121, 1154, 1086, 302, 1215, 1216, 642,
	0, 303, 304, 1161, 0, 1142, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 1196, 327, 328, 329, 1145, 1143,
	1144, 1151, 1147, 1146, 1150, 330, 331, 332, 333, 334,
	1178, 335, 337, 1172, 1171, 1091, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	1163, 348, 0, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 1097, 356, 357, 358, 360, 362, 359, 363,
	364, 365, 366, 1186, 1187, 367, 1110, 274, 0, 0,
	0, 0, 0, 368, 369, 370, 1170, 0, 0, 0,
	371, 0, 372, 373, 0, 0, 1197, 374, 375, 376,
	1183, 1184, 377, 378, 379, 380, 381, 382, 383, 384,
	385, 0, 386, 1193, 0, 1120, 387, 0, 388, 389,
	390, 391, 392, 1156, 1157, 1160, 473, 1199, 393, 394,
	0, 395, 396, 397, 398, 399, 0, 0, 0, 275,
	400, 401, 402, 404, 0, 1198, 403, 1165, 1166, 0,
	1126, 0, 405, 406, 1200, 1158, 1201, 407, 408, 409,
	1202, 410, 0, 0, 0, 411, 412, 413, 414, 415,
	416, 0, 417, 419, 418, 0, 420, 1194, 1203, 421,
	422, 1204, 0, 423, 0, 0, 0, 424, 425, 428,
	1149, 1148, 426, 427, 429, 430, 0, 431, 432, 434,
	437, 433, 435, 436, 438, 451, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 453, 0,
	452, 1205, 454, 455, 456, 463, 465, 466, 461, 462,
	464, 467, 468, 458, 459, 460, 1206, 469, 457, 1088,
	276, 1207, 470, 471, 1111, 1159, 472, 1173, 474, 475,
	0, 0, 476, 0, 0, 0, 478, 479, 480, 0,
	0, 481, 482, 664, 1208, 483, 1209, 1188, 484, 485,
	1098, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	0, 495, 496, 666, 497, 498, 499, 667, 500, 501,
	502, 1189, 503, 669, 504, 505, 0, 506, 507, 0,
	508, 509, 510, 511, 512, 513, 514, 1169, 515, 516,
	518, 517, 519, 0, 520, 0, 521, 522, 523, 0,
	0, 0, 0, 0, 524, 0, 526, 527, 528, 529,
	525, 530, 531, 532, 533, 534, 0, 535, 536, 537,
	1210, 538, 539, 540, 541, 542, 1099, 543, 0, 544,
	545, 551, 552, 553, 546, 547, 554, 555, 556, 557,
	558, 0, 560, 561, 559, 562, 563, 564, 1152, 565,
	566, 548, 549, 567, 568, 1211, 569, 570, 571, 572,
	573, 574, 575, 1167, 0, 576, 0, 577, 578, 579,
	581, 550, 582, 587, 588, 1214, 583, 584, 585, 586,
	1190, 590, 591, 0, 592, 593, 1085, 589, 580, 0,
	594, 595, 596, 597, 598, 599, 600, 361, 601, 0,
	602, 1179, 1180, 1181, 1182, 0, 611, 0, 603, 604,
	605, 1191, 606, 1192, 1109, 607, 608, 609, 610, 0,
	612, 613, 0, 1092, 614, 615, 616, 618, 619, 617,
	620, 1153, 621, 0, 0, 622, 623, 624, 681, 1176,
	1213, 0, 626, 625, 627, 684, 0, 628, 0, 0,
	0, 0, 629, 630, 685, 631, 632, 633, 1089, 0,
	0, 2697, 0, 2688, 2695, 1104, 1105, 1101, 1102, 1114,
	0, 1084, 0, 0, 0, 0, 0, 0, 1082, 1083,
	277, 279, 278, 280, 281, 282, 283, 1115, 284, 285,
	0, 1113, 0, 0, 0, 1155, 1119, 0, 0, 0,
	286, 287, 1195, 288, 289, 290, 291, 292, 293, 635,
	1168, 0, 294, 1175, 295, 1174, 0, 1185, 296, 297,
	298, 299, 300, 301, 1121, 1154, 1086, 302, 1215, 1216,
	642, 0, 303, 304, 1161, 0, 1142, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 1196, 327, 328, 329, 1145,
	1143, 1144, 1151, 1147, 1146, 1150, 330, 331, 332, 333,
	334, 1178, 2691, 337, 1172, 1171, 1091, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 1163, 348, 0, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 1097, 356, 357, 358, 360, 362, 359,
	363, 364, 365, 366, 1186, 1187, 367, 1110, 274, 0,
	0, 0, 0, 0, 368, 369, 370, 1170, 0, 0,
	0, 371, 0, 372, 373, 0, 0, 1197, 374, 375,
	376, 1183, 1184, 377, 378, 379, 380, 381, 382, 383,
	384, 385, 0, 386, 1193, 0, 1120, 387, 0, 388,
	389, 390, 2692, 392, 1156, 1157, 1160, 473, 1199, 393,
	394, 0, 395, 396, 397, 398, 399, 0, 0, 0,
	275, 400, 401, 402, 404, 0, 1198, 403, 1165, 1166,
	0, 1126, 0, 405, 406, 1200, 1158, 1201, 407, 408,
	409, 1202, 410, 0, 0, 0, 411, 412, 413, 414,
	415, 416, 0, 417, 419, 418, 0, 420, 1194, 1203,
	421, 422, 1204, 0, 423, 0, 0, 0, 424, 425,
	428, 1149, 1148, 426, 427, 429, 430, 0, 431, 432,
	434, 437, 433, 435, 2693, 438, 2690, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 450, 453,
	0, 452, 1205, 454, 455, 456, 463, 465, 466, 461,
	462, 464, 467, 468, 458, 459, 460, 1206, 469, 457,
	1088, 276, 1207, 470, 471, 1111, 1159, 472, 1173, 474,
	475, 0, 0, 476, 0, 0, 0, 478, 479, 480,
	0, 0, 481, 482, 664, 1208, 483, 1209, 1188, 484,
	485, 1098, 486, 487, 488, 489, 490, 491, 492, 493,
	494, 0, 495, 496, 666, 497, 498, 499, 667, 500,
	501, 502, 1189, 503, 669, 504, 505, 0, 506, 507,
	0, 508, 509, 510, 511, 512, 513, 514, 1169, 515,
	516, 518, 517, 519, 0, 520, 0, 521, 522, 523,
	0, 0, 0, 0, 0, 524, 0, 526, 527, 528,
	529, 525, 530, 531, 532, 533, 534, 0, 535, 536,
	537, 1210, 538, 539, 540, 541, 542, 1099, 543, 0,
	544, 545, 551, 552, 553, 546, 547, 554, 555, 556,
	557, 2694, 0, 560, 561, 559, 562, 563, 564, 1152,
	565, 566, 548, 549, 567, 568, 1211, 569, 570, 571,
	572, 573, 574, 575, 1167, 0, 576, 0, 577, 578,
	579, 581, 550, 582, 587, 588, 1214, 583, 584, 585,
	586, 1190, 590, 591, 0, 592, 593, 1085, 589, 580,
	0, 594, 595, 596, 597, 598, 599, 600, 361, 601,
	0, 602, 1179, 1180, 1181, 1182, 0, 611, 0, 603,
	604, 605, 1191, 606, 1192, 1109, 607, 608, 609, 610,
	0, 612, 613, 0, 1092, 614, 615, 616, 618, 619,
	617, 620, 1153, 621, 0, 0, 622, 623, 624, 681,
	1176, 1213, 0, 626, 625, 627, 684, 0, 628, 0,
	0, 0, 0, 629, 630, 685, 631, 2689, 633, 1089,
	0, 0, 2685, 0, 2688, 2695, 1104, 1105, 1101, 1102,
	1114, 0, 1084, 0, 0, 0, 0, 0, 0, 1082,
	1083, 277, 279, 278, 280, 281, 282, 283, 1115, 284,
	285, 0, 1113, 0, 0, 0, 1155, 1119, 0, 0,
	0, 286, 287, 1195, 288, 289, 290, 291, 292, 293,
	635, 1168, 0, 294, 1175, 295, 1174, 0, 1185, 296,
	297, 298, 299, 300, 301, 1121, 1154, 1086, 302, 1215,
	1216, 642, 0, 303, 304, 1161, 0, 1142, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 1196, 327, 328, 329,
	1145, 1143, 1144, 1151, 1147, 1146, 1150, 330, 331, 332,
	333, 334, 1178, 2691, 337, 1172, 1171, 1091, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 1163, 348, 0, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 1097, 356, 357, 358, 360, 362,
	359, 363, 364, 365, 366, 1186, 1187, 367, 1110, 274,
	0, 0, 0, 0, 0, 368, 369, 370, 1170, 0,
	0, 0, 371, 0, 372, 373, 0, 0, 1197, 374,
	375, 376, 1183, 1184, 377, 378, 379, 380, 381, 382,
	383, 384, 385, 0, 386, 1193, 0, 1120, 387, 0,
	388, 389, 390, 2692, 392, 1156, 1157, 1160, 473, 1199,
	393, 394, 0, 395, 396, 397, 398, 399, 0, 0,
	0, 275, 400, 401, 402, 404, 0, 1198, 403, 1165,
	1166, 0, 1126, 0, 405, 406, 1200, 1158, 1201, 407,
	408, 409, 1202, 410, 0, 0, 0, 411, 412, 413,
	414, 415, 416, 0, 417, 419, 418, 0, 420, 1194,
	1203, 421, 422, 1204, 0, 423, 0, 0, 0, 424,
	425, 428, 1149, 1148, 426, 427, 429, 430, 0, 431,
	432, 434, 437, 433, 435, 2693, 438, 2690, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	453, 0, 452, 1205, 454, 455, 456, 463, 465, 466,
	461, 462, 464, 467, 468, 458, 459, 460, 1206, 469,
	457, 1088, 276, 1207, 470, 471, 1111, 1159, 472, 1173,
	474, 475, 0, 0, 476, 0, 0, 0, 478, 479,
	480, 0, 0, 481, 482, 664, 1208, 483, 1209, 1188,
	484, 485, 1098, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 0, 495, 496, 666, 497, 498, 499, 667,
	500, 501, 502, 1189, 503, 669, 504, 505, 0, 506,
	507, 0, 508, 509, 510, 511, 512, 513, 514, 1169,
	515, 516, 518, 517, 519, 0, 520, 0, 521, 522,
	523, 0, 0, 0, 0, 0, 524, 0, 526, 527,
	528, 529, 525, 530, 531, 532, 533, 534, 0, 535,
	536, 537, 1210, 538, 539, 540, 541, 542, 1099, 543,
	0, 544, 545, 551, 552, 553, 546, 547, 554, 555,
	556, 557, 2694, 0, 560, 561, 559, 562, 563, 564,
	1152, 565, 566, 548, 549, 567, 568, 1211, 569, 570,
	571, 572, 573, 574, 575, 1167, 0, 576, 0, 577,
	578, 579, 581, 550, 582, 587, 588, 1214, 583, 584,
	585, 586, 1190, 590, 591, 0, 592, 593, 1085, 589,
	580, 0, 594, 595, 596, 597, 598, 599, 600, 361,
	601, 0, 602, 1179, 1180, 1181, 1182, 0, 611, 0,
	603, 604, 605, 1191, 606, 1192, 1109, 607, 608, 609,
	610, 0, 612, 613, 0, 1092, 614, 615, 616, 618,
	619, 617, 620, 1153, 621, 0, 0, 622, 623, 624,
	681, 1176, 1213, 0, 626, 625, 627, 684, 0, 628,
	0, 0, 0, 0, 629, 630, 685, 631, 2689, 633,
	1089, 0, 0, 0, 0, 1131, 1103, 1104, 1105, 1101,
	1102, 1114, 0, 1084, 0, 0, 0, 0, 0, 0,
	1082, 1083, 277, 279, 278, 280, 281, 282, 283, 1115,
	284, 285, 0, 1113, 0, 0, 0, 1155, 1119, 0,
	0, 0, 286, 287, 1195, 288, 289, 290, 291, 292,
	293, 635, 1168, 0, 294, 1175, 295, 1174, 0, 1185,
	296, 297, 298, 299, 300, 301, 1121, 1154, 1086, 302,
	1215, 1216, 642, 0, 303, 304, 1161, 0, 1142, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 1196, 327, 328,
	329, 1145, 1143, 1144, 1151, 1147, 1146, 1150, 330, 331,
	332, 333, 334, 1178, 335, 337, 1172, 1171, 1091, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 1163, 348, 0, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 1097, 356, 357, 358, 360,
	362, 359, 363, 364, 365, 366, 1186, 1187, 367, 1110,
	274, 0, 0, 0, 0, 0, 368, 369, 370, 1170,
	0, 0, 0, 371, 0, 372, 373, 0, 0, 1197,
	374, 375, 376, 1183, 1184, 377, 378, 379, 380, 381,
	382, 383, 384, 385, 0, 386, 1193, 0, 1120, 387,
	0, 388, 389, 390, 391, 392, 1156, 1157, 1160, 473,
	1199, 393, 394, 0, 395, 396, 397, 398, 399, 0,
	0, 0, 275, 400, 401, 402, 404, 0, 1198, 403,
	1165, 1166, 0, 1126, 0, 405, 406, 1200, 1158, 1201,
	407, 408, 409, 1202, 410, 0, 0, 0, 411, 412,
	413, 414, 415, 416, 0, 417, 419, 418, 0, 420,
	1194, 1203, 421, 422, 1204, 0, 423, 0, 0, 0,
	424, 425, 428, 1149, 1148, 426, 427, 429, 430, 0,
	431, 432, 434, 437, 433, 435, 436, 438, 451, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 453, 0, 452, 1205, 454, 455, 456, 463, 465,
	466, 461, 462, 464, 467, 468, 458, 459, 460, 1206,
	469, 457, 1088, 276, 1207, 470, 471, 1111, 1159, 472,
	1173, 474, 475, 0, 0, 476, 0, 0, 0, 478,
	479, 480, 0, 0, 481, 482, 664, 1208, 483, 1209,
	1188, 484, 485, 1098, 486, 487, 488, 489, 490, 491,
	492, 493, 494, 0, 495, 496, 666, 497, 498, 499,
	667, 500, 501, 502, 1189, 503, 669, 504, 505, 0,
	506, 507, 0, 508, 509, 510, 511, 512, 513, 514,
	1169, 515, 516, 518, 517, 519, 0, 520, 0, 521,
	522, 523, 0, 0, 0, 0, 0, 524, 0, 526,
	527, 528, 529, 525, 530, 531, 532, 533, 534, 0,
	535, 536, 537, 1210, 538, 539, 540, 541, 542, 1099,
	543, 0, 544, 545, 551, 552, 553, 546, 547, 554,
	555, 556, 557, 558, 0, 560, 561, 559, 562, 563,
	564, 1152, 565, 566, 548, 549, 567, 568, 1211, 569,
	570, 571, 572, 573, 574, 575, 1167, 0, 576, 0,
	577, 578, 579, 581, 550, 582, 587, 588, 1214, 583,
	584, 585, 586, 1190, 590, 591, 0, 592, 593, 1085,
	589, 580, 0, 594, 595, 596, 597, 598, 599, 600,
	361, 601, 0, 602, 1179, 1180, 1181, 1182, 0, 611,
	0, 603, 604, 605, 1191, 606, 1192, 1109, 607, 608,
	609, 610, 0, 612, 613, 0, 1092, 614, 615, 616,
	618, 619, 617, 620, 1153, 621, 0, 0, 622, 623,
	624, 681, 1176, 1213, 0, 626, 625, 627, 684, 0,
	628, 0, 0, 0, 0, 629, 630, 685, 631, 632,
	633, 1089, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1084, 0, 0, 0, 0, 0,
	0, 1082, 1083, 0, 0, 0, 0, 0, 1879, 0,
	1115, 0, 0, 0, 1113, 1131, 1103, 1104, 1105, 1101,
	1102, 1114, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 2440,
	284, 285, 0, 0, 0, 0, 0, 1155, 1119, 0,
	0, 0, 286, 287, 1195, 288, 289, 290, 291, 292,
	293, 635, 1168, 0, 294, 1175, 295, 1174, 0, 1185,
	296, 297, 298, 299, 300, 301, 1121, 1154, 1086, 302,
	1215, 1216, 642, 0, 303, 304, 1161, 0, 1142, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 1196, 327, 328,
	329, 1145, 1143, 1144, 1151, 1147, 1146, 1150, 330, 331,
	332, 333, 334, 1178, 335, 337, 1172, 1171, 1091, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 1163, 348, 0, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 1097, 356, 357, 358, 360,
	362, 359, 363, 364, 365, 366, 1186, 1187, 367, 1110,
	274, 0, 0, 0, 0, 0, 368, 369, 370, 1170,
	0, 0, 0, 371, 0, 372, 373, 0, 0, 1197,
	374, 375, 376, 1183, 1184, 377, 378, 379, 380, 381,
	382, 383, 384, 385, 0, 386, 1193, 0, 1120, 387,
	0, 388, 389, 390, 391, 392, 1156, 1157, 1160, 473,
	1199, 393, 394, 0, 395, 396, 397, 398, 399, 0,
	0, 0, 275, 400, 401, 402, 404, 0, 1198, 403,
	1165, 1166, 0, 1126, 0, 405, 406, 1200, 1158, 1201,
	407, 408, 409, 1202, 410, 0, 0, 0, 411, 412,
	413, 414, 415, 416, 0, 417, 419, 418, 0, 420,
	1194, 1203, 421, 422, 1204, 0, 423, 0, 0, 0,
	424, 425, 428, 1149, 1148, 426, 427, 429, 430, 0,
	431, 432, 434, 437, 433, 435, 436, 438, 451, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 453, 0, 452, 1205, 454, 455, 456, 463, 465,
	466, 461, 462, 464, 467, 468, 458, 459, 460, 1206,
	469, 457, 1088, 276, 1207, 470, 471, 1111, 1159, 472,
	1173, 474, 475, 0, 0, 476, 0, 0, 0, 478,
	479, 480, 0, 0, 481, 482, 664, 1208, 483, 1209,
	1188, 484, 485, 1098, 486, 487, 488, 489, 490, 491,
	492, 493, 494, 0, 495, 496, 666, 497, 498, 499,
	667, 500, 501, 502, 1189, 503, 669, 504, 505, 0,
	506, 507, 0, 508, 509, 510, 511, 512, 513, 514,
	1169, 515, 516, 518, 517, 519, 0, 520, 0, 521,
	522, 523, 0, 0, 0, 0, 0, 524, 0, 526,
	527, 528, 529, 525, 530, 531, 532, 533, 534, 0,
	535, 536, 537, 1210, 538, 539, 540, 541, 542, 1099,
	543, 0, 544, 545, 551, 552, 553, 546, 547, 554,
	555, 556, 557, 558, 0, 560, 561, 559, 562, 563,
	564, 1152, 565, 566, 548, 549, 567, 568, 1211, 569,
	570, 571, 572, 573, 574, 575, 1167, 0, 576, 0,
	577, 578, 579, 581, 550, 582, 587, 588, 1214, 583,
	584, 585, 586, 1190, 590, 591, 0, 592, 593, 1085,
	589, 580, 0, 594, 595, 596, 597, 598, 599, 600,
	361, 601, 0, 602, 1179, 1180, 1181, 1182, 0, 611,
	0, 603, 604, 605, 1191, 606, 1192, 1109, 607, 608,
	609, 610, 0, 612, 613, 0, 1092, 614, 615, 616,
	618, 619, 617, 620, 1153, 621, 0, 0, 622, 623,
	624, 681, 1176, 1213, 0, 626, 625, 627, 684, 0,
	628, 0, 0, 0, 0, 629, 630, 685, 631, 632,
	633, 1089, 0, 0, 2404, 0, 1131, 1103, 1104, 1105,
	1101, 1102, 1114, 0, 1084, 0, 0, 0, 0, 0,
	0, 1082, 1083, 277, 279, 278, 280, 281, 282, 283,
	1115, 284, 285, 0, 1113, 0, 0, 0, 1155, 1119,
	0, 0, 0, 286, 287, 1195, 288, 289, 290, 291,
	292, 293, 635, 1168, 0, 294, 1175, 295, 1174, 0,
	1185, 296, 297, 298, 299, 300, 301, 1121, 1154, 1086,
	302, 1215, 1216, 642, 0, 303, 304, 1161, 0, 1142,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 1196, 327,
	328, 329, 1145, 1143, 1144, 1151, 1147, 1146, 1150, 330,
	331, 332, 333, 334, 1178, 335, 337, 1172, 1171, 1091,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 1163, 348, 0, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 1097, 356, 357, 358,
	360, 362, 359, 363, 364, 365, 366, 1186, 1187, 367,
	1110, 274, 0, 0, 0, 0, 0, 368, 369, 370,
	1170, 0, 0, 0, 371, 0, 372, 373, 0, 0,
	1197, 374, 375, 376, 1183, 1184, 377, 378, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 1193, 0, 1120,
	387, 0, 388, 389, 390, 391, 392, 1156, 1157, 1160,
	473, 1199, 393, 394, 0, 395, 396, 397, 398, 399,
	0, 0, 0, 275, 400, 401, 402, 404, 0, 1198,
	403, 1165, 1166, 0, 1126, 0, 405, 406, 1200, 1158,
	1201, 407, 408, 409, 1202, 410, 0, 0, 0, 411,
	412, 413, 414, 415, 416, 0, 417, 419, 418, 0,
	420, 1194, 1203, 421, 422, 1204, 0, 423, 0, 0,
	0, 424, 425, 428, 1149, 1148, 426, 427, 429, 430,
	0, 431, 432, 434, 437, 433, 435, 436, 438, 451,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 453, 0, 452, 1205, 454, 455, 456, 463,
	465, 466, 461, 462, 464, 467, 468, 458, 459, 460,
	1206, 469, 457, 1088, 276, 1207, 470, 471, 1111, 1159,
	472, 1173, 474, 475, 0, 0, 476, 0, 0, 0,
	478, 479, 480, 0, 0, 481, 482, 664, 1208, 483,
	1209, 1188, 484, 485, 1098, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 0, 495, 496, 666, 497, 498,
	499, 667, 500, 501, 502, 1189, 503, 669, 504, 505,
	0, 506, 507, 0, 508, 509, 510, 511, 512, 513,
	514, 1169, 515, 516, 518, 517, 519, 0, 520, 0,
	521, 522, 523, 0, 0, 0, 0, 0, 524, 0,
	526, 527, 528, 529, 525, 530, 531, 532, 533, 534,
	0, 535, 536, 537, 1210, 538, 539, 540, 541, 542,
	1099, 543, 0, 544, 545, 551, 552, 553, 546, 547,
	554, 555, 556, 557, 558, 0, 560, 561, 559, 562,
	563, 564, 1152, 565, 566, 548, 549, 567, 568, 1211,
	569, 570, 571, 572, 573, 574, 575, 1167, 0, 576,
	0, 577, 578, 579, 581, 550, 582, 587, 588, 1214,
	583, 584, 585, 586, 1190, 590, 591, 0, 592, 593,
	1085, 589, 580, 0, 594, 595, 596, 597, 598, 599,
	600, 361, 601, 0, 602, 1179, 1180, 1181, 1182, 0,
	611, 0, 603, 604, 605, 1191, 606, 1192, 1109, 607,
	608, 609, 610, 0, 612, 613, 0, 1092, 614, 615,
	616, 618, 619, 617, 620, 1153, 621, 0, 0, 622,
	623, 624, 681, 1176, 1213, 0, 626, 625, 627, 684,
	0, 628, 0, 0, 0, 0, 629, 630, 685, 631,
	632, 633, 1089, 0, 0, 2379, 0, 1131, 1103, 1104,
	1105, 1101, 1102, 1114, 0, 1084, 0, 0, 0, 0,
	0, 0, 1082, 1083, 277, 279, 278, 280, 281, 282,
	283, 1115, 284, 285, 0, 1113, 0, 0, 0, 1155,
	1119, 0, 0, 0, 286, 287, 1195, 288, 289, 290,
	291, 292, 293, 635, 1168, 0, 294, 1175, 295, 1174,
	0, 1185, 296, 297, 298, 299, 300, 301, 1121, 1154,
	1086, 302, 1215, 1216, 642, 0, 303, 304, 1161, 0,
	1142, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1196,
	327, 328, 329, 1145, 1143, 1144, 1151, 1147, 1146, 1150,
	330, 331, 332, 333, 334, 1178, 335, 337, 1172, 1171,
	1091, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 1163, 348, 0, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 1097, 356, 357,
	358, 360, 362, 359, 363, 364, 365, 366, 1186, 1187,
	367, 1110, 274, 0, 0, 0, 0, 0, 368, 369,
	370, 1170, 0, 0, 0, 371, 0, 372, 373, 0,
	0, 1197, 374, 375, 376, 1183, 1184, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 1193, 0,
	1120, 387, 0, 388, 389, 390, 391, 392, 1156, 1157,
	1160, 473, 1199, 393, 394, 0, 395, 396, 397, 398,
	399, 0, 0, 0, 275, 400, 401, 402, 404, 0,
	1198, 403, 1165, 1166, 0, 1126, 0, 405, 406, 1200,
	1158, 1201, 407, 408, 409, 1202, 410, 0, 0, 0,
	411, 412, 413, 414, 415, 416, 0, 417, 419, 418,
	0, 420, 1194, 1203, 421, 422, 1204, 0, 423, 0,
	0, 0, 424, 425, 428, 1149, 1148, 426, 427, 429,
	430, 0, 431, 432, 434, 437, 433, 435, 436, 438,
	451, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 453, 0, 452, 1205, 454, 455, 456,
	463, 465, 466, 461, 462, 464, 467, 468, 458, 459,
	460, 1206, 469, 457, 1088, 276, 1207, 470, 471, 1111,
	1159, 472, 1173, 474, 475, 0, 0, 476, 0, 0,
	0, 478, 479, 480, 0, 0, 481, 482, 664, 1208,
	483, 1209, 1188, 484, 485, 1098, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 0, 495, 496, 666, 497,
	498, 499, 667, 500, 501, 502, 1189, 503, 669, 504,
	505, 0, 506, 507, 0, 508, 509, 510, 511, 512,
	513, 514, 1169, 515, 516, 518, 517, 519, 0, 520,
	0, 521, 522, 523, 0, 0, 0, 0, 0, 524,
	0, 526, 527, 528, 529, 525, 530, 531, 532, 533,
	534, 0, 535, 536, 537, 1210, 538, 539, 540, 541,
	542, 1099, 543, 0, 544, 545, 551, 552, 553, 546,
	547, 554, 555, 556, 557, 558, 0, 560, 561, 559,
	562, 563, 564, 1152, 565, 566, 548, 549, 567, 568,
	1211, 569, 570, 571, 572, 573, 574, 575, 1167, 0,
	576, 0, 577, 578, 579, 581, 550, 582, 587, 588,
	1214, 583, 584, 585, 586, 1190, 590, 591, 0, 592,
	593, 1085, 589, 580, 0, 594, 595, 596, 597, 598,
	599, 600, 361, 601, 0, 602, 1179, 1180, 1181, 1182,
	0, 611, 0, 603, 604, 605, 1191, 606, 1192, 1109,
	607, 608, 609, 610, 0, 612, 613, 0, 1092, 614,
	615, 616, 618, 619, 617, 620, 1153, 621, 0, 0,
	622, 623, 624, 681, 1176, 1213, 0, 626, 625, 627,
	684, 0, 628, 0, 0, 0, 0, 629, 630, 685,
	631, 632, 633, 1089, 0, 0, 1719, 0, 1131, 1103,
	1104, 1105, 1101, 1102, 1114, 0, 1084, 0, 0, 0,
	0, 0, 0, 1082, 1083, 277, 279, 278, 280, 281,
	282, 283, 1115, 284, 285, 0, 1113, 0, 0, 0,
	1155, 1119, 0, 0, 0, 286, 287, 1195, 288, 289,
	290, 291, 292, 293, 635, 1168, 0, 294, 1175, 295,
	1174, 0, 1185, 296, 297, 298, 299, 300, 301, 1121,
	1154, 1086, 302, 1215, 1216, 642, 0, 303, 304, 1161,
	0, 1142, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	1196, 327, 328, 329, 1145, 1143, 1144, 1151, 1147, 1146,
	1150, 330, 331, 332, 333, 334, 1178, 335, 337, 1172,
	1171, 1091, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 1163, 348, 0, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 1097, 356,
	357, 358, 360, 362, 359, 363, 364, 365, 366, 1186,
	1187, 367, 1110, 274, 0, 0, 0, 0, 0, 368,
	369, 370, 1170, 0, 0, 0, 371, 0, 372, 373,
	0, 0, 1197, 374, 375, 376, 1183, 1184, 377, 378,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 1193,
	0, 1120, 387, 0, 388, 389, 390, 391, 392, 1156,
	1157, 1160, 473, 1199, 393, 394, 0, 395, 396, 397,
	398, 399, 0, 0, 0, 275, 400, 401, 402, 404,
	0, 1198, 403, 1165, 1166, 0, 1126, 0, 405, 406,
	1200, 1158, 1201, 407, 408, 409, 1202, 410, 0, 0,
	0, 411, 412, 413, 414, 415, 416, 0, 417, 419,
	418, 0, 420, 1194, 1203, 421, 422, 1204, 0, 423,
	0, 0, 0, 424, 425, 428, 1149, 1148, 426, 427,
	429, 430, 0, 431, 432, 434, 437, 433, 435, 436,
	438, 451, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 453, 0, 452, 1205, 454, 455,
	456, 463, 465, 466, 461, 462, 464, 467, 468, 458,
	459, 460, 1206, 469, 457, 1088, 276, 1207, 470, 471,
	1111, 1159, 472, 1173, 474, 475, 0, 0, 476, 0,
	0, 0, 478, 479, 480, 0, 0, 481, 482, 664,
	1208, 483, 1209, 1188, 484, 485, 1098, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 0, 495, 496, 666,
	497, 498, 499, 667, 500, 501, 502, 1189, 503, 669,
	504, 505, 0, 506, 507, 0, 508, 509, 510, 511,
	512, 513, 514, 1169, 515, 516, 518, 517, 519, 0,
	520, 0, 521, 522, 523, 0, 0, 0, 0, 0,
	524, 0, 526, 527, 528, 529, 525, 530, 531, 532,
	533, 534, 0, 535, 536, 537, 1210, 538, 539, 540,
	541, 542, 1099, 543, 0, 544, 545, 551, 552, 553,
	546, 547, 554, 555, 556, 557, 558, 0, 560, 561,
	559, 562, 563, 564, 1152, 565, 566, 548, 549, 567,
	568, 1211, 569, 570, 571, 572, 573, 574, 575, 1167,
	0, 576, 0, 577, 578, 579, 581, 550, 582, 587,
	588, 1214, 583, 584, 585, 586, 1190, 590, 591, 0,
	592, 593, 1085, 589, 580, 0, 594, 595, 596, 597,
	598, 599, 600, 361, 601, 0, 602, 1179, 1180, 1181,
	1182, 0, 611, 0, 603, 604, 605, 1191, 606, 1192,
	1109, 607, 608, 609, 610, 0, 612, 613, 0, 1092,
	614, 615, 616, 618, 619, 617, 620, 1153, 621, 0,
	0, 622, 623, 624, 681, 1176, 1213, 0, 626, 625,
	627, 684, 0, 628, 0, 0, 0, 0, 629, 630,
	685, 631, 632, 633, 1089, 0, 0, 1648, 0, 1131,
	1103, 1104, 1105, 1101, 1102, 1114, 0, 1084, 0, 0,
	0, 0, 0, 0, 1082, 1083, 277, 279, 278, 280,
	281, 282, 283, 1115, 284, 285, 0, 1113, 0, 0,
	0, 1155, 1119, 0, 0, 0, 286, 287, 1195, 288,
	289, 290, 291, 292, 293, 635, 1168, 0, 294, 1175,
	295, 1174, 0, 1185, 296, 297, 298, 299, 300, 301,
	1121, 1154, 1086, 302, 1215, 1216, 642, 0, 303, 304,
	1161, 0, 1142, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 1196, 327, 328, 329, 1145, 1143, 1144, 1151, 1147,
	1146, 1150, 330, 331, 332, 333, 334, 1178, 335, 337,
	1172, 1171, 1091, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 1163, 348, 0,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 1097,
	356, 357, 358, 360, 362, 359, 363, 364, 365, 366,
	1186, 1187, 367, 1110, 274, 0, 0, 0, 0, 0,
	368, 369, 370, 1170, 0, 0, 0, 371, 0, 372,
	373, 0, 0, 1197, 374, 375, 376, 1183, 1184, 377,
	378, 379, 380, 381, 382, 383, 384, 385, 0, 386,
	1193, 0, 1120, 387, 0, 388, 389, 390, 391, 392,
	1156, 1157, 1160, 473, 1199, 393, 394, 0, 395, 396,
	397, 398, 399, 0, 0, 0, 275, 400, 401, 402,
	404, 0, 1198, 403, 1165, 1166, 0, 1126, 0, 405,
	406, 1200, 1158, 1201, 407, 408, 409, 1202, 410, 0,
	0, 0, 411, 412, 413, 414, 415, 416, 0, 417,
	419, 418, 0, 420, 1194, 1203, 421, 422, 1204, 0,
	423, 0, 0, 0, 424, 425, 428, 1149, 1148, 426,
	427, 429, 430, 0, 431, 432, 434, 437, 433, 435,
	436, 438, 451, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 450, 453, 0, 452, 1205, 454,
	455, 456, 463, 465, 466, 461, 462, 464, 467, 468,
	458, 459, 460, 1206, 469, 457, 1088, 276, 1207, 470,
	471, 1111, 1159, 472, 1173, 474, 475, 0, 0, 476,
	0, 0, 0, 478, 479, 480, 0, 0, 481, 482,
	664, 1208, 483, 1209, 1188, 484, 485, 1098, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 0, 495, 496,
	666, 497, 498, 499, 667, 500, 501, 502, 1189, 503,
	669, 504, 505, 0, 506, 507, 0, 508, 509, 510,
	511, 512, 513, 514, 1169, 515, 516, 518, 517, 519,
	0, 520, 0, 521, 522, 523, 0, 0, 0, 0,
	0, 524, 0, 526, 527, 528, 529, 525, 530, 531,
	532, 533, 534, 0, 535, 536, 537, 1210, 538, 539,
	540, 541, 542, 1099, 543, 0, 544, 545, 551, 552,
	553, 546, 547, 554, 555, 556, 557, 558, 0, 560,
	561, 559, 562, 563, 564, 1152, 565, 566, 548, 549,
	567, 568, 1211, 569, 570, 571, 572, 573, 574, 575,
	1167, 0, 576, 0, 577, 578, 579, 581, 550, 582,
	587, 588, 1214, 583, 584, 585, 586, 1190, 590, 591,
	0, 592, 593, 1085, 589, 580, 0, 594, 595, 596,
	597, 598, 599, 600, 361, 601, 0, 602, 1179, 1180,
	1181, 1182, 0, 611, 0, 603, 604, 605, 1191, 606,
	1192, 1109, 607, 608, 609, 610, 0, 612, 613, 0,
	1092, 614, 615, 616, 618, 619, 617, 620, 1153, 621,
	0, 0, 622, 623, 624, 681, 1176, 1213, 0, 626,
	625, 627, 684, 0, 628, 0, 0, 0, 0, 629,
	630, 685, 631, 632, 633, 1089, 0, 0, 1643, 0,
	1131, 1103, 1104, 1105, 1101, 1102, 1114, 0, 1084, 0,
	0, 0, 0, 0, 0, 1082, 1083, 277, 279, 278,
	280, 281, 282, 283, 1115, 284, 285, 0, 1113, 0,
	0, 0, 1155, 1119, 0, 0, 0, 286, 287, 1195,
	288, 289, 290, 291, 292, 293, 635, 1168, 0, 294,
	1175, 295, 1174, 0, 1185, 296, 297, 298, 299, 300,
	301, 1121, 1154, 1086, 302, 1215, 1216, 642, 0, 303,
	304, 1161, 0, 1142, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 1196, 327, 328, 329, 1145, 1143, 1144, 1151,
	1147, 1146, 1150, 330, 331, 332, 333, 334, 1178, 335,
	337, 1172, 1171, 1091, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 1163, 348,
	0, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	1097, 356, 357, 358, 360, 362, 359, 363, 364, 365,
	366, 1186, 1187, 367, 1110, 274, 0, 0, 0, 0,
	0, 368, 369, 370, 1170, 0, 0, 0, 371, 0,
	372, 373, 0, 0, 1197, 374, 375, 376, 1183, 1184,
	377, 378, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 1193, 0, 1120, 387, 0, 388, 389, 390, 391,
	392, 1156, 1157, 1160, 473, 1199, 393, 394, 0, 395,
	396, 397, 398, 399, 0, 0, 0, 275, 400, 401,
	402, 404, 0, 1198, 403, 1165, 1166, 0, 1126, 0,
	405, 406, 1200, 1158, 1201, 407, 408, 409, 1202, 410,
	0, 0, 0, 411, 412, 413, 414, 415, 416, 0,
	417, 419, 418, 0, 420, 1194, 1203, 421, 422, 1204,
	0, 423, 0, 0, 0, 424, 425, 428, 1149, 1148,
	426, 427, 429, 430, 0, 431, 432, 434, 437, 433,
	435, 436, 438, 451, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 453, 0, 452, 1205,
	454, 455, 456, 463, 465, 466, 461, 462, 464, 467,
	468, 458, 459, 460, 1206, 469, 457, 1088, 276, 1207,
	470, 471, 1111, 1159, 472, 1173, 474, 475, 0, 0,
	476, 0, 0, 0, 478, 479, 480, 0, 0, 481,
	482, 664, 1208, 483, 1209, 1188, 484, 485, 1098, 486,
	487, 488, 489, 490, 491, 492, 493, 494, 0, 495,
	496, 666, 497, 498, 499, 667, 500, 501, 502, 1189,
	503, 669, 504, 505, 0, 506, 507, 0, 508, 509,
	510, 511, 512, 513, 514, 1169, 515, 516, 518, 517,
	519, 0, 520, 0, 521, 522, 523, 0, 0, 0,
	0, 0, 524, 0, 526, 527, 528, 529, 525, 530,
	531, 532, 533, 534, 0, 535, 536, 537, 1210, 538,
	539, 540, 541, 542, 1099, 543, 0, 544, 545, 551,
	552, 553, 546, 547, 554, 555, 556, 557, 558, 0,
	560, 561, 559, 562, 563, 564, 1152, 565, 566, 548,
	549, 567, 568, 1211, 569, 570, 571, 572, 573, 574,
	575, 1167, 0, 576, 0, 577, 578, 579, 581, 550,
	582, 587, 588, 1214, 583, 584, 585, 586, 1190, 590,
	591, 0, 592, 593, 1085, 589, 580, 0, 594, 595,
	596, 597, 598, 599, 600, 361, 601, 0, 602, 1179,
	1180, 1181, 1182, 0, 611, 0, 603, 604, 605, 1191,
	606, 1192, 1109, 607, 608, 609, 610, 0, 612, 613,
	0, 1092, 614, 615, 616, 618, 619, 617, 620, 1153,
	621, 0, 0, 622, 623, 624, 681, 1176, 1213, 0,
	626, 625, 627, 684, 0, 628, 0, 0, 0, 0,
	629, 630, 685, 631, 632, 633, 1089, 0, 0, 1634,
	0, 1131, 1103, 1104, 1105, 1101, 1102, 1114, 0, 1084,
	0, 0, 0, 0, 0, 0, 1082, 1083, 277, 279,
	278, 280, 281, 282, 283, 1115, 284, 285, 0, 1113,
	0, 0, 0, 1155, 1119, 0, 0, 0, 286, 287,
	1195, 288, 289, 290, 291, 292, 293, 635, 1168, 0,
	294, 1175, 295, 1174, 0, 1185, 296, 297, 298, 299,
	300, 301, 1121, 1154, 1086, 302, 1215, 1216, 642, 0,
	303, 304, 1161, 0, 1142, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 1196, 327, 328, 329, 1145, 1143, 1144,
	1151, 1147, 1146, 1150, 330, 331, 332, 333, 334, 1178,
	335, 337, 1172, 1171, 1091, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 1163,
	348, 0, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 1097, 356, 357, 358, 360, 362, 359, 363, 364,
	365, 366, 1186, 1187, 367, 1110, 274, 0, 0, 0,
	0, 0, 368, 369, 370, 1170, 0, 0, 0, 371,
	0, 372, 373, 0, 0, 1197, 374, 375, 376, 1183,
	1184, 377, 378, 379, 380, 381, 382, 383, 384, 385,
	0, 386, 1193, 0, 1120, 387, 0, 388, 389, 390,
	391, 392, 1156, 1157, 1160, 473, 1199, 393, 394, 0,
	395, 396, 397, 398, 399, 0, 0, 0, 275, 400,
	401, 402, 404, 0, 1198, 403, 1165, 1166, 0, 1126,
	0, 405, 406, 1200, 1158, 1201, 407, 408, 409, 1202,
	410, 0, 0, 0, 411, 412, 413, 414, 415, 416,
	0, 417, 419, 418, 0, 420, 1194, 1203, 421, 422,
	1204, 0, 423, 0, 0, 0, 424, 425, 428, 1149,
	1148, 426, 427, 429, 430, 0, 431, 432, 434, 437,
	433, 435, 436, 438, 451, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 453, 0, 452,
	1205, 454, 455, 456, 463, 465, 466, 461, 462, 464,
	467, 468, 458, 459, 460, 1206, 469, 457, 1088, 276,
	1207, 470, 471, 1111, 1159, 472, 1173, 474, 475, 0,
	0, 476, 0, 0, 0, 478, 479, 480, 0, 0,
	481, 482, 664, 1208, 483, 1209, 1188, 484, 485, 1098,
	486, 487, 488, 489, 490, 491, 492, 493, 494, 0,
	495, 496, 666, 497, 498, 499, 667, 500, 501, 502,
	1189, 503, 669, 504, 505, 0, 506, 507, 0, 508,
	509, 510, 511, 512, 513, 514, 1169, 515, 516, 518,
	517, 519, 0, 520, 0, 521, 522, 523, 0, 0,
	0, 0, 0, 524, 0, 526, 527, 528, 529, 525,
	530, 531, 532, 533, 534, 0, 535, 536, 537, 1210,
	538, 539, 540, 541, 542, 1099, 543, 0, 544, 545,
	551, 552, 553, 546, 547, 554, 555, 556, 557, 558,
	0, 560, 561, 559, 562, 563, 564, 1152, 565, 566,
	548, 549, 567, 568, 1211, 569, 570, 571, 572, 573,
	574, 575, 1167, 0, 576, 0, 577, 578, 579, 581,
	550, 582, 587, 588, 1214, 583, 584, 585, 586, 1190,
	590, 591, 0, 592, 593, 1085, 589, 580, 0, 594,
	595, 596, 597, 598, 599, 600, 361, 601, 0, 602,
	1179, 1180, 1181, 1182, 0, 611, 0, 603, 604, 605,
	1191, 606, 1192, 1109, 607, 608, 609, 610, 0, 612,
	613, 0, 1092, 614, 615, 616, 618, 619, 617, 620,
	1153, 621, 0, 0, 622, 623, 624, 681, 1176, 1213,
	0, 626, 625, 627, 684, 0, 628, 0, 0, 0,
	0, 629, 630, 685, 631, 632, 633, 1089, 0, 0,
	1629, 0, 1131, 1103, 1104, 1105, 1101, 1102, 1114, 0,
	1084, 0, 0, 0, 0, 0, 0, 1082, 1083, 277,
	279, 278, 280, 281, 282, 283, 1115, 284, 285, 0,
	1113, 0, 0, 0, 1155, 1119, 0, 0, 0, 286,
	287, 1195, 288, 289, 290, 291, 292, 293, 635, 1168,
	0, 294, 1175, 295, 1174, 0, 1185, 296, 297, 298,
	299, 300, 301, 1121, 1154, 1086, 302, 1215, 1216, 642,
	0, 303, 304, 1161, 0, 1142, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 1196, 327, 328, 329, 1145, 1143,
	1144, 1151, 1147, 1146, 1150, 330, 331, 332, 333, 334,
	1178, 335, 337, 1172, 1171, 1091, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	1163, 348, 0, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 1097, 356, 357, 358, 360, 362, 359, 363,
	364, 365, 366, 1186, 1187, 367, 1110, 274, 0, 0,
	0, 0, 0, 368, 369, 370, 1170, 0, 0, 0,
	371, 0, 372, 373, 0, 0, 1197, 374, 375, 376,
	1183, 1184, 377, 378, 379, 380, 381, 382, 383, 384,
	385, 0, 386, 1193, 0, 1120, 387, 0, 388, 389,
	390, 391, 392, 1156, 1157, 1160, 473, 1199, 393, 394,
	0, 395, 396, 397, 398, 399, 0, 0, 0, 275,
	400, 401, 402, 404, 0, 1198, 403, 1165, 1166, 0,
	1126, 0, 405, 406, 1200, 1158, 1201, 407, 408, 409,
	1202, 410, 0, 0, 0, 411, 412, 413, 414, 415,
	416, 0, 417, 419, 418, 0, 420, 1194, 1203, 421,
	422, 1204, 0, 423, 0, 0, 0, 424, 425, 428,
	1149, 1148, 426, 427, 429, 430, 0, 431, 432, 434,
	437, 433, 435, 436, 438, 451, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 453, 0,
	452, 1205, 454, 455, 456, 463, 465, 466, 461, 462,
	464, 467, 468, 458, 459, 460, 1206, 469, 457, 1088,
	276, 1207, 470, 471, 1111, 1159, 472, 1173, 474, 475,
	0, 0, 476, 0, 0, 0, 478, 479, 480, 0,
	0, 481, 482, 664, 1208, 483, 1209, 1188, 484, 485,
	1098, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	0, 495, 496, 666, 497, 498, 499, 667, 500, 501,
	502, 1189, 503, 669, 504, 505, 0, 506, 507, 0,
	508, 509, 510, 511, 512, 513, 514, 1169, 515, 516,
	518, 517, 519, 0, 520, 0, 521, 522, 523, 0,
	0, 0, 0, 0, 524, 0, 526, 527, 528, 529,
	525, 530, 531, 532, 533, 534, 0, 535, 536, 537,
	1210, 538, 539, 540, 541, 542, 1099, 543, 0, 544,
	545, 551, 552, 553, 546, 547, 554, 555, 556, 557,
	558, 0, 560, 561, 559, 562, 563, 564, 1152, 565,
	566, 548, 549, 567, 568, 1211, 569, 570, 571, 572,
	573, 574, 575, 1167, 0, 576, 0, 577, 578, 579,
	581, 550, 582, 587, 588, 1214, 583, 584, 585, 586,
	1190, 590, 591, 0, 592, 593, 1085, 589, 580, 0,
	594, 595, 596, 597, 598, 599, 600, 361, 601, 0,
	602, 1179, 1180, 1181, 1182, 0, 611, 0, 603, 604,
	605, 1191, 606, 1192, 1109, 607, 608, 609, 610, 0,
	612, 613, 0, 1092, 614, 615, 616, 618, 619, 617,
	620, 1153, 621, 0, 0, 622, 623, 624, 681, 1176,
	1213, 0, 626, 625, 627, 684, 0, 628, 0, 0,
	0, 0, 629, 630, 685, 631, 632, 633, 1089, 0,
	0, 1540, 0, 1131, 1103, 1104, 1105, 1101, 1102, 1114,
	0, 1084, 0, 0, 0, 0, 0, 0, 1082, 1083,
	277, 279, 278, 280, 281, 282, 283, 1115, 284, 285,
	0, 1113, 0, 0, 0, 1155, 1119, 0, 0, 0,
	286, 287, 1195, 288, 289, 290, 291, 292, 293, 635,
	1168, 0, 294, 1175, 295, 1174, 0, 1185, 296, 297,
	298, 299, 300, 301, 1121, 1154, 1086, 302, 1215, 1216,
	642, 0, 303, 304, 1161, 0, 1142, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 1196, 327, 328, 329, 1145,
	1143, 1144, 1151, 1147, 1146, 1150, 330, 331, 332, 333,
	334, 1178, 335, 337, 1172, 1171, 1091, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 1163, 348, 0, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 1097, 356, 357, 358, 360, 362, 359,
	363, 364, 365, 366, 1186, 1187, 367, 1110, 274, 0,
	0, 0, 0, 0, 368, 369, 370, 1170, 0, 0,
	0, 371, 0, 372, 373, 0, 0, 1197, 374, 375,
	376, 1183, 1184, 377, 378, 379, 380, 381, 382, 383,
	384, 385, 0, 386, 1193, 0, 1120, 387, 0, 388,
	389, 390, 391, 392, 1539, 1157, 1160, 473, 1199, 393,
	394, 0, 395, 396, 397, 398, 399, 0, 0, 0,
	275, 400, 401, 402, 404, 0, 1198, 403, 1165, 1166,
	0, 1126, 0, 405, 406, 1200, 1158, 1201, 407, 408,
	409, 1202, 410, 0, 0, 0, 411, 412, 413, 414,
	415, 416, 0, 417, 419, 418, 0, 420, 1194, 1203,
	421, 422, 1204, 0, 423, 0, 0, 0, 424, 425,
	428, 1149, 1148, 426, 427, 429, 430, 0, 431, 432,
	434, 437, 433, 435, 436, 438, 451, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 450, 453,
	0, 452, 1205, 454, 455, 456, 463, 465, 466, 461,
	462, 464, 467, 468, 458, 459, 460, 1206, 469, 457,
	1088, 276, 1207, 470, 471, 1111, 1159, 472, 1173, 474,
	475, 0, 0, 476, 0, 0, 0, 478, 479, 480,
	0, 0, 481, 482, 664, 1208, 483, 1209, 1188, 484,
	485, 1098, 486, 487, 488, 489, 490, 491, 492, 493,
	494, 0, 495, 496, 666, 497, 498, 499, 667, 500,
	501, 502, 1189, 503, 669, 504, 505, 0, 506, 507,
	0, 508, 509, 510, 511, 512, 513, 514, 1169, 515,
	516, 518, 517, 519, 0, 520, 0, 521, 522, 523,
	0, 0, 0, 0, 0, 524, 0, 526, 527, 528,
	529, 525, 530, 531, 532, 533, 534, 0, 535, 536,
	537, 1210, 538, 539, 540, 541, 542, 1099, 543, 0,
	544, 545, 551, 552, 553, 546, 547, 554, 555, 556,
	557, 558, 0, 560, 561, 559, 562, 563, 564, 1152,
	565, 566, 548, 549, 567, 568, 1211, 569, 570, 571,
	572, 573, 574, 575, 1167, 0, 576, 0, 577, 578,
	579, 581, 550, 582, 587, 588, 1214, 583, 584, 585,
	586, 1190, 590, 591, 0, 592, 593, 1085, 589, 580,
	0, 594, 595, 596, 597, 598, 599, 600, 361, 601,
	0, 602, 1179, 1180, 1181, 1182, 0, 611, 0, 603,
	604, 605, 1191, 606, 1192, 1109, 607, 608, 609, 610,
	0, 612, 613, 0, 1092, 614, 615, 616, 618, 619,
	617, 620, 1153, 621, 0, 0, 622, 623, 624, 681,
	1176, 1213, 0, 626, 625, 627, 684, 0, 628, 0,
	0, 0, 0, 629, 630, 685, 631, 632, 633, 1089,
	0, 0, 1534, 0, 1131, 1103, 1104, 1105, 1101, 1102,
	1114, 0, 1084, 0, 0, 0, 0, 0, 0, 1082,
	1083, 277, 279, 278, 280, 281, 282, 283, 1115, 284,
	285, 0, 1113, 0, 0, 0, 1155, 1119, 0, 0,
	0, 286, 287, 1195, 288, 289, 290, 291, 292, 293,
	635, 1168, 0, 294, 1175, 295, 1174, 0, 1185, 296,
	297, 298, 299, 300, 301, 1121, 1154, 1086, 302, 1215,
	1216, 642, 0, 303, 304, 1161, 0, 1142, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 1196, 327, 328, 329,
	1145, 1143, 1144, 1151, 1147, 1146, 1150, 330, 331, 332,
	333, 334, 1178, 335, 337, 1172, 1171, 1091, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 1163, 348, 0, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 1097, 356, 357, 358, 360, 362,
	359, 363, 364, 365, 366, 1186, 1187, 367, 1110, 274,
	0, 0, 0, 0, 0, 368, 369, 370, 1170, 0,
	0, 0, 371, 0, 372, 373, 0, 0, 1197, 374,
	375, 376, 1183, 1184, 377, 378, 379, 380, 381, 382,
	383, 384, 385, 0, 386, 1193, 0, 1120, 387, 0,
	388, 389, 390, 391, 392, 1533, 1157, 1160, 473, 1199,
	393, 394, 0, 395, 396, 397, 398, 399, 0, 0,
	0, 275, 400, 401, 402, 404, 0, 1198, 403, 1165,
	1166, 0, 1126, 0, 405, 406, 1200, 1158, 1201, 407,
	408, 409, 1202, 410, 0, 0, 0, 411, 412, 413,
	414, 415, 416, 0, 417, 419, 418, 0, 420, 1194,
	1203, 421, 422, 1204, 0, 423, 0, 0, 0, 424,
	425, 428, 1149, 1148, 426, 427, 429, 430, 0, 431,
	432, 434, 437, 433, 435, 436, 438, 451, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	453, 0, 452, 1205, 454, 455, 456, 463, 465, 466,
	461, 462, 464, 467, 468, 458, 459, 460, 1206, 469,
	457, 1088, 276, 1207, 470, 471, 1111, 1159, 472, 1173,
	474, 475, 0, 0, 476, 0, 0, 0, 478, 479,
	480, 0, 0, 481, 482, 664, 1208, 483, 1209, 1188,
	484, 485, 1098, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 0, 495, 496, 666, 497, 498, 499, 667,
	500, 501, 502, 1189, 503, 669, 504, 505, 0, 506,
	507, 0, 508, 509, 510, 511, 512, 513, 514, 1169,
	515, 516, 518, 517, 519, 0, 520, 0, 521, 522,
	523, 0, 0, 0, 0, 0, 524, 0, 526, 527,
	528, 529, 525, 530, 531, 532, 533, 534, 0, 535,
	536, 537, 1210, 538, 539, 540, 541, 542, 1099, 543,
	0, 544, 545, 551, 552, 553, 546, 547, 554, 555,
	556, 557, 558, 0, 560, 561, 559, 562, 563, 564,
	1152, 565, 566, 548, 549, 567, 568, 1211, 569, 570,
	571, 572, 573, 574, 575, 1167, 0, 576, 0, 577,
	578, 579, 581, 550, 582, 587, 588, 1214, 583, 584,
	585, 586, 1190, 590, 591, 0, 592, 593, 1085, 589,
	580, 0, 594, 595, 596, 597, 598, 599, 600, 361,
	601, 0, 602, 1179, 1180, 1181, 1182, 0, 611, 0,
	603, 604, 605, 1191, 606, 1192, 1109, 607, 608, 609,
	610, 0, 612, 613, 0, 1092, 614, 615, 616, 618,
	619, 617, 620, 1153, 621, 0, 0, 622, 623, 624,
	681, 1176, 1213, 0, 626, 625, 627, 684, 0, 628,
	0, 0, 0, 0, 629, 630, 685, 631, 632, 633,
	1089, 0, 0, 1527, 0, 1131, 1103, 1104, 1105, 1101,
	1102, 1114, 0, 1084, 0, 0, 0, 0, 0, 0,
	1082, 1083, 277, 279, 278, 280, 281, 282, 283, 1115,
	284, 285, 0, 1113, 0, 0, 0, 1155, 1119, 0,
	0, 0, 286, 287, 1195, 288, 289, 290, 291, 292,
	293, 635, 1168, 0, 294, 1175, 295, 1174, 0, 1185,
	296, 297, 298, 299, 300, 301, 1121, 1154, 1086, 302,
	1215, 1216, 642, 0, 303, 304, 1161, 0, 1142, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 1196, 327, 328,
	329, 1145, 1143, 1144, 1151, 1147, 1146, 1150, 330, 331,
	332, 333, 334, 1178, 335, 337, 1172, 1171, 1091, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 1163, 348, 0, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 1097, 356, 357, 358, 360,
	362, 359, 363, 364, 365, 366, 1186, 1187, 367, 1110,
	274, 0, 0, 0, 0, 0, 368, 369, 370, 1170,
	0, 0, 0, 371, 0, 372, 373, 0, 0, 1197,
	374, 375, 376, 1183, 1184, 377, 378, 379, 380, 381,
	382, 383, 384, 385, 0, 386, 1193, 0, 1120, 387,
	0, 388, 389, 390, 391, 392, 1156, 1157, 1160, 473,
	1199, 393, 394, 0, 395, 396, 397, 398, 399, 0,
	0, 0, 275, 400, 401, 402, 404, 0, 1198, 403,
	1165, 1166, 0, 1126, 0, 405, 406, 1200, 1158, 1201,
	407, 408, 409, 1202, 410, 0, 0, 0, 411, 412,
	413, 414, 415, 416, 0, 417, 419, 418, 0, 420,
	1194, 1203, 421, 422, 1204, 0, 423, 0, 0, 0,
	424, 425, 428, 1149, 1148, 426, 427, 429, 430, 0,
	431, 432, 434, 437, 433, 435, 436, 438, 451, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 453, 0, 452, 1205, 454, 455, 456, 463, 465,
	466, 461, 462, 464, 467, 468, 458, 459, 460, 1206,
	469, 457, 1088, 276, 1207, 470, 471, 1111, 1159, 472,
	1173, 474, 475, 0, 0, 476, 0, 0, 0, 478,
	479, 480, 0, 0, 481, 482, 664, 1208, 483, 1209,
	1188, 484, 485, 1098, 486, 487, 488, 489, 490, 491,
	492, 493, 494, 0, 495, 496, 666, 497, 498, 499,
	667, 500, 501, 502, 1189, 503, 669, 504, 505, 0,
	506, 507, 0, 508, 509, 510, 511, 512, 513, 514,
	1169, 515, 516, 518, 517, 519, 0, 520, 0, 521,
	522, 523, 0, 0, 0, 0, 0, 524, 0, 526,
	527, 528, 529, 525, 530, 531, 532, 533, 534, 0,
	535, 536, 537, 1210, 538, 539, 540, 541, 542, 1099,
	543, 0, 544, 545, 551, 552, 553, 546, 547, 554,
	555, 556, 557, 558, 0, 560, 561, 559, 562, 563,
	564, 1152, 565, 566, 548, 549, 567, 568, 1211, 569,
	570, 571, 572, 573, 574, 575, 1167, 0, 576, 0,
	577, 578, 579, 581, 550, 582, 587, 588, 1214, 583,
	584, 585, 586, 1190, 590, 591, 0, 592, 593, 1085,
	589, 580, 0, 594, 595, 596, 597, 598, 599, 600,
	361, 601, 0, 602, 1179, 1180, 1181, 1182, 0, 611,
	0, 603, 604, 605, 1191, 606, 1192, 1109, 607, 608,
	609, 610, 0, 612, 613, 0, 1092, 614, 615, 616,
	618, 619, 617, 620, 1153, 621, 0, 0, 622, 623,
	624, 681, 1176, 1213, 0, 626, 625, 627, 684, 0,
	628, 0, 0, 0, 0, 629, 630, 685, 631, 632,
	633, 1089, 0, 0, 1342, 0, 1131, 1103, 1104, 1105,
	1101, 1102, 1114, 0, 1084, 0, 0, 0, 0, 0,
	0, 1082, 1083, 277, 279, 278, 280, 281, 282, 283,
	1115, 284, 285, 0, 1113, 0, 0, 0, 1155, 1119,
	0, 0, 0, 286, 287, 1195, 288, 289, 290, 291,
	292, 293, 635, 1168, 0, 294, 1175, 295, 1174, 0,
	1185, 296, 297, 298, 299, 300, 301, 1121, 1154, 1086,
	302, 1215, 1216, 642, 0, 303, 304, 1161, 0, 1142,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 1196, 327,
	328, 329, 1145, 1143, 1144, 1151, 1147, 1146, 1150, 330,
	331, 332, 333, 334, 1178, 335, 337, 1172, 1171, 1091,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 1163, 348, 0, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 1097, 356, 357, 358,
	360, 362, 359, 363, 364, 365, 366, 1186, 1187, 367,
	1110, 274, 0, 0, 0, 0, 0, 368, 369, 370,
	1170, 0, 0, 0, 371, 0, 372, 373, 0, 0,
	1197, 374, 375, 376, 1183, 1184, 377, 378, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 1193, 0, 1120,
	387, 0, 388, 389, 390, 391, 392, 1156, 1157, 1160,
	473, 1199, 393, 394, 0, 395, 396, 397, 398, 399,
	0, 0, 0, 275, 400, 401, 402, 404, 0, 1198,
	403, 1165, 1166, 0, 1126, 0, 405, 406, 1200, 1158,
	1201, 407, 408, 409, 1202, 410, 0, 0, 0, 411,
	412, 413, 414, 415, 416, 0, 417, 419, 418, 0,
	420, 1194, 1203, 421, 422, 1204, 0, 423, 0, 0,
	0, 424, 425, 428, 1149, 1148, 426, 427, 429, 430,
	0, 431, 432, 434, 437, 433, 435, 436, 438, 451,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 453, 0, 452, 1205, 454, 455, 456, 463,
	465, 466, 461, 462, 464, 467, 468, 458, 459, 460,
	1206, 469, 457, 1088, 276, 1207, 470, 471, 1111, 1159,
	472, 1173, 474, 475, 0, 0, 476, 0, 0, 0,
	478, 479, 480, 0, 0, 481, 482, 664, 1208, 483,
	1209, 1188, 484, 485, 1098, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 0, 495, 496, 666, 497, 498,
	499, 667, 500, 501, 502, 1189, 503, 669, 504, 505,
	0, 506, 507, 0, 508, 509, 510, 511, 512, 513,
	514, 1169, 515, 516, 518, 517, 519, 0, 520, 0,
	521, 522, 523, 0, 0, 0, 0, 0, 524, 0,
	526, 527, 528, 529, 525, 530, 531, 532, 533, 534,
	0, 535, 536, 537, 1210, 538, 539, 540, 541, 542,
	1099, 543, 0, 544, 545, 551, 552, 553, 546, 547,
	554, 555, 556, 557, 558, 0, 560, 561, 559, 562,
	563, 564, 1152, 565, 566, 548, 549, 567, 568, 1211,
	569, 570, 571, 572, 573, 574, 575, 1167, 0, 576,
	0, 577, 578, 579, 581, 550, 582, 587, 588, 1214,
	583, 584, 585, 586, 1190, 590, 591, 0, 592, 593,
	1085, 589, 580, 0, 594, 595, 596, 597, 598, 599,
	600, 361, 601, 0, 602, 1179, 1180, 1181, 1182, 0,
	611, 0, 603, 604, 605, 1191, 606, 1192, 1109, 607,
	608, 609, 610, 0, 612, 613, 0, 1092, 614, 615,
	616, 618, 619, 617, 620, 1153, 621, 0, 0, 622,
	623, 624, 681, 1176, 1213, 0, 626, 625, 627, 684,
	0, 628, 0, 0, 0, 0, 629, 630, 685, 631,
	632, 633, 1089, 0, 0, 0, 0, 1131, 1103, 1104,
	1105, 1101, 1102, 1114, 0, 1084, 0, 0, 0, 0,
	0, 0, 1082, 1083, 277, 279, 278, 280, 281, 282,
	283, 1115, 284, 285, 0, 1113, 0, 0, 0, 1155,
	1119, 0, 0, 0, 286, 287, 1195, 288, 289, 290,
	291, 292, 293, 635, 1168, 0, 294, 1175, 295, 1174,
	0, 1185, 296, 297, 298, 299, 300, 301, 1121, 1154,
	1086, 302, 1215, 1216, 642, 0, 303, 304, 1161, 0,
	1142, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1196,
	327, 328, 329, 1145, 1143, 1144, 1151, 1147, 1146, 1150,
	330, 331, 332, 333, 334, 1178, 335, 337, 1172, 1171,
	1091, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 1163, 348, 0, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 1097, 356, 357,
	358, 360, 362, 359, 363, 364, 365, 366, 1186, 1187,
	367, 1110, 274, 0, 0, 0, 0, 0, 368, 369,
	370, 1170, 0, 0, 0, 371, 0, 372, 373, 0,
	0, 1197, 374, 375, 376, 1183, 1184, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 1193, 0,
	1120, 387, 0, 388, 389, 390, 391, 392, 1156, 1157,
	1160, 473, 1199, 393, 394, 0, 395, 396, 397, 398,
	399, 0, 0, 0, 275, 400, 401, 402, 404, 0,
	1198, 403, 1165, 1166, 0, 1126, 0, 405, 406, 1200,
	1158, 1201, 407, 408, 409, 1202, 410, 0, 0, 0,
	411, 412, 413, 414, 415, 416, 0, 417, 419, 418,
	0, 420, 1194, 1203, 421, 422, 1204, 0, 423, 0,
	0, 0, 424, 425, 428, 1149, 1148, 426, 427, 429,
	430, 0, 431, 432, 434, 437, 433, 435, 436, 438,
	451, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 453, 0, 452, 1205, 454, 455, 456,
	463, 465, 466, 461, 462, 464, 467, 468, 458, 459,
	460, 1206, 469, 457, 1088, 276, 1207, 470, 471, 1111,
	1159, 472, 1173, 474, 475, 0, 0, 476, 0, 0,
	0, 478, 479, 480, 0, 0, 481, 482, 664, 1208,
	483, 1209, 1188, 484, 485, 1098, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 0, 495, 496, 666, 497,
	498, 499, 667, 500, 501, 502, 1189, 503, 669, 504,
	505, 0, 506, 507, 0, 508, 509, 510, 511, 512,
	513, 514, 1169, 515, 516, 518, 517, 519, 0, 520,
	0, 521, 522, 523, 0, 0, 0, 0, 0, 524,
	0, 526, 527, 528, 529, 525, 530, 531, 532, 533,
	534, 0, 535, 536, 537, 1210, 538, 539, 540, 541,
	542, 1099, 543, 0, 544, 545, 551, 552, 553, 546,
	547, 554, 555, 556, 557, 558, 0, 560, 561, 559,
	562, 563, 564, 1152, 565, 566, 548, 549, 567, 568,
	1211, 569, 570, 571, 572, 573, 574, 575, 1167, 0,
	576, 0, 577, 578, 579, 581, 550, 582, 587, 588,
	1214, 583, 584, 585, 586, 1190, 590, 591, 0, 592,
	593, 1085, 589, 580, 0, 594, 595, 596, 597, 598,
	599, 600, 361, 601, 0, 602, 1179, 1180, 1181, 1182,
	0, 611, 0, 603, 604, 605, 1191, 606, 1192, 1109,
	607, 608, 609, 610, 0, 612, 613, 0, 1092, 614,
	615, 616, 618, 619, 617, 620, 1153, 621, 0, 0,
	622, 623, 624, 681, 1176, 1213, 0, 626, 625, 627,
	684, 0, 628, 0, 0, 0, 0, 629, 630, 685,
	631, 632, 633, 1089, 0, 0, 0, 0, 1131, 1103,
	1104, 1105, 1101, 1102, 1114, 0, 1084, 0, 0, 0,
	0, 0, 0, 1082, 1083, 277, 279, 278, 280, 281,
	282, 283, 1115, 284, 285, 0, 1113, 0, 0, 0,
	1155, 1119, 0, 0, 0, 286, 287, 1195, 288, 289,
	290, 291, 292, 293, 635, 1168, 0, 294, 1175, 295,
	1174, 0, 1185, 296, 297, 298, 299, 300, 301, 1121,
	1154, 1086, 302, 1215, 1216, 642, 0, 303, 304, 1161,
	0, 1142, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	1196, 327, 328, 4736, 1145, 1143, 1144, 1151, 1147, 1146,
	1150, 330, 331, 332, 333, 334, 1178, 335, 337, 1172,
	1171, 1091, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 1163, 348, 0, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 1097, 356,
	357, 358, 360, 362, 359, 363, 364, 365, 366, 1186,
	1187, 367, 1110, 274, 0, 0, 0, 0, 0, 368,
	369, 370, 1170, 0, 0, 0, 371, 0, 372, 373,
	0, 0, 1197, 374, 375, 376, 1183, 1184, 377, 378,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 1193,
	0, 1120, 387, 0, 388, 389, 390, 391, 392, 1156,
	1157, 1160, 473, 1199, 393, 394, 0, 395, 396, 397,
	398, 399, 0, 0, 0, 275, 400, 401, 402, 404,
	0, 1198, 403, 1165, 1166, 0, 1126, 0, 405, 406,
	1200, 1158, 1201, 407, 408, 409, 1202, 410, 0, 0,
	0, 411, 412, 413, 414, 415, 416, 0, 417, 419,
	418, 0, 420, 1194, 1203, 421, 422, 1204, 0, 423,
	0, 0, 0, 424, 425, 428, 1149, 1148, 426, 427,
	429, 430, 0, 431, 432, 434, 437, 433, 435, 436,
	438, 451, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 453, 0, 452, 1205, 454, 455,
	456, 463, 465, 466, 461, 462, 464, 467, 468, 458,
	459, 460, 1206, 469, 457, 1088, 276, 1207, 470, 471,
	1111, 1159, 472, 1173, 474, 475, 0, 0, 476, 0,
	0, 0, 478, 479, 480, 0, 0, 481, 482, 664,
	1208, 483, 1209, 1188, 484, 485, 1098, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 0, 495, 496, 666,
	497, 498, 499, 667, 500, 501, 502, 1189, 503, 669,
	504, 505, 0, 506, 507, 0, 508, 509, 510, 511,
	512, 513, 514, 1169, 515, 516, 518, 517, 519, 0,
	520, 0, 521, 522, 523, 0, 0, 0, 0, 0,
	524, 0, 526, 527, 528, 529, 525, 530, 531, 532,
	533, 534, 0, 535, 536, 537, 1210, 538, 539, 540,
	541, 542, 1099, 543, 0, 544, 545, 551, 552, 553,
	546, 547, 554, 555, 556, 557, 558, 0, 560, 561,
	559, 562, 563, 564, 1152, 565, 566, 548, 549, 567,
	568, 1211, 569, 570, 571, 572, 573, 574, 575, 1167,
	0, 576, 0, 577, 578, 579, 581, 550, 582, 587,
	588, 1214, 583, 584, 585, 586, 1190, 590, 591, 0,
	592, 593, 1085, 589, 580, 0, 594, 595, 596, 597,
	598, 599, 600, 361, 601, 0, 602, 1179, 1180, 1181,
	1182, 0, 611, 0, 603, 604, 605, 1191, 606, 1192,
	1109, 607, 608, 609, 610, 0, 4735, 613, 0, 1092,
	614, 615, 616, 618, 619, 617, 620, 1153, 621, 0,
	0, 622, 623, 624, 681, 1176, 1213, 0, 626, 625,
	627, 684, 0, 628, 0, 0, 0, 0, 629, 630,
	685, 631, 632, 633, 1089, 0, 0, 0, 0, 1131,
	1103, 1104, 1105, 1101, 1102, 1114, 0, 1084, 0, 0,
	0, 0, 0, 0, 1082, 1083, 277, 279, 278, 280,
	281, 282, 283, 1115, 284, 285, 0, 1113, 0, 0,
	0, 1155, 1119, 0, 0, 0, 286, 287, 1195, 288,
	289, 290, 291, 292, 293, 4734, 1168, 0, 294, 1175,
	295, 1174, 0, 1185, 296, 297, 298, 299, 300, 301,
	1121, 1154, 1086, 302, 1215, 1216, 642, 0, 303, 304,
	1161, 0, 1142, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 1196, 327, 328, 4736, 1145, 1143, 1144, 1151, 1147,
	1146, 1150, 330, 331, 332, 333, 334, 1178, 335, 337,
	1172, 1171, 1091, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 1163, 348, 0,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 1097,
	356, 357, 358, 360, 362, 359, 363, 364, 365, 366,
	1186, 1187, 367, 1110, 274, 0, 0, 0, 0, 0,
	368, 369, 370, 1170, 0, 0, 0, 371, 0, 372,
	373, 0, 0, 1197, 374, 375, 376, 1183, 1184, 377,
	378, 379, 380, 381, 382, 383, 384, 385, 0, 386,
	1193, 0, 1120, 387, 0, 388, 389, 390, 391, 392,
	1156, 1157, 1160, 473, 1199, 393, 394, 0, 395, 396,
	397, 398, 399, 0, 0, 0, 275, 400, 401, 402,
	404, 0, 1198, 403, 1165, 1166, 0, 1126, 0, 405,
	406, 1200, 1158, 1201, 407, 408, 409, 1202, 410, 0,
	0, 0, 411, 412, 413, 414, 415, 416, 0, 417,
	419, 418, 0, 420, 1194, 1203, 421, 422, 1204, 0,
	423, 0, 0, 0, 424, 425, 428, 1149, 1148, 426,
	427, 429, 430, 0, 431, 432, 434, 437, 433, 435,
	436, 438, 451, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 450, 453, 0, 452, 1205, 454,
	455, 456, 463, 465, 466, 461, 462, 464, 467, 468,
	458, 459, 460, 1206, 469, 457, 1088, 276, 1207, 470,
	471, 1111, 1159, 472, 1173, 474, 475, 0, 0, 476,
	0, 0, 0, 478, 479, 480, 0, 0, 481, 482,
	664, 1208, 483, 1209, 1188, 484, 485, 1098, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 0, 495, 496,
	666, 497, 498, 499, 667, 500, 501, 502, 1189, 503,
	669, 504, 505, 0, 506, 507, 0, 508, 509, 510,
	511, 512, 513, 514, 1169, 515, 516, 518, 517, 519,
	0, 520, 0, 521, 522, 523, 0, 0, 0, 0,
	0, 524, 0, 526, 527, 528, 529, 525, 530, 531,
	532, 533, 534, 0, 535, 536, 537, 1210, 538, 539,
	540, 541, 542, 1099, 543, 0, 544, 545, 551, 552,
	553, 546, 547, 554, 555, 556, 557, 558, 0, 560,
	561, 559, 562, 563, 564, 1152, 565, 566, 548, 549,
	567, 568, 1211, 569, 570, 571, 572, 573, 574, 575,
	1167, 0, 576, 0, 577, 578, 579, 581, 550, 582,
	587, 588, 1214, 583, 584, 585, 586, 1190, 590, 591,
	0, 592, 593, 1085, 589, 580, 0, 594, 595, 596,
	597, 598, 599, 600, 361, 601, 0, 602, 1179, 1180,
	1181, 1182, 0, 611, 0, 603, 604, 605, 1191, 606,
	1192, 1109, 607, 608, 609, 610, 0, 4735, 613, 0,
	1092, 614, 615, 616, 618, 619, 617, 620, 1153, 621,
	0, 0, 622, 623, 624, 681, 1176, 1213, 0, 626,
	625, 627, 684, 0, 628, 0, 0, 0, 0, 629,
	630, 685, 631, 632, 633, 1089, 0, 0, 0, 0,
	1131, 1103, 1104, 1105, 1101, 1102, 1114, 0, 1084, 0,
	0, 0, 0, 0, 0, 1082, 1083, 277, 279, 278,
	280, 281, 282, 283, 1115, 284, 285, 0, 1113, 0,
	0, 0, 1155, 1119, 0, 0, 0, 286, 287, 1195,
	288, 289, 290, 291, 292, 293, 635, 1168, 0, 294,
	1175, 295, 1174, 0, 1185, 296, 297, 298, 299, 300,
	301, 1121, 1154, 1086, 302, 1215, 1216, 642, 0, 303,
	304, 1161, 0, 1142, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 1196, 327, 4359, 329, 1145, 1143, 1144, 1151,
	1147, 1146, 1150, 330, 331, 332, 333, 334, 1178, 335,
	337, 1172, 1171, 1091, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 1163, 348,
	0, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	1097, 356, 357, 358, 360, 362, 359, 363, 364, 365,
	366, 1186, 1187, 367, 1110, 274, 0, 0, 0, 0,
	0, 368, 369, 370, 1170, 0, 0, 0, 371, 0,
	372, 373, 0, 0, 1197, 374, 375, 376, 1183, 1184,
	377, 378, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 1193, 0, 4360, 387, 0, 388, 389, 390, 391,
	392, 1156, 1157, 1160, 473, 1199, 393, 394, 0, 395,
	396, 397, 398, 399, 0, 0, 0, 275, 400, 401,
	402, 404, 0, 1198, 403, 1165, 1166, 0, 1126, 0,
	405, 406, 1200, 1158, 1201, 407, 408, 409, 1202, 410,
	0, 0, 0, 411, 412, 413, 414, 415, 416, 0,
	417, 419, 418, 0, 420, 1194, 1203, 421, 422, 1204,
	0, 423, 0, 0, 0, 424, 425, 428, 1149, 1148,
	426, 427, 429, 430, 0, 431, 432, 434, 437, 433,
	435, 436, 438, 451, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 453, 0, 452, 1205,
	454, 455, 456, 463, 465, 466, 461, 462, 464, 467,
	468, 458, 459, 460, 1206, 469, 457, 1088, 276, 1207,
	470, 471, 1111, 1159, 472, 1173, 474, 475, 0, 0,
	476, 0, 0, 0, 478, 479, 480, 0, 0, 481,
	482, 664, 1208, 483, 1209, 1188, 484, 485, 1098, 486,
	487, 488, 489, 490, 491, 492, 493, 494, 0, 495,
	496, 666, 497, 498, 499, 667, 500, 501, 502, 1189,
	503, 669, 504, 505, 0, 506, 507, 0, 508, 509,
	510, 511, 512, 513, 514, 1169, 515, 516, 518, 517,
	519, 0, 520, 0, 521, 522, 523, 0, 0, 0,
	0, 0, 524, 0, 526, 527, 528, 529, 525, 530,
	531, 532, 533, 534, 0, 535, 536, 537, 1210, 538,
	539, 540, 4358, 542, 1099, 543, 0, 544, 545, 551,
	552, 553, 546, 547, 554, 555, 556, 557, 558, 0,
	560, 561, 559, 562, 563, 564, 1152, 565, 566, 548,
	549, 567, 568, 1211, 569, 570, 571, 572, 573, 574,
	575, 1167, 0, 576, 0, 577, 578, 579, 581, 550,
	582, 587, 588, 1214, 583, 584, 585, 586, 1190, 590,
	591, 0, 592, 593, 1085, 589, 580, 0, 594, 595,
	596, 597, 598, 599, 600, 361, 601, 0, 602, 1179,
	1180, 1181, 1182, 0, 611, 0, 603, 604, 605, 1191,
	606, 1192, 1109, 607, 608, 609, 610, 0, 612, 613,
	0, 1092, 614, 615, 616, 618, 619, 617, 620, 1153,
	621, 0, 0, 622, 623, 624, 681, 1176, 1213, 0,
	626, 625, 627, 684, 0, 628, 0, 0, 0, 0,
	629, 630, 685, 631, 632, 633, 1089, 0, 0, 0,
	0, 1131, 1103, 1104, 1105, 3188, 3189, 1114, 0, 1084,
	0, 0, 0, 0, 0, 0, 1082, 1083, 277, 279,
	278, 280, 281, 282, 283, 1115, 284, 285, 0, 1113,
	0, 0, 0, 1155, 1119, 0, 0, 0, 286, 287,
	1195, 288, 289, 290, 291, 292, 293, 635, 1168, 0,
	294, 1175, 295, 1174, 0, 1185, 296, 297, 298, 299,
	300, 301, 1121, 1154, 1086, 302, 1215, 1216, 642, 0,
	303, 304, 1161, 0, 1142, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 1196, 327, 328, 329, 1145, 1143, 1144,
	1151, 1147, 1146, 1150, 330, 331, 332, 333, 334, 1178,
	335, 337, 1172, 1171, 1091, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 1163,
	348, 0, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 1097, 356, 357, 358, 360, 362, 359, 363, 364,
	365, 366, 1186, 1187, 367, 1110, 274, 0, 0, 0,
	0, 0, 368, 369, 370, 1170, 0, 0, 0, 371,
	0, 372, 373, 0, 0, 1197, 374, 375, 376, 1183,
	1184, 377, 378, 379, 380, 381, 382, 383, 384, 385,
	0, 386, 1193, 0, 1120, 387, 0, 388, 389, 390,
	391, 392, 1156, 1157, 1160, 473, 1199, 393, 394, 0,
	395, 396, 397, 398, 399, 0, 0, 0, 275, 400,
	401, 402, 404, 0, 1198, 403, 1165, 1166, 0, 1126,
	0, 405, 406, 1200, 1158, 1201, 407, 408, 409, 1202,
	410, 0, 0, 0, 411, 412, 413, 414, 415, 416,
	0, 417, 419, 418, 0, 420, 1194, 1203, 421, 422,
	1204, 0, 423, 0, 0, 0, 424, 425, 428, 1149,
	1148, 426, 427, 429, 430, 0, 431, 432, 434, 437,
	433, 435, 436, 438, 451, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 453, 0, 452,
	1205, 454, 455, 456, 463, 465, 466, 461, 462, 464,
	467, 468, 458, 459, 460, 1206, 469, 457, 1088, 276,
	1207, 470, 471, 1111, 1159, 472, 1173, 474, 475, 0,
	0, 476, 0, 0, 0, 478, 479, 480, 0, 0,
	481, 482, 664, 1208, 483, 1209, 1188, 484, 485, 1098,
	486, 487, 488, 489, 490, 491, 492, 493, 494, 0,
	495, 496, 666, 497, 498, 499, 667, 500, 501, 502,
	1189, 503, 669, 504, 505, 0, 506, 507, 0, 508,
	509, 510, 511, 512, 513, 514, 1169, 515, 516, 518,
	517, 519, 0, 520, 0, 521, 522, 523, 0, 0,
	0, 0, 0, 524, 0, 526, 527, 528, 529, 525,
	530, 531, 532, 533, 534, 0, 535, 536, 537, 1210,
	538, 539, 540, 541, 542, 1099, 543, 0, 544, 545,
	551, 552, 553, 546, 547, 554, 555, 556, 557, 558,
	0, 560, 561, 559, 562, 563, 564, 1152, 565, 566,
	548, 549, 567, 568, 1211, 569, 570, 571, 572, 573,
	574, 575, 1167, 0, 576, 0, 577, 578, 579, 581,
	550, 582, 587, 588, 1214, 583, 584, 585, 586, 1190,
	590, 591, 0, 592, 593, 1085, 589, 580, 0, 594,
	595, 596, 597, 598, 599, 600, 361, 601, 0, 602,
	1179, 1180, 1181, 1182, 0, 611, 0, 603, 604, 605,
	1191, 606, 1192, 1109, 607, 608, 609, 610, 0, 612,
	613, 0, 1092, 614, 615, 616, 618, 619, 617, 620,
	1153, 621, 0, 0, 622, 623, 624, 681, 1176, 1213,
	0, 626, 625, 627, 684, 0, 628, 0, 0, 0,
	0, 629, 630, 685, 631, 632, 633, 1089, 0, 0,
	0, 0, 1131, 1103, 1104, 1105, 3186, 3187, 1114, 0,
	1084, 0, 0, 0, 0, 0, 0, 1082, 1083, 277,
	279, 278, 280, 281, 282, 283, 1115, 284, 285, 0,
	1113, 0, 0, 0, 1155, 1119, 0, 0, 0, 286,
	287, 1195, 288, 289, 290, 291, 292, 293, 635, 1168,
	0, 294, 1175, 295, 1174, 0, 1185, 296, 297, 298,
	299, 300, 301, 1121, 1154, 1086, 302, 1215, 1216, 642,
	0, 303, 304, 1161, 0, 1142, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 1196, 327, 328, 329, 1145, 1143,
	1144, 1151, 1147, 1146, 1150, 330, 331, 332, 333, 334,
	1178, 335, 337, 1172, 1171, 1091, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	1163, 348, 0, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 1097, 356, 357, 358, 360, 362, 359, 363,
	364, 365, 366, 1186, 1187, 367, 1110, 274, 0, 0,
	0, 0, 0, 368, 369, 370, 1170, 0, 0, 0,
	371, 0, 372, 373, 0, 0, 1197, 374, 375, 376,
	1183, 1184, 377, 378, 379, 380, 381, 382, 383, 384,
	385, 0, 386, 1193, 0, 1120, 387, 0, 388, 389,
	390, 391, 392, 1156, 1157, 1160, 473, 1199, 393, 394,
	0, 395, 396, 397, 398, 399, 0, 0, 0, 275,
	400, 401, 402, 404, 0, 1198, 403, 1165, 1166, 0,
	1126, 0, 405, 406, 1200, 1158, 1201, 407, 408, 409,
	1202, 410, 0, 0, 0, 411, 412, 413, 414, 415,
	416, 0, 417, 419, 418, 0, 420, 1194, 1203, 421,
	422, 1204, 0, 423, 0, 0, 0, 424, 425, 428,
	1149, 1148, 426, 427, 429, 430, 0, 431, 432, 434,
	437, 433, 435, 436, 438, 451, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 453, 0,
	452, 1205, 454, 455, 456, 463, 465, 466, 461, 462,
	464, 467, 468, 458, 459, 460, 1206, 469, 457, 1088,
	276, 1207, 470, 471, 1111, 1159, 472, 1173, 474, 475,
	0, 0, 476, 0, 0, 0, 478, 479, 480, 0,
	0, 481, 482, 664, 1208, 483, 1209, 1188, 484, 485,
	1098, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	0, 495, 496, 666, 497, 498, 499, 667, 500, 501,
	502, 1189, 503, 669, 504, 505, 0, 506, 507, 0,
	508, 509, 510, 511, 512, 513, 514, 1169, 515, 516,
	518, 517, 519, 0, 520, 0, 521, 522, 523, 0,
	0, 0, 0, 0, 524, 0, 526, 527, 528, 529,
	525, 530, 531, 532, 533, 534, 0, 535, 536, 537,
	1210, 538, 539, 540, 541, 542, 1099, 543, 0, 544,
	545, 551, 552, 553, 546, 547, 554, 555, 556, 557,
	558, 0, 560, 561, 559, 562, 563, 564, 1152, 565,
	566, 548, 549, 567, 568, 1211, 569, 570, 571, 572,
	573, 574, 575, 1167, 0, 576, 0, 577, 578, 579,
	581, 550, 582, 587, 588, 1214, 583, 584, 585, 586,
	1190, 590, 591, 0, 592, 593, 1085, 589, 580, 0,
	594, 595, 596, 597, 598, 599, 600, 361, 601, 0,
	602, 1179, 1180, 1181, 1182, 0, 611, 0, 603, 604,
	605, 1191, 606, 1192, 1109, 607, 608, 609, 610, 0,
	612, 613, 0, 1092, 614, 615, 616, 618, 619, 617,
	620, 1153, 621, 0, 0, 622, 623, 624, 681, 1176,
	1213, 0, 626, 625, 627, 684, 0, 628, 0, 0,
	0, 0, 629, 630, 685, 631, 632, 633, 1089, 0,
	0, 0, 0, 1131, 1103, 1104, 1105, 1101, 1102, 1114,
	0, 1084, 0, 0, 0, 0, 0, 0, 1082, 1083,
	277, 279, 278, 280, 281, 282, 283, 1115, 284, 285,
	0, 1113, 0, 0, 0, 1155, 1119, 0, 0, 0,
	286, 287, 1195, 288, 289, 290, 291, 292, 293, 635,
	1168, 0, 294, 1175, 295, 1174, 0, 1185, 296, 297,
	298, 299, 300, 301, 1121, 1154, 1086, 302, 1215, 1216,
	642, 0, 303, 304, 1161, 0, 1142, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 1196, 327, 328, 329, 1145,
	1143, 1144, 1151, 1147, 1146, 1150, 330, 331, 332, 333,
	334, 1178, 335, 337, 1172, 1171, 1091, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 1163, 348, 0, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 1097, 356, 357, 358, 360, 362, 359,
	363, 364, 365, 366, 1186, 1187, 367, 1110, 274, 0,
	0, 0, 0, 0, 368, 369, 370, 1170, 0, 0,
	0, 371, 0, 372, 373, 0, 0, 1197, 374, 375,
	376, 1183, 1184, 377, 378, 379, 380, 381, 382, 383,
	384, 385, 0, 386, 1193, 0, 1120, 387, 0, 388,
	389, 390, 391, 392, 1156, 1157, 1160, 473, 1199, 393,
	394, 0, 395, 396, 397, 398, 399, 0, 0, 0,
	275, 400, 401, 402, 404, 0, 1198, 403, 1165, 1166,
	0, 1126, 0, 405, 406, 1200, 1158, 1201, 407, 408,
	409, 1202, 410, 0, 0, 0, 411, 412, 413, 414,
	415, 416, 0, 417, 419, 418, 0, 420, 1194, 1203,
	421, 422, 1204, 0, 423, 0, 0, 0, 424, 425,
	428, 1149, 1148, 426, 427, 429, 430, 0, 431, 432,
	434, 437, 433, 435, 436, 438, 451, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 450, 453,
	0, 452, 1205, 454, 455, 456, 463, 465, 466, 461,
	462, 464, 467, 468, 458, 459, 460, 1206, 469, 457,
	1088, 276, 1207, 470, 471, 1111, 1159, 472, 1173, 474,
	475, 0, 0, 476, 0, 0, 0, 478, 479, 480,
	0, 0, 481, 482, 664, 1208, 483, 1209, 1188, 484,
	485, 1098, 486, 487, 488, 489, 490, 491, 492, 493,
	494, 0, 495, 496, 666, 497, 498, 499, 667, 500,
	501, 502, 1189, 503, 669, 504, 505, 0, 506, 507,
	0, 508, 509, 510, 511, 512, 513, 514, 1169, 515,
	516, 518, 517, 519, 0, 520, 0, 521, 522, 523,
	0, 0, 0, 0, 0, 524, 0, 526, 527, 528,
	529, 525, 530, 531, 532, 533, 534, 0, 535, 536,
	537, 1210, 538, 539, 540, 541, 542, 1099, 543, 0,
	544, 545, 551, 552, 553, 546, 547, 554, 555, 556,
	557, 558, 0, 560, 561, 559, 562, 563, 564, 1152,
	565, 566, 548, 549, 567, 568, 1211, 569, 570, 571,
	572, 573, 574, 575, 1167, 0, 576, 0, 577, 578,
	579, 581, 550, 582, 587, 588, 1214, 583, 584, 585,
	586, 1190, 590, 591, 0, 592, 593, 1085, 589, 580,
	0, 594, 595, 596, 597, 598, 599, 600, 361, 601,
	0, 602, 1179, 1180, 1181, 1182, 0, 611, 0, 603,
	604, 605, 1191, 606, 1192, 1109, 607, 608, 609, 610,
	0, 612, 613, 0, 1092, 614, 615, 616, 618, 619,
	617, 620, 1153, 621, 0, 0, 622, 623, 624, 681,
	1176, 1213, 0, 626, 625, 627, 684, 0, 628, 0,
	0, 0, 0, 629, 630, 685, 631, 632, 633, 1089,
	0, 0, 0, 0, 1131, 1103, 1104, 1105, 1101, 1102,
	1114, 0, 1084, 0, 0, 0, 0, 0, 0, 2448,
	2449, 277, 279, 278, 280, 281, 282, 283, 1115, 284,
	285, 0, 1113, 0, 0, 0, 1155, 1119, 0, 0,
	0, 286, 287, 1195, 288, 289, 290, 291, 292, 293,
	635, 1168, 0, 294, 1175, 295, 1174, 0, 1185, 296,
	297, 298, 299, 300, 301, 1121, 1154, 0, 302, 1215,
	1216, 642, 0, 303, 304, 1161, 0, 1142, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 1196, 327, 328, 329,
	1145, 1143, 1144, 1151, 1147, 1146, 1150, 330, 331, 332,
	333, 334, 1178, 335, 337, 1172, 1171, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 1163, 348, 0, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 1097, 356, 357, 358, 360, 362,
	359, 363, 364, 365, 366, 1186, 1187, 367, 1110, 274,
	0, 0, 0, 0, 0, 368, 369, 370, 1170, 0,
	0, 0, 371, 0, 372, 373, 0, 0, 1197, 374,
	375, 376, 1183, 1184, 377, 378, 379, 380, 381, 382,
	383, 384, 385, 0, 386, 1193, 0, 1120, 387, 0,
	388, 389, 390, 391, 392, 1156, 1157, 1160, 473, 1199,
	393, 394, 0, 395, 396, 397, 398, 399, 0, 0,
	0, 275, 400, 401, 402, 404, 0, 1198, 403, 1165,
	1166, 0, 1126, 0, 405, 406, 1200, 1158, 1201, 407,
	408, 409, 1202, 410, 0, 0, 0, 411, 412, 413,
	414, 415, 416, 0, 417, 419, 418, 0, 420, 1194,
	1203, 421, 422, 1204, 0, 423, 0, 0, 0, 424,
	425, 428, 1149, 1148, 426, 427, 429, 430, 0, 431,
	432, 434, 437, 433, 435, 436, 438, 451, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	453, 0, 452, 1205, 454, 455, 456, 463, 465, 466,
	461, 462, 464, 467, 468, 458, 459, 460, 1206, 469,
	457, 0, 276, 1207, 470, 471, 1111, 1159, 472, 1173,
	474, 475, 0, 0, 476, 0, 0, 0, 478, 479,
	480, 0, 0, 481, 482, 664, 1208, 483, 1209, 1188,
	484, 485, 1098, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 0, 495, 496, 666, 497, 498, 499, 667,
	500, 501, 502, 1189, 503, 669, 504, 505, 0, 506,
	507, 0, 508, 509, 510, 511, 512, 513, 514, 1169,
	515, 516, 518, 517, 519, 0, 520, 0, 521, 522,
	523, 0, 0, 0, 0, 0, 524, 0, 526, 527,
	528, 529, 525, 530, 531, 532, 533, 534, 0, 535,
	536, 537, 1210, 538, 539, 540, 541, 542, 1099, 543,
	0, 544, 545, 551, 552, 553, 546, 547, 554, 555,
	556, 557, 558, 0, 560, 561, 559, 562, 563, 564,
	1152, 565, 566, 548, 549, 567, 568, 1211, 569, 570,
	571, 572, 573, 574, 575, 1167, 0, 576, 0, 577,
	578, 579, 581, 550, 582, 587, 588, 1214, 583, 584,
	585, 586, 1190, 590, 591, 0, 592, 593, 0, 589,
	580, 0, 594, 595, 596, 597, 598, 599, 600, 361,
	601, 0, 602, 1179, 1180, 1181, 1182, 0, 611, 0,
	603, 604, 605, 1191, 606, 1192, 1109, 607, 608, 609,
	610, 0, 612, 613, 0, 0, 614, 615, 616, 618,
	619, 617, 620, 1153, 621, 0, 0, 622, 623, 624,
	681, 1176, 1213, 0, 626, 625, 627, 684, 0, 628,
	0, 0, 0, 0, 629, 630, 685, 631, 632, 633,
	0, 0, 0, 0, 0, 1131, 1103, 1104, 1105, 1101,
	1102, 1114, 0, 2707, 0, 0, 0, 0, 0, 0,
	2705, 2706, 277, 279, 278, 280, 281, 282, 283, 1115,
	284, 285, 0, 1113, 0, 0, 0, 1155, 1119, 0,
	0, 0, 286, 287, 1195, 288, 289, 290, 291, 292,
	293, 635, 1168, 0, 294, 1175, 295, 1174, 0, 1185,
	296, 297, 298, 299, 300, 301, 1121, 1154, 0, 302,
	1215, 1216, 642, 0, 303, 304, 1161, 0, 1142, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 1196, 327, 328,
	329, 1145, 1143, 1144, 1151, 1147, 1146, 1150, 330, 331,
	332, 333, 334, 1178, 335, 337, 1172, 1171, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 1163, 348, 0, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 1097, 356, 357, 358, 360,
	362, 359, 363, 364, 365, 366, 1186, 1187, 367, 1110,
	274, 0, 0, 0, 0, 0, 368, 369, 370, 1170,
	0, 0, 0, 371, 0, 372, 373, 0, 0, 1197,
	374, 375, 376, 1183, 1184, 377, 378, 379, 380, 381,
	382, 383, 384, 385, 0, 386, 1193, 0, 1120, 387,
	0, 388, 389, 390, 391, 392, 1156, 1157, 1160, 473,
	1199, 393, 394, 0, 395, 396, 397, 398, 399, 0,
	0, 0, 275, 400, 401, 402, 404, 0, 1198, 403,
	1165, 1166, 0, 1126, 0, 405, 406, 1200, 1158, 1201,
	407, 408, 409, 1202, 410, 0, 0, 0, 411, 412,
	413, 414, 415, 416, 0, 417, 419, 418, 0, 420,
	1194, 1203, 421, 422, 1204, 0, 423, 0, 0, 0,
	424, 425, 428, 1149, 1148, 426, 427, 429, 430, 0,
	431, 432, 434, 437, 433, 435, 436, 438, 451, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 453, 0, 452, 1205, 454, 455, 456, 463, 465,
	466, 461, 462, 464, 467, 468, 458, 459, 460, 1206,
	469, 457, 0, 276, 1207, 470, 471, 1111, 1159, 472,
	1173, 474, 475, 0, 0, 476, 0, 0, 0, 478,
	479, 480, 0, 0, 481, 482, 664, 1208, 483, 1209,
	1188, 484, 485, 477, 486, 487, 488, 489, 490, 491,
	492, 493, 494, 0, 495, 496, 666, 497, 498, 499,
	667, 500, 501, 502, 1189, 503, 669, 504, 505, 0,
	506, 507, 0, 508, 509, 510, 511, 512, 513, 514,
	1169, 515, 516, 518, 517, 519, 0, 520, 0, 521,
	522, 523, 0, 0, 0, 0, 0, 524, 0, 526,
	527, 528, 529, 525, 530, 531, 532, 533, 534, 0,
	535, 536, 537, 1210, 538, 539, 540, 541, 542, 3181,
	3182, 0, 544, 545, 551, 552, 553, 546, 547, 554,
	555, 556, 557, 558, 0, 560, 561, 559, 562, 563,
	564, 1152, 565, 566, 548, 549, 567, 568, 1211, 569,
	570, 571, 572, 573, 574, 575, 1167, 0, 576, 0,
	577, 578, 579, 581, 550, 582, 587, 588, 1214, 583,
	584, 585, 586, 1190, 590, 591, 0, 592, 593, 0,
	589, 580, 0, 594, 595, 596, 597, 598, 599, 600,
	361, 601, 0, 602, 1179, 1180, 1181, 1182, 0, 611,
	0, 603, 604, 605, 1191, 606, 1192, 1109, 607, 608,
	609, 610, 0, 612, 613, 0, 0, 614, 615, 616,
	618, 619, 617, 620, 1153, 621, 0, 0, 622, 623,
	624, 681, 1176, 1213, 0, 626, 625, 627, 684, 0,
	628, 0, 0, 0, 0, 629, 630, 685, 631, 632,
	633, 0, 0, 0, 0, 0, 1131, 1103, 1104, 1105,
	1101, 1102, 1114, 0, 0, 0, 0, 0, 0, 0,
	0, 2123, 2124, 277, 279, 278, 280, 281, 282, 283,
	1115, 284, 285, 0, 1113, 0, 0, 0, 1155, 1119,
	0, 0, 0, 286, 287, 1195, 288, 289, 290, 291,
	292, 293, 0, 1168, 0, 294, 1175, 295, 1174, 0,
	1185, 296, 297, 298, 299, 300, 301, 1121, 1154, 1086,
	302, 1215, 1216, 642, 0, 303, 304, 1161, 0, 1142,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 1196, 327,
	328, 4736, 1145, 1143, 1144, 1151, 1147, 1146, 1150, 330,
	331, 332, 333, 334, 1178, 335, 337, 1172, 1171, 1091,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 1163, 348, 0, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 1097, 356, 357, 358,
	360, 362, 359, 363, 364, 365, 366, 1186, 1187, 367,
	1110, 274, 0, 0, 0, 0, 0, 368, 369, 370,
	1170, 0, 0, 0, 371, 0, 372, 373, 0, 0,
	1197, 374, 375, 376, 1183, 1184, 377, 378, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 1193, 0, 1120,
	387, 0, 388, 389, 390, 391, 392, 1156, 1157, 1160,
	473, 0, 393, 394, 0, 395, 396, 397, 398, 399,
	0, 0, 0, 275, 400, 401, 402, 404, 0, 1198,
	403, 1165, 1166, 0, 1126, 0, 405, 406, 0, 1158,
	0, 407, 408, 409, 1202, 410, 0, 0, 0, 411,
	412, 413, 414, 415, 416, 0, 417, 419, 418, 0,
	420, 1194, 1203, 421, 422, 0, 0, 423, 0, 0,
	0, 424, 425, 428, 1149, 1148, 426, 427, 429, 430,
	0, 431, 432, 434, 437, 433, 435, 436, 438, 451,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 453, 0, 452, 1205, 454, 455, 456, 463,
	465, 466, 461, 462, 464, 467, 468, 458, 459, 460,
	1206, 469, 457, 1088, 276, 0, 470, 471, 1111, 1159,
	472, 1173, 474, 475, 0, 0, 476, 0, 0, 0,
	478, 479, 480, 0, 0, 481, 482, 664, 1208, 483,
	1209, 1188, 484, 485, 1098, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 0, 495, 496, 666, 497, 498,
	499, 667, 500, 501, 502, 1189, 503, 669, 504, 505,
	0, 506, 507, 0, 508, 509, 510, 511, 512, 513,
	514, 1169, 515, 516, 518, 517, 519, 0, 520, 0,
	521, 522, 523, 0, 0, 0, 0, 0, 524, 0,
	526, 527, 528, 529, 525, 530, 531, 532, 533, 534,
	0, 535, 536, 537, 1210, 538, 539, 540, 541, 542,
	1099, 543, 0, 544, 545, 551, 552, 553, 546, 547,
	554, 555, 556, 557, 558, 0, 560, 561, 559, 562,
	563, 564, 1152, 565, 566, 548, 549, 567, 568, 0,
	569, 570, 571, 572, 573, 574, 575, 1167, 0, 576,
	0, 577, 578, 579, 581, 550, 582, 587, 588, 1214,
	583, 584, 585, 586, 1190, 590, 591, 0, 592, 593,
	1085, 589, 580, 0, 594, 595, 596, 597, 598, 599,
	600, 361, 601, 0, 602, 1179, 1180, 1181, 1182, 0,
	611, 0, 603, 604, 605, 1191, 606, 1192, 1109, 607,
	608, 609, 610, 0, 4735, 613, 0, 1092, 614, 615,
	616, 618, 619, 617, 620, 1153, 621, 0, 0, 622,
	623, 624, 681, 1176, 1213, 0, 626, 625, 627, 684,
	0, 628, 0, 0, 0, 0, 629, 630, 685, 631,
	632, 633, 0, 0, 0, 1075, 0, 1253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1082, 1083, 277, 279, 278, 280, 281, 282,
	283, 1115, 284, 285, 0, 1113, 0, 0, 0, 1155,
	0, 0, 0, 0, 286, 287, 1195, 288, 289, 290,
	291, 292, 293, 635, 636, 0, 294, 637, 295, 638,
	0, 639, 296, 297, 298, 299, 300, 301, 0, 1154,
	0, 302, 640, 641, 642, 0, 303, 304, 1161, 0,
	1142, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1196,
	327, 328, 329, 1145, 1143, 1144, 1151, 1147, 1146, 1150,
	330, 331, 332, 333, 334, 0, 335, 337, 644, 645,
	0, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 347, 348, 0, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 646, 356, 357,
	358, 360, 362, 359, 363, 364, 365, 366, 1186, 1187,
	367, 0, 274, 0, 0, 0, 0, 0, 368, 369,
	370, 649, 0, 0, 0, 371, 0, 372, 373, 0,
	0, 1197, 374, 375, 376, 650, 651, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 1193, 0,
	653, 387, 0, 388, 389, 390, 391, 392, 1156, 1157,
	1160, 473, 1199, 393, 394, 0, 395, 396, 397, 398,
	399, 0, 0, 0, 275, 400, 401, 402, 404, 0,
	1198, 403, 657, 658, 0, 659, 0, 405, 406, 1200,
	1158, 1201, 407, 408, 409, 1202, 410, 0, 0, 0,
	411, 412, 413, 414, 415, 416, 1239, 417, 419, 418,
	0, 420, 1194, 1203, 421, 422, 1204, 0, 423, 0,
	0, 0, 424, 425, 428, 1149, 1148, 426, 427, 429,
	430, 0, 431, 432, 434, 437, 433, 435, 436, 438,
	451, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 453, 0, 452, 1205, 454, 455, 456,
	463, 465, 466, 461, 462, 464, 467, 468, 458, 459,
	460, 1206, 469, 457, 0, 276, 1207, 470, 471, 0,
	1159, 472, 663, 474, 475, 0, 0, 476, 0, 0,
	1245, 478, 479, 480, 0, 0, 481, 482, 664, 1208,
	483, 1209, 1188, 484, 485, 477, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 0, 495, 496, 666, 497,
	498, 499, 667, 500, 501, 502, 1189, 503, 669, 504,
	505, 0, 506, 507, 0, 508, 509, 510, 511, 512,
	513, 514, 670, 515, 516, 518, 517, 519, 0, 520,
	0, 521, 522, 523, 0, 0, 0, 0, 0, 524,
	0, 526, 527, 528, 529, 525, 530, 531, 532, 533,
	534, 0, 535, 536, 537, 1210, 538, 539, 540, 541,
	542, 671, 1247, 0, 544, 545, 551, 552, 553, 546,
	547, 554, 555, 556, 557, 558, 236, 560, 561, 559,
	562, 563, 564, 1152, 565, 566, 548, 549, 567, 568,
	1211, 569, 570, 571, 572, 573, 574, 575, 672, 0,
	576, 0, 577, 578, 579, 581, 550, 582, 587, 588,
	673, 583, 584, 585, 586, 1190, 590, 591, 0, 592,
	593, 0, 589, 580, 238, 594, 595, 596, 597, 598,
	599, 600, 361, 601, 0, 602, 675, 676, 677, 678,
	0, 611, 0, 603, 604, 605, 1191, 606, 1192, 0,
	607, 608, 609, 610, 0, 612, 613, 0, 0, 614,
	615, 616, 618, 619, 617, 620, 1153, 621, 0, 0,
	622, 623, 624, 1618, 682, 683, 0, 626, 625, 627,
	684, 0, 628, 0, 0, 0, 230, 629, 630, 685,
	631, 632, 633, 1253, 0, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	1243, 0, 1966, 0, 0, 1155, 0, 0, 0, 0,
	286, 287, 1195, 288, 289, 290, 291, 292, 293, 635,
	636, 0, 294, 637, 295, 638, 0, 639, 296, 297,
	298, 299, 300, 301, 0, 1154, 0, 302, 640, 641,
	642, 0, 303, 304, 1161, 0, 1142, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 1196, 327, 328, 329, 1145,
	1143, 1144, 1151, 1147, 1146, 1150, 330, 331, 332, 333,
	334, 0, 335, 337, 644, 645, 0, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 347, 348, 0, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 646, 356, 357, 358, 360, 362, 359,
	363, 364, 365, 366, 1186, 1187, 367, 0, 274, 0,
	0, 0, 0, 0, 368, 369, 370, 649, 0, 0,
	0, 371, 0, 372, 373, 0, 0, 1197, 374, 375,
	376, 650, 651, 377, 378, 379, 380, 381, 382, 383,
	384, 385, 0, 386, 1193, 0, 653, 387, 0, 388,
	389, 390, 391, 392, 1156, 1157, 1160, 473, 1199, 393,
	394, 0, 395, 396, 397, 398, 399, 0, 0, 0,
	275, 400, 401, 402, 404, 0, 1198, 403, 657, 658,
	0, 659, 0, 405, 406, 1200, 1158, 1201, 407, 408,
	409, 1202, 410, 0, 0, 0, 411, 412, 413, 414,
	415, 416, 1239, 417, 419, 418, 0, 420, 1194, 1203,
	421, 422, 1204, 0, 423, 0, 0, 0, 424, 425,
	428, 1149, 1148, 426, 427, 429, 430, 0, 431, 432,
	434, 437, 433, 435, 436, 438, 451, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 450, 453,
	0, 452, 1205, 454, 455, 456, 463, 465, 466, 461,
	462, 464, 467, 468, 458, 459, 460, 1206, 469, 457,
	0, 276, 1207, 470, 471, 0, 1159, 472, 663, 474,
	475, 0, 0, 476, 0, 0, 1245, 478, 479, 480,
	0, 0, 481, 482, 664, 1208, 483, 1209, 1188, 484,
	485, 477, 486, 487, 488, 489, 490, 491, 492, 493,
	494, 0, 495, 496, 666, 497, 498, 499, 667, 500,
	501, 502, 1189, 503, 669, 504, 505, 0, 506, 507,
	0, 508, 509, 510, 511, 512, 513, 514, 670, 515,
	516, 518, 517, 519, 0, 520, 0, 521, 522, 523,
	0, 0, 0, 0, 0, 524, 0, 526, 527, 528,
	529, 525, 530, 531, 532, 533, 534, 0, 535, 536,
	537, 1210, 538, 539, 540, 541, 542, 671, 1247, 0,
	544, 545, 551, 552, 553, 546, 547, 554, 555, 556,
	557, 558, 236, 560, 561, 559, 562, 563, 564, 1152,
	565, 566, 548, 549, 567, 568, 1211, 569, 570, 571,
	572, 573, 574, 575, 672, 0, 576, 0, 577, 578,
	579, 581, 550, 582, 587, 588, 673, 583, 584, 585,
	586, 1190, 590, 591, 0, 592, 593, 0, 589, 580,
	238, 594, 595, 596, 597, 598, 599, 600, 361, 601,
	0, 602, 675, 676, 677, 678, 0, 611, 0, 603,
	604, 605, 1191, 606, 1192, 0, 607, 608, 609, 610,
	0, 612, 613, 0, 0, 614, 615, 616, 618, 619,
	617, 620, 1153, 621, 0, 0, 622, 623, 624, 1618,
	682, 683, 0, 626, 625, 627, 684, 0, 628, 0,
	0, 0, 230, 629, 630, 685, 631, 632, 633, 0,
	0, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	3345, 0, 1253, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1243, 0, 1966, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 1155, 0, 0, 0, 0, 286,
	287, 1195, 288, 289, 290, 291, 292, 293, 635, 636,
	0, 294, 637, 295, 638, 0, 639, 296, 297, 298,
	299, 300, 301, 0, 1154, 0, 302, 640, 641, 642,
	0, 303, 304, 1161, 0, 1142, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 1196, 327, 328, 329, 1145, 1143,
	1144, 1151, 1147, 1146, 1150, 330, 331, 332, 333, 334,
	0, 335, 337, 644, 645, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 646, 356, 357, 358, 360, 362, 359, 363,
	364, 365, 366, 1186, 1187, 367, 0, 274, 0, 0,
	0, 0, 0, 368, 369, 370, 649, 0, 0, 0,
	371, 0, 372, 373, 0, 0, 1197, 374, 375, 376,
	650, 651, 377, 378, 379, 380, 381, 382, 383, 384,
	385, 0, 386, 1193, 0, 653, 387, 0, 388, 389,
	390, 391, 392, 1156, 1157, 1160, 473, 1199, 393, 394,
	0, 395, 396, 397, 398, 399, 0, 0, 0, 275,
	400, 401, 402, 404, 0, 1198, 403, 657, 658, 0,
	659, 0, 405, 406, 1200, 1158, 1201, 407, 408, 409,
	1202, 410, 0, 0, 0, 411, 412, 413, 414, 415,
	416, 1239, 417, 419, 418, 0, 420, 1194, 1203, 421,
	422, 1204, 0, 423, 0, 0, 0, 424, 425, 428,
	1149, 1148, 426, 427, 429, 430, 0, 431, 432, 434,
	437, 433, 435, 436, 438, 451, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 453, 0,
	452, 1205, 454, 455, 456, 463, 465, 466, 461, 462,
	464, 467, 468, 458, 459, 460, 1206, 469, 457, 0,
	276, 1207, 470, 471, 0, 1159, 472, 663, 474, 475,
	0, 0, 476, 0, 0, 1245, 478, 479, 480, 0,
	0, 481, 482, 664, 1208, 483, 1209, 1188, 484, 485,
	477, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	0, 495, 496, 666, 497, 498, 499, 667, 500, 501,
	502, 1189, 503, 669, 504, 505, 0, 506, 507, 0,
	508, 509, 510, 511, 512, 513, 514, 670, 515, 516,
	518, 517, 519, 0, 520, 0, 521, 522, 523, 0,
	0, 0, 0, 0, 524, 0, 526, 527, 528, 529,
	525, 530, 531, 532, 533, 534, 0, 535, 536, 537,
	1210, 538, 539, 540, 541, 542, 671, 1247, 0, 544,
	545, 551, 552, 553, 546, 547, 554, 555, 556, 557,
	558, 0, 560, 561, 559, 562, 563, 564, 1152, 565,
	566, 548, 549, 567, 568, 1211, 569, 570, 571, 572,
	573, 574, 575, 672, 0, 576, 0, 577, 578, 579,
	581, 550, 582, 587, 588, 673, 583, 584, 585, 586,
	1190, 590, 591, 0, 592, 593, 0, 589, 580, 0,
	594, 595, 596, 597, 598, 599, 600, 361, 601, 0,
	602, 675, 676, 677, 678, 0, 611, 0, 603, 604,
	605, 1191, 606, 1192, 0, 607, 608, 609, 610, 0,
	612, 613, 0, 0, 614, 615, 616, 618, 619, 617,
	620, 1153, 621, 0, 0, 622, 623, 624, 681, 682,
	683, 0, 626, 625, 627, 684, 0, 628, 0, 1235,
	0, 1253, 629, 630, 685, 631, 632, 633, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 1155, 0, 1243, 0, 1241, 286, 287,
	1195, 288, 289, 290, 291, 292, 293, 635, 636, 0,
	294, 637, 295, 638, 0, 639, 296, 297, 298, 299,
	300, 301, 0, 1154, 0, 302, 640, 641, 642, 0,
	303, 304, 1161, 0, 1142, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 1196, 327, 328, 329, 1145, 1143, 1144,
	1151, 1147, 1146, 1150, 330, 331, 332, 333, 334, 0,
	335, 337, 644, 645, 0, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 347,
	348, 0, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 646, 356, 357, 358, 360, 362, 359, 363, 364,
	365, 366, 1186, 1187, 367, 0, 274, 0, 0, 0,
	0, 0, 368, 369, 370, 649, 0, 0, 0, 371,
	0, 372, 373, 0, 0, 1197, 374, 375, 376, 650,
	651, 377, 378, 379, 380, 381, 382, 383, 384, 385,
	0, 386, 1193, 0, 653, 387, 0, 388, 389, 390,
	391, 392, 1156, 1157, 1160, 473, 1199, 393, 394, 0,
	395, 396, 397, 398, 399, 0, 0, 0, 275, 400,
	401, 402, 404, 0, 1198, 403, 657, 658, 0, 659,
	0, 405, 406, 1200, 1158, 1201, 407, 408, 409, 1202,
	410, 0, 0, 0, 411, 412, 413, 414, 415, 416,
	1239, 417, 419, 418, 0, 420, 1194, 1203, 421, 422,
	1204, 0, 423, 0, 0, 0, 424, 425, 428, 1149,
	1148, 426, 427, 429, 430, 0, 431, 432, 434, 437,
	433, 435, 436, 438, 451, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 453, 0, 452,
	1205, 454, 455, 456, 463, 465, 466, 461, 462, 464,
	467, 468, 458, 459, 460, 1206, 469, 457, 0, 276,
	1207, 470, 471, 0, 1159, 472, 663, 474, 475, 0,
	0, 476, 0, 0, 1245, 478, 479, 480, 0, 0,
	481, 482, 664, 1208, 483, 1209, 1188, 484, 485, 477,
	486, 487, 488, 489, 490, 491, 492, 493, 494, 0,
	495, 496, 666, 497, 498, 499, 667, 500, 501, 502,
	1189, 503, 669, 504, 505, 0, 506, 507, 0, 508,
	509, 510, 511, 512, 513, 514, 670, 515, 516, 518,
	517, 519, 0, 520, 0, 521, 522, 523, 0, 0,
	0, 0, 0, 524, 0, 526, 527, 528, 529, 525,
	530, 531, 532, 533, 534, 0, 535, 536, 537, 1210,
	538, 539, 540, 541, 542, 671, 1247, 0, 544, 545,
	551, 552, 553, 546, 547, 554, 555, 556, 557, 558,
	0, 560, 561, 559, 562, 563, 564, 1152, 565, 566,
	548, 549, 567, 568, 1211, 569, 570, 571, 572, 573,
	574, 575, 672, 0, 576, 0, 577, 578, 579, 581,
	550, 582, 587, 588, 673, 583, 584, 585, 586, 1190,
	590, 591, 0, 592, 593, 0, 589, 580, 0, 594,
	595, 596, 597, 598, 599, 600, 361, 601, 0, 602,
	675, 676, 677, 678, 0, 611, 0, 603, 604, 605,
	1191, 606, 1192, 0, 607, 608, 609, 610, 0, 612,
	613, 0, 0, 614, 615, 616, 618, 619, 617, 620,
	1153, 621, 0, 0, 622, 623, 624, 681, 682, 683,
	0, 626, 625, 627, 684, 0, 628, 0, 0, 0,
	1253, 629, 630, 685, 631, 632, 633, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 1155, 0, 1243, 0, 1241, 286, 287, 1195,
	288, 289, 290, 291, 292, 293, 635, 636, 0, 294,
	637, 295, 638, 0, 639, 296, 297, 298, 299, 300,
	301, 0, 1154, 0, 302, 640, 641, 642, 0, 303,
	304, 1161, 0, 1142, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 1196, 327, 328, 329, 1145, 1143, 1144, 1151,
	1147, 1146, 1150, 330, 331, 332, 333, 334, 0, 335,
	337, 644, 645, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	646, 356, 357, 358, 360, 362, 359, 363, 364, 365,
	366, 1186, 1187, 367, 0, 274, 0, 0, 0, 0,
	0, 368, 369, 370, 649, 0, 0, 0, 371, 0,
	372, 373, 0, 0, 1197, 374, 375, 376, 650, 651,
	377, 378, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 1193, 0, 653, 387, 0, 388, 389, 390, 391,
	392, 1156, 1157, 1160, 473, 1199, 393, 394, 0, 395,
	396, 397, 398, 399, 0, 0, 0, 275, 400, 401,
	402, 404, 0, 1198, 403, 657, 658, 0, 659, 0,
	405, 406, 1200, 1158, 1201, 407, 408, 409, 1202, 410,
	0, 0, 0, 411, 412, 413, 414, 415, 416, 1239,
	417, 419, 418, 0, 420, 1194, 1203, 421, 422, 1204,
	0, 423, 0, 0, 0, 424, 425, 428, 1149, 1148,
	426, 427, 429, 430, 0, 431, 432, 434, 437, 433,
	435, 436, 438, 451, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 453, 0, 452, 1205,
	454, 455, 456, 463, 465, 466, 461, 462, 464, 467,
	468, 458, 459, 460, 1206, 469, 457, 0, 276, 1207,
	470, 471, 0, 1159, 472, 663, 474, 475, 0, 0,
	476, 0, 0, 1245, 478, 479, 480, 0, 0, 481,
	482, 664, 1208, 483, 1209, 1188, 484, 485, 477, 486,
	487, 488, 489, 490, 491, 492, 493, 494, 0, 495,
	496, 666, 497, 498, 499, 667, 500, 501, 502, 1189,
	503, 669, 504, 505, 0, 506, 507, 0, 508, 509,
	510, 511, 512, 513, 514, 670, 515, 516, 518, 517,
	519, 0, 520, 0, 521, 522, 523, 0, 0, 0,
	0, 0, 524, 0, 526, 527, 528, 529, 525, 530,
	531, 532, 533, 534, 0, 535, 536, 537, 1210, 538,
	539, 540, 541, 542, 671, 1247, 0, 544, 545, 551,
	552, 553, 546, 547, 554, 555, 556, 557, 558, 0,
	560, 561, 559, 562, 563, 564, 1152, 565, 566, 548,
	549, 567, 568, 1211, 569, 570, 571, 572, 573, 574,
	575, 672, 0, 576, 0, 577, 578, 579, 581, 550,
	582, 587, 588, 673, 583, 584, 585, 586, 1190, 590,
	591, 0, 592, 593, 0, 589, 580, 0, 594, 595,
	596, 597, 598, 599, 600, 361, 601, 0, 602, 675,
	676, 677, 678, 0, 611, 0, 603, 604, 605, 1191,
	606, 1192, 0, 607, 608, 609, 610, 0, 612, 613,
	0, 0, 614, 615, 616, 618, 619, 617, 620, 1153,
	621, 0, 0, 622, 623, 624, 681, 682, 683, 0,
	626, 625, 627, 684, 0, 628, 0, 0, 0, 1253,
	629, 630, 685, 631, 632, 633, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 1155, 0, 1243, 0, 1241, 286, 287, 1195, 288,
	289, 290, 291, 292, 293, 635, 636, 0, 294, 637,
	295, 638, 0, 639, 296, 297, 298, 299, 300, 301,
	0, 1154, 0, 302, 640, 641, 642, 0, 303, 304,
	1161, 0, 1142, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 1196, 327, 328, 329, 1145, 1143, 1144, 1151, 1147,
	1146, 1150, 330, 331, 332, 333, 334, 0, 335, 337,
	644, 645, 0, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 347, 348, 0,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 646,
	356, 357, 358, 360, 362, 359, 363, 364, 365, 366,
	1186, 1187, 367, 0, 274, 0, 0, 0, 0, 0,
	368, 369, 370, 649, 0, 0, 0, 371, 0, 372,
	373, 0, 0, 1197, 374, 375, 376, 650, 651, 377,
	378, 379, 380, 381, 382, 383, 384, 385, 0, 386,
	1193, 0, 653, 387, 0, 388, 389, 390, 391, 392,
	1156, 1157, 1160, 473, 1199, 393, 394, 0, 395, 396,
	397, 398, 399, 0, 0, 0, 275, 400, 401, 402,
	404, 0, 1198, 403, 657, 658, 0, 659, 0, 405,
	406, 1200, 1158, 1201, 407, 408, 409, 1202, 410, 0,
	0, 0, 411, 412, 413, 414, 415, 416, 0, 417,
	419, 418, 0, 420, 1194, 1203, 421, 422, 1204, 0,
	423, 0, 0, 0, 424, 425, 428, 1149, 1148, 426,
	427, 429, 430, 0, 431, 432, 434, 437, 433, 435,
	436, 438, 451, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 450, 453, 0, 452, 1205, 454,
	455, 456, 463, 465, 466, 461, 462, 464, 467, 468,
	458, 459, 460, 1206, 469, 457, 0, 276, 1207, 470,
	471, 0, 1159, 472, 663, 474, 475, 0, 0, 476,
	0, 0, 0, 478, 479, 480, 0, 0, 481, 482,
	664, 1208, 483, 1209, 1188, 484, 485, 477, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 0, 495, 496,
	666, 497, 498, 499, 667, 500, 501, 502, 1189, 503,
	669, 504, 505, 0, 506, 507, 0, 508, 509, 510,
	511, 512, 513, 514, 670, 515, 516, 518, 517, 519,
	0, 520, 0, 521, 522, 523, 0, 0, 0, 0,
	0, 524, 0, 526, 527, 528, 529, 525, 530, 531,
	532, 533, 534, 0, 535, 536, 537, 1210, 538, 539,
	540, 541, 542, 671, 543, 0, 544, 545, 551, 552,
	553, 546, 547, 554, 555, 556, 557, 558, 0, 560,
	561, 559, 562, 563, 564, 1152, 565, 566, 548, 549,
	567, 568, 1211, 569, 570, 571, 572, 573, 574, 575,
	672, 0, 576, 0, 577, 578, 579, 581, 550, 582,
	587, 588, 673, 583, 584, 585, 586, 1190, 590, 591,
	0, 592, 593, 0, 589, 580, 0, 594, 595, 596,
	597, 598, 599, 600, 361, 601, 0, 602, 675, 676,
	677, 678, 0, 611, 0, 603, 604, 605, 1191, 606,
	1192, 0, 607, 608, 609, 610, 0, 612, 613, 0,
	0, 614, 615, 616, 618, 619, 617, 620, 1153, 621,
	0, 0, 622, 623, 624, 681, 682, 683, 0, 626,
	625, 627, 684, 0, 628, 0, 0, 0, 1253, 629,
	630, 685, 631, 632, 633, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	1155, 0, 0, 0, 4180, 286, 287, 1195, 288, 289,
	290, 291, 292, 293, 635, 636, 0, 294, 637, 295,
	638, 0, 639, 296, 297, 298, 299, 300, 301, 0,
	1154, 0, 302, 640, 641, 642, 0, 303, 304, 1161,
	0, 1142, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	1196, 327, 328, 329, 1145, 1143, 1144, 1151, 1147, 1146,
	1150, 330, 331, 332, 333, 334, 0, 335, 337, 644,
	645, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 646, 356,
	357, 358, 360, 362, 359, 363, 364, 365, 366, 1186,
	1187, 367, 0, 274, 0, 0, 0, 0, 0, 368,
	369, 370, 649, 0, 0, 0, 371, 0, 372, 373,
	0, 0, 1197, 374, 375, 376, 650, 651, 377, 378,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 1193,
	0, 653, 387, 0, 388, 389, 390, 391, 392, 1156,
	1157, 1160, 473, 1199, 393, 394, 0, 395, 396, 397,
	398, 399, 0, 0, 0, 275, 400, 401, 402, 404,
	0, 1198, 403, 657, 658, 0, 659, 0, 405, 406,
	1200, 1158, 1201, 407, 408, 409, 1202, 410, 0, 0,
	0, 411, 412, 413, 414, 415, 416, 0, 417, 419,
	418, 0, 420, 1194, 1203, 421, 422, 1204, 0, 423,
	0, 0, 0, 424, 425, 428, 1149, 1148, 426, 427,
	429, 430, 0, 431, 432, 434, 437, 433, 435, 436,
	438, 451, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 453, 0, 452, 1205, 454, 455,
	456, 463, 465, 466, 461, 462, 464, 467, 468, 458,
	459, 460, 1206, 469, 457, 0, 276, 1207, 470, 471,
	0, 1159, 472, 663, 474, 475, 0, 0, 476, 0,
	0, 0, 478, 479, 480, 0, 0, 481, 482, 664,
	1208, 483, 1209, 1188, 484, 485, 477, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 0, 495, 496, 666,
	497, 498, 499, 667, 500, 501, 502, 1189, 503, 669,
	504, 505, 0, 506, 507, 0, 508, 509, 510, 511,
	512, 513, 514, 670, 515, 516, 518, 517, 519, 0,
	520, 0, 521, 522, 523, 0, 0, 0, 0, 0,
	524, 0, 526, 527, 528, 529, 525, 530, 531, 532,
	533, 534, 0, 535, 536, 537, 1210, 538, 539, 540,
	541, 542, 671, 1247, 0, 544, 545, 551, 552, 553,
	546, 547, 554, 555, 556, 557, 558, 0, 560, 561,
	559, 562, 563, 564, 1152, 565, 566, 548, 549, 567,
	568, 1211, 569, 570, 571, 572, 573, 574, 575, 672,
	0, 576, 0, 577, 578, 579, 581, 550, 582, 587,
	588, 673, 583, 584, 585, 586, 1190, 590, 591, 0,
	592, 593, 0, 589, 580, 0, 594, 595, 596, 597,
	598, 599, 600, 361, 601, 0, 602, 675, 676, 677,
	678, 0, 611, 0, 603, 604, 605, 1191, 606, 1192,
	0, 607, 608, 609, 610, 0, 612, 613, 0, 0,
	614, 615, 616, 618, 619, 617, 620, 1153, 621, 0,
	0, 622, 623, 624, 681, 682, 683, 0, 626, 625,
	627, 684, 0, 628, 271, 0, 0, 0, 629, 630,
	685, 631, 632, 633, 2552, 2553, 2554, 2571, 2572, 2573,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 2574, 0, 634, 0, 0, 0,
	0, 286, 287, 1863, 288, 289, 290, 291, 292, 293,
	635, 636, 0, 294, 637, 295, 638, 0, 639, 296,
	297, 298, 299, 300, 301, 0, 0, 1848, 302, 640,
	641, 642, 0, 303, 304, 643, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 2564, 0, 313, 314,
	315, 312, 316, 0, 317, 2560, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 337, 644, 645, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 646, 356, 357, 358, 360, 362,
	359, 363, 364, 365, 366, 647, 648, 367, 0, 0,
	0, 2565, 2566, 2567, 2568, 368, 369, 370, 649, 0,
	0, 2559, 371, 0, 372, 373, 0, 0, 0, 374,
	375, 376, 650, 651, 377, 378, 379, 380, 381, 382,
	383, 384, 385, 0, 386, 652, 0, 653, 387, 0,
	388, 389, 390, 391, 392, 654, 655, 656, 473, 0,
	393, 394, 0, 395, 396, 397, 398, 399, 0, 0,
	0, 0, 400, 401, 402, 404, 0, 0, 403, 657,
	658, 0, 659, 0, 405, 406, 0, 660, 0, 407,
	408, 409, 0, 410, 0, 2569, 2570, 411, 412, 413,
	414, 415, 416, 0, 417, 419, 418, 0, 420, 661,
	0, 421, 422, 0, 0, 423, 0, 0, 0, 424,
	425, 428, 0, 0, 426, 427, 429, 430, 2562, 431,
	432, 434, 437, 433, 435, 436, 438, 451, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	453, 0, 452, 0, 454, 455, 456, 463, 465, 466,
	461, 462, 464, 467, 468, 458, 459, 460, 0, 469,
	457, 0, 0, 0, 470, 471, 0, 662, 472, 663,
	474, 475, 0, 0, 476, 0, 0, 0, 478, 479,
	480, 0, 0, 481, 482, 664, 0, 483, 0, 665,
	484, 485, 477, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 0, 495, 496, 666, 497, 498, 499, 667,
	500, 501, 502, 668, 503, 669, 504, 505, 0, 506,
	507, 0, 508, 509, 510, 511, 512, 513, 514, 670,
	515, 516, 518, 517, 519, 0, 520, 0, 521, 522,
	523, 0, 0, 0, 0, 0, 524, 0, 526, 527,
	528, 529, 525, 530, 531, 532, 533, 534, 0, 535,
	536, 537, 0, 538, 539, 540, 541, 542, 671, 543,
	2563, 544, 545, 551, 552, 553, 546, 547, 554, 555,
	556, 557, 558, 0, 560, 561, 559, 562, 563, 564,
	0, 565, 566, 548, 549, 567, 568, 0, 569, 570,
	571, 572, 573, 574, 575, 672, 0, 576, 0, 577,
	578, 579, 581, 550, 582, 587, 588, 673, 583, 584,
	585, 586, 674, 590, 591, 0, 592, 593, 1847, 589,
	580, 0, 594, 595, 596, 597, 598, 599, 600, 361,
	601, 0, 602, 675, 676, 677, 678, 0, 611, 0,
	603, 604, 605, 679, 606, 680, 0, 607, 608, 609,
	610, 0, 612, 613, 0, 0, 614, 615, 616, 618,
	619, 617, 620, 0, 621, 0, 0, 622, 623, 624,
	681, 682, 683, 0, 626, 625, 627, 684, 0, 628,
	0, 0, 0, 0, 629, 630, 685, 631, 632, 633,
	0, 0, 0, 0, 0, 0, 0, 1075, 0, 1335,
	2549, 2550, 2551, 2575, 2561, 2555, 0, 2557, 2558, 2556,
	2543, 2544, 2545, 2546, 2547, 2548, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 634, 0, 0, 0, 0, 286, 287, 1195, 288,
	289, 290, 291, 292, 293, 635, 636, 0, 294, 637,
	295, 638, 0, 639, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 640, 641, 642, 0, 303, 304,
	643, 0, 1340, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 1196, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 335, 337,
	644, 645, 0, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 347, 348, 0,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 646,
	356, 357, 358, 360, 362, 359, 363, 364, 365, 366,
	647, 648, 367, 0, 274, 0, 0, 0, 0, 0,
	368, 369, 370, 649, 0, 0, 0, 371, 0, 372,
	373, 0, 0, 1197, 374, 375, 376, 650, 651, 377,
	378, 379, 380, 381, 382, 383, 384, 385, 0, 386,
	652, 0, 653, 387, 0, 388, 389, 390, 391, 392,
	654, 655, 656, 473, 1199, 393, 394, 0, 395, 396,
	397, 398, 399, 0, 0, 0, 0, 400, 401, 402,
	404, 0, 1198, 403, 657, 658, 0, 659, 0, 405,
	406, 1200, 660, 1201, 407, 408, 409, 1202, 410, 0,
	0, 0, 411, 412, 413, 414, 415, 416, 0, 417,
	419, 418, 0, 420, 661, 1203, 421, 422, 1204, 0,
	423, 0, 0, 0, 424, 425, 428, 0, 0, 426,
	427, 429, 430, 0, 431, 432, 434, 437, 433, 435,
	436, 438, 451, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 450, 453, 0, 452, 1205, 454,
	455, 456, 463, 465, 466, 461, 462, 464, 467, 468,
	458, 459, 460, 1206, 469, 457, 0, 0, 1207, 470,
	471, 0, 662, 472, 663, 474, 475, 0, 0, 476,
	0, 0, 0, 478, 479, 480, 0, 0, 481, 482,
	664, 1208, 483, 1209, 665, 484, 485, 477, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 0, 495, 496,
	666, 497, 498, 499, 667, 500, 501, 502, 668, 503,
	669, 504, 505, 0, 506, 507, 0, 508, 509, 510,
	511, 512, 513, 514, 670, 515, 516, 518, 517, 519,
	0, 520, 0, 521, 522, 523, 0, 0, 0, 0,
	0, 524, 0, 526, 527, 528, 529, 525, 530, 531,
	532, 533, 534, 0, 535, 536, 537, 1210, 538, 539,
	540, 541, 542, 671, 543, 0, 544, 545, 551, 552,
	553, 546, 547, 554, 555, 556, 557, 558, 236, 560,
	561, 559, 562, 563, 564, 0, 565, 566, 548, 549,
	567, 568, 1211, 569, 570, 571, 572, 573, 574, 575,
	672, 0, 576, 0, 577, 578, 579, 581, 550, 582,
	587, 588, 673, 583, 584, 585, 586, 674, 590, 591,
	0, 592, 593, 0, 589, 580, 238, 594, 595, 596,
	597, 598, 599, 600, 361, 601, 0, 602, 675, 676,
	677, 678, 0, 611, 0, 603, 604, 605, 679, 606,
	680, 0, 607, 608, 609, 610, 0, 612, 613, 0,
	0, 614, 615, 616, 618, 619, 617, 620, 0, 621,
	0, 0, 622, 623, 624, 1618, 682, 683, 0, 626,
	625, 627, 684, 0, 628, 0, 0, 0, 230, 629,
	630, 685, 631, 632, 633, 0, 0, 231, 1615, 0,
	1335, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 190, 284, 285, 0, 0, 0,
	0, 0, 634, 0, 0, 0, 0, 286, 287, 1195,
	288, 289, 290, 291, 292, 293, 635, 636, 0, 294,
	637, 295, 638, 0, 639, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 640, 641, 642, 0, 303,
	304, 643, 0, 1340, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 1196, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 644, 645, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	646, 356, 357, 358, 360, 362, 359, 363, 364, 365,
	366, 647, 648, 367, 0, 274, 0, 0, 0, 0,
	0, 368, 369, 370, 649, 0, 0, 0, 371, 0,
	372, 373, 0, 0, 1197, 374, 375, 376, 650, 651,
	377, 378, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 652, 0, 653, 387, 0, 388, 389, 390, 391,
	392, 654, 655, 656, 473, 1199, 393, 394, 0, 395,
	396, 397, 398, 399, 0, 0, 0, 0, 400, 401,
	402, 404, 0, 1198, 403, 657, 658, 0, 659, 0,
	405, 406, 1200, 660, 1201, 407, 408, 409, 1202, 410,
	0, 0, 0, 411, 412, 413, 414, 415, 416, 0,
	417, 419, 418, 0, 420, 661, 1203, 421, 422, 1204,
	0, 423, 0, 0, 0, 424, 425, 428, 0, 0,
	426, 427, 429, 430, 0, 431, 432, 434, 437, 433,
	435, 436, 438, 451, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 453, 0, 452, 1205,
	454, 455, 456, 463, 465, 466, 461, 462, 464, 467,
	468, 458, 459, 460, 1206, 469, 457, 0, 0, 1207,
	470, 471, 0, 662, 472, 663, 474, 475, 0, 0,
	476, 0, 0, 0, 478, 479, 480, 0, 0, 481,
	482, 664, 1208, 483, 1209, 665, 484, 485, 477, 486,
	487, 488, 489, 490, 491, 492, 493, 494, 0, 495,
	496, 666, 497, 498, 499, 667, 500, 501, 502, 668,
	503, 669, 504, 505, 0, 506, 507, 0, 508, 509,
	510, 511, 512, 513, 514, 670, 515, 516, 518, 517,
	519, 0, 520, 0, 521, 522, 523, 0, 0, 0,
	0, 0, 524, 0, 526, 527, 528, 529, 525, 530,
	531, 532, 533, 534, 0, 535, 536, 537, 1210, 538,
	539, 540, 541, 542, 671, 543, 0, 544, 545, 551,
	552, 553, 546, 547, 554, 555, 556, 557, 558, 236,
	560, 561, 559, 562, 563, 564, 0, 565, 566, 548,
	549, 567, 568, 1211, 569, 570, 571, 572, 573, 574,
	575, 672, 0, 576, 0, 577, 578, 579, 581, 550,
	582, 587, 588, 673, 583, 584, 585, 586, 674, 590,
	591, 0, 592, 593, 0, 589, 580, 238, 594, 595,
	596, 597, 598, 599, 600, 361, 601, 0, 602, 675,
	676, 677, 678, 0, 611, 0, 603, 604, 605, 679,
	606, 680, 0, 607, 608, 609, 610, 0, 612, 613,
	0, 0, 614, 615, 616, 618, 619, 617, 620, 0,
	621, 0, 0, 622, 623, 624, 1618, 682, 683, 0,
	626, 625, 627, 684, 0, 628, 0, 0, 0, 230,
	629, 630, 685, 631, 632, 633, 1335, 1334, 231, 0,
	0, 0, 1332, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 190, 0, 0, 634, 0,
	0, 0, 0, 286, 287, 1195, 288, 289, 290, 291,
	292, 293, 635, 636, 0, 294, 637, 295, 638, 0,
	639, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 640, 641, 642, 0, 303, 304, 643, 0, 1340,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 1196, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 337, 644, 645, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 646, 356, 357, 358,
	360, 362, 359, 363, 364, 365, 366, 647, 648, 367,
	0, 274, 0, 0, 0, 0, 0, 368, 369, 370,
	649, 0, 0, 0, 371, 0, 372, 373, 0, 0,
	1197, 374, 375, 376, 650, 651, 377, 378, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 652, 0, 653,
	387, 0, 388, 389, 390, 391, 392, 654, 655, 656,
	473, 1199, 393, 394, 0, 395, 396, 397, 398, 399,
	0, 0, 0, 0, 400, 401, 402, 404, 0, 1198,
	403, 657, 658, 0, 659, 0, 405, 406, 1200, 660,
	1201, 407, 408, 409, 1202, 410, 0, 0, 0, 411,
	412, 413, 414, 415, 416, 0, 417, 419, 418, 0,
	420, 661, 1203, 421, 422, 1204, 0, 423, 0, 0,
	0, 424, 425, 428, 0, 0, 426, 427, 429, 430,
	0, 431, 432, 434, 437, 433, 435, 436, 438, 451,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 453, 0, 452, 1205, 454, 455, 456, 463,
	465, 466, 461, 462, 464, 467, 468, 458, 459, 460,
	1206, 469, 457, 0, 0, 1207, 470, 471, 0, 662,
	472, 663, 474, 475, 0, 0, 476, 0, 0, 0,
	478, 479, 480, 0, 0, 481, 482, 664, 1208, 483,
	1209, 665, 484, 485, 477, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 0, 495, 496, 666, 497, 498,
	499, 667, 500, 501, 502, 668, 503, 669, 504, 505,
	0, 506, 507, 0, 508, 509, 510, 511, 512, 513,
	514, 670, 515, 516, 518, 517, 519, 0, 520, 0,
	521, 522, 523, 0, 0, 0, 0, 0, 524, 0,
	526, 527, 528, 529, 525, 530, 531, 532, 533, 534,
	0, 535, 536, 537, 1210, 538, 539, 540, 541, 542,
	671, 543, 0, 544, 545, 551, 552, 553, 546, 547,
	554, 555, 556, 557, 558, 0, 560, 561, 559, 562,
	563, 564, 0, 565, 566, 548, 549, 567, 568, 1211,
	569, 570, 571, 572, 573, 574, 575, 672, 0, 576,
	0, 577, 578, 579, 581, 550, 582, 587, 588, 673,
	583, 584, 585, 586, 674, 590, 591, 0, 592, 593,
	0, 589, 580, 0, 594, 595, 596, 597, 598, 599,
	600, 361, 601, 0, 602, 675, 676, 677, 678, 0,
	611, 0, 603, 604, 605, 679, 606, 680, 0, 607,
	608, 609, 610, 0, 612, 613, 0, 0, 614, 615,
	616, 618, 619, 617, 620, 0, 621, 0, 0, 622,
	623, 624, 681, 682, 683, 0, 626, 625, 627, 684,
	0, 628, 0, 0, 0, 0, 629, 630, 685, 631,
	632, 633, 1335, 1334, 0, 0, 0, 0, 1332, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 1640, 0, 0, 634, 0, 0, 0, 0, 286,
	287, 1195, 288, 289, 290, 291, 292, 293, 635, 636,
	0, 294, 637, 295, 638, 0, 639, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 640, 641, 642,
	0, 303, 304, 643, 0, 1340, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 1196, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 337, 644, 645, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 646, 356, 357, 358, 360, 362, 359, 363,
	364, 365, 366, 647, 648, 367, 0, 274, 0, 0,
	0, 0, 0, 368, 369, 370, 649, 0, 0, 0,
	371, 0, 372, 373, 0, 0, 1197, 374, 375, 376,
	650, 651, 377, 378, 379, 380, 381, 382, 383, 384,
	385, 0, 386, 652, 0, 653, 387, 0, 388, 389,
	390, 391, 392, 654, 655, 656, 473, 1199, 393, 394,
	0, 395, 396, 397, 398, 399, 0, 0, 0, 0,
	400, 401, 402, 404, 0, 1198, 403, 657, 658, 0,
	659, 0, 405, 406, 1200, 660, 1201, 407, 408, 409,
	1202, 410, 0, 0, 0, 411, 412, 413, 414, 415,
	416, 0, 417, 419, 418, 0, 420, 661, 1203, 421,
	422, 1204, 0, 423, 0, 0, 0, 424, 425, 428,
	0, 0, 426, 427, 429, 430, 0, 431, 432, 434,
	437, 433, 435, 436, 438, 451, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 453, 0,
	452, 1205, 454, 455, 456, 463, 465, 466, 461, 462,
	464, 467, 468, 458, 459, 460, 1206, 469, 457, 0,
	0, 1207, 470, 471, 0, 662, 472, 663, 474, 475,
	0, 0, 476, 0, 0, 0, 478, 479, 480, 0,
	0, 481, 482, 664, 1208, 483, 1209, 665, 484, 485,
	477, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	0, 495, 496, 666, 497, 498, 499, 667, 500, 501,
	502, 668, 503, 669, 504, 505, 0, 506, 507, 0,
	508, 509, 510, 511, 512, 513, 514, 670, 515, 516,
	518, 517, 519, 0, 520, 0, 521, 522, 523, 0,
	0, 0, 0, 0, 524, 0, 526, 527, 528, 529,
	525, 530, 531, 532, 533, 534, 0, 535, 536, 537,
	1210, 538, 539, 540, 541, 542, 671, 543, 0, 544,
	545, 551, 552, 553, 546, 547, 554, 555, 556, 557,
	558, 0, 560, 561, 559, 562, 563, 564, 0, 565,
	566, 548, 549, 567, 568, 1211, 569, 570, 571, 572,
	573, 574, 575, 672, 0, 576, 0, 577, 578, 579,
	581, 550, 582, 587, 588, 673, 583, 584, 585, 586,
	674, 590, 591, 0, 592, 593, 0, 589, 580, 0,
	594, 595, 596, 597, 598, 599, 600, 361, 601, 0,
	602, 675, 676, 677, 678, 0, 611, 0, 603, 604,
	605, 679, 606, 680, 0, 607, 608, 609, 610, 0,
	612, 613, 0, 0, 614, 615, 616, 618, 619, 617,
	620, 0, 621, 0, 0, 622, 623, 624, 681, 682,
	683, 0, 626, 625, 627, 684, 0, 628, 0, 0,
	0, 0, 629, 630, 685, 631, 632, 633, 1335, 1334,
	0, 0, 0, 0, 1332, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 3643, 0, 0,
	634, 0, 0, 0, 0, 286, 287, 1195, 288, 289,
	290, 291, 292, 293, 635, 636, 0, 294, 637, 295,
	638, 0, 639, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 640, 641, 642, 0, 303, 304, 643,
	0, 1340, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	1196, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 337, 644,
	645, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 646, 356,
	357, 358, 360, 362, 359, 363, 364, 365, 366, 647,
	648, 367, 0, 274, 0, 0, 0, 0, 0, 368,
	369, 370, 649, 0, 0, 0, 371, 0, 372, 373,
	0, 0, 1197, 374, 375, 376, 650, 651, 377, 378,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 652,
	0, 653, 387, 0, 388, 389, 390, 391, 392, 654,
	655, 656, 473, 1199, 393, 394, 0, 395, 396, 397,
	398, 399, 0, 0, 0, 0, 400, 401, 402, 404,
	0, 1198, 403, 657, 658, 0, 659, 0, 405, 406,
	1200, 660, 1201, 407, 408, 409, 1202, 410, 0, 0,
	0, 411, 412, 413, 414, 415, 416, 0, 417, 419,
	418, 0, 420, 661, 1203, 421, 422, 1204, 0, 423,
	0, 0, 0, 424, 425, 428, 0, 0, 426, 427,
	429, 430, 0, 431, 432, 434, 437, 433, 435, 436,
	438, 451, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 453, 0, 452, 1205, 454, 455,
	456, 463, 465, 466, 461, 462, 464, 467, 468, 458,
	459, 460, 1206, 469, 457, 0, 0, 1207, 470, 471,
	0, 662, 472, 663, 474, 475, 0, 0, 476, 0,
	0, 0, 478, 479, 480, 0, 0, 481, 482, 664,
	1208, 483, 1209, 665, 484, 485, 477, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 0, 495, 496, 666,
	497, 498, 499, 667, 500, 501, 502, 668, 503, 669,
	504, 505, 0, 506, 507, 0, 508, 509, 510, 511,
	512, 513, 514, 670, 515, 516, 518, 517, 519, 0,
	520, 0, 521, 522, 523, 0, 0, 0, 0, 0,
	524, 0, 526, 527, 528, 2321, 525, 530, 531, 532,
	533, 534, 0, 535, 536, 537, 1210, 538, 539, 540,
	541, 542, 671, 543, 0, 544, 545, 551, 552, 553,
	546, 547, 554, 555, 556, 557, 558, 0, 560, 561,
	559, 562, 563, 564, 0, 565, 566, 548, 549, 567,
	568, 1211, 569, 570, 571, 572, 573, 574, 575, 672,
	0, 576, 0, 577, 578, 579, 581, 550, 582, 587,
	588, 673, 583, 584, 585, 586, 674, 590, 591, 0,
	592, 593, 0, 589, 580, 0, 594, 595, 596, 597,
	598, 599, 600, 361, 601, 0, 602, 675, 676, 677,
	678, 0, 611, 0, 603, 604, 605, 679, 606, 680,
	0, 607, 608, 609, 610, 0, 612, 613, 0, 0,
	614, 615, 616, 618, 619, 617, 620, 0, 621, 0,
	0, 622, 623, 624, 681, 682, 683, 0, 626, 625,
	627, 684, 0, 628, 0, 0, 0, 0, 629, 630,
	685, 631, 632, 633, 1335, 2232, 0, 0, 0, 0,
	2233, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 1640, 0, 0, 634, 0, 0, 0,
	0, 286, 287, 1195, 288, 289, 290, 291, 292, 293,
	635, 636, 0, 294, 637, 295, 638, 0, 639, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 640,
	641, 642, 0, 303, 304, 643, 0, 1340, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 1196, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 337, 644, 645, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 646, 356, 357, 358, 360, 362,
	359, 363, 364, 365, 366, 647, 648, 367, 0, 274,
	0, 0, 0, 0, 0, 368, 369, 370, 649, 0,
	0, 0, 371, 0, 372, 373, 0, 0, 1197, 374,
	375, 376, 650, 651, 377, 378, 379, 380, 381, 382,
	383, 384, 385, 0, 386, 652, 0, 653, 387, 0,
	388, 389, 390, 391, 392, 654, 655, 656, 473, 1199,
	393, 394, 0, 395, 396, 397, 398, 399, 0, 0,
	0, 0, 400, 401, 402, 404, 0, 1198, 403, 657,
	658, 0, 659, 0, 405, 406, 1200, 660, 1201, 407,
	408, 409, 1202, 410, 0, 0, 0, 411, 412, 413,
	414, 415, 416, 0, 2231, 419, 418, 0, 420, 661,
	1203, 421, 422, 1204, 0, 423, 0, 0, 0, 424,
	425, 428, 0, 0, 426, 427, 429, 430, 0, 431,
	432, 434, 437, 433, 435, 436, 438, 451, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	453, 0, 452, 1205, 454, 455, 456, 463, 465, 466,
	461, 462, 464, 467, 468, 458, 459, 460, 1206, 469,
	457, 0, 0, 1207, 470, 471, 0, 662, 472, 663,
	474, 475, 0, 0, 476, 0, 0, 0, 478, 479,
	480, 0, 0, 481, 482, 664, 1208, 483, 1209, 665,
	484, 485, 477, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 0, 495, 496, 666, 497, 498, 499, 667,
	500, 501, 502, 668, 503, 669, 504, 505, 0, 506,
	507, 0, 508, 509, 510, 511, 512, 513, 514, 670,
	515, 516, 518, 517, 519, 0, 520, 0, 521, 522,
	523, 0, 0, 0, 0, 0, 524, 0, 526, 527,
	528, 529, 525, 530, 531, 532, 533, 534, 0, 535,
	536, 537, 1210, 538, 539, 540, 541, 542, 671, 543,
	0, 544, 545, 551, 552, 553, 546, 547, 554, 555,
	556, 557, 558, 0, 560, 561, 559, 562, 563, 564,
	0, 565, 566, 548, 549, 567, 568, 1211, 569, 570,
	571, 572, 573, 574, 575, 672, 0, 576, 0, 577,
	578, 579, 581, 550, 582, 587, 588, 673, 583, 584,
	585, 586, 674, 590, 591, 0, 592, 593, 0, 589,
	580, 0, 594, 595, 596, 597, 598, 599, 600, 361,
	601, 0, 602, 675, 676, 677, 678, 0, 611, 0,
	603, 604, 605, 679, 606, 680, 0, 607, 608, 609,
	610, 0, 612, 613, 0, 0, 614, 615, 616, 618,
	619, 617, 620, 0, 621, 0, 0, 622, 623, 624,
	681, 682, 683, 0, 626, 625, 627, 684, 0, 628,
	0, 0, 0, 0, 629, 630, 685, 631, 632, 633,
	1335, 1334, 0, 0, 0, 0, 1332, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 1640,
	0, 0, 634, 0, 0, 0, 0, 286, 287, 1195,
	288, 289, 290, 291, 292, 293, 635, 636, 0, 294,
	637, 295, 638, 0, 639, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 640, 641, 642, 0, 303,
	304, 643, 0, 1340, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 1196, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 644, 645, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	646, 356, 357, 358, 360, 362, 359, 363, 364, 365,
	366, 647, 648, 367, 0, 274, 0, 0, 0, 0,
	0, 368, 369, 370, 649, 0, 0, 0, 371, 0,
	372, 373, 0, 0, 1197, 374, 375, 376, 650, 651,
	377, 378, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 652, 0, 653, 387, 0, 388, 389, 390, 391,
	392, 654, 655, 656, 473, 1199, 393, 394, 0, 395,
	396, 397, 398, 399, 0, 0, 0, 0, 400, 401,
	402, 404, 0, 1198, 403, 657, 658, 0, 659, 0,
	405, 406, 1200, 660, 1201, 407, 408, 409, 1202, 410,
	0, 0, 0, 411, 412, 413, 414, 415, 416, 0,
	417, 419, 418, 0, 420, 661, 1203, 421, 422, 1204,
	0, 423, 0, 0, 0, 424, 425, 428, 0, 0,
	426, 427, 429, 430, 0, 431, 432, 434, 437, 433,
	435, 436, 438, 451, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 453, 0, 452, 1205,
	454, 455, 456, 463, 465, 466, 461, 462, 464, 467,
	468, 458, 459, 460, 1206, 469, 457, 0, 0, 1207,
	470, 471, 0, 662, 472, 663, 474, 475, 0, 0,
	476, 0, 0, 0, 478, 479, 480, 0, 0, 481,
	482, 664, 1208, 483, 1209, 665, 484, 485, 477, 486,
	487, 488, 489, 490, 491, 492, 493, 494, 0, 495,
	496, 666, 497, 498, 499, 667, 500, 501, 502, 668,
	503, 669, 504, 505, 0, 506, 507, 0, 508, 509,
	510, 511, 512, 513, 514, 670, 515, 516, 518, 517,
	519, 0, 520, 0, 521, 522, 523, 0, 0, 0,
	0, 0, 524, 0, 526, 527, 528, 529, 525, 530,
	531, 532, 533, 534, 0, 535, 536, 537, 1210, 538,
	539, 540, 541, 542, 671, 543, 0, 544, 545, 551,
	552, 553, 546, 547, 554, 555, 556, 557, 558, 0,
	560, 561, 559, 562, 563, 564, 0, 565, 566, 548,
	549, 567, 568, 1211, 569, 570, 571, 572, 573, 574,
	575, 672, 0, 576, 0, 577, 578, 579, 581, 550,
	582, 587, 588, 673, 583, 584, 585, 586, 674, 590,
	591, 0, 592, 593, 0, 589, 580, 0, 594, 595,
	596, 597, 598, 599, 600, 361, 601, 0, 602, 675,
	676, 677, 678, 0, 611, 0, 603, 604, 605, 679,
	606, 680, 0, 607, 608, 609, 610, 0, 612, 613,
	0, 0, 614, 615, 616, 618, 619, 617, 620, 0,
	621, 0, 0, 622, 623, 624, 681, 682, 683, 0,
	626, 625, 627, 684, 1075, 628, 271, 0, 0, 0,
	629, 630, 685, 631, 632, 633, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 634, 0,
	0, 0, 0, 286, 287, 1624, 288, 289, 290, 291,
	292, 293, 635, 636, 0, 294, 637, 295, 638, 0,
	639, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 640, 641, 642, 0, 303, 304, 643, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 337, 644, 645, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 646, 356, 357, 358,
	360, 362, 359, 363, 364, 365, 366, 647, 648, 367,
	0, 0, 0, 0, 0, 0, 0, 368, 369, 370,
	649, 0, 0, 0, 371, 0, 372, 373, 0, 0,
	0, 374, 375, 376, 650, 651, 377, 378, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 652, 0, 653,
	387, 0, 388, 389, 390, 391, 392, 654, 655, 656,
	473, 0, 393, 394, 0, 395, 396, 397, 398, 399,
	0, 0, 0, 0, 400, 401, 402, 404, 0, 0,
	403, 657, 658, 0, 659, 0, 405, 406, 0, 660,
	0, 407, 408, 409, 0, 410, 0, 0, 0, 411,
	412, 413, 414, 415, 416, 0, 417, 419, 418, 0,
	420, 661, 0, 421, 422, 0, 0, 423, 0, 0,
	0, 424, 425, 428, 0, 0, 426, 427, 429, 430,
	0, 431, 432, 434, 437, 433, 435, 436, 438, 451,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 453, 0, 452, 0, 454, 455, 456, 463,
	465, 466, 461, 462, 464, 467, 468, 458, 459, 460,
	0, 469, 457, 0, 0, 0, 470, 471, 0, 662,
	472, 663, 474, 475, 0, 0, 476, 0, 0, 0,
	478, 479, 480, 0, 0, 481, 482, 664, 0, 483,
	0, 665, 484, 485, 477, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 0, 495, 496, 666, 497, 498,
	499, 667, 500, 501, 502, 668, 503, 669, 504, 505,
	0, 506, 507, 0, 508, 509, 510, 511, 512, 513,
	514, 670, 515, 516, 518, 517, 519, 0, 520, 0,
	521, 522, 523, 0, 0, 0, 0, 0, 524, 0,
	526, 527, 528, 529, 525, 530, 531, 532, 533, 534,
	0, 535, 536, 537, 0, 538, 539, 540, 541, 542,
	671, 543, 0, 544, 545, 551, 552, 553, 546, 547,
	554, 555, 556, 557, 558, 236, 560, 561, 559, 562,
	563, 564, 0, 565, 566, 548, 549, 567, 568, 0,
	569, 570, 571, 572, 573, 574, 575, 672, 0, 576,
	0, 577, 578, 579, 581, 550, 582, 587, 588, 673,
	583, 584, 585, 586, 674, 590, 591, 0, 592, 593,
	0, 589, 580, 238, 594, 595, 596, 597, 598, 599,
	600, 361, 601, 0, 602, 675, 676, 677, 678, 0,
	611, 0, 603, 604, 605, 679, 606, 680, 0, 607,
	608, 609, 610, 0, 612, 613, 0, 0, 614, 615,
	616, 618, 619, 617, 620, 0, 621, 0, 0, 622,
	623, 624, 1618, 682, 683, 0, 626, 625, 627, 684,
	0, 628, 271, 0, 0, 230, 629, 630, 685, 631,
	632, 633, 0, 0, 231, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 634, 0, 0, 0, 0, 286,
	287, 190, 288, 289, 290, 291, 292, 293, 635, 636,
	0, 294, 637, 295, 638, 0, 639, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 640, 641, 642,
	0, 303, 304, 643, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 337, 644, 645, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 646, 356, 357, 358, 360, 362, 359, 363,
	364, 365, 366, 647, 648, 367, 0, 274, 0, 0,
	0, 0, 0, 368, 369, 370, 649, 0, 0, 0,
	371, 0, 372, 373, 0, 0, 0, 374, 375, 376,
	650, 651, 377, 378, 379, 380, 381, 382, 383, 384,
	385, 0, 386, 652, 0, 653, 387, 0, 388, 389,
	390, 391, 392, 654, 655, 656, 473, 0, 393, 394,
	0, 395, 396, 397, 398, 399, 0, 0, 0, 275,
	400, 401, 402, 404, 0, 0, 403, 657, 658, 0,
	659, 0, 405, 406, 0, 660, 0, 407, 408, 409,
	0, 410, 0, 0, 0, 411, 412, 413, 414, 415,
	416, 0, 417, 419, 418, 0, 420, 661, 0, 421,
	422, 0, 0, 423, 0, 0, 0, 424, 425, 428,
	0, 0, 426, 427, 429, 430, 0, 431, 432, 434,
	437, 433, 435, 436, 438, 451, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 453, 0,
	452, 0, 454, 455, 456, 463, 465, 466, 461, 462,
	464, 467, 468, 458, 459, 460, 0, 469, 457, 0,
	276, 0, 470, 471, 0, 662, 472, 663, 474, 475,
	0, 0, 476, 0, 0, 0, 478, 479, 480, 0,
	0, 481, 482, 664, 0, 483, 0, 665, 484, 485,
	477, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	0, 495, 496, 666, 497, 498, 499, 667, 500, 501,
	502, 668, 503, 669, 504, 505, 0, 506, 507, 0,
	508, 509, 510, 511, 512, 513, 514, 670, 515, 516,
	518, 517, 519, 0, 520, 0, 521, 522, 523, 0,
	0, 0, 0, 0, 524, 0, 526, 527, 528, 529,
	525, 530, 531, 532, 533, 534, 0, 535, 536, 537,
	0, 538, 539, 540, 541, 542, 671, 543, 0, 544,
	545, 551, 552, 553, 546, 547, 554, 555, 556, 557,
	558, 0, 560, 561, 559, 562, 563, 564, 0, 565,
	566, 548, 549, 567, 568, 0, 569, 570, 571, 572,
	573, 574, 575, 672, 0, 576, 0, 577, 578, 579,
	581, 550, 582, 587, 588, 673, 583, 584, 585, 586,
	674, 590, 591, 0, 592, 593, 0, 589, 580, 0,
	594, 595, 596, 597, 598, 599, 600, 361, 601, 0,
	602, 675, 676, 677, 678, 0, 611, 0, 603, 604,
	605, 679, 606, 680, 0, 607, 608, 609, 610, 0,
	612, 613, 0, 0, 614, 615, 616, 618, 619, 617,
	620, 0, 621, 0, 0, 622, 623, 624, 681, 682,
	683, 0, 626, 625, 627, 684, 0, 628, 0, 0,
	0, 1253, 629, 630, 685, 631, 632, 633, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 1155, 0, 0, 0, 1980, 286, 287,
	1195, 288, 289, 290, 291, 292, 293, 635, 636, 0,
	294, 637, 295, 638, 0, 639, 296, 297, 298, 299,
	300, 301, 0, 1154, 0, 302, 640, 641, 642, 0,
	303, 304, 1161, 0, 1142, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 1196, 327, 328, 329, 1145, 1143, 1144,
	1151, 1147, 1146, 1150, 330, 331, 332, 333, 334, 0,
	335, 337, 644, 645, 0, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 347,
	348, 0, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 646, 356, 357, 358, 360, 362, 359, 363, 364,
	365, 366, 1186, 1187, 367, 0, 274, 0, 0, 0,
	0, 0, 368, 369, 370, 649, 0, 0, 0, 371,
	0, 372, 373, 0, 0, 1197, 374, 375, 376, 650,
	651, 377, 378, 379, 380, 381, 382, 383, 384, 385,
	0, 386, 1193, 0, 653, 387, 0, 388, 389, 390,
	391, 392, 1156, 1157, 1160, 473, 1199, 393, 394, 0,
	395, 396, 397, 398, 399, 0, 0, 0, 275, 400,
	401, 402, 404, 0, 1198, 403, 657, 658, 0, 659,
	0, 405, 406, 1200, 1158, 1201, 407, 408, 409, 1202,
	410, 0, 0, 0, 411, 412, 413, 414, 415, 416,
	0, 417, 419, 418, 0, 420, 1194, 1203, 421, 422,
	1204, 0, 423, 0, 0, 0, 424, 425, 428, 1149,
	1148, 426, 427, 429, 430, 0, 431, 432, 434, 437,
	433, 435, 436, 438, 451, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 453, 0, 452,
	1205, 454, 455, 456, 463, 465, 466, 461, 462, 464,
	467, 468, 458, 459, 460, 1206, 469, 457, 0, 276,
	1207, 470, 471, 0, 1159, 472, 663, 474, 475, 0,
	0, 476, 0, 0, 0, 478, 479, 480, 0, 0,
	481, 482, 664, 1208, 483, 1209, 1188, 484, 485, 477,
	486, 487, 488, 489, 490, 491, 492, 493, 494, 0,
	495, 496, 666, 497, 498, 499, 667, 500, 501, 502,
	1189, 503, 669, 504, 505, 0, 506, 507, 0, 508,
	509, 510, 511, 512, 513, 514, 670, 515, 516, 518,
	517, 519, 0, 520, 0, 521, 522, 523, 0, 0,
	0, 0, 0, 524, 0, 526, 527, 528, 529, 525,
	530, 531, 532, 533, 534, 0, 535, 536, 537, 1210,
	538, 539, 540, 541, 542, 671, 543, 0, 544, 545,
	551, 552, 553, 546, 547, 554, 555, 556, 557, 558,
	0, 560, 561, 559, 562, 563, 564, 1152, 565, 566,
	548, 549, 567, 568, 1211, 569, 570, 571, 572, 573,
	574, 575, 672, 0, 576, 0, 577, 578, 579, 581,
	550, 582, 587, 588, 673, 583, 584, 585, 586, 1190,
	590, 591, 0, 592, 593, 0, 589, 580, 0, 594,
	595, 596, 597, 598, 599, 600, 361, 601, 0, 602,
	675, 676, 677, 678, 0, 611, 0, 603, 604, 605,
	1191, 606, 1192, 0, 607, 608, 609, 610, 0, 612,
	613, 0, 0, 614, 615, 616, 618, 619, 617, 620,
	1153, 621, 0, 0, 622, 623, 624, 681, 682, 683,
	0, 626, 625, 627, 684, 0, 628, 271, 3087, 0,
	0, 629, 630, 685, 631, 632, 633, 0, 0, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 634,
	0, 0, 0, 0, 286, 287, 0, 288, 289, 290,
	291, 292, 293, 635, 636, 0, 294, 637, 295, 638,
	0, 639, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 640, 641, 642, 0, 303, 304, 643, 0,
	0, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 337, 644, 645,
	0, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 347, 348, 0, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 646, 356, 357,
	358, 360, 362, 359, 363, 364, 365, 366, 647, 648,
	367, 0, 0, 0, 0, 0, 0, 0, 368, 369,
	370, 649, 0, 0, 0, 371, 0, 372, 373, 0,
	0, 0, 374, 375, 376, 650, 651, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 652, 0,
	653, 387, 0, 388, 389, 390, 391, 392, 654, 655,
	656, 473, 0, 393, 394, 0, 395, 396, 397, 398,
	399, 0, 0, 0, 0, 400, 401, 402, 404, 0,
	0, 403, 657, 658, 0, 659, 0, 405, 406, 0,
	660, 0, 407, 408, 409, 0, 410, 0, 0, 0,
	411, 412, 413, 414, 415, 416, 0, 417, 419, 418,
	0, 420, 661, 0, 421, 422, 0, 0, 423, 0,
	0, 0, 424, 425, 428, 0, 0, 426, 427, 429,
	430, 0, 431, 432, 434, 437, 433, 435, 436, 438,
	451, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 453, 0, 452, 0, 454, 455, 456,
	463, 465, 466, 461, 462, 464, 467, 468, 458, 459,
	460, 0, 469, 457, 0, 0, 0, 470, 471, 0,
	662, 472, 663, 474, 475, 0, 0, 476, 0, 0,
	0, 478, 479, 480, 0, 0, 481, 482, 664, 0,
	483, 0, 665, 484, 485, 477, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 0, 495, 496, 666, 497,
	498, 499, 667, 500, 501, 502, 668, 503, 669, 504,
	505, 0, 506, 507, 0, 508, 509, 510, 511, 512,
	513, 514, 670, 515, 516, 518, 517, 519, 0, 520,
	0, 521, 522, 523, 0, 0, 0, 0, 0, 524,
	0, 526, 527, 528, 529, 525, 530, 531, 532, 533,
	534, 0, 535, 536, 537, 0, 538, 539, 540, 541,
	542, 671, 543, 0, 544, 545, 551, 552, 553, 546,
	547, 554, 555, 556, 557, 558, 0, 560, 561, 559,
	562, 563, 564, 0, 565, 566, 548, 549, 567, 568,
	0, 569, 570, 571, 572, 573, 574, 575, 672, 0,
	576, 0, 577, 578, 579, 581, 550, 582, 587, 588,
	673, 583, 584, 585, 586, 674, 590, 591, 0, 592,
	593, 0, 589, 580, 0, 594, 595, 596, 597, 598,
	599, 600, 361, 601, 0, 602, 675, 676, 677, 678,
	0, 611, 0, 603, 604, 605, 679, 606, 680, 0,
	607, 608, 609, 610, 0, 612, 613, 0, 0, 614,
	615, 616, 618, 619, 617, 620, 0, 621, 0, 0,
	622, 623, 624, 681, 682, 683, 0, 626, 625, 627,
	684, 0, 628, 271, 0, 0, 0, 629, 630, 685,
	631, 632, 633, 0, 0, 0, 0, 0, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 634, 0, 0, 0, 0,
	286, 287, 4905, 288, 289, 290, 291, 292, 293, 635,
	636, 0, 294, 637, 295, 638, 0, 639, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 640, 641,
	642, 0, 303, 304, 643, 0, 0, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 337, 644, 645, 0, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 347, 348, 0, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 646, 356, 357, 358, 360, 362, 359,
	363, 364, 365, 366, 647, 648, 367, 0, 274, 0,
	0, 0, 0, 0, 368, 369, 370, 649, 0, 0,
	0, 371, 0, 372, 373, 0, 0, 0, 374, 375,
	376, 650, 651, 377, 378, 379, 380, 381, 382, 383,
	384, 385, 0, 386, 652, 0, 653, 387, 0, 388,
	389, 390, 391, 392, 654, 655, 656, 473, 0, 393,
	394, 0, 395, 396, 397, 398, 399, 0, 0, 0,
	275, 400, 401, 402, 404, 0, 0, 403, 657, 658,
	0, 659, 0, 405, 406, 0, 660, 0, 407, 408,
	409, 0, 410, 0, 0, 0, 411, 412, 413, 414,
	415, 416, 0, 417, 419, 418, 0, 420, 661, 0,
	421, 422, 0, 0, 423, 0, 0, 0, 424, 425,
	428, 0, 0, 426, 427, 429, 430, 0, 431, 432,
	434, 437, 433, 435, 436, 438, 451, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 450, 453,
	0, 452, 0, 454, 455, 456, 463, 465, 466, 461,
	462, 464, 467, 468, 458, 459, 460, 0, 469, 457,
	0, 276, 0, 470, 471, 0, 662, 472, 663, 474,
	475, 0, 0, 476, 0, 0, 0, 478, 479, 480,
	0, 0, 481, 482, 664, 0, 483, 0, 665, 484,
	485, 477, 486, 487, 488, 489, 490, 491, 492, 493,
	494, 0, 495, 496, 666, 497, 498, 499, 667, 500,
	501, 502, 668, 503, 669, 504, 505, 0, 506, 507,
	0, 508, 509, 510, 511, 512, 513, 514, 670, 515,
	516, 518, 517, 519, 0, 520, 0, 521, 522, 523,
	0, 0, 0, 0, 0, 524, 0, 526, 527, 528,
	529, 525, 530, 531, 532, 533, 534, 0, 535, 536,
	537, 0, 538, 539, 540, 541, 542, 671, 543, 0,
	544, 545, 551, 552, 553, 546, 547, 554, 555, 556,
	557, 558, 0, 560, 561, 559, 562, 563, 564, 0,
	565, 566, 548, 549, 567, 568, 0, 569, 570, 571,
	572, 573, 574, 575, 672, 0, 576, 0, 577, 578,
	579, 581, 550, 582, 587, 588, 673, 583, 584, 585,
	586, 674, 590, 591, 0, 592, 593, 0, 589, 580,
	0, 594, 595, 596, 597, 598, 599, 600, 361, 601,
	0, 602, 675, 676, 677, 678, 0, 611, 0, 603,
	604, 605, 679, 606, 680, 0, 607, 608, 609, 610,
	0, 612, 613, 0, 0, 614, 615, 616, 618, 619,
	617, 620, 0, 621, 0, 0, 622, 623, 624, 681,
	682, 683, 0, 626, 625, 627, 684, 271, 628, 0,
	0, 0, 0, 629, 630, 685, 631, 632, 633, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 634,
	0, 0, 0, 0, 286, 287, 3593, 288, 289, 290,
	291, 292, 293, 635, 636, 0, 294, 637, 295, 638,
	0, 639, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 640, 641, 642, 0, 303, 304, 643, 0,
	0, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 337, 644, 645,
	0, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 347, 348, 0, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 646, 356, 357,
	358, 360, 362, 359, 363, 364, 365, 366, 647, 648,
	367, 0, 274, 0, 0, 0, 0, 0, 368, 369,
	370, 649, 0, 0, 0, 371, 0, 372, 373, 0,
	0, 0, 374, 375, 376, 650, 651, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 652, 0,
	653, 387, 0, 388, 389, 390, 391, 392, 654, 655,
	656, 473, 0, 393, 394, 0, 395, 396, 397, 398,
	399, 0, 0, 0, 275, 400, 401, 402, 404, 0,
	0, 403, 657, 658, 0, 659, 0, 405, 406, 0,
	660, 0, 407, 408, 409, 0, 410, 0, 0, 0,
	411, 412, 413, 414, 415, 416, 0, 417, 419, 418,
	0, 420, 661, 0, 421, 422, 0, 0, 423, 0,
	0, 0, 424, 425, 428, 0, 0, 426, 427, 429,
	430, 0, 431, 432, 434, 437, 433, 435, 436, 438,
	451, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 453, 0, 452, 0, 454, 455, 456,
	463, 465, 466, 461, 462, 464, 467, 468, 458, 459,
	460, 0, 469, 457, 0, 276, 0, 470, 471, 0,
	662, 472, 663, 474, 475, 0, 0, 476, 0, 0,
	0, 478, 479, 480, 0, 0, 481, 482, 664, 0,
	483, 0, 665, 484, 485, 477, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 0, 495, 496, 666, 497,
	498, 499, 667, 500, 501, 502, 668, 503, 669, 504,
	505, 0, 506, 507, 0, 508, 509, 510, 511, 512,
	513, 514, 670, 515, 516, 518, 517, 519, 0, 520,
	0, 521, 522, 523, 0, 0, 0, 0, 0, 524,
	0, 526, 527, 528, 529, 525, 530, 531, 532, 533,
	534, 0, 535, 536, 537, 0, 538, 539, 540, 541,
	542, 671, 543, 0, 544, 545, 551, 552, 553, 546,
	547, 554, 555, 556, 557, 558, 0, 560, 561, 559,
	562, 563, 564, 0, 565, 566, 548, 549, 567, 568,
	0, 569, 570, 571, 572, 573, 574, 575, 672, 0,
	576, 0, 577, 578, 579, 581, 550, 582, 587, 588,
	673, 583, 584, 585, 586, 674, 590, 591, 0, 592,
	593, 0, 589, 580, 0, 594, 595, 596, 597, 598,
	599, 600, 361, 601, 0, 602, 675, 676, 677, 678,
	0, 611, 0, 603, 604, 605, 679, 606, 680, 0,
	607, 608, 609, 610, 0, 612, 613, 0, 0, 614,
	615, 616, 618, 619, 617, 620, 0, 621, 0, 0,
	622, 623, 624, 681, 682, 683, 0, 626, 625, 627,
	684, 271, 628, 0, 0, 0, 0, 629, 630, 685,
	631, 632, 633, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 634, 0, 0, 0, 0, 286, 287,
	1612, 288, 289, 290, 291, 292, 293, 635, 636, 0,
	294, 637, 295, 638, 0, 639, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 640, 641, 642, 0,
	303, 304, 643, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 337, 644, 645, 0, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 347,
	348, 0, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 646, 356, 357, 358, 360, 362, 359, 363, 364,
	365, 366, 647, 648, 367, 0, 0, 0, 0, 0,
	0, 0, 368, 369, 370, 649, 0, 0, 0, 371,
	0, 372, 373, 0, 0, 0, 374, 375, 376, 650,
	651, 377, 378, 379, 380, 381, 382, 383, 384, 385,
	0, 386, 652, 0, 653, 387, 0, 388, 389, 390,
	391, 392, 654, 655, 656, 473, 0, 393, 394, 0,
	395, 396, 397, 398, 399, 0, 0, 0, 0, 400,
	401, 402, 404, 0, 0, 403, 657, 658, 0, 659,
	0, 405, 406, 0, 660, 0, 407, 408, 409, 0,
	410, 0, 0, 0, 411, 412, 413, 414, 415, 416,
	0, 417, 419, 418, 0, 420, 661, 0, 421, 422,
	0, 0, 423, 0, 0, 0, 424, 425, 428, 0,
	0, 426, 427, 429, 430, 0, 431, 432, 434, 437,
	433, 435, 436, 438, 451, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 453, 0, 452,
	0, 454, 455, 456, 463, 465, 466, 461, 462, 464,
	467, 468, 458, 459, 460, 0, 469, 457, 0, 0,
	0, 470, 471, 0, 662, 472, 663, 474, 475, 0,
	0, 476, 0, 0, 0, 478, 479, 480, 0, 0,
	481, 482, 664, 0, 483, 0, 665, 484, 485, 477,
	486, 487, 488, 489, 490, 491, 492, 493, 494, 0,
	495, 496, 666, 497, 498, 499, 667, 500, 501, 502,
	668, 503, 669, 504, 505, 0, 506, 507, 0, 508,
	509, 510, 511, 512, 513, 514, 670, 515, 516, 518,
	517, 519, 0, 520, 0, 521, 522, 523, 0, 0,
	0, 0, 0, 524, 0, 526, 527, 528, 529, 525,
	530, 531, 532, 533, 534, 0, 535, 536, 537, 0,
	538, 539, 540, 541, 542, 671, 543, 0, 544, 545,
	551, 552, 553, 546, 547, 554, 555, 556, 557, 558,
	0, 560, 561, 559, 562, 563, 564, 0, 565, 566,
	548, 549, 567, 568, 0, 569, 570, 571, 572, 573,
	574, 575, 672, 0, 576, 0, 577, 578, 579, 581,
	550, 582, 587, 588, 673, 583, 584, 585, 586, 674,
	590, 591, 0, 592, 593, 0, 589, 580, 0, 594,
	595, 596, 597, 598, 599, 600, 361, 601, 0, 602,
	675, 676, 677, 678, 0, 611, 0, 603, 604, 605,
	679, 606, 680, 0, 607, 608, 609, 610, 0, 612,
	613, 0, 0, 614, 615, 616, 618, 619, 617, 620,
	0, 621, 0, 0, 622, 623, 624, 681, 682, 683,
	0, 626, 625, 627, 684, 0, 628, 271, 0, 0,
	0, 629, 630, 685, 631, 632, 633, 0, 0, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 634,
	0, 0, 0, 0, 286, 287, 3075, 288, 289, 290,
	291, 292, 293, 635, 636, 0, 294, 637, 295, 638,
	0, 639, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 640, 641, 642, 0, 303, 304, 643, 0,
	0, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 337, 644, 645,
	0, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 347, 348, 0, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 646, 356, 357,
	358, 360, 362, 359, 363, 364, 365, 366, 647, 648,
	367, 0, 0, 0, 0, 0, 0, 0, 368, 369,
	370, 649, 0, 0, 0, 371, 0, 372, 373, 0,
	0, 0, 374, 375, 376, 650, 651, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 652, 0,
	653, 387, 0, 388, 389, 390, 391, 392, 654, 655,
	656, 473, 0, 393, 394, 0, 395, 396, 397, 398,
	399, 0, 0, 0, 0, 400, 401, 402, 404, 0,
	0, 403, 657, 658, 0, 659, 0, 405, 406, 0,
	660, 0, 407, 408, 409, 0, 410, 0, 0, 0,
	411, 412, 413, 414, 415, 416, 0, 417, 419, 418,
	0, 420, 661, 0, 421, 422, 0, 0, 423, 0,
	0, 0, 424, 425, 428, 0, 0, 426, 427, 429,
	430, 0, 431, 432, 434, 437, 433, 435, 436, 438,
	451, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 453, 0, 452, 0, 454, 455, 456,
	463, 465, 466, 461, 462, 464, 467, 468, 458, 459,
	460, 0, 469, 457, 0, 0, 0, 470, 471, 0,
	662, 472, 663, 474, 475, 0, 0, 476, 0, 0,
	0, 478, 479, 480, 0, 0, 481, 482, 664, 0,
	483, 0, 665, 484, 485, 477, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 0, 495, 496, 666, 497,
	498, 499, 667, 500, 501, 502, 668, 503, 669, 504,
	505, 0, 506, 507, 0, 508, 509, 510, 511, 512,
	513, 514, 670, 515, 516, 518, 517, 519, 0, 520,
	0, 521, 522, 523, 0, 0, 0, 0, 0, 524,
	0, 526, 527, 528, 529, 525, 530, 531, 532, 533,
	534, 0, 535, 536, 537, 0, 538, 539, 540, 541,
	542, 671, 543, 0, 544, 545, 551, 552, 553, 546,
	547, 554, 555, 556, 557, 558, 0, 560, 561, 559,
	562, 563, 564, 0, 565, 566, 548, 549, 567, 568,
	0, 569, 570, 571, 572, 573, 574, 575, 672, 0,
	576, 0, 577, 578, 579, 581, 550, 582, 587, 588,
	673, 583, 584, 585, 586, 674, 590, 591, 0, 592,
	593, 0, 589, 580, 0, 594, 595, 596, 597, 598,
	599, 600, 361, 601, 0, 602, 675, 676, 677, 678,
	0, 611, 0, 603, 604, 605, 679, 606, 680, 0,
	607, 608, 609, 610, 0, 612, 613, 0, 0, 614,
	615, 616, 618, 619, 617, 620, 0, 621, 0, 0,
	622, 623, 624, 681, 682, 683, 0, 626, 625, 627,
	684, 0, 628, 271, 0, 0, 0, 629, 630, 685,
	631, 632, 633, 0, 0, 0, 0, 0, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 634, 0, 0, 0, 0,
	286, 287, 3756, 288, 289, 290, 291, 292, 293, 635,
	636, 0, 294, 637, 295, 638, 0, 639, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 640, 641,
	642, 0, 303, 304, 643, 0, 0, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 337, 644, 645, 0, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 347, 348, 0, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 646, 356, 357, 358, 360, 362, 359,
	363, 364, 365, 366, 647, 648, 367, 0, 0, 0,
	0, 0, 0, 0, 368, 369, 370, 649, 0, 0,
	0, 371, 0, 372, 373, 0, 0, 0, 374, 375,
	376, 650, 651, 377, 378, 379, 380, 381, 382, 383,
	384, 385, 0, 386, 652, 0, 653, 387, 0, 388,
	389, 390, 391, 392, 654, 655, 656, 473, 0, 393,
	394, 0, 395, 396, 397, 398, 399, 0, 0, 0,
	0, 400, 401, 402, 404, 0, 0, 403, 657, 658,
	0, 659, 0, 405, 406, 0, 660, 0, 407, 408,
	409, 0, 410, 0, 0, 0, 411, 412, 413, 414,
	415, 416, 0, 417, 419, 418, 0, 420, 661, 0,
	421, 422, 0, 0, 423, 0, 0, 0, 424, 425,
	428, 0, 0, 426, 427, 429, 430, 0, 431, 432,
	434, 437, 433, 435, 436, 438, 451, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 450, 453,
	0, 452, 0, 454, 455, 456, 463, 465, 466, 461,
	462, 464, 467, 468, 458, 459, 460, 0, 469, 457,
	0, 0, 0, 470, 471, 0, 662, 472, 663, 474,
	475, 0, 0, 476, 0, 0, 0, 478, 479, 480,
	0, 0, 481, 482, 664, 0, 483, 0, 665, 484,
	485, 477, 486, 487, 488, 489, 490, 491, 492, 493,
	494, 0, 495, 496, 666, 497, 498, 499, 667, 500,
	501, 502, 668, 503, 669, 504, 505, 0, 506, 507,
	0, 508, 509, 510, 511, 512, 513, 514, 670, 515,
	516, 518, 517, 519, 0, 520, 0, 521, 522, 523,
	0, 0, 0, 0, 0, 524, 0, 526, 527, 528,
	529, 525, 530, 531, 532, 533, 534, 0, 535, 536,
	537, 0, 538, 539, 540, 541, 542, 671, 543, 0,
	544, 545, 551, 552, 553, 546, 547, 554, 555, 556,
	557, 558, 0, 560, 561, 559, 562, 563, 564, 0,
	565, 566, 548, 549, 567, 568, 0, 569, 570, 571,
	572, 573, 574, 575, 672, 0, 576, 0, 577, 578,
	579, 581, 550, 582, 587, 588, 673, 583, 584, 585,
	586, 674, 590, 591, 0, 592, 593, 0, 589, 580,
	0, 594, 595, 596, 597, 598, 599, 600, 361, 601,
	0, 602, 675, 676, 677, 678, 0, 611, 0, 603,
	604, 605, 679, 606, 680, 0, 607, 608, 609, 610,
	0, 612, 613, 0, 0, 614, 615, 616, 618, 619,
	617, 620, 0, 621, 0, 0, 622, 623, 624, 681,
	682, 683, 0, 626, 625, 627, 684, 907, 628, 812,
	0, 0, 0, 629, 630, 685, 631, 632, 633, 0,
	0, 0, 0, 0, 0, 0, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 634, 0, 0, 0, 0, 286, 287, 2310, 288,
	289, 290, 291, 292, 293, 635, 636, 0, 294, 637,
	295, 638, 0, 639, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 640, 641, 642, 0, 303, 304,
	643, 0, 0, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 819, 334, 0, 335, 337,
	644, 645, 0, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 347, 348, 0,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 646,
	356, 357, 358, 360, 362, 359, 363, 364, 365, 366,
	647, 648, 367, 0, 274, 0, 0, 0, 0, 0,
	368, 369, 370, 649, 0, 0, 0, 371, 0, 372,
	373, 0, 905, 0, 374, 375, 376, 650, 651, 377,
	378, 379, 380, 381, 382, 383, 384, 385, 0, 386,
	652, 0, 653, 387, 0, 388, 389, 390, 391, 392,
	654, 655, 656, 473, 0, 393, 394, 0, 395, 396,
	397, 398, 399, 0, 0, 0, 275, 400, 401, 402,
	404, 0, 0, 403, 657, 658, 0, 659, 0, 405,
	406, 0, 660, 0, 407, 408, 409, 0, 410, 0,
	0, 0, 411, 412, 413, 414, 415, 416, 0, 417,
	419, 418, 0, 420, 661, 0, 421, 422, 0, 0,
	423, 0, 0, 0, 424, 425, 428, 0, 0, 426,
	427, 429, 430, 0, 431, 432, 434, 437, 433, 435,
	436, 438, 451, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 450, 453, 0, 452, 0, 454,
	455, 456, 463, 465, 466, 461, 462, 464, 467, 468,
	458, 459, 460, 0, 469, 457, 0, 276, 0, 470,
	471, 0, 662, 472, 663, 474, 475, 0, 0, 476,
	0, 0, 0, 478, 479, 480, 0, 0, 481, 482,
	664, 0, 483, 0, 665, 484, 485, 477, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 0, 495, 496,
	666, 497, 498, 499, 667, 500, 501, 502, 668, 503,
	669, 504, 505, 0, 506, 507, 0, 508, 509, 510,
	511, 512, 513, 514, 670, 515, 516, 518, 517, 519,
	0, 520, 0, 521, 522, 523, 0, 0, 0, 0,
	0, 524, 0, 526, 527, 528, 529, 525, 530, 531,
	532, 533, 534, 0, 535, 536, 537, 0, 538, 539,
	540, 541, 542, 671, 543, 0, 544, 545, 551, 552,
	553, 546, 547, 554, 555, 556, 557, 558, 0, 560,
	561, 559, 562, 563, 564, 0, 565, 566, 548, 549,
	567, 568, 0, 569, 570, 571, 572, 573, 574, 575,
	672, 0, 576, 0, 577, 578, 579, 581, 550, 582,
	587, 588, 673, 583, 584, 585, 586, 674, 590, 591,
	0, 592, 593, 0, 589, 580, 817, 594, 595, 596,
	597, 598, 818, 600, 361, 601, 0, 602, 675, 676,
	677, 678, 0, 611, 0, 603, 604, 605, 679, 606,
	680, 0, 607, 608, 609, 610, 0, 612, 613, 0,
	0, 614, 615, 616, 618, 619, 617, 620, 0, 621,
	0, 0, 622, 623, 624, 681, 682, 683, 812, 626,
	625, 627, 684, 0, 628, 0, 0, 0, 0, 629,
	630, 685, 631, 632, 633, 277, 279, 278, 280, 281,
	282, 283, 2049, 284, 285, 0, 0, 0, 0, 0,
	634, 0, 0, 0, 0, 286, 287, 822, 288, 289,
	290, 291, 292, 293, 635, 636, 0, 294, 637, 295,
	638, 0, 639, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 640, 641, 642, 0, 303, 304, 643,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 819, 334, 0, 335, 337, 644,
	645, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 646, 356,
	357, 358, 360, 362, 359, 363, 364, 365, 366, 647,
	648, 367, 0, 274, 0, 0, 0, 0, 0, 368,
	369, 370, 649, 0, 0, 0, 371, 0, 372, 373,
	0, 0, 0, 374, 375, 376, 650, 651, 377, 378,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 652,
	0, 653, 387, 0, 388, 389, 390, 391, 392, 654,
	655, 656, 473, 0, 393, 394, 0, 395, 396, 397,
	398, 399, 0, 0, 0, 275, 400, 401, 402, 404,
	0, 0, 403, 657, 658, 0, 659, 0, 405, 406,
	0, 660, 0, 407, 408, 409, 0, 410, 0, 0,
	0, 411, 412, 413, 414, 415, 416, 0, 417, 419,
	418, 0, 420, 661, 0, 421, 422, 0, 0, 423,
	0, 0, 0, 424, 425, 428, 0, 0, 426, 427,
	429, 430, 0, 431, 432, 434, 437, 433, 435, 436,
	438, 451, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 453, 0, 452, 0, 454, 455,
	456, 463, 465, 466, 461, 462, 464, 467, 468, 458,
	459, 460, 0, 469, 457, 0, 276, 0, 470, 471,
	0, 662, 472, 663, 474, 475, 0, 0, 476, 0,
	0, 0, 478, 479, 480, 0, 0, 481, 482, 664,
	0, 483, 0, 665, 484, 485, 477, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 0, 495, 496, 666,
	497, 498, 499, 667, 500, 501, 502, 668, 503, 669,
	504, 505, 0, 506, 507, 0, 508, 509, 510, 511,
	512, 513, 514, 670, 515, 516, 518, 517, 519, 0,
	520, 0, 521, 522, 523, 0, 0, 0, 0, 0,
	524, 0, 526, 527, 528, 529, 525, 530, 531, 532,
	533, 534, 0, 535, 536, 537, 0, 538, 539, 540,
	541, 542, 671, 543, 0, 544, 545, 551, 552, 553,
	546, 547, 2048, 555, 556, 557, 558, 0, 2050, 561,
	559, 562, 563, 564, 0, 565, 566, 548, 549, 567,
	568, 0, 569, 570, 571, 572, 573, 574, 575, 672,
	0, 576, 0, 577, 578, 579, 581, 550, 582, 587,
	588, 673, 583, 584, 585, 586, 674, 590, 591, 0,
	592, 593, 0, 589, 580, 817, 594, 595, 596, 597,
	598, 818, 600, 361, 601, 0, 602, 675, 676, 677,
	678, 0, 611, 0, 603, 604, 605, 679, 606, 680,
	0, 607, 608, 2047, 610, 0, 612, 613, 0, 0,
	614, 615, 616, 618, 619, 617, 620, 0, 621, 0,
	0, 622, 623, 624, 681, 682, 683, 812, 626, 625,
	627, 684, 0, 628, 0, 0, 0, 0, 629, 630,
	685, 631, 632, 633, 277, 279, 278, 280, 281, 282,
	283, 2000, 284, 285, 0, 0, 0, 0, 0, 634,
	0, 0, 0, 0, 286, 287, 822, 288, 289, 290,
	291, 292, 293, 635, 636, 0, 294, 637, 295, 638,
	0, 639, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 640, 641, 642, 0, 303, 304, 643, 0,
	0, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 819, 334, 0, 335, 337, 644, 645,
	0, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 347, 348, 0, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 646, 356, 357,
	358, 360, 362, 359, 363, 364, 365, 366, 647, 648,
	367, 0, 274, 0, 0, 0, 0, 0, 368, 369,
	370, 649, 0, 0, 0, 371, 0, 372, 373, 0,
	0, 0, 374, 375, 376, 650, 651, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 652, 0,
	653, 387, 0, 388, 389, 390, 391, 392, 654, 655,
	656, 473, 0, 393, 394, 0, 395, 396, 397, 398,
	399, 0, 0, 0, 275, 400, 401, 402, 404, 0,
	0, 403, 657, 658, 0, 659, 0, 405, 406, 0,
	660, 0, 407, 408, 409, 0, 410, 0, 0, 0,
	411, 412, 413, 414, 415, 416, 0, 417, 419, 418,
	0, 420, 661, 0, 421, 422, 0, 0, 423, 0,
	0, 0, 424, 425, 428, 0, 0, 426, 427, 429,
	430, 0, 431, 432, 434, 437, 433, 435, 436, 438,
	451, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 453, 0, 452, 0, 454, 455, 456,
	463, 465, 466, 461, 462, 464, 467, 468, 458, 459,
	460, 0, 469, 457, 0, 276, 0, 470, 471, 0,
	662, 472, 663, 474, 475, 0, 0, 476, 0, 0,
	0, 478, 479, 480, 0, 0, 481, 482, 664, 0,
	483, 0, 665, 484, 485, 477, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 0, 495, 496, 666, 497,
	498, 499, 667, 500, 501, 502, 668, 503, 669, 504,
	505, 0, 506, 507, 0, 508, 509, 510, 511, 512,
	513, 514, 670, 515, 516, 518, 517, 519, 0, 520,
	0, 521, 522, 523, 0, 0, 0, 0, 0, 524,
	0, 526, 527, 528, 529, 525, 530, 531, 532, 533,
	534, 0, 535, 536, 537, 0, 538, 539, 540, 541,
	542, 671, 543, 0, 544, 545, 551, 552, 553, 546,
	547, 1999, 555, 556, 557, 558, 0, 2001, 561, 559,
	562, 563, 564, 0, 565, 566, 548, 549, 567, 568,
	0, 569, 570, 571, 572, 573, 574, 575, 672, 0,
	576, 0, 577, 578, 579, 581, 550, 582, 587, 588,
	673, 583, 584, 585, 586, 674, 590, 591, 0, 592,
	593, 0, 589, 580, 817, 594, 595, 596, 597, 598,
	818, 600, 361, 601, 0, 602, 675, 676, 677, 678,
	0, 611, 0, 603, 604, 605, 679, 606, 680, 0,
	607, 608, 1998, 610, 0, 612, 613, 0, 0, 614,
	615, 616, 618, 619, 617, 620, 0, 621, 0, 0,
	622, 623, 624, 681, 682, 683, 0, 626, 625, 627,
	684, 0, 628, 810, 0, 812, 0, 629, 630, 685,
	631, 632, 633, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 822, 0, 634, 0, 0,
	0, 0, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 635, 636, 0, 294, 637, 295, 638, 0, 639,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	640, 641, 642, 0, 303, 304, 643, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 819, 334, 0, 335, 337, 644, 645, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 646, 356, 357, 358, 360,
	362, 359, 363, 364, 365, 366, 647, 648, 367, 0,
	274, 0, 0, 0, 0, 0, 368, 369, 370, 649,
	0, 0, 0, 371, 0, 372, 373, 0, 0, 0,
	374, 375, 376, 650, 651, 377, 378, 379, 380, 381,
	382, 383, 384, 385, 0, 386, 652, 0, 653, 387,
	0, 388, 389, 390, 391, 392, 654, 655, 656, 473,
	0, 393, 394, 0, 395, 396, 397, 398, 399, 0,
	0, 0, 275, 400, 401, 402, 404, 0, 0, 403,
	657, 658, 0, 659, 0, 405, 406, 0, 660, 0,
	407, 408, 409, 0, 410, 0, 0, 0, 411, 412,
	413, 414, 415, 416, 0, 417, 419, 418, 0, 420,
	661, 0, 421, 422, 0, 0, 423, 0, 0, 0,
	424, 425, 428, 0, 0, 426, 427, 429, 430, 0,
	431, 432, 434, 437, 433, 435, 436, 438, 451, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 453, 0, 452, 0, 454, 455, 456, 463, 465,
	466, 461, 462, 464, 467, 468, 458, 459, 460, 0,
	469, 457, 0, 276, 0, 470, 471, 0, 662, 472,
	663, 474, 475, 0, 0, 476, 0, 0, 0, 478,
	479, 480, 0, 0, 481, 482, 664, 0, 483, 0,
	665, 484, 485, 477, 486, 487, 488, 489, 490, 491,
	492, 493, 494, 0, 495, 496, 666, 497, 498, 499,
	667, 500, 501, 502, 668, 503, 669, 504, 505, 0,
	506, 507, 0, 508, 509, 510, 511, 512, 513, 514,
	670, 515, 516, 518, 517, 519, 0, 520, 0, 521,
	522, 523, 0, 0, 0, 0, 0, 524, 0, 526,
	527, 528, 529, 525, 530, 531, 532, 533, 534, 0,
	535, 536, 537, 0, 538, 539, 540, 541, 542, 671,
	543, 0, 544, 545, 551, 552, 553, 546, 547, 554,
	555, 556, 557, 558, 0, 560, 561, 559, 562, 563,
	564, 0, 565, 566, 548, 549, 567, 568, 0, 569,
	570, 571, 572, 573, 574, 575, 672, 0, 576, 0,
	577, 578, 579, 581, 550, 582, 587, 588, 673, 583,
	584, 585, 586, 674, 590, 591, 0, 592, 593, 0,
	589, 580, 817, 594, 595, 596, 597, 598, 818, 600,
	361, 601, 0, 602, 675, 676, 677, 678, 0, 611,
	0, 603, 604, 605, 679, 606, 680, 0, 607, 608,
	609, 610, 0, 612, 613, 0, 0, 614, 615, 616,
	618, 619, 617, 620, 0, 621, 0, 0, 622, 623,
	624, 681, 682, 683, 0, 626, 625, 627, 684, 2022,
	628, 0, 0, 0, 0, 629, 630, 685, 631, 632,
	633, 0, 0, 0, 0, 0, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 0, 0, 822, 0, 0, 286, 287, 1195, 288,
	289, 290, 291, 292, 293, 0, 2028, 0, 294, 2018,
	295, 2034, 0, 2041, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 2044, 2045, 0, 0, 303, 304,
	0, 0, 1340, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 1196, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 1178, 335, 337,
	2032, 2031, 0, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 1163, 348, 0,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 0,
	356, 357, 358, 360, 362, 359, 363, 364, 365, 366,
	0, 0, 367, 0, 0, 0, 0, 0, 0, 0,
	368, 369, 370, 2030, 0, 0, 0, 371, 0, 372,
	373, 0, 0, 1197, 374, 375, 376, 2039, 2040, 377,
	378, 379, 380, 381, 382, 383, 384, 385, 0, 386,
	0, 0, 0, 387, 0, 388, 389, 390, 391, 392,
	0, 0, 0, 473, 1199, 393, 394, 0, 395, 396,
	397, 398, 399, 0, 0, 0, 0, 400, 401, 402,
	404, 0, 1198, 403, 2025, 2026, 0, 2021, 0, 405,
	406, 1200, 0, 1201, 407, 408, 409, 1202, 410, 0,
	0, 0, 411, 412, 413, 414, 415, 416, 0, 417,
	419, 418, 0, 420, 0, 1203, 421, 422, 1204, 0,
	423, 0, 0, 0, 424, 425, 428, 0, 0, 426,
	427, 429, 430, 0, 431, 432, 434, 437, 433, 435,
	436, 438, 451, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 450, 453, 0, 452, 1205, 454,
	455, 456, 463, 465, 466, 461, 462, 464, 467, 468,
	458, 459, 460, 1206, 469, 457, 0, 0, 1207, 470,
	471, 0, 0, 472, 2033, 474, 475, 0, 0, 476,
	0, 0, 0, 478, 479, 480, 0, 0, 481, 482,
	0, 1208, 483, 1209, 0, 484, 485, 477, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 0, 495, 496,
	2015, 497, 498, 499, 2016, 500, 501, 502, 0, 503,
	0, 504, 505, 0, 506, 507, 0, 508, 509, 510,
	511, 512, 513, 514, 2029, 515, 516, 518, 517, 519,
	0, 520, 0, 521, 522, 523, 0, 0, 0, 0,
	0, 524, 0, 526, 527, 528, 529, 525, 530, 531,
	532, 533, 534, 0, 535, 536, 537, 1210, 538, 539,
	540, 541, 542, 0, 543, 0, 544, 545, 551, 552,
	553, 546, 547, 554, 555, 556, 557, 558, 0, 560,
	561, 559, 562, 563, 564, 0, 565, 566, 548, 549,
	567, 568, 1211, 569, 570, 571, 572, 573, 574, 575,
	2027, 0, 576, 0, 577, 578, 579, 581, 550, 582,
	587, 588, 2043, 583, 584, 585, 586, 0, 590, 591,
	0, 592, 593, 0, 589, 580, 0, 594, 595, 596,
	597, 598, 599, 600, 361, 601, 0, 602, 2035, 2036,
	2037, 2038, 0, 611, 0, 603, 604, 605, 0, 606,
	0, 0, 607, 608, 609, 610, 0, 612, 613, 0,
	0, 614, 615, 616, 618, 619, 617, 620, 0, 621,
	0, 0, 622, 623, 624, 0, 2019, 2042, 0, 626,
	625, 627, 0, 0, 628, 0, 0, 0, 0, 629,
	630, 0, 631, 632, 633, 812, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 634, 2009, 0,
	0, 0, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 635, 636, 0, 294, 637, 295, 638, 0, 639,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	640, 641, 642, 0, 303, 304, 643, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 819, 334, 0, 335, 337, 644, 645, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 646, 356, 357, 358, 360,
	362, 359, 363, 364, 365, 366, 647, 648, 367, 0,
	274, 0, 0, 0, 0, 0, 368, 369, 370, 649,
	0, 0, 0, 371, 0, 372, 373, 0, 0, 0,
	374, 375, 376, 650, 651, 377, 378, 379, 380, 381,
	382, 383, 384, 385, 0, 386, 652, 0, 653, 387,
	0, 388, 389, 390, 391, 392, 654, 655, 656, 473,
	0, 393, 394, 0, 395, 396, 397, 398, 399, 0,
	0, 0, 275, 400, 401, 402, 404, 0, 0, 403,
	657, 658, 0, 659, 0, 405, 406, 0, 660, 0,
	407, 408, 409, 0, 410, 0, 0, 0, 411, 412,
	413, 414, 415, 416, 0, 417, 419, 418, 0, 420,
	661, 0, 421, 422, 0, 0, 423, 0, 0, 0,
	424, 425, 428, 0, 0, 426, 427, 429, 430, 0,
	431, 432, 434, 437, 433, 435, 436, 438, 451, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 453, 0, 452, 0, 454, 455, 456, 463, 465,
	466, 461, 462, 464, 467, 468, 458, 459, 460, 0,
	469, 457, 0, 276, 0, 470, 471, 0, 662, 472,
	663, 474, 475, 0, 0, 476, 0, 0, 0, 478,
	479, 480, 0, 0, 481, 482, 664, 0, 483, 0,
	665, 484, 485, 477, 486, 487, 488, 489, 490, 491,
	492, 493, 494, 0, 495, 496, 666, 497, 498, 499,
	667, 500, 501, 502, 668, 503, 669, 504, 505, 0,
	506, 507, 0, 508, 509, 510, 511, 512, 513, 514,
	670, 515, 516, 518, 517, 519, 0, 520, 0, 521,
	522, 523, 0, 0, 0, 0, 0, 524, 0, 526,
	527, 528, 529, 525, 530, 531, 532, 533, 534, 0,
	535, 536, 537, 0, 538, 539, 540, 541, 542, 671,
	543, 0, 544, 545, 551, 552, 553, 546, 547, 554,
	555, 556, 557, 558, 0, 560, 561, 559, 562, 563,
	564, 0, 565, 566, 548, 549, 567, 568, 0, 569,
	570, 571, 572, 573, 574, 575, 672, 0, 576, 0,
	577, 578, 579, 581, 550, 582, 587, 588, 673, 583,
	584, 585, 586, 674, 590, 591, 0, 592, 593, 0,
	589, 580, 817, 594, 595, 596, 597, 598, 818, 600,
	361, 601, 0, 602, 675, 676, 677, 678, 0, 611,
	0, 603, 604, 605, 679, 606, 680, 0, 607, 608,
	609, 610, 0, 612, 613, 0, 0, 614, 615, 616,
	618, 619, 617, 620, 0, 621, 0, 0, 622, 623,
	624, 681, 682, 683, 812, 626, 625, 627, 684, 0,
	628, 0, 0, 0, 0, 629, 630, 685, 631, 632,
	633, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 634, 0, 0, 0,
	0, 286, 287, 822, 288, 289, 290, 291, 292, 293,
	635, 636, 0, 294, 637, 295, 638, 0, 639, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 640,
	641, 642, 0, 303, 304, 643, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	819, 334, 0, 335, 337, 644, 645, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 646, 356, 357, 358, 360, 362,
	359, 363, 364, 365, 366, 647, 648, 367, 0, 274,
	0, 0, 0, 0, 0, 368, 369, 370, 649, 0,
	0, 0, 371, 0, 372, 373, 0, 0, 0, 374,
	375, 376, 650, 651, 377, 378, 379, 380, 381, 382,
	383, 384, 385, 0, 386, 652, 0, 653, 387, 0,
	388, 389, 390, 391, 392, 654, 655, 656, 473, 0,
	393, 394, 0, 395, 396, 397, 398, 399, 0, 0,
	0, 275, 400, 401, 402, 404, 0, 0, 403, 657,
	658, 0, 659, 0, 405, 406, 0, 660, 0, 407,
	408, 409, 0, 410, 0, 0, 0, 411, 412, 413,
	414, 415, 416, 0, 417, 419, 418, 0, 420, 661,
	0, 421, 422, 0, 0, 423, 0, 0, 0, 424,
	425, 428, 0, 0, 426, 427, 429, 430, 0, 431,
	432, 434, 437, 433, 435, 436, 438, 451, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	453, 0, 452, 0, 454, 455, 456, 463, 465, 466,
	461, 462, 464, 467, 468, 458, 459, 460, 0, 469,
	457, 0, 276, 0, 470, 471, 0, 662, 472, 663,
	474, 475, 0, 0, 476, 0, 0, 0, 478, 479,
	480, 0, 0, 481, 482, 664, 0, 483, 0, 665,
	484, 485, 477, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 0, 495, 496, 666, 497, 498, 499, 667,
	500, 501, 502, 668, 503, 669, 504, 505, 0, 506,
	507, 0, 508, 509, 510, 511, 512, 513, 514, 670,
	515, 516, 518, 517, 519, 0, 520, 0, 521, 522,
	523, 0, 0, 0, 0, 0, 524, 0, 526, 527,
	528, 529, 525, 530, 531, 532, 533, 534, 0, 535,
	536, 537, 0, 2358, 539, 540, 541, 542, 671, 543,
	0, 544, 545, 551, 552, 553, 546, 547, 2359, 555,
	556, 557, 558, 0, 560, 561, 559, 562, 563, 564,
	0, 565, 566, 548, 549, 567, 568, 0, 569, 570,
	571, 572, 573, 574, 575, 672, 0, 576, 0, 577,
	578, 579, 581, 550, 582, 587, 588, 673, 583, 584,
	585, 586, 674, 590, 591, 0, 592, 593, 0, 589,
	580, 817, 594, 595, 596, 597, 598, 818, 600, 361,
	601, 0, 602, 675, 676, 677, 678, 0, 611, 0,
	603, 604, 605, 679, 606, 680, 0, 607, 608, 2360,
	610, 0, 612, 613, 0, 0, 614, 615, 616, 618,
	619, 617, 620, 0, 621, 0, 0, 622, 623, 624,
	681, 682, 683, 271, 626, 625, 627, 684, 0, 628,
	0, 0, 0, 0, 629, 630, 685, 631, 632, 633,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 634, 0, 0, 0, 0,
	286, 287, 822, 288, 289, 290, 291, 292, 293, 635,
	636, 0, 294, 637, 295, 638, 0, 639, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 640, 641,
	642, 0, 303, 304, 643, 0, 0, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 337, 644, 645, 0, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 347, 348, 0, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 646, 356, 357, 358, 360, 362, 359,
	363, 364, 365, 366, 647, 648, 367, 0, 274, 0,
	0, 0, 0, 0, 368, 369, 370, 649, 0, 0,
	0, 371, 0, 372, 373, 0, 0, 0, 374, 375,
	376, 650, 651, 377, 378, 379, 380, 381, 382, 383,
	384, 385, 0, 386, 652, 0, 653, 387, 0, 388,
	389, 390, 391, 392, 654, 655, 656, 473, 0, 393,
	394, 0, 395, 396, 397, 398, 399, 0, 0, 0,
	275, 400, 401, 402, 404, 0, 0, 403, 657, 658,
	0, 659, 0, 405, 406, 0, 660, 0, 407, 408,
	409, 0, 410, 0, 0, 0, 411, 412, 413, 414,
	415, 416, 0, 417, 419, 418, 0, 420, 661, 0,
	421, 422, 0, 0, 423, 0, 0, 0, 424, 425,
	428, 0, 0, 426, 427, 429, 430, 0, 431, 432,
	434, 437, 433, 435, 436, 438, 451, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 450, 453,
	0, 452, 0, 454, 455, 456, 463, 465, 466, 461,
	462, 464, 467, 468, 458, 459, 460, 0, 469, 457,
	0, 276, 0, 470, 471, 0, 662, 472, 663, 474,
	475, 0, 0, 476, 0, 0, 0, 478, 479, 480,
	0, 0, 481, 482, 664, 0, 483, 0, 665, 484,
	485, 477, 486, 487, 488, 489, 490, 491, 492, 493,
	494, 0, 495, 496, 666, 497, 498, 499, 667, 500,
	501, 502, 668, 503, 669, 504, 505, 0, 506, 507,
	0, 508, 509, 510, 511, 512, 513, 514, 670, 515,
	516, 518, 517, 519, 0, 520, 0, 521, 522, 523,
	0, 0, 0, 0, 0, 524, 0, 526, 527, 528,
	529, 525, 530, 531, 532, 533, 534, 0, 535, 536,
	537, 0, 538, 539, 540, 541, 542, 671, 543, 0,
	544, 545, 551, 552, 553, 546, 547, 554, 555, 556,
	557, 558, 0, 560, 561, 559, 562, 563, 564, 0,
	565, 566, 548, 549, 567, 568, 0, 569, 570, 571,
	572, 573, 574, 575, 672, 0, 576, 0, 577, 578,
	579, 581, 550, 582, 587, 588, 673, 583, 584, 585,
	586, 674, 590, 591, 0, 592, 593, 0, 589, 580,
	0, 594, 595, 596, 597, 598, 599, 600, 361, 601,
	0, 602, 675, 676, 677, 678, 0, 611, 0, 603,
	604, 605, 679, 606, 680, 0, 607, 608, 609, 610,
	0, 612, 613, 0, 0, 614, 615, 616, 618, 619,
	617, 620, 0, 621, 0, 0, 622, 623, 624, 681,
	682, 683, 0, 626, 625, 627, 684, 0, 628, 0,
	1335, 2097, 0, 629, 630, 685, 631, 632, 633, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 822, 634, 0, 0, 0, 0, 286, 287, 1195,
	288, 289, 290, 291, 292, 293, 635, 636, 0, 294,
	637, 295, 638, 0, 639, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 640, 641, 642, 0, 303,
	304, 643, 0, 1340, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 1196, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 3038, 330, 331, 332, 333, 334, 0, 335,
	337, 644, 645, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	646, 356, 357, 358, 360, 362, 359, 363, 364, 365,
	366, 647, 648, 367, 0, 274, 0, 0, 0, 0,
	0, 368, 369, 370, 649, 0, 0, 0, 371, 0,
	372, 373, 0, 0, 1197, 374, 375, 376, 650, 651,
	377, 378, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 652, 0, 653, 387, 0, 388, 389, 390, 391,
	392, 654, 655, 656, 473, 1199, 393, 394, 0, 395,
	396, 397, 398, 399, 0, 0, 0, 0, 400, 401,
	402, 404, 0, 1198, 403, 657, 658, 0, 659, 0,
	405, 406, 1200, 660, 1201, 407, 408, 409, 1202, 410,
	0, 0, 0, 411, 412, 413, 414, 415, 416, 0,
	417, 419, 418, 0, 420, 661, 1203, 421, 422, 1204,
	0, 423, 0, 0, 0, 424, 425, 428, 0, 0,
	426, 427, 429, 430, 0, 431, 432, 434, 437, 433,
	435, 436, 438, 451, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 453, 0, 452, 1205,
	454, 455, 456, 463, 465, 466, 461, 462, 464, 467,
	468, 458, 459, 460, 1206, 469, 457, 0, 0, 1207,
	470, 471, 0, 662, 472, 663, 474, 475, 0, 0,
	476, 0, 0, 0, 478, 479, 480, 0, 0, 481,
	482, 664, 1208, 483, 1209, 665, 484, 485, 477, 486,
	487, 488, 489, 490, 491, 492, 493, 494, 0, 495,
	496, 666, 497, 498, 499, 667, 500, 501, 502, 668,
	503, 669, 504, 505, 0, 506, 507, 0, 508, 509,
	510, 511, 512, 513, 514, 670, 515, 516, 518, 517,
	519, 0, 520, 0, 521, 522, 523, 0, 0, 0,
	0, 0, 524, 0, 526, 527, 528, 529, 525, 530,
	531, 532, 533, 534, 0, 535, 536, 537, 1210, 538,
	539, 540, 541, 542, 671, 543, 0, 544, 545, 551,
	552, 553, 546, 547, 554, 555, 556, 557, 558, 0,
	560, 561, 559, 562, 563, 564, 3039, 565, 566, 548,
	549, 567, 568, 1211, 569, 570, 571, 572, 573, 574,
	575, 672, 0, 576, 0, 577, 578, 579, 581, 550,
	582, 587, 588, 673, 583, 584, 585, 586, 674, 590,
	591, 0, 592, 593, 0, 589, 580, 0, 594, 595,
	596, 597, 598, 599, 600, 361, 601, 0, 602, 675,
	676, 677, 678, 0, 611, 0, 603, 604, 605, 679,
	606, 680, 0, 607, 608, 609, 610, 0, 612, 613,
	0, 0, 614, 615, 616, 618, 619, 617, 620, 0,
	621, 0, 0, 622, 623, 624, 681, 682, 683, 0,
	626, 625, 627, 684, 0, 628, 0, 0, 0, 0,
	629, 630, 685, 631, 632, 633, 1335, 1334, 0, 0,
	0, 0, 1332, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 634, 0,
	0, 0, 0, 286, 287, 1195, 288, 289, 290, 291,
	292, 293, 635, 636, 0, 294, 637, 295, 638, 0,
	639, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 640, 641, 642, 0, 303, 304, 643, 0, 1340,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 1196, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 337, 644, 645, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 646, 356, 357, 358,
	360, 362, 359, 363, 364, 365, 366, 647, 648, 367,
	0, 274, 0, 0, 0, 0, 0, 368, 369, 370,
	649, 0, 0, 0, 371, 0, 372, 373, 0, 0,
	1197, 374, 375, 376, 650, 651, 377, 378, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 652, 0, 653,
	387, 0, 388, 389, 390, 391, 392, 654, 655, 656,
	473, 1199, 393, 394, 0, 395, 396, 397, 398, 399,
	0, 0, 0, 0, 400, 401, 402, 404, 0, 1198,
	403, 657, 658, 0, 659, 0, 405, 406, 1200, 660,
	1201, 407, 408, 409, 1202, 410, 0, 0, 0, 411,
	412, 413, 414, 415, 416, 0, 417, 419, 418, 0,
	420, 661, 1203, 421, 422, 1204, 0, 423, 0, 0,
	0, 424, 425, 428, 0, 0, 426, 427, 429, 430,
	0, 431, 432, 434, 437, 433, 435, 436, 438, 451,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 453, 0, 452, 1205, 454, 455, 456, 463,
	465, 466, 461, 462, 464, 467, 468, 458, 459, 460,
	1206, 469, 457, 0, 0, 1207, 470, 471, 3950, 662,
	472, 663, 474, 475, 0, 0, 476, 0, 0, 0,
	478, 479, 480, 0, 0, 481, 482, 664, 1208, 483,
	1209, 665, 484, 485, 477, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 0, 495, 496, 666, 497, 498,
	499, 667, 500, 501, 502, 668, 503, 669, 504, 505,
	0, 506, 507, 0, 508, 509, 510, 511, 512, 513,
	514, 670, 515, 516, 518, 517, 519, 0, 520, 0,
	521, 522, 523, 0, 0, 0, 0, 0, 524, 0,
	526, 527, 528, 529, 525, 530, 531, 532, 533, 534,
	0, 535, 536, 537, 1210, 538, 539, 540, 541, 542,
	671, 543, 0, 544, 545, 551, 552, 553, 546, 547,
	554, 555, 556, 557, 558, 0, 560, 561, 559, 562,
	563, 564, 0, 565, 566, 548, 549, 567, 568, 1211,
	569, 570, 571, 572, 573, 574, 575, 672, 0, 576,
	0, 577, 578, 579, 581, 550, 582, 587, 588, 673,
	583, 584, 585, 586, 674, 590, 591, 0, 592, 593,
	0, 589, 580, 0, 594, 595, 596, 597, 598, 599,
	600, 361, 601, 0, 602, 675, 676, 677, 678, 0,
	611, 0, 603, 604, 605, 679, 606, 680, 0, 607,
	608, 609, 610, 0, 612, 613, 0, 0, 614, 615,
	616, 618, 619, 617, 620, 0, 621, 0, 0, 622,
	623, 624, 681, 682, 683, 0, 626, 625, 627, 684,
	0, 628, 0, 0, 0, 0, 629, 630, 685, 631,
	632, 633, 1335, 1334, 0, 0, 0, 0, 1332, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 634, 0, 0, 0, 0, 286,
	287, 1195, 288, 289, 290, 291, 292, 293, 635, 636,
	0, 294, 637, 295, 638, 0, 639, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 640, 641, 642,
	0, 303, 304, 643, 0, 1340, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 1196, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 337, 644, 645, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 646, 356, 357, 358, 360, 362, 359, 363,
	364, 365, 366, 647, 648, 367, 0, 274, 0, 0,
	0, 0, 0, 368, 369, 370, 649, 0, 0, 0,
	371, 0, 372, 373, 0, 0, 1197, 374, 375, 376,
	650, 651, 377, 378, 379, 380, 381, 382, 383, 384,
	385, 0, 386, 652, 0, 653, 387, 0, 388, 389,
	390, 391, 392, 654, 655, 656, 473, 1199, 393, 394,
	0, 395, 396, 397, 398, 399, 0, 0, 0, 0,
	400, 401, 402, 404, 0, 1198, 403, 657, 658, 0,
	659, 0, 405, 406, 1200, 660, 1201, 407, 408, 409,
	1202, 410, 0, 0, 0, 411, 412, 413, 414, 415,
	416, 0, 417, 419, 418, 0, 420, 661, 1203, 421,
	422, 1204, 0, 423, 0, 0, 0, 424, 425, 428,
	0, 0, 426, 427, 429, 430, 0, 431, 432, 434,
	437, 433, 435, 436, 438, 451, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 453, 0,
	452, 1205, 454, 455, 456, 463, 465, 466, 461, 462,
	464, 467, 468, 458, 459, 460, 1206, 469, 457, 0,
	0, 1207, 470, 471, 3554, 662, 472, 663, 474, 475,
	0, 0, 476, 0, 0, 0, 478, 479, 480, 0,
	0, 481, 482, 664, 1208, 483, 1209, 665, 484, 485,
	477, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	0, 495, 496, 666, 497, 498, 499, 667, 500, 501,
	502, 668, 503, 669, 504, 505, 0, 506, 507, 0,
	508, 509, 510, 511, 512, 513, 514, 670, 515, 516,
	518, 517, 519, 0, 520, 0, 521, 522, 523, 0,
	0, 0, 0, 0, 524, 0, 526, 527, 528, 529,
	525, 530, 531, 532, 533, 534, 0, 535, 536, 537,
	1210, 538, 539, 540, 541, 542, 671, 543, 0, 544,
	545, 551, 552, 553, 546, 547, 554, 555, 556, 557,
	558, 0, 560, 561, 559, 562, 563, 564, 0, 565,
	566, 548, 549, 567, 568, 1211, 569, 570, 571, 572,
	573, 574, 575, 672, 0, 576, 0, 577, 578, 579,
	581, 550, 582, 587, 588, 673, 583, 584, 585, 586,
	674, 590, 591, 0, 592, 593, 0, 589, 580, 0,
	594, 595, 596, 597, 598, 599, 600, 361, 601, 0,
	602, 675, 676, 677, 678, 0, 611, 0, 603, 604,
	605, 679, 606, 680, 0, 607, 608, 609, 610, 0,
	612, 613, 0, 0, 614, 615, 616, 618, 619, 617,
	620, 0, 621, 0, 0, 622, 623, 624, 681, 682,
	683, 0, 626, 625, 627, 684, 0, 628, 0, 0,
	0, 0, 629, 630, 685, 631, 632, 633, 1668, 0,
	1335, 1334, 0, 0, 0, 0, 1332, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 634, 0, 0, 0, 0, 286, 287, 1195,
	288, 289, 290, 291, 292, 293, 635, 636, 0, 294,
	637, 295, 638, 0, 639, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 640, 641, 642, 0, 303,
	304, 643, 0, 1340, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 1196, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 644, 645, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	646, 356, 357, 358, 360, 362, 359, 363, 364, 365,
	366, 647, 648, 367, 0, 274, 0, 0, 0, 0,
	0, 1667, 369, 370, 649, 0, 0, 0, 371, 0,
	372, 373, 0, 0, 1197, 374, 375, 376, 650, 651,
	377, 378, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 652, 0, 653, 387, 0, 388, 389, 390, 391,
	392, 654, 655, 656, 473, 1199, 393, 394, 0, 395,
	396, 397, 398, 399, 0, 0, 0, 0, 400, 401,
	402, 404, 0, 1198, 403, 657, 658, 0, 659, 0,
	405, 406, 1200, 660, 1201, 407, 408, 409, 1202, 410,
	0, 0, 0, 411, 412, 413, 414, 415, 416, 0,
	417, 419, 418, 0, 420, 661, 1203, 421, 422, 1204,
	0, 423, 0, 0, 0, 424, 425, 428, 0, 0,
	426, 427, 429, 430, 0, 431, 432, 434, 437, 433,
	435, 436, 438, 451, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 453, 0, 452, 1205,
	454, 455, 456, 463, 465, 466, 461, 462, 464, 467,
	468, 458, 459, 460, 1206, 469, 457, 0, 0, 1207,
	470, 471, 0, 662, 472, 663, 474, 475, 0, 0,
	476, 0, 0, 0, 478, 479, 480, 0, 0, 481,
	482, 664, 1208, 483, 1209, 665, 484, 485, 477, 486,
	487, 488, 489, 490, 491, 492, 493, 494, 0, 495,
	496, 666, 497, 498, 499, 667, 500, 501, 502, 668,
	503, 669, 504, 505, 0, 506, 507, 0, 508, 509,
	510, 511, 512, 1666, 514, 670, 515, 516, 518, 517,
	519, 0, 520, 0, 521, 522, 523, 0, 0, 0,
	0, 0, 524, 0, 526, 527, 528, 529, 525, 530,
	531, 532, 533, 534, 0, 535, 536, 537, 1210, 538,
	539, 540, 541, 542, 671, 543, 0, 544, 545, 551,
	552, 553, 546, 547, 554, 1665, 556, 557, 558, 0,
	560, 561, 559, 562, 563, 564, 0, 565, 566, 548,
	549, 567, 568, 1211, 569, 570, 571, 572, 573, 574,
	575, 672, 0, 576, 0, 577, 578, 579, 581, 550,
	582, 587, 588, 673, 583, 584, 585, 586, 674, 590,
	591, 0, 592, 593, 0, 589, 580, 0, 594, 595,
	596, 597, 598, 599, 600, 361, 601, 0, 602, 675,
	676, 677, 678, 0, 611, 0, 603, 604, 605, 679,
	606, 680, 0, 607, 608, 609, 610, 0, 612, 613,
	0, 0, 614, 615, 616, 618, 619, 617, 620, 0,
	621, 0, 0, 622, 623, 624, 681, 682, 683, 0,
	626, 625, 627, 684, 0, 628, 0, 0, 0, 0,
	629, 630, 685, 631, 632, 633, 1586, 0, 1335, 1334,
	0, 0, 0, 0, 1332, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	634, 0, 0, 0, 0, 286, 287, 1195, 288, 289,
	290, 291, 292, 293, 635, 636, 0, 294, 637, 295,
	638, 0, 639, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 640, 641, 642, 0, 303, 304, 643,
	0, 1340, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	1196, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 337, 644,
	645, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 646, 356,
	357, 358, 360, 362, 359, 363, 364, 365, 366, 647,
	648, 367, 0, 274, 0, 0, 0, 0, 0, 368,
	369, 370, 649, 0, 0, 0, 371, 0, 372, 373,
	0, 0, 1197, 374, 375, 376, 650, 651, 377, 378,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 652,
	0, 653, 387, 0, 388, 389, 390, 391, 392, 1585,
	655, 656, 473, 1199, 393, 394, 0, 395, 396, 397,
	398, 399, 0, 0, 0, 0, 400, 401, 402, 404,
	0, 1198, 403, 657, 658, 0, 659, 0, 405, 406,
	1200, 660, 1201, 407, 408, 409, 1202, 410, 0, 0,
	0, 411, 412, 413, 414, 415, 416, 0, 417, 419,
	418, 0, 420, 661, 1203, 421, 422, 1204, 0, 423,
	0, 0, 0, 424, 425, 428, 0, 0, 426, 427,
	429, 430, 0, 431, 432, 434, 437, 433, 435, 436,
	438, 451, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 453, 0, 452, 1205, 454, 455,
	456, 463, 465, 466, 461, 462, 464, 467, 468, 458,
	459, 460, 1206, 469, 457, 0, 0, 1207, 470, 471,
	0, 662, 472, 663, 474, 475, 0, 0, 476, 0,
	0, 0, 478, 479, 480, 0, 0, 481, 482, 664,
	1208, 483, 1209, 665, 484, 485, 477, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 0, 495, 496, 666,
	497, 498, 499, 667, 500, 501, 502, 668, 503, 669,
	504, 505, 0, 506, 507, 0, 508, 509, 510, 511,
	512, 513, 514, 670, 515, 516, 518, 517, 519, 0,
	520, 0, 521, 522, 523, 0, 0, 0, 0, 0,
	524, 0, 526, 527, 528, 529, 525, 530, 531, 532,
	533, 534, 0, 535, 536, 537, 1210, 538, 539, 540,
	541, 542, 671, 543, 0, 544, 545, 551, 552, 553,
	546, 547, 554, 555, 556, 557, 558, 0, 560, 561,
	559, 562, 563, 564, 0, 565, 566, 548, 549, 567,
	568, 1211, 569, 570, 571, 572, 573, 574, 575, 672,
	0, 576, 0, 577, 578, 579, 581, 550, 582, 587,
	588, 673, 583, 584, 585, 586, 674, 590, 591, 0,
	592, 593, 0, 589, 580, 0, 594, 595, 596, 597,
	598, 599, 600, 361, 601, 0, 602, 675, 676, 677,
	678, 0, 611, 0, 603, 604, 605, 679, 606, 680,
	0, 607, 608, 609, 610, 0, 612, 613, 0, 0,
	614, 615, 616, 618, 619, 617, 620, 0, 621, 0,
	0, 622, 623, 624, 681, 682, 683, 0, 626, 625,
	627, 684, 0, 628, 0, 0, 0, 0, 629, 630,
	685, 631, 632, 633, 1545, 0, 1335, 1334, 0, 0,
	0, 0, 1332, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 634, 0,
	0, 0, 0, 286, 287, 1195, 288, 289, 290, 291,
	292, 293, 635, 636, 0, 294, 637, 295, 638, 0,
	639, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 640, 641, 642, 0, 303, 304, 643, 0, 1340,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 1196, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 337, 644, 645, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 646, 356, 357, 358,
	360, 362, 359, 363, 364, 365, 366, 647, 648, 367,
	0, 274, 0, 0, 0, 0, 0, 368, 369, 370,
	649, 0, 0, 0, 371, 0, 372, 373, 0, 0,
	1197, 374, 375, 376, 650, 651, 377, 378, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 652, 0, 653,
	387, 0, 388, 389, 390, 391, 392, 1547, 655, 656,
	473, 1199, 393, 394, 0, 395, 396, 397, 398, 399,
	0, 0, 0, 0, 400, 401, 402, 404, 0, 1198,
	403, 657, 658, 0, 659, 0, 405, 406, 1200, 660,
	1201, 407, 408, 409, 1202, 410, 0, 0, 0, 411,
	412, 413, 414, 415, 416, 0, 417, 419, 418, 0,
	420, 661, 1203, 421, 422, 1204, 0, 423, 0, 0,
	0, 424, 425, 428, 0, 0, 426, 427, 429, 430,
	0, 431, 432, 434, 437, 433, 435, 436, 438, 451,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 453, 0, 452, 1205, 454, 455, 456, 463,
	465, 466, 461, 462, 464, 467, 468, 458, 459, 460,
	1206, 469, 457, 0, 0, 1207, 470, 471, 0, 662,
	472, 663, 474, 475, 0, 0, 476, 0, 0, 0,
	478, 479, 480, 0, 0, 481, 482, 664, 1208, 483,
	1209, 665, 484, 485, 477, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 0, 495, 496, 666, 497, 498,
	499, 667, 500, 501, 502, 668, 503, 669, 504, 505,
	0, 506, 507, 0, 508, 509, 510, 511, 512, 513,
	514, 670, 515, 516, 518, 517, 519, 0, 520, 0,
	521, 522, 523, 0, 0, 0, 0, 0, 524, 0,
	526, 527, 528, 529, 525, 530, 531, 532, 533, 534,
	0, 535, 536, 537, 1210, 538, 539, 540, 541, 542,
	671, 543, 0, 544, 545, 551, 552, 553, 546, 547,
	554, 555, 556, 557, 558, 0, 560, 561, 559, 562,
	563, 564, 0, 565, 566, 548, 549, 567, 568, 1211,
	569, 570, 571, 572, 573, 574, 575, 672, 0, 576,
	0, 577, 578, 579, 581, 550, 582, 587, 588, 673,
	583, 584, 585, 586, 674, 590, 591, 0, 592, 593,
	0, 589, 580, 0, 594, 595, 596, 597, 598, 599,
	600, 361, 601, 0, 602, 675, 676, 677, 678, 0,
	611, 0, 603, 604, 605, 679, 606, 680, 0, 607,
	608, 609, 610, 0, 612, 613, 0, 0, 614, 615,
	616, 618, 619, 617, 620, 0, 621, 0, 0, 622,
	623, 624, 681, 682, 683, 0, 626, 625, 627, 684,
	0, 628, 0, 0, 0, 0, 629, 630, 685, 631,
	632, 633, 1510, 0, 1335, 1334, 0, 0, 0, 0,
	1332, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 634, 0, 0, 0,
	0, 286, 287, 1195, 288, 289, 290, 291, 292, 293,
	635, 636, 0, 294, 637, 295, 638, 0, 639, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 640,
	641, 642, 0, 303, 304, 643, 0, 1340, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 1196, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 337, 644, 645, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 646, 356, 357, 358, 360, 362,
	359, 363, 364, 365, 366, 647, 648, 367, 0, 274,
	0, 0, 0, 0, 0, 368, 369, 370, 649, 0,
	0, 0, 371, 0, 372, 373, 0, 0, 1197, 374,
	375, 376, 650, 651, 377, 378, 379, 380, 381, 382,
	383, 384, 385, 0, 386, 652, 0, 653, 387, 0,
	388, 389, 390, 391, 392, 1509, 655, 656, 473, 1199,
	393, 394, 0, 395, 396, 397, 398, 399, 0, 0,
	0, 0, 400, 401, 402, 404, 0, 1198, 403, 657,
	658, 0, 659, 0, 405, 406, 1200, 660, 1201, 407,
	408, 409, 1202, 410, 0, 0, 0, 411, 412, 413,
	414, 415, 416, 0, 417, 419, 418, 0, 420, 661,
	1203, 421, 422, 1204, 0, 423, 0, 0, 0, 424,
	425, 428, 0, 0, 426, 427, 429, 430, 0, 431,
	432, 434, 437, 433, 435, 436, 438, 451, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	453, 0, 452, 1205, 454, 455, 456, 463, 465, 466,
	461, 462, 464, 467, 468, 458, 459, 460, 1206, 469,
	457, 0, 0, 1207, 470, 471, 0, 662, 472, 663,
	474, 475, 0, 0, 476, 0, 0, 0, 478, 479,
	480, 0, 0, 481, 482, 664, 1208, 483, 1209, 665,
	484, 485, 477, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 0, 495, 496, 666, 497, 498, 499, 667,
	500, 501, 502, 668, 503, 669, 504, 505, 0, 506,
	507, 0, 508, 509, 510, 511, 512, 513, 514, 670,
	515, 516, 518, 517, 519, 0, 520, 0, 521, 522,
	523, 0, 0, 0, 0, 0, 524, 0, 526, 527,
	528, 529, 525, 530, 531, 532, 533, 534, 0, 535,
	536, 537, 1210, 538, 539, 540, 541, 542, 671, 543,
	0, 544, 545, 551, 552, 553, 546, 547, 554, 555,
	556, 557, 558, 0, 560, 561, 559, 562, 563, 564,
	0, 565, 566, 548, 549, 567, 568, 1211, 569, 570,
	571, 572, 573, 574, 575, 672, 0, 576, 0, 577,
	578, 579, 581, 550, 582, 587, 588, 673, 583, 584,
	585, 586, 674, 590, 591, 0, 592, 593, 0, 589,
	580, 0, 594, 595, 596, 597, 598, 599, 600, 361,
	601, 0, 602, 675, 676, 677, 678, 0, 611, 0,
	603, 604, 605, 679, 606, 680, 0, 607, 608, 609,
	610, 0, 612, 613, 0, 0, 614, 615, 616, 618,
	619, 617, 620, 0, 621, 0, 0, 622, 623, 624,
	681, 682, 683, 0, 626, 625, 627, 684, 0, 628,
	0, 0, 0, 0, 629, 630, 685, 631, 632, 633,
	1329, 0, 1335, 1334, 0, 0, 0, 0, 1332, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 634, 0, 0, 0, 0, 286,
	287, 1195, 288, 289, 290, 291, 292, 293, 635, 636,
	0, 294, 637, 295, 638, 0, 639, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 640, 641, 642,
	0, 303, 304, 643, 0, 1340, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 1196, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 337, 644, 645, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 646, 356, 357, 358, 360, 362, 359, 363,
	364, 365, 366, 647, 648, 367, 0, 274, 0, 0,
	0, 0, 0, 368, 369, 370, 649, 0, 0, 0,
	371, 0, 372, 373, 0, 0, 1197, 374, 375, 376,
	650, 651, 377, 378, 379, 380, 381, 382, 383, 384,
	385, 0, 386, 652, 0, 653, 387, 0, 388, 389,
	390, 391, 392, 1328, 655, 656, 473, 1199, 393, 394,
	0, 395, 396, 397, 398, 399, 0, 0, 0, 0,
	400, 401, 402, 404, 0, 1198, 403, 657, 658, 0,
	659, 0, 405, 406, 1200, 660, 1201, 407, 408, 409,
	1202, 410, 0, 0, 0, 411, 412, 413, 414, 415,
	416, 0, 417, 419, 418, 0, 420, 661, 1203, 421,
	422, 1204, 0, 423, 0, 0, 0, 424, 425, 428,
	0, 0, 426, 427, 429, 430, 0, 431, 432, 434,
	437, 433, 435, 436, 438, 451, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 453, 0,
	452, 1205, 454, 455, 456, 463, 465, 466, 461, 462,
	464, 467, 468, 458, 459, 460, 1206, 469, 457, 0,
	0, 1207, 470, 471, 0, 662, 472, 663, 474, 475,
	0, 0, 476, 0, 0, 0, 478, 479, 480, 0,
	0, 481, 482, 664, 1208, 483, 1209, 665, 484, 485,
	477, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	0, 495, 496, 666, 497, 498, 499, 667, 500, 501,
	502, 668, 503, 669, 504, 505, 0, 506, 507, 0,
	508, 509, 510, 511, 512, 513, 514, 670, 515, 516,
	518, 517, 519, 0, 520, 0, 521, 522, 523, 0,
	0, 0, 0, 0, 524, 0, 526, 527, 528, 529,
	525, 530, 531, 532, 533, 534, 0, 535, 536, 537,
	1210, 538, 539, 540, 541, 542, 671, 543, 0, 544,
	545, 551, 552, 553, 546, 547, 554, 555, 556, 557,
	558, 0, 560, 561, 559, 562, 563, 564, 0, 565,
	566, 548, 549, 567, 568, 1211, 569, 570, 571, 572,
	573, 574, 575, 672, 0, 576, 0, 577, 578, 579,
	581, 550, 582, 587, 588, 673, 583, 584, 585, 586,
	674, 590, 591, 0, 592, 593, 0, 589, 580, 0,
	594, 595, 596, 597, 598, 599, 600, 361, 601, 0,
	602, 675, 676, 677, 678, 0, 611, 0, 603, 604,
	605, 679, 606, 680, 0, 607, 608, 609, 610, 0,
	612, 613, 0, 0, 614, 615, 616, 618, 619, 617,
	620, 0, 621, 0, 0, 622, 623, 624, 681, 682,
	683, 0, 626, 625, 627, 684, 0, 628, 0, 0,
	0, 0, 629, 630, 685, 631, 632, 633, 1335, 1334,
	0, 0, 0, 0, 1332, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	634, 0, 0, 0, 0, 286, 287, 1195, 288, 289,
	290, 291, 292, 293, 635, 636, 0, 294, 637, 295,
	638, 0, 639, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 640, 641, 642, 0, 303, 304, 643,
	0, 1340, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	1196, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 337, 644,
	645, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 646, 356,
	357, 358, 360, 362, 359, 363, 364, 365, 366, 647,
	648, 367, 0, 274, 0, 0, 0, 0, 0, 368,
	369, 370, 649, 0, 0, 0, 371, 0, 372, 373,
	0, 0, 1197, 374, 375, 376, 650, 651, 377, 378,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 652,
	0, 653, 387, 0, 388, 389, 390, 391, 392, 654,
	655, 656, 473, 1199, 393, 394, 0, 395, 396, 397,
	398, 399, 0, 0, 0, 0, 400, 401, 402, 404,
	0, 1198, 403, 657, 658, 0, 659, 0, 405, 406,
	1200, 660, 1201, 407, 408, 409, 1202, 410, 0, 0,
	0, 411, 412, 413, 414, 415, 416, 0, 417, 419,
	418, 0, 420, 661, 1203, 421, 422, 1204, 0, 423,
	0, 0, 0, 424, 425, 428, 0, 0, 426, 427,
	429, 430, 0, 431, 432, 434, 437, 433, 435, 436,
	438, 451, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 453, 0, 452, 1205, 454, 455,
	456, 463, 465, 466, 461, 462, 464, 467, 468, 458,
	459, 460, 1206, 469, 457, 0, 0, 1207, 470, 471,
	0, 662, 472, 663, 474, 475, 0, 0, 476, 0,
	0, 0, 478, 479, 480, 0, 0, 481, 482, 664,
	1208, 483, 1209, 665, 484, 485, 477, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 0, 495, 496, 666,
	497, 498, 499, 667, 500, 501, 502, 668, 503, 669,
	504, 505, 0, 506, 507, 0, 508, 509, 510, 511,
	512, 513, 514, 670, 515, 516, 518, 517, 519, 0,
	520, 0, 521, 522, 523, 0, 0, 0, 0, 0,
	524, 0, 526, 527, 528, 529, 525, 530, 531, 532,
	533, 534, 0, 535, 536, 537, 1210, 538, 539, 540,
	541, 542, 671, 543, 0, 544, 545, 551, 552, 553,
	546, 547, 554, 555, 556, 557, 558, 0, 560, 561,
	559, 562, 563, 564, 0, 565, 566, 548, 549, 567,
	568, 1211, 569, 570, 571, 572, 573, 574, 575, 672,
	0, 576, 0, 577, 578, 579, 581, 550, 582, 587,
	588, 673, 583, 584, 585, 586, 674, 590, 591, 0,
	592, 593, 0, 589, 580, 0, 594, 595, 596, 597,
	598, 599, 600, 361, 601, 0, 602, 675, 676, 677,
	678, 0, 611, 0, 603, 604, 605, 679, 606, 680,
	0, 607, 608, 609, 610, 0, 612, 613, 0, 0,
	614, 615, 616, 618, 619, 617, 620, 0, 621, 0,
	0, 622, 623, 624, 681, 682, 683, 0, 626, 625,
	627, 684, 0, 628, 1335, 2097, 0, 0, 629, 630,
	685, 631, 632, 633, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 634, 0, 0, 0,
	0, 286, 287, 1195, 288, 289, 290, 291, 292, 293,
	635, 636, 0, 294, 637, 295, 638, 0, 639, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 640,
	641, 642, 0, 303, 304, 643, 0, 1340, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 1196, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 337, 644, 645, 2094, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 646, 356, 357, 358, 360, 362,
	359, 363, 364, 365, 366, 647, 648, 367, 0, 274,
	0, 0, 0, 0, 0, 368, 369, 370, 649, 0,
	0, 0, 371, 0, 372, 373, 0, 0, 1197, 374,
	375, 376, 650, 651, 377, 378, 379, 380, 381, 382,
	383, 384, 385, 0, 386, 652, 0, 653, 387, 0,
	388, 389, 390, 391, 392, 654, 655, 656, 473, 1199,
	393, 394, 0, 395, 396, 397, 398, 399, 0, 0,
	0, 0, 400, 401, 402, 404, 0, 1198, 403, 657,
	658, 0, 659, 0, 405, 406, 1200, 660, 1201, 407,
	408, 409, 1202, 410, 0, 0, 0, 411, 412, 413,
	414, 415, 416, 0, 417, 419, 418, 0, 420, 661,
	1203, 421, 422, 1204, 0, 423, 0, 0, 0, 424,
	425, 428, 0, 0, 426, 427, 429, 430, 0, 431,
	432, 434, 437, 433, 435, 436, 438, 451, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	453, 0, 452, 1205, 454, 455, 456, 463, 465, 466,
	461, 462, 464, 467, 468, 458, 459, 460, 1206, 469,
	457, 0, 0, 1207, 470, 471, 0, 662, 472, 663,
	474, 475, 0, 0, 476, 0, 0, 0, 478, 479,
	480, 0, 0, 481, 482, 664, 1208, 483, 1209, 665,
	484, 485, 477, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 0, 495, 496, 666, 497, 498, 499, 667,
	500, 501, 502, 668, 503, 669, 504, 505, 0, 506,
	507, 0, 508, 509, 510, 511, 512, 513, 514, 670,
	515, 516, 518, 517, 519, 0, 520, 0, 521, 522,
	523, 0, 0, 0, 0, 0, 524, 0, 526, 527,
	528, 529, 525, 530, 531, 532, 533, 534, 0, 535,
	536, 537, 1210, 538, 539, 540, 541, 542, 671, 543,
	0, 544, 545, 551, 552, 553, 546, 547, 554, 555,
	556, 557, 558, 0, 560, 561, 559, 562, 563, 564,
	0, 565, 566, 548, 549, 567, 568, 1211, 569, 570,
	571, 572, 573, 574, 575, 672, 0, 576, 0, 577,
	578, 579, 581, 550, 582, 587, 588, 673, 583, 584,
	585, 586, 674, 590, 591, 0, 592, 593, 0, 589,
	580, 0, 594, 595, 596, 597, 598, 599, 600, 361,
	601, 0, 602, 675, 676, 677, 678, 0, 611, 0,
	603, 604, 605, 679, 606, 680, 0, 607, 608, 609,
	610, 0, 612, 613, 0, 0, 614, 615, 616, 618,
	619, 617, 620, 0, 621, 0, 0, 622, 623, 624,
	681, 682, 683, 0, 626, 625, 627, 684, 0, 628,
	1335, 1334, 0, 0, 629, 630, 685, 631, 632, 633,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 634, 0, 0, 0, 0, 286, 287, 1195,
	288, 289, 290, 291, 292, 293, 635, 636, 0, 294,
	637, 295, 638, 0, 639, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 640, 641, 642, 0, 303,
	304, 643, 0, 1340, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 1196, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 644, 645, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	646, 356, 357, 358, 360, 362, 359, 363, 364, 365,
	366, 647, 648, 367, 0, 274, 0, 0, 0, 0,
	0, 368, 369, 370, 649, 0, 0, 0, 371, 0,
	372, 373, 0, 0, 1197, 374, 375, 376, 650, 651,
	377, 378, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 652, 0, 653, 387, 0, 388, 389, 390, 391,
	392, 654, 655, 656, 473, 1199, 393, 394, 0, 395,
	396, 397, 398, 399, 0, 0, 0, 0, 400, 401,
	402, 404, 0, 1198, 403, 657, 658, 0, 659, 0,
	405, 406, 1200, 660, 1201, 407, 408, 409, 1202, 410,
	0, 0, 0, 411, 412, 413, 414, 415, 416, 0,
	417, 419, 418, 0, 420, 661, 1203, 421, 422, 1204,
	0, 423, 0, 0, 0, 424, 425, 428, 0, 0,
	426, 427, 429, 430, 0, 431, 432, 434, 437, 433,
	435, 436, 438, 451, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 453, 0, 452, 1205,
	454, 455, 456, 463, 465, 466, 461, 462, 464, 467,
	468, 458, 459, 460, 1206, 469, 457, 0, 0, 1207,
	470, 471, 0, 662, 472, 663, 474, 475, 0, 0,
	476, 0, 0, 0, 478, 479, 480, 0, 0, 481,
	482, 664, 1208, 483, 1209, 665, 484, 485, 477, 486,
	487, 488, 489, 490, 491, 492, 493, 494, 0, 495,
	496, 666, 497, 498, 499, 667, 500, 501, 502, 668,
	503, 669, 504, 505, 0, 506, 507, 0, 508, 509,
	510, 511, 512, 513, 514, 670, 515, 516, 518, 517,
	519, 0, 520, 0, 521, 522, 523, 0, 0, 0,
	0, 0, 524, 0, 526, 527, 528, 529, 525, 530,
	531, 532, 533, 534, 0, 535, 536, 537, 1210, 538,
	539, 540, 541, 542, 671, 543, 0, 544, 545, 551,
	552, 553, 546, 547, 554, 555, 556, 557, 558, 0,
	560, 561, 559, 562, 563, 564, 0, 565, 566, 548,
	549, 567, 568, 1211, 569, 570, 571, 572, 573, 574,
	575, 672, 0, 576, 0, 577, 578, 579, 581, 550,
	582, 587, 588, 673, 583, 584, 585, 586, 674, 590,
	591, 0, 592, 593, 0, 589, 580, 0, 594, 595,
	596, 597, 598, 599, 600, 361, 601, 0, 602, 675,
	676, 677, 678, 0, 611, 0, 603, 604, 605, 679,
	606, 680, 0, 607, 608, 609, 610, 0, 612, 613,
	0, 0, 614, 615, 616, 618, 619, 617, 620, 0,
	621, 0, 0, 622, 623, 624, 681, 682, 683, 1335,
	626, 625, 627, 684, 0, 628, 0, 0, 0, 0,
	629, 630, 685, 631, 632, 633, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 634, 0, 0, 0, 0, 286, 287, 1195, 288,
	289, 290, 291, 292, 293, 635, 636, 0, 294, 637,
	295, 638, 0, 639, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 640, 641, 642, 0, 303, 304,
	643, 0, 1340, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 1196, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 335, 337,
	644, 645, 0, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 347, 348, 0,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 646,
	356, 357, 358, 360, 362, 359, 363, 364, 365, 366,
	647, 648, 367, 0, 274, 0, 0, 0, 0, 0,
	368, 369, 370, 649, 0, 0, 0, 371, 0, 372,
	373, 0, 0, 1197, 374, 375, 376, 650, 651, 377,
	378, 379, 380, 381, 382, 383, 384, 385, 0, 386,
	652, 0, 653, 387, 0, 388, 389, 390, 391, 392,
	654, 655, 656, 473, 1199, 393, 394, 0, 395, 396,
	397, 398, 399, 0, 0, 0, 0, 400, 401, 402,
	404, 0, 1198, 403, 657, 658, 0, 659, 0, 405,
	406, 1200, 660, 1201, 407, 408, 409, 1202, 410, 0,
	0, 0, 411, 412, 413, 414, 415, 416, 0, 417,
	419, 418, 0, 420, 661, 1203, 421, 422, 1204, 0,
	423, 0, 0, 0, 424, 425, 428, 0, 0, 426,
	427, 429, 430, 0, 431, 432, 434, 437, 433, 435,
	436, 438, 451, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 450, 453, 0, 452, 1205, 454,
	455, 456, 463, 465, 466, 461, 462, 464, 467, 468,
	458, 459, 460, 1206, 469, 457, 0, 0, 1207, 470,
	471, 0, 662, 472, 663, 474, 475, 0, 0, 476,
	0, 0, 0, 478, 479, 480, 0, 0, 481, 482,
	664, 1208, 483, 1209, 665, 484, 485, 477, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 0, 495, 496,
	666, 497, 498, 499, 667, 500, 501, 502, 668, 503,
	669, 504, 505, 0, 506, 507, 0, 508, 509, 510,
	511, 512, 513, 514, 670, 515, 516, 518, 517, 519,
	0, 520, 0, 521, 522, 523, 0, 0, 0, 0,
	0, 524, 0, 526, 527, 528, 529, 525, 530, 531,
	532, 533, 534, 0, 535, 536, 537, 1210, 538, 539,
	540, 541, 542, 671, 543, 0, 544, 545, 551, 552,
	553, 546, 547, 554, 555, 556, 557, 558, 0, 560,
	561, 559, 562, 563, 564, 0, 565, 566, 548, 549,
	567, 568, 1211, 569, 570, 571, 572, 573, 574, 575,
	672, 0, 576, 0, 577, 578, 579, 581, 550, 582,
	587, 588, 673, 583, 584, 585, 586, 674, 590, 591,
	0, 592, 593, 0, 589, 580, 0, 594, 595, 596,
	597, 598, 599, 600, 361, 601, 0, 602, 675, 676,
	677, 678, 0, 611, 0, 603, 604, 605, 679, 606,
	680, 0, 607, 608, 609, 610, 0, 612, 613, 0,
	0, 614, 615, 616, 618, 619, 617, 620, 0, 621,
	0, 0, 622, 623, 624, 681, 682, 683, 271, 626,
	625, 627, 684, 0, 628, 0, 0, 0, 0, 629,
	630, 685, 631, 632, 633, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	634, 0, 0, 0, 0, 286, 287, 0, 288, 289,
	290, 291, 292, 293, 635, 636, 0, 294, 637, 295,
	638, 0, 639, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 640, 641, 642, 2876, 303, 304, 643,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 2873, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 337, 644,
	645, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 0, 351, 352, 353, 0, 2880, 355, 646, 356,
	357, 358, 360, 362, 359, 363, 364, 365, 366, 647,
	648, 367, 0, 3100, 0, 0, 0, 0, 0, 368,
	369, 370, 649, 0, 0, 0, 371, 0, 372, 373,
	2879, 0, 0, 374, 375, 376, 650, 651, 377, 378,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 652,
	0, 653, 387, 0, 388, 389, 390, 391, 392, 654,
	655, 656, 473, 0, 393, 394, 0, 395, 396, 397,
	398, 399, 0, 0, 0, 3097, 400, 401, 402, 404,
	0, 0, 403, 657, 658, 0, 659, 0, 405, 3099,
	0, 660, 0, 407, 408, 409, 0, 410, 0, 0,
	0, 411, 412, 413, 414, 415, 416, 0, 417, 419,
	418, 0, 420, 661, 0, 421, 422, 3096, 0, 423,
	0, 0, 0, 424, 425, 428, 0, 0, 426, 427,
	429, 430, 0, 431, 432, 434, 437, 433, 435, 436,
	438, 451, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 453, 0, 452, 0, 454, 455,
	456, 463, 465, 466, 461, 462, 464, 467, 468, 458,
	459, 460, 0, 469, 457, 0, 0, 0, 470, 471,
	0, 662, 472, 663, 474, 475, 0, 0, 476, 0,
	0, 0, 478, 479, 480, 0, 0, 481, 482, 664,
	0, 483, 0, 665, 484, 485, 477, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 0, 495, 496, 666,
	497, 498, 499, 667, 500, 501, 502, 668, 503, 669,
	504, 505, 2878, 506, 507, 0, 508, 509, 510, 511,
	512, 513, 514, 670, 515, 516, 518, 517, 519, 0,
	520, 0, 521, 522, 523, 0, 0, 0, 0, 0,
	524, 0, 526, 527, 528, 529, 525, 530, 531, 532,
	533, 534, 0, 535, 536, 537, 0, 538, 539, 540,
	541, 542, 671, 543, 0, 544, 545, 551, 552, 553,
	546, 547, 554, 555, 556, 557, 558, 0, 560, 561,
	559, 562, 563, 564, 0, 565, 566, 548, 549, 567,
	568, 0, 569, 570, 571, 572, 573, 574, 575, 672,
	0, 576, 0, 577, 578, 579, 581, 550, 582, 587,
	588, 673, 583, 584, 585, 586, 674, 590, 591, 0,
	592, 593, 0, 589, 580, 0, 594, 595, 596, 597,
	598, 599, 600, 361, 601, 0, 602, 675, 676, 677,
	678, 0, 611, 0, 603, 604, 605, 679, 606, 680,
	0, 607, 608, 609, 610, 0, 612, 613, 0, 3098,
	614, 615, 616, 618, 619, 617, 620, 0, 621, 0,
	0, 622, 623, 624, 681, 682, 683, 271, 626, 625,
	627, 684, 0, 628, 0, 0, 0, 0, 629, 630,
	685, 631, 632, 633, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 634,
	0, 0, 0, 0, 286, 287, 0, 288, 289, 290,
	291, 292, 293, 635, 636, 0, 294, 637, 295, 638,
	0, 639, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 640, 641, 642, 2876, 303, 304, 643, 0,
	0, 2870, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 2873, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 337, 644, 645,
	0, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 347, 348, 0, 349, 350,
	0, 351, 352, 353, 0, 2880, 355, 646, 356, 357,
	358, 360, 362, 359, 363, 364, 365, 366, 647, 648,
	367, 0, 0, 0, 0, 0, 0, 0, 368, 369,
	370, 649, 0, 0, 0, 371, 0, 372, 373, 2879,
	0, 0, 374, 375, 376, 650, 651, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 652, 0,
	653, 387, 0, 388, 389, 390, 391, 392, 2869, 655,
	656, 473, 0, 393, 394, 0, 395, 396, 397, 398,
	399, 0, 0, 0, 0, 400, 401, 402, 404, 0,
	0, 403, 657, 658, 0, 659, 0, 405, 406, 0,
	660, 0, 407, 408, 409, 0, 410, 0, 0, 0,
	411, 412, 413, 414, 415, 416, 0, 417, 419, 418,
	0, 420, 661, 0, 421, 422, 0, 0, 423, 0,
	0, 0, 424, 425, 428, 0, 0, 426, 427, 429,
	430, 0, 431, 432, 434, 437, 433, 435, 436, 438,
	451, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 453, 0, 452, 0, 454, 455, 456,
	463, 465, 466, 461, 462, 464, 467, 468, 458, 459,
	460, 0, 469, 457, 0, 0, 0, 470, 471, 0,
	662, 472, 663, 474, 475, 0, 0, 476, 0, 0,
	0, 478, 479, 480, 0, 0, 481, 482, 664, 0,
	483, 0, 665, 484, 485, 477, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 0, 495, 496, 666, 497,
	498, 499, 667, 500, 501, 502, 668, 503, 669, 504,
	505, 2878, 506, 507, 0, 508, 509, 510, 511, 512,
	513, 514, 670, 515, 516, 518, 517, 519, 0, 520,
	0, 521, 522, 523, 0, 0, 0, 0, 0, 524,
	0, 526, 527, 528, 529, 525, 530, 531, 532, 533,
	534, 0, 535, 536, 537, 0, 538, 539, 540, 541,
	542, 671, 543, 0, 544, 545, 551, 552, 553, 546,
	547, 554, 555, 556, 557, 558, 0, 560, 561, 559,
	562, 563, 564, 0, 565, 566, 548, 549, 567, 568,
	0, 569, 570, 571, 572, 573, 574, 575, 672, 0,
	576, 0, 577, 578, 579, 581, 550, 582, 587, 588,
	673, 583, 584, 585, 586, 674, 590, 591, 0, 592,
	593, 0, 589, 580, 0, 594, 595, 596, 597, 598,
	599, 600, 361, 601, 0, 602, 675, 676, 677, 678,
	0, 611, 0, 603, 604, 605, 679, 606, 680, 0,
	607, 608, 609, 610, 0, 612, 613, 0, 2877, 614,
	615, 616, 618, 619, 617, 620, 0, 621, 0, 0,
	622, 623, 624, 681, 682, 683, 0, 626, 625, 627,
	684, 1745, 628, 271, 0, 0, 0, 629, 630, 685,
	631, 632, 633, 0, 0, 0, 0, 0, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 1744, 284, 285,
	0, 0, 0, 0, 0, 634, 0, 0, 0, 0,
	286, 287, 0, 288, 289, 290, 291, 292, 293, 635,
	636, 0, 294, 637, 295, 638, 0, 639, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 640, 641,
	642, 0, 303, 304, 643, 0, 0, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 1743,
	334, 0, 335, 337, 644, 645, 0, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 347, 348, 0, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 646, 356, 357, 358, 360, 362, 359,
	363, 364, 365, 366, 647, 648, 367, 0, 274, 0,
	0, 0, 0, 0, 368, 369, 370, 649, 0, 0,
	0, 371, 0, 372, 373, 0, 0, 0, 374, 375,
	376, 650, 651, 377, 378, 379, 380, 381, 382, 383,
	384, 385, 0, 386, 652, 0, 653, 387, 0, 388,
	389, 390, 391, 392, 654, 655, 656, 473, 0, 393,
	394, 0, 395, 396, 397, 398, 399, 0, 0, 0,
	275, 400, 401, 402, 404, 0, 0, 403, 657, 658,
	0, 659, 0, 405, 406, 0, 660, 0, 407, 408,
	409, 0, 410, 0, 0, 0, 411, 412, 413, 414,
	415, 416, 0, 417, 419, 418, 0, 420, 661, 0,
	421, 422, 0, 0, 423, 0, 0, 0, 424, 425,
	428, 0, 0, 426, 427, 429, 430, 0, 431, 432,
	434, 437, 433, 435, 436, 438, 451, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 450, 453,
	0, 452, 0, 454, 455, 456, 463, 465, 466, 461,
	462, 464, 467, 468, 458, 459, 460, 0, 469, 457,
	0, 276, 0, 470, 471, 0, 662, 472, 663, 474,
	475, 0, 0, 476, 0, 0, 0, 478, 479, 480,
	0, 0, 481, 482, 664, 0, 483, 0, 665, 484,
	485, 477, 486, 487, 488, 489, 490, 491, 492, 493,
	494, 0, 495, 496, 666, 497, 498, 499, 667, 500,
	501, 502, 668, 503, 669, 504, 505, 0, 506, 507,
	0, 508, 509, 510, 511, 512, 513, 514, 670, 515,
	516, 518, 517, 519, 0, 520, 0, 521, 522, 523,
	0, 0, 0, 0, 0, 524, 0, 526, 527, 528,
	529, 525, 530, 531, 532, 533, 534, 0, 535, 536,
	537, 0, 538, 539, 540, 541, 542, 671, 543, 0,
	544, 545, 551, 552, 553, 1746, 547, 554, 555, 556,
	557, 558, 0, 1742, 561, 559, 562, 563, 564, 0,
	565, 566, 548, 549, 567, 568, 0, 569, 570, 571,
	572, 573, 574, 575, 672, 0, 576, 0, 577, 578,
	579, 581, 550, 582, 587, 588, 673, 583, 584, 585,
	586, 674, 590, 591, 0, 592, 593, 0, 589, 580,
	1740, 594, 595, 596, 597, 598, 599, 600, 361, 601,
	0, 602, 675, 676, 677, 678, 0, 611, 0, 603,
	604, 605, 679, 606, 680, 0, 607, 608, 609, 610,
	0, 612, 613, 0, 0, 614, 615, 616, 618, 619,
	617, 620, 0, 621, 0, 0, 622, 623, 624, 681,
	682, 683, 0, 1741, 625, 627, 684, 1485, 628, 271,
	0, 0, 0, 629, 630, 685, 631, 632, 633, 0,
	0, 0, 0, 0, 0, 0, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 634, 0, 0, 0, 0, 286, 287, 0, 288,
	289, 290, 291, 292, 293, 635, 636, 0, 294, 637,
	295, 638, 0, 639, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 640, 641, 642, 0, 303, 304,
	643, 0, 0, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 335, 337,
	644, 645, 0, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 347, 348, 0,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 646,
	356, 357, 358, 360, 362, 359, 363, 364, 365, 366,
	647, 648, 367, 0, 274, 0, 0, 0, 0, 0,
	368, 369, 370, 649, 0, 0, 0, 371, 0, 372,
	373, 0, 0, 0, 374, 375, 376, 650, 651, 377,
	378, 379, 380, 381, 382, 383, 384, 385, 0, 386,
	652, 0, 653, 387, 0, 388, 389, 390, 391, 392,
	1487, 655, 656, 473, 0, 393, 394, 0, 395, 396,
	397, 398, 399, 0, 0, 0, 275, 400, 401, 402,
	404, 0, 0, 403, 657, 658, 0, 659, 0, 405,
	406, 0, 660, 0, 407, 408, 409, 0, 410, 0,
	0, 0, 411, 412, 413, 414, 415, 416, 0, 417,
	419, 418, 0, 420, 661, 0, 421, 422, 0, 0,
	423, 0, 0, 0, 424, 425, 428, 0, 0, 426,
	427, 429, 430, 0, 431, 432, 434, 437, 433, 435,
	436, 438, 451, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 450, 453, 0, 452, 0, 454,
	455, 456, 463, 465, 466, 461, 462, 464, 467, 468,
	458, 459, 460, 0, 469, 457, 0, 276, 0, 470,
	471, 0, 662, 472, 663, 474, 475, 0, 0, 476,
	0, 0, 1245, 478, 479, 480, 0, 0, 481, 482,
	664, 0, 483, 0, 665, 484, 485, 477, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 0, 495, 496,
	666, 497, 498, 499, 667, 500, 501, 502, 668, 503,
	669, 504, 505, 0, 506, 507, 0, 508, 509, 510,
	511, 512, 513, 514, 670, 515, 516, 518, 517, 519,
	0, 520, 0, 521, 522, 523, 0, 0, 0, 0,
	0, 524, 0, 526, 527, 528, 529, 525, 530, 531,
	532, 533, 534, 0, 535, 536, 537, 0, 538, 539,
	540, 541, 542, 671, 543, 0, 544, 545, 551, 552,
	553, 546, 547, 554, 555, 556, 557, 558, 0, 560,
	561, 559, 562, 563, 564, 0, 565, 566, 548, 549,
	567, 568, 0, 569, 570, 571, 572, 573, 574, 575,
	672, 0, 576, 0, 577, 578, 579, 581, 550, 582,
	587, 588, 673, 583, 584, 585, 586, 674, 590, 591,
	0, 592, 593, 0, 589, 580, 0, 594, 595, 596,
	597, 598, 599, 600, 361, 601, 0, 602, 675, 676,
	677, 678, 0, 611, 0, 603, 604, 605, 679, 606,
	680, 0, 607, 608, 609, 610, 0, 612, 613, 0,
	0, 614, 615, 616, 618, 619, 617, 620, 0, 621,
	0, 0, 622, 623, 624, 681, 682, 683, 0, 626,
	625, 627, 684, 1482, 628, 271, 0, 0, 0, 629,
	630, 685, 631, 632, 633, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 634, 0, 0,
	0, 0, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 635, 636, 0, 294, 637, 295, 638, 0, 639,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	640, 641, 642, 0, 303, 304, 643, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 337, 644, 645, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 646, 356, 357, 358, 360,
	362, 359, 363, 364, 365, 366, 647, 648, 367, 0,
	274, 0, 0, 0, 0, 0, 368, 369, 370, 649,
	0, 0, 0, 371, 0, 372, 373, 0, 0, 0,
	374, 375, 376, 650, 651, 377, 378, 379, 380, 381,
	382, 383, 384, 385, 0, 386, 652, 0, 653, 387,
	0, 388, 389, 390, 391, 392, 1484, 655, 656, 473,
	0, 393, 394, 0, 395, 396, 397, 398, 399, 0,
	0, 0, 275, 400, 401, 402, 404, 0, 0, 403,
	657, 658, 0, 659, 0, 405, 406, 0, 660, 0,
	407, 408, 409, 0, 410, 0, 0, 0, 411, 412,
	413, 414, 415, 416, 0, 417, 419, 418, 0, 420,
	661, 0, 421, 422, 0, 0, 423, 0, 0, 0,
	424, 425, 428, 0, 0, 426, 427, 429, 430, 0,
	431, 432, 434, 437, 433, 435, 436, 438, 451, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 453, 0, 452, 0, 454, 455, 456, 463, 465,
	466, 461, 462, 464, 467, 468, 458, 459, 460, 0,
	469, 457, 0, 276, 0, 470, 471, 0, 662, 472,
	663, 474, 475, 0, 0, 476, 0, 0, 1245, 478,
	479, 480, 0, 0, 481, 482, 664, 0, 483, 0,
	665, 484, 485, 477, 486, 487, 488, 489, 490, 491,
	492, 493, 494, 0, 495, 496, 666, 497, 498, 499,
	667, 500, 501, 502, 668, 503, 669, 504, 505, 0,
	506, 507, 0, 508, 509, 510, 511, 512, 513, 514,
	670, 515, 516, 518, 517, 519, 0, 520, 0, 521,
	522, 523, 0, 0, 0, 0, 0, 524, 0, 526,
	527, 528, 529, 525, 530, 531, 532, 533, 534, 0,
	535, 536, 537, 0, 538, 539, 540, 541, 542, 671,
	543, 0, 544, 545, 551, 552, 553, 546, 547, 554,
	555, 556, 557, 558, 0, 560, 561, 559, 562, 563,
	564, 0, 565, 566, 548, 549, 567, 568, 0, 569,
	570, 571, 572, 573, 574, 575, 672, 0, 576, 0,
	577, 578, 579, 581, 550, 582, 587, 588, 673, 583,
	584, 585, 586, 674, 590, 591, 0, 592, 593, 0,
	589, 580, 0, 594, 595, 596, 597, 598, 599, 600,
	361, 601, 0, 602, 675, 676, 677, 678, 0, 611,
	0, 603, 604, 605, 679, 606, 680, 0, 607, 608,
	609, 610, 0, 612, 613, 0, 0, 614, 615, 616,
	618, 619, 617, 620, 0, 621, 0, 0, 622, 623,
	624, 681, 682, 683, 0, 626, 625, 627, 684, 1389,
	628, 271, 0, 0, 0, 629, 630, 685, 631, 632,
	633, 0, 0, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 634, 0, 0, 0, 0, 286, 287,
	0, 288, 289, 290, 291, 292, 293, 635, 636, 0,
	294, 637, 295, 638, 0, 639, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 640, 641, 642, 0,
	303, 304, 643, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 337, 644, 645, 0, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 347,
	348, 0, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 646, 356, 357, 358, 360, 362, 359, 363, 364,
	365, 366, 647, 648, 367, 0, 274, 0, 0, 0,
	0, 0, 368, 369, 370, 649, 0, 0, 0, 371,
	0, 372, 373, 0, 0, 0, 374, 375, 376, 650,
	651, 377, 378, 379, 380, 381, 382, 383, 384, 385,
	0, 386, 652, 0, 653, 387, 0, 388, 389, 390,
	391, 392, 1391, 655, 656, 473, 0, 393, 394, 0,
	395, 396, 397, 398, 399, 0, 0, 0, 275, 400,
	401, 402, 404, 0, 0, 403, 657, 658, 0, 659,
	0, 405, 406, 0, 660, 0, 407, 408, 409, 0,
	410, 0, 0, 0, 411, 412, 413, 414, 415, 416,
	0, 417, 419, 418, 0, 420, 661, 0, 421, 422,
	0, 0, 423, 0, 0, 0, 424, 425, 428, 0,
	0, 426, 427, 429, 430, 0, 431, 432, 434, 437,
	433, 435, 436, 438, 451, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 453, 0, 452,
	0, 454, 455, 456, 463, 465, 466, 461, 462, 464,
	467, 468, 458, 459, 460, 0, 469, 457, 0, 276,
	0, 470, 471, 0, 662, 472, 663, 474, 475, 0,
	0, 476, 0, 0, 1245, 478, 479, 480, 0, 0,
	481, 482, 664, 0, 483, 0, 665, 484, 485, 477,
	486, 487, 488, 489, 490, 491, 492, 493, 494, 0,
	495, 496, 666, 497, 498, 499, 667, 500, 501, 502,
	668, 503, 669, 504, 505, 0, 506, 507, 0, 508,
	509, 510, 511, 512, 513, 514, 670, 515, 516, 518,
	517, 519, 0, 520, 0, 521, 522, 523, 0, 0,
	0, 0, 0, 524, 0, 526, 527, 528, 529, 525,
	530, 531, 532, 533, 534, 0, 535, 536, 537, 0,
	538, 539, 540, 541, 542, 671, 543, 0, 544, 545,
	551, 552, 553, 546, 547, 554, 555, 556, 557, 558,
	0, 560, 561, 559, 562, 563, 564, 0, 565, 566,
	548, 549, 567, 568, 0, 569, 570, 571, 572, 573,
	574, 575, 672, 0, 576, 0, 577, 578, 579, 581,
	550, 582, 587, 588, 673, 583, 584, 585, 586, 674,
	590, 591, 0, 592, 593, 0, 589, 580, 0, 594,
	595, 596, 597, 598, 599, 600, 361, 601, 0, 602,
	675, 676, 677, 678, 0, 611, 0, 603, 604, 605,
	679, 606, 680, 0, 607, 608, 609, 610, 0, 612,
	613, 0, 0, 614, 615, 616, 618, 619, 617, 620,
	0, 621, 0, 0, 622, 623, 624, 681, 682, 683,
	0, 626, 625, 627, 684, 717, 628, 271, 0, 0,
	0, 629, 630, 685, 631, 632, 633, 0, 0, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 716, 282,
	283, 706, 284, 285, 0, 0, 0, 0, 0, 634,
	0, 0, 0, 0, 286, 287, 0, 288, 289, 290,
	291, 292, 293, 635, 636, 0, 294, 637, 295, 638,
	0, 639, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 640, 641, 642, 0, 303, 304, 643, 0,
	0, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 709, 324, 325, 326, 0,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 337, 644, 645,
	0, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 347, 348, 0, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 646, 356, 357,
	358, 360, 362, 359, 363, 364, 365, 366, 647, 648,
	367, 0, 0, 0, 0, 0, 0, 0, 368, 369,
	370, 649, 0, 0, 0, 371, 0, 372, 373, 0,
	0, 0, 374, 375, 376, 650, 651, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 710, 386, 652, 0,
	653, 387, 0, 388, 389, 390, 391, 392, 654, 655,
	656, 473, 0, 393, 394, 0, 395, 396, 397, 398,
	399, 0, 0, 0, 0, 400, 401, 402, 404, 0,
	0, 403, 657, 658, 0, 659, 0, 405, 406, 0,
	660, 0, 407, 408, 409, 0, 410, 0, 0, 0,
	411, 412, 413, 414, 415, 416, 0, 417, 419, 418,
	0, 420, 661, 0, 421, 422, 0, 0, 423, 0,
	0, 0, 424, 425, 428, 0, 0, 426, 427, 429,
	430, 0, 431, 432, 434, 437, 433, 435, 436, 438,
	451, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 453, 0, 452, 0, 454, 455, 456,
	463, 465, 466, 461, 462, 464, 467, 468, 458, 459,
	460, 0, 469, 457, 0, 0, 0, 470, 471, 0,
	662, 472, 663, 474, 475, 0, 0, 476, 0, 0,
	0, 478, 479, 480, 0, 0, 481, 482, 664, 0,
	483, 0, 665, 484, 485, 477, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 0, 495, 496, 666, 497,
	498, 499, 667, 500, 501, 502, 668, 503, 669, 504,
	505, 0, 506, 507, 0, 508, 509, 510, 511, 512,
	513, 514, 670, 515, 516, 518, 517, 519, 0, 520,
	0, 521, 522, 523, 0, 0, 0, 0, 0, 524,
	0, 526, 527, 528, 529, 525, 530, 531, 532, 533,
	534, 0, 535, 536, 537, 0, 538, 539, 540, 541,
	542, 671, 543, 0, 544, 545, 551, 552, 553, 546,
	547, 554, 555, 556, 557, 558, 711, 560, 561, 559,
	562, 563, 564, 0, 565, 566, 548, 549, 567, 568,
	0, 569, 570, 571, 572, 573, 574, 575, 672, 0,
	576, 0, 577, 578, 579, 581, 550, 582, 587, 588,
	673, 583, 584, 585, 586, 674, 590, 591, 0, 592,
	593, 0, 589, 580, 0, 594, 595, 596, 597, 598,
	599, 600, 361, 601, 0, 602, 675, 676, 677, 678,
	0, 611, 0, 603, 604, 605, 679, 606, 680, 0,
	607, 608, 609, 610, 0, 612, 613, 0, 0, 614,
	615, 616, 618, 619, 617, 620, 0, 621, 0, 0,
	622, 623, 624, 681, 682, 683, 0, 626, 625, 627,
	684, 705, 628, 271, 0, 0, 0, 629, 630, 685,
	631, 632, 633, 0, 0, 0, 0, 0, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 706, 284, 285,
	0, 0, 0, 0, 0, 634, 0, 0, 0, 0,
	286, 287, 0, 288, 289, 290, 291, 292, 293, 635,
	636, 0, 294, 637, 295, 638, 0, 639, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 640, 641,
	642, 0, 303, 304, 643, 0, 0, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 709, 324, 325, 326, 0, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 337, 644, 645, 0, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 347, 348, 0, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 646, 356, 357, 358, 360, 362, 359,
	363, 364, 365, 366, 647, 648, 367, 0, 0, 0,
	0, 0, 0, 0, 368, 369, 370, 649, 0, 0,
	0, 371, 0, 372, 373, 0, 0, 0, 374, 375,
	376, 650, 651, 377, 378, 379, 380, 381, 382, 383,
	384, 385, 710, 386, 652, 0, 653, 387, 0, 388,
	389, 390, 391, 392, 654, 655, 656, 473, 0, 393,
	394, 0, 395, 396, 397, 398, 399, 0, 0, 0,
	0, 400, 401, 402, 404, 0, 0, 403, 657, 658,
	0, 659, 0, 405, 406, 0, 660, 0, 407, 408,
	409, 0, 410, 0, 0, 0, 411, 412, 413, 414,
	415, 416, 0, 417, 419, 418, 0, 420, 661, 0,
	421, 422, 0, 0, 423, 0, 0, 0, 424, 425,
	428, 0, 0, 426, 427, 429, 430, 0, 431, 432,
	434, 437, 433, 435, 436, 438, 451, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 450, 453,
	0, 452, 0, 454, 455, 456, 463, 465, 466, 461,
	462, 464, 467, 468, 458, 459, 460, 0, 469, 457,
	0, 0, 0, 470, 471, 0, 662, 472, 663, 474,
	475, 0, 0, 476, 0, 0, 0, 478, 479, 480,
	0, 0, 481, 482, 664, 0, 483, 0, 665, 484,
	485, 477, 486, 487, 488, 489, 490, 491, 492, 493,
	494, 0, 495, 496, 666, 497, 498, 499, 667, 500,
	501, 502, 668, 503, 669, 504, 505, 0, 506, 507,
	0, 508, 509, 510, 511, 512, 513, 514, 670, 515,
	516, 518, 517, 519, 0, 520, 0, 521, 522, 523,
	0, 0, 0, 0, 0, 524, 0, 526, 527, 528,
	529, 525, 530, 531, 532, 533, 534, 0, 535, 536,
	537, 0, 538, 539, 540, 541, 542, 671, 543, 0,
	544, 545, 551, 552, 553, 546, 547, 554, 555, 556,
	557, 558, 711, 560, 561, 559, 562, 563, 564, 0,
	565, 566, 548, 549, 567, 568, 0, 569, 570, 571,
	572, 573, 574, 575, 672, 0, 576, 0, 577, 578,
	579, 581, 550, 582, 587, 588, 673, 583, 584, 585,
	586, 674, 590, 591, 0, 592, 593, 0, 589, 580,
	0, 594, 595, 596, 597, 598, 599, 600, 361, 601,
	0, 602, 675, 676, 677, 678, 0, 611, 0, 603,
	604, 605, 679, 606, 680, 0, 607, 608, 609, 610,
	0, 612, 613, 0, 0, 614, 615, 616, 618, 619,
	617, 620, 0, 621, 0, 0, 622, 623, 624, 681,
	682, 683, 271, 626, 625, 627, 684, 0, 628, 0,
	0, 0, 0, 629, 630, 685, 631, 632, 633, 277,
	279, 278, 280, 281, 282, 283, 706, 284, 285, 0,
	0, 0, 0, 0, 634, 0, 0, 0, 0, 286,
	287, 0, 288, 289, 290, 291, 292, 293, 635, 636,
	0, 294, 637, 295, 638, 0, 639, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 640, 641, 642,
	0, 303, 304, 643, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	709, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 337, 644, 645, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 646, 356, 357, 358, 360, 362, 359, 363,
	364, 365, 366, 647, 648, 367, 0, 0, 0, 0,
	0, 0, 0, 368, 369, 370, 649, 0, 0, 0,
	371, 0, 372, 373, 0, 0, 0, 374, 375, 376,
	650, 651, 377, 378, 379, 380, 381, 382, 383, 384,
	385, 710, 386, 652, 0, 653, 387, 0, 388, 389,
	390, 391, 392, 654, 655, 656, 473, 0, 393, 394,
	0, 395, 396, 397, 398, 399, 0, 0, 0, 0,
	400, 401, 402, 404, 0, 0, 403, 657, 658, 0,
	659, 0, 405, 406, 0, 660, 0, 407, 408, 409,
	0, 410, 0, 0, 0, 411, 412, 413, 414, 415,
	416, 0, 417, 419, 418, 0, 420, 661, 0, 421,
	422, 0, 0, 423, 0, 0, 0, 424, 425, 428,
	0, 0, 426, 427, 429, 430, 0, 431, 432, 434,
	437, 433, 435, 436, 438, 451, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 453, 0,
	452, 0, 454, 455, 456, 463, 465, 466, 461, 462,
	464, 467, 468, 458, 459, 460, 0, 469, 457, 0,
	0, 0, 470, 471, 0, 662, 472, 663, 474, 475,
	0, 0, 476, 0, 0, 0, 478, 479, 480, 0,
	0, 481, 482, 664, 0, 483, 0, 665, 484, 485,
	477, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	0, 495, 496, 666, 497, 498, 499, 667, 500, 501,
	502, 668, 503, 669, 504, 505, 0, 506, 507, 0,
	508, 509, 510, 511, 512, 513, 514, 670, 515, 516,
	518, 517, 519, 0, 520, 0, 521, 522, 523, 0,
	0, 0, 0, 0, 524, 0, 526, 527, 528, 529,
	525, 530, 531, 532, 533, 534, 0, 535, 536, 537,
	0, 538, 539, 540, 541, 542, 671, 543, 0, 544,
	545, 551, 552, 553, 546, 547, 554, 555, 556, 557,
	558, 711, 560, 561, 559, 562, 563, 564, 0, 565,
	566, 548, 549, 567, 568, 0, 569, 570, 571, 572,
	573, 574, 575, 672, 0, 576, 0, 577, 578, 579,
	581, 550, 582, 587, 588, 673, 583, 584, 585, 586,
	674, 590, 591, 0, 592, 593, 0, 589, 580, 0,
	594, 595, 596, 597, 598, 599, 600, 361, 601, 0,
	602, 675, 676, 677, 678, 0, 611, 0, 603, 604,
	605, 679, 606, 680, 0, 607, 608, 609, 610, 0,
	612, 613, 0, 0, 614, 615, 616, 618, 619, 617,
	620, 0, 621, 0, 0, 622, 623, 624, 681, 682,
	683, 271, 626, 625, 627, 684, 0, 628, 0, 0,
	0, 0, 629, 630, 685, 631, 632, 633, 277, 279,
	278, 280, 281, 282, 283, 706, 284, 285, 0, 0,
	0, 0, 0, 634, 0, 0, 0, 0, 286, 287,
	0, 288, 289, 290, 291, 292, 293, 635, 636, 0,
	294, 637, 295, 638, 0, 639, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 640, 641, 642, 0,
	303, 304, 643, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 709,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 337, 644, 645, 0, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 347,
	348, 0, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 646, 356, 357, 358, 360, 362, 359, 363, 364,
	365, 366, 647, 648, 367, 0, 0, 0, 0, 0,
	0, 0, 368, 369, 370, 649, 0, 0, 0, 371,
	0, 372, 373, 0, 0, 0, 374, 375, 376, 650,
	651, 377, 378, 379, 380, 381, 382, 383, 384, 385,
	3961, 386, 652, 0, 653, 387, 0, 388, 389, 390,
	391, 392, 654, 655, 656, 473, 0, 393, 394, 0,
	395, 396, 397, 398, 399, 0, 0, 0, 0, 400,
	401, 402, 404, 0, 0, 403, 657, 658, 0, 659,
	0, 405, 406, 0, 660, 0, 407, 408, 409, 0,
	410, 0, 0, 0, 411, 412, 413, 414, 415, 416,
	0, 417, 419, 418, 0, 420, 661, 0, 421, 422,
	0, 0, 423, 0, 0, 0, 424, 425, 428, 0,
	0, 426, 427, 429, 430, 0, 431, 432, 434, 437,
	433, 435, 436, 438, 451, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 453, 0, 452,
	0, 454, 455, 456, 463, 465, 466, 461, 462, 464,
	467, 468, 458, 459, 460, 0, 469, 457, 0, 0,
	0, 470, 471, 0, 662, 472, 663, 474, 475, 0,
	0, 476, 0, 0, 0, 478, 479, 480, 0, 0,
	481, 482, 664, 0, 483, 0, 665, 484, 485, 477,
	486, 487, 488, 489, 490, 491, 492, 493, 494, 0,
	495, 496, 666, 497, 498, 499, 667, 500, 501, 502,
	668, 503, 669, 504, 505, 0, 506, 507, 0, 508,
	509, 510, 511, 512, 513, 514, 670, 515, 516, 518,
	517, 519, 0, 520, 0, 521, 522, 523, 0, 0,
	0, 0, 0, 524, 0, 526, 527, 528, 529, 525,
	530, 531, 532, 533, 534, 0, 535, 536, 537, 0,
	538, 539, 540, 541, 542, 671, 543, 0, 544, 545,
	551, 552, 553, 546, 547, 554, 555, 556, 557, 558,
	711, 560, 561, 559, 562, 563, 564, 0, 565, 566,
	548, 549, 567, 568, 0, 569, 570, 571, 572, 573,
	574, 575, 672, 0, 576, 0, 577, 578, 579, 581,
	550, 582, 587, 588, 673, 583, 584, 585, 586, 674,
	590, 591, 0, 592, 593, 0, 589, 580, 0, 594,
	595, 596, 597, 598, 599, 600, 361, 601, 0, 602,
	675, 676, 677, 678, 0, 611, 0, 603, 604, 605,
	679, 606, 680, 0, 607, 608, 609, 610, 0, 612,
	613, 0, 0, 614, 615, 616, 618, 619, 617, 620,
	0, 621, 0, 0, 622, 623, 624, 681, 682, 683,
	271, 626, 625, 627, 684, 0, 628, 0, 0, 0,
	0, 629, 630, 685, 631, 632, 633, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 634, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 635, 636, 0, 294,
	637, 295, 638, 0, 639, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 640, 641, 642, 0, 303,
	304, 643, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 644, 645, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	646, 356, 357, 358, 360, 362, 359, 363, 364, 365,
	366, 647, 648, 367, 0, 274, 0, 0, 0, 0,
	0, 368, 369, 370, 649, 0, 0, 0, 371, 0,
	372, 373, 0, 0, 0, 374, 375, 376, 650, 651,
	377, 378, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 652, 0, 653, 387, 0, 388, 389, 390, 391,
	392, 654, 655, 656, 473, 0, 393, 394, 0, 395,
	396, 397, 398, 399, 0, 0, 0, 275, 400, 401,
	402, 404, 0, 0, 403, 657, 658, 0, 659, 0,
	405, 406, 0, 660, 0, 407, 408, 409, 0, 410,
	0, 0, 0, 411, 412, 413, 414, 415, 416, 0,
	417, 419, 418, 0, 420, 661, 0, 421, 422, 0,
	0, 423, 0, 0, 0, 424, 425, 428, 0, 0,
	426, 427, 429, 430, 0, 431, 432, 434, 437, 433,
	435, 436, 438, 451, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 453, 0, 452, 0,
	454, 455, 456, 463, 465, 466, 461, 462, 464, 467,
	468, 458, 459, 460, 0, 469, 457, 0, 276, 0,
	470, 471, 0, 662, 472, 663, 474, 475, 0, 0,
	476, 0, 0, 1245, 478, 479, 480, 0, 0, 481,
	482, 664, 0, 483, 0, 665, 484, 485, 477, 486,
	487, 488, 489, 490, 491, 492, 493, 494, 0, 495,
	496, 666, 497, 498, 499, 667, 500, 501, 502, 668,
	503, 669, 504, 505, 0, 506, 507, 0, 508, 509,
	510, 511, 512, 513, 514, 670, 515, 516, 518, 517,
	519, 0, 520, 0, 521, 522, 523, 0, 0, 0,
	0, 0, 524, 0, 526, 527, 528, 529, 525, 530,
	531, 532, 533, 534, 0, 535, 536, 537, 0, 538,
	539, 540, 541, 542, 671, 543, 0, 544, 545, 551,
	552, 553, 546, 547, 554, 555, 556, 557, 558, 0,
	560, 561, 559, 562, 563, 564, 0, 565, 566, 548,
	549, 567, 568, 0, 569, 570, 571, 572, 573, 574,
	575, 672, 0, 576, 0, 577, 578, 579, 581, 550,
	582, 587, 588, 673, 583, 584, 585, 586, 674, 590,
	591, 0, 592, 593, 0, 589, 580, 0, 594, 595,
	596, 597, 598, 599, 600, 361, 601, 0, 602, 675,
	676, 677, 678, 0, 611, 0, 603, 604, 605, 679,
	606, 680, 0, 607, 608, 609, 610, 0, 612, 613,
	0, 0, 614, 615, 616, 618, 619, 617, 620, 0,
	621, 0, 0, 622, 623, 624, 681, 682, 683, 271,
	626, 625, 627, 684, 0, 628, 0, 0, 0, 0,
	629, 630, 685, 631, 632, 633, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 634, 0, 0, 0, 0, 286, 287, 0, 288,
	289, 290, 291, 292, 293, 635, 636, 0, 294, 637,
	295, 638, 0, 639, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 640, 641, 642, 0, 303, 304,
	643, 0, 0, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 335, 337,
	644, 645, 0, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 347, 348, 0,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 646,
	356, 357, 358, 360, 362, 359, 363, 364, 365, 366,
	647, 648, 367, 0, 274, 0, 0, 0, 0, 0,
	368, 369, 370, 649, 0, 0, 0, 371, 0, 372,
	373, 0, 0, 0, 374, 375, 376, 650, 651, 377,
	378, 379, 380, 381, 382, 383, 384, 385, 0, 386,
	652, 0, 653, 387, 0, 388, 389, 390, 391, 392,
	654, 655, 656, 473, 0, 393, 394, 0, 395, 396,
	397, 398, 399, 0, 0, 0, 275, 400, 401, 402,
	404, 0, 0, 403, 657, 658, 0, 659, 0, 405,
	406, 0, 660, 0, 407, 408, 409, 0, 410, 0,
	0, 0, 411, 412, 413, 414, 415, 416, 0, 417,
	419, 418, 0, 420, 661, 0, 421, 422, 0, 0,
	423, 0, 0, 0, 424, 425, 428, 0, 0, 426,
	427, 429, 430, 0, 431, 432, 434, 437, 433, 435,
	436, 438, 451, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 450, 453, 0, 452, 0, 454,
	455, 456, 463, 465, 466, 461, 462, 464, 467, 468,
	458, 459, 460, 3502, 469, 457, 0, 276, 0, 470,
	471, 0, 662, 472, 663, 474, 475, 0, 0, 476,
	0, 0, 0, 478, 479, 480, 0, 0, 481, 482,
	664, 0, 483, 0, 665, 484, 485, 477, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 0, 495, 496,
	666, 497, 498, 499, 667, 500, 501, 502, 668, 503,
	669, 504, 505, 0, 506, 507, 0, 508, 509, 510,
	511, 512, 513, 514, 670, 515, 516, 518, 517, 519,
	0, 520, 0, 521, 522, 523, 0, 0, 0, 0,
	0, 524, 0, 526, 527, 528, 529, 525, 530, 531,
	532, 533, 534, 0, 535, 536, 537, 0, 538, 539,
	540, 541, 542, 671, 543, 0, 544, 545, 551, 552,
	553, 546, 547, 554, 555, 556, 557, 558, 0, 560,
	561, 559, 562, 563, 564, 0, 565, 566, 548, 549,
	567, 568, 0, 569, 570, 571, 572, 573, 574, 575,
	672, 0, 576, 0, 577, 578, 579, 581, 550, 582,
	587, 588, 673, 583, 584, 585, 586, 674, 590, 591,
	0, 592, 593, 0, 589, 580, 0, 594, 595, 596,
	597, 598, 599, 600, 361, 601, 0, 602, 675, 676,
	677, 678, 0, 611, 0, 603, 604, 605, 679, 606,
	680, 0, 607, 608, 609, 610, 0, 612, 613, 0,
	0, 614, 615, 616, 618, 619, 617, 620, 0, 621,
	0, 0, 622, 623, 624, 681, 682, 683, 0, 626,
	625, 627, 684, 3045, 628, 271, 0, 0, 0, 629,
	630, 685, 631, 632, 633, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 634, 0, 0,
	0, 0, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 635, 636, 0, 294, 637, 295, 638, 0, 639,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	640, 641, 642, 0, 303, 304, 643, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 337, 644, 645, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 646, 356, 357, 358, 360,
	362, 359, 363, 364, 365, 366, 647, 648, 367, 0,
	274, 0, 0, 0, 0, 0, 368, 369, 370, 649,
	0, 0, 0, 371, 0, 372, 373, 0, 0, 0,
	374, 375, 376, 650, 651, 377, 378, 379, 380, 381,
	382, 383, 384, 385, 0, 386, 652, 0, 653, 387,
	0, 388, 389, 390, 391, 392, 3044, 655, 656, 473,
	0, 393, 394, 0, 395, 396, 397, 398, 399, 0,
	0, 0, 275, 400, 401, 402, 404, 0, 0, 403,
	657, 658, 0, 659, 0, 405, 406, 0, 660, 0,
	407, 408, 409, 0, 410, 0, 0, 0, 411, 412,
	413, 414, 415, 416, 0, 417, 419, 418, 0, 420,
	661, 0, 421, 422, 0, 0, 423, 0, 0, 0,
	424, 425, 428, 0, 0, 426, 427, 429, 430, 0,
	431, 432, 434, 437, 433, 435, 436, 438, 451, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 453, 0, 452, 0, 454, 455, 456, 463, 465,
	466, 461, 462, 464, 467, 468, 458, 459, 460, 0,
	469, 457, 0, 276, 0, 470, 471, 0, 662, 472,
	663, 474, 475, 0, 0, 476, 0, 0, 0, 478,
	479, 480, 0, 0, 481, 482, 664, 0, 483, 0,
	665, 484, 485, 477, 486, 487, 488, 489, 490, 491,
	492, 493, 494, 0, 495, 496, 666, 497, 498, 499,
	667, 500, 501, 502, 668, 503, 669, 504, 505, 0,
	506, 507, 0, 508, 509, 510, 511, 512, 513, 514,
	670, 515, 516, 518, 517, 519, 0, 520, 0, 521,
	522, 523, 0, 0, 0, 0, 0, 524, 0, 526,
	527, 528, 529, 525, 530, 531, 532, 533, 534, 0,
	535, 536, 537, 0, 538, 539, 540, 541, 542, 671,
	543, 0, 544, 545, 551, 552, 553, 546, 547, 554,
	555, 556, 557, 558, 0, 560, 561, 559, 562, 563,
	564, 0, 565, 566, 548, 549, 567, 568, 0, 569,
	570, 571, 572, 573, 574, 575, 672, 0, 576, 0,
	577, 578, 579, 581, 550, 582, 587, 588, 673, 583,
	584, 585, 586, 674, 590, 591, 0, 592, 593, 0,
	589, 580, 0, 594, 595, 596, 597, 598, 599, 600,
	361, 601, 0, 602, 675, 676, 677, 678, 0, 611,
	0, 603, 604, 605, 679, 606, 680, 0, 607, 608,
	609, 610, 0, 612, 613, 0, 0, 614, 615, 616,
	618, 619, 617, 620, 0, 621, 0, 0, 622, 623,
	624, 681, 682, 683, 0, 626, 625, 627, 684, 2327,
	628, 271, 0, 0, 0, 629, 630, 685, 631, 632,
	633, 0, 0, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 634, 0, 0, 0, 0, 286, 287,
	0, 288, 289, 290, 291, 292, 293, 635, 636, 0,
	294, 637, 295, 638, 0, 639, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 640, 641, 642, 0,
	303, 304, 643, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 337, 644, 645, 0, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 347,
	348, 0, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 646, 356, 357, 358, 360, 362, 359, 363, 364,
	365, 366, 647, 648, 367, 0, 274, 0, 0, 0,
	0, 0, 368, 369, 370, 649, 0, 0, 0, 371,
	0, 372, 373, 0, 0, 0, 374, 375, 376, 650,
	651, 377, 378, 379, 380, 381, 382, 383, 384, 385,
	0, 386, 652, 0, 653, 387, 0, 388, 389, 390,
	391, 392, 654, 655, 656, 473, 0, 393, 394, 0,
	395, 396, 397, 398, 399, 0, 0, 0, 275, 400,
	401, 402, 404, 0, 0, 403, 657, 658, 0, 659,
	0, 405, 406, 0, 660, 0, 407, 408, 409, 0,
	410, 0, 0, 0, 411, 412, 413, 414, 415, 416,
	0, 417, 419, 418, 0, 420, 661, 0, 421, 422,
	0, 0, 423, 0, 0, 0, 424, 425, 428, 0,
	0, 426, 427, 429, 430, 0, 431, 432, 434, 437,
	433, 435, 436, 438, 451, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 453, 0, 452,
	0, 454, 455, 456, 463, 465, 466, 461, 462, 464,
	467, 468, 458, 459, 460, 0, 469, 457, 0, 276,
	0, 470, 471, 0, 662, 472, 663, 474, 475, 0,
	0, 476, 0, 0, 0, 478, 479, 480, 0, 0,
	481, 482, 664, 0, 483, 0, 665, 484, 485, 477,
	486, 487, 488, 489, 490, 491, 492, 493, 494, 0,
	495, 496, 666, 497, 498, 499, 667, 500, 501, 502,
	668, 503, 669, 504, 505, 0, 506, 507, 0, 508,
	509, 510, 511, 512, 513, 514, 670, 515, 516, 518,
	517, 519, 0, 520, 0, 521, 522, 523, 0, 0,
	0, 0, 0, 524, 0, 526, 527, 528, 529, 525,
	530, 531, 532, 533, 534, 0, 535, 536, 537, 0,
	538, 539, 540, 541, 542, 671, 543, 0, 544, 545,
	551, 552, 553, 546, 547, 554, 555, 556, 557, 558,
	0, 560, 561, 559, 562, 563, 564, 0, 565, 566,
	548, 549, 567, 568, 0, 569, 570, 571, 572, 573,
	574, 575, 672, 0, 576, 0, 577, 578, 579, 581,
	550, 582, 587, 588, 673, 583, 584, 585, 586, 674,
	590, 591, 0, 592, 593, 0, 589, 580, 0, 594,
	595, 596, 597, 598, 599, 600, 361, 601, 0, 602,
	675, 676, 677, 678, 0, 611, 0, 603, 604, 605,
	679, 606, 680, 0, 607, 608, 609, 610, 0, 612,
	613, 0, 0, 614, 615, 616, 618, 619, 617, 620,
	0, 621, 0, 0, 622, 623, 624, 681, 682, 683,
	271, 626, 625, 627, 684, 0, 628, 0, 0, 0,
	0, 629, 630, 685, 631, 632, 633, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 634, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 635, 636, 0, 294,
	637, 295, 638, 0, 639, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 640, 641, 642, 0, 303,
	304, 643, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 644, 645, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	646, 356, 357, 358, 360, 362, 359, 363, 364, 365,
	366, 647, 648, 367, 0, 274, 0, 0, 0, 0,
	0, 368, 369, 370, 649, 0, 0, 0, 371, 0,
	372, 373, 0, 0, 0, 374, 375, 376, 650, 651,
	377, 378, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 652, 0, 653, 387, 0, 388, 389, 390, 391,
	392, 654, 655, 656, 473, 0, 393, 394, 0, 395,
	396, 397, 398, 399, 0, 0, 0, 275, 400, 401,
	402, 404, 0, 0, 403, 657, 658, 0, 659, 0,
	405, 406, 0, 660, 0, 407, 408, 409, 0, 410,
	0, 0, 0, 411, 412, 413, 414, 415, 416, 0,
	417, 419, 418, 0, 420, 661, 0, 421, 422, 0,
	0, 423, 0, 0, 0, 424, 425, 428, 0, 0,
	426, 427, 429, 430, 0, 431, 432, 434, 437, 433,
	435, 436, 438, 451, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 453, 0, 452, 0,
	454, 455, 456, 463, 465, 466, 461, 462, 464, 467,
	468, 458, 459, 460, 0, 469, 457, 0, 276, 0,
	470, 471, 0, 662, 472, 663, 474, 475, 0, 0,
	476, 0, 0, 0, 478, 479, 480, 0, 0, 481,
	482, 664, 0, 483, 0, 665, 484, 485, 477, 486,
	487, 488, 489, 490, 491, 492, 493, 494, 0, 495,
	496, 666, 497, 498, 499, 667, 500, 501, 502, 668,
	503, 669, 504, 505, 0, 506, 507, 0, 508, 509,
	510, 511, 512, 513, 514, 670, 515, 516, 518, 517,
	519, 0, 520, 0, 521, 522, 523, 0, 0, 0,
	0, 0, 524, 0, 526, 527, 528, 529, 525, 530,
	531, 532, 533, 534, 0, 535, 536, 537, 0, 538,
	539, 540, 541, 542, 671, 543, 0, 544, 545, 551,
	552, 553, 546, 547, 554, 555, 556, 557, 558, 0,
	560, 561, 559, 562, 563, 564, 0, 565, 566, 548,
	549, 567, 568, 0, 569, 570, 571, 572, 573, 574,
	575, 672, 0, 576, 0, 577, 578, 579, 581, 550,
	582, 587, 588, 673, 583, 584, 585, 586, 674, 590,
	591, 0, 592, 593, 0, 589, 580, 2266, 594, 595,
	596, 597, 598, 599, 600, 361, 601, 0, 602, 675,
	676, 677, 678, 0, 611, 0, 603, 604, 605, 679,
	606, 680, 0, 607, 608, 609, 610, 0, 612, 613,
	0, 0, 614, 615, 616, 618, 619, 617, 620, 0,
	621, 0, 0, 622, 623, 624, 681, 682, 683, 0,
	626, 625, 627, 684, 2273, 628, 271, 0, 0, 0,
	629, 630, 685, 631, 632, 633, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 634, 0,
	0, 0, 0, 286, 287, 0, 288, 289, 290, 291,
	292, 293, 635, 636, 0, 294, 637, 295, 638, 0,
	639, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 640, 641, 642, 0, 303, 304, 643, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 337, 644, 645, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 646, 356, 357, 358,
	360, 362, 359, 363, 364, 365, 366, 647, 648, 367,
	0, 274, 0, 0, 0, 0, 0, 368, 369, 370,
	649, 0, 0, 0, 371, 0, 372, 373, 0, 0,
	0, 374, 375, 376, 650, 651, 377, 378, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 652, 0, 653,
	387, 0, 388, 389, 390, 391, 392, 2272, 655, 656,
	473, 0, 393, 394, 0, 395, 396, 397, 398, 399,
	0, 0, 0, 275, 400, 401, 402, 404, 0, 0,
	403, 657, 658, 0, 659, 0, 405, 406, 0, 660,
	0, 407, 408, 409, 0, 410, 0, 0, 0, 411,
	412, 413, 414, 415, 416, 0, 417, 419, 418, 0,
	420, 661, 0, 421, 422, 0, 0, 423, 0, 0,
	0, 424, 425, 428, 0, 0, 426, 427, 429, 430,
	0, 431, 432, 434, 437, 433, 435, 436, 438, 451,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 453, 0, 452, 0, 454, 455, 456, 463,
	465, 466, 461, 462, 464, 467, 468, 458, 459, 460,
	0, 469, 457, 0, 276, 0, 470, 471, 0, 662,
	472, 663, 474, 475, 0, 0, 476, 0, 0, 0,
	478, 479, 480, 0, 0, 481, 482, 664, 0, 483,
	0, 665, 484, 485, 477, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 0, 495, 496, 666, 497, 498,
	499, 667, 500, 501, 502, 668, 503, 669, 504, 505,
	0, 506, 507, 0, 508, 509, 510, 511, 512, 513,
	514, 670, 515, 516, 518, 517, 519, 0, 520, 0,
	521, 522, 523, 0, 0, 0, 0, 0, 524, 0,
	526, 527, 528, 529, 525, 530, 531, 532, 533, 534,
	0, 535, 536, 537, 0, 538, 539, 540, 541, 542,
	671, 543, 0, 544, 545, 551, 552, 553, 546, 547,
	554, 555, 556, 557, 558, 0, 560, 561, 559, 562,
	563, 564, 0, 565, 566, 548, 549, 567, 568, 0,
	569, 570, 571, 572, 573, 574, 575, 672, 0, 576,
	0, 577, 578, 579, 581, 550, 582, 587, 588, 673,
	583, 584, 585, 586, 674, 590, 591, 0, 592, 593,
	0, 589, 580, 0, 594, 595, 596, 597, 598, 599,
	600, 361, 601, 0, 602, 675, 676, 677, 678, 0,
	611, 0, 603, 604, 605, 679, 606, 680, 0, 607,
	608, 609, 610, 0, 612, 613, 0, 0, 614, 615,
	616, 618, 619, 617, 620, 0, 621, 0, 0, 622,
	623, 624, 681, 682, 683, 0, 626, 625, 627, 684,
	2259, 628, 271, 0, 0, 0, 629, 630, 685, 631,
	632, 633, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 634, 0, 0, 0, 0, 286,
	287, 0, 288, 289, 290, 291, 292, 293, 635, 636,
	0, 294, 637, 295, 638, 0, 639, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 640, 641, 642,
	0, 303, 304, 643, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 337, 644, 645, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 646, 356, 357, 358, 360, 362, 359, 363,
	364, 365, 366, 647, 648, 367, 0, 274, 0, 0,
	0, 0, 0, 368, 369, 370, 649, 0, 0, 0,
	371, 0, 372, 373, 0, 0, 0, 374, 375, 376,
	650, 651, 377, 378, 379, 380, 381, 382, 383, 384,
	385, 0, 386, 652, 0, 653, 387, 0, 388, 389,
	390, 391, 392, 2261, 655, 656, 473, 0, 393, 394,
	0, 395, 396, 397, 398, 399, 0, 0, 0, 275,
	400, 401, 402, 404, 0, 0, 403, 657, 658, 0,
	659, 0, 405, 406, 0, 660, 0, 407, 408, 409,
	0, 410, 0, 0, 0, 411, 412, 413, 414, 415,
	416, 0, 417, 419, 418, 0, 420, 661, 0, 421,
	422, 0, 0, 423, 0, 0, 0, 424, 425, 428,
	0, 0, 426, 427, 429, 430, 0, 431, 432, 434,
	437, 433, 435, 436, 438, 451, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 453, 0,
	452, 0, 454, 455, 456, 463, 465, 466, 461, 462,
	464, 467, 468, 458, 459, 460, 0, 469, 457, 0,
	276, 0, 470, 471, 0, 662, 472, 663, 474, 475,
	0, 0, 476, 0, 0, 0, 478, 479, 480, 0,
	0, 481, 482, 664, 0, 483, 0, 665, 484, 485,
	477, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	0, 495, 496, 666, 497, 498, 499, 667, 500, 501,
	502, 668, 503, 669, 504, 505, 0, 506, 507, 0,
	508, 509, 510, 511, 512, 513, 514, 670, 515, 516,
	518, 517, 519, 0, 520, 0, 521, 522, 523, 0,
	0, 0, 0, 0, 524, 0, 526, 527, 528, 529,
	525, 530, 531, 532, 533, 534, 0, 535, 536, 537,
	0, 538, 539, 540, 541, 542, 671, 543, 0, 544,
	545, 551, 552, 553, 546, 547, 554, 555, 556, 557,
	558, 0, 560, 561, 559, 562, 563, 564, 0, 565,
	566, 548, 549, 567, 568, 0, 569, 570, 571, 572,
	573, 574, 575, 672, 0, 576, 0, 577, 578, 579,
	581, 550, 582, 587, 588, 673, 583, 584, 585, 586,
	674, 590, 591, 0, 592, 593, 0, 589, 580, 0,
	594, 595, 596, 597, 598, 599, 600, 361, 601, 0,
	602, 675, 676, 677, 678, 0, 611, 0, 603, 604,
	605, 679, 606, 680, 0, 607, 608, 609, 610, 0,
	612, 613, 0, 0, 614, 615, 616, 618, 619, 617,
	620, 0, 621, 0, 0, 622, 623, 624, 681, 682,
	683, 271, 626, 625, 627, 684, 0, 628, 0, 0,
	0, 0, 629, 630, 685, 631, 632, 633, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 634, 0, 0, 0, 0, 286, 287,
	0, 288, 289, 290, 291, 292, 293, 635, 636, 0,
	294, 637, 295, 638, 0, 639, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 640, 641, 642, 0,
	303, 304, 643, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 337, 644, 645, 0, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 347,
	348, 0, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 646, 356, 357, 358, 360, 362, 359, 363, 364,
	365, 366, 647, 648, 367, 0, 274, 0, 0, 0,
	0, 0, 368, 369, 370, 649, 0, 0, 0, 371,
	0, 372, 373, 0, 0, 0, 374, 375, 376, 650,
	651, 377, 378, 379, 380, 381, 382, 383, 384, 385,
	0, 386, 652, 0, 653, 387, 0, 388, 389, 390,
	391, 392, 2225, 655, 656, 473, 0, 393, 394, 0,
	395, 396, 397, 398, 399, 0, 0, 0, 275, 400,
	401, 402, 404, 0, 0, 403, 657, 658, 0, 659,
	0, 405, 406, 0, 660, 0, 407, 408, 409, 0,
	410, 0, 0, 0, 411, 412, 413, 414, 415, 416,
	0, 417, 419, 418, 0, 420, 661, 0, 421, 422,
	0, 0, 423, 0, 0, 0, 424, 425, 428, 0,
	0, 426, 427, 429, 430, 0, 431, 432, 434, 437,
	433, 435, 436, 438, 451, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 453, 0, 452,
	0, 454, 455, 456, 463, 465, 466, 461, 462, 464,
	467, 468, 458, 459, 460, 0, 469, 457, 0, 276,
	0, 470, 471, 0, 662, 472, 663, 474, 475, 0,
	0, 476, 0, 0, 1245, 478, 479, 480, 0, 0,
	481, 482, 664, 0, 483, 0, 665, 484, 485, 477,
	486, 487, 488, 489, 490, 491, 492, 493, 494, 0,
	495, 496, 666, 497, 498, 499, 667, 500, 501, 502,
	668, 503, 669, 504, 505, 0, 506, 507, 0, 508,
	509, 510, 511, 512, 513, 514, 670, 515, 516, 518,
	517, 519, 0, 520, 0, 521, 522, 523, 0, 0,
	0, 0, 0, 524, 0, 526, 527, 528, 529, 525,
	530, 531, 532, 533, 534, 0, 535, 536, 537, 0,
	538, 539, 540, 541, 542, 671, 543, 0, 544, 545,
	551, 552, 553, 546, 547, 554, 555, 556, 557, 558,
	0, 560, 561, 559, 562, 563, 564, 0, 565, 566,
	548, 549, 567, 568, 0, 569, 570, 571, 572, 573,
	574, 575, 672, 0, 576, 0, 577, 578, 579, 581,
	550, 582, 587, 588, 673, 583, 584, 585, 586, 674,
	590, 591, 0, 592, 593, 0, 589, 580, 0, 594,
	595, 596, 597, 598, 599, 600, 361, 601, 0, 602,
	675, 676, 677, 678, 0, 611, 0, 603, 604, 605,
	679, 606, 680, 0, 607, 608, 609, 610, 0, 612,
	613, 0, 0, 614, 615, 616, 618, 619, 617, 620,
	0, 621, 0, 0, 622, 623, 624, 681, 682, 683,
	0, 626, 625, 627, 684, 1590, 628, 271, 0, 0,
	0, 629, 630, 685, 631, 632, 633, 0, 0, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 634,
	0, 0, 0, 0, 286, 287, 0, 288, 289, 290,
	291, 292, 293, 635, 636, 0, 294, 637, 295, 638,
	0, 639, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 640, 641, 642, 0, 303, 304, 643, 0,
	0, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 337, 644, 645,
	0, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 347, 348, 0, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 646, 356, 357,
	358, 360, 362, 359, 363, 364, 365, 366, 647, 648,
	367, 0, 274, 0, 0, 0, 0, 0, 368, 369,
	370, 649, 0, 0, 0, 371, 0, 372, 373, 0,
	0, 0, 374, 375, 376, 650, 651, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 652, 0,
	653, 387, 0, 388, 389, 390, 391, 392, 1589, 655,
	656, 473, 0, 393, 394, 0, 395, 396, 397, 398,
	399, 0, 0, 0, 275, 400, 401, 402, 404, 0,
	0, 403, 657, 658, 0, 659, 0, 405, 406, 0,
	660, 0, 407, 408, 409, 0, 410, 0, 0, 0,
	411, 412, 413, 414, 415, 416, 0, 417, 419, 418,
	0, 420, 661, 0, 421, 422, 0, 0, 423, 0,
	0, 0, 424, 425, 428, 0, 0, 426, 427, 429,
	430, 0, 431, 432, 434, 437, 433, 435, 436, 438,
	451, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 453, 0, 452, 0, 454, 455, 456,
	463, 465, 466, 461, 462, 464, 467, 468, 458, 459,
	460, 0, 469, 457, 0, 276, 0, 470, 471, 0,
	662, 472, 663, 474, 475, 0, 0, 476, 0, 0,
	0, 478, 479, 480, 0, 0, 481, 482, 664, 0,
	483, 0, 665, 484, 485, 477, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 0, 495, 496, 666, 497,
	498, 499, 667, 500, 501, 502, 668, 503, 669, 504,
	505, 0, 506, 507, 0, 508, 509, 510, 511, 512,
	513, 514, 670, 515, 516, 518, 517, 519, 0, 520,
	0, 521, 522, 523, 0, 0, 0, 0, 0, 524,
	0, 526, 527, 528, 529, 525, 530, 531, 532, 533,
	534, 0, 535, 536, 537, 0, 538, 539, 540, 541,
	542, 671, 543, 0, 544, 545, 551, 552, 553, 546,
	547, 554, 555, 556, 557, 558, 0, 560, 561, 559,
	562, 563, 564, 0, 565, 566, 548, 549, 567, 568,
	0, 569, 570, 571, 572, 573, 574, 575, 672, 0,
	576, 0, 577, 578, 579, 581, 550, 582, 587, 588,
	673, 583, 584, 585, 586, 674, 590, 591, 0, 592,
	593, 0, 589, 580, 0, 594, 595, 596, 597, 598,
	599, 600, 361, 601, 0, 602, 675, 676, 677, 678,
	0, 611, 0, 603, 604, 605, 679, 606, 680, 0,
	607, 608, 609, 610, 0, 612, 613, 0, 0, 614,
	615, 616, 618, 619, 617, 620, 0, 621, 0, 0,
	622, 623, 624, 681, 682, 683, 0, 626, 625, 627,
	684, 1502, 628, 271, 0, 0, 0, 629, 630, 685,
	631, 632, 633, 0, 0, 0, 0, 0, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 634, 0, 0, 0, 0,
	286, 287, 0, 288, 289, 290, 291, 292, 293, 635,
	636, 0, 294, 637, 295, 638, 0, 639, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 640, 641,
	642, 0, 303, 304, 643, 0, 0, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 337, 644, 645, 0, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 347, 348, 0, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 646, 356, 357, 358, 360, 362, 359,
	363, 364, 365, 366, 647, 648, 367, 0, 274, 0,
	0, 0, 0, 0, 368, 369, 370, 649, 0, 0,
	0, 371, 0, 372, 373, 0, 0, 0, 374, 375,
	376, 650, 651, 377, 378, 379, 380, 381, 382, 383,
	384, 385, 0, 386, 652, 0, 653, 387, 0, 388,
	389, 390, 391, 392, 654, 655, 656, 473, 0, 393,
	394, 0, 395, 396, 397, 398, 399, 0, 0, 0,
	275, 400, 401, 402, 404, 0, 0, 403, 657, 658,
	0, 659, 0, 405, 406, 0, 660, 0, 407, 408,
	409, 0, 410, 0, 0, 0, 411, 412, 413, 414,
	415, 416, 0, 417, 419, 418, 0, 420, 661, 0,
	421, 422, 0, 0, 423, 0, 0, 0, 424, 425,
	428, 0, 0, 426, 427, 429, 430, 0, 431, 432,
	434, 437, 433, 435, 436, 438, 451, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 450, 453,
	0, 452, 0, 454, 455, 456, 463, 465, 466, 461,
	462, 464, 467, 468, 458, 459, 460, 0, 469, 457,
	0, 276, 0, 470, 471, 0, 662, 472, 663, 474,
	475, 0, 0, 476, 0, 0, 0, 478, 479, 480,
	0, 0, 481, 482, 664, 0, 483, 0, 665, 484,
	485, 477, 486, 487, 488, 489, 490, 491, 492, 493,
	494, 0, 495, 496, 666, 497, 498, 499, 667, 500,
	501, 502, 668, 503, 669, 504, 505, 0, 506, 507,
	0, 508, 509, 510, 511, 512, 513, 514, 670, 515,
	516, 518, 517, 519, 0, 520, 0, 521, 522, 523,
	0, 0, 0, 0, 0, 524, 0, 526, 527, 528,
	529, 525, 530, 531, 532, 533, 534, 0, 535, 536,
	537, 0, 538, 539, 540, 541, 542, 671, 543, 0,
	544, 545, 551, 552, 553, 546, 547, 554, 555, 556,
	557, 558, 0, 560, 561, 559, 562, 563, 564, 0,
	565, 566, 548, 549, 567, 568, 0, 569, 570, 571,
	572, 573, 574, 575, 672, 0, 576, 0, 577, 578,
	579, 581, 550, 582, 587, 588, 673, 583, 584, 585,
	586, 674, 590, 591, 0, 592, 593, 0, 589, 580,
	0, 594, 595, 596, 597, 598, 599, 600, 361, 601,
	0, 602, 675, 676, 677, 678, 0, 611, 0, 603,
	604, 605, 679, 606, 680, 0, 607, 608, 609, 610,
	0, 612, 613, 0, 0, 614, 615, 616, 618, 619,
	617, 620, 0, 621, 0, 0, 622, 623, 624, 681,
	682, 683, 0, 626, 625, 627, 684, 1495, 628, 271,
	0, 0, 0, 629, 630, 685, 631, 632, 633, 0,
	0, 0, 0, 0, 0, 0, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 634, 0, 0, 0, 0, 286, 287, 0, 288,
	289, 290, 291, 292, 293, 635, 636, 0, 294, 637,
	295, 638, 0, 639, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 640, 641, 642, 0, 303, 304,
	643, 0, 0, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 335, 337,
	644, 645, 0, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 347, 348, 0,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 646,
	356, 357, 358, 360, 362, 359, 363, 364, 365, 366,
	647, 648, 367, 0, 274, 0, 0, 0, 0, 0,
	368, 369, 370, 649, 0, 0, 0, 371, 0, 372,
	373, 0, 0, 0, 374, 375, 376, 650, 651, 377,
	378, 379, 380, 381, 382, 383, 384, 385, 0, 386,
	652, 0, 653, 387, 0, 388, 389, 390, 391, 392,
	1497, 655, 656, 473, 0, 393, 394, 0, 395, 396,
	397, 398, 399, 0, 0, 0, 275, 400, 401, 402,
	404, 0, 0, 403, 657, 658, 0, 659, 0, 405,
	406, 0, 660, 0, 407, 408, 409, 0, 410, 0,
	0, 0, 411, 412, 413, 414, 415, 416, 0, 417,
	419, 418, 0, 420, 661, 0, 421, 422, 0, 0,
	423, 0, 0, 0, 424, 425, 428, 0, 0, 426,
	427, 429, 430, 0, 431, 432, 434, 437, 433, 435,
	436, 438, 451, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 450, 453, 0, 452, 0, 454,
	455, 456, 463, 465, 466, 461, 462, 464, 467, 468,
	458, 459, 460, 0, 469, 457, 0, 276, 0, 470,
	471, 0, 662, 472, 663, 474, 475, 0, 0, 476,
	0, 0, 0, 478, 479, 480, 0, 0, 481, 482,
	664, 0, 483, 0, 665, 484, 485, 477, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 0, 495, 496,
	666, 497, 498, 499, 667, 500, 501, 502, 668, 503,
	669, 504, 505, 0, 506, 507, 0, 508, 509, 510,
	511, 512, 513, 514, 670, 515, 516, 518, 517, 519,
	0, 520, 0, 521, 522, 523, 0, 0, 0, 0,
	0, 524, 0, 526, 527, 528, 529, 525, 530, 531,
	532, 533, 534, 0, 535, 536, 537, 0, 538, 539,
	540, 541, 542, 671, 543, 0, 544, 545, 551, 552,
	553, 546, 547, 554, 555, 556, 557, 558, 0, 560,
	561, 559, 562, 563, 564, 0, 565, 566, 548, 549,
	567, 568, 0, 569, 570, 571, 572, 573, 574, 575,
	672, 0, 576, 0, 577, 578, 579, 581, 550, 582,
	587, 588, 673, 583, 584, 585, 586, 674, 590, 591,
	0, 592, 593, 0, 589, 580, 0, 594, 595, 596,
	597, 598, 599, 600, 361, 601, 0, 602, 675, 676,
	677, 678, 0, 611, 0, 603, 604, 605, 679, 606,
	680, 0, 607, 608, 609, 610, 0, 612, 613, 0,
	0, 614, 615, 616, 618, 619, 617, 620, 0, 621,
	0, 0, 622, 623, 624, 681, 682, 683, 0, 626,
	625, 627, 684, 1319, 628, 271, 0, 0, 0, 629,
	630, 685, 631, 632, 633, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 634, 0, 0,
	0, 0, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 635, 636, 0, 294, 637, 295, 638, 0, 639,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	640, 641, 642, 0, 303, 304, 643, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 337, 644, 645, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 646, 356, 357, 358, 360,
	362, 359, 363, 364, 365, 366, 647, 648, 367, 0,
	274, 0, 0, 0, 0, 0, 368, 369, 370, 649,
	0, 0, 0, 371, 0, 372, 373, 0, 0, 0,
	374, 375, 376, 650, 651, 377, 378, 379, 380, 381,
	382, 383, 384, 385, 0, 386, 652, 0, 653, 387,
	0, 388, 389, 390, 391, 392, 1318, 655, 656, 473,
	0, 393, 394, 0, 395, 396, 397, 398, 399, 0,
	0, 0, 275, 400, 401, 402, 404, 0, 0, 403,
	657, 658, 0, 659, 0, 405, 406, 0, 660, 0,
	407, 408, 409, 0, 410, 0, 0, 0, 411, 412,
	413, 414, 415, 416, 0, 417, 419, 418, 0, 420,
	661, 0, 421, 422, 0, 0, 423, 0, 0, 0,
	424, 425, 428, 0, 0, 426, 427, 429, 430, 0,
	431, 432, 434, 437, 433, 435, 436, 438, 451, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 453, 0, 452, 0, 454, 455, 456, 463, 465,
	466, 461, 462, 464, 467, 468, 458, 459, 460, 0,
	469, 457, 0, 276, 0, 470, 471, 0, 662, 472,
	663, 474, 475, 0, 0, 476, 0, 0, 0, 478,
	479, 480, 0, 0, 481, 482, 664, 0, 483, 0,
	665, 484, 485, 477, 486, 487, 488, 489, 490, 491,
	492, 493, 494, 0, 495, 496, 666, 497, 498, 499,
	667, 500, 501, 502, 668, 503, 669, 504, 505, 0,
	506, 507, 0, 508, 509, 510, 511, 512, 513, 514,
	670, 515, 516, 518, 517, 519, 0, 520, 0, 521,
	522, 523, 0, 0, 0, 0, 0, 524, 0, 526,
	527, 528, 529, 525, 530, 531, 532, 533, 534, 0,
	535, 536, 537, 0, 538, 539, 540, 541, 542, 671,
	543, 0, 544, 545, 551, 552, 553, 546, 547, 554,
	555, 556, 557, 558, 0, 560, 561, 559, 562, 563,
	564, 0, 565, 566, 548, 549, 567, 568, 0, 569,
	570, 571, 572, 573, 574, 575, 672, 0, 576, 0,
	577, 578, 579, 581, 550, 582, 587, 588, 673, 583,
	584, 585, 586, 674, 590, 591, 0, 592, 593, 0,
	589, 580, 0, 594, 595, 596, 597, 598, 599, 600,
	361, 601, 0, 602, 675, 676, 677, 678, 0, 611,
	0, 603, 604, 605, 679, 606, 680, 0, 607, 608,
	609, 610, 0, 612, 613, 0, 0, 614, 615, 616,
	618, 619, 617, 620, 0, 621, 0, 0, 622, 623,
	624, 681, 682, 683, 0, 626, 625, 627, 684, 1309,
	628, 271, 0, 0, 0, 629, 630, 685, 631, 632,
	633, 0, 0, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 634, 0, 0, 0, 0, 286, 287,
	0, 288, 289, 290, 291, 292, 293, 635, 636, 0,
	294, 637, 295, 638, 0, 639, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 640, 641, 642, 0,
	303, 304, 643, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 337, 644, 645, 0, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 347,
	348, 0, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 646, 356, 357, 358, 360, 362, 359, 363, 364,
	365, 366, 647, 648, 367, 0, 274, 0, 0, 0,
	0, 0, 368, 369, 370, 649, 0, 0, 0, 371,
	0, 372, 373, 0, 0, 0, 374, 375, 376, 650,
	651, 377, 378, 379, 380, 381, 382, 383, 384, 385,
	0, 386, 652, 0, 653, 387, 0, 388, 389, 390,
	391, 392, 1308, 655, 656, 473, 0, 393, 394, 0,
	395, 396, 397, 398, 399, 0, 0, 0, 275, 400,
	401, 402, 404, 0, 0, 403, 657, 658, 0, 659,
	0, 405, 406, 0, 660, 0, 407, 408, 409, 0,
	410, 0, 0, 0, 411, 412, 413, 414, 415, 416,
	0, 417, 419, 418, 0, 420, 661, 0, 421, 422,
	0, 0, 423, 0, 0, 0, 424, 425, 428, 0,
	0, 426, 427, 429, 430, 0, 431, 432, 434, 437,
	433, 435, 436, 438, 451, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 453, 0, 452,
	0, 454, 455, 456, 463, 465, 466, 461, 462, 464,
	467, 468, 458, 459, 460, 0, 469, 457, 0, 276,
	0, 470, 471, 0, 662, 472, 663, 474, 475, 0,
	0, 476, 0, 0, 0, 478, 479, 480, 0, 0,
	481, 482, 664, 0, 483, 0, 665, 484, 485, 477,
	486, 487, 488, 489, 490, 491, 492, 493, 494, 0,
	495, 496, 666, 497, 498, 499, 667, 500, 501, 502,
	668, 503, 669, 504, 505, 0, 506, 507, 0, 508,
	509, 510, 511, 512, 513, 514, 670, 515, 516, 518,
	517, 519, 0, 520, 0, 521, 522, 523, 0, 0,
	0, 0, 0, 524, 0, 526, 527, 528, 529, 525,
	530, 531, 532, 533, 534, 0, 535, 536, 537, 0,
	538, 539, 540, 541, 542, 671, 543, 0, 544, 545,
	551, 552, 553, 546, 547, 554, 555, 556, 557, 558,
	0, 560, 561, 559, 562, 563, 564, 0, 565, 566,
	548, 549, 567, 568, 0, 569, 570, 571, 572, 573,
	574, 575, 672, 0, 576, 0, 577, 578, 579, 581,
	550, 582, 587, 588, 673, 583, 584, 585, 586, 674,
	590, 591, 0, 592, 593, 0, 589, 580, 0, 594,
	595, 596, 597, 598, 599, 600, 361, 601, 0, 602,
	675, 676, 677, 678, 0, 611, 0, 603, 604, 605,
	679, 606, 680, 0, 607, 608, 609, 610, 0, 612,
	613, 0, 0, 614, 615, 616, 618, 619, 617, 620,
	0, 621, 0, 0, 622, 623, 624, 681, 682, 683,
	0, 626, 625, 627, 684, 1306, 628, 271, 0, 0,
	0, 629, 630, 685, 631, 632, 633, 0, 0, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 634,
	0, 0, 0, 0, 286, 287, 0, 288, 289, 290,
	291, 292, 293, 635, 636, 0, 294, 637, 295, 638,
	0, 639, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 640, 641, 642, 0, 303, 304, 643, 0,
	0, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 337, 644, 645,
	0, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 347, 348, 0, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 646, 356, 357,
	358, 360, 362, 359, 363, 364, 365, 366, 647, 648,
	367, 0, 274, 0, 0, 0, 0, 0, 368, 369,
	370, 649, 0, 0, 0, 371, 0, 372, 373, 0,
	0, 0, 374, 375, 376, 650, 651, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 652, 0,
	653, 387, 0, 388, 389, 390, 391, 392, 1305, 655,
	656, 473, 0, 393, 394, 0, 395, 396, 397, 398,
	399, 0, 0, 0, 275, 400, 401, 402, 404, 0,
	0, 403, 657, 658, 0, 659, 0, 405, 406, 0,
	660, 0, 407, 408, 409, 0, 410, 0, 0, 0,
	411, 412, 413, 414, 415, 416, 0, 417, 419, 418,
	0, 420, 661, 0, 421, 422, 0, 0, 423, 0,
	0, 0, 424, 425, 428, 0, 0, 426, 427, 429,
	430, 0, 431, 432, 434, 437, 433, 435, 436, 438,
	451, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 453, 0, 452, 0, 454, 455, 456,
	463, 465, 466, 461, 462, 464, 467, 468, 458, 459,
	460, 0, 469, 457, 0, 276, 0, 470, 471, 0,
	662, 472, 663, 474, 475, 0, 0, 476, 0, 0,
	0, 478, 479, 480, 0, 0, 481, 482, 664, 0,
	483, 0, 665, 484, 485, 477, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 0, 495, 496, 666, 497,
	498, 499, 667, 500, 501, 502, 668, 503, 669, 504,
	505, 0, 506, 507, 0, 508, 509, 510, 511, 512,
	513, 514, 670, 515, 516, 518, 517, 519, 0, 520,
	0, 521, 522, 523, 0, 0, 0, 0, 0, 524,
	0, 526, 527, 528, 529, 525, 530, 531, 532, 533,
	534, 0, 535, 536, 537, 0, 538, 539, 540, 541,
	542, 671, 543, 0, 544, 545, 551, 552, 553, 546,
	547, 554, 555, 556, 557, 558, 0, 560, 561, 559,
	562, 563, 564, 0, 565, 566, 548, 549, 567, 568,
	0, 569, 570, 571, 572, 573, 574, 575, 672, 0,
	576, 0, 577, 578, 579, 581, 550, 582, 587, 588,
	673, 583, 584, 585, 586, 674, 590, 591, 0, 592,
	593, 0, 589, 580, 0, 594, 595, 596, 597, 598,
	599, 600, 361, 601, 0, 602, 675, 676, 677, 678,
	0, 611, 0, 603, 604, 605, 679, 606, 680, 0,
	607, 608, 609, 610, 0, 612, 613, 0, 0, 614,
	615, 616, 618, 619, 617, 620, 0, 621, 0, 0,
	622, 623, 624, 681, 682, 683, 0, 626, 625, 627,
	684, 1301, 628, 271, 0, 0, 0, 629, 630, 685,
	631, 632, 633, 0, 0, 0, 0, 0, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 634, 0, 0, 0, 0,
	286, 287, 0, 288, 289, 290, 291, 292, 293, 635,
	636, 0, 294, 637, 295, 638, 0, 639, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 640, 641,
	642, 0, 303, 304, 643, 0, 0, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 337, 644, 645, 0, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 347, 348, 0, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 646, 356, 357, 358, 360, 362, 359,
	363, 364, 365, 366, 647, 648, 367, 0, 274, 0,
	0, 0, 0, 0, 368, 369, 370, 649, 0, 0,
	0, 371, 0, 372, 373, 0, 0, 0, 374, 375,
	376, 650, 651, 377, 378, 379, 380, 381, 382, 383,
	384, 385, 0, 386, 652, 0, 653, 387, 0, 388,
	389, 390, 391, 392, 1300, 655, 656, 473, 0, 393,
	394, 0, 395, 396, 397, 398, 399, 0, 0, 0,
	275, 400, 401, 402, 404, 0, 0, 403, 657, 658,
	0, 659, 0, 405, 406, 0, 660, 0, 407, 408,
	409, 0, 410, 0, 0, 0, 411, 412, 413, 414,
	415, 416, 0, 417, 419, 418, 0, 420, 661, 0,
	421, 422, 0, 0, 423, 0, 0, 0, 424, 425,
	428, 0, 0, 426, 427, 429, 430, 0, 431, 432,
	434, 437, 433, 435, 436, 438, 451, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 450, 453,
	0, 452, 0, 454, 455, 456, 463, 465, 466, 461,
	462, 464, 467, 468, 458, 459, 460, 0, 469, 457,
	0, 276, 0, 470, 471, 0, 662, 472, 663, 474,
	475, 0, 0, 476, 0, 0, 0, 478, 479, 480,
	0, 0, 481, 482, 664, 0, 483, 0, 665, 484,
	485, 477, 486, 487, 488, 489, 490, 491, 492, 493,
	494, 0, 495, 496, 666, 497, 498, 499, 667, 500,
	501, 502, 668, 503, 669, 504, 505, 0, 506, 507,
	0, 508, 509, 510, 511, 512, 513, 514, 670, 515,
	516, 518, 517, 519, 0, 520, 0, 521, 522, 523,
	0, 0, 0, 0, 0, 524, 0, 526, 527, 528,
	529, 525, 530, 531, 532, 533, 534, 0, 535, 536,
	537, 0, 538, 539, 540, 541, 542, 671, 543, 0,
	544, 545, 551, 552, 553, 546, 547, 554, 555, 556,
	557, 558, 0, 560, 561, 559, 562, 563, 564, 0,
	565, 566, 548, 549, 567, 568, 0, 569, 570, 571,
	572, 573, 574, 575, 672, 0, 576, 0, 577, 578,
	579, 581, 550, 582, 587, 588, 673, 583, 584, 585,
	586, 674, 590, 591, 0, 592, 593, 0, 589, 580,
	0, 594, 595, 596, 597, 598, 599, 600, 361, 601,
	0, 602, 675, 676, 677, 678, 0, 611, 0, 603,
	604, 605, 679, 606, 680, 0, 607, 608, 609, 610,
	0, 612, 613, 0, 0, 614, 615, 616, 618, 619,
	617, 620, 0, 621, 0, 0, 622, 623, 624, 681,
	682, 683, 0, 626, 625, 627, 684, 687, 628, 271,
	0, 0, 0, 629, 630, 685, 631, 632, 633, 0,
	0, 0, 0, 0, 0, 0, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 634, 0, 0, 0, 0, 286, 287, 0, 288,
	289, 290, 291, 292, 293, 635, 636, 0, 294, 637,
	295, 638, 0, 639, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 640, 641, 642, 0, 303, 304,
	643, 0, 0, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 335, 337,
	644, 645, 0, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 347, 348, 0,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 646,
	356, 357, 358, 360, 362, 359, 363, 364, 365, 366,
	647, 648, 367, 0, 274, 0, 0, 0, 0, 0,
	368, 369, 370, 649, 0, 0, 0, 371, 0, 372,
	373, 0, 0, 0, 374, 375, 376, 650, 651, 377,
	378, 379, 380, 381, 382, 383, 384, 385, 0, 386,
	652, 0, 653, 387, 0, 388, 389, 390, 391, 392,
	654, 655, 656, 473, 0, 393, 394, 0, 395, 396,
	397, 398, 399, 0, 0, 0, 275, 400, 401, 402,
	404, 0, 0, 403, 657, 658, 0, 659, 0, 405,
	406, 0, 660, 0, 407, 408, 409, 0, 410, 0,
	0, 0, 411, 412, 413, 414, 415, 416, 0, 417,
	419, 418, 0, 420, 661, 0, 421, 422, 0, 0,
	423, 0, 0, 0, 424, 425, 428, 0, 0, 426,
	427, 429, 430, 0, 431, 432, 434, 437, 433, 435,
	436, 438, 451, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 450, 453, 0, 452, 0, 454,
	455, 456, 463, 465, 466, 461, 462, 464, 467, 468,
	458, 459, 460, 0, 469, 457, 0, 276, 0, 470,
	471, 0, 662, 472, 663, 474, 475, 0, 0, 476,
	0, 0, 0, 478, 479, 480, 0, 0, 481, 482,
	664, 0, 483, 0, 665, 484, 485, 477, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 0, 495, 496,
	666, 497, 498, 499, 667, 500, 501, 502, 668, 503,
	669, 504, 505, 0, 506, 507, 0, 508, 509, 510,
	511, 512, 513, 514, 670, 515, 516, 518, 517, 519,
	0, 520, 0, 521, 522, 523, 0, 0, 0, 0,
	0, 524, 0, 526, 527, 528, 529, 525, 530, 531,
	532, 533, 534, 0, 535, 536, 537, 0, 538, 539,
	540, 541, 542, 671, 543, 0, 544, 545, 551, 552,
	553, 546, 547, 554, 555, 556, 557, 558, 0, 560,
	561, 559, 562, 563, 564, 0, 565, 566, 548, 549,
	567, 568, 0, 569, 570, 571, 572, 573, 574, 575,
	672, 0, 576, 0, 577, 578, 579, 581, 550, 582,
	587, 588, 673, 583, 584, 585, 586, 674, 590, 591,
	0, 592, 593, 0, 589, 580, 0, 594, 595, 596,
	597, 598, 599, 600, 361, 601, 0, 602, 675, 676,
	677, 678, 0, 611, 0, 603, 604, 605, 679, 606,
	680, 0, 607, 608, 609, 610, 0, 612, 613, 0,
	0, 614, 615, 616, 618, 619, 617, 620, 0, 621,
	0, 0, 622, 623, 624, 681, 682, 683, 0, 626,
	625, 627, 684, 262, 628, 271, 0, 0, 0, 629,
	630, 685, 631, 632, 633, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 634, 0, 0,
	0, 0, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 635, 636, 0, 294, 637, 295, 638, 0, 639,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	640, 641, 642, 0, 303, 304, 643, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 337, 644, 645, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 646, 356, 357, 358, 360,
	362, 359, 363, 364, 365, 366, 647, 648, 367, 0,
	274, 0, 0, 0, 0, 0, 368, 369, 370, 649,
	0, 0, 0, 371, 0, 372, 373, 0, 0, 0,
	374, 375, 376, 650, 651, 377, 378, 379, 380, 381,
	382, 383, 384, 385, 0, 386, 652, 0, 653, 387,
	0, 388, 389, 390, 391, 392, 654, 655, 656, 473,
	0, 393, 394, 0, 395, 396, 397, 398, 399, 0,
	0, 0, 275, 400, 401, 402, 404, 0, 0, 403,
	657, 658, 0, 659, 0, 405, 406, 0, 660, 0,
	407, 408, 409, 0, 410, 0, 0, 0, 411, 412,
	413, 414, 415, 416, 0, 417, 419, 418, 0, 420,
	661, 0, 421, 422, 0, 0, 423, 0, 0, 0,
	424, 425, 428, 0, 0, 426, 427, 429, 430, 0,
	431, 432, 434, 437, 433, 435, 436, 438, 451, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 453, 0, 452, 0, 454, 455, 456, 463, 465,
	466, 461, 462, 464, 467, 468, 458, 459, 460, 0,
	469, 457, 0, 276, 0, 470, 471, 0, 662, 472,
	663, 474, 475, 0, 0, 476, 0, 0, 0, 478,
	479, 480, 0, 0, 481, 482, 664, 0, 483, 0,
	665, 484, 485, 477, 486, 487, 488, 489, 490, 491,
	492, 493, 494, 0, 495, 496, 666, 497, 498, 499,
	667, 500, 501, 502, 668, 503, 669, 504, 505, 0,
	506, 507, 0, 508, 509, 510, 511, 512, 513, 514,
	670, 515, 516, 518, 517, 519, 0, 520, 0, 521,
	522, 523, 0, 0, 0, 0, 0, 524, 0, 526,
	527, 528, 529, 525, 530, 531, 532, 533, 534, 0,
	535, 536, 537, 0, 538, 539, 540, 541, 542, 671,
	543, 0, 544, 545, 551, 552, 553, 546, 547, 554,
	555, 556, 557, 558, 0, 560, 561, 559, 562, 563,
	564, 0, 565, 566, 548, 549, 567, 568, 0, 569,
	570, 571, 572, 573, 574, 575, 672, 0, 576, 0,
	577, 578, 579, 581, 550, 582, 587, 588, 673, 583,
	584, 585, 586, 674, 590, 591, 0, 592, 593, 0,
	589, 580, 0, 594, 595, 596, 597, 598, 599, 600,
	361, 601, 0, 602, 675, 676, 677, 678, 0, 611,
	0, 603, 604, 605, 679, 606, 680, 0, 607, 608,
	609, 610, 0, 612, 613, 0, 0, 614, 615, 616,
	618, 619, 617, 620, 0, 621, 0, 0, 622, 623,
	624, 681, 682, 683, 271, 626, 625, 627, 684, 0,
	628, 0, 0, 0, 0, 629, 630, 685, 631, 632,
	633, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 634, 0, 0, 0,
	0, 286, 287, 0, 288, 289, 290, 291, 292, 293,
	635, 636, 0, 294, 637, 295, 638, 0, 639, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 640,
	641, 642, 0, 303, 304, 643, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 337, 644, 645, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 646, 356, 357, 358, 360, 362,
	359, 363, 364, 365, 366, 647, 648, 367, 0, 274,
	0, 0, 0, 0, 0, 368, 369, 370, 649, 0,
	0, 0, 371, 0, 372, 373, 0, 0, 0, 374,
	375, 376, 650, 651, 377, 378, 379, 380, 381, 382,
	383, 384, 385, 0, 386, 652, 0, 653, 387, 0,
	388, 389, 390, 391, 392, 654, 655, 656, 473, 0,
	393, 394, 0, 395, 396, 397, 398, 399, 0, 0,
	0, 275, 400, 401, 402, 404, 0, 0, 403, 657,
	658, 0, 659, 0, 405, 406, 0, 660, 0, 407,
	408, 409, 0, 410, 0, 0, 0, 411, 412, 413,
	414, 415, 416, 0, 417, 419, 418, 0, 420, 661,
	0, 421, 422, 0, 0, 423, 0, 0, 0, 424,
	425, 428, 0, 0, 426, 427, 429, 430, 0, 431,
	432, 434, 437, 433, 435, 436, 438, 451, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	453, 0, 452, 0, 454, 455, 456, 463, 465, 466,
	461, 462, 464, 467, 468, 458, 459, 460, 0, 469,
	457, 0, 276, 0, 470, 471, 0, 662, 472, 663,
	474, 475, 0, 0, 476, 0, 0, 0, 478, 479,
	480, 0, 0, 481, 482, 664, 0, 483, 0, 665,
	484, 485, 477, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 0, 495, 496, 666, 497, 498, 499, 667,
	500, 501, 502, 668, 503, 669, 504, 505, 0, 506,
	507, 0, 508, 509, 510, 511, 512, 513, 514, 670,
	515, 516, 518, 517, 519, 0, 520, 0, 521, 522,
	523, 0, 0, 0, 0, 0, 524, 0, 526, 527,
	528, 529, 525, 530, 531, 532, 533, 534, 0, 535,
	536, 537, 0, 538, 539, 540, 541, 542, 671, 543,
	0, 544, 545, 551, 552, 553, 546, 547, 554, 555,
	556, 557, 558, 0, 560, 561, 559, 562, 563, 564,
	0, 565, 566, 548, 549, 567, 568, 0, 569, 570,
	571, 572, 573, 574, 575, 672, 0, 576, 0, 577,
	578, 579, 581, 550, 582, 587, 588, 673, 583, 584,
	585, 586, 674, 590, 591, 0, 592, 593, 0, 589,
	580, 0, 594, 595, 596, 597, 598, 599, 600, 361,
	601, 0, 602, 675, 676, 677, 678, 0, 611, 0,
	603, 604, 605, 679, 606, 680, 0, 607, 608, 609,
	610, 0, 612, 613, 0, 0, 614, 615, 616, 618,
	619, 617, 620, 0, 621, 0, 0, 622, 623, 624,
	681, 682, 683, 271, 626, 625, 627, 684, 0, 628,
	0, 0, 0, 0, 629, 630, 685, 631, 632, 633,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 634, 0, 0, 0, 0,
	286, 287, 0, 288, 289, 290, 291, 292, 293, 635,
	636, 0, 294, 637, 295, 638, 0, 639, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 640, 641,
	642, 0, 303, 304, 643, 0, 0, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 709, 324, 325, 326, 0, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 337, 644, 645, 0, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 347, 348, 0, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 646, 356, 357, 358, 360, 362, 359,
	363, 364, 365, 366, 647, 648, 367, 0, 0, 0,
	0, 0, 0, 0, 368, 369, 370, 649, 0, 0,
	0, 371, 0, 372, 373, 0, 0, 0, 374, 375,
	376, 650, 651, 377, 378, 379, 380, 381, 382, 383,
	384, 385, 710, 386, 652, 0, 653, 387, 0, 388,
	389, 390, 391, 392, 654, 655, 656, 473, 0, 393,
	394, 0, 395, 396, 397, 398, 399, 0, 0, 0,
	0, 400, 401, 402, 404, 0, 0, 403, 657, 658,
	0, 659, 0, 405, 406, 0, 660, 0, 407, 408,
	409, 0, 410, 0, 0, 0, 411, 412, 413, 414,
	415, 416, 0, 417, 419, 418, 0, 420, 661, 0,
	421, 422, 0, 0, 423, 0, 0, 0, 424, 425,
	428, 0, 0, 426, 427, 429, 430, 0, 431, 432,
	434, 437, 433, 435, 436, 438, 451, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 450, 453,
	0, 452, 0, 454, 455, 456, 463, 465, 466, 461,
	462, 464, 467, 468, 458, 459, 460, 0, 469, 457,
	0, 0, 0, 470, 471, 0, 662, 472, 663, 474,
	475, 0, 0, 476, 0, 0, 0, 478, 479, 480,
	0, 0, 481, 482, 664, 0, 483, 0, 665, 484,
	485, 477, 486, 487, 488, 489, 490, 491, 492, 493,
	494, 0, 495, 496, 666, 497, 498, 499, 667, 500,
	501, 502, 668, 503, 669, 504, 505, 0, 506, 507,
	0, 508, 509, 510, 511, 512, 513, 514, 670, 515,
	516, 518, 517, 519, 0, 520, 0, 521, 522, 523,
	0, 0, 0, 0, 0, 524, 0, 526, 527, 528,
	529, 525, 530, 531, 532, 533, 534, 0, 535, 536,
	537, 0, 538, 539, 540, 541, 542, 671, 543, 0,
	544, 545, 551, 552, 553, 546, 547, 554, 555, 556,
	557, 558, 711, 560, 561, 559, 562, 563, 564, 0,
	565, 566, 548, 549, 567, 568, 0, 569, 570, 571,
	572, 573, 574, 575, 672, 0, 576, 0, 577, 578,
	579, 581, 550, 582, 587, 588, 673, 583, 584, 585,
	586, 674, 590, 591, 0, 592, 593, 0, 589, 580,
	0, 594, 595, 596, 597, 598, 599, 600, 361, 601,
	0, 602, 675, 676, 677, 678, 0, 611, 0, 603,
	604, 605, 679, 606, 680, 0, 607, 608, 609, 610,
	0, 612, 613, 0, 0, 614, 615, 616, 618, 619,
	617, 620, 0, 621, 0, 0, 622, 623, 624, 681,
	682, 683, 271, 626, 625, 627, 684, 0, 628, 0,
	0, 0, 0, 629, 630, 685, 631, 632, 633, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 634, 0, 0, 0, 0, 286,
	287, 0, 288, 289, 290, 291, 292, 293, 635, 636,
	0, 294, 637, 295, 638, 0, 639, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 640, 641, 642,
	0, 303, 304, 643, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 2367, 334,
	0, 335, 337, 644, 645, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 646, 356, 357, 358, 360, 362, 359, 363,
	364, 365, 366, 647, 648, 367, 0, 274, 0, 0,
	0, 0, 0, 368, 369, 370, 649, 0, 0, 0,
	371, 0, 372, 373, 0, 0, 0, 374, 375, 376,
	650, 651, 377, 378, 379, 380, 381, 382, 383, 384,
	385, 0, 386, 652, 0, 653, 387, 0, 388, 389,
	390, 391, 392, 654, 655, 656, 473, 0, 393, 394,
	0, 395, 396, 397, 398, 399, 0, 0, 0, 275,
	400, 401, 402, 404, 0, 0, 403, 657, 658, 0,
	659, 0, 405, 406, 0, 660, 0, 407, 408, 409,
	0, 410, 0, 0, 0, 411, 412, 413, 414, 415,
	416, 0, 417, 419, 418, 0, 420, 661, 0, 421,
	422, 0, 0, 423, 0, 0, 0, 424, 425, 428,
	0, 0, 426, 427, 429, 430, 0, 431, 432, 434,
	437, 433, 435, 436, 438, 451, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 453, 0,
	452, 0, 454, 455, 456, 463, 465, 466, 461, 462,
	464, 467, 468, 458, 459, 460, 0, 469, 457, 0,
	276, 0, 470, 471, 0, 662, 472, 663, 474, 475,
	0, 0, 476, 0, 0, 0, 478, 479, 480, 0,
	0, 481, 482, 664, 0, 483, 0, 665, 484, 485,
	477, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	0, 495, 496, 666, 497, 498, 499, 667, 500, 501,
	502, 668, 503, 669, 504, 505, 0, 506, 507, 0,
	508, 509, 510, 511, 512, 513, 514, 670, 515, 516,
	518, 517, 519, 0, 520, 0, 521, 522, 523, 0,
	0, 0, 0, 0, 524, 0, 526, 527, 528, 529,
	525, 530, 531, 532, 533, 534, 0, 535, 536, 537,
	0, 538, 539, 540, 541, 542, 671, 543, 0, 544,
	545, 551, 552, 553, 546, 547, 554, 555, 556, 557,
	558, 0, 560, 561, 559, 562, 563, 564, 0, 565,
	566, 548, 549, 567, 568, 0, 569, 570, 571, 572,
	573, 574, 575, 672, 0, 576, 0, 577, 578, 579,
	581, 550, 582, 587, 588, 673, 583, 584, 585, 586,
	674, 590, 591, 0, 592, 593, 0, 589, 580, 0,
	594, 595, 596, 597, 598, 599, 600, 361, 601, 0,
	602, 675, 676, 677, 678, 0, 611, 0, 603, 604,
	605, 679, 606, 680, 0, 607, 608, 609, 610, 0,
	612, 613, 0, 0, 614, 615, 616, 618, 619, 617,
	620, 0, 621, 0, 0, 622, 623, 624, 681, 682,
	683, 271, 626, 625, 627, 684, 0, 628, 0, 0,
	0, 0, 629, 630, 685, 631, 632, 633, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 634, 0, 0, 0, 0, 286, 287,
	0, 288, 289, 290, 291, 292, 293, 635, 636, 0,
	294, 637, 295, 638, 0, 639, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 640, 641, 642, 0,
	303, 304, 643, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 2365, 334, 0,
	335, 337, 644, 645, 0, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 347,
	348, 0, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 646, 356, 357, 358, 360, 362, 359, 363, 364,
	365, 366, 647, 648, 367, 0, 274, 0, 0, 0,
	0, 0, 368, 369, 370, 649, 0, 0, 0, 371,
	0, 372, 373, 0, 0, 0, 374, 375, 376, 650,
	651, 377, 378, 379, 380, 381, 382, 383, 384, 385,
	0, 386, 652, 0, 653, 387, 0, 388, 389, 390,
	391, 392, 654, 655, 656, 473, 0, 393, 394, 0,
	395, 396, 397, 398, 399, 0, 0, 0, 275, 400,
	401, 402, 404, 0, 0, 403, 657, 658, 0, 659,
	0, 405, 406, 0, 660, 0, 407, 408, 409, 0,
	410, 0, 0, 0, 411, 412, 413, 414, 415, 416,
	0, 417, 419, 418, 0, 420, 661, 0, 421, 422,
	0, 0, 423, 0, 0, 0, 424, 425, 428, 0,
	0, 426, 427, 429, 430, 0, 431, 432, 434, 437,
	433, 435, 436, 438, 451, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 453, 0, 452,
	0, 454, 455, 456, 463, 465, 466, 461, 462, 464,
	467, 468, 458, 459, 460, 0, 469, 457, 0, 276,
	0, 470, 471, 0, 662, 472, 663, 474, 475, 0,
	0, 476, 0, 0, 0, 478, 479, 480, 0, 0,
	481, 482, 664, 0, 483, 0, 665, 484, 485, 477,
	486, 487, 488, 489, 490, 491, 492, 493, 494, 0,
	495, 496, 666, 497, 498, 499, 667, 500, 501, 502,
	668, 503, 669, 504, 505, 0, 506, 507, 0, 508,
	509, 510, 511, 512, 513, 514, 670, 515, 516, 518,
	517, 519, 0, 520, 0, 521, 522, 523, 0, 0,
	0, 0, 0, 524, 0, 526, 527, 528, 529, 525,
	530, 531, 532, 533, 534, 0, 535, 536, 537, 0,
	538, 539, 540, 541, 542, 671, 543, 0, 544, 545,
	551, 552, 553, 546, 547, 554, 555, 556, 557, 558,
	0, 560, 561, 559, 562, 563, 564, 0, 565, 566,
	548, 549, 567, 568, 0, 569, 570, 571, 572, 573,
	574, 575, 672, 0, 576, 0, 577, 578, 579, 581,
	550, 582, 587, 588, 673, 583, 584, 585, 586, 674,
	590, 591, 0, 592, 593, 0, 589, 580, 0, 594,
	595, 596, 597, 598, 599, 600, 361, 601, 0, 602,
	675, 676, 677, 678, 0, 611, 0, 603, 604, 605,
	679, 606, 680, 0, 607, 608, 609, 610, 0, 612,
	613, 0, 0, 614, 615, 616, 618, 619, 617, 620,
	0, 621, 0, 0, 622, 623, 624, 681, 682, 683,
	271, 626, 625, 627, 684, 0, 628, 0, 0, 0,
	0, 629, 630, 685, 631, 632, 633, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 634, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 635, 636, 0, 294,
	637, 295, 638, 0, 639, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 640, 641, 642, 0, 303,
	304, 643, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 2363, 334, 0, 335,
	337, 644, 645, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	646, 356, 357, 358, 360, 362, 359, 363, 364, 365,
	366, 647, 648, 367, 0, 274, 0, 0, 0, 0,
	0, 368, 369, 370, 649, 0, 0, 0, 371, 0,
	372, 373, 0, 0, 0, 374, 375, 376, 650, 651,
	377, 378, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 652, 0, 653, 387, 0, 388, 389, 390, 391,
	392, 654, 655, 656, 473, 0, 393, 394, 0, 395,
	396, 397, 398, 399, 0, 0, 0, 275, 400, 401,
	402, 404, 0, 0, 403, 657, 658, 0, 659, 0,
	405, 406, 0, 660, 0, 407, 408, 409, 0, 410,
	0, 0, 0, 411, 412, 413, 414, 415, 416, 0,
	417, 419, 418, 0, 420, 661, 0, 421, 422, 0,
	0, 423, 0, 0, 0, 424, 425, 428, 0, 0,
	426, 427, 429, 430, 0, 431, 432, 434, 437, 433,
	435, 436, 438, 451, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 453, 0, 452, 0,
	454, 455, 456, 463, 465, 466, 461, 462, 464, 467,
	468, 458, 459, 460, 0, 469, 457, 0, 276, 0,
	470, 471, 0, 662, 472, 663, 474, 475, 0, 0,
	476, 0, 0, 0, 478, 479, 480, 0, 0, 481,
	482, 664, 0, 483, 0, 665, 484, 485, 477, 486,
	487, 488, 489, 490, 491, 492, 493, 494, 0, 495,
	496, 666, 497, 498, 499, 667, 500, 501, 502, 668,
	503, 669, 504, 505, 0, 506, 507, 0, 508, 509,
	510, 511, 512, 513, 514, 670, 515, 516, 518, 517,
	519, 0, 520, 0, 521, 522, 523, 0, 0, 0,
	0, 0, 524, 0, 526, 527, 528, 529, 525, 530,
	531, 532, 533, 534, 0, 535, 536, 537, 0, 538,
	539, 540, 541, 542, 671, 543, 0, 544, 545, 551,
	552, 553, 546, 547, 554, 555, 556, 557, 558, 0,
	560, 561, 559, 562, 563, 564, 0, 565, 566, 548,
	549, 567, 568, 0, 569, 570, 571, 572, 573, 574,
	575, 672, 0, 576, 0, 577, 578, 579, 581, 550,
	582, 587, 588, 673, 583, 584, 585, 586, 674, 590,
	591, 0, 592, 593, 0, 589, 580, 0, 594, 595,
	596, 597, 598, 599, 600, 361, 601, 0, 602, 675,
	676, 677, 678, 0, 611, 0, 603, 604, 605, 679,
	606, 680, 0, 607, 608, 609, 610, 0, 612, 613,
	0, 0, 614, 615, 616, 618, 619, 617, 620, 0,
	621, 0, 0, 622, 623, 624, 681, 682, 683, 271,
	626, 625, 627, 684, 0, 628, 0, 0, 0, 0,
	629, 630, 685, 631, 632, 633, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 634, 0, 0, 0, 0, 286, 287, 0, 288,
	289, 290, 291, 292, 293, 635, 636, 0, 294, 637,
	295, 638, 0, 639, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 640, 641, 642, 0, 303, 304,
	643, 0, 0, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 335, 337,
	644, 645, 0, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 347, 348, 0,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 646,
	356, 357, 358, 360, 362, 359, 363, 364, 365, 366,
	647, 648, 367, 0, 274, 0, 0, 0, 0, 0,
	368, 369, 370, 649, 0, 0, 0, 371, 0, 372,
	373, 0, 0, 0, 374, 375, 376, 650, 651, 377,
	378, 379, 380, 381, 382, 383, 384, 385, 0, 386,
	652, 0, 653, 387, 0, 388, 389, 390, 391, 392,
	2279, 655, 656, 473, 0, 393, 394, 0, 395, 396,
	397, 398, 399, 0, 0, 0, 275, 400, 401, 402,
	404, 0, 0, 403, 657, 658, 0, 659, 0, 405,
	406, 0, 660, 0, 407, 408, 409, 0, 410, 0,
	0, 0, 411, 412, 413, 414, 415, 416, 0, 417,
	419, 418, 0, 420, 661, 0, 421, 422, 0, 0,
	423, 0, 0, 0, 424, 425, 428, 0, 0, 426,
	427, 429, 430, 0, 431, 432, 434, 437, 433, 435,
	436, 438, 451, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 450, 453, 0, 452, 0, 454,
	455, 456, 463, 465, 466, 461, 462, 464, 467, 468,
	458, 459, 460, 0, 469, 457, 0, 276, 0, 470,
	471, 0, 662, 472, 663, 474, 475, 0, 0, 476,
	0, 0, 0, 478, 479, 480, 0, 0, 481, 482,
	664, 0, 483, 0, 665, 484, 485, 477, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 0, 495, 496,
	666, 497, 498, 499, 667, 500, 501, 502, 668, 503,
	669, 504, 505, 0, 506, 507, 0, 508, 509, 510,
	511, 512, 513, 514, 670, 515, 516, 518, 517, 519,
	0, 520, 0, 521, 522, 523, 0, 0, 0, 0,
	0, 524, 0, 526, 527, 528, 529, 525, 530, 531,
	532, 533, 534, 0, 535, 536, 537, 0, 538, 539,
	540, 541, 542, 671, 543, 0, 544, 545, 551, 552,
	553, 546, 547, 554, 555, 556, 557, 558, 0, 560,
	561, 559, 562, 563, 564, 0, 565, 566, 548, 549,
	567, 568, 0, 569, 570, 571, 572, 573, 574, 575,
	672, 0, 576, 0, 577, 578, 579, 581, 550, 582,
	587, 588, 673, 583, 584, 585, 586, 674, 590, 591,
	0, 592, 593, 0, 589, 580, 0, 594, 595, 596,
	597, 598, 599, 600, 361, 601, 0, 602, 675, 676,
	677, 678, 0, 611, 0, 603, 604, 605, 679, 606,
	680, 0, 607, 608, 609, 610, 0, 612, 613, 0,
	0, 614, 615, 616, 618, 619, 617, 620, 0, 621,
	0, 0, 622, 623, 624, 681, 682, 683, 271, 626,
	625, 627, 684, 0, 628, 0, 0, 0, 0, 629,
	630, 685, 631, 632, 633, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	634, 0, 0, 0, 0, 286, 287, 0, 288, 289,
	290, 291, 292, 293, 635, 636, 0, 294, 637, 295,
	638, 0, 639, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 640, 641, 642, 0, 303, 304, 643,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 337, 644,
	645, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 646, 356,
	357, 358, 360, 362, 359, 363, 364, 365, 366, 647,
	648, 367, 0, 274, 0, 0, 0, 0, 0, 368,
	369, 370, 649, 0, 0, 0, 371, 0, 372, 373,
	0, 0, 0, 374, 375, 376, 650, 651, 377, 378,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 652,
	0, 653, 387, 0, 388, 389, 390, 391, 392, 2073,
	655, 656, 473, 0, 393, 394, 0, 395, 396, 397,
	398, 399, 0, 0, 0, 275, 400, 401, 402, 404,
	0, 0, 403, 657, 658, 0, 659, 0, 405, 406,
	0, 660, 0, 407, 408, 409, 0, 410, 0, 0,
	0, 411, 412, 413, 414, 415, 416, 0, 417, 419,
	418, 0, 420, 661, 0, 421, 422, 0, 0, 423,
	0, 0, 0, 424, 425, 428, 0, 0, 426, 427,
	429, 430, 0, 431, 432, 434, 437, 433, 435, 436,
	438, 451, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 453, 0, 452, 0, 454, 455,
	456, 463, 465, 466, 461, 462, 464, 467, 468, 458,
	459, 460, 0, 469, 457, 0, 276, 0, 470, 471,
	0, 662, 472, 663, 474, 475, 0, 0, 476, 0,
	0, 0, 478, 479, 480, 0, 0, 481, 482, 664,
	0, 483, 0, 665, 484, 485, 477, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 0, 495, 496, 666,
	497, 498, 499, 667, 500, 501, 502, 668, 503, 669,
	504, 505, 0, 506, 507, 0, 508, 509, 510, 511,
	512, 513, 514, 670, 515, 516, 518, 517, 519, 0,
	520, 0, 521, 522, 523, 0, 0, 0, 0, 0,
	524, 0, 526, 527, 528, 529, 525, 530, 531, 532,
	533, 534, 0, 535, 536, 537, 0, 538, 539, 540,
	541, 542, 671, 543, 0, 544, 545, 551, 552, 553,
	546, 547, 554, 555, 556, 557, 558, 0, 560, 561,
	559, 562, 563, 564, 0, 565, 566, 548, 549, 567,
	568, 0, 569, 570, 571, 572, 573, 574, 575, 672,
	0, 576, 0, 577, 578, 579, 581, 550, 582, 587,
	588, 673, 583, 584, 585, 586, 674, 590, 591, 0,
	592, 593, 0, 589, 580, 0, 594, 595, 596, 597,
	598, 599, 600, 361, 601, 0, 602, 675, 676, 677,
	678, 0, 611, 0, 603, 604, 605, 679, 606, 680,
	0, 607, 608, 609, 610, 0, 612, 613, 0, 0,
	614, 615, 616, 618, 619, 617, 620, 0, 621, 0,
	0, 622, 623, 624, 681, 682, 683, 271, 626, 625,
	627, 684, 0, 628, 0, 0, 0, 0, 629, 630,
	685, 631, 632, 633, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 634,
	0, 0, 0, 0, 286, 287, 0, 288, 289, 290,
	291, 292, 293, 635, 636, 0, 294, 637, 295, 638,
	0, 639, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 640, 641, 642, 0, 303, 304, 643, 0,
	0, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 337, 644, 645,
	0, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 347, 348, 0, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 646, 356, 357,
	358, 360, 362, 359, 363, 364, 365, 366, 647, 648,
	367, 0, 274, 0, 0, 0, 0, 0, 368, 369,
	370, 649, 0, 0, 0, 371, 0, 372, 373, 0,
	0, 0, 374, 375, 376, 650, 651, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 652, 0,
	653, 387, 0, 388, 389, 390, 391, 392, 2067, 655,
	656, 473, 0, 393, 394, 0, 395, 396, 397, 398,
	399, 0, 0, 0, 275, 400, 401, 402, 404, 0,
	0, 403, 657, 658, 0, 659, 0, 405, 406, 0,
	660, 0, 407, 408, 409, 0, 410, 0, 0, 0,
	411, 412, 413, 414, 415, 416, 0, 417, 419, 418,
	0, 420, 661, 0, 421, 422, 0, 0, 423, 0,
	0, 0, 424, 425, 428, 0, 0, 426, 427, 429,
	430, 0, 431, 432, 434, 437, 433, 435, 436, 438,
	451, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 453, 0, 452, 0, 454, 455, 456,
	463, 465, 466, 461, 462, 464, 467, 468, 458, 459,
	460, 0, 469, 457, 0, 276, 0, 470, 471, 0,
	662, 472, 663, 474, 475, 0, 0, 476, 0, 0,
	0, 478, 479, 480, 0, 0, 481, 482, 664, 0,
	483, 0, 665, 484, 485, 477, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 0, 495, 496, 666, 497,
	498, 499, 667, 500, 501, 502, 668, 503, 669, 504,
	505, 0, 506, 507, 0, 508, 509, 510, 511, 512,
	513, 514, 670, 515, 516, 518, 517, 519, 0, 520,
	0, 521, 522, 523, 0, 0, 0, 0, 0, 524,
	0, 526, 527, 528, 529, 525, 530, 531, 532, 533,
	534, 0, 535, 536, 537, 0, 538, 539, 540, 541,
	542, 671, 543, 0, 544, 545, 551, 552, 553, 546,
	547, 554, 555, 556, 557, 558, 0, 560, 561, 559,
	562, 563, 564, 0, 565, 566, 548, 549, 567, 568,
	0, 569, 570, 571, 572, 573, 574, 575, 672, 0,
	576, 0, 577, 578, 579, 581, 550, 582, 587, 588,
	673, 583, 584, 585, 586, 674, 590, 591, 0, 592,
	593, 0, 589, 580, 0, 594, 595, 596, 597, 598,
	599, 600, 361, 601, 0, 602, 675, 676, 677, 678,
	0, 611, 0, 603, 604, 605, 679, 606, 680, 0,
	607, 608, 609, 610, 0, 612, 613, 0, 0, 614,
	615, 616, 618, 619, 617, 620, 0, 621, 0, 0,
	622, 623, 624, 681, 682, 683, 0, 626, 625, 627,
	684, 894, 628, 271, 0, 0, 0, 629, 630, 685,
	631, 632, 633, 0, 0, 0, 0, 0, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 634, 0, 0, 0, 0,
	286, 287, 0, 288, 289, 290, 291, 292, 293, 635,
	636, 0, 294, 637, 295, 638, 0, 639, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 640, 641,
	642, 0, 303, 304, 643, 0, 0, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 337, 644, 645, 0, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 347, 348, 0, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 646, 356, 357, 358, 360, 362, 359,
	363, 364, 365, 366, 647, 648, 367, 0, 0, 0,
	0, 0, 0, 0, 368, 369, 370, 649, 0, 0,
	0, 371, 0, 372, 373, 0, 0, 0, 374, 375,
	376, 650, 651, 377, 378, 379, 380, 381, 382, 383,
	384, 385, 0, 386, 652, 0, 653, 387, 0, 388,
	389, 390, 391, 392, 654, 655, 656, 473, 0, 393,
	394, 0, 395, 396, 397, 398, 399, 0, 0, 0,
	0, 400, 401, 402, 404, 0, 0, 403, 657, 658,
	0, 659, 893, 405, 406, 0, 660, 0, 407, 408,
	409, 0, 410, 0, 0, 0, 411, 412, 413, 414,
	415, 416, 0, 417, 419, 418, 0, 420, 661, 0,
	421, 422, 0, 0, 423, 0, 0, 0, 424, 425,
	428, 0, 0, 426, 427, 429, 430, 0, 431, 432,
	434, 437, 433, 435, 436, 438, 451, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 450, 453,
	0, 452, 0, 454, 455, 456, 463, 465, 466, 461,
	462, 464, 467, 468, 458, 459, 460, 0, 469, 457,
	0, 0, 0, 470, 471, 0, 662, 472, 663, 474,
	475, 0, 0, 476, 0, 0, 0, 478, 479, 480,
	0, 0, 481, 482, 664, 0, 483, 0, 665, 484,
	485, 477, 486, 487, 488, 489, 490, 491, 492, 493,
	494, 0, 495, 496, 666, 497, 498, 499, 667, 500,
	501, 502, 668, 503, 669, 504, 505, 0, 506, 507,
	0, 508, 509, 510, 511, 512, 513, 514, 670, 515,
	516, 518, 517, 519, 0, 520, 0, 521, 522, 523,
	0, 0, 0, 0, 0, 524, 0, 526, 527, 528,
	529, 525, 530, 531, 532, 533, 534, 0, 535, 536,
	537, 0, 538, 539, 540, 541, 542, 671, 543, 0,
	544, 545, 551, 552, 553, 546, 547, 554, 555, 556,
	557, 558, 0, 560, 561, 559, 562, 563, 564, 0,
	565, 566, 548, 549, 567, 568, 0, 569, 570, 571,
	572, 573, 574, 575, 672, 0, 576, 0, 577, 578,
	579, 581, 550, 582, 587, 588, 673, 583, 584, 585,
	586, 674, 590, 591, 0, 592, 593, 0, 589, 580,
	892, 594, 595, 596, 597, 598, 599, 600, 361, 601,
	0, 602, 675, 676, 677, 678, 0, 611, 0, 603,
	604, 605, 679, 606, 680, 0, 607, 608, 609, 610,
	0, 612, 613, 0, 0, 614, 615, 616, 618, 619,
	617, 620, 0, 621, 0, 0, 622, 623, 624, 681,
	682, 683, 271, 626, 625, 627, 684, 0, 628, 0,
	0, 0, 0, 629, 630, 685, 631, 632, 633, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 634, 0, 0, 0, 0, 286,
	287, 0, 288, 289, 290, 291, 292, 293, 635, 636,
	0, 294, 637, 295, 638, 0, 639, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 640, 641, 642,
	0, 303, 304, 643, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 337, 644, 645, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 646, 356, 357, 358, 360, 362, 359, 363,
	364, 365, 366, 647, 648, 367, 0, 3100, 0, 0,
	0, 0, 0, 368, 369, 370, 649, 0, 0, 0,
	371, 0, 372, 373, 0, 0, 0, 374, 375, 376,
	650, 651, 377, 378, 379, 380, 381, 382, 383, 384,
	385, 0, 386, 652, 0, 653, 387, 0, 388, 389,
	390, 391, 392, 654, 655, 656, 473, 0, 393, 394,
	0, 395, 396, 397, 398, 399, 0, 0, 0, 0,
	400, 401, 402, 404, 0, 0, 403, 657, 658, 0,
	659, 0, 405, 406, 0, 660, 0, 407, 408, 409,
	0, 410, 0, 0, 0, 411, 412, 413, 414, 415,
	416, 0, 417, 419, 418, 0, 420, 661, 0, 421,
	422, 0, 0, 423, 0, 0, 0, 424, 425, 428,
	0, 0, 426, 427, 429, 430, 0, 431, 432, 434,
	437, 433, 435, 436, 438, 451, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 453, 0,
	452, 0, 454, 455, 456, 463, 465, 466, 461, 462,
	464, 467, 468, 458, 459, 460, 0, 469, 457, 0,
	0, 0, 470, 471, 0, 662, 472, 663, 474, 475,
	0, 0, 476, 0, 0, 0, 478, 479, 480, 0,
	0, 481, 482, 664, 0, 483, 0, 665, 484, 485,
	477, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	0, 495, 496, 666, 497, 498, 499, 667, 500, 501,
	502, 668, 503, 669, 504, 505, 4257, 506, 507, 0,
	508, 509, 510, 511, 512, 513, 514, 670, 515, 516,
	518, 517, 519, 0, 520, 0, 521, 522, 523, 0,
	0, 0, 0, 0, 524, 0, 526, 527, 528, 529,
	525, 530, 531, 532, 533, 534, 0, 535, 536, 537,
	0, 538, 539, 540, 541, 542, 671, 543, 0, 544,
	545, 551, 552, 553, 546, 547, 554, 555, 556, 557,
	558, 0, 560, 561, 559, 562, 563, 564, 0, 565,
	566, 548, 549, 567, 568, 0, 569, 570, 571, 572,
	573, 574, 575, 672, 0, 576, 0, 577, 578, 579,
	581, 550, 582, 587, 588, 673, 583, 584, 585, 586,
	674, 590, 591, 0, 592, 593, 0, 589, 580, 0,
	594, 595, 596, 597, 598, 599, 600, 361, 601, 0,
	602, 675, 676, 677, 678, 0, 611, 0, 603, 604,
	605, 679, 606, 680, 0, 607, 608, 609, 610, 0,
	612, 613, 0, 0, 614, 615, 616, 618, 619, 617,
	620, 0, 621, 0, 0, 622, 623, 624, 681, 682,
	683, 0, 626, 625, 627, 684, 1353, 628, 271, 0,
	0, 0, 629, 630, 685, 631, 632, 633, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	634, 0, 0, 0, 0, 286, 287, 1356, 288, 289,
	290, 291, 292, 293, 635, 636, 0, 294, 637, 295,
	638, 0, 639, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 640, 641, 1354, 0, 303, 304, 643,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 337, 644,
	645, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 646, 356,
	357, 358, 360, 362, 359, 363, 364, 365, 366, 647,
	648, 367, 0, 0, 0, 0, 0, 0, 0, 368,
	369, 370, 649, 0, 0, 0, 371, 0, 372, 373,
	0, 0, 0, 374, 375, 376, 650, 651, 377, 378,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 652,
	0, 653, 387, 0, 388, 389, 390, 391, 392, 654,
	655, 656, 473, 0, 393, 394, 0, 395, 396, 397,
	398, 399, 0, 0, 0, 0, 400, 401, 402, 404,
	0, 0, 403, 657, 658, 0, 659, 0, 405, 406,
	0, 660, 0, 407, 408, 409, 0, 410, 0, 0,
	0, 411, 412, 413, 414, 415, 416, 0, 417, 419,
	418, 0, 420, 661, 0, 421, 422, 0, 0, 423,
	0, 0, 0, 424, 425, 428, 0, 0, 426, 427,
	429, 430, 0, 431, 432, 434, 437, 433, 435, 436,
	438, 451, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 453, 0, 777, 0, 454, 455,
	456, 463, 465, 466, 461, 462, 464, 467, 468, 458,
	459, 460, 0, 469, 457, 0, 0, 0, 470, 471,
	0, 662, 472, 663, 474, 475, 0, 0, 476, 0,
	0, 0, 478, 479, 480, 0, 0, 481, 482, 664,
	0, 483, 0, 665, 484, 485, 477, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 0, 495, 496, 666,
	497, 498, 499, 667, 500, 501, 502, 668, 503, 669,
	504, 505, 0, 506, 507, 0, 508, 509, 510, 511,
	512, 513, 514, 670, 515, 516, 518, 517, 519, 0,
	520, 0, 521, 522, 523, 0, 0, 0, 0, 0,
	524, 0, 526, 527, 528, 529, 525, 530, 531, 532,
	533, 534, 0, 535, 536, 537, 0, 776, 539, 540,
	541, 542, 671, 543, 0, 544, 545, 551, 552, 553,
	546, 547, 775, 555, 556, 557, 558, 0, 560, 561,
	559, 562, 1357, 564, 0, 565, 566, 548, 549, 567,
	568, 0, 569, 570, 571, 572, 573, 574, 575, 672,
	0, 576, 0, 577, 578, 579, 581, 550, 582, 587,
	588, 673, 583, 584, 585, 586, 674, 590, 591, 0,
	592, 593, 0, 589, 580, 0, 594, 595, 596, 597,
	598, 599, 600, 361, 601, 0, 602, 773, 676, 677,
	678, 0, 611, 0, 603, 604, 605, 679, 606, 680,
	0, 607, 608, 609, 610, 0, 612, 613, 0, 0,
	614, 615, 616, 618, 619, 617, 620, 0, 621, 0,
	0, 622, 623, 624, 681, 682, 683, 0, 626, 625,
	627, 684, 1353, 628, 271, 0, 0, 0, 629, 630,
	685, 631, 632, 633, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 634, 0, 0, 0,
	0, 286, 287, 1356, 288, 289, 290, 291, 292, 293,
	635, 636, 0, 294, 637, 295, 638, 0, 639, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 640,
	641, 1354, 0, 303, 304, 643, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 337, 644, 645, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 646, 356, 357, 358, 360, 362,
	359, 363, 364, 365, 366, 647, 648, 367, 0, 0,
	0, 0, 0, 0, 0, 368, 369, 370, 649, 0,
	0, 0, 371, 0, 372, 373, 0, 0, 0, 374,
	375, 376, 650, 651, 377, 378, 379, 380, 381, 382,
	383, 384, 385, 0, 386, 652, 0, 653, 387, 0,
	388, 389, 390, 391, 392, 654, 655, 656, 473, 0,
	393, 394, 0, 395, 396, 397, 398, 399, 0, 0,
	0, 0, 400, 401, 402, 404, 0, 0, 403, 657,
	658, 0, 659, 0, 405, 406, 0, 660, 0, 407,
	408, 409, 0, 410, 0, 0, 0, 411, 412, 413,
	414, 415, 416, 0, 417, 419, 418, 0, 420, 661,
	0, 421, 422, 0, 0, 423, 0, 0, 0, 424,
	425, 428, 0, 0, 426, 427, 429, 430, 0, 431,
	432, 434, 437, 433, 435, 436, 438, 451, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	453, 0, 777, 0, 454, 455, 456, 463, 465, 466,
	461, 462, 464, 467, 468, 458, 459, 460, 0, 469,
	457, 0, 0, 0, 470, 471, 0, 662, 472, 663,
	474, 475, 0, 0, 476, 0, 0, 0, 478, 479,
	480, 0, 0, 481, 482, 664, 0, 483, 0, 665,
	484, 485, 477, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 0, 495, 496, 666, 497, 498, 499, 667,
	500, 501, 502, 668, 503, 669, 504, 505, 0, 506,
	507, 0, 508, 509, 510, 511, 512, 513, 514, 670,
	515, 516, 518, 517, 519, 0, 520, 0, 521, 522,
	523, 0, 0, 0, 0, 0, 524, 0, 526, 527,
	528, 529, 525, 530, 531, 532, 533, 534, 0, 535,
	536, 537, 0, 776, 539, 540, 541, 542, 671, 543,
	0, 544, 545, 551, 552, 553, 546, 547, 775, 555,
	556, 557, 558, 0, 560, 561, 559, 562, 1357, 564,
	0, 565, 566, 548, 549, 567, 568, 0, 569, 570,
	571, 572, 573, 574, 575, 672, 0, 576, 0, 577,
	578, 579, 581, 550, 582, 587, 588, 673, 583, 584,
	585, 586, 674, 590, 591, 0, 592, 593, 0, 589,
	580, 0, 594, 595, 596, 597, 598, 599, 600, 361,
	601, 0, 602, 773, 676, 677, 678, 0, 611, 0,
	603, 1355, 605, 679, 606, 680, 0, 607, 608, 609,
	610, 0, 612, 613, 0, 0, 614, 615, 616, 618,
	619, 617, 620, 0, 621, 0, 0, 622, 623, 624,
	681, 682, 683, 0, 626, 625, 627, 684, 696, 628,
	271, 0, 0, 0, 629, 630, 685, 631, 632, 633,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 695, 284, 285, 0, 0, 0,
	0, 0, 634, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 635, 636, 0, 294,
	637, 295, 638, 0, 639, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 640, 641, 642, 0, 303,
	304, 643, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 644, 645, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	646, 356, 357, 358, 360, 362, 359, 363, 364, 365,
	366, 647, 648, 367, 0, 0, 0, 0, 0, 0,
	0, 368, 369, 370, 649, 0, 0, 0, 371, 0,
	372, 373, 0, 0, 0, 374, 375, 376, 650, 651,
	377, 378, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 652, 0, 653, 387, 0, 388, 389, 390, 391,
	392, 654, 655, 656, 473, 0, 393, 394, 0, 395,
	396, 397, 398, 399, 0, 0, 0, 0, 400, 401,
	402, 404, 0, 0, 403, 657, 658, 0, 659, 0,
	405, 406, 0, 660, 0, 407, 408, 409, 0, 410,
	0, 0, 0, 411, 412, 413, 414, 415, 416, 0,
	417, 419, 418, 0, 420, 661, 0, 421, 422, 0,
	0, 423, 0, 0, 0, 424, 425, 428, 0, 0,
	426, 427, 429, 430, 0, 431, 432, 434, 437, 433,
	435, 436, 438, 451, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 453, 0, 452, 0,
	454, 455, 456, 463, 465, 466, 461, 462, 464, 467,
	468, 458, 459, 460, 0, 469, 457, 0, 0, 0,
	470, 471, 0, 662, 472, 663, 474, 475, 0, 0,
	476, 0, 0, 0, 478, 479, 480, 0, 0, 481,
	482, 664, 0, 483, 0, 665, 484, 485, 477, 486,
	487, 488, 489, 490, 491, 492, 493, 494, 0, 495,
	496, 666, 497, 498, 499, 667, 500, 501, 502, 668,
	503, 669, 694, 505, 0, 506, 507, 0, 508, 509,
	510, 511, 512, 513, 514, 670, 515, 516, 518, 517,
	519, 0, 520, 0, 521, 522, 523, 0, 0, 0,
	0, 0, 524, 0, 526, 527, 528, 529, 525, 530,
	531, 532, 533, 534, 0, 535, 536, 537, 0, 538,
	539, 540, 541, 542, 671, 543, 0, 544, 545, 551,
	552, 553, 546, 547, 554, 555, 556, 557, 558, 0,
	560, 561, 559, 562, 563, 564, 0, 565, 566, 548,
	549, 567, 568, 0, 569, 570, 571, 572, 573, 574,
	575, 672, 0, 576, 0, 577, 578, 579, 581, 550,
	582, 587, 588, 673, 583, 584, 585, 586, 674, 590,
	591, 0, 592, 593, 0, 589, 580, 0, 594, 595,
	596, 597, 598, 599, 600, 361, 601, 0, 602, 675,
	676, 677, 678, 0, 611, 0, 603, 604, 605, 679,
	606, 680, 0, 607, 608, 609, 610, 0, 612, 613,
	0, 0, 614, 615, 616, 618, 619, 617, 620, 0,
	621, 0, 0, 622, 623, 624, 681, 682, 683, 0,
	626, 625, 627, 684, 0, 628, 271, 3087, 0, 0,
	629, 630, 685, 631, 632, 633, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 634, 0,
	0, 0, 0, 286, 287, 0, 288, 289, 290, 291,
	292, 293, 635, 636, 0, 294, 637, 295, 638, 0,
	639, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 640, 641, 642, 0, 303, 304, 643, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 337, 644, 645, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 646, 356, 357, 358,
	360, 362, 359, 363, 364, 365, 366, 647, 648, 367,
	0, 0, 0, 0, 0, 0, 0, 368, 369, 370,
	649, 0, 0, 0, 371, 0, 372, 373, 0, 0,
	0, 374, 375, 376, 650, 651, 377, 378, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 652, 0, 653,
	387, 0, 388, 389, 390, 391, 392, 654, 655, 656,
	473, 0, 393, 394, 0, 395, 396, 397, 398, 399,
	0, 0, 0, 0, 400, 401, 402, 404, 0, 0,
	403, 657, 658, 0, 659, 0, 405, 406, 0, 660,
	0, 407, 408, 409, 0, 410, 0, 0, 0, 411,
	412, 413, 414, 415, 416, 0, 417, 419, 418, 0,
	420, 661, 0, 421, 422, 0, 0, 423, 0, 0,
	0, 424, 425, 428, 0, 0, 426, 427, 429, 430,
	0, 431, 432, 434, 437, 433, 435, 436, 438, 451,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 453, 0, 452, 0, 454, 455, 456, 463,
	465, 466, 461, 462, 464, 467, 468, 458, 459, 460,
	0, 469, 457, 0, 0, 0, 470, 471, 0, 662,
	472, 663, 474, 475, 0, 0, 476, 0, 0, 0,
	478, 479, 480, 0, 0, 481, 482, 664, 0, 483,
	0, 665, 484, 485, 477, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 0, 495, 496, 666, 497, 498,
	499, 667, 500, 501, 502, 668, 503, 669, 504, 505,
	0, 506, 507, 0, 508, 509, 510, 511, 512, 513,
	514, 670, 515, 516, 518, 517, 519, 0, 520, 0,
	521, 522, 523, 0, 0, 0, 0, 0, 524, 0,
	526, 527, 528, 529, 525, 530, 531, 532, 533, 534,
	0, 535, 536, 537, 0, 538, 539, 540, 541, 542,
	671, 543, 0, 544, 545, 551, 552, 553, 546, 547,
	554, 555, 556, 557, 558, 0, 560, 561, 559, 562,
	563, 564, 0, 565, 566, 548, 549, 567, 568, 0,
	569, 570, 571, 572, 573, 574, 575, 672, 0, 576,
	0, 577, 578, 579, 581, 550, 582, 587, 588, 673,
	583, 584, 585, 586, 674, 590, 591, 0, 592, 593,
	0, 589, 580, 0, 594, 595, 596, 597, 598, 599,
	600, 361, 601, 0, 602, 675, 676, 677, 678, 0,
	611, 0, 603, 604, 605, 679, 606, 680, 0, 607,
	608, 609, 610, 0, 612, 613, 0, 0, 614, 615,
	616, 618, 619, 617, 620, 0, 621, 0, 0, 622,
	623, 624, 681, 682, 683, 0, 626, 625, 627, 684,
	0, 628, 271, 4267, 0, 0, 629, 630, 685, 631,
	632, 633, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 634, 0, 0, 0, 0, 286,
	287, 0, 288, 289, 290, 291, 292, 293, 635, 636,
	0, 294, 637, 295, 638, 0, 639, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 640, 641, 642,
	0, 303, 304, 643, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 337, 644, 645, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 646, 356, 357, 358, 360, 362, 359, 363,
	364, 365, 366, 647, 648, 367, 0, 0, 0, 0,
	0, 0, 0, 368, 369, 370, 649, 0, 0, 0,
	371, 0, 372, 373, 0, 0, 0, 374, 375, 376,
	650, 651, 377, 378, 379, 380, 381, 382, 383, 384,
	385, 0, 386, 652, 0, 653, 387, 0, 388, 389,
	390, 391, 392, 654, 655, 656, 473, 0, 393, 394,
	0, 395, 396, 397, 398, 399, 0, 0, 0, 0,
	400, 401, 402, 404, 0, 0, 403, 657, 658, 0,
	659, 0, 405, 406, 0, 660, 0, 407, 408, 409,
	0, 410, 0, 0, 0, 411, 412, 413, 414, 415,
	416, 0, 417, 419, 418, 0, 420, 661, 0, 421,
	422, 0, 0, 423, 0, 0, 0, 424, 425, 428,
	0, 0, 426, 427, 429, 430, 0, 431, 432, 434,
	437, 433, 435, 436, 438, 451, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 453, 0,
	452, 0, 454, 455, 456, 463, 465, 466, 461, 462,
	464, 467, 468, 458, 459, 460, 0, 469, 457, 0,
	0, 0, 470, 471, 0, 662, 472, 663, 474, 475,
	0, 0, 476, 0, 0, 0, 478, 479, 480, 0,
	0, 481, 482, 664, 0, 483, 0, 665, 484, 485,
	477, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	0, 495, 496, 666, 497, 498, 499, 667, 500, 501,
	502, 668, 503, 669, 504, 505, 0, 506, 507, 0,
	508, 509, 510, 511, 512, 513, 514, 670, 515, 516,
	518, 517, 519, 0, 520, 0, 521, 522, 523, 0,
	0, 0, 0, 0, 524, 0, 526, 527, 528, 529,
	525, 530, 531, 532, 533, 534, 0, 535, 536, 537,
	0, 538, 539, 540, 541, 542, 671, 543, 0, 544,
	545, 551, 552, 553, 546, 547, 554, 555, 556, 557,
	558, 0, 560, 561, 559, 562, 563, 564, 0, 565,
	566, 548, 549, 567, 568, 0, 569, 570, 571, 572,
	573, 574, 575, 672, 0, 576, 0, 577, 578, 579,
	581, 550, 582, 587, 588, 673, 583, 584, 585, 586,
	674, 590, 591, 0, 592, 593, 0, 589, 580, 0,
	594, 595, 596, 597, 598, 599, 600, 361, 601, 0,
	602, 675, 676, 677, 678, 0, 611, 0, 603, 604,
	605, 679, 606, 680, 0, 607, 608, 609, 610, 0,
	612, 613, 0, 0, 614, 615, 616, 618, 619, 617,
	620, 0, 621, 0, 0, 622, 623, 624, 681, 682,
	683, 271, 626, 625, 627, 684, 0, 628, 0, 0,
	0, 0, 629, 630, 685, 631, 632, 633, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 634, 0, 0, 0, 0, 286, 287,
	0, 288, 289, 290, 291, 292, 293, 635, 636, 0,
	294, 637, 295, 638, 0, 639, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 640, 641, 642, 0,
	303, 304, 643, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 337, 644, 645, 0, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 347,
	348, 0, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 646, 356, 357, 358, 360, 362, 359, 363, 364,
	365, 366, 647, 648, 367, 0, 0, 0, 0, 0,
	0, 0, 368, 369, 370, 649, 0, 0, 0, 371,
	0, 372, 373, 0, 0, 0, 374, 375, 376, 650,
	651, 377, 378, 379, 380, 381, 382, 383, 384, 385,
	0, 386, 652, 0, 653, 387, 0, 388, 389, 390,
	391, 392, 654, 655, 656, 473, 0, 393, 394, 0,
	395, 396, 397, 398, 399, 0, 0, 0, 0, 400,
	401, 402, 404, 0, 0, 403, 657, 658, 0, 659,
	0, 405, 406, 0, 660, 0, 407, 408, 409, 0,
	410, 0, 0, 0, 411, 412, 413, 414, 415, 416,
	0, 417, 419, 418, 0, 420, 661, 0, 421, 422,
	0, 0, 423, 0, 0, 0, 424, 425, 428, 0,
	0, 426, 427, 429, 430, 0, 431, 432, 434, 437,
	433, 435, 436, 438, 451, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 453, 0, 452,
	0, 454, 455, 456, 463, 465, 466, 461, 462, 464,
	467, 468, 458, 459, 460, 0, 469, 457, 0, 0,
	0, 470, 471, 0, 662, 472, 663, 474, 475, 0,
	0, 476, 0, 0, 0, 478, 479, 480, 0, 0,
	481, 482, 664, 0, 483, 0, 665, 484, 485, 477,
	486, 487, 488, 489, 490, 491, 492, 493, 494, 0,
	495, 496, 666, 497, 498, 499, 667, 500, 501, 502,
	668, 503, 669, 504, 505, 4549, 506, 507, 0, 508,
	509, 510, 511, 512, 513, 514, 670, 515, 516, 518,
	517, 519, 0, 520, 0, 521, 522, 523, 0, 0,
	0, 0, 0, 524, 0, 526, 527, 528, 529, 525,
	530, 531, 532, 533, 534, 0, 535, 536, 537, 0,
	538, 539, 540, 541, 542, 671, 543, 0, 544, 545,
	551, 552, 553, 546, 547, 554, 555, 556, 557, 558,
	0, 560, 561, 559, 562, 563, 564, 0, 565, 566,
	548, 549, 567, 568, 0, 569, 570, 571, 572, 573,
	574, 575, 672, 0, 576, 0, 577, 578, 579, 581,
	550, 582, 587, 588, 673, 583, 584, 585, 586, 674,
	590, 591, 0, 592, 593, 0, 589, 580, 0, 594,
	595, 596, 597, 598, 599, 600, 361, 601, 0, 602,
	675, 676, 677, 678, 0, 611, 0, 603, 604, 605,
	679, 606, 680, 0, 607, 608, 609, 610, 0, 612,
	613, 0, 0, 614, 615, 616, 618, 619, 617, 620,
	0, 621, 0, 0, 622, 623, 624, 681, 682, 683,
	271, 626, 625, 627, 684, 0, 628, 0, 0, 0,
	0, 629, 630, 685, 631, 632, 633, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 634, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 635, 636, 0, 294,
	637, 295, 638, 0, 639, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 640, 641, 642, 0, 303,
	304, 643, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 644, 645, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	646, 356, 357, 358, 360, 362, 359, 363, 364, 365,
	366, 647, 648, 367, 0, 0, 0, 0, 0, 0,
	0, 368, 369, 370, 649, 0, 0, 0, 371, 0,
	372, 373, 0, 0, 0, 374, 375, 376, 650, 651,
	377, 378, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 652, 0, 653, 387, 0, 388, 389, 390, 391,
	392, 654, 655, 656, 473, 0, 393, 394, 0, 395,
	396, 397, 398, 399, 0, 0, 0, 0, 400, 401,
	402, 404, 0, 0, 403, 657, 658, 0, 659, 0,
	405, 406, 0, 660, 0, 407, 408, 409, 0, 410,
	0, 0, 0, 411, 412, 413, 414, 415, 416, 0,
	417, 419, 418, 0, 420, 661, 0, 421, 422, 0,
	0, 423, 0, 0, 0, 424, 425, 428, 0, 0,
	426, 427, 429, 430, 0, 431, 432, 434, 437, 433,
	435, 436, 438, 451, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 453, 0, 452, 0,
	454, 455, 456, 463, 465, 466, 461, 462, 464, 467,
	468, 458, 459, 460, 0, 469, 457, 0, 0, 0,
	470, 471, 0, 662, 472, 663, 474, 475, 0, 0,
	476, 0, 0, 0, 478, 479, 480, 0, 0, 481,
	482, 664, 0, 483, 0, 665, 484, 485, 477, 486,
	487, 488, 489, 490, 491, 492, 493, 494, 0, 495,
	496, 666, 497, 498, 499, 667, 500, 501, 502, 668,
	503, 669, 504, 505, 4153, 506, 507, 0, 508, 509,
	510, 511, 512, 513, 514, 670, 515, 516, 518, 517,
	519, 0, 520, 0, 521, 522, 523, 0, 0, 0,
	0, 0, 524, 0, 526, 527, 528, 529, 525, 530,
	531, 532, 533, 534, 0, 535, 536, 537, 0, 538,
	539, 540, 541, 542, 671, 543, 0, 544, 545, 551,
	552, 553, 546, 547, 554, 555, 556, 557, 558, 0,
	560, 561, 559, 562, 563, 564, 0, 565, 566, 548,
	549, 567, 568, 0, 569, 570, 571, 572, 573, 574,
	575, 672, 0, 576, 0, 577, 578, 579, 581, 550,
	582, 587, 588, 673, 583, 584, 585, 586, 674, 590,
	591, 0, 592, 593, 0, 589, 580, 0, 594, 595,
	596, 597, 598, 599, 600, 361, 601, 0, 602, 675,
	676, 677, 678, 0, 611, 0, 603, 604, 605, 679,
	606, 680, 0, 607, 608, 609, 610, 0, 612, 613,
	0, 0, 614, 615, 616, 618, 619, 617, 620, 0,
	621, 0, 0, 622, 623, 624, 681, 682, 683, 271,
	626, 625, 627, 684, 0, 628, 0, 0, 0, 0,
	629, 630, 685, 631, 632, 633, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 634, 0, 0, 0, 0, 286, 287, 0, 288,
	289, 290, 291, 292, 293, 635, 636, 0, 294, 637,
	295, 638, 0, 639, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 640, 641, 642, 0, 303, 304,
	643, 0, 0, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 335, 337,
	644, 645, 3916, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 347, 348, 0,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 646,
	356, 357, 358, 360, 362, 359, 363, 364, 365, 366,
	647, 648, 367, 0, 0, 0, 0, 0, 0, 0,
	368, 369, 370, 649, 0, 0, 0, 371, 0, 372,
	373, 0, 0, 0, 374, 375, 376, 650, 651, 377,
	378, 379, 380, 381, 382, 383, 384, 385, 0, 386,
	652, 0, 653, 387, 0, 388, 389, 390, 391, 392,
	654, 655, 656, 473, 0, 393, 394, 0, 395, 396,
	397, 398, 399, 0, 0, 0, 0, 400, 401, 402,
	404, 0, 0, 403, 657, 658, 0, 659, 0, 405,
	406, 0, 660, 0, 407, 408, 409, 0, 410, 0,
	0, 0, 411, 412, 413, 414, 415, 416, 0, 417,
	419, 418, 0, 420, 661, 0, 421, 422, 0, 0,
	423, 0, 0, 0, 424, 425, 428, 0, 0, 426,
	427, 429, 430, 0, 431, 432, 434, 437, 433, 435,
	436, 438, 451, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 450, 453, 0, 452, 0, 454,
	455, 456, 463, 465, 466, 461, 462, 464, 467, 468,
	458, 459, 460, 0, 469, 457, 0, 0, 0, 470,
	471, 0, 662, 472, 663, 474, 475, 0, 0, 476,
	0, 0, 0, 478, 479, 480, 0, 0, 481, 482,
	664, 0, 483, 0, 665, 484, 485, 477, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 0, 495, 496,
	666, 497, 498, 499, 667, 500, 501, 502, 668, 503,
	669, 504, 505, 0, 506, 507, 0, 508, 509, 510,
	511, 512, 513, 514, 670, 515, 516, 518, 517, 519,
	0, 520, 0, 521, 522, 523, 0, 0, 0, 0,
	0, 524, 0, 526, 527, 528, 529, 525, 530, 531,
	532, 533, 534, 0, 535, 536, 537, 0, 538, 539,
	540, 541, 542, 671, 543, 0, 544, 545, 551, 552,
	553, 546, 547, 554, 555, 556, 557, 558, 0, 560,
	561, 559, 562, 563, 564, 0, 565, 566, 548, 549,
	567, 568, 0, 569, 570, 571, 572, 573, 574, 575,
	672, 0, 576, 0, 577, 578, 579, 581, 550, 582,
	587, 588, 673, 583, 584, 585, 586, 674, 590, 591,
	0, 592, 593, 0, 589, 580, 0, 594, 595, 596,
	597, 598, 599, 600, 361, 601, 0, 602, 675, 676,
	677, 678, 0, 611, 0, 603, 604, 605, 679, 606,
	680, 0, 607, 608, 609, 610, 0, 612, 613, 0,
	0, 614, 615, 616, 618, 619, 617, 620, 0, 621,
	0, 0, 622, 623, 624, 681, 682, 683, 271, 626,
	625, 627, 684, 0, 628, 0, 0, 0, 0, 629,
	630, 685, 631, 632, 633, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	634, 0, 2760, 0, 0, 286, 287, 0, 288, 289,
	290, 291, 292, 293, 635, 636, 0, 294, 637, 295,
	638, 0, 639, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 640, 641, 642, 0, 303, 304, 643,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 337, 644,
	645, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 646, 356,
	357, 358, 360, 362, 359, 363, 364, 365, 366, 647,
	648, 367, 0, 0, 0, 0, 0, 0, 0, 368,
	369, 370, 649, 0, 0, 0, 371, 0, 372, 373,
	0, 0, 0, 374, 375, 376, 650, 651, 377, 378,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 652,
	0, 653, 387, 0, 388, 389, 390, 391, 392, 654,
	655, 656, 473, 0, 393, 394, 0, 395, 396, 397,
	398, 399, 0, 0, 0, 0, 400, 401, 402, 404,
	0, 0, 403, 657, 658, 0, 659, 0, 405, 406,
	0, 660, 0, 407, 408, 409, 0, 410, 0, 0,
	0, 411, 412, 413, 414, 415, 416, 0, 417, 419,
	418, 0, 420, 661, 0, 421, 422, 0, 0, 423,
	0, 0, 0, 424, 425, 428, 0, 0, 426, 427,
	429, 430, 0, 431, 432, 434, 437, 433, 435, 436,
	438, 451, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 453, 0, 452, 0, 454, 455,
	456, 463, 465, 466, 461, 462, 464, 467, 468, 458,
	459, 460, 0, 469, 457, 0, 0, 0, 470, 471,
	0, 662, 472, 663, 474, 475, 0, 0, 476, 0,
	0, 0, 478, 479, 480, 0, 0, 481, 482, 664,
	0, 483, 0, 665, 484, 485, 477, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 0, 495, 496, 666,
	497, 498, 499, 667, 500, 501, 502, 668, 503, 669,
	504, 505, 0, 506, 507, 0, 508, 509, 510, 511,
	512, 513, 514, 670, 515, 516, 518, 517, 519, 0,
	520, 0, 521, 522, 523, 0, 0, 0, 0, 0,
	524, 0, 526, 527, 528, 529, 525, 530, 531, 532,
	533, 534, 0, 535, 536, 537, 0, 538, 539, 540,
	541, 542, 671, 543, 0, 544, 545, 551, 552, 553,
	546, 547, 554, 555, 556, 557, 558, 0, 560, 561,
	559, 562, 563, 564, 0, 565, 566, 548, 549, 567,
	568, 0, 569, 570, 571, 572, 573, 574, 575, 672,
	0, 576, 0, 577, 578, 579, 581, 550, 582, 587,
	588, 673, 583, 584, 585, 586, 674, 590, 591, 0,
	592, 593, 0, 589, 580, 0, 594, 595, 596, 597,
	598, 599, 600, 361, 601, 0, 602, 675, 676, 677,
	678, 0, 611, 0, 603, 604, 605, 679, 606, 680,
	0, 607, 608, 609, 610, 0, 612, 613, 0, 0,
	614, 615, 616, 618, 619, 617, 620, 0, 621, 0,
	0, 622, 623, 624, 681, 682, 683, 0, 626, 625,
	627, 684, 0, 628, 271, 3087, 0, 0, 629, 630,
	685, 631, 632, 633, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 634, 0, 0, 0,
	0, 286, 287, 0, 288, 289, 290, 291, 292, 293,
	635, 636, 0, 294, 637, 295, 638, 0, 639, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 640,
	641, 642, 0, 303, 304, 643, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 337, 644, 645, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 646, 356, 357, 358, 360, 362,
	359, 363, 364, 365, 366, 647, 648, 367, 0, 0,
	0, 0, 0, 0, 0, 368, 369, 370, 649, 0,
	0, 0, 371, 0, 372, 373, 0, 0, 0, 374,
	375, 376, 650, 651, 377, 378, 379, 380, 381, 382,
	383, 384, 385, 0, 386, 652, 0, 653, 387, 0,
	388, 389, 390, 391, 392, 654, 655, 656, 473, 0,
	393, 394, 0, 395, 396, 397, 398, 399, 0, 0,
	0, 0, 400, 401, 402, 404, 0, 0, 403, 657,
	658, 0, 659, 0, 405, 406, 0, 660, 0, 407,
	408, 409, 0, 410, 0, 0, 0, 411, 412, 413,
	414, 415, 416, 0, 417, 419, 418, 0, 420, 661,
	0, 421, 422, 0, 0, 423, 0, 0, 0, 424,
	425, 428, 0, 0, 426, 427, 429, 430, 0, 431,
	432, 434, 437, 433, 435, 436, 438, 451, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	453, 0, 452, 0, 454, 455, 456, 463, 465, 466,
	461, 462, 464, 467, 468, 458, 459, 460, 0, 469,
	457, 0, 0, 0, 470, 471, 0, 662, 472, 663,
	474, 475, 0, 0, 476, 0, 0, 0, 478, 479,
	3084, 0, 0, 481, 482, 664, 0, 483, 0, 665,
	484, 485, 477, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 0, 495, 496, 666, 497, 498, 499, 667,
	500, 501, 502, 668, 503, 669, 504, 505, 0, 506,
	507, 0, 508, 509, 510, 511, 512, 513, 514, 670,
	515, 516, 518, 517, 519, 0, 520, 0, 521, 522,
	523, 0, 0, 0, 0, 0, 524, 0, 526, 527,
	528, 529, 525, 530, 531, 532, 533, 534, 0, 535,
	536, 537, 0, 538, 539, 540, 541, 542, 671, 543,
	0, 544, 545, 551, 552, 553, 546, 547, 554, 555,
	556, 557, 558, 0, 560, 561, 559, 562, 563, 564,
	0, 565, 566, 548, 549, 567, 568, 0, 569, 570,
	571, 572, 573, 574, 575, 672, 0, 576, 0, 577,
	578, 579, 581, 550, 582, 587, 588, 673, 583, 584,
	585, 586, 674, 590, 591, 0, 592, 593, 0, 589,
	580, 0, 594, 595, 596, 597, 598, 599, 600, 361,
	601, 0, 602, 675, 676, 677, 678, 0, 611, 0,
	603, 604, 605, 679, 606, 680, 0, 607, 608, 609,
	610, 0, 612, 613, 0, 0, 614, 615, 616, 618,
	619, 617, 620, 0, 621, 0, 0, 622, 623, 624,
	681, 682, 683, 271, 626, 625, 627, 684, 0, 628,
	0, 0, 0, 0, 629, 630, 685, 631, 632, 633,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 634, 0, 0, 0, 0,
	286, 287, 0, 288, 289, 290, 291, 292, 293, 635,
	636, 0, 294, 637, 295, 638, 0, 639, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 640, 641,
	642, 0, 303, 304, 643, 0, 0, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 337, 644, 645, 0, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 347, 348, 0, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 646, 356, 357, 358, 360, 362, 359,
	363, 364, 365, 366, 647, 648, 367, 0, 0, 0,
	0, 0, 0, 0, 368, 369, 370, 649, 0, 0,
	0, 371, 0, 372, 373, 0, 0, 0, 374, 375,
	376, 650, 651, 377, 378, 379, 380, 381, 382, 383,
	384, 385, 0, 386, 652, 0, 653, 387, 0, 388,
	389, 390, 391, 392, 654, 655, 656, 473, 0, 393,
	394, 0, 395, 396, 397, 398, 399, 0, 0, 0,
	0, 400, 401, 402, 404, 0, 0, 403, 657, 658,
	0, 659, 0, 405, 406, 0, 660, 0, 407, 408,
	409, 0, 410, 0, 0, 0, 411, 412, 413, 414,
	415, 416, 0, 417, 419, 418, 0, 420, 661, 0,
	421, 422, 0, 0, 423, 0, 0, 0, 424, 425,
	428, 0, 0, 426, 427, 429, 430, 0, 431, 432,
	434, 437, 433, 435, 436, 438, 451, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 450, 453,
	0, 452, 0, 454, 455, 456, 463, 465, 466, 461,
	462, 464, 467, 468, 458, 459, 460, 0, 469, 457,
	0, 0, 0, 470, 471, 0, 662, 472, 663, 474,
	475, 0, 0, 476, 0, 0, 0, 478, 479, 480,
	0, 0, 481, 482, 664, 0, 483, 0, 665, 484,
	485, 477, 486, 487, 488, 489, 490, 491, 492, 493,
	494, 0, 495, 496, 666, 497, 498, 499, 667, 500,
	501, 502, 668, 503, 669, 504, 505, 2191, 506, 507,
	0, 508, 509, 510, 511, 512, 513, 514, 670, 515,
	516, 518, 517, 519, 0, 520, 0, 521, 522, 523,
	0, 0, 0, 0, 0, 524, 0, 526, 527, 528,
	529, 525, 530, 531, 532, 533, 534, 0, 535, 536,
	537, 0, 776, 539, 540, 541, 542, 671, 543, 0,
	544, 545, 551, 552, 553, 546, 547, 775, 555, 556,
	557, 558, 0, 560, 561, 559, 562, 563, 564, 0,
	565, 566, 548, 549, 567, 568, 0, 569, 570, 571,
	572, 573, 574, 575, 672, 0, 576, 0, 577, 578,
	579, 581, 550, 582, 587, 588, 673, 583, 584, 585,
	586, 674, 590, 591, 0, 592, 593, 0, 589, 580,
	0, 594, 595, 596, 597, 598, 599, 600, 361, 601,
	0, 602, 773, 676, 677, 678, 0, 611, 0, 603,
	604, 605, 679, 606, 680, 0, 607, 608, 609, 610,
	0, 612, 613, 0, 0, 614, 615, 616, 618, 619,
	617, 620, 0, 621, 0, 0, 622, 623, 624, 681,
	682, 683, 271, 626, 625, 627, 684, 0, 628, 0,
	0, 0, 0, 629, 630, 685, 631, 632, 633, 277,
	279, 278, 280, 281, 282, 283, 2337, 284, 285, 0,
	0, 0, 0, 0, 634, 0, 0, 0, 0, 286,
	287, 0, 288, 289, 290, 291, 292, 293, 635, 636,
	0, 294, 637, 295, 638, 0, 639, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 640, 641, 642,
	0, 303, 304, 643, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 337, 644, 645, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 646, 356, 357, 358, 360, 362, 359, 363,
	364, 365, 366, 647, 648, 367, 0, 0, 0, 0,
	0, 0, 0, 368, 369, 370, 649, 0, 0, 0,
	371, 0, 372, 373, 0, 0, 0, 374, 375, 376,
	650, 651, 377, 378, 379, 380, 381, 382, 383, 384,
	385, 0, 386, 652, 0, 653, 387, 0, 388, 389,
	390, 391, 392, 654, 655, 656, 473, 0, 393, 394,
	0, 395, 396, 397, 398, 399, 0, 0, 0, 0,
	400, 401, 402, 404, 0, 0, 403, 657, 658, 0,
	659, 0, 405, 406, 0, 660, 0, 407, 408, 409,
	0, 410, 0, 0, 0, 411, 412, 413, 414, 415,
	416, 0, 417, 419, 418, 0, 420, 661, 0, 421,
	422, 0, 0, 423, 0, 0, 0, 424, 425, 428,
	0, 0, 426, 427, 429, 430, 0, 431, 432, 434,
	437, 433, 435, 436, 438, 451, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 453, 0,
	452, 0, 454, 455, 456, 463, 465, 466, 461, 462,
	464, 467, 468, 458, 459, 460, 0, 469, 457, 0,
	0, 0, 470, 471, 0, 662, 472, 663, 474, 475,
	0, 0, 476, 0, 0, 0, 478, 479, 480, 0,
	0, 481, 482, 664, 0, 483, 0, 665, 484, 485,
	477, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	0, 495, 496, 666, 497, 498, 499, 667, 500, 501,
	502, 668, 503, 669, 504, 505, 0, 506, 507, 0,
	508, 509, 510, 511, 512, 513, 514, 670, 515, 516,
	518, 517, 519, 0, 520, 0, 521, 522, 523, 0,
	0, 0, 0, 0, 524, 0, 526, 527, 528, 529,
	525, 530, 531, 532, 533, 534, 0, 535, 536, 537,
	0, 538, 539, 540, 541, 542, 671, 543, 0, 544,
	545, 551, 552, 553, 546, 547, 554, 555, 556, 557,
	558, 0, 560, 561, 559, 562, 563, 564, 0, 565,
	566, 548, 549, 567, 568, 0, 569, 570, 571, 572,
	573, 574, 575, 672, 0, 576, 0, 577, 578, 579,
	581, 550, 582, 587, 588, 673, 583, 584, 585, 586,
	674, 590, 591, 0, 592, 593, 0, 589, 580, 0,
	594, 595, 596, 597, 598, 599, 600, 361, 601, 0,
	602, 675, 676, 677, 678, 0, 611, 0, 603, 604,
	605, 679, 606, 680, 0, 607, 608, 609, 610, 0,
	612, 613, 0, 0, 614, 615, 616, 618, 619, 617,
	620, 0, 621, 0, 0, 622, 623, 624, 681, 682,
	683, 0, 626, 625, 627, 684, 2325, 628, 271, 0,
	0, 0, 629, 630, 685, 631, 632, 633, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	634, 0, 0, 0, 0, 286, 287, 0, 288, 289,
	290, 291, 292, 293, 635, 636, 0, 294, 637, 295,
	638, 0, 639, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 640, 641, 642, 0, 303, 304, 643,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 337, 644,
	645, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 646, 356,
	357, 358, 360, 362, 359, 363, 364, 365, 366, 647,
	648, 367, 0, 0, 0, 0, 0, 0, 0, 368,
	369, 370, 649, 0, 0, 0, 371, 0, 372, 373,
	0, 0, 0, 374, 375, 376, 650, 651, 377, 378,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 652,
	0, 653, 387, 0, 388, 389, 390, 391, 392, 654,
	655, 656, 473, 0, 393, 394, 0, 395, 396, 397,
	398, 399, 0, 0, 0, 0, 400, 401, 402, 404,
	0, 0, 403, 657, 658, 0, 659, 0, 405, 406,
	0, 660, 0, 407, 408, 409, 0, 410, 0, 0,
	0, 411, 412, 413, 414, 415, 416, 0, 417, 419,
	418, 0, 420, 661, 0, 421, 422, 0, 0, 423,
	0, 0, 0, 424, 425, 428, 0, 0, 426, 427,
	429, 430, 0, 431, 432, 434, 437, 433, 435, 436,
	438, 451, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 453, 0, 452, 0, 454, 455,
	456, 463, 465, 466, 461, 462, 464, 467, 468, 458,
	459, 460, 0, 469, 457, 0, 0, 0, 470, 471,
	0, 662, 472, 663, 474, 475, 0, 0, 476, 0,
	0, 0, 478, 479, 480, 0, 0, 481, 482, 664,
	0, 483, 0, 665, 484, 485, 477, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 0, 495, 496, 666,
	497, 498, 499, 667, 500, 501, 502, 668, 503, 669,
	504, 505, 0, 506, 507, 0, 508, 509, 510, 511,
	512, 513, 514, 670, 515, 516, 518, 517, 519, 0,
	520, 0, 521, 522, 523, 0, 0, 0, 0, 0,
	524, 0, 526, 527, 528, 529, 525, 530, 531, 532,
	533, 534, 0, 535, 536, 537, 0, 538, 539, 540,
	541, 542, 671, 543, 0, 544, 545, 551, 552, 553,
	546, 547, 554, 555, 556, 557, 558, 0, 560, 561,
	559, 562, 563, 564, 0, 565, 566, 548, 549, 567,
	568, 0, 569, 570, 571, 572, 573, 574, 575, 672,
	0, 576, 0, 577, 578, 579, 581, 550, 582, 587,
	588, 673, 583, 584, 585, 586, 674, 590, 591, 0,
	592, 593, 0, 589, 580, 0, 594, 595, 596, 597,
	598, 599, 600, 361, 601, 0, 602, 675, 676, 677,
	678, 0, 611, 0, 603, 604, 605, 679, 606, 680,
	0, 607, 608, 609, 610, 0, 612, 613, 0, 0,
	614, 615, 616, 618, 619, 617, 620, 0, 621, 0,
	0, 622, 623, 624, 681, 682, 683, 0, 626, 625,
	627, 684, 2087, 628, 271, 0, 0, 0, 629, 630,
	685, 631, 632, 633, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 634, 0, 0, 0,
	0, 286, 287, 0, 288, 289, 290, 291, 292, 293,
	635, 636, 0, 294, 637, 295, 638, 0, 639, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 640,
	641, 642, 0, 303, 304, 643, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 337, 644, 645, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 646, 356, 357, 358, 360, 362,
	359, 363, 364, 365, 366, 647, 648, 367, 0, 0,
	0, 0, 0, 0, 0, 368, 369, 370, 649, 0,
	0, 0, 371, 0, 372, 373, 0, 0, 0, 374,
	375, 376, 650, 651, 377, 378, 379, 380, 381, 382,
	383, 384, 385, 0, 386, 652, 0, 653, 387, 0,
	388, 389, 390, 391, 392, 654, 655, 656, 473, 0,
	393, 394, 0, 395, 396, 397, 398, 399, 0, 0,
	0, 0, 400, 401, 402, 404, 0, 0, 403, 657,
	658, 0, 659, 0, 405, 406, 0, 660, 0, 407,
	408, 409, 0, 410, 0, 0, 0, 411, 412, 413,
	414, 415, 416, 0, 417, 419, 418, 0, 420, 661,
	0, 421, 422, 0, 0, 423, 0, 0, 0, 424,
	425, 428, 0, 0, 426, 427, 429, 430, 0, 431,
	432, 434, 437, 433, 435, 436, 438, 451, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	453, 0, 452, 0, 454, 455, 456, 463, 465, 466,
	461, 462, 464, 467, 468, 458, 459, 460, 0, 469,
	457, 0, 0, 0, 470, 471, 0, 662, 472, 663,
	474, 475, 0, 0, 476, 0, 0, 0, 478, 479,
	480, 0, 0, 481, 482, 664, 0, 483, 0, 665,
	484, 485, 477, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 0, 495, 496, 666, 497, 498, 499, 667,
	500, 501, 502, 668, 503, 669, 504, 505, 0, 506,
	507, 0, 508, 509, 510, 511, 512, 513, 514, 670,
	515, 516, 518, 517, 519, 0, 520, 0, 521, 522,
	523, 0, 0, 0, 0, 0, 524, 0, 526, 527,
	528, 529, 525, 530, 531, 532, 533, 534, 0, 535,
	536, 537, 0, 538, 539, 540, 541, 542, 671, 543,
	0, 544, 545, 551, 552, 553, 546, 547, 554, 555,
	556, 557, 558, 0, 560, 561, 559, 562, 563, 564,
	0, 565, 566, 548, 549, 567, 568, 0, 569, 570,
	571, 572, 573, 574, 575, 672, 0, 576, 0, 577,
	578, 579, 581, 550, 582, 587, 588, 673, 583, 584,
	585, 586, 674, 590, 591, 0, 592, 593, 0, 589,
	580, 0, 594, 595, 596, 597, 598, 599, 600, 361,
	601, 0, 602, 675, 676, 677, 678, 0, 611, 0,
	603, 604, 605, 679, 606, 680, 0, 607, 608, 609,
	610, 0, 612, 613, 0, 0, 614, 615, 616, 618,
	619, 617, 620, 0, 621, 0, 0, 622, 623, 624,
	681, 682, 683, 0, 626, 625, 627, 684, 2054, 628,
	271, 0, 0, 0, 629, 630, 685, 631, 632, 633,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 634, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 635, 636, 0, 294,
	637, 295, 638, 0, 639, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 640, 641, 642, 0, 303,
	304, 643, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 644, 645, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	646, 356, 357, 358, 360, 362, 359, 363, 364, 365,
	366, 647, 648, 367, 0, 0, 0, 0, 0, 0,
	0, 368, 369, 370, 649, 0, 0, 0, 371, 0,
	372, 373, 0, 0, 0, 374, 375, 376, 650, 651,
	377, 378, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 652, 0, 653, 387, 0, 388, 389, 390, 391,
	392, 654, 655, 656, 473, 0, 393, 394, 0, 395,
	396, 397, 398, 399, 0, 0, 0, 0, 400, 401,
	402, 404, 0, 0, 403, 657, 658, 0, 659, 0,
	405, 406, 0, 660, 0, 407, 408, 409, 0, 410,
	0, 0, 0, 411, 412, 413, 414, 415, 416, 0,
	417, 419, 418, 0, 420, 661, 0, 421, 422, 0,
	0, 423, 0, 0, 0, 424, 425, 428, 0, 0,
	426, 427, 429, 430, 0, 431, 432, 434, 437, 433,
	435, 436, 438, 451, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 453, 0, 452, 0,
	454, 455, 456, 463, 465, 466, 461, 462, 464, 467,
	468, 458, 459, 460, 0, 469, 457, 0, 0, 0,
	470, 471, 0, 662, 472, 663, 474, 475, 0, 0,
	476, 0, 0, 0, 478, 479, 480, 0, 0, 481,
	482, 664, 0, 483, 0, 665, 484, 485, 477, 486,
	487, 488, 489, 490, 491, 492, 493, 494, 0, 495,
	496, 666, 497, 498, 499, 667, 500, 501, 502, 668,
	503, 669, 504, 505, 0, 506, 507, 0, 508, 509,
	510, 511, 512, 513, 514, 670, 515, 516, 518, 517,
	519, 0, 520, 0, 521, 522, 523, 0, 0, 0,
	0, 0, 524, 0, 526, 527, 528, 529, 525, 530,
	531, 532, 533, 534, 0, 535, 536, 537, 0, 538,
	539, 540, 541, 542, 671, 543, 0, 544, 545, 551,
	552, 553, 546, 547, 554, 555, 556, 557, 558, 0,
	560, 561, 559, 562, 563, 564, 0, 565, 566, 548,
	549, 567, 568, 0, 569, 570, 571, 572, 573, 574,
	575, 672, 0, 576, 0, 577, 578, 579, 581, 550,
	582, 587, 588, 673, 583, 584, 585, 586, 674, 590,
	591, 0, 592, 593, 0, 589, 580, 0, 594, 595,
	596, 597, 598, 599, 600, 361, 601, 0, 602, 675,
	676, 677, 678, 0, 611, 0, 603, 604, 605, 679,
	606, 680, 0, 607, 608, 609, 610, 0, 612, 613,
	0, 0, 614, 615, 616, 618, 619, 617, 620, 0,
	621, 0, 0, 622, 623, 624, 681, 682, 683, 0,
	626, 625, 627, 684, 767, 628, 271, 0, 0, 0,
	629, 630, 685, 631, 632, 633, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 634, 0,
	0, 0, 0, 286, 287, 0, 288, 289, 290, 291,
	292, 293, 635, 636, 0, 294, 637, 295, 638, 0,
	639, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 640, 641, 642, 0, 303, 763, 643, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 337, 644, 645, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 646, 356, 357, 358,
	360, 362, 359, 363, 364, 365, 366, 647, 648, 367,
	0, 0, 0, 0, 0, 0, 0, 368, 369, 370,
	649, 0, 0, 0, 371, 0, 372, 373, 0, 0,
	0, 374, 375, 376, 650, 651, 377, 378, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 652, 0, 653,
	387, 0, 388, 389, 390, 391, 392, 654, 655, 656,
	473, 0, 393, 394, 0, 395, 396, 397, 398, 399,
	0, 0, 0, 0, 400, 401, 402, 404, 0, 0,
	403, 657, 658, 0, 659, 0, 405, 406, 0, 660,
	0, 407, 408, 409, 0, 410, 0, 0, 0, 411,
	412, 413, 414, 415, 416, 0, 417, 419, 418, 0,
	420, 661, 0, 421, 422, 0, 0, 423, 0, 0,
	0, 424, 768, 428, 0, 0, 426, 427, 429, 430,
	0, 431, 432, 434, 437, 433, 435, 436, 438, 451,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 453, 0, 777, 0, 454, 455, 456, 463,
	465, 466, 461, 462, 464, 467, 468, 458, 459, 460,
	0, 469, 457, 0, 0, 0, 470, 471, 0, 662,
	472, 663, 474, 475, 0, 0, 476, 0, 0, 0,
	478, 479, 480, 0, 0, 481, 482, 664, 0, 483,
	0, 665, 484, 485, 477, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 0, 495, 496, 666, 497, 498,
	499, 667, 500, 501, 502, 668, 503, 669, 504, 505,
	0, 506, 507, 0, 508, 509, 510, 511, 512, 513,
	514, 670, 515, 516, 518, 517, 519, 0, 520, 0,
	521, 522, 523, 0, 0, 0, 0, 0, 524, 0,
	526, 527, 528, 529, 525, 530, 531, 532, 533, 534,
	0, 535, 536, 537, 0, 776, 539, 540, 541, 542,
	671, 543, 0, 544, 545, 551, 552, 553, 546, 547,
	775, 555, 556, 557, 558, 0, 560, 561, 559, 562,
	1623, 564, 0, 565, 566, 548, 549, 567, 568, 0,
	569, 570, 571, 572, 573, 574, 575, 672, 0, 576,
	0, 577, 578, 579, 581, 550, 582, 587, 588, 673,
	583, 584, 585, 586, 674, 590, 591, 0, 592, 593,
	0, 589, 580, 0, 594, 595, 596, 597, 598, 599,
	600, 361, 601, 0, 602, 773, 676, 677, 678, 0,
	611, 0, 603, 604, 605, 679, 606, 680, 0, 607,
	608, 609, 610, 0, 612, 613, 0, 0, 614, 615,
	616, 618, 619, 617, 620, 0, 621, 0, 0, 622,
	623, 624, 681, 682, 683, 0, 626, 625, 627, 684,
	1596, 628, 271, 0, 0, 0, 629, 630, 685, 631,
	632, 633, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 634, 0, 0, 0, 0, 286,
	287, 0, 288, 289, 290, 291, 292, 293, 635, 636,
	0, 294, 637, 295, 638, 0, 639, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 640, 641, 642,
	0, 303, 304, 643, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 337, 644, 645, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 646, 356, 357, 358, 360, 362, 359, 363,
	364, 365, 366, 647, 648, 367, 0, 0, 0, 0,
	0, 0, 0, 368, 369, 370, 649, 0, 0, 0,
	371, 0, 372, 373, 0, 0, 0, 374, 375, 376,
	650, 651, 377, 378, 379, 380, 381, 382, 383, 384,
	385, 0, 386, 652, 0, 653, 387, 0, 388, 389,
	390, 391, 392, 1595, 655, 656, 473, 0, 393, 394,
	0, 395, 396, 397, 398, 399, 0, 0, 0, 0,
	400, 401, 402, 404, 0, 0, 403, 657, 658, 0,
	659, 0, 405, 406, 0, 660, 0, 407, 408, 409,
	0, 410, 0, 0, 0, 411, 412, 413, 414, 415,
	416, 0, 417, 419, 418, 0, 420, 661, 0, 421,
	422, 0, 0, 423, 0, 0, 0, 424, 425, 428,
	0, 0, 426, 427, 429, 430, 0, 431, 432, 434,
	437, 433, 435, 436, 438, 451, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 453, 0,
	452, 0, 454, 455, 456, 463, 465, 466, 461, 462,
	464, 467, 468, 458, 459, 460, 0, 469, 457, 0,
	0, 0, 470, 471, 0, 662, 472, 663, 474, 475,
	0, 0, 476, 0, 0, 0, 478, 479, 480, 0,
	0, 481, 482, 664, 0, 483, 0, 665, 484, 485,
	477, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	0, 495, 496, 666, 497, 498, 499, 667, 500, 501,
	502, 668, 503, 669, 504, 505, 0, 506, 507, 0,
	508, 509, 510, 511, 512, 513, 514, 670, 515, 516,
	518, 517, 519, 0, 520, 0, 521, 522, 523, 0,
	0, 0, 0, 0, 524, 0, 526, 527, 528, 529,
	525, 530, 531, 532, 533, 534, 0, 535, 536, 537,
	0, 538, 539, 540, 541, 542, 671, 543, 0, 544,
	545, 551, 552, 553, 546, 547, 554, 555, 556, 557,
	558, 0, 560, 561, 559, 562, 563, 564, 0, 565,
	566, 548, 549, 567, 568, 0, 569, 570, 571, 572,
	573, 574, 575, 672, 0, 576, 0, 577, 578, 579,
	581, 550, 582, 587, 588, 673, 583, 584, 585, 586,
	674, 590, 591, 0, 592, 593, 0, 589, 580, 0,
	594, 595, 596, 597, 598, 599, 600, 361, 601, 0,
	602, 675, 676, 677, 678, 0, 611, 0, 603, 604,
	605, 679, 606, 680, 0, 607, 608, 609, 610, 0,
	612, 613, 0, 0, 614, 615, 616, 618, 619, 617,
	620, 0, 621, 0, 0, 622, 623, 624, 681, 682,
	683, 0, 626, 625, 627, 684, 1580, 628, 271, 0,
	0, 0, 629, 630, 685, 631, 632, 633, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	634, 0, 0, 0, 0, 286, 287, 0, 288, 289,
	290, 291, 292, 293, 635, 636, 0, 294, 637, 295,
	638, 0, 639, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 640, 641, 642, 0, 303, 304, 643,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 337, 644,
	645, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 646, 356,
	357, 358, 360, 362, 359, 363, 364, 365, 366, 647,
	648, 367, 0, 0, 0, 0, 0, 0, 0, 368,
	369, 370, 649, 0, 0, 0, 371, 0, 372, 373,
	0, 0, 0, 374, 375, 376, 650, 651, 377, 378,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 652,
	0, 653, 387, 0, 388, 389, 390, 391, 392, 1578,
	655, 656, 473, 0, 393, 394, 0, 395, 396, 397,
	398, 399, 0, 0, 0, 0, 400, 401, 402, 404,
	0, 0, 403, 657, 658, 0, 659, 0, 405, 406,
	0, 660, 0, 407, 408, 409, 0, 410, 0, 0,
	0, 411, 412, 413, 414, 415, 416, 0, 417, 419,
	418, 0, 420, 661, 0, 421, 422, 0, 0, 423,
	0, 0, 0, 424, 425, 428, 0, 0, 426, 427,
	429, 430, 0, 431, 432, 434, 437, 433, 435, 436,
	438, 451, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 453, 0, 452, 0, 454, 455,
	456, 463, 465, 466, 461, 462, 464, 467, 468, 458,
	459, 460, 0, 469, 457, 0, 0, 0, 470, 471,
	0, 662, 472, 663, 474, 475, 0, 0, 476, 0,
	0, 0, 478, 479, 480, 0, 0, 481, 482, 664,
	0, 483, 0, 665, 484, 485, 477, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 0, 495, 496, 666,
	497, 498, 499, 667, 500, 501, 502, 668, 503, 669,
	504, 505, 0, 506, 507, 0, 508, 509, 510, 511,
	512, 513, 514, 670, 515, 516, 518, 517, 519, 0,
	520, 0, 521, 522, 523, 0, 0, 0, 0, 0,
	524, 0, 526, 527, 528, 529, 525, 530, 531, 532,
	533, 534, 0, 535, 536, 537, 0, 538, 539, 540,
	541, 542, 671, 543, 0, 544, 545, 551, 552, 553,
	546, 547, 554, 555, 556, 557, 558, 0, 560, 561,
	559, 562, 563, 564, 0, 565, 566, 548, 549, 567,
	568, 0, 569, 570, 571, 572, 573, 574, 575, 672,
	0, 576, 0, 577, 578, 579, 581, 550, 582, 587,
	588, 673, 583, 584, 585, 586, 674, 590, 591, 0,
	592, 593, 0, 589, 580, 0, 594, 595, 596, 597,
	598, 599, 600, 361, 601, 0, 602, 675, 676, 677,
	678, 0, 611, 0, 603, 604, 605, 679, 606, 680,
	0, 607, 608, 609, 610, 0, 612, 613, 0, 0,
	614, 615, 616, 618, 619, 617, 620, 0, 621, 0,
	0, 622, 623, 624, 681, 682, 683, 0, 626, 625,
	627, 684, 1573, 628, 271, 0, 0, 0, 629, 630,
	685, 631, 632, 633, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 634, 0, 0, 0,
	0, 286, 287, 0, 288, 289, 290, 291, 292, 293,
	635, 636, 0, 294, 637, 295, 638, 0, 639, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 640,
	641, 642, 0, 303, 304, 643, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 337, 644, 645, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 646, 356, 357, 358, 360, 362,
	359, 363, 364, 365, 366, 647, 648, 367, 0, 0,
	0, 0, 0, 0, 0, 368, 369, 370, 649, 0,
	0, 0, 371, 0, 372, 373, 0, 0, 0, 374,
	375, 376, 650, 651, 377, 378, 379, 380, 381, 382,
	383, 384, 385, 0, 386, 652, 0, 653, 387, 0,
	388, 389, 390, 391, 392, 654, 655, 656, 473, 0,
	393, 394, 0, 395, 396, 397, 398, 399, 0, 0,
	0, 0, 400, 401, 402, 404, 0, 0, 403, 657,
	658, 0, 659, 0, 405, 406, 0, 660, 0, 407,
	408, 409, 0, 410, 0, 0, 0, 411, 412, 413,
	414, 415, 416, 0, 417, 419, 418, 0, 420, 661,
	0, 421, 422, 0, 0, 423, 0, 0, 0, 424,
	425, 428, 0, 0, 426, 427, 429, 430, 0, 431,
	432, 434, 437, 433, 435, 436, 438, 451, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	453, 0, 452, 0, 454, 455, 456, 463, 465, 466,
	461, 462, 464, 467, 468, 458, 459, 460, 0, 469,
	457, 0, 0, 0, 470, 471, 0, 662, 472, 663,
	474, 475, 0, 0, 476, 0, 0, 0, 478, 479,
	480, 0, 0, 481, 482, 664, 0, 483, 0, 665,
	484, 485, 477, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 0, 495, 496, 666, 497, 498, 499, 667,
	500, 501, 502, 668, 503, 669, 504, 505, 0, 506,
	507, 0, 508, 509, 510, 511, 512, 513, 514, 670,
	515, 516, 518, 517, 519, 0, 520, 0, 521, 522,
	523, 0, 0, 0, 0, 0, 524, 0, 526, 527,
	528, 529, 525, 530, 531, 532, 533, 534, 0, 535,
	536, 537, 0, 538, 539, 540, 541, 542, 671, 543,
	0, 544, 545, 551, 552, 553, 546, 547, 554, 555,
	556, 557, 558, 0, 560, 561, 559, 562, 563, 564,
	0, 565, 566, 548, 549, 567, 568, 0, 569, 570,
	571, 572, 573, 574, 575, 672, 0, 576, 0, 577,
	578, 579, 581, 550, 582, 587, 588, 673, 583, 584,
	585, 586, 674, 590, 591, 0, 592, 593, 0, 589,
	580, 0, 594, 595, 596, 597, 598, 599, 600, 361,
	601, 0, 602, 675, 676, 677, 678, 0, 611, 0,
	603, 604, 605, 679, 606, 680, 0, 607, 608, 609,
	610, 0, 612, 613, 0, 0, 614, 615, 616, 618,
	619, 617, 620, 0, 621, 0, 0, 622, 623, 624,
	681, 682, 683, 0, 626, 625, 627, 684, 1550, 628,
	271, 0, 0, 0, 629, 630, 685, 631, 632, 633,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 634, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 635, 636, 0, 294,
	637, 295, 638, 0, 639, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 640, 641, 642, 0, 303,
	304, 643, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 644, 645, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	646, 356, 357, 358, 360, 362, 359, 363, 364, 365,
	366, 647, 648, 367, 0, 0, 0, 0, 0, 0,
	0, 368, 369, 370, 649, 0, 0, 0, 371, 0,
	372, 373, 0, 0, 0, 374, 375, 376, 650, 651,
	377, 378, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 652, 0, 653, 387, 0, 388, 389, 390, 391,
	392, 1548, 655, 656, 473, 0, 393, 394, 0, 395,
	396, 397, 398, 399, 0, 0, 0, 0, 400, 401,
	402, 404, 0, 0, 403, 657, 658, 0, 659, 0,
	405, 406, 0, 660, 0, 407, 408, 409, 0, 410,
	0, 0, 0, 411, 412, 413, 414, 415, 416, 0,
	417, 419, 418, 0, 420, 661, 0, 421, 422, 0,
	0, 423, 0, 0, 0, 424, 425, 428, 0, 0,
	426, 427, 429, 430, 0, 431, 432, 434, 437, 433,
	435, 436, 438, 451, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 453, 0, 452, 0,
	454, 455, 456, 463, 465, 466, 461, 462, 464, 467,
	468, 458, 459, 460, 0, 469, 457, 0, 0, 0,
	470, 471, 0, 662, 472, 663, 474, 475, 0, 0,
	476, 0, 0, 0, 478, 479, 480, 0, 0, 481,
	482, 664, 0, 483, 0, 665, 484, 485, 477, 486,
	487, 488, 489, 490, 491, 492, 493, 494, 0, 495,
	496, 666, 497, 498, 499, 667, 500, 501, 502, 668,
	503, 669, 504, 505, 0, 506, 507, 0, 508, 509,
	510, 511, 512, 513, 514, 670, 515, 516, 518, 517,
	519, 0, 520, 0, 521, 522, 523, 0, 0, 0,
	0, 0, 524, 0, 526, 527, 528, 529, 525, 530,
	531, 532, 533, 534, 0, 535, 536, 537, 0, 538,
	539, 540, 541, 542, 671, 543, 0, 544, 545, 551,
	552, 553, 546, 547, 554, 555, 556, 557, 558, 0,
	560, 561, 559, 562, 563, 564, 0, 565, 566, 548,
	549, 567, 568, 0, 569, 570, 571, 572, 573, 574,
	575, 672, 0, 576, 0, 577, 578, 579, 581, 550,
	582, 587, 588, 673, 583, 584, 585, 586, 674, 590,
	591, 0, 592, 593, 0, 589, 580, 0, 594, 595,
	596, 597, 598, 599, 600, 361, 601, 0, 602, 675,
	676, 677, 678, 0, 611, 0, 603, 604, 605, 679,
	606, 680, 0, 607, 608, 609, 610, 0, 612, 613,
	0, 0, 614, 615, 616, 618, 619, 617, 620, 0,
	621, 0, 0, 622, 623, 624, 681, 682, 683, 0,
	626, 625, 627, 684, 1507, 628, 271, 0, 0, 0,
	629, 630, 685, 631, 632, 633, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 634, 0,
	0, 0, 0, 286, 287, 0, 288, 289, 290, 291,
	292, 293, 635, 636, 0, 294, 637, 295, 638, 0,
	639, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 640, 641, 642, 0, 303, 304, 643, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 337, 644, 645, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 646, 356, 357, 358,
	360, 362, 359, 363, 364, 365, 366, 647, 648, 367,
	0, 0, 0, 0, 0, 0, 0, 368, 369, 370,
	649, 0, 0, 0, 371, 0, 372, 373, 0, 0,
	0, 374, 375, 376, 650, 651, 377, 378, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 652, 0, 653,
	387, 0, 388, 389, 390, 391, 392, 654, 655, 656,
	473, 0, 393, 394, 0, 395, 396, 397, 398, 399,
	0, 0, 0, 0, 400, 401, 402, 404, 0, 0,
	403, 657, 658, 0, 659, 0, 405, 406, 0, 660,
	0, 407, 408, 409, 0, 410, 0, 0, 0, 411,
	412, 413, 414, 415, 416, 0, 417, 419, 418, 0,
	420, 661, 0, 421, 422, 0, 0, 423, 0, 0,
	0, 424, 425, 428, 0, 0, 426, 427, 429, 430,
	0, 431, 432, 434, 437, 433, 435, 436, 438, 451,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 453, 0, 452, 0, 454, 455, 456, 463,
	465, 466, 461, 462, 464, 467, 468, 458, 459, 460,
	0, 469, 457, 0, 0, 0, 470, 471, 0, 662,
	472, 663, 474, 475, 0, 0, 476, 0, 0, 0,
	478, 479, 480, 0, 0, 481, 482, 664, 0, 483,
	0, 665, 484, 485, 477, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 0, 495, 496, 666, 497, 498,
	499, 667, 500, 501, 502, 668, 503, 669, 504, 505,
	0, 506, 507, 0, 508, 509, 510, 511, 512, 513,
	514, 670, 515, 516, 518, 517, 519, 0, 520, 0,
	521, 522, 523, 0, 0, 0, 0, 0, 524, 0,
	526, 527, 528, 529, 525, 530, 531, 532, 533, 534,
	0, 535, 536, 537, 0, 538, 539, 540, 541, 542,
	671, 543, 0, 544, 545, 551, 552, 553, 546, 547,
	554, 555, 556, 557, 558, 0, 560, 561, 559, 562,
	563, 564, 0, 565, 566, 548, 549, 567, 568, 0,
	569, 570, 571, 572, 573, 574, 575, 672, 0, 576,
	0, 577, 578, 579, 581, 550, 582, 587, 588, 673,
	583, 584, 585, 586, 674, 590, 591, 0, 592, 593,
	0, 589, 580, 0, 594, 595, 596, 597, 598, 599,
	600, 361, 601, 0, 602, 675, 676, 677, 678, 0,
	611, 0, 603, 604, 605, 679, 606, 680, 0, 607,
	608, 609, 610, 0, 612, 613, 0, 0, 614, 615,
	616, 618, 619, 617, 620, 0, 621, 0, 0, 622,
	623, 624, 681, 682, 683, 0, 626, 625, 627, 684,
	1490, 628, 271, 0, 0, 0, 629, 630, 685, 631,
	632, 633, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 634, 0, 0, 0, 0, 286,
	287, 0, 288, 289, 290, 291, 292, 293, 635, 636,
	0, 294, 637, 295, 638, 0, 639, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 640, 641, 642,
	0, 303, 304, 643, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 337, 644, 645, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 646, 356, 357, 358, 360, 362, 359, 363,
	364, 365, 366, 647, 648, 367, 0, 0, 0, 0,
	0, 0, 0, 368, 369, 370, 649, 0, 0, 0,
	371, 0, 372, 373, 0, 0, 0, 374, 375, 376,
	650, 651, 377, 378, 379, 380, 381, 382, 383, 384,
	385, 0, 386, 652, 0, 653, 387, 0, 388, 389,
	390, 391, 392, 654, 655, 656, 473, 0, 393, 394,
	0, 395, 396, 397, 398, 399, 0, 0, 0, 0,
	400, 401, 402, 404, 0, 0, 403, 657, 658, 0,
	659, 0, 405, 406, 0, 660, 0, 407, 408, 409,
	0, 410, 0, 0, 0, 411, 412, 413, 414, 415,
	416, 0, 417, 419, 418, 0, 420, 661, 0, 421,
	422, 0, 0, 423, 0, 0, 0, 424, 425, 428,
	0, 0, 426, 427, 429, 430, 0, 431, 432, 434,
	437, 433, 435, 436, 438, 451, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 453, 0,
	452, 0, 454, 455, 456, 463, 465, 466, 461, 462,
	464, 467, 468, 458, 459, 460, 0, 469, 457, 0,
	0, 0, 470, 471, 0, 662, 472, 663, 474, 475,
	0, 0, 476, 0, 0, 0, 478, 479, 480, 0,
	0, 481, 482, 664, 0, 483, 0, 665, 484, 485,
	477, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	0, 495, 496, 666, 497, 498, 499, 667, 500, 501,
	502, 668, 503, 669, 504, 505, 0, 506, 507, 0,
	508, 509, 510, 511, 512, 513, 514, 670, 515, 516,
	518, 517, 519, 0, 520, 0, 521, 522, 523, 0,
	0, 0, 0, 0, 524, 0, 526, 527, 528, 529,
	525, 530, 531, 532, 533, 534, 0, 535, 536, 537,
	0, 538, 539, 540, 541, 542, 671, 543, 0, 544,
	545, 551, 552, 553, 546, 547, 554, 555, 556, 557,
	558, 0, 560, 561, 559, 562, 563, 564, 0, 565,
	566, 548, 549, 567, 568, 0, 569, 570, 571, 572,
	573, 574, 575, 672, 0, 576, 0, 577, 578, 579,
	581, 550, 582, 587, 588, 673, 583, 584, 585, 586,
	674, 590, 591, 0, 592, 593, 0, 589, 580, 0,
	594, 595, 596, 597, 598, 599, 600, 361, 601, 0,
	602, 675, 676, 677, 678, 0, 611, 0, 603, 604,
	605, 679, 606, 680, 0, 607, 608, 609, 610, 0,
	612, 613, 0, 0, 614, 615, 616, 618, 619, 617,
	620, 0, 621, 0, 0, 622, 623, 624, 681, 682,
	683, 0, 626, 625, 627, 684, 1359, 628, 271, 0,
	0, 0, 629, 630, 685, 631, 632, 633, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	634, 0, 0, 0, 0, 286, 287, 0, 288, 289,
	290, 291, 292, 293, 635, 636, 0, 294, 637, 295,
	638, 0, 639, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 640, 641, 642, 0, 303, 304, 643,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 337, 644,
	645, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 646, 356,
	357, 358, 360, 362, 359, 363, 364, 365, 366, 647,
	648, 367, 0, 0, 0, 0, 0, 0, 0, 368,
	369, 370, 649, 0, 0, 0, 371, 0, 372, 373,
	0, 0, 0, 374, 375, 376, 650, 651, 377, 378,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 652,
	0, 653, 387, 0, 388, 389, 390, 391, 392, 654,
	655, 656, 473, 0, 393, 394, 0, 395, 396, 397,
	398, 399, 0, 0, 0, 0, 400, 401, 402, 404,
	0, 0, 403, 657, 658, 0, 659, 0, 405, 406,
	0, 660, 0, 407, 408, 409, 0, 410, 0, 0,
	0, 411, 412, 413, 414, 415, 416, 0, 417, 419,
	418, 0, 420, 661, 0, 421, 422, 0, 0, 423,
	0, 0, 0, 424, 425, 428, 0, 0, 426, 427,
	429, 430, 0, 431, 432, 434, 437, 433, 435, 436,
	438, 451, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 453, 0, 452, 0, 454, 455,
	456, 463, 465, 466, 461, 462, 464, 467, 468, 458,
	459, 460, 0, 469, 457, 0, 0, 0, 470, 471,
	0, 662, 472, 663, 474, 475, 0, 0, 476, 0,
	0, 0, 478, 479, 480, 0, 0, 481, 482, 664,
	0, 483, 0, 665, 484, 485, 477, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 0, 495, 496, 666,
	497, 498, 499, 667, 500, 501, 502, 668, 503, 669,
	504, 505, 0, 506, 507, 0, 508, 509, 510, 511,
	512, 513, 514, 670, 515, 516, 518, 517, 519, 0,
	520, 0, 521, 522, 523, 0, 0, 0, 0, 0,
	524, 0, 526, 527, 528, 529, 525, 530, 531, 532,
	533, 534, 0, 535, 536, 537, 0, 776, 539, 540,
	541, 542, 671, 543, 0, 544, 545, 551, 552, 553,
	546, 547, 775, 555, 556, 557, 558, 0, 560, 561,
	559, 562, 563, 564, 0, 565, 566, 548, 549, 567,
	568, 0, 569, 570, 571, 572, 573, 574, 575, 672,
	0, 576, 0, 577, 578, 579, 581, 550, 582, 587,
	588, 673, 583, 584, 585, 586, 674, 590, 591, 0,
	592, 593, 0, 589, 580, 0, 594, 595, 596, 597,
	598, 599, 600, 361, 601, 0, 602, 773, 676, 677,
	678, 0, 611, 0, 603, 604, 605, 679, 606, 680,
	0, 607, 608, 609, 610, 0, 612, 613, 0, 0,
	614, 615, 616, 618, 619, 617, 620, 0, 621, 0,
	0, 622, 623, 624, 681, 682, 683, 0, 626, 625,
	627, 684, 1324, 628, 271, 0, 0, 0, 629, 630,
	685, 631, 632, 633, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 634, 0, 0, 0,
	0, 286, 287, 0, 288, 289, 290, 291, 292, 293,
	635, 636, 0, 294, 637, 295, 638, 0, 639, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 640,
	641, 642, 0, 303, 304, 643, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 337, 644, 645, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 646, 356, 357, 358, 360, 362,
	359, 363, 364, 365, 366, 647, 648, 367, 0, 0,
	0, 0, 0, 0, 0, 368, 369, 370, 649, 0,
	0, 0, 371, 0, 372, 373, 0, 0, 0, 374,
	375, 376, 650, 651, 377, 378, 379, 380, 381, 382,
	383, 384, 385, 0, 386, 652, 0, 653, 387, 0,
	388, 389, 390, 391, 392, 1323, 655, 656, 473, 0,
	393, 394, 0, 395, 396, 397, 398, 399, 0, 0,
	0, 0, 400, 401, 402, 404, 0, 0, 403, 657,
	658, 0, 659, 0, 405, 406, 0, 660, 0, 407,
	408, 409, 0, 410, 0, 0, 0, 411, 412, 413,
	414, 415, 416, 0, 417, 419, 418, 0, 420, 661,
	0, 421, 422, 0, 0, 423, 0, 0, 0, 424,
	425, 428, 0, 0, 426, 427, 429, 430, 0, 431,
	432, 434, 437, 433, 435, 436, 438, 451, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	453, 0, 452, 0, 454, 455, 456, 463, 465, 466,
	461, 462, 464, 467, 468, 458, 459, 460, 0, 469,
	457, 0, 0, 0, 470, 471, 0, 662, 472, 663,
	474, 475, 0, 0, 476, 0, 0, 0, 478, 479,
	480, 0, 0, 481, 482, 664, 0, 483, 0, 665,
	484, 485, 477, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 0, 495, 496, 666, 497, 498, 499, 667,
	500, 501, 502, 668, 503, 669, 504, 505, 0, 506,
	507, 0, 508, 509, 510, 511, 512, 513, 514, 670,
	515, 516, 518, 517, 519, 0, 520, 0, 521, 522,
	523, 0, 0, 0, 0, 0, 524, 0, 526, 527,
	528, 529, 525, 530, 531, 532, 533, 534, 0, 535,
	536, 537, 0, 538, 539, 540, 541, 542, 671, 543,
	0, 544, 545, 551, 552, 553, 546, 547, 554, 555,
	556, 557, 558, 0, 560, 561, 559, 562, 563, 564,
	0, 565, 566, 548, 549, 567, 568, 0, 569, 570,
	571, 572, 573, 574, 575, 672, 0, 576, 0, 577,
	578, 579, 581, 550, 582, 587, 588, 673, 583, 584,
	585, 586, 674, 590, 591, 0, 592, 593, 0, 589,
	580, 0, 594, 595, 596, 597, 598, 599, 600, 361,
	601, 0, 602, 675, 676, 677, 678, 0, 611, 0,
	603, 604, 605, 679, 606, 680, 0, 607, 608, 609,
	610, 0, 612, 613, 0, 0, 614, 615, 616, 618,
	619, 617, 620, 0, 621, 0, 0, 622, 623, 624,
	681, 682, 683, 0, 626, 625, 627, 684, 1315, 628,
	271, 0, 0, 0, 629, 630, 685, 631, 632, 633,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 634, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 635, 636, 0, 294,
	637, 295, 638, 0, 639, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 640, 641, 642, 0, 303,
	304, 643, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 644, 645, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	646, 356, 357, 358, 360, 362, 359, 363, 364, 365,
	366, 647, 648, 367, 0, 0, 0, 0, 0, 0,
	0, 368, 369, 370, 649, 0, 0, 0, 371, 0,
	372, 373, 0, 0, 0, 374, 375, 376, 650, 651,
	377, 378, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 652, 0, 653, 387, 0, 388, 389, 390, 391,
	392, 1314, 655, 656, 473, 0, 393, 394, 0, 395,
	396, 397, 398, 399, 0, 0, 0, 0, 400, 401,
	402, 404, 0, 0, 403, 657, 658, 0, 659, 0,
	405, 406, 0, 660, 0, 407, 408, 409, 0, 410,
	0, 0, 0, 411, 412, 413, 414, 415, 416, 0,
	417, 419, 418, 0, 420, 661, 0, 421, 422, 0,
	0, 423, 0, 0, 0, 424, 425, 428, 0, 0,
	426, 427, 429, 430, 0, 431, 432, 434, 437, 433,
	435, 436, 438, 451, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 453, 0, 452, 0,
	454, 455, 456, 463, 465, 466, 461, 462, 464, 467,
	468, 458, 459, 460, 0, 469, 457, 0, 0, 0,
	470, 471, 0, 662, 472, 663, 474, 475, 0, 0,
	476, 0, 0, 0, 478, 479, 480, 0, 0, 481,
	482, 664, 0, 483, 0, 665, 484, 485, 477, 486,
	487, 488, 489, 490, 491, 492, 493, 494, 0, 495,
	496, 666, 497, 498, 499, 667, 500, 501, 502, 668,
	503, 669, 504, 505, 0, 506, 507, 0, 508, 509,
	510, 511, 512, 513, 514, 670, 515, 516, 518, 517,
	519, 0, 520, 0, 521, 522, 523, 0, 0, 0,
	0, 0, 524, 0, 526, 527, 528, 529, 525, 530,
	531, 532, 533, 534, 0, 535, 536, 537, 0, 538,
	539, 540, 541, 542, 671, 543, 0, 544, 545, 551,
	552, 553, 546, 547, 554, 555, 556, 557, 558, 0,
	560, 561, 559, 562, 563, 564, 0, 565, 566, 548,
	549, 567, 568, 0, 569, 570, 571, 572, 573, 574,
	575, 672, 0, 576, 0, 577, 578, 579, 581, 550,
	582, 587, 588, 673, 583, 584, 585, 586, 674, 590,
	591, 0, 592, 593, 0, 589, 580, 0, 594, 595,
	596, 597, 598, 599, 600, 361, 601, 0, 602, 675,
	676, 677, 678, 0, 611, 0, 603, 604, 605, 679,
	606, 680, 0, 607, 608, 609, 610, 0, 612, 613,
	0, 0, 614, 615, 616, 618, 619, 617, 620, 0,
	621, 0, 0, 622, 623, 624, 681, 682, 683, 271,
	626, 625, 627, 684, 0, 628, 0, 0, 0, 0,
	629, 630, 685, 631, 632, 633, 277, 279, 278, 280,
	281, 282, 283, 1268, 284, 285, 0, 0, 0, 0,
	0, 634, 0, 0, 0, 0, 286, 287, 0, 288,
	289, 290, 291, 292, 293, 635, 636, 0, 294, 637,
	295, 638, 0, 639, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 640, 641, 642, 0, 303, 304,
	643, 0, 0, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 335, 337,
	644, 645, 0, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 347, 348, 0,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 646,
	356, 357, 358, 360, 362, 359, 363, 364, 365, 366,
	647, 648, 367, 0, 0, 0, 0, 0, 0, 0,
	368, 369, 370, 649, 0, 0, 0, 371, 0, 372,
	373, 0, 0, 0, 374, 375, 376, 650, 651, 377,
	378, 379, 380, 381, 382, 383, 384, 385, 0, 386,
	652, 0, 653, 387, 0, 388, 389, 390, 391, 392,
	654, 655, 656, 473, 0, 393, 394, 0, 395, 396,
	397, 398, 399, 0, 0, 0, 0, 400, 401, 402,
	404, 0, 0, 403, 657, 658, 0, 659, 0, 405,
	406, 0, 660, 0, 407, 408, 409, 0, 410, 0,
	0, 0, 411, 412, 413, 414, 415, 416, 0, 417,
	419, 418, 0, 420, 661, 0, 421, 422, 0, 0,
	423, 0, 0, 0, 424, 425, 428, 0, 0, 426,
	427, 429, 430, 0, 431, 432, 434, 437, 433, 435,
	436, 438, 451, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 450, 453, 0, 452, 0, 454,
	455, 456, 463, 465, 466, 461, 462, 464, 467, 468,
	458, 459, 460, 0, 469, 457, 0, 0, 0, 470,
	471, 0, 662, 472, 663, 474, 475, 0, 0, 476,
	0, 0, 0, 478, 479, 480, 0, 0, 481, 482,
	664, 0, 483, 0, 665, 484, 485, 477, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 0, 495, 496,
	666, 497, 498, 499, 667, 500, 501, 502, 668, 503,
	669, 504, 505, 0, 506, 507, 0, 508, 509, 510,
	511, 512, 513, 514, 670, 515, 516, 518, 517, 519,
	0, 520, 0, 521, 522, 523, 0, 0, 0, 0,
	0, 524, 0, 526, 527, 528, 529, 525, 530, 531,
	532, 533, 534, 0, 535, 536, 537, 0, 538, 539,
	540, 541, 542, 671, 543, 0, 544, 545, 551, 552,
	553, 546, 547, 554, 555, 556, 557, 558, 0, 560,
	561, 559, 562, 563, 564, 0, 565, 566, 548, 549,
	567, 568, 0, 569, 570, 571, 572, 573, 574, 575,
	672, 0, 576, 0, 577, 578, 579, 581, 550, 582,
	587, 588, 673, 583, 584, 585, 586, 674, 590, 591,
	0, 592, 593, 0, 589, 580, 0, 594, 595, 596,
	597, 598, 599, 600, 361, 601, 0, 602, 675, 676,
	677, 678, 0, 611, 0, 603, 604, 605, 679, 606,
	680, 0, 607, 608, 609, 610, 0, 612, 613, 0,
	0, 614, 615, 616, 618, 619, 617, 620, 0, 621,
	0, 0, 622, 623, 624, 681, 682, 683, 271, 626,
	625, 627, 684, 0, 628, 0, 0, 0, 0, 629,
	630, 685, 631, 632, 633, 277, 279, 278, 280, 281,
	282, 283, 782, 284, 285, 0, 0, 0, 0, 0,
	634, 0, 0, 0, 0, 286, 287, 0, 288, 289,
	290, 291, 292, 293, 635, 636, 0, 294, 637, 295,
	638, 0, 639, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 640, 641, 642, 0, 303, 304, 643,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 337, 644,
	645, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 646, 356,
	357, 358, 360, 362, 359, 363, 364, 365, 366, 647,
	648, 367, 0, 0, 0, 0, 0, 0, 0, 368,
	369, 370, 649, 0, 0, 0, 371, 0, 372, 373,
	0, 0, 0, 374, 375, 376, 650, 651, 377, 378,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 652,
	0, 653, 387, 0, 388, 389, 390, 391, 392, 654,
	655, 656, 473, 0, 393, 394, 0, 395, 396, 397,
	398, 399, 0, 0, 0, 0, 400, 401, 402, 404,
	0, 0, 403, 657, 658, 0, 659, 0, 405, 406,
	0, 660, 0, 407, 408, 409, 0, 410, 0, 0,
	0, 411, 412, 413, 414, 415, 416, 0, 417, 419,
	418, 0, 420, 661, 0, 421, 422, 0, 0, 423,
	0, 0, 0, 424, 425, 428, 0, 0, 426, 427,
	429, 430, 0, 431, 432, 434, 437, 433, 435, 436,
	438, 451, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 453, 0, 452, 0, 454, 455,
	456, 463, 465, 466, 461, 462, 464, 467, 468, 458,
	459, 460, 0, 469, 457, 0, 0, 0, 470, 471,
	0, 662, 472, 663, 474, 475, 0, 0, 476, 0,
	0, 0, 478, 479, 480, 0, 0, 481, 482, 664,
	0, 483, 0, 665, 484, 485, 477, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 0, 495, 496, 666,
	497, 498, 499, 667, 500, 501, 502, 668, 503, 669,
	504, 505, 0, 506, 507, 0, 508, 509, 510, 511,
	512, 513, 514, 670, 515, 516, 518, 517, 519, 0,
	520, 0, 521, 522, 523, 0, 0, 0, 0, 0,
	524, 0, 526, 527, 528, 529, 525, 530, 531, 532,
	533, 534, 0, 535, 536, 537, 0, 538, 539, 540,
	541, 542, 671, 543, 0, 544, 545, 551, 552, 553,
	546, 547, 554, 555, 556, 557, 558, 0, 560, 561,
	559, 562, 563, 564, 0, 565, 566, 548, 549, 567,
	568, 0, 569, 570, 571, 572, 573, 574, 575, 672,
	0, 576, 0, 577, 578, 579, 581, 550, 582, 587,
	588, 673, 583, 584, 585, 586, 674, 590, 591, 0,
	592, 593, 0, 589, 580, 0, 594, 595, 596, 597,
	598, 599, 600, 361, 601, 0, 602, 675, 676, 677,
	678, 0, 611, 0, 603, 604, 605, 679, 606, 680,
	0, 607, 608, 609, 610, 0, 612, 613, 0, 0,
	614, 615, 616, 618, 619, 617, 620, 0, 621, 0,
	0, 622, 623, 624, 681, 682, 683, 0, 626, 625,
	627, 684, 767, 628, 271, 0, 0, 0, 629, 630,
	685, 631, 632, 633, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 634, 0, 0, 0,
	0, 286, 287, 0, 288, 289, 290, 291, 292, 293,
	635, 636, 0, 294, 637, 295, 638, 0, 639, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 640,
	641, 642, 0, 303, 763, 643, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 762, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 337, 644, 645, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 646, 356, 357, 358, 360, 362,
	359, 363, 364, 365, 366, 647, 648, 367, 0, 0,
	0, 0, 0, 0, 0, 368, 369, 370, 649, 0,
	0, 0, 371, 0, 372, 373, 0, 0, 0, 374,
	375, 376, 650, 651, 377, 378, 379, 380, 381, 382,
	383, 384, 385, 0, 386, 652, 0, 653, 387, 0,
	388, 389, 390, 391, 392, 654, 655, 656, 473, 0,
	393, 394, 0, 395, 396, 397, 398, 399, 0, 0,
	0, 0, 400, 401, 402, 404, 0, 0, 403, 657,
	658, 0, 659, 0, 405, 406, 0, 660, 0, 407,
	408, 409, 0, 410, 0, 0, 0, 411, 412, 413,
	414, 415, 416, 0, 417, 419, 418, 0, 420, 661,
	0, 421, 422, 0, 0, 423, 0, 0, 0, 424,
	768, 428, 0, 0, 426, 427, 429, 430, 0, 431,
	432, 434, 437, 433, 435, 436, 438, 451, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	453, 0, 777, 0, 454, 455, 456, 463, 465, 466,
	461, 462, 464, 467, 468, 458, 459, 460, 0, 469,
	457, 0, 0, 0, 470, 471, 0, 662, 472, 663,
	474, 475, 0, 0, 476, 0, 0, 0, 478, 479,
	480, 0, 0, 481, 482, 664, 0, 483, 0, 665,
	484, 485, 477, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 0, 495, 496, 666, 497, 498, 499, 667,
	500, 501, 502, 668, 503, 669, 504, 505, 0, 506,
	507, 0, 508, 509, 510, 511, 512, 513, 514, 670,
	515, 516, 518, 517, 519, 0, 520, 0, 521, 522,
	523, 0, 0, 0, 0, 0, 524, 0, 526, 527,
	528, 529, 525, 530, 531, 532, 533, 534, 0, 535,
	536, 537, 0, 776, 539, 540, 541, 542, 764, 543,
	0, 544, 545, 551, 552, 553, 546, 547, 775, 555,
	556, 557, 558, 0, 560, 561, 559, 562, 765, 564,
	0, 565, 566, 548, 549, 567, 568, 0, 569, 570,
	571, 572, 573, 574, 575, 672, 0, 576, 0, 577,
	578, 579, 581, 550, 582, 587, 588, 673, 583, 584,
	585, 586, 674, 590, 591, 0, 592, 593, 0, 589,
	580, 0, 594, 595, 596, 597, 598, 599, 600, 361,
	601, 0, 602, 773, 676, 677, 678, 0, 611, 0,
	603, 769, 605, 679, 606, 680, 0, 607, 608, 609,
	610, 0, 612, 613, 0, 0, 614, 615, 616, 618,
	619, 617, 620, 0, 621, 0, 0, 622, 623, 624,
	681, 682, 683, 0, 626, 625, 627, 684, 756, 628,
	271, 0, 0, 0, 629, 630, 685, 631, 632, 633,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 634, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 635, 636, 0, 294,
	637, 295, 638, 0, 639, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 640, 641, 642, 0, 303,
	304, 643, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 644, 645, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	646, 356, 357, 358, 360, 362, 359, 363, 364, 365,
	366, 647, 648, 367, 0, 0, 0, 0, 0, 0,
	0, 368, 369, 370, 649, 0, 0, 0, 371, 0,
	372, 373, 0, 0, 0, 374, 375, 376, 650, 651,
	377, 378, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 652, 0, 653, 387, 0, 388, 389, 390, 391,
	392, 654, 655, 656, 473, 0, 393, 394, 0, 395,
	396, 397, 398, 399, 0, 0, 0, 0, 400, 401,
	402, 404, 0, 0, 403, 657, 658, 0, 659, 0,
	405, 406, 0, 660, 0, 407, 408, 409, 0, 410,
	0, 0, 0, 411, 412, 413, 414, 415, 416, 0,
	417, 419, 418, 0, 420, 661, 0, 421, 422, 0,
	0, 423, 0, 0, 0, 424, 425, 428, 0, 0,
	426, 427, 429, 430, 0, 431, 432, 434, 437, 433,
	435, 436, 438, 451, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 453, 0, 452, 0,
	454, 455, 456, 463, 465, 466, 461, 462, 464, 467,
	468, 458, 459, 460, 0, 469, 457, 0, 0, 0,
	470, 471, 0, 662, 472, 663, 474, 475, 0, 0,
	476, 0, 0, 0, 478, 479, 480, 0, 0, 481,
	482, 664, 0, 483, 0, 665, 484, 485, 477, 486,
	487, 488, 489, 490, 491, 492, 493, 494, 0, 495,
	496, 666, 497, 498, 499, 667, 500, 501, 502, 668,
	503, 669, 504, 505, 0, 506, 507, 0, 508, 509,
	510, 511, 512, 513, 514, 670, 515, 516, 518, 517,
	519, 0, 520, 0, 521, 522, 523, 0, 0, 0,
	0, 0, 524, 0, 526, 527, 528, 529, 525, 530,
	531, 532, 533, 534, 0, 535, 536, 537, 0, 538,
	539, 540, 541, 542, 671, 543, 0, 544, 545, 757,
	552, 553, 546, 547, 554, 555, 556, 557, 558, 0,
	560, 561, 559, 562, 563, 564, 0, 565, 566, 548,
	549, 567, 568, 0, 569, 570, 571, 572, 573, 574,
	575, 672, 0, 576, 0, 577, 578, 579, 581, 550,
	582, 587, 588, 673, 583, 584, 585, 586, 674, 590,
	591, 0, 592, 593, 0, 589, 580, 0, 594, 595,
	596, 597, 598, 599, 600, 361, 601, 0, 602, 675,
	676, 677, 678, 0, 611, 0, 603, 604, 605, 679,
	606, 680, 0, 607, 608, 609, 610, 0, 612, 613,
	0, 0, 614, 615, 616, 618, 619, 617, 620, 0,
	621, 0, 0, 622, 623, 624, 681, 682, 683, 0,
	626, 625, 627, 684, 719, 628, 271, 0, 0, 0,
	629, 630, 685, 631, 632, 633, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 634, 0,
	0, 0, 0, 286, 287, 0, 288, 289, 290, 291,
	292, 293, 635, 636, 0, 294, 637, 295, 638, 0,
	639, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 640, 641, 642, 0, 303, 304, 643, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 337, 644, 645, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 646, 356, 357, 358,
	360, 362, 359, 363, 364, 365, 366, 647, 648, 367,
	0, 0, 0, 0, 0, 0, 0, 368, 369, 370,
	649, 0, 0, 0, 371, 0, 372, 373, 0, 0,
	0, 374, 375, 376, 650, 651, 377, 378, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 652, 0, 653,
	387, 0, 388, 389, 390, 391, 392, 654, 655, 656,
	473, 0, 393, 394, 0, 395, 396, 397, 398, 399,
	0, 0, 0, 0, 400, 401, 402, 404, 0, 0,
	403, 657, 658, 0, 659, 0, 405, 406, 0, 660,
	0, 407, 408, 409, 0, 410, 0, 0, 0, 411,
	412, 413, 414, 415, 416, 0, 417, 419, 418, 0,
	420, 661, 0, 421, 422, 0, 0, 423, 0, 0,
	0, 424, 425, 428, 0, 0, 426, 427, 429, 430,
	0, 431, 432, 434, 437, 433, 435, 436, 438, 451,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 453, 0, 452, 0, 454, 455, 456, 463,
	465, 466, 461, 462, 464, 467, 468, 458, 459, 460,
	0, 469, 457, 0, 0, 0, 470, 471, 0, 662,
	472, 663, 474, 475, 0, 0, 476, 0, 0, 0,
	478, 479, 480, 0, 0, 481, 482, 664, 0, 483,
	0, 665, 484, 485, 477, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 0, 495, 496, 666, 497, 498,
	499, 667, 500, 501, 502, 668, 503, 669, 504, 505,
	0, 506, 507, 0, 508, 509, 510, 511, 512, 513,
	514, 670, 515, 516, 518, 517, 519, 0, 520, 0,
	521, 522, 523, 0, 0, 0, 0, 0, 524, 0,
	526, 527, 528, 529, 525, 530, 531, 532, 533, 534,
	0, 535, 536, 537, 0, 538, 539, 540, 541, 542,
	671, 543, 0, 544, 545, 551, 552, 553, 546, 547,
	554, 555, 556, 557, 558, 0, 560, 561, 559, 562,
	563, 564, 0, 565, 566, 548, 549, 567, 568, 0,
	569, 570, 571, 572, 573, 574, 575, 672, 0, 576,
	0, 577, 578, 579, 581, 550, 582, 587, 588, 673,
	583, 584, 585, 586, 674, 590, 591, 0, 592, 593,
	0, 589, 580, 0, 594, 595, 596, 597, 598, 599,
	600, 361, 601, 0, 602, 675, 676, 677, 678, 0,
	611, 0, 603, 604, 605, 679, 606, 680, 0, 607,
	608, 609, 610, 0, 612, 613, 0, 0, 614, 615,
	616, 618, 619, 617, 620, 0, 621, 0, 0, 622,
	623, 624, 681, 682, 683, 0, 626, 625, 627, 684,
	713, 628, 271, 0, 0, 0, 629, 630, 685, 631,
	632, 633, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 634, 0, 0, 0, 0, 286,
	287, 0, 288, 289, 290, 291, 292, 293, 635, 636,
	0, 294, 637, 295, 638, 0, 639, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 640, 641, 642,
	0, 303, 304, 643, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 337, 644, 645, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 646, 356, 357, 358, 360, 362, 359, 363,
	364, 365, 366, 647, 648, 367, 0, 0, 0, 0,
	0, 0, 0, 368, 369, 370, 649, 0, 0, 0,
	371, 0, 372, 373, 0, 0, 0, 374, 375, 376,
	650, 651, 377, 378, 379, 380, 381, 382, 383, 384,
	385, 0, 386, 652, 0, 653, 387, 0, 388, 389,
	390, 391, 392, 654, 655, 656, 473, 0, 393, 394,
	0, 395, 396, 397, 398, 399, 0, 0, 0, 0,
	400, 401, 402, 404, 0, 0, 403, 657, 658, 0,
	659, 0, 405, 406, 0, 660, 0, 407, 408, 409,
	0, 410, 0, 0, 0, 411, 412, 413, 414, 415,
	416, 0, 417, 419, 418, 0, 420, 661, 0, 421,
	422, 0, 0, 423, 0, 0, 0, 424, 425, 428,
	0, 0, 426, 427, 429, 430, 0, 431, 432, 434,
	437, 433, 435, 436, 438, 451, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 453, 0,
	452, 0, 454, 455, 456, 463, 465, 466, 461, 462,
	464, 467, 468, 458, 459, 460, 0, 469, 457, 0,
	0, 0, 470, 471, 0, 662, 472, 663, 474, 475,
	0, 0, 476, 0, 0, 0, 478, 479, 480, 0,
	0, 481, 482, 664, 0, 483, 0, 665, 484, 485,
	477, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	0, 495, 496, 666, 497, 498, 499, 667, 500, 501,
	502, 668, 503, 669, 504, 505, 0, 506, 507, 0,
	508, 509, 510, 511, 512, 513, 514, 670, 515, 516,
	518, 517, 519, 0, 520, 0, 521, 522, 523, 0,
	0, 0, 0, 0, 524, 0, 526, 527, 528, 529,
	525, 530, 531, 532, 533, 534, 0, 535, 536, 537,
	0, 538, 539, 540, 541, 542, 671, 543, 0, 544,
	545, 551, 552, 553, 546, 547, 554, 555, 556, 557,
	558, 0, 560, 561, 559, 562, 563, 564, 0, 565,
	566, 548, 549, 567, 568, 0, 569, 570, 571, 572,
	573, 574, 575, 672, 0, 576, 0, 577, 578, 579,
	581, 550, 582, 587, 588, 673, 583, 584, 585, 586,
	674, 590, 591, 0, 592, 593, 0, 589, 580, 0,
	594, 595, 596, 597, 598, 599, 600, 361, 601, 0,
	602, 675, 676, 677, 678, 0, 611, 0, 603, 604,
	605, 679, 606, 680, 0, 607, 608, 609, 610, 0,
	612, 613, 0, 0, 614, 615, 616, 618, 619, 617,
	620, 0, 621, 0, 0, 622, 623, 624, 681, 682,
	683, 0, 626, 625, 627, 684, 691, 628, 271, 0,
	0, 0, 629, 630, 685, 631, 632, 633, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	634, 0, 0, 0, 0, 286, 287, 0, 288, 289,
	290, 291, 292, 293, 635, 636, 0, 294, 637, 295,
	638, 0, 639, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 640, 641, 642, 0, 303, 304, 643,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 337, 644,
	645, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 646, 356,
	357, 358, 360, 362, 359, 363, 364, 365, 366, 647,
	648, 367, 0, 0, 0, 0, 0, 0, 0, 368,
	369, 370, 649, 0, 0, 0, 371, 0, 372, 373,
	0, 0, 0, 374, 375, 376, 650, 651, 377, 378,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 652,
	0, 653, 387, 0, 388, 389, 390, 391, 392, 654,
	655, 656, 473, 0, 393, 394, 0, 395, 396, 397,
	398, 399, 0, 0, 0, 0, 400, 401, 402, 404,
	0, 0, 403, 657, 658, 0, 659, 0, 405, 406,
	0, 660, 0, 407, 408, 409, 0, 410, 0, 0,
	0, 411, 412, 413, 414, 415, 416, 0, 417, 419,
	418, 0, 420, 661, 0, 421, 422, 0, 0, 423,
	0, 0, 0, 424, 425, 428, 0, 0, 426, 427,
	429, 430, 0, 431, 432, 434, 437, 433, 435, 436,
	438, 451, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 453, 0, 452, 0, 454, 455,
	456, 463, 465, 466, 461, 462, 464, 467, 468, 458,
	459, 460, 0, 469, 457, 0, 0, 0, 470, 471,
	0, 662, 472, 663, 474, 475, 0, 0, 476, 0,
	0, 0, 478, 479, 480, 0, 0, 481, 482, 664,
	0, 483, 0, 665, 484, 485, 477, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 0, 495, 496, 666,
	497, 498, 499, 667, 500, 501, 502, 668, 503, 669,
	504, 505, 0, 506, 507, 0, 508, 509, 510, 511,
	512, 513, 514, 670, 515, 516, 518, 517, 519, 0,
	520, 0, 521, 522, 523, 0, 0, 0, 0, 0,
	524, 0, 526, 527, 528, 529, 525, 530, 531, 532,
	533, 534, 0, 535, 536, 537, 0, 538, 539, 540,
	541, 542, 671, 543, 0, 544, 545, 551, 552, 553,
	546, 547, 554, 555, 556, 557, 558, 0, 560, 561,
	559, 562, 563, 564, 0, 565, 566, 548, 549, 567,
	568, 0, 569, 570, 571, 572, 573, 574, 575, 672,
	0, 576, 0, 577, 578, 579, 581, 550, 582, 587,
	588, 673, 583, 584, 585, 586, 674, 590, 591, 0,
	592, 593, 0, 589, 580, 0, 594, 595, 596, 597,
	598, 599, 600, 361, 601, 0, 602, 675, 676, 677,
	678, 0, 611, 0, 603, 604, 605, 679, 606, 680,
	0, 607, 608, 609, 610, 0, 612, 613, 0, 0,
	614, 615, 616, 618, 619, 617, 620, 0, 621, 0,
	0, 622, 623, 624, 681, 682, 683, 271, 626, 625,
	627, 684, 0, 628, 0, 0, 0, 0, 629, 630,
	685, 631, 632, 633, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 634,
	0, 0, 0, 0, 286, 287, 0, 288, 289, 290,
	291, 292, 293, 635, 636, 0, 294, 637, 295, 638,
	0, 639, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 640, 641, 642, 0, 303, 304, 643, 0,
	0, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 337, 644, 645,
	0, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 347, 348, 0, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 646, 356, 357,
	358, 360, 362, 359, 363, 364, 365, 366, 647, 648,
	367, 0, 0, 0, 0, 0, 0, 0, 368, 369,
	370, 649, 0, 0, 0, 371, 0, 372, 373, 0,
	0, 0, 374, 375, 376, 650, 651, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 652, 0,
	653, 387, 0, 388, 389, 390, 391, 392, 654, 655,
	656, 473, 0, 393, 394, 0, 395, 396, 397, 398,
	399, 0, 0, 0, 0, 400, 401, 402, 404, 0,
	0, 403, 657, 658, 0, 659, 0, 405, 406, 0,
	660, 0, 407, 408, 409, 0, 410, 0, 0, 0,
	411, 412, 413, 414, 415, 416, 0, 417, 419, 418,
	0, 420, 661, 0, 421, 422, 0, 0, 423, 0,
	0, 0, 424, 425, 428, 0, 0, 426, 427, 429,
	430, 0, 431, 432, 434, 437, 433, 435, 436, 438,
	451, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 453, 0, 452, 0, 454, 455, 456,
	463, 465, 466, 461, 462, 464, 467, 468, 458, 459,
	460, 0, 469, 457, 0, 0, 0, 470, 471, 0,
	662, 472, 663, 474, 475, 0, 0, 476, 0, 0,
	0, 478, 479, 480, 0, 0, 481, 482, 664, 0,
	483, 0, 665, 484, 485, 477, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 0, 495, 496, 666, 497,
	498, 499, 667, 500, 501, 502, 668, 503, 669, 504,
	505, 0, 506, 507, 0, 508, 509, 510, 511, 512,
	513, 514, 670, 515, 516, 518, 517, 519, 0, 520,
	0, 521, 522, 523, 0, 0, 0, 0, 0, 524,
	0, 526, 527, 528, 529, 525, 530, 531, 532, 533,
	534, 0, 535, 536, 537, 0, 538, 539, 540, 541,
	542, 671, 543, 0, 544, 545, 551, 552, 553, 546,
	547, 554, 555, 556, 557, 558, 0, 560, 561, 559,
	562, 563, 564, 0, 565, 566, 548, 549, 567, 568,
	0, 569, 570, 571, 572, 573, 574, 575, 672, 0,
	576, 0, 577, 578, 579, 581, 550, 582, 587, 588,
	673, 583, 584, 585, 586, 674, 590, 591, 0, 592,
	593, 0, 589, 580, 0, 594, 595, 596, 597, 598,
	599, 600, 361, 601, 0, 602, 675, 676, 677, 678,
	0, 611, 0, 603, 604, 605, 679, 606, 680, 0,
	607, 608, 609, 610, 0, 612, 613, 0, 0, 614,
	615, 616, 618, 619, 617, 620, 0, 621, 0, 0,
	622, 623, 624, 681, 682, 683, 271, 626, 625, 627,
	684, 0, 628, 0, 0, 0, 0, 629, 630, 685,
	631, 632, 633, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 634, 0,
	0, 0, 0, 286, 287, 0, 288, 289, 290, 291,
	292, 293, 635, 636, 0, 294, 637, 295, 638, 0,
	639, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 640, 641, 642, 0, 303, 304, 643, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 337, 644, 645, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 646, 356, 357, 358,
	360, 362, 359, 363, 364, 365, 366, 647, 648, 367,
	0, 0, 0, 0, 0, 0, 0, 368, 369, 370,
	649, 0, 0, 0, 371, 0, 372, 373, 0, 0,
	0, 374, 375, 376, 650, 651, 377, 378, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 652, 0, 653,
	387, 0, 388, 389, 390, 391, 392, 3613, 655, 656,
	473, 0, 393, 394, 0, 395, 396, 397, 398, 399,
	0, 0, 0, 0, 400, 401, 402, 404, 0, 0,
	403, 657, 658, 0, 659, 0, 405, 406, 0, 660,
	0, 407, 408, 409, 0, 410, 0, 0, 0, 411,
	412, 413, 414, 415, 416, 0, 417, 419, 418, 0,
	420, 661, 0, 421, 422, 0, 0, 423, 0, 0,
	0, 424, 425, 428, 0, 0, 426, 427, 429, 430,
	0, 431, 432, 434, 437, 433, 435, 436, 438, 451,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 453, 0, 452, 0, 454, 455, 456, 463,
	465, 466, 461, 462, 464, 467, 468, 458, 459, 460,
	0, 469, 457, 0, 0, 0, 470, 471, 0, 662,
	472, 663, 474, 475, 0, 0, 476, 0, 0, 0,
	478, 479, 480, 0, 0, 481, 482, 664, 0, 483,
	0, 665, 484, 485, 477, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 0, 495, 496, 666, 497, 498,
	499, 667, 500, 501, 502, 668, 503, 669, 504, 505,
	0, 506, 507, 0, 508, 509, 510, 511, 512, 513,
	514, 670, 515, 516, 518, 517, 519, 0, 520, 0,
	521, 522, 523, 0, 0, 0, 0, 0, 524, 0,
	526, 527, 528, 529, 525, 530, 531, 532, 533, 534,
	0, 535, 536, 537, 0, 538, 539, 540, 541, 542,
	671, 543, 0, 544, 545, 551, 552, 553, 546, 547,
	554, 555, 556, 557, 558, 0, 560, 561, 559, 562,
	563, 564, 0, 565, 566, 548, 549, 567, 568, 0,
	569, 570, 571, 572, 573, 574, 575, 672, 0, 576,
	0, 577, 578, 579, 581, 550, 582, 587, 588, 673,
	583, 584, 585, 586, 674, 590, 591, 0, 592, 593,
	0, 589, 580, 0, 594, 595, 596, 597, 598, 599,
	600, 361, 601, 0, 602, 675, 676, 677, 678, 0,
	611, 0, 603, 604, 605, 679, 606, 680, 0, 607,
	608, 609, 610, 0, 612, 613, 0, 0, 614, 615,
	616, 618, 619, 617, 620, 0, 621, 0, 0, 622,
	623, 624, 681, 682, 683, 271, 626, 625, 627, 684,
	0, 628, 0, 0, 0, 0, 629, 630, 685, 631,
	632, 633, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 634, 0, 0,
	0, 0, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 635, 636, 0, 294, 637, 295, 638, 0, 639,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	640, 641, 642, 0, 303, 304, 643, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 337, 644, 645, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 646, 356, 357, 358, 360,
	362, 359, 363, 364, 365, 366, 647, 648, 367, 0,
	0, 0, 0, 0, 0, 0, 368, 369, 370, 649,
	0, 0, 0, 371, 0, 372, 373, 0, 0, 0,
	374, 375, 376, 650, 651, 377, 378, 379, 380, 381,
	382, 383, 384, 385, 0, 386, 652, 0, 653, 387,
	0, 388, 389, 390, 391, 392, 654, 655, 656, 473,
	0, 393, 394, 0, 395, 396, 397, 398, 399, 0,
	0, 0, 0, 400, 401, 402, 404, 0, 0, 403,
	657, 658, 0, 659, 0, 405, 406, 0, 660, 0,
	407, 408, 409, 0, 410, 0, 0, 0, 411, 412,
	413, 414, 415, 416, 0, 417, 419, 418, 0, 420,
	661, 0, 421, 422, 0, 0, 423, 0, 0, 0,
	424, 425, 428, 0, 0, 426, 427, 429, 430, 0,
	431, 432, 434, 437, 433, 435, 436, 438, 451, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 453, 0, 452, 0, 454, 455, 456, 463, 465,
	466, 461, 462, 464, 467, 468, 458, 459, 460, 0,
	469, 457, 0, 0, 0, 470, 471, 0, 662, 472,
	663, 474, 475, 0, 0, 476, 0, 0, 0, 478,
	479, 480, 0, 0, 481, 482, 664, 0, 483, 0,
	665, 484, 485, 477, 486, 487, 488, 489, 490, 491,
	492, 493, 494, 0, 495, 496, 666, 497, 498, 499,
	667, 500, 501, 502, 668, 503, 669, 504, 505, 0,
	506, 507, 0, 508, 509, 510, 511, 512, 513, 514,
	670, 515, 516, 518, 517, 519, 0, 520, 0, 521,
	522, 523, 0, 0, 0, 0, 0, 524, 0, 526,
	527, 528, 529, 525, 530, 531, 532, 533, 534, 0,
	535, 536, 537, 0, 776, 539, 540, 541, 542, 671,
	543, 0, 544, 545, 551, 552, 553, 546, 547, 775,
	555, 556, 557, 558, 0, 560, 561, 559, 562, 563,
	564, 0, 565, 566, 548, 549, 567, 568, 0, 569,
	570, 571, 572, 573, 574, 575, 672, 0, 576, 0,
	577, 578, 579, 581, 550, 582, 587, 588, 673, 583,
	584, 585, 586, 674, 590, 591, 0, 592, 593, 0,
	589, 580, 0, 594, 595, 596, 597, 598, 599, 600,
	361, 601, 0, 602, 773, 676, 677, 678, 0, 611,
	0, 603, 604, 605, 679, 606, 680, 0, 607, 608,
	609, 610, 0, 612, 613, 0, 0, 614, 615, 616,
	618, 619, 617, 620, 0, 621, 0, 0, 622, 623,
	624, 681, 682, 683, 271, 626, 625, 627, 684, 0,
	628, 0, 0, 0, 0, 629, 630, 685, 631, 632,
	633, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 634, 0, 0, 0,
	0, 286, 287, 0, 288, 289, 290, 291, 292, 293,
	635, 636, 0, 294, 637, 295, 638, 0, 639, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 640,
	641, 642, 0, 303, 304, 643, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 337, 644, 645, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 646, 356, 357, 358, 360, 362,
	359, 363, 364, 365, 366, 647, 648, 367, 0, 0,
	0, 0, 0, 0, 0, 368, 369, 370, 649, 0,
	0, 0, 371, 0, 372, 373, 0, 0, 0, 374,
	375, 376, 650, 651, 377, 378, 379, 380, 381, 382,
	383, 384, 385, 0, 386, 652, 0, 653, 387, 0,
	388, 389, 390, 391, 392, 3540, 655, 656, 473, 0,
	393, 394, 0, 395, 396, 397, 398, 399, 0, 0,
	0, 0, 400, 401, 402, 404, 0, 0, 403, 657,
	658, 0, 659, 0, 405, 406, 0, 660, 0, 407,
	408, 409, 0, 410, 0, 0, 0, 411, 412, 413,
	414, 415, 416, 0, 417, 419, 418, 0, 420, 661,
	0, 421, 422, 0, 0, 423, 0, 0, 0, 424,
	425, 428, 0, 0, 426, 427, 429, 430, 0, 431,
	432, 434, 437, 433, 435, 436, 438, 451, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	453, 0, 452, 0, 454, 455, 456, 463, 465, 466,
	461, 462, 464, 467, 468, 458, 459, 460, 0, 469,
	457, 0, 0, 0, 470, 471, 0, 662, 472, 663,
	474, 475, 0, 0, 476, 0, 0, 0, 478, 479,
	480, 0, 0, 481, 482, 664, 0, 483, 0, 665,
	484, 485, 477, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 0, 495, 496, 666, 497, 498, 499, 667,
	500, 501, 502, 668, 503, 669, 504, 505, 0, 506,
	507, 0, 508, 509, 510, 511, 512, 513, 514, 670,
	515, 516, 518, 517, 519, 0, 520, 0, 521, 522,
	523, 0, 0, 0, 0, 0, 524, 0, 526, 527,
	528, 529, 525, 530, 531, 532, 533, 534, 0, 535,
	536, 537, 0, 538, 539, 540, 541, 542, 671, 543,
	0, 544, 545, 551, 552, 553, 546, 547, 554, 555,
	556, 557, 558, 0, 560, 561, 559, 562, 563, 564,
	0, 565, 566, 548, 549, 567, 568, 0, 569, 570,
	571, 572, 573, 574, 575, 672, 0, 576, 0, 577,
	578, 579, 581, 550, 582, 587, 588, 673, 583, 584,
	585, 586, 674, 590, 591, 0, 592, 593, 0, 589,
	580, 0, 594, 595, 596, 597, 598, 599, 600, 361,
	601, 0, 602, 675, 676, 677, 678, 0, 611, 0,
	603, 604, 605, 679, 606, 680, 0, 607, 608, 609,
	610, 0, 612, 613, 0, 0, 614, 615, 616, 618,
	619, 617, 620, 0, 621, 0, 0, 622, 623, 624,
	681, 682, 683, 271, 626, 625, 627, 684, 0, 628,
	0, 0, 0, 0, 629, 630, 685, 631, 632, 633,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 634, 0, 0, 0, 0,
	286, 287, 0, 288, 289, 290, 291, 292, 293, 635,
	636, 0, 294, 637, 295, 638, 0, 639, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 640, 641,
	642, 0, 303, 304, 643, 0, 0, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 337, 644, 645, 0, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 347, 348, 0, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 646, 356, 357, 358, 360, 362, 359,
	363, 364, 365, 366, 647, 648, 367, 0, 0, 0,
	0, 0, 0, 0, 368, 369, 370, 649, 0, 0,
	0, 371, 0, 372, 373, 0, 0, 0, 374, 375,
	376, 650, 651, 377, 378, 379, 380, 381, 382, 383,
	384, 385, 0, 386, 652, 0, 653, 387, 0, 388,
	389, 390, 391, 392, 3518, 655, 656, 473, 0, 393,
	394, 0, 395, 396, 397, 398, 399, 0, 0, 0,
	0, 400, 401, 402, 404, 0, 0, 403, 657, 658,
	0, 659, 0, 405, 406, 0, 660, 0, 407, 408,
	409, 0, 410, 0, 0, 0, 411, 412, 413, 414,
	415, 416, 0, 417, 419, 418, 0, 420, 661, 0,
	421, 422, 0, 0, 423, 0, 0, 0, 424, 425,
	428, 0, 0, 426, 427, 429, 430, 0, 431, 432,
	434, 437, 433, 435, 436, 438, 451, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 450, 453,
	0, 452, 0, 454, 455, 456, 463, 465, 466, 461,
	462, 464, 467, 468, 458, 459, 460, 0, 469, 457,
	0, 0, 0, 470, 471, 0, 662, 472, 663, 474,
	475, 0, 0, 476, 0, 0, 0, 478, 479, 480,
	0, 0, 481, 482, 664, 0, 483, 0, 665, 484,
	485, 477, 486, 487, 488, 489, 490, 491, 492, 493,
	494, 0, 495, 496, 666, 497, 498, 499, 667, 500,
	501, 502, 668, 503, 669, 504, 505, 0, 506, 507,
	0, 508, 509, 510, 511, 512, 513, 514, 670, 515,
	516, 518, 517, 519, 0, 520, 0, 521, 522, 523,
	0, 0, 0, 0, 0, 524, 0, 526, 527, 528,
	529, 525, 530, 531, 532, 533, 534, 0, 535, 536,
	537, 0, 538, 539, 540, 541, 542, 671, 543, 0,
	544, 545, 551, 552, 553, 546, 547, 554, 555, 556,
	557, 558, 0, 560, 561, 559, 562, 563, 564, 0,
	565, 566, 548, 549, 567, 568, 0, 569, 570, 571,
	572, 573, 574, 575, 672, 0, 576, 0, 577, 578,
	579, 581, 550, 582, 587, 588, 673, 583, 584, 585,
	586, 674, 590, 591, 0, 592, 593, 0, 589, 580,
	0, 594, 595, 596, 597, 598, 599, 600, 361, 601,
	0, 602, 675, 676, 677, 678, 0, 611, 0, 603,
	604, 605, 679, 606, 680, 0, 607, 608, 609, 610,
	0, 612, 613, 0, 0, 614, 615, 616, 618, 619,
	617, 620, 0, 621, 0, 0, 622, 623, 624, 681,
	682, 683, 271, 626, 625, 627, 684, 0, 628, 0,
	0, 0, 0, 629, 630, 685, 631, 632, 633, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 634, 0, 0, 0, 0, 286,
	287, 0, 288, 289, 290, 291, 292, 293, 635, 636,
	0, 294, 637, 295, 638, 0, 639, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 640, 641, 642,
	0, 303, 304, 643, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 337, 644, 645, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 646, 356, 357, 358, 360, 362, 359, 363,
	364, 365, 366, 647, 648, 367, 0, 0, 0, 0,
	0, 0, 0, 368, 369, 370, 649, 0, 0, 0,
	371, 0, 372, 373, 0, 0, 0, 374, 375, 376,
	650, 651, 377, 378, 379, 380, 381, 382, 383, 384,
	385, 0, 386, 652, 0, 653, 387, 0, 388, 389,
	390, 391, 392, 3515, 655, 656, 473, 0, 393, 394,
	0, 395, 396, 397, 398, 399, 0, 0, 0, 0,
	400, 401, 402, 404, 0, 0, 403, 657, 658, 0,
	659, 0, 405, 406, 0, 660, 0, 407, 408, 409,
	0, 410, 0, 0, 0, 411, 412, 413, 414, 415,
	416, 0, 417, 419, 418, 0, 420, 661, 0, 421,
	422, 0, 0, 423, 0, 0, 0, 424, 425, 428,
	0, 0, 426, 427, 429, 430, 0, 431, 432, 434,
	437, 433, 435, 436, 438, 451, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 453, 0,
	452, 0, 454, 455, 456, 463, 465, 466, 461, 462,
	464, 467, 468, 458, 459, 460, 0, 469, 457, 0,
	0, 0, 470, 471, 0, 662, 472, 663, 474, 475,
	0, 0, 476, 0, 0, 0, 478, 479, 480, 0,
	0, 481, 482, 664, 0, 483, 0, 665, 484, 485,
	477, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	0, 495, 496, 666, 497, 498, 499, 667, 500, 501,
	502, 668, 503, 669, 504, 505, 0, 506, 507, 0,
	508, 509, 510, 511, 512, 513, 514, 670, 515, 516,
	518, 517, 519, 0, 520, 0, 521, 522, 523, 0,
	0, 0, 0, 0, 524, 0, 526, 527, 528, 529,
	525, 530, 531, 532, 533, 534, 0, 535, 536, 537,
	0, 538, 539, 540, 541, 542, 671, 543, 0, 544,
	545, 551, 552, 553, 546, 547, 554, 555, 556, 557,
	558, 0, 560, 561, 559, 562, 563, 564, 0, 565,
	566, 548, 549, 567, 568, 0, 569, 570, 571, 572,
	573, 574, 575, 672, 0, 576, 0, 577, 578, 579,
	581, 550, 582, 587, 588, 673, 583, 584, 585, 586,
	674, 590, 591, 0, 592, 593, 0, 589, 580, 0,
	594, 595, 596, 597, 598, 599, 600, 361, 601, 0,
	602, 675, 676, 677, 678, 0, 611, 0, 603, 604,
	605, 679, 606, 680, 0, 607, 608, 609, 610, 0,
	612, 613, 0, 0, 614, 615, 616, 618, 619, 617,
	620, 0, 621, 0, 0, 622, 623, 624, 681, 682,
	683, 271, 626, 625, 627, 684, 0, 628, 0, 0,
	0, 0, 629, 630, 685, 631, 632, 633, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 634, 0, 0, 0, 0, 286, 287,
	0, 288, 289, 290, 291, 292, 293, 635, 636, 0,
	294, 637, 295, 638, 0, 639, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 640, 641, 642, 0,
	303, 304, 643, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 337, 644, 645, 0, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 347,
	348, 0, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 646, 356, 357, 358, 360, 362, 359, 363, 364,
	365, 366, 647, 648, 367, 0, 0, 0, 0, 0,
	0, 0, 368, 369, 370, 649, 0, 0, 0, 371,
	0, 372, 373, 0, 0, 0, 374, 375, 376, 650,
	651, 377, 378, 379, 380, 381, 382, 383, 384, 385,
	0, 386, 652, 0, 653, 387, 0, 388, 389, 390,
	391, 392, 3467, 655, 656, 473, 0, 393, 394, 0,
	395, 396, 397, 398, 399, 0, 0, 0, 0, 400,
	401, 402, 404, 0, 0, 403, 657, 658, 0, 659,
	0, 405, 406, 0, 660, 0, 407, 408, 409, 0,
	410, 0, 0, 0, 411, 412, 413, 414, 415, 416,
	0, 417, 419, 418, 0, 420, 661, 0, 421, 422,
	0, 0, 423, 0, 0, 0, 424, 425, 428, 0,
	0, 426, 427, 429, 430, 0, 431, 432, 434, 437,
	433, 435, 436, 438, 451, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 453, 0, 452,
	0, 454, 455, 456, 463, 465, 466, 461, 462, 464,
	467, 468, 458, 459, 460, 0, 469, 457, 0, 0,
	0, 470, 471, 0, 662, 472, 663, 474, 475, 0,
	0, 476, 0, 0, 0, 478, 479, 480, 0, 0,
	481, 482, 664, 0, 483, 0, 665, 484, 485, 477,
	486, 487, 488, 489, 490, 491, 492, 493, 494, 0,
	495, 496, 666, 497, 498, 499, 667, 500, 501, 502,
	668, 503, 669, 504, 505, 0, 506, 507, 0, 508,
	509, 510, 511, 512, 513, 514, 670, 515, 516, 518,
	517, 519, 0, 520, 0, 521, 522, 523, 0, 0,
	0, 0, 0, 524, 0, 526, 527, 528, 529, 525,
	530, 531, 532, 533, 534, 0, 535, 536, 537, 0,
	538, 539, 540, 541, 542, 671, 543, 0, 544, 545,
	551, 552, 553, 546, 547, 554, 555, 556, 557, 558,
	0, 560, 561, 559, 562, 563, 564, 0, 565, 566,
	548, 549, 567, 568, 0, 569, 570, 571, 572, 573,
	574, 575, 672, 0, 576, 0, 577, 578, 579, 581,
	550, 582, 587, 588, 673, 583, 584, 585, 586, 674,
	590, 591, 0, 592, 593, 0, 589, 580, 0, 594,
	595, 596, 597, 598, 599, 600, 361, 601, 0, 602,
	675, 676, 677, 678, 0, 611, 0, 603, 604, 605,
	679, 606, 680, 0, 607, 608, 609, 610, 0, 612,
	613, 0, 0, 614, 615, 616, 618, 619, 617, 620,
	0, 621, 0, 0, 622, 623, 624, 681, 682, 683,
	271, 626, 625, 627, 684, 0, 628, 0, 0, 0,
	0, 629, 630, 685, 631, 632, 633, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 634, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 635, 636, 0, 294,
	637, 295, 638, 0, 639, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 640, 641, 642, 0, 303,
	304, 643, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 644, 645, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	646, 356, 357, 358, 360, 362, 359, 363, 364, 365,
	366, 647, 648, 367, 0, 0, 0, 0, 0, 0,
	0, 368, 369, 370, 649, 0, 0, 0, 371, 0,
	372, 373, 0, 0, 0, 374, 375, 376, 650, 651,
	377, 378, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 652, 0, 653, 387, 0, 388, 389, 390, 391,
	392, 3465, 655, 656, 473, 0, 393, 394, 0, 395,
	396, 397, 398, 399, 0, 0, 0, 0, 400, 401,
	402, 404, 0, 0, 403, 657, 658, 0, 659, 0,
	405, 406, 0, 660, 0, 407, 408, 409, 0, 410,
	0, 0, 0, 411, 412, 413, 414, 415, 416, 0,
	417, 419, 418, 0, 420, 661, 0, 421, 422, 0,
	0, 423, 0, 0, 0, 424, 425, 428, 0, 0,
	426, 427, 429, 430, 0, 431, 432, 434, 437, 433,
	435, 436, 438, 451, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 453, 0, 452, 0,
	454, 455, 456, 463, 465, 466, 461, 462, 464, 467,
	468, 458, 459, 460, 0, 469, 457, 0, 0, 0,
	470, 471, 0, 662, 472, 663, 474, 475, 0, 0,
	476, 0, 0, 0, 478, 479, 480, 0, 0, 481,
	482, 664, 0, 483, 0, 665, 484, 485, 477, 486,
	487, 488, 489, 490, 491, 492, 493, 494, 0, 495,
	496, 666, 497, 498, 499, 667, 500, 501, 502, 668,
	503, 669, 504, 505, 0, 506, 507, 0, 508, 509,
	510, 511, 512, 513, 514, 670, 515, 516, 518, 517,
	519, 0, 520, 0, 521, 522, 523, 0, 0, 0,
	0, 0, 524, 0, 526, 527, 528, 529, 525, 530,
	531, 532, 533, 534, 0, 535, 536, 537, 0, 538,
	539, 540, 541, 542, 671, 543, 0, 544, 545, 551,
	552, 553, 546, 547, 554, 555, 556, 557, 558, 0,
	560, 561, 559, 562, 563, 564, 0, 565, 566, 548,
	549, 567, 568, 0, 569, 570, 571, 572, 573, 574,
	575, 672, 0, 576, 0, 577, 578, 579, 581, 550,
	582, 587, 588, 673, 583, 584, 585, 586, 674, 590,
	591, 0, 592, 593, 0, 589, 580, 0, 594, 595,
	596, 597, 598, 599, 600, 361, 601, 0, 602, 675,
	676, 677, 678, 0, 611, 0, 603, 604, 605, 679,
	606, 680, 0, 607, 608, 609, 610, 0, 612, 613,
	0, 0, 614, 615, 616, 618, 619, 617, 620, 0,
	621, 0, 0, 622, 623, 624, 681, 682, 683, 271,
	626, 625, 627, 684, 0, 628, 0, 0, 0, 0,
	629, 630, 685, 631, 632, 633, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 634, 0, 0, 0, 0, 286, 287, 0, 288,
	289, 290, 291, 292, 293, 635, 636, 0, 294, 637,
	295, 638, 0, 639, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 640, 641, 642, 0, 303, 304,
	643, 0, 0, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 335, 337,
	644, 645, 0, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 347, 348, 0,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 646,
	356, 357, 358, 360, 362, 359, 363, 364, 365, 366,
	647, 648, 367, 0, 0, 0, 0, 0, 0, 0,
	368, 369, 370, 649, 0, 0, 0, 371, 0, 372,
	373, 0, 0, 0, 374, 375, 376, 650, 651, 377,
	378, 379, 380, 381, 382, 383, 384, 385, 0, 386,
	652, 0, 653, 387, 0, 388, 389, 390, 391, 392,
	3450, 655, 656, 473, 0, 393, 394, 0, 395, 396,
	397, 398, 399, 0, 0, 0, 0, 400, 401, 402,
	404, 0, 0, 403, 657, 658, 0, 659, 0, 405,
	406, 0, 660, 0, 407, 408, 409, 0, 410, 0,
	0, 0, 411, 412, 413, 414, 415, 416, 0, 417,
	419, 418, 0, 420, 661, 0, 421, 422, 0, 0,
	423, 0, 0, 0, 424, 425, 428, 0, 0, 426,
	427, 429, 430, 0, 431, 432, 434, 437, 433, 435,
	436, 438, 451, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 450, 453, 0, 452, 0, 454,
	455, 456, 463, 465, 466, 461, 462, 464, 467, 468,
	458, 459, 460, 0, 469, 457, 0, 0, 0, 470,
	471, 0, 662, 472, 663, 474, 475, 0, 0, 476,
	0, 0, 0, 478, 479, 480, 0, 0, 481, 482,
	664, 0, 483, 0, 665, 484, 485, 477, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 0, 495, 496,
	666, 497, 498, 499, 667, 500, 501, 502, 668, 503,
	669, 504, 505, 0, 506, 507, 0, 508, 509, 510,
	511, 512, 513, 514, 670, 515, 516, 518, 517, 519,
	0, 520, 0, 521, 522, 523, 0, 0, 0, 0,
	0, 524, 0, 526, 527, 528, 529, 525, 530, 531,
	532, 533, 534, 0, 535, 536, 537, 0, 538, 539,
	540, 541, 542, 671, 543, 0, 544, 545, 551, 552,
	553, 546, 547, 554, 555, 556, 557, 558, 0, 560,
	561, 559, 562, 563, 564, 0, 565, 566, 548, 549,
	567, 568, 0, 569, 570, 571, 572, 573, 574, 575,
	672, 0, 576, 0, 577, 578, 579, 581, 550, 582,
	587, 588, 673, 583, 584, 585, 586, 674, 590, 591,
	0, 592, 593, 0, 589, 580, 0, 594, 595, 596,
	597, 598, 599, 600, 361, 601, 0, 602, 675, 676,
	677, 678, 0, 611, 0, 603, 604, 605, 679, 606,
	680, 0, 607, 608, 609, 610, 0, 612, 613, 0,
	0, 614, 615, 616, 618, 619, 617, 620, 0, 621,
	0, 0, 622, 623, 624, 681, 682, 683, 271, 626,
	625, 627, 684, 0, 628, 0, 0, 0, 0, 629,
	630, 685, 631, 632, 633, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	634, 0, 0, 0, 0, 286, 287, 0, 288, 289,
	290, 291, 292, 293, 635, 636, 0, 294, 637, 295,
	638, 0, 639, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 640, 641, 642, 0, 303, 304, 643,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 337, 644,
	645, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 646, 356,
	357, 358, 360, 362, 359, 363, 364, 365, 366, 647,
	648, 367, 0, 0, 0, 0, 0, 0, 0, 368,
	369, 370, 649, 0, 0, 0, 371, 0, 372, 373,
	0, 0, 0, 374, 375, 376, 650, 651, 377, 378,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 652,
	0, 653, 387, 0, 388, 389, 390, 391, 392, 3055,
	655, 656, 473, 0, 393, 394, 0, 395, 396, 397,
	398, 399, 0, 0, 0, 0, 400, 401, 402, 404,
	0, 0, 403, 657, 658, 0, 659, 0, 405, 406,
	0, 660, 0, 407, 408, 409, 0, 410, 0, 0,
	0, 411, 412, 413, 414, 415, 416, 0, 417, 419,
	418, 0, 420, 661, 0, 421, 422, 0, 0, 423,
	0, 0, 0, 424, 425, 428, 0, 0, 426, 427,
	429, 430, 0, 431, 432, 434, 437, 433, 435, 436,
	438, 451, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 453, 0, 452, 0, 454, 455,
	456, 463, 465, 466, 461, 462, 464, 467, 468, 458,
	459, 460, 0, 469, 457, 0, 0, 0, 470, 471,
	0, 662, 472, 663, 474, 475, 0, 0, 476, 0,
	0, 0, 478, 479, 480, 0, 0, 481, 482, 664,
	0, 483, 0, 665, 484, 485, 477, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 0, 495, 496, 666,
	497, 498, 499, 667, 500, 501, 502, 668, 503, 669,
	504, 505, 0, 506, 507, 0, 508, 509, 510, 511,
	512, 513, 514, 670, 515, 516, 518, 517, 519, 0,
	520, 0, 521, 522, 523, 0, 0, 0, 0, 0,
	524, 0, 526, 527, 528, 529, 525, 530, 531, 532,
	533, 534, 0, 535, 536, 537, 0, 538, 539, 540,
	541, 542, 671, 543, 0, 544, 545, 551, 552, 553,
	546, 547, 554, 555, 556, 557, 558, 0, 560, 561,
	559, 562, 563, 564, 0, 565, 566, 548, 549, 567,
	568, 0, 569, 570, 571, 572, 573, 574, 575, 672,
	0, 576, 0, 577, 578, 579, 581, 550, 582, 587,
	588, 673, 583, 584, 585, 586, 674, 590, 591, 0,
	592, 593, 0, 589, 580, 0, 594, 595, 596, 597,
	598, 599, 600, 361, 601, 0, 602, 675, 676, 677,
	678, 0, 611, 0, 603, 604, 605, 679, 606, 680,
	0, 607, 608, 609, 610, 0, 612, 613, 0, 0,
	614, 615, 616, 618, 619, 617, 620, 0, 621, 0,
	0, 622, 623, 624, 681, 682, 683, 271, 626, 625,
	627, 684, 0, 628, 0, 0, 0, 0, 629, 630,
	685, 631, 632, 633, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 634,
	0, 0, 0, 0, 286, 287, 0, 288, 289, 290,
	291, 292, 293, 635, 636, 0, 294, 637, 295, 638,
	0, 639, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 640, 641, 642, 0, 303, 304, 643, 0,
	0, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 337, 644, 645,
	0, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 347, 348, 0, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 646, 356, 357,
	358, 360, 362, 359, 363, 364, 365, 366, 647, 648,
	367, 0, 0, 0, 0, 0, 0, 0, 368, 369,
	370, 649, 0, 0, 0, 371, 0, 372, 373, 0,
	0, 0, 374, 375, 376, 650, 651, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 652, 0,
	653, 387, 0, 388, 389, 390, 391, 392, 654, 655,
	656, 473, 0, 393, 394, 0, 395, 396, 397, 398,
	399, 0, 0, 0, 0, 400, 401, 402, 404, 0,
	0, 403, 657, 658, 0, 659, 0, 405, 406, 0,
	660, 0, 407, 408, 409, 0, 410, 0, 0, 0,
	411, 412, 413, 414, 415, 416, 0, 417, 419, 418,
	0, 420, 661, 0, 421, 422, 0, 0, 423, 0,
	0, 0, 424, 425, 428, 0, 0, 426, 427, 429,
	430, 0, 431, 432, 434, 437, 433, 435, 436, 438,
	451, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 453, 0, 452, 0, 454, 455, 456,
	463, 465, 466, 461, 462, 464, 467, 468, 458, 459,
	460, 0, 469, 457, 0, 0, 0, 470, 471, 0,
	662, 472, 663, 474, 475, 0, 0, 476, 0, 0,
	0, 478, 479, 480, 0, 0, 481, 482, 664, 0,
	483, 0, 665, 484, 485, 477, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 0, 495, 496, 666, 497,
	498, 499, 667, 500, 501, 502, 668, 503, 669, 504,
	505, 0, 506, 507, 0, 508, 509, 510, 511, 512,
	513, 514, 670, 515, 516, 518, 517, 519, 0, 520,
	0, 521, 522, 523, 0, 0, 0, 0, 0, 524,
	0, 526, 527, 528, 529, 525, 530, 531, 532, 533,
	534, 0, 535, 536, 537, 0, 538, 539, 540, 541,
	542, 671, 543, 0, 544, 545, 757, 552, 553, 546,
	547, 554, 555, 556, 557, 558, 0, 560, 561, 559,
	562, 563, 564, 0, 565, 566, 548, 549, 567, 568,
	0, 569, 570, 571, 572, 573, 574, 575, 672, 0,
	576, 0, 577, 578, 579, 581, 550, 582, 587, 588,
	673, 583, 584, 585, 586, 674, 590, 591, 0, 592,
	593, 0, 589, 580, 0, 594, 595, 596, 597, 598,
	599, 600, 361, 601, 0, 602, 675, 676, 677, 678,
	0, 611, 0, 603, 604, 605, 679, 606, 680, 0,
	607, 608, 609, 610, 0, 612, 613, 0, 0, 614,
	615, 616, 618, 619, 617, 620, 0, 621, 0, 0,
	622, 623, 624, 681, 682, 683, 271, 626, 625, 627,
	684, 0, 628, 0, 0, 0, 0, 629, 630, 685,
	631, 632, 633, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 634, 0,
	2297, 0, 0, 286, 287, 0, 288, 289, 290, 291,
	292, 293, 635, 636, 0, 294, 637, 295, 638, 0,
	639, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 640, 641, 642, 0, 303, 304, 643, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 337, 644, 645, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 646, 356, 357, 358,
	360, 362, 359, 363, 364, 365, 366, 647, 648, 367,
	0, 0, 0, 0, 0, 0, 0, 368, 369, 370,
	649, 0, 0, 0, 371, 0, 372, 373, 0, 0,
	0, 374, 375, 376, 650, 651, 377, 378, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 652, 0, 653,
	387, 0, 388, 389, 390, 391, 392, 654, 655, 656,
	473, 0, 393, 394, 0, 395, 396, 397, 398, 399,
	0, 0, 0, 0, 400, 401, 402, 404, 0, 0,
	403, 657, 658, 0, 659, 0, 405, 406, 0, 660,
	0, 407, 408, 409, 0, 410, 0, 0, 0, 411,
	412, 413, 414, 415, 416, 0, 417, 419, 418, 0,
	420, 661, 0, 421, 422, 0, 0, 423, 0, 0,
	0, 424, 425, 428, 0, 0, 426, 427, 429, 430,
	0, 431, 432, 434, 437, 433, 435, 436, 438, 451,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 453, 0, 452, 0, 454, 455, 456, 463,
	465, 466, 461, 462, 464, 467, 468, 458, 459, 460,
	0, 469, 457, 0, 0, 0, 470, 471, 0, 662,
	472, 663, 474, 475, 0, 0, 476, 0, 0, 0,
	478, 479, 480, 0, 0, 481, 482, 664, 0, 483,
	0, 665, 484, 485, 477, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 0, 495, 496, 666, 497, 498,
	499, 667, 500, 501, 502, 668, 503, 669, 504, 505,
	0, 506, 507, 0, 508, 509, 510, 511, 512, 513,
	514, 670, 515, 516, 518, 517, 519, 0, 520, 0,
	521, 522, 523, 0, 0, 0, 0, 0, 524, 0,
	526, 527, 528, 529, 525, 530, 531, 532, 533, 534,
	0, 535, 536, 537, 0, 538, 539, 540, 541, 542,
	671, 543, 0, 544, 545, 551, 552, 553, 546, 547,
	554, 555, 556, 557, 558, 0, 560, 561, 559, 562,
	563, 564, 0, 0, 566, 548, 549, 567, 568, 0,
	569, 570, 571, 572, 573, 574, 575, 672, 0, 576,
	0, 577, 578, 579, 581, 550, 582, 587, 588, 673,
	583, 584, 585, 586, 674, 590, 591, 0, 592, 593,
	0, 589, 580, 0, 594, 595, 596, 597, 598, 599,
	600, 361, 601, 0, 602, 675, 676, 677, 678, 0,
	611, 0, 603, 604, 605, 679, 606, 680, 0, 607,
	608, 609, 610, 0, 612, 613, 0, 0, 614, 615,
	616, 618, 619, 617, 620, 0, 621, 0, 0, 622,
	623, 624, 681, 682, 683, 271, 626, 625, 627, 684,
	0, 628, 0, 0, 0, 0, 629, 630, 685, 631,
	632, 633, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 634, 0, 0,
	0, 0, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 635, 636, 0, 294, 637, 295, 638, 0, 639,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	640, 641, 642, 0, 303, 304, 643, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 337, 644, 645, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 646, 356, 357, 358, 360,
	362, 359, 363, 364, 365, 366, 647, 648, 367, 0,
	0, 0, 0, 0, 0, 0, 368, 369, 370, 649,
	0, 0, 0, 371, 0, 372, 373, 0, 0, 0,
	374, 375, 376, 650, 651, 377, 378, 379, 380, 381,
	382, 383, 384, 385, 0, 386, 652, 0, 653, 387,
	0, 388, 389, 390, 391, 392, 1286, 655, 656, 473,
	0, 393, 394, 0, 395, 396, 397, 398, 399, 0,
	0, 0, 0, 400, 401, 402, 404, 0, 0, 403,
	657, 658, 0, 659, 0, 405, 406, 0, 660, 0,
	407, 408, 409, 0, 410, 0, 0, 0, 411, 412,
	413, 414, 415, 416, 0, 417, 419, 418, 0, 420,
	661, 0, 421, 422, 0, 0, 423, 0, 0, 0,
	424, 425, 428, 0, 0, 426, 427, 429, 430, 0,
	431, 432, 434, 437, 433, 435, 436, 438, 451, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 453, 0, 452, 0, 454, 455, 456, 463, 465,
	466, 461, 462, 464, 467, 468, 458, 459, 460, 0,
	469, 457, 0, 0, 0, 470, 471, 0, 662, 472,
	663, 474, 475, 0, 0, 476, 0, 0, 0, 478,
	479, 480, 0, 0, 481, 482, 664, 0, 483, 0,
	665, 484, 485, 477, 486, 487, 488, 489, 490, 491,
	492, 493, 494, 0, 495, 496, 666, 497, 498, 499,
	667, 500, 501, 502, 668, 503, 669, 504, 505, 0,
	506, 507, 0, 508, 509, 510, 511, 512, 513, 514,
	670, 515, 516, 518, 517, 519, 0, 520, 0, 521,
	522, 523, 0, 0, 0, 0, 0, 524, 0, 526,
	527, 528, 529, 525, 530, 531, 532, 533, 534, 0,
	535, 536, 537, 0, 538, 539, 540, 541, 542, 671,
	543, 0, 544, 545, 551, 552, 553, 546, 547, 554,
	555, 556, 557, 558, 0, 560, 561, 559, 562, 563,
	564, 0, 565, 566, 548, 549, 567, 568, 0, 569,
	570, 571, 572, 573, 574, 575, 672, 0, 576, 0,
	577, 578, 579, 581, 550, 582, 587, 588, 673, 583,
	584, 585, 586, 674, 590, 591, 0, 592, 593, 0,
	589, 580, 0, 594, 595, 596, 597, 598, 599, 600,
	361, 601, 0, 602, 675, 676, 677, 678, 0, 611,
	0, 603, 604, 605, 679, 606, 680, 0, 607, 608,
	609, 610, 0, 612, 613, 0, 0, 614, 615, 616,
	618, 619, 617, 620, 0, 621, 0, 0, 622, 623,
	624, 681, 682, 683, 271, 626, 625, 627, 684, 0,
	628, 0, 0, 0, 0, 629, 630, 685, 631, 632,
	633, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 634, 0, 0, 0,
	0, 286, 287, 0, 288, 289, 290, 291, 292, 293,
	635, 636, 0, 294, 637, 295, 638, 0, 639, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 640,
	641, 642, 0, 303, 304, 643, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 337, 644, 645, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 646, 356, 357, 358, 360, 362,
	359, 363, 364, 365, 366, 647, 648, 367, 0, 0,
	0, 0, 0, 0, 0, 368, 369, 370, 649, 0,
	0, 0, 371, 0, 372, 373, 0, 0, 0, 374,
	375, 376, 650, 651, 377, 378, 379, 380, 381, 382,
	383, 384, 385, 0, 386, 652, 0, 653, 387, 0,
	388, 389, 390, 391, 392, 654, 655, 656, 473, 0,
	393, 394, 0, 395, 396, 397, 398, 399, 0, 0,
	0, 0, 400, 401, 402, 404, 0, 0, 403, 657,
	658, 0, 659, 0, 405, 406, 0, 660, 0, 407,
	408, 409, 0, 410, 0, 0, 0, 411, 412, 413,
	414, 415, 416, 0, 417, 419, 418, 0, 420, 661,
	0, 421, 422, 0, 0, 423, 0, 0, 0, 424,
	425, 428, 0, 0, 426, 427, 429, 430, 0, 431,
	432, 434, 437, 433, 435, 436, 438, 451, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	453, 0, 452, 0, 454, 455, 456, 463, 465, 466,
	461, 462, 464, 467, 468, 458, 459, 460, 0, 469,
	457, 0, 0, 0, 470, 471, 0, 662, 472, 663,
	474, 475, 0, 0, 476, 0, 0, 0, 478, 479,
	480, 0, 0, 481, 482, 664, 0, 483, 0, 665,
	484, 485, 477, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 0, 495, 496, 666, 497, 498, 499, 667,
	500, 501, 502, 668, 503, 669, 504, 505, 0, 506,
	507, 0, 508, 509, 510, 511, 512, 513, 514, 670,
	515, 516, 1218, 517, 519, 0, 520, 0, 521, 522,
	523, 0, 0, 0, 0, 0, 524, 0, 526, 527,
	528, 529, 525, 530, 531, 532, 533, 534, 0, 535,
	536, 537, 0, 538, 539, 540, 541, 542, 671, 543,
	0, 544, 545, 551, 552, 553, 546, 547, 554, 555,
	556, 557, 558, 0, 560, 561, 559, 562, 563, 564,
	0, 565, 566, 548, 549, 567, 568, 0, 569, 570,
	571, 572, 573, 574, 575, 672, 0, 576, 0, 577,
	578, 579, 581, 550, 582, 587, 588, 673, 583, 584,
	585, 586, 674, 590, 591, 0, 592, 593, 0, 589,
	580, 0, 594, 595, 596, 597, 598, 599, 600, 361,
	601, 0, 602, 675, 676, 677, 678, 0, 611, 0,
	603, 604, 605, 679, 606, 680, 0, 607, 608, 609,
	610, 0, 612, 613, 0, 0, 614, 615, 616, 618,
	619, 617, 620, 0, 621, 0, 0, 622, 623, 624,
	681, 682, 683, 271, 626, 625, 627, 684, 0, 628,
	0, 0, 0, 0, 629, 630, 685, 631, 632, 633,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 634, 0, 0, 0, 0,
	286, 287, 0, 288, 289, 290, 291, 292, 293, 635,
	636, 0, 294, 637, 295, 638, 0, 639, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 640, 641,
	642, 0, 303, 304, 643, 0, 0, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 337, 644, 645, 0, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 347, 348, 0, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 646, 356, 357, 358, 360, 362, 359,
	363, 364, 365, 366, 647, 648, 367, 0, 0, 0,
	0, 0, 0, 0, 368, 369, 370, 649, 0, 0,
	0, 371, 0, 372, 373, 0, 0, 0, 374, 375,
	376, 650, 651, 377, 378, 379, 380, 381, 382, 383,
	384, 385, 0, 386, 652, 0, 653, 0, 0, 388,
	389, 390, 391, 392, 654, 655, 656, 473, 0, 393,
	394, 0, 395, 396, 397, 398, 399, 0, 0, 0,
	0, 400, 401, 402, 404, 0, 0, 403, 657, 658,
	0, 659, 0, 405, 406, 0, 660, 0, 407, 408,
	409, 0, 410, 0, 0, 0, 411, 412, 413, 414,
	415, 416, 0, 417, 419, 418, 0, 420, 661, 0,
	421, 422, 0, 0, 423, 0, 0, 0, 424, 425,
	428, 0, 0, 426, 427, 429, 430, 0, 431, 432,
	434, 437, 433, 435, 436, 438, 451, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 450, 453,
	0, 452, 0, 454, 455, 456, 463, 465, 466, 461,
	462, 464, 467, 468, 458, 459, 460, 0, 469, 457,
	0, 0, 0, 470, 471, 0, 662, 472, 663, 474,
	475, 0, 0, 476, 0, 0, 0, 478, 479, 480,
	0, 0, 481, 482, 664, 0, 483, 0, 665, 484,
	485, 477, 486, 487, 0, 489, 490, 491, 492, 493,
	494, 0, 495, 496, 666, 497, 498, 499, 667, 500,
	501, 502, 668, 503, 669, 504, 505, 0, 506, 507,
	0, 508, 509, 510, 511, 0, 513, 514, 670, 515,
	516, 518, 517, 519, 0, 520, 0, 521, 522, 523,
	0, 0, 0, 0, 0, 524, 0, 526, 527, 528,
	529, 525, 530, 531, 532, 533, 534, 0, 535, 536,
	537, 0, 538, 539, 540, 541, 542, 671, 0, 0,
	544, 545, 551, 552, 553, 546, 547, 554, 555, 556,
	557, 558, 0, 560, 561, 559, 562, 563, 564, 0,
	565, 566, 548, 549, 567, 568, 0, 569, 570, 571,
	572, 573, 574, 575, 672, 0, 576, 0, 577, 578,
	579, 581, 550, 582, 587, 588, 673, 583, 584, 585,
	586, 674, 590, 591, 0, 592, 593, 0, 589, 580,
	0, 594, 595, 596, 597, 598, 599, 600, 361, 601,
	0, 602, 675, 676, 677, 678, 0, 611, 0, 603,
	604, 605, 679, 606, 680, 0, 607, 608, 609, 610,
	0, 612, 613, 0, 0, 614, 615, 616, 618, 619,
	617, 620, 0, 621, 0, 0, 622, 623, 624, 681,
	682, 683, 0, 626, 625, 627, 684, 0, 628, 0,
	0, 0, 0, 629, 630, 685, 631, 632, 633, 1792,
	1793, 0, 1825, 1826, 1827, 1836, 1837, 1838, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1829, 1823, 0, 0, 0, 0, 0, 0, 1795,
	0, 0, 0, 0, 0, 0, 0, 0, 1842, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1848, 0, 0, 0, 0,
	0, 0, 0, 0, 1794, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1814, 0, 0, 0, 0, 0,
	0, 0, 0, 1811, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1792, 1793, 0,
	1825, 1826, 1827, 1836, 1837, 1838, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1829,
	1823, 0, 0, 0, 0, 0, 0, 1795, 0, 0,
	0, 0, 0, 0, 0, 0, 1842, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1817,
	1818, 1819, 1820, 1848, 0, 0, 0, 0, 0, 1800,
	0, 0, 1794, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1814, 0, 0, 0, 0, 0, 0, 0,
	0, 1811, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1833, 0, 0,
	1843, 0, 0, 0, 0, 0, 0, 1822, 1824, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1839, 0, 1840, 0, 0, 0,
	0, 0, 0, 1809, 1810, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1831, 0, 0, 0, 0, 0, 1817, 1818, 1819,
	1820, 0, 0, 0, 0, 0, 1815, 1800, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1792,
	1793, 0, 1825, 1826, 1827, 1836, 1837, 1838, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1829, 1823, 0, 0, 1833, 0, 0, 1843, 1795,
	0, 1841, 0, 0, 0, 1822, 1824, 0, 1842, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1830,
	0, 0, 1839, 0, 1840, 1848, 0, 0, 0, 0,
	1845, 1809, 1810, 0, 1794, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1814, 0, 0, 0, 0, 1831,
	0, 0, 0, 1811, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1815, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1821, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1816, 1841,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1830, 0, 1817,
	1818, 1819, 1820, 0, 0, 1834, 0, 0, 1845, 1800,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1847, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1833, 0, 0,
	1843, 0, 0, 0, 0, 0, 0, 1822, 1824, 0,
	0, 0, 0, 1821, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1839, 0, 1840, 0, 0, 0,
	0, 0, 0, 1809, 1810, 0, 1816, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1831, 0, 0, 0, 0, 0, 0, 1832, 0,
	0, 0, 0, 1834, 0, 0, 1815, 0, 1806, 1807,
	1813, 1835, 1812, 1808, 0, 1805, 1803, 1804, 1796, 1797,
	1798, 1799, 1801, 1802, 0, 0, 0, 0, 4659, 0,
	0, 0, 0, 0, 1847, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1841, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1830,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1845, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1832, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1806, 1807, 1813, 1835,
	1812, 1808, 0, 1805, 1803, 1804, 1796, 1797, 1798, 1799,
	1801, 1802, 0, 0, 0, 1821, 4574, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1816, 1792,
	1793, 0, 1825, 1826, 1827, 1836, 1837, 1838, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1829, 1823, 0, 0, 1834, 0, 0, 0, 1795,
	0, 0, 0, 0, 0, 0, 0, 0, 1842, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1848, 1847, 0, 0, 0,
	0, 0, 0, 0, 1794, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1814, 0, 0, 0, 0, 0,
	0, 0, 0, 1811, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1832, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1806, 1807,
	1813, 1835, 1812, 1808, 0, 1805, 1803, 1804, 1796, 1797,
	1798, 1799, 1801, 1802, 0, 0, 0, 0, 4533, 1817,
	1818, 1819, 1820, 0, 0, 0, 0, 0, 0, 1800,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1792, 1793, 0, 1825, 1826, 1827, 1836, 1837, 1838,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1829, 1823, 0, 0, 1833, 0, 0,
	1843, 1795, 0, 0, 0, 0, 0, 1822, 1824, 0,
	1842, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1839, 0, 1840, 1848, 0, 0,
	0, 0, 0, 1809, 1810, 0, 1794, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1814, 0, 0, 0,
	0, 1831, 0, 0, 0, 1811, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1815, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1792,
	1793, 0, 1825, 1826, 1827, 1836, 1837, 1838, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1829, 1823, 0, 0, 0, 0, 0, 0, 1795,
	0, 1841, 0, 0, 0, 0, 0, 0, 1842, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1830,
	0, 1817, 1818, 1819, 1820, 1848, 0, 0, 0, 0,
	1845, 1800, 0, 0, 1794, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1814, 0, 0, 0, 0, 0,
	0, 0, 0, 1811, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1833,
	0, 0, 1843, 0, 0, 0, 0, 0, 0, 1822,
	1824, 0, 0, 0, 0, 1821, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1839, 0, 1840, 0,
	0, 0, 0, 0, 0, 1809, 1810, 0, 1816, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1831, 0, 0, 0, 0, 0, 1817,
	1818, 1819, 1820, 0, 0, 1834, 0, 0, 1815, 1800,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1792, 1793, 0, 1825, 1826, 1827, 1836, 1837, 1838,
	0, 0, 0, 0, 0, 0, 1847, 0, 0, 0,
	0, 0, 0, 1829, 1823, 0, 0, 1833, 0, 0,
	1843, 1795, 0, 1841, 0, 0, 0, 1822, 1824, 0,
	1842, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1830, 0, 0, 1839, 0, 1840, 1848, 0, 0,
	0, 0, 1845, 1809, 1810, 0, 1794, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1814, 0, 0, 0,
	0, 1831, 0, 0, 0, 1811, 0, 0, 1832, 0,
	0, 0, 0, 0, 0, 0, 1815, 0, 1806, 1807,
	1813, 1835, 1812, 1808, 0, 1805, 1803, 1804, 1796, 1797,
	1798, 1799, 1801, 1802, 0, 0, 0, 1821, 4532, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1816, 1841, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1830,
	0, 1817, 1818, 1819, 1820, 0, 0, 1834, 0, 0,
	1845, 1800, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1847, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1833,
	0, 0, 1843, 0, 0, 0, 0, 0, 0, 1822,
	1824, 0, 0, 0, 0, 1821, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1839, 0, 1840, 0,
	0, 0, 0, 0, 0, 1809, 1810, 0, 1816, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1831, 0, 0, 0, 0, 0, 0,
	1832, 0, 0, 0, 0, 1834, 0, 0, 1815, 0,
	1806, 1807, 1813, 1835, 1812, 1808, 0, 1805, 1803, 1804,
	1796, 1797, 1798, 1799, 1801, 1802, 0, 0, 0, 0,
	4343, 0, 0, 0, 0, 0, 1847, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1841, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1830, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1845, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1832, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1806, 1807,
	1813, 1835, 1812, 1808, 0, 1805, 1803, 1804, 1796, 1797,
	1798, 1799, 1801, 1802, 0, 0, 0, 1821, 4176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1816, 1792, 1793, 0, 1825, 1826, 1827, 1836, 1837, 1838,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1829, 1823, 0, 0, 1834, 0, 0,
	0, 1795, 0, 0, 0, 0, 0, 0, 0, 0,
	1842, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1848, 1847, 0,
	0, 0, 0, 0, 0, 0, 1794, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1814, 0, 0, 0,
	0, 0, 0, 0, 0, 1811, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1832, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1806, 1807, 1813, 1835, 1812, 1808, 0, 1805, 1803, 1804,
	1796, 1797, 1798, 1799, 1801, 1802, 0, 0, 0, 0,
	4106, 1817, 1818, 1819, 1820, 0, 0, 0, 0, 0,
	0, 1800, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1792, 1793, 0, 1825, 1826, 1827, 1836,
	1837, 1838, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1829, 1823, 0, 0, 1833,
	0, 0, 1843, 1795, 0, 0, 0, 0, 0, 1822,
	1824, 0, 1842, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1839, 0, 1840, 1848,
	0, 0, 0, 0, 0, 1809, 1810, 0, 1794, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1814, 0,
	0, 0, 0, 1831, 0, 0, 0, 1811, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1815, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1792, 1793, 0, 1825, 1826, 1827, 1836, 1837, 1838,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1829, 1823, 0, 0, 0, 0, 0,
	0, 1795, 0, 1841, 0, 0, 0, 0, 0, 0,
	1842, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1830, 0, 1817, 1818, 1819, 1820, 1848, 0, 0,
	0, 0, 1845, 1800, 0, 0, 1794, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1814, 0, 0, 0,
	0, 0, 0, 0, 0, 1811, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1833, 0, 0, 1843, 0, 0, 0, 0, 0,
	0, 1822, 1824, 0, 0, 0, 0, 1821, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1839, 0,
	1840, 0, 0, 0, 0, 0, 0, 1809, 1810, 0,
	1816, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1831, 0, 0, 0, 0,
	0, 1817, 1818, 1819, 1820, 0, 0, 1834, 0, 0,
	1815, 1800, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1792, 1793, 0, 1825, 1826, 1827, 1836,
	1837, 1838, 0, 0, 0, 0, 0, 0, 1847, 0,
	0, 0, 0, 0, 0, 1829, 1823, 0, 0, 1833,
	0, 0, 1843, 1795, 0, 1841, 0, 0, 0, 1822,
	1824, 0, 1842, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1830, 0, 0, 1839, 0, 1840, 1848,
	0, 0, 0, 0, 1845, 1809, 1810, 0, 1794, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1814, 0,
	0, 0, 0, 1831, 0, 0, 0, 1811, 0, 0,
	1832, 0, 0, 0, 0, 0, 0, 0, 1815, 0,
	1806, 1807, 1813, 1835, 1812, 1808, 0, 1805, 1803, 1804,
	1796, 1797, 1798, 1799, 1801, 1802, 0, 0, 0, 1821,
	4105, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1816, 1841, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1830, 0, 1817, 1818, 1819, 1820, 0, 0, 1834,
	0, 0, 1845, 1800, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1847, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1833, 0, 0, 1843, 0, 0, 0, 0, 0,
	0, 1822, 1824, 0, 0, 0, 0, 1821, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1839, 0,
	1840, 0, 0, 0, 0, 0, 0, 1809, 1810, 0,
	1816, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1831, 0, 0, 0, 0,
	0, 0, 1832, 0, 0, 0, 0, 1834, 0, 0,
	1815, 0, 1806, 1807, 1813, 1835, 1812, 1808, 0, 1805,
	1803, 1804, 1796, 1797, 1798, 1799, 1801, 1802, 0, 0,
	0, 0, 4104, 0, 0, 0, 0, 0, 1847, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1841, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1830, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1845, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1832, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1806, 1807, 1813, 1835, 1812, 1808, 0, 1805, 1803, 1804,
	1796, 1797, 1798, 1799, 1801, 1802, 0, 0, 0, 1821,
	3761, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1816, 1792, 1793, 0, 1825, 1826, 1827, 1836,
	1837, 1838, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1829, 1823, 0, 0, 1834,
	0, 0, 0, 1795, 0, 0, 0, 0, 0, 0,
	0, 0, 1842, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1848,
	1847, 0, 0, 0, 0, 0, 0, 0, 1794, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1814, 0,
	0, 0, 0, 0, 0, 0, 0, 1811, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1832, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1806, 1807, 1813, 1835, 1812, 1808, 0, 1805,
	1803, 1804, 1796, 1797, 1798, 1799, 1801, 1802, 0, 0,
	0, 0, 3263, 1817, 1818, 1819, 1820, 0, 0, 0,
	0, 0, 0, 1800, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1792, 1793, 0, 1825, 1826,
	1827, 1836, 1837, 1838, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1829, 1823, 0,
	0, 1833, 0, 0, 1843, 1795, 0, 0, 0, 0,
	0, 1822, 1824, 0, 1842, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1839, 0,
	1840, 1848, 0, 0, 0, 0, 0, 1809, 1810, 0,
	1794, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1814, 0, 0, 0, 0, 1831, 0, 0, 0, 1811,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1815, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1792, 1793, 0, 1825, 1826, 1827, 1836,
	1837, 1838, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1829, 1823, 0, 0, 0,
	0, 0, 0, 1795, 0, 1841, 0, 0, 0, 0,
	0, 0, 1842, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1830, 0, 1817, 1818, 1819, 1820, 1848,
	0, 0, 0, 0, 1845, 1800, 0, 0, 1794, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1814, 0,
	0, 0, 0, 0, 0, 0, 0, 1811, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1833, 0, 0, 1843, 0, 0, 0,
	0, 0, 0, 1822, 1824, 0, 0, 0, 0, 1821,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1839, 0, 1840, 0, 0, 0, 0, 0, 0, 1809,
	1810, 0, 1816, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1831, 0, 0,
	0, 0, 0, 1817, 1818, 1819, 1820, 0, 0, 1834,
	0, 0, 1815, 1800, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1792, 1793, 0, 1825, 1826,
	1827, 1836, 1837, 1838, 0, 0, 0, 0, 0, 0,
	1847, 0, 0, 0, 0, 0, 0, 1829, 1823, 0,
	0, 1833, 0, 0, 1843, 1795, 0, 1841, 0, 0,
	0, 1822, 1824, 0, 1842, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1830, 0, 0, 1839, 0,
	1840, 1848, 0, 0, 0, 0, 1845, 1809, 1810, 0,
	1794, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1814, 0, 0, 0, 0, 1831, 0, 0, 0, 1811,
	0, 0, 1832, 0, 0, 0, 0, 0, 0, 0,
	1815, 0, 1806, 1807, 1813, 1835, 1812, 1808, 0, 1805,
	1803, 1804, 1796, 1797, 1798, 1799, 1801, 1802, 0, 0,
	0, 1821, 3262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1816, 1841, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1830, 0, 1817, 1818, 1819, 1820, 0,
	0, 1834, 0, 0, 1845, 1800, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1847, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1833, 0, 0, 1843, 0, 0, 0,
	0, 0, 0, 1822, 1824, 0, 0, 0, 0, 1821,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1839, 0, 1840, 0, 0, 0, 0, 0, 0, 1809,
	1810, 0, 1816, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1831, 0, 0,
	0, 0, 0, 0, 1832, 0, 0, 0, 0, 1834,
	0, 0, 1815, 0, 1806, 1807, 1813, 1835, 1812, 1808,
	0, 1805, 1803, 1804, 1796, 1797, 1798, 1799, 1801, 1802,
	0, 0, 0, 0, 3261, 0, 0, 0, 0, 0,
	1847, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1841, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1830, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1845, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1832, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1806, 1807, 1813, 1835, 1812, 1808, 0, 1805,
	1803, 1804, 1796, 1797, 1798, 1799, 1801, 1802, 0, 0,
	0, 1821, 3260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1816, 1792, 1793, 0, 1825, 1826,
	1827, 1836, 1837, 1838, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1829, 1823, 0,
	0, 1834, 0, 0, 0, 1795, 0, 0, 0, 0,
	0, 0, 0, 0, 1842, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1848, 1847, 0, 0, 0, 0, 0, 0, 0,
	1794, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1814, 0, 0, 0, 0, 0, 0, 0, 0, 1811,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1832, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1806, 1807, 1813, 1835, 1812, 1808,
	0, 1805, 1803, 1804, 1796, 1797, 1798, 1799, 1801, 1802,
	0, 0, 3225, 0, 0, 1817, 1818, 1819, 1820, 0,
	0, 0, 0, 0, 0, 1800, 4812, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1792, 1793, 0,
	1825, 1826, 1827, 1836, 1837, 1838, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1829,
	1823, 0, 0, 1833, 0, 0, 1843, 1795, 0, 0,
	0, 0, 0, 1822, 1824, 0, 1842, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1839, 0, 1840, 1848, 0, 0, 0, 0, 0, 1809,
	1810, 0, 1794, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1814, 0, 0, 0, 0, 1831, 0, 0,
	0, 1811, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1815, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1792, 1793, 0, 1825, 1826,
	1827, 1836, 1837, 1838, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1829, 1823, 0,
	0, 0, 0, 3196, 0, 1795, 0, 1841, 0, 0,
	0, 0, 0, 0, 1842, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1830, 0, 1817, 1818, 1819,
	1820, 1848, 0, 0, 0, 0, 1845, 1800, 0, 3325,
	1794, 0, 0, 3324, 0, 0, 0, 0, 0, 0,
	1814, 0, 0, 0, 0, 0, 0, 0, 4811, 1811,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1833, 0, 0, 1843, 0,
	0, 0, 0, 0, 0, 1822, 1824, 0, 0, 0,
	0, 1821, 0, 0, 0, 0, 0, 0, 0, 3197,
	0, 0, 1839, 0, 1840, 0, 0, 0, 0, 0,
	0, 1809, 1810, 0, 1816, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1831,
	0, 0, 0, 0, 0, 1817, 1818, 1819, 1820, 0,
	0, 1834, 0, 0, 1815, 1800, 0, 0, 0, 0,
	2733, 0, 0, 0, 0, 0, 0, 1792, 1793, 0,
	1825, 1826, 1827, 1836, 1837, 1838, 0, 0, 0, 0,
	0, 0, 1847, 0, 0, 0, 0, 0, 0, 1829,
	1823, 0, 0, 1833, 2732, 0, 1843, 1795, 0, 1841,
	0, 0, 0, 1822, 1824, 0, 1842, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1830, 0, 0,
	1839, 0, 1840, 1848, 0, 0, 0, 0, 1845, 1809,
	1810, 0, 1794, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1814, 0, 0, 0, 0, 1831, 0, 0,
	0, 1811, 0, 0, 1832, 0, 0, 0, 0, 0,
	0, 0, 1815, 0, 1806, 1807, 1813, 1835, 1812, 1808,
	0, 1805, 1803, 1804, 1796, 1797, 1798, 1799, 1801, 1802,
	0, 0, 0, 1821, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1816, 1841, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1830, 0, 1817, 1818, 1819,
	1820, 0, 0, 1834, 0, 0, 1845, 1800, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1847, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1833, 0, 0, 1843, 0,
	0, 0, 0, 0, 0, 1822, 1824, 0, 0, 0,
	0, 1821, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1839, 0, 1840, 0, 0, 0, 0, 0,
	0, 1809, 1810, 0, 1816, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1831,
	0, 0, 0, 0, 0, 0, 1832, 0, 0, 0,
	0, 1834, 0, 0, 1815, 0, 1806, 1807, 1813, 1835,
	1812, 1808, 0, 1805, 1803, 1804, 1796, 1797, 1798, 1799,
	1801, 1802, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1847, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1841,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1830, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1845, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1832, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1806, 1807, 1813, 1835, 1812, 1808,
	0, 1805, 1803, 1804, 1796, 1797, 1798, 1799, 1801, 1802,
	0, 0, 0, 1821, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1792, 1793, 1816, 1825, 1826, 1827,
	1836, 1837, 1838, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1829, 1823, 0, 0,
	0, 0, 0, 1834, 1795, 0, 0, 0, 0, 0,
	0, 0, 0, 1842, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1848, 0, 0, 0, 1847, 0, 0, 0, 0, 1794,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1814,
	0, 0, 0, 0, 0, 0, 0, 0, 1811, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1832, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1806, 1807, 1813, 1835,
	1812, 1808, 0, 1805, 1803, 1804, 1796, 1797, 1798, 1799,
	1801, 1802, 0, 0, 1817, 1818, 1819, 1820, 0, 0,
	0, 0, 0, 0, 1800, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1792, 1793, 0, 1825,
	1826, 1827, 1836, 1837, 1838, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1829, 1823,
	0, 0, 1833, 0, 0, 1843, 1795, 0, 0, 0,
	0, 0, 1822, 1824, 0, 1842, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1839,
	0, 1840, 1848, 0, 0, 0, 0, 0, 1809, 1810,
	0, 1794, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1814, 0, 0, 0, 0, 1831, 0, 0, 0,
	1811, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1815, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1792, 1793, 0, 1825, 1826, 1827,
	1836, 1837, 1838, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1829, 1823, 0, 0,
	0, 0, 0, 0, 1795, 0, 1841, 0, 0, 0,
	0, 0, 0, 1842, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1830, 1072, 1817, 1818, 1819, 1820,
	1848, 0, 0, 0, 0, 1845, 1800, 0, 0, 1794,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1814,
	0, 0, 0, 0, 0, 0, 0, 0, 1811, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1833, 0, 0, 1843, 0, 0,
	0, 0, 0, 0, 1822, 1824, 0, 0, 0, 0,
	1821, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1839, 0, 1840, 0, 0, 0, 0, 0, 0,
	1809, 1810, 0, 1816, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1831, 0,
	0, 0, 0, 0, 1817, 1818, 1819, 1820, 0, 0,
	1834, 0, 0, 1815, 1800, 0, 0, 0, 0, 0,
	3331, 0, 0, 0, 0, 0, 1792, 1793, 0, 1825,
	1826, 1827, 1836, 1837, 1838, 0, 0, 0, 0, 0,
	0, 1847, 0, 0, 0, 0, 0, 0, 1829, 1823,
	0, 0, 1833, 3326, 0, 1843, 1795, 0, 1841, 0,
	0, 0, 1822, 1824, 0, 1842, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1830, 0, 0, 1839,
	0, 1840, 1848, 0, 0, 0, 0, 1845, 1809, 1810,
	0, 1794, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1814, 0, 0, 0, 0, 1831, 0, 0, 0,
	1811, 0, 0, 1832, 0, 0, 0, 0, 0, 0,
	0, 1815, 0, 1806, 1807, 1813, 1835, 1812, 1808, 0,
	1805, 1803, 1804, 1796, 1797, 1798, 1799, 1801, 1802, 0,
	0, 0, 1821, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1816, 1841, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1830, 0, 1817, 1818, 1819, 1820,
	0, 0, 1834, 0, 0, 1845, 1800, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1847, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1833, 0, 3742, 1843, 0, 0,
	0, 0, 0, 0, 1822, 1824, 0, 0, 0, 0,
	1821, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1839, 0, 1840, 0, 0, 0, 0, 0, 0,
	1809, 1810, 0, 1816, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1831, 0,
	0, 0, 0, 0, 0, 1832, 0, 0, 0, 0,
	1834, 0, 0, 1815, 0, 1806, 1807, 1813, 1835, 1812,
	1808, 0, 1805, 1803, 1804, 1796, 1797, 1798, 1799, 1801,
	1802, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1847, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1841, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1830, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1845, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1832, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1806, 1807, 1813, 1835, 1812, 1808, 0,
	1805, 1803, 1804, 1796, 1797, 1798, 1799, 1801, 1802, 0,
	0, 0, 1821, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1792, 1793, 1816, 1825, 1826, 1827, 1836,
	1837, 1838, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1829, 1823, 0, 0, 0,
	0, 0, 1834, 1795, 0, 0, 0, 0, 0, 0,
	0, 0, 1842, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1848,
	0, 0, 0, 1847, 0, 0, 0, 0, 1794, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1814, 0,
	0, 0, 0, 0, 0, 0, 0, 1811, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1832, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1806, 1807, 1813, 1835, 1812,
	1808, 0, 1805, 1803, 1804, 1796, 1797, 1798, 1799, 1801,
	1802, 0, 0, 1817, 1818, 1819, 1820, 0, 0, 0,
	0, 0, 0, 1800, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1792, 1793, 0, 1825, 1826,
	1827, 1836, 1837, 1838, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1829, 1823, 0,
	0, 1833, 3264, 0, 1843, 1795, 0, 0, 0, 0,
	0, 1822, 1824, 0, 1842, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1839, 0,
	1840, 1848, 0, 0, 0, 0, 0, 1809, 1810, 0,
	1794, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1814, 0, 0, 0, 0, 1831, 0, 0, 0, 1811,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1815, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1792, 1793, 0, 1825, 1826, 1827, 1836,
	1837, 1838, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1829, 1823, 0, 0, 0,
	0, 0, 0, 1795, 0, 1841, 0, 0, 0, 0,
	0, 0, 1842, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1830, 0, 1817, 1818, 1819, 1820, 1848,
	0, 0, 0, 0, 1845, 1800, 0, 0, 1794, 0,
	0, 0, 0, 0, 3291, 0, 0, 0, 1814, 0,
	0, 0, 0, 0, 0, 0, 0, 1811, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1833, 0, 0, 1843, 0, 0, 0,
	0, 0, 0, 1822, 1824, 0, 0, 0, 0, 1821,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1839, 0, 1840, 0, 0, 0, 0, 0, 0, 1809,
	1810, 0, 1816, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1831, 0, 0,
	0, 0, 0, 1817, 1818, 1819, 1820, 0, 0, 1834,
	0, 0, 1815, 1800, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1792, 1793, 0, 1825, 1826,
	1827, 1836, 1837, 1838, 0, 0, 0, 0, 0, 0,
	1847, 0, 0, 0, 0, 0, 0, 1829, 1823, 0,
	0, 1833, 0, 0, 1843, 1795, 0, 1841, 0, 0,
	0, 1822, 1824, 0, 1842, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1830, 0, 0, 1839, 0,
	1840, 1848, 0, 0, 0, 0, 1845, 1809, 1810, 0,
	1794, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1814, 0, 0, 0, 0, 1831, 0, 0, 0, 1811,
	0, 0, 1832, 0, 0, 0, 0, 0, 0, 0,
	1815, 0, 1806, 1807, 1813, 1835, 1812, 1808, 0, 1805,
	1803, 1804, 1796, 1797, 1798, 1799, 1801, 1802, 0, 0,
	0, 1821, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1816, 1841, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1830, 0, 1817, 1818, 1819, 1820, 0,
	0, 1834, 0, 0, 1845, 1800, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1847, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1833, 0, 0, 1843, 0, 0, 0,
	0, 0, 0, 1822, 1824, 0, 0, 0, 0, 1821,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1839, 0, 1840, 0, 0, 0, 0, 0, 0, 1809,
	1810, 0, 1816, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1831, 0, 0,
	0, 0, 0, 0, 1832, 0, 0, 0, 0, 1834,
	0, 0, 1815, 0, 1806, 1807, 1813, 1835, 1812, 1808,
	0, 1805, 1803, 1804, 1796, 1797, 1798, 1799, 1801, 1802,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1847, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1841, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1830, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1845, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2312, 0, 0, 0, 0,
	0, 0, 1832, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1806, 1807, 1813, 1835, 1812, 1808, 0, 1805,
	1803, 1804, 1796, 1797, 1798, 1799, 1801, 1802, 0, 0,
	0, 1821, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1816, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1834, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1847, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1832, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1806, 1807, 1813, 1835, 1812, 1808,
	0, 1805, 1803, 1804, 1796, 1797, 1798, 1799, 1801, 1802,
}

var sqlPact = [...]int{
	8340, -1000, -1000, -1000, -1000, 167, -1000, -1000, 166, 162,
	161, 160, 159, 158, 157, 156, 155, 154, 153, -1000,
	-1000, -1000, -1000, -1000, -1000, 152, -1000, -1000, 149, -1000,
	145, 144, 139, -1000, -1000, 138, -1000, 137, -1000, -1000,
	-1000, -1000, 136, 135, 134, 93771, 93215, 94320, 2396, 117004,
	100936, 2170, 83249, 116448, 82693, 115892, 2268, 12385, 115336, 2827,
	132, -1000, 114780, 131, 130, 129, -1000, 114224, -1000, 1998,
	-1000, 128, -1000, 7270, 69841, 126, 125, 123, 2297, 122,
	-1000, 121, 120, -1000, -1000, 119, -1000, 10838, 1814, -1000,
	118, 117, -1000, 460, 98719, 116, 114, 2511, 113, 110,
	68185, 104, 101, 2401, 2906, -1000, -1000, 2135, -1000, -1000,
	98, 96, 94, 93, 92, 91, 89, 88, 87, 84,
	78, 77, 75, -1000, 74, 73, 72, 71, 69, -1000,
	56, 52, 51, -1000, 50, -1000, 47, 46, 44, 43,
	42, 40, 38, 37, 35, 34, 33, 32, 29, 28,
	18377, -1000, -1000, 26, 2037, 1734, 1730, 1721, 1714, 1702,
	1012, 25, 24, 22, 16, 12, 11, 9, 8, 7,
	6, 5, 0, -8, -9, -10, -11, -18, -21, 115,
	-22, -23, -25, -26, -29, -30, -31, 2118, -1000, 1703,
	1040, 32328, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	124690, 117553, -32, -94, -35, -1000, 3348, 953, 56417, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 222, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 434, 2436,
	761, -1000, -1000, -1000, 113675, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2390, -48, -1000, 2129, -1000, -1000, -1000,
	-1000, -1000, 760, -1000, 2389, 258, 2334, -1000, -1000, -1000,
	3418, 2531, 3831, 3829, 3828, 3827, 3825, 124141, 1919, 3824,
	2585, 3823, 3822, 3821, 3820, 3817, 3816, 3815, -1000, 92659,
	1062, 92103, 91547, 3412, 113126, 90991, 112570, 76588, 48432, 1005,
	3414, -1000, -1000, -1000, -1000, -1000, -1000, 117553, -1000, 1059,
	-1000, -1000, 3814, 2114, 757, 100380, -1000, -1000, 112014, 1717,
	-1000, -1000, -1000, 963, 1333, 34041, 34041, 34041, 221, -1000,
	-1000, -1000, -1000, -1000, -1000, 3813, 3811, 3810, 3809, 3808,
	-1000, -1000, 82137, 25288, 81581, 81025, 111458, 24720, 90435, 89879,
	3807, 3805, 3804, 110902, 76020, 3544, 3543, 1057, 2117, 1512,
	-1000, -1000, -1000, -1000, -1000, -1000, -57, 72059, 3584, 117553,
	-1000, 219, -1000, -1000, -1000, -1000, -1000, -1000, 47861, 873,
	47290, 972, 46719, 790, -1000, -1000, -1000, -1000, 75452, -1000,
	110346, 2526, 3803, 3802, 1172, 3800, 3288, 1917, 3798, 1951,
	1258, 3794, 3793, 3790, 3788, 3787, 3786, 3777, 1557, 109790,
	2994, 1603, 109234, 1757, 74884, 1056, 89323, 94320, 2683, 108678,
	1505, 1474, -1000, -1000, -1000, -1000, 3104, 2903, 2885, 1380,
	-1000, -1000, -1000, -1000, 59796, 6766, 6399, -1000, -1000, 12845,
	108122, 62626, 94320, 94320, -1000, -1000, -1000, -1000, -1000, 46148,
	771, 45577, 1001, -1000, -1000, 60362, 2955, -1000, -1000, -1000,
	-1000, 45006, 751, 44435, 877, 117553, -1000, 2993, 1973, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2459, 1763, 3601,
	2786, 74316, 2132, 1454, 3354, 3103, 3100, 1556, 2113, 3099,
	3776, 2692, 3096, 3091, 3090, 3086, 3077, 1710, 2629, 417,
	2632, 31757, 2984, 1839, 43864, 1585, 1551, 3076, 3075, 3611,
	2098, 2092, 2266, 80469, 3775, 3774, 3321, 3067, 3064, 2846,
	3059, -1000, 2953, 1555, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1499, -1000, -1000, -1000, -1000, -1000, 84896, -1000, -1000,
	1453, -1000, -1000, 1453, -1000, -1000, -1000, -1000, -1000, 1431,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1703, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2287, -1000, 2111, -1000, -1000, 2635, 3229,
	3229, 3229, 3413, 412, 401, -1000, 115, -1000, -1000, 131494,
	-1000, -1000, 49003, 49003, 49003, 49003, 49003, 49003, 49003, 49003,
	2276, -1000, 756, -1000, -1000, 798, -1000, 755, 659, 607,
	-1000, -1000, -1000, -1000, -1000, -1000, 752, -1000, -1000, -1000,
	-1000, -1000, -1000, 3584, -1000, 28198, -1000, -1000, -1000, 264,
	750, 49003, -1000, -1000, 3632, 3631, 831, -1000, 217, 990,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2992, 745, 740, -1000, 738, 737, 734, 733,
	729, -1000, 728, -1000, 719, 713, 712, 707, 706, 705,
	703, 700, -1000, 2141, -1000, -1000, -1000, -1000, -1000, -1000,
	649, 648, 648, 648, -1000, 1046, -1000, -1000, -1000, 265,
	647, 249, 646, 645, 642, -1000, 697, 696, 695, 694,
	679, 672, 670, 669, 667, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1044, -1000, -1000, -1000, -1000, -58, 117553, -1000,
	434, -58, -1000, -1000, 665, -1000, 36354, 36354, 36354, -1000,
	-1000, 2388, 49003, -1000, 2515, -1000, -51, -51, 924, 58094,
	-1000, 55279, 924, 872, 807, 63738, -1000, 2952, -1000, -1000,
	663, 214, -1000, -1000, -1000, -1000, 25854, 2951, 117553, 117553,
	117553, 94320, 94320, 94320, 3770, 3092, 49003, -1000, -1000, 69283,
	117553, 94869, -1000, -1000, 3528, 70395, 68734, 117553, 2990, 107566,
	3769, -1000, -1000, -1000, -1000, -1000, 3191, 3767, 3766, 3764,
	-1000, 117553, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 236,
	3188, -1000, -1000, 98163, 236, 3187, -1000, 236, 3186, -1000,
	97614, -1000, -1000, 2351, 3184, -1000, -1000, 243, 3180, -1000,
	-1000, -1000, 242, 3177, -1000, -1000, 208, -92, 3176, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 131494, -1000, -1000, -1000, 107010, -1000, 3329, -1000, 117553,
	-1000, 49003, -1000, -1000, 3527, 1626, 77710, 3473, -1000, -1000,
	-67, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2568, 2569,
	1187, 2418, -1000, 3228, 1500, 34041, 3273, -1000, -1000, -1000,
	-1000, -1000, 203, 25854, -1000, -1000, -1000, -1000, -1000, -1000,
	3438, 3175, 1404, -1000, 2417, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2282, 3168, -1000, 2013, 3166, 2277, -1000,
	-1000, 1649, -1000, 3307, -1000, -1000, 1974, 3162, -49, -1000,
	-1000, 2649, -1000, -1000, -1000, -1000, 2063, -1000, 1324, 3139,
	-1000, 2782, 2782, 88767, 3153, 62060, 60362, 72059, -62, -1000,
	-1000, -1000, -1000, -146, -1000, 24148, 131494, -1000, -1000, -1000,
	-1000, 1854, 131494, 860, -1000, -1000, 3131, -1000, 131494, 852,
	-1000, -1000, 3130, -1000, 2987, -1000, -1000, 2485, 2483, -1000,
	-1000, 3763, -1000, -1000, 3762, -1000, 3761, 3759, 3756, -1000,
	1838, 2107, 3742, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 88218, 2381, -1000, -1000, 87106, 2986, -1000, 2482, 3463,
	-1000, 87662, 1048, -1000, 1011, 2478, -1000, 97065, 966, 2477,
	-1000, 3740, 3410, 2747, 1011, 2476, -1000, -1000, -1000, -1000,
	-1000, 1022, -1000, 65963, -1000, 65963, -1000, 1694, -1000, 123592,
	-51, 94320, 3584, -1000, -93, -1000, -1000, -1000, 953, -1000,
	59225, -1000, 59225, 99824, 77154, 998, 704, 67629, 131312, -1000,
	1030, -1000, -1000, 131494, -1000, -1000, -1000, -174, 2781, -1000,
	77154, 61494, 131494, -1000, -1000, -1000, -1000, 131494, -1000, -1000,
	-1000, 77154, 87106, -1000, 106454, 86557, -1000, -1000, 1553, 2618,
	-1000, -1000, -1000, 77154, 1335, 77154, 77154, 77154, -1000, 105898,
	-1000, -1000, 2139, 1601, 3322, 2124, 94320, -1000, 1958, -1000,
	-1000, -1000, 3343, 3145, 117553, -1000, -1000, 2985, -1000, 71510,
	96516, -1000, 95967, -1000, 95418, -1000, 94320, -1000, 94320, -1000,
	3739, 3737, 3736, -1000, -1000, 3735, -1000, 3733, 3335, -1000,
	808, 43293, 131494, 3333, -1000, 3732, 2057, 2984, 131494, -1000,
	3141, 1701, 1699, 117553, -1000, -1000, 117553, -1000, 117553, -1000,
	-1000, -1000, 1620, -1000, -1000, 2564, -1000, -1000, -1000, -1000,
	94320, 94320, 94320, 94320, 1545, -1000, 42722, -1000, -1000, 3053,
	3729, 1775, -1000, 1840, -1000, 2950, 3350, -1000, 1549, 1852,
	-1000, -1000, 245, -1000, -1000, -67, -1000, 123043, -1000, 2635,
	-1000, 117553, -1000, 2593, 2977, 2983, 1473, 2403, 2667, -1000,
	42151, 2647, 52429, 2411, 115, -1000, -1000, 115, 115, 33470,
	-1000, -1000, 70395, 70395, 25854, 1440, 49003, 49003, 49003, 49003,
	49003, 49003, 49003, 49003, 49003, 49003, 49003, 49003, 49003, 49003,
	49003, 49003, 49003, 49003, 49003, 49003, 49003, 49003, 49003, 49003,
	49003, 49003, 49003, 49003, 49003, 49003, 49003, 49003, 49003, 49003,
	49003, 49003, 2203, 49003, 1426, 49003, 49003, 49003, 49003, 2081,
	-1000, -1000, 2044, 498, 2237, 659, -1000, -1000, -1000, 3579,
	3579, 3579, 1379, 1379, 1379, 12841, 12841, 570, 3728, 798,
	-1000, 49003, -1000, 100, 58650, 49003, 26422, -1000, 401, 9189,
	2592, -1000, 400, 27022, -1000, -1000, -1000, 28198, 607, 41551,
	49003, 1015, 131494, -1000, -1000, 1472, 3593, 23576, 3002, 2845,
	657, 814, 811, 31157, 30557, 29957, 29357, 810, 805, 49003,
	49003, 49003, 49003, 49003, 49003, 49003, 49003, -1000, -1000, 3604,
	-1000, 3593, -1000, -1000, -1000, -1000, 3593, 1439, 1436, 3593,
	-1000, 3593, 3593, 7812, 7812, 40980, 40409, 39838, 53000, 39267,
	49003, 28786, 38696, 38125, -1000, 117553, -58, 3525, 49003, 250,
	-1000, 129696, -1000, 250, 250, 656, -99, 131494, 2641, 2641,
	56976, 2428, 2290, 2290, 2290, -1000, 924, 18971, 924, 104244,
	2301, 924, 924, 202, 225, 399, 54713, 2515, 104244, 779,
	655, -38, -39, -41, -1000, -1000, -43, -44, -1000, -1000,
	94320, 654, 26422, 25854, 195, 2096, -104, 2658, 2656, -1000,
	2651, 2642, -1000, 2639, -1000, 1883, -118, 1420, 94320, 117553,
	1483, 3727, -121, -1000, 6079, -123, -1000, 1255, 190, 3593,
	-1000, -1000, -1000, -1000, -1000, 3726, 3724, -1000, 1042, 652,
	650, 416, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	649, 648, 648, 648, -1000, 265, 647, 249, 646, 645,
	642, -1000, -1000, -1000, -1000, -1000, 2947, 94320, 117553, 1457,
	3720, -146, 94869, -101, -1000, -1000, 117553, -1000, -1000, -1000,
	3716, -1000, 94320, -1000, -1000, 94320, 236, 3128, -1000, 94320,
	-1000, 94320, 234, 3127, -1000, -1000, 117553, -1000, 94320, 94320,
	-1000, 117553, 117553, 117553, 77154, 77154, 231, -1000, 94320, 892,
	-124, 1176, -67, -1000, -1000, -1000, -1000, -1000, 1453, -1000,
	1895, -1000, -1000, -1000, -1000, -1000, -1000, 1564, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 831, -1000, -1000, -1000,
	-1000, -1000, -1000, 3591, 3586, -60, -1000, -1000, 25854, -1000,
	-69, 1683, 1975, 1418, -1000, 79913, 2424, 3315, 3714, 2726,
	3298, 1693, -1000, 1617, -1000, 3417, 84896, 3490, 3498, 1386,
	-1000, 2946, -1000, -1000, 962, 1774, 1844, 1402, 1399, 84896,
	2013, -1000, 70395, -1000, 2705, 3408, 1408, 1400, 1408, 1408,
	1398, -1000, 84896, 1836, 1397, 1369, 1368, -1000, -1000, 2040,
	2032, -1000, -1000, 105349, -1000, 1355, 1352, 3542, 2287, 2255,
	839, 2031, -1000, -71, 3487, 3497, 1330, -1000, 2943, 1341,
	-1000, -1000, -1000, 3393, 94320, 25854, 1619, 1616, 1578, 1819,
	1327, -61, -1000, 3481, 1279, 1274, -1000, 1077, 7890, 3249,
	-1000, 77154, 1077, 1077, 2261, 3126, 2770, 1659, -1000, 2780,
	916, 2778, -1000, -1000, -1000, 916, -62, 72059, 117553, 186,
	-1000, 100, 49003, 49003, 100, 49003, 100, 3442, 3122, 3121,
	-1000, -1000, -1000, -1000, -1000, 3710, 2050, 2584, -1000, -1000,
	639, 2472, 2942, 117553, 2675, -63, 94320, -1000, 70961, 3120,
	72616, 2013, 2470, -1000, -1000, 86001, -1000, 3115, 434, 2468,
	-1000, 640, 3709, 3107, -1000, 122494, -1000, 3329, 1451, 3106,
	1126, 423, 3521, -1000, 423, 66517, -1000, 117553, -1000, -51,
	5218, 78815, -126, -129, 398, -1000, 104800, 117553, 1120, 79364,
	117553, 3262, 2072, 2067, 1007, 60362, -1000, 60362, -134, -174,
	2774, 1561, 998, 998, 916, -1000, 916, -1000, 94320, 2982,
	-1000, -1000, 77154, 998, 998, 998, -1000, -1000, -1000, -1000,
	3706, 3705, 3702, 3701, -1000, -1000, 1009, 94320, 117553, 94320,
	-1000, -1000, 1647, -1000, 185, -1000, 117553, -1000, 117553, 117553,
	94320, -1000, 1009, 117553, 1009, 117553, 1009, 117553, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 100, -1000, -1000, 131494, -1000,
	49003, -1000, -1000, 1588, 3696, 1723, -1000, 2981, -1000, 2980,
	-1000, -3, -1000, -1000, 1940, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 3694, 131494, -1000, 2168, -1000, -1000, -1000, -1000,
	94320, 94320, 94320, 94320, 117553, 3245, -1000, 117553, 3242, 94320,
	-1000, -1000, 84896, -1000, 2593, 2977, -1000, -1000, -1000, -1000,
	-1000, -1000, 1443, 2340, -1000, 2615, -1000, 1643, -1000, -1000,
	-1000, 131494, 53571, -1000, -1000, 131494, 1897, -1000, 51858, 51287,
	-1000, -1000, 1809, 94320, 2682, -1000, 2682, -125, -1000, 129514,
	2608, 94320, -1000, -1000, -1000, -1000, -1000, 955, 584, 584,
	1248, 1248, 1248, 1248, 3448, 5251, 1116, 6077, 15998, 15998,
	5422, 5422, 5422, 5422, 5422, 15998, 621, 1379, 1379, 621,
	621, 621, 621, 621, 1379, 1379, 1379, 15998, 15998, 15998,
	1379, 12841, 11682, 11839, 49003, 49003, 1271, 2039, 498, 11221,
	49003, 8988, 8988, 8988, 8988, -1000, 1905, -1000, -1000, -1000,
	-1000, 2939, 638, 53000, 53000, -1000, -1000, -1000, -1000, 27610,
	49003, -1000, -1000, -1000, -1000, 37525, -1000, -1000, 128794, -319,
	397, -1000, 184, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 396, -120, 83, -1000,
	49003, 49003, 49003, 392, -1000, 183, 49003, 117553, -1000, 17848,
	777, -131, -1000, -136, 1465, -1000, 49003, -1000, -1000, 1270,
	-1000, 1268, 1265, 1262, -1000, 636, 390, -1000, 182, -1000,
	2288, 635, 633, 49003, -1000, -1000, -1000, -1000, -1000, 128612,
	-1000, -1000, 128504, -1000, -1000, 128322, -1000, -1000, 127892, -1000,
	-1000, -1000, -1000, -1000, 131204, 17102, 16655, 16262, 6149, 15233,
	11035, -139, 379, -141, 376, 950, 949, 375, 369, 368,
	-144, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -147, 364, -1000, 2934, -120, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 358, -1000, 357, -1000,
	131022, -120, 356, 6668, -1000, 53000, 53000, 53000, 53000, -1000,
	352, -1000, 129406, -1000, 130595, 36954, 36954, 36954, 338, 130413,
	49003, -120, -149, -1000, -150, -1000, -1000, 521, -152, 1033,
	36354, 55858, 25854, -1000, 1033, 1033, 49003, -1000, 49003, 2623,
	-1000, -1000, -1000, -1000, 2622, 1888, 2641, 56976, -1000, -1000,
	-1000, -1000, 104244, -1000, 3584, 2864, -1000, 104244, -1000, -1000,
	117553, 434, -1000, 104244, 104244, 25854, 924, -1000, 924, 104244,
	567, -1000, -1000, -1000, -1000, -1000, 337, 64297, 83, 180,
	25854, 1011, -1000, -1000, 2759, 2759, 2759, 2759, 2759, -1000,
	-1000, 117553, 1261, -64, -155, 2773, -1000, 3511, -1000, 2181,
	-1000, 70395, -1000, 797, 1074, 25854, -1000, -1000, -1000, 631,
	-1000, 3593, 3593, -1000, 3593, 117553, 2931, 239, 2772, -1000,
	178, 72616, 3693, -1000, -1000, 236, -1000, 94320, 236, 236,
	-1000, 94320, 94320, 2351, -1000, 243, -1000, 242, -1000, -1000,
	-92, -1000, 1029, 34041, -1000, 1453, -1000, -1000, 1610, -1000,
	2077, -1000, 1259, -1000, -1000, -1000, -1000, 34041, -1000, 2180,
	117553, 117553, 94320, -1000, 117553, -1000, 2226, 72616, -1000, 2465,
	121945, 2452, 70395, 117553, -1000, -1000, 627, 975, 2607, 2606,
	1117, 117553, 117553, 2605, 121396, 120847, -1000, 3692, 117553, 2144,
	49003, 3386, 2241, 2328, 100, 100, -1000, 100, 100, 100,
	-1000, 626, 1405, 94320, 94320, 117553, 72616, 94320, 2171, -1000,
	-1000, -1000, -1000, -1000, 85445, -1000, -1000, 3600, 3597, -1000,
	1408, -1000, -1000, -1000, 1408, 2013, 2148, 117553, 72616, 94320,
	72616, 120298, 119749, -1000, -1000, 1818, 117553, -1000, -1000, -1000,
	-1000, 1484, -1000, 839, 2198, 100, 100, -1000, 100, 100,
	100, 624, 25854, 2029, -1000, 3007, 117553, 3630, 119200, 3628,
	117553, 117553, 117553, 72616, 3337, 117553, 117553, 72616, -1000, 118651,
	7890, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 73748, 1129, 117553, 1324, -1000, -1000, 1811, 1260,
	1256, 84896, 2175, 1776, 1922, 117553, 60362, 1006, 60362, 2753,
	-1000, -1000, 23004, -1000, 131494, 131494, -1000, 131494, -1000, 70961,
	77154, 117553, -1000, 1031, 117553, 79364, 984, 3105, 65409, -146,
	998, 77154, 94320, -63, 2675, 117553, -1000, -1000, -1000, -1000,
	-1000, 2013, 3098, 434, 2462, -1000, 77154, 3520, 3094, 622,
	3688, 3686, -1000, 94320, 2380, 2456, -1000, -1000, 118102, 3108,
	839, 117553, 1033, 56976, 2051, -1000, 63182, 1076, 117553, 1927,
	146, -1000, -1000, -1000, -27, 117553, -1000, 806, -1000, -1000,
	5218, 5218, 998, -175, 620, -1000, 903, 902, 60928, 77154,
	-157, -1000, -1000, -1000, -1000, 2452, 94320, 117553, 1311, 2738,
	117553, -160, -1000, 179, 619, 901, 900, -1000, 3276, -1000,
	-174, -1000, 1007, 60362, 2929, 2922, -1000, -1000, 1028, -1000,
	1548, 998, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -52, 1911, 117553, -146, -146, -86, -64,
	-1000, 1009, -1000, 1009, -1000, 1009, -1000, 131494, -1000, -1000,
	-1000, 1712, 1706, 117553, -1000, -1000, 117553, -1000, 25854, 117553,
	94320, 25854, 94320, 2974, 2973, -1000, -1000, -1000, 117553, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1150, -1000, 1897, 2339,
	-1000, 607, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2548, -1000, -66, 33470, 928, -1000, -1000, 94320, -54,
	49003, 49003, 10240, 7687, 49003, 53000, 53000, -1000, 49003, 7376,
	-1000, -1000, -1000, -1000, -1000, 2920, 606, 49003, 70395, 5459,
	4987, -1000, 336, 10563, 621, -1000, 49003, -1000, 511, -1000,
	332, 35783, -1000, 130123, -47, -166, -1000, 19556, -120, -168,
	-1000, -1000, 791, -1000, 3082, -1000, 49003, 130305, 2513, 2066,
	1918, 1739, 3593, 3623, 22432, -1000, 67073, 1035, 2307, 127710,
	-1000, -1000, -1000, -1000, 70395, 70395, 49003, 49003, -1000, 49003,
	49003, 49003, -1000, -1000, -1000, 3593, 958, -1000, -1000, -1000,
	958, -1000, -1000, 1408, -1000, 1408, -1000, 49003, -1000, -1000,
	2917, 49003, -1000, 70395, 70395, 53000, 53000, 53000, 53000, 53000,
	53000, 53000, 53000, 53000, 53000, 53000, 53000, 53000, 53000, 53000,
	53000, 53000, 53000, 53000, 53000, 2558, 53000, 3564, 3564, 3564,
	1055, -1000, 2968, 2917, 49003, 49003, 70395, 329, 328, 327,
	-1000, 49003, -120, -1000, -1000, 7496, 596, -1000, 2536, -1000,
	2830, -1000, 49003, -1000, -158, -1000, 2515, -1000, -1000, 2830,
	2830, -173, 131494, 56976, 56976, -1000, 594, 49003, 2598, -1000,
	-1000, 770, -317, -1000, 898, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 434, -1000, -1000, -1000, 174, 104244, 104244, 769,
	-1000, -176, -1000, -1000, -182, -1000, 3516, 320, 25854, -1000,
	1033, 2745, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -146,
	117553, 117553, 1769, 2326, 3620, -1000, 3596, 789, 766, 173,
	3593, 319, 315, 311, -146, 117553, 117553, 1766, 117553, -1000,
	-1000, -1000, 236, -1000, -1000, -1000, 234, -1000, -1000, -1000,
	-1000, 2702, -1000, -67, -1000, -1000, -1000, 49003, -1000, -1000,
	3309, 1254, 1253, -1000, -1000, -1000, 2928, -1000, 3085, -1000,
	2451, -1000, 1093, -1000, 1925, -1000, 49003, 592, 2735, 591,
	587, 3681, 2154, 3680, 1118, 3083, 2351, 3074, 2351, -1000,
	-1000, -1000, 970, -1000, 131494, 2241, -1000, 586, 582, -1000,
	-69, 1671, 1952, 1251, 1026, -1000, -1000, -1000, -1000, 49003,
	49003, 103695, -1000, 444, 3307, -55, -1000, -1000, -1000, 1764,
	1245, 1241, -1000, -1000, -1000, -1000, 2013, 1760, 1233, 1229,
	-1000, -1000, -1000, -1000, -1000, 2448, -1000, -1000, 3072, 1024,
	-1000, 3016, 3015, 938, 117553, -1000, 1019, -1000, -1000, -1000,
	-1000, 49003, -1000, -71, 1228, 3446, 2446, 94320, -1000, 2351,
	3062, 1226, -1000, 1223, -1000, -1000, -1000, 3477, 3476, 1231,
	-1000, -1000, -1000, -1000, -1000, 73182, -1000, -1000, 1077, 117553,
	72616, 94320, 2047, -1000, -1000, 83798, 84347, 117553, 2770, -146,
	916, -1000, 2409, 916, 1006, 2907, -1000, 2668, -1000, 1017,
	94320, 3679, 310, -183, -81, 70395, 3515, -1000, 2400, 573,
	94320, 925, -1000, 3584, -1000, -1000, -1000, 1016, -1000, 3452,
	94320, 3514, 3061, 1011, 100, 94320, 3580, -1000, -1000, 3513,
	94320, 3060, 2368, 2444, 2576, 839, 78266, 1011, 2306, -91,
	-1000, 1927, 35183, 3304, -190, -1000, -1000, -1000, 1033, 66517,
	56976, 49003, 3678, -191, -1000, -1000, -1000, -1000, -1000, 101492,
	101492, 77154, 77154, 77154, 998, 117553, 117553, 79364, -1000, -1000,
	581, 117553, 117553, 575, -1000, 117553, 117553, 3677, 77154, 77154,
	77154, -83, 569, -1000, 897, 893, 886, -1000, -1000, -1000,
	-1000, -1000, -1000, 882, 1007, -1000, -174, 60362, 100, -1000,
	2316, 94320, -1000, 21860, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1009, -146, -1000, -1000, 2227, 2410, 2227, 1900, 1899,
	-1000, -1000, 2337, -1000, -1000, -1000, -1000, 2680, 3314, 25854,
	3439, 8988, 49003, 49003, 7057, 693, 483, 8988, 49003, 49003,
	70395, 9298, -192, 49003, 49003, -1000, 49003, 765, 131494, -1000,
	3617, 49003, 307, 305, -1000, -1000, -1000, 3588, -1000, -1000,
	-1000, 131494, 49003, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	303, -1000, 169, -1000, -1000, -1000, 125239, -1000, 49003, 301,
	3379, -1000, 299, 298, 9949, 571, 127602, 127420, 126990, 297,
	-1000, -1000, 295, 294, 131494, 2968, 131494, -1000, -1000, 1013,
	1013, 1381, 1381, 1381, 1381, 3564, 608, 1041, 554, 355,
	355, 355, 520, 1055, 1055, 355, 355, 355, 1055, 2900,
	2614, 541, 7551, -1000, -1000, 131494, 131494, 293, -1000, -1000,
	-1000, -120, 289, 7496, -1000, 2834, 3373, 131494, -1000, 56976,
	2834, 2834, -1000, -1000, 1888, 117553, 131494, 56976, -1000, 2864,
	-1000, 20139, -1000, 25854, -1000, -1000, -1000, -1000, 3584, -1000,
	64297, -1000, 540, -1000, -2, -1000, 2745, -1000, 881, -1000,
	-1000, 77154, 77154, -146, -171, 117553, -1000, -1000, 763, 3674,
	784, 25854, 288, -1000, -1000, -1000, -146, -146, 117553, -146,
	-1000, -1000, -1000, 3261, 131494, 117553, 117553, 1565, 103146, 117553,
	3045, -1000, 2155, -1000, 1117, 126808, 57535, -1000, 57535, 117553,
	-1000, -1000, -1000, -1000, 1980, 1524, 3673, 1166, -1000, 3346,
	117553, -1000, 117553, -1000, -1000, -1000, 117553, 117553, 94320, 117553,
	-1000, 72616, 3024, -193, 131494, -84, -1000, 880, -1000, 1394,
	-1000, 21288, 117553, 72616, 94320, 117553, 72616, 94320, 3044, 117553,
	2256, -1000, -1000, 3014, -1000, 3023, -198, 25854, -1000, 3615,
	3614, 3043, 3351, -1000, 117553, 3613, 117553, 94320, 3260, -1000,
	-1000, -1000, -1000, -1000, -1000, 1747, 1211, 1209, 2367, -85,
	2366, 2323, -86, 2175, 1006, -87, 539, -1000, 879, -1000,
	-1000, 859, -1000, 1006, -1000, 77154, 60362, 3671, 434, -1000,
	2700, -1000, 99268, 2331, 100, -1000, 3666, 102048, 538, -1000,
	2313, -1000, 609, -1000, 2545, 72616, 2013, 100, 94320, -1000,
	-1000, 434, 286, -89, -1000, 3065, 1110, 25854, 94320, 3040,
	2578, 839, 78266, -1000, 1451, 2667, -1000, -90, -1000, 632,
	100, 2306, -1000, -91, 131494, -1000, 857, -1000, -199, -1000,
	-1000, 278, -1000, 3258, 3256, -1000, 2829, 57535, 537, 535,
	117553, 3255, -1000, -1000, -200, -1000, -1000, 3397, 3397, 77154,
	60362, 77154, 77154, -1000, 1007, 916, -1000, 2479, -1000, -1000,
	-1000, -1000, -1000, 25854, 1762, -1000, 533, 532, -1000, -1000,
	-1000, -1000, 3314, 8988, 8988, 49003, 49003, 49003, 8988, 9298,
	-206, -1000, 8988, 8988, -120, -1000, -1000, 130123, -1000, -1000,
	-1000, 131494, -1000, 20716, 2243, -1000, 126700, -1000, 33470, -1000,
	-1000, 49003, 49003, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 53000, 2898, 531, 70395, -1000, -1000, 272, 1014, 49003,
	50716, 2515, 1014, 1014, -1000, -207, -1000, -1000, -1000, 3584,
	-2, -1000, -1000, 3665, 25854, -1000, 77154, -1000, -1000, 3664,
	-215, 782, -1000, 3662, -1000, -1000, 106, -1000, -1000, -1000,
	2769, 3512, -1000, 1993, -1000, 117553, -1000, 117553, -1000, 25854,
	117553, 2842, 1321, -1000, 975, 2602, 530, 53000, 1149, 94320,
	867, 2811, 2808, -1000, 3539, 3372, 2814, -213, -1000, 117553,
	49003, 117553, -214, -216, 2429, -1000, -1000, 1147, 1288, 49003,
	1137, -1000, -1000, -1000, 70395, 527, 2351, 2351, -219, -221,
	-1000, -1000, -1000, 49003, 1208, 117553, 34612, -1000, 3661, 3307,
	-1000, -1000, -1000, -1000, -1000, -1000, 117553, -1000, 117553, -1000,
	49003, 1207, -1000, -1000, -1000, 3610, 2351, 25854, 2351, -1000,
	2351, 3351, 1165, 117553, 72616, 94320, 1872, 1872, 2961, -1000,
	-1000, -1000, 2464, 2464, 77154, 60362, -1000, -92, 1006, -1000,
	3510, 2721, 3660, -1000, -1000, -1000, -1000, 2597, -1000, -1000,
	117553, 2596, 999, -1000, -222, -1000, 856, 850, 79364, 984,
	977, -1000, -95, 526, -1000, 849, -1000, -1000, -1000, -1000,
	434, 3509, -1000, 3609, 525, 524, 117553, 2359, 518, 25854,
	3300, 839, 78266, -1000, 3108, 1927, -1000, 2441, 117553, 3295,
	-1000, 2667, 498, -1000, 998, 482, 481, 2583, 2583, -224,
	57535, 57535, -227, 480, 998, -1000, -229, -1000, -1000, -1000,
	-1000, -1000, -1000, -102, -1000, 853, 843, -1000, -1000, 94320,
	94320, 49003, 49003, -1000, 8988, 8988, 8988, -1000, 266, -1000,
	-1000, 2306, 3371, -1000, -111, 126518, 126088, 8087, 53000, 70395,
	-230, -1000, -1000, 117553, 131494, -114, -1000, 131494, 469, 463,
	372, -1000, -1000, -1000, 445, -1000, -1000, -1000, 117553, 3656,
	-1000, 117553, 102597, 117553, -1000, -1000, 2049, -1000, -1000, -1000,
	117553, 2437, -1000, -1000, -1000, 1115, 49003, 7551, 53000, 461,
	49003, -1000, 459, 458, 3508, 3235, -1000, 2690, 2892, 1982,
	57535, -1000, 3314, -1000, 125906, -1000, 1099, 2061, -1000, -1000,
	-1000, -1000, 131494, 53000, 3351, 57535, -1000, -1000, 455, 452,
	131494, 447, 847, 2893, -1000, -1000, -1000, -1000, -1000, 131494,
	446, 3446, -1000, -1000, -1000, -1000, 2351, 94320, -1000, -1000,
	-1000, 1205, -1000, -1000, -1000, -1000, 3655, 3652, 2886, 83798,
	-1000, -232, -1000, -1000, 2042, 100, 2225, 2768, -1000, 2331,
	442, -1000, -1000, 2353, 2698, -1000, 102048, 34041, 34041, 260,
	3507, 977, -1000, 3569, -1000, 3230, 3230, 49003, 3506, 100,
	-1000, 3580, 57535, -1000, 94320, 57535, 2358, 2133, 2560, 78266,
	-1000, 2576, -1000, -1000, -240, 117553, 1927, -1000, -1000, 77154,
	77154, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1099, -241, -243, -1000, 77154, -1000, -1000, 2479,
	-1000, 117553, -1000, 117553, -1000, -1000, -246, -248, -1000, 2208,
	49003, 33470, -1000, -1000, 8087, -249, -1000, -119, -1000, 3504,
	50716, 3647, 3646, 3645, -1000, -146, -1000, -146, -1000, 1969,
	-1000, -1000, -1000, 3032, 2820, 125798, 7551, 2541, 117553, 6991,
	2013, 2013, -1000, 3503, 2891, -1000, -1000, 2721, 441, -1000,
	-1000, -1000, -1000, 928, 117553, 2721, 2817, 94320, 7551, 1111,
	-251, 2227, 2227, 49003, 32899, 2250, 49003, -1000, -1000, 3351,
	117553, -1000, -1000, 117553, 2356, -1000, 2870, 3577, -1000, 984,
	-1000, 2249, 117553, -1000, 3339, -1000, 3254, -1000, -1000, -1000,
	2700, 100, -1000, -1000, -1000, -254, 131494, 100, -1000, 255,
	-256, 1110, -257, 94320, 2070, -1000, 839, -1000, 2578, 1033,
	-1000, -1000, -259, -262, 1982, 1099, 2198, -264, -1000, -265,
	-272, -1000, -1000, 253, 50145, 50145, 50145, -120, -125, -1000,
	117553, 440, -1000, -1000, -1000, -1000, -1000, 3010, 1004, -1000,
	855, 1921, 241, 1125, 232, 224, -1000, -1000, -1000, 2198,
	117553, -1000, -1000, -1000, 1003, 434, -1000, 49003, 1099, -273,
	-1000, 1068, -274, -1000, 1067, -275, -1000, 2883, -1000, -280,
	2351, -267, 231, 1872, 1000, 3440, -1000, -1000, -1000, 2353,
	94320, -281, -1000, -1000, 2407, -1000, 2721, 999, -1000, -1000,
	-1000, 1099, 429, 1982, 428, 1576, 839, -1000, -1000, 1408,
	3300, 3110, 998, 998, 2721, 1982, 996, -1000, 998, -1000,
	-1000, -1000, 3069, -1000, 54142, 2376, 1893, 129224, 3069, 3069,
	-1000, -1000, 117553, 3428, -1000, 908, 907, 1550, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2814, -282, 3426, 2541,
	131494, 2721, -1000, 2227, 2767, -1000, 2227, 2875, -1000, 2228,
	-1000, -1000, -1000, 2850, -1000, 2872, -1000, 1848, 3563, 2552,
	427, -1000, 117553, 1871, 1859, 3644, 2225, 2353, 1982, 57535,
	2721, 57535, 2156, -1000, 117553, -1000, 2133, 1382, -1000, -1000,
	2198, 2721, 1033, 422, -1000, -1000, 1816, 3534, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 837, -1000, 3223, -1000,
	1135, 2110, 2110, 1033, -1000, 818, 855, -1000, -1000, 421,
	-1000, 418, -1000, 2322, 117553, 2310, -1000, -1000, -1000, -1000,
	117553, -1000, -1000, 3643, -1000, 984, -1000, 2721, -287, 2198,
	-288, -1000, -1000, -1000, -146, 2070, -1000, 1674, 996, 2198,
	-1000, 1887, -1000, -1000, 2299, 49574, 49003, -1000, 3551, -1000,
	-1000, 2645, -1000, -1000, 49003, 2814, 49003, 49003, -1000, 231,
	64853, -289, -1000, 2353, 2198, 1099, 996, 1982, 1576, 66517,
	1033, 996, -1000, -1000, -1000, 131494, -1000, -1000, -1000, 131494,
	-1000, -290, -296, -1000, -175, 101492, 2329, 2552, 996, 1982,
	1033, 2721, 2156, -270, -1000, 1033, 2198, 1203, -301, -1000,
	-1000, -1000, -1000, 1033, 2721, -1000, 2198, -1000, -1000, -1000,
	-1000, -1000, 414, -1000, -1000, 2198, 996, 49003, 996, 1033,
	-310, 1033, -1000, 2198, -1000, -1000,
}

var sqlPgo = [...]int{
	0, 4507, 4505, 4504, 4502, 4498, 4496, 4495, 4494, 4493,
	4491, 4488, 4487, 142, 4485, 4484, 4482, 4481, 4475, 4473,
	4470, 4467, 4465, 4461, 4460, 4458, 4456, 4455, 4454, 4453,
	4452, 4451, 4450, 4449, 4447, 4444, 4443, 4441, 4440, 4439,
	4438, 4437, 4436, 4435, 4434, 4433, 4432, 4430, 4428, 4426,
	4423, 4422, 4421, 4420, 4418, 4415, 4413, 4412, 4410, 4405,
	4404, 4403, 4402, 4400, 4399, 4398, 4397, 54, 4396, 4395,
	4394, 4393, 4392, 4390, 4388, 4386, 4382, 4381, 4379, 4376,
	4375, 4374, 4373, 4369, 4365, 4361, 4358, 4356, 62, 4355,
	271, 4346, 4342, 4335, 4330, 4325, 4319, 4318, 4316, 4315,
	4313, 4310, 4309, 270, 4306, 125, 163, 4305, 4304, 3836,
	4303, 4301, 269, 4298, 4296, 4292, 4291, 283, 4285, 4284,
	4283, 4276, 4275, 4273, 4271, 4270, 4269, 4268, 4263, 113,
	205, 4257, 4255, 1315, 4248, 4244, 4243, 4242, 4241, 4240,
	4239, 4238, 4237, 4234, 4233, 253, 166, 4232, 268, 4230,
	4222, 4219, 4217, 4216, 4209, 4206, 4203, 4202, 4198, 4193,
	4192, 4191, 4189, 4188, 4186, 4185, 4184, 4179, 4178, 4177,
	4176, 4175, 4173, 4171, 4170, 4169, 4167, 4166, 4165, 4163,
	4162, 4161, 4159, 4157, 4156, 4155, 4154, 4152, 249, 215,
	198, 4150, 4147, 267, 266, 4146, 4145, 4143, 4142, 4141,
	127, 11, 52, 4140, 4138, 95, 88, 90, 98, 103,
	99, 4136, 109, 4134, 128, 61, 4133, 18, 2, 297,
	245, 12578, 243, 4132, 4131, 4130, 247, 203, 4129, 242,
	4128, 4127, 4125, 4124, 4119, 4118, 71, 51, 181, 180,
	179, 177, 110, 4116, 162, 107, 83, 59, 45, 17,
	72, 221, 21, 1, 260, 4110, 259, 12, 141, 7,
	38, 4107, 4106, 4100, 4093, 3454, 134, 4091, 264, 251,
	174, 4087, 4086, 4085, 669, 4082, 4074, 47, 4072, 420,
	87, 133, 8, 129, 4068, 150, 165, 36, 4066, 164,
	66, 4065, 159, 94, 92, 10142, 12191, 4063, 4062, 116,
	73, 93, 4294, 200, 173, 207, 191, 168, 172, 124,
	219, 217, 185, 285, 4061, 258, 4059, 3493, 78, 186,
	156, 5827, 4057, 4056, 4054, 85, 206, 100, 4049, 4048,
	76, 19, 15, 4, 6, 145, 22, 23, 10, 4045,
	30, 123, 48, 25, 4043, 28, 4042, 4041, 4039, 4037,
	4036, 79, 167, 4034, 4033, 282, 4030, 117, 50, 60,
	4029, 39, 224, 4028, 235, 139, 4027, 4026, 257, 210,
	188, 4022, 74, 232, 4019, 4017, 4016, 4015, 4014, 137,
	3, 132, 4012, 4011, 161, 4010, 53, 244, 201, 4009,
	55, 4007, 4004, 182, 58, 146, 276, 202, 230, 115,
	234, 187, 233, 4003, 4001, 4000, 199, 3999, 3997, 225,
	153, 3995, 3994, 240, 286, 91, 46, 81, 238, 82,
	197, 158, 3992, 209, 3990, 3989, 284, 189, 213, 24,
	16, 104, 135, 3988, 5, 236, 157, 229, 112, 3987,
	6792, 2685, 2648, 3985, 3983, 151, 121, 77, 122, 155,
	263, 114, 3982, 3981, 2770, 3979, 3978, 3975, 3974, 195,
	3973, 3972, 3971, 152, 148, 194, 3970, 84, 65, 49,
	29, 130, 255, 281, 119, 227, 170, 254, 3967, 3966,
	3965, 190, 3964, 97, 131, 175, 208, 261, 57, 3963,
	169, 3962, 154, 641, 67, 149, 3961, 228, 3959, 3954,
	3952, 3948, 3941, 3937, 3934, 487, 241, 3933, 3932, 3931,
	37, 196, 3926, 262, 216, 178, 106, 80, 3923, 96,
	2541, 3921, 171, 108, 70, 265, 184, 3920, 4506, 64,
	3918, 0, 14488, 8472, 11931, 13790, 3917, 1265, 3915, 3914,
	3913, 223, 147, 3911, 3910, 3908, 105, 3905, 86, 3904,
	3903, 69, 3902, 26, 14, 20, 32, 27, 651, 439,
	3901, 3900, 41, 138, 143, 3898, 272, 231, 3896, 3895,
	3893, 3891, 102, 3888, 42, 3883, 40, 3881, 3880, 44,
	13, 33, 3879, 3878, 220, 3877, 222, 246, 3876, 160,
	3875, 63, 136, 3874, 3873, 3872, 68, 56, 256, 89,
	3866, 280, 3864, 204, 3863, 3861, 3861, 34, 3859, 3858,
	250, 120, 111, 3857, 252, 140, 43, 212, 183, 226,
	3855, 3854, 176, 3851, 3850, 3849, 273, 3848, 3847, 31,
	3846, 3845, 3844, 9, 3843, 3842, 211, 3212, 3840, 3839,
	35, 3838, 193,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 11, 11, 7, 7, 7, 7, 8,
	8, 8, 8, 8, 52, 52, 9, 9, 9, 9,
	9, 9, 9, 9, 9, 9, 9, 37, 39, 38,
	32, 32, 33, 33, 34, 35, 35, 10, 10, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 18, 18,
	40, 40, 19, 19, 42, 42, 20, 20, 43, 43,
	598, 598, 617, 617, 23, 23, 45, 45, 24, 46,
	17, 599, 599, 599, 599, 36, 25, 47, 29, 29,
	29, 29, 29, 203, 203, 203, 203, 22, 22, 41,
	41, 239, 239, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	594, 594, 241, 241, 240, 233, 233, 234, 234, 235,
	235, 600, 600, 242, 242, 242, 244, 244, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 494, 494,
	494, 526, 526, 526, 525, 525, 621, 621, 622, 622,
	622, 622, 622, 132, 132, 392, 392, 392, 56, 56,
	56, 56, 56, 589, 589, 205, 205, 205, 207, 207,
	206, 206, 206, 206, 206, 79, 79, 606, 606, 607,
	607, 605, 604, 604, 604, 608, 608, 608, 204, 204,
	204, 128, 128, 128, 128, 128, 128, 129, 129, 130,
	130, 208, 208, 208, 210, 210, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 214, 16, 16, 16,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 108,
	108, 528, 528, 529, 529, 199, 199, 200, 200, 200,
	200, 201, 201, 202, 202, 202, 70, 70, 211, 211,
	213, 213, 212, 212, 212, 212, 212, 58, 58, 58,
	58, 58, 58, 58, 59, 59, 59, 59, 59, 60,
	60, 60, 60, 60, 60, 61, 61, 61, 61, 61,
	61, 68, 68, 68, 68, 68, 68, 190, 190, 71,
	71, 71, 71, 71, 71, 71, 71, 71, 71, 71,
	71, 71, 76, 76, 76, 76, 623, 623, 623, 623,
	623, 623, 623, 623, 623, 623, 623, 623, 623, 623,
	623, 623, 623, 623, 623, 624, 624, 625, 625, 626,
	626, 627, 627, 627, 627, 627, 627, 627, 627, 627,
	627, 627, 627, 627, 627, 627, 627, 627, 627, 627,
	74, 74, 74, 74, 74, 74, 74, 74, 74, 74,
	74, 74, 74, 74, 74, 74, 74, 85, 85, 353,
	353, 316, 316, 86, 86, 86, 87, 87, 88, 88,
	72, 72, 587, 587, 369, 369, 485, 485, 73, 595,
	595, 595, 597, 597, 596, 596, 90, 90, 391, 391,
	91, 91, 91, 91, 91, 91, 92, 92, 92, 92,
	92, 92, 92, 93, 93, 93, 93, 93, 93, 93,
	93, 93, 93, 93, 93, 93, 93, 100, 100, 100,
	100, 100, 101, 101, 101, 98, 98, 98, 95, 95,
	95, 94, 94, 94, 99, 99, 99, 586, 305, 305,
	97, 97, 97, 96, 96, 96, 370, 370, 102, 102,
	102, 102, 317, 103, 103, 103, 103, 103, 103, 103,
	103, 106, 106, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 107, 107, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 107, 487, 487, 104, 104,
	104, 452, 452, 109, 109, 109, 407, 407, 110, 110,
	110, 110, 110, 111, 111, 111, 111, 111, 111, 111,
	111, 111, 131, 131, 131, 131, 131, 131, 131, 131,
	591, 591, 362, 362, 268, 268, 268, 268, 121, 121,
	121, 121, 122, 122, 122, 123, 123, 195, 195, 138,
	138, 138, 138, 137, 137, 137, 137, 137, 137, 137,
	137, 62, 62, 62, 63, 63, 64, 64, 65, 65,
	66, 66, 67, 67, 67, 67, 67, 141, 141, 618,
	618, 143, 140, 140, 140, 140, 140, 139, 139, 142,
	142, 142, 142, 144, 146, 146, 146, 146, 146, 145,
	145, 145, 145, 147, 147, 519, 519, 378, 378, 517,
	517, 538, 538, 518, 518, 323, 323, 323, 323, 323,
	324, 324, 324, 527, 527, 527, 527, 527, 527, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 196, 196, 197, 198, 198, 198, 198, 198,
	173, 173, 173, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 176, 176, 176, 160, 160, 149, 149,
	149, 149, 149, 149, 149, 154, 154, 154, 154, 154,
	154, 154, 154, 150, 150, 162, 162, 162, 162, 162,
	155, 155, 156, 156, 156, 157, 157, 157, 157, 183,
	183, 159, 159, 161, 161, 161, 161, 161, 161, 161,
	161, 161, 151, 151, 151, 151, 164, 164, 164, 164,
	414, 414, 414, 188, 188, 163, 163, 163, 163, 163,
	163, 163, 163, 163, 163, 163, 163, 163, 163, 163,
	163, 186, 186, 186, 186, 186, 186, 609, 609, 610,
	610, 610, 180, 180, 180, 180, 180, 180, 466, 466,
	174, 174, 174, 174, 179, 179, 179, 179, 182, 182,
	182, 182, 397, 397, 171, 171, 171, 172, 172, 172,
	177, 177, 178, 354, 354, 175, 175, 181, 181, 181,
	181, 152, 152, 152, 152, 152, 152, 152, 153, 153,
	153, 153, 184, 184, 170, 170, 185, 185, 185, 185,
	185, 185, 185, 185, 185, 185, 185, 628, 628, 166,
	166, 166, 165, 165, 165, 165, 168, 168, 169, 169,
	169, 169, 169, 169, 167, 158, 187, 588, 588, 584,
	584, 584, 584, 584, 584, 584, 584, 585, 585, 585,
	585, 590, 590, 114, 114, 114, 114, 114, 124, 124,
	124, 124, 124, 115, 115, 115, 115, 115, 115, 115,
	117, 117, 116, 116, 116, 116, 80, 80, 80, 80,
	80, 15, 15, 15, 81, 81, 259, 259, 217, 217,
	217, 342, 342, 218, 218, 331, 331, 331, 331, 215,
	215, 216, 216, 82, 82, 629, 629, 629, 601, 601,
	601, 602, 602, 602, 602, 602, 602, 325, 325, 326,
	326, 432, 432, 432, 432, 432, 329, 329, 329, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 332, 332,
	243, 243, 243, 340, 341, 341, 333, 333, 339, 338,
	338, 337, 337, 336, 336, 334, 335, 335, 335, 344,
	344, 343, 346, 346, 345, 431, 547, 547, 549, 549,
	549, 549, 549, 549, 549, 551, 551, 551, 551, 551,
	551, 551, 551, 551, 551, 551, 551, 551, 551, 551,
	551, 551, 415, 415, 630, 630, 631, 632, 545, 545,
	545, 546, 541, 541, 542, 542, 542, 542, 542, 327,
	327, 328, 328, 328, 328, 543, 544, 360, 360, 470,
	548, 548, 550, 550, 552, 633, 633, 633, 633, 633,
	633, 634, 634, 634, 430, 430, 429, 429, 351, 351,
	553, 553, 553, 553, 554, 554, 554, 554, 554, 557,
	556, 555, 555, 555, 555, 555, 84, 84, 84, 394,
	394, 393, 393, 395, 395, 395, 395, 395, 395, 395,
	395, 395, 395, 395, 395, 395, 395, 395, 192, 192,
	271, 271, 78, 78, 78, 12, 12, 12, 12, 12,
	12, 12, 286, 286, 13, 13, 13, 603, 603, 603,
	83, 83, 83, 83, 83, 83, 270, 270, 270, 270,
	270, 270, 270, 270, 270, 270, 270, 270, 270, 270,
	270, 270, 270, 270, 270, 270, 593, 593, 592, 592,
	272, 272, 636, 636, 89, 89, 89, 89, 89, 89,
	89, 89, 488, 488, 489, 489, 77, 77, 77, 77,
	77, 416, 416, 413, 413, 412, 412, 359, 359, 468,
	468, 468, 469, 276, 276, 277, 277, 236, 236, 236,
	31, 30, 21, 21, 26, 26, 27, 27, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 28, 28, 49,
	49, 49, 49, 50, 50, 50, 50, 53, 53, 54,
	54, 48, 48, 48, 48, 51, 51, 44, 44, 55,
	55, 55, 55, 55, 611, 613, 613, 612, 612, 616,
	616, 616, 616, 616, 616, 614, 614, 615, 615, 619,
	619, 620, 620, 120, 120, 125, 125, 125, 125, 125,
	126, 126, 126, 126, 127, 127, 127, 127, 136, 136,
	191, 191, 191, 191, 191, 191, 191, 57, 57, 57,
	57, 69, 69, 69, 69, 134, 638, 638, 638, 135,
	135, 135, 637, 637, 269, 269, 426, 426, 427, 427,
	639, 639, 428, 428, 428, 428, 428, 262, 261, 263,
	263, 264, 264, 75, 75, 75, 252, 252, 251, 253,
	253, 254, 254, 249, 249, 530, 530, 256, 256, 256,
	257, 257, 245, 245, 246, 246, 247, 247, 248, 248,
	260, 260, 640, 640, 112, 112, 112, 194, 194, 315,
	315, 315, 423, 423, 423, 352, 352, 283, 283, 425,
	425, 425, 425, 390, 390, 390, 193, 193, 367, 367,
	380, 380, 381, 381, 482, 482, 382, 118, 118, 119,
	119, 133, 133, 221, 221, 219, 219, 219, 219, 219,
	219, 219, 219, 226, 226, 227, 227, 228, 228, 229,
	230, 230, 230, 230, 371, 371, 231, 231, 231, 220,
	220, 220, 222, 222, 222, 222, 222, 222, 222, 225,
	225, 225, 225, 232, 232, 232, 224, 224, 564, 564,
	564, 566, 566, 568, 568, 567, 567, 563, 563, 565,
	565, 635, 635, 396, 396, 396, 349, 350, 347, 347,
	348, 348, 357, 357, 355, 356, 356, 358, 358, 467,
	467, 467, 237, 237, 237, 387, 387, 387, 387, 388,
	388, 419, 419, 417, 417, 417, 417, 418, 418, 420,
	420, 420, 421, 421, 422, 422, 384, 384, 385, 385,
	386, 386, 386, 386, 448, 448, 223, 223, 223, 364,
	364, 364, 365, 365, 438, 438, 438, 438, 438, 438,
	438, 438, 439, 439, 437, 437, 437, 437, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 472, 473, 473,
	366, 366, 474, 424, 424, 582, 582, 582, 583, 583,
	465, 465, 475, 475, 475, 475, 475, 475, 463, 463,
	464, 464, 483, 484, 484, 400, 400, 400, 400, 398,
	398, 401, 401, 401, 401, 401, 399, 399, 476, 476,
	476, 476, 389, 389, 477, 477, 477, 477, 478, 479,
	479, 480, 480, 433, 434, 434, 490, 490, 490, 490,
	492, 363, 363, 363, 363, 363, 540, 539, 539, 491,
	491, 491, 491, 491, 491, 491, 491, 491, 506, 506,
	506, 506, 506, 506, 506, 506, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 506, 506, 506, 506,
	507, 507, 507, 507, 507, 507, 507, 493, 493, 493,
	493, 493, 497, 497, 497, 496, 496, 496, 496, 496,
	496, 496, 496, 496, 496, 496, 498, 498, 503, 503,
	504, 504, 504, 499, 500, 505, 505, 505, 505, 641,
	641, 509, 509, 501, 501, 501, 501, 501, 501, 501,
	501, 501, 495, 495, 495, 502, 502, 502, 409, 409,
	409, 409, 409, 409, 409, 409, 409, 409, 409, 409,
	409, 408, 408, 410, 410, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 442, 442, 442, 442,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 558, 558, 558, 558, 558,
	558, 558, 558, 444, 444, 561, 561, 562, 562, 559,
	559, 559, 559, 559, 559, 559, 559, 559, 559, 559,
	559, 559, 559, 559, 559, 559, 559, 559, 559, 559,
	559, 559, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	569, 569, 570, 570, 572, 572, 573, 573, 574, 575,
	575, 575, 576, 577, 577, 571, 571, 578, 578, 578,
	578, 579, 579, 580, 580, 580, 580, 580, 581, 581,
	581, 581, 581, 454, 454, 455, 455, 461, 461, 461,
	320, 320, 320, 320, 320, 320, 320, 320, 320, 320,
	320, 320, 320, 320, 320, 320, 320, 320, 320, 320,
	320, 320, 320, 320, 320, 320, 320, 320, 320, 320,
	320, 320, 320, 320, 320, 322, 322, 321, 273, 273,
	273, 273, 273, 273, 376, 376, 374, 374, 374, 377,
	377, 375, 375, 373, 373, 372, 372, 451, 451, 449,
	449, 453, 453, 402, 402, 508, 508, 508, 508, 508,
	508, 508, 508, 403, 403, 403, 411, 404, 404, 405,
	405, 405, 405, 405, 445, 446, 406, 406, 406, 447,
	447, 456, 460, 460, 459, 458, 458, 457, 457, 435,
	435, 436, 436, 383, 383, 642, 642, 379, 379, 481,
	481, 481, 481, 319, 319, 368, 368, 318, 318, 310,
	310, 311, 311, 311, 311, 361, 361, 462, 462, 510,
	510, 511, 511, 512, 512, 513, 513, 514, 515, 516,
	450, 450, 294, 293, 280, 281, 292, 291, 290, 279,
	282, 287, 288, 289, 284, 285, 301, 300, 299, 250,
	255, 306, 307, 307, 309, 309, 308, 308, 296, 297,
	298, 486, 278, 312, 312, 313, 313, 313, 314, 314,
	314, 314, 274, 274, 275, 275, 302, 302, 303, 304,
	304, 295, 295, 295, 265, 265, 265, 266, 266, 267,
	267, 524, 524, 521, 521, 521, 522, 522, 522, 523,
	523, 523, 523, 520, 520, 520, 520, 520, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 532, 532, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 534, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 537,
	537,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 1, 1, 1, 3, 1,
	1, 1, 1, 3, 4, 6, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 6, 4, 4,
	6, 9, 6, 8, 4, 4, 5, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 4, 6,
	4, 6, 6, 9, 6, 9, 6, 5, 6, 5,
	1, 1, 1, 0, 6, 6, 6, 6, 6, 6,
	4, 4, 4, 4, 3, 4, 4, 4, 7, 7,
	9, 8, 9, 5, 3, 5, 7, 4, 12, 4,
	12, 1, 3, 5, 5, 2, 5, 3, 6, 4,
	4, 4, 6, 5, 6, 5, 6, 4, 8, 3,
	4, 2, 3, 10, 3, 6, 4, 3, 1, 3,
	2, 1, 1, 3, 1, 3, 2, 4, 3, 2,
	3, 2, 0, 1, 1, 0, 2, 0, 7, 10,
	6, 8, 6, 6, 6, 9, 4, 3, 2, 2,
	0, 1, 1, 1, 1, 1, 1, 3, 6, 4,
	6, 7, 9, 6, 2, 2, 3, 0, 8, 6,
	8, 7, 2, 0, 1, 2, 5, 0, 1, 3,
	3, 1, 1, 3, 1, 12, 3, 1, 0, 1,
	1, 2, 1, 4, 0, 3, 3, 0, 4, 6,
	0, 5, 7, 6, 8, 8, 2, 1, 3, 1,
	3, 2, 5, 0, 1, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 1, 3, 1, 3, 3, 3,
	6, 4, 9, 7, 12, 12, 12, 9, 2, 7,
	2, 1, 1, 1, 3, 3, 0, 3, 1, 3,
	1, 1, 3, 2, 5, 0, 7, 5, 2, 0,
	1, 2, 3, 1, 1, 2, 2, 1, 2, 1,
	2, 1, 2, 2, 3, 3, 3, 3, 3, 3,
	5, 3, 3, 5, 3, 3, 5, 3, 3, 5,
	3, 6, 6, 6, 6, 6, 4, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 1, 1, 2,
	1, 2, 6, 3, 8, 3, 4, 3, 3, 4,
	3, 4, 4, 4, 3, 5, 7, 3, 3, 4,
	3, 3, 3, 3, 3, 2, 0, 1, 0, 1,
	0, 4, 3, 3, 3, 3, 3, 6, 4, 4,
	4, 3, 5, 3, 3, 3, 3, 3, 3, 3,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	4, 1, 2, 1, 2, 1, 2, 7, 3, 2,
	0, 1, 3, 3, 1, 0, 1, 2, 2, 1,
	6, 5, 1, 2, 1, 3, 2, 0, 7, 2,
	5, 0, 1, 3, 3, 1, 9, 3, 2, 0,
	2, 2, 2, 2, 2, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 4, 6, 5,
	7, 3, 4, 6, 3, 4, 6, 3, 5, 7,
	3, 4, 6, 3, 4, 6, 3, 1, 1, 3,
	4, 6, 3, 3, 5, 3, 1, 3, 2, 2,
	2, 2, 1, 2, 2, 5, 3, 3, 6, 6,
	3, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 1, 1,
	2, 1, 1, 2, 1, 1, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 3, 5, 7,
	2, 3, 0, 3, 5, 2, 3, 0, 2, 3,
	2, 3, 2, 6, 4, 7, 7, 7, 9, 10,
	5, 2, 6, 4, 7, 7, 7, 10, 5, 2,
	2, 1, 1, 3, 1, 1, 1, 1, 1, 2,
	1, 2, 2, 3, 2, 4, 3, 2, 2, 1,
	2, 1, 3, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 3, 5, 4, 6, 4, 3, 0,
	1, 3, 2, 4, 2, 4, 1, 6, 3, 1,
	1, 5, 3, 3, 2, 2, 6, 3, 3, 3,
	3, 4, 4, 3, 1, 3, 3, 2, 2, 1,
	3, 3, 1, 2, 1, 1, 2, 2, 3, 1,
	1, 1, 1, 1, 3, 2, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 2, 1, 1,
	1, 2, 2, 2, 1, 3, 3, 3, 3, 3,
	2, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 5, 7, 3, 3, 3, 4, 4,
	6, 5, 5, 5, 3, 4, 4, 3, 4, 4,
	3, 4, 4, 5, 3, 5, 5, 5, 7, 3,
	3, 3, 4, 6, 4, 2, 6, 4, 3, 2,
	3, 4, 3, 5, 3, 6, 5, 6, 3, 5,
	6, 3, 4, 3, 4, 3, 3, 4, 4, 5,
	0, 1, 1, 1, 1, 3, 2, 3, 4, 3,
	4, 3, 5, 3, 4, 4, 3, 4, 5, 3,
	4, 3, 4, 4, 5, 3, 3, 1, 1, 0,
	2, 3, 5, 4, 6, 4, 6, 4, 1, 0,
	3, 4, 4, 5, 7, 5, 3, 3, 3, 4,
	4, 5, 2, 0, 4, 2, 3, 4, 2, 3,
	3, 3, 5, 2, 0, 3, 3, 4, 3, 3,
	3, 3, 4, 4, 4, 4, 4, 3, 4, 5,
	4, 4, 2, 3, 2, 3, 6, 6, 7, 9,
	7, 9, 4, 3, 4, 4, 5, 1, 1, 10,
	10, 3, 5, 5, 5, 3, 5, 6, 4, 4,
	5, 5, 2, 3, 2, 5, 4, 2, 0, 1,
	1, 1, 1, 3, 2, 2, 2, 2, 2, 2,
	1, 2, 0, 1, 2, 1, 2, 2, 1, 2,
	1, 2, 2, 3, 7, 3, 3, 7, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 6, 5, 8,
	3, 6, 6, 3, 13, 16, 1, 0, 1, 2,
	3, 0, 2, 0, 4, 0, 4, 5, 4, 3,
	3, 1, 3, 10, 13, 0, 2, 3, 1, 1,
	0, 1, 2, 2, 2, 2, 1, 1, 0, 1,
	3, 1, 1, 1, 2, 3, 3, 3, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 8, 0,
	1, 1, 0, 2, 1, 0, 1, 0, 1, 1,
	0, 1, 4, 1, 0, 3, 7, 7, 1, 1,
	3, 7, 1, 3, 11, 3, 2, 0, 3, 1,
	2, 2, 3, 2, 6, 2, 1, 2, 2, 2,
	8, 4, 2, 3, 5, 5, 5, 2, 5, 5,
	2, 2, 2, 0, 1, 1, 3, 4, 11, 12,
	9, 5, 3, 1, 5, 10, 7, 11, 3, 3,
	0, 2, 4, 3, 3, 1, 5, 1, 3, 1,
	2, 0, 1, 2, 2, 0, 1, 3, 3, 2,
	2, 1, 1, 1, 4, 0, 6, 0, 3, 0,
	2, 2, 2, 0, 1, 1, 2, 2, 0, 3,
	3, 2, 1, 1, 2, 2, 5, 8, 4, 1,
	0, 1, 2, 2, 1, 2, 3, 3, 2, 2,
	3, 2, 2, 2, 2, 2, 3, 1, 4, 2,
	2, 2, 4, 7, 3, 4, 6, 5, 7, 5,
	5, 3, 3, 0, 2, 2, 2, 1, 1, 1,
	8, 10, 11, 7, 10, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 0,
	3, 3, 0, 1, 8, 11, 3, 6, 6, 5,
	3, 4, 1, 0, 1, 3, 17, 20, 16, 19,
	4, 2, 0, 1, 0, 1, 0, 1, 3, 2,
	4, 2, 3, 1, 0, 2, 0, 1, 1, 0,
	9, 6, 6, 8, 6, 8, 5, 7, 2, 6,
	7, 4, 4, 5, 2, 4, 6, 6, 8, 6,
	7, 8, 9, 6, 7, 8, 9, 6, 8, 6,
	8, 6, 7, 8, 9, 6, 8, 6, 8, 6,
	6, 8, 8, 4, 7, 3, 0, 7, 10, 1,
	1, 1, 1, 2, 2, 3, 0, 3, 0, 1,
	0, 2, 0, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
	1, 2, 1, 2, 1, 2, 1, 3, 2, 3,
	2, 2, 2, 2, 2, 2, 1, 1, 0, 2,
	4, 2, 1, 0, 2, 1, 1, 0, 1, 3,
	1, 0, 1, 1, 1, 1, 1, 2, 3, 2,
	2, 1, 2, 13, 16, 3, 1, 0, 4, 1,
	0, 2, 2, 3, 0, 1, 1, 4, 4, 5,
	1, 0, 3, 0, 3, 0, 3, 0, 3, 0,
	4, 0, 1, 0, 6, 7, 3, 6, 3, 1,
	3, 1, 1, 4, 2, 1, 3, 1, 3, 4,
	8, 11, 5, 2, 2, 0, 10, 3, 2, 0,
	1, 3, 1, 1, 3, 3, 5, 6, 4, 5,
	4, 1, 1, 3, 3, 1, 2, 4, 4, 2,
	3, 5, 5, 1, 3, 1, 0, 1, 2, 3,
	2, 4, 2, 3, 0, 2, 0, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 8,
	8, 8, 2, 4, 4, 4, 2, 2, 2, 2,
	3, 1, 3, 1, 2, 6, 7, 1, 0, 1,
	0, 1, 0, 1, 1, 0, 1, 5, 1, 0,
	1, 0, 1, 0, 3, 3, 5, 1, 3, 3,
	4, 5, 2, 2, 0, 2, 2, 1, 1, 1,
	0, 1, 0, 2, 2, 5, 4, 2, 3, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 1, 3,
	1, 3, 3, 3, 2, 0, 4, 2, 5, 3,
	2, 0, 1, 3, 3, 5, 1, 1, 1, 1,
	1, 1, 1, 3, 2, 4, 4, 0, 4, 4,
	3, 4, 1, 5, 3, 4, 5, 5, 1, 5,
	1, 3, 2, 0, 3, 0, 2, 3, 1, 3,
	2, 0, 3, 5, 6, 4, 6, 4, 3, 2,
	1, 0, 5, 1, 0, 2, 2, 2, 1, 1,
	0, 1, 1, 1, 1, 0, 4, 2, 1, 2,
	2, 4, 1, 3, 1, 2, 3, 2, 4, 1,
	0, 1, 0, 2, 1, 0, 2, 5, 7, 2,
	1, 2, 4, 3, 5, 0, 1, 3, 5, 1,
	2, 1, 1, 1, 1, 1, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 6, 6, 1, 1, 1,
	1, 1, 3, 5, 0, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 1, 3, 0, 5, 4,
	1, 2, 1, 4, 1, 1, 2, 1, 1, 1,
	1, 1, 0, 1, 2, 5, 1, 4, 2, 5,
	1, 4, 3, 3, 0, 1, 2, 4, 1, 1,
	1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 1, 0, 1, 4, 1, 3, 3, 3, 5,
	2, 2, 2, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 3, 3,
	3, 2, 2, 3, 5, 4, 6, 3, 5, 4,
	6, 4, 6, 5, 7, 3, 3, 3, 3, 3,
	4, 3, 2, 4, 2, 3, 3, 4, 3, 4,
	3, 4, 5, 6, 6, 7, 6, 7, 6, 7,
	3, 4, 4, 1, 3, 1, 3, 3, 2, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 3, 5, 6, 6, 7, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 6, 1, 1, 1, 1,
	1, 1, 2, 1, 5, 5, 6, 3, 1, 1,
	1, 2, 2, 2, 4, 3, 5, 6, 8, 6,
	5, 4, 3, 2, 2, 4, 1, 1, 1, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 6, 6, 8, 8, 6, 4, 6, 6, 6,
	4, 1, 3, 3, 3, 3, 3, 4, 3, 3,
	4, 3, 3, 4, 3, 3, 4, 3, 3, 3,
	3, 3, 4, 3, 4, 3, 4, 3, 4, 4,
	3, 6, 5, 5, 5, 4, 4, 3, 4, 3,
	5, 0, 5, 0, 2, 0, 1, 3, 3, 2,
	2, 0, 6, 1, 0, 3, 0, 3, 3, 3,
	0, 1, 4, 2, 2, 2, 2, 2, 3, 2,
	2, 3, 0, 4, 1, 1, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 4, 1, 1,
	1, 2, 1, 2, 2, 3, 1, 2, 3, 2,
	3, 2, 3, 1, 0, 1, 3, 1, 3, 3,
	3, 1, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 3, 1, 2, 3, 0, 3,
	3, 2, 2, 1, 2, 2, 3, 2, 1, 1,
	1, 5, 1, 2, 4, 2, 0, 1, 0, 3,
	5, 1, 0, 1, 2, 1, 0, 1, 3, 3,
	2, 1, 1, 1, 3, 1, 3, 3, 1, 1,
	1, 1, 5, 3, 1, 1, 3, 1, 1, 1,
	1, 2, 2, 1, 1, 2, 2, 1, 1, 1,
	3, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 1, 0, 1, 1,
	1, 1, 1, 1, 1, 3, 5, 7, 1, 7,
	5, 3, 1, 1, 1, 1, 1, 1, 1, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 0, 3,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 602, -105, -102, -70, -68, -109, -110,
	-91, -111, -104, -131, -136, -118, -119, -120, -132, -138,
	-191, -196, -197, -198, -3, -56, -58, -71, -90, -92,
	-103, -113, -112, -114, -121, -128, -124, -108, -62, -133,
	-137, -148, -192, -193, -194, 32, 31, 100, 80, 155,
	129, 138, 203, 386, 431, 443, 401, 143, 422, 406,
	-142, -143, 461, -57, -69, -135, -134, 73, 130, 416,
	-4, -12, -16, 29, 46, -59, -60, -61, 62, -78,
	-74, -85, -79, -72, -73, -76, -623, 102, -565, -93,
	-96, -127, -627, 162, 221, -115, -116, 368, -122, -123,
	424, -125, -126, 427, 163, -64, -63, 157, -219, -221,
	-140, -139, -141, -195, -149, -150, -151, -152, -153, -154,
	-155, -157, -183, -158, -159, -160, -161, -162, -163, -167,
	-186, -164, -165, -166, -169, -168, -170, -175, -171, -172,
	-173, -174, -176, -177, -179, -180, -181, -182, -184, -185,
	466, -178, -187, -156, 527, 49, 481, 82, 147, 435,
	21, -5, -6, -7, -8, -9, -10, -11, -15, -14,
	-55, -75, -77, -80, -81, -82, -89, -83, -84, -564,
	-94, -95, -98, -100, -101, -97, -99, 423, -222, -220,
	599, 542, -18, -23, -24, -19, -20, -22, -25, -21,
	-26, -27, -28, -40, -45, -46, -42, -43, -41, -44,
	-47, -48, -49, -50, -51, -52, -53, -54, -30, -36,
	-37, -31, -32, -33, -34, -35, -38, -39, -17, -29,
	563, 572, -225, -223, -224, -232, 453, 550, 501, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, -317, 2, -296, -302, -303, -304, -295, -265, -534,
	-537, 4, -531, -535, 169, 231, 332, 21, 23, 22,
	24, 25, 26, 27, 29, 30, 41, 42, 44, 45,
	46, 47, 48, 49, 53, 55, 59, 60, 61, 62,
	63, 64, 68, 73, 74, 79, 80, 81, 82, 83,
	84, 85, 91, 88, 89, 90, 92, 94, 96, 97,
	98, 99, 100, 101, 103, 104, 105, 107, 108, 109,
	117, 118, 119, 120, 121, 123, 129, 124, 130, 133,
	128, 132, 134, 136, 137, 138, 141, 142, 143, 145,
	146, 148, 149, 150, 152, 153, 155, 156, 157, 160,
	158, 509, 159, 161, 162, 163, 164, 167, 175, 176,
	177, 182, 184, 185, 189, 190, 191, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 204, 208, 210, 211,
	212, 213, 214, 220, 221, 223, 224, 225, 226, 227,
	232, 233, 234, 238, 235, 244, 245, 249, 250, 251,
	253, 257, 258, 259, 260, 261, 262, 264, 266, 265,
	268, 271, 272, 275, 279, 280, 284, 285, 281, 286,
	287, 289, 290, 293, 291, 294, 295, 292, 296, 298,
	299, 300, 301, 302, 303, 304, 305, 306, 307, 308,
	309, 297, 312, 310, 314, 315, 316, 330, 325, 326,
	327, 320, 321, 317, 322, 318, 319, 323, 324, 329,
	334, 335, 338, 218, 340, 341, 344, 362, 348, 349,
	350, 353, 354, 357, 360, 361, 363, 364, 365, 366,
	367, 368, 369, 370, 371, 373, 374, 376, 377, 378,
	380, 381, 382, 384, 386, 387, 389, 390, 392, 393,
	394, 395, 396, 397, 398, 400, 401, 403, 402, 404,
	406, 408, 409, 410, 416, 422, 418, 419, 420, 421,
	423, 424, 425, 426, 427, 429, 430, 431, 433, 434,
	435, 436, 437, 439, 441, 442, 446, 447, 463, 464,
	483, 443, 444, 445, 448, 449, 450, 451, 452, 456,
	454, 455, 457, 458, 459, 461, 462, 465, 466, 468,
	469, 470, 471, 472, 473, 474, 477, 479, 480, 481,
	500, 482, 484, 488, 489, 490, 491, 485, 486, 499,
	493, 494, 496, 497, 502, 503, 504, 505, 506, 507,
	508, 510, 512, 520, 521, 522, 524, 527, 528, 529,
	530, 518, 532, 533, 536, 537, 538, 541, 539, 540,
	542, 544, 547, 548, 549, 555, 554, 556, 559, 564,
	565, 567, 568, 569, 36, 50, 51, 54, 56, 58,
	69, 70, 71, 75, 125, 126, 154, 165, 166, 178,
	192, 193, 205, 207, 215, 216, 217, 239, 240, 242,
	247, 269, 337, 339, 355, 359, 375, 379, 383, 385,
	399, 438, 475, 487, 492, 513, 514, 515, 516, 523,
	525, 550, 551, 552, 557, 566, -317, 2, -296, 346,
	-289, 2, -265, -265, 386, 28, 2, 28, 374, 455,
	504, 506, 2, -591, -362, 2, 28, -268, -265, 102,
	203, 453, -289, 2, -591, -362, 25, 2, -265, 2,
	360, 22, 27, 66, 77, 98, 141, 164, 186, 189,
	-626, 362, 393, 441, 457, 499, 510, 524, 2, 554,
	290, 454, 501, 231, 120, 529, 448, -603, 446, 447,
	360, 391, 433, 206, 543, -269, 2, 443, -265, 290,
	2, 602, 94, 74, 438, 458, -145, 2, 280, 521,
	-146, -147, -144, 513, -519, 448, 433, 312, -265, 602,
	602, 602, 28, -278, -265, 501, 231, 448, 120, 497,
	602, 2, 501, 365, 554, 454, 120, 396, 231, 529,
	189, 141, 27, 448, -603, 577, 578, 290, 127, -589,
	2, -584, 4, -535, -531, -311, -310, 501, 507, 120,
	-304, -295, 592, -303, 602, 602, 602, 2, 250, 251,
	395, 394, 458, 459, 602, 602, 602, 602, 446, 2,
	164, 22, 27, 66, 93, 98, 127, 186, 189, 351,
	-624, 362, 393, 457, 499, 503, 510, 524, -602, 482,
	68, 421, 448, -601, -603, 290, 529, 141, -412, 120,
	280, 201, 537, 506, 504, 535, 133, 238, 540, 539,
	602, 602, -106, 2, 599, 32, 31, -105, -109, 143,
	461, -214, 501, 243, 2, -265, 602, 602, 2, 250,
	251, 446, 447, 602, 602, 187, -584, 2, 602, 602,
	2, 250, 251, 446, 447, 243, 2, 68, 450, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 2, -189, 458, 482, 212,
	47, 46, 74, 28, 392, 79, 366, 121, 127, 149,
	530, 204, 231, 232, 258, 93, 94, -414, 44, 251,
	68, 250, 447, -609, 446, -466, 502, 449, 455, 496,
	262, 443, 521, 102, 544, 434, 569, 396, 397, 494,
	410, 281, 158, 188, 4, 120, 312, 433, 460, 266,
	265, 513, 280, 442, 369, 84, 602, -635, 2, 501,
	-637, 2, 521, 521, 2, -637, 2, -637, 2, -637,
	2, -638, 521, 566, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, -220, -222, -221, 602, 602, 602, 602, 602,
	602, 602, -189, 458, 2, 74, 28, -355, -357, 534,
	241, 151, 352, -219, -221, 2, -564, -517, 2, -440,
	-538, -442, 590, 591, 583, 498, 67, -321, 331, 570,
	-454, 127, 535, 346, -537, -443, -456, 154, 362, 438,
	-377, 8, 9, 5, 6, 7, -274, -444, -450, 526,
	168, 336, -314, 603, 10, 599, -561, -221, -455, 37,
	207, 65, -521, -313, -275, -493, 242, -312, -295, -558,
	-559, 4, -531, -532, -522, -496, -504, -500, -501, -507,
	-265, -534, 77, 111, 112, 110, 115, 114, 283, 282,
	116, 113, 460, 543, 66, 36, 215, 216, 247, 337,
	217, 75, -560, 142, -533, 239, 240, 475, 51, 399,
	178, 126, 125, 339, 56, 54, 551, -505, 122, 513,
	514, 515, 516, 192, 193, 58, 165, 166, 359, 383,
	492, 523, 525, 205, 269, 43, 106, 188, 237, 219,
	246, 248, 252, 270, 273, 313, 328, 333, 356, 358,
	432, 467, -641, 552, 487, 69, 70, -566, 402, -567,
	-289, -566, 602, 602, 604, 602, -347, -349, -350, 2,
	28, 139, 599, 2, -471, 2, -472, -476, -221, 263,
	-475, 599, -473, 597, -296, 347, -562, 439, -558, -559,
	-274, -295, -313, 4, -531, -533, 601, -351, 599, 120,
	448, 501, 78, 231, 164, -407, 599, -265, 28, 346,
	517, 604, -348, 390, -452, 599, 346, 187, 349, 60,
	294, 2, 2, 2, 2, 2, 215, -265, 501, 119,
	2, 261, 2, 2, 2, 2, 2, 2, 2, -370,
	215, 2, -296, 554, -370, 215, 2, -370, 215, 2,
	-413, 2, 87, -279, 215, 2, -265, -305, 215, 2,
	-300, -302, -309, 215, 2, -307, -265, -529, 215, 2,
	-528, -524, 10, -523, 5, 4, -531, -535, -532, -534,
	77, -440, 2, -133, 2, 60, -265, 554, 2, 463,
	2, 599, -145, 2, 71, 521, 43, 458, -146, 2,
	-427, 2, -428, -261, -262, -263, -483, -264, 249, 389,
	398, 573, 131, 331, 569, -618, 187, 582, 517, -517,
	-517, -517, -378, 601, 2, 2, 2, 2, 2, 2,
	-476, 215, -296, 2, -293, -520, 4, -531, -535, -532,
	-536, 28, 31, 32, 33, 35, 37, 38, 39, 40,
	57, 65, 66, 72, 76, 78, 87, 93, 102, 110,
	111, 113, 112, 114, 115, 116, 127, 131, 135, 139,
	140, 144, 147, 151, 168, 170, 183, 186, 187, 203,
	206, 209, 222, 236, 241, 243, 263, 267, 274, 282,
	283, 331, 336, 342, 346, 347, 351, 352, 372, 388,
	405, 428, 453, 460, 478, 495, 501, 511, 517, 519,
	526, 534, 535, 543, 545, 553, 558, 560, 561, 562,
	563, -537, 2, -476, 215, 2, -299, 215, -476, -302,
	2, -279, 2, -292, -520, 2, -318, 215, -296, -298,
	-302, -300, 2, 2, 2, 2, -307, 2, -528, 215,
	2, 28, 28, 554, 390, 243, 517, 604, -368, -310,
	-311, -516, 8, -361, -265, 601, -440, 2, -133, -117,
	2, 183, -440, 215, 2, -133, 215, 2, -440, 215,
	2, -133, 215, 2, -604, 2, -528, 215, 215, -265,
	2, 294, 2, 2, 524, 2, 98, 501, 119, 2,
	420, -625, 441, 528, 2, 2, 2, 2, 2, 2,
	2, 501, -284, 2, -265, 183, 485, -307, 215, -308,
	2, 454, -636, 402, -528, 215, 2, 554, -300, 215,
	2, -300, 231, 245, -279, 215, 2, 506, 504, 506,
	504, 187, 2, 243, 2, 243, 2, -477, 2, -478,
	-472, -479, 597, 347, -487, 2, -486, -523, 550, -106,
	599, -106, 599, 458, 599, -528, -296, -296, -440, 2,
	-133, -117, 2, -440, 2, -133, 2, -130, -528, -129,
	599, 187, -440, 2, -133, -117, 2, -440, 2, -133,
	2, -214, 183, 2, 120, 501, -189, 2, 183, 545,
	2, 8, 2, 222, -528, 449, 397, 175, 2, 463,
	2, 464, 74, -414, 569, 74, 187, 2, 187, 2,
	-397, 2, 563, 390, 187, 2, 2, -588, 2, 346,
	187, 2, 187, 2, 187, 2, 187, 2, 187, 2,
	-188, 459, 522, 500, 394, 251, 2, -133, 560, -117,
	251, 250, -440, 560, 2, -610, 183, 447, -440, 2,
	520, 260, 159, 187, -397, 2, 187, 2, 187, 2,
	5, 2, 395, 483, 2, 249, 389, 483, 2, -296,
	501, 554, 454, 120, 28, 2, 446, 2, 2, 88,
	89, 187, 2, 187, 2, 202, 187, 2, 187, 501,
	569, 2, -389, -476, -426, -427, -426, 517, -355, -357,
	-189, 463, 2, -226, -387, -228, 183, -417, -418, -229,
	274, 170, 342, -230, -396, 28, 139, -396, -396, 60,
	600, 600, 11, 12, 76, 41, 590, 591, 592, 593,
	181, 594, 595, 588, 589, 587, 580, 581, 585, 255,
	256, 95, 584, 582, 86, 288, 440, 171, 172, 173,
	174, 417, 229, 34, 230, 14, 15, 16, -321, 33,
	351, 273, 570, 219, 467, 583, 17, 18, 19, 246,
	248, 333, 50, 222, -273, 362, -320, 498, 67, -440,
	-440, -440, -440, -440, -440, -440, -440, 358, 599, -383,
	-435, 597, -221, 599, 599, 599, 599, -516, -221, -440,
	-454, 600, -375, 599, -221, -454, -449, 599, 438, 597,
	599, -457, -440, 5, 5, 5, 599, 601, -569, 564,
	183, 599, 599, 599, 599, 599, 599, 599, 599, 599,
	599, 599, 599, 599, 599, 599, 599, 385, -498, 599,
	-497, 599, -497, -497, 555, -495, 599, 572, 565, 599,
	-495, 599, 599, 599, 599, 599, 599, 599, 599, 599,
	599, 599, 599, 599, 555, 604, -566, -351, 599, -379,
	-481, -440, 592, -379, -379, 346, -372, -440, 106, -400,
	252, 313, 188, 270, 432, 237, -437, 603, -437, -465,
	572, -221, -473, -295, -221, -475, 599, -471, -465, -107,
	-516, -90, -103, -112, -133, -148, -193, -194, 592, -296,
	599, 187, 599, 601, -520, 187, -361, -279, -306, -265,
	-296, -312, -313, -318, 2, 138, -372, -584, 529, 448,
	28, 454, -361, -268, 38, -451, -490, -491, -540, 603,
	-539, -493, -503, -499, -502, 375, 379, -522, 54, 551,
	-505, 242, 4, -531, -533, 239, 240, 475, 51, 399,
	178, 126, 125, 339, 56, 513, 514, 515, 516, 192,
	193, 58, 552, 487, 69, 70, -584, 529, 448, 28,
	454, -361, 183, -361, 2, 2, 154, 2, 2, 2,
	-265, -242, 604, 64, 425, 154, -370, 215, -242, 154,
	-242, 154, -319, 215, -318, -242, 154, -242, 604, 154,
	-242, 604, 154, 601, 604, 154, -361, 2, -413, -519,
	-372, 38, -427, 2, 127, -525, -523, 5, -639, 604,
	272, -324, 287, 330, 211, 347, 567, 340, 131, -527,
	5, 4, -450, -462, 127, 280, 242, -510, -512, 8,
	-511, 9, -513, 590, 591, -518, -517, 109, 601, -520,
	-239, 418, 461, 361, -238, 24, 29, 143, 233, 316,
	548, 160, -337, 234, -334, 365, 154, 479, 538, -598,
	-599, 445, 508, 509, 90, 340, 461, 361, 418, 154,
	-393, -395, 38, 118, 316, 360, 61, 226, 292, 293,
	481, 557, 154, 461, 361, 418, 361, -13, -254, 24,
	143, -256, -251, 461, -599, 99, 418, 576, 423, 371,
	493, 388, -599, -241, 479, 538, -598, -599, 445, 418,
	-240, -339, -334, 365, 154, 603, 24, 143, 418, 461,
	361, -621, -622, 29, 418, 361, -592, -286, -563, 222,
	563, 154, -286, -286, -476, 215, -614, 183, 2, -607,
	-129, 264, 5, 10, -528, -129, -368, 604, 604, -520,
	592, 447, 446, 154, 154, 154, 154, 183, 331, 331,
	2, 2, 2, 2, 2, 189, -601, -626, 2, 2,
	-296, 215, -353, 346, -587, -369, 501, -296, 183, 331,
	43, -299, 215, 2, -302, 554, -592, 331, -301, 215,
	-296, 38, 599, 331, 2, -413, 2, 231, -563, 331,
	-477, -315, -296, -472, -315, 461, -289, 38, -437, -296,
	600, 604, -487, -487, -528, -202, 563, 187, 102, 599,
	599, -214, 563, 563, -484, 604, -483, 222, -529, -130,
	-528, 421, -528, -587, -279, 2, -296, 2, 501, 253,
	-528, -202, 222, -528, -528, -528, -519, 28, 464, 2,
	-188, 459, 522, 89, 464, 2, -296, 501, 120, 231,
	80, -614, 183, 2, -265, -590, 183, -585, 433, 448,
	529, -584, -296, 120, -296, 120, -296, 120, -296, -296,
	2, 2, 2, 2, 2, 85, 2, -133, -440, 2,
	85, 2, 46, 480, -610, 183, 2, 520, 2, 520,
	2, -265, -265, -265, 482, 272, -296, -296, -296, -297,
	-302, 502, 447, -440, 2, -628, 2, 187, 183, 2,
	501, 231, 501, 231, 120, 187, 74, 120, 28, 501,
	444, -242, 604, -269, -226, -387, -519, -388, -387, -227,
	-226, -229, 183, 398, 539, 316, 465, 257, -418, -417,
	28, -440, -422, 177, 315, -440, -420, -442, 590, 591,
	-511, -513, -371, 340, -220, -220, -220, -358, -467, -440,
	388, 231, -492, -490, -490, -294, -520, 513, -440, -440,
	-440, -440, -440, -440, -440, -440, -440, -440, -440, -440,
	-440, -440, -440, -440, -440, -440, -440, -440, -440, -440,
	-440, -440, -440, -440, -440, -440, -440, -440, -440, -440,
	-440, -440, -440, -440, 273, 219, 467, 50, 222, -440,
	517, -440, -440, -440, -440, 310, 331, 336, 526, 168,
	536, 139, 340, -642, 495, 40, -447, -221, -376, 599,
	-461, 35, 478, 28, -454, 599, 2, -435, -440, -436,
	-322, -320, -265, 590, 591, 592, 593, 594, 595, 580,
	581, 582, 14, 15, 16, 585, 589, 587, 588, 181,
	95, 584, 288, 440, 86, 171, 172, 173, 174, 255,
	256, 17, 18, 19, 34, 583, -373, -372, -372, 600,
	553, 28, 139, 592, 2, 600, 604, 38, 600, -440,
	-373, -453, -449, -372, -460, -459, 560, -408, -409, 568,
	297, 123, 213, 295, -410, 452, -514, 8, -520, 592,
	-570, 176, 206, 599, 600, 2, 600, 2, 600, -440,
	2, 600, -440, 2, 600, -440, 2, 600, -440, 2,
	600, 2, 600, 2, -440, -440, -440, -440, -440, -440,
	-440, -372, 8, -514, -514, 513, 513, -514, -514, -514,
	-506, 375, 376, 377, 378, 275, 276, 277, 278, 379,
	380, 381, 382, 302, 303, 304, 305, 298, 299, 300,
	301, 306, 307, 308, 309, 197, 198, 199, 200, 193,
	194, 195, 196, -506, -402, 2, -508, -372, 4, 568,
	297, 123, 213, 295, 452, 5, -402, 2, -403, 2,
	-440, -372, -404, -441, -442, 590, 591, 583, -321, -454,
	-405, 2, -440, -373, -440, 57, 267, 519, -406, -440,
	187, -372, -372, 2, -372, 2, -567, 38, -372, -364,
	604, 187, 38, 4, -364, -364, 599, 600, 604, -401,
	210, 291, 286, 245, -401, -471, -400, 252, -398, 356,
	-398, -398, -465, -280, 597, 605, -520, -465, -464, -463,
	38, -289, 353, -465, -465, 601, 600, -464, 598, -582,
	599, 602, 602, 602, 602, 602, -296, 599, -372, -520,
	601, 484, 2, 600, 246, 246, 246, 246, 246, 439,
	600, 517, -586, -305, -309, 502, 2, 563, -105, 348,
	600, 604, -363, 37, 597, 601, -514, 2, 2, -509,
	555, 599, 599, -409, 599, 187, -586, -309, 502, 2,
	-362, 517, -265, 2, -296, -370, -242, 154, -370, -370,
	-242, 604, 154, -279, -300, -305, -307, -309, -265, -528,
	-529, -242, -301, -618, 600, 521, -428, -323, 398, 477,
	419, 456, 497, 8, 9, 8, 9, 604, -520, 604,
	-619, 93, 517, 78, 448, -258, 281, 517, -431, 215,
	78, -541, -282, 93, -542, -265, 72, 535, 388, 186,
	152, -619, 93, 388, -619, 93, 2, 233, 93, 461,
	482, 28, 60, -476, 41, 41, 28, -617, 329, 268,
	559, 187, 569, 501, 231, 448, 517, 517, -476, -395,
	-490, 118, 292, 293, 60, -515, -510, 590, 591, -515,
	60, -515, -515, -515, 563, -299, -476, 448, 517, 517,
	517, 408, 408, -251, -146, 517, 517, 28, -189, 426,
	127, -640, 582, 408, 604, 41, 41, 28, -617, 329,
	268, 187, 517, -318, -280, 549, 42, 549, 42, 549,
	517, 42, 448, 517, 604, 42, 517, 517, -13, 461,
	-593, -270, 105, 322, 285, 323, 97, 319, 96, 318,
	103, 320, 104, 321, 556, 334, 63, 317, 296, 324,
	-271, -272, 367, 547, 120, -528, -13, -13, 461, 361,
	418, 154, -615, 222, 28, -603, 222, -484, 222, -484,
	-310, -265, 601, -133, -440, -440, -133, -440, -133, 46,
	154, 154, 2, -636, 261, 599, -327, 331, 187, -361,
	-485, 243, 604, -369, -584, 154, -526, -525, 116, 460,
	-394, -393, 331, -301, 215, 2, 154, -351, 331, 148,
	599, 396, 2, 154, -281, 215, -266, -265, -413, -245,
	505, 154, -391, 545, -423, -133, 599, 127, 38, -423,
	-380, -381, -482, -382, -282, 599, -289, -437, -106, -486,
	600, 600, 600, -201, 350, -200, -265, 5, -214, 545,
	-326, -432, -431, -545, -546, -541, 273, 231, 535, 245,
	169, -352, -283, -282, 119, 400, 400, -208, 563, -129,
	-130, 600, -484, 222, 485, -202, -202, -484, -484, -296,
	183, -528, -202, -202, -202, 2, 2, 2, 2, -397,
	-296, -279, -318, -296, 28, 601, -361, -361, -309, -305,
	-397, -279, -397, -279, -397, -279, -133, -440, 482, 2,
	458, 183, 183, 601, -397, -354, 428, 2, 396, 120,
	501, 365, 231, -296, -318, -296, -318, -279, 120, -279,
	121, -296, -476, -388, -227, 347, 257, 465, -420, -421,
	-442, 438, 439, -421, 438, 439, 8, 9, 8, 9,
	-231, 469, 335, -370, 604, -236, 39, 135, 257, -296,
	569, 150, -440, -440, 517, -642, 495, -447, 150, -440,
	310, 336, 526, 168, 536, 139, 340, 187, 599, -441,
	-441, 600, -374, -440, -440, 598, 607, 600, 601, 600,
	-357, 604, -355, -440, -372, -372, 600, 601, -372, -361,
	598, 598, 604, 600, -458, -459, 144, -440, 517, 517,
	517, 517, 599, 600, 601, -575, 357, 599, 599, -440,
	600, 600, 600, 600, 38, 604, 604, 604, 600, 604,
	604, 604, 600, 600, 600, 604, 600, 569, 569, 600,
	600, 600, 600, 604, 600, 604, 600, 187, 600, 600,
	-411, 372, 600, 11, 12, 590, 591, 592, 593, 181,
	594, 595, 588, 589, 587, 580, 581, 582, 86, 288,
	440, 14, 15, 16, -321, 246, 222, -441, -441, -441,
	-441, 600, -445, -446, 187, 183, 38, -406, -406, -406,
	600, 187, -372, 600, 600, 599, -568, 290, 331, 600,
	-434, -433, 561, -481, -365, 2, -471, -291, -520, -434,
	-434, -372, -440, 252, 252, -399, 545, 346, -401, -471,
	-464, -516, -439, -438, 185, 39, 135, 325, 326, 327,
	218, -464, -289, -351, -464, -464, -520, -465, -465, -463,
	600, -583, -516, 600, -366, -474, -562, -357, 601, -520,
	-211, -563, -190, 5, 336, -190, -190, -190, -190, -361,
	517, 517, 222, 25, 373, -490, 597, 598, 8, -520,
	599, -514, -514, -514, -361, 187, 187, 222, 187, -526,
	2, -242, -370, -242, -242, -318, -319, -242, -242, -242,
	-392, 563, -517, -427, 533, 83, 398, 513, -517, -238,
	418, -282, -282, -296, -306, 201, 409, -526, 331, -431,
	215, -244, 331, -490, -290, -265, 599, -415, 565, 257,
	257, 545, -282, -290, 257, 215, -282, 215, -290, 2,
	-290, -594, 398, 341, -440, 60, -335, 279, 396, 332,
	-239, 418, 461, 361, -133, -133, -133, -133, -133, 599,
	-618, 545, 138, -296, -318, -296, -306, -526, -301, 461,
	361, 418, 328, -312, -515, -515, -393, 461, 361, 418,
	-306, -526, -299, -526, -250, 215, -265, -250, 215, 448,
	-279, 408, 569, 45, -640, -240, -133, -133, -133, -133,
	-133, 599, -280, -241, 418, 5, 215, -282, 5, -282,
	215, 5, -265, -282, -306, -526, -622, 24, 143, -282,
	-306, -526, -270, -528, 336, 541, -279, -592, -286, 448,
	517, 517, -476, -611, -612, 203, 431, 448, 434, -361,
	-129, -205, 563, -129, -199, 227, 592, -589, -528, -265,
	554, -265, -325, -328, -326, -282, -217, -218, 565, 563,
	154, -316, -296, 597, -202, -528, -296, -485, -307, -308,
	154, -351, 331, -528, 38, 154, 599, 2, 2, -300,
	346, 331, -281, 215, -246, 145, -640, -279, -434, -365,
	-390, -425, 428, 346, -352, 550, -289, -390, -367, 604,
	187, 582, 601, -352, -480, 592, -106, -106, -202, 604,
	599, 582, 582, 599, -528, -528, 600, 604, -244, -296,
	-281, 231, 231, -288, -266, 600, 604, 601, 599, 582,
	582, -210, 350, -209, 146, 259, 244, 471, 472, 473,
	474, 137, 470, 124, -484, -208, -130, 187, 187, -65,
	563, 501, -202, 603, 434, -265, -397, -397, -397, 458,
	458, -265, -361, -292, -279, -296, -293, -318, 183, 183,
	-279, 539, -421, 347, 284, -467, -237, 571, -296, 603,
	-440, -440, 150, 150, -440, -441, -441, -440, 150, 187,
	599, -440, -451, 33, 33, 600, 604, -436, -440, -320,
	600, 553, -357, -357, 600, 592, -520, 603, 600, -449,
	147, -440, 511, 297, 213, 295, -410, 295, -410, -410,
	-514, 5, -520, 592, -576, -285, 599, -265, 561, -356,
	352, 600, -492, -490, -440, -440, -440, -440, -440, -514,
	-495, -495, -510, -510, -440, -445, -440, -492, -490, -441,
	-441, -441, -441, -441, -441, -441, -441, -441, -441, -441,
	-441, -441, -441, -441, -441, -441, -441, -441, -441, 139,
	331, 340, -441, -446, -445, -440, -440, -490, 600, 600,
	600, -372, -105, 599, 290, -384, 206, -440, -484, 604,
	-384, -384, 600, -471, -471, 599, -440, 252, 598, 604,
	606, 582, -351, 601, -463, -464, 598, 600, 604, 600,
	604, -424, 38, 600, -520, -434, -213, -212, 136, 53,
	107, 134, 336, -361, -361, 448, 349, 5, 8, 597,
	598, 601, -514, 600, 600, 600, -361, -361, 448, -361,
	-242, -242, 119, 316, -440, 517, 517, 60, 222, 154,
	331, 547, -547, -542, 152, -440, 599, 231, 599, 599,
	2, -233, -234, -235, 143, 461, 24, -620, 2, 545,
	154, -242, 154, -242, 567, -335, 599, 599, 517, 448,
	-258, 517, 563, -372, -440, -203, 127, -519, -599, 603,
	-599, 603, 448, 517, 517, 448, 517, 517, 331, 154,
	563, 167, 167, 569, -250, 563, -372, 517, -494, 48,
	26, 331, -300, -242, 154, 517, 517, 529, 461, -528,
	336, -13, -306, -526, -301, 461, 361, 418, -591, -362,
	-591, 203, -309, -615, -484, -207, 350, -206, 146, 430,
	137, 259, 224, -484, -205, 187, 243, 563, -301, 2,
	600, 600, 604, -548, 38, 344, 344, 599, -296, -86,
	563, -483, -516, -595, 563, 43, -299, 38, 154, -592,
	-133, -301, -488, -489, 5, 38, -296, 154, 346, 331,
	-247, 266, -640, -524, -563, -357, -390, -379, 332, 91,
	600, -434, -381, -365, -440, 2, 600, -200, -201, -528,
	-528, -528, -202, -214, -214, -432, -329, 599, -281, -266,
	599, -214, -283, 2, -529, -528, -528, 604, 599, 582,
	582, 582, 582, -208, -484, -129, -133, 350, -296, 592,
	-397, -341, -340, 365, 340, -341, 438, 438, 347, 177,
	262, -236, -280, -440, -440, 150, 33, 33, -440, -440,
	-451, 600, -440, -440, -372, 598, 5, -440, 600, 600,
	8, -440, 600, 601, -577, -265, -440, 600, 60, 600,
	600, 604, 604, 600, 600, 600, 600, 600, 600, 600,
	-446, 187, 139, 340, 599, 600, 600, -105, -448, 209,
	60, -471, -448, -448, -399, -361, -471, -438, -280, 597,
	-520, -516, -474, 599, 601, -212, 582, -528, -528, 563,
	-309, 598, 2, 597, -520, 600, -309, 119, -282, -282,
	501, 438, -250, 388, -431, 154, -549, 93, -551, 76,
	169, 102, 331, 336, 535, 388, 72, 127, 346, 405,
	-630, -631, -632, 38, 574, 575, 600, -359, -468, -562,
	599, -265, -359, -361, 331, 490, 127, 346, 331, 127,
	346, 558, 119, 2, 529, 79, -282, -290, -361, -361,
	-296, -306, -526, 161, 600, 604, 582, 2, 592, 592,
	-306, -526, -301, -306, -526, -299, 154, -250, 363, 167,
	161, 600, -280, 5, 5, 154, -277, 76, -282, 5,
	-282, -300, 119, 448, 517, 517, 346, 346, 349, -611,
	-612, -205, 604, 599, 582, 582, -205, -529, -129, 2,
	-351, -342, 233, -282, -546, -543, -544, 388, -550, -552,
	169, 388, -133, 2, -216, -215, -265, 5, 599, -327,
	350, 598, -597, 350, -596, 117, 137, -526, -394, -133,
	-301, -351, 600, 604, 148, -416, 545, -280, -296, 154,
	-248, 265, -640, -524, -245, -419, -417, 140, 599, 346,
	-133, -357, 582, 600, 600, 119, 119, 225, 153, -359,
	599, 599, -361, 119, 600, -209, -210, -528, -129, -528,
	-528, -208, -484, -66, -67, 231, 93, 370, -293, 501,
	231, 599, 599, -236, -440, -440, -440, 600, -357, -520,
	592, -571, 365, 600, -467, -440, -440, -441, 187, 599,
	-451, 600, -572, 562, -440, -385, -386, -440, 436, 108,
	207, -572, -572, 600, -516, 2, -528, 2, 517, 597,
	2, 187, 222, 38, 408, -431, -290, -294, -287, -265,
	169, 215, 336, 558, -415, 257, 599, -441, 539, -296,
	599, 2, 214, 214, 30, 60, -633, 131, 236, 600,
	604, -469, -276, -265, -440, -469, 600, 600, 336, 539,
	336, 558, -440, 539, -490, 599, -242, -242, 600, 600,
	-440, 517, -519, 100, -517, 2, -599, -250, -279, -440,
	517, 5, -242, -294, -242, -242, -277, 529, -306, -526,
	-301, -616, 502, 455, 530, 449, 190, 437, -616, 183,
	-206, -207, -528, -129, -205, 38, -332, 235, 2, -548,
	257, -287, 257, -629, 563, 600, 604, 582, 582, -325,
	-217, -87, -88, 518, -483, 604, 599, 582, -351, 38,
	5, 599, 599, -265, 346, 599, -280, -260, 92, -640,
	-524, -246, -390, 332, -361, 93, -419, -447, -202, 599,
	599, -330, 81, 94, 128, 214, 191, 232, 482, 488,
	28, -330, 600, -359, -359, 600, 599, -202, 600, 604,
	28, 599, 28, 599, -296, -318, -372, -372, 600, -357,
	60, 604, 600, 600, -441, -451, 600, -573, -574, -285,
	604, 599, 599, 462, 598, -361, 2, -361, -250, 388,
	-265, -551, -287, 331, 545, -440, -441, -267, 599, -440,
	599, 599, 38, 127, 236, 132, 220, -430, -634, 101,
	491, 223, -468, -236, 600, -429, 545, 405, -441, -277,
	-359, 599, 599, 599, 582, 187, 599, -494, -242, -300,
	517, 2, 2, 187, -591, 600, -605, 403, -133, -336,
	-337, 222, 599, -331, 346, 119, 316, -215, -517, -517,
	600, 38, -88, 9, -596, -597, -440, 38, -133, -488,
	-359, -296, -359, 346, -252, -251, 274, -524, -247, 600,
	-290, -390, -529, -529, -429, 600, 600, -529, -67, -361,
	-361, 600, 600, -578, 396, 439, 208, -372, -358, 600,
	604, 38, -386, 2, 2, 2, 408, 154, 210, 600,
	-553, 289, -265, 600, -394, -394, 38, 132, 220, -332,
	599, -237, -469, -332, 210, -296, -600, 545, 600, -344,
	-343, -340, -346, -345, -340, -372, -517, 100, 363, -372,
	-277, -361, -361, 346, -608, 188, -607, 5, 10, -217,
	363, -360, -470, -282, 82, 119, -342, -133, 600, -133,
	600, 600, -416, 600, -296, -249, -530, 408, 410, -640,
	-248, -434, 600, 600, -430, -429, -338, -334, 600, 600,
	600, 600, -579, -580, 50, 532, 109, -440, -579, -579,
	-574, -576, 169, 563, -554, -557, -556, 579, 468, 188,
	364, 600, 490, 557, 600, 600, -338, -361, 563, -351,
	-440, -429, 600, 604, 550, 600, 604, 550, 600, 187,
	600, -242, -613, 563, -242, -616, -204, 563, 46, -331,
	-296, 600, 604, 387, 133, 143, -332, -629, -429, 599,
	-430, 599, -257, -256, -640, -510, -260, 140, -202, -202,
	-332, -430, -218, 563, -202, -581, 152, -580, 384, 182,
	438, 384, 182, -581, -581, -287, 55, -556, 579, -557,
	579, 539, 133, -633, 600, 55, -553, -332, -343, 222,
	-345, 187, 363, 203, 187, 446, -607, 30, -259, -258,
	599, -470, 439, 439, 2, -336, -331, -430, -359, -332,
	-359, -253, -254, -255, -361, -252, 332, 539, -338, -332,
	-434, 109, 206, 512, 316, 33, 582, -555, 316, 425,
	64, 461, -555, -434, 582, -554, 599, 599, 349, -361,
	350, -361, 2, -217, -332, 600, -338, 600, -249, 461,
	-218, -338, 438, 354, -580, -440, 23, 336, 127, -440,
	-633, -372, -372, -242, -201, 599, 600, -331, -338, -429,
	-218, -430, -257, -380, -434, -218, 600, 600, -201, -243,
	64, 425, -259, -218, -430, -434, -332, -253, -434, -434,
	-333, -334, 517, 600, -434, -332, -338, 599, -338, -218,
	-372, -218, -434, 600, -434, -333,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 553, 554, 556, 557, 558, 560,
	561, 563, 565, 567, 568, 569, 571, 572, 574, 575,
	576, 577, 578, 580, 582, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	649, 651, 0, 1410, 1412, 1414, 1416, 0, 804, 0,
	36, 37, 39, 0, -2, 337, 339, 341, 0, 369,
	371, 372, 374, 376, 377, 378, 380, -2, 0, 486,
	487, 489, 491, -2, 0, 1013, 1015, 0, 638, 640,
	0, 1018, 1020, 0, 0, 661, 662, 0, 1521, -2,
	653, 655, 657, 659, 729, 731, 733, 735, 737, 739,
	741, 743, 745, 747, 748, 750, 752, 754, 756, 758,
	759, 761, 763, 765, 766, 768, 769, 771, 773, 775,
	777, 779, 781, 783, 785, 787, 789, 791, 793, 795,
	-2, 798, 799, 800, -2, -2, 0, -2, -2, -2,
	1428, 41, 43, 45, 47, 49, 51, 53, 55, 57,
	59, 430, 432, 434, 436, 438, 441, 443, 445, 1579,
	493, 495, 497, 499, 501, 503, 505, 0, -2, 1593,
	0, 0, 61, 62, 63, 64, 65, 66, 67, 68,
	69, 70, 71, 109, 110, 111, 112, 113, 114, 115,
	116, 75, 76, 77, 79, 80, 81, 82, 86, 87,
	88, 89, 90, 91, 92, 93, 94, 95, 107, 73,
	0, 0, 1552, 1554, 1556, 1558, -2, 0, 0, 5,
	9, 11, 13, 15, 17, 19, 21, 23, 25, 27,
	29, 555, 559, 562, 564, 566, 570, 573, 579, 581,
	583, 538, 539, 542, 2288, 2306, 2307, 2308, 2311, 2312,
	2313, 2314, 2315, 2316, 2767, 2849, 2850, 2338, 2339, 2340,
	2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348, 2349, 2350,
	2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360,
	2361, 2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370,
	2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380,
	2381, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390,
	2391, 2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400,
	2401, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410,
	2411, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420,
	2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430,
	2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440,
	2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450,
	2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460,
	2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470,
	2471, 2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480,
	2481, 2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490,
	2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500,
	2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510,
	2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519, 2520,
	2521, 2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530,
	2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540,
	2541, 2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550,
	2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560,
	2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570,
	2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580,
	2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590,
	2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599, 2600,
	2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610,
	2611, 2612, 2613, 2614, 2615, 2616, 2617, 2618, 2619, 2620,
	2621, 2622, 2623, 2624, 2625, 2626, 2627, 2628, 2629, 2630,
	2631, 2632, 2633, 2634, 2635, 2636, 2637, 2638, 2639, 2640,
	2641, 2642, 2643, 2644, 2645, 2646, 2647, 2648, 2649, 2650,
	2651, 2652, 2653, 2654, 2655, 2656, 2657, 2658, 2659, 2660,
	2661, 2662, 2663, 2664, 2665, 2666, 2667, 2668, 2669, 2670,
	2671, 2672, 2673, 2674, 2675, 2676, 2677, 2678, 2679, 2680,
	2681, 2682, 2683, 2684, 2685, 2686, 2687, 2688, 2689, 2690,
	2691, 2692, 2693, 2694, 2695, 2696, 2697, 2698, 2699, 2700,
	2701, 2702, 2703, 2704, 2705, 2706, 2707, 2708, 2709, 2710,
	2711, 2712, 2713, 2714, 2715, 2716, 2717, 2718, 2719, 2720,
	2721, 2722, 2723, 2724, 2725, 2726, 2727, 2728, 2729, 2730,
	2731, 2732, 2733, 2734, 2735, 2736, 2737, 2738, 2739, 2740,
	2741, 2742, 2743, 2744, 2745, 2746, 540, 541, 1199, 0,
	607, 605, 2273, 608, 2565, 610, 612, 480, 481, 482,
	483, 484, 485, 0, 631, 621, 1591, 632, 634, 635,
	636, 637, 602, 600, 0, 631, 2342, 629, 1408, 1409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 492, 0,
	0, 0, 0, -2, 0, 0, 0, 0, 0, 0,
	0, 409, 1257, 1258, 1259, 1393, 1394, 2612, 1435, 0,
	234, 650, -2, -2, 2732, -2, 684, 685, -2, -2,
	699, 702, 694, 2736, 0, 2615, 2599, -2, 705, 1411,
	1413, 1415, 802, 803, 2292, 0, 0, 0, 0, 0,
	38, 40, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 244, -2, -2, -2, -2, 0, 0, 2660, 2394,
	2241, 2308, 2244, 2239, 338, 340, 342, 343, 0, 0,
	0, 0, 0, 0, 370, 373, 375, 379, -2, 381,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	408, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, -2, -2, 0, 0, 0, 0, 0, 0,
	0, 0, 1076, 1068, 1069, 1315, 0, 0, 0, -2,
	488, 490, 543, 544, 0, 1580, 1580, 551, 552, -2,
	0, 0, 0, 0, 308, 296, 1014, 1016, 1017, 0,
	0, 0, 0, 639, 641, 0, 0, 276, 1019, 1021,
	1022, 0, 0, 0, 0, 0, 310, 0, 0, 654,
	656, 658, 660, 730, 732, 734, 736, 738, 740, 742,
	744, 746, 749, 751, 753, 755, 757, 760, 762, 764,
	767, 770, 772, 774, 776, 778, 780, 782, 784, 786,
	788, 790, 792, 794, 796, 797, 810, 0, 0, 0,
	0, 0, -2, -2, 0, 0, 0, -2, 0, -2,
	-2, -2, 0, 0, 0, 0, 0, 0, 0, -2,
	0, 0, 909, 0, 0, 0, -2, -2, -2, 0,
	0, 0, 0, 0, -2, -2, 0, 0, 0, 0,
	-2, 994, 0, 0, 813, 815, 816, 817, 818, 819,
	820, 0, 882, 907, 908, 918, 801, 0, 1239, 1581,
	1437, 1418, 1432, 1437, 1420, 1421, 1422, 1423, 1424, 1429,
	1431, 1425, 1426, 1427, 42, 44, 46, 48, 50, 52,
	54, 56, 58, 60, 431, 433, 435, 437, 439, 442,
	444, 446, -2, 1550, 1551, 494, 496, 498, 500, 502,
	504, 506, 642, 0, 644, 0, 814, -2, 0, 1585,
	1585, 1585, 0, 0, 1551, 1549, 0, 647, 648, 709,
	710, 1855, 0, 0, 0, 0, 0, 0, 0, 0,
	2115, 1943, 0, 711, -2, 1976, 1978, 2707, 2538, 2732,
	2114, 1980, 1981, 1982, 1983, 1984, 0, 1986, 1987, 1988,
	1989, 1990, 1991, 0, 1993, 0, 1998, 1999, 2000, 0,
	2714, 2218, 2302, -2, 0, 0, 2720, 2298, 0, 2081,
	2016, -2, -2, 2325, 2304, 1787, 1788, 1789, 1790, 1791,
	-2, -2, 2750, 2020, 2021, 2022, 2023, 2024, 2025, 2026,
	2027, 2028, 2029, 2030, 0, 2695, 2715, 2716, 2721, 2723,
	2717, 2704, 2041, 2408, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, 1814, 1823, -2,
	-2, -2, -2, -2, -2, -2, 2708, 2709, 2726, 2729,
	2735, 2740, 2741, 2713, 2722, 2749, 2751, 2752, 2753, 2754,
	2755, 2756, 2757, 2758, 2759, 2760, 2761, 2762, 2763, 2764,
	2765, 2766, 1815, -2, -2, -2, -2, 1568, 2579, 1571,
	1199, 1569, 1553, 1555, 0, 1557, 0, 0, 0, 1562,
	1588, 1586, 0, 1637, 1566, 1567, 1657, 1657, 1681, 0,
	1662, 0, 1681, 1580, 1708, 0, 1668, 2604, 2017, 2018,
	0, 2308, 2303, -2, -2, 2747, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 603, 0, 609, 611, 0,
	0, 0, 630, 1590, 0, 0, 0, 0, 0, 0,
	0, 412, 413, 414, 415, 416, 2715, 0, 0, 0,
	421, 0, 423, 424, 425, 426, 427, 428, 429, 205,
	2715, 511, 536, 0, 205, 2715, 514, 205, 2715, 517,
	0, 520, 1313, 205, 2715, 523, 2269, 205, 2715, 526,
	528, 2277, 205, 2715, 532, 2284, 2282, 533, 2715, 535,
	313, 311, 312, 2321, 2322, 2329, 2330, 2331, 2332, 2748,
	2750, 1404, 1405, 1406, 1407, 0, 1434, 1314, 652, 0,
	678, 0, 682, 683, 2703, -2, 0, 2624, 687, 688,
	-2, 690, 1438, 1442, 1443, 1444, 1445, 1446, 0, 0,
	0, 0, 1451, 0, 0, 0, 0, 679, 680, 697,
	698, 703, 706, 0, 805, 806, 807, 808, 809, 72,
	0, 2715, 1708, 74, 0, 2263, 2333, 2334, 2335, 2336,
	2337, 2768, 2769, 2770, 2771, 2772, 2773, 2774, 2775, 2776,
	2777, 2778, 2779, 2780, 2781, 2782, 2783, 2784, 2785, 2786,
	2787, 2788, 2789, 2790, 2791, 2792, 2793, 2794, 2795, 2796,
	2797, 2798, 2799, 2800, 2801, 2802, 2803, 2804, 2805, 2806,
	2807, 2808, 2809, 2810, 2811, 2812, 2813, 2814, 2815, 2816,
	2817, 2818, 2819, 2820, 2821, 2822, 2823, 2824, 2825, 2826,
	2827, 2828, 2829, 2830, 2831, 2832, 2833, 2834, 2835, 2836,
	2837, 2838, 2839, 2840, 2841, 2842, 2843, 2844, 2845, 2846,
	2847, 2848, 78, 0, 2715, 83, 0, 2715, 0, -2,
	96, 0, 108, 0, 2266, 117, 0, 2715, 0, 2238,
	-2, 0, 217, 297, 298, 299, 0, 1043, -2, 2715,
	1251, 1253, 1253, 0, -2, 0, 0, 0, 1004, 2235,
	2240, 1005, 2259, 1006, 2245, 0, 344, 345, 346, 347,
	348, 0, 349, 2715, 351, 352, 0, 354, 355, 2715,
	357, 358, 0, 360, 0, 256, 262, 2715, 2715, 383,
	385, 0, 387, 388, 0, 390, 0, 0, 0, 394,
	-2, 410, 0, 407, 397, 398, 400, 401, 402, 403,
	404, 0, 450, 448, 2274, 0, 0, -2, 2715, 0,
	1040, 0, 0, 1293, -2, 2715, 1244, 0, 1300, 2715,
	1296, 0, -2, 0, 1578, 2715, 1455, 1072, 1073, 1074,
	1075, 1720, 477, 0, 1486, 0, 1488, 0, 1507, 1714,
	1657, 0, 0, 1719, 0, -2, 596, 2291, -2, 546,
	0, 547, 0, -2, 0, 325, 0, 0, 1023, 1025,
	1026, 1028, 1029, 1032, 1033, 1034, 1035, 1694, 277, 279,
	0, 0, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402,
	1403, 0, 0, 663, 0, 0, 811, 812, 0, 0,
	825, 826, 827, 0, 325, 2616, 2574, 2429, 834, 0,
	837, 840, -2, 0, 0, 0, 0, 844, 0, 849,
	850, 851, 0, -2, 0, 858, 860, 1012, 862, 0,
	0, 864, 0, 868, 0, 871, 0, 873, 0, 875,
	-2, -2, -2, 883, 884, -2, 889, -2, 0, 893,
	-2, 0, 896, 0, 899, -2, 0, 909, 905, 906,
	0, 0, 0, 0, 926, 927, 0, 936, 0, 939,
	940, 941, 0, 945, 946, 0, 948, 949, 950, 951,
	0, 2687, 2621, 2394, 0, 957, -2, 963, 965, 0,
	-2, 0, 981, 0, 985, 0, 0, 993, 0, 0,
	821, 822, 205, 1712, 1417, -2, 1419, 0, -2, 0,
	643, 0, 646, 1610, 1536, 1533, 0, 1607, 1608, 1537,
	0, 0, 0, 1544, 0, 1583, 1584, 0, 0, 0,
	1523, 1524, 0, 0, 0, 0, 2120, 2121, 2122, 2123,
	2136, 2124, 2125, 2135, 2133, 2134, 2126, 2127, 2132, 2146,
	2147, 2137, 2138, 2128, 2141, 2139, 2140, 2142, 2143, 2144,
	2145, 0, 0, 2151, 0, 2129, 2130, 2131, 2159, 0,
	0, 2160, 0, 2162, 0, 2152, 2148, 2149, 2150, 0,
	1922, 1924, 2226, 0, 0, 0, 2158, 2153, 2154, 1860,
	1861, 1862, 1863, 1864, 1897, 1901, 1902, 0, 0, 1977,
	2223, 2222, 1979, 0, 0, 2174, 0, 1992, -2, 0,
	2115, 2169, 0, 0, 2001, 2002, 2003, 0, 0, 2174,
	0, 0, 2217, 2013, 2014, 1852, 0, 0, 2083, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1801, 1800, 0,
	1802, 0, 1803, 1804, 1811, 1824, 0, 0, 0, 0,
	1828, 0, 0, 0, 0, 0, 0, 0, 2198, -2,
	0, 0, 0, 0, 1816, 0, 1570, 0, 0, 1641,
	2227, 2231, 2232, 1641, 1641, 0, 0, 2175, 1705, 1705,
	0, 0, 1700, 1700, 1700, 1698, 1681, 0, 1681, 1691,
	0, 1681, 1681, 0, -2, 1662, 0, 0, 1691, 0,
	1675, 584, 586, 588, 590, 591, 592, 594, 1709, 1710,
	0, 0, 0, 0, 2309, 0, 0, 0, 0, 2281,
	0, 0, 2294, 0, 366, 0, 0, 0, 2670, 2615,
	0, -2, 614, 633, 1580, 0, 2177, 1735, 1739, 0,
	1741, 1742, 1743, 1744, 1745, 0, 0, 1736, -2, 1812,
	1814, 1835, 2326, 2327, 2328, 1795, 1796, 1797, 1798, 1799,
	1807, 1794, 1794, 1794, 1805, 1834, 1826, 1834, 1830, 1780,
	1781, 1782, 1817, 1818, 1819, 1820, 0, 2670, 2615, 0,
	-2, 623, 0, 0, 1518, 411, 0, 418, 419, 420,
	0, 507, 0, 203, 204, 0, 205, 2715, 512, 0,
	515, 0, 205, 2715, 2233, 521, 0, 524, 0, 0,
	530, 0, 0, 0, 0, 0, 205, 1520, 0, 0,
	0, 0, -2, 692, 700, 701, 224, 225, 0, 1440,
	0, 1447, 720, 721, 722, 1449, 1450, 0, 1452, 695,
	723, 724, 725, 726, 727, 728, 0, 2247, 2248, 2249,
	2250, 2253, 2254, 0, 0, 693, 713, 696, 0, 707,
	118, 1390, 0, 0, 161, 0, 1390, 1390, 0, 0,
	0, 0, 188, 0, 1111, 0, 0, 0, 0, 133,
	146, 157, 130, 131, 0, 0, 0, 0, 0, 0,
	84, 1221, 0, 1224, 0, 0, 0, 0, 0, 0,
	0, 1237, 0, 0, 0, 0, 0, 98, 99, 0,
	0, 104, 105, 0, 145, 0, 0, 0, 0, 0,
	1483, 0, 140, 120, 0, 0, 133, 147, 159, 0,
	192, 194, 1108, 0, 0, 0, 0, 0, 0, 0,
	0, 216, 226, 0, 0, 0, 1245, 0, 0, 0,
	1577, 0, 0, 0, 0, 2715, 1388, 0, 1373, 0,
	1694, 2478, -2, -2, 277, 1694, 1003, 0, 0, 2309,
	2243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	386, 389, 391, 392, 393, 0, 1292, 0, 399, 440,
	1170, 2715, 0, 0, 467, 462, 0, 464, 0, 0,
	0, 1220, 2715, 1218, 2278, 0, 1242, 0, 1199, 2715,
	2276, 0, 0, 0, 1301, 2318, 1310, 1314, 1473, 0,
	479, 0, 1489, 1491, 0, 0, 1715, 0, 1717, 1657,
	1580, 0, 0, 0, 0, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 283, 0, 1693, 0, 0, 1694,
	277, 2590, 325, 325, 1694, 665, 1694, 667, 0, 0,
	828, 829, 0, 325, 325, 325, 835, 836, 838, 839,
	-2, -2, -2, -2, 841, 842, 933, 0, 0, 0,
	932, 852, 0, 854, 857, 861, 0, 997, 2599, 2615,
	2670, 1010, 933, 2394, 933, 2394, 933, 2394, 872, 874,
	877, 921, 929, 888, 895, 0, 890, 894, 897, 900,
	0, 902, 910, 0, -2, 0, 913, 0, 915, 0,
	917, 933, 934, 937, 944, 947, 952, 953, 954, 955,
	2289, 956, -2, 960, 961, 0, 972, 977, 978, 974,
	0, 0, 0, 0, 0, 0, 988, 989, 0, 0,
	996, 1238, 0, 1430, 1610, 1536, 645, 1527, 1609, 1528,
	1535, 1538, 0, 0, 1540, 0, 1542, 0, 1605, 1606,
	1613, 1614, 0, 1624, 1625, 1617, 0, -2, 0, 0,
	1620, 1621, 1546, 0, 1563, 1564, 1565, 1594, 1597, 1329,
	0, 2849, 1856, 1730, 1857, 1858, 2262, 0, 1865, 1866,
	1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, -2, -2,
	-2, -2, -2, -2, -2, -2, 1883, 1884, 1885, 1886,
	1887, 1888, 1889, 1890, 1891, 1892, 1893, -2, -2, -2,
	1898, 1899, 1900, -2, 2161, 2163, 0, 2226, 0, -2,
	0, -2, -2, -2, -2, 1919, 0, 1921, 1926, 1928,
	1930, 0, 0, 0, 0, 2225, 1940, 2209, 2210, 0,
	0, 2117, 2118, 2119, 1925, 0, 1944, 2224, 2221, 0,
	0, 2155, 0, 2120, 2121, 2122, 2123, 2124, 2125, 2126,
	2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136,
	2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146,
	2147, 2148, 2149, 2150, 2151, 2152, 0, 2173, 1593, 2005,
	0, 0, 0, 0, 2012, 1997, 2171, 0, 2170, 0,
	0, 0, 2181, 0, 2216, 2212, 0, 2260, 1851, 1838,
	1839, 1840, 1841, 1842, 1843, 1853, 0, 2257, 2295, 2301,
	2091, 0, 0, 0, 2042, 2043, 2044, 2045, 2046, 0,
	2048, 2049, 0, 2051, 2052, 0, 2054, 2055, 0, 2057,
	2058, 2059, 2060, 2061, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756,
	1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766,
	1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776,
	1777, 1778, 1779, 0, 0, 2063, 0, 2184, -2, -2,
	-2, -2, -2, -2, -2, -2, 0, 2065, 0, 2067,
	2175, 2195, 0, 0, 1945, 0, 0, 0, 0, 2115,
	0, 2070, 2175, 2203, 0, 0, 0, 0, 0, 2175,
	0, 2208, 0, 2077, 0, 2079, 1572, 0, 0, 1725,
	0, 0, 0, 2230, 1725, 1725, 0, 1636, 0, 0,
	1701, 1702, 1703, 1704, 0, 0, 1705, 0, 1695, 1699,
	1696, 1697, 1691, 1654, 0, 0, 2264, 1691, 1660, 1690,
	0, 1199, 1680, 1691, 1691, 0, -2, 1664, 1681, 0,
	0, 585, 587, 589, 593, 595, 0, 0, 1593, -2,
	0, -2, 327, 1198, 0, 0, 0, 0, 0, 604,
	606, 0, 0, 527, 0, 0, 620, 0, 598, 0,
	601, 0, 1726, 1729, 0, 0, 1740, 1746, 1747, 0,
	-2, 0, 0, 1836, 0, 0, 0, 0, 0, 628,
	0, 0, 0, 422, 537, 205, 509, 0, 205, 205,
	518, 0, 0, 205, 529, 205, 2285, 205, 2283, 314,
	534, 1519, 237, 0, 681, 0, 1439, 1448, 0, 717,
	0, 719, 0, 2251, 2255, 2252, 2256, 0, 708, 0,
	0, 0, 0, 1389, 0, 1336, 0, 0, 165, 2715,
	0, 207, 0, 0, 1163, 2270, 0, 1153, 0, 0,
	2415, 0, 0, 0, 0, 0, 181, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 127, 0, 0, 0,
	132, 0, 0, 0, 0, 0, 0, 0, 0, 1222,
	1223, 1225, 1232, 1234, 0, 1228, 2258, 0, 0, 1229,
	0, 1231, 1233, 1235, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 106, 1254, 0, 0, 1255, 1256, 1461,
	1462, 0, 1482, 1483, 0, 0, 0, 129, 0, 0,
	0, 0, 0, 0, 2237, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1247, 0,
	1288, 1286, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273,
	1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283,
	1284, 1285, 0, 0, 0, -2, 1249, 1250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 0, 316,
	2236, 2246, 0, 1030, 1031, 350, 353, 356, 359, 243,
	0, 0, 395, 0, 0, 1078, 1053, 0, 0, 449,
	325, 0, 0, 463, 467, 2287, 1038, 221, 222, 223,
	1216, 1219, 0, 1199, 2715, 1265, 0, 0, 0, 0,
	0, 0, 1299, 0, 0, 2715, 2265, 2317, 2318, 1475,
	1483, 0, 1725, 0, 1505, 1492, 0, 0, 0, 1505,
	1509, 1510, 1512, 1513, 0, 0, 1716, 1722, 545, 597,
	1580, 1580, 325, 323, 2541, 321, 318, 320, 0, 0,
	0, 1079, 1081, 1082, 1083, 207, 0, 2318, 1153, 2467,
	2318, 0, 1495, 1497, 0, 0, 0, 271, 0, 280,
	1694, 278, 283, 0, 0, 0, 461, 664, 669, 823,
	0, 325, 831, 832, 833, 879, 923, 931, 976, 843,
	845, 846, 847, 0, 0, 0, 1011, 1007, 1008, 1009,
	863, 933, 866, 933, 869, 933, 892, 898, 911, 904,
	912, 0, 0, 0, 925, 942, 0, 959, 0, 0,
	0, 0, 0, 0, 0, 982, 983, 984, 986, 991,
	990, 995, 1713, 1531, 1532, 1534, 0, 1543, 0, 0,
	1619, -2, -2, 1618, 1622, 1623, -2, -2, -2, -2,
	1539, 0, 1548, 1545, 0, 1604, 1327, 1328, 0, 0,
	0, 0, -2, -2, 0, 0, 0, 1941, 0, -2,
	1920, 1923, 1927, 1929, 1931, 0, 0, 0, 0, 0,
	0, 2164, 0, 2166, 1942, 2219, 2222, 2157, 0, 2113,
	0, 0, 1592, 1593, 1593, 0, 2011, 0, 2172, 0,
	2179, 2180, 0, 2004, 0, 2213, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2015, 0, 0, 0, 0,
	2047, 2050, 2053, 2056, 0, 0, 0, 0, 2036, 0,
	0, 0, 2040, 1806, 1792, 0, 1834, 1832, 1833, 1827,
	1834, 1831, 1784, 0, 1783, 0, 2062, 0, 2064, 2066,
	0, 0, 2068, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1948, 1949, 1950,
	1970, 2069, 2201, 2202, 0, 0, 0, 0, 0, 0,
	2075, 0, 2207, 2076, 2078, 1580, 0, 1573, 0, 1638,
	1627, 1724, 0, 2228, 1694, 1640, 1642, 2229, 2267, 1627,
	1627, 0, 2176, 0, 0, 1685, 0, 0, 0, 1687,
	1658, 0, 0, 1652, 0, 1646, 1647, 1648, 1649, 1650,
	1651, 1659, 1199, 1689, 1661, 1665, 2295, 0, 1691, 0,
	1676, 0, 1678, 1711, 0, 1670, 1673, 0, 0, 2310,
	1725, 0, 361, 367, 368, 362, 363, 364, 365, 613,
	0, 0, 0, 0, 0, 2178, 0, 1731, 0, 1737,
	0, 0, 0, 0, 622, 0, 0, 0, 0, 1517,
	417, 508, 205, 513, 516, 2234, 205, 522, 525, 531,
	233, 0, 677, -2, 715, 716, 718, 0, 714, 162,
	1390, 0, 0, 1332, 1334, 1338, 1344, 1347, 0, 167,
	2715, 179, 0, 1127, 0, 2268, 0, 0, 0, 0,
	0, 0, 1392, 0, 0, 2715, 205, 2715, 205, 182,
	184, 187, 0, 191, 189, 0, 1115, 0, 0, 1118,
	119, 1390, 0, 0, 122, 126, 134, 135, 138, 0,
	0, 0, 144, 0, 0, 0, 1349, 1353, 1361, 0,
	0, 0, 1226, 1227, 1230, 1236, 85, 0, 0, 0,
	1357, 1359, 1365, 97, 100, 2715, 2279, 102, 2715, 0,
	1331, 0, 0, 0, 0, 193, 124, 128, 136, 137,
	139, 0, 1367, 121, 0, 220, 0, 0, 210, 205,
	2715, 0, 212, 0, 213, 214, 227, 0, 0, 0,
	1041, 1042, 1287, 1240, 1241, 0, 1252, 1246, 0, 0,
	0, 0, 0, 1369, 1370, 0, 0, 0, 1388, 1385,
	1694, 239, 0, 1694, 247, 0, 2242, 0, 263, 382,
	0, 0, 0, 0, 1077, 1181, 0, 1048, 0, 0,
	0, 455, 451, 0, 460, 466, 465, 471, -2, 0,
	0, 0, 0, -2, 0, 0, 1303, 1297, 1298, 0,
	0, 0, 0, 2715, 1477, 1483, 0, 1578, 1593, 478,
	1484, 1505, 0, 0, 0, 1494, 1490, 1487, 1725, 0,
	0, 0, 0, 0, 1718, 1721, 548, 549, 300, 0,
	0, 0, 0, 0, 325, 0, 0, 0, 1084, 1088,
	0, 2318, 2318, 0, 2272, 0, 0, 0, 0, 0,
	0, 281, 0, 284, 0, 0, 0, 289, 290, 291,
	292, 293, 294, 0, 283, 273, 1694, 0, 0, 666,
	0, 0, 830, 0, 853, 856, 865, 867, 870, 914,
	916, 933, 943, 966, 967, 1105, 0, 1105, 0, 0,
	987, 1541, 0, 1616, 1547, 1598, 1599, 0, 1329, 0,
	1859, 1904, 0, 0, -2, 0, 0, 1908, 0, 0,
	0, -2, 0, 0, 0, 2165, 2167, 0, 2221, 2156,
	2006, 0, 0, 0, 2010, 1994, 1995, 0, 2116, 2182,
	2211, 2215, 0, 1844, 1845, 1846, 1847, 1848, 1849, 1850,
	0, 2261, 2296, 2300, 2089, 2090, 2094, 2275, 0, 0,
	0, 2019, 0, 0, 0, 0, 0, 0, 0, 0,
	1825, 1829, 0, 0, 2183, 2194, 2196, 1946, 1947, 1951,
	1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, -2,
	-2, -2, 1964, 1965, 1966, -2, -2, -2, 1971, 0,
	0, 0, 2197, 2199, 2200, 2204, 2205, 0, 2072, 2073,
	2074, 2206, 0, 1580, 1574, 1635, 0, 1723, 1639, 0,
	1635, 1635, 1587, 1683, 0, 0, 1707, 0, 1655, 0,
	1656, 0, 1688, 0, 1663, 1666, 1667, 1677, 0, 1669,
	0, 1672, 0, 2006, -2, 326, 328, 330, 0, 333,
	334, 0, 0, 616, 617, 0, 615, 599, 0, 0,
	1733, 0, 0, 1809, 1813, 1837, 625, 626, 0, 624,
	510, 519, 235, 0, 1692, 0, 0, 0, 0, 0,
	0, 206, 1125, 1162, 0, 0, 0, 1152, 0, 0,
	1168, 169, 170, 171, 0, 0, 0, 0, 180, 0,
	0, 177, 0, 186, 190, 1112, 0, 0, 0, 0,
	1337, 0, 0, 0, 141, 142, 143, 0, 148, 0,
	149, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1467, 1468, 0, 1458, 0, 0, 0, 208, 0,
	0, 0, 1326, 229, 0, 0, 0, 0, 0, 1290,
	1291, 1248, 1350, 1354, 1362, 0, 0, 0, 0, 631,
	0, 636, 1387, 0, 247, 245, 0, 248, 0, 251,
	252, 0, 254, 247, 241, 0, 0, 0, 1199, 396,
	1051, 1169, 0, 1171, 0, 1049, 0, 0, 1170, 447,
	0, 454, 0, 468, 0, 0, 1220, 0, 0, 1243,
	1263, 1199, 0, 1302, 1304, 0, 1312, 0, 0, 0,
	1479, 1483, 0, 1472, 1473, 1612, 1485, 1503, -2, 0,
	0, 1593, 1511, 1508, 1514, 1515, 0, 322, 0, 317,
	319, 0, 303, 0, 0, 1080, 1085, 0, 0, 0,
	0, 0, 1496, 1498, 0, 1024, 1027, 0, 0, 0,
	0, 0, 0, 272, 283, 1694, 309, 0, 824, 848,
	924, 968, 1104, 0, 0, 970, 0, 0, 1615, 1602,
	1603, 1600, 1329, 1906, 1910, 0, 0, 0, 1912, -2,
	0, 1934, -2, -2, 2168, 2220, 1985, 1593, 2007, 2009,
	1996, 2214, 1854, 0, 2096, 2093, 0, 2080, 0, 2031,
	2032, 0, 0, 2035, 2037, 2038, 2039, 1793, 1786, 1785,
	2193, 0, 0, 0, 0, 2071, 1575, 0, 2085, 0,
	0, 1643, 2085, 2085, 1684, 0, 1686, 1653, 1644, 0,
	2296, 1679, 1671, 0, 0, 331, 0, 335, 336, 0,
	0, 1727, 1732, 0, 1738, 1808, 0, 236, 163, 164,
	1341, 1345, 1342, 0, 166, 0, 1126, 0, 1129, 0,
	0, 0, 0, 1136, 1153, 0, 0, 0, 0, 0,
	0, 1155, 0, 1154, 0, 0, 1185, 0, 1317, 1324,
	0, -2, 0, 0, 0, 173, 196, 0, 0, 0,
	0, 199, 1391, 175, 0, 0, 205, 205, 0, 0,
	1333, 1335, 1348, 0, 0, 0, 0, 151, 0, 0,
	1351, 1355, 1363, 1358, 1360, 1366, 0, 103, 0, 1469,
	0, 0, 1368, 218, 219, 0, 205, 0, 205, 211,
	205, 1326, 0, 0, 0, 0, 0, 0, 0, 1371,
	1372, 238, 0, 0, 0, 0, 240, 315, 247, 384,
	0, 1099, 0, 1181, 1173, 1174, 1175, 0, 1180, 1182,
	0, 0, 1065, 1050, 0, 1061, 0, 0, 1078, 1053,
	0, 452, 469, 0, 472, 0, 475, 1039, 1217, 1260,
	1199, 0, 1294, 0, 0, 0, 0, 0, 0, 0,
	1481, 1483, 0, 1474, 1475, 1505, 1611, 0, 0, 0,
	1493, 1612, 0, 324, 325, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 325, 285, 0, 286, 287, 288,
	295, 274, 275, 668, 670, 0, 0, 676, 1103, 0,
	0, 0, 0, 1601, 1914, -2, -2, 1935, 0, 2297,
	2299, 1593, 0, 2082, 1595, 0, 0, -2, 0, 0,
	0, 1576, 1559, 0, 1634, 1626, 1628, 1630, 2602, 2389,
	2714, 1560, 1561, 1706, 0, 1674, 332, 618, 0, 0,
	1734, 0, 0, 0, 1343, 168, 0, 1130, 1131, 2271,
	1133, 0, 1135, 1137, 1138, 1139, 0, 1142, 0, 2320,
	0, 1147, 1150, 1151, 0, 0, 1164, 1186, 0, 1195,
	0, 1319, 1329, 1323, 0, 1321, 1197, 0, 172, 198,
	174, 200, 195, 0, 1326, 0, 176, 185, 0, 0,
	123, 0, 0, 2383, 154, 152, 150, 101, 1330, 125,
	0, 220, 228, 1325, 230, 215, 205, 0, 1352, 1356,
	1364, 0, 1379, 1380, 1381, 1382, 0, 0, 0, 0,
	249, 0, 250, 253, 0, 0, 1114, 0, 1052, 1172,
	0, 1183, 1184, 1055, 0, 1054, 0, 0, 0, 0,
	0, 453, 456, 0, 459, 0, 0, 0, 0, 0,
	1305, 1303, 0, 1311, 0, 0, 0, 1457, 0, 0,
	1476, 1477, 476, 1499, 0, 0, 1505, 1516, 302, 0,
	0, 1086, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096,
	1097, 1087, 1197, 0, 0, 1161, 0, 307, 282, 0,
	672, 0, 674, 0, 969, 971, 0, 0, 2008, 2100,
	0, 0, 2033, 2034, -2, 0, 1974, 2084, 2086, 0,
	0, 0, 0, 0, 1645, 619, 1728, 627, 1339, 0,
	1346, 1128, 1132, 0, 0, 0, 1143, 1203, 0, 0,
	1220, 1220, 1156, 0, 0, 1189, 1190, 1099, 0, 1191,
	1192, 1193, 1318, 1604, 1324, 1099, 0, 0, 197, 202,
	0, 0, 0, 0, 0, 0, 0, 209, 231, 1326,
	0, 1383, 1384, 0, 0, 246, 267, 0, 1261, 1053,
	1113, 0, 0, 1063, 0, 1066, 0, 1062, 1059, 1060,
	1051, 0, 457, 458, 473, 0, 474, 0, 1264, 0,
	0, 1312, 0, 0, 1464, 1456, 1483, 1478, 1479, 1725,
	1502, 1506, 0, 0, 1195, 1197, 1110, 0, 671, 0,
	0, 979, 980, 0, 0, 0, 0, 2095, 1596, 1975,
	0, 0, 1629, 1631, 1632, 1633, 1340, 0, 0, 1141,
	1208, 0, 0, 0, 0, 0, 1157, 1187, 1188, 1110,
	0, 1322, 1320, 1166, 0, 1199, 178, 0, 1197, 0,
	1119, 0, 0, 1122, 0, 0, 155, 2383, 153, 0,
	205, 1376, 205, 0, 270, 0, 261, 259, 260, 1055,
	0, 0, 1177, 1179, 0, 1067, 1099, 1065, 470, 1262,
	1295, 1197, 0, 1195, 0, 1471, 1483, 1465, 1466, 0,
	1481, 0, 325, 325, 1099, 1195, 1053, 1109, 325, 673,
	675, 2092, 2112, 2101, -2, 2673, 2390, 0, 2112, 2112,
	2087, 2088, 0, 0, 1144, 1204, 1205, 0, 1200, 1201,
	1202, 2319, 1145, 1146, 1148, 1149, 1185, 0, 0, 1203,
	201, 1099, 1116, 0, 0, 1117, 0, 0, 158, 0,
	160, 232, 1374, 0, 1377, 0, 255, 0, 0, 1047,
	0, 1176, 0, 0, 0, 0, 1114, 1055, 1195, 0,
	1099, 0, 1460, 1470, 0, 1480, 1457, 0, 304, 305,
	1110, 1099, 1725, 0, 306, 2097, 0, 0, 2103, 2104,
	2105, 2106, 2107, 2098, 2099, 1134, 0, 1206, 0, 1207,
	0, 0, 0, 1725, 1194, 0, 1208, 183, 1120, 0,
	1123, 0, 156, 0, 0, 0, 265, 266, 1044, 1046,
	0, 1178, 1056, 0, 1058, 1053, 1064, 1099, 0, 1110,
	0, 1453, 1459, 1463, 2280, 1464, 1500, 0, 1053, 1110,
	1160, 0, 2109, 2110, 0, 0, 0, 1209, 0, 1212,
	1213, 0, 1210, 1165, 0, 1185, 0, 0, 1375, 205,
	0, 0, 1057, 1055, 1110, 1197, 1053, 1195, 1471, 0,
	1725, 1053, 2108, 2111, 2102, 1140, 1211, 1214, 1215, 1196,
	1167, 0, 0, 1378, 268, 0, 1102, 1047, 1053, 1195,
	1725, 1099, 1460, 1725, 1158, 1725, 1107, 0, 0, 1098,
	1100, 1101, 1045, 1725, 1099, 1308, 1110, 1454, 1501, 1159,
	1121, 1106, 0, 269, 1306, 1110, 1053, 0, 1053, 1725,
	0, 1725, 1309, 1107, 1307, 1124,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 588, 3, 594, 589, 3,
	599, 600, 592, 590, 604, 591, 601, 593, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 607, 3,
	580, 582, 581, 585, 603, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 597, 3, 598, 595, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 605, 587, 606, 583,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 584, 57923, 586, 57924, 596,
	57925, 602, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1475
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1480
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1482
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1485
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1486
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1487
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1488
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1489
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1490
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1491
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1492
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1493
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1494
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1495
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1502
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1511
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1513
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1516
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1517
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1518
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1519
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1520
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1521
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1522
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1523
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1524
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1525
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1584
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 74:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1610
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 78:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1624
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 83:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1642
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 84:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1646
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 85:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1650
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1680
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 97:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1684
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.user()}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1691
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1703
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1713
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1720
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1730
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1737
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1747
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1756
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1763
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1787
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1819
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 118:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1823
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1827
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1833
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1837
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1843
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1852
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1863
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1867
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1873
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1881
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1891
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1895
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1904
		{
		}
	case 133:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1905
		{
		}
	case 134:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1909
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1918
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:      tree.TableIndexName{Table: name},
				Rows:              sqlDollar[6].union.slct(),
				RelocateNonVoters: true,
			}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1930
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1935
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateNonVoters: true}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1942
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1954
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1961
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1969
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1974
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1978
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1983
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1989
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1997
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2008
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 148:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2018
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 149:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2028
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 150:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2037
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 151:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2048
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 152:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2054
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 153:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2062
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2066
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2070
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 156:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2074
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2080
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2085
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2096
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2100
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2106
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2110
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 163:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2117
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2122
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2127
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2132
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2137
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2142
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2147
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2152
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2157
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2162
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2167
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2172
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2176
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 176:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2181
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2190
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2202
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2212
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2219
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2222
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2228
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 183:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2235
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2243
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2250
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2259
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2268
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2273
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2280
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2288
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2289
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2293
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2297
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2303
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2311
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2315
		{
			sqlVAL.union.val = nil
		}
	case 197:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2321
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2325
		{
			sqlVAL.union.val = nil
		}
	case 199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2331
		{
			sqlVAL.union.val = true
		}
	case 200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2335
		{
			sqlVAL.union.val = false
		}
	case 201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2341
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2345
		{
			sqlVAL.union.val = nil
		}
	case 203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2352
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2356
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 205:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2360
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2366
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 207:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2370
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 208:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2395
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2406
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2417
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2426
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2436
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2445
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2454
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2463
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 216:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2467
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2470
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2474
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2481
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2488
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2493
		{
			sqlVAL.union.val = sqlDollar[1].union.user()
		}
	case 222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2495
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2500
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2507
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2514
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 233:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2538
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2545
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2549
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2553
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 237:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2557
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 238:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2587
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2599
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2609
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2620
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2629
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 243:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2633
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2637
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2645
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 246:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2649
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 247:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2653
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2660
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2664
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2673
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2677
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2681
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2685
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2689
		{
			sqlVAL.union.val = &tree.BackupOptions{IncludeDeprecatedInterleaves: true}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2771
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.targetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2782
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 258:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2787
		{
			sqlVAL.union.val = nil
		}
	case 259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2795
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2799
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2809
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2815
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2819
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2823
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{IfNotExists: false}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2832
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2836
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2840
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 268:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2846
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 269:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2850
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 270:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2854
		{
			sqlVAL.union.val = nil
		}
	case 271:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2887
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2896
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2906
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2915
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2925
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2932
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2936
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2940
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2946
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2950
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2957
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 282:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2961
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 283:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2965
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2972
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2976
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2985
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2989
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2993
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2997
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3001
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3005
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3009
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3013
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3017
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3021
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3027
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3033
		{
			return unimplemented(sqllex, "alter function")
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3037
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3041
		{
			return unimplemented(sqllex, "alter aggregate")
		}
	case 300:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3078
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3083
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3087
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3093
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3098
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3103
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3108
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3113
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3117
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 309:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3133
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3136
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3140
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3144
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3152
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3156
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3162
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 316:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3166
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3172
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3176
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3180
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3184
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3190
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3194
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3200
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 324:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3204
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 325:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3208
		{
			sqlVAL.union.val = nil
		}
	case 326:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3220
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3234
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3240
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 329:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3244
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3250
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3254
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3262
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3266
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3270
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3274
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3278
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3286
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3287
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3288
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3289
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3299
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3307
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3309
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3313
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3316
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3326
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3335
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3343
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3345
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3349
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3352
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3362
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3371
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3379
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3381
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3385
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3388
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3392
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3396
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3400
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3404
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3417
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3420
		{
			return unimplemented(sqllex, "comment on extension")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3424
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3429
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 370:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3441
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3443
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3444
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3447
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3448
		{
		}
	case 381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3449
		{
			return helpWith(sqllex, "CREATE")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3456
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3459
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 384:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3462
		{
			return unimplemented(sqllex, "create extension if not exists with")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3463
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3466
		{
			return unimplemented(sqllex, "create access method")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3467
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3468
		{
			return unimplemented(sqllex, "create cast")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3469
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3470
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3471
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3472
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3473
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3474
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3475
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3476
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3477
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3478
		{
			return unimplemented(sqllex, "create publication")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3479
		{
			return unimplemented(sqllex, "create rule")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3480
		{
			return unimplemented(sqllex, "create server")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3481
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3482
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3483
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3484
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3487
		{
		}
	case 406:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3488
		{
		}
	case 407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3491
		{
		}
	case 408:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3492
		{
		}
	case 409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3495
		{
		}
	case 410:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3496
		{
		}
	case 411:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3499
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3500
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3501
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3502
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3503
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3504
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3505
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 418:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3506
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 419:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3507
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3508
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3509
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3510
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3511
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3512
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3513
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3514
		{
			return unimplemented(sqllex, "drop server")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3515
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3516
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3517
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3520
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3521
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3522
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3523
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3524
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3526
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3527
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3528
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3529
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3539
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3547
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3551
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 450:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3555
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3561
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3565
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3574
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3581
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3587
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3593
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3597
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3608
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3620
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3635
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3643
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3653
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3657
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3663
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3667
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3674
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 467:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3678
		{

			sqlVAL.union.val = nil
		}
	case 468:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3695
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3706
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 470:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3710
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 471:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3714
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3721
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3725
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3734
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3738
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 476:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3751
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3761
		{
			return helpWith(sqllex, "DELETE")
		}
	case 478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3764
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3765
		{
		}
	case 480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3773
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3776
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3777
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3778
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3779
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3780
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3789
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3790
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3791
		{
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3792
		{
			return helpWith(sqllex, "DROP")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3795
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3796
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3797
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3798
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3799
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3800
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3801
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3809
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 508:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3813
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 509:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3817
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 510:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3826
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 511:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3834
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 512:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3842
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 513:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3846
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 514:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3849
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 515:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3857
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 516:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3861
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3864
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 518:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3872
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 519:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3881
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3889
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 521:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3897
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 522:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3905
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3912
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 524:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3919
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 525:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3927
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3934
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3938
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3944
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3948
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 530:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3957
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3965
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3972
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3980
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3984
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3987
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 536:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3991
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3996
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4009
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4014
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4016
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4021
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 542:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4025
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4048
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4055
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4057
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4065
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4073
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4081
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4089
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4100
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4108
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4111
		{
			return helpWith(sqllex, "DELETE")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4113
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4114
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4115
		{
			return helpWith(sqllex, "INSERT")
		}
	case 570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4118
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4120
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4123
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4128
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4129
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4130
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4135
		{
			return helpWith(sqllex, "DELETE")
		}
	case 587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4136
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4137
		{
			return helpWith(sqllex, "INSERT")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4139
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4143
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4144
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4148
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4152
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 598:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4162
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 599:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4170
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4178
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4182
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 602:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4186
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4196
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 604:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4203
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 605:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4211
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4215
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 607:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4219
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4229
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4233
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4237
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4241
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4244
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 613:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4267
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4271
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4275
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4279
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4283
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4293
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 619:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4297
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.nameList(),
			}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4308
		{
			return unimplemented(sqllex, "grant privileges on sequence")
		}
	case 621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4311
		{
			return helpWith(sqllex, "GRANT")
		}
	case 622:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4334
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4338
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4342
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4346
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4350
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 627:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4360
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.nameList(),
			}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4371
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4374
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4379
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 631:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4383
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4393
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4397
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4411
		{
			return helpWith(sqllex, "RESET")
		}
	case 641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4412
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4420
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4424
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4427
		{
			return helpWith(sqllex, "RESET")
		}
	case 645:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4435
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4438
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4449
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4452
		{
			return helpWith(sqllex, "USE")
		}
	case 650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4456
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4457
		{
		}
	case 652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4458
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4462
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4463
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4464
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4465
		{
			return helpWith(sqllex, "USE")
		}
	case 663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4481
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 664:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4496
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 665:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4499
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 666:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4517
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 667:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4525
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 668:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4529
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 669:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4533
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4539
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4543
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4549
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 673:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4553
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4557
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 675:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4561
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4565
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4576
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4579
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4589
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4605
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4608
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4610
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4613
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4616
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4630
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4635
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4652
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4655
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 691:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4657
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 692:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4660
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 693:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4664
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4683
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4687
		{
			return unimplemented(sqllex, "set from current")
		}
	case 697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4691
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4696
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4705
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4710
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4722
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4727
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 705:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4734
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4738
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4744
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4748
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4755
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4776
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4780
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4786
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4790
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4794
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4798
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4802
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4808
		{
			sqlVAL.union.val = tree.Low
		}
	case 721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4812
		{
			sqlVAL.union.val = tree.Normal
		}
	case 722:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4816
		{
			sqlVAL.union.val = tree.High
		}
	case 723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4827
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 724:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4831
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4835
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4840
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4844
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4859
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4860
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4861
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4862
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4863
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4864
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4865
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4866
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4867
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4869
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4870
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4871
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4872
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4873
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4875
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4876
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4877
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4879
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4881
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 772:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4882
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4883
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4884
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4885
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4886
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4887
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4888
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4889
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4890
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4891
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4892
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4893
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4894
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 797:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4895
		{
			return helpWith(sqllex, "SHOW")
		}
	case 801:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4898
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4903
		{
		}
	case 803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4904
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 804:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4907
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4911
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4916
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4921
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4926
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4931
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 810:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4941
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4942
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4943
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 816:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4954
		{
			sqlVAL.str = "client_encoding"
		}
	case 821:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4960
		{
			sqlVAL.str = "timezone"
		}
	case 822:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4961
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 823:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4975
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4979
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4983
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4994
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5002
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 828:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5010
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5016
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5024
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5033
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5042
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5051
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5059
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 835:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5069
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5073
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5076
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5078
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5081
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5083
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5087
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5090
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 843:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5098
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5101
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 845:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5109
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5113
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5117
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5121
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5124
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5132
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5135
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 852:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5141
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles: sqlDollar[4].union.nameList(),
			}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5146
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
			}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5151
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 855:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5158
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5162
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5172
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5181
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5188
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5191
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 861:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5204
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5212
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5220
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5223
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 865:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5225
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5229
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5233
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5236
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 869:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5238
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5242
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5245
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 872:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5253
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5256
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 874:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5258
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5261
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5269
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5272
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 878:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5274
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5277
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 880:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5281
		{
			sqlVAL.union.val = true
		}
	case 881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5283
		{
			sqlVAL.union.val = true
		}
	case 882:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5285
		{
			sqlVAL.union.val = false
		}
	case 885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5302
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5306
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5310
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5313
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5314
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 890:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5315
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5317
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5321
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5325
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5329
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5332
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5334
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5342
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5350
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5358
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 900:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5359
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5369
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5375
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 903:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5377
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5383
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5385
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5391
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5395
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5399
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 909:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5405
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 910:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5409
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5413
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 912:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5424
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5427
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 914:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5429
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5432
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 916:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5434
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5438
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 918:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5441
		{
			sqlVAL.union.val = true
		}
	case 919:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5442
		{
			sqlVAL.union.val = false
		}
	case 920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5450
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5453
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 922:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5455
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5458
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 924:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5466
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5476
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5486
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5489
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5496
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5499
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 930:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5501
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5504
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 932:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5507
		{
			sqlVAL.union.val = true
		}
	case 933:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5508
		{
			sqlVAL.union.val = false
		}
	case 934:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5515
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5519
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5522
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 937:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5529
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5533
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5536
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5543
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5547
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 942:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5551
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5558
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 944:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5562
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5573
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5576
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 947:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5584
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5589
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5594
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5598
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5608
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5612
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5617
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5622
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5627
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5632
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5635
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 958:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5645
		{

			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5649
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 960:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5651
		{

			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5655
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 962:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5663
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5666
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5674
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5677
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 966:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5687
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5691
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5695
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5703
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5711
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5718
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5724
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5726
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5729
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 975:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5731
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5734
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 978:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5738
		{
		}
	case 979:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5747
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5755
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5761
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 982:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5770
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5775
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5779
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5782
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 986:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5791
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5795
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5811
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5817
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5823
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5829
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5836
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5841
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 994:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5845
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5851
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5858
		{

			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5865
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 998:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5870
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5990
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5994
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5998
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6037
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6041
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6046
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6050
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6058
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6067
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6071
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6075
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6082
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6086
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6099
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6100
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6101
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6111
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6112
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6113
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6123
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6132
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6141
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6143
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6147
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6151
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6154
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6159
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6163
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6178
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6186
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6188
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6194
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6202
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6208
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6215
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.user(),
			}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6222
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.user(),
			}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6229
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6240
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6249
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6257
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6296
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Interleave:       sqlDollar[9].union.interleave(),
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[10].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[11].union.storageParams(),
				OnCommit:         sqlDollar[12].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[13].union.locality(),
			}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6312
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Interleave:       sqlDollar[12].union.interleave(),
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[13].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				OnCommit:         sqlDollar[15].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[16].union.locality(),
			}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6330
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6334
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6341
		{

			sqlVAL.union.val = nil
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6347
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6353
		{
			sqlVAL.str = ""
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6357
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6363
		{
			sqlVAL.union.val = nil
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6367
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6372
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6376
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6380
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6384
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6390
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6394
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6400
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6404
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6410
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6424
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6439
		{
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6440
		{
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6441
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6459
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6460
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6461
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6465
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6466
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6467
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6468
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6469
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6474
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6480
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6484
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6490
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6496
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6509
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6518
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6522
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6528
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6533
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6534
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6535
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6536
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6537
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6538
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6539
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6540
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6541
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6546
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6555
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6562
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6567
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6572
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6578
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6585
		{
			sqlVAL.str = ""
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6592
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6598
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6606
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6612
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6618
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6624
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6634
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6640
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6646
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6653
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6660
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6666
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6670
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6676
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6686
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6690
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6696
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6710
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6721
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6725
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6731
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6735
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6739
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6743
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6747
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6751
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6755
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6773
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6777
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6781
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6785
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6791
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6795
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6802
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6806
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6810
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6814
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6824
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6828
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6832
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6837
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6843
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6849
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6853
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6859
		{

			sqlVAL.union.val = true
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6864
		{
			sqlVAL.union.val = false
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6869
		{
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6873
		{
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6876
		{
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6880
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				Interleave:       sqlDollar[8].union.interleave(),
				PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				Predicate:        sqlDollar[11].union.expr(),
			}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6893
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					Interleave:       sqlDollar[9].union.interleave(),
					PartitionByIndex: sqlDollar[10].union.partitionByIndex(),
					StorageParams:    sqlDollar[11].union.storageParams(),
					Predicate:        sqlDollar[12].union.expr(),
				},
			}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6908
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6921
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6933
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6938
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6944
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6951
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					Interleave:       sqlDollar[7].union.interleave(),
					PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
					Predicate:        sqlDollar[10].union.expr(),
				},
			}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6964
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6976
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6987
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6994
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6998
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7004
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7014
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7025
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7029
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7036
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7042
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7053
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7057
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7063
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7069
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7073
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7079
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7083
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7089
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7094
		{
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7095
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7096
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7097
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7098
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7099
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7117
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7121
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7127
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7133
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7139
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7143
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7163
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7167
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7171
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7175
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7184
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7188
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7192
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7196
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7200
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7206
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7212
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7220
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7224
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7228
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7232
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7236
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7255
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7264
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7272
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7276
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7279
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7280
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7283
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7284
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7286
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7287
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7288
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7298
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7300
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7302
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7304
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7306
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7307
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7309
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7310
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7312
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7314
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7322
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7325
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7329
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7333
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7343
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7347
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7350
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7361
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7365
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7369
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.expr(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7373
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.expr(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7377
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7381
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7384
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7388
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7392
		{
			sqlVAL.str = ""
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7398
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7402
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7406
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7414
		{
			sqlVAL.union.val = true
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7418
		{

			sqlVAL.union.val = true
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7423
		{
			sqlVAL.union.val = false
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7433
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7447
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7459
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7471
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7481
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7491
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7495
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7499
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7503
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7507
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7511
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7515
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7519
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7523
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7527
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7531
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7535
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7539
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7543
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7547
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7551
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7555
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7559
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7563
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7572
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7576
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7582
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7586
		{
			sqlVAL.union.val = nil
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7592
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7596
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7601
		{
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7602
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7611
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7619
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7627
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7629
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7631
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7633
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7635
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7637
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7641
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7645
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7651
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7655
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:7675
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				Interleave:       sqlDollar[14].union.interleave(),
				PartitionByIndex: sqlDollar[15].union.partitionByIndex(),
				StorageParams:    sqlDollar[16].union.storageParams(),
				Predicate:        sqlDollar[17].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:7693
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				Interleave:       sqlDollar[17].union.interleave(),
				PartitionByIndex: sqlDollar[18].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[19].union.storageParams(),
				Predicate:        sqlDollar[20].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7712
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				Interleave:       sqlDollar[13].union.interleave(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7729
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				Interleave:       sqlDollar[16].union.interleave(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7746
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7750
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7765
		{
			sqlVAL.union.val = false
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7771
		{
			sqlVAL.union.val = true
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7775
		{
			sqlVAL.union.val = false
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7781
		{
			sqlVAL.union.val = true
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7785
		{
			sqlVAL.union.val = false
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7791
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7795
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7804
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7810
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7816
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7824
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7848
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7849
		{
			sqlVAL.str = ""
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7852
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7853
		{
			sqlVAL.str = ""
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7857
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7861
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7865
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7871
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7877
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7883
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7889
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7897
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7903
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7911
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7919
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7929
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7935
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7942
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7948
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7954
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7961
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7967
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7973
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7979
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7988
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
			}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7996
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
			}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8006
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8012
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8022
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8028
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8040
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8049
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.user(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8059
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8068
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.user(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8080
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8086
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8094
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.user(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8103
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.user(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8114
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8120
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8132
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8138
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8152
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8158
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8166
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8170
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8182
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.nameList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8191
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.nameList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8200
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8209
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8217
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8221
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.nameList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8232
		{
			sqlVAL.union.val = true
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8236
		{
			sqlVAL.union.val = false
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8242
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.nameList(),
			}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8250
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.nameList(),
				GrantOptionFor: true,
			}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8261
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8265
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8269
		{
			sqlVAL.union.val = tree.Types
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8273
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8277
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8281
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8287
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8290
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8296
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8300
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8305
		{
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8306
		{
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8309
		{
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8310
		{
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8318
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8321
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8331
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8339
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8341
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8345
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8348
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8361
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8369
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8371
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8377
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8390
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8398
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8400
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8406
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8414
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8417
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8421
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8422
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8423
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8439
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8442
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8444
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8447
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8457
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8460
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8462
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8465
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8469
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8474
		{
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8475
		{
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8476
		{
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8486
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8490
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8493
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8496
		{
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8497
		{
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8501
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8505
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8511
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8515
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8521
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8525
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8538
		{
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8540
		{
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8544
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8549
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8553
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8557
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8561
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8567
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8573
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8579
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8583
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8589
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8593
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:8603
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
			}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8618
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8633
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8638
		{
			sqlVAL.str = ""
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8643
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8650
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8656
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8661
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8668
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8672
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8678
		{

		}
	case 1467:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8685
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8689
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8693
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8702
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8708
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8712
		{
			sqlVAL.str = ""
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8718
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8722
		{
			sqlVAL.str = ""
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8728
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8732
		{
			sqlVAL.str = ""
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8738
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8742
		{
			sqlVAL.str = ""
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8748
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8756
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8761
		{
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8762
		{
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8777
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8784
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8791
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8802
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8809
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8813
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8822
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8827
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8833
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8837
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8841
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8847
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8851
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8871
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8875
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8882
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8890
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8898
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8902
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8907
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8911
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8928
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8940
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8943
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8946
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8952
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8956
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8969
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8972
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8976
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8987
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.nameList(),
				NewRole:  sqlDollar[6].union.user(),
			}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8993
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9002
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.nameList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9008
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9049
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9055
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9059
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9074
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9078
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9082
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9086
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9090
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9094
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9098
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9102
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9107
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9108
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9111
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9112
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9116
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9120
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9126
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9135
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9136
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9137
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9138
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9141
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9142
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9145
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9146
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9147
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9152
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9187
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9188
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9189
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9211
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9224
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9238
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9250
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9254
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9263
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9272
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9287
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9294
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9306
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9310
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9315
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9321
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9325
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9331
		{
			sqlVAL.union.val = true
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9335
		{
			sqlVAL.union.val = false
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9341
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9351
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9363
		{
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9364
		{
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9368
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9372
		{
			sqlVAL.union.val = nil
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9377
		{
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9378
		{
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9382
		{
			sqlVAL.union.val = true
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9386
		{
			sqlVAL.union.val = false
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9390
		{
			sqlVAL.union.val = false
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9396
		{
			sqlVAL.union.val = true
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9402
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9407
		{
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9408
		{
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9411
		{
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9412
		{
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9416
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9420
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9426
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9432
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9436
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9443
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9447
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9453
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9474
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9479
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9491
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9495
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9499
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9505
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9514
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9525
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9526
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9530
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9534
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9538
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9552
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9556
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9564
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9571
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9593
		{
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9594
		{
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9597
		{
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9598
		{
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9615
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9619
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9624
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9625
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9631
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9632
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9633
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9634
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9638
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9642
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9661
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9664
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9666
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9678
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9681
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9683
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9689
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9693
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9699
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9703
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9708
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9713
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9719
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9724
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9729
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9734
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9741
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9746
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9757
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9761
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9765
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9773
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9806
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9816
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9826
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9834
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9843
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9847
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9851
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9862
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9886
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9892
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9903
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9907
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9913
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9915
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9919
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9925
		{
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9927
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9930
		{
			sqlVAL.union.val = nil
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9931
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9932
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9936
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9940
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9946
		{
			sqlVAL.union.val = true
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9950
		{
			sqlVAL.union.val = false
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9970
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9974
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9978
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9982
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9986
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9990
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9996
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10000
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10007
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10013
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10020
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10026
		{
			sqlVAL.str = tree.AstFull
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10030
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10034
		{
			sqlVAL.str = tree.AstRight
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10038
		{
			sqlVAL.str = tree.AstInner
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10044
		{
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10045
		{
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10069
		{
			sqlVAL.str = tree.AstHash
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10073
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10077
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10081
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10085
		{
			sqlVAL.str = ""
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10098
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10102
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10107
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10108
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10109
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10110
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10114
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10119
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10133
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10137
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10143
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10149
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10159
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10169
		{
			sqlVAL.union.val = true
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10173
		{
			sqlVAL.union.val = false
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10179
		{
			sqlVAL.union.val = true
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10183
		{
			sqlVAL.union.val = false
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10189
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10196
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10208
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10221
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10229
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10230
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10240
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10247
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10248
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10250
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10258
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10259
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10271
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10278
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10287
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10327
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10332
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10339
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10340
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10343
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10344
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10345
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10346
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10347
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10348
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10349
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10350
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10351
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10352
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10353
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10354
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10355
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10356
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10357
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10358
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10359
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10360
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10361
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10362
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10363
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10364
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10365
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10366
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10367
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10368
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10369
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10370
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10371
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10372
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10373
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10374
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10377
		{
			sqlVAL.union.val = types.Geography
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10378
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10379
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10381
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10385
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10389
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10397
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10423
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10431
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10439
		{
			sqlVAL.union.val = nil
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10446
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10450
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10454
		{
			sqlVAL.union.val = types.Int2
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10458
		{
			sqlVAL.union.val = types.Int
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10462
		{
			sqlVAL.union.val = types.Float4
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10466
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10470
		{
			sqlVAL.union.val = types.Float
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10474
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10482
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10490
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10498
		{
			sqlVAL.union.val = types.Bool
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10504
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10517
		{
			sqlVAL.union.val = types.Float
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10523
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10529
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10537
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10541
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10545
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10551
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10563
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10569
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10573
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10577
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10581
		{
			sqlVAL.union.val = types.String
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10590
		{
			sqlVAL.union.val = true
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10591
		{
			sqlVAL.union.val = false
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10596
		{
			sqlVAL.union.val = types.Date
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10600
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10608
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10620
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10622
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10631
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10639
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10652
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10656
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10666
		{
			sqlVAL.union.val = true
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10667
		{
			sqlVAL.union.val = false
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10668
		{
			sqlVAL.union.val = false
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10672
		{
			sqlVAL.union.val = types.Interval
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10676
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10680
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10691
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10699
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10707
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10715
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10723
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10731
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10737
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10746
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10755
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10764
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10770
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10779
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10785
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10795
		{
			sqlVAL.union.val = nil
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10801
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10809
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10846
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10850
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10854
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10858
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10869
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10874
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10878
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10882
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10886
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10890
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10894
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10898
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10902
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10906
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10910
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10914
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10918
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10922
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10926
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10930
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10934
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10938
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10942
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10946
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10950
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10954
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10958
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10962
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10966
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10970
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10974
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10978
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10982
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10986
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10990
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10994
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10998
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11002
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11006
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11010
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11014
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11018
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11026
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11036
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11040
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11044
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11048
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11052
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11056
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11060
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11064
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11068
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11072
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11076
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11080
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11084
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11088
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11092
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11096
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11100
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11104
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11108
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11112
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11116
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11120
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11124
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11128
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11132
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11136
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11139
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11141
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11145
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11149
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11153
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11157
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11161
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11165
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11169
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11173
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11177
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11181
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11185
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11189
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11193
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11197
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11201
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11205
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11222
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11227
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11239
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11243
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11247
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11251
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11255
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11259
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11263
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11267
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11271
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11275
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11279
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11283
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11287
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11291
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11295
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11299
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11303
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11307
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11311
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11315
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11319
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11323
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11327
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11331
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11335
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11343
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11353
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11357
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11361
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11365
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11379
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11387
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11423
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11427
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11431
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11435
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11439
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11444
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11446
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11450
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11454
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11458
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11462
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11466
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11470
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11479
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11486
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11490
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11494
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11500
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11505
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11509
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11513
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11517
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11521
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11524
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11528
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11532
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11535
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11536
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11538
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11544
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11548
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11551
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11560
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11613
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11626
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11638
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11647
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11648
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11653
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11657
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11661
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11667
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11671
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11675
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11679
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11683
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11687
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11693
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11697
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11701
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11705
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11709
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11713
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11717
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11721
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11725
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11729
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11733
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11737
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11741
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11748
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11751
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11753
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11756
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11758
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11762
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11765
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11767
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11771
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11774
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11776
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11780
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11783
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11785
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11789
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11792
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11794
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11797
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11799
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11802
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11804
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11807
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11809
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11812
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11814
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11817
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11819
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11823
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11826
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11827
		{
			return unimplemented(sqllex, "treat")
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11829
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11833
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11837
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11841
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11845
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11848
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11850
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11853
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11859
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11863
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11869
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11873
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11880
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11884
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11890
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11894
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11900
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11908
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11912
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11916
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11923
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11943
		{
			sqlVAL.str = ""
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11949
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11953
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11959
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11967
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11975
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11983
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11989
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12002
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12030
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12034
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12038
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12042
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12049
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12058
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12062
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12066
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12070
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12075
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12088
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12092
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12099
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12111
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Any)
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12115
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Some)
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12119
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.All)
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12135
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Plus)
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12136
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Minus)
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12137
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mult)
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12138
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Div)
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12139
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mod)
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12140
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Pow)
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12141
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LT)
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12142
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GT)
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12143
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.EQ)
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12144
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LE)
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12145
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GE)
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12146
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NE)
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12148
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONExists)
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12149
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitand)
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12150
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitor)
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12151
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitxor)
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12152
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.FloorDiv)
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12153
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Contains)
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12154
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ContainedBy)
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12155
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.LShift)
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12156
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.RShift)
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12157
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Concat)
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12158
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchVal)
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12159
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchText)
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12160
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchValPath)
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12161
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchTextPath)
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12162
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONSomeExists)
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12163
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONAllExists)
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12164
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegMatch)
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12165
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.RegIMatch)
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12166
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegIMatch)
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12167
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Overlaps)
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12168
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12169
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12170
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12175
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12191
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12198
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Like)
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12199
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotLike)
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12200
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ILike)
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12201
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotILike)
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12224
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12228
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12234
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12238
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12242
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12253
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12257
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12263
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12267
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12274
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12280
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12284
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12290
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12294
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12300
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12304
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12310
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12314
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12320
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12324
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12347
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12351
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12355
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12361
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12368
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12372
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12389
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12393
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12397
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12401
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12405
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12411
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12417
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12423
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12427
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12431
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12437
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12449
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12456
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12460
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12466
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12472
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12476
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12483
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12489
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12493
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12500
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12506
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12510
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12515
		{
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12516
		{
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12520
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12524
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12530
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12539
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12543
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12547
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12555
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12559
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12565
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12569
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12588
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12596
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12619
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12628
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12632
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12636
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12640
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12646
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12650
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12665
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12669
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12681
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12685
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12694
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12705
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12714
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12722
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12739
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12824
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12832
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12836
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12842
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12846
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2287:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12854
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12881
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12888
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2296:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12892
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2297:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12896
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2299:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12910
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2300:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12914
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12918
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12931
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12940
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12958
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12971
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2310:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12978
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2318:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13003
		{
			sqlVAL.str = ""
		}
	case 2319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13009
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2320:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13013
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
