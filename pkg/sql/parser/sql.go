// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:78

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}

//line sql-gen.y:724
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACCESS = lex.ACCESS
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const AVAILABILITY = lex.AVAILABILITY
const BACKUP = lex.BACKUP
const BACKUPS = lex.BACKUPS
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BOX2D = lex.BOX2D
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CANCELQUERY = lex.CANCELQUERY
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONNECTION = lex.CONNECTION
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONTROLCHANGEFEED = lex.CONTROLCHANGEFEED
const CONTROLJOB = lex.CONTROLJOB
const CONVERSION = lex.CONVERSION
const CONVERT = lex.CONVERT
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEDB = lex.CREATEDB
const CREATELOGIN = lex.CREATELOGIN
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CSV = lex.CSV
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CURSOR = lex.CURSOR
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DELIMITER = lex.DELIMITER
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FAILURE = lex.FAILURE
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE = lex.FORCE
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYM = lex.GEOMETRYM
const GEOMETRYZ = lex.GEOMETRYZ
const GEOMETRYZM = lex.GEOMETRYZM
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lex.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lex.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lex.GEOMETRYCOLLECTIONZM
const GLOBAL = lex.GLOBAL
const GOAL = lex.GOAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDE_DEPRECATED_INTERLEAVES = lex.INCLUDE_DEPRECATED_INTERLEAVES
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INHERITS = lex.INHERITS
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LINESTRINGM = lex.LINESTRINGM
const LINESTRINGZ = lex.LINESTRINGZ
const LINESTRINGZM = lex.LINESTRINGZM
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALITY = lex.LOCALITY
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const METHOD = lex.METHOD
const MINUTE = lex.MINUTE
const MODIFYCLUSTERSETTING = lex.MODIFYCLUSTERSETTING
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTILINESTRINGM = lex.MULTILINESTRINGM
const MULTILINESTRINGZ = lex.MULTILINESTRINGZ
const MULTILINESTRINGZM = lex.MULTILINESTRINGZM
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOINTM = lex.MULTIPOINTM
const MULTIPOINTZ = lex.MULTIPOINTZ
const MULTIPOINTZM = lex.MULTIPOINTZM
const MULTIPOLYGON = lex.MULTIPOLYGON
const MULTIPOLYGONM = lex.MULTIPOLYGONM
const MULTIPOLYGONZ = lex.MULTIPOLYGONZ
const MULTIPOLYGONZM = lex.MULTIPOLYGONZM
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCANCELQUERY = lex.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lex.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lex.NOCONTROLJOB
const NOCREATEDB = lex.NOCREATEDB
const NOCREATELOGIN = lex.NOCREATELOGIN
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NOMODIFYCLUSTERSETTING = lex.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NON_VOTERS = lex.NON_VOTERS
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOVIEWACTIVITY = lex.NOVIEWACTIVITY
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POINTM = lex.POINTM
const POINTZ = lex.POINTZ
const POINTZM = lex.POINTZM
const POLYGON = lex.POLYGON
const POLYGONM = lex.POLYGONM
const POLYGONZ = lex.POLYGONZ
const POLYGONZM = lex.POLYGONZM
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PRIVILEGES = lex.PRIVILEGES
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const REASSIGN = lex.REASSIGN
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REFRESH = lex.REFRESH
const REGCLASS = lex.REGCLASS
const REGION = lex.REGION
const REGIONAL = lex.REGIONAL
const REGIONS = lex.REGIONS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const REPLICATION = lex.REPLICATION
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETS = lex.SETS
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STREAM = lex.STREAM
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SURVIVE = lex.SURVIVE
const SURVIVAL = lex.SURVIVAL
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const STATEMENTS = lex.STATEMENTS
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TABLESPACE = lex.TABLESPACE
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TRANSACTIONS = lex.TRANSACTIONS
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TYPES = lex.TYPES
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIEWACTIVITY = lex.VIEWACTIVITY
const VIRTUAL = lex.VIRTUAL
const VISIBLE = lex.VISIBLE
const VOTERS = lex.VOTERS
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const NULLS_LA = lex.NULLS_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDE_DEPRECATED_INTERLEAVES",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NONE",
	"NON_VOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:12883

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1490,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	259, 396,
	-2, 0,
	-1, 74,
	241, 234,
	506, 234,
	-2, 0,
	-1, 87,
	229, 1250,
	243, 1250,
	259, 392,
	386, 392,
	396, 1020,
	432, 392,
	444, 1020,
	490, 1020,
	517, 392,
	543, 1020,
	-2, 0,
	-1, 93,
	132, 1490,
	236, 1490,
	528, 1490,
	529, 1490,
	-2, 0,
	-1, 109,
	150, 1461,
	169, 1461,
	182, 1461,
	239, 1461,
	272, 1461,
	338, 1461,
	348, 1461,
	523, 1461,
	-2, 1432,
	-1, 148,
	158, 878,
	258, 878,
	389, 845,
	449, 845,
	489, 845,
	509, 878,
	511, 845,
	-2, 0,
	-1, 150,
	4, 1492,
	21, 1492,
	22, 1492,
	23, 1492,
	24, 1492,
	25, 1492,
	26, 1492,
	27, 1492,
	29, 1492,
	30, 1492,
	36, 1492,
	41, 1492,
	42, 1492,
	44, 1492,
	45, 1492,
	46, 1492,
	47, 1492,
	48, 1492,
	49, 1492,
	50, 1492,
	51, 1492,
	53, 1492,
	54, 1492,
	55, 1492,
	56, 1492,
	58, 1492,
	59, 1492,
	60, 1492,
	61, 1492,
	62, 1492,
	63, 1492,
	64, 1492,
	68, 1492,
	69, 1492,
	70, 1492,
	71, 1492,
	73, 1492,
	74, 1492,
	75, 1492,
	79, 1492,
	80, 1492,
	81, 1492,
	82, 1492,
	83, 1492,
	84, 1492,
	85, 1492,
	88, 1492,
	89, 1492,
	90, 1492,
	91, 1492,
	92, 1492,
	94, 1492,
	96, 1492,
	97, 1492,
	98, 1492,
	99, 1492,
	100, 1492,
	101, 1492,
	103, 1492,
	104, 1492,
	105, 1492,
	107, 1492,
	108, 1492,
	109, 1492,
	117, 1492,
	118, 1492,
	119, 1492,
	120, 1492,
	121, 1492,
	123, 1492,
	124, 1492,
	125, 1492,
	127, 1492,
	128, 1492,
	129, 1492,
	131, 1492,
	132, 1492,
	133, 1492,
	135, 1492,
	136, 1492,
	137, 1492,
	140, 1492,
	141, 1492,
	142, 1492,
	144, 1492,
	145, 1492,
	147, 1492,
	148, 1492,
	149, 1492,
	151, 1492,
	152, 1492,
	153, 1492,
	154, 1492,
	155, 1492,
	156, 1492,
	157, 1492,
	158, 1492,
	159, 1492,
	160, 1492,
	161, 1492,
	162, 1492,
	163, 1492,
	164, 1492,
	165, 1492,
	166, 1492,
	168, 1492,
	174, 1492,
	175, 1492,
	176, 1492,
	177, 1492,
	181, 1492,
	183, 1492,
	184, 1492,
	188, 1492,
	189, 1492,
	190, 1492,
	191, 1492,
	192, 1492,
	193, 1492,
	194, 1492,
	195, 1492,
	196, 1492,
	197, 1492,
	198, 1492,
	199, 1492,
	200, 1492,
	202, 1492,
	203, 1492,
	205, 1492,
	206, 1492,
	208, 1492,
	209, 1492,
	210, 1492,
	211, 1492,
	212, 1492,
	213, 1492,
	214, 1492,
	215, 1492,
	216, 1492,
	218, 1492,
	219, 1492,
	221, 1492,
	222, 1492,
	223, 1492,
	224, 1492,
	225, 1492,
	229, 1492,
	230, 1492,
	231, 1492,
	232, 1492,
	233, 1492,
	236, 1492,
	237, 1492,
	238, 1492,
	240, 1492,
	242, 1492,
	243, 1492,
	245, 1492,
	247, 1492,
	248, 1492,
	249, 1492,
	251, 1492,
	255, 1492,
	256, 1492,
	257, 1492,
	258, 1492,
	259, 1492,
	260, 1492,
	262, 1492,
	263, 1492,
	264, 1492,
	266, 1492,
	267, 1492,
	269, 1492,
	270, 1492,
	273, 1492,
	277, 1492,
	278, 1492,
	279, 1492,
	282, 1492,
	283, 1492,
	284, 1492,
	285, 1492,
	287, 1492,
	288, 1492,
	289, 1492,
	290, 1492,
	291, 1492,
	292, 1492,
	293, 1492,
	294, 1492,
	295, 1492,
	296, 1492,
	297, 1492,
	298, 1492,
	299, 1492,
	300, 1492,
	301, 1492,
	302, 1492,
	303, 1492,
	304, 1492,
	305, 1492,
	306, 1492,
	307, 1492,
	308, 1492,
	310, 1492,
	312, 1492,
	313, 1492,
	314, 1492,
	315, 1492,
	316, 1492,
	317, 1492,
	318, 1492,
	319, 1492,
	320, 1492,
	321, 1492,
	322, 1492,
	323, 1492,
	325, 1492,
	326, 1492,
	328, 1492,
	330, 1492,
	331, 1492,
	333, 1492,
	334, 1492,
	335, 1492,
	336, 1492,
	337, 1492,
	340, 1492,
	343, 1492,
	344, 1492,
	345, 1492,
	346, 1492,
	349, 1492,
	350, 1492,
	351, 1492,
	353, 1492,
	355, 1492,
	356, 1492,
	357, 1492,
	358, 1492,
	359, 1492,
	360, 1492,
	361, 1492,
	362, 1492,
	363, 1492,
	364, 1492,
	365, 1492,
	366, 1492,
	368, 1492,
	369, 1492,
	370, 1492,
	371, 1492,
	372, 1492,
	373, 1492,
	374, 1492,
	375, 1492,
	376, 1492,
	377, 1492,
	378, 1492,
	379, 1492,
	380, 1492,
	381, 1492,
	382, 1492,
	384, 1492,
	385, 1492,
	387, 1492,
	388, 1492,
	389, 1492,
	390, 1492,
	391, 1492,
	392, 1492,
	393, 1492,
	394, 1492,
	395, 1492,
	396, 1492,
	397, 1492,
	398, 1492,
	400, 1492,
	402, 1492,
	403, 1492,
	404, 1492,
	409, 1492,
	411, 1492,
	412, 1492,
	413, 1492,
	414, 1492,
	415, 1492,
	416, 1492,
	417, 1492,
	418, 1492,
	419, 1492,
	421, 1492,
	422, 1492,
	423, 1492,
	425, 1492,
	426, 1492,
	427, 1492,
	428, 1492,
	429, 1492,
	430, 1492,
	432, 1492,
	433, 1492,
	434, 1492,
	435, 1492,
	436, 1492,
	437, 1492,
	438, 1492,
	439, 1492,
	440, 1492,
	441, 1492,
	442, 1492,
	444, 1492,
	445, 1492,
	446, 1492,
	447, 1492,
	448, 1492,
	449, 1492,
	451, 1492,
	452, 1492,
	453, 1492,
	454, 1492,
	455, 1492,
	456, 1492,
	458, 1492,
	459, 1492,
	460, 1492,
	461, 1492,
	462, 1492,
	463, 1492,
	464, 1492,
	466, 1492,
	468, 1492,
	469, 1492,
	470, 1492,
	471, 1492,
	472, 1492,
	473, 1492,
	474, 1492,
	475, 1492,
	476, 1492,
	477, 1492,
	478, 1492,
	479, 1492,
	480, 1492,
	481, 1492,
	482, 1492,
	483, 1492,
	485, 1492,
	486, 1492,
	488, 1492,
	489, 1492,
	491, 1492,
	492, 1492,
	493, 1492,
	494, 1492,
	495, 1492,
	496, 1492,
	497, 1492,
	498, 1492,
	499, 1492,
	501, 1492,
	502, 1492,
	503, 1492,
	504, 1492,
	505, 1492,
	507, 1492,
	509, 1492,
	510, 1492,
	511, 1492,
	512, 1492,
	513, 1492,
	514, 1492,
	516, 1492,
	517, 1492,
	518, 1492,
	519, 1492,
	521, 1492,
	522, 1492,
	525, 1492,
	526, 1492,
	527, 1492,
	528, 1492,
	529, 1492,
	530, 1492,
	531, 1492,
	533, 1492,
	536, 1492,
	537, 1492,
	538, 1492,
	539, 1492,
	540, 1492,
	541, 1492,
	543, 1492,
	544, 1492,
	545, 1492,
	546, 1492,
	548, 1492,
	553, 1492,
	554, 1492,
	555, 1492,
	556, 1492,
	557, 1492,
	558, 1492,
	-2, 0,
	-1, 151,
	1, 1347,
	130, 1347,
	247, 1347,
	327, 1347,
	384, 1347,
	393, 1347,
	562, 1347,
	586, 1347,
	-2, 0,
	-1, 153,
	1, 1347,
	586, 1347,
	-2, 0,
	-1, 154,
	1, 1347,
	586, 1347,
	-2, 0,
	-1, 155,
	1, 1347,
	506, 1347,
	586, 1347,
	-2, 0,
	-1, 183,
	150, 1460,
	169, 1460,
	182, 1460,
	239, 1460,
	272, 1460,
	338, 1460,
	348, 1460,
	523, 1460,
	-2, 1435,
	-1, 229,
	4, 1499,
	5, 1499,
	6, 1499,
	7, 1499,
	8, 1499,
	9, 1499,
	10, 1499,
	21, 1499,
	22, 1499,
	23, 1499,
	24, 1499,
	25, 1499,
	26, 1499,
	27, 1499,
	29, 1499,
	30, 1499,
	36, 1499,
	37, 1499,
	41, 1499,
	42, 1499,
	43, 1499,
	44, 1499,
	45, 1499,
	46, 1499,
	47, 1499,
	48, 1499,
	49, 1499,
	50, 1499,
	51, 1499,
	53, 1499,
	54, 1499,
	55, 1499,
	56, 1499,
	58, 1499,
	59, 1499,
	60, 1499,
	61, 1499,
	62, 1499,
	63, 1499,
	64, 1499,
	65, 1499,
	66, 1499,
	67, 1499,
	68, 1499,
	69, 1499,
	70, 1499,
	71, 1499,
	73, 1499,
	74, 1499,
	75, 1499,
	77, 1499,
	79, 1499,
	80, 1499,
	81, 1499,
	82, 1499,
	83, 1499,
	84, 1499,
	85, 1499,
	88, 1499,
	89, 1499,
	90, 1499,
	91, 1499,
	92, 1499,
	94, 1499,
	96, 1499,
	97, 1499,
	98, 1499,
	99, 1499,
	100, 1499,
	101, 1499,
	103, 1499,
	104, 1499,
	105, 1499,
	106, 1499,
	107, 1499,
	108, 1499,
	109, 1499,
	110, 1499,
	111, 1499,
	112, 1499,
	113, 1499,
	114, 1499,
	115, 1499,
	116, 1499,
	117, 1499,
	118, 1499,
	119, 1499,
	120, 1499,
	121, 1499,
	122, 1499,
	123, 1499,
	124, 1499,
	125, 1499,
	126, 1499,
	127, 1499,
	128, 1499,
	129, 1499,
	131, 1499,
	132, 1499,
	133, 1499,
	135, 1499,
	136, 1499,
	137, 1499,
	140, 1499,
	141, 1499,
	142, 1499,
	144, 1499,
	145, 1499,
	147, 1499,
	148, 1499,
	149, 1499,
	151, 1499,
	152, 1499,
	153, 1499,
	154, 1499,
	155, 1499,
	156, 1499,
	157, 1499,
	158, 1499,
	159, 1499,
	160, 1499,
	161, 1499,
	162, 1499,
	163, 1499,
	164, 1499,
	165, 1499,
	166, 1499,
	167, 1499,
	168, 1499,
	174, 1499,
	175, 1499,
	176, 1499,
	177, 1499,
	181, 1499,
	183, 1499,
	184, 1499,
	187, 1499,
	188, 1499,
	189, 1499,
	190, 1499,
	191, 1499,
	192, 1499,
	193, 1499,
	194, 1499,
	195, 1499,
	196, 1499,
	197, 1499,
	198, 1499,
	199, 1499,
	200, 1499,
	202, 1499,
	203, 1499,
	205, 1499,
	206, 1499,
	208, 1499,
	209, 1499,
	210, 1499,
	211, 1499,
	212, 1499,
	213, 1499,
	214, 1499,
	215, 1499,
	216, 1499,
	217, 1499,
	218, 1499,
	219, 1499,
	221, 1499,
	222, 1499,
	223, 1499,
	224, 1499,
	225, 1499,
	229, 1499,
	230, 1499,
	231, 1499,
	232, 1499,
	233, 1499,
	235, 1499,
	236, 1499,
	237, 1499,
	238, 1499,
	240, 1499,
	242, 1499,
	243, 1499,
	244, 1499,
	245, 1499,
	246, 1499,
	247, 1499,
	248, 1499,
	249, 1499,
	250, 1499,
	251, 1499,
	255, 1499,
	256, 1499,
	257, 1499,
	258, 1499,
	259, 1499,
	260, 1499,
	262, 1499,
	263, 1499,
	264, 1499,
	266, 1499,
	267, 1499,
	268, 1499,
	269, 1499,
	270, 1499,
	271, 1499,
	273, 1499,
	277, 1499,
	278, 1499,
	279, 1499,
	280, 1499,
	281, 1499,
	282, 1499,
	283, 1499,
	284, 1499,
	285, 1499,
	287, 1499,
	288, 1499,
	289, 1499,
	290, 1499,
	291, 1499,
	292, 1499,
	293, 1499,
	294, 1499,
	295, 1499,
	296, 1499,
	297, 1499,
	298, 1499,
	299, 1499,
	300, 1499,
	301, 1499,
	302, 1499,
	303, 1499,
	304, 1499,
	305, 1499,
	306, 1499,
	307, 1499,
	308, 1499,
	310, 1499,
	311, 1499,
	312, 1499,
	313, 1499,
	314, 1499,
	315, 1499,
	316, 1499,
	317, 1499,
	318, 1499,
	319, 1499,
	320, 1499,
	321, 1499,
	322, 1499,
	323, 1499,
	324, 1499,
	325, 1499,
	326, 1499,
	327, 1499,
	328, 1499,
	329, 1499,
	330, 1499,
	331, 1499,
	332, 1499,
	333, 1499,
	334, 1499,
	335, 1499,
	336, 1499,
	337, 1499,
	340, 1499,
	344, 1499,
	345, 1499,
	346, 1499,
	349, 1499,
	350, 1499,
	351, 1499,
	352, 1499,
	353, 1499,
	354, 1499,
	355, 1499,
	356, 1499,
	357, 1499,
	358, 1499,
	359, 1499,
	360, 1499,
	361, 1499,
	362, 1499,
	363, 1499,
	364, 1499,
	365, 1499,
	366, 1499,
	368, 1499,
	369, 1499,
	370, 1499,
	371, 1499,
	372, 1499,
	373, 1499,
	374, 1499,
	375, 1499,
	376, 1499,
	377, 1499,
	378, 1499,
	379, 1499,
	380, 1499,
	381, 1499,
	382, 1499,
	384, 1499,
	385, 1499,
	387, 1499,
	388, 1499,
	389, 1499,
	390, 1499,
	391, 1499,
	392, 1499,
	393, 1499,
	394, 1499,
	395, 1499,
	396, 1499,
	397, 1499,
	398, 1499,
	400, 1499,
	402, 1499,
	403, 1499,
	404, 1499,
	409, 1499,
	411, 1499,
	412, 1499,
	413, 1499,
	414, 1499,
	415, 1499,
	416, 1499,
	417, 1499,
	418, 1499,
	419, 1499,
	421, 1499,
	422, 1499,
	423, 1499,
	424, 1499,
	425, 1499,
	426, 1499,
	427, 1499,
	428, 1499,
	429, 1499,
	430, 1499,
	432, 1499,
	433, 1499,
	434, 1499,
	435, 1499,
	436, 1499,
	437, 1499,
	438, 1499,
	439, 1499,
	440, 1499,
	441, 1499,
	442, 1499,
	444, 1499,
	445, 1499,
	446, 1499,
	447, 1499,
	448, 1499,
	449, 1499,
	450, 1499,
	451, 1499,
	452, 1499,
	453, 1499,
	454, 1499,
	455, 1499,
	456, 1499,
	457, 1499,
	458, 1499,
	459, 1499,
	460, 1499,
	461, 1499,
	462, 1499,
	463, 1499,
	464, 1499,
	466, 1499,
	468, 1499,
	469, 1499,
	470, 1499,
	471, 1499,
	472, 1499,
	473, 1499,
	474, 1499,
	475, 1499,
	476, 1499,
	477, 1499,
	478, 1499,
	479, 1499,
	480, 1499,
	481, 1499,
	482, 1499,
	483, 1499,
	485, 1499,
	486, 1499,
	487, 1499,
	488, 1499,
	489, 1499,
	491, 1499,
	492, 1499,
	493, 1499,
	494, 1499,
	495, 1499,
	496, 1499,
	497, 1499,
	498, 1499,
	499, 1499,
	501, 1499,
	502, 1499,
	503, 1499,
	504, 1499,
	505, 1499,
	507, 1499,
	509, 1499,
	510, 1499,
	511, 1499,
	512, 1499,
	513, 1499,
	514, 1499,
	515, 1499,
	516, 1499,
	517, 1499,
	518, 1499,
	519, 1499,
	521, 1499,
	522, 1499,
	524, 1499,
	525, 1499,
	526, 1499,
	527, 1499,
	528, 1499,
	529, 1499,
	530, 1499,
	531, 1499,
	532, 1499,
	533, 1499,
	536, 1499,
	537, 1499,
	538, 1499,
	539, 1499,
	540, 1499,
	541, 1499,
	543, 1499,
	544, 1499,
	545, 1499,
	546, 1499,
	548, 1499,
	553, 1499,
	554, 1499,
	555, 1499,
	556, 1499,
	557, 1499,
	558, 1499,
	559, 1499,
	567, 1499,
	574, 1499,
	575, 1499,
	576, 1499,
	583, 1499,
	587, 1499,
	-2, 0,
	-1, 726,
	4, 1248,
	21, 1248,
	22, 1248,
	23, 1248,
	24, 1248,
	25, 1248,
	26, 1248,
	27, 1248,
	29, 1248,
	30, 1248,
	36, 1248,
	41, 1248,
	42, 1248,
	44, 1248,
	45, 1248,
	46, 1248,
	47, 1248,
	48, 1248,
	49, 1248,
	50, 1248,
	51, 1248,
	53, 1248,
	54, 1248,
	55, 1248,
	56, 1248,
	58, 1248,
	59, 1248,
	60, 1248,
	61, 1248,
	62, 1248,
	63, 1248,
	64, 1248,
	68, 1248,
	69, 1248,
	70, 1248,
	71, 1248,
	73, 1248,
	74, 1248,
	75, 1248,
	79, 1248,
	80, 1248,
	81, 1248,
	82, 1248,
	83, 1248,
	84, 1248,
	85, 1248,
	88, 1248,
	89, 1248,
	90, 1248,
	91, 1248,
	92, 1248,
	94, 1248,
	96, 1248,
	97, 1248,
	98, 1248,
	99, 1248,
	100, 1248,
	101, 1248,
	103, 1248,
	104, 1248,
	105, 1248,
	107, 1248,
	108, 1248,
	109, 1248,
	117, 1248,
	118, 1248,
	119, 1248,
	120, 1248,
	121, 1248,
	123, 1248,
	124, 1248,
	125, 1248,
	127, 1248,
	128, 1248,
	129, 1248,
	131, 1248,
	132, 1248,
	133, 1248,
	135, 1248,
	136, 1248,
	137, 1248,
	140, 1248,
	141, 1248,
	142, 1248,
	144, 1248,
	145, 1248,
	147, 1248,
	148, 1248,
	149, 1248,
	151, 1248,
	152, 1248,
	153, 1248,
	154, 1248,
	155, 1248,
	156, 1248,
	157, 1248,
	158, 1248,
	159, 1248,
	160, 1248,
	161, 1248,
	162, 1248,
	163, 1248,
	164, 1248,
	165, 1248,
	166, 1248,
	168, 1248,
	174, 1248,
	175, 1248,
	176, 1248,
	177, 1248,
	181, 1248,
	183, 1248,
	184, 1248,
	188, 1248,
	189, 1248,
	190, 1248,
	191, 1248,
	192, 1248,
	193, 1248,
	194, 1248,
	195, 1248,
	196, 1248,
	197, 1248,
	198, 1248,
	199, 1248,
	200, 1248,
	202, 1248,
	203, 1248,
	205, 1248,
	206, 1248,
	208, 1248,
	209, 1248,
	210, 1248,
	211, 1248,
	212, 1248,
	213, 1248,
	214, 1248,
	215, 1248,
	216, 1248,
	218, 1248,
	219, 1248,
	221, 1248,
	222, 1248,
	223, 1248,
	224, 1248,
	225, 1248,
	229, 1248,
	230, 1248,
	231, 1248,
	232, 1248,
	233, 1248,
	236, 1248,
	237, 1248,
	238, 1248,
	240, 1248,
	242, 1248,
	243, 1248,
	245, 1248,
	247, 1248,
	248, 1248,
	249, 1248,
	251, 1248,
	255, 1248,
	256, 1248,
	257, 1248,
	258, 1248,
	259, 1248,
	260, 1248,
	262, 1248,
	263, 1248,
	264, 1248,
	266, 1248,
	267, 1248,
	269, 1248,
	270, 1248,
	273, 1248,
	277, 1248,
	278, 1248,
	279, 1248,
	282, 1248,
	283, 1248,
	284, 1248,
	285, 1248,
	287, 1248,
	288, 1248,
	289, 1248,
	290, 1248,
	291, 1248,
	292, 1248,
	293, 1248,
	294, 1248,
	295, 1248,
	296, 1248,
	297, 1248,
	298, 1248,
	299, 1248,
	300, 1248,
	301, 1248,
	302, 1248,
	303, 1248,
	304, 1248,
	305, 1248,
	306, 1248,
	307, 1248,
	308, 1248,
	310, 1248,
	312, 1248,
	313, 1248,
	314, 1248,
	315, 1248,
	316, 1248,
	317, 1248,
	318, 1248,
	319, 1248,
	320, 1248,
	321, 1248,
	322, 1248,
	323, 1248,
	325, 1248,
	326, 1248,
	328, 1248,
	330, 1248,
	331, 1248,
	333, 1248,
	334, 1248,
	335, 1248,
	336, 1248,
	337, 1248,
	340, 1248,
	344, 1248,
	345, 1248,
	346, 1248,
	349, 1248,
	350, 1248,
	351, 1248,
	353, 1248,
	355, 1248,
	356, 1248,
	357, 1248,
	358, 1248,
	359, 1248,
	360, 1248,
	361, 1248,
	362, 1248,
	363, 1248,
	364, 1248,
	365, 1248,
	366, 1248,
	368, 1248,
	369, 1248,
	370, 1248,
	371, 1248,
	372, 1248,
	373, 1248,
	374, 1248,
	375, 1248,
	376, 1248,
	377, 1248,
	378, 1248,
	379, 1248,
	380, 1248,
	381, 1248,
	382, 1248,
	384, 1248,
	385, 1248,
	387, 1248,
	388, 1248,
	389, 1248,
	390, 1248,
	391, 1248,
	392, 1248,
	393, 1248,
	394, 1248,
	395, 1248,
	396, 1248,
	397, 1248,
	398, 1248,
	400, 1248,
	402, 1248,
	403, 1248,
	404, 1248,
	409, 1248,
	411, 1248,
	412, 1248,
	413, 1248,
	414, 1248,
	415, 1248,
	416, 1248,
	417, 1248,
	418, 1248,
	419, 1248,
	421, 1248,
	422, 1248,
	423, 1248,
	425, 1248,
	426, 1248,
	427, 1248,
	428, 1248,
	429, 1248,
	430, 1248,
	432, 1248,
	433, 1248,
	434, 1248,
	435, 1248,
	436, 1248,
	437, 1248,
	438, 1248,
	439, 1248,
	440, 1248,
	441, 1248,
	442, 1248,
	444, 1248,
	445, 1248,
	446, 1248,
	447, 1248,
	448, 1248,
	449, 1248,
	451, 1248,
	452, 1248,
	453, 1248,
	454, 1248,
	455, 1248,
	456, 1248,
	458, 1248,
	459, 1248,
	460, 1248,
	461, 1248,
	462, 1248,
	463, 1248,
	464, 1248,
	466, 1248,
	468, 1248,
	469, 1248,
	470, 1248,
	471, 1248,
	472, 1248,
	473, 1248,
	474, 1248,
	475, 1248,
	476, 1248,
	477, 1248,
	478, 1248,
	479, 1248,
	480, 1248,
	481, 1248,
	482, 1248,
	483, 1248,
	485, 1248,
	486, 1248,
	488, 1248,
	489, 1248,
	491, 1248,
	492, 1248,
	493, 1248,
	494, 1248,
	495, 1248,
	496, 1248,
	497, 1248,
	498, 1248,
	499, 1248,
	501, 1248,
	502, 1248,
	503, 1248,
	504, 1248,
	505, 1248,
	507, 1248,
	509, 1248,
	510, 1248,
	511, 1248,
	512, 1248,
	513, 1248,
	514, 1248,
	516, 1248,
	517, 1248,
	518, 1248,
	519, 1248,
	521, 1248,
	522, 1248,
	525, 1248,
	526, 1248,
	527, 1248,
	528, 1248,
	529, 1248,
	530, 1248,
	531, 1248,
	533, 1248,
	536, 1248,
	537, 1248,
	538, 1248,
	539, 1248,
	540, 1248,
	541, 1248,
	543, 1248,
	544, 1248,
	545, 1248,
	546, 1248,
	548, 1248,
	553, 1248,
	554, 1248,
	555, 1248,
	556, 1248,
	557, 1248,
	558, 1248,
	-2, 0,
	-1, 745,
	186, 2256,
	506, 2256,
	566, 2256,
	585, 2256,
	-2, 0,
	-1, 746,
	186, 2362,
	506, 2362,
	566, 2362,
	585, 2362,
	-2, 0,
	-1, 747,
	186, 2243,
	506, 2243,
	566, 2243,
	585, 2243,
	-2, 0,
	-1, 749,
	186, 2493,
	506, 2493,
	566, 2493,
	585, 2493,
	-2, 0,
	-1, 751,
	186, 2533,
	506, 2533,
	566, 2533,
	585, 2533,
	-2, 0,
	-1, 758,
	186, 2389,
	506, 2389,
	566, 2389,
	585, 2389,
	-2, 680,
	-1, 791,
	585, 2192,
	588, 2192,
	-2, 951,
	-1, 792,
	585, 2194,
	588, 2194,
	-2, 952,
	-1, 793,
	585, 2193,
	588, 2193,
	-2, 953,
	-1, 794,
	588, 2119,
	-2, 954,
	-1, 817,
	182, 249,
	-2, 0,
	-1, 841,
	43, 2166,
	-2, 0,
	-1, 842,
	543, 1226,
	-2, 1021,
	-1, 858,
	4, 1628,
	21, 1628,
	22, 1628,
	23, 1628,
	24, 1628,
	25, 1628,
	26, 1628,
	27, 1628,
	29, 1628,
	30, 1628,
	36, 1628,
	41, 1628,
	42, 1628,
	44, 1628,
	45, 1628,
	46, 1628,
	47, 1628,
	48, 1628,
	49, 1628,
	50, 1628,
	51, 1628,
	53, 1628,
	54, 1628,
	55, 1628,
	56, 1628,
	58, 1628,
	59, 1628,
	60, 1628,
	61, 1628,
	62, 1628,
	63, 1628,
	64, 1628,
	68, 1628,
	69, 1628,
	70, 1628,
	71, 1628,
	73, 1628,
	74, 1628,
	75, 1628,
	79, 1628,
	80, 1628,
	81, 1628,
	82, 1628,
	83, 1628,
	84, 1628,
	85, 1628,
	88, 1628,
	89, 1628,
	90, 1628,
	91, 1628,
	92, 1628,
	94, 1628,
	96, 1628,
	97, 1628,
	98, 1628,
	99, 1628,
	100, 1628,
	101, 1628,
	103, 1628,
	104, 1628,
	105, 1628,
	107, 1628,
	108, 1628,
	109, 1628,
	117, 1628,
	118, 1628,
	119, 1628,
	120, 1628,
	121, 1628,
	123, 1628,
	124, 1628,
	125, 1628,
	127, 1628,
	128, 1628,
	129, 1628,
	131, 1628,
	132, 1628,
	133, 1628,
	135, 1628,
	136, 1628,
	137, 1628,
	140, 1628,
	141, 1628,
	142, 1628,
	144, 1628,
	145, 1628,
	147, 1628,
	148, 1628,
	149, 1628,
	151, 1628,
	152, 1628,
	153, 1628,
	154, 1628,
	155, 1628,
	156, 1628,
	157, 1628,
	158, 1628,
	159, 1628,
	160, 1628,
	161, 1628,
	162, 1628,
	163, 1628,
	164, 1628,
	165, 1628,
	166, 1628,
	168, 1628,
	174, 1628,
	175, 1628,
	176, 1628,
	177, 1628,
	181, 1628,
	183, 1628,
	184, 1628,
	188, 1628,
	189, 1628,
	190, 1628,
	191, 1628,
	192, 1628,
	193, 1628,
	194, 1628,
	195, 1628,
	196, 1628,
	197, 1628,
	198, 1628,
	199, 1628,
	200, 1628,
	202, 1628,
	203, 1628,
	205, 1628,
	206, 1628,
	208, 1628,
	209, 1628,
	210, 1628,
	211, 1628,
	212, 1628,
	213, 1628,
	214, 1628,
	215, 1628,
	216, 1628,
	218, 1628,
	219, 1628,
	221, 1628,
	222, 1628,
	223, 1628,
	224, 1628,
	225, 1628,
	229, 1628,
	230, 1628,
	231, 1628,
	232, 1628,
	233, 1628,
	236, 1628,
	237, 1628,
	238, 1628,
	240, 1628,
	242, 1628,
	243, 1628,
	245, 1628,
	247, 1628,
	248, 1628,
	249, 1628,
	251, 1628,
	255, 1628,
	256, 1628,
	257, 1628,
	258, 1628,
	259, 1628,
	260, 1628,
	262, 1628,
	263, 1628,
	264, 1628,
	266, 1628,
	267, 1628,
	269, 1628,
	270, 1628,
	273, 1628,
	277, 1628,
	278, 1628,
	279, 1628,
	282, 1628,
	283, 1628,
	284, 1628,
	285, 1628,
	287, 1628,
	288, 1628,
	289, 1628,
	290, 1628,
	291, 1628,
	292, 1628,
	293, 1628,
	294, 1628,
	295, 1628,
	296, 1628,
	297, 1628,
	298, 1628,
	299, 1628,
	300, 1628,
	301, 1628,
	302, 1628,
	303, 1628,
	304, 1628,
	305, 1628,
	306, 1628,
	307, 1628,
	308, 1628,
	310, 1628,
	312, 1628,
	313, 1628,
	314, 1628,
	315, 1628,
	316, 1628,
	317, 1628,
	318, 1628,
	319, 1628,
	320, 1628,
	321, 1628,
	322, 1628,
	323, 1628,
	325, 1628,
	326, 1628,
	328, 1628,
	330, 1628,
	331, 1628,
	333, 1628,
	334, 1628,
	335, 1628,
	336, 1628,
	337, 1628,
	340, 1628,
	344, 1628,
	345, 1628,
	346, 1628,
	349, 1628,
	350, 1628,
	351, 1628,
	353, 1628,
	355, 1628,
	356, 1628,
	357, 1628,
	358, 1628,
	359, 1628,
	360, 1628,
	361, 1628,
	362, 1628,
	363, 1628,
	364, 1628,
	365, 1628,
	366, 1628,
	368, 1628,
	369, 1628,
	370, 1628,
	371, 1628,
	372, 1628,
	373, 1628,
	374, 1628,
	375, 1628,
	376, 1628,
	377, 1628,
	378, 1628,
	379, 1628,
	380, 1628,
	381, 1628,
	382, 1628,
	384, 1628,
	385, 1628,
	387, 1628,
	388, 1628,
	389, 1628,
	390, 1628,
	391, 1628,
	392, 1628,
	393, 1628,
	394, 1628,
	395, 1628,
	396, 1628,
	397, 1628,
	398, 1628,
	400, 1628,
	402, 1628,
	403, 1628,
	404, 1628,
	409, 1628,
	411, 1628,
	412, 1628,
	413, 1628,
	414, 1628,
	415, 1628,
	416, 1628,
	417, 1628,
	418, 1628,
	419, 1628,
	421, 1628,
	422, 1628,
	423, 1628,
	425, 1628,
	426, 1628,
	427, 1628,
	428, 1628,
	429, 1628,
	430, 1628,
	432, 1628,
	433, 1628,
	434, 1628,
	435, 1628,
	436, 1628,
	437, 1628,
	438, 1628,
	439, 1628,
	440, 1628,
	441, 1628,
	442, 1628,
	444, 1628,
	445, 1628,
	446, 1628,
	447, 1628,
	448, 1628,
	449, 1628,
	451, 1628,
	452, 1628,
	453, 1628,
	454, 1628,
	455, 1628,
	456, 1628,
	458, 1628,
	459, 1628,
	460, 1628,
	461, 1628,
	462, 1628,
	463, 1628,
	464, 1628,
	466, 1628,
	468, 1628,
	469, 1628,
	470, 1628,
	471, 1628,
	472, 1628,
	473, 1628,
	474, 1628,
	475, 1628,
	476, 1628,
	477, 1628,
	478, 1628,
	479, 1628,
	480, 1628,
	481, 1628,
	482, 1628,
	483, 1628,
	485, 1628,
	486, 1628,
	488, 1628,
	489, 1628,
	491, 1628,
	492, 1628,
	493, 1628,
	494, 1628,
	495, 1628,
	496, 1628,
	497, 1628,
	498, 1628,
	499, 1628,
	501, 1628,
	502, 1628,
	503, 1628,
	504, 1628,
	505, 1628,
	507, 1628,
	509, 1628,
	510, 1628,
	511, 1628,
	512, 1628,
	513, 1628,
	514, 1628,
	516, 1628,
	517, 1628,
	518, 1628,
	519, 1628,
	521, 1628,
	522, 1628,
	525, 1628,
	526, 1628,
	527, 1628,
	528, 1628,
	529, 1628,
	530, 1628,
	531, 1628,
	533, 1628,
	536, 1628,
	537, 1628,
	538, 1628,
	539, 1628,
	540, 1628,
	541, 1628,
	543, 1628,
	544, 1628,
	545, 1628,
	546, 1628,
	548, 1628,
	553, 1628,
	554, 1628,
	555, 1628,
	556, 1628,
	557, 1628,
	558, 1628,
	-2, 0,
	-1, 866,
	259, 396,
	-2, 0,
	-1, 937,
	389, 846,
	449, 846,
	489, 846,
	511, 846,
	-2, 0,
	-1, 938,
	389, 845,
	449, 845,
	489, 845,
	511, 845,
	-2, 785,
	-1, 942,
	1, 892,
	582, 892,
	584, 892,
	586, 892,
	-2, 0,
	-1, 943,
	1, 820,
	582, 820,
	584, 820,
	586, 820,
	-2, 0,
	-1, 944,
	1, 824,
	582, 824,
	584, 824,
	586, 824,
	-2, 0,
	-1, 945,
	1, 950,
	182, 950,
	582, 950,
	584, 950,
	586, 950,
	-2, 0,
	-1, 953,
	1, 851,
	582, 851,
	584, 851,
	586, 851,
	-2, 0,
	-1, 959,
	1, 892,
	582, 892,
	584, 892,
	586, 892,
	-2, 0,
	-1, 960,
	1, 894,
	582, 894,
	584, 894,
	586, 894,
	-2, 0,
	-1, 961,
	1, 897,
	582, 897,
	584, 897,
	586, 897,
	-2, 0,
	-1, 967,
	1, 915,
	582, 915,
	584, 915,
	586, 915,
	-2, 0,
	-1, 968,
	1, 917,
	582, 917,
	584, 917,
	586, 917,
	-2, 0,
	-1, 973,
	1, 945,
	582, 945,
	584, 945,
	586, 945,
	-2, 0,
	-1, 1019,
	169, 1503,
	182, 1503,
	272, 1503,
	338, 1503,
	-2, 1439,
	-1, 1034,
	169, 1502,
	182, 1502,
	272, 1502,
	338, 1502,
	-2, 1436,
	-1, 1060,
	585, 2191,
	-2, 688,
	-1, 1088,
	5, 2183,
	583, 2181,
	-2, 2172,
	-1, 1096,
	5, 2204,
	583, 2201,
	-2, 2192,
	-1, 1097,
	5, 2205,
	583, 2202,
	-2, 2193,
	-1, 1105,
	585, 2189,
	-2, 2171,
	-1, 1106,
	583, 2616,
	-2, 2190,
	-1, 1129,
	583, 2615,
	-2, 2206,
	-1, 1130,
	5, 1703,
	-2, 2586,
	-1, 1131,
	5, 1704,
	-2, 2587,
	-1, 1132,
	5, 1705,
	-2, 2601,
	-1, 1133,
	5, 1706,
	-2, 2565,
	-1, 1134,
	5, 1707,
	-2, 2599,
	-1, 1135,
	5, 1715,
	-2, 2578,
	-1, 1136,
	5, 1702,
	-2, 2574,
	-1, 1137,
	5, 1702,
	-2, 2573,
	-1, 1138,
	5, 1702,
	-2, 2592,
	-1, 1139,
	5, 1713,
	-2, 2567,
	-1, 1140,
	5, 1718,
	-2, 2566,
	-1, 1141,
	5, 1720,
	-2, 2611,
	-1, 1144,
	5, 1742,
	-2, 2604,
	-1, 1145,
	5, 1734,
	-2, 2605,
	-1, 1146,
	5, 1742,
	-2, 2606,
	-1, 1147,
	5, 1738,
	-2, 2607,
	-1, 1148,
	5, 1688,
	-2, 2579,
	-1, 1149,
	5, 1689,
	-2, 2580,
	-1, 1150,
	5, 1690,
	-2, 2568,
	-1, 1178,
	5, 1725,
	-2, 2612,
	-1, 1179,
	5, 1726,
	-2, 2602,
	-1, 1180,
	5, 1727,
	544, 1727,
	-2, 2569,
	-1, 1181,
	5, 1728,
	544, 1728,
	-2, 2570,
	-1, 1218,
	583, 2201,
	-2, 2192,
	-1, 1219,
	583, 2202,
	-2, 2193,
	-1, 1319,
	186, 2533,
	506, 2533,
	566, 2533,
	585, 2533,
	-2, 0,
	-1, 1322,
	1, 666,
	586, 666,
	-2, 1355,
	-1, 1450,
	357, 2167,
	411, 2167,
	451, 2167,
	576, 2167,
	-2, 2157,
	-1, 1461,
	587, 2167,
	-2, 2168,
	-1, 1470,
	1, 1223,
	582, 1223,
	584, 1223,
	586, 1223,
	-2, 1488,
	-1, 1518,
	396, 1020,
	543, 1020,
	-2, 391,
	-1, 1535,
	43, 2165,
	-2, 986,
	-1, 1542,
	1, 1223,
	582, 1223,
	584, 1223,
	586, 1223,
	-2, 1488,
	-1, 1550,
	4, 1248,
	21, 1248,
	22, 1248,
	23, 1248,
	24, 1248,
	25, 1248,
	26, 1248,
	27, 1248,
	29, 1248,
	30, 1248,
	36, 1248,
	41, 1248,
	42, 1248,
	44, 1248,
	45, 1248,
	46, 1248,
	47, 1248,
	48, 1248,
	49, 1248,
	50, 1248,
	51, 1248,
	53, 1248,
	54, 1248,
	55, 1248,
	56, 1248,
	58, 1248,
	59, 1248,
	60, 1248,
	61, 1248,
	62, 1248,
	63, 1248,
	64, 1248,
	68, 1248,
	69, 1248,
	70, 1248,
	71, 1248,
	73, 1248,
	74, 1248,
	75, 1248,
	79, 1248,
	80, 1248,
	81, 1248,
	82, 1248,
	83, 1248,
	84, 1248,
	85, 1248,
	88, 1248,
	89, 1248,
	90, 1248,
	91, 1248,
	92, 1248,
	94, 1248,
	96, 1248,
	97, 1248,
	98, 1248,
	99, 1248,
	100, 1248,
	101, 1248,
	103, 1248,
	104, 1248,
	105, 1248,
	107, 1248,
	108, 1248,
	109, 1248,
	117, 1248,
	118, 1248,
	119, 1248,
	120, 1248,
	121, 1248,
	123, 1248,
	124, 1248,
	125, 1248,
	127, 1248,
	128, 1248,
	129, 1248,
	131, 1248,
	132, 1248,
	133, 1248,
	135, 1248,
	136, 1248,
	137, 1248,
	140, 1248,
	141, 1248,
	142, 1248,
	144, 1248,
	145, 1248,
	147, 1248,
	148, 1248,
	149, 1248,
	151, 1248,
	152, 1248,
	153, 1248,
	154, 1248,
	155, 1248,
	156, 1248,
	157, 1248,
	158, 1248,
	159, 1248,
	160, 1248,
	161, 1248,
	162, 1248,
	163, 1248,
	164, 1248,
	165, 1248,
	166, 1248,
	174, 1248,
	175, 1248,
	176, 1248,
	177, 1248,
	181, 1248,
	183, 1248,
	184, 1248,
	188, 1248,
	189, 1248,
	190, 1248,
	191, 1248,
	192, 1248,
	193, 1248,
	194, 1248,
	195, 1248,
	196, 1248,
	197, 1248,
	198, 1248,
	199, 1248,
	200, 1248,
	202, 1248,
	203, 1248,
	205, 1248,
	206, 1248,
	208, 1248,
	209, 1248,
	210, 1248,
	211, 1248,
	212, 1248,
	213, 1248,
	214, 1248,
	215, 1248,
	216, 1248,
	218, 1248,
	219, 1248,
	221, 1248,
	222, 1248,
	223, 1248,
	224, 1248,
	225, 1248,
	230, 1248,
	231, 1248,
	232, 1248,
	233, 1248,
	236, 1248,
	237, 1248,
	238, 1248,
	240, 1248,
	242, 1248,
	243, 1248,
	245, 1248,
	247, 1248,
	248, 1248,
	249, 1248,
	251, 1248,
	255, 1248,
	256, 1248,
	257, 1248,
	258, 1248,
	259, 1248,
	260, 1248,
	262, 1248,
	263, 1248,
	264, 1248,
	266, 1248,
	267, 1248,
	269, 1248,
	270, 1248,
	273, 1248,
	277, 1248,
	278, 1248,
	279, 1248,
	282, 1248,
	283, 1248,
	284, 1248,
	285, 1248,
	287, 1248,
	288, 1248,
	289, 1248,
	290, 1248,
	291, 1248,
	292, 1248,
	293, 1248,
	294, 1248,
	295, 1248,
	296, 1248,
	297, 1248,
	298, 1248,
	299, 1248,
	300, 1248,
	301, 1248,
	302, 1248,
	303, 1248,
	304, 1248,
	305, 1248,
	306, 1248,
	307, 1248,
	308, 1248,
	310, 1248,
	312, 1248,
	313, 1248,
	314, 1248,
	315, 1248,
	316, 1248,
	317, 1248,
	318, 1248,
	319, 1248,
	320, 1248,
	321, 1248,
	322, 1248,
	323, 1248,
	325, 1248,
	326, 1248,
	330, 1248,
	331, 1248,
	333, 1248,
	334, 1248,
	335, 1248,
	336, 1248,
	337, 1248,
	340, 1248,
	342, 1248,
	344, 1248,
	345, 1248,
	346, 1248,
	349, 1248,
	350, 1248,
	351, 1248,
	353, 1248,
	355, 1248,
	356, 1248,
	357, 1248,
	358, 1248,
	359, 1248,
	360, 1248,
	361, 1248,
	362, 1248,
	363, 1248,
	364, 1248,
	365, 1248,
	366, 1248,
	368, 1248,
	369, 1248,
	370, 1248,
	371, 1248,
	372, 1248,
	373, 1248,
	374, 1248,
	375, 1248,
	376, 1248,
	377, 1248,
	378, 1248,
	379, 1248,
	380, 1248,
	381, 1248,
	382, 1248,
	384, 1248,
	385, 1248,
	387, 1248,
	388, 1248,
	389, 1248,
	390, 1248,
	391, 1248,
	392, 1248,
	393, 1248,
	394, 1248,
	395, 1248,
	396, 1248,
	397, 1248,
	398, 1248,
	400, 1248,
	402, 1248,
	403, 1248,
	404, 1248,
	409, 1248,
	411, 1248,
	412, 1248,
	413, 1248,
	414, 1248,
	415, 1248,
	416, 1248,
	417, 1248,
	418, 1248,
	419, 1248,
	421, 1248,
	422, 1248,
	423, 1248,
	425, 1248,
	426, 1248,
	427, 1248,
	428, 1248,
	429, 1248,
	430, 1248,
	432, 1248,
	433, 1248,
	434, 1248,
	435, 1248,
	436, 1248,
	437, 1248,
	438, 1248,
	439, 1248,
	440, 1248,
	441, 1248,
	442, 1248,
	444, 1248,
	445, 1248,
	446, 1248,
	447, 1248,
	448, 1248,
	449, 1248,
	451, 1248,
	452, 1248,
	453, 1248,
	454, 1248,
	455, 1248,
	456, 1248,
	458, 1248,
	459, 1248,
	460, 1248,
	461, 1248,
	462, 1248,
	463, 1248,
	464, 1248,
	466, 1248,
	468, 1248,
	469, 1248,
	470, 1248,
	471, 1248,
	472, 1248,
	473, 1248,
	474, 1248,
	475, 1248,
	476, 1248,
	477, 1248,
	478, 1248,
	479, 1248,
	480, 1248,
	481, 1248,
	482, 1248,
	483, 1248,
	485, 1248,
	486, 1248,
	488, 1248,
	489, 1248,
	491, 1248,
	492, 1248,
	493, 1248,
	494, 1248,
	495, 1248,
	496, 1248,
	497, 1248,
	498, 1248,
	499, 1248,
	501, 1248,
	502, 1248,
	503, 1248,
	504, 1248,
	505, 1248,
	507, 1248,
	509, 1248,
	510, 1248,
	511, 1248,
	512, 1248,
	513, 1248,
	514, 1248,
	516, 1248,
	517, 1248,
	518, 1248,
	519, 1248,
	521, 1248,
	522, 1248,
	525, 1248,
	526, 1248,
	527, 1248,
	528, 1248,
	529, 1248,
	530, 1248,
	531, 1248,
	533, 1248,
	536, 1248,
	537, 1248,
	538, 1248,
	539, 1248,
	540, 1248,
	541, 1248,
	543, 1248,
	544, 1248,
	545, 1248,
	546, 1248,
	548, 1248,
	553, 1248,
	554, 1248,
	555, 1248,
	556, 1248,
	557, 1248,
	558, 1248,
	-2, 0,
	-1, 1573,
	1, 536,
	582, 536,
	584, 536,
	586, 536,
	-2, 1459,
	-1, 1576,
	4, 2610,
	11, 2610,
	12, 2610,
	14, 2610,
	15, 2610,
	16, 2610,
	17, 2610,
	18, 2610,
	19, 2610,
	21, 2610,
	22, 2610,
	23, 2610,
	24, 2610,
	25, 2610,
	26, 2610,
	27, 2610,
	29, 2610,
	30, 2610,
	33, 2610,
	34, 2610,
	36, 2610,
	38, 2610,
	41, 2610,
	42, 2610,
	44, 2610,
	45, 2610,
	46, 2610,
	47, 2610,
	48, 2610,
	49, 2610,
	50, 2610,
	51, 2610,
	53, 2610,
	54, 2610,
	55, 2610,
	56, 2610,
	58, 2610,
	59, 2610,
	60, 2610,
	61, 2610,
	62, 2610,
	63, 2610,
	64, 2610,
	68, 2610,
	69, 2610,
	70, 2610,
	71, 2610,
	73, 2610,
	74, 2610,
	75, 2610,
	76, 2610,
	79, 2610,
	80, 2610,
	81, 2610,
	82, 2610,
	83, 2610,
	84, 2610,
	85, 2610,
	86, 2610,
	88, 2610,
	89, 2610,
	90, 2610,
	91, 2610,
	92, 2610,
	94, 2610,
	95, 2610,
	96, 2610,
	97, 2610,
	98, 2610,
	99, 2610,
	100, 2610,
	101, 2610,
	103, 2610,
	104, 2610,
	105, 2610,
	106, 2610,
	107, 2610,
	108, 2610,
	109, 2610,
	117, 2610,
	118, 2610,
	119, 2610,
	120, 2610,
	121, 2610,
	123, 2610,
	124, 2610,
	125, 2610,
	127, 2610,
	128, 2610,
	129, 2610,
	131, 2610,
	132, 2610,
	133, 2610,
	135, 2610,
	136, 2610,
	137, 2610,
	140, 2610,
	141, 2610,
	142, 2610,
	144, 2610,
	145, 2610,
	147, 2610,
	148, 2610,
	149, 2610,
	151, 2610,
	152, 2610,
	153, 2610,
	154, 2610,
	155, 2610,
	156, 2610,
	157, 2610,
	158, 2610,
	159, 2610,
	160, 2610,
	161, 2610,
	162, 2610,
	163, 2610,
	164, 2610,
	165, 2610,
	166, 2610,
	170, 2610,
	171, 2610,
	172, 2610,
	173, 2610,
	174, 2610,
	175, 2610,
	176, 2610,
	177, 2610,
	180, 2610,
	181, 2610,
	183, 2610,
	184, 2610,
	187, 2610,
	188, 2610,
	189, 2610,
	190, 2610,
	191, 2610,
	192, 2610,
	193, 2610,
	194, 2610,
	195, 2610,
	196, 2610,
	197, 2610,
	198, 2610,
	199, 2610,
	200, 2610,
	202, 2610,
	203, 2610,
	205, 2610,
	206, 2610,
	208, 2610,
	209, 2610,
	210, 2610,
	211, 2610,
	212, 2610,
	213, 2610,
	214, 2610,
	215, 2610,
	216, 2610,
	217, 2610,
	218, 2610,
	219, 2610,
	220, 2610,
	221, 2610,
	222, 2610,
	223, 2610,
	224, 2610,
	225, 2610,
	227, 2610,
	228, 2610,
	230, 2610,
	231, 2610,
	232, 2610,
	233, 2610,
	235, 2610,
	236, 2610,
	237, 2610,
	238, 2610,
	240, 2610,
	242, 2610,
	243, 2610,
	244, 2610,
	245, 2610,
	246, 2610,
	247, 2610,
	248, 2610,
	249, 2610,
	250, 2610,
	251, 2610,
	253, 2610,
	254, 2610,
	255, 2610,
	256, 2610,
	257, 2610,
	258, 2610,
	259, 2610,
	260, 2610,
	262, 2610,
	263, 2610,
	264, 2610,
	266, 2610,
	267, 2610,
	268, 2610,
	269, 2610,
	270, 2610,
	271, 2610,
	273, 2610,
	277, 2610,
	278, 2610,
	279, 2610,
	282, 2610,
	283, 2610,
	284, 2610,
	285, 2610,
	286, 2610,
	287, 2610,
	288, 2610,
	289, 2610,
	290, 2610,
	291, 2610,
	292, 2610,
	293, 2610,
	294, 2610,
	295, 2610,
	296, 2610,
	297, 2610,
	298, 2610,
	299, 2610,
	300, 2610,
	301, 2610,
	302, 2610,
	303, 2610,
	304, 2610,
	305, 2610,
	306, 2610,
	307, 2610,
	308, 2610,
	310, 2610,
	311, 2610,
	312, 2610,
	313, 2610,
	314, 2610,
	315, 2610,
	316, 2610,
	317, 2610,
	318, 2610,
	319, 2610,
	320, 2610,
	321, 2610,
	322, 2610,
	323, 2610,
	325, 2610,
	326, 2610,
	329, 2610,
	330, 2610,
	331, 2610,
	333, 2610,
	334, 2610,
	335, 2610,
	336, 2610,
	337, 2610,
	340, 2610,
	344, 2610,
	345, 2610,
	346, 2610,
	347, 2610,
	349, 2610,
	350, 2610,
	351, 2610,
	353, 2610,
	355, 2610,
	356, 2610,
	357, 2610,
	358, 2610,
	359, 2610,
	360, 2610,
	361, 2610,
	362, 2610,
	363, 2610,
	364, 2610,
	365, 2610,
	366, 2610,
	368, 2610,
	369, 2610,
	370, 2610,
	371, 2610,
	372, 2610,
	373, 2610,
	374, 2610,
	375, 2610,
	376, 2610,
	377, 2610,
	378, 2610,
	379, 2610,
	380, 2610,
	381, 2610,
	382, 2610,
	384, 2610,
	385, 2610,
	387, 2610,
	388, 2610,
	389, 2610,
	390, 2610,
	391, 2610,
	392, 2610,
	393, 2610,
	394, 2610,
	395, 2610,
	396, 2610,
	397, 2610,
	398, 2610,
	400, 2610,
	402, 2610,
	403, 2610,
	404, 2610,
	409, 2610,
	410, 2610,
	411, 2610,
	412, 2610,
	413, 2610,
	414, 2610,
	415, 2610,
	416, 2610,
	417, 2610,
	418, 2610,
	419, 2610,
	421, 2610,
	422, 2610,
	423, 2610,
	424, 2610,
	425, 2610,
	426, 2610,
	427, 2610,
	428, 2610,
	429, 2610,
	430, 2610,
	431, 2610,
	432, 2610,
	433, 2610,
	434, 2610,
	435, 2610,
	436, 2610,
	437, 2610,
	438, 2610,
	439, 2610,
	440, 2610,
	441, 2610,
	442, 2610,
	444, 2610,
	445, 2610,
	446, 2610,
	447, 2610,
	448, 2610,
	449, 2610,
	451, 2610,
	452, 2610,
	453, 2610,
	454, 2610,
	455, 2610,
	456, 2610,
	457, 2610,
	458, 2610,
	459, 2610,
	460, 2610,
	461, 2610,
	462, 2610,
	463, 2610,
	464, 2610,
	466, 2610,
	468, 2610,
	469, 2610,
	470, 2610,
	471, 2610,
	472, 2610,
	473, 2610,
	474, 2610,
	475, 2610,
	476, 2610,
	477, 2610,
	478, 2610,
	479, 2610,
	480, 2610,
	481, 2610,
	482, 2610,
	483, 2610,
	485, 2610,
	486, 2610,
	488, 2610,
	489, 2610,
	491, 2610,
	492, 2610,
	493, 2610,
	494, 2610,
	495, 2610,
	496, 2610,
	497, 2610,
	498, 2610,
	499, 2610,
	501, 2610,
	502, 2610,
	503, 2610,
	504, 2610,
	505, 2610,
	507, 2610,
	509, 2610,
	510, 2610,
	511, 2610,
	512, 2610,
	513, 2610,
	514, 2610,
	516, 2610,
	517, 2610,
	518, 2610,
	519, 2610,
	521, 2610,
	522, 2610,
	525, 2610,
	526, 2610,
	527, 2610,
	528, 2610,
	529, 2610,
	530, 2610,
	531, 2610,
	533, 2610,
	536, 2610,
	537, 2610,
	538, 2610,
	539, 2610,
	540, 2610,
	541, 2610,
	543, 2610,
	544, 2610,
	545, 2610,
	546, 2610,
	548, 2610,
	553, 2610,
	554, 2610,
	555, 2610,
	556, 2610,
	557, 2610,
	558, 2610,
	559, 2610,
	561, 2610,
	564, 2610,
	565, 2610,
	566, 2610,
	567, 2610,
	568, 2610,
	569, 2610,
	571, 2610,
	572, 2610,
	573, 2610,
	574, 2610,
	575, 2610,
	576, 2610,
	577, 2610,
	578, 2610,
	579, 2610,
	581, 2610,
	584, 2610,
	585, 2610,
	587, 2610,
	588, 2610,
	-2, 0,
	-1, 1581,
	186, 2493,
	506, 2493,
	566, 2493,
	585, 2493,
	-2, 0,
	-1, 1630,
	389, 846,
	449, 846,
	489, 846,
	511, 846,
	-2, 0,
	-1, 1657,
	1, 841,
	582, 841,
	584, 841,
	586, 841,
	-2, 0,
	-1, 1658,
	1, 879,
	582, 879,
	584, 879,
	586, 879,
	-2, 0,
	-1, 1659,
	1, 887,
	582, 887,
	584, 887,
	586, 887,
	-2, 0,
	-1, 1662,
	1, 850,
	582, 850,
	584, 850,
	586, 850,
	-2, 0,
	-1, 1664,
	1, 854,
	582, 854,
	584, 854,
	586, 854,
	-2, 0,
	-1, 1670,
	1, 861,
	582, 861,
	584, 861,
	586, 861,
	-2, 0,
	-1, 1699,
	1, 2555,
	582, 2555,
	584, 2555,
	585, 2555,
	586, 2555,
	-2, 913,
	-1, 1700,
	1, 2490,
	582, 2490,
	584, 2490,
	585, 2490,
	586, 2490,
	-2, 914,
	-1, 1704,
	1, 926,
	582, 926,
	584, 926,
	586, 926,
	-2, 0,
	-1, 1718,
	1, 1350,
	586, 1350,
	-2, 1355,
	-1, 1721,
	169, 1502,
	182, 1502,
	272, 1502,
	338, 1502,
	-2, 1440,
	-1, 1815,
	150, 1461,
	169, 1461,
	182, 1461,
	239, 1461,
	272, 1461,
	338, 1461,
	348, 1461,
	523, 1461,
	-2, 1903,
	-1, 1875,
	584, 2053,
	-2, 0,
	-1, 1910,
	150, 1461,
	169, 1461,
	182, 1461,
	239, 1461,
	272, 1461,
	338, 1461,
	348, 1461,
	523, 1461,
	-2, 1589,
	-1, 1944,
	506, 2490,
	585, 2490,
	588, 2490,
	-2, 0,
	-1, 1961,
	583, 1730,
	-2, 1718,
	-1, 1992,
	186, 2490,
	585, 2490,
	588, 2490,
	-2, 0,
	-1, 2040,
	1, 668,
	586, 668,
	-2, 1355,
	-1, 2166,
	220, 250,
	-2, 2200,
	-1, 2167,
	220, 251,
	-2, 299,
	-1, 2271,
	1, 843,
	582, 843,
	584, 843,
	586, 843,
	-2, 0,
	-1, 2272,
	1, 881,
	582, 881,
	584, 881,
	586, 881,
	-2, 0,
	-1, 2273,
	1, 889,
	582, 889,
	584, 889,
	586, 889,
	-2, 0,
	-1, 2274,
	1, 928,
	582, 928,
	584, 928,
	586, 928,
	-2, 0,
	-1, 2307,
	1, 863,
	582, 863,
	584, 863,
	586, 863,
	-2, 0,
	-1, 2362,
	429, 1529,
	430, 1529,
	-2, 1763,
	-1, 2393,
	14, 0,
	15, 0,
	16, 0,
	564, 0,
	565, 0,
	566, 0,
	-2, 1783,
	-1, 2394,
	14, 0,
	15, 0,
	16, 0,
	564, 0,
	565, 0,
	566, 0,
	-2, 1784,
	-1, 2395,
	95, 0,
	253, 0,
	254, 0,
	568, 0,
	569, 0,
	-2, 1785,
	-1, 2396,
	95, 0,
	253, 0,
	254, 0,
	568, 0,
	569, 0,
	-2, 1786,
	-1, 2397,
	95, 0,
	253, 0,
	254, 0,
	568, 0,
	569, 0,
	-2, 1787,
	-1, 2398,
	95, 0,
	253, 0,
	254, 0,
	568, 0,
	569, 0,
	-2, 1788,
	-1, 2399,
	95, 0,
	253, 0,
	254, 0,
	568, 0,
	569, 0,
	-2, 1789,
	-1, 2400,
	14, 0,
	15, 0,
	16, 0,
	564, 0,
	565, 0,
	566, 0,
	-2, 1790,
	-1, 2412,
	14, 0,
	15, 0,
	16, 0,
	564, 0,
	565, 0,
	566, 0,
	-2, 1802,
	-1, 2413,
	14, 0,
	15, 0,
	16, 0,
	564, 0,
	565, 0,
	566, 0,
	-2, 1803,
	-1, 2414,
	14, 0,
	15, 0,
	16, 0,
	564, 0,
	565, 0,
	566, 0,
	-2, 1804,
	-1, 2417,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	457, 0,
	559, 0,
	567, 0,
	-2, 1809,
	-1, 2423,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	457, 0,
	559, 0,
	567, 0,
	-2, 1813,
	-1, 2425,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	457, 0,
	559, 0,
	567, 0,
	-2, 1821,
	-1, 2426,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	457, 0,
	559, 0,
	567, 0,
	-2, 1822,
	-1, 2427,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	457, 0,
	559, 0,
	567, 0,
	-2, 1823,
	-1, 2428,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	457, 0,
	559, 0,
	567, 0,
	-2, 1824,
	-1, 2564,
	5, 2204,
	186, 2064,
	583, 2201,
	-2, 2192,
	-1, 2565,
	186, 2065,
	-2, 2561,
	-1, 2566,
	186, 2066,
	-2, 2388,
	-1, 2567,
	186, 2067,
	-2, 2274,
	-1, 2568,
	186, 2068,
	-2, 2328,
	-1, 2569,
	186, 2069,
	-2, 2373,
	-1, 2570,
	186, 2070,
	-2, 2488,
	-1, 2571,
	186, 2071,
	-2, 1886,
	-1, 2641,
	1, 1590,
	2, 1590,
	106, 1590,
	150, 1590,
	169, 1590,
	182, 1590,
	187, 1590,
	204, 1590,
	207, 1590,
	235, 1590,
	239, 1590,
	250, 1590,
	268, 1590,
	272, 1590,
	311, 1590,
	338, 1590,
	342, 1590,
	348, 1590,
	420, 1590,
	424, 1590,
	523, 1590,
	534, 1590,
	550, 1590,
	551, 1590,
	552, 1590,
	562, 1590,
	582, 1590,
	584, 1590,
	586, 1590,
	588, 1590,
	-2, 1589,
	-1, 2654,
	583, 2173,
	-2, 2187,
	-1, 2656,
	1, 316,
	550, 316,
	-2, 1488,
	-1, 2683,
	583, 1729,
	-2, 1719,
	-1, 2860,
	1, 1223,
	582, 1223,
	584, 1223,
	586, 1223,
	-2, 1488,
	-1, 3029,
	343, 1532,
	-2, 2600,
	-1, 3030,
	343, 1533,
	-2, 2474,
	-1, 3034,
	429, 2130,
	430, 2130,
	-2, 1884,
	-1, 3035,
	429, 2134,
	430, 2134,
	-2, 1885,
	-1, 3036,
	429, 2131,
	430, 2131,
	-2, 1884,
	-1, 3037,
	429, 2135,
	430, 2135,
	-2, 1885,
	-1, 3050,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	457, 0,
	559, 0,
	567, 0,
	-2, 1811,
	-1, 3051,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	457, 0,
	559, 0,
	567, 0,
	-2, 1815,
	-1, 3057,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	457, 0,
	559, 0,
	567, 0,
	-2, 1817,
	-1, 3273,
	1, 665,
	582, 665,
	584, 665,
	586, 665,
	-2, 1355,
	-1, 3427,
	43, 2165,
	-2, 987,
	-1, 3432,
	1, 1223,
	582, 1223,
	584, 1223,
	586, 1223,
	-2, 1488,
	-1, 3537,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	457, 0,
	559, 0,
	567, 0,
	-2, 1819,
	-1, 3544,
	244, 0,
	246, 0,
	329, 0,
	-2, 1838,
	-1, 3611,
	14, 0,
	15, 0,
	16, 0,
	564, 0,
	565, 0,
	566, 0,
	-2, 1867,
	-1, 3612,
	14, 0,
	15, 0,
	16, 0,
	564, 0,
	565, 0,
	566, 0,
	-2, 1868,
	-1, 3613,
	14, 0,
	15, 0,
	16, 0,
	564, 0,
	565, 0,
	566, 0,
	-2, 1869,
	-1, 3617,
	14, 0,
	15, 0,
	16, 0,
	564, 0,
	565, 0,
	566, 0,
	-2, 1873,
	-1, 3618,
	14, 0,
	15, 0,
	16, 0,
	564, 0,
	565, 0,
	566, 0,
	-2, 1874,
	-1, 3619,
	14, 0,
	15, 0,
	16, 0,
	564, 0,
	565, 0,
	566, 0,
	-2, 1875,
	-1, 3665,
	583, 2174,
	-2, 2188,
	-1, 3827,
	585, 2718,
	-2, 1414,
	-1, 3885,
	244, 0,
	246, 0,
	329, 0,
	-2, 1839,
	-1, 3888,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	457, 0,
	559, 0,
	567, 0,
	-2, 1842,
	-1, 3889,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	457, 0,
	559, 0,
	567, 0,
	-2, 1844,
	-1, 3981,
	585, 2189,
	-2, 1258,
	-1, 4125,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	457, 0,
	559, 0,
	567, 0,
	-2, 1843,
	-1, 4126,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	457, 0,
	559, 0,
	567, 0,
	-2, 1845,
	-1, 4137,
	244, 0,
	-2, 1876,
	-1, 4306,
	244, 0,
	-2, 1877,
	-1, 4488,
	50, 0,
	217, 0,
	271, 0,
	457, 0,
	559, 0,
	567, 0,
	-2, 2564,
}

const sqlPrivate = 57344

const sqlLast = 122566

var sqlAct = [...]int{
	265, 4584, 3416, 4228, 4670, 3184, 4481, 4333, 2745, 2925,
	4180, 1482, 2938, 4540, 4341, 4487, 4480, 4469, 4498, 4363,
	4611, 3415, 4384, 4359, 2088, 4420, 3977, 3868, 4440, 4456,
	4499, 4166, 4437, 4500, 2163, 2789, 4259, 3576, 4235, 4486,
	1211, 2809, 4310, 1222, 4081, 4076, 4042, 2372, 4022, 3529,
	4146, 4114, 2238, 4185, 3449, 4056, 4553, 1291, 3295, 3978,
	3819, 4063, 3811, 4065, 3754, 3962, 1295, 3043, 1044, 1948,
	3355, 1284, 4273, 2596, 2440, 793, 4244, 1730, 2022, 3774,
	4086, 3443, 3792, 1035, 3411, 3776, 756, 2096, 3488, 4142,
	2247, 3401, 3490, 1355, 2373, 1597, 2914, 2895, 1277, 2884,
	2949, 793, 3298, 3199, 1916, 3227, 2822, 2960, 3668, 1447,
	3207, 2380, 3167, 3924, 3867, 3188, 2946, 2947, 2926, 2158,
	2957, 1885, 4, 1099, 3317, 2157, 868, 2909, 3636, 2107,
	2911, 4585, 2747, 2634, 2940, 3166, 2377, 4311, 1823, 3190,
	1043, 174, 2453, 1861, 3292, 2482, 1537, 3027, 2956, 2888,
	2636, 2633, 1289, 788, 1454, 1202, 2837, 2896, 2153, 2245,
	2134, 2141, 1338, 2080, 1092, 2076, 2614, 2593, 259, 1949,
	2211, 2020, 1718, 1263, 1905, 2788, 2473, 2437, 3234, 1638,
	2344, 1886, 258, 2066, 2342, 2484, 2361, 1097, 3413, 2198,
	2667, 1574, 1997, 2919, 794, 1540, 1286, 2770, 790, 1595,
	673, 795, 4385, 2950, 695, 1324, 108, 2666, 687, 1856,
	2733, 2476, 1205, 2623, 1895, 1184, 861, 2560, 2454, 183,
	2604, 2526, 1808, 1902, 1731, 1732, 1670, 2197, 184, 3284,
	738, 1657, 1219, 2343, 174, 750, 1201, 1572, 2224, 1142,
	2345, 1565, 1274, 799, 1477, 2095, 4541, 2366, 1073, 1995,
	690, 2009, 1998, 44, 43, 1207, 41, 802, 32, 30,
	28, 1182, 1737, 698, 931, 3078, 1488, 1717, 3074, 799,
	951, 3186, 1745, 1746, 713, 3650, 842, 3651, 1788, 1789,
	1790, 1039, 2011, 802, 4683, 2011, 4673, 2011, 2613, 3459,
	3468, 1039, 2011, 2011, 4658, 1776, 4657, 2011, 2613, 883,
	2613, 4647, 1748, 4629, 4627, 2172, 4572, 4184, 4184, 3458,
	2172, 1794, 4529, 1663, 4522, 4520, 4530, 1088, 2613, 2613,
	4517, 4514, 4484, 4483, 4518, 4515, 2172, 2172, 4482, 4477,
	4476, 4467, 2032, 2032, 2032, 4184, 4465, 1747, 4462, 4435,
	4184, 4409, 4247, 4184, 3257, 2674, 4402, 1767, 3139, 3140,
	2613, 4401, 3468, 4396, 4395, 2613, 1764, 4184, 4184, 4389,
	4355, 4308, 4290, 2172, 4033, 2674, 3854, 3256, 4287, 4284,
	3945, 1199, 2172, 4184, 1185, 1185, 4237, 4201, 4200, 4191,
	4238, 2172, 2172, 2172, 4190, 1604, 4183, 4153, 4184, 4127,
	4184, 2172, 1040, 2674, 1020, 4105, 4094, 4017, 4002, 2032,
	3468, 2613, 2613, 1019, 1333, 3887, 2172, 3835, 1481, 2674,
	3829, 3485, 3790, 3660, 3485, 3658, 3791, 3661, 3643, 3659,
	1333, 3560, 2613, 3154, 3556, 2172, 3242, 2172, 2613, 2694,
	2246, 1770, 1771, 1772, 1773, 3484, 3475, 3087, 3183, 3485,
	3476, 1753, 2613, 3088, 3178, 3177, 3640, 1029, 2613, 2613,
	1034, 3130, 3128, 3120, 3118, 3131, 3129, 3121, 2613, 2670,
	1745, 1746, 3042, 1778, 1779, 1780, 1788, 1789, 1790, 3089,
	2964, 1234, 2606, 2613, 2032, 3139, 3140, 2613, 1785, 1241,
	2936, 1795, 1781, 1776, 2234, 4410, 1186, 2935, 1775, 1777,
	1748, 2234, 2717, 1490, 2673, 2172, 2613, 4312, 2674, 1794,
	2664, 3139, 3140, 2658, 2613, 4303, 4291, 2172, 2029, 1745,
	1746, 2693, 2612, 4247, 1762, 1763, 2613, 3145, 2233, 2032,
	3640, 2613, 2234, 2605, 4074, 1747, 2479, 1188, 4033, 1189,
	4003, 3077, 1783, 3854, 3476, 1767, 2812, 2100, 2732, 1748,
	2045, 229, 2010, 2026, 1764, 2029, 2890, 1768, 2171, 1217,
	1745, 1746, 2832, 1235, 2730, 1881, 1476, 3739, 3532, 3508,
	1903, 93, 2146, 3460, 1640, 1490, 2650, 2649, 2648, 1502,
	1745, 1746, 2647, 1776, 1747, 2646, 1190, 229, 1187, 1028,
	1748, 1027, 3461, 4178, 1026, 1025, 1024, 1023, 231, 1022,
	1590, 1018, 1017, 1016, 1015, 1608, 1014, 3004, 2509, 1013,
	1748, 1012, 1011, 1010, 1009, 1008, 1007, 1006, 1005, 1004,
	1003, 1002, 929, 928, 2480, 1747, 927, 926, 925, 1770,
	1771, 1772, 1773, 3155, 231, 1767, 924, 923, 922, 1753,
	921, 920, 919, 918, 1764, 1747, 2012, 230, 917, 2012,
	916, 2012, 915, 914, 3145, 862, 2012, 2012, 913, 912,
	223, 2012, 1095, 911, 910, 909, 908, 907, 906, 224,
	905, 904, 903, 902, 1496, 901, 1785, 900, 899, 1795,
	3145, 1774, 73, 230, 865, 864, 1775, 1777, 1753, 898,
	1594, 185, 897, 896, 1745, 1746, 886, 885, 3881, 74,
	881, 3458, 1769, 1791, 880, 1792, 2481, 874, 2478, 873,
	860, 859, 1762, 1763, 816, 78, 815, 1776, 814, 1770,
	1771, 1772, 1773, 813, 1748, 805, 804, 185, 1786, 1753,
	1783, 803, 771, 762, 761, 760, 744, 253, 252, 251,
	250, 1300, 1097, 249, 248, 1768, 247, 246, 245, 1753,
	244, 243, 242, 241, 3940, 87, 1235, 240, 239, 1747,
	3155, 238, 237, 236, 229, 1097, 235, 234, 233, 1097,
	232, 3139, 3140, 3899, 3681, 3654, 1775, 1777, 3156, 2029,
	1490, 3486, 4088, 3230, 1481, 1358, 3155, 3100, 1793, 1358,
	1501, 3083, 2987, 2871, 2678, 866, 2655, 1300, 2904, 2640,
	1864, 2074, 1762, 1763, 2241, 2031, 1782, 1863, 1929, 107,
	1834, 231, 3139, 3140, 93, 104, 2704, 2495, 1097, 2010,
	1097, 2029, 1097, 3139, 3140, 1825, 2026, 2693, 1300, 1867,
	1784, 2337, 2493, 1337, 1484, 1768, 229, 1342, 1787, 1765,
	1761, 3181, 1758, 1756, 1757, 1749, 1750, 1751, 1752, 1754,
	1755, 1344, 1328, 229, 1300, 2483, 4505, 1308, 1221, 4485,
	230, 4464, 1462, 1753, 4370, 1489, 148, 4300, 1457, 1774,
	1665, 4315, 94, 223, 1300, 1906, 4141, 4294, 2922, 1300,
	3182, 1042, 224, 231, 2605, 1495, 1452, 1097, 2240, 1097,
	1769, 1235, 4095, 1300, 1214, 4292, 4073, 3950, 1744, 1097,
	231, 1097, 3922, 3921, 185, 3156, 1864, 3915, 1268, 1271,
	1775, 1777, 1480, 1863, 3914, 3913, 1786, 1056, 3150, 3148,
	3149, 3141, 3142, 3143, 3144, 3146, 3147, 1546, 1549, 1281,
	3906, 3156, 230, 3905, 1322, 1862, 3795, 3903, 3898, 1351,
	3145, 1444, 1449, 3139, 3140, 223, 3895, 1300, 1468, 230,
	3894, 3789, 3685, 3684, 224, 3683, 3664, 1552, 3631, 1774,
	3630, 3629, 223, 3552, 3548, 1097, 3225, 3174, 1097, 1768,
	2477, 224, 3165, 3138, 3135, 799, 185, 1826, 3134, 1824,
	1769, 3145, 3132, 3127, 3126, 4090, 3125, 3122, 3119, 802,
	3099, 3082, 3145, 185, 1832, 1317, 2687, 1577, 1579, 3075,
	2937, 1479, 1827, 1825, 1535, 2641, 2466, 1744, 1478, 1198,
	1743, 2214, 4677, 2179, 2177, 174, 174, 97, 1784, 4621,
	229, 4620, 3796, 1759, 1760, 1766, 1787, 1765, 1761, 1609,
	1758, 1756, 1757, 1749, 1750, 1751, 1752, 1754, 1755, 4586,
	3248, 229, 2906, 3909, 3737, 1490, 229, 3908, 3141, 3142,
	3143, 3144, 3146, 3147, 4539, 4537, 1223, 2676, 3578, 4427,
	1097, 1097, 1097, 1097, 1097, 1097, 1097, 231, 4362, 182,
	100, 4351, 103, 3149, 3141, 3142, 3143, 3144, 3146, 3147,
	1040, 4348, 1749, 1750, 1751, 1752, 1754, 1755, 231, 1328,
	4347, 1097, 1328, 231, 4346, 4327, 229, 1097, 3155, 4314,
	4313, 4288, 4272, 4271, 867, 1568, 2443, 4257, 4254, 148,
	4253, 4248, 3145, 1722, 1769, 229, 230, 1765, 1761, 4197,
	1758, 1756, 1757, 1749, 1750, 1751, 1752, 1754, 1755, 223,
	4174, 229, 1571, 4139, 4122, 4121, 3179, 230, 224, 4102,
	4101, 4059, 230, 231, 4034, 1751, 1752, 1754, 1755, 1679,
	223, 1716, 4158, 3939, 1589, 223, 3920, 2449, 3855, 224,
	185, 3849, 231, 3846, 224, 1094, 1603, 3725, 3724, 150,
	3708, 3707, 3139, 3140, 4177, 3157, 3158, 3159, 231, 3796,
	3705, 185, 3646, 3634, 186, 3543, 185, 1812, 3487, 4316,
	2508, 3469, 230, 1814, 3883, 229, 1071, 3435, 3370, 3330,
	3297, 3250, 1097, 1097, 1097, 223, 3104, 1614, 1097, 3103,
	3098, 230, 3066, 2883, 224, 1219, 1870, 1219, 3155, 1631,
	1869, 1868, 1865, 1857, 223, 39, 4089, 230, 1855, 2685,
	1666, 2684, 1358, 224, 2905, 2652, 863, 2645, 2611, 1883,
	223, 1097, 231, 3156, 793, 1932, 2491, 3154, 1928, 224,
	1966, 793, 1884, 1879, 1300, 185, 1945, 1749, 1750, 1751,
	1752, 1754, 1755, 1993, 1745, 1746, 2100, 1878, 1090, 1719,
	1877, 185, 1876, 1020, 1875, 1874, 1873, 1872, 1871, 1727,
	1852, 1892, 1019, 1851, 1850, 2242, 1726, 1849, 1848, 1847,
	1846, 230, 1845, 1844, 1748, 1721, 1843, 1040, 229, 1842,
	1866, 1841, 1840, 1839, 223, 1723, 229, 1838, 1827, 1813,
	1740, 1741, 1811, 224, 1940, 1806, 1937, 1316, 1239, 1566,
	1300, 1230, 229, 4062, 1889, 1890, 3946, 1097, 3891, 1747,
	3680, 1300, 3657, 1933, 3948, 2921, 3143, 3144, 3146, 3147,
	3649, 3145, 2057, 2056, 1185, 231, 2065, 2067, 3086, 1097,
	2643, 3139, 3140, 231, 3679, 1358, 1913, 1858, 1859, 174,
	3222, 1826, 3246, 3156, 1809, 2065, 3464, 4005, 2090, 231,
	1570, 2065, 1924, 1960, 1339, 3141, 3142, 3143, 3144, 3146,
	3147, 1341, 2063, 3150, 3148, 3149, 3141, 3142, 3143, 3144,
	3146, 3147, 1914, 4618, 230, 4610, 1333, 1213, 2810, 2494,
	2038, 1935, 230, 4349, 4249, 3160, 4240, 223, 1334, 4239,
	4093, 2037, 799, 4036, 2492, 223, 224, 2072, 230, 799,
	1328, 4245, 4035, 1040, 224, 2041, 802, 1906, 1215, 1911,
	4004, 223, 4295, 802, 3942, 3858, 1904, 3857, 185, 2065,
	224, 1340, 1941, 1847, 1847, 3333, 185, 3155, 3856, 1989,
	4293, 2014, 3652, 3471, 3470, 1882, 3799, 3530, 1714, 1630,
	1864, 3362, 185, 3749, 2060, 3124, 1333, 1863, 3123, 3048,
	1908, 2775, 1923, 1922, 2143, 1921, 1333, 1919, 1918, 1917,
	1336, 3722, 2051, 3299, 1000, 1300, 1300, 1836, 3418, 1963,
	3417, 2793, 3480, 4551, 2239, 1358, 1946, 2263, 1639, 1680,
	4236, 4525, 2040, 4510, 3148, 3149, 3141, 3142, 3143, 3144,
	3146, 3147, 4497, 3402, 2961, 1640, 2159, 3803, 3786, 3751,
	3746, 3730, 3505, 3271, 3092, 1330, 4143, 3186, 3580, 1001,
	2016, 2474, 1217, 2018, 1217, 2683, 4193, 4506, 1880, 2023,
	2818, 1860, 3409, 2025, 4170, 2208, 1545, 1473, 2028, 1311,
	2128, 1267, 2133, 1334, 1936, 2138, 2215, 4519, 2829, 2772,
	4516, 3454, 3700, 2826, 2036, 4342, 3394, 1618, 4077, 2034,
	2824, 4434, 1833, 2479, 4324, 3302, 3717, 2944, 2062, 2918,
	2164, 2169, 4569, 2043, 3524, 855, 3764, 4570, 3275, 1300,
	1197, 1300, 3156, 1300, 2068, 2058, 4218, 3992, 1661, 2817,
	1512, 2677, 1323, 998, 4507, 1335, 1520, 1661, 996, 1300,
	1300, 2097, 2718, 4600, 3247, 2106, 2061, 994, 2771, 992,
	1300, 2313, 3990, 989, 4672, 2311, 4211, 4203, 1474, 3988,
	4031, 4030, 1300, 3762, 1300, 1300, 1300, 3761, 3753, 2161,
	3745, 2736, 3744, 2352, 2093, 3277, 3742, 3741, 1677, 2736,
	3729, 3695, 1038, 3763, 3694, 799, 2734, 793, 2272, 2204,
	1571, 2480, 1331, 981, 2734, 2126, 2249, 1658, 3398, 802,
	1330, 1332, 3397, 2098, 2099, 3241, 3097, 3096, 2209, 3095,
	2320, 1479, 2221, 1678, 3094, 2262, 3052, 2835, 1478, 856,
	2834, 1521, 2831, 2820, 1341, 2052, 2808, 2807, 1660, 2803,
	2802, 2801, 2350, 2094, 2780, 2779, 2740, 1660, 2665, 2125,
	2522, 2424, 1720, 2137, 2188, 2521, 2382, 1558, 3506, 1557,
	2273, 2255, 2244, 2915, 2267, 3151, 3152, 3153, 2229, 1659,
	1334, 2170, 3150, 3148, 3149, 3141, 3142, 3143, 3144, 3146,
	3147, 1037, 986, 2481, 1097, 2478, 1097, 1616, 1676, 4605,
	1335, 4194, 1924, 1097, 1340, 2335, 1966, 1966, 1358, 4171,
	1097, 1097, 1097, 1097, 1097, 1097, 1097, 1097, 1097, 1097,
	1097, 1097, 1097, 1097, 1097, 1097, 1097, 1097, 1097, 1097,
	1097, 1097, 1097, 1097, 1097, 1097, 1097, 1097, 1097, 1097,
	1097, 1097, 1097, 1097, 1097, 1040, 1097, 1040, 1097, 1097,
	1097, 1097, 2231, 2218, 2190, 2189, 1568, 1331, 2226, 2250,
	2226, 2223, 2227, 4601, 1341, 2749, 1332, 3299, 3360, 2354,
	1097, 2341, 2773, 1097, 1097, 799, 2235, 1317, 2236, 2239,
	3987, 1097, 1755, 4120, 1556, 1097, 1555, 1097, 1097, 802,
	1333, 2773, 3332, 2351, 4606, 1358, 2259, 1330, 2254, 2777,
	1039, 1097, 1097, 1097, 1097, 2289, 1097, 1097, 1097, 1097,
	1097, 1097, 1097, 1097, 1516, 2352, 1226, 1214, 1611, 1214,
	1253, 2131, 3955, 2271, 1340, 976, 1529, 3063, 2327, 1960,
	1960, 2725, 1097, 1097, 1097, 1097, 1097, 1097, 1097, 1097,
	1097, 2967, 2483, 1475, 3703, 1097, 2455, 2456, 1570, 1033,
	2330, 1534, 2279, 2439, 2439, 2100, 3061, 1219, 1224, 2307,
	2455, 2471, 2069, 2070, 1358, 2797, 2349, 1689, 2763, 3147,
	2317, 2657, 3007, 1219, 2350, 2378, 2379, 1335, 2752, 2365,
	2474, 2790, 2791, 3954, 3025, 4631, 2517, 2790, 2791, 1097,
	1358, 4006, 2447, 1632, 2276, 3986, 2270, 3569, 3514, 2445,
	2762, 1228, 2228, 4335, 4608, 2563, 2563, 2577, 1307, 2455,
	3040, 2338, 2597, 2599, 2346, 2353, 2340, 1020, 2603, 2483,
	1020, 1020, 3513, 2339, 3361, 2470, 2369, 2336, 3001, 2370,
	2371, 858, 857, 4569, 1331, 1333, 1612, 1725, 894, 4029,
	3743, 977, 3566, 1332, 3714, 1963, 1963, 4503, 1817, 1675,
	685, 1672, 1822, 2348, 1693, 2790, 2791, 2477, 2421, 2329,
	3740, 2280, 2653, 1315, 1713, 2739, 3396, 1227, 3358, 853,
	2628, 852, 2828, 2830, 2081, 1036, 680, 3274, 1040, 2082,
	1541, 3010, 2739, 2108, 1487, 2800, 1494, 1040, 1500, 4581,
	2451, 1040, 1185, 1300, 1300, 1628, 2620, 3058, 1640, 1640,
	3989, 2778, 3974, 2519, 2827, 2468, 2112, 4589, 2520, 2825,
	3771, 2523, 1913, 2524, 2525, 2351, 2823, 2176, 2175, 3726,
	4634, 3059, 2619, 4337, 3567, 3064, 2642, 2735, 1539, 4558,
	2671, 3032, 3033, 4588, 3873, 1358, 3970, 2627, 3039, 2632,
	3349, 769, 2638, 2639, 4119, 2663, 2483, 3872, 174, 1617,
	2572, 2713, 2559, 1588, 2588, 1593, 4406, 2601, 2707, 3451,
	2776, 990, 3712, 2109, 3772, 1602, 990, 1607, 3974, 1966,
	2609, 2610, 2621, 2625, 2626, 990, 2751, 991, 2312, 1040,
	1518, 990, 2310, 2706, 1866, 1911, 4661, 2435, 2349, 2326,
	3971, 4607, 2083, 3452, 3350, 1328, 3984, 2011, 2679, 2721,
	2668, 2156, 3970, 4343, 3770, 2081, 3963, 1358, 2579, 2087,
	2082, 3341, 1333, 3009, 4416, 4471, 2433, 4472, 2723, 4614,
	4504, 1300, 4162, 3961, 3727, 2419, 2144, 2811, 2422, 1664,
	2805, 978, 3965, 2144, 3348, 2862, 2686, 1097, 1097, 2804,
	1097, 2737, 2709, 3006, 4357, 1858, 1859, 2698, 2690, 2120,
	767, 2701, 2724, 2702, 3286, 2155, 3971, 1541, 2689, 2741,
	2716, 3276, 793, 2692, 1300, 3342, 1687, 2715, 2887, 2113,
	2738, 3451, 2722, 2483, 1217, 1031, 2140, 976, 2708, 2418,
	987, 2084, 2089, 3373, 2821, 1515, 734, 2710, 2798, 2863,
	1217, 1252, 1960, 1237, 2132, 1300, 2782, 2929, 3964, 1690,
	2139, 1033, 806, 2121, 3060, 3340, 1853, 1300, 2766, 1300,
	2719, 1615, 2958, 976, 3062, 2902, 3314, 2750, 4502, 3244,
	2328, 2781, 2278, 2083, 1300, 2147, 2699, 2144, 1225, 2861,
	2154, 4580, 2703, 2135, 2799, 2114, 2115, 1033, 2783, 2091,
	2087, 4404, 3008, 2119, 4051, 2744, 2714, 1032, 3985, 2792,
	2794, 2795, 2796, 2754, 2757, 2081, 2988, 2429, 2989, 2110,
	2082, 3498, 2098, 2099, 2085, 1097, 2968, 2969, 3869, 4557,
	3491, 979, 3313, 2736, 887, 4132, 2430, 2975, 2976, 2977,
	4405, 2431, 4336, 4454, 2866, 2436, 4445, 4014, 2755, 2868,
	2806, 3966, 2136, 977, 875, 2816, 3967, 3054, 2438, 4532,
	799, 2111, 2962, 703, 2465, 1805, 1613, 3324, 1963, 4533,
	895, 2091, 2084, 2089, 802, 3102, 2933, 681, 1097, 2985,
	1213, 2624, 1213, 980, 1097, 1097, 1479, 2943, 4635, 977,
	799, 2446, 4116, 2869, 174, 2637, 1691, 1688, 2984, 2898,
	1039, 2931, 2656, 2148, 802, 2881, 2275, 3969, 2269, 2891,
	2993, 1215, 2995, 1215, 2997, 3498, 2894, 3966, 3287, 768,
	2892, 3322, 3967, 3972, 3491, 2420, 3012, 3493, 3014, 4612,
	2965, 3713, 2103, 2083, 1894, 2970, 3582, 2971, 4066, 1097,
	1097, 2924, 3492, 4622, 1920, 1097, 2934, 4061, 1724, 3015,
	2087, 2945, 3017, 682, 3863, 2085, 3676, 4067, 1097, 1097,
	4364, 3323, 1242, 3874, 1097, 1097, 3526, 770, 2963, 3779,
	1097, 766, 4282, 3969, 1314, 2116, 2932, 2982, 3777, 1097,
	1097, 1097, 3023, 2913, 1692, 1097, 2104, 1898, 4501, 3972,
	2992, 1645, 2994, 4568, 2996, 1097, 1894, 3085, 2079, 2991,
	4662, 683, 2091, 684, 2990, 4566, 1627, 1629, 807, 808,
	4383, 2012, 1097, 3020, 3005, 1898, 3318, 3055, 1954, 4052,
	4256, 3493, 2084, 2089, 2432, 4274, 2102, 4556, 4115, 3031,
	3817, 3489, 3439, 4613, 2434, 1901, 3492, 2196, 4275, 1891,
	1240, 3022, 1233, 978, 3021, 672, 3794, 2086, 3968, 3620,
	2622, 2117, 2077, 3080, 3081, 3781, 3779, 1734, 3084, 1735,
	3076, 2365, 3041, 1901, 3026, 3777, 4615, 3320, 1899, 1214,
	1729, 4276, 3870, 2368, 3918, 2168, 2101, 1898, 1896, 978,
	888, 889, 2053, 4192, 1734, 1214, 3235, 3975, 4640, 4323,
	3780, 4265, 2078, 3818, 3757, 3699, 1899, 3293, 3209, 3440,
	876, 877, 1097, 1097, 1097, 2085, 2050, 3431, 3670, 4531,
	3289, 1097, 1097, 1097, 3968, 2903, 1097, 2897, 2151, 3053,
	2885, 2222, 2216, 2210, 2202, 1901, 1097, 1219, 1358, 2182,
	3319, 4365, 1097, 4278, 1097, 3193, 3194, 3691, 2756, 1897,
	1896, 3565, 3781, 1219, 2358, 3494, 3495, 3496, 3497, 810,
	809, 1509, 2091, 3975, 1244, 743, 4277, 3635, 1899, 4421,
	1733, 1358, 3671, 3527, 2739, 4117, 4386, 4064, 2615, 3091,
	1040, 2784, 2149, 1219, 4279, 2318, 1358, 3780, 2086, 3775,
	1805, 1030, 2048, 979, 1734, 3820, 2046, 1733, 3672, 3176,
	3669, 4082, 3875, 3210, 2882, 1966, 1255, 3240, 4234, 1358,
	3215, 1897, 3280, 2618, 4232, 3195, 4173, 3305, 811, 812,
	3301, 3300, 2150, 3228, 1300, 1300, 3046, 2260, 3024, 979,
	3254, 1048, 3648, 2049, 1900, 3198, 1735, 3197, 1662, 2662,
	2661, 2660, 3201, 2448, 2659, 980, 1550, 1097, 3621, 3494,
	3495, 3496, 3497, 3208, 2617, 1564, 1562, 3622, 1817, 2616,
	1551, 1097, 1900, 1735, 3205, 3778, 893, 3229, 3785, 2090,
	2889, 1300, 3281, 3282, 1037, 4181, 1966, 4330, 890, 891,
	3224, 980, 3919, 4229, 4043, 3212, 3876, 2760, 3171, 3172,
	3173, 2359, 3203, 3303, 1097, 3706, 3307, 1733, 878, 879,
	3481, 2220, 257, 2090, 4639, 3405, 3233, 4099, 3221, 3204,
	1300, 4168, 2584, 3265, 3213, 3272, 3214, 3187, 3202, 3696,
	3216, 3217, 4577, 4361, 1900, 4160, 2966, 2867, 1960, 3278,
	2865, 2248, 1300, 1621, 1300, 3374, 4366, 4424, 2086, 1328,
	4331, 1646, 3692, 4431, 3304, 4418, 3219, 3309, 3220, 2143,
	3311, 1358, 3778, 2785, 2786, 3925, 4169, 3637, 2143, 1709,
	2490, 4449, 1300, 3376, 2322, 3378, 1300, 1711, 3382, 3237,
	3238, 3239, 3388, 4579, 3245, 1708, 4521, 1706, 4098, 4182,
	2123, 1684, 1682, 3363, 1656, 1654, 3335, 4350, 4138, 1300,
	1652, 3290, 3211, 3917, 1650, 2309, 1300, 3673, 1300, 1960,
	3251, 3252, 1358, 3253, 3262, 3784, 3357, 3266, 1648, 793,
	3168, 1642, 3542, 3503, 3502, 1637, 3258, 3259, 1635, 3255,
	1300, 3273, 3414, 3236, 4425, 4280, 3279, 4332, 1560, 3133,
	3065, 4281, 1300, 2886, 3200, 2819, 2774, 3359, 2688, 4496,
	3169, 2331, 3353, 1931, 1963, 3294, 2100, 1927, 1712, 1219,
	3522, 742, 1599, 3447, 1217, 2129, 3521, 3371, 1729, 3003,
	2958, 3002, 3321, 3288, 2973, 2347, 1671, 2284, 3331, 2958,
	1217, 3423, 3430, 2201, 1300, 1300, 2181, 1994, 1837, 3697,
	3261, 3339, 3344, 3263, 3264, 1610, 3347, 3445, 3267, 1533,
	3268, 3400, 3269, 3403, 1563, 1561, 2489, 1300, 2124, 3345,
	1217, 4015, 3338, 3346, 3364, 892, 3748, 3747, 4016, 3456,
	3438, 4001, 3372, 4417, 4080, 1963, 3395, 4021, 4554, 3959,
	3467, 3385, 3816, 3391, 3352, 3807, 3354, 3760, 4075, 3720,
	3718, 3698, 1939, 3562, 1954, 1954, 4570, 1358, 3337, 3434,
	1358, 3444, 3429, 3375, 2324, 3446, 4545, 3419, 2323, 2916,
	3399, 1710, 2908, 2901, 3384, 988, 2782, 3507, 3390, 1707,
	3351, 1705, 3407, 2893, 3448, 1683, 1681, 2879, 1655, 1653,
	3428, 3441, 3426, 1097, 1651, 2308, 3427, 799, 1649, 1097,
	1097, 2864, 1213, 1097, 1097, 1097, 2705, 1097, 3465, 3466,
	3383, 802, 1647, 2700, 3389, 1641, 1097, 1966, 1213, 1636,
	3453, 2180, 1634, 3500, 3455, 1097, 174, 174, 1097, 3462,
	3479, 2178, 1559, 1215, 1358, 2160, 3483, 2145, 2118, 3520,
	2105, 2092, 2033, 1097, 2030, 3477, 2027, 2024, 2019, 1215,
	2017, 1358, 2013, 3519, 2004, 1936, 3517, 2054, 1738, 1194,
	3044, 1966, 1966, 1097, 1097, 3523, 1097, 1097, 1097, 3018,
	4066, 3016, 2334, 3499, 4459, 4104, 3139, 3140, 1040, 3157,
	3158, 3159, 4097, 4096, 1097, 1195, 3545, 3528, 1097, 4067,
	1966, 1966, 1097, 1097, 1097, 1097, 1097, 1097, 1097, 1097,
	1097, 1097, 1097, 1097, 1097, 1097, 1097, 1097, 1097, 1097,
	1097, 3516, 1097, 3554, 3555, 3594, 3501, 3595, 2332, 1097,
	1097, 1966, 4028, 3510, 3525, 3511, 1097, 3512, 3951, 993,
	995, 997, 2959, 2122, 2073, 1514, 3386, 1097, 2736, 2736,
	1960, 2154, 4267, 2761, 4260, 3828, 2100, 2274, 1219, 1219,
	730, 3154, 1097, 2734, 2758, 3045, 1703, 1704, 2219, 2132,
	1276, 1275, 2304, 2303, 2333, 4458, 2281, 3550, 1739, 3993,
	4023, 1633, 1745, 1746, 1745, 1746, 4302, 3561, 2764, 3926,
	3904, 1358, 3316, 2765, 1960, 1960, 1217, 2130, 3666, 2787,
	3577, 3568, 3570, 3571, 1742, 1196, 1309, 3584, 1243, 3632,
	4573, 4564, 1748, 3674, 3675, 3804, 686, 2203, 3653, 1214,
	2765, 3756, 4526, 1960, 1960, 2584, 3592, 3686, 3687, 3688,
	3593, 254, 3597, 2878, 786, 1214, 3599, 2127, 1097, 3624,
	2378, 3585, 2306, 3755, 3572, 1320, 1294, 1747, 843, 1747,
	2826, 2824, 2833, 1276, 1960, 3145, 1276, 2813, 1097, 2815,
	2769, 2767, 3633, 3625, 3387, 1214, 1963, 3591, 2131, 2378,
	3600, 697, 2814, 2768, 4411, 4377, 4371, 4329, 669, 4251,
	174, 4227, 3641, 3642, 4161, 3814, 3806, 3793, 3663, 3433,
	2923, 1097, 1097, 2602, 2039, 3161, 1947, 3644, 3645, 4609,
	3628, 4179, 1470, 3243, 4451, 2584, 2584, 4638, 3639, 4452,
	1963, 1963, 1481, 3655, 3139, 3140, 1297, 1745, 1746, 3160,
	4451, 2728, 2729, 4373, 1620, 4452, 3896, 1954, 2485, 4583,
	1619, 1097, 3656, 1505, 2726, 2727, 3678, 2728, 2726, 1963,
	1963, 2518, 1686, 3813, 4252, 1685, 4212, 4025, 4020, 4019,
	3892, 2872, 3677, 3573, 2875, 1300, 2877, 3380, 1300, 1542,
	3377, 3155, 1831, 1830, 3731, 4624, 4590, 4415, 4414, 4413,
	1963, 4317, 4230, 4207, 4159, 1966, 4157, 4155, 4054, 3735,
	4040, 3991, 3736, 3738, 1583, 3947, 3852, 3834, 3702, 2631,
	3788, 3716, 3709, 3437, 3750, 3436, 3682, 3310, 1596, 3260,
	2920, 3723, 3000, 2920, 3752, 2981, 1300, 2980, 3758, 2979,
	2978, 2907, 1097, 2880, 2759, 3728, 2696, 2691, 2681, 2680,
	1219, 1097, 2669, 3830, 2450, 2325, 2305, 2929, 2302, 2301,
	2300, 1300, 1300, 1300, 2299, 2298, 2217, 2782, 2191, 2187,
	2186, 2185, 3837, 2184, 2183, 2007, 3821, 2006, 1300, 2584,
	2584, 2584, 1622, 2005, 2958, 2003, 3783, 1938, 1702, 1701,
	1643, 1285, 1528, 1300, 1527, 3825, 1526, 1525, 1524, 1358,
	1523, 3800, 3822, 1522, 3689, 1217, 1217, 1517, 3690, 2998,
	1513, 1511, 1510, 1467, 1466, 1465, 3841, 3801, 1464, 1349,
	1348, 3824, 1347, 1358, 1346, 1345, 1097, 1097, 1960, 3805,
	1313, 1105, 1097, 1097, 1966, 3853, 3156, 1097, 1097, 1450,
	1097, 1312, 1461, 1285, 1097, 1262, 1261, 1260, 3808, 3719,
	3773, 3721, 1259, 3782, 1258, 1097, 3823, 1257, 1256, 3769,
	1254, 1214, 1249, 3826, 1248, 3832, 1247, 3831, 1246, 1245,
	3787, 1097, 1177, 2044, 3294, 999, 985, 261, 261, 261,
	3768, 675, 676, 3844, 691, 675, 691, 701, 3861, 3877,
	741, 3842, 3843, 3836, 759, 3810, 3851, 3859, 3847, 765,
	4334, 3850, 3848, 3886, 3973, 2321, 261, 1695, 1285, 1285,
	92, 1519, 829, 3890, 86, 2152, 3767, 3715, 956, 4448,
	3759, 1503, 4356, 837, 4433, 3871, 872, 3802, 3312, 3878,
	2836, 1219, 261, 2283, 1644, 2285, 3223, 2644, 4403, 1219,
	3900, 3101, 4309, 1358, 1963, 1358, 4131, 2488, 3931, 1835,
	3180, 3860, 1219, 88, 1081, 1127, 4050, 1960, 4049, 3960,
	3701, 2948, 4047, 1300, 1300, 4046, 1951, 1953, 1047, 3151,
	3152, 3153, 1358, 1361, 4470, 2055, 3150, 3148, 3149, 3141,
	3142, 3143, 3144, 3146, 3147, 3866, 1087, 2071, 2064, 2682,
	2562, 1104, 3228, 3952, 3953, 1101, 1219, 1955, 1219, 1957,
	3916, 1103, 1102, 1956, 1854, 1100, 1950, 3812, 2927, 3463,
	3983, 1569, 1567, 958, 2059, 2444, 2472, 3994, 3090, 1828,
	1300, 1062, 1083, 2469, 3982, 1238, 3996, 3997, 1072, 1061,
	1358, 3206, 1300, 3185, 3450, 1300, 3979, 3662, 3979, 3930,
	2357, 847, 3136, 2475, 1358, 3928, 3929, 3923, 1229, 3934,
	2585, 3933, 1213, 2578, 3937, 675, 675, 3938, 3956, 4024,
	2574, 4026, 3270, 261, 2917, 174, 3941, 1217, 1213, 3995,
	3927, 1715, 4145, 1963, 1807, 1300, 1300, 2928, 3932, 1343,
	1065, 2442, 1819, 1215, 3070, 2367, 3457, 3226, 2675, 4455,
	4044, 3581, 2195, 1193, 1192, 1300, 1236, 1191, 1213, 1215,
	4439, 4436, 2142, 3845, 3412, 2047, 3958, 1358, 2720, 1797,
	3420, 1077, 1300, 1460, 3191, 3482, 1530, 764, 4186, 1089,
	1796, 4041, 2857, 2856, 4326, 4027, 1329, 1327, 1326, 1215,
	1325, 4597, 4038, 4660, 3711, 3710, 228, 1219, 3038, 1736,
	1214, 1214, 1728, 225, 4072, 4013, 227, 1300, 1300, 1300,
	4018, 4103, 4083, 226, 4055, 4032, 3667, 3232, 4524, 3733,
	1358, 3404, 23, 4100, 4037, 22, 21, 112, 42, 20,
	128, 4039, 1097, 1097, 1097, 147, 146, 3979, 4084, 120,
	145, 144, 4045, 143, 142, 149, 141, 4060, 140, 135,
	1358, 139, 4087, 4069, 138, 1097, 137, 136, 1097, 1097,
	134, 132, 133, 4010, 4092, 127, 131, 130, 1097, 129,
	4085, 1966, 4000, 4078, 126, 125, 1097, 1097, 124, 123,
	122, 121, 119, 1954, 4009, 118, 117, 4012, 116, 115,
	114, 1358, 113, 1300, 4107, 755, 4123, 4106, 752, 61,
	60, 111, 110, 4109, 19, 40, 14, 3999, 1217, 65,
	66, 2584, 2584, 4118, 1358, 18, 1217, 13, 4111, 35,
	4008, 91, 1097, 4011, 102, 101, 36, 4128, 4071, 1217,
	99, 1097, 98, 3325, 3326, 34, 3327, 3328, 3329, 1097,
	4140, 17, 16, 1966, 15, 96, 95, 4068, 33, 4134,
	1461, 31, 1097, 11, 1954, 1097, 9, 8, 37, 1915,
	12, 5, 179, 178, 181, 177, 180, 1097, 4151, 4152,
	4164, 4112, 90, 1217, 1358, 1217, 176, 175, 89, 3365,
	3366, 1300, 3367, 3368, 3369, 4189, 1300, 1300, 29, 10,
	4154, 171, 4243, 3798, 1960, 81, 173, 1461, 172, 2584,
	2584, 2584, 2584, 2584, 2584, 2584, 2584, 2584, 2584, 2584,
	2584, 2584, 2584, 2584, 2584, 2584, 2584, 2584, 3414, 2584,
	170, 4172, 169, 4206, 1213, 4165, 4217, 4163, 168, 82,
	79, 1358, 4242, 4233, 1300, 167, 85, 166, 80, 84,
	4204, 83, 27, 6, 64, 4208, 7, 4113, 3504, 105,
	106, 4266, 1219, 1219, 38, 1215, 77, 76, 75, 26,
	63, 25, 1214, 4209, 4223, 4250, 1960, 212, 211, 4222,
	210, 209, 1097, 1097, 4261, 208, 207, 4231, 4285, 4286,
	206, 4226, 4225, 205, 200, 4214, 199, 204, 2237, 1097,
	1966, 4264, 3979, 3979, 4241, 202, 201, 203, 4270, 198,
	4262, 215, 4246, 214, 1294, 2251, 220, 219, 4289, 218,
	1963, 217, 4196, 216, 1217, 2253, 213, 4263, 4269, 222,
	4087, 197, 4283, 4268, 196, 1097, 195, 2261, 1097, 2264,
	2265, 2266, 193, 189, 188, 1219, 192, 4258, 194, 191,
	190, 187, 221, 72, 164, 4298, 4299, 165, 1219, 4297,
	4322, 71, 4221, 163, 1356, 162, 161, 160, 1455, 4307,
	159, 158, 157, 70, 24, 4301, 2, 1, 0, 1231,
	1575, 0, 0, 4220, 4345, 3979, 0, 0, 0, 0,
	4321, 4318, 1963, 0, 0, 2090, 0, 0, 3979, 0,
	1097, 1097, 0, 0, 4338, 4344, 4198, 4199, 0, 0,
	1097, 0, 1251, 4360, 4339, 1219, 0, 0, 1219, 4219,
	0, 0, 1300, 1960, 261, 0, 261, 261, 0, 1280,
	261, 1290, 1300, 1300, 4213, 0, 4215, 4352, 4216, 0,
	0, 4380, 1310, 0, 4382, 0, 0, 0, 0, 1300,
	4354, 759, 0, 1214, 4367, 3979, 0, 0, 3979, 4394,
	0, 1214, 0, 1097, 1097, 4399, 0, 4400, 4368, 4369,
	4375, 4374, 2207, 1097, 1214, 261, 4379, 261, 261, 1280,
	4372, 261, 261, 4391, 4388, 1954, 4390, 1290, 4387, 4392,
	4393, 0, 0, 0, 4246, 0, 0, 4426, 261, 0,
	1483, 0, 0, 4398, 0, 4430, 4397, 0, 0, 1097,
	1097, 4408, 1097, 1213, 1213, 0, 0, 0, 1214, 0,
	1214, 1507, 0, 4412, 0, 0, 0, 0, 0, 1954,
	1954, 4457, 0, 0, 4438, 4441, 4407, 0, 0, 1963,
	1532, 4453, 0, 1290, 1215, 1215, 0, 261, 261, 4428,
	1280, 0, 4450, 0, 4429, 4475, 0, 0, 1954, 1954,
	0, 0, 4478, 4447, 0, 1097, 1097, 1097, 0, 759,
	4479, 261, 261, 0, 0, 0, 0, 4460, 4443, 1217,
	1217, 0, 4442, 0, 0, 4446, 0, 4466, 4473, 1954,
	0, 0, 0, 4474, 872, 1097, 0, 2362, 0, 4509,
	0, 0, 0, 4508, 0, 4492, 4493, 0, 0, 4495,
	4513, 0, 0, 4494, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4534, 0, 0, 0, 0, 4353,
	0, 0, 0, 4527, 0, 4538, 4511, 0, 0, 0,
	4536, 0, 4548, 4550, 0, 0, 0, 4549, 0, 1097,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1214,
	4535, 0, 1217, 0, 4555, 0, 0, 0, 261, 4543,
	0, 4544, 4542, 0, 0, 1217, 0, 4575, 0, 4571,
	0, 0, 0, 0, 0, 0, 0, 261, 4563, 4546,
	4547, 4567, 0, 4565, 0, 4552, 0, 4574, 1219, 4457,
	1219, 2090, 4595, 4438, 4593, 0, 4441, 4578, 4576, 4561,
	4562, 0, 0, 4603, 4598, 4592, 4604, 0, 4591, 4360,
	4587, 4582, 0, 0, 4594, 4602, 4596, 4599, 0, 0,
	0, 0, 1217, 0, 0, 1217, 2580, 4617, 3979, 0,
	3979, 0, 0, 0, 0, 0, 3067, 3068, 2712, 1294,
	0, 4616, 0, 4619, 0, 0, 0, 4626, 4623, 0,
	2001, 0, 0, 0, 0, 4632, 0, 0, 0, 0,
	1097, 1097, 4628, 4625, 0, 1213, 0, 4630, 0, 1097,
	4633, 1097, 1097, 0, 0, 4636, 0, 0, 0, 0,
	4642, 4651, 0, 0, 0, 4645, 4656, 4652, 4655, 0,
	2929, 4654, 4650, 4649, 4653, 4648, 1215, 0, 0, 3809,
	4663, 1930, 4664, 0, 0, 0, 4667, 4666, 4665, 4659,
	4668, 0, 4669, 0, 4671, 0, 2001, 0, 0, 4675,
	4674, 0, 0, 1954, 0, 0, 0, 2001, 1097, 4679,
	0, 4681, 0, 0, 4676, 4682, 0, 4684, 4685, 0,
	4671, 0, 4678, 0, 4643, 4644, 0, 0, 0, 4523,
	0, 0, 0, 0, 0, 0, 0, 73, 0, 0,
	0, 0, 0, 0, 0, 1285, 2860, 0, 0, 3862,
	0, 0, 0, 0, 74, 675, 0, 0, 0, 0,
	3162, 3163, 3164, 0, 0, 0, 0, 0, 0, 263,
	78, 0, 0, 0, 0, 0, 261, 0, 261, 0,
	0, 4680, 261, 0, 1214, 1214, 0, 0, 0, 0,
	0, 1745, 1746, 1285, 0, 1483, 1280, 261, 0, 261,
	0, 0, 0, 0, 2075, 261, 1483, 691, 0, 0,
	87, 0, 261, 1483, 1776, 0, 0, 0, 0, 0,
	0, 1748, 0, 0, 0, 0, 1213, 2008, 0, 1285,
	1285, 0, 1954, 0, 1213, 0, 0, 0, 0, 261,
	0, 0, 0, 0, 0, 0, 261, 1213, 0, 2974,
	866, 0, 0, 1745, 1746, 2584, 1747, 1215, 0, 0,
	0, 0, 0, 0, 107, 1215, 1767, 1214, 0, 93,
	104, 0, 0, 0, 0, 1764, 1776, 0, 1215, 0,
	1214, 0, 0, 1748, 0, 1217, 759, 1217, 0, 0,
	0, 1213, 0, 1213, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2584,
	0, 0, 0, 0, 0, 0, 0, 0, 1747, 0,
	0, 1450, 1215, 0, 1215, 0, 0, 94, 0, 3541,
	0, 0, 0, 0, 0, 0, 0, 1214, 0, 0,
	1214, 0, 0, 0, 2173, 0, 0, 0, 1461, 0,
	1770, 1771, 1772, 1773, 0, 0, 1060, 0, 0, 0,
	1753, 0, 0, 0, 0, 1575, 0, 1575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1775, 1777, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1753, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1213, 1762, 1763, 0, 0, 0, 0, 4053,
	0, 0, 0, 0, 0, 261, 0, 0, 261, 0,
	0, 0, 4070, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1215, 0, 0, 1768, 0, 0, 1775,
	1777, 0, 97, 0, 0, 4091, 2584, 0, 0, 0,
	0, 0, 0, 1461, 0, 0, 0, 0, 0, 3028,
	0, 1285, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 0, 0, 0, 261, 0, 0, 0, 0,
	0, 261, 0, 0, 0, 0, 0, 261, 0, 0,
	0, 0, 0, 0, 182, 100, 0, 103, 1768, 0,
	1461, 0, 1461, 261, 0, 261, 0, 0, 0, 675,
	0, 261, 0, 0, 0, 1209, 0, 0, 0, 0,
	0, 229, 0, 759, 0, 0, 0, 872, 0, 867,
	0, 0, 0, 0, 148, 0, 0, 0, 0, 2580,
	2580, 0, 0, 0, 3139, 3140, 0, 3157, 3158, 3159,
	0, 0, 261, 0, 1280, 261, 0, 0, 0, 0,
	1774, 256, 256, 671, 0, 0, 3882, 0, 231, 759,
	0, 0, 2852, 0, 0, 0, 261, 2381, 0, 1954,
	0, 1769, 0, 2282, 0, 0, 0, 0, 261, 261,
	1214, 261, 1214, 261, 150, 261, 0, 261, 0, 0,
	0, 0, 3538, 3539, 0, 2844, 2842, 0, 0, 186,
	0, 0, 2846, 2848, 2838, 0, 0, 230, 0, 3154,
	2314, 0, 0, 2315, 0, 2316, 0, 0, 0, 0,
	223, 0, 0, 0, 0, 0, 0, 261, 0, 224,
	0, 0, 73, 1769, 0, 0, 1745, 1746, 0, 0,
	0, 1954, 0, 0, 0, 0, 0, 1213, 1213, 74,
	0, 185, 741, 0, 2486, 0, 759, 0, 0, 1776,
	0, 0, 0, 0, 0, 78, 1748, 0, 0, 0,
	0, 0, 0, 2580, 2580, 2580, 0, 0, 1215, 1215,
	3601, 3602, 3603, 3604, 3605, 3606, 3607, 3608, 3609, 3610,
	3611, 3612, 3613, 3614, 3615, 3616, 3617, 3618, 3619, 0,
	3623, 1747, 0, 3145, 0, 87, 0, 0, 1765, 1761,
	0, 1758, 1756, 1757, 1749, 1750, 1751, 1752, 1754, 1755,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1213, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1213, 0, 866, 0, 0, 0, 2654,
	3139, 3140, 0, 3157, 3158, 3159, 0, 0, 0, 107,
	0, 1215, 0, 0, 93, 104, 0, 3160, 0, 0,
	0, 0, 0, 0, 1215, 1757, 1749, 1750, 1751, 1752,
	1754, 1755, 2840, 0, 0, 0, 0, 0, 1954, 0,
	0, 0, 0, 2854, 0, 0, 0, 0, 0, 0,
	1213, 0, 0, 1213, 3392, 1753, 0, 0, 0, 3155,
	0, 0, 0, 675, 2853, 2845, 2843, 2847, 2849, 2839,
	2841, 2855, 94, 0, 0, 3154, 0, 0, 261, 2851,
	0, 1215, 0, 4358, 1215, 3424, 0, 675, 0, 0,
	0, 0, 0, 0, 261, 0, 675, 3432, 0, 0,
	0, 0, 1775, 1777, 0, 0, 0, 4378, 261, 0,
	0, 0, 2858, 0, 0, 0, 0, 1461, 1461, 0,
	0, 0, 0, 0, 261, 1290, 0, 0, 0, 0,
	0, 0, 3139, 3140, 1060, 3157, 3158, 3159, 1060, 3473,
	3474, 0, 0, 0, 2731, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1442, 0, 0, 0, 1442, 0,
	0, 1768, 0, 0, 0, 0, 0, 0, 0, 3145,
	0, 0, 261, 1290, 0, 0, 691, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2695, 0, 0, 0,
	1461, 0, 261, 0, 0, 261, 0, 2672, 0, 261,
	2001, 261, 0, 0, 3156, 0, 1280, 3154, 261, 261,
	0, 1290, 1290, 2711, 0, 2207, 0, 97, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 4461, 0, 0,
	0, 1575, 0, 4463, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 73, 0, 0, 0, 73, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	74, 0, 0, 2748, 74, 0, 0, 0, 0, 182,
	100, 0, 103, 0, 261, 3155, 78, 0, 0, 0,
	78, 0, 0, 0, 0, 2859, 0, 261, 0, 0,
	0, 0, 0, 0, 2850, 0, 229, 0, 0, 0,
	261, 3145, 0, 0, 867, 0, 1769, 0, 0, 148,
	0, 0, 0, 0, 0, 0, 87, 0, 0, 0,
	87, 1285, 0, 0, 0, 0, 0, 261, 0, 0,
	0, 0, 0, 1213, 0, 1213, 0, 3151, 3152, 3153,
	0, 0, 0, 231, 3150, 3148, 3149, 3141, 3142, 3143,
	3144, 3146, 3147, 261, 2870, 0, 866, 0, 0, 0,
	866, 0, 0, 0, 1215, 3160, 1215, 0, 0, 150,
	107, 0, 0, 0, 107, 93, 104, 0, 1483, 93,
	104, 261, 0, 261, 186, 0, 0, 0, 0, 0,
	261, 0, 230, 0, 0, 2580, 2580, 0, 0, 0,
	2912, 0, 0, 0, 0, 223, 0, 3155, 0, 0,
	2748, 0, 675, 0, 224, 0, 0, 0, 0, 0,
	3156, 2941, 872, 1461, 2748, 2748, 0, 0, 0, 0,
	0, 0, 0, 94, 0, 0, 185, 94, 0, 0,
	0, 261, 0, 0, 0, 0, 1758, 1756, 1757, 1749,
	1750, 1751, 1752, 1754, 1755, 0, 0, 0, 0, 0,
	261, 1280, 261, 0, 0, 0, 1483, 0, 1483, 1290,
	261, 0, 0, 1280, 0, 1280, 0, 1280, 1266, 0,
	1266, 1266, 0, 2580, 2580, 2580, 2580, 2580, 2580, 2580,
	2580, 2580, 2580, 2580, 2580, 2580, 2580, 2580, 2580, 2580,
	2580, 2580, 0, 2580, 0, 0, 0, 0, 261, 261,
	261, 261, 1280, 0, 0, 1280, 0, 261, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1353,
	0, 0, 0, 0, 0, 1459, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 0, 3156, 3151, 3152, 3153, 0, 0, 261, 0,
	3150, 3148, 3149, 3141, 3142, 3143, 3144, 3146, 3147, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 97, 0,
	0, 0, 97, 0, 0, 0, 0, 0, 0, 0,
	3765, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1442, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1584, 1585, 0, 0, 0,
	182, 100, 0, 103, 182, 100, 0, 103, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1483, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 0,
	0, 229, 0, 0, 0, 867, 3838, 3839, 3840, 867,
	148, 0, 0, 0, 148, 0, 0, 3192, 0, 0,
	0, 0, 0, 1294, 0, 3151, 3152, 3153, 0, 0,
	2001, 2001, 3150, 3148, 3149, 3141, 3142, 3143, 3144, 3146,
	3147, 0, 0, 0, 231, 0, 4137, 0, 231, 0,
	3218, 0, 0, 0, 0, 0, 0, 0, 1060, 0,
	0, 772, 1694, 0, 1442, 3231, 0, 0, 0, 0,
	150, 0, 0, 0, 150, 0, 0, 2001, 0, 0,
	0, 0, 0, 0, 0, 186, 783, 0, 3249, 186,
	0, 0, 0, 230, 0, 0, 0, 230, 0, 0,
	4175, 0, 0, 0, 0, 0, 223, 0, 0, 0,
	223, 0, 0, 0, 0, 224, 2001, 0, 0, 224,
	3139, 3140, 0, 3157, 3158, 3159, 0, 0, 261, 1285,
	0, 0, 0, 0, 0, 0, 0, 1580, 2001, 0,
	2001, 1578, 3547, 0, 261, 0, 0, 0, 0, 675,
	0, 0, 0, 0, 675, 0, 0, 675, 0, 0,
	675, 675, 0, 0, 0, 0, 675, 0, 2001, 0,
	0, 0, 2001, 0, 261, 0, 0, 0, 0, 777,
	0, 0, 2207, 0, 0, 784, 0, 1483, 0, 0,
	0, 0, 0, 1745, 1746, 3154, 0, 0, 0, 782,
	0, 0, 0, 0, 1442, 0, 0, 0, 3943, 3944,
	1483, 0, 0, 0, 0, 0, 1776, 0, 0, 0,
	0, 0, 261, 1748, 0, 0, 261, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 781, 0, 0,
	0, 0, 0, 0, 0, 2748, 2748, 261, 1747, 3285,
	0, 0, 0, 736, 0, 2748, 0, 4306, 3296, 0,
	0, 0, 0, 0, 0, 0, 2748, 3296, 0, 2748,
	3296, 3231, 0, 3296, 0, 0, 0, 0, 779, 3145,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 261,
	3285, 0, 261, 0, 0, 0, 1925, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1294, 1934, 3285, 1459, 261, 0, 3356, 3356, 0, 0,
	1280, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2748, 787, 2748, 0,
	3381, 2748, 3285, 3160, 0, 2748, 3285, 0, 0, 0,
	0, 0, 1753, 1266, 0, 0, 0, 0, 0, 0,
	1459, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 0, 0, 0,
	0, 0, 4108, 0, 4110, 3155, 0, 0, 0, 0,
	261, 3408, 0, 0, 3410, 2748, 0, 0, 261, 1775,
	1777, 0, 261, 0, 0, 1290, 1455, 0, 0, 1356,
	774, 0, 0, 1893, 0, 0, 0, 0, 0, 0,
	261, 0, 0, 0, 0, 2912, 0, 0, 1280, 0,
	261, 0, 0, 2748, 0, 675, 0, 0, 0, 0,
	778, 0, 2748, 0, 156, 0, 0, 0, 0, 0,
	0, 0, 73, 0, 46, 45, 0, 1442, 1768, 0,
	0, 0, 0, 261, 2912, 0, 0, 2912, 4156, 74,
	0, 0, 151, 0, 735, 0, 0, 0, 0, 0,
	0, 0, 0, 3558, 0, 78, 0, 785, 2207, 0,
	0, 0, 0, 776, 0, 0, 67, 0, 0, 3509,
	3574, 0, 0, 48, 0, 153, 1285, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3515, 0, 0, 1280,
	261, 0, 261, 47, 0, 87, 0, 0, 1280, 0,
	3156, 0, 0, 0, 0, 0, 0, 0, 0, 773,
	0, 0, 0, 0, 1442, 0, 0, 0, 0, 0,
	0, 50, 68, 0, 0, 0, 0, 0, 261, 0,
	51, 4224, 0, 0, 0, 57, 0, 780, 0, 154,
	0, 0, 0, 0, 0, 0, 0, 49, 0, 107,
	0, 737, 0, 0, 93, 104, 0, 0, 0, 2580,
	0, 0, 775, 0, 0, 0, 0, 0, 0, 0,
	1046, 0, 0, 1769, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1442, 3579, 2193, 0, 0, 0, 2200,
	0, 0, 0, 0, 52, 0, 0, 0, 0, 0,
	3665, 2213, 0, 0, 0, 0, 0, 0, 0, 1442,
	0, 0, 94, 2580, 0, 0, 0, 2225, 0, 2225,
	0, 0, 0, 0, 0, 2232, 0, 0, 0, 0,
	0, 0, 0, 3151, 3152, 3153, 0, 0, 0, 0,
	3150, 3148, 3149, 3141, 3142, 3143, 3144, 3146, 3147, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2200, 0, 0, 2257,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2277, 0, 0, 0, 2001, 0, 0, 0, 0, 0,
	0, 675, 675, 2290, 0, 2292, 0, 2294, 0, 2296,
	0, 2297, 0, 0, 1756, 1757, 1749, 1750, 1751, 1752,
	1754, 1755, 0, 1483, 1483, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1483, 1483, 1483,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2319, 0, 0, 1442, 0, 0, 97, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1294, 1294, 0,
	0, 0, 0, 0, 53, 0, 0, 0, 0, 0,
	2580, 0, 0, 0, 1294, 0, 0, 0, 56, 0,
	0, 0, 0, 59, 0, 0, 0, 0, 0, 0,
	0, 0, 69, 0, 0, 0, 0, 0, 58, 182,
	100, 0, 103, 0, 759, 0, 54, 0, 0, 0,
	155, 0, 0, 0, 0, 0, 1442, 55, 0, 0,
	0, 0, 0, 1461, 0, 0, 229, 1745, 1746, 0,
	0, 0, 0, 0, 62, 3356, 0, 0, 0, 148,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 0,
	1776, 0, 0, 152, 0, 0, 0, 1748, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3285, 0,
	261, 0, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 1747, 0, 0, 0, 0, 0, 0, 150,
	0, 261, 1767, 0, 0, 0, 261, 0, 0, 0,
	0, 261, 0, 0, 186, 0, 0, 0, 0, 0,
	0, 1285, 230, 0, 0, 0, 0, 0, 0, 0,
	2748, 261, 0, 0, 0, 223, 0, 0, 0, 0,
	2941, 2941, 0, 0, 224, 0, 872, 872, 2748, 0,
	0, 0, 2912, 2912, 0, 0, 872, 2748, 0, 0,
	0, 0, 0, 0, 0, 0, 185, 0, 0, 3,
	0, 0, 2651, 0, 0, 0, 0, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 1770, 1771, 1772, 1773,
	0, 0, 0, 0, 0, 0, 1753, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3936, 0, 2001, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2001, 0,
	0, 2001, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3949, 0, 1775, 1777, 0, 0, 0, 0, 0,
	3901, 0, 0, 0, 0, 0, 2697, 0, 0, 1266,
	0, 0, 0, 1266, 0, 1266, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2213, 0, 0, 0, 0, 1129, 0, 0,
	0, 2001, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1768, 0, 0, 1305, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 0, 0, 0, 1483, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 1046, 0,
	0, 0, 1046, 261, 0, 1745, 1746, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1776, 0,
	0, 0, 0, 0, 0, 1748, 2748, 2748, 0, 3356,
	2748, 0, 0, 0, 0, 0, 0, 3981, 0, 3981,
	1483, 1485, 0, 1491, 0, 1497, 0, 0, 0, 0,
	2748, 1459, 3296, 0, 0, 0, 1483, 1483, 261, 3285,
	1747, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1767, 0, 3285, 0, 261, 3285, 0, 261, 0, 1764,
	0, 0, 0, 0, 0, 0, 1774, 0, 0, 1356,
	0, 0, 2748, 0, 2748, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2200, 0, 1769, 0, 0,
	1586, 0, 1591, 0, 2213, 0, 0, 0, 0, 4129,
	0, 0, 1600, 2748, 1605, 0, 0, 0, 4057, 0,
	0, 0, 0, 3536, 0, 0, 0, 1442, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 0, 0, 0, 1770, 1771, 1772, 1773, 0, 0,
	4129, 0, 0, 0, 1753, 2972, 0, 0, 0, 0,
	1442, 0, 0, 0, 0, 0, 0, 2001, 3981, 1220,
	0, 1483, 0, 2381, 2983, 1442, 2986, 0, 1667, 0,
	0, 1673, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1745, 1746, 1442, 0,
	0, 1775, 1777, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1776,
	0, 0, 3011, 1459, 3013, 1459, 1748, 1762, 1763, 0,
	0, 3019, 0, 2381, 0, 0, 1060, 1758, 1756, 1757,
	1749, 1750, 1751, 1752, 1754, 1755, 0, 0, 0, 0,
	1060, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1768, 1747, 0, 0, 1266, 0, 0, 0, 0, 0,
	0, 1767, 3047, 1798, 1799, 1800, 1801, 1802, 1803, 1804,
	1764, 2748, 0, 3296, 0, 0, 4167, 0, 0, 0,
	0, 0, 0, 0, 261, 0, 0, 0, 0, 0,
	0, 4187, 0, 4187, 1816, 0, 0, 0, 0, 0,
	1829, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 759, 0, 0, 0, 0,
	0, 0, 0, 0, 3535, 0, 1280, 0, 0, 0,
	1442, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3285, 0, 261, 0, 1770, 1771, 1772, 1773, 0,
	0, 0, 0, 0, 0, 1753, 0, 0, 0, 0,
	0, 0, 0, 4167, 0, 0, 0, 0, 0, 0,
	0, 2748, 0, 0, 1774, 0, 0, 0, 0, 0,
	0, 1442, 0, 0, 0, 0, 0, 0, 0, 4255,
	0, 0, 0, 0, 0, 1769, 0, 0, 0, 0,
	0, 1483, 1775, 1777, 0, 1887, 1887, 1887, 0, 0,
	0, 0, 0, 3981, 3981, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1762, 1763,
	0, 261, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3579, 0, 0, 0, 0,
	0, 1768, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3356, 4320, 0, 0, 0, 0, 0, 0,
	4167, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3981, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3981,
	0, 0, 0, 0, 0, 0, 1442, 0, 0, 1442,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 0, 1765, 1761, 0, 1758, 1756, 1757, 1749, 1750,
	1751, 1752, 1754, 1755, 0, 0, 0, 0, 0, 0,
	4057, 0, 1046, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3981, 0, 261, 3981,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3296,
	0, 0, 0, 0, 0, 1774, 1266, 0, 0, 0,
	1459, 1459, 0, 1442, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1483, 1769, 1483, 0, 0,
	1442, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4422,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4187, 0, 0, 261, 0, 0, 1220, 0,
	0, 0, 3334, 3336, 0, 0, 2213, 0, 0, 0,
	0, 0, 0, 0, 2748, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 0, 0,
	0, 0, 1220, 0, 0, 0, 1220, 0, 0, 0,
	0, 0, 0, 0, 1220, 0, 0, 0, 0, 0,
	0, 0, 3579, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1483,
	1442, 0, 0, 1765, 1761, 1220, 1758, 1756, 1757, 1749,
	1750, 1751, 1752, 1754, 1755, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 0, 0, 0,
	0, 1220, 3421, 0, 0, 0, 3425, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1220, 0, 1745, 1746, 0, 1220, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4167, 0,
	1220, 0, 0, 0, 0, 0, 1776, 0, 0, 0,
	0, 0, 0, 1748, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3478, 0, 0,
	0, 0, 2748, 0, 0, 0, 0, 0, 0, 3981,
	0, 3981, 0, 0, 1483, 0, 0, 0, 1747, 0,
	0, 0, 0, 0, 1220, 0, 0, 0, 1767, 0,
	0, 3139, 3140, 0, 3157, 3158, 3159, 1764, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3546, 3518, 0, 1459, 0, 1483, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3056, 3531, 0, 2941, 0, 0, 0, 0, 0,
	0, 0, 0, 2748, 0, 0, 3154, 2356, 0, 2360,
	0, 0, 1770, 1771, 1772, 1773, 2374, 0, 2941, 0,
	0, 0, 1753, 2383, 2384, 2385, 2386, 2387, 2388, 2389,
	2390, 2391, 2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399,
	2400, 2401, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409,
	2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 0, 2423,
	0, 2425, 2426, 2427, 2428, 0, 0, 0, 0, 1775,
	1777, 0, 0, 0, 0, 0, 0, 0, 1442, 0,
	0, 0, 0, 2452, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1816, 1762, 1763, 0, 2467, 0,
	3145, 0, 1442, 0, 0, 2555, 2556, 2557, 2558, 2551,
	2552, 2553, 2554, 0, 2497, 2500, 2503, 2506, 0, 2510,
	2511, 2512, 2513, 2514, 2515, 2516, 0, 0, 1768, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2576, 0, 2587,
	2589, 2594, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2531, 2532, 2533,
	2534, 0, 1220, 0, 1220, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3155, 0, 0, 1220,
	2543, 2544, 2545, 2546, 2539, 2540, 2541, 2542, 2547, 2548,
	2549, 2550, 1442, 0, 1442, 0, 0, 1967, 0, 0,
	0, 1220, 0, 0, 0, 0, 0, 0, 0, 0,
	1745, 1746, 0, 1778, 1779, 1780, 1788, 1789, 1790, 0,
	0, 1442, 1774, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1781, 1776, 0, 0, 0, 0, 0, 0,
	1748, 0, 0, 1769, 0, 0, 0, 0, 0, 1794,
	0, 0, 0, 0, 2527, 2528, 2529, 2530, 2535, 2536,
	2537, 2538, 0, 0, 0, 0, 0, 1220, 0, 0,
	0, 0, 0, 0, 0, 1747, 0, 0, 1220, 1442,
	0, 0, 0, 0, 0, 1767, 0, 0, 0, 0,
	0, 0, 0, 1442, 1764, 0, 0, 0, 0, 0,
	0, 0, 1220, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2213, 0, 0, 0, 0, 0,
	0, 3156, 0, 0, 0, 2213, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3797, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2213, 0, 0, 0, 0, 3815, 1442, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1770,
	1771, 1772, 1773, 0, 0, 0, 0, 0, 0, 1753,
	1765, 1761, 0, 1758, 1756, 1757, 1749, 1750, 1751, 1752,
	1754, 1755, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1442,
	0, 0, 0, 0, 0, 0, 1785, 0, 0, 1795,
	2873, 2874, 3864, 2876, 0, 0, 1775, 1777, 0, 0,
	0, 0, 1220, 1220, 0, 0, 0, 0, 0, 1442,
	0, 0, 1220, 1791, 0, 1792, 0, 0, 0, 0,
	0, 0, 1762, 1763, 3151, 3152, 3153, 0, 0, 0,
	0, 3150, 3148, 3149, 3141, 3142, 3143, 3144, 3146, 3147,
	1783, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1442, 0, 0, 0, 0, 1768, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1442, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1793, 0,
	0, 0, 0, 0, 0, 0, 1220, 0, 1220, 0,
	1220, 0, 0, 0, 1060, 0, 1782, 0, 2999, 0,
	0, 0, 0, 0, 0, 0, 1220, 1220, 0, 0,
	0, 0, 0, 1442, 0, 0, 0, 1220, 1745, 1746,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1220,
	0, 1220, 1220, 1220, 0, 0, 0, 0, 0, 0,
	0, 1776, 0, 0, 0, 0, 0, 0, 1748, 0,
	0, 0, 0, 0, 0, 0, 0, 1798, 1799, 1774,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1442, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1769, 0, 0, 1747, 0, 0, 0, 0, 0, 0,
	0, 0, 3998, 1767, 0, 0, 0, 0, 0, 0,
	0, 0, 1764, 0, 0, 0, 1786, 0, 2213, 0,
	0, 0, 3050, 3051, 0, 0, 0, 0, 3057, 1745,
	1746, 0, 1778, 1779, 1780, 1788, 1789, 1790, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3071, 3072, 0,
	0, 1781, 1776, 2467, 0, 0, 0, 0, 0, 1748,
	0, 0, 3079, 1967, 1967, 1220, 3049, 0, 1794, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3093, 0,
	0, 0, 0, 2213, 0, 0, 0, 1770, 1771, 1772,
	1773, 0, 0, 4079, 1747, 3105, 0, 1753, 0, 0,
	0, 0, 0, 0, 1767, 0, 0, 0, 0, 0,
	0, 0, 0, 1764, 0, 0, 0, 0, 1784, 0,
	0, 0, 0, 1759, 1760, 1766, 1787, 1765, 1761, 0,
	1758, 1756, 1757, 1749, 1750, 1751, 1752, 1754, 1755, 1060,
	1060, 0, 0, 3114, 1775, 1777, 0, 3115, 0, 0,
	0, 0, 1220, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1762, 1763, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1770, 1771,
	1772, 1773, 0, 0, 2594, 2594, 2594, 0, 1753, 0,
	0, 0, 0, 1768, 0, 0, 0, 0, 0, 1887,
	0, 0, 0, 0, 1220, 0, 0, 3196, 0, 0,
	0, 1220, 0, 0, 0, 0, 0, 0, 0, 0,
	1220, 0, 0, 0, 0, 1785, 0, 0, 1795, 0,
	0, 0, 0, 0, 0, 1775, 1777, 1220, 4176, 1060,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1791, 0, 1792, 0, 0, 0, 0, 0,
	0, 1762, 1763, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1783,
	0, 0, 0, 1745, 1746, 0, 1778, 1779, 1780, 1788,
	1789, 1790, 0, 0, 1768, 0, 0, 2213, 0, 0,
	0, 0, 0, 0, 0, 1781, 1776, 0, 0, 0,
	1046, 0, 0, 1748, 0, 0, 0, 1774, 0, 0,
	0, 0, 1794, 0, 1046, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1793, 1769, 0,
	1220, 1220, 0, 0, 0, 0, 0, 0, 1747, 0,
	0, 0, 0, 0, 0, 1782, 0, 3315, 1767, 0,
	0, 0, 0, 0, 0, 0, 0, 1764, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1220, 0, 0, 4296, 1459, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1967, 0, 1774, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1769,
	0, 0, 1770, 1771, 1772, 1773, 0, 0, 0, 0,
	0, 0, 1753, 0, 1220, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1786, 0, 0, 1220, 0,
	0, 0, 0, 0, 0, 1765, 1761, 0, 1758, 1756,
	1757, 1749, 1750, 1751, 1752, 1754, 1755, 0, 0, 1785,
	0, 0, 1795, 0, 0, 0, 0, 0, 0, 1775,
	1777, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1220, 0, 0, 0, 0, 1791, 0, 1792, 0,
	0, 0, 4381, 0, 0, 1762, 1763, 0, 0, 0,
	0, 0, 1745, 1746, 0, 0, 0, 0, 0, 0,
	0, 0, 1220, 1783, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1220, 1776, 1220, 0, 1768, 0,
	0, 0, 1748, 0, 0, 0, 0, 1784, 0, 0,
	0, 1220, 1759, 1760, 1766, 1787, 1765, 1761, 0, 1758,
	1756, 1757, 1749, 1750, 1751, 1752, 1754, 1755, 0, 0,
	0, 0, 2463, 0, 0, 0, 2464, 1747, 0, 0,
	0, 1793, 0, 0, 0, 0, 0, 1767, 0, 4432,
	0, 0, 0, 0, 0, 0, 1764, 0, 0, 1782,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2374, 0, 0, 0,
	0, 0, 3533, 3534, 0, 0, 3537, 0, 0, 4468,
	3540, 0, 0, 0, 0, 0, 0, 0, 0, 3544,
	0, 0, 0, 0, 0, 0, 0, 0, 3551, 0,
	0, 3196, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1774, 0, 0, 0, 3563, 0, 0, 0,
	0, 1770, 1771, 1772, 1773, 0, 0, 0, 0, 0,
	0, 1753, 0, 1769, 0, 0, 3586, 3587, 0, 3588,
	3589, 3590, 0, 0, 0, 0, 0, 0, 0, 0,
	4528, 0, 0, 0, 0, 0, 0, 3596, 0, 1786,
	0, 3598, 0, 0, 1745, 1746, 0, 1778, 1779, 1780,
	1788, 1789, 1790, 0, 0, 0, 0, 0, 1775, 1777,
	0, 0, 0, 0, 0, 0, 1781, 1776, 0, 0,
	0, 0, 3626, 3627, 1748, 0, 0, 0, 0, 0,
	0, 0, 0, 1794, 1762, 1763, 0, 0, 0, 0,
	3638, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3647, 0, 0, 0, 1747,
	0, 0, 0, 0, 0, 0, 0, 1768, 0, 1767,
	0, 0, 0, 0, 0, 0, 0, 0, 1764, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1784, 0, 0, 0, 0, 1759, 1760, 1766, 1787,
	1765, 1761, 0, 1758, 1756, 1757, 1749, 1750, 1751, 1752,
	1754, 1755, 0, 0, 0, 0, 0, 0, 0, 0,
	3907, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3693, 0, 0, 1106, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3704, 0, 1770, 1771, 1772, 1773, 0, 0, 0,
	0, 0, 0, 1753, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1220, 1220, 0, 0, 0, 0,
	262, 262, 262, 0, 0, 3732, 0, 0, 0, 0,
	1220, 1774, 0, 0, 0, 0, 0, 0, 0, 0,
	1785, 0, 0, 1795, 0, 0, 0, 0, 1220, 262,
	1775, 1777, 1769, 0, 0, 0, 0, 0, 0, 0,
	1220, 0, 0, 1220, 0, 0, 0, 1791, 0, 1792,
	0, 0, 0, 0, 0, 262, 1762, 1763, 0, 0,
	0, 0, 1967, 0, 0, 0, 1220, 0, 0, 0,
	0, 0, 0, 0, 1783, 0, 0, 0, 0, 0,
	0, 1220, 1220, 0, 0, 0, 0, 0, 0, 1768,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 721, 0,
	0, 0, 0, 0, 0, 1887, 0, 0, 1220, 0,
	0, 0, 1793, 1967, 3833, 0, 0, 0, 704, 0,
	0, 0, 0, 705, 0, 0, 0, 0, 0, 0,
	1782, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1220, 0, 1765,
	1761, 0, 1758, 1756, 1757, 1749, 1750, 1751, 1752, 1754,
	1755, 0, 706, 0, 0, 0, 0, 0, 0, 1220,
	0, 1220, 0, 707, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1220, 3879,
	3880, 0, 0, 1774, 708, 3884, 3885, 0, 0, 1220,
	3888, 3889, 0, 1220, 0, 0, 0, 3893, 0, 0,
	0, 0, 0, 0, 1769, 0, 727, 0, 3897, 0,
	0, 0, 0, 0, 0, 0, 1220, 0, 0, 0,
	0, 0, 0, 1220, 3902, 1220, 709, 0, 0, 1220,
	1786, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1220, 0, 710,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1220,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 711, 0, 0, 712, 0, 1220, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	736, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1220, 1220, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 726, 0, 0, 0, 0,
	0, 0, 0, 0, 1220, 0, 0, 0, 0, 0,
	0, 0, 1784, 0, 0, 0, 0, 1759, 1760, 1766,
	1787, 1765, 1761, 0, 1758, 1756, 1757, 1749, 1750, 1751,
	1752, 1754, 1755, 0, 0, 0, 0, 0, 0, 0,
	0, 3549, 0, 0, 1220, 0, 0, 1220, 0, 0,
	0, 0, 0, 0, 723, 0, 0, 1745, 1746, 0,
	1778, 1779, 1780, 1788, 1789, 1790, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1781,
	1776, 0, 0, 0, 0, 0, 0, 1748, 0, 0,
	0, 0, 0, 0, 0, 0, 1794, 0, 0, 0,
	0, 0, 0, 0, 1967, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1220, 1747, 0, 714, 0, 0, 0, 0, 0,
	0, 0, 1767, 0, 0, 0, 0, 0, 1220, 0,
	0, 1764, 0, 0, 0, 0, 0, 0, 1967, 1967,
	0, 0, 734, 0, 715, 0, 0, 0, 0, 721,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1967, 1967, 704,
	0, 0, 0, 0, 705, 0, 0, 0, 0, 0,
	0, 735, 0, 0, 0, 0, 0, 0, 716, 0,
	0, 0, 731, 732, 729, 4124, 4125, 4126, 1967, 0,
	724, 0, 0, 717, 0, 0, 1770, 1771, 1772, 1773,
	0, 0, 0, 706, 0, 0, 1753, 0, 2374, 0,
	0, 4135, 4136, 0, 707, 1220, 1220, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4144,
	4147, 0, 0, 0, 718, 708, 725, 0, 0, 0,
	0, 0, 0, 1785, 0, 719, 1795, 0, 1220, 0,
	0, 0, 0, 1775, 1777, 0, 0, 727, 0, 720,
	0, 0, 0, 0, 728, 0, 0, 0, 0, 0,
	1791, 0, 1792, 0, 0, 0, 0, 709, 737, 1762,
	1763, 0, 0, 0, 4188, 0, 0, 0, 0, 722,
	0, 0, 4195, 0, 0, 0, 0, 1783, 0, 0,
	710, 0, 0, 0, 0, 4202, 0, 262, 1046, 262,
	262, 0, 1768, 262, 0, 1303, 0, 0, 0, 0,
	4210, 0, 711, 0, 0, 712, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 736, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1793, 0, 0, 262, 1303,
	262, 262, 0, 1303, 262, 262, 726, 0, 0, 0,
	0, 1303, 0, 1782, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1303, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1220, 0, 0, 1220, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 723, 0, 0, 1303, 0,
	262, 262, 1967, 0, 0, 0, 1774, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1303, 0,
	0, 0, 0, 1303, 262, 262, 0, 1769, 0, 0,
	0, 0, 0, 1220, 0, 0, 0, 1303, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1220, 4325, 0,
	0, 4328, 0, 1786, 0, 0, 0, 0, 1220, 1220,
	1220, 0, 0, 733, 0, 714, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1220, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1220, 1303, 0, 734, 0, 715, 1220, 0, 1082, 109,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1046, 1046, 0, 0, 0, 0, 0,
	1220, 262, 0, 4376, 0, 0, 0, 0, 0, 0,
	0, 1967, 735, 0, 0, 0, 0, 0, 0, 716,
	262, 0, 0, 731, 732, 729, 0, 0, 0, 0,
	0, 724, 0, 0, 717, 1784, 0, 1093, 0, 0,
	1759, 1760, 1766, 1787, 1765, 1761, 0, 1758, 1756, 1757,
	1749, 1750, 1751, 1752, 1754, 1755, 0, 2374, 0, 0,
	0, 0, 0, 0, 3117, 0, 4147, 0, 0, 0,
	0, 0, 109, 0, 0, 718, 0, 725, 0, 0,
	0, 0, 0, 260, 260, 260, 719, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	720, 0, 0, 1046, 0, 728, 0, 0, 1220, 0,
	0, 0, 800, 0, 0, 0, 1220, 0, 0, 737,
	1220, 0, 1220, 0, 0, 0, 0, 0, 0, 1220,
	722, 0, 0, 0, 0, 0, 0, 0, 800, 0,
	1220, 1220, 0, 0, 0, 0, 0, 0, 0, 1220,
	0, 0, 0, 1021, 0, 0, 0, 0, 4491, 4491,
	4491, 0, 0, 0, 1041, 0, 0, 0, 0, 0,
	0, 0, 0, 1220, 0, 1220, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4512, 0,
	0, 0, 0, 0, 0, 0, 0, 1220, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1220, 0, 1220,
	1203, 0, 1220, 0, 0, 0, 0, 0, 0, 0,
	0, 1220, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4491, 0, 0, 262, 0, 0, 0, 0,
	0, 0, 1220, 1220, 0, 0, 1303, 0, 0, 0,
	262, 262, 262, 0, 0, 0, 0, 0, 262, 1216,
	0, 0, 1220, 0, 0, 262, 0, 0, 1303, 0,
	0, 0, 0, 0, 1220, 0, 0, 0, 0, 1220,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 0, 0, 0, 0, 0, 262,
	0, 0, 0, 0, 1220, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1220, 1220, 1220, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1220, 0, 0,
	0, 0, 0, 0, 1303, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1303, 0, 0, 0, 0,
	0, 0, 0, 4491, 4637, 0, 0, 1220, 0, 0,
	0, 0, 4641, 0, 0, 0, 0, 0, 0, 1303,
	0, 0, 0, 0, 0, 0, 0, 0, 1967, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1220, 0,
	1220, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1220, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1967, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1220, 0, 0, 0, 0, 0, 0, 1220, 0,
	0, 0, 0, 1220, 1220, 0, 0, 0, 262, 1303,
	1303, 262, 0, 0, 0, 0, 0, 0, 0, 1303,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1745, 1746, 0,
	1778, 1779, 1780, 1788, 1789, 1790, 0, 0, 1220, 0,
	0, 1220, 0, 0, 0, 0, 0, 0, 0, 1781,
	1776, 0, 0, 0, 262, 0, 0, 1748, 262, 1220,
	1220, 0, 0, 0, 262, 0, 1794, 0, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 262, 0,
	0, 0, 1747, 0, 262, 0, 0, 1967, 0, 0,
	0, 0, 1767, 1303, 0, 1303, 0, 1303, 0, 0,
	0, 1764, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1303, 1303, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1303, 262, 0, 0, 262, 0,
	0, 0, 1220, 0, 0, 0, 1303, 0, 1303, 1303,
	1303, 0, 0, 0, 0, 1220, 0, 0, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 262, 0, 262, 0, 262, 0, 262, 0,
	262, 0, 0, 0, 0, 0, 1770, 1771, 1772, 1773,
	0, 0, 0, 0, 0, 0, 1753, 0, 0, 0,
	0, 109, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1220, 0, 0, 1220, 0, 0, 0, 1220,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 1220,
	1220, 0, 0, 1785, 0, 0, 1795, 0, 0, 0,
	0, 0, 0, 1775, 1777, 0, 1220, 0, 0, 0,
	260, 0, 260, 260, 0, 0, 260, 0, 0, 0,
	1791, 0, 1792, 0, 0, 0, 0, 0, 0, 1762,
	1763, 0, 1303, 0, 0, 0, 0, 109, 0, 109,
	0, 109, 0, 0, 0, 0, 0, 1783, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 1768, 260, 260, 0, 0, 260, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 800, 0, 0, 0, 0, 0,
	0, 0, 1041, 109, 109, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1793, 109, 0, 109, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 109, 1303,
	109, 0, 0, 1782, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1745,
	1746, 0, 1778, 1779, 1780, 1788, 1789, 1790, 0, 0,
	0, 0, 109, 0, 0, 0, 1774, 0, 1303, 0,
	0, 1781, 1776, 0, 0, 0, 0, 0, 0, 1748,
	0, 0, 0, 0, 0, 0, 0, 1769, 1794, 0,
	0, 262, 0, 0, 1303, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	0, 0, 0, 1786, 1747, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1767, 0, 0, 0, 0, 0,
	0, 0, 0, 1764, 260, 1220, 0, 1220, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1021, 260, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1810, 0, 0, 262, 0, 0, 262, 0,
	0, 0, 262, 0, 262, 0, 0, 0, 0, 1815,
	0, 262, 262, 1821, 0, 0, 0, 1303, 1303, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 1770, 1771,
	1772, 1773, 0, 0, 0, 1784, 0, 0, 1753, 0,
	1759, 1760, 1766, 1787, 1765, 1761, 0, 1758, 1756, 1757,
	1749, 1750, 1751, 1752, 1754, 1755, 0, 0, 0, 1303,
	0, 0, 0, 0, 3116, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1785, 0, 262, 1795, 0,
	0, 0, 0, 0, 0, 1775, 1777, 0, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1791, 262, 1792, 0, 0, 0, 0, 0,
	0, 1762, 1763, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1783,
	262, 1303, 0, 1907, 0, 1910, 0, 109, 0, 0,
	0, 0, 0, 0, 1768, 1303, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 262, 1793, 1303, 0,
	0, 0, 1909, 262, 1216, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 1782, 0, 0, 0, 0,
	0, 0, 0, 260, 1909, 260, 0, 0, 0, 1303,
	0, 800, 0, 0, 0, 0, 0, 0, 800, 0,
	0, 1303, 0, 1303, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 0, 0, 1303, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 260, 262, 0, 262, 0, 0, 1774, 0,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1769,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 262, 262, 262, 1786, 0, 0, 0, 0,
	262, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1784, 0, 0,
	0, 0, 1759, 1760, 1766, 1787, 1765, 1761, 0, 1758,
	1756, 1757, 1749, 1750, 1751, 1752, 1754, 1755, 0, 0,
	0, 0, 0, 0, 0, 0, 3113, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 800, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1041, 0, 1041,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 260, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 266, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1303, 0, 0, 0, 0, 0, 260, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 1303, 0, 0, 0, 0,
	0, 0, 0, 0, 800, 260, 0, 260, 0, 260,
	1303, 260, 0, 260, 0, 0, 792, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1303, 0, 0, 1021, 0, 0, 1021,
	1021, 0, 792, 0, 0, 0, 0, 0, 1303, 1303,
	0, 0, 0, 260, 0, 262, 0, 0, 0, 262,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 0, 0, 2441, 1303, 0, 0, 0, 1745,
	1746, 0, 1778, 1779, 1780, 1788, 1789, 1790, 0, 0,
	1041, 0, 0, 0, 0, 0, 0, 0, 0, 1815,
	0, 1781, 1776, 1815, 0, 0, 0, 0, 0, 1748,
	0, 262, 262, 0, 1303, 262, 0, 0, 1794, 0,
	0, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1303, 262, 1303, 0,
	0, 0, 0, 0, 1747, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1767, 1303, 0, 0, 0, 0,
	0, 0, 0, 1764, 0, 0, 1303, 0, 0, 0,
	1303, 0, 0, 0, 0, 1203, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1910, 0, 1303, 0, 0, 0, 0, 0, 262,
	1303, 0, 1303, 0, 0, 0, 1303, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 1303, 262, 109, 0, 0, 0,
	0, 0, 0, 0, 1216, 0, 1303, 0, 1770, 1771,
	1772, 1773, 0, 262, 0, 0, 0, 0, 1753, 0,
	1216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1303, 1303,
	260, 0, 0, 0, 0, 1785, 262, 0, 1795, 0,
	0, 0, 0, 0, 0, 1775, 1777, 0, 0, 0,
	0, 1303, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1791, 0, 1792, 0, 0, 0, 0, 0,
	0, 1762, 1763, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1783,
	0, 1303, 0, 262, 1303, 262, 0, 0, 260, 0,
	0, 260, 0, 0, 1768, 260, 0, 260, 0, 0,
	0, 0, 0, 0, 260, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1793, 0, 0,
	0, 0, 818, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1782, 0, 0, 1303, 0,
	0, 0, 820, 0, 0, 0, 0, 821, 0, 0,
	260, 0, 0, 0, 0, 1303, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 109, 0, 260, 109, 0, 109,
	0, 0, 0, 0, 0, 0, 822, 0, 839, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1774, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 823, 0, 0, 0, 0, 824, 1769,
	0, 0, 0, 109, 0, 1098, 109, 0, 0, 800,
	0, 0, 109, 0, 0, 0, 0, 0, 0, 0,
	848, 0, 0, 0, 0, 1786, 825, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 800,
	846, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 819, 0, 1303, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 109, 0, 0, 826, 0, 0, 827, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 850,
	0, 0, 0, 0, 736, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 260, 1784, 0, 0,
	0, 0, 1759, 1760, 1766, 1787, 1765, 1761, 0, 1758,
	1756, 1757, 1749, 1750, 1751, 1752, 1754, 1755, 0, 0,
	0, 0, 1301, 0, 0, 0, 3112, 0, 0, 0,
	0, 0, 0, 0, 260, 260, 260, 260, 0, 0,
	0, 0, 0, 260, 0, 260, 0, 0, 849, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 844, 0,
	0, 0, 0, 0, 0, 0, 1359, 0, 0, 0,
	1359, 2441, 0, 0, 0, 0, 260, 0, 1301, 0,
	0, 262, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 1815, 0, 0, 0, 0, 0, 0, 1303,
	0, 0, 1303, 262, 0, 0, 0, 0, 0, 1301,
	0, 0, 0, 0, 262, 0, 0, 828, 0, 0,
	0, 0, 0, 0, 262, 0, 0, 0, 830, 0,
	0, 0, 0, 0, 262, 1301, 0, 0, 0, 262,
	0, 0, 0, 0, 262, 0, 0, 0, 0, 0,
	1303, 0, 0, 0, 0, 1301, 0, 0, 831, 0,
	1301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1301, 1303, 1303, 1303, 0, 0,
	0, 0, 0, 0, 840, 0, 0, 0, 0, 0,
	0, 0, 1303, 0, 0, 735, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 817, 1303, 841, 0,
	0, 262, 0, 1303, 0, 0, 0, 832, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1301, 0,
	0, 0, 0, 0, 0, 0, 0, 1303, 0, 0,
	0, 838, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1203, 0, 0, 833, 0,
	0, 0, 834, 853, 0, 852, 0, 0, 0, 835,
	0, 1203, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 836, 0, 0, 0, 0, 845, 0,
	0, 0, 0, 0, 854, 0, 851, 0, 0, 0,
	0, 0, 737, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1303, 0, 1303,
	1909, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1303, 1303, 0,
	0, 0, 0, 0, 0, 0, 1303, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 260, 260, 0, 0, 109, 109, 0, 109,
	109, 109, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 1303, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 1303, 0, 1303, 262, 0, 1303,
	262, 0, 0, 0, 0, 0, 0, 0, 1303, 0,
	0, 0, 109, 109, 0, 109, 109, 109, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 260, 0, 0, 260, 1303,
	1303, 0, 0, 0, 0, 1909, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1303,
	260, 0, 262, 1359, 0, 0, 0, 0, 0, 0,
	0, 1303, 262, 0, 0, 792, 1303, 0, 0, 0,
	0, 0, 792, 0, 0, 1301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1303, 1303, 1303, 0, 0, 0, 1203, 0, 0,
	1041, 0, 260, 0, 1303, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 109, 109, 800, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 260, 0,
	0, 1301, 0, 0, 1303, 0, 1302, 0, 0, 0,
	0, 0, 1301, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1359, 0, 0, 0,
	0, 0, 0, 0, 0, 1303, 0, 1303, 0, 0,
	1360, 0, 0, 0, 1360, 0, 0, 0, 0, 260,
	0, 0, 1302, 0, 0, 0, 0, 0, 1303, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 260, 1302,
	0, 0, 0, 0, 0, 0, 0, 0, 1303, 0,
	0, 0, 0, 0, 0, 1303, 262, 0, 0, 1302,
	1303, 1303, 0, 0, 1302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 1302, 0,
	0, 0, 0, 0, 0, 0, 1301, 1301, 0, 0,
	0, 0, 0, 0, 0, 0, 1359, 0, 0, 0,
	0, 0, 0, 0, 0, 1303, 0, 0, 1303, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1302, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 262, 0, 0, 109, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1203, 1203, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1301, 0, 1301, 0, 1301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1301, 1301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1301, 0, 0, 0, 1216, 1216, 0, 0, 0,
	0, 0, 0, 1301, 0, 1301, 1301, 1301, 0, 0,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 792, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 1303, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1303, 1303, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1303, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1745, 1746, 0, 1778, 1779, 1780, 1788, 1789, 1790,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1359,
	0, 0, 0, 1781, 1776, 0, 0, 0, 262, 0,
	0, 1748, 0, 0, 0, 0, 0, 0, 0, 0,
	1794, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 109, 0, 260, 0, 1747, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 1767, 1360, 0, 0,
	0, 0, 0, 0, 0, 1764, 260, 0, 1203, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 1302,
	0, 0, 0, 0, 0, 0, 1359, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 109, 0, 0, 0, 0, 0, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 1216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1770, 1771, 1772, 1773, 0, 1302, 0, 0, 0, 0,
	1753, 0, 0, 0, 0, 1359, 1302, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	1360, 1359, 0, 0, 0, 0, 0, 1785, 0, 0,
	1795, 0, 0, 0, 0, 0, 0, 1775, 1777, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1791, 0, 1792, 0, 0, 0,
	0, 0, 0, 1762, 1763, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1783, 0, 109, 0, 0, 0, 0, 0, 1203,
	0, 0, 0, 0, 0, 0, 1768, 1203, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1301, 1301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1793,
	0, 0, 0, 0, 0, 0, 0, 0, 1216, 0,
	1302, 1302, 0, 0, 0, 0, 1216, 1782, 0, 0,
	1360, 0, 0, 0, 0, 0, 1359, 0, 0, 1909,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1909, 0, 1909, 0, 0, 0, 0,
	1774, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 1359, 0,
	0, 1769, 109, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 1301, 260, 1302, 109, 1302, 0, 1302, 0,
	0, 0, 0, 0, 0, 0, 0, 1786, 0, 0,
	0, 260, 0, 0, 1302, 1302, 0, 0, 109, 0,
	0, 0, 0, 0, 0, 1302, 0, 0, 0, 0,
	0, 0, 0, 792, 0, 1301, 0, 1302, 0, 1302,
	1302, 1302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 1301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1301, 0,
	1301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1909, 1301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1784,
	0, 0, 0, 0, 1759, 1760, 1766, 1787, 1765, 1761,
	0, 1758, 1756, 1757, 1749, 1750, 1751, 1752, 1754, 1755,
	0, 0, 0, 0, 0, 0, 0, 0, 3111, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1360, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1745, 1746, 0, 1778, 1779, 1780, 1788, 1789,
	1790, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1781, 1776, 0, 0, 0, 0,
	0, 0, 1748, 0, 0, 0, 0, 0, 0, 0,
	260, 1794, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1747, 0, 0,
	1360, 0, 0, 0, 0, 0, 0, 1767, 0, 0,
	0, 0, 0, 0, 0, 0, 1764, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 2441, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1360,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1770, 1771, 1772, 1773, 1360, 0, 0, 0, 1909,
	1909, 1753, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1785, 0,
	0, 1795, 0, 0, 0, 0, 0, 0, 1775, 1777,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1791, 109, 1792, 0, 0,
	0, 0, 0, 0, 1762, 1763, 0, 0, 0, 0,
	0, 0, 1909, 0, 0, 0, 0, 0, 0, 1359,
	109, 0, 1783, 0, 0, 1909, 0, 0, 1302, 1302,
	0, 0, 0, 0, 0, 0, 0, 1768, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 1359, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1359, 0, 0,
	1360, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1793, 0, 1909, 0, 260, 1909, 0, 0, 0, 0,
	1359, 0, 0, 0, 0, 0, 0, 0, 1782, 0,
	0, 0, 0, 0, 0, 1301, 1301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	109, 0, 1360, 0, 0, 0, 109, 0, 0, 0,
	0, 0, 1301, 0, 0, 0, 1302, 0, 0, 0,
	0, 1774, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1769, 0, 0, 0, 0, 0, 0, 0,
	0, 1301, 0, 0, 0, 0, 0, 0, 0, 1302,
	0, 0, 0, 0, 0, 0, 0, 0, 1786, 0,
	0, 260, 0, 1301, 0, 1301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1302, 0, 1359, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1302, 1301, 1302, 0, 0, 1301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1301, 0, 0, 0, 0, 0, 0, 1301, 0, 1301,
	0, 0, 260, 1359, 0, 0, 0, 0, 0, 0,
	792, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1301, 0, 0, 0, 0, 0, 0, 0, 0,
	1784, 0, 0, 1301, 0, 1759, 1760, 1766, 1787, 1765,
	1761, 0, 1758, 1756, 1757, 1749, 1750, 1751, 1752, 1754,
	1755, 0, 0, 0, 0, 0, 0, 0, 0, 2464,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1301, 1301, 0, 0, 0,
	0, 0, 0, 0, 0, 1909, 0, 1909, 0, 1745,
	1746, 0, 1778, 1779, 1780, 1788, 1789, 1790, 1301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1781, 1776, 0, 0, 0, 0, 0, 0, 1748,
	0, 0, 0, 0, 0, 0, 0, 0, 1794, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1359, 0,
	0, 1359, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1747, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1767, 0, 0, 0, 0, 0,
	0, 0, 0, 1764, 0, 0, 0, 0, 0, 1745,
	1746, 0, 1778, 1779, 1780, 1788, 1789, 1790, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1781, 1776, 0, 0, 0, 0, 0, 0, 1748,
	0, 0, 0, 0, 0, 1359, 0, 0, 1794, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1359, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1747, 0, 0, 0, 1770, 1771,
	1772, 1773, 0, 0, 1767, 0, 0, 0, 1753, 0,
	0, 0, 0, 1764, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1785, 0, 0, 1795, 0,
	0, 0, 0, 0, 0, 1775, 1777, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1791, 1360, 1792, 0, 0, 0, 0, 0,
	0, 1762, 1763, 0, 0, 0, 0, 0, 1770, 1771,
	1772, 1773, 0, 0, 0, 0, 0, 0, 1753, 1783,
	0, 0, 0, 0, 0, 0, 1360, 0, 0, 0,
	0, 0, 1359, 0, 1768, 0, 0, 0, 0, 0,
	0, 1360, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1785, 0, 0, 1795, 0,
	0, 0, 0, 0, 1360, 1775, 1777, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1793, 0, 1302,
	1302, 0, 1791, 0, 1792, 0, 0, 0, 0, 0,
	0, 1762, 1763, 0, 0, 1782, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1783,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1768, 0, 1302, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1774, 0,
	0, 0, 0, 0, 0, 1302, 0, 1793, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1769,
	0, 0, 0, 0, 0, 1782, 0, 1302, 0, 1302,
	0, 0, 0, 0, 0, 0, 1301, 0, 0, 1301,
	0, 0, 0, 0, 0, 1786, 1360, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1302, 0, 0,
	0, 1302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1302, 0, 0, 1301, 1774, 0,
	0, 1302, 0, 1302, 0, 0, 0, 1360, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1769,
	0, 0, 1301, 1301, 1301, 1302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1302, 0, 1301,
	0, 0, 0, 0, 0, 1786, 0, 0, 0, 0,
	0, 0, 0, 0, 1301, 0, 0, 1784, 0, 0,
	1359, 0, 1759, 1760, 1766, 1787, 1765, 1761, 0, 1758,
	1756, 1757, 1749, 1750, 1751, 1752, 1754, 1755, 0, 1302,
	1302, 0, 4423, 0, 1359, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1302, 0, 0, 0, 0, 0, 0, 1745,
	1746, 0, 1778, 1779, 1780, 1788, 1789, 1790, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1781, 1776, 0, 0, 0, 0, 0, 0, 1748,
	0, 0, 1360, 0, 0, 1360, 0, 1784, 1794, 0,
	0, 0, 1759, 1760, 1766, 1787, 1765, 1761, 0, 1758,
	1756, 1757, 1749, 1750, 1751, 1752, 1754, 1755, 0, 0,
	0, 0, 4419, 0, 1747, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1767, 0, 0, 0, 0, 0,
	0, 0, 0, 1764, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1359, 0, 1359, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1360,
	0, 0, 0, 0, 1301, 1301, 0, 0, 0, 0,
	0, 0, 0, 1359, 0, 0, 1360, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1770, 1771,
	1772, 1773, 0, 0, 0, 0, 0, 0, 1753, 0,
	0, 1301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1359, 0, 1301, 0, 0, 1301, 0, 0, 0,
	0, 0, 0, 0, 0, 1359, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1785, 0, 0, 1795, 0,
	0, 0, 0, 0, 0, 1775, 1777, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1301, 1301, 0, 0,
	0, 0, 1791, 0, 1792, 0, 0, 0, 0, 0,
	0, 1762, 1763, 0, 0, 0, 1301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1360, 0, 1359, 1783,
	0, 0, 0, 1301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1768, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1301, 1301,
	1301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1359, 0, 0, 0, 0, 0, 1793, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1782, 0, 0, 0, 0,
	0, 1359, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1359, 0, 1301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1774, 0,
	0, 0, 0, 0, 0, 1359, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1769,
	1302, 0, 0, 1302, 0, 0, 0, 0, 0, 0,
	1745, 1746, 0, 1778, 1779, 1780, 1788, 1789, 1790, 0,
	0, 0, 0, 0, 0, 1786, 0, 0, 0, 0,
	0, 0, 1781, 1776, 0, 0, 0, 0, 0, 0,
	1748, 0, 0, 0, 0, 1359, 0, 0, 0, 1794,
	0, 1302, 1301, 0, 0, 0, 0, 1301, 1301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1747, 1302, 1302, 1302, 0,
	0, 0, 0, 0, 0, 1767, 0, 0, 0, 0,
	0, 0, 0, 1302, 1764, 0, 0, 0, 0, 0,
	0, 0, 1359, 0, 0, 1301, 0, 0, 1302, 0,
	0, 0, 0, 0, 1360, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1784, 0, 0,
	0, 0, 1759, 1760, 1766, 1787, 1765, 1761, 1360, 1758,
	1756, 1757, 1749, 1750, 1751, 1752, 1754, 1755, 0, 0,
	0, 0, 4340, 0, 0, 0, 0, 0, 0, 0,
	1745, 1746, 0, 1778, 1779, 1780, 1788, 1789, 1790, 1770,
	1771, 1772, 1773, 0, 0, 0, 0, 0, 0, 1753,
	0, 0, 1781, 1776, 0, 0, 0, 0, 0, 0,
	1748, 0, 0, 0, 0, 0, 0, 0, 0, 1794,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1785, 0, 0, 1795,
	0, 0, 0, 0, 0, 1747, 1775, 1777, 0, 0,
	0, 0, 0, 0, 0, 1767, 0, 0, 0, 0,
	0, 0, 0, 1791, 1764, 1792, 0, 0, 0, 0,
	0, 0, 1762, 1763, 0, 0, 0, 0, 1360, 0,
	1360, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1783, 0, 0, 0, 0, 0, 0, 0, 1302, 1302,
	0, 0, 0, 1301, 0, 1768, 0, 1360, 0, 0,
	0, 0, 0, 1301, 1301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1301, 0, 0, 0, 0, 0, 0, 0, 0, 1770,
	1771, 1772, 1773, 0, 0, 0, 0, 0, 1793, 1753,
	0, 0, 0, 0, 0, 1302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1360, 1782, 1302, 0, 0,
	1302, 0, 0, 0, 0, 0, 0, 0, 0, 1360,
	0, 0, 0, 0, 0, 0, 1785, 0, 0, 1795,
	0, 0, 0, 0, 0, 0, 1775, 1777, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1302, 1302, 0, 1791, 0, 1792, 0, 0, 0, 0,
	0, 0, 1762, 1763, 0, 0, 0, 0, 0, 1774,
	1302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1783, 0, 1360, 0, 0, 0, 0, 1302, 0, 0,
	1769, 0, 0, 0, 0, 1768, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1786, 0, 0, 0,
	0, 0, 1302, 1302, 1302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1360, 0, 0, 1793, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1782, 0, 0, 0,
	0, 0, 0, 0, 0, 1360, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1360, 0, 1302, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1784, 1774,
	0, 0, 0, 1759, 1760, 1766, 1787, 1765, 1761, 1360,
	1758, 1756, 1757, 1749, 1750, 1751, 1752, 1754, 1755, 0,
	1769, 0, 0, 4305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1786, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1360,
	0, 0, 0, 0, 0, 0, 1302, 0, 0, 0,
	0, 1302, 1302, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1360, 0, 0, 1302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1784, 0,
	0, 0, 0, 1759, 1760, 1766, 1787, 1765, 1761, 0,
	1758, 1756, 1757, 1749, 1750, 1751, 1752, 1754, 1755, 0,
	0, 0, 0, 4304, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1357, 0, 0, 1302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1302, 1302, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 1362, 277,
	278, 1363, 1364, 1365, 1302, 1366, 617, 1367, 1368, 1369,
	1370, 279, 280, 1160, 281, 282, 283, 284, 285, 286,
	618, 619, 0, 287, 620, 288, 621, 1371, 622, 289,
	290, 291, 292, 293, 294, 1372, 1373, 0, 295, 623,
	624, 625, 1374, 296, 297, 626, 1375, 1304, 1376, 298,
	299, 300, 301, 302, 303, 304, 0, 1377, 306, 307,
	308, 305, 309, 1378, 310, 0, 311, 312, 313, 314,
	315, 316, 1379, 317, 318, 319, 1161, 320, 321, 322,
	1380, 1381, 1383, 1382, 1384, 1385, 1386, 323, 324, 325,
	326, 327, 0, 328, 627, 628, 1387, 332, 329, 330,
	1388, 333, 331, 334, 1389, 335, 336, 337, 1390, 1391,
	338, 339, 340, 1392, 341, 342, 1393, 343, 344, 345,
	1394, 346, 347, 629, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 630, 631, 359, 1395, 267, 1396,
	0, 0, 0, 0, 360, 361, 362, 632, 0, 0,
	0, 363, 1397, 364, 365, 1398, 1399, 1162, 366, 367,
	633, 634, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 1400, 377, 635, 1401, 636, 378, 1402, 379, 380,
	381, 382, 383, 637, 638, 639, 462, 1164, 384, 385,
	1403, 386, 387, 388, 389, 390, 0, 0, 0, 268,
	391, 392, 393, 395, 1404, 1163, 394, 640, 641, 1405,
	642, 1406, 396, 397, 1165, 643, 1166, 398, 399, 400,
	1167, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 1407, 408, 410, 409, 1408, 411, 644, 1168, 412,
	413, 1169, 1409, 414, 0, 0, 0, 415, 416, 419,
	1410, 1411, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 1170, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 1171, 458, 448, 1412, 269, 1172,
	459, 460, 1413, 645, 461, 646, 463, 464, 1414, 0,
	465, 0, 1415, 1416, 467, 468, 469, 1417, 1418, 470,
	471, 647, 1173, 472, 1174, 648, 473, 474, 466, 475,
	476, 477, 478, 479, 480, 481, 482, 1419, 483, 484,
	649, 485, 486, 487, 650, 488, 489, 490, 651, 491,
	652, 492, 493, 1420, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 653, 503, 505, 504, 506, 1421,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	1422, 521, 522, 523, 1175, 524, 525, 526, 527, 654,
	528, 0, 529, 530, 536, 537, 531, 532, 538, 539,
	540, 541, 542, 1423, 544, 545, 543, 546, 547, 548,
	1424, 549, 550, 533, 534, 551, 552, 1176, 553, 554,
	555, 556, 557, 558, 655, 0, 559, 1425, 560, 561,
	562, 564, 535, 565, 570, 571, 656, 566, 567, 568,
	569, 657, 573, 574, 1426, 575, 576, 0, 572, 563,
	1427, 577, 578, 579, 580, 581, 582, 583, 353, 584,
	1428, 585, 658, 659, 660, 661, 1429, 594, 1430, 586,
	587, 588, 662, 589, 663, 1431, 590, 591, 592, 593,
	0, 595, 596, 1432, 1433, 597, 598, 599, 601, 602,
	600, 603, 1434, 604, 1435, 0, 605, 606, 607, 664,
	665, 666, 1436, 609, 608, 610, 667, 1437, 611, 1438,
	1439, 1440, 1441, 612, 613, 668, 614, 615, 616, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1357, 0, 0, 0, 0, 0, 0,
	0, 2629, 0, 0, 0, 0, 0, 0, 0, 2630,
	270, 272, 271, 273, 274, 275, 276, 1362, 277, 278,
	1363, 1364, 1365, 0, 1366, 617, 1367, 1368, 1369, 1370,
	279, 280, 1160, 281, 282, 283, 284, 285, 286, 618,
	619, 0, 287, 620, 288, 621, 1371, 622, 289, 290,
	291, 292, 293, 294, 1372, 1373, 0, 295, 623, 624,
	625, 1374, 296, 297, 626, 1375, 1304, 1376, 298, 299,
	300, 301, 302, 303, 304, 0, 1377, 306, 307, 308,
	305, 309, 1378, 310, 0, 311, 312, 313, 314, 315,
	316, 1379, 317, 318, 319, 1161, 320, 321, 322, 1380,
	1381, 1383, 1382, 1384, 1385, 1386, 323, 324, 325, 326,
	327, 0, 328, 627, 628, 1387, 332, 329, 330, 1388,
	333, 331, 334, 1389, 335, 336, 337, 1390, 1391, 338,
	339, 340, 1392, 341, 342, 1393, 343, 344, 345, 1394,
	346, 347, 629, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 630, 631, 359, 1395, 267, 1396, 0,
	0, 0, 0, 360, 361, 362, 632, 0, 0, 0,
	363, 1397, 364, 365, 1398, 1399, 1162, 366, 367, 633,
	634, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	1400, 377, 635, 1401, 636, 378, 1402, 379, 380, 381,
	382, 383, 637, 638, 639, 462, 1164, 384, 385, 1403,
	386, 387, 388, 389, 390, 0, 0, 0, 268, 391,
	392, 393, 395, 1404, 1163, 394, 640, 641, 1405, 642,
	1406, 396, 397, 1165, 643, 1166, 398, 399, 400, 1167,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	1407, 408, 410, 409, 1408, 411, 644, 1168, 412, 413,
	1169, 1409, 414, 0, 0, 0, 415, 416, 419, 1410,
	1411, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	1170, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 1171, 458, 448, 1412, 269, 1172, 459,
	460, 1413, 645, 461, 646, 463, 464, 1414, 0, 465,
	0, 1415, 1416, 467, 468, 469, 1417, 1418, 470, 471,
	647, 1173, 472, 1174, 648, 473, 474, 466, 475, 476,
	477, 478, 479, 480, 481, 482, 1419, 483, 484, 649,
	485, 486, 487, 650, 488, 489, 490, 651, 491, 652,
	492, 493, 1420, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 653, 503, 505, 504, 506, 1421, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 1422,
	521, 522, 523, 1175, 524, 525, 526, 527, 654, 528,
	0, 529, 530, 536, 537, 531, 532, 538, 539, 540,
	541, 542, 1423, 544, 545, 543, 546, 547, 548, 1424,
	549, 550, 533, 534, 551, 552, 1176, 553, 554, 555,
	556, 557, 558, 655, 0, 559, 1425, 560, 561, 562,
	564, 535, 565, 570, 571, 656, 566, 567, 568, 569,
	657, 573, 574, 1426, 575, 576, 0, 572, 563, 1427,
	577, 578, 579, 580, 581, 582, 583, 353, 584, 1428,
	585, 658, 659, 660, 661, 1429, 594, 1430, 586, 587,
	588, 662, 589, 663, 1431, 590, 591, 592, 593, 0,
	595, 596, 1432, 1433, 597, 598, 599, 601, 602, 600,
	603, 1434, 604, 1435, 0, 605, 606, 607, 664, 665,
	666, 1436, 609, 608, 610, 667, 1437, 611, 1438, 1439,
	1440, 1441, 612, 613, 668, 614, 615, 616, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1357, 0, 0, 0, 0, 3557, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3559, 270, 272, 271,
	273, 274, 275, 276, 1362, 277, 278, 1363, 1364, 1365,
	0, 1366, 617, 1367, 1368, 1369, 1370, 279, 280, 1160,
	281, 282, 283, 284, 285, 286, 618, 619, 0, 287,
	620, 288, 621, 1371, 622, 289, 290, 291, 292, 293,
	294, 1372, 1373, 0, 295, 623, 624, 625, 1374, 296,
	297, 626, 1375, 1304, 1376, 298, 299, 300, 301, 302,
	303, 304, 0, 1377, 306, 307, 308, 305, 309, 1378,
	310, 0, 311, 312, 313, 314, 315, 316, 1379, 317,
	318, 319, 1161, 320, 321, 322, 1380, 1381, 1383, 1382,
	1384, 1385, 1386, 323, 324, 325, 326, 327, 0, 328,
	627, 628, 1387, 332, 329, 330, 1388, 333, 331, 334,
	1389, 335, 336, 337, 1390, 1391, 338, 339, 340, 1392,
	341, 342, 1393, 343, 344, 345, 1394, 346, 347, 629,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	630, 631, 359, 1395, 267, 1396, 0, 0, 0, 0,
	360, 361, 362, 632, 0, 0, 0, 363, 1397, 364,
	365, 1398, 1399, 1162, 366, 367, 633, 634, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 1400, 377, 635,
	1401, 636, 378, 1402, 379, 380, 381, 382, 383, 637,
	638, 639, 462, 1164, 384, 385, 1403, 386, 387, 388,
	389, 390, 0, 0, 0, 268, 391, 392, 393, 395,
	1404, 1163, 394, 640, 641, 1405, 642, 1406, 396, 397,
	1165, 643, 1166, 398, 399, 400, 1167, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 1407, 408, 410,
	409, 1408, 411, 644, 1168, 412, 413, 1169, 1409, 414,
	0, 0, 0, 415, 416, 419, 1410, 1411, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 1170, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	1171, 458, 448, 1412, 269, 1172, 459, 460, 1413, 645,
	461, 646, 463, 464, 1414, 0, 465, 0, 1415, 1416,
	467, 468, 469, 1417, 1418, 470, 471, 647, 1173, 472,
	1174, 648, 473, 474, 466, 475, 476, 477, 478, 479,
	480, 481, 482, 1419, 483, 484, 649, 485, 486, 487,
	650, 488, 489, 490, 651, 491, 652, 492, 493, 1420,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	653, 503, 505, 504, 506, 1421, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 1422, 521, 522, 523,
	1175, 524, 525, 526, 527, 654, 528, 0, 529, 530,
	536, 537, 531, 532, 538, 539, 540, 541, 542, 1423,
	544, 545, 543, 546, 547, 548, 1424, 549, 550, 533,
	534, 551, 552, 1176, 553, 554, 555, 556, 557, 558,
	655, 0, 559, 1425, 560, 561, 562, 564, 535, 565,
	570, 571, 656, 566, 567, 568, 569, 657, 573, 574,
	1426, 575, 576, 0, 572, 563, 1427, 577, 578, 579,
	580, 581, 582, 583, 353, 584, 1428, 585, 658, 659,
	660, 661, 1429, 594, 1430, 586, 587, 588, 662, 589,
	663, 1431, 590, 591, 592, 593, 0, 595, 596, 1432,
	1433, 597, 598, 599, 601, 602, 600, 603, 1434, 604,
	1435, 0, 605, 606, 607, 664, 665, 666, 1436, 609,
	608, 610, 667, 1437, 611, 1438, 1439, 1440, 1441, 612,
	613, 668, 614, 615, 616, 0, 0, 0, 0, 0,
	0, 1357, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3935, 270, 272,
	271, 273, 274, 275, 276, 1362, 277, 278, 1363, 1364,
	1365, 0, 1366, 617, 1367, 1368, 1369, 1370, 279, 280,
	1160, 281, 282, 283, 284, 285, 286, 618, 619, 0,
	287, 620, 288, 621, 1371, 622, 289, 290, 291, 292,
	293, 294, 1372, 1373, 0, 295, 623, 624, 625, 1374,
	296, 297, 626, 1375, 1304, 1376, 298, 299, 300, 301,
	302, 303, 304, 0, 1377, 306, 307, 308, 305, 309,
	1378, 310, 0, 311, 312, 313, 314, 315, 316, 1379,
	317, 318, 319, 1161, 320, 321, 322, 1380, 1381, 1383,
	1382, 1384, 1385, 1386, 323, 324, 325, 326, 327, 0,
	328, 627, 628, 1387, 332, 329, 330, 1388, 333, 331,
	334, 1389, 335, 336, 337, 1390, 1391, 338, 339, 340,
	1392, 341, 342, 1393, 343, 344, 345, 1394, 346, 347,
	629, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 630, 631, 359, 1395, 267, 1396, 0, 0, 0,
	0, 360, 361, 362, 632, 0, 0, 0, 363, 1397,
	364, 365, 1398, 1399, 1162, 366, 367, 633, 634, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 1400, 377,
	635, 1401, 636, 378, 1402, 379, 380, 381, 382, 383,
	637, 638, 639, 462, 1164, 384, 385, 1403, 386, 387,
	388, 389, 390, 0, 0, 0, 268, 391, 392, 393,
	395, 1404, 1163, 394, 640, 641, 1405, 642, 1406, 396,
	397, 1165, 643, 1166, 398, 399, 400, 1167, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 1407, 408,
	410, 409, 1408, 411, 644, 1168, 412, 413, 1169, 1409,
	414, 0, 0, 0, 415, 416, 419, 1410, 1411, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 1170, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 1171, 458, 448, 1412, 269, 1172, 459, 460, 1413,
	645, 461, 646, 463, 464, 1414, 0, 465, 0, 1415,
	1416, 467, 468, 469, 1417, 1418, 470, 471, 647, 1173,
	472, 1174, 648, 473, 474, 466, 475, 476, 477, 478,
	479, 480, 481, 482, 1419, 483, 484, 649, 485, 486,
	487, 650, 488, 489, 490, 651, 491, 652, 492, 493,
	1420, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 653, 503, 505, 504, 506, 1421, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 1422, 521, 522,
	523, 1175, 524, 525, 526, 527, 654, 528, 0, 529,
	530, 536, 537, 531, 532, 538, 539, 540, 541, 542,
	1423, 544, 545, 543, 546, 547, 548, 1424, 549, 550,
	533, 534, 551, 552, 1176, 553, 554, 555, 556, 557,
	558, 655, 0, 559, 1425, 560, 561, 562, 564, 535,
	565, 570, 571, 656, 566, 567, 568, 569, 657, 573,
	574, 1426, 575, 576, 0, 572, 563, 1427, 577, 578,
	579, 580, 581, 582, 583, 353, 584, 1428, 585, 658,
	659, 660, 661, 1429, 594, 1430, 586, 587, 588, 662,
	589, 663, 1431, 590, 591, 592, 593, 0, 595, 596,
	1432, 1433, 597, 598, 599, 601, 602, 600, 603, 1434,
	604, 1435, 0, 605, 606, 607, 664, 665, 666, 1436,
	609, 608, 610, 667, 1437, 611, 1438, 1439, 1440, 1441,
	612, 613, 668, 614, 615, 616, 0, 1357, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4130, 270, 272, 271, 273, 274, 275,
	276, 1362, 277, 278, 1363, 1364, 1365, 0, 1366, 617,
	1367, 1368, 1369, 1370, 279, 280, 1160, 281, 282, 283,
	284, 285, 286, 618, 619, 0, 287, 620, 288, 621,
	1371, 622, 289, 290, 291, 292, 293, 294, 1372, 1373,
	0, 295, 623, 624, 625, 1374, 296, 297, 626, 1375,
	1304, 1376, 298, 299, 300, 301, 302, 303, 304, 0,
	1377, 306, 307, 308, 305, 309, 1378, 310, 0, 311,
	312, 313, 314, 315, 316, 1379, 317, 318, 319, 1161,
	320, 321, 322, 1380, 1381, 1383, 1382, 1384, 1385, 1386,
	323, 324, 325, 326, 327, 0, 328, 627, 628, 1387,
	332, 329, 330, 1388, 333, 331, 334, 1389, 335, 336,
	337, 1390, 1391, 338, 339, 340, 1392, 341, 342, 1393,
	343, 344, 345, 1394, 346, 347, 629, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 630, 631, 359,
	1395, 267, 1396, 0, 0, 0, 0, 360, 361, 362,
	632, 0, 0, 0, 363, 1397, 364, 365, 1398, 1399,
	1162, 366, 367, 633, 634, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 1400, 377, 635, 1401, 636, 378,
	1402, 379, 380, 381, 382, 383, 637, 638, 639, 462,
	1164, 384, 385, 1403, 386, 387, 388, 389, 390, 0,
	0, 0, 268, 391, 392, 393, 395, 1404, 1163, 394,
	640, 641, 1405, 642, 1406, 396, 397, 1165, 643, 1166,
	398, 399, 400, 1167, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 1407, 408, 410, 409, 1408, 411,
	644, 1168, 412, 413, 1169, 1409, 414, 0, 0, 0,
	415, 416, 419, 1410, 1411, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 1170, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 1171, 458, 448,
	1412, 269, 1172, 459, 460, 1413, 645, 461, 646, 463,
	464, 1414, 0, 465, 0, 1415, 1416, 467, 468, 469,
	1417, 1418, 470, 471, 647, 1173, 472, 1174, 648, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	1419, 483, 484, 649, 485, 486, 487, 650, 488, 489,
	490, 651, 491, 652, 492, 493, 1420, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 653, 503, 505,
	504, 506, 1421, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 1422, 521, 522, 523, 1175, 524, 525,
	526, 527, 654, 528, 0, 529, 530, 536, 537, 531,
	532, 538, 539, 540, 541, 542, 1423, 544, 545, 543,
	546, 547, 548, 1424, 549, 550, 533, 534, 551, 552,
	1176, 553, 554, 555, 556, 557, 558, 655, 0, 559,
	1425, 560, 561, 562, 564, 535, 565, 570, 571, 656,
	566, 567, 568, 569, 657, 573, 574, 1426, 575, 576,
	0, 572, 563, 1427, 577, 578, 579, 580, 581, 582,
	583, 353, 584, 1428, 585, 658, 659, 660, 661, 1429,
	594, 1430, 586, 587, 588, 662, 589, 663, 1431, 590,
	591, 592, 593, 0, 595, 596, 1432, 1433, 597, 598,
	599, 601, 602, 600, 603, 1434, 604, 1435, 0, 605,
	606, 607, 664, 665, 666, 1436, 609, 608, 610, 667,
	1437, 611, 1438, 1439, 1440, 1441, 612, 613, 668, 614,
	615, 616, 0, 1357, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4007,
	270, 272, 271, 273, 274, 275, 276, 1362, 277, 278,
	1363, 1364, 1365, 0, 1366, 617, 1367, 1368, 1369, 1370,
	279, 280, 1160, 281, 282, 283, 284, 285, 286, 618,
	619, 0, 287, 620, 288, 621, 1371, 622, 289, 290,
	291, 292, 293, 294, 1372, 1373, 0, 295, 623, 624,
	625, 1374, 296, 297, 626, 1375, 1304, 1376, 298, 299,
	300, 301, 302, 303, 304, 0, 1377, 306, 307, 308,
	305, 309, 1378, 310, 0, 311, 312, 313, 314, 315,
	316, 1379, 317, 318, 319, 1161, 320, 321, 322, 1380,
	1381, 1383, 1382, 1384, 1385, 1386, 323, 324, 325, 326,
	327, 0, 328, 627, 628, 1387, 332, 329, 330, 1388,
	333, 331, 334, 1389, 335, 336, 337, 1390, 1391, 338,
	339, 340, 1392, 341, 342, 1393, 343, 344, 345, 1394,
	346, 347, 629, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 630, 631, 359, 1395, 267, 1396, 0,
	0, 0, 0, 360, 361, 362, 632, 0, 0, 0,
	363, 1397, 364, 365, 1398, 1399, 1162, 366, 367, 633,
	634, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	1400, 377, 635, 1401, 636, 378, 1402, 379, 380, 381,
	382, 383, 637, 638, 639, 462, 1164, 384, 385, 1403,
	386, 387, 388, 389, 390, 0, 0, 0, 268, 391,
	392, 393, 395, 1404, 1163, 394, 640, 641, 1405, 642,
	1406, 396, 397, 1165, 643, 1166, 398, 399, 400, 1167,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	1407, 408, 410, 409, 1408, 411, 644, 1168, 412, 413,
	1169, 1409, 414, 0, 0, 0, 415, 416, 419, 1410,
	1411, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	1170, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 1171, 458, 448, 1412, 269, 1172, 459,
	460, 1413, 645, 461, 646, 463, 464, 1414, 0, 465,
	0, 1415, 1416, 467, 468, 469, 1417, 1418, 470, 471,
	647, 1173, 472, 1174, 648, 473, 474, 466, 475, 476,
	477, 478, 479, 480, 481, 482, 1419, 483, 484, 649,
	485, 486, 487, 650, 488, 489, 490, 651, 491, 652,
	492, 493, 1420, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 653, 503, 505, 504, 506, 1421, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 1422,
	521, 522, 523, 1175, 524, 525, 526, 527, 654, 528,
	0, 529, 530, 536, 537, 531, 532, 538, 539, 540,
	541, 542, 1423, 544, 545, 543, 546, 547, 548, 1424,
	549, 550, 533, 534, 551, 552, 1176, 553, 554, 555,
	556, 557, 558, 655, 0, 559, 1425, 560, 561, 562,
	564, 535, 565, 570, 571, 656, 566, 567, 568, 569,
	657, 573, 574, 1426, 575, 576, 0, 572, 563, 1427,
	577, 578, 579, 580, 581, 582, 583, 353, 584, 1428,
	585, 658, 659, 660, 661, 1429, 594, 1430, 586, 587,
	588, 662, 589, 663, 1431, 590, 591, 592, 593, 0,
	595, 596, 1432, 1433, 597, 598, 599, 601, 602, 600,
	603, 1434, 604, 1435, 0, 605, 606, 607, 664, 665,
	666, 1436, 609, 608, 610, 667, 1437, 611, 1438, 1439,
	1440, 1441, 612, 613, 668, 614, 615, 616, 0, 1357,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3865, 270, 272, 271, 273,
	274, 275, 276, 1362, 277, 278, 1363, 1364, 1365, 0,
	1366, 617, 1367, 1368, 1369, 1370, 279, 280, 1160, 281,
	282, 283, 284, 285, 286, 618, 619, 0, 287, 620,
	288, 621, 1371, 622, 289, 290, 291, 292, 293, 294,
	1372, 1373, 0, 295, 623, 624, 625, 1374, 296, 297,
	626, 1375, 1304, 1376, 298, 299, 300, 301, 302, 303,
	304, 0, 1377, 306, 307, 308, 305, 309, 1378, 310,
	0, 311, 312, 313, 314, 315, 316, 1379, 317, 318,
	319, 1161, 320, 321, 322, 1380, 1381, 1383, 1382, 1384,
	1385, 1386, 323, 324, 325, 326, 327, 0, 328, 627,
	628, 1387, 332, 329, 330, 1388, 333, 331, 334, 1389,
	335, 336, 337, 1390, 1391, 338, 339, 340, 1392, 341,
	342, 1393, 343, 344, 345, 1394, 346, 347, 629, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 630,
	631, 359, 1395, 267, 1396, 0, 0, 0, 0, 360,
	361, 362, 632, 0, 0, 0, 363, 1397, 364, 365,
	1398, 1399, 1162, 366, 367, 633, 634, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 1400, 377, 635, 1401,
	636, 378, 1402, 379, 380, 381, 382, 383, 637, 638,
	639, 462, 1164, 384, 385, 1403, 386, 387, 388, 389,
	390, 0, 0, 0, 268, 391, 392, 393, 395, 1404,
	1163, 394, 640, 641, 1405, 642, 1406, 396, 397, 1165,
	643, 1166, 398, 399, 400, 1167, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 1407, 408, 410, 409,
	1408, 411, 644, 1168, 412, 413, 1169, 1409, 414, 0,
	0, 0, 415, 416, 419, 1410, 1411, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 1170, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 1171,
	458, 448, 1412, 269, 1172, 459, 460, 1413, 645, 461,
	646, 463, 464, 1414, 0, 465, 0, 1415, 1416, 467,
	468, 469, 1417, 1418, 470, 471, 647, 1173, 472, 1174,
	648, 473, 474, 466, 475, 476, 477, 478, 479, 480,
	481, 482, 1419, 483, 484, 649, 485, 486, 487, 650,
	488, 489, 490, 651, 491, 652, 492, 493, 1420, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 653,
	503, 505, 504, 506, 1421, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 1422, 521, 522, 523, 1175,
	524, 525, 526, 527, 654, 528, 0, 529, 530, 536,
	537, 531, 532, 538, 539, 540, 541, 542, 1423, 544,
	545, 543, 546, 547, 548, 1424, 549, 550, 533, 534,
	551, 552, 1176, 553, 554, 555, 556, 557, 558, 655,
	0, 559, 1425, 560, 561, 562, 564, 535, 565, 570,
	571, 656, 566, 567, 568, 569, 657, 573, 574, 1426,
	575, 576, 0, 572, 563, 1427, 577, 578, 579, 580,
	581, 582, 583, 353, 584, 1428, 585, 658, 659, 660,
	661, 1429, 594, 1430, 586, 587, 588, 662, 589, 663,
	1431, 590, 591, 592, 593, 0, 595, 596, 1432, 1433,
	597, 598, 599, 601, 602, 600, 603, 1434, 604, 1435,
	0, 605, 606, 607, 664, 665, 666, 1436, 609, 608,
	610, 667, 1437, 611, 1438, 1439, 1440, 1441, 612, 613,
	668, 614, 615, 616, 0, 1357, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3575, 270, 272, 271, 273, 274, 275, 276, 1362,
	277, 278, 1363, 1364, 1365, 0, 1366, 617, 1367, 1368,
	1369, 1370, 279, 280, 1160, 281, 282, 283, 284, 285,
	286, 618, 619, 0, 287, 620, 288, 621, 1371, 622,
	289, 290, 291, 292, 293, 294, 1372, 1373, 0, 295,
	623, 624, 625, 1374, 296, 297, 626, 1375, 1304, 1376,
	298, 299, 300, 301, 302, 303, 304, 0, 1377, 306,
	307, 308, 305, 309, 1378, 310, 0, 311, 312, 313,
	314, 315, 316, 1379, 317, 318, 319, 1161, 320, 321,
	322, 1380, 1381, 1383, 1382, 1384, 1385, 1386, 323, 324,
	325, 326, 327, 0, 328, 627, 628, 1387, 332, 329,
	330, 1388, 333, 331, 334, 1389, 335, 336, 337, 1390,
	1391, 338, 339, 340, 1392, 341, 342, 1393, 343, 344,
	345, 1394, 346, 347, 629, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 630, 631, 359, 1395, 267,
	1396, 0, 0, 0, 0, 360, 361, 362, 632, 0,
	0, 0, 363, 1397, 364, 365, 1398, 1399, 1162, 366,
	367, 633, 634, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 1400, 377, 635, 1401, 636, 378, 1402, 379,
	380, 381, 382, 383, 637, 638, 639, 462, 1164, 384,
	385, 1403, 386, 387, 388, 389, 390, 0, 0, 0,
	268, 391, 392, 393, 395, 1404, 1163, 394, 640, 641,
	1405, 642, 1406, 396, 397, 1165, 643, 1166, 398, 399,
	400, 1167, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 1407, 408, 410, 409, 1408, 411, 644, 1168,
	412, 413, 1169, 1409, 414, 0, 0, 0, 415, 416,
	419, 1410, 1411, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 1170, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 1171, 458, 448, 1412, 269,
	1172, 459, 460, 1413, 645, 461, 646, 463, 464, 1414,
	0, 465, 0, 1415, 1416, 467, 468, 469, 1417, 1418,
	470, 471, 647, 1173, 472, 1174, 648, 473, 474, 466,
	475, 476, 477, 478, 479, 480, 481, 482, 1419, 483,
	484, 649, 485, 486, 487, 650, 488, 489, 490, 651,
	491, 652, 492, 493, 1420, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 653, 503, 505, 504, 506,
	1421, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 1422, 521, 522, 523, 1175, 524, 525, 526, 527,
	654, 528, 0, 529, 530, 536, 537, 531, 532, 538,
	539, 540, 541, 542, 1423, 544, 545, 543, 546, 547,
	548, 1424, 549, 550, 533, 534, 551, 552, 1176, 553,
	554, 555, 556, 557, 558, 655, 0, 559, 1425, 560,
	561, 562, 564, 535, 565, 570, 571, 656, 566, 567,
	568, 569, 657, 573, 574, 1426, 575, 576, 0, 572,
	563, 1427, 577, 578, 579, 580, 581, 582, 583, 353,
	584, 1428, 585, 658, 659, 660, 661, 1429, 594, 1430,
	586, 587, 588, 662, 589, 663, 1431, 590, 591, 592,
	593, 0, 595, 596, 1432, 1433, 597, 598, 599, 601,
	602, 600, 603, 1434, 604, 1435, 0, 605, 606, 607,
	664, 665, 666, 1436, 609, 608, 610, 667, 1437, 611,
	1438, 1439, 1440, 1441, 612, 613, 668, 614, 615, 616,
	0, 1357, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3406, 270, 272,
	271, 273, 274, 275, 276, 1362, 277, 278, 1363, 1364,
	1365, 0, 1366, 617, 1367, 1368, 1369, 1370, 279, 280,
	1160, 281, 282, 283, 284, 285, 286, 618, 619, 0,
	287, 620, 288, 621, 1371, 622, 289, 290, 291, 292,
	293, 294, 1372, 1373, 0, 295, 623, 624, 625, 1374,
	296, 297, 626, 1375, 1304, 1376, 298, 299, 300, 301,
	302, 303, 304, 0, 1377, 306, 307, 308, 305, 309,
	1378, 310, 0, 311, 312, 313, 314, 315, 316, 1379,
	317, 318, 319, 1161, 320, 321, 322, 1380, 1381, 1383,
	1382, 1384, 1385, 1386, 323, 324, 325, 326, 327, 0,
	328, 627, 628, 1387, 332, 329, 330, 1388, 333, 331,
	334, 1389, 335, 336, 337, 1390, 1391, 338, 339, 340,
	1392, 341, 342, 1393, 343, 344, 345, 1394, 346, 347,
	629, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 630, 631, 359, 1395, 267, 1396, 0, 0, 0,
	0, 360, 361, 362, 632, 0, 0, 0, 363, 1397,
	364, 365, 1398, 1399, 1162, 366, 367, 633, 634, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 1400, 377,
	635, 1401, 636, 378, 1402, 379, 380, 381, 382, 383,
	637, 638, 639, 462, 1164, 384, 385, 1403, 386, 387,
	388, 389, 390, 0, 0, 0, 268, 391, 392, 393,
	395, 1404, 1163, 394, 640, 641, 1405, 642, 1406, 396,
	397, 1165, 643, 1166, 398, 399, 400, 1167, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 1407, 408,
	410, 409, 1408, 411, 644, 1168, 412, 413, 1169, 1409,
	414, 0, 0, 0, 415, 416, 419, 1410, 1411, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 1170, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 1171, 458, 448, 1412, 269, 1172, 459, 460, 1413,
	645, 461, 646, 463, 464, 1414, 0, 465, 0, 1415,
	1416, 467, 468, 469, 1417, 1418, 470, 471, 647, 1173,
	472, 1174, 648, 473, 474, 466, 475, 476, 477, 478,
	479, 480, 481, 482, 1419, 483, 484, 649, 485, 486,
	487, 650, 488, 489, 490, 651, 491, 652, 492, 493,
	1420, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 653, 503, 505, 504, 506, 1421, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 1422, 521, 522,
	523, 1175, 524, 525, 526, 527, 654, 528, 0, 529,
	530, 536, 537, 531, 532, 538, 539, 540, 541, 542,
	1423, 544, 545, 543, 546, 547, 548, 1424, 549, 550,
	533, 534, 551, 552, 1176, 553, 554, 555, 556, 557,
	558, 655, 0, 559, 1425, 560, 561, 562, 564, 535,
	565, 570, 571, 656, 566, 567, 568, 569, 657, 573,
	574, 1426, 575, 576, 0, 572, 563, 1427, 577, 578,
	579, 580, 581, 582, 583, 353, 584, 1428, 585, 658,
	659, 660, 661, 1429, 594, 1430, 586, 587, 588, 662,
	589, 663, 1431, 590, 591, 592, 593, 0, 595, 596,
	1432, 1433, 597, 598, 599, 601, 602, 600, 603, 1434,
	604, 1435, 0, 605, 606, 607, 664, 665, 666, 1436,
	609, 608, 610, 667, 1437, 611, 1438, 1439, 1440, 1441,
	612, 613, 668, 614, 615, 616, 0, 1357, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2487, 270, 272, 271, 273, 274, 275,
	276, 1362, 277, 278, 1363, 1364, 1365, 0, 1366, 617,
	1367, 1368, 1369, 1370, 279, 280, 1160, 281, 282, 283,
	284, 285, 286, 618, 619, 0, 287, 620, 288, 621,
	1371, 622, 289, 290, 291, 292, 293, 294, 1372, 1373,
	0, 295, 623, 624, 625, 1374, 296, 297, 626, 1375,
	1304, 1376, 298, 299, 300, 301, 302, 303, 304, 0,
	1377, 306, 307, 308, 305, 309, 1378, 310, 0, 311,
	312, 313, 314, 315, 316, 1379, 317, 318, 319, 1161,
	320, 321, 322, 1380, 1381, 1383, 1382, 1384, 1385, 1386,
	323, 324, 325, 326, 327, 0, 328, 627, 628, 1387,
	332, 329, 330, 1388, 333, 331, 334, 1389, 335, 336,
	337, 1390, 1391, 338, 339, 340, 1392, 341, 342, 1393,
	343, 344, 345, 1394, 346, 347, 629, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 630, 631, 359,
	1395, 267, 1396, 0, 0, 0, 0, 360, 361, 362,
	632, 0, 0, 0, 363, 1397, 364, 365, 1398, 1399,
	1162, 366, 367, 633, 634, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 1400, 377, 635, 1401, 636, 378,
	1402, 379, 380, 381, 382, 383, 637, 638, 639, 462,
	1164, 384, 385, 1403, 386, 387, 388, 389, 390, 0,
	0, 0, 268, 391, 392, 393, 395, 1404, 1163, 394,
	640, 641, 1405, 642, 1406, 396, 397, 1165, 643, 1166,
	398, 399, 400, 1167, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 1407, 408, 410, 409, 1408, 411,
	644, 1168, 412, 413, 1169, 1409, 414, 0, 0, 0,
	415, 416, 419, 1410, 1411, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 1170, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 1171, 458, 448,
	1412, 269, 1172, 459, 460, 1413, 645, 461, 646, 463,
	464, 1414, 0, 465, 0, 1415, 1416, 467, 468, 469,
	1417, 1418, 470, 471, 647, 1173, 472, 1174, 648, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	1419, 483, 484, 649, 485, 486, 487, 650, 488, 489,
	490, 651, 491, 652, 492, 493, 1420, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 653, 503, 505,
	504, 506, 1421, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 1422, 521, 522, 523, 1175, 524, 525,
	526, 527, 654, 528, 0, 529, 530, 536, 537, 531,
	532, 538, 539, 540, 541, 542, 1423, 544, 545, 543,
	546, 547, 548, 1424, 549, 550, 533, 534, 551, 552,
	1176, 553, 554, 555, 556, 557, 558, 655, 0, 559,
	1425, 560, 561, 562, 564, 535, 565, 570, 571, 656,
	566, 567, 568, 569, 657, 573, 574, 1426, 575, 576,
	0, 572, 563, 1427, 577, 578, 579, 580, 581, 582,
	583, 353, 584, 1428, 585, 658, 659, 660, 661, 1429,
	594, 1430, 586, 587, 588, 662, 589, 663, 1431, 590,
	591, 592, 593, 0, 595, 596, 1432, 1433, 597, 598,
	599, 601, 602, 600, 603, 1434, 604, 1435, 0, 605,
	606, 607, 664, 665, 666, 1436, 609, 608, 610, 667,
	1437, 611, 1438, 1439, 1440, 1441, 612, 613, 668, 614,
	615, 616, 1453, 0, 1357, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2174,
	0, 270, 272, 271, 273, 274, 275, 276, 1362, 277,
	278, 1363, 1364, 1365, 0, 1366, 617, 1367, 1368, 1369,
	1370, 279, 280, 1160, 281, 282, 283, 284, 285, 286,
	618, 619, 0, 287, 620, 288, 621, 1371, 622, 289,
	290, 291, 292, 293, 294, 1372, 1373, 0, 295, 623,
	624, 625, 1374, 296, 297, 626, 1375, 1304, 1376, 298,
	299, 300, 301, 302, 303, 304, 0, 1377, 306, 307,
	308, 305, 309, 1378, 310, 0, 311, 312, 313, 314,
	315, 316, 1379, 317, 318, 319, 1161, 320, 321, 322,
	1380, 1381, 1383, 1382, 1384, 1385, 1386, 323, 324, 325,
	326, 327, 0, 328, 627, 628, 1387, 332, 329, 330,
	1388, 333, 331, 334, 1389, 335, 336, 337, 1390, 1391,
	338, 339, 340, 1392, 341, 342, 1393, 343, 344, 345,
	1394, 346, 347, 629, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 630, 631, 359, 1395, 267, 1396,
	0, 0, 0, 0, 360, 361, 362, 632, 0, 0,
	0, 363, 1397, 364, 365, 1398, 1399, 1162, 366, 367,
	633, 634, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 1400, 377, 635, 1401, 636, 378, 1402, 379, 380,
	381, 382, 383, 637, 638, 639, 462, 1164, 384, 385,
	1403, 386, 387, 388, 389, 390, 0, 0, 0, 268,
	391, 392, 393, 395, 1404, 1163, 394, 640, 641, 1405,
	642, 1406, 396, 397, 1165, 643, 1166, 398, 399, 400,
	1167, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 1407, 408, 410, 409, 1408, 411, 644, 1168, 412,
	413, 1169, 1409, 414, 0, 0, 0, 415, 416, 419,
	1410, 1411, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 1170, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 1171, 458, 448, 1412, 269, 1172,
	459, 460, 1413, 645, 461, 646, 463, 464, 1414, 0,
	465, 0, 1415, 1416, 467, 468, 469, 1417, 1418, 470,
	471, 647, 1173, 472, 1174, 648, 473, 474, 466, 475,
	476, 477, 478, 479, 480, 481, 482, 1419, 483, 484,
	649, 485, 486, 487, 650, 488, 489, 490, 651, 491,
	652, 492, 493, 1420, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 653, 503, 505, 504, 506, 1421,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	1422, 521, 522, 523, 1175, 524, 525, 526, 527, 654,
	528, 0, 529, 530, 536, 537, 531, 532, 538, 539,
	540, 541, 542, 1423, 544, 545, 543, 546, 547, 548,
	1424, 549, 550, 533, 534, 551, 552, 1176, 553, 554,
	555, 556, 557, 558, 655, 0, 559, 1425, 560, 561,
	562, 564, 535, 565, 570, 571, 656, 566, 567, 568,
	569, 657, 573, 574, 1426, 575, 576, 0, 572, 563,
	1427, 577, 578, 579, 580, 581, 582, 583, 353, 584,
	1428, 585, 658, 659, 660, 661, 1429, 594, 1430, 586,
	587, 588, 662, 589, 663, 1431, 590, 591, 592, 593,
	0, 595, 596, 1432, 1433, 597, 598, 599, 601, 602,
	600, 603, 1434, 604, 1435, 0, 605, 606, 607, 664,
	665, 666, 1436, 609, 608, 610, 667, 1437, 611, 1438,
	1439, 1440, 1441, 612, 613, 668, 614, 615, 616, 1354,
	0, 1357, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 1362, 277, 278, 1363, 1364,
	1365, 0, 1366, 617, 1367, 1368, 1369, 1370, 279, 280,
	1160, 281, 282, 283, 284, 285, 286, 618, 619, 0,
	287, 620, 288, 621, 1371, 622, 289, 290, 291, 292,
	293, 294, 1372, 1373, 0, 295, 623, 624, 625, 1374,
	296, 297, 626, 1375, 1304, 1376, 298, 299, 300, 301,
	302, 303, 304, 0, 1377, 306, 307, 308, 305, 309,
	1378, 310, 0, 311, 312, 313, 314, 315, 316, 1379,
	317, 318, 319, 1161, 320, 321, 322, 1380, 1381, 1383,
	1382, 1384, 1385, 1386, 323, 324, 325, 326, 327, 0,
	328, 627, 628, 1387, 332, 329, 330, 1388, 333, 331,
	334, 1389, 335, 336, 337, 1390, 1391, 338, 339, 340,
	1392, 341, 342, 1393, 343, 344, 345, 1394, 346, 347,
	629, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 630, 631, 359, 1395, 267, 1396, 0, 0, 0,
	0, 360, 361, 362, 632, 0, 0, 0, 363, 1397,
	364, 365, 1398, 1399, 1162, 366, 367, 633, 634, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 1400, 377,
	635, 1401, 636, 378, 1402, 379, 380, 381, 382, 383,
	637, 638, 639, 462, 1164, 384, 385, 1403, 386, 387,
	388, 389, 390, 0, 0, 0, 268, 391, 392, 393,
	395, 1404, 1163, 394, 640, 641, 1405, 642, 1406, 396,
	397, 1165, 643, 1166, 398, 399, 400, 1167, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 1407, 408,
	410, 409, 1408, 411, 644, 1168, 412, 413, 1169, 1409,
	414, 0, 0, 0, 415, 416, 419, 1410, 1411, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 1170, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 1171, 458, 448, 1412, 269, 1172, 459, 460, 1413,
	645, 461, 646, 463, 464, 1414, 0, 465, 0, 1415,
	1416, 467, 468, 469, 1417, 1418, 470, 471, 647, 1173,
	472, 1174, 648, 473, 474, 466, 475, 476, 477, 478,
	479, 480, 481, 482, 1419, 483, 484, 649, 485, 486,
	487, 650, 488, 489, 490, 651, 491, 652, 492, 493,
	1420, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 653, 503, 505, 504, 506, 1421, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 1422, 521, 522,
	523, 1175, 524, 525, 526, 527, 654, 528, 0, 529,
	530, 536, 537, 531, 532, 538, 539, 540, 541, 542,
	1423, 544, 545, 543, 546, 547, 548, 1424, 549, 550,
	533, 534, 551, 552, 1176, 553, 554, 555, 556, 557,
	558, 655, 0, 559, 1425, 560, 561, 562, 564, 535,
	565, 570, 571, 656, 566, 567, 568, 569, 657, 573,
	574, 1426, 575, 576, 0, 572, 563, 1427, 577, 578,
	579, 580, 581, 582, 583, 353, 584, 1428, 585, 658,
	659, 660, 661, 1429, 594, 1430, 586, 587, 588, 662,
	589, 663, 1431, 590, 591, 592, 593, 0, 595, 596,
	1432, 1433, 597, 598, 599, 601, 602, 600, 603, 1434,
	604, 1435, 0, 605, 606, 607, 664, 665, 666, 1436,
	609, 608, 610, 667, 1437, 611, 1438, 1439, 1440, 1441,
	612, 613, 668, 614, 615, 616, 1357, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	1362, 277, 278, 1363, 1364, 1365, 0, 1366, 617, 1367,
	1368, 1369, 1370, 279, 280, 1160, 281, 282, 283, 284,
	285, 286, 618, 619, 0, 287, 620, 288, 621, 1371,
	622, 289, 290, 291, 292, 293, 294, 1372, 1373, 0,
	295, 623, 624, 625, 1374, 296, 297, 626, 1375, 1304,
	1376, 298, 299, 300, 301, 302, 303, 304, 0, 1377,
	306, 307, 308, 305, 309, 1378, 310, 0, 311, 312,
	313, 314, 315, 316, 1379, 317, 318, 319, 1161, 320,
	321, 322, 1380, 1381, 1383, 1382, 1384, 1385, 1386, 323,
	324, 325, 326, 327, 0, 328, 627, 628, 1387, 332,
	329, 330, 1388, 333, 331, 334, 1389, 335, 336, 337,
	1390, 1391, 338, 339, 340, 1392, 341, 342, 1393, 343,
	344, 345, 1394, 346, 347, 629, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 630, 631, 359, 1395,
	267, 1396, 0, 0, 0, 0, 360, 361, 362, 632,
	0, 0, 0, 363, 1397, 364, 365, 1398, 1399, 1162,
	366, 367, 633, 634, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 1400, 377, 635, 1401, 636, 378, 1402,
	379, 380, 381, 382, 383, 637, 638, 639, 462, 1164,
	384, 385, 1403, 386, 387, 388, 389, 390, 0, 0,
	0, 268, 391, 392, 393, 395, 1404, 1163, 394, 640,
	641, 1405, 642, 1406, 396, 397, 1165, 643, 1166, 398,
	399, 400, 1167, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 1407, 408, 410, 409, 1408, 411, 644,
	1168, 412, 413, 1169, 1409, 414, 0, 0, 0, 415,
	416, 419, 1410, 1411, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 1170, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 1171, 458, 448, 1412,
	269, 1172, 459, 460, 1413, 645, 461, 646, 463, 464,
	1414, 0, 465, 0, 1415, 1416, 467, 468, 469, 1417,
	1418, 470, 471, 647, 1173, 472, 1174, 648, 473, 474,
	466, 475, 476, 477, 478, 479, 480, 481, 482, 1419,
	483, 484, 649, 485, 486, 487, 650, 488, 489, 490,
	651, 491, 652, 492, 493, 1420, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 653, 503, 505, 504,
	506, 1421, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 1422, 521, 522, 523, 1175, 524, 525, 526,
	527, 654, 528, 0, 529, 530, 536, 537, 531, 532,
	538, 539, 540, 541, 542, 1423, 544, 545, 543, 546,
	547, 548, 1424, 549, 550, 533, 534, 551, 552, 1176,
	553, 554, 555, 556, 557, 558, 655, 0, 559, 1425,
	560, 561, 562, 564, 535, 565, 570, 571, 656, 566,
	567, 568, 569, 657, 573, 574, 1426, 575, 576, 0,
	572, 563, 1427, 577, 578, 579, 580, 581, 582, 583,
	353, 584, 1428, 585, 658, 659, 660, 661, 1429, 594,
	1430, 586, 587, 588, 662, 589, 663, 1431, 590, 591,
	592, 593, 0, 595, 596, 1432, 1433, 597, 598, 599,
	601, 602, 600, 603, 1434, 604, 1435, 0, 605, 606,
	607, 664, 665, 666, 1436, 609, 608, 610, 667, 1437,
	611, 1438, 1439, 1440, 1441, 612, 613, 668, 614, 615,
	616, 2462, 0, 1096, 1068, 1069, 1070, 1066, 1067, 1079,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 2459, 277, 278,
	0, 0, 0, 0, 0, 1120, 1084, 0, 0, 0,
	279, 280, 1160, 281, 282, 283, 284, 285, 286, 618,
	1133, 0, 287, 1140, 288, 1139, 0, 1150, 289, 290,
	291, 292, 293, 294, 1086, 1119, 1053, 295, 1180, 1181,
	625, 0, 296, 297, 1126, 0, 1107, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 1161, 320, 321, 322, 1110,
	1108, 1109, 1116, 1112, 1111, 1115, 323, 324, 325, 326,
	327, 1143, 328, 1137, 1136, 1057, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 2460, 0, 338,
	1128, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 1063, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 1151, 1152, 359, 1075, 267, 0, 0,
	0, 0, 0, 360, 361, 362, 1135, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 1162, 366, 367, 1148,
	1149, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 1158, 0, 1085, 378, 0, 379, 380, 381,
	382, 383, 1121, 1122, 1125, 462, 1164, 384, 385, 0,
	386, 387, 388, 389, 390, 0, 0, 0, 268, 391,
	392, 393, 395, 0, 1163, 394, 1130, 1131, 0, 1091,
	0, 396, 397, 1165, 1123, 1166, 398, 399, 400, 1167,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 1159, 1168, 412, 413,
	1169, 0, 414, 0, 0, 0, 415, 416, 419, 1114,
	1113, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	1170, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 1171, 458, 448, 1054, 269, 1172, 459,
	460, 1076, 1124, 461, 1138, 463, 464, 0, 0, 465,
	0, 0, 0, 467, 468, 469, 0, 0, 470, 471,
	647, 1173, 472, 1174, 1153, 473, 474, 466, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 649,
	485, 486, 487, 650, 488, 489, 490, 1154, 491, 652,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 1134, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 1175, 524, 525, 526, 527, 1064, 528,
	0, 529, 530, 536, 537, 531, 532, 538, 539, 540,
	541, 542, 0, 544, 545, 543, 546, 547, 548, 1117,
	549, 550, 533, 534, 551, 552, 1176, 553, 554, 555,
	556, 557, 558, 1132, 0, 559, 0, 560, 561, 562,
	564, 535, 565, 570, 571, 1179, 566, 567, 568, 569,
	1155, 573, 574, 0, 575, 576, 1052, 572, 563, 0,
	577, 578, 579, 580, 581, 582, 583, 353, 584, 0,
	585, 1144, 1145, 1146, 1147, 0, 594, 0, 586, 587,
	588, 1156, 589, 1157, 1074, 590, 591, 592, 593, 0,
	595, 596, 0, 1058, 597, 598, 599, 601, 602, 600,
	603, 1118, 604, 0, 0, 605, 606, 607, 664, 1141,
	1178, 2458, 609, 608, 610, 667, 0, 611, 0, 0,
	0, 0, 612, 613, 668, 614, 615, 616, 1055, 0,
	0, 0, 0, 0, 0, 0, 1051, 0, 0, 0,
	0, 0, 0, 1049, 1050, 2461, 0, 0, 0, 0,
	0, 0, 1080, 2457, 0, 1042, 1078, 1096, 1068, 1069,
	1070, 1066, 1067, 1079, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 1120,
	1084, 0, 0, 0, 279, 280, 1160, 281, 282, 283,
	284, 285, 286, 618, 1133, 0, 287, 1140, 288, 1139,
	0, 1150, 289, 290, 291, 292, 293, 294, 1086, 1119,
	1053, 295, 1180, 1181, 625, 0, 296, 297, 1126, 0,
	1107, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 1161,
	320, 321, 322, 1110, 1108, 1109, 1116, 1112, 1111, 1115,
	323, 324, 325, 326, 327, 1143, 328, 1137, 1136, 1057,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 1128, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 1063, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 1151, 1152, 359,
	1075, 267, 0, 0, 0, 0, 0, 360, 361, 362,
	1135, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	1162, 366, 367, 1148, 1149, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 1158, 0, 1085, 378,
	0, 379, 380, 381, 382, 383, 1121, 1122, 1125, 462,
	1164, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	0, 0, 268, 391, 392, 393, 395, 0, 1163, 394,
	1130, 1131, 0, 1091, 0, 396, 397, 1165, 1123, 1166,
	398, 399, 400, 1167, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	1159, 1168, 412, 413, 1169, 0, 414, 0, 0, 0,
	415, 416, 419, 1114, 1113, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 1170, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 1171, 458, 448,
	1054, 269, 1172, 459, 460, 1076, 1124, 461, 1138, 463,
	464, 0, 0, 465, 0, 0, 0, 467, 468, 469,
	0, 0, 470, 471, 647, 1173, 472, 1174, 1153, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 649, 485, 486, 487, 650, 488, 489,
	490, 1154, 491, 652, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 1134, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 1175, 524, 525,
	526, 527, 1064, 528, 0, 529, 530, 536, 537, 531,
	532, 538, 539, 540, 541, 542, 229, 544, 545, 543,
	546, 547, 548, 1117, 549, 550, 533, 534, 551, 552,
	1176, 553, 554, 555, 556, 557, 558, 1132, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 1179,
	566, 567, 568, 569, 1155, 573, 574, 0, 575, 576,
	1052, 572, 563, 231, 577, 578, 579, 580, 581, 582,
	583, 353, 584, 0, 585, 1144, 1145, 1146, 1147, 0,
	594, 0, 586, 587, 588, 1156, 589, 1157, 1074, 590,
	591, 592, 593, 0, 595, 596, 0, 1058, 597, 598,
	599, 601, 602, 600, 603, 1118, 604, 0, 0, 605,
	606, 607, 1576, 1141, 1178, 0, 609, 608, 610, 667,
	0, 611, 0, 0, 0, 223, 612, 613, 668, 614,
	615, 616, 1055, 0, 224, 0, 0, 0, 0, 0,
	1051, 0, 0, 0, 0, 0, 0, 1049, 1050, 1096,
	1068, 1069, 1070, 1066, 1067, 1079, 1820, 1818, 0, 0,
	1078, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 1120, 1084, 0, 0, 0, 279, 280, 1160, 281,
	282, 283, 284, 285, 286, 618, 1133, 0, 287, 1140,
	288, 1139, 0, 1150, 289, 290, 291, 292, 293, 294,
	1086, 1119, 1053, 295, 1180, 1181, 625, 0, 296, 297,
	1126, 0, 1107, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 1161, 320, 321, 322, 1110, 1108, 1109, 1116, 1112,
	1111, 1115, 323, 324, 325, 326, 327, 1143, 328, 1137,
	1136, 1057, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 1128, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 1063, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 1151,
	1152, 359, 1075, 267, 0, 0, 0, 0, 0, 360,
	361, 362, 1135, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 1162, 366, 367, 1148, 1149, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 1158, 0,
	1085, 378, 0, 379, 380, 381, 382, 383, 1121, 1122,
	1125, 462, 1164, 384, 385, 0, 386, 387, 388, 389,
	390, 0, 0, 0, 268, 391, 392, 393, 395, 0,
	1163, 394, 1130, 1131, 0, 1091, 0, 396, 397, 1165,
	1123, 1166, 398, 399, 400, 1167, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 1159, 1168, 412, 413, 1169, 0, 414, 0,
	0, 0, 415, 416, 419, 1114, 1113, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 1170, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 1171,
	458, 448, 1054, 269, 1172, 459, 460, 1076, 1124, 461,
	1138, 463, 464, 0, 0, 465, 0, 0, 0, 467,
	468, 469, 0, 0, 470, 471, 647, 1173, 472, 1174,
	1153, 473, 474, 466, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 649, 485, 486, 487, 650,
	488, 489, 490, 1154, 491, 652, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 1134,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 1175,
	524, 525, 526, 527, 1064, 528, 0, 529, 530, 536,
	537, 531, 532, 538, 539, 540, 541, 542, 229, 544,
	545, 543, 546, 547, 548, 1117, 549, 550, 533, 534,
	551, 552, 1176, 553, 554, 555, 556, 557, 558, 1132,
	0, 559, 0, 560, 561, 562, 564, 535, 565, 570,
	571, 1179, 566, 567, 568, 569, 1155, 573, 574, 0,
	575, 576, 1052, 572, 563, 231, 577, 578, 579, 580,
	581, 582, 583, 353, 584, 0, 585, 1144, 1145, 1146,
	1147, 0, 594, 0, 586, 587, 588, 1156, 589, 1157,
	1074, 590, 591, 592, 593, 0, 595, 596, 0, 1058,
	597, 598, 599, 601, 602, 600, 603, 1118, 604, 0,
	0, 605, 606, 607, 1576, 1141, 1178, 0, 609, 608,
	610, 667, 0, 611, 0, 0, 0, 223, 612, 613,
	668, 614, 615, 616, 1055, 0, 224, 0, 0, 0,
	0, 0, 1051, 0, 0, 0, 0, 0, 0, 1049,
	1050, 1096, 1068, 1069, 1070, 1066, 1067, 1079, 1820, 3069,
	0, 0, 1078, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 1120, 1084, 0, 0, 0, 279, 280,
	1160, 281, 282, 283, 284, 285, 286, 618, 1133, 0,
	287, 1140, 288, 1139, 0, 1150, 289, 290, 291, 292,
	293, 294, 1086, 1119, 1053, 295, 1180, 1181, 625, 0,
	296, 297, 1126, 0, 1107, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 1161, 320, 321, 322, 1110, 1108, 1109,
	1116, 1112, 1111, 1115, 323, 324, 325, 326, 327, 1143,
	328, 1137, 1136, 1057, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 1128, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	1063, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 1151, 1152, 359, 1075, 267, 0, 0, 0, 0,
	0, 360, 361, 362, 1135, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 1162, 366, 367, 1148, 1149, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	1158, 0, 1085, 378, 0, 379, 380, 381, 382, 383,
	1121, 1122, 1125, 462, 1164, 384, 385, 0, 386, 387,
	388, 389, 390, 0, 0, 0, 268, 391, 392, 393,
	395, 0, 1163, 394, 1130, 1131, 0, 1091, 0, 396,
	397, 1165, 1123, 1166, 398, 399, 400, 1167, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 1159, 1168, 412, 413, 1169, 0,
	414, 0, 0, 0, 415, 416, 419, 1114, 1113, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 1170, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 1171, 458, 448, 1054, 269, 1172, 459, 460, 1076,
	1124, 461, 1138, 463, 464, 0, 0, 465, 0, 0,
	0, 467, 468, 469, 0, 0, 470, 471, 647, 1173,
	472, 1174, 1153, 473, 474, 466, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 649, 485, 486,
	487, 650, 488, 489, 490, 1154, 491, 652, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 1134, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 1175, 524, 525, 526, 527, 1064, 528, 0, 529,
	530, 536, 537, 531, 532, 538, 539, 540, 541, 542,
	229, 544, 545, 543, 546, 547, 548, 1117, 549, 550,
	533, 534, 551, 552, 1176, 553, 554, 555, 556, 557,
	558, 1132, 0, 559, 0, 560, 561, 562, 564, 535,
	565, 570, 571, 1179, 566, 567, 568, 569, 1155, 573,
	574, 0, 575, 576, 1052, 572, 563, 231, 577, 578,
	579, 580, 581, 582, 583, 353, 584, 0, 585, 1144,
	1145, 1146, 1147, 0, 594, 0, 586, 587, 588, 1156,
	589, 1157, 1074, 590, 591, 592, 593, 0, 595, 596,
	0, 1058, 597, 598, 599, 601, 602, 600, 603, 1118,
	604, 0, 0, 605, 606, 607, 1576, 1141, 1178, 0,
	609, 608, 610, 667, 0, 611, 0, 0, 0, 223,
	612, 613, 668, 614, 615, 616, 1055, 0, 224, 0,
	0, 0, 0, 0, 1051, 0, 0, 0, 0, 0,
	0, 1049, 1050, 1096, 1068, 1069, 1070, 1066, 1067, 1079,
	1820, 1818, 0, 0, 1078, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 1120, 1084, 0, 0, 0,
	279, 280, 1160, 281, 282, 283, 284, 285, 286, 618,
	1133, 0, 287, 1140, 288, 1139, 2590, 1150, 289, 290,
	291, 292, 293, 294, 1086, 1119, 1053, 295, 1180, 1181,
	625, 0, 296, 297, 1126, 0, 1107, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 1161, 320, 321, 322, 1110,
	1108, 1109, 1116, 1112, 1111, 1115, 323, 324, 325, 326,
	327, 1143, 328, 1137, 1136, 1057, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	1128, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 1063, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 1151, 1152, 359, 1075, 267, 0, 0,
	0, 0, 0, 360, 361, 362, 1135, 0, 0, 0,
	363, 0, 364, 365, 0, 2595, 1162, 366, 367, 1148,
	1149, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 1158, 0, 1085, 378, 0, 379, 380, 381,
	382, 383, 1121, 1122, 1125, 462, 1164, 384, 385, 0,
	386, 387, 388, 389, 390, 0, 0, 0, 268, 391,
	392, 393, 395, 0, 1163, 394, 1130, 1131, 0, 1091,
	0, 396, 397, 1165, 1123, 1166, 398, 399, 400, 1167,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 2591, 411, 1159, 1168, 412, 413,
	1169, 0, 414, 0, 0, 0, 415, 416, 419, 1114,
	1113, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	1170, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 1171, 458, 448, 1054, 269, 1172, 459,
	460, 1076, 1124, 461, 1138, 463, 464, 0, 0, 465,
	0, 0, 0, 467, 468, 469, 0, 0, 470, 471,
	647, 1173, 472, 1174, 1153, 473, 474, 466, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 649,
	485, 486, 487, 650, 488, 489, 490, 1154, 491, 652,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 1134, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 1175, 524, 525, 526, 527, 1064, 528,
	0, 529, 530, 536, 537, 531, 532, 538, 539, 540,
	541, 542, 0, 544, 545, 543, 546, 547, 548, 1117,
	549, 550, 533, 534, 551, 552, 1176, 553, 554, 555,
	556, 557, 558, 1132, 0, 559, 0, 560, 561, 562,
	564, 535, 565, 570, 571, 1179, 566, 567, 568, 569,
	1155, 573, 574, 0, 575, 576, 1052, 572, 563, 0,
	577, 578, 579, 580, 581, 582, 583, 353, 584, 0,
	585, 1144, 1145, 1146, 1147, 0, 594, 2592, 586, 587,
	588, 1156, 589, 1157, 1074, 590, 591, 592, 593, 0,
	595, 596, 0, 1058, 597, 598, 599, 601, 602, 600,
	603, 1118, 604, 0, 0, 605, 606, 607, 664, 1141,
	1178, 0, 609, 608, 610, 667, 0, 611, 0, 0,
	0, 0, 612, 613, 668, 614, 615, 616, 1055, 0,
	0, 0, 0, 0, 0, 0, 1051, 0, 0, 0,
	0, 0, 0, 1049, 1050, 0, 0, 0, 0, 0,
	0, 0, 1080, 0, 0, 2507, 1078, 1096, 1068, 1069,
	1070, 1066, 1067, 1079, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 1120,
	1084, 0, 0, 0, 279, 280, 1160, 281, 282, 283,
	284, 285, 286, 618, 1133, 0, 287, 1140, 288, 1139,
	0, 1150, 289, 290, 291, 292, 293, 294, 1086, 1119,
	1053, 295, 1180, 1181, 625, 0, 296, 297, 1126, 0,
	1107, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 1161,
	320, 321, 322, 1110, 1108, 1109, 1116, 1112, 1111, 1115,
	323, 324, 325, 326, 327, 1143, 328, 1137, 1136, 1057,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 1128, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 1063, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 1151, 1152, 359,
	1075, 267, 0, 0, 0, 0, 0, 360, 361, 362,
	1135, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	1162, 366, 367, 1148, 1149, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 1158, 0, 1085, 378,
	0, 379, 380, 381, 382, 383, 1121, 1122, 1125, 462,
	1164, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	0, 0, 268, 391, 392, 393, 395, 0, 1163, 394,
	1130, 1131, 0, 1091, 0, 396, 397, 1165, 1123, 1166,
	398, 399, 400, 1167, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	1159, 1168, 412, 413, 1169, 0, 414, 0, 0, 0,
	415, 416, 419, 1114, 1113, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 1170, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 1171, 458, 448,
	1054, 269, 1172, 459, 460, 1076, 1124, 461, 1138, 463,
	464, 0, 0, 465, 0, 0, 0, 467, 468, 469,
	0, 0, 470, 471, 647, 1173, 472, 1174, 1153, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 649, 485, 486, 487, 650, 488, 489,
	490, 1154, 491, 652, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 1134, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 1175, 524, 525,
	526, 527, 1064, 528, 0, 529, 530, 536, 537, 531,
	532, 538, 539, 540, 541, 542, 0, 544, 545, 543,
	546, 547, 548, 1117, 549, 550, 533, 534, 551, 552,
	1176, 553, 554, 555, 556, 557, 558, 1132, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 1179,
	566, 567, 568, 569, 1155, 573, 574, 0, 575, 576,
	1052, 572, 563, 0, 577, 578, 579, 580, 581, 582,
	583, 353, 584, 0, 585, 1144, 1145, 1146, 1147, 0,
	594, 0, 586, 587, 588, 1156, 589, 1157, 1074, 590,
	591, 592, 593, 0, 595, 596, 0, 1058, 597, 598,
	599, 601, 602, 600, 603, 1118, 604, 0, 0, 605,
	606, 607, 664, 1141, 1178, 0, 609, 608, 610, 667,
	0, 611, 0, 0, 0, 0, 612, 613, 668, 614,
	615, 616, 1055, 0, 0, 0, 0, 0, 0, 0,
	1051, 0, 0, 0, 0, 0, 0, 1049, 1050, 0,
	0, 0, 0, 0, 0, 0, 1080, 2505, 0, 2504,
	1078, 1096, 1068, 1069, 1070, 1066, 1067, 1079, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 1120, 1084, 0, 0, 0, 279, 280,
	1160, 281, 282, 283, 284, 285, 286, 618, 1133, 0,
	287, 1140, 288, 1139, 0, 1150, 289, 290, 291, 292,
	293, 294, 1086, 1119, 1053, 295, 1180, 1181, 625, 0,
	296, 297, 1126, 0, 1107, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 1161, 320, 321, 322, 1110, 1108, 1109,
	1116, 1112, 1111, 1115, 323, 324, 325, 326, 327, 1143,
	328, 1137, 1136, 1057, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 1128, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	1063, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 1151, 1152, 359, 1075, 267, 0, 0, 0, 0,
	0, 360, 361, 362, 1135, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 1162, 366, 367, 1148, 1149, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	1158, 0, 1085, 378, 0, 379, 380, 381, 382, 383,
	1121, 1122, 1125, 462, 1164, 384, 385, 0, 386, 387,
	388, 389, 390, 0, 0, 0, 268, 391, 392, 393,
	395, 0, 1163, 394, 1130, 1131, 0, 1091, 0, 396,
	397, 1165, 1123, 1166, 398, 399, 400, 1167, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 1159, 1168, 412, 413, 1169, 0,
	414, 0, 0, 0, 415, 416, 419, 1114, 1113, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 1170, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 1171, 458, 448, 1054, 269, 1172, 459, 460, 1076,
	1124, 461, 1138, 463, 464, 0, 0, 465, 0, 0,
	0, 467, 468, 469, 0, 0, 470, 471, 647, 1173,
	472, 1174, 1153, 473, 474, 466, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 649, 485, 486,
	487, 650, 488, 489, 490, 1154, 491, 652, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 1134, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 1175, 524, 525, 526, 527, 1064, 528, 0, 529,
	530, 536, 537, 531, 532, 538, 539, 540, 541, 542,
	0, 544, 545, 543, 546, 547, 548, 1117, 549, 550,
	533, 534, 551, 552, 1176, 553, 554, 555, 556, 557,
	558, 1132, 0, 559, 0, 560, 561, 562, 564, 535,
	565, 570, 571, 1179, 566, 567, 568, 569, 1155, 573,
	574, 0, 575, 576, 1052, 572, 563, 0, 577, 578,
	579, 580, 581, 582, 583, 353, 584, 0, 585, 1144,
	1145, 1146, 1147, 0, 594, 0, 586, 587, 588, 1156,
	589, 1157, 1074, 590, 591, 592, 593, 0, 595, 596,
	0, 1058, 597, 598, 599, 601, 602, 600, 603, 1118,
	604, 0, 0, 605, 606, 607, 664, 1141, 1178, 0,
	609, 608, 610, 667, 0, 611, 0, 0, 0, 0,
	612, 613, 668, 614, 615, 616, 1055, 0, 0, 0,
	0, 0, 0, 0, 1051, 0, 0, 0, 0, 0,
	0, 1049, 1050, 0, 0, 0, 0, 0, 0, 0,
	1080, 2502, 0, 2501, 1078, 1096, 1068, 1069, 1070, 1066,
	1067, 1079, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 1120, 1084, 0,
	0, 0, 279, 280, 1160, 281, 282, 283, 284, 285,
	286, 618, 1133, 0, 287, 1140, 288, 1139, 0, 1150,
	289, 290, 291, 292, 293, 294, 1086, 1119, 1053, 295,
	1180, 1181, 625, 0, 296, 297, 1126, 0, 1107, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 1161, 320, 321,
	322, 1110, 1108, 1109, 1116, 1112, 1111, 1115, 323, 324,
	325, 326, 327, 1143, 328, 1137, 1136, 1057, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 1128, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 1063, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 1151, 1152, 359, 1075, 267,
	0, 0, 0, 0, 0, 360, 361, 362, 1135, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 1162, 366,
	367, 1148, 1149, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 1158, 0, 1085, 378, 0, 379,
	380, 381, 382, 383, 1121, 1122, 1125, 462, 1164, 384,
	385, 0, 386, 387, 388, 389, 390, 0, 0, 0,
	268, 391, 392, 393, 395, 0, 1163, 394, 1130, 1131,
	0, 1091, 0, 396, 397, 1165, 1123, 1166, 398, 399,
	400, 1167, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 1159, 1168,
	412, 413, 1169, 0, 414, 0, 0, 0, 415, 416,
	419, 1114, 1113, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 1170, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 1171, 458, 448, 1054, 269,
	1172, 459, 460, 1076, 1124, 461, 1138, 463, 464, 0,
	0, 465, 0, 0, 0, 467, 468, 469, 0, 0,
	470, 471, 647, 1173, 472, 1174, 1153, 473, 474, 466,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 649, 485, 486, 487, 650, 488, 489, 490, 1154,
	491, 652, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 1134, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 1175, 524, 525, 526, 527,
	1064, 528, 0, 529, 530, 536, 537, 531, 532, 538,
	539, 540, 541, 542, 0, 544, 545, 543, 546, 547,
	548, 1117, 549, 550, 533, 534, 551, 552, 1176, 553,
	554, 555, 556, 557, 558, 1132, 0, 559, 0, 560,
	561, 562, 564, 535, 565, 570, 571, 1179, 566, 567,
	568, 569, 1155, 573, 574, 0, 575, 576, 1052, 572,
	563, 0, 577, 578, 579, 580, 581, 582, 583, 353,
	584, 0, 585, 1144, 1145, 1146, 1147, 0, 594, 0,
	586, 587, 588, 1156, 589, 1157, 1074, 590, 591, 592,
	593, 0, 595, 596, 0, 1058, 597, 598, 599, 601,
	602, 600, 603, 1118, 604, 0, 0, 605, 606, 607,
	664, 1141, 1178, 0, 609, 608, 610, 667, 0, 611,
	0, 0, 0, 0, 612, 613, 668, 614, 615, 616,
	1055, 0, 0, 0, 0, 0, 0, 0, 1051, 0,
	0, 0, 0, 0, 0, 1049, 1050, 0, 0, 0,
	0, 0, 0, 0, 1080, 2499, 0, 2498, 1078, 1096,
	1068, 1069, 1070, 1066, 1067, 1079, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 1120, 1084, 0, 0, 0, 279, 280, 1160, 281,
	282, 283, 284, 285, 286, 618, 1133, 0, 287, 1140,
	288, 1139, 0, 1150, 289, 290, 291, 292, 293, 294,
	1086, 1119, 1053, 295, 1180, 1181, 625, 0, 296, 297,
	1126, 0, 1107, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 1161, 320, 321, 322, 1110, 1108, 1109, 1116, 1112,
	1111, 1115, 323, 324, 325, 326, 327, 1143, 328, 1137,
	1136, 1057, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 1128, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 1063, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 1151,
	1152, 359, 1075, 267, 0, 0, 0, 0, 0, 360,
	361, 362, 1135, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 1162, 366, 367, 1148, 1149, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 1158, 0,
	1085, 378, 0, 379, 380, 381, 382, 383, 1121, 1122,
	1125, 462, 1164, 384, 385, 0, 386, 387, 388, 389,
	390, 0, 0, 0, 268, 391, 392, 393, 395, 0,
	1163, 394, 1130, 1131, 0, 1091, 0, 396, 397, 1165,
	1123, 1166, 398, 399, 400, 1167, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 1159, 1168, 412, 413, 1169, 0, 414, 0,
	0, 0, 415, 416, 419, 1114, 1113, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 1170, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 1171,
	458, 448, 1054, 269, 1172, 459, 460, 1076, 1124, 461,
	1138, 463, 464, 0, 0, 465, 0, 0, 0, 467,
	468, 469, 0, 0, 470, 471, 647, 1173, 472, 1174,
	1153, 473, 474, 466, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 649, 485, 486, 487, 650,
	488, 489, 490, 1154, 491, 652, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 1134,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 1175,
	524, 525, 526, 527, 1064, 528, 0, 529, 530, 536,
	537, 531, 532, 538, 539, 540, 541, 542, 0, 544,
	545, 543, 546, 547, 548, 1117, 549, 550, 533, 534,
	551, 552, 1176, 553, 554, 555, 556, 557, 558, 1132,
	0, 559, 0, 560, 561, 562, 564, 535, 565, 570,
	571, 1179, 566, 567, 568, 569, 1155, 573, 574, 0,
	575, 576, 1052, 572, 563, 0, 577, 578, 579, 580,
	581, 582, 583, 353, 584, 0, 585, 1144, 1145, 1146,
	1147, 0, 594, 0, 586, 587, 588, 1156, 589, 1157,
	1074, 590, 591, 592, 593, 0, 595, 596, 0, 1058,
	597, 598, 599, 601, 602, 600, 603, 1118, 604, 0,
	0, 605, 606, 607, 664, 1141, 1178, 0, 609, 608,
	610, 667, 0, 611, 0, 0, 0, 0, 612, 613,
	668, 614, 615, 616, 1055, 0, 0, 0, 0, 0,
	0, 0, 1051, 0, 0, 0, 0, 0, 0, 1049,
	1050, 0, 0, 0, 0, 0, 0, 0, 1080, 2496,
	0, 1669, 1078, 1096, 1068, 1069, 1070, 1066, 1067, 1079,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 1120, 1084, 0, 0, 0,
	279, 280, 1160, 281, 282, 283, 284, 285, 286, 618,
	1133, 0, 287, 1140, 288, 1139, 0, 1150, 289, 290,
	291, 292, 293, 294, 1086, 1119, 1053, 295, 1180, 1181,
	625, 0, 296, 297, 1126, 0, 1107, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 1161, 320, 321, 322, 1110,
	1108, 1109, 1116, 1112, 1111, 1115, 323, 324, 325, 326,
	327, 1143, 328, 1137, 1136, 1057, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	1128, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 1063, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 1151, 1152, 359, 1075, 267, 0, 0,
	0, 0, 0, 360, 361, 362, 1135, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 1162, 366, 367, 1148,
	1149, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 1158, 0, 1085, 378, 0, 379, 380, 381,
	382, 383, 1121, 1122, 1125, 462, 1164, 384, 385, 0,
	386, 387, 388, 389, 390, 0, 0, 0, 268, 391,
	392, 393, 395, 0, 1163, 394, 1130, 1131, 0, 1091,
	0, 396, 397, 1165, 1123, 1166, 398, 399, 400, 1167,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 1159, 1168, 412, 413,
	1169, 0, 414, 0, 0, 0, 415, 416, 419, 1114,
	1113, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	1170, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 1171, 458, 448, 1054, 269, 1172, 459,
	460, 1076, 1124, 461, 1138, 463, 464, 0, 0, 465,
	0, 0, 0, 467, 468, 469, 0, 0, 470, 471,
	647, 1173, 472, 1174, 1153, 473, 474, 466, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 649,
	485, 486, 487, 650, 488, 489, 490, 1154, 491, 652,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 1134, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 1175, 524, 525, 526, 527, 1064, 528,
	0, 529, 530, 536, 537, 531, 532, 538, 539, 540,
	541, 542, 0, 544, 545, 543, 546, 547, 548, 1117,
	549, 550, 533, 534, 551, 552, 1176, 553, 554, 555,
	556, 557, 558, 1132, 0, 559, 0, 560, 561, 562,
	564, 535, 565, 570, 571, 1179, 566, 567, 568, 569,
	1155, 573, 574, 0, 575, 576, 1052, 572, 563, 0,
	577, 578, 579, 580, 581, 582, 583, 353, 584, 0,
	585, 1144, 1145, 1146, 1147, 0, 594, 0, 586, 587,
	588, 1156, 589, 1157, 1074, 590, 591, 592, 593, 0,
	595, 596, 0, 1058, 597, 598, 599, 601, 602, 600,
	603, 1118, 604, 0, 0, 605, 606, 607, 664, 1141,
	1178, 0, 609, 608, 610, 667, 0, 611, 1668, 0,
	0, 0, 612, 613, 668, 614, 615, 616, 1055, 0,
	0, 0, 0, 0, 0, 0, 1051, 0, 0, 0,
	0, 0, 0, 1049, 1050, 0, 0, 0, 0, 0,
	0, 0, 1080, 0, 0, 1045, 1078, 1096, 1068, 1069,
	1070, 1066, 1067, 1079, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 1120,
	1084, 0, 0, 0, 279, 280, 1160, 281, 282, 283,
	284, 285, 286, 618, 1133, 0, 287, 1140, 288, 1139,
	0, 1150, 289, 290, 291, 292, 293, 294, 1086, 1119,
	1053, 295, 1180, 1181, 625, 0, 296, 297, 1126, 0,
	1107, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 1161,
	320, 321, 322, 1110, 1108, 1109, 1116, 1112, 1111, 1115,
	323, 324, 325, 326, 327, 1143, 328, 1137, 1136, 1057,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 1128, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 1063, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 1151, 1152, 359,
	1075, 267, 0, 0, 0, 0, 0, 360, 361, 362,
	1135, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	1162, 366, 367, 1148, 1149, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 1158, 0, 1085, 378,
	0, 379, 380, 381, 382, 383, 1121, 1122, 1125, 462,
	1164, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	0, 0, 268, 391, 392, 393, 395, 0, 1163, 394,
	1130, 1131, 0, 1091, 0, 396, 397, 1165, 1123, 1166,
	398, 399, 400, 1167, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	1159, 1168, 412, 413, 1169, 0, 414, 0, 0, 0,
	415, 416, 419, 1114, 1113, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 1170, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 1171, 458, 448,
	1054, 269, 1172, 459, 460, 1076, 1124, 461, 1138, 463,
	464, 0, 0, 465, 0, 1059, 0, 467, 468, 469,
	0, 0, 470, 471, 647, 1173, 472, 1174, 1153, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 649, 485, 486, 487, 650, 488, 489,
	490, 1154, 491, 652, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 1134, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 1175, 524, 525,
	526, 527, 1064, 528, 0, 529, 530, 536, 537, 531,
	532, 538, 539, 540, 541, 542, 0, 544, 545, 543,
	546, 547, 548, 1117, 549, 550, 533, 534, 551, 552,
	1176, 553, 554, 555, 556, 557, 558, 1132, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 1179,
	566, 567, 568, 569, 1155, 573, 574, 0, 575, 576,
	1052, 572, 563, 0, 577, 578, 579, 580, 581, 582,
	583, 353, 584, 0, 585, 1144, 1145, 1146, 1147, 0,
	594, 0, 586, 587, 588, 1156, 589, 1157, 1074, 590,
	591, 592, 593, 0, 595, 596, 0, 1058, 597, 598,
	599, 601, 602, 600, 603, 1118, 604, 0, 0, 605,
	606, 607, 664, 1141, 1178, 0, 609, 608, 610, 667,
	0, 611, 0, 0, 0, 0, 612, 613, 668, 614,
	615, 616, 1055, 0, 0, 0, 0, 0, 0, 0,
	1051, 0, 0, 0, 0, 0, 0, 1049, 1050, 1096,
	1068, 1069, 1070, 1066, 1067, 1079, 1080, 0, 0, 0,
	1078, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 1120, 1084, 0, 0, 0, 279, 280, 1160, 281,
	282, 283, 284, 285, 286, 618, 1133, 0, 287, 1140,
	288, 1139, 0, 1150, 289, 290, 291, 292, 293, 294,
	1086, 1119, 1053, 295, 1180, 1181, 625, 0, 296, 297,
	1126, 0, 1107, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 4444, 316, 0, 317, 318,
	319, 1161, 320, 321, 322, 1110, 1108, 1109, 1116, 1112,
	1111, 1115, 323, 324, 325, 326, 327, 1143, 328, 1137,
	1136, 1057, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 1128, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 1063, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 1151,
	1152, 359, 1075, 267, 0, 0, 0, 0, 0, 360,
	361, 362, 1135, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 1162, 366, 367, 1148, 1149, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 1158, 0,
	1085, 378, 0, 379, 380, 381, 382, 383, 1121, 1122,
	1125, 462, 1164, 384, 385, 0, 386, 387, 388, 389,
	390, 0, 0, 0, 268, 391, 392, 393, 395, 0,
	1163, 394, 1130, 1131, 0, 1091, 0, 396, 397, 1165,
	1123, 1166, 398, 399, 400, 1167, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 1159, 1168, 412, 413, 1169, 0, 414, 0,
	0, 0, 415, 416, 419, 1114, 1113, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 1170, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 1171,
	458, 448, 1054, 269, 1172, 459, 460, 1076, 1124, 461,
	1138, 463, 464, 0, 0, 465, 0, 1059, 0, 467,
	468, 469, 0, 0, 470, 471, 647, 1173, 472, 1174,
	1153, 473, 474, 466, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 649, 485, 486, 487, 650,
	488, 489, 490, 1154, 491, 652, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 1134,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 1175,
	524, 525, 526, 527, 1064, 528, 0, 529, 530, 536,
	537, 531, 532, 538, 539, 540, 541, 542, 0, 544,
	545, 543, 546, 547, 548, 1117, 549, 550, 533, 534,
	551, 552, 1176, 553, 554, 555, 556, 557, 558, 1132,
	0, 559, 0, 560, 561, 562, 564, 535, 565, 570,
	571, 1179, 566, 567, 568, 569, 1155, 573, 574, 0,
	575, 576, 1052, 572, 563, 0, 577, 578, 579, 580,
	581, 582, 583, 353, 584, 0, 585, 1144, 1145, 1146,
	1147, 0, 594, 0, 586, 587, 588, 1156, 589, 1157,
	1074, 590, 591, 592, 593, 0, 595, 596, 0, 1058,
	597, 598, 599, 601, 602, 600, 603, 1118, 604, 0,
	0, 605, 606, 607, 664, 1141, 1178, 0, 609, 608,
	610, 667, 0, 611, 0, 0, 0, 0, 612, 613,
	668, 614, 615, 616, 1055, 0, 0, 0, 0, 0,
	0, 0, 1051, 0, 0, 0, 0, 0, 0, 1049,
	1050, 1096, 1068, 1069, 1070, 1066, 1067, 1079, 1080, 0,
	0, 0, 1078, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 1120, 1084, 0, 0, 0, 279, 280,
	1160, 281, 282, 283, 284, 285, 286, 618, 1133, 0,
	287, 1140, 288, 1139, 0, 1150, 289, 290, 291, 292,
	293, 294, 1086, 1119, 1053, 295, 1180, 1181, 625, 0,
	296, 297, 1126, 0, 1107, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 1161, 320, 321, 322, 1110, 1108, 1109,
	1116, 1112, 1111, 1115, 323, 324, 325, 326, 327, 1143,
	328, 1137, 1136, 1057, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 1128, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	1063, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 1151, 1152, 359, 1075, 267, 0, 0, 0, 0,
	0, 360, 361, 362, 1135, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 1162, 366, 367, 1148, 1149, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	1158, 0, 1085, 378, 0, 379, 380, 381, 382, 383,
	1121, 1122, 1125, 462, 1164, 384, 385, 0, 386, 387,
	388, 389, 390, 0, 0, 0, 2376, 391, 392, 393,
	395, 0, 1163, 394, 1130, 1131, 0, 1091, 0, 396,
	397, 1165, 1123, 1166, 398, 399, 400, 1167, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 1159, 1168, 412, 413, 1169, 0,
	414, 0, 0, 0, 415, 416, 419, 1114, 1113, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 1170, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 1171, 458, 448, 1054, 269, 1172, 459, 460, 1076,
	1124, 461, 1138, 463, 464, 0, 0, 465, 0, 0,
	0, 467, 468, 469, 0, 0, 470, 471, 647, 1173,
	472, 1174, 1153, 473, 474, 466, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 649, 485, 486,
	487, 650, 488, 489, 490, 1154, 491, 652, 492, 493,
	2375, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 1134, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 1175, 524, 525, 526, 527, 1064, 528, 0, 529,
	530, 536, 537, 531, 532, 538, 539, 540, 541, 542,
	0, 544, 545, 543, 546, 547, 548, 1117, 549, 550,
	533, 534, 551, 552, 1176, 553, 554, 555, 556, 557,
	558, 1132, 0, 559, 0, 560, 561, 562, 564, 535,
	565, 570, 571, 1179, 566, 567, 568, 569, 1155, 573,
	574, 0, 575, 576, 1052, 572, 563, 0, 577, 578,
	579, 580, 581, 582, 583, 353, 584, 0, 585, 1144,
	1145, 1146, 1147, 0, 594, 0, 586, 587, 588, 1156,
	589, 1157, 1074, 590, 591, 592, 593, 0, 595, 596,
	0, 1058, 597, 598, 599, 601, 602, 600, 603, 1118,
	604, 0, 0, 605, 606, 607, 664, 1141, 1178, 0,
	609, 608, 610, 667, 0, 611, 0, 0, 0, 0,
	612, 613, 668, 614, 615, 616, 1055, 0, 0, 0,
	0, 0, 0, 0, 1051, 0, 0, 0, 0, 0,
	0, 1049, 1050, 1096, 1068, 1069, 1070, 1066, 1067, 1079,
	1080, 0, 0, 0, 1078, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 1120, 1084, 0, 0, 0,
	279, 280, 1160, 281, 282, 283, 284, 285, 286, 618,
	1133, 0, 287, 1140, 288, 1139, 0, 1150, 289, 290,
	291, 292, 293, 294, 1086, 1119, 1053, 295, 1180, 1181,
	625, 0, 296, 297, 1126, 0, 1107, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 1161, 320, 321, 322, 1110,
	1108, 1109, 1116, 1112, 1111, 1115, 323, 324, 325, 326,
	327, 1143, 328, 1137, 1136, 1057, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	1128, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 1063, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 1151, 1152, 359, 1075, 267, 0, 0,
	0, 0, 0, 360, 361, 362, 1135, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 1162, 366, 367, 1148,
	1149, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 1158, 0, 1085, 378, 0, 379, 380, 381,
	382, 383, 1121, 1122, 1125, 462, 1164, 384, 385, 0,
	386, 387, 388, 389, 390, 0, 0, 0, 268, 391,
	392, 393, 395, 0, 1163, 394, 1130, 1131, 0, 1091,
	0, 396, 397, 1165, 1123, 1166, 398, 399, 400, 1167,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 1159, 1168, 412, 413,
	1169, 0, 414, 0, 0, 0, 415, 416, 419, 1114,
	1113, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	1170, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 1171, 458, 448, 1054, 269, 1172, 459,
	460, 1076, 1124, 461, 1138, 463, 464, 0, 0, 465,
	0, 1059, 0, 467, 468, 469, 0, 0, 470, 471,
	647, 1173, 472, 1174, 1153, 473, 474, 466, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 649,
	485, 486, 487, 650, 488, 489, 490, 1154, 491, 652,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 1134, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 1175, 524, 525, 526, 527, 1064, 528,
	0, 529, 530, 536, 537, 531, 532, 538, 539, 540,
	541, 542, 0, 544, 545, 543, 546, 547, 548, 1117,
	549, 550, 533, 534, 551, 552, 1176, 553, 554, 555,
	556, 557, 558, 1132, 0, 559, 0, 560, 561, 562,
	564, 535, 565, 570, 571, 1179, 566, 567, 568, 569,
	1155, 573, 574, 0, 575, 576, 1052, 572, 563, 0,
	577, 578, 579, 580, 581, 582, 583, 353, 584, 0,
	585, 1144, 1145, 1146, 1147, 0, 594, 0, 586, 587,
	588, 1156, 589, 1157, 1074, 590, 591, 592, 593, 0,
	595, 596, 0, 1058, 597, 598, 599, 601, 602, 600,
	603, 1118, 604, 0, 0, 605, 606, 607, 664, 1141,
	1178, 0, 609, 608, 610, 667, 0, 611, 0, 0,
	0, 0, 612, 613, 668, 614, 615, 616, 1055, 0,
	0, 0, 0, 0, 0, 0, 1051, 0, 0, 0,
	0, 0, 0, 1049, 1050, 1096, 1068, 1069, 1070, 1066,
	1067, 1079, 1080, 0, 0, 0, 1078, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 1120, 1084, 0,
	0, 0, 279, 280, 1160, 281, 282, 283, 284, 285,
	286, 618, 1133, 0, 287, 1140, 288, 1139, 0, 1150,
	289, 290, 291, 292, 293, 294, 1086, 1119, 1053, 295,
	1180, 1181, 625, 0, 296, 297, 1126, 0, 1107, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 4205, 316, 0, 317, 318, 319, 1161, 320, 321,
	322, 1110, 1108, 1109, 1116, 1112, 1111, 1115, 323, 324,
	325, 326, 327, 1143, 328, 1137, 1136, 1057, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 1128, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 1063, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 1151, 1152, 359, 1075, 267,
	0, 0, 0, 0, 0, 360, 361, 362, 1135, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 1162, 366,
	367, 1148, 1149, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 1158, 0, 1085, 378, 0, 379,
	380, 381, 382, 383, 1121, 1122, 1125, 462, 1164, 384,
	385, 0, 386, 387, 388, 389, 390, 0, 0, 0,
	268, 391, 392, 393, 395, 0, 1163, 394, 1130, 1131,
	0, 1091, 0, 396, 397, 1165, 1123, 1166, 398, 399,
	400, 1167, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 1159, 1168,
	412, 413, 1169, 0, 414, 0, 0, 0, 415, 416,
	419, 1114, 1113, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 1170, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 1171, 458, 448, 1054, 269,
	1172, 459, 460, 1076, 1124, 461, 1138, 463, 464, 0,
	0, 465, 0, 1059, 0, 467, 468, 469, 0, 0,
	470, 471, 647, 1173, 472, 1174, 1153, 473, 474, 466,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 649, 485, 486, 487, 650, 488, 489, 490, 1154,
	491, 652, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 1134, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 1175, 524, 525, 526, 527,
	1064, 528, 0, 529, 530, 536, 537, 531, 532, 538,
	539, 540, 541, 542, 0, 544, 545, 543, 546, 547,
	548, 1117, 549, 550, 533, 534, 551, 552, 1176, 553,
	554, 555, 556, 557, 558, 1132, 0, 559, 0, 560,
	561, 562, 564, 535, 565, 570, 571, 1179, 566, 567,
	568, 569, 1155, 573, 574, 0, 575, 576, 1052, 572,
	563, 0, 577, 578, 579, 580, 581, 582, 583, 353,
	584, 0, 585, 1144, 1145, 1146, 1147, 0, 594, 0,
	586, 587, 588, 1156, 589, 1157, 1074, 590, 591, 592,
	593, 0, 595, 596, 0, 1058, 597, 598, 599, 601,
	602, 600, 603, 1118, 604, 0, 0, 605, 606, 607,
	664, 1141, 1178, 0, 609, 608, 610, 667, 0, 611,
	0, 0, 0, 0, 612, 613, 668, 614, 615, 616,
	1055, 0, 0, 0, 0, 0, 0, 0, 1051, 0,
	0, 0, 0, 0, 0, 1049, 1050, 1096, 1068, 1069,
	1070, 1066, 1067, 1079, 1080, 0, 0, 0, 1078, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 1120,
	1084, 0, 0, 0, 279, 280, 1160, 281, 282, 283,
	284, 285, 286, 618, 1133, 0, 287, 1140, 288, 1139,
	0, 1150, 289, 290, 291, 292, 293, 294, 1086, 1119,
	1053, 295, 1180, 1181, 625, 0, 296, 297, 1126, 0,
	1107, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 1161,
	320, 321, 322, 1110, 1108, 1109, 1116, 1112, 1111, 1115,
	323, 324, 325, 326, 327, 1143, 328, 1137, 1136, 1057,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 1128, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 1063, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 1151, 1152, 359,
	1075, 267, 0, 0, 0, 0, 0, 360, 361, 362,
	1135, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	1162, 366, 367, 1148, 1149, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 1158, 0, 1085, 378,
	0, 379, 380, 381, 382, 383, 1121, 1122, 1125, 462,
	1164, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	0, 0, 268, 391, 392, 393, 395, 0, 1163, 394,
	1130, 1131, 0, 1091, 0, 396, 397, 1165, 1123, 1166,
	398, 399, 400, 1167, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	1159, 1168, 412, 413, 1169, 0, 414, 0, 0, 0,
	415, 416, 419, 1114, 1113, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 1170, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 1171, 458, 448,
	1054, 3827, 1172, 459, 460, 1076, 1124, 461, 1138, 463,
	464, 0, 0, 465, 0, 0, 0, 467, 468, 469,
	0, 0, 470, 471, 647, 1173, 472, 1174, 1153, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 649, 485, 486, 487, 650, 488, 489,
	490, 1154, 491, 652, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 1134, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 1175, 524, 525,
	526, 527, 1064, 528, 0, 529, 530, 536, 537, 531,
	532, 538, 539, 540, 541, 542, 0, 544, 545, 543,
	546, 547, 548, 1117, 549, 550, 533, 534, 551, 552,
	1176, 553, 554, 555, 556, 557, 558, 1132, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 1179,
	566, 567, 568, 569, 1155, 573, 574, 0, 575, 576,
	1052, 572, 563, 0, 577, 578, 579, 580, 581, 582,
	583, 353, 584, 0, 585, 1144, 1145, 1146, 1147, 0,
	594, 0, 586, 587, 588, 1156, 589, 1157, 1074, 590,
	591, 592, 593, 0, 595, 596, 0, 1058, 597, 598,
	599, 601, 602, 600, 603, 1118, 604, 0, 0, 605,
	606, 607, 664, 1141, 1178, 0, 609, 608, 610, 667,
	0, 611, 0, 0, 0, 0, 612, 613, 668, 614,
	615, 616, 1055, 0, 0, 0, 0, 0, 0, 0,
	1051, 0, 0, 0, 0, 0, 0, 1049, 1050, 1888,
	0, 0, 0, 0, 0, 0, 1080, 0, 0, 0,
	1078, 1096, 1068, 1069, 1070, 1066, 1067, 1079, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 1120, 1084, 0, 0, 0, 279, 280,
	1160, 281, 282, 283, 284, 285, 286, 618, 1133, 0,
	287, 1140, 288, 1139, 0, 1150, 289, 290, 291, 292,
	293, 294, 1086, 1119, 1053, 295, 1180, 1181, 625, 0,
	296, 297, 1126, 0, 1107, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 1161, 320, 321, 322, 1110, 1108, 1109,
	1116, 1112, 1111, 1115, 323, 324, 325, 326, 327, 1143,
	328, 1137, 1136, 1057, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 1128, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	1063, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 1151, 1152, 359, 1075, 267, 0, 0, 0, 0,
	0, 360, 361, 362, 1135, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 1162, 366, 367, 1148, 1149, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	1158, 0, 1085, 378, 0, 379, 380, 381, 382, 383,
	1121, 1122, 1125, 462, 1164, 384, 385, 0, 386, 387,
	388, 389, 390, 0, 0, 0, 268, 391, 392, 393,
	395, 0, 1163, 394, 1130, 1131, 0, 1091, 0, 396,
	397, 1165, 1123, 1166, 398, 399, 400, 1167, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 1159, 1168, 412, 413, 1169, 0,
	414, 0, 0, 0, 415, 416, 419, 1114, 1113, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 1170, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 1171, 458, 448, 1054, 269, 1172, 459, 460, 1076,
	1124, 461, 1138, 463, 464, 0, 0, 465, 0, 0,
	0, 467, 468, 469, 0, 0, 470, 471, 647, 1173,
	472, 1174, 1153, 473, 474, 466, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 649, 485, 486,
	487, 650, 488, 489, 490, 1154, 491, 652, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 1134, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 1175, 524, 525, 526, 527, 1064, 528, 0, 529,
	530, 536, 537, 531, 532, 538, 539, 540, 541, 542,
	0, 544, 545, 543, 546, 547, 548, 1117, 549, 550,
	533, 534, 551, 552, 1176, 553, 554, 555, 556, 557,
	558, 1132, 0, 559, 0, 560, 561, 562, 564, 535,
	565, 570, 571, 1179, 566, 567, 568, 569, 1155, 573,
	574, 0, 575, 576, 1052, 572, 563, 0, 577, 578,
	579, 580, 581, 582, 583, 353, 584, 0, 585, 1144,
	1145, 1146, 1147, 0, 594, 0, 586, 587, 588, 1156,
	589, 1157, 1074, 590, 591, 592, 593, 0, 595, 596,
	0, 1058, 597, 598, 599, 601, 602, 600, 603, 1118,
	604, 0, 0, 605, 606, 607, 664, 1141, 1178, 3553,
	609, 608, 610, 667, 0, 611, 0, 0, 0, 0,
	612, 613, 668, 614, 615, 616, 1055, 0, 0, 0,
	0, 0, 0, 0, 1051, 0, 0, 0, 0, 0,
	0, 1049, 1050, 1096, 1068, 1069, 1070, 1066, 1067, 1079,
	1080, 0, 0, 0, 1078, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 1120, 1084, 0, 0, 0,
	279, 280, 1160, 281, 282, 283, 284, 285, 286, 618,
	1133, 0, 287, 1140, 288, 1139, 0, 1150, 289, 290,
	291, 292, 293, 294, 1086, 1119, 1053, 295, 1180, 1181,
	625, 0, 296, 297, 1126, 0, 1107, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 1161, 320, 321, 322, 1110,
	1108, 1109, 1116, 1112, 1111, 1115, 323, 324, 325, 326,
	327, 1143, 328, 1137, 1136, 1057, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	1128, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 1063, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 1151, 1152, 359, 1075, 267, 0, 0,
	0, 0, 0, 360, 361, 362, 1135, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 1162, 366, 367, 1148,
	1149, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 1158, 0, 1085, 378, 0, 379, 380, 381,
	382, 383, 1121, 1122, 1125, 462, 1164, 384, 385, 0,
	386, 387, 388, 389, 390, 0, 0, 0, 268, 391,
	392, 393, 395, 0, 1163, 394, 1130, 1131, 0, 1091,
	0, 396, 397, 1165, 1123, 1166, 398, 399, 400, 1167,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 1159, 1168, 412, 413,
	1169, 0, 414, 0, 0, 0, 415, 416, 419, 1114,
	1113, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	1170, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 1171, 458, 448, 1054, 269, 1172, 459,
	460, 1076, 1124, 461, 1138, 463, 464, 0, 0, 465,
	0, 0, 0, 467, 468, 469, 0, 0, 470, 471,
	647, 1173, 472, 1174, 1153, 473, 474, 466, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 649,
	485, 486, 487, 650, 488, 489, 490, 1154, 491, 652,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 1134, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 1175, 524, 525, 526, 527, 1064, 528,
	0, 529, 530, 536, 537, 531, 532, 538, 539, 540,
	541, 542, 0, 544, 545, 543, 546, 547, 548, 1117,
	549, 550, 533, 534, 551, 552, 1176, 553, 554, 555,
	556, 557, 558, 1132, 0, 559, 0, 560, 561, 562,
	564, 535, 565, 570, 571, 1179, 566, 567, 568, 569,
	1155, 573, 574, 0, 575, 576, 1052, 572, 563, 0,
	577, 578, 579, 580, 581, 582, 583, 353, 584, 0,
	585, 1144, 1145, 1146, 1147, 0, 594, 0, 586, 587,
	588, 1156, 589, 1157, 1074, 590, 591, 592, 593, 0,
	595, 596, 0, 1058, 597, 598, 599, 601, 602, 600,
	603, 1118, 604, 0, 0, 605, 606, 607, 664, 1141,
	1178, 0, 609, 608, 610, 667, 0, 611, 0, 0,
	0, 0, 612, 613, 668, 614, 615, 616, 1055, 0,
	0, 0, 0, 0, 0, 0, 1051, 0, 0, 0,
	0, 0, 0, 1049, 1050, 1888, 0, 0, 0, 0,
	0, 0, 1080, 0, 0, 0, 1078, 1096, 1068, 1069,
	1070, 1066, 1067, 1079, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 1120,
	1084, 0, 0, 0, 279, 280, 1160, 281, 282, 283,
	284, 285, 286, 618, 1133, 0, 287, 1140, 288, 1139,
	0, 1150, 289, 290, 291, 292, 293, 294, 1086, 1119,
	1053, 295, 1180, 1181, 625, 0, 296, 297, 1126, 0,
	1107, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 1161,
	320, 321, 322, 1110, 1108, 1109, 1116, 1112, 1111, 1115,
	323, 324, 325, 326, 327, 1143, 328, 1137, 1136, 1057,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 1128, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 1063, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 1151, 1152, 359,
	1075, 267, 0, 0, 0, 0, 0, 360, 361, 362,
	1135, 0, 0, 0, 363, 0, 364, 365, 0, 2595,
	1162, 366, 367, 1148, 1149, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 1158, 0, 1085, 378,
	0, 379, 380, 381, 382, 383, 1121, 1122, 1125, 462,
	1164, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	0, 0, 268, 391, 392, 393, 395, 0, 1163, 394,
	1130, 1131, 0, 1091, 0, 396, 397, 1165, 1123, 1166,
	398, 399, 400, 1167, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	1159, 1168, 412, 413, 1169, 0, 414, 0, 0, 0,
	415, 416, 419, 1114, 1113, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 1170, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 1171, 458, 448,
	1054, 269, 1172, 459, 460, 1076, 1124, 461, 1138, 463,
	464, 0, 0, 465, 0, 0, 0, 467, 468, 469,
	0, 0, 470, 471, 647, 1173, 472, 1174, 1153, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 649, 485, 486, 487, 650, 488, 489,
	490, 1154, 491, 652, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 1134, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 1175, 524, 525,
	526, 527, 1064, 528, 0, 529, 530, 536, 537, 531,
	532, 538, 539, 540, 541, 542, 0, 544, 545, 543,
	546, 547, 548, 1117, 549, 550, 533, 534, 551, 552,
	1176, 553, 554, 555, 556, 557, 558, 1132, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 1179,
	566, 567, 568, 569, 1155, 573, 574, 0, 575, 576,
	1052, 572, 563, 0, 577, 578, 579, 580, 581, 582,
	583, 353, 584, 0, 585, 1144, 1145, 1146, 1147, 0,
	594, 0, 586, 587, 588, 1156, 589, 1157, 1074, 590,
	591, 592, 593, 0, 595, 596, 0, 1058, 597, 598,
	599, 601, 602, 600, 603, 1118, 604, 0, 0, 605,
	606, 607, 664, 1141, 1178, 0, 609, 608, 610, 667,
	0, 611, 0, 0, 0, 0, 612, 613, 668, 614,
	615, 616, 1055, 0, 0, 0, 0, 0, 0, 0,
	1051, 0, 0, 0, 0, 0, 0, 1049, 1050, 1096,
	1068, 1069, 1070, 1066, 1067, 1079, 1080, 0, 0, 0,
	1078, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 1120, 1084, 0, 0, 0, 279, 280, 1160, 281,
	282, 283, 284, 285, 286, 618, 1133, 0, 287, 1140,
	288, 1139, 0, 1150, 289, 290, 291, 292, 293, 294,
	1086, 1119, 1053, 295, 1180, 1181, 625, 0, 296, 297,
	1126, 0, 1107, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 1161, 320, 321, 322, 1110, 1108, 1109, 1116, 1112,
	1111, 1115, 323, 324, 325, 326, 327, 1143, 328, 1137,
	1136, 1057, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 1128, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 1063, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 1151,
	1152, 359, 1075, 267, 0, 0, 0, 0, 0, 360,
	361, 362, 1135, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 1162, 366, 367, 1148, 1149, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 1158, 0,
	1085, 378, 0, 379, 380, 381, 382, 383, 1121, 1122,
	1125, 462, 1164, 384, 385, 0, 386, 387, 388, 389,
	390, 0, 0, 0, 268, 391, 392, 393, 395, 0,
	1163, 394, 1130, 1131, 0, 1091, 0, 396, 397, 1165,
	1123, 1166, 398, 399, 400, 1167, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 1159, 1168, 412, 413, 1169, 0, 414, 0,
	0, 0, 415, 416, 419, 1114, 1113, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 1170, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 1171,
	458, 448, 1054, 269, 1172, 459, 460, 1076, 1124, 461,
	1138, 463, 464, 0, 0, 465, 0, 0, 0, 467,
	468, 469, 0, 0, 470, 471, 647, 1173, 472, 1174,
	1153, 473, 474, 466, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 649, 485, 486, 487, 650,
	488, 489, 490, 1154, 491, 652, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 1134,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 1175,
	524, 525, 526, 527, 1064, 528, 0, 529, 530, 536,
	537, 531, 532, 538, 539, 540, 541, 542, 0, 544,
	545, 543, 546, 547, 548, 1117, 549, 550, 533, 534,
	551, 552, 1176, 553, 554, 555, 556, 557, 558, 1132,
	0, 559, 0, 560, 561, 562, 564, 535, 565, 570,
	571, 1179, 566, 567, 568, 569, 1155, 573, 574, 0,
	575, 576, 1052, 572, 563, 0, 577, 578, 579, 580,
	581, 582, 583, 353, 584, 0, 585, 1144, 1145, 1146,
	1147, 0, 594, 0, 586, 587, 588, 1156, 589, 1157,
	1074, 590, 591, 592, 593, 0, 595, 596, 0, 1058,
	597, 598, 599, 601, 602, 600, 603, 1118, 604, 0,
	0, 605, 606, 607, 664, 1141, 1178, 0, 609, 608,
	610, 667, 0, 611, 0, 0, 0, 0, 612, 613,
	668, 614, 615, 616, 1055, 0, 0, 0, 0, 0,
	0, 0, 1051, 0, 0, 0, 0, 0, 0, 1049,
	1050, 0, 0, 0, 0, 0, 0, 0, 1080, 1818,
	0, 2600, 1078, 1096, 1068, 1069, 1070, 1066, 1067, 1079,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 1120, 1084, 0, 0, 0,
	279, 280, 1160, 281, 282, 283, 284, 285, 286, 618,
	1133, 0, 287, 1140, 288, 1139, 0, 1150, 289, 290,
	291, 292, 293, 294, 1086, 1119, 1053, 295, 1180, 1181,
	625, 0, 296, 297, 1126, 0, 1107, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 1161, 320, 321, 322, 1110,
	1108, 1109, 1116, 1112, 1111, 1115, 323, 324, 325, 326,
	327, 1143, 328, 1137, 1136, 1057, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	1128, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 1063, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 1151, 1152, 359, 1075, 267, 0, 0,
	0, 0, 0, 360, 361, 362, 1135, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 1162, 366, 367, 1148,
	1149, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 1158, 0, 1085, 378, 0, 379, 380, 381,
	382, 383, 1121, 1122, 1125, 462, 1164, 384, 385, 0,
	386, 387, 388, 389, 390, 0, 0, 0, 268, 391,
	392, 393, 395, 0, 1163, 394, 1130, 1131, 0, 1091,
	0, 396, 397, 1165, 1123, 1166, 398, 399, 400, 1167,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 1159, 1168, 412, 413,
	1169, 0, 414, 0, 0, 0, 415, 416, 419, 1114,
	1113, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	1170, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 1171, 458, 448, 1054, 269, 1172, 459,
	460, 1076, 1124, 461, 1138, 463, 464, 0, 0, 465,
	0, 0, 0, 467, 468, 469, 0, 0, 470, 471,
	647, 1173, 472, 1174, 1153, 473, 474, 466, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 649,
	485, 486, 487, 650, 488, 489, 490, 1154, 491, 652,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 1134, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 1175, 524, 525, 526, 527, 1064, 528,
	0, 529, 530, 536, 537, 531, 532, 538, 539, 540,
	541, 542, 0, 544, 545, 543, 546, 547, 548, 1117,
	549, 550, 533, 534, 551, 552, 1176, 553, 554, 555,
	556, 557, 558, 1132, 0, 559, 0, 560, 561, 562,
	564, 535, 565, 570, 571, 1179, 566, 567, 568, 569,
	1155, 573, 574, 0, 575, 576, 1052, 572, 563, 0,
	577, 578, 579, 580, 581, 582, 583, 353, 584, 0,
	585, 1144, 1145, 1146, 1147, 0, 594, 0, 586, 587,
	588, 1156, 589, 1157, 1074, 590, 591, 592, 593, 0,
	595, 596, 0, 1058, 597, 598, 599, 601, 602, 600,
	603, 1118, 604, 0, 0, 605, 606, 607, 664, 1141,
	1178, 0, 609, 608, 610, 667, 0, 611, 0, 0,
	0, 0, 612, 613, 668, 614, 615, 616, 1055, 0,
	0, 0, 0, 0, 0, 0, 1051, 0, 0, 0,
	0, 0, 0, 1049, 1050, 0, 0, 0, 0, 0,
	0, 0, 1080, 0, 0, 2598, 1078, 1096, 1068, 1069,
	1070, 1066, 1067, 1079, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 1120,
	1084, 0, 0, 0, 279, 280, 1160, 281, 282, 283,
	284, 285, 286, 618, 1133, 0, 287, 1140, 288, 1139,
	0, 1150, 289, 290, 291, 292, 293, 294, 1086, 1119,
	1053, 295, 1180, 1181, 625, 0, 296, 297, 1126, 0,
	1107, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 1161,
	320, 321, 322, 1110, 1108, 1109, 1116, 1112, 1111, 1115,
	323, 324, 325, 326, 327, 1143, 328, 1137, 1136, 1057,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 1128, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 1063, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 1151, 1152, 359,
	1075, 267, 0, 0, 0, 0, 0, 360, 361, 362,
	1135, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	1162, 366, 367, 1148, 1149, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 1158, 0, 1085, 378,
	0, 379, 380, 381, 382, 383, 1121, 1122, 1125, 462,
	1164, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	0, 0, 268, 391, 392, 393, 395, 0, 1163, 394,
	1130, 1131, 0, 1091, 0, 396, 397, 1165, 1123, 1166,
	398, 399, 400, 1167, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	1159, 1168, 412, 413, 1169, 0, 414, 0, 0, 0,
	415, 416, 419, 1114, 1113, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 1170, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 1171, 458, 448,
	1054, 269, 1172, 459, 460, 1076, 1124, 461, 1138, 463,
	464, 0, 0, 465, 0, 0, 0, 467, 468, 469,
	0, 0, 470, 471, 647, 1173, 472, 1174, 1153, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 649, 485, 486, 487, 650, 488, 489,
	490, 1154, 491, 652, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 1134, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 1175, 524, 525,
	526, 527, 1064, 528, 0, 529, 530, 536, 537, 531,
	532, 538, 539, 540, 541, 542, 0, 544, 545, 543,
	546, 547, 548, 1117, 549, 550, 533, 534, 551, 552,
	1176, 553, 554, 555, 556, 557, 558, 1132, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 1179,
	566, 567, 568, 569, 1155, 573, 574, 0, 575, 576,
	1052, 572, 563, 0, 577, 578, 579, 580, 581, 582,
	583, 353, 584, 0, 585, 1144, 1145, 1146, 1147, 0,
	594, 0, 586, 587, 588, 1156, 589, 1157, 1074, 590,
	591, 592, 593, 0, 595, 596, 0, 1058, 597, 598,
	599, 601, 602, 600, 603, 1118, 604, 0, 0, 605,
	606, 607, 664, 1141, 1178, 0, 609, 608, 610, 667,
	0, 611, 0, 0, 0, 0, 612, 613, 668, 614,
	615, 616, 1055, 0, 0, 0, 0, 0, 0, 0,
	1051, 0, 0, 0, 0, 0, 0, 1049, 1050, 0,
	0, 0, 0, 0, 0, 0, 1080, 0, 0, 2586,
	1078, 1096, 1068, 1069, 1070, 1066, 1067, 1079, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 1120, 1084, 0, 0, 0, 279, 280,
	1160, 281, 282, 283, 284, 285, 286, 618, 1133, 0,
	287, 1140, 288, 1139, 0, 1150, 289, 290, 291, 292,
	293, 294, 1086, 1119, 1053, 295, 1180, 1181, 625, 0,
	296, 297, 1126, 0, 1107, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 1161, 320, 321, 322, 1110, 1108, 1109,
	1116, 1112, 1111, 1115, 323, 324, 325, 326, 327, 1143,
	328, 1137, 1136, 1057, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 1128, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	1063, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 1151, 1152, 359, 1075, 267, 0, 0, 0, 0,
	0, 360, 361, 362, 1135, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 1162, 366, 367, 1148, 1149, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	1158, 0, 1085, 378, 0, 379, 380, 381, 382, 383,
	1121, 1122, 1125, 462, 1164, 384, 385, 0, 386, 387,
	388, 389, 390, 0, 0, 0, 268, 391, 392, 393,
	395, 0, 1163, 394, 1130, 1131, 0, 1091, 0, 396,
	397, 1165, 1123, 1166, 398, 399, 400, 1167, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 1159, 1168, 412, 413, 1169, 0,
	414, 0, 0, 0, 415, 416, 419, 1114, 1113, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 1170, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 1171, 458, 448, 1054, 269, 1172, 459, 460, 1076,
	1124, 461, 1138, 463, 464, 0, 0, 465, 0, 0,
	0, 467, 468, 469, 0, 0, 470, 471, 647, 1173,
	472, 1174, 1153, 473, 474, 466, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 649, 485, 486,
	487, 650, 488, 489, 490, 1154, 491, 652, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 1134, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 1175, 524, 525, 526, 527, 1064, 528, 0, 529,
	530, 536, 537, 531, 532, 538, 539, 540, 541, 542,
	0, 544, 545, 543, 546, 547, 548, 1117, 549, 550,
	533, 534, 551, 552, 1176, 553, 554, 555, 556, 557,
	558, 1132, 0, 559, 0, 560, 561, 562, 564, 535,
	565, 570, 571, 1179, 566, 567, 568, 569, 1155, 573,
	574, 0, 575, 576, 1052, 572, 563, 0, 577, 578,
	579, 580, 581, 582, 583, 353, 584, 0, 585, 1144,
	1145, 1146, 1147, 0, 594, 0, 586, 587, 588, 1156,
	589, 1157, 1074, 590, 591, 592, 593, 0, 595, 596,
	0, 1058, 597, 598, 599, 601, 602, 600, 603, 1118,
	604, 0, 0, 605, 606, 607, 664, 1141, 1178, 0,
	609, 608, 610, 667, 0, 611, 0, 0, 0, 0,
	612, 613, 668, 614, 615, 616, 1055, 0, 0, 0,
	0, 0, 0, 0, 1051, 0, 0, 0, 0, 0,
	0, 1049, 1050, 0, 0, 0, 0, 0, 0, 0,
	1080, 0, 0, 2575, 1078, 1096, 1068, 1069, 1070, 1066,
	1067, 1079, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 1120, 1084, 0,
	0, 0, 279, 280, 1160, 281, 282, 283, 284, 285,
	286, 618, 1133, 0, 287, 1140, 288, 1139, 0, 1150,
	289, 290, 291, 292, 293, 294, 1086, 1119, 1053, 295,
	1180, 1181, 625, 0, 296, 297, 1126, 0, 1107, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 1161, 320, 321,
	322, 1110, 1108, 1109, 1116, 1112, 1111, 1115, 323, 324,
	325, 326, 327, 1143, 328, 1137, 1136, 1057, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 1128, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 1063, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 1151, 1152, 359, 1075, 267,
	0, 0, 0, 0, 0, 360, 361, 362, 1135, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 1162, 366,
	367, 1148, 1149, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 1158, 0, 1085, 378, 0, 379,
	380, 381, 382, 383, 1121, 1122, 1125, 462, 1164, 384,
	385, 0, 386, 387, 388, 389, 390, 0, 0, 0,
	268, 391, 392, 393, 395, 0, 1163, 394, 1130, 1131,
	0, 1091, 0, 396, 397, 1165, 1123, 1166, 398, 399,
	400, 1167, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 1159, 1168,
	412, 413, 1169, 0, 414, 0, 0, 0, 415, 416,
	419, 1114, 1113, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 1170, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 1171, 458, 448, 1054, 269,
	1172, 459, 460, 1076, 1124, 461, 1138, 463, 464, 0,
	0, 465, 0, 0, 0, 467, 468, 469, 0, 0,
	470, 471, 647, 1173, 472, 1174, 1153, 473, 474, 466,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 649, 485, 486, 487, 650, 488, 489, 490, 1154,
	491, 652, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 1134, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 1175, 524, 525, 526, 527,
	1064, 528, 0, 529, 530, 536, 537, 531, 532, 538,
	539, 540, 541, 542, 0, 544, 545, 543, 546, 547,
	548, 1117, 549, 550, 533, 534, 551, 552, 1176, 553,
	554, 555, 556, 557, 558, 1132, 0, 559, 0, 560,
	561, 562, 564, 535, 565, 570, 571, 1179, 566, 567,
	568, 569, 1155, 573, 574, 0, 575, 576, 1052, 572,
	563, 0, 577, 578, 579, 580, 581, 582, 583, 353,
	584, 0, 585, 1144, 1145, 1146, 1147, 0, 594, 0,
	586, 587, 588, 1156, 589, 1157, 1074, 590, 591, 592,
	593, 0, 595, 596, 0, 1058, 597, 598, 599, 601,
	602, 600, 603, 1118, 604, 0, 0, 605, 606, 607,
	664, 1141, 1178, 0, 609, 608, 610, 667, 0, 611,
	0, 0, 0, 0, 612, 613, 668, 614, 615, 616,
	1055, 0, 0, 0, 0, 0, 0, 0, 1051, 0,
	0, 0, 0, 0, 0, 1049, 1050, 0, 0, 0,
	0, 0, 0, 0, 1080, 0, 0, 2573, 1078, 2564,
	2571, 1069, 1070, 1066, 1067, 1079, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 1120, 1084, 0, 0, 0, 279, 280, 1160, 281,
	282, 283, 284, 285, 286, 618, 1133, 0, 287, 1140,
	288, 1139, 0, 1150, 289, 290, 291, 292, 293, 294,
	1086, 1119, 1053, 295, 1180, 1181, 625, 0, 296, 297,
	1126, 0, 1107, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 1161, 320, 321, 322, 1110, 1108, 1109, 1116, 1112,
	1111, 1115, 323, 324, 325, 326, 327, 1143, 2567, 1137,
	1136, 1057, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 1128, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 1063, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 1151,
	1152, 359, 1075, 267, 0, 0, 0, 0, 0, 360,
	361, 362, 1135, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 1162, 366, 367, 1148, 1149, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 1158, 0,
	1085, 378, 0, 379, 380, 381, 2568, 383, 1121, 1122,
	1125, 462, 1164, 384, 385, 0, 386, 387, 388, 389,
	390, 0, 0, 0, 268, 391, 392, 393, 395, 0,
	1163, 394, 1130, 1131, 0, 1091, 0, 396, 397, 1165,
	1123, 1166, 398, 399, 400, 1167, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 1159, 1168, 412, 413, 1169, 0, 414, 0,
	0, 0, 415, 416, 419, 1114, 1113, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 2569, 429,
	2566, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 1170, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 1171,
	458, 448, 1054, 269, 1172, 459, 460, 1076, 1124, 461,
	1138, 463, 464, 0, 0, 465, 0, 0, 0, 467,
	468, 469, 0, 0, 470, 471, 647, 1173, 472, 1174,
	1153, 473, 474, 466, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 649, 485, 486, 487, 650,
	488, 489, 490, 1154, 491, 652, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 1134,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 1175,
	524, 525, 526, 527, 1064, 528, 0, 529, 530, 536,
	537, 531, 532, 538, 539, 540, 541, 2570, 0, 544,
	545, 543, 546, 547, 548, 1117, 549, 550, 533, 534,
	551, 552, 1176, 553, 554, 555, 556, 557, 558, 1132,
	0, 559, 0, 560, 561, 562, 564, 535, 565, 570,
	571, 1179, 566, 567, 568, 569, 1155, 573, 574, 0,
	575, 576, 1052, 572, 563, 0, 577, 578, 579, 580,
	581, 582, 583, 353, 584, 0, 585, 1144, 1145, 1146,
	1147, 0, 594, 0, 586, 587, 588, 1156, 589, 1157,
	1074, 590, 591, 592, 593, 0, 595, 596, 0, 1058,
	597, 598, 599, 601, 602, 600, 603, 1118, 604, 0,
	0, 605, 606, 607, 664, 1141, 1178, 0, 609, 608,
	610, 667, 0, 611, 0, 0, 0, 0, 612, 613,
	668, 614, 2565, 616, 1055, 0, 0, 0, 0, 0,
	0, 0, 1051, 0, 0, 0, 0, 0, 0, 1049,
	1050, 0, 0, 0, 0, 0, 0, 0, 1080, 0,
	0, 2561, 1078, 2564, 2571, 1069, 1070, 1066, 1067, 1079,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 1120, 1084, 0, 0, 0,
	279, 280, 1160, 281, 282, 283, 284, 285, 286, 618,
	1133, 0, 287, 1140, 288, 1139, 0, 1150, 289, 290,
	291, 292, 293, 294, 1086, 1119, 1053, 295, 1180, 1181,
	625, 0, 296, 297, 1126, 0, 1107, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 1161, 320, 321, 322, 1110,
	1108, 1109, 1116, 1112, 1111, 1115, 323, 324, 325, 326,
	327, 1143, 2567, 1137, 1136, 1057, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	1128, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 1063, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 1151, 1152, 359, 1075, 267, 0, 0,
	0, 0, 0, 360, 361, 362, 1135, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 1162, 366, 367, 1148,
	1149, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 1158, 0, 1085, 378, 0, 379, 380, 381,
	2568, 383, 1121, 1122, 1125, 462, 1164, 384, 385, 0,
	386, 387, 388, 389, 390, 0, 0, 0, 268, 391,
	392, 393, 395, 0, 1163, 394, 1130, 1131, 0, 1091,
	0, 396, 397, 1165, 1123, 1166, 398, 399, 400, 1167,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 1159, 1168, 412, 413,
	1169, 0, 414, 0, 0, 0, 415, 416, 419, 1114,
	1113, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 2569, 429, 2566, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	1170, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 1171, 458, 448, 1054, 269, 1172, 459,
	460, 1076, 1124, 461, 1138, 463, 464, 0, 0, 465,
	0, 0, 0, 467, 468, 469, 0, 0, 470, 471,
	647, 1173, 472, 1174, 1153, 473, 474, 466, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 649,
	485, 486, 487, 650, 488, 489, 490, 1154, 491, 652,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 1134, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 1175, 524, 525, 526, 527, 1064, 528,
	0, 529, 530, 536, 537, 531, 532, 538, 539, 540,
	541, 2570, 0, 544, 545, 543, 546, 547, 548, 1117,
	549, 550, 533, 534, 551, 552, 1176, 553, 554, 555,
	556, 557, 558, 1132, 0, 559, 0, 560, 561, 562,
	564, 535, 565, 570, 571, 1179, 566, 567, 568, 569,
	1155, 573, 574, 0, 575, 576, 1052, 572, 563, 0,
	577, 578, 579, 580, 581, 582, 583, 353, 584, 0,
	585, 1144, 1145, 1146, 1147, 0, 594, 0, 586, 587,
	588, 1156, 589, 1157, 1074, 590, 591, 592, 593, 0,
	595, 596, 0, 1058, 597, 598, 599, 601, 602, 600,
	603, 1118, 604, 0, 0, 605, 606, 607, 664, 1141,
	1178, 0, 609, 608, 610, 667, 0, 611, 0, 0,
	0, 0, 612, 613, 668, 614, 2565, 616, 1055, 0,
	0, 0, 0, 0, 0, 0, 1051, 0, 0, 0,
	0, 0, 0, 1049, 1050, 1096, 1068, 1069, 1070, 1066,
	1067, 1079, 1080, 0, 0, 0, 1078, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 1120, 1084, 0,
	0, 0, 279, 280, 1160, 281, 282, 283, 284, 285,
	286, 618, 1133, 0, 287, 1140, 288, 1139, 0, 1150,
	289, 290, 291, 292, 293, 294, 1086, 1119, 1053, 295,
	1180, 1181, 625, 0, 296, 297, 1126, 0, 1107, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 1161, 320, 321,
	322, 1110, 1108, 1109, 1116, 1112, 1111, 1115, 323, 324,
	325, 326, 327, 1143, 328, 1137, 1136, 1057, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 1128, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 1063, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 1151, 1152, 359, 1075, 267,
	0, 0, 0, 0, 0, 360, 361, 362, 1135, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 1162, 366,
	367, 1148, 1149, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 1158, 0, 1085, 378, 0, 379,
	380, 381, 382, 383, 1121, 1122, 1125, 462, 1164, 384,
	385, 0, 386, 387, 388, 389, 390, 0, 0, 0,
	268, 391, 392, 393, 395, 0, 1163, 394, 1130, 1131,
	0, 1091, 0, 396, 397, 1165, 1123, 1166, 398, 399,
	400, 1167, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 1159, 1168,
	412, 413, 1169, 0, 414, 0, 0, 0, 415, 416,
	419, 1114, 1113, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 1170, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 1171, 458, 448, 1054, 269,
	1172, 459, 460, 1076, 1124, 461, 1138, 463, 464, 0,
	0, 465, 0, 0, 0, 467, 468, 469, 0, 0,
	470, 471, 647, 1173, 472, 1174, 1153, 473, 474, 466,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 649, 485, 486, 487, 650, 488, 489, 490, 1154,
	491, 652, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 1134, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 1175, 524, 525, 526, 527,
	1064, 528, 0, 529, 530, 536, 537, 531, 532, 538,
	539, 540, 541, 542, 0, 544, 545, 543, 546, 547,
	548, 1117, 549, 550, 533, 534, 551, 552, 1176, 553,
	554, 555, 556, 557, 558, 1132, 0, 559, 0, 560,
	561, 562, 564, 535, 565, 570, 571, 1179, 566, 567,
	568, 569, 1155, 573, 574, 0, 575, 576, 1052, 572,
	563, 0, 577, 578, 579, 580, 581, 582, 583, 353,
	584, 0, 585, 1144, 1145, 1146, 1147, 0, 594, 0,
	586, 587, 588, 1156, 589, 1157, 1074, 590, 591, 592,
	593, 0, 595, 596, 0, 1058, 597, 598, 599, 601,
	602, 600, 603, 1118, 604, 0, 0, 605, 606, 607,
	664, 1141, 1178, 0, 609, 608, 610, 667, 0, 611,
	0, 0, 0, 0, 612, 613, 668, 614, 615, 616,
	1055, 0, 0, 0, 0, 0, 0, 0, 1051, 0,
	0, 0, 0, 0, 0, 1049, 1050, 0, 0, 0,
	0, 0, 1826, 0, 1080, 0, 0, 0, 1078, 1096,
	1068, 1069, 1070, 1066, 1067, 1079, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 2355, 277, 278, 0, 0, 0, 0,
	0, 1120, 1084, 0, 0, 0, 279, 280, 1160, 281,
	282, 283, 284, 285, 286, 618, 1133, 0, 287, 1140,
	288, 1139, 0, 1150, 289, 290, 291, 292, 293, 294,
	1086, 1119, 1053, 295, 1180, 1181, 625, 0, 296, 297,
	1126, 0, 1107, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 1161, 320, 321, 322, 1110, 1108, 1109, 1116, 1112,
	1111, 1115, 323, 324, 325, 326, 327, 1143, 328, 1137,
	1136, 1057, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 1128, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 1063, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 1151,
	1152, 359, 1075, 267, 0, 0, 0, 0, 0, 360,
	361, 362, 1135, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 1162, 366, 367, 1148, 1149, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 1158, 0,
	1085, 378, 0, 379, 380, 381, 382, 383, 1121, 1122,
	1125, 462, 1164, 384, 385, 0, 386, 387, 388, 389,
	390, 0, 0, 0, 268, 391, 392, 393, 395, 0,
	1163, 394, 1130, 1131, 0, 1091, 0, 396, 397, 1165,
	1123, 1166, 398, 399, 400, 1167, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 1159, 1168, 412, 413, 1169, 0, 414, 0,
	0, 0, 415, 416, 419, 1114, 1113, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 1170, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 1171,
	458, 448, 1054, 269, 1172, 459, 460, 1076, 1124, 461,
	1138, 463, 464, 0, 0, 465, 0, 0, 0, 467,
	468, 469, 0, 0, 470, 471, 647, 1173, 472, 1174,
	1153, 473, 474, 466, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 649, 485, 486, 487, 650,
	488, 489, 490, 1154, 491, 652, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 1134,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 1175,
	524, 525, 526, 527, 1064, 528, 0, 529, 530, 536,
	537, 531, 532, 538, 539, 540, 541, 542, 0, 544,
	545, 543, 546, 547, 548, 1117, 549, 550, 533, 534,
	551, 552, 1176, 553, 554, 555, 556, 557, 558, 1132,
	0, 559, 0, 560, 561, 562, 564, 535, 565, 570,
	571, 1179, 566, 567, 568, 569, 1155, 573, 574, 0,
	575, 576, 1052, 572, 563, 0, 577, 578, 579, 580,
	581, 582, 583, 353, 584, 0, 585, 1144, 1145, 1146,
	1147, 0, 594, 0, 586, 587, 588, 1156, 589, 1157,
	1074, 590, 591, 592, 593, 0, 595, 596, 0, 1058,
	597, 598, 599, 601, 602, 600, 603, 1118, 604, 0,
	0, 605, 606, 607, 664, 1141, 1178, 0, 609, 608,
	610, 667, 0, 611, 0, 0, 0, 0, 612, 613,
	668, 614, 615, 616, 1055, 0, 0, 0, 0, 0,
	0, 0, 1051, 0, 0, 0, 0, 0, 0, 1049,
	1050, 0, 0, 0, 0, 0, 0, 0, 1080, 0,
	0, 1674, 1078, 1096, 1068, 1069, 1070, 1066, 1067, 1079,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 1120, 1084, 0, 0, 0,
	279, 280, 1160, 281, 282, 283, 284, 285, 286, 618,
	1133, 0, 287, 1140, 288, 1139, 0, 1150, 289, 290,
	291, 292, 293, 294, 1086, 1119, 1053, 295, 1180, 1181,
	625, 0, 296, 297, 1126, 0, 1107, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 1161, 320, 321, 322, 1110,
	1108, 1109, 1116, 1112, 1111, 1115, 323, 324, 325, 326,
	327, 1143, 328, 1137, 1136, 1057, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	1128, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 1063, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 1151, 1152, 359, 1075, 267, 0, 0,
	0, 0, 0, 360, 361, 362, 1135, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 1162, 366, 367, 1148,
	1149, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 1158, 0, 1085, 378, 0, 379, 380, 381,
	382, 383, 1121, 1122, 1125, 462, 1164, 384, 385, 0,
	386, 387, 388, 389, 390, 0, 0, 0, 268, 391,
	392, 393, 395, 0, 1163, 394, 1130, 1131, 0, 1091,
	0, 396, 397, 1165, 1123, 1166, 398, 399, 400, 1167,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 1159, 1168, 412, 413,
	1169, 0, 414, 0, 0, 0, 415, 416, 419, 1114,
	1113, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	1170, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 1171, 458, 448, 1054, 269, 1172, 459,
	460, 1076, 1124, 461, 1138, 463, 464, 0, 0, 465,
	0, 0, 0, 467, 468, 469, 0, 0, 470, 471,
	647, 1173, 472, 1174, 1153, 473, 474, 466, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 649,
	485, 486, 487, 650, 488, 489, 490, 1154, 491, 652,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 1134, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 1175, 524, 525, 526, 527, 1064, 528,
	0, 529, 530, 536, 537, 531, 532, 538, 539, 540,
	541, 542, 0, 544, 545, 543, 546, 547, 548, 1117,
	549, 550, 533, 534, 551, 552, 1176, 553, 554, 555,
	556, 557, 558, 1132, 0, 559, 0, 560, 561, 562,
	564, 535, 565, 570, 571, 1179, 566, 567, 568, 569,
	1155, 573, 574, 0, 575, 576, 1052, 572, 563, 0,
	577, 578, 579, 580, 581, 582, 583, 353, 584, 0,
	585, 1144, 1145, 1146, 1147, 0, 594, 0, 586, 587,
	588, 1156, 589, 1157, 1074, 590, 591, 592, 593, 0,
	595, 596, 0, 1058, 597, 598, 599, 601, 602, 600,
	603, 1118, 604, 0, 0, 605, 606, 607, 664, 1141,
	1178, 0, 609, 608, 610, 667, 0, 611, 0, 0,
	0, 0, 612, 613, 668, 614, 615, 616, 1055, 0,
	0, 0, 0, 0, 0, 0, 1051, 0, 0, 0,
	0, 0, 0, 1049, 1050, 0, 0, 0, 0, 0,
	0, 0, 1080, 0, 0, 1606, 1078, 1096, 1068, 1069,
	1070, 1066, 1067, 1079, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 1120,
	1084, 0, 0, 0, 279, 280, 1160, 281, 282, 283,
	284, 285, 286, 618, 1133, 0, 287, 1140, 288, 1139,
	0, 1150, 289, 290, 291, 292, 293, 294, 1086, 1119,
	1053, 295, 1180, 1181, 625, 0, 296, 297, 1126, 0,
	1107, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 1161,
	320, 321, 322, 1110, 1108, 1109, 1116, 1112, 1111, 1115,
	323, 324, 325, 326, 327, 1143, 328, 1137, 1136, 1057,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 1128, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 1063, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 1151, 1152, 359,
	1075, 267, 0, 0, 0, 0, 0, 360, 361, 362,
	1135, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	1162, 366, 367, 1148, 1149, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 1158, 0, 1085, 378,
	0, 379, 380, 381, 382, 383, 1121, 1122, 1125, 462,
	1164, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	0, 0, 268, 391, 392, 393, 395, 0, 1163, 394,
	1130, 1131, 0, 1091, 0, 396, 397, 1165, 1123, 1166,
	398, 399, 400, 1167, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	1159, 1168, 412, 413, 1169, 0, 414, 0, 0, 0,
	415, 416, 419, 1114, 1113, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 1170, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 1171, 458, 448,
	1054, 269, 1172, 459, 460, 1076, 1124, 461, 1138, 463,
	464, 0, 0, 465, 0, 0, 0, 467, 468, 469,
	0, 0, 470, 471, 647, 1173, 472, 1174, 1153, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 649, 485, 486, 487, 650, 488, 489,
	490, 1154, 491, 652, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 1134, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 1175, 524, 525,
	526, 527, 1064, 528, 0, 529, 530, 536, 537, 531,
	532, 538, 539, 540, 541, 542, 0, 544, 545, 543,
	546, 547, 548, 1117, 549, 550, 533, 534, 551, 552,
	1176, 553, 554, 555, 556, 557, 558, 1132, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 1179,
	566, 567, 568, 569, 1155, 573, 574, 0, 575, 576,
	1052, 572, 563, 0, 577, 578, 579, 580, 581, 582,
	583, 353, 584, 0, 585, 1144, 1145, 1146, 1147, 0,
	594, 0, 586, 587, 588, 1156, 589, 1157, 1074, 590,
	591, 592, 593, 0, 595, 596, 0, 1058, 597, 598,
	599, 601, 602, 600, 603, 1118, 604, 0, 0, 605,
	606, 607, 664, 1141, 1178, 0, 609, 608, 610, 667,
	0, 611, 0, 0, 0, 0, 612, 613, 668, 614,
	615, 616, 1055, 0, 0, 0, 0, 0, 0, 0,
	1051, 0, 0, 0, 0, 0, 0, 1049, 1050, 0,
	0, 0, 0, 0, 0, 0, 1080, 0, 0, 1601,
	1078, 1096, 1068, 1069, 1070, 1066, 1067, 1079, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 1120, 1084, 0, 0, 0, 279, 280,
	1160, 281, 282, 283, 284, 285, 286, 618, 1133, 0,
	287, 1140, 288, 1139, 0, 1150, 289, 290, 291, 292,
	293, 294, 1086, 1119, 1053, 295, 1180, 1181, 625, 0,
	296, 297, 1126, 0, 1107, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 1161, 320, 321, 322, 1110, 1108, 1109,
	1116, 1112, 1111, 1115, 323, 324, 325, 326, 327, 1143,
	328, 1137, 1136, 1057, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 1128, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	1063, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 1151, 1152, 359, 1075, 267, 0, 0, 0, 0,
	0, 360, 361, 362, 1135, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 1162, 366, 367, 1148, 1149, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	1158, 0, 1085, 378, 0, 379, 380, 381, 382, 383,
	1121, 1122, 1125, 462, 1164, 384, 385, 0, 386, 387,
	388, 389, 390, 0, 0, 0, 268, 391, 392, 393,
	395, 0, 1163, 394, 1130, 1131, 0, 1091, 0, 396,
	397, 1165, 1123, 1166, 398, 399, 400, 1167, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 1159, 1168, 412, 413, 1169, 0,
	414, 0, 0, 0, 415, 416, 419, 1114, 1113, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 1170, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 1171, 458, 448, 1054, 269, 1172, 459, 460, 1076,
	1124, 461, 1138, 463, 464, 0, 0, 465, 0, 0,
	0, 467, 468, 469, 0, 0, 470, 471, 647, 1173,
	472, 1174, 1153, 473, 474, 466, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 649, 485, 486,
	487, 650, 488, 489, 490, 1154, 491, 652, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 1134, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 1175, 524, 525, 526, 527, 1064, 528, 0, 529,
	530, 536, 537, 531, 532, 538, 539, 540, 541, 542,
	0, 544, 545, 543, 546, 547, 548, 1117, 549, 550,
	533, 534, 551, 552, 1176, 553, 554, 555, 556, 557,
	558, 1132, 0, 559, 0, 560, 561, 562, 564, 535,
	565, 570, 571, 1179, 566, 567, 568, 569, 1155, 573,
	574, 0, 575, 576, 1052, 572, 563, 0, 577, 578,
	579, 580, 581, 582, 583, 353, 584, 0, 585, 1144,
	1145, 1146, 1147, 0, 594, 0, 586, 587, 588, 1156,
	589, 1157, 1074, 590, 591, 592, 593, 0, 595, 596,
	0, 1058, 597, 598, 599, 601, 602, 600, 603, 1118,
	604, 0, 0, 605, 606, 607, 664, 1141, 1178, 0,
	609, 608, 610, 667, 0, 611, 0, 0, 0, 0,
	612, 613, 668, 614, 615, 616, 1055, 0, 0, 0,
	0, 0, 0, 0, 1051, 0, 0, 0, 0, 0,
	0, 1049, 1050, 0, 0, 0, 0, 0, 0, 0,
	1080, 0, 0, 1592, 1078, 1096, 1068, 1069, 1070, 1066,
	1067, 1079, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 1120, 1084, 0,
	0, 0, 279, 280, 1160, 281, 282, 283, 284, 285,
	286, 618, 1133, 0, 287, 1140, 288, 1139, 0, 1150,
	289, 290, 291, 292, 293, 294, 1086, 1119, 1053, 295,
	1180, 1181, 625, 0, 296, 297, 1126, 0, 1107, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 1161, 320, 321,
	322, 1110, 1108, 1109, 1116, 1112, 1111, 1115, 323, 324,
	325, 326, 327, 1143, 328, 1137, 1136, 1057, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 1128, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 1063, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 1151, 1152, 359, 1075, 267,
	0, 0, 0, 0, 0, 360, 361, 362, 1135, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 1162, 366,
	367, 1148, 1149, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 1158, 0, 1085, 378, 0, 379,
	380, 381, 382, 383, 1121, 1122, 1125, 462, 1164, 384,
	385, 0, 386, 387, 388, 389, 390, 0, 0, 0,
	268, 391, 392, 393, 395, 0, 1163, 394, 1130, 1131,
	0, 1091, 0, 396, 397, 1165, 1123, 1166, 398, 399,
	400, 1167, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 1159, 1168,
	412, 413, 1169, 0, 414, 0, 0, 0, 415, 416,
	419, 1114, 1113, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 1170, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 1171, 458, 448, 1054, 269,
	1172, 459, 460, 1076, 1124, 461, 1138, 463, 464, 0,
	0, 465, 0, 0, 0, 467, 468, 469, 0, 0,
	470, 471, 647, 1173, 472, 1174, 1153, 473, 474, 466,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 649, 485, 486, 487, 650, 488, 489, 490, 1154,
	491, 652, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 1134, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 1175, 524, 525, 526, 527,
	1064, 528, 0, 529, 530, 536, 537, 531, 532, 538,
	539, 540, 541, 542, 0, 544, 545, 543, 546, 547,
	548, 1117, 549, 550, 533, 534, 551, 552, 1176, 553,
	554, 555, 556, 557, 558, 1132, 0, 559, 0, 560,
	561, 562, 564, 535, 565, 570, 571, 1179, 566, 567,
	568, 569, 1155, 573, 574, 0, 575, 576, 1052, 572,
	563, 0, 577, 578, 579, 580, 581, 582, 583, 353,
	584, 0, 585, 1144, 1145, 1146, 1147, 0, 594, 0,
	586, 587, 588, 1156, 589, 1157, 1074, 590, 591, 592,
	593, 0, 595, 596, 0, 1058, 597, 598, 599, 601,
	602, 600, 603, 1118, 604, 0, 0, 605, 606, 607,
	664, 1141, 1178, 0, 609, 608, 610, 667, 0, 611,
	0, 0, 0, 0, 612, 613, 668, 614, 615, 616,
	1055, 0, 0, 0, 0, 0, 0, 0, 1051, 0,
	0, 0, 0, 0, 0, 1049, 1050, 0, 0, 0,
	0, 0, 0, 0, 1080, 0, 0, 1587, 1078, 1096,
	1068, 1069, 1070, 1066, 1067, 1079, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 1120, 1084, 0, 0, 0, 279, 280, 1160, 281,
	282, 283, 284, 285, 286, 618, 1133, 0, 287, 1140,
	288, 1139, 0, 1150, 289, 290, 291, 292, 293, 294,
	1086, 1119, 1053, 295, 1180, 1181, 625, 0, 296, 297,
	1126, 0, 1107, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 1161, 320, 321, 322, 1110, 1108, 1109, 1116, 1112,
	1111, 1115, 323, 324, 325, 326, 327, 1143, 328, 1137,
	1136, 1057, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 1128, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 1063, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 1151,
	1152, 359, 1075, 267, 0, 0, 0, 0, 0, 360,
	361, 362, 1135, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 1162, 366, 367, 1148, 1149, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 1158, 0,
	1085, 378, 0, 379, 380, 381, 382, 383, 1121, 1122,
	1125, 462, 1164, 384, 385, 0, 386, 387, 388, 389,
	390, 0, 0, 0, 268, 391, 392, 393, 395, 0,
	1163, 394, 1130, 1131, 0, 1091, 0, 396, 397, 1165,
	1123, 1166, 398, 399, 400, 1167, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 1159, 1168, 412, 413, 1169, 0, 414, 0,
	0, 0, 415, 416, 419, 1114, 1113, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 1170, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 1171,
	458, 448, 1054, 269, 1172, 459, 460, 1076, 1124, 461,
	1138, 463, 464, 0, 0, 465, 0, 0, 0, 467,
	468, 469, 0, 0, 470, 471, 647, 1173, 472, 1174,
	1153, 473, 474, 466, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 649, 485, 486, 487, 650,
	488, 489, 490, 1154, 491, 652, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 1134,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 1175,
	524, 525, 526, 527, 1064, 528, 0, 529, 530, 536,
	537, 531, 532, 538, 539, 540, 541, 542, 0, 544,
	545, 543, 546, 547, 548, 1117, 549, 550, 533, 534,
	551, 552, 1176, 553, 554, 555, 556, 557, 558, 1132,
	0, 559, 0, 560, 561, 562, 564, 535, 565, 570,
	571, 1179, 566, 567, 568, 569, 1155, 573, 574, 0,
	575, 576, 1052, 572, 563, 0, 577, 578, 579, 580,
	581, 582, 583, 353, 584, 0, 585, 1144, 1145, 1146,
	1147, 0, 594, 0, 586, 587, 588, 1156, 589, 1157,
	1074, 590, 591, 592, 593, 0, 595, 596, 0, 1058,
	597, 598, 599, 601, 602, 600, 603, 1118, 604, 0,
	0, 605, 606, 607, 664, 1141, 1178, 0, 609, 608,
	610, 667, 0, 611, 0, 0, 0, 0, 612, 613,
	668, 614, 615, 616, 1055, 0, 0, 0, 0, 0,
	0, 0, 1051, 0, 0, 0, 0, 0, 0, 1049,
	1050, 0, 0, 0, 0, 0, 0, 0, 1080, 0,
	0, 1499, 1078, 1096, 1068, 1069, 1070, 1066, 1067, 1079,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 1120, 1084, 0, 0, 0,
	279, 280, 1160, 281, 282, 283, 284, 285, 286, 618,
	1133, 0, 287, 1140, 288, 1139, 0, 1150, 289, 290,
	291, 292, 293, 294, 1086, 1119, 1053, 295, 1180, 1181,
	625, 0, 296, 297, 1126, 0, 1107, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 1161, 320, 321, 322, 1110,
	1108, 1109, 1116, 1112, 1111, 1115, 323, 324, 325, 326,
	327, 1143, 328, 1137, 1136, 1057, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	1128, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 1063, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 1151, 1152, 359, 1075, 267, 0, 0,
	0, 0, 0, 360, 361, 362, 1135, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 1162, 366, 367, 1148,
	1149, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 1158, 0, 1085, 378, 0, 379, 380, 381,
	382, 383, 1498, 1122, 1125, 462, 1164, 384, 385, 0,
	386, 387, 388, 389, 390, 0, 0, 0, 268, 391,
	392, 393, 395, 0, 1163, 394, 1130, 1131, 0, 1091,
	0, 396, 397, 1165, 1123, 1166, 398, 399, 400, 1167,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 1159, 1168, 412, 413,
	1169, 0, 414, 0, 0, 0, 415, 416, 419, 1114,
	1113, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	1170, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 1171, 458, 448, 1054, 269, 1172, 459,
	460, 1076, 1124, 461, 1138, 463, 464, 0, 0, 465,
	0, 0, 0, 467, 468, 469, 0, 0, 470, 471,
	647, 1173, 472, 1174, 1153, 473, 474, 466, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 649,
	485, 486, 487, 650, 488, 489, 490, 1154, 491, 652,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 1134, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 1175, 524, 525, 526, 527, 1064, 528,
	0, 529, 530, 536, 537, 531, 532, 538, 539, 540,
	541, 542, 0, 544, 545, 543, 546, 547, 548, 1117,
	549, 550, 533, 534, 551, 552, 1176, 553, 554, 555,
	556, 557, 558, 1132, 0, 559, 0, 560, 561, 562,
	564, 535, 565, 570, 571, 1179, 566, 567, 568, 569,
	1155, 573, 574, 0, 575, 576, 1052, 572, 563, 0,
	577, 578, 579, 580, 581, 582, 583, 353, 584, 0,
	585, 1144, 1145, 1146, 1147, 0, 594, 0, 586, 587,
	588, 1156, 589, 1157, 1074, 590, 591, 592, 593, 0,
	595, 596, 0, 1058, 597, 598, 599, 601, 602, 600,
	603, 1118, 604, 0, 0, 605, 606, 607, 664, 1141,
	1178, 0, 609, 608, 610, 667, 0, 611, 0, 0,
	0, 0, 612, 613, 668, 614, 615, 616, 1055, 0,
	0, 0, 0, 0, 0, 0, 1051, 0, 0, 0,
	0, 0, 0, 1049, 1050, 0, 0, 0, 0, 0,
	0, 0, 1080, 0, 0, 1493, 1078, 1096, 1068, 1069,
	1070, 1066, 1067, 1079, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 1120,
	1084, 0, 0, 0, 279, 280, 1160, 281, 282, 283,
	284, 285, 286, 618, 1133, 0, 287, 1140, 288, 1139,
	0, 1150, 289, 290, 291, 292, 293, 294, 1086, 1119,
	1053, 295, 1180, 1181, 625, 0, 296, 297, 1126, 0,
	1107, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 1161,
	320, 321, 322, 1110, 1108, 1109, 1116, 1112, 1111, 1115,
	323, 324, 325, 326, 327, 1143, 328, 1137, 1136, 1057,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 1128, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 1063, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 1151, 1152, 359,
	1075, 267, 0, 0, 0, 0, 0, 360, 361, 362,
	1135, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	1162, 366, 367, 1148, 1149, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 1158, 0, 1085, 378,
	0, 379, 380, 381, 382, 383, 1492, 1122, 1125, 462,
	1164, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	0, 0, 268, 391, 392, 393, 395, 0, 1163, 394,
	1130, 1131, 0, 1091, 0, 396, 397, 1165, 1123, 1166,
	398, 399, 400, 1167, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	1159, 1168, 412, 413, 1169, 0, 414, 0, 0, 0,
	415, 416, 419, 1114, 1113, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 1170, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 1171, 458, 448,
	1054, 269, 1172, 459, 460, 1076, 1124, 461, 1138, 463,
	464, 0, 0, 465, 0, 0, 0, 467, 468, 469,
	0, 0, 470, 471, 647, 1173, 472, 1174, 1153, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 649, 485, 486, 487, 650, 488, 489,
	490, 1154, 491, 652, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 1134, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 1175, 524, 525,
	526, 527, 1064, 528, 0, 529, 530, 536, 537, 531,
	532, 538, 539, 540, 541, 542, 0, 544, 545, 543,
	546, 547, 548, 1117, 549, 550, 533, 534, 551, 552,
	1176, 553, 554, 555, 556, 557, 558, 1132, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 1179,
	566, 567, 568, 569, 1155, 573, 574, 0, 575, 576,
	1052, 572, 563, 0, 577, 578, 579, 580, 581, 582,
	583, 353, 584, 0, 585, 1144, 1145, 1146, 1147, 0,
	594, 0, 586, 587, 588, 1156, 589, 1157, 1074, 590,
	591, 592, 593, 0, 595, 596, 0, 1058, 597, 598,
	599, 601, 602, 600, 603, 1118, 604, 0, 0, 605,
	606, 607, 664, 1141, 1178, 0, 609, 608, 610, 667,
	0, 611, 0, 0, 0, 0, 612, 613, 668, 614,
	615, 616, 1055, 0, 0, 0, 0, 0, 0, 0,
	1051, 0, 0, 0, 0, 0, 0, 1049, 1050, 0,
	0, 0, 0, 0, 0, 0, 1080, 0, 0, 1486,
	1078, 1096, 1068, 1069, 1070, 1066, 1067, 1079, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 1120, 1084, 0, 0, 0, 279, 280,
	1160, 281, 282, 283, 284, 285, 286, 618, 1133, 0,
	287, 1140, 288, 1139, 0, 1150, 289, 290, 291, 292,
	293, 294, 1086, 1119, 1053, 295, 1180, 1181, 625, 0,
	296, 297, 1126, 0, 1107, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 1161, 320, 321, 322, 1110, 1108, 1109,
	1116, 1112, 1111, 1115, 323, 324, 325, 326, 327, 1143,
	328, 1137, 1136, 1057, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 1128, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	1063, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 1151, 1152, 359, 1075, 267, 0, 0, 0, 0,
	0, 360, 361, 362, 1135, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 1162, 366, 367, 1148, 1149, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	1158, 0, 1085, 378, 0, 379, 380, 381, 382, 383,
	1121, 1122, 1125, 462, 1164, 384, 385, 0, 386, 387,
	388, 389, 390, 0, 0, 0, 268, 391, 392, 393,
	395, 0, 1163, 394, 1130, 1131, 0, 1091, 0, 396,
	397, 1165, 1123, 1166, 398, 399, 400, 1167, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 1159, 1168, 412, 413, 1169, 0,
	414, 0, 0, 0, 415, 416, 419, 1114, 1113, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 1170, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 1171, 458, 448, 1054, 269, 1172, 459, 460, 1076,
	1124, 461, 1138, 463, 464, 0, 0, 465, 0, 0,
	0, 467, 468, 469, 0, 0, 470, 471, 647, 1173,
	472, 1174, 1153, 473, 474, 466, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 649, 485, 486,
	487, 650, 488, 489, 490, 1154, 491, 652, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 1134, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 1175, 524, 525, 526, 527, 1064, 528, 0, 529,
	530, 536, 537, 531, 532, 538, 539, 540, 541, 542,
	0, 544, 545, 543, 546, 547, 548, 1117, 549, 550,
	533, 534, 551, 552, 1176, 553, 554, 555, 556, 557,
	558, 1132, 0, 559, 0, 560, 561, 562, 564, 535,
	565, 570, 571, 1179, 566, 567, 568, 569, 1155, 573,
	574, 0, 575, 576, 1052, 572, 563, 0, 577, 578,
	579, 580, 581, 582, 583, 353, 584, 0, 585, 1144,
	1145, 1146, 1147, 0, 594, 0, 586, 587, 588, 1156,
	589, 1157, 1074, 590, 591, 592, 593, 0, 595, 596,
	0, 1058, 597, 598, 599, 601, 602, 600, 603, 1118,
	604, 0, 0, 605, 606, 607, 664, 1141, 1178, 0,
	609, 608, 610, 667, 0, 611, 0, 0, 0, 0,
	612, 613, 668, 614, 615, 616, 1055, 0, 0, 0,
	0, 0, 0, 0, 1051, 0, 0, 0, 0, 0,
	0, 1049, 1050, 0, 0, 0, 0, 0, 0, 0,
	1080, 0, 0, 1306, 1078, 1096, 1068, 1069, 1070, 1066,
	1067, 1079, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 1120, 1084, 0,
	0, 0, 279, 280, 1160, 281, 282, 283, 284, 285,
	286, 618, 1133, 0, 287, 1140, 288, 1139, 0, 1150,
	289, 290, 291, 292, 293, 294, 1086, 1119, 1053, 295,
	1180, 1181, 625, 0, 296, 297, 1126, 0, 1107, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 1161, 320, 321,
	322, 1110, 1108, 1109, 1116, 1112, 1111, 1115, 323, 324,
	325, 326, 327, 1143, 328, 1137, 1136, 1057, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 1128, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 1063, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 1151, 1152, 359, 1075, 267,
	0, 0, 0, 0, 0, 360, 361, 362, 1135, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 1162, 366,
	367, 1148, 1149, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 1158, 0, 1085, 378, 0, 379,
	380, 381, 382, 383, 1121, 1122, 1125, 462, 1164, 384,
	385, 0, 386, 387, 388, 389, 390, 0, 0, 0,
	268, 391, 392, 393, 395, 0, 1163, 394, 1130, 1131,
	0, 1091, 0, 396, 397, 1165, 1123, 1166, 398, 399,
	400, 1167, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 1159, 1168,
	412, 413, 1169, 0, 414, 0, 0, 0, 415, 416,
	419, 1114, 1113, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 1170, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 1171, 458, 448, 1054, 269,
	1172, 459, 460, 1076, 1124, 461, 1138, 463, 464, 0,
	0, 465, 0, 0, 0, 467, 468, 469, 0, 0,
	470, 471, 647, 1173, 472, 1174, 1153, 473, 474, 466,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 649, 485, 486, 487, 650, 488, 489, 490, 1154,
	491, 652, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 1134, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 1175, 524, 525, 526, 527,
	1064, 528, 0, 529, 530, 536, 537, 531, 532, 538,
	539, 540, 541, 542, 0, 544, 545, 543, 546, 547,
	548, 1117, 549, 550, 533, 534, 551, 552, 1176, 553,
	554, 555, 556, 557, 558, 1132, 0, 559, 0, 560,
	561, 562, 564, 535, 565, 570, 571, 1179, 566, 567,
	568, 569, 1155, 573, 574, 0, 575, 576, 1052, 572,
	563, 0, 577, 578, 579, 580, 581, 582, 583, 353,
	584, 0, 585, 1144, 1145, 1146, 1147, 0, 594, 0,
	586, 587, 588, 1156, 589, 1157, 1074, 590, 591, 592,
	593, 0, 595, 596, 0, 1058, 597, 598, 599, 601,
	602, 600, 603, 1118, 604, 0, 0, 605, 606, 607,
	664, 1141, 1178, 0, 609, 608, 610, 667, 0, 611,
	0, 0, 0, 0, 612, 613, 668, 614, 615, 616,
	1055, 0, 0, 0, 0, 0, 0, 0, 1051, 0,
	0, 0, 0, 0, 0, 1049, 1050, 1096, 1068, 1069,
	1070, 1066, 1067, 1079, 1080, 0, 0, 0, 1078, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 1120,
	1084, 0, 0, 0, 279, 280, 1160, 281, 282, 283,
	284, 285, 286, 618, 1133, 0, 287, 1140, 288, 1139,
	0, 1150, 289, 290, 291, 292, 293, 294, 1086, 1119,
	1053, 295, 1180, 1181, 625, 0, 296, 297, 1126, 0,
	1107, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 1161,
	320, 321, 322, 1110, 1108, 1109, 1116, 1112, 1111, 1115,
	323, 324, 325, 326, 327, 1143, 328, 1137, 1136, 1057,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 1128, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 1063, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 1151, 1152, 359,
	1075, 267, 0, 0, 0, 0, 0, 360, 361, 362,
	1135, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	1162, 366, 367, 1148, 1149, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 1158, 0, 1085, 378,
	0, 379, 380, 381, 382, 383, 1121, 1122, 1125, 462,
	1164, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	0, 0, 268, 391, 392, 393, 395, 0, 1163, 394,
	1130, 1131, 0, 1091, 0, 396, 397, 1165, 1123, 1166,
	398, 399, 400, 1167, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	1159, 1168, 412, 413, 1169, 0, 414, 0, 0, 0,
	415, 416, 419, 1114, 1113, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 1170, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 1171, 458, 448,
	1054, 269, 1172, 459, 460, 1076, 1124, 461, 1138, 463,
	464, 0, 0, 465, 0, 0, 0, 467, 468, 469,
	0, 0, 470, 471, 647, 1173, 472, 1174, 1153, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 649, 485, 486, 487, 650, 488, 489,
	490, 1154, 491, 652, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 1134, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 1175, 524, 525,
	526, 527, 1064, 528, 0, 529, 530, 536, 537, 531,
	532, 538, 539, 540, 541, 542, 0, 544, 545, 543,
	546, 547, 548, 1117, 549, 550, 533, 534, 551, 552,
	1176, 553, 554, 555, 556, 557, 558, 1132, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 1179,
	566, 567, 568, 569, 1155, 573, 574, 0, 575, 576,
	1052, 572, 563, 0, 577, 578, 579, 580, 581, 582,
	583, 353, 584, 0, 585, 1144, 1145, 1146, 1147, 0,
	594, 0, 586, 587, 588, 1156, 589, 1157, 1074, 590,
	591, 592, 593, 0, 595, 596, 0, 1058, 597, 598,
	599, 601, 602, 600, 603, 1118, 604, 0, 0, 605,
	606, 607, 664, 1141, 1178, 0, 609, 608, 610, 667,
	0, 611, 0, 0, 0, 0, 612, 613, 668, 614,
	615, 616, 1055, 0, 0, 0, 0, 0, 0, 0,
	1051, 0, 0, 0, 0, 0, 0, 1049, 1050, 1096,
	1068, 1069, 1070, 1066, 1067, 1079, 1080, 0, 0, 0,
	1078, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 1120, 1084, 0, 0, 0, 279, 280, 1160, 281,
	282, 283, 284, 285, 286, 618, 1133, 0, 287, 1140,
	288, 1139, 0, 1150, 289, 290, 291, 292, 293, 294,
	1086, 1119, 1053, 295, 1180, 1181, 625, 0, 296, 297,
	1126, 0, 1107, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 1161, 320, 321, 4490, 1110, 1108, 1109, 1116, 1112,
	1111, 1115, 323, 324, 325, 326, 327, 1143, 328, 1137,
	1136, 1057, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 1128, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 1063, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 1151,
	1152, 359, 1075, 267, 0, 0, 0, 0, 0, 360,
	361, 362, 1135, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 1162, 366, 367, 1148, 1149, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 1158, 0,
	1085, 378, 0, 379, 380, 381, 382, 383, 1121, 1122,
	1125, 462, 1164, 384, 385, 0, 386, 387, 388, 389,
	390, 0, 0, 0, 268, 391, 392, 393, 395, 0,
	1163, 394, 1130, 1131, 0, 1091, 0, 396, 397, 1165,
	1123, 1166, 398, 399, 400, 1167, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 1159, 1168, 412, 413, 1169, 0, 414, 0,
	0, 0, 415, 416, 419, 1114, 1113, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 1170, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 1171,
	458, 448, 1054, 269, 1172, 459, 460, 1076, 1124, 461,
	1138, 463, 464, 0, 0, 465, 0, 0, 0, 467,
	468, 469, 0, 0, 470, 471, 647, 1173, 472, 1174,
	1153, 473, 474, 466, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 649, 485, 486, 487, 650,
	488, 489, 490, 1154, 491, 652, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 1134,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 1175,
	524, 525, 526, 527, 1064, 528, 0, 529, 530, 536,
	537, 531, 532, 538, 539, 540, 541, 542, 0, 544,
	545, 543, 546, 547, 548, 1117, 549, 550, 533, 534,
	551, 552, 1176, 553, 554, 555, 556, 557, 558, 1132,
	0, 559, 0, 560, 561, 562, 564, 535, 565, 570,
	571, 1179, 566, 567, 568, 569, 1155, 573, 574, 0,
	575, 576, 1052, 572, 563, 0, 577, 578, 579, 580,
	581, 582, 583, 353, 584, 0, 585, 1144, 1145, 1146,
	1147, 0, 594, 0, 586, 587, 588, 1156, 589, 1157,
	1074, 590, 591, 592, 593, 0, 4489, 596, 0, 1058,
	597, 598, 599, 601, 602, 600, 603, 1118, 604, 0,
	0, 605, 606, 607, 664, 1141, 1178, 0, 609, 608,
	610, 667, 0, 611, 0, 0, 0, 0, 612, 613,
	668, 614, 615, 616, 1055, 0, 0, 0, 0, 0,
	0, 0, 1051, 0, 0, 0, 0, 0, 0, 1049,
	1050, 1096, 1068, 1069, 1070, 1066, 1067, 1079, 1080, 0,
	0, 0, 1078, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 1120, 1084, 0, 0, 0, 279, 280,
	1160, 281, 282, 283, 284, 285, 286, 4488, 1133, 0,
	287, 1140, 288, 1139, 0, 1150, 289, 290, 291, 292,
	293, 294, 1086, 1119, 1053, 295, 1180, 1181, 625, 0,
	296, 297, 1126, 0, 1107, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 1161, 320, 321, 4490, 1110, 1108, 1109,
	1116, 1112, 1111, 1115, 323, 324, 325, 326, 327, 1143,
	328, 1137, 1136, 1057, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 1128, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	1063, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 1151, 1152, 359, 1075, 267, 0, 0, 0, 0,
	0, 360, 361, 362, 1135, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 1162, 366, 367, 1148, 1149, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	1158, 0, 1085, 378, 0, 379, 380, 381, 382, 383,
	1121, 1122, 1125, 462, 1164, 384, 385, 0, 386, 387,
	388, 389, 390, 0, 0, 0, 268, 391, 392, 393,
	395, 0, 1163, 394, 1130, 1131, 0, 1091, 0, 396,
	397, 1165, 1123, 1166, 398, 399, 400, 1167, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 1159, 1168, 412, 413, 1169, 0,
	414, 0, 0, 0, 415, 416, 419, 1114, 1113, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 1170, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 1171, 458, 448, 1054, 269, 1172, 459, 460, 1076,
	1124, 461, 1138, 463, 464, 0, 0, 465, 0, 0,
	0, 467, 468, 469, 0, 0, 470, 471, 647, 1173,
	472, 1174, 1153, 473, 474, 466, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 649, 485, 486,
	487, 650, 488, 489, 490, 1154, 491, 652, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 1134, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 1175, 524, 525, 526, 527, 1064, 528, 0, 529,
	530, 536, 537, 531, 532, 538, 539, 540, 541, 542,
	0, 544, 545, 543, 546, 547, 548, 1117, 549, 550,
	533, 534, 551, 552, 1176, 553, 554, 555, 556, 557,
	558, 1132, 0, 559, 0, 560, 561, 562, 564, 535,
	565, 570, 571, 1179, 566, 567, 568, 569, 1155, 573,
	574, 0, 575, 576, 1052, 572, 563, 0, 577, 578,
	579, 580, 581, 582, 583, 353, 584, 0, 585, 1144,
	1145, 1146, 1147, 0, 594, 0, 586, 587, 588, 1156,
	589, 1157, 1074, 590, 591, 592, 593, 0, 4489, 596,
	0, 1058, 597, 598, 599, 601, 602, 600, 603, 1118,
	604, 0, 0, 605, 606, 607, 664, 1141, 1178, 0,
	609, 608, 610, 667, 0, 611, 0, 0, 0, 0,
	612, 613, 668, 614, 615, 616, 1055, 0, 0, 0,
	0, 0, 0, 0, 1051, 0, 0, 0, 0, 0,
	0, 1049, 1050, 1096, 1068, 1069, 1070, 1066, 1067, 1079,
	1080, 0, 0, 0, 1078, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 1120, 1084, 0, 0, 0,
	279, 280, 1160, 281, 282, 283, 284, 285, 286, 618,
	1133, 0, 287, 1140, 288, 1139, 0, 1150, 289, 290,
	291, 292, 293, 294, 1086, 1119, 1053, 295, 1180, 1181,
	625, 0, 296, 297, 1126, 0, 1107, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 1161, 320, 4149, 322, 1110,
	1108, 1109, 1116, 1112, 1111, 1115, 323, 324, 325, 326,
	327, 1143, 328, 1137, 1136, 1057, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	1128, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 1063, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 1151, 1152, 359, 1075, 267, 0, 0,
	0, 0, 0, 360, 361, 362, 1135, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 1162, 366, 367, 1148,
	1149, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 1158, 0, 4150, 378, 0, 379, 380, 381,
	382, 383, 1121, 1122, 1125, 462, 1164, 384, 385, 0,
	386, 387, 388, 389, 390, 0, 0, 0, 268, 391,
	392, 393, 395, 0, 1163, 394, 1130, 1131, 0, 1091,
	0, 396, 397, 1165, 1123, 1166, 398, 399, 400, 1167,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 1159, 1168, 412, 413,
	1169, 0, 414, 0, 0, 0, 415, 416, 419, 1114,
	1113, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	1170, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 1171, 458, 448, 1054, 269, 1172, 459,
	460, 1076, 1124, 461, 1138, 463, 464, 0, 0, 465,
	0, 0, 0, 467, 468, 469, 0, 0, 470, 471,
	647, 1173, 472, 1174, 1153, 473, 474, 466, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 649,
	485, 486, 487, 650, 488, 489, 490, 1154, 491, 652,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 1134, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 1175, 524, 525, 526, 4148, 1064, 528,
	0, 529, 530, 536, 537, 531, 532, 538, 539, 540,
	541, 542, 0, 544, 545, 543, 546, 547, 548, 1117,
	549, 550, 533, 534, 551, 552, 1176, 553, 554, 555,
	556, 557, 558, 1132, 0, 559, 0, 560, 561, 562,
	564, 535, 565, 570, 571, 1179, 566, 567, 568, 569,
	1155, 573, 574, 0, 575, 576, 1052, 572, 563, 0,
	577, 578, 579, 580, 581, 582, 583, 353, 584, 0,
	585, 1144, 1145, 1146, 1147, 0, 594, 0, 586, 587,
	588, 1156, 589, 1157, 1074, 590, 591, 592, 593, 0,
	595, 596, 0, 1058, 597, 598, 599, 601, 602, 600,
	603, 1118, 604, 0, 0, 605, 606, 607, 664, 1141,
	1178, 0, 609, 608, 610, 667, 0, 611, 0, 0,
	0, 0, 612, 613, 668, 614, 615, 616, 1055, 0,
	0, 0, 0, 0, 0, 0, 1051, 0, 0, 0,
	0, 0, 0, 1049, 1050, 1096, 1068, 1069, 1070, 3036,
	3037, 1079, 1080, 0, 0, 0, 1078, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 1120, 1084, 0,
	0, 0, 279, 280, 1160, 281, 282, 283, 284, 285,
	286, 618, 1133, 0, 287, 1140, 288, 1139, 0, 1150,
	289, 290, 291, 292, 293, 294, 1086, 1119, 1053, 295,
	1180, 1181, 625, 0, 296, 297, 1126, 0, 1107, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 1161, 320, 321,
	322, 1110, 1108, 1109, 1116, 1112, 1111, 1115, 323, 324,
	325, 326, 327, 1143, 328, 1137, 1136, 1057, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 1128, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 1063, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 1151, 1152, 359, 1075, 267,
	0, 0, 0, 0, 0, 360, 361, 362, 1135, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 1162, 366,
	367, 1148, 1149, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 1158, 0, 1085, 378, 0, 379,
	380, 381, 382, 383, 1121, 1122, 1125, 462, 1164, 384,
	385, 0, 386, 387, 388, 389, 390, 0, 0, 0,
	268, 391, 392, 393, 395, 0, 1163, 394, 1130, 1131,
	0, 1091, 0, 396, 397, 1165, 1123, 1166, 398, 399,
	400, 1167, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 1159, 1168,
	412, 413, 1169, 0, 414, 0, 0, 0, 415, 416,
	419, 1114, 1113, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 1170, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 1171, 458, 448, 1054, 269,
	1172, 459, 460, 1076, 1124, 461, 1138, 463, 464, 0,
	0, 465, 0, 0, 0, 467, 468, 469, 0, 0,
	470, 471, 647, 1173, 472, 1174, 1153, 473, 474, 466,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 649, 485, 486, 487, 650, 488, 489, 490, 1154,
	491, 652, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 1134, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 1175, 524, 525, 526, 527,
	1064, 528, 0, 529, 530, 536, 537, 531, 532, 538,
	539, 540, 541, 542, 0, 544, 545, 543, 546, 547,
	548, 1117, 549, 550, 533, 534, 551, 552, 1176, 553,
	554, 555, 556, 557, 558, 1132, 0, 559, 0, 560,
	561, 562, 564, 535, 565, 570, 571, 1179, 566, 567,
	568, 569, 1155, 573, 574, 0, 575, 576, 1052, 572,
	563, 0, 577, 578, 579, 580, 581, 582, 583, 353,
	584, 0, 585, 1144, 1145, 1146, 1147, 0, 594, 0,
	586, 587, 588, 1156, 589, 1157, 1074, 590, 591, 592,
	593, 0, 595, 596, 0, 1058, 597, 598, 599, 601,
	602, 600, 603, 1118, 604, 0, 0, 605, 606, 607,
	664, 1141, 1178, 0, 609, 608, 610, 667, 0, 611,
	0, 0, 0, 0, 612, 613, 668, 614, 615, 616,
	1055, 0, 0, 0, 0, 0, 0, 0, 1051, 0,
	0, 0, 0, 0, 0, 1049, 1050, 1096, 1068, 1069,
	1070, 3034, 3035, 1079, 1080, 0, 0, 0, 1078, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 1120,
	1084, 0, 0, 0, 279, 280, 1160, 281, 282, 283,
	284, 285, 286, 618, 1133, 0, 287, 1140, 288, 1139,
	0, 1150, 289, 290, 291, 292, 293, 294, 1086, 1119,
	1053, 295, 1180, 1181, 625, 0, 296, 297, 1126, 0,
	1107, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 1161,
	320, 321, 322, 1110, 1108, 1109, 1116, 1112, 1111, 1115,
	323, 324, 325, 326, 327, 1143, 328, 1137, 1136, 1057,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 1128, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 1063, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 1151, 1152, 359,
	1075, 267, 0, 0, 0, 0, 0, 360, 361, 362,
	1135, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	1162, 366, 367, 1148, 1149, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 1158, 0, 1085, 378,
	0, 379, 380, 381, 382, 383, 1121, 1122, 1125, 462,
	1164, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	0, 0, 268, 391, 392, 393, 395, 0, 1163, 394,
	1130, 1131, 0, 1091, 0, 396, 397, 1165, 1123, 1166,
	398, 399, 400, 1167, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	1159, 1168, 412, 413, 1169, 0, 414, 0, 0, 0,
	415, 416, 419, 1114, 1113, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 1170, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 1171, 458, 448,
	1054, 269, 1172, 459, 460, 1076, 1124, 461, 1138, 463,
	464, 0, 0, 465, 0, 0, 0, 467, 468, 469,
	0, 0, 470, 471, 647, 1173, 472, 1174, 1153, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 649, 485, 486, 487, 650, 488, 489,
	490, 1154, 491, 652, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 1134, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 1175, 524, 525,
	526, 527, 1064, 528, 0, 529, 530, 536, 537, 531,
	532, 538, 539, 540, 541, 542, 0, 544, 545, 543,
	546, 547, 548, 1117, 549, 550, 533, 534, 551, 552,
	1176, 553, 554, 555, 556, 557, 558, 1132, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 1179,
	566, 567, 568, 569, 1155, 573, 574, 0, 575, 576,
	1052, 572, 563, 0, 577, 578, 579, 580, 581, 582,
	583, 353, 584, 0, 585, 1144, 1145, 1146, 1147, 0,
	594, 0, 586, 587, 588, 1156, 589, 1157, 1074, 590,
	591, 592, 593, 0, 595, 596, 0, 1058, 597, 598,
	599, 601, 602, 600, 603, 1118, 604, 0, 0, 605,
	606, 607, 664, 1141, 1178, 0, 609, 608, 610, 667,
	0, 611, 0, 0, 0, 0, 612, 613, 668, 614,
	615, 616, 1055, 0, 0, 0, 0, 0, 0, 0,
	1051, 0, 0, 0, 0, 0, 0, 1049, 1050, 1096,
	1068, 1069, 1070, 1066, 1067, 1079, 1080, 0, 0, 0,
	1078, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 1120, 1084, 0, 0, 0, 279, 280, 1160, 281,
	282, 283, 284, 285, 286, 618, 1133, 0, 287, 1140,
	288, 1139, 0, 1150, 289, 290, 291, 292, 293, 294,
	1086, 1119, 1053, 295, 1180, 1181, 625, 0, 296, 297,
	1126, 0, 1107, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 1161, 320, 321, 322, 1110, 1108, 1109, 1116, 1112,
	1111, 1115, 323, 324, 325, 326, 327, 1143, 328, 1137,
	1136, 1057, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 1128, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 1063, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 1151,
	1152, 359, 1075, 267, 0, 0, 0, 0, 0, 360,
	361, 362, 1135, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 1162, 366, 367, 1148, 1149, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 1158, 0,
	1085, 378, 0, 379, 380, 381, 382, 383, 1121, 1122,
	1125, 462, 1164, 384, 385, 0, 386, 387, 388, 389,
	390, 0, 0, 0, 268, 391, 392, 393, 395, 0,
	1163, 394, 1130, 1131, 0, 1091, 0, 396, 397, 1165,
	1123, 1166, 398, 399, 400, 1167, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 1159, 1168, 412, 413, 1169, 0, 414, 0,
	0, 0, 415, 416, 419, 1114, 1113, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 1170, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 1171,
	458, 448, 1054, 269, 1172, 459, 460, 1076, 1124, 461,
	1138, 463, 464, 0, 0, 465, 0, 0, 0, 467,
	468, 469, 0, 0, 470, 471, 647, 1173, 472, 1174,
	1153, 473, 474, 466, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 649, 485, 486, 487, 650,
	488, 489, 490, 1154, 491, 652, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 1134,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 1175,
	524, 525, 526, 527, 1064, 528, 0, 529, 530, 536,
	537, 531, 532, 538, 539, 540, 541, 542, 0, 544,
	545, 543, 546, 547, 548, 1117, 549, 550, 533, 534,
	551, 552, 1176, 553, 554, 555, 556, 557, 558, 1132,
	0, 559, 0, 560, 561, 562, 564, 535, 565, 570,
	571, 1179, 566, 567, 568, 569, 1155, 573, 574, 0,
	575, 576, 1052, 572, 563, 0, 577, 578, 579, 580,
	581, 582, 583, 353, 584, 0, 585, 1144, 1145, 1146,
	1147, 0, 594, 0, 586, 587, 588, 1156, 589, 1157,
	1074, 590, 591, 592, 593, 0, 595, 596, 0, 1058,
	597, 598, 599, 601, 602, 600, 603, 1118, 604, 0,
	0, 605, 606, 607, 664, 1141, 1178, 0, 609, 608,
	610, 667, 0, 611, 0, 0, 0, 0, 612, 613,
	668, 614, 615, 616, 1055, 0, 0, 0, 0, 0,
	0, 0, 1051, 0, 0, 0, 0, 0, 0, 2363,
	2364, 1096, 1068, 1069, 1070, 1066, 1067, 1079, 1080, 0,
	0, 0, 1078, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 1120, 1084, 0, 0, 0, 279, 280,
	1160, 281, 282, 283, 284, 285, 286, 618, 1133, 0,
	287, 1140, 288, 1139, 0, 1150, 289, 290, 291, 292,
	293, 294, 1086, 1119, 0, 295, 1180, 1181, 625, 0,
	296, 297, 1126, 0, 1107, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 1161, 320, 321, 322, 1110, 1108, 1109,
	1116, 1112, 1111, 1115, 323, 324, 325, 326, 327, 1143,
	328, 1137, 1136, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 1128, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	1063, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 1151, 1152, 359, 1075, 267, 0, 0, 0, 0,
	0, 360, 361, 362, 1135, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 1162, 366, 367, 1148, 1149, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	1158, 0, 1085, 378, 0, 379, 380, 381, 382, 383,
	1121, 1122, 1125, 462, 1164, 384, 385, 0, 386, 387,
	388, 389, 390, 0, 0, 0, 268, 391, 392, 393,
	395, 0, 1163, 394, 1130, 1131, 0, 1091, 0, 396,
	397, 1165, 1123, 1166, 398, 399, 400, 1167, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 1159, 1168, 412, 413, 1169, 0,
	414, 0, 0, 0, 415, 416, 419, 1114, 1113, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 1170, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 1171, 458, 448, 0, 269, 1172, 459, 460, 1076,
	1124, 461, 1138, 463, 464, 0, 0, 465, 0, 0,
	0, 467, 468, 469, 0, 0, 470, 471, 647, 1173,
	472, 1174, 1153, 473, 474, 466, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 649, 485, 486,
	487, 650, 488, 489, 490, 1154, 491, 652, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 1134, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 1175, 524, 525, 526, 527, 1064, 528, 0, 529,
	530, 536, 537, 531, 532, 538, 539, 540, 541, 542,
	0, 544, 545, 543, 546, 547, 548, 1117, 549, 550,
	533, 534, 551, 552, 1176, 553, 554, 555, 556, 557,
	558, 1132, 0, 559, 0, 560, 561, 562, 564, 535,
	565, 570, 571, 1179, 566, 567, 568, 569, 1155, 573,
	574, 0, 575, 576, 0, 572, 563, 0, 577, 578,
	579, 580, 581, 582, 583, 353, 584, 0, 585, 1144,
	1145, 1146, 1147, 0, 594, 0, 586, 587, 588, 1156,
	589, 1157, 1074, 590, 591, 592, 593, 0, 595, 596,
	0, 0, 597, 598, 599, 601, 602, 600, 603, 1118,
	604, 0, 0, 605, 606, 607, 664, 1141, 1178, 0,
	609, 608, 610, 667, 0, 611, 0, 0, 0, 0,
	612, 613, 668, 614, 615, 616, 1096, 1068, 1069, 1070,
	1066, 1067, 1079, 0, 2583, 0, 0, 0, 0, 0,
	0, 2581, 2582, 270, 272, 271, 273, 274, 275, 276,
	1080, 277, 278, 0, 1078, 0, 0, 0, 1120, 1084,
	0, 0, 0, 279, 280, 1160, 281, 282, 283, 284,
	285, 286, 618, 1133, 0, 287, 1140, 288, 1139, 0,
	1150, 289, 290, 291, 292, 293, 294, 1086, 1119, 0,
	295, 1180, 1181, 625, 0, 296, 297, 1126, 0, 1107,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 1161, 320,
	321, 322, 1110, 1108, 1109, 1116, 1112, 1111, 1115, 323,
	324, 325, 326, 327, 1143, 328, 1137, 1136, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 1128, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 1063, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 1151, 1152, 359, 1075,
	267, 0, 0, 0, 0, 0, 360, 361, 362, 1135,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 1162,
	366, 367, 1148, 1149, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 1158, 0, 1085, 378, 0,
	379, 380, 381, 382, 383, 1121, 1122, 1125, 462, 1164,
	384, 385, 0, 386, 387, 388, 389, 390, 0, 0,
	0, 268, 391, 392, 393, 395, 0, 1163, 394, 1130,
	1131, 0, 1091, 0, 396, 397, 1165, 1123, 1166, 398,
	399, 400, 1167, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 1159,
	1168, 412, 413, 1169, 0, 414, 0, 0, 0, 415,
	416, 419, 1114, 1113, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 1170, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 1171, 458, 448, 0,
	269, 1172, 459, 460, 1076, 1124, 461, 1138, 463, 464,
	0, 0, 465, 0, 0, 0, 467, 468, 469, 0,
	0, 470, 471, 647, 1173, 472, 1174, 1153, 473, 474,
	466, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 649, 485, 486, 487, 650, 488, 489, 490,
	1154, 491, 652, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 1134, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 1175, 524, 525, 526,
	527, 3029, 3030, 0, 529, 530, 536, 537, 531, 532,
	538, 539, 540, 541, 542, 0, 544, 545, 543, 546,
	547, 548, 1117, 549, 550, 533, 534, 551, 552, 1176,
	553, 554, 555, 556, 557, 558, 1132, 0, 559, 0,
	560, 561, 562, 564, 535, 565, 570, 571, 1179, 566,
	567, 568, 569, 1155, 573, 574, 0, 575, 576, 0,
	572, 563, 0, 577, 578, 579, 580, 581, 582, 583,
	353, 584, 0, 585, 1144, 1145, 1146, 1147, 0, 594,
	0, 586, 587, 588, 1156, 589, 1157, 1074, 590, 591,
	592, 593, 0, 595, 596, 0, 0, 597, 598, 599,
	601, 602, 600, 603, 1118, 604, 0, 0, 605, 606,
	607, 664, 1141, 1178, 0, 609, 608, 610, 667, 0,
	611, 0, 0, 0, 0, 612, 613, 668, 614, 615,
	616, 1096, 1068, 1069, 1070, 1066, 1067, 1079, 0, 0,
	0, 0, 0, 0, 0, 0, 2069, 2070, 270, 272,
	271, 273, 274, 275, 276, 1080, 277, 278, 0, 1078,
	0, 0, 0, 1120, 1084, 0, 0, 0, 279, 280,
	1160, 281, 282, 283, 284, 285, 286, 0, 1133, 0,
	287, 1140, 288, 1139, 0, 1150, 289, 290, 291, 292,
	293, 294, 1086, 1119, 1053, 295, 1180, 1181, 625, 0,
	296, 297, 1126, 0, 1107, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 1161, 320, 321, 4490, 1110, 1108, 1109,
	1116, 1112, 1111, 1115, 323, 324, 325, 326, 327, 1143,
	328, 1137, 1136, 1057, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 1128, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	1063, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 1151, 1152, 359, 1075, 267, 0, 0, 0, 0,
	0, 360, 361, 362, 1135, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 1162, 366, 367, 1148, 1149, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	1158, 0, 1085, 378, 0, 379, 380, 381, 382, 383,
	1121, 1122, 1125, 462, 0, 384, 385, 0, 386, 387,
	388, 389, 390, 0, 0, 0, 268, 391, 392, 393,
	395, 0, 1163, 394, 1130, 1131, 0, 1091, 0, 396,
	397, 0, 1123, 0, 398, 399, 400, 1167, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 1159, 1168, 412, 413, 0, 0,
	414, 0, 0, 0, 415, 416, 419, 1114, 1113, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 1170, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 1171, 458, 448, 1054, 269, 0, 459, 460, 1076,
	1124, 461, 1138, 463, 464, 0, 0, 465, 0, 0,
	0, 467, 468, 469, 0, 0, 470, 471, 647, 1173,
	472, 1174, 1153, 473, 474, 466, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 649, 485, 486,
	487, 650, 488, 489, 490, 1154, 491, 652, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 1134, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 1175, 524, 525, 526, 527, 1064, 528, 0, 529,
	530, 536, 537, 531, 532, 538, 539, 540, 541, 542,
	0, 544, 545, 543, 546, 547, 548, 1117, 549, 550,
	533, 534, 551, 552, 0, 553, 554, 555, 556, 557,
	558, 1132, 0, 559, 0, 560, 561, 562, 564, 535,
	565, 570, 571, 1179, 566, 567, 568, 569, 1155, 573,
	574, 0, 575, 576, 1052, 572, 563, 0, 577, 578,
	579, 580, 581, 582, 583, 353, 584, 0, 585, 1144,
	1145, 1146, 1147, 0, 594, 0, 586, 587, 588, 1156,
	589, 1157, 1074, 590, 591, 592, 593, 0, 4489, 596,
	0, 1058, 597, 598, 599, 601, 602, 600, 603, 1118,
	604, 0, 0, 605, 606, 607, 664, 1141, 1178, 0,
	609, 608, 610, 667, 0, 611, 0, 0, 0, 0,
	612, 613, 668, 614, 615, 616, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1042, 0, 1218, 0,
	0, 1049, 1050, 0, 0, 0, 0, 0, 0, 0,
	1080, 0, 0, 0, 1078, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	1120, 0, 0, 0, 0, 279, 280, 1160, 281, 282,
	283, 284, 285, 286, 618, 619, 0, 287, 620, 288,
	621, 0, 622, 289, 290, 291, 292, 293, 294, 0,
	1119, 0, 295, 623, 624, 625, 0, 296, 297, 1126,
	0, 1107, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	1161, 320, 321, 322, 1110, 1108, 1109, 1116, 1112, 1111,
	1115, 323, 324, 325, 326, 327, 0, 328, 627, 628,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 629, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 1151, 1152,
	359, 0, 267, 0, 0, 0, 0, 0, 360, 361,
	362, 632, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 1162, 366, 367, 633, 634, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 1158, 0, 636,
	378, 0, 379, 380, 381, 382, 383, 1121, 1122, 1125,
	462, 1164, 384, 385, 0, 386, 387, 388, 389, 390,
	0, 0, 0, 268, 391, 392, 393, 395, 0, 1163,
	394, 640, 641, 0, 642, 0, 396, 397, 1165, 1123,
	1166, 398, 399, 400, 1167, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 1204, 408, 410, 409, 0,
	411, 1159, 1168, 412, 413, 1169, 0, 414, 0, 0,
	0, 415, 416, 419, 1114, 1113, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 1170, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 1171, 458,
	448, 0, 269, 1172, 459, 460, 0, 1124, 461, 646,
	463, 464, 0, 0, 465, 0, 0, 1210, 467, 468,
	469, 0, 0, 470, 471, 647, 1173, 472, 1174, 1153,
	473, 474, 466, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 649, 485, 486, 487, 650, 488,
	489, 490, 1154, 491, 652, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 653, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 1175, 524,
	525, 526, 527, 654, 1212, 0, 529, 530, 536, 537,
	531, 532, 538, 539, 540, 541, 542, 229, 544, 545,
	543, 546, 547, 548, 1117, 549, 550, 533, 534, 551,
	552, 1176, 553, 554, 555, 556, 557, 558, 655, 0,
	559, 0, 560, 561, 562, 564, 535, 565, 570, 571,
	656, 566, 567, 568, 569, 1155, 573, 574, 0, 575,
	576, 0, 572, 563, 231, 577, 578, 579, 580, 581,
	582, 583, 353, 584, 0, 585, 658, 659, 660, 661,
	0, 594, 0, 586, 587, 588, 1156, 589, 1157, 0,
	590, 591, 592, 593, 0, 595, 596, 0, 0, 597,
	598, 599, 601, 602, 600, 603, 1118, 604, 0, 0,
	605, 606, 607, 1576, 665, 666, 0, 609, 608, 610,
	667, 1218, 611, 0, 0, 0, 223, 612, 613, 668,
	614, 615, 616, 0, 0, 224, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 1120, 0, 1208, 0, 1912, 279, 280,
	1160, 281, 282, 283, 284, 285, 286, 618, 619, 0,
	287, 620, 288, 621, 0, 622, 289, 290, 291, 292,
	293, 294, 0, 1119, 0, 295, 623, 624, 625, 0,
	296, 297, 1126, 0, 1107, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 1161, 320, 321, 322, 1110, 1108, 1109,
	1116, 1112, 1111, 1115, 323, 324, 325, 326, 327, 0,
	328, 627, 628, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	629, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 1151, 1152, 359, 0, 267, 0, 0, 0, 0,
	0, 360, 361, 362, 632, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 1162, 366, 367, 633, 634, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	1158, 0, 636, 378, 0, 379, 380, 381, 382, 383,
	1121, 1122, 1125, 462, 1164, 384, 385, 0, 386, 387,
	388, 389, 390, 0, 0, 0, 268, 391, 392, 393,
	395, 0, 1163, 394, 640, 641, 0, 642, 0, 396,
	397, 1165, 1123, 1166, 398, 399, 400, 1167, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 1204, 408,
	410, 409, 0, 411, 1159, 1168, 412, 413, 1169, 0,
	414, 0, 0, 0, 415, 416, 419, 1114, 1113, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 1170, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 1171, 458, 448, 0, 269, 1172, 459, 460, 0,
	1124, 461, 646, 463, 464, 0, 0, 465, 0, 0,
	1210, 467, 468, 469, 0, 0, 470, 471, 647, 1173,
	472, 1174, 1153, 473, 474, 466, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 649, 485, 486,
	487, 650, 488, 489, 490, 1154, 491, 652, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 653, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 1175, 524, 525, 526, 527, 654, 1212, 0, 529,
	530, 536, 537, 531, 532, 538, 539, 540, 541, 542,
	229, 544, 545, 543, 546, 547, 548, 1117, 549, 550,
	533, 534, 551, 552, 1176, 553, 554, 555, 556, 557,
	558, 655, 0, 559, 0, 560, 561, 562, 564, 535,
	565, 570, 571, 656, 566, 567, 568, 569, 1155, 573,
	574, 0, 575, 576, 0, 572, 563, 231, 577, 578,
	579, 580, 581, 582, 583, 353, 584, 0, 585, 658,
	659, 660, 661, 0, 594, 0, 586, 587, 588, 1156,
	589, 1157, 0, 590, 591, 592, 593, 0, 595, 596,
	0, 0, 597, 598, 599, 601, 602, 600, 603, 1118,
	604, 0, 0, 605, 606, 607, 1576, 665, 666, 0,
	609, 608, 610, 667, 0, 611, 0, 0, 0, 223,
	612, 613, 668, 614, 615, 616, 0, 0, 224, 0,
	0, 0, 3189, 0, 1218, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1208, 0,
	1912, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 1120, 0, 0, 0,
	0, 279, 280, 1160, 281, 282, 283, 284, 285, 286,
	618, 619, 0, 287, 620, 288, 621, 0, 622, 289,
	290, 291, 292, 293, 294, 0, 1119, 0, 295, 623,
	624, 625, 0, 296, 297, 1126, 0, 1107, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 1161, 320, 321, 322,
	1110, 1108, 1109, 1116, 1112, 1111, 1115, 323, 324, 325,
	326, 327, 0, 328, 627, 628, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 629, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 1151, 1152, 359, 0, 267, 0,
	0, 0, 0, 0, 360, 361, 362, 632, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 1162, 366, 367,
	633, 634, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 1158, 0, 636, 378, 0, 379, 380,
	381, 382, 383, 1121, 1122, 1125, 462, 1164, 384, 385,
	0, 386, 387, 388, 389, 390, 0, 0, 0, 268,
	391, 392, 393, 395, 0, 1163, 394, 640, 641, 0,
	642, 0, 396, 397, 1165, 1123, 1166, 398, 399, 400,
	1167, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 1204, 408, 410, 409, 0, 411, 1159, 1168, 412,
	413, 1169, 0, 414, 0, 0, 0, 415, 416, 419,
	1114, 1113, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 1170, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 1171, 458, 448, 0, 269, 1172,
	459, 460, 0, 1124, 461, 646, 463, 464, 0, 0,
	465, 0, 0, 1210, 467, 468, 469, 0, 0, 470,
	471, 647, 1173, 472, 1174, 1153, 473, 474, 466, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	649, 485, 486, 487, 650, 488, 489, 490, 1154, 491,
	652, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 653, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 1175, 524, 525, 526, 527, 654,
	1212, 0, 529, 530, 536, 537, 531, 532, 538, 539,
	540, 541, 542, 0, 544, 545, 543, 546, 547, 548,
	1117, 549, 550, 533, 534, 551, 552, 1176, 553, 554,
	555, 556, 557, 558, 655, 0, 559, 0, 560, 561,
	562, 564, 535, 565, 570, 571, 656, 566, 567, 568,
	569, 1155, 573, 574, 0, 575, 576, 0, 572, 563,
	0, 577, 578, 579, 580, 581, 582, 583, 353, 584,
	0, 585, 658, 659, 660, 661, 0, 594, 0, 586,
	587, 588, 1156, 589, 1157, 0, 590, 591, 592, 593,
	0, 595, 596, 0, 0, 597, 598, 599, 601, 602,
	600, 603, 1118, 604, 0, 0, 605, 606, 607, 664,
	665, 666, 0, 609, 608, 610, 667, 0, 611, 0,
	1200, 0, 1218, 612, 613, 668, 614, 615, 616, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 1208, 0, 1206, 1120, 0, 0, 0, 0, 279,
	280, 1160, 281, 282, 283, 284, 285, 286, 618, 619,
	0, 287, 620, 288, 621, 0, 622, 289, 290, 291,
	292, 293, 294, 0, 1119, 0, 295, 623, 624, 625,
	0, 296, 297, 1126, 0, 1107, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 1161, 320, 321, 322, 1110, 1108,
	1109, 1116, 1112, 1111, 1115, 323, 324, 325, 326, 327,
	0, 328, 627, 628, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 629, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 1151, 1152, 359, 0, 267, 0, 0, 0,
	0, 0, 360, 361, 362, 632, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 1162, 366, 367, 633, 634,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 1158, 0, 636, 378, 0, 379, 380, 381, 382,
	383, 1121, 1122, 1125, 462, 1164, 384, 385, 0, 386,
	387, 388, 389, 390, 0, 0, 0, 268, 391, 392,
	393, 395, 0, 1163, 394, 640, 641, 0, 642, 0,
	396, 397, 1165, 1123, 1166, 398, 399, 400, 1167, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 1204,
	408, 410, 409, 0, 411, 1159, 1168, 412, 413, 1169,
	0, 414, 0, 0, 0, 415, 416, 419, 1114, 1113,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 1170,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 1171, 458, 448, 0, 269, 1172, 459, 460,
	0, 1124, 461, 646, 463, 464, 0, 0, 465, 0,
	0, 1210, 467, 468, 469, 0, 0, 470, 471, 647,
	1173, 472, 1174, 1153, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 649, 485,
	486, 487, 650, 488, 489, 490, 1154, 491, 652, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 653, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 1175, 524, 525, 526, 527, 654, 1212, 0,
	529, 530, 536, 537, 531, 532, 538, 539, 540, 541,
	542, 0, 544, 545, 543, 546, 547, 548, 1117, 549,
	550, 533, 534, 551, 552, 1176, 553, 554, 555, 556,
	557, 558, 655, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 656, 566, 567, 568, 569, 1155,
	573, 574, 0, 575, 576, 0, 572, 563, 0, 577,
	578, 579, 580, 581, 582, 583, 353, 584, 0, 585,
	658, 659, 660, 661, 0, 594, 0, 586, 587, 588,
	1156, 589, 1157, 0, 590, 591, 592, 593, 0, 595,
	596, 0, 0, 597, 598, 599, 601, 602, 600, 603,
	1118, 604, 0, 0, 605, 606, 607, 664, 665, 666,
	0, 609, 608, 610, 667, 1218, 611, 0, 0, 0,
	0, 612, 613, 668, 614, 615, 616, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 1120, 0, 1208,
	0, 1206, 279, 280, 1160, 281, 282, 283, 284, 285,
	286, 618, 619, 0, 287, 620, 288, 621, 0, 622,
	289, 290, 291, 292, 293, 294, 0, 1119, 0, 295,
	623, 624, 625, 0, 296, 297, 1126, 0, 1107, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 1161, 320, 321,
	322, 1110, 1108, 1109, 1116, 1112, 1111, 1115, 323, 324,
	325, 326, 327, 0, 328, 627, 628, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 629, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 1151, 1152, 359, 0, 267,
	0, 0, 0, 0, 0, 360, 361, 362, 632, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 1162, 366,
	367, 633, 634, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 1158, 0, 636, 378, 0, 379,
	380, 381, 382, 383, 1121, 1122, 1125, 462, 1164, 384,
	385, 0, 386, 387, 388, 389, 390, 0, 0, 0,
	268, 391, 392, 393, 395, 0, 1163, 394, 640, 641,
	0, 642, 0, 396, 397, 1165, 1123, 1166, 398, 399,
	400, 1167, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 1204, 408, 410, 409, 0, 411, 1159, 1168,
	412, 413, 1169, 0, 414, 0, 0, 0, 415, 416,
	419, 1114, 1113, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 1170, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 1171, 458, 448, 0, 269,
	1172, 459, 460, 0, 1124, 461, 646, 463, 464, 0,
	0, 465, 0, 0, 1210, 467, 468, 469, 0, 0,
	470, 471, 647, 1173, 472, 1174, 1153, 473, 474, 466,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 649, 485, 486, 487, 650, 488, 489, 490, 1154,
	491, 652, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 653, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 1175, 524, 525, 526, 527,
	654, 1212, 0, 529, 530, 536, 537, 531, 532, 538,
	539, 540, 541, 542, 0, 544, 545, 543, 546, 547,
	548, 1117, 549, 550, 533, 534, 551, 552, 1176, 553,
	554, 555, 556, 557, 558, 655, 0, 559, 0, 560,
	561, 562, 564, 535, 565, 570, 571, 656, 566, 567,
	568, 569, 1155, 573, 574, 0, 575, 576, 0, 572,
	563, 0, 577, 578, 579, 580, 581, 582, 583, 353,
	584, 0, 585, 658, 659, 660, 661, 0, 594, 0,
	586, 587, 588, 1156, 589, 1157, 0, 590, 591, 592,
	593, 0, 595, 596, 0, 0, 597, 598, 599, 601,
	602, 600, 603, 1118, 604, 0, 0, 605, 606, 607,
	664, 665, 666, 0, 609, 608, 610, 667, 1218, 611,
	0, 0, 0, 0, 612, 613, 668, 614, 615, 616,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	1120, 0, 1208, 0, 1206, 279, 280, 1160, 281, 282,
	283, 284, 285, 286, 618, 619, 0, 287, 620, 288,
	621, 0, 622, 289, 290, 291, 292, 293, 294, 0,
	1119, 0, 295, 623, 624, 625, 0, 296, 297, 1126,
	0, 1107, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	1161, 320, 321, 322, 1110, 1108, 1109, 1116, 1112, 1111,
	1115, 323, 324, 325, 326, 327, 0, 328, 627, 628,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 629, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 1151, 1152,
	359, 0, 267, 0, 0, 0, 0, 0, 360, 361,
	362, 632, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 1162, 366, 367, 633, 634, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 1158, 0, 636,
	378, 0, 379, 380, 381, 382, 383, 1121, 1122, 1125,
	462, 1164, 384, 385, 0, 386, 387, 388, 389, 390,
	0, 0, 0, 268, 391, 392, 393, 395, 0, 1163,
	394, 640, 641, 0, 642, 0, 396, 397, 1165, 1123,
	1166, 398, 399, 400, 1167, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 1159, 1168, 412, 413, 1169, 0, 414, 0, 0,
	0, 415, 416, 419, 1114, 1113, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 1170, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 1171, 458,
	448, 0, 269, 1172, 459, 460, 0, 1124, 461, 646,
	463, 464, 0, 0, 465, 0, 0, 0, 467, 468,
	469, 0, 0, 470, 471, 647, 1173, 472, 1174, 1153,
	473, 474, 466, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 649, 485, 486, 487, 650, 488,
	489, 490, 1154, 491, 652, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 653, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 1175, 524,
	525, 526, 527, 654, 528, 0, 529, 530, 536, 537,
	531, 532, 538, 539, 540, 541, 542, 0, 544, 545,
	543, 546, 547, 548, 1117, 549, 550, 533, 534, 551,
	552, 1176, 553, 554, 555, 556, 557, 558, 655, 0,
	559, 0, 560, 561, 562, 564, 535, 565, 570, 571,
	656, 566, 567, 568, 569, 1155, 573, 574, 0, 575,
	576, 0, 572, 563, 0, 577, 578, 579, 580, 581,
	582, 583, 353, 584, 0, 585, 658, 659, 660, 661,
	0, 594, 0, 586, 587, 588, 1156, 589, 1157, 0,
	590, 591, 592, 593, 0, 595, 596, 0, 0, 597,
	598, 599, 601, 602, 600, 603, 1118, 604, 0, 0,
	605, 606, 607, 664, 665, 666, 0, 609, 608, 610,
	667, 1218, 611, 0, 0, 0, 0, 612, 613, 668,
	614, 615, 616, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 1120, 0, 0, 0, 3980, 279, 280,
	1160, 281, 282, 283, 284, 285, 286, 618, 619, 0,
	287, 620, 288, 621, 0, 622, 289, 290, 291, 292,
	293, 294, 0, 1119, 0, 295, 623, 624, 625, 0,
	296, 297, 1126, 0, 1107, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 1161, 320, 321, 322, 1110, 1108, 1109,
	1116, 1112, 1111, 1115, 323, 324, 325, 326, 327, 0,
	328, 627, 628, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	629, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 1151, 1152, 359, 0, 267, 0, 0, 0, 0,
	0, 360, 361, 362, 632, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 1162, 366, 367, 633, 634, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	1158, 0, 636, 378, 0, 379, 380, 381, 382, 383,
	1121, 1122, 1125, 462, 1164, 384, 385, 0, 386, 387,
	388, 389, 390, 0, 0, 0, 268, 391, 392, 393,
	395, 0, 1163, 394, 640, 641, 0, 642, 0, 396,
	397, 1165, 1123, 1166, 398, 399, 400, 1167, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 1159, 1168, 412, 413, 1169, 0,
	414, 0, 0, 0, 415, 416, 419, 1114, 1113, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 1170, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 1171, 458, 448, 0, 269, 1172, 459, 460, 0,
	1124, 461, 646, 463, 464, 0, 0, 465, 0, 0,
	0, 467, 468, 469, 0, 0, 470, 471, 647, 1173,
	472, 1174, 1153, 473, 474, 466, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 649, 485, 486,
	487, 650, 488, 489, 490, 1154, 491, 652, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 653, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 1175, 524, 525, 526, 527, 654, 1212, 0, 529,
	530, 536, 537, 531, 532, 538, 539, 540, 541, 542,
	0, 544, 545, 543, 546, 547, 548, 1117, 549, 550,
	533, 534, 551, 552, 1176, 553, 554, 555, 556, 557,
	558, 655, 0, 559, 0, 560, 561, 562, 564, 535,
	565, 570, 571, 656, 566, 567, 568, 569, 1155, 573,
	574, 0, 575, 576, 0, 572, 563, 0, 577, 578,
	579, 580, 581, 582, 583, 353, 584, 0, 585, 658,
	659, 660, 661, 0, 594, 0, 586, 587, 588, 1156,
	589, 1157, 0, 590, 591, 592, 593, 0, 595, 596,
	0, 0, 597, 598, 599, 601, 602, 600, 603, 1118,
	604, 0, 0, 605, 606, 607, 664, 665, 666, 0,
	609, 608, 610, 667, 1042, 611, 1299, 0, 0, 0,
	612, 613, 668, 614, 615, 616, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 617, 0,
	1811, 0, 0, 279, 280, 1160, 281, 282, 283, 284,
	285, 286, 618, 619, 0, 287, 620, 288, 621, 0,
	622, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 623, 624, 625, 0, 296, 297, 626, 0, 1304,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 1161, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 326, 327, 0, 328, 627, 628, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 629, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 630, 631, 359, 0,
	267, 0, 0, 0, 0, 0, 360, 361, 362, 632,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 1162,
	366, 367, 633, 634, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 635, 0, 636, 378, 0,
	379, 380, 381, 382, 383, 637, 638, 639, 462, 1164,
	384, 385, 0, 386, 387, 388, 389, 390, 0, 0,
	0, 0, 391, 392, 393, 395, 0, 1163, 394, 640,
	641, 0, 642, 0, 396, 397, 1165, 643, 1166, 398,
	399, 400, 1167, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 644,
	1168, 412, 413, 1169, 0, 414, 0, 0, 0, 415,
	416, 419, 0, 0, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 1170, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 1171, 458, 448, 0,
	0, 1172, 459, 460, 0, 645, 461, 646, 463, 464,
	0, 0, 465, 0, 0, 0, 467, 468, 469, 0,
	0, 470, 471, 647, 1173, 472, 1174, 648, 473, 474,
	466, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 649, 485, 486, 487, 650, 488, 489, 490,
	651, 491, 652, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 653, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 1175, 524, 525, 526,
	527, 654, 528, 0, 529, 530, 536, 537, 531, 532,
	538, 539, 540, 541, 542, 229, 544, 545, 543, 546,
	547, 548, 0, 549, 550, 533, 534, 551, 552, 1176,
	553, 554, 555, 556, 557, 558, 655, 0, 559, 0,
	560, 561, 562, 564, 535, 565, 570, 571, 656, 566,
	567, 568, 569, 657, 573, 574, 0, 575, 576, 0,
	572, 563, 231, 577, 578, 579, 580, 581, 582, 583,
	353, 584, 0, 585, 658, 659, 660, 661, 0, 594,
	0, 586, 587, 588, 662, 589, 663, 0, 590, 591,
	592, 593, 0, 595, 596, 0, 0, 597, 598, 599,
	601, 602, 600, 603, 0, 604, 0, 0, 605, 606,
	607, 1576, 665, 666, 0, 609, 608, 610, 667, 1573,
	611, 1299, 0, 0, 223, 612, 613, 668, 614, 615,
	616, 0, 0, 224, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 617, 0, 185, 0, 0, 279, 280,
	1160, 281, 282, 283, 284, 285, 286, 618, 619, 0,
	287, 620, 288, 621, 0, 622, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 295, 623, 624, 625, 0,
	296, 297, 626, 0, 1304, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 1161, 320, 321, 322, 0, 0, 0,
	0, 0, 0, 0, 323, 324, 325, 326, 327, 0,
	328, 627, 628, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	629, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 630, 631, 359, 0, 267, 0, 0, 0, 0,
	0, 360, 361, 362, 632, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 1162, 366, 367, 633, 634, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	635, 0, 636, 378, 0, 379, 380, 381, 382, 383,
	637, 638, 639, 462, 1164, 384, 385, 0, 386, 387,
	388, 389, 390, 0, 0, 0, 0, 391, 392, 393,
	395, 0, 1163, 394, 640, 641, 0, 642, 0, 396,
	397, 1165, 643, 1166, 398, 399, 400, 1167, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 644, 1168, 412, 413, 1169, 0,
	414, 0, 0, 0, 415, 416, 419, 0, 0, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 1170, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 1171, 458, 448, 0, 0, 1172, 459, 460, 0,
	645, 461, 646, 463, 464, 0, 0, 465, 0, 0,
	0, 467, 468, 469, 0, 0, 470, 471, 647, 1173,
	472, 1174, 648, 473, 474, 466, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 649, 485, 486,
	487, 650, 488, 489, 490, 651, 491, 652, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 653, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 1175, 524, 525, 526, 527, 654, 528, 0, 529,
	530, 536, 537, 531, 532, 538, 539, 540, 541, 542,
	229, 544, 545, 543, 546, 547, 548, 0, 549, 550,
	533, 534, 551, 552, 1176, 553, 554, 555, 556, 557,
	558, 655, 0, 559, 0, 560, 561, 562, 564, 535,
	565, 570, 571, 656, 566, 567, 568, 569, 657, 573,
	574, 0, 575, 576, 0, 572, 563, 231, 577, 578,
	579, 580, 581, 582, 583, 353, 584, 0, 585, 658,
	659, 660, 661, 0, 594, 0, 586, 587, 588, 662,
	589, 663, 0, 590, 591, 592, 593, 0, 595, 596,
	0, 0, 597, 598, 599, 601, 602, 600, 603, 0,
	604, 0, 0, 605, 606, 607, 1576, 665, 666, 0,
	609, 608, 610, 667, 0, 611, 0, 0, 0, 223,
	612, 613, 668, 614, 615, 616, 1299, 1298, 224, 0,
	0, 0, 1296, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	185, 277, 278, 0, 0, 0, 0, 0, 617, 0,
	0, 0, 0, 279, 280, 1160, 281, 282, 283, 284,
	285, 286, 618, 619, 0, 287, 620, 288, 621, 0,
	622, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 623, 624, 625, 0, 296, 297, 626, 0, 1304,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 1161, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 326, 327, 0, 328, 627, 628, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 629, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 630, 631, 359, 0,
	267, 0, 0, 0, 0, 0, 360, 361, 362, 632,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 1162,
	366, 367, 633, 634, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 635, 0, 636, 378, 0,
	379, 380, 381, 382, 383, 637, 638, 639, 462, 1164,
	384, 385, 0, 386, 387, 388, 389, 390, 0, 0,
	0, 0, 391, 392, 393, 395, 0, 1163, 394, 640,
	641, 0, 642, 0, 396, 397, 1165, 643, 1166, 398,
	399, 400, 1167, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 644,
	1168, 412, 413, 1169, 0, 414, 0, 0, 0, 415,
	416, 419, 0, 0, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 1170, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 1171, 458, 448, 0,
	0, 1172, 459, 460, 0, 645, 461, 646, 463, 464,
	0, 0, 465, 0, 0, 0, 467, 468, 469, 0,
	0, 470, 471, 647, 1173, 472, 1174, 648, 473, 474,
	466, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 649, 485, 486, 487, 650, 488, 489, 490,
	651, 491, 652, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 653, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 1175, 524, 525, 526,
	527, 654, 528, 0, 529, 530, 536, 537, 531, 532,
	538, 539, 540, 541, 542, 0, 544, 545, 543, 546,
	547, 548, 0, 549, 550, 533, 534, 551, 552, 1176,
	553, 554, 555, 556, 557, 558, 655, 0, 559, 0,
	560, 561, 562, 564, 535, 565, 570, 571, 656, 566,
	567, 568, 569, 657, 573, 574, 0, 575, 576, 0,
	572, 563, 0, 577, 578, 579, 580, 581, 582, 583,
	353, 584, 0, 585, 658, 659, 660, 661, 0, 594,
	0, 586, 587, 588, 662, 589, 663, 0, 590, 591,
	592, 593, 0, 595, 596, 0, 0, 597, 598, 599,
	601, 602, 600, 603, 0, 604, 0, 0, 605, 606,
	607, 664, 665, 666, 0, 609, 608, 610, 667, 0,
	611, 0, 0, 0, 0, 612, 613, 668, 614, 615,
	616, 1299, 1298, 0, 0, 0, 0, 1296, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 1598, 277, 278, 0, 0,
	0, 0, 0, 617, 0, 0, 0, 0, 279, 280,
	1160, 281, 282, 283, 284, 285, 286, 618, 619, 0,
	287, 620, 288, 621, 0, 622, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 295, 623, 624, 625, 0,
	296, 297, 626, 0, 1304, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 1161, 320, 321, 322, 0, 0, 0,
	0, 0, 0, 0, 323, 324, 325, 326, 327, 0,
	328, 627, 628, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	629, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 630, 631, 359, 0, 267, 0, 0, 0, 0,
	0, 360, 361, 362, 632, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 1162, 366, 367, 633, 634, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	635, 0, 636, 378, 0, 379, 380, 381, 382, 383,
	637, 638, 639, 462, 1164, 384, 385, 0, 386, 387,
	388, 389, 390, 0, 0, 0, 0, 391, 392, 393,
	395, 0, 1163, 394, 640, 641, 0, 642, 0, 396,
	397, 1165, 643, 1166, 398, 399, 400, 1167, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 644, 1168, 412, 413, 1169, 0,
	414, 0, 0, 0, 415, 416, 419, 0, 0, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 1170, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 1171, 458, 448, 0, 0, 1172, 459, 460, 0,
	645, 461, 646, 463, 464, 0, 0, 465, 0, 0,
	0, 467, 468, 469, 0, 0, 470, 471, 647, 1173,
	472, 1174, 648, 473, 474, 466, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 649, 485, 486,
	487, 650, 488, 489, 490, 651, 491, 652, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 653, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 1175, 524, 525, 526, 527, 654, 528, 0, 529,
	530, 536, 537, 531, 532, 538, 539, 540, 541, 542,
	0, 544, 545, 543, 546, 547, 548, 0, 549, 550,
	533, 534, 551, 552, 1176, 553, 554, 555, 556, 557,
	558, 655, 0, 559, 0, 560, 561, 562, 564, 535,
	565, 570, 571, 656, 566, 567, 568, 569, 657, 573,
	574, 0, 575, 576, 0, 572, 563, 0, 577, 578,
	579, 580, 581, 582, 583, 353, 584, 0, 585, 658,
	659, 660, 661, 0, 594, 0, 586, 587, 588, 662,
	589, 663, 0, 590, 591, 592, 593, 0, 595, 596,
	0, 0, 597, 598, 599, 601, 602, 600, 603, 0,
	604, 0, 0, 605, 606, 607, 664, 665, 666, 0,
	609, 608, 610, 667, 0, 611, 0, 0, 0, 0,
	612, 613, 668, 614, 615, 616, 1299, 1298, 0, 0,
	0, 0, 1296, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	3472, 277, 278, 0, 0, 0, 0, 0, 617, 0,
	0, 0, 0, 279, 280, 1160, 281, 282, 283, 284,
	285, 286, 618, 619, 0, 287, 620, 288, 621, 0,
	622, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 623, 624, 625, 0, 296, 297, 626, 0, 1304,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 1161, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 326, 327, 0, 328, 627, 628, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 629, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 630, 631, 359, 0,
	267, 0, 0, 0, 0, 0, 360, 361, 362, 632,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 1162,
	366, 367, 633, 634, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 635, 0, 636, 378, 0,
	379, 380, 381, 382, 383, 637, 638, 639, 462, 1164,
	384, 385, 0, 386, 387, 388, 389, 390, 0, 0,
	0, 0, 391, 392, 393, 395, 0, 1163, 394, 640,
	641, 0, 642, 0, 396, 397, 1165, 643, 1166, 398,
	399, 400, 1167, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 644,
	1168, 412, 413, 1169, 0, 414, 0, 0, 0, 415,
	416, 419, 0, 0, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 1170, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 1171, 458, 448, 0,
	0, 1172, 459, 460, 0, 645, 461, 646, 463, 464,
	0, 0, 465, 0, 0, 0, 467, 468, 469, 0,
	0, 470, 471, 647, 1173, 472, 1174, 648, 473, 474,
	466, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 649, 485, 486, 487, 650, 488, 489, 490,
	651, 491, 652, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 653, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 2252, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 1175, 524, 525, 526,
	527, 654, 528, 0, 529, 530, 536, 537, 531, 532,
	538, 539, 540, 541, 542, 0, 544, 545, 543, 546,
	547, 548, 0, 549, 550, 533, 534, 551, 552, 1176,
	553, 554, 555, 556, 557, 558, 655, 0, 559, 0,
	560, 561, 562, 564, 535, 565, 570, 571, 656, 566,
	567, 568, 569, 657, 573, 574, 0, 575, 576, 0,
	572, 563, 0, 577, 578, 579, 580, 581, 582, 583,
	353, 584, 0, 585, 658, 659, 660, 661, 0, 594,
	0, 586, 587, 588, 662, 589, 663, 0, 590, 591,
	592, 593, 0, 595, 596, 0, 0, 597, 598, 599,
	601, 602, 600, 603, 0, 604, 0, 0, 605, 606,
	607, 664, 665, 666, 0, 609, 608, 610, 667, 0,
	611, 0, 0, 0, 0, 612, 613, 668, 614, 615,
	616, 1299, 2166, 0, 0, 0, 0, 2167, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 1598, 277, 278, 0, 0,
	0, 0, 0, 617, 0, 0, 0, 0, 279, 280,
	1160, 281, 282, 283, 284, 285, 286, 618, 619, 0,
	287, 620, 288, 621, 0, 622, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 295, 623, 624, 625, 0,
	296, 297, 626, 0, 1304, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 1161, 320, 321, 322, 0, 0, 0,
	0, 0, 0, 0, 323, 324, 325, 326, 327, 0,
	328, 627, 628, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	629, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 630, 631, 359, 0, 267, 0, 0, 0, 0,
	0, 360, 361, 362, 632, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 1162, 366, 367, 633, 634, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	635, 0, 636, 378, 0, 379, 380, 381, 382, 383,
	637, 638, 639, 462, 1164, 384, 385, 0, 386, 387,
	388, 389, 390, 0, 0, 0, 0, 391, 392, 393,
	395, 0, 1163, 394, 640, 641, 0, 642, 0, 396,
	397, 1165, 643, 1166, 398, 399, 400, 1167, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 2165,
	410, 409, 0, 411, 644, 1168, 412, 413, 1169, 0,
	414, 0, 0, 0, 415, 416, 419, 0, 0, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 1170, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 1171, 458, 448, 0, 0, 1172, 459, 460, 0,
	645, 461, 646, 463, 464, 0, 0, 465, 0, 0,
	0, 467, 468, 469, 0, 0, 470, 471, 647, 1173,
	472, 1174, 648, 473, 474, 466, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 649, 485, 486,
	487, 650, 488, 489, 490, 651, 491, 652, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 653, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 1175, 524, 525, 526, 527, 654, 528, 0, 529,
	530, 536, 537, 531, 532, 538, 539, 540, 541, 542,
	0, 544, 545, 543, 546, 547, 548, 0, 549, 550,
	533, 534, 551, 552, 1176, 553, 554, 555, 556, 557,
	558, 655, 0, 559, 0, 560, 561, 562, 564, 535,
	565, 570, 571, 656, 566, 567, 568, 569, 657, 573,
	574, 0, 575, 576, 0, 572, 563, 0, 577, 578,
	579, 580, 581, 582, 583, 353, 584, 0, 585, 658,
	659, 660, 661, 0, 594, 0, 586, 587, 588, 662,
	589, 663, 0, 590, 591, 592, 593, 0, 595, 596,
	0, 0, 597, 598, 599, 601, 602, 600, 603, 0,
	604, 0, 0, 605, 606, 607, 664, 665, 666, 0,
	609, 608, 610, 667, 0, 611, 0, 0, 0, 0,
	612, 613, 668, 614, 615, 616, 1299, 1298, 0, 0,
	0, 0, 1296, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	1598, 277, 278, 0, 0, 0, 0, 0, 617, 0,
	0, 0, 0, 279, 280, 1160, 281, 282, 283, 284,
	285, 286, 618, 619, 0, 287, 620, 288, 621, 0,
	622, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 623, 624, 625, 0, 296, 297, 626, 0, 1304,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 1161, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 326, 327, 0, 328, 627, 628, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 629, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 630, 631, 359, 0,
	267, 0, 0, 0, 0, 0, 360, 361, 362, 632,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 1162,
	366, 367, 633, 634, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 635, 0, 636, 378, 0,
	379, 380, 381, 382, 383, 637, 638, 639, 462, 1164,
	384, 385, 0, 386, 387, 388, 389, 390, 0, 0,
	0, 0, 391, 392, 393, 395, 0, 1163, 394, 640,
	641, 0, 642, 0, 396, 397, 1165, 643, 1166, 398,
	399, 400, 1167, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 644,
	1168, 412, 413, 1169, 0, 414, 0, 0, 0, 415,
	416, 419, 0, 0, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 1170, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 1171, 458, 448, 0,
	0, 1172, 459, 460, 0, 645, 461, 646, 463, 464,
	0, 0, 465, 0, 0, 0, 467, 468, 469, 0,
	0, 470, 471, 647, 1173, 472, 1174, 648, 473, 474,
	466, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 649, 485, 486, 487, 650, 488, 489, 490,
	651, 491, 652, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 653, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 1175, 524, 525, 526,
	527, 654, 528, 0, 529, 530, 536, 537, 531, 532,
	538, 539, 540, 541, 542, 0, 544, 545, 543, 546,
	547, 548, 0, 549, 550, 533, 534, 551, 552, 1176,
	553, 554, 555, 556, 557, 558, 655, 0, 559, 0,
	560, 561, 562, 564, 535, 565, 570, 571, 656, 566,
	567, 568, 569, 657, 573, 574, 0, 575, 576, 0,
	572, 563, 0, 577, 578, 579, 580, 581, 582, 583,
	353, 584, 0, 585, 658, 659, 660, 661, 0, 594,
	0, 586, 587, 588, 662, 589, 663, 0, 590, 591,
	592, 593, 0, 595, 596, 0, 0, 597, 598, 599,
	601, 602, 600, 603, 0, 604, 0, 0, 605, 606,
	607, 664, 665, 666, 0, 609, 608, 610, 667, 1218,
	611, 0, 0, 0, 0, 612, 613, 668, 614, 615,
	616, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 1120, 0, 0, 0, 1582, 279, 280, 1160, 281,
	282, 283, 284, 285, 286, 618, 619, 0, 287, 620,
	288, 621, 0, 622, 289, 290, 291, 292, 293, 294,
	0, 1119, 0, 295, 623, 624, 625, 0, 296, 297,
	1126, 0, 1107, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 1161, 320, 321, 322, 1110, 1108, 1109, 1116, 1112,
	1111, 1115, 323, 324, 325, 326, 327, 0, 328, 627,
	628, 0, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 339, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 629, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 1151,
	1152, 359, 0, 267, 0, 0, 0, 0, 0, 360,
	361, 362, 632, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 1162, 366, 367, 633, 634, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 1158, 0,
	636, 378, 0, 379, 380, 381, 382, 383, 1121, 1122,
	1125, 462, 1164, 384, 385, 0, 386, 387, 388, 389,
	390, 0, 0, 0, 268, 391, 392, 393, 395, 0,
	1163, 394, 640, 641, 0, 642, 0, 396, 397, 1165,
	1123, 1166, 398, 399, 400, 1167, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 1159, 1168, 412, 413, 1169, 0, 414, 0,
	0, 0, 415, 416, 419, 1114, 1113, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 1170, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 1171,
	458, 448, 0, 269, 1172, 459, 460, 0, 1124, 461,
	646, 463, 464, 0, 0, 465, 0, 0, 0, 467,
	468, 469, 0, 0, 470, 471, 647, 1173, 472, 1174,
	1153, 473, 474, 466, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 649, 485, 486, 487, 650,
	488, 489, 490, 1154, 491, 652, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 653,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 1175,
	524, 525, 526, 527, 654, 528, 0, 529, 530, 536,
	537, 531, 532, 538, 539, 540, 541, 542, 0, 544,
	545, 543, 546, 547, 548, 1117, 549, 550, 533, 534,
	551, 552, 1176, 553, 554, 555, 556, 557, 558, 655,
	0, 559, 0, 560, 561, 562, 564, 535, 565, 570,
	571, 656, 566, 567, 568, 569, 1155, 573, 574, 0,
	575, 576, 0, 572, 563, 0, 577, 578, 579, 580,
	581, 582, 583, 353, 584, 0, 585, 658, 659, 660,
	661, 0, 594, 0, 586, 587, 588, 1156, 589, 1157,
	0, 590, 591, 592, 593, 0, 595, 596, 0, 0,
	597, 598, 599, 601, 602, 600, 603, 1118, 604, 0,
	0, 605, 606, 607, 664, 665, 666, 0, 609, 608,
	610, 667, 1042, 611, 264, 0, 0, 0, 612, 613,
	668, 614, 615, 616, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 617, 0, 0, 0,
	0, 279, 280, 0, 281, 282, 283, 284, 285, 286,
	618, 619, 0, 287, 620, 288, 621, 0, 622, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 623,
	624, 625, 0, 296, 297, 626, 0, 0, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 0, 323, 324, 325,
	326, 327, 0, 328, 627, 628, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 629, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 630, 631, 359, 0, 0, 0,
	0, 0, 0, 0, 360, 361, 362, 632, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 0, 366, 367,
	633, 634, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 635, 0, 636, 378, 0, 379, 380,
	381, 382, 383, 637, 638, 639, 462, 0, 384, 385,
	0, 386, 387, 388, 389, 390, 0, 0, 0, 0,
	391, 392, 393, 395, 0, 0, 394, 640, 641, 0,
	642, 0, 396, 397, 0, 643, 0, 398, 399, 400,
	0, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 644, 0, 412,
	413, 0, 0, 414, 0, 0, 0, 415, 416, 419,
	0, 0, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 0, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 0, 458, 448, 0, 0, 0,
	459, 460, 0, 645, 461, 646, 463, 464, 0, 0,
	465, 0, 0, 0, 467, 468, 469, 0, 0, 470,
	471, 647, 0, 472, 0, 648, 473, 474, 466, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	649, 485, 486, 487, 650, 488, 489, 490, 651, 491,
	652, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 653, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 0, 524, 525, 526, 527, 654,
	528, 0, 529, 530, 536, 537, 531, 532, 538, 539,
	540, 541, 542, 229, 544, 545, 543, 546, 547, 548,
	0, 549, 550, 533, 534, 551, 552, 0, 553, 554,
	555, 556, 557, 558, 655, 0, 559, 0, 560, 561,
	562, 564, 535, 565, 570, 571, 656, 566, 567, 568,
	569, 657, 573, 574, 0, 575, 576, 0, 572, 563,
	231, 577, 578, 579, 580, 581, 582, 583, 353, 584,
	0, 585, 658, 659, 660, 661, 0, 594, 0, 586,
	587, 588, 662, 589, 663, 0, 590, 591, 592, 593,
	0, 595, 596, 0, 0, 597, 598, 599, 601, 602,
	600, 603, 0, 604, 0, 0, 605, 606, 607, 1576,
	665, 666, 0, 609, 608, 610, 667, 264, 611, 0,
	0, 0, 223, 612, 613, 668, 614, 615, 616, 0,
	0, 224, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 617,
	0, 0, 0, 185, 279, 280, 0, 281, 282, 283,
	284, 285, 286, 618, 619, 0, 287, 620, 288, 621,
	0, 622, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 623, 624, 625, 0, 296, 297, 626, 0,
	0, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 0, 328, 627, 628, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 629, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 630, 631, 359,
	0, 267, 0, 0, 0, 0, 0, 360, 361, 362,
	632, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	0, 366, 367, 633, 634, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 635, 0, 636, 378,
	0, 379, 380, 381, 382, 383, 637, 638, 639, 462,
	0, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	0, 0, 268, 391, 392, 393, 395, 0, 0, 394,
	640, 641, 0, 642, 0, 396, 397, 0, 643, 0,
	398, 399, 400, 0, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	644, 0, 412, 413, 0, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 0, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 0, 458, 448,
	0, 269, 0, 459, 460, 0, 645, 461, 646, 463,
	464, 0, 0, 465, 0, 0, 0, 467, 468, 469,
	0, 0, 470, 471, 647, 0, 472, 0, 648, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 649, 485, 486, 487, 650, 488, 489,
	490, 651, 491, 652, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 653, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 0, 524, 525,
	526, 527, 654, 528, 0, 529, 530, 536, 537, 531,
	532, 538, 539, 540, 541, 542, 0, 544, 545, 543,
	546, 547, 548, 0, 549, 550, 533, 534, 551, 552,
	0, 553, 554, 555, 556, 557, 558, 655, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 656,
	566, 567, 568, 569, 657, 573, 574, 0, 575, 576,
	0, 572, 563, 0, 577, 578, 579, 580, 581, 582,
	583, 353, 584, 0, 585, 658, 659, 660, 661, 0,
	594, 0, 586, 587, 588, 662, 589, 663, 0, 590,
	591, 592, 593, 0, 595, 596, 0, 0, 597, 598,
	599, 601, 602, 600, 603, 0, 604, 0, 0, 605,
	606, 607, 664, 665, 666, 0, 609, 608, 610, 667,
	0, 611, 264, 2942, 0, 0, 612, 613, 668, 614,
	615, 616, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 617, 0, 1926, 0, 0, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 618, 619,
	0, 287, 620, 288, 621, 0, 622, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 623, 624, 625,
	0, 296, 297, 626, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 627, 628, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 629, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 630, 631, 359, 0, 0, 0, 0, 0,
	0, 0, 360, 361, 362, 632, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 0, 366, 367, 633, 634,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 635, 0, 636, 378, 0, 379, 380, 381, 382,
	383, 637, 638, 639, 462, 0, 384, 385, 0, 386,
	387, 388, 389, 390, 0, 0, 0, 0, 391, 392,
	393, 395, 0, 0, 394, 640, 641, 0, 642, 0,
	396, 397, 0, 643, 0, 398, 399, 400, 0, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 644, 0, 412, 413, 0,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 0,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 0, 458, 448, 0, 0, 0, 459, 460,
	0, 645, 461, 646, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 647,
	0, 472, 0, 648, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 649, 485,
	486, 487, 650, 488, 489, 490, 651, 491, 652, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 653, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 0, 524, 525, 526, 527, 654, 528, 0,
	529, 530, 536, 537, 531, 532, 538, 539, 540, 541,
	542, 0, 544, 545, 543, 546, 547, 548, 0, 549,
	550, 533, 534, 551, 552, 0, 553, 554, 555, 556,
	557, 558, 655, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 656, 566, 567, 568, 569, 657,
	573, 574, 0, 575, 576, 0, 572, 563, 0, 577,
	578, 579, 580, 581, 582, 583, 353, 584, 0, 585,
	658, 659, 660, 661, 0, 594, 0, 586, 587, 588,
	662, 589, 663, 0, 590, 591, 592, 593, 0, 595,
	596, 0, 0, 597, 598, 599, 601, 602, 600, 603,
	0, 604, 0, 0, 605, 606, 607, 664, 665, 666,
	0, 609, 608, 610, 667, 264, 611, 0, 0, 0,
	0, 612, 613, 668, 614, 615, 616, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 617, 0, 0,
	0, 4646, 279, 280, 0, 281, 282, 283, 284, 285,
	286, 618, 619, 0, 287, 620, 288, 621, 0, 622,
	289, 290, 291, 292, 293, 294, 0, 0, 0, 295,
	623, 624, 625, 0, 296, 297, 626, 0, 0, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 0, 0, 0, 0, 0, 0, 0, 323, 324,
	325, 326, 327, 0, 328, 627, 628, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 629, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 630, 631, 359, 0, 267,
	0, 0, 0, 0, 0, 360, 361, 362, 632, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 0, 366,
	367, 633, 634, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 635, 0, 636, 378, 0, 379,
	380, 381, 382, 383, 637, 638, 639, 462, 0, 384,
	385, 0, 386, 387, 388, 389, 390, 0, 0, 0,
	268, 391, 392, 393, 395, 0, 0, 394, 640, 641,
	0, 642, 0, 396, 397, 0, 643, 0, 398, 399,
	400, 0, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 644, 0,
	412, 413, 0, 0, 414, 0, 0, 0, 415, 416,
	419, 0, 0, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 0, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 0, 458, 448, 0, 269,
	0, 459, 460, 0, 645, 461, 646, 463, 464, 0,
	0, 465, 0, 0, 0, 467, 468, 469, 0, 0,
	470, 471, 647, 0, 472, 0, 648, 473, 474, 466,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 649, 485, 486, 487, 650, 488, 489, 490, 651,
	491, 652, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 653, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 0, 524, 525, 526, 527,
	654, 528, 0, 529, 530, 536, 537, 531, 532, 538,
	539, 540, 541, 542, 0, 544, 545, 543, 546, 547,
	548, 0, 549, 550, 533, 534, 551, 552, 0, 553,
	554, 555, 556, 557, 558, 655, 0, 559, 0, 560,
	561, 562, 564, 535, 565, 570, 571, 656, 566, 567,
	568, 569, 657, 573, 574, 0, 575, 576, 0, 572,
	563, 0, 577, 578, 579, 580, 581, 582, 583, 353,
	584, 0, 585, 658, 659, 660, 661, 0, 594, 0,
	586, 587, 588, 662, 589, 663, 0, 590, 591, 592,
	593, 0, 595, 596, 0, 0, 597, 598, 599, 601,
	602, 600, 603, 0, 604, 0, 0, 605, 606, 607,
	664, 665, 666, 264, 609, 608, 610, 667, 0, 611,
	0, 0, 0, 0, 612, 613, 668, 614, 615, 616,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 617, 0, 0, 0, 0,
	279, 280, 3422, 281, 282, 283, 284, 285, 286, 618,
	619, 0, 287, 620, 288, 621, 0, 622, 289, 290,
	291, 292, 293, 294, 0, 0, 0, 295, 623, 624,
	625, 0, 296, 297, 626, 0, 0, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 0, 323, 324, 325, 326,
	327, 0, 328, 627, 628, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 629, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 630, 631, 359, 0, 267, 0, 0,
	0, 0, 0, 360, 361, 362, 632, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 0, 366, 367, 633,
	634, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 635, 0, 636, 378, 0, 379, 380, 381,
	382, 383, 637, 638, 639, 462, 0, 384, 385, 0,
	386, 387, 388, 389, 390, 0, 0, 0, 268, 391,
	392, 393, 395, 0, 0, 394, 640, 641, 0, 642,
	0, 396, 397, 0, 643, 0, 398, 399, 400, 0,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 644, 0, 412, 413,
	0, 0, 414, 0, 0, 0, 415, 416, 419, 0,
	0, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	0, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 0, 458, 448, 0, 269, 0, 459,
	460, 0, 645, 461, 646, 463, 464, 0, 0, 465,
	0, 0, 0, 467, 468, 469, 0, 0, 470, 471,
	647, 0, 472, 0, 648, 473, 474, 466, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 649,
	485, 486, 487, 650, 488, 489, 490, 651, 491, 652,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 653, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 0, 524, 525, 526, 527, 654, 528,
	0, 529, 530, 536, 537, 531, 532, 538, 539, 540,
	541, 542, 0, 544, 545, 543, 546, 547, 548, 0,
	549, 550, 533, 534, 551, 552, 0, 553, 554, 555,
	556, 557, 558, 655, 0, 559, 0, 560, 561, 562,
	564, 535, 565, 570, 571, 656, 566, 567, 568, 569,
	657, 573, 574, 0, 575, 576, 0, 572, 563, 0,
	577, 578, 579, 580, 581, 582, 583, 353, 584, 0,
	585, 658, 659, 660, 661, 0, 594, 0, 586, 587,
	588, 662, 589, 663, 0, 590, 591, 592, 593, 0,
	595, 596, 0, 0, 597, 598, 599, 601, 602, 600,
	603, 0, 604, 0, 0, 605, 606, 607, 664, 665,
	666, 264, 609, 608, 610, 667, 0, 611, 0, 0,
	0, 0, 612, 613, 668, 614, 615, 616, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 617, 0, 0, 0, 0, 279, 280,
	1570, 281, 282, 283, 284, 285, 286, 618, 619, 0,
	287, 620, 288, 621, 0, 622, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 295, 623, 624, 625, 0,
	296, 297, 626, 0, 0, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 322, 0, 0, 0,
	0, 0, 0, 0, 323, 324, 325, 326, 327, 0,
	328, 627, 628, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	629, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 630, 631, 359, 0, 0, 0, 0, 0, 0,
	0, 360, 361, 362, 632, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 0, 366, 367, 633, 634, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	635, 0, 636, 378, 0, 379, 380, 381, 382, 383,
	637, 638, 639, 462, 0, 384, 385, 0, 386, 387,
	388, 389, 390, 0, 0, 0, 0, 391, 392, 393,
	395, 0, 0, 394, 640, 641, 0, 642, 0, 396,
	397, 0, 643, 0, 398, 399, 400, 0, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 644, 0, 412, 413, 0, 0,
	414, 0, 0, 0, 415, 416, 419, 0, 0, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 0, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 0, 458, 448, 0, 0, 0, 459, 460, 0,
	645, 461, 646, 463, 464, 0, 0, 465, 0, 0,
	0, 467, 468, 469, 0, 0, 470, 471, 647, 0,
	472, 0, 648, 473, 474, 466, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 649, 485, 486,
	487, 650, 488, 489, 490, 651, 491, 652, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 653, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 0, 524, 525, 526, 527, 654, 528, 0, 529,
	530, 536, 537, 531, 532, 538, 539, 540, 541, 542,
	0, 544, 545, 543, 546, 547, 548, 0, 549, 550,
	533, 534, 551, 552, 0, 553, 554, 555, 556, 557,
	558, 655, 0, 559, 0, 560, 561, 562, 564, 535,
	565, 570, 571, 656, 566, 567, 568, 569, 657, 573,
	574, 0, 575, 576, 0, 572, 563, 0, 577, 578,
	579, 580, 581, 582, 583, 353, 584, 0, 585, 658,
	659, 660, 661, 0, 594, 0, 586, 587, 588, 662,
	589, 663, 0, 590, 591, 592, 593, 0, 595, 596,
	0, 0, 597, 598, 599, 601, 602, 600, 603, 0,
	604, 0, 0, 605, 606, 607, 664, 665, 666, 0,
	609, 608, 610, 667, 264, 611, 0, 0, 0, 0,
	612, 613, 668, 614, 615, 616, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 617, 0, 0, 0,
	2930, 279, 280, 0, 281, 282, 283, 284, 285, 286,
	618, 619, 0, 287, 620, 288, 621, 0, 622, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 623,
	624, 625, 0, 296, 297, 626, 0, 0, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 0, 323, 324, 325,
	326, 327, 0, 328, 627, 628, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 629, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 630, 631, 359, 0, 0, 0,
	0, 0, 0, 0, 360, 361, 362, 632, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 0, 366, 367,
	633, 634, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 635, 0, 636, 378, 0, 379, 380,
	381, 382, 383, 637, 638, 639, 462, 0, 384, 385,
	0, 386, 387, 388, 389, 390, 0, 0, 0, 0,
	391, 392, 393, 395, 0, 0, 394, 640, 641, 0,
	642, 0, 396, 397, 0, 643, 0, 398, 399, 400,
	0, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 644, 0, 412,
	413, 0, 0, 414, 0, 0, 0, 415, 416, 419,
	0, 0, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 0, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 0, 458, 448, 0, 0, 0,
	459, 460, 0, 645, 461, 646, 463, 464, 0, 0,
	465, 0, 0, 0, 467, 468, 469, 0, 0, 470,
	471, 647, 0, 472, 0, 648, 473, 474, 466, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	649, 485, 486, 487, 650, 488, 489, 490, 651, 491,
	652, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 653, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 0, 524, 525, 526, 527, 654,
	528, 0, 529, 530, 536, 537, 531, 532, 538, 539,
	540, 541, 542, 0, 544, 545, 543, 546, 547, 548,
	0, 549, 550, 533, 534, 551, 552, 0, 553, 554,
	555, 556, 557, 558, 655, 0, 559, 0, 560, 561,
	562, 564, 535, 565, 570, 571, 656, 566, 567, 568,
	569, 657, 573, 574, 0, 575, 576, 0, 572, 563,
	0, 577, 578, 579, 580, 581, 582, 583, 353, 584,
	0, 585, 658, 659, 660, 661, 0, 594, 0, 586,
	587, 588, 662, 589, 663, 0, 590, 591, 592, 593,
	0, 595, 596, 0, 0, 597, 598, 599, 601, 602,
	600, 603, 0, 604, 0, 0, 605, 606, 607, 664,
	665, 666, 0, 609, 608, 610, 667, 264, 611, 0,
	0, 0, 0, 612, 613, 668, 614, 615, 616, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 617,
	0, 0, 0, 3578, 279, 280, 0, 281, 282, 283,
	284, 285, 286, 618, 619, 0, 287, 620, 288, 621,
	0, 622, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 623, 624, 625, 0, 296, 297, 626, 0,
	0, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 0, 328, 627, 628, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 629, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 630, 631, 359,
	0, 0, 0, 0, 0, 0, 0, 360, 361, 362,
	632, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	0, 366, 367, 633, 634, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 635, 0, 636, 378,
	0, 379, 380, 381, 382, 383, 637, 638, 639, 462,
	0, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	0, 0, 0, 391, 392, 393, 395, 0, 0, 394,
	640, 641, 0, 642, 0, 396, 397, 0, 643, 0,
	398, 399, 400, 0, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	644, 0, 412, 413, 0, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 0, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 0, 458, 448,
	0, 0, 0, 459, 460, 0, 645, 461, 646, 463,
	464, 0, 0, 465, 0, 0, 0, 467, 468, 469,
	0, 0, 470, 471, 647, 0, 472, 0, 648, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 649, 485, 486, 487, 650, 488, 489,
	490, 651, 491, 652, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 653, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 0, 524, 525,
	526, 527, 654, 528, 0, 529, 530, 536, 537, 531,
	532, 538, 539, 540, 541, 542, 0, 544, 545, 543,
	546, 547, 548, 0, 549, 550, 533, 534, 551, 552,
	0, 553, 554, 555, 556, 557, 558, 655, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 656,
	566, 567, 568, 569, 657, 573, 574, 0, 575, 576,
	0, 572, 563, 0, 577, 578, 579, 580, 581, 582,
	583, 353, 584, 0, 585, 658, 659, 660, 661, 0,
	594, 0, 586, 587, 588, 662, 589, 663, 0, 590,
	591, 592, 593, 0, 595, 596, 0, 0, 597, 598,
	599, 601, 602, 600, 603, 0, 604, 0, 0, 605,
	606, 607, 664, 665, 666, 0, 609, 608, 610, 667,
	884, 611, 791, 0, 0, 0, 612, 613, 668, 614,
	615, 616, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 617, 0, 2243, 0, 0, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 618, 619,
	0, 287, 620, 288, 621, 0, 622, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 623, 624, 625,
	0, 296, 297, 626, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 798, 327,
	0, 328, 627, 628, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 629, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 630, 631, 359, 0, 267, 0, 0, 0,
	0, 0, 360, 361, 362, 632, 0, 0, 0, 363,
	0, 364, 365, 0, 882, 0, 366, 367, 633, 634,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 635, 0, 636, 378, 0, 379, 380, 381, 382,
	383, 637, 638, 639, 462, 0, 384, 385, 0, 386,
	387, 388, 389, 390, 0, 0, 0, 268, 391, 392,
	393, 395, 0, 0, 394, 640, 641, 0, 642, 0,
	396, 397, 0, 643, 0, 398, 399, 400, 0, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 644, 0, 412, 413, 0,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 0,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 0, 458, 448, 0, 269, 0, 459, 460,
	0, 645, 461, 646, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 647,
	0, 472, 0, 648, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 649, 485,
	486, 487, 650, 488, 489, 490, 651, 491, 652, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 653, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 0, 524, 525, 526, 527, 654, 528, 0,
	529, 530, 536, 537, 531, 532, 538, 539, 540, 541,
	542, 0, 544, 545, 543, 546, 547, 548, 0, 549,
	550, 533, 534, 551, 552, 0, 553, 554, 555, 556,
	557, 558, 655, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 656, 566, 567, 568, 569, 657,
	573, 574, 0, 575, 576, 0, 572, 563, 796, 577,
	578, 579, 580, 581, 797, 583, 353, 584, 0, 585,
	658, 659, 660, 661, 0, 594, 0, 586, 587, 588,
	662, 589, 663, 0, 590, 591, 592, 593, 0, 595,
	596, 0, 0, 597, 598, 599, 601, 602, 600, 603,
	0, 604, 0, 0, 605, 606, 607, 664, 665, 666,
	0, 609, 608, 610, 667, 789, 611, 791, 0, 0,
	0, 612, 613, 668, 614, 615, 616, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 801, 0, 0, 0, 0, 617,
	0, 0, 0, 0, 279, 280, 0, 281, 282, 283,
	284, 285, 286, 618, 619, 0, 287, 620, 288, 621,
	0, 622, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 623, 624, 625, 0, 296, 297, 626, 0,
	0, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 798, 327, 0, 328, 627, 628, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 629, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 630, 631, 359,
	0, 267, 0, 0, 0, 0, 0, 360, 361, 362,
	632, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	0, 366, 367, 633, 634, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 635, 0, 636, 378,
	0, 379, 380, 381, 382, 383, 637, 638, 639, 462,
	0, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	0, 0, 268, 391, 392, 393, 395, 0, 0, 394,
	640, 641, 0, 642, 0, 396, 397, 0, 643, 0,
	398, 399, 400, 0, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	644, 0, 412, 413, 0, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 0, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 0, 458, 448,
	0, 269, 0, 459, 460, 0, 645, 461, 646, 463,
	464, 0, 0, 465, 0, 0, 0, 467, 468, 469,
	0, 0, 470, 471, 647, 0, 472, 0, 648, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 649, 485, 486, 487, 650, 488, 489,
	490, 651, 491, 652, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 653, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 0, 524, 525,
	526, 527, 654, 528, 0, 529, 530, 536, 537, 531,
	532, 538, 539, 540, 541, 542, 0, 544, 545, 543,
	546, 547, 548, 0, 549, 550, 533, 534, 551, 552,
	0, 553, 554, 555, 556, 557, 558, 655, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 656,
	566, 567, 568, 569, 657, 573, 574, 0, 575, 576,
	0, 572, 563, 796, 577, 578, 579, 580, 581, 797,
	583, 353, 584, 0, 585, 658, 659, 660, 661, 0,
	594, 0, 586, 587, 588, 662, 589, 663, 0, 590,
	591, 592, 593, 0, 595, 596, 0, 0, 597, 598,
	599, 601, 602, 600, 603, 0, 604, 0, 0, 605,
	606, 607, 664, 665, 666, 1965, 609, 608, 610, 667,
	0, 611, 0, 0, 0, 0, 612, 613, 668, 614,
	615, 616, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 0, 0, 801,
	0, 0, 279, 280, 1160, 281, 282, 283, 284, 285,
	286, 0, 1971, 0, 287, 1961, 288, 1977, 0, 1984,
	289, 290, 291, 292, 293, 294, 0, 0, 0, 295,
	1987, 1988, 0, 0, 296, 297, 0, 0, 1304, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 1161, 320, 321,
	322, 0, 0, 0, 0, 0, 0, 0, 323, 324,
	325, 326, 327, 1143, 328, 1975, 1974, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 1128, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 0, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 0, 0, 359, 0, 0,
	0, 0, 0, 0, 0, 360, 361, 362, 1973, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 1162, 366,
	367, 1982, 1983, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 0, 0, 0, 378, 0, 379,
	380, 381, 382, 383, 0, 0, 0, 462, 1164, 384,
	385, 0, 386, 387, 388, 389, 390, 0, 0, 0,
	0, 391, 392, 393, 395, 0, 1163, 394, 1968, 1969,
	0, 1964, 0, 396, 397, 1165, 0, 1166, 398, 399,
	400, 1167, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 0, 1168,
	412, 413, 1169, 0, 414, 0, 0, 0, 415, 416,
	419, 0, 0, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 1170, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 1171, 458, 448, 0, 0,
	1172, 459, 460, 0, 0, 461, 1976, 463, 464, 0,
	0, 465, 0, 0, 0, 467, 468, 469, 0, 0,
	470, 471, 0, 1173, 472, 1174, 0, 473, 474, 466,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 1958, 485, 486, 487, 1959, 488, 489, 490, 0,
	491, 0, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 1972, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 1175, 524, 525, 526, 527,
	0, 528, 0, 529, 530, 536, 537, 531, 532, 538,
	539, 540, 541, 542, 0, 544, 545, 543, 546, 547,
	548, 0, 549, 550, 533, 534, 551, 552, 1176, 553,
	554, 555, 556, 557, 558, 1970, 0, 559, 0, 560,
	561, 562, 564, 535, 565, 570, 571, 1986, 566, 567,
	568, 569, 0, 573, 574, 0, 575, 576, 0, 572,
	563, 0, 577, 578, 579, 580, 581, 582, 583, 353,
	584, 0, 585, 1978, 1979, 1980, 1981, 0, 594, 0,
	586, 587, 588, 0, 589, 0, 0, 590, 591, 592,
	593, 0, 595, 596, 0, 0, 597, 598, 599, 601,
	602, 600, 603, 0, 604, 0, 0, 605, 606, 607,
	0, 1962, 1985, 0, 609, 608, 610, 0, 0, 611,
	0, 0, 791, 0, 612, 613, 0, 614, 615, 616,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 617, 0, 0, 0, 1952, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 618, 619,
	0, 287, 620, 288, 621, 0, 622, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 623, 624, 625,
	0, 296, 297, 626, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 798, 327,
	0, 328, 627, 628, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 629, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 630, 631, 359, 0, 267, 0, 0, 0,
	0, 0, 360, 361, 362, 632, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 0, 366, 367, 633, 634,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 635, 0, 636, 378, 0, 379, 380, 381, 382,
	383, 637, 638, 639, 462, 0, 384, 385, 0, 386,
	387, 388, 389, 390, 0, 0, 0, 268, 391, 392,
	393, 395, 0, 0, 394, 640, 641, 0, 642, 0,
	396, 397, 0, 643, 0, 398, 399, 400, 0, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 644, 0, 412, 413, 0,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 0,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 0, 458, 448, 0, 269, 0, 459, 460,
	0, 645, 461, 646, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 647,
	0, 472, 0, 648, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 649, 485,
	486, 487, 650, 488, 489, 490, 651, 491, 652, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 653, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 0, 524, 525, 526, 527, 654, 528, 0,
	529, 530, 536, 537, 531, 532, 538, 539, 540, 541,
	542, 0, 544, 545, 543, 546, 547, 548, 0, 549,
	550, 533, 534, 551, 552, 0, 553, 554, 555, 556,
	557, 558, 655, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 656, 566, 567, 568, 569, 657,
	573, 574, 0, 575, 576, 0, 572, 563, 796, 577,
	578, 579, 580, 581, 797, 583, 353, 584, 0, 585,
	658, 659, 660, 661, 0, 594, 0, 586, 587, 588,
	662, 589, 663, 0, 590, 591, 592, 593, 0, 595,
	596, 0, 0, 597, 598, 599, 601, 602, 600, 603,
	0, 604, 0, 0, 605, 606, 607, 664, 665, 666,
	791, 609, 608, 610, 667, 0, 611, 0, 0, 0,
	0, 612, 613, 668, 614, 615, 616, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 617, 0, 801, 0, 0, 279, 280, 0,
	281, 282, 283, 284, 285, 286, 618, 619, 0, 287,
	620, 288, 621, 0, 622, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 623, 624, 625, 0, 296,
	297, 626, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 798, 327, 0, 328,
	627, 628, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 629,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	630, 631, 359, 0, 267, 0, 0, 0, 0, 0,
	360, 361, 362, 632, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 0, 366, 367, 633, 634, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 635,
	0, 636, 378, 0, 379, 380, 381, 382, 383, 637,
	638, 639, 462, 0, 384, 385, 0, 386, 387, 388,
	389, 390, 0, 0, 0, 268, 391, 392, 393, 395,
	0, 0, 394, 640, 641, 0, 642, 0, 396, 397,
	0, 643, 0, 398, 399, 400, 0, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 644, 0, 412, 413, 0, 0, 414,
	0, 0, 0, 415, 416, 419, 0, 0, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 0, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	0, 458, 448, 0, 269, 0, 459, 460, 0, 645,
	461, 646, 463, 464, 0, 0, 465, 0, 0, 0,
	467, 468, 469, 0, 0, 470, 471, 647, 0, 472,
	0, 648, 473, 474, 466, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 649, 485, 486, 487,
	650, 488, 489, 490, 651, 491, 652, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	653, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	0, 2286, 525, 526, 527, 654, 528, 0, 529, 530,
	536, 537, 531, 532, 2287, 539, 540, 541, 542, 0,
	544, 545, 543, 546, 547, 548, 0, 549, 550, 533,
	534, 551, 552, 0, 553, 554, 555, 556, 557, 558,
	655, 0, 559, 0, 560, 561, 562, 564, 535, 565,
	570, 571, 656, 566, 567, 568, 569, 657, 573, 574,
	0, 575, 576, 0, 572, 563, 796, 577, 578, 579,
	580, 581, 797, 583, 353, 584, 0, 585, 658, 659,
	660, 661, 0, 594, 0, 586, 587, 588, 662, 589,
	663, 0, 590, 591, 2288, 593, 0, 595, 596, 0,
	0, 597, 598, 599, 601, 602, 600, 603, 0, 604,
	0, 0, 605, 606, 607, 664, 665, 666, 0, 609,
	608, 610, 667, 2035, 611, 1299, 2002, 0, 0, 612,
	613, 668, 614, 615, 616, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 801, 0, 0, 0, 0, 617, 0, 0,
	0, 0, 279, 280, 1160, 281, 282, 283, 284, 285,
	286, 618, 619, 0, 287, 620, 288, 621, 0, 622,
	289, 290, 291, 292, 293, 294, 0, 0, 0, 295,
	623, 624, 625, 0, 296, 297, 626, 0, 1304, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 1161, 320, 321,
	322, 0, 0, 0, 0, 0, 0, 1999, 323, 324,
	325, 326, 327, 0, 328, 627, 628, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 629, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 630, 631, 359, 0, 267,
	0, 0, 0, 0, 0, 360, 361, 362, 632, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 1162, 366,
	367, 633, 634, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 635, 0, 636, 378, 0, 379,
	380, 381, 382, 383, 637, 638, 639, 462, 1164, 384,
	385, 0, 386, 387, 388, 389, 390, 0, 0, 0,
	0, 391, 392, 393, 395, 0, 1163, 394, 640, 641,
	0, 642, 0, 396, 397, 1165, 643, 1166, 398, 399,
	400, 1167, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 644, 1168,
	412, 413, 1169, 0, 414, 0, 0, 0, 415, 416,
	419, 0, 0, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 1170, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 1171, 458, 448, 0, 0,
	1172, 459, 460, 0, 645, 461, 646, 463, 464, 0,
	0, 465, 0, 0, 0, 467, 468, 469, 0, 0,
	470, 471, 647, 1173, 472, 1174, 648, 473, 474, 466,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 649, 485, 486, 487, 650, 488, 489, 490, 651,
	491, 652, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 653, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 1175, 524, 525, 526, 527,
	654, 528, 0, 529, 530, 536, 537, 531, 532, 538,
	539, 540, 541, 542, 0, 544, 545, 543, 546, 547,
	548, 2000, 549, 550, 533, 534, 551, 552, 1176, 553,
	554, 555, 556, 557, 558, 655, 0, 559, 0, 560,
	561, 562, 564, 535, 565, 570, 571, 656, 566, 567,
	568, 569, 657, 573, 574, 0, 575, 576, 0, 572,
	563, 0, 577, 578, 579, 580, 581, 582, 583, 353,
	584, 0, 585, 658, 659, 660, 661, 0, 594, 0,
	586, 587, 588, 662, 589, 663, 0, 590, 591, 592,
	593, 0, 595, 596, 0, 0, 597, 598, 599, 601,
	602, 600, 603, 0, 604, 0, 0, 605, 606, 607,
	664, 665, 666, 0, 609, 608, 610, 667, 1996, 611,
	1299, 2002, 0, 0, 612, 613, 668, 614, 615, 616,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 617, 0, 0, 0, 0, 279, 280, 1160,
	281, 282, 283, 284, 285, 286, 618, 619, 0, 287,
	620, 288, 621, 0, 622, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 623, 624, 625, 0, 296,
	297, 626, 0, 1304, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 1161, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 1999, 323, 324, 325, 326, 327, 0, 328,
	627, 628, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 629,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	630, 631, 359, 0, 267, 0, 0, 0, 0, 0,
	360, 361, 362, 632, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 1162, 366, 367, 633, 634, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 635,
	0, 636, 378, 0, 379, 380, 381, 382, 383, 637,
	638, 639, 462, 1164, 384, 385, 0, 386, 387, 388,
	389, 390, 0, 0, 0, 0, 391, 392, 393, 395,
	0, 1163, 394, 640, 641, 0, 642, 0, 396, 397,
	1165, 643, 1166, 398, 399, 400, 1167, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 644, 1168, 412, 413, 1169, 0, 414,
	0, 0, 0, 415, 416, 419, 0, 0, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 1170, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	1171, 458, 448, 0, 0, 1172, 459, 460, 0, 645,
	461, 646, 463, 464, 0, 0, 465, 0, 0, 0,
	467, 468, 469, 0, 0, 470, 471, 647, 1173, 472,
	1174, 648, 473, 474, 466, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 649, 485, 486, 487,
	650, 488, 489, 490, 651, 491, 652, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	653, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	1175, 524, 525, 526, 527, 654, 528, 0, 529, 530,
	536, 537, 531, 532, 538, 539, 540, 541, 542, 0,
	544, 545, 543, 546, 547, 548, 2000, 549, 550, 533,
	534, 551, 552, 1176, 553, 554, 555, 556, 557, 558,
	655, 0, 559, 0, 560, 561, 562, 564, 535, 565,
	570, 571, 656, 566, 567, 568, 569, 657, 573, 574,
	0, 575, 576, 0, 572, 563, 0, 577, 578, 579,
	580, 581, 582, 583, 353, 584, 0, 585, 658, 659,
	660, 661, 0, 594, 0, 586, 587, 588, 662, 589,
	663, 0, 590, 591, 592, 593, 0, 595, 596, 0,
	0, 597, 598, 599, 601, 602, 600, 603, 0, 604,
	0, 0, 605, 606, 607, 664, 665, 666, 791, 609,
	608, 610, 667, 0, 611, 0, 0, 0, 0, 612,
	613, 668, 614, 615, 616, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	617, 0, 0, 0, 0, 279, 280, 0, 281, 282,
	283, 284, 285, 286, 618, 619, 0, 287, 620, 288,
	621, 0, 622, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 623, 624, 625, 0, 296, 297, 626,
	0, 0, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 798, 327, 0, 328, 627, 628,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 629, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 630, 631,
	359, 0, 267, 0, 0, 0, 0, 0, 360, 361,
	362, 632, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 0, 366, 367, 633, 634, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 635, 0, 636,
	378, 0, 379, 380, 381, 382, 383, 637, 638, 639,
	462, 0, 384, 385, 0, 386, 387, 388, 389, 390,
	0, 0, 0, 268, 391, 392, 393, 395, 0, 0,
	394, 640, 641, 0, 642, 0, 396, 397, 0, 643,
	0, 398, 399, 400, 0, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 644, 0, 412, 413, 0, 0, 414, 0, 0,
	0, 415, 416, 419, 0, 0, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 0, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 0, 458,
	448, 0, 269, 0, 459, 460, 0, 645, 461, 646,
	463, 464, 0, 0, 465, 0, 0, 0, 467, 468,
	469, 0, 0, 470, 471, 647, 0, 472, 0, 648,
	473, 474, 466, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 649, 485, 486, 487, 650, 488,
	489, 490, 651, 491, 652, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 653, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 0, 524,
	525, 526, 527, 654, 528, 0, 529, 530, 536, 537,
	531, 532, 1991, 539, 540, 541, 542, 0, 1992, 545,
	543, 546, 547, 548, 0, 549, 550, 533, 534, 551,
	552, 0, 553, 554, 555, 556, 557, 558, 655, 0,
	559, 0, 560, 561, 562, 564, 535, 565, 570, 571,
	656, 566, 567, 568, 569, 657, 573, 574, 0, 575,
	576, 0, 572, 563, 796, 577, 578, 579, 580, 581,
	797, 583, 353, 584, 0, 585, 658, 659, 660, 661,
	0, 594, 0, 586, 587, 588, 662, 589, 663, 0,
	590, 591, 1990, 593, 0, 595, 596, 0, 0, 597,
	598, 599, 601, 602, 600, 603, 0, 604, 0, 0,
	605, 606, 607, 664, 665, 666, 791, 609, 608, 610,
	667, 0, 611, 0, 0, 0, 0, 612, 613, 668,
	614, 615, 616, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 617, 0,
	801, 0, 0, 279, 280, 0, 281, 282, 283, 284,
	285, 286, 618, 619, 0, 287, 620, 288, 621, 0,
	622, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 623, 624, 625, 0, 296, 297, 626, 0, 0,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 798, 327, 0, 328, 627, 628, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 629, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 630, 631, 359, 0,
	267, 0, 0, 0, 0, 0, 360, 361, 362, 632,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 0,
	366, 367, 633, 634, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 635, 0, 636, 378, 0,
	379, 380, 381, 382, 383, 637, 638, 639, 462, 0,
	384, 385, 0, 386, 387, 388, 389, 390, 0, 0,
	0, 268, 391, 392, 393, 395, 0, 0, 394, 640,
	641, 0, 642, 0, 396, 397, 0, 643, 0, 398,
	399, 400, 0, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 644,
	0, 412, 413, 0, 0, 414, 0, 0, 0, 415,
	416, 419, 0, 0, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 0, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 0, 458, 448, 0,
	269, 0, 459, 460, 0, 645, 461, 646, 463, 464,
	0, 0, 465, 0, 0, 0, 467, 468, 469, 0,
	0, 470, 471, 647, 0, 472, 0, 648, 473, 474,
	466, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 649, 485, 486, 487, 650, 488, 489, 490,
	651, 491, 652, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 653, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 0, 524, 525, 526,
	527, 654, 528, 0, 529, 530, 536, 537, 531, 532,
	1943, 539, 540, 541, 542, 0, 1944, 545, 543, 546,
	547, 548, 0, 549, 550, 533, 534, 551, 552, 0,
	553, 554, 555, 556, 557, 558, 655, 0, 559, 0,
	560, 561, 562, 564, 535, 565, 570, 571, 656, 566,
	567, 568, 569, 657, 573, 574, 0, 575, 576, 0,
	572, 563, 796, 577, 578, 579, 580, 581, 797, 583,
	353, 584, 0, 585, 658, 659, 660, 661, 0, 594,
	0, 586, 587, 588, 662, 589, 663, 0, 590, 591,
	1942, 593, 0, 595, 596, 0, 0, 597, 598, 599,
	601, 602, 600, 603, 0, 604, 0, 0, 605, 606,
	607, 664, 665, 666, 0, 609, 608, 610, 667, 0,
	611, 1299, 2002, 0, 0, 612, 613, 668, 614, 615,
	616, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 801, 0,
	0, 0, 0, 617, 0, 0, 0, 0, 279, 280,
	1160, 281, 282, 283, 284, 285, 286, 618, 619, 0,
	287, 620, 288, 621, 0, 622, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 295, 623, 624, 625, 0,
	296, 297, 626, 0, 1304, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 1161, 320, 321, 322, 0, 0, 0,
	0, 0, 0, 1999, 323, 324, 325, 326, 327, 0,
	328, 627, 628, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	629, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 630, 631, 359, 0, 267, 0, 0, 0, 0,
	0, 360, 361, 362, 632, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 1162, 366, 367, 633, 634, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	635, 0, 636, 378, 0, 379, 380, 381, 382, 383,
	637, 638, 639, 462, 1164, 384, 385, 0, 386, 387,
	388, 389, 390, 0, 0, 0, 0, 391, 392, 393,
	395, 0, 1163, 394, 640, 641, 0, 642, 0, 396,
	397, 1165, 643, 1166, 398, 399, 400, 1167, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 644, 1168, 412, 413, 1169, 0,
	414, 0, 0, 0, 415, 416, 419, 0, 0, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 1170, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 1171, 458, 448, 0, 0, 1172, 459, 460, 0,
	645, 461, 646, 463, 464, 0, 0, 465, 0, 0,
	0, 467, 468, 469, 0, 0, 470, 471, 647, 1173,
	472, 1174, 648, 473, 474, 466, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 649, 485, 486,
	487, 650, 488, 489, 490, 651, 491, 652, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 653, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 1175, 524, 525, 526, 527, 654, 528, 0, 529,
	530, 536, 537, 531, 532, 538, 539, 540, 541, 542,
	0, 544, 545, 543, 546, 547, 548, 2000, 549, 550,
	533, 534, 551, 552, 1176, 553, 554, 555, 556, 557,
	558, 655, 0, 559, 0, 560, 561, 562, 564, 535,
	565, 570, 571, 656, 566, 567, 568, 569, 657, 573,
	574, 0, 575, 576, 0, 572, 563, 0, 577, 578,
	579, 580, 581, 582, 583, 353, 584, 0, 585, 658,
	659, 660, 661, 0, 594, 0, 586, 587, 588, 662,
	589, 663, 0, 590, 591, 592, 593, 0, 595, 596,
	0, 0, 597, 598, 599, 601, 602, 600, 603, 0,
	604, 0, 0, 605, 606, 607, 664, 665, 666, 0,
	609, 608, 610, 667, 0, 611, 0, 0, 0, 0,
	612, 613, 668, 614, 615, 616, 1299, 1298, 0, 0,
	0, 0, 1296, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 617, 0,
	0, 0, 0, 279, 280, 1160, 281, 282, 283, 284,
	285, 286, 618, 619, 0, 287, 620, 288, 621, 0,
	622, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 623, 624, 625, 0, 296, 297, 626, 0, 1304,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 1161, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 326, 327, 0, 328, 627, 628, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 629, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 630, 631, 359, 0,
	267, 0, 0, 0, 0, 0, 360, 361, 362, 632,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 1162,
	366, 367, 633, 634, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 635, 0, 636, 378, 0,
	379, 380, 381, 382, 383, 637, 638, 639, 462, 1164,
	384, 385, 0, 386, 387, 388, 389, 390, 0, 0,
	0, 0, 391, 392, 393, 395, 0, 1163, 394, 640,
	641, 0, 642, 0, 396, 397, 1165, 643, 1166, 398,
	399, 400, 1167, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 644,
	1168, 412, 413, 1169, 0, 414, 0, 0, 0, 415,
	416, 419, 0, 0, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 1170, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 1171, 458, 448, 0,
	0, 1172, 459, 460, 3766, 645, 461, 646, 463, 464,
	0, 0, 465, 0, 0, 0, 467, 468, 469, 0,
	0, 470, 471, 647, 1173, 472, 1174, 648, 473, 474,
	466, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 649, 485, 486, 487, 650, 488, 489, 490,
	651, 491, 652, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 653, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 1175, 524, 525, 526,
	527, 654, 528, 0, 529, 530, 536, 537, 531, 532,
	538, 539, 540, 541, 542, 0, 544, 545, 543, 546,
	547, 548, 0, 549, 550, 533, 534, 551, 552, 1176,
	553, 554, 555, 556, 557, 558, 655, 0, 559, 0,
	560, 561, 562, 564, 535, 565, 570, 571, 656, 566,
	567, 568, 569, 657, 573, 574, 0, 575, 576, 0,
	572, 563, 0, 577, 578, 579, 580, 581, 582, 583,
	353, 584, 0, 585, 658, 659, 660, 661, 0, 594,
	0, 586, 587, 588, 662, 589, 663, 0, 590, 591,
	592, 593, 0, 595, 596, 0, 0, 597, 598, 599,
	601, 602, 600, 603, 0, 604, 0, 0, 605, 606,
	607, 664, 665, 666, 0, 609, 608, 610, 667, 0,
	611, 0, 0, 0, 0, 612, 613, 668, 614, 615,
	616, 1299, 1298, 0, 0, 0, 0, 1296, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 617, 0, 0, 0, 0, 279, 280,
	1160, 281, 282, 283, 284, 285, 286, 618, 619, 0,
	287, 620, 288, 621, 0, 622, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 295, 623, 624, 625, 0,
	296, 297, 626, 0, 1304, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 1161, 320, 321, 322, 0, 0, 0,
	0, 0, 0, 0, 323, 324, 325, 326, 327, 0,
	328, 627, 628, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	629, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 630, 631, 359, 0, 267, 0, 0, 0, 0,
	0, 360, 361, 362, 632, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 1162, 366, 367, 633, 634, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	635, 0, 636, 378, 0, 379, 380, 381, 382, 383,
	637, 638, 639, 462, 1164, 384, 385, 0, 386, 387,
	388, 389, 390, 0, 0, 0, 0, 391, 392, 393,
	395, 0, 1163, 394, 640, 641, 0, 642, 0, 396,
	397, 1165, 643, 1166, 398, 399, 400, 1167, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 644, 1168, 412, 413, 1169, 0,
	414, 0, 0, 0, 415, 416, 419, 0, 0, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 1170, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 1171, 458, 448, 0, 0, 1172, 459, 460, 3393,
	645, 461, 646, 463, 464, 0, 0, 465, 0, 0,
	0, 467, 468, 469, 0, 0, 470, 471, 647, 1173,
	472, 1174, 648, 473, 474, 466, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 649, 485, 486,
	487, 650, 488, 489, 490, 651, 491, 652, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 653, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 1175, 524, 525, 526, 527, 654, 528, 0, 529,
	530, 536, 537, 531, 532, 538, 539, 540, 541, 542,
	0, 544, 545, 543, 546, 547, 548, 0, 549, 550,
	533, 534, 551, 552, 1176, 553, 554, 555, 556, 557,
	558, 655, 0, 559, 0, 560, 561, 562, 564, 535,
	565, 570, 571, 656, 566, 567, 568, 569, 657, 573,
	574, 0, 575, 576, 0, 572, 563, 0, 577, 578,
	579, 580, 581, 582, 583, 353, 584, 0, 585, 658,
	659, 660, 661, 0, 594, 0, 586, 587, 588, 662,
	589, 663, 0, 590, 591, 592, 593, 0, 595, 596,
	0, 0, 597, 598, 599, 601, 602, 600, 603, 0,
	604, 0, 0, 605, 606, 607, 664, 665, 666, 264,
	609, 608, 610, 667, 0, 611, 0, 0, 0, 0,
	612, 613, 668, 614, 615, 616, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 617, 0, 0, 0, 0, 279, 280, 0, 281,
	282, 283, 284, 285, 286, 618, 619, 0, 287, 620,
	288, 621, 0, 622, 289, 290, 291, 292, 293, 294,
	0, 0, 0, 295, 623, 624, 625, 0, 296, 297,
	626, 0, 0, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 322, 0, 0, 0, 0, 0,
	0, 0, 323, 324, 325, 326, 327, 0, 328, 627,
	628, 0, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 339, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 629, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 630,
	631, 359, 0, 267, 0, 0, 0, 0, 0, 360,
	361, 362, 632, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 0, 366, 367, 633, 634, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 635, 0,
	636, 378, 0, 379, 380, 381, 382, 383, 637, 638,
	639, 462, 0, 384, 385, 0, 386, 387, 388, 389,
	390, 0, 0, 0, 268, 391, 392, 393, 395, 0,
	0, 394, 640, 641, 0, 642, 0, 396, 397, 0,
	643, 0, 398, 399, 400, 0, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 644, 0, 412, 413, 0, 0, 414, 0,
	0, 0, 415, 416, 419, 0, 0, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 0, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 0,
	458, 448, 0, 269, 0, 459, 460, 0, 645, 461,
	646, 463, 464, 0, 0, 465, 0, 0, 0, 467,
	468, 469, 0, 0, 470, 471, 647, 0, 472, 0,
	648, 473, 474, 466, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 649, 485, 486, 487, 650,
	488, 489, 490, 651, 491, 652, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 653,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 0,
	524, 525, 526, 527, 654, 528, 0, 529, 530, 536,
	537, 531, 532, 538, 539, 540, 541, 542, 0, 544,
	545, 543, 546, 547, 548, 0, 549, 550, 533, 534,
	551, 552, 0, 553, 554, 555, 556, 557, 558, 655,
	0, 559, 0, 560, 561, 562, 564, 535, 565, 570,
	571, 656, 566, 567, 568, 569, 657, 573, 574, 0,
	575, 576, 0, 572, 563, 0, 577, 578, 579, 580,
	581, 582, 583, 353, 584, 0, 585, 658, 659, 660,
	661, 0, 594, 0, 586, 587, 588, 662, 589, 663,
	0, 590, 591, 592, 593, 0, 595, 596, 0, 0,
	597, 598, 599, 601, 602, 600, 603, 0, 604, 0,
	0, 605, 606, 607, 664, 665, 666, 0, 609, 608,
	610, 667, 0, 611, 0, 0, 0, 0, 612, 613,
	668, 614, 615, 616, 1626, 0, 1299, 1298, 0, 0,
	0, 0, 1296, 0, 0, 0, 0, 0, 0, 0,
	0, 801, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 617, 0,
	0, 0, 0, 279, 280, 1160, 281, 282, 283, 284,
	285, 286, 618, 619, 0, 287, 620, 288, 621, 0,
	622, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 623, 624, 625, 0, 296, 297, 626, 0, 1304,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 1161, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 326, 327, 0, 328, 627, 628, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 629, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 630, 631, 359, 0,
	267, 0, 0, 0, 0, 0, 1625, 361, 362, 632,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 1162,
	366, 367, 633, 634, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 635, 0, 636, 378, 0,
	379, 380, 381, 382, 383, 637, 638, 639, 462, 1164,
	384, 385, 0, 386, 387, 388, 389, 390, 0, 0,
	0, 0, 391, 392, 393, 395, 0, 1163, 394, 640,
	641, 0, 642, 0, 396, 397, 1165, 643, 1166, 398,
	399, 400, 1167, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 644,
	1168, 412, 413, 1169, 0, 414, 0, 0, 0, 415,
	416, 419, 0, 0, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 1170, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 1171, 458, 448, 0,
	0, 1172, 459, 460, 0, 645, 461, 646, 463, 464,
	0, 0, 465, 0, 0, 0, 467, 468, 469, 0,
	0, 470, 471, 647, 1173, 472, 1174, 648, 473, 474,
	466, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 649, 485, 486, 487, 650, 488, 489, 490,
	651, 491, 652, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 1624, 502, 653, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 1175, 524, 525, 526,
	527, 654, 528, 0, 529, 530, 536, 537, 531, 532,
	538, 1623, 540, 541, 542, 0, 544, 545, 543, 546,
	547, 548, 0, 549, 550, 533, 534, 551, 552, 1176,
	553, 554, 555, 556, 557, 558, 655, 0, 559, 0,
	560, 561, 562, 564, 535, 565, 570, 571, 656, 566,
	567, 568, 569, 657, 573, 574, 0, 575, 576, 0,
	572, 563, 0, 577, 578, 579, 580, 581, 582, 583,
	353, 584, 0, 585, 658, 659, 660, 661, 0, 594,
	0, 586, 587, 588, 662, 589, 663, 0, 590, 591,
	592, 593, 0, 595, 596, 0, 0, 597, 598, 599,
	601, 602, 600, 603, 0, 604, 0, 0, 605, 606,
	607, 664, 665, 666, 0, 609, 608, 610, 667, 0,
	611, 0, 0, 0, 0, 612, 613, 668, 614, 615,
	616, 1544, 0, 1299, 1298, 0, 0, 0, 0, 1296,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 617, 0, 0, 0, 0,
	279, 280, 1160, 281, 282, 283, 284, 285, 286, 618,
	619, 0, 287, 620, 288, 621, 0, 622, 289, 290,
	291, 292, 293, 294, 0, 0, 0, 295, 623, 624,
	625, 0, 296, 297, 626, 0, 1304, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 1161, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 0, 323, 324, 325, 326,
	327, 0, 328, 627, 628, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 629, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 630, 631, 359, 0, 267, 0, 0,
	0, 0, 0, 360, 361, 362, 632, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 1162, 366, 367, 633,
	634, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 635, 0, 636, 378, 0, 379, 380, 381,
	382, 383, 1543, 638, 639, 462, 1164, 384, 385, 0,
	386, 387, 388, 389, 390, 0, 0, 0, 0, 391,
	392, 393, 395, 0, 1163, 394, 640, 641, 0, 642,
	0, 396, 397, 1165, 643, 1166, 398, 399, 400, 1167,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 644, 1168, 412, 413,
	1169, 0, 414, 0, 0, 0, 415, 416, 419, 0,
	0, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	1170, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 1171, 458, 448, 0, 0, 1172, 459,
	460, 0, 645, 461, 646, 463, 464, 0, 0, 465,
	0, 0, 0, 467, 468, 469, 0, 0, 470, 471,
	647, 1173, 472, 1174, 648, 473, 474, 466, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 649,
	485, 486, 487, 650, 488, 489, 490, 651, 491, 652,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 653, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 1175, 524, 525, 526, 527, 654, 528,
	0, 529, 530, 536, 537, 531, 532, 538, 539, 540,
	541, 542, 0, 544, 545, 543, 546, 547, 548, 0,
	549, 550, 533, 534, 551, 552, 1176, 553, 554, 555,
	556, 557, 558, 655, 0, 559, 0, 560, 561, 562,
	564, 535, 565, 570, 571, 656, 566, 567, 568, 569,
	657, 573, 574, 0, 575, 576, 0, 572, 563, 0,
	577, 578, 579, 580, 581, 582, 583, 353, 584, 0,
	585, 658, 659, 660, 661, 0, 594, 0, 586, 587,
	588, 662, 589, 663, 0, 590, 591, 592, 593, 0,
	595, 596, 0, 0, 597, 598, 599, 601, 602, 600,
	603, 0, 604, 0, 0, 605, 606, 607, 664, 665,
	666, 0, 609, 608, 610, 667, 0, 611, 0, 0,
	0, 0, 612, 613, 668, 614, 615, 616, 1504, 0,
	1299, 1298, 0, 0, 0, 0, 1296, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 617, 0, 0, 0, 0, 279, 280, 1160,
	281, 282, 283, 284, 285, 286, 618, 619, 0, 287,
	620, 288, 621, 0, 622, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 623, 624, 625, 0, 296,
	297, 626, 0, 1304, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 1161, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 326, 327, 0, 328,
	627, 628, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 629,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	630, 631, 359, 0, 267, 0, 0, 0, 0, 0,
	360, 361, 362, 632, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 1162, 366, 367, 633, 634, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 635,
	0, 636, 378, 0, 379, 380, 381, 382, 383, 637,
	638, 639, 462, 1164, 384, 385, 0, 386, 387, 388,
	389, 390, 0, 0, 0, 0, 391, 392, 393, 395,
	0, 1163, 394, 640, 641, 0, 642, 0, 396, 397,
	1165, 643, 1166, 398, 399, 400, 1167, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 644, 1168, 412, 413, 1169, 0, 414,
	0, 0, 0, 415, 416, 419, 0, 0, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 1170, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	1171, 458, 448, 0, 0, 1172, 459, 460, 0, 645,
	461, 646, 463, 464, 0, 0, 465, 0, 0, 0,
	467, 468, 469, 0, 0, 470, 471, 647, 1173, 472,
	1174, 648, 473, 474, 466, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 649, 485, 486, 487,
	650, 488, 489, 490, 651, 491, 652, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	653, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	1175, 524, 525, 526, 527, 654, 528, 0, 529, 530,
	536, 537, 531, 532, 538, 539, 540, 541, 542, 0,
	544, 545, 543, 546, 547, 548, 0, 549, 550, 533,
	534, 551, 552, 1176, 553, 554, 555, 556, 557, 558,
	655, 0, 559, 0, 560, 561, 562, 564, 535, 565,
	570, 571, 656, 566, 567, 568, 569, 657, 573, 574,
	0, 575, 576, 0, 572, 563, 0, 577, 578, 579,
	580, 581, 582, 583, 353, 584, 0, 585, 658, 659,
	660, 661, 0, 594, 0, 586, 587, 588, 662, 589,
	663, 0, 590, 591, 592, 593, 0, 595, 596, 0,
	0, 597, 598, 599, 601, 602, 600, 603, 0, 604,
	0, 0, 605, 606, 607, 664, 665, 666, 0, 609,
	608, 610, 667, 0, 611, 0, 0, 0, 0, 612,
	613, 668, 614, 615, 616, 1472, 0, 1299, 1298, 0,
	0, 0, 0, 1296, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 617,
	0, 0, 0, 0, 279, 280, 1160, 281, 282, 283,
	284, 285, 286, 618, 619, 0, 287, 620, 288, 621,
	0, 622, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 623, 624, 625, 0, 296, 297, 626, 0,
	1304, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 1161,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 0, 328, 627, 628, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 629, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 630, 631, 359,
	0, 267, 0, 0, 0, 0, 0, 360, 361, 362,
	632, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	1162, 366, 367, 633, 634, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 635, 0, 636, 378,
	0, 379, 380, 381, 382, 383, 1471, 638, 639, 462,
	1164, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	0, 0, 0, 391, 392, 393, 395, 0, 1163, 394,
	640, 641, 0, 642, 0, 396, 397, 1165, 643, 1166,
	398, 399, 400, 1167, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	644, 1168, 412, 413, 1169, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 1170, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 1171, 458, 448,
	0, 0, 1172, 459, 460, 0, 645, 461, 646, 463,
	464, 0, 0, 465, 0, 0, 0, 467, 468, 469,
	0, 0, 470, 471, 647, 1173, 472, 1174, 648, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 649, 485, 486, 487, 650, 488, 489,
	490, 651, 491, 652, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 653, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 1175, 524, 525,
	526, 527, 654, 528, 0, 529, 530, 536, 537, 531,
	532, 538, 539, 540, 541, 542, 0, 544, 545, 543,
	546, 547, 548, 0, 549, 550, 533, 534, 551, 552,
	1176, 553, 554, 555, 556, 557, 558, 655, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 656,
	566, 567, 568, 569, 657, 573, 574, 0, 575, 576,
	0, 572, 563, 0, 577, 578, 579, 580, 581, 582,
	583, 353, 584, 0, 585, 658, 659, 660, 661, 0,
	594, 0, 586, 587, 588, 662, 589, 663, 0, 590,
	591, 592, 593, 0, 595, 596, 0, 0, 597, 598,
	599, 601, 602, 600, 603, 0, 604, 0, 0, 605,
	606, 607, 664, 665, 666, 0, 609, 608, 610, 667,
	0, 611, 0, 0, 0, 0, 612, 613, 668, 614,
	615, 616, 1293, 0, 1299, 1298, 0, 0, 0, 0,
	1296, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 617, 0, 0, 0,
	0, 279, 280, 1160, 281, 282, 283, 284, 285, 286,
	618, 619, 0, 287, 620, 288, 621, 0, 622, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 623,
	624, 625, 0, 296, 297, 626, 0, 1304, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 1161, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 0, 323, 324, 325,
	326, 327, 0, 328, 627, 628, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 629, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 630, 631, 359, 0, 267, 0,
	0, 0, 0, 0, 360, 361, 362, 632, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 1162, 366, 367,
	633, 634, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 635, 0, 636, 378, 0, 379, 380,
	381, 382, 383, 1292, 638, 639, 462, 1164, 384, 385,
	0, 386, 387, 388, 389, 390, 0, 0, 0, 0,
	391, 392, 393, 395, 0, 1163, 394, 640, 641, 0,
	642, 0, 396, 397, 1165, 643, 1166, 398, 399, 400,
	1167, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 644, 1168, 412,
	413, 1169, 0, 414, 0, 0, 0, 415, 416, 419,
	0, 0, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 1170, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 1171, 458, 448, 0, 0, 1172,
	459, 460, 0, 645, 461, 646, 463, 464, 0, 0,
	465, 0, 0, 0, 467, 468, 469, 0, 0, 470,
	471, 647, 1173, 472, 1174, 648, 473, 474, 466, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	649, 485, 486, 487, 650, 488, 489, 490, 651, 491,
	652, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 653, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 1175, 524, 525, 526, 527, 654,
	528, 0, 529, 530, 536, 537, 531, 532, 538, 539,
	540, 541, 542, 0, 544, 545, 543, 546, 547, 548,
	0, 549, 550, 533, 534, 551, 552, 1176, 553, 554,
	555, 556, 557, 558, 655, 0, 559, 0, 560, 561,
	562, 564, 535, 565, 570, 571, 656, 566, 567, 568,
	569, 657, 573, 574, 0, 575, 576, 0, 572, 563,
	0, 577, 578, 579, 580, 581, 582, 583, 353, 584,
	0, 585, 658, 659, 660, 661, 0, 594, 0, 586,
	587, 588, 662, 589, 663, 0, 590, 591, 592, 593,
	0, 595, 596, 0, 0, 597, 598, 599, 601, 602,
	600, 603, 0, 604, 0, 0, 605, 606, 607, 664,
	665, 666, 0, 609, 608, 610, 667, 0, 611, 0,
	0, 0, 0, 612, 613, 668, 614, 615, 616, 1299,
	1298, 0, 0, 0, 0, 1296, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 617, 0, 0, 0, 0, 279, 280, 1160, 281,
	282, 283, 284, 285, 286, 618, 619, 0, 287, 620,
	288, 621, 0, 622, 289, 290, 291, 292, 293, 294,
	0, 0, 0, 295, 623, 624, 625, 0, 296, 297,
	626, 0, 1304, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 1161, 320, 321, 322, 0, 0, 0, 0, 0,
	0, 0, 323, 324, 325, 326, 327, 0, 328, 627,
	628, 0, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 339, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 629, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 630,
	631, 359, 0, 267, 0, 0, 0, 0, 0, 360,
	361, 362, 632, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 1162, 366, 367, 633, 634, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 635, 0,
	636, 378, 0, 379, 380, 381, 382, 383, 637, 638,
	639, 462, 1164, 384, 385, 0, 386, 387, 388, 389,
	390, 0, 0, 0, 0, 391, 392, 393, 395, 0,
	1163, 394, 640, 641, 0, 642, 0, 396, 397, 1165,
	643, 1166, 398, 399, 400, 1167, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 644, 1168, 412, 413, 1169, 0, 414, 0,
	0, 0, 415, 416, 419, 0, 0, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 1170, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 1171,
	458, 448, 0, 0, 1172, 459, 460, 0, 645, 461,
	646, 463, 464, 0, 0, 465, 0, 0, 0, 467,
	468, 469, 0, 0, 470, 471, 647, 1173, 472, 1174,
	648, 473, 474, 466, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 649, 485, 486, 487, 650,
	488, 489, 490, 651, 491, 652, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 653,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 1175,
	524, 525, 526, 527, 654, 528, 0, 529, 530, 536,
	537, 531, 532, 538, 539, 540, 541, 542, 0, 544,
	545, 543, 546, 547, 548, 0, 549, 550, 533, 534,
	551, 552, 1176, 553, 554, 555, 556, 557, 558, 655,
	0, 559, 0, 560, 561, 562, 564, 535, 565, 570,
	571, 656, 566, 567, 568, 569, 657, 573, 574, 0,
	575, 576, 0, 572, 563, 0, 577, 578, 579, 580,
	581, 582, 583, 353, 584, 0, 585, 658, 659, 660,
	661, 0, 594, 0, 586, 587, 588, 662, 589, 663,
	0, 590, 591, 592, 593, 0, 595, 596, 0, 0,
	597, 598, 599, 601, 602, 600, 603, 0, 604, 0,
	0, 605, 606, 607, 664, 665, 666, 0, 609, 608,
	610, 667, 0, 611, 1299, 2002, 0, 0, 612, 613,
	668, 614, 615, 616, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 617, 0, 0, 0,
	0, 279, 280, 1160, 281, 282, 283, 284, 285, 286,
	618, 619, 0, 287, 620, 288, 621, 0, 622, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 623,
	624, 625, 0, 296, 297, 626, 0, 1304, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 1161, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 0, 323, 324, 325,
	326, 327, 0, 328, 627, 628, 2042, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 629, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 630, 631, 359, 0, 267, 0,
	0, 0, 0, 0, 360, 361, 362, 632, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 1162, 366, 367,
	633, 634, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 635, 0, 636, 378, 0, 379, 380,
	381, 382, 383, 637, 638, 639, 462, 1164, 384, 385,
	0, 386, 387, 388, 389, 390, 0, 0, 0, 0,
	391, 392, 393, 395, 0, 1163, 394, 640, 641, 0,
	642, 0, 396, 397, 1165, 643, 1166, 398, 399, 400,
	1167, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 644, 1168, 412,
	413, 1169, 0, 414, 0, 0, 0, 415, 416, 419,
	0, 0, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 1170, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 1171, 458, 448, 0, 0, 1172,
	459, 460, 0, 645, 461, 646, 463, 464, 0, 0,
	465, 0, 0, 0, 467, 468, 469, 0, 0, 470,
	471, 647, 1173, 472, 1174, 648, 473, 474, 466, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	649, 485, 486, 487, 650, 488, 489, 490, 651, 491,
	652, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 653, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 1175, 524, 525, 526, 527, 654,
	528, 0, 529, 530, 536, 537, 531, 532, 538, 539,
	540, 541, 542, 0, 544, 545, 543, 546, 547, 548,
	0, 549, 550, 533, 534, 551, 552, 1176, 553, 554,
	555, 556, 557, 558, 655, 0, 559, 0, 560, 561,
	562, 564, 535, 565, 570, 571, 656, 566, 567, 568,
	569, 657, 573, 574, 0, 575, 576, 0, 572, 563,
	0, 577, 578, 579, 580, 581, 582, 583, 353, 584,
	0, 585, 658, 659, 660, 661, 0, 594, 0, 586,
	587, 588, 662, 589, 663, 0, 590, 591, 592, 593,
	0, 595, 596, 0, 0, 597, 598, 599, 601, 602,
	600, 603, 0, 604, 0, 0, 605, 606, 607, 664,
	665, 666, 0, 609, 608, 610, 667, 0, 611, 1299,
	1298, 0, 0, 612, 613, 668, 614, 615, 616, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 617, 0, 0, 0, 0, 279, 280, 1160, 281,
	282, 283, 284, 285, 286, 618, 619, 0, 287, 620,
	288, 621, 0, 622, 289, 290, 291, 292, 293, 294,
	0, 0, 0, 295, 623, 624, 625, 0, 296, 297,
	626, 0, 1304, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 1161, 320, 321, 322, 0, 0, 0, 0, 0,
	0, 0, 323, 324, 325, 326, 327, 0, 328, 627,
	628, 0, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 339, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 629, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 630,
	631, 359, 0, 267, 0, 0, 0, 0, 0, 360,
	361, 362, 632, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 1162, 366, 367, 633, 634, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 635, 0,
	636, 378, 0, 379, 380, 381, 382, 383, 637, 638,
	639, 462, 1164, 384, 385, 0, 386, 387, 388, 389,
	390, 0, 0, 0, 0, 391, 392, 393, 395, 0,
	1163, 394, 640, 641, 0, 642, 0, 396, 397, 1165,
	643, 1166, 398, 399, 400, 1167, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 644, 1168, 412, 413, 1169, 0, 414, 0,
	0, 0, 415, 416, 419, 0, 0, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 1170, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 1171,
	458, 448, 0, 0, 1172, 459, 460, 0, 645, 461,
	646, 463, 464, 0, 0, 465, 0, 0, 0, 467,
	468, 469, 0, 0, 470, 471, 647, 1173, 472, 1174,
	648, 473, 474, 466, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 649, 485, 486, 487, 650,
	488, 489, 490, 651, 491, 652, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 653,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 1175,
	524, 525, 526, 527, 654, 528, 0, 529, 530, 536,
	537, 531, 532, 538, 539, 540, 541, 542, 0, 544,
	545, 543, 546, 547, 548, 0, 549, 550, 533, 534,
	551, 552, 1176, 553, 554, 555, 556, 557, 558, 655,
	0, 559, 0, 560, 561, 562, 564, 535, 565, 570,
	571, 656, 566, 567, 568, 569, 657, 573, 574, 0,
	575, 576, 0, 572, 563, 0, 577, 578, 579, 580,
	581, 582, 583, 353, 584, 0, 585, 658, 659, 660,
	661, 0, 594, 0, 586, 587, 588, 662, 589, 663,
	0, 590, 591, 592, 593, 0, 595, 596, 0, 0,
	597, 598, 599, 601, 602, 600, 603, 0, 604, 0,
	0, 605, 606, 607, 664, 665, 666, 1299, 609, 608,
	610, 667, 0, 611, 0, 0, 0, 0, 612, 613,
	668, 614, 615, 616, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 617,
	0, 0, 0, 0, 279, 280, 1160, 281, 282, 283,
	284, 285, 286, 618, 619, 0, 287, 620, 288, 621,
	0, 622, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 623, 624, 625, 0, 296, 297, 626, 0,
	1304, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 1161,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 0, 328, 627, 628, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 629, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 630, 631, 359,
	0, 267, 0, 0, 0, 0, 0, 360, 361, 362,
	632, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	1162, 366, 367, 633, 634, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 635, 0, 636, 378,
	0, 379, 380, 381, 382, 383, 637, 638, 639, 462,
	1164, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	0, 0, 0, 391, 392, 393, 395, 0, 1163, 394,
	640, 641, 0, 642, 0, 396, 397, 1165, 643, 1166,
	398, 399, 400, 1167, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	644, 1168, 412, 413, 1169, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 1170, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 1171, 458, 448,
	0, 0, 1172, 459, 460, 0, 645, 461, 646, 463,
	464, 0, 0, 465, 0, 0, 0, 467, 468, 469,
	0, 0, 470, 471, 647, 1173, 472, 1174, 648, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 649, 485, 486, 487, 650, 488, 489,
	490, 651, 491, 652, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 653, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 1175, 524, 525,
	526, 527, 654, 528, 0, 529, 530, 536, 537, 531,
	532, 538, 539, 540, 541, 542, 0, 544, 545, 543,
	546, 547, 548, 0, 549, 550, 533, 534, 551, 552,
	1176, 553, 554, 555, 556, 557, 558, 655, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 656,
	566, 567, 568, 569, 657, 573, 574, 0, 575, 576,
	0, 572, 563, 0, 577, 578, 579, 580, 581, 582,
	583, 353, 584, 0, 585, 658, 659, 660, 661, 0,
	594, 0, 586, 587, 588, 662, 589, 663, 0, 590,
	591, 592, 593, 0, 595, 596, 0, 0, 597, 598,
	599, 601, 602, 600, 603, 0, 604, 0, 0, 605,
	606, 607, 664, 665, 666, 264, 609, 608, 610, 667,
	0, 611, 0, 0, 0, 0, 612, 613, 668, 614,
	615, 616, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 617, 0, 0,
	0, 0, 279, 280, 0, 281, 282, 283, 284, 285,
	286, 618, 619, 0, 287, 620, 288, 621, 0, 622,
	289, 290, 291, 292, 293, 294, 0, 0, 0, 295,
	623, 624, 625, 2749, 296, 297, 626, 0, 0, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 2746, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 0, 0, 0, 0, 0, 0, 0, 323, 324,
	325, 326, 327, 0, 328, 627, 628, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 2753, 347, 629, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 630, 631, 359, 0, 2955,
	0, 0, 0, 0, 0, 360, 361, 362, 632, 0,
	0, 0, 363, 0, 364, 365, 2752, 0, 0, 366,
	367, 633, 634, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 635, 0, 636, 378, 0, 379,
	380, 381, 382, 383, 637, 638, 639, 462, 0, 384,
	385, 0, 386, 387, 388, 389, 390, 0, 0, 0,
	2952, 391, 392, 393, 395, 0, 0, 394, 640, 641,
	0, 642, 0, 396, 2954, 0, 643, 0, 398, 399,
	400, 0, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 644, 0,
	412, 413, 2951, 0, 414, 0, 0, 0, 415, 416,
	419, 0, 0, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 0, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 0, 458, 448, 0, 0,
	0, 459, 460, 0, 645, 461, 646, 463, 464, 0,
	0, 465, 0, 0, 0, 467, 468, 469, 0, 0,
	470, 471, 647, 0, 472, 0, 648, 473, 474, 466,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 649, 485, 486, 487, 650, 488, 489, 490, 651,
	491, 652, 492, 493, 2751, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 653, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 0, 524, 525, 526, 527,
	654, 528, 0, 529, 530, 536, 537, 531, 532, 538,
	539, 540, 541, 542, 0, 544, 545, 543, 546, 547,
	548, 0, 549, 550, 533, 534, 551, 552, 0, 553,
	554, 555, 556, 557, 558, 655, 0, 559, 0, 560,
	561, 562, 564, 535, 565, 570, 571, 656, 566, 567,
	568, 569, 657, 573, 574, 0, 575, 576, 0, 572,
	563, 0, 577, 578, 579, 580, 581, 582, 583, 353,
	584, 0, 585, 658, 659, 660, 661, 0, 594, 0,
	586, 587, 588, 662, 589, 663, 0, 590, 591, 592,
	593, 0, 595, 596, 0, 2953, 597, 598, 599, 601,
	602, 600, 603, 0, 604, 0, 0, 605, 606, 607,
	664, 665, 666, 264, 609, 608, 610, 667, 0, 611,
	0, 0, 0, 0, 612, 613, 668, 614, 615, 616,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 617, 0, 0, 0, 0,
	279, 280, 0, 281, 282, 283, 284, 285, 286, 618,
	619, 0, 287, 620, 288, 621, 0, 622, 289, 290,
	291, 292, 293, 294, 0, 0, 0, 295, 623, 624,
	625, 2749, 296, 297, 626, 0, 0, 2743, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 2746, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 0, 323, 324, 325, 326,
	327, 0, 328, 627, 628, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	2753, 347, 629, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 630, 631, 359, 0, 0, 0, 0,
	0, 0, 0, 360, 361, 362, 632, 0, 0, 0,
	363, 0, 364, 365, 2752, 0, 0, 366, 367, 633,
	634, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 635, 0, 636, 378, 0, 379, 380, 381,
	382, 383, 2742, 638, 639, 462, 0, 384, 385, 0,
	386, 387, 388, 389, 390, 0, 0, 0, 0, 391,
	392, 393, 395, 0, 0, 394, 640, 641, 0, 642,
	0, 396, 397, 0, 643, 0, 398, 399, 400, 0,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 644, 0, 412, 413,
	0, 0, 414, 0, 0, 0, 415, 416, 419, 0,
	0, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	0, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 0, 458, 448, 0, 0, 0, 459,
	460, 0, 645, 461, 646, 463, 464, 0, 0, 465,
	0, 0, 0, 467, 468, 469, 0, 0, 470, 471,
	647, 0, 472, 0, 648, 473, 474, 466, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 649,
	485, 486, 487, 650, 488, 489, 490, 651, 491, 652,
	492, 493, 2751, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 653, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 0, 524, 525, 526, 527, 654, 528,
	0, 529, 530, 536, 537, 531, 532, 538, 539, 540,
	541, 542, 0, 544, 545, 543, 546, 547, 548, 0,
	549, 550, 533, 534, 551, 552, 0, 553, 554, 555,
	556, 557, 558, 655, 0, 559, 0, 560, 561, 562,
	564, 535, 565, 570, 571, 656, 566, 567, 568, 569,
	657, 573, 574, 0, 575, 576, 0, 572, 563, 0,
	577, 578, 579, 580, 581, 582, 583, 353, 584, 0,
	585, 658, 659, 660, 661, 0, 594, 0, 586, 587,
	588, 662, 589, 663, 0, 590, 591, 592, 593, 0,
	595, 596, 0, 2750, 597, 598, 599, 601, 602, 600,
	603, 0, 604, 0, 0, 605, 606, 607, 664, 665,
	666, 0, 609, 608, 610, 667, 1697, 611, 264, 0,
	0, 0, 612, 613, 668, 614, 615, 616, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 1696, 277, 278, 0, 0, 0, 0, 0,
	617, 0, 0, 0, 0, 279, 280, 0, 281, 282,
	283, 284, 285, 286, 618, 619, 0, 287, 620, 288,
	621, 0, 622, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 623, 624, 625, 0, 296, 297, 626,
	0, 0, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 326, 327, 0, 328, 627, 628,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 629, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 630, 631,
	359, 0, 267, 0, 0, 0, 0, 0, 360, 361,
	362, 632, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 0, 366, 367, 633, 634, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 635, 0, 636,
	378, 0, 379, 380, 381, 382, 383, 637, 638, 639,
	462, 0, 384, 385, 0, 386, 387, 388, 389, 390,
	0, 0, 0, 268, 391, 392, 393, 395, 0, 0,
	394, 640, 641, 0, 642, 0, 396, 397, 0, 643,
	0, 398, 399, 400, 0, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 644, 0, 412, 413, 0, 0, 414, 0, 0,
	0, 415, 416, 419, 0, 0, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 0, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 0, 458,
	448, 0, 269, 0, 459, 460, 0, 645, 461, 646,
	463, 464, 0, 0, 465, 0, 0, 0, 467, 468,
	469, 0, 0, 470, 471, 647, 0, 472, 0, 648,
	473, 474, 466, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 649, 485, 486, 487, 650, 488,
	489, 490, 651, 491, 652, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 653, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 0, 524,
	525, 526, 527, 654, 528, 0, 529, 530, 536, 537,
	531, 532, 538, 539, 540, 541, 542, 0, 1700, 545,
	543, 546, 547, 548, 0, 549, 550, 533, 534, 551,
	552, 0, 553, 554, 555, 556, 557, 558, 655, 0,
	559, 0, 560, 561, 562, 564, 535, 565, 570, 571,
	656, 566, 567, 568, 569, 657, 573, 574, 0, 575,
	576, 0, 572, 563, 1698, 577, 578, 579, 580, 581,
	582, 583, 353, 584, 0, 585, 658, 659, 660, 661,
	0, 594, 0, 586, 587, 588, 662, 589, 663, 0,
	590, 591, 592, 593, 0, 595, 596, 0, 0, 597,
	598, 599, 601, 602, 600, 603, 0, 604, 0, 0,
	605, 606, 607, 664, 665, 666, 0, 1699, 608, 610,
	667, 1446, 611, 264, 0, 0, 0, 612, 613, 668,
	614, 615, 616, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 617, 0, 0, 0, 0,
	279, 280, 0, 281, 282, 283, 284, 285, 286, 618,
	619, 0, 287, 620, 288, 621, 0, 622, 289, 290,
	291, 292, 293, 294, 0, 0, 0, 295, 623, 624,
	625, 0, 296, 297, 626, 0, 0, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 0, 323, 324, 325, 326,
	327, 0, 328, 627, 628, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 629, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 630, 631, 359, 0, 267, 0, 0,
	0, 0, 0, 360, 361, 362, 632, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 0, 366, 367, 633,
	634, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 635, 0, 636, 378, 0, 379, 380, 381,
	382, 383, 1448, 638, 639, 462, 0, 384, 385, 0,
	386, 387, 388, 389, 390, 0, 0, 0, 268, 391,
	392, 393, 395, 0, 0, 394, 640, 641, 0, 642,
	0, 396, 397, 0, 643, 0, 398, 399, 400, 0,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 644, 0, 412, 413,
	0, 0, 414, 0, 0, 0, 415, 416, 419, 0,
	0, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	0, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 0, 458, 448, 0, 269, 0, 459,
	460, 0, 645, 461, 646, 463, 464, 0, 0, 465,
	0, 0, 1210, 467, 468, 469, 0, 0, 470, 471,
	647, 0, 472, 0, 648, 473, 474, 466, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 649,
	485, 486, 487, 650, 488, 489, 490, 651, 491, 652,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 653, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 0, 524, 525, 526, 527, 654, 528,
	0, 529, 530, 536, 537, 531, 532, 538, 539, 540,
	541, 542, 0, 544, 545, 543, 546, 547, 548, 0,
	549, 550, 533, 534, 551, 552, 0, 553, 554, 555,
	556, 557, 558, 655, 0, 559, 0, 560, 561, 562,
	564, 535, 565, 570, 571, 656, 566, 567, 568, 569,
	657, 573, 574, 0, 575, 576, 0, 572, 563, 0,
	577, 578, 579, 580, 581, 582, 583, 353, 584, 0,
	585, 658, 659, 660, 661, 0, 594, 0, 586, 587,
	588, 662, 589, 663, 0, 590, 591, 592, 593, 0,
	595, 596, 0, 0, 597, 598, 599, 601, 602, 600,
	603, 0, 604, 0, 0, 605, 606, 607, 664, 665,
	666, 0, 609, 608, 610, 667, 1443, 611, 264, 0,
	0, 0, 612, 613, 668, 614, 615, 616, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	617, 0, 0, 0, 0, 279, 280, 0, 281, 282,
	283, 284, 285, 286, 618, 619, 0, 287, 620, 288,
	621, 0, 622, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 623, 624, 625, 0, 296, 297, 626,
	0, 0, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 326, 327, 0, 328, 627, 628,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 629, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 630, 631,
	359, 0, 267, 0, 0, 0, 0, 0, 360, 361,
	362, 632, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 0, 366, 367, 633, 634, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 635, 0, 636,
	378, 0, 379, 380, 381, 382, 383, 1445, 638, 639,
	462, 0, 384, 385, 0, 386, 387, 388, 389, 390,
	0, 0, 0, 268, 391, 392, 393, 395, 0, 0,
	394, 640, 641, 0, 642, 0, 396, 397, 0, 643,
	0, 398, 399, 400, 0, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 644, 0, 412, 413, 0, 0, 414, 0, 0,
	0, 415, 416, 419, 0, 0, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 0, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 0, 458,
	448, 0, 269, 0, 459, 460, 0, 645, 461, 646,
	463, 464, 0, 0, 465, 0, 0, 1210, 467, 468,
	469, 0, 0, 470, 471, 647, 0, 472, 0, 648,
	473, 474, 466, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 649, 485, 486, 487, 650, 488,
	489, 490, 651, 491, 652, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 653, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 0, 524,
	525, 526, 527, 654, 528, 0, 529, 530, 536, 537,
	531, 532, 538, 539, 540, 541, 542, 0, 544, 545,
	543, 546, 547, 548, 0, 549, 550, 533, 534, 551,
	552, 0, 553, 554, 555, 556, 557, 558, 655, 0,
	559, 0, 560, 561, 562, 564, 535, 565, 570, 571,
	656, 566, 567, 568, 569, 657, 573, 574, 0, 575,
	576, 0, 572, 563, 0, 577, 578, 579, 580, 581,
	582, 583, 353, 584, 0, 585, 658, 659, 660, 661,
	0, 594, 0, 586, 587, 588, 662, 589, 663, 0,
	590, 591, 592, 593, 0, 595, 596, 0, 0, 597,
	598, 599, 601, 602, 600, 603, 0, 604, 0, 0,
	605, 606, 607, 664, 665, 666, 0, 609, 608, 610,
	667, 1350, 611, 264, 0, 0, 0, 612, 613, 668,
	614, 615, 616, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 617, 0, 0, 0, 0,
	279, 280, 0, 281, 282, 283, 284, 285, 286, 618,
	619, 0, 287, 620, 288, 621, 0, 622, 289, 290,
	291, 292, 293, 294, 0, 0, 0, 295, 623, 624,
	625, 0, 296, 297, 626, 0, 0, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 0, 323, 324, 325, 326,
	327, 0, 328, 627, 628, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 629, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 630, 631, 359, 0, 267, 0, 0,
	0, 0, 0, 360, 361, 362, 632, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 0, 366, 367, 633,
	634, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 635, 0, 636, 378, 0, 379, 380, 381,
	382, 383, 1352, 638, 639, 462, 0, 384, 385, 0,
	386, 387, 388, 389, 390, 0, 0, 0, 268, 391,
	392, 393, 395, 0, 0, 394, 640, 641, 0, 642,
	0, 396, 397, 0, 643, 0, 398, 399, 400, 0,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 644, 0, 412, 413,
	0, 0, 414, 0, 0, 0, 415, 416, 419, 0,
	0, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	0, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 0, 458, 448, 0, 269, 0, 459,
	460, 0, 645, 461, 646, 463, 464, 0, 0, 465,
	0, 0, 1210, 467, 468, 469, 0, 0, 470, 471,
	647, 0, 472, 0, 648, 473, 474, 466, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 649,
	485, 486, 487, 650, 488, 489, 490, 651, 491, 652,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 653, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 0, 524, 525, 526, 527, 654, 528,
	0, 529, 530, 536, 537, 531, 532, 538, 539, 540,
	541, 542, 0, 544, 545, 543, 546, 547, 548, 0,
	549, 550, 533, 534, 551, 552, 0, 553, 554, 555,
	556, 557, 558, 655, 0, 559, 0, 560, 561, 562,
	564, 535, 565, 570, 571, 656, 566, 567, 568, 569,
	657, 573, 574, 0, 575, 576, 0, 572, 563, 0,
	577, 578, 579, 580, 581, 582, 583, 353, 584, 0,
	585, 658, 659, 660, 661, 0, 594, 0, 586, 587,
	588, 662, 589, 663, 0, 590, 591, 592, 593, 0,
	595, 596, 0, 0, 597, 598, 599, 601, 602, 600,
	603, 0, 604, 0, 0, 605, 606, 607, 664, 665,
	666, 0, 609, 608, 610, 667, 700, 611, 264, 0,
	0, 0, 612, 613, 668, 614, 615, 616, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 699,
	275, 276, 689, 277, 278, 0, 0, 0, 0, 0,
	617, 0, 0, 0, 0, 279, 280, 0, 281, 282,
	283, 284, 285, 286, 618, 619, 0, 287, 620, 288,
	621, 0, 622, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 623, 624, 625, 0, 296, 297, 626,
	0, 0, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 692, 317, 318, 319,
	0, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 326, 327, 0, 328, 627, 628,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 629, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 630, 631,
	359, 0, 0, 0, 0, 0, 0, 0, 360, 361,
	362, 632, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 0, 366, 367, 633, 634, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 693, 377, 635, 0, 636,
	378, 0, 379, 380, 381, 382, 383, 637, 638, 639,
	462, 0, 384, 385, 0, 386, 387, 388, 389, 390,
	0, 0, 0, 0, 391, 392, 393, 395, 0, 0,
	394, 640, 641, 0, 642, 0, 396, 397, 0, 643,
	0, 398, 399, 400, 0, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 644, 0, 412, 413, 0, 0, 414, 0, 0,
	0, 415, 416, 419, 0, 0, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 0, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 0, 458,
	448, 0, 0, 0, 459, 460, 0, 645, 461, 646,
	463, 464, 0, 0, 465, 0, 0, 0, 467, 468,
	469, 0, 0, 470, 471, 647, 0, 472, 0, 648,
	473, 474, 466, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 649, 485, 486, 487, 650, 488,
	489, 490, 651, 491, 652, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 653, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 0, 524,
	525, 526, 527, 654, 528, 0, 529, 530, 536, 537,
	531, 532, 538, 539, 540, 541, 542, 694, 544, 545,
	543, 546, 547, 548, 0, 549, 550, 533, 534, 551,
	552, 0, 553, 554, 555, 556, 557, 558, 655, 0,
	559, 0, 560, 561, 562, 564, 535, 565, 570, 571,
	656, 566, 567, 568, 569, 657, 573, 574, 0, 575,
	576, 0, 572, 563, 0, 577, 578, 579, 580, 581,
	582, 583, 353, 584, 0, 585, 658, 659, 660, 661,
	0, 594, 0, 586, 587, 588, 662, 589, 663, 0,
	590, 591, 592, 593, 0, 595, 596, 0, 0, 597,
	598, 599, 601, 602, 600, 603, 0, 604, 0, 0,
	605, 606, 607, 664, 665, 666, 0, 609, 608, 610,
	667, 688, 611, 264, 0, 0, 0, 612, 613, 668,
	614, 615, 616, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 689, 277, 278,
	0, 0, 0, 0, 0, 617, 0, 0, 0, 0,
	279, 280, 0, 281, 282, 283, 284, 285, 286, 618,
	619, 0, 287, 620, 288, 621, 0, 622, 289, 290,
	291, 292, 293, 294, 0, 0, 0, 295, 623, 624,
	625, 0, 296, 297, 626, 0, 0, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 692, 317, 318, 319, 0, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 0, 323, 324, 325, 326,
	327, 0, 328, 627, 628, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 629, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 630, 631, 359, 0, 0, 0, 0,
	0, 0, 0, 360, 361, 362, 632, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 0, 366, 367, 633,
	634, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	693, 377, 635, 0, 636, 378, 0, 379, 380, 381,
	382, 383, 637, 638, 639, 462, 0, 384, 385, 0,
	386, 387, 388, 389, 390, 0, 0, 0, 0, 391,
	392, 393, 395, 0, 0, 394, 640, 641, 0, 642,
	0, 396, 397, 0, 643, 0, 398, 399, 400, 0,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 644, 0, 412, 413,
	0, 0, 414, 0, 0, 0, 415, 416, 419, 0,
	0, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	0, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 0, 458, 448, 0, 0, 0, 459,
	460, 0, 645, 461, 646, 463, 464, 0, 0, 465,
	0, 0, 0, 467, 468, 469, 0, 0, 470, 471,
	647, 0, 472, 0, 648, 473, 474, 466, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 649,
	485, 486, 487, 650, 488, 489, 490, 651, 491, 652,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 653, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 0, 524, 525, 526, 527, 654, 528,
	0, 529, 530, 536, 537, 531, 532, 538, 539, 540,
	541, 542, 694, 544, 545, 543, 546, 547, 548, 0,
	549, 550, 533, 534, 551, 552, 0, 553, 554, 555,
	556, 557, 558, 655, 0, 559, 0, 560, 561, 562,
	564, 535, 565, 570, 571, 656, 566, 567, 568, 569,
	657, 573, 574, 0, 575, 576, 0, 572, 563, 0,
	577, 578, 579, 580, 581, 582, 583, 353, 584, 0,
	585, 658, 659, 660, 661, 0, 594, 0, 586, 587,
	588, 662, 589, 663, 0, 590, 591, 592, 593, 0,
	595, 596, 0, 0, 597, 598, 599, 601, 602, 600,
	603, 0, 604, 0, 0, 605, 606, 607, 664, 665,
	666, 264, 609, 608, 610, 667, 0, 611, 0, 0,
	0, 0, 612, 613, 668, 614, 615, 616, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 617, 0, 0, 0, 0, 279, 280,
	0, 281, 282, 283, 284, 285, 286, 618, 619, 0,
	287, 620, 288, 621, 0, 622, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 295, 623, 624, 625, 0,
	296, 297, 626, 0, 0, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 322, 0, 0, 0,
	0, 0, 0, 0, 323, 324, 325, 326, 327, 0,
	328, 627, 628, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	629, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 630, 631, 359, 0, 267, 0, 0, 0, 0,
	0, 360, 361, 362, 632, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 0, 366, 367, 633, 634, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	635, 0, 636, 378, 0, 379, 380, 381, 382, 383,
	637, 638, 639, 462, 0, 384, 385, 0, 386, 387,
	388, 389, 390, 0, 0, 0, 268, 391, 392, 393,
	395, 0, 0, 394, 640, 641, 0, 642, 0, 396,
	397, 0, 643, 0, 398, 399, 400, 0, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 644, 0, 412, 413, 0, 0,
	414, 0, 0, 0, 415, 416, 419, 0, 0, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 0, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 0, 458, 448, 0, 269, 0, 459, 460, 0,
	645, 461, 646, 463, 464, 0, 0, 465, 0, 0,
	1210, 467, 468, 469, 0, 0, 470, 471, 647, 0,
	472, 0, 648, 473, 474, 466, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 649, 485, 486,
	487, 650, 488, 489, 490, 651, 491, 652, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 653, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 0, 524, 525, 526, 527, 654, 528, 0, 529,
	530, 536, 537, 531, 532, 538, 539, 540, 541, 542,
	0, 544, 545, 543, 546, 547, 548, 0, 549, 550,
	533, 534, 551, 552, 0, 553, 554, 555, 556, 557,
	558, 655, 0, 559, 0, 560, 561, 562, 564, 535,
	565, 570, 571, 656, 566, 567, 568, 569, 657, 573,
	574, 0, 575, 576, 0, 572, 563, 0, 577, 578,
	579, 580, 581, 582, 583, 353, 584, 0, 585, 658,
	659, 660, 661, 0, 594, 0, 586, 587, 588, 662,
	589, 663, 0, 590, 591, 592, 593, 0, 595, 596,
	0, 0, 597, 598, 599, 601, 602, 600, 603, 0,
	604, 0, 0, 605, 606, 607, 664, 665, 666, 264,
	609, 608, 610, 667, 0, 611, 0, 0, 0, 0,
	612, 613, 668, 614, 615, 616, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 617, 0, 0, 0, 0, 279, 280, 0, 281,
	282, 283, 284, 285, 286, 618, 619, 0, 287, 620,
	288, 621, 0, 622, 289, 290, 291, 292, 293, 294,
	0, 0, 0, 295, 623, 624, 625, 0, 296, 297,
	626, 0, 0, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 322, 0, 0, 0, 0, 0,
	0, 0, 323, 324, 325, 326, 327, 0, 328, 627,
	628, 0, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 339, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 629, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 630,
	631, 359, 0, 267, 0, 0, 0, 0, 0, 360,
	361, 362, 632, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 0, 366, 367, 633, 634, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 635, 0,
	636, 378, 0, 379, 380, 381, 382, 383, 637, 638,
	639, 462, 0, 384, 385, 0, 386, 387, 388, 389,
	390, 0, 0, 0, 268, 391, 392, 393, 395, 0,
	0, 394, 640, 641, 0, 642, 0, 396, 397, 0,
	643, 0, 398, 399, 400, 0, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 644, 0, 412, 413, 0, 0, 414, 0,
	0, 0, 415, 416, 419, 0, 0, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 0, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 3343,
	458, 448, 0, 269, 0, 459, 460, 0, 645, 461,
	646, 463, 464, 0, 0, 465, 0, 0, 0, 467,
	468, 469, 0, 0, 470, 471, 647, 0, 472, 0,
	648, 473, 474, 466, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 649, 485, 486, 487, 650,
	488, 489, 490, 651, 491, 652, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 653,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 0,
	524, 525, 526, 527, 654, 528, 0, 529, 530, 536,
	537, 531, 532, 538, 539, 540, 541, 542, 0, 544,
	545, 543, 546, 547, 548, 0, 549, 550, 533, 534,
	551, 552, 0, 553, 554, 555, 556, 557, 558, 655,
	0, 559, 0, 560, 561, 562, 564, 535, 565, 570,
	571, 656, 566, 567, 568, 569, 657, 573, 574, 0,
	575, 576, 0, 572, 563, 0, 577, 578, 579, 580,
	581, 582, 583, 353, 584, 0, 585, 658, 659, 660,
	661, 0, 594, 0, 586, 587, 588, 662, 589, 663,
	0, 590, 591, 592, 593, 0, 595, 596, 0, 0,
	597, 598, 599, 601, 602, 600, 603, 0, 604, 0,
	0, 605, 606, 607, 664, 665, 666, 0, 609, 608,
	610, 667, 2900, 611, 264, 0, 0, 0, 612, 613,
	668, 614, 615, 616, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 617, 0, 0, 0,
	0, 279, 280, 0, 281, 282, 283, 284, 285, 286,
	618, 619, 0, 287, 620, 288, 621, 0, 622, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 623,
	624, 625, 0, 296, 297, 626, 0, 0, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 0, 323, 324, 325,
	326, 327, 0, 328, 627, 628, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 629, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 630, 631, 359, 0, 267, 0,
	0, 0, 0, 0, 360, 361, 362, 632, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 0, 366, 367,
	633, 634, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 635, 0, 636, 378, 0, 379, 380,
	381, 382, 383, 2899, 638, 639, 462, 0, 384, 385,
	0, 386, 387, 388, 389, 390, 0, 0, 0, 268,
	391, 392, 393, 395, 0, 0, 394, 640, 641, 0,
	642, 0, 396, 397, 0, 643, 0, 398, 399, 400,
	0, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 644, 0, 412,
	413, 0, 0, 414, 0, 0, 0, 415, 416, 419,
	0, 0, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 0, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 0, 458, 448, 0, 269, 0,
	459, 460, 0, 645, 461, 646, 463, 464, 0, 0,
	465, 0, 0, 0, 467, 468, 469, 0, 0, 470,
	471, 647, 0, 472, 0, 648, 473, 474, 466, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	649, 485, 486, 487, 650, 488, 489, 490, 651, 491,
	652, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 653, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 0, 524, 525, 526, 527, 654,
	528, 0, 529, 530, 536, 537, 531, 532, 538, 539,
	540, 541, 542, 0, 544, 545, 543, 546, 547, 548,
	0, 549, 550, 533, 534, 551, 552, 0, 553, 554,
	555, 556, 557, 558, 655, 0, 559, 0, 560, 561,
	562, 564, 535, 565, 570, 571, 656, 566, 567, 568,
	569, 657, 573, 574, 0, 575, 576, 0, 572, 563,
	0, 577, 578, 579, 580, 581, 582, 583, 353, 584,
	0, 585, 658, 659, 660, 661, 0, 594, 0, 586,
	587, 588, 662, 589, 663, 0, 590, 591, 592, 593,
	0, 595, 596, 0, 0, 597, 598, 599, 601, 602,
	600, 603, 0, 604, 0, 0, 605, 606, 607, 664,
	665, 666, 0, 609, 608, 610, 667, 2258, 611, 264,
	0, 0, 0, 612, 613, 668, 614, 615, 616, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 617, 0, 0, 0, 0, 279, 280, 0, 281,
	282, 283, 284, 285, 286, 618, 619, 0, 287, 620,
	288, 621, 0, 622, 289, 290, 291, 292, 293, 294,
	0, 0, 0, 295, 623, 624, 625, 0, 296, 297,
	626, 0, 0, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 322, 0, 0, 0, 0, 0,
	0, 0, 323, 324, 325, 326, 327, 0, 328, 627,
	628, 0, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 339, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 629, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 630,
	631, 359, 0, 267, 0, 0, 0, 0, 0, 360,
	361, 362, 632, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 0, 366, 367, 633, 634, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 635, 0,
	636, 378, 0, 379, 380, 381, 382, 383, 637, 638,
	639, 462, 0, 384, 385, 0, 386, 387, 388, 389,
	390, 0, 0, 0, 268, 391, 392, 393, 395, 0,
	0, 394, 640, 641, 0, 642, 0, 396, 397, 0,
	643, 0, 398, 399, 400, 0, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 644, 0, 412, 413, 0, 0, 414, 0,
	0, 0, 415, 416, 419, 0, 0, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 0, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 0,
	458, 448, 0, 269, 0, 459, 460, 0, 645, 461,
	646, 463, 464, 0, 0, 465, 0, 0, 0, 467,
	468, 469, 0, 0, 470, 471, 647, 0, 472, 0,
	648, 473, 474, 466, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 649, 485, 486, 487, 650,
	488, 489, 490, 651, 491, 652, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 653,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 0,
	524, 525, 526, 527, 654, 528, 0, 529, 530, 536,
	537, 531, 532, 538, 539, 540, 541, 542, 0, 544,
	545, 543, 546, 547, 548, 0, 549, 550, 533, 534,
	551, 552, 0, 553, 554, 555, 556, 557, 558, 655,
	0, 559, 0, 560, 561, 562, 564, 535, 565, 570,
	571, 656, 566, 567, 568, 569, 657, 573, 574, 0,
	575, 576, 0, 572, 563, 0, 577, 578, 579, 580,
	581, 582, 583, 353, 584, 0, 585, 658, 659, 660,
	661, 0, 594, 0, 586, 587, 588, 662, 589, 663,
	0, 590, 591, 592, 593, 0, 595, 596, 0, 0,
	597, 598, 599, 601, 602, 600, 603, 0, 604, 0,
	0, 605, 606, 607, 664, 665, 666, 264, 609, 608,
	610, 667, 0, 611, 0, 0, 0, 0, 612, 613,
	668, 614, 615, 616, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 617,
	0, 0, 0, 0, 279, 280, 0, 281, 282, 283,
	284, 285, 286, 618, 619, 0, 287, 620, 288, 621,
	0, 622, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 623, 624, 625, 0, 296, 297, 626, 0,
	0, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 0, 328, 627, 628, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 629, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 630, 631, 359,
	0, 267, 0, 0, 0, 0, 0, 360, 361, 362,
	632, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	0, 366, 367, 633, 634, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 635, 0, 636, 378,
	0, 379, 380, 381, 382, 383, 637, 638, 639, 462,
	0, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	0, 0, 268, 391, 392, 393, 395, 0, 0, 394,
	640, 641, 0, 642, 0, 396, 397, 0, 643, 0,
	398, 399, 400, 0, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	644, 0, 412, 413, 0, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 0, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 0, 458, 448,
	0, 269, 0, 459, 460, 0, 645, 461, 646, 463,
	464, 0, 0, 465, 0, 0, 0, 467, 468, 469,
	0, 0, 470, 471, 647, 0, 472, 0, 648, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 649, 485, 486, 487, 650, 488, 489,
	490, 651, 491, 652, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 653, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 0, 524, 525,
	526, 527, 654, 528, 0, 529, 530, 536, 537, 531,
	532, 538, 539, 540, 541, 542, 0, 544, 545, 543,
	546, 547, 548, 0, 549, 550, 533, 534, 551, 552,
	0, 553, 554, 555, 556, 557, 558, 655, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 656,
	566, 567, 568, 569, 657, 573, 574, 0, 575, 576,
	0, 572, 563, 2199, 577, 578, 579, 580, 581, 582,
	583, 353, 584, 0, 585, 658, 659, 660, 661, 0,
	594, 0, 586, 587, 588, 662, 589, 663, 0, 590,
	591, 592, 593, 0, 595, 596, 0, 0, 597, 598,
	599, 601, 602, 600, 603, 0, 604, 0, 0, 605,
	606, 607, 664, 665, 666, 0, 609, 608, 610, 667,
	2206, 611, 264, 0, 0, 0, 612, 613, 668, 614,
	615, 616, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 617, 0, 0, 0, 0, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 618, 619,
	0, 287, 620, 288, 621, 0, 622, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 623, 624, 625,
	0, 296, 297, 626, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 627, 628, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 629, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 630, 631, 359, 0, 267, 0, 0, 0,
	0, 0, 360, 361, 362, 632, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 0, 366, 367, 633, 634,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 635, 0, 636, 378, 0, 379, 380, 381, 382,
	383, 2205, 638, 639, 462, 0, 384, 385, 0, 386,
	387, 388, 389, 390, 0, 0, 0, 268, 391, 392,
	393, 395, 0, 0, 394, 640, 641, 0, 642, 0,
	396, 397, 0, 643, 0, 398, 399, 400, 0, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 644, 0, 412, 413, 0,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 0,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 0, 458, 448, 0, 269, 0, 459, 460,
	0, 645, 461, 646, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 647,
	0, 472, 0, 648, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 649, 485,
	486, 487, 650, 488, 489, 490, 651, 491, 652, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 653, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 0, 524, 525, 526, 527, 654, 528, 0,
	529, 530, 536, 537, 531, 532, 538, 539, 540, 541,
	542, 0, 544, 545, 543, 546, 547, 548, 0, 549,
	550, 533, 534, 551, 552, 0, 553, 554, 555, 556,
	557, 558, 655, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 656, 566, 567, 568, 569, 657,
	573, 574, 0, 575, 576, 0, 572, 563, 0, 577,
	578, 579, 580, 581, 582, 583, 353, 584, 0, 585,
	658, 659, 660, 661, 0, 594, 0, 586, 587, 588,
	662, 589, 663, 0, 590, 591, 592, 593, 0, 595,
	596, 0, 0, 597, 598, 599, 601, 602, 600, 603,
	0, 604, 0, 0, 605, 606, 607, 664, 665, 666,
	0, 609, 608, 610, 667, 2192, 611, 264, 0, 0,
	0, 612, 613, 668, 614, 615, 616, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 617,
	0, 0, 0, 0, 279, 280, 0, 281, 282, 283,
	284, 285, 286, 618, 619, 0, 287, 620, 288, 621,
	0, 622, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 623, 624, 625, 0, 296, 297, 626, 0,
	0, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 0, 328, 627, 628, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 629, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 630, 631, 359,
	0, 267, 0, 0, 0, 0, 0, 360, 361, 362,
	632, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	0, 366, 367, 633, 634, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 635, 0, 636, 378,
	0, 379, 380, 381, 382, 383, 2194, 638, 639, 462,
	0, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	0, 0, 268, 391, 392, 393, 395, 0, 0, 394,
	640, 641, 0, 642, 0, 396, 397, 0, 643, 0,
	398, 399, 400, 0, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	644, 0, 412, 413, 0, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 0, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 0, 458, 448,
	0, 269, 0, 459, 460, 0, 645, 461, 646, 463,
	464, 0, 0, 465, 0, 0, 0, 467, 468, 469,
	0, 0, 470, 471, 647, 0, 472, 0, 648, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 649, 485, 486, 487, 650, 488, 489,
	490, 651, 491, 652, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 653, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 0, 524, 525,
	526, 527, 654, 528, 0, 529, 530, 536, 537, 531,
	532, 538, 539, 540, 541, 542, 0, 544, 545, 543,
	546, 547, 548, 0, 549, 550, 533, 534, 551, 552,
	0, 553, 554, 555, 556, 557, 558, 655, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 656,
	566, 567, 568, 569, 657, 573, 574, 0, 575, 576,
	0, 572, 563, 0, 577, 578, 579, 580, 581, 582,
	583, 353, 584, 0, 585, 658, 659, 660, 661, 0,
	594, 0, 586, 587, 588, 662, 589, 663, 0, 590,
	591, 592, 593, 0, 595, 596, 0, 0, 597, 598,
	599, 601, 602, 600, 603, 0, 604, 0, 0, 605,
	606, 607, 664, 665, 666, 264, 609, 608, 610, 667,
	0, 611, 0, 0, 0, 0, 612, 613, 668, 614,
	615, 616, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 617, 0, 0,
	0, 0, 279, 280, 0, 281, 282, 283, 284, 285,
	286, 618, 619, 0, 287, 620, 288, 621, 0, 622,
	289, 290, 291, 292, 293, 294, 0, 0, 0, 295,
	623, 624, 625, 0, 296, 297, 626, 0, 0, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 0, 0, 0, 0, 0, 0, 0, 323, 324,
	325, 326, 327, 0, 328, 627, 628, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 629, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 630, 631, 359, 0, 267,
	0, 0, 0, 0, 0, 360, 361, 362, 632, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 0, 366,
	367, 633, 634, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 635, 0, 636, 378, 0, 379,
	380, 381, 382, 383, 2162, 638, 639, 462, 0, 384,
	385, 0, 386, 387, 388, 389, 390, 0, 0, 0,
	268, 391, 392, 393, 395, 0, 0, 394, 640, 641,
	0, 642, 0, 396, 397, 0, 643, 0, 398, 399,
	400, 0, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 644, 0,
	412, 413, 0, 0, 414, 0, 0, 0, 415, 416,
	419, 0, 0, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 0, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 0, 458, 448, 0, 269,
	0, 459, 460, 0, 645, 461, 646, 463, 464, 0,
	0, 465, 0, 0, 1210, 467, 468, 469, 0, 0,
	470, 471, 647, 0, 472, 0, 648, 473, 474, 466,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 649, 485, 486, 487, 650, 488, 489, 490, 651,
	491, 652, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 653, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 0, 524, 525, 526, 527,
	654, 528, 0, 529, 530, 536, 537, 531, 532, 538,
	539, 540, 541, 542, 0, 544, 545, 543, 546, 547,
	548, 0, 549, 550, 533, 534, 551, 552, 0, 553,
	554, 555, 556, 557, 558, 655, 0, 559, 0, 560,
	561, 562, 564, 535, 565, 570, 571, 656, 566, 567,
	568, 569, 657, 573, 574, 0, 575, 576, 0, 572,
	563, 0, 577, 578, 579, 580, 581, 582, 583, 353,
	584, 0, 585, 658, 659, 660, 661, 0, 594, 0,
	586, 587, 588, 662, 589, 663, 0, 590, 591, 592,
	593, 0, 595, 596, 0, 0, 597, 598, 599, 601,
	602, 600, 603, 0, 604, 0, 0, 605, 606, 607,
	664, 665, 666, 0, 609, 608, 610, 667, 1548, 611,
	264, 0, 0, 0, 612, 613, 668, 614, 615, 616,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 617, 0, 0, 0, 0, 279, 280, 0,
	281, 282, 283, 284, 285, 286, 618, 619, 0, 287,
	620, 288, 621, 0, 622, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 623, 624, 625, 0, 296,
	297, 626, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 326, 327, 0, 328,
	627, 628, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 629,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	630, 631, 359, 0, 267, 0, 0, 0, 0, 0,
	360, 361, 362, 632, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 0, 366, 367, 633, 634, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 635,
	0, 636, 378, 0, 379, 380, 381, 382, 383, 1547,
	638, 639, 462, 0, 384, 385, 0, 386, 387, 388,
	389, 390, 0, 0, 0, 268, 391, 392, 393, 395,
	0, 0, 394, 640, 641, 0, 642, 0, 396, 397,
	0, 643, 0, 398, 399, 400, 0, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 644, 0, 412, 413, 0, 0, 414,
	0, 0, 0, 415, 416, 419, 0, 0, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 0, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	0, 458, 448, 0, 269, 0, 459, 460, 0, 645,
	461, 646, 463, 464, 0, 0, 465, 0, 0, 0,
	467, 468, 469, 0, 0, 470, 471, 647, 0, 472,
	0, 648, 473, 474, 466, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 649, 485, 486, 487,
	650, 488, 489, 490, 651, 491, 652, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	653, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	0, 524, 525, 526, 527, 654, 528, 0, 529, 530,
	536, 537, 531, 532, 538, 539, 540, 541, 542, 0,
	544, 545, 543, 546, 547, 548, 0, 549, 550, 533,
	534, 551, 552, 0, 553, 554, 555, 556, 557, 558,
	655, 0, 559, 0, 560, 561, 562, 564, 535, 565,
	570, 571, 656, 566, 567, 568, 569, 657, 573, 574,
	0, 575, 576, 0, 572, 563, 0, 577, 578, 579,
	580, 581, 582, 583, 353, 584, 0, 585, 658, 659,
	660, 661, 0, 594, 0, 586, 587, 588, 662, 589,
	663, 0, 590, 591, 592, 593, 0, 595, 596, 0,
	0, 597, 598, 599, 601, 602, 600, 603, 0, 604,
	0, 0, 605, 606, 607, 664, 665, 666, 0, 609,
	608, 610, 667, 1463, 611, 264, 0, 0, 0, 612,
	613, 668, 614, 615, 616, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 617, 0, 0,
	0, 0, 279, 280, 0, 281, 282, 283, 284, 285,
	286, 618, 619, 0, 287, 620, 288, 621, 0, 622,
	289, 290, 291, 292, 293, 294, 0, 0, 0, 295,
	623, 624, 625, 0, 296, 297, 626, 0, 0, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 0, 0, 0, 0, 0, 0, 0, 323, 324,
	325, 326, 327, 0, 328, 627, 628, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 629, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 630, 631, 359, 0, 267,
	0, 0, 0, 0, 0, 360, 361, 362, 632, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 0, 366,
	367, 633, 634, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 635, 0, 636, 378, 0, 379,
	380, 381, 382, 383, 637, 638, 639, 462, 0, 384,
	385, 0, 386, 387, 388, 389, 390, 0, 0, 0,
	268, 391, 392, 393, 395, 0, 0, 394, 640, 641,
	0, 642, 0, 396, 397, 0, 643, 0, 398, 399,
	400, 0, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 644, 0,
	412, 413, 0, 0, 414, 0, 0, 0, 415, 416,
	419, 0, 0, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 0, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 0, 458, 448, 0, 269,
	0, 459, 460, 0, 645, 461, 646, 463, 464, 0,
	0, 465, 0, 0, 0, 467, 468, 469, 0, 0,
	470, 471, 647, 0, 472, 0, 648, 473, 474, 466,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 649, 485, 486, 487, 650, 488, 489, 490, 651,
	491, 652, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 653, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 0, 524, 525, 526, 527,
	654, 528, 0, 529, 530, 536, 537, 531, 532, 538,
	539, 540, 541, 542, 0, 544, 545, 543, 546, 547,
	548, 0, 549, 550, 533, 534, 551, 552, 0, 553,
	554, 555, 556, 557, 558, 655, 0, 559, 0, 560,
	561, 562, 564, 535, 565, 570, 571, 656, 566, 567,
	568, 569, 657, 573, 574, 0, 575, 576, 0, 572,
	563, 0, 577, 578, 579, 580, 581, 582, 583, 353,
	584, 0, 585, 658, 659, 660, 661, 0, 594, 0,
	586, 587, 588, 662, 589, 663, 0, 590, 591, 592,
	593, 0, 595, 596, 0, 0, 597, 598, 599, 601,
	602, 600, 603, 0, 604, 0, 0, 605, 606, 607,
	664, 665, 666, 0, 609, 608, 610, 667, 1456, 611,
	264, 0, 0, 0, 612, 613, 668, 614, 615, 616,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 617, 0, 0, 0, 0, 279, 280, 0,
	281, 282, 283, 284, 285, 286, 618, 619, 0, 287,
	620, 288, 621, 0, 622, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 623, 624, 625, 0, 296,
	297, 626, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 326, 327, 0, 328,
	627, 628, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 629,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	630, 631, 359, 0, 267, 0, 0, 0, 0, 0,
	360, 361, 362, 632, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 0, 366, 367, 633, 634, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 635,
	0, 636, 378, 0, 379, 380, 381, 382, 383, 1458,
	638, 639, 462, 0, 384, 385, 0, 386, 387, 388,
	389, 390, 0, 0, 0, 268, 391, 392, 393, 395,
	0, 0, 394, 640, 641, 0, 642, 0, 396, 397,
	0, 643, 0, 398, 399, 400, 0, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 644, 0, 412, 413, 0, 0, 414,
	0, 0, 0, 415, 416, 419, 0, 0, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 0, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	0, 458, 448, 0, 269, 0, 459, 460, 0, 645,
	461, 646, 463, 464, 0, 0, 465, 0, 0, 0,
	467, 468, 469, 0, 0, 470, 471, 647, 0, 472,
	0, 648, 473, 474, 466, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 649, 485, 486, 487,
	650, 488, 489, 490, 651, 491, 652, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	653, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	0, 524, 525, 526, 527, 654, 528, 0, 529, 530,
	536, 537, 531, 532, 538, 539, 540, 541, 542, 0,
	544, 545, 543, 546, 547, 548, 0, 549, 550, 533,
	534, 551, 552, 0, 553, 554, 555, 556, 557, 558,
	655, 0, 559, 0, 560, 561, 562, 564, 535, 565,
	570, 571, 656, 566, 567, 568, 569, 657, 573, 574,
	0, 575, 576, 0, 572, 563, 0, 577, 578, 579,
	580, 581, 582, 583, 353, 584, 0, 585, 658, 659,
	660, 661, 0, 594, 0, 586, 587, 588, 662, 589,
	663, 0, 590, 591, 592, 593, 0, 595, 596, 0,
	0, 597, 598, 599, 601, 602, 600, 603, 0, 604,
	0, 0, 605, 606, 607, 664, 665, 666, 0, 609,
	608, 610, 667, 1283, 611, 264, 0, 0, 0, 612,
	613, 668, 614, 615, 616, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 617, 0, 0,
	0, 0, 279, 280, 0, 281, 282, 283, 284, 285,
	286, 618, 619, 0, 287, 620, 288, 621, 0, 622,
	289, 290, 291, 292, 293, 294, 0, 0, 0, 295,
	623, 624, 625, 0, 296, 297, 626, 0, 0, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 0, 0, 0, 0, 0, 0, 0, 323, 324,
	325, 326, 327, 0, 328, 627, 628, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 629, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 630, 631, 359, 0, 267,
	0, 0, 0, 0, 0, 360, 361, 362, 632, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 0, 366,
	367, 633, 634, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 635, 0, 636, 378, 0, 379,
	380, 381, 382, 383, 1282, 638, 639, 462, 0, 384,
	385, 0, 386, 387, 388, 389, 390, 0, 0, 0,
	268, 391, 392, 393, 395, 0, 0, 394, 640, 641,
	0, 642, 0, 396, 397, 0, 643, 0, 398, 399,
	400, 0, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 644, 0,
	412, 413, 0, 0, 414, 0, 0, 0, 415, 416,
	419, 0, 0, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 0, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 0, 458, 448, 0, 269,
	0, 459, 460, 0, 645, 461, 646, 463, 464, 0,
	0, 465, 0, 0, 0, 467, 468, 469, 0, 0,
	470, 471, 647, 0, 472, 0, 648, 473, 474, 466,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 649, 485, 486, 487, 650, 488, 489, 490, 651,
	491, 652, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 653, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 0, 524, 525, 526, 527,
	654, 528, 0, 529, 530, 536, 537, 531, 532, 538,
	539, 540, 541, 542, 0, 544, 545, 543, 546, 547,
	548, 0, 549, 550, 533, 534, 551, 552, 0, 553,
	554, 555, 556, 557, 558, 655, 0, 559, 0, 560,
	561, 562, 564, 535, 565, 570, 571, 656, 566, 567,
	568, 569, 657, 573, 574, 0, 575, 576, 0, 572,
	563, 0, 577, 578, 579, 580, 581, 582, 583, 353,
	584, 0, 585, 658, 659, 660, 661, 0, 594, 0,
	586, 587, 588, 662, 589, 663, 0, 590, 591, 592,
	593, 0, 595, 596, 0, 0, 597, 598, 599, 601,
	602, 600, 603, 0, 604, 0, 0, 605, 606, 607,
	664, 665, 666, 0, 609, 608, 610, 667, 1273, 611,
	264, 0, 0, 0, 612, 613, 668, 614, 615, 616,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 617, 0, 0, 0, 0, 279, 280, 0,
	281, 282, 283, 284, 285, 286, 618, 619, 0, 287,
	620, 288, 621, 0, 622, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 623, 624, 625, 0, 296,
	297, 626, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 326, 327, 0, 328,
	627, 628, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 629,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	630, 631, 359, 0, 267, 0, 0, 0, 0, 0,
	360, 361, 362, 632, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 0, 366, 367, 633, 634, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 635,
	0, 636, 378, 0, 379, 380, 381, 382, 383, 1272,
	638, 639, 462, 0, 384, 385, 0, 386, 387, 388,
	389, 390, 0, 0, 0, 268, 391, 392, 393, 395,
	0, 0, 394, 640, 641, 0, 642, 0, 396, 397,
	0, 643, 0, 398, 399, 400, 0, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 644, 0, 412, 413, 0, 0, 414,
	0, 0, 0, 415, 416, 419, 0, 0, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 0, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	0, 458, 448, 0, 269, 0, 459, 460, 0, 645,
	461, 646, 463, 464, 0, 0, 465, 0, 0, 0,
	467, 468, 469, 0, 0, 470, 471, 647, 0, 472,
	0, 648, 473, 474, 466, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 649, 485, 486, 487,
	650, 488, 489, 490, 651, 491, 652, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	653, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	0, 524, 525, 526, 527, 654, 528, 0, 529, 530,
	536, 537, 531, 532, 538, 539, 540, 541, 542, 0,
	544, 545, 543, 546, 547, 548, 0, 549, 550, 533,
	534, 551, 552, 0, 553, 554, 555, 556, 557, 558,
	655, 0, 559, 0, 560, 561, 562, 564, 535, 565,
	570, 571, 656, 566, 567, 568, 569, 657, 573, 574,
	0, 575, 576, 0, 572, 563, 0, 577, 578, 579,
	580, 581, 582, 583, 353, 584, 0, 585, 658, 659,
	660, 661, 0, 594, 0, 586, 587, 588, 662, 589,
	663, 0, 590, 591, 592, 593, 0, 595, 596, 0,
	0, 597, 598, 599, 601, 602, 600, 603, 0, 604,
	0, 0, 605, 606, 607, 664, 665, 666, 0, 609,
	608, 610, 667, 1270, 611, 264, 0, 0, 0, 612,
	613, 668, 614, 615, 616, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 617, 0, 0,
	0, 0, 279, 280, 0, 281, 282, 283, 284, 285,
	286, 618, 619, 0, 287, 620, 288, 621, 0, 622,
	289, 290, 291, 292, 293, 294, 0, 0, 0, 295,
	623, 624, 625, 0, 296, 297, 626, 0, 0, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 0, 0, 0, 0, 0, 0, 0, 323, 324,
	325, 326, 327, 0, 328, 627, 628, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 629, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 630, 631, 359, 0, 267,
	0, 0, 0, 0, 0, 360, 361, 362, 632, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 0, 366,
	367, 633, 634, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 635, 0, 636, 378, 0, 379,
	380, 381, 382, 383, 1269, 638, 639, 462, 0, 384,
	385, 0, 386, 387, 388, 389, 390, 0, 0, 0,
	268, 391, 392, 393, 395, 0, 0, 394, 640, 641,
	0, 642, 0, 396, 397, 0, 643, 0, 398, 399,
	400, 0, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 644, 0,
	412, 413, 0, 0, 414, 0, 0, 0, 415, 416,
	419, 0, 0, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 0, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 0, 458, 448, 0, 269,
	0, 459, 460, 0, 645, 461, 646, 463, 464, 0,
	0, 465, 0, 0, 0, 467, 468, 469, 0, 0,
	470, 471, 647, 0, 472, 0, 648, 473, 474, 466,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 649, 485, 486, 487, 650, 488, 489, 490, 651,
	491, 652, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 653, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 0, 524, 525, 526, 527,
	654, 528, 0, 529, 530, 536, 537, 531, 532, 538,
	539, 540, 541, 542, 0, 544, 545, 543, 546, 547,
	548, 0, 549, 550, 533, 534, 551, 552, 0, 553,
	554, 555, 556, 557, 558, 655, 0, 559, 0, 560,
	561, 562, 564, 535, 565, 570, 571, 656, 566, 567,
	568, 569, 657, 573, 574, 0, 575, 576, 0, 572,
	563, 0, 577, 578, 579, 580, 581, 582, 583, 353,
	584, 0, 585, 658, 659, 660, 661, 0, 594, 0,
	586, 587, 588, 662, 589, 663, 0, 590, 591, 592,
	593, 0, 595, 596, 0, 0, 597, 598, 599, 601,
	602, 600, 603, 0, 604, 0, 0, 605, 606, 607,
	664, 665, 666, 0, 609, 608, 610, 667, 1265, 611,
	264, 0, 0, 0, 612, 613, 668, 614, 615, 616,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 617, 0, 0, 0, 0, 279, 280, 0,
	281, 282, 283, 284, 285, 286, 618, 619, 0, 287,
	620, 288, 621, 0, 622, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 623, 624, 625, 0, 296,
	297, 626, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 326, 327, 0, 328,
	627, 628, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 629,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	630, 631, 359, 0, 267, 0, 0, 0, 0, 0,
	360, 361, 362, 632, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 0, 366, 367, 633, 634, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 635,
	0, 636, 378, 0, 379, 380, 381, 382, 383, 1264,
	638, 639, 462, 0, 384, 385, 0, 386, 387, 388,
	389, 390, 0, 0, 0, 268, 391, 392, 393, 395,
	0, 0, 394, 640, 641, 0, 642, 0, 396, 397,
	0, 643, 0, 398, 399, 400, 0, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 644, 0, 412, 413, 0, 0, 414,
	0, 0, 0, 415, 416, 419, 0, 0, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 0, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	0, 458, 448, 0, 269, 0, 459, 460, 0, 645,
	461, 646, 463, 464, 0, 0, 465, 0, 0, 0,
	467, 468, 469, 0, 0, 470, 471, 647, 0, 472,
	0, 648, 473, 474, 466, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 649, 485, 486, 487,
	650, 488, 489, 490, 651, 491, 652, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	653, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	0, 524, 525, 526, 527, 654, 528, 0, 529, 530,
	536, 537, 531, 532, 538, 539, 540, 541, 542, 0,
	544, 545, 543, 546, 547, 548, 0, 549, 550, 533,
	534, 551, 552, 0, 553, 554, 555, 556, 557, 558,
	655, 0, 559, 0, 560, 561, 562, 564, 535, 565,
	570, 571, 656, 566, 567, 568, 569, 657, 573, 574,
	0, 575, 576, 0, 572, 563, 0, 577, 578, 579,
	580, 581, 582, 583, 353, 584, 0, 585, 658, 659,
	660, 661, 0, 594, 0, 586, 587, 588, 662, 589,
	663, 0, 590, 591, 592, 593, 0, 595, 596, 0,
	0, 597, 598, 599, 601, 602, 600, 603, 0, 604,
	0, 0, 605, 606, 607, 664, 665, 666, 0, 609,
	608, 610, 667, 670, 611, 264, 0, 0, 0, 612,
	613, 668, 614, 615, 616, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 617, 0, 0,
	0, 0, 279, 280, 0, 281, 282, 283, 284, 285,
	286, 618, 619, 0, 287, 620, 288, 621, 0, 622,
	289, 290, 291, 292, 293, 294, 0, 0, 0, 295,
	623, 624, 625, 0, 296, 297, 626, 0, 0, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 0, 0, 0, 0, 0, 0, 0, 323, 324,
	325, 326, 327, 0, 328, 627, 628, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 629, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 630, 631, 359, 0, 267,
	0, 0, 0, 0, 0, 360, 361, 362, 632, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 0, 366,
	367, 633, 634, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 635, 0, 636, 378, 0, 379,
	380, 381, 382, 383, 637, 638, 639, 462, 0, 384,
	385, 0, 386, 387, 388, 389, 390, 0, 0, 0,
	268, 391, 392, 393, 395, 0, 0, 394, 640, 641,
	0, 642, 0, 396, 397, 0, 643, 0, 398, 399,
	400, 0, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 644, 0,
	412, 413, 0, 0, 414, 0, 0, 0, 415, 416,
	419, 0, 0, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 0, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 0, 458, 448, 0, 269,
	0, 459, 460, 0, 645, 461, 646, 463, 464, 0,
	0, 465, 0, 0, 0, 467, 468, 469, 0, 0,
	470, 471, 647, 0, 472, 0, 648, 473, 474, 466,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 649, 485, 486, 487, 650, 488, 489, 490, 651,
	491, 652, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 653, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 0, 524, 525, 526, 527,
	654, 528, 0, 529, 530, 536, 537, 531, 532, 538,
	539, 540, 541, 542, 0, 544, 545, 543, 546, 547,
	548, 0, 549, 550, 533, 534, 551, 552, 0, 553,
	554, 555, 556, 557, 558, 655, 0, 559, 0, 560,
	561, 562, 564, 535, 565, 570, 571, 656, 566, 567,
	568, 569, 657, 573, 574, 0, 575, 576, 0, 572,
	563, 0, 577, 578, 579, 580, 581, 582, 583, 353,
	584, 0, 585, 658, 659, 660, 661, 0, 594, 0,
	586, 587, 588, 662, 589, 663, 0, 590, 591, 592,
	593, 0, 595, 596, 0, 0, 597, 598, 599, 601,
	602, 600, 603, 0, 604, 0, 0, 605, 606, 607,
	664, 665, 666, 0, 609, 608, 610, 667, 255, 611,
	264, 0, 0, 0, 612, 613, 668, 614, 615, 616,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 617, 0, 0, 0, 0, 279, 280, 0,
	281, 282, 283, 284, 285, 286, 618, 619, 0, 287,
	620, 288, 621, 0, 622, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 623, 624, 625, 0, 296,
	297, 626, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 326, 327, 0, 328,
	627, 628, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 629,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	630, 631, 359, 0, 267, 0, 0, 0, 0, 0,
	360, 361, 362, 632, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 0, 366, 367, 633, 634, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 635,
	0, 636, 378, 0, 379, 380, 381, 382, 383, 637,
	638, 639, 462, 0, 384, 385, 0, 386, 387, 388,
	389, 390, 0, 0, 0, 268, 391, 392, 393, 395,
	0, 0, 394, 640, 641, 0, 642, 0, 396, 397,
	0, 643, 0, 398, 399, 400, 0, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 644, 0, 412, 413, 0, 0, 414,
	0, 0, 0, 415, 416, 419, 0, 0, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 0, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	0, 458, 448, 0, 269, 0, 459, 460, 0, 645,
	461, 646, 463, 464, 0, 0, 465, 0, 0, 0,
	467, 468, 469, 0, 0, 470, 471, 647, 0, 472,
	0, 648, 473, 474, 466, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 649, 485, 486, 487,
	650, 488, 489, 490, 651, 491, 652, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	653, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	0, 524, 525, 526, 527, 654, 528, 0, 529, 530,
	536, 537, 531, 532, 538, 539, 540, 541, 542, 0,
	544, 545, 543, 546, 547, 548, 0, 549, 550, 533,
	534, 551, 552, 0, 553, 554, 555, 556, 557, 558,
	655, 0, 559, 0, 560, 561, 562, 564, 535, 565,
	570, 571, 656, 566, 567, 568, 569, 657, 573, 574,
	0, 575, 576, 0, 572, 563, 0, 577, 578, 579,
	580, 581, 582, 583, 353, 584, 0, 585, 658, 659,
	660, 661, 0, 594, 0, 586, 587, 588, 662, 589,
	663, 0, 590, 591, 592, 593, 0, 595, 596, 0,
	0, 597, 598, 599, 601, 602, 600, 603, 0, 604,
	0, 0, 605, 606, 607, 664, 665, 666, 264, 609,
	608, 610, 667, 0, 611, 0, 0, 0, 0, 612,
	613, 668, 614, 615, 616, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	617, 0, 0, 0, 0, 279, 280, 0, 281, 282,
	283, 284, 285, 286, 618, 619, 0, 287, 620, 288,
	621, 0, 622, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 623, 624, 625, 0, 296, 297, 626,
	0, 0, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 326, 327, 0, 328, 627, 628,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 629, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 630, 631,
	359, 0, 267, 0, 0, 0, 0, 0, 360, 361,
	362, 632, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 0, 366, 367, 633, 634, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 635, 0, 636,
	378, 0, 379, 380, 381, 382, 383, 637, 638, 639,
	462, 0, 384, 385, 0, 386, 387, 388, 389, 390,
	0, 0, 0, 268, 391, 392, 393, 395, 0, 0,
	394, 640, 641, 0, 642, 0, 396, 397, 0, 643,
	0, 398, 399, 400, 0, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 644, 0, 412, 413, 0, 0, 414, 0, 0,
	0, 415, 416, 419, 0, 0, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 0, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 0, 458,
	448, 0, 269, 0, 459, 460, 0, 645, 461, 646,
	463, 464, 0, 0, 465, 0, 0, 0, 467, 468,
	469, 0, 0, 470, 471, 647, 0, 472, 0, 648,
	473, 474, 466, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 649, 485, 486, 487, 650, 488,
	489, 490, 651, 491, 652, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 653, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 0, 524,
	525, 526, 527, 654, 528, 0, 529, 530, 536, 537,
	531, 532, 538, 539, 540, 541, 542, 0, 544, 545,
	543, 546, 547, 548, 0, 549, 550, 533, 534, 551,
	552, 0, 553, 554, 555, 556, 557, 558, 655, 0,
	559, 0, 560, 561, 562, 564, 535, 565, 570, 571,
	656, 566, 567, 568, 569, 657, 573, 574, 0, 575,
	576, 0, 572, 563, 0, 577, 578, 579, 580, 581,
	582, 583, 353, 584, 0, 585, 658, 659, 660, 661,
	0, 594, 0, 586, 587, 588, 662, 589, 663, 0,
	590, 591, 592, 593, 0, 595, 596, 0, 0, 597,
	598, 599, 601, 602, 600, 603, 0, 604, 0, 0,
	605, 606, 607, 664, 665, 666, 264, 609, 608, 610,
	667, 0, 611, 0, 0, 0, 0, 612, 613, 668,
	614, 615, 616, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 617, 0,
	0, 0, 0, 279, 280, 0, 281, 282, 283, 284,
	285, 286, 618, 619, 0, 287, 620, 288, 621, 0,
	622, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 623, 624, 625, 0, 296, 297, 626, 0, 0,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 692, 317, 318, 319, 0, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 326, 327, 0, 328, 627, 628, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 629, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 630, 631, 359, 0,
	0, 0, 0, 0, 0, 0, 360, 361, 362, 632,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 0,
	366, 367, 633, 634, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 693, 377, 635, 0, 636, 378, 0,
	379, 380, 381, 382, 383, 637, 638, 639, 462, 0,
	384, 385, 0, 386, 387, 388, 389, 390, 0, 0,
	0, 0, 391, 392, 393, 395, 0, 0, 394, 640,
	641, 0, 642, 0, 396, 397, 0, 643, 0, 398,
	399, 400, 0, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 644,
	0, 412, 413, 0, 0, 414, 0, 0, 0, 415,
	416, 419, 0, 0, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 0, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 0, 458, 448, 0,
	0, 0, 459, 460, 0, 645, 461, 646, 463, 464,
	0, 0, 465, 0, 0, 0, 467, 468, 469, 0,
	0, 470, 471, 647, 0, 472, 0, 648, 473, 474,
	466, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 649, 485, 486, 487, 650, 488, 489, 490,
	651, 491, 652, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 653, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 0, 524, 525, 526,
	527, 654, 528, 0, 529, 530, 536, 537, 531, 532,
	538, 539, 540, 541, 542, 694, 544, 545, 543, 546,
	547, 548, 0, 549, 550, 533, 534, 551, 552, 0,
	553, 554, 555, 556, 557, 558, 655, 0, 559, 0,
	560, 561, 562, 564, 535, 565, 570, 571, 656, 566,
	567, 568, 569, 657, 573, 574, 0, 575, 576, 0,
	572, 563, 0, 577, 578, 579, 580, 581, 582, 583,
	353, 584, 0, 585, 658, 659, 660, 661, 0, 594,
	0, 586, 587, 588, 662, 589, 663, 0, 590, 591,
	592, 593, 0, 595, 596, 0, 0, 597, 598, 599,
	601, 602, 600, 603, 0, 604, 0, 0, 605, 606,
	607, 664, 665, 666, 264, 609, 608, 610, 667, 0,
	611, 0, 0, 0, 0, 612, 613, 668, 614, 615,
	616, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 617, 0, 0, 0,
	0, 279, 280, 0, 281, 282, 283, 284, 285, 286,
	618, 619, 0, 287, 620, 288, 621, 0, 622, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 623,
	624, 625, 0, 296, 297, 626, 0, 0, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 0, 323, 324, 325,
	2295, 327, 0, 328, 627, 628, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 629, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 630, 631, 359, 0, 267, 0,
	0, 0, 0, 0, 360, 361, 362, 632, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 0, 366, 367,
	633, 634, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 635, 0, 636, 378, 0, 379, 380,
	381, 382, 383, 637, 638, 639, 462, 0, 384, 385,
	0, 386, 387, 388, 389, 390, 0, 0, 0, 268,
	391, 392, 393, 395, 0, 0, 394, 640, 641, 0,
	642, 0, 396, 397, 0, 643, 0, 398, 399, 400,
	0, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 644, 0, 412,
	413, 0, 0, 414, 0, 0, 0, 415, 416, 419,
	0, 0, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 0, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 0, 458, 448, 0, 269, 0,
	459, 460, 0, 645, 461, 646, 463, 464, 0, 0,
	465, 0, 0, 0, 467, 468, 469, 0, 0, 470,
	471, 647, 0, 472, 0, 648, 473, 474, 466, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	649, 485, 486, 487, 650, 488, 489, 490, 651, 491,
	652, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 653, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 0, 524, 525, 526, 527, 654,
	528, 0, 529, 530, 536, 537, 531, 532, 538, 539,
	540, 541, 542, 0, 544, 545, 543, 546, 547, 548,
	0, 549, 550, 533, 534, 551, 552, 0, 553, 554,
	555, 556, 557, 558, 655, 0, 559, 0, 560, 561,
	562, 564, 535, 565, 570, 571, 656, 566, 567, 568,
	569, 657, 573, 574, 0, 575, 576, 0, 572, 563,
	0, 577, 578, 579, 580, 581, 582, 583, 353, 584,
	0, 585, 658, 659, 660, 661, 0, 594, 0, 586,
	587, 588, 662, 589, 663, 0, 590, 591, 592, 593,
	0, 595, 596, 0, 0, 597, 598, 599, 601, 602,
	600, 603, 0, 604, 0, 0, 605, 606, 607, 664,
	665, 666, 264, 609, 608, 610, 667, 0, 611, 0,
	0, 0, 0, 612, 613, 668, 614, 615, 616, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 617, 0, 0, 0, 0, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 618, 619,
	0, 287, 620, 288, 621, 0, 622, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 623, 624, 625,
	0, 296, 297, 626, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 2293, 327,
	0, 328, 627, 628, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 629, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 630, 631, 359, 0, 267, 0, 0, 0,
	0, 0, 360, 361, 362, 632, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 0, 366, 367, 633, 634,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 635, 0, 636, 378, 0, 379, 380, 381, 382,
	383, 637, 638, 639, 462, 0, 384, 385, 0, 386,
	387, 388, 389, 390, 0, 0, 0, 268, 391, 392,
	393, 395, 0, 0, 394, 640, 641, 0, 642, 0,
	396, 397, 0, 643, 0, 398, 399, 400, 0, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 644, 0, 412, 413, 0,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 0,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 0, 458, 448, 0, 269, 0, 459, 460,
	0, 645, 461, 646, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 647,
	0, 472, 0, 648, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 649, 485,
	486, 487, 650, 488, 489, 490, 651, 491, 652, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 653, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 0, 524, 525, 526, 527, 654, 528, 0,
	529, 530, 536, 537, 531, 532, 538, 539, 540, 541,
	542, 0, 544, 545, 543, 546, 547, 548, 0, 549,
	550, 533, 534, 551, 552, 0, 553, 554, 555, 556,
	557, 558, 655, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 656, 566, 567, 568, 569, 657,
	573, 574, 0, 575, 576, 0, 572, 563, 0, 577,
	578, 579, 580, 581, 582, 583, 353, 584, 0, 585,
	658, 659, 660, 661, 0, 594, 0, 586, 587, 588,
	662, 589, 663, 0, 590, 591, 592, 593, 0, 595,
	596, 0, 0, 597, 598, 599, 601, 602, 600, 603,
	0, 604, 0, 0, 605, 606, 607, 664, 665, 666,
	264, 609, 608, 610, 667, 0, 611, 0, 0, 0,
	0, 612, 613, 668, 614, 615, 616, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 617, 0, 0, 0, 0, 279, 280, 0,
	281, 282, 283, 284, 285, 286, 618, 619, 0, 287,
	620, 288, 621, 0, 622, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 623, 624, 625, 0, 296,
	297, 626, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 2291, 327, 0, 328,
	627, 628, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 629,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	630, 631, 359, 0, 267, 0, 0, 0, 0, 0,
	360, 361, 362, 632, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 0, 366, 367, 633, 634, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 635,
	0, 636, 378, 0, 379, 380, 381, 382, 383, 637,
	638, 639, 462, 0, 384, 385, 0, 386, 387, 388,
	389, 390, 0, 0, 0, 268, 391, 392, 393, 395,
	0, 0, 394, 640, 641, 0, 642, 0, 396, 397,
	0, 643, 0, 398, 399, 400, 0, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 644, 0, 412, 413, 0, 0, 414,
	0, 0, 0, 415, 416, 419, 0, 0, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 0, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	0, 458, 448, 0, 269, 0, 459, 460, 0, 645,
	461, 646, 463, 464, 0, 0, 465, 0, 0, 0,
	467, 468, 469, 0, 0, 470, 471, 647, 0, 472,
	0, 648, 473, 474, 466, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 649, 485, 486, 487,
	650, 488, 489, 490, 651, 491, 652, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	653, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	0, 524, 525, 526, 527, 654, 528, 0, 529, 530,
	536, 537, 531, 532, 538, 539, 540, 541, 542, 0,
	544, 545, 543, 546, 547, 548, 0, 549, 550, 533,
	534, 551, 552, 0, 553, 554, 555, 556, 557, 558,
	655, 0, 559, 0, 560, 561, 562, 564, 535, 565,
	570, 571, 656, 566, 567, 568, 569, 657, 573, 574,
	0, 575, 576, 0, 572, 563, 0, 577, 578, 579,
	580, 581, 582, 583, 353, 584, 0, 585, 658, 659,
	660, 661, 0, 594, 0, 586, 587, 588, 662, 589,
	663, 0, 590, 591, 592, 593, 0, 595, 596, 0,
	0, 597, 598, 599, 601, 602, 600, 603, 0, 604,
	0, 0, 605, 606, 607, 664, 665, 666, 264, 609,
	608, 610, 667, 0, 611, 0, 0, 0, 0, 612,
	613, 668, 614, 615, 616, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	617, 0, 0, 0, 0, 279, 280, 0, 281, 282,
	283, 284, 285, 286, 618, 619, 0, 287, 620, 288,
	621, 0, 622, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 623, 624, 625, 0, 296, 297, 626,
	0, 0, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 326, 327, 0, 328, 627, 628,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 629, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 630, 631,
	359, 0, 267, 0, 0, 0, 0, 0, 360, 361,
	362, 632, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 0, 366, 367, 633, 634, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 635, 0, 636,
	378, 0, 379, 380, 381, 382, 383, 2212, 638, 639,
	462, 0, 384, 385, 0, 386, 387, 388, 389, 390,
	0, 0, 0, 268, 391, 392, 393, 395, 0, 0,
	394, 640, 641, 0, 642, 0, 396, 397, 0, 643,
	0, 398, 399, 400, 0, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 644, 0, 412, 413, 0, 0, 414, 0, 0,
	0, 415, 416, 419, 0, 0, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 0, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 0, 458,
	448, 0, 269, 0, 459, 460, 0, 645, 461, 646,
	463, 464, 0, 0, 465, 0, 0, 0, 467, 468,
	469, 0, 0, 470, 471, 647, 0, 472, 0, 648,
	473, 474, 466, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 649, 485, 486, 487, 650, 488,
	489, 490, 651, 491, 652, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 653, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 0, 524,
	525, 526, 527, 654, 528, 0, 529, 530, 536, 537,
	531, 532, 538, 539, 540, 541, 542, 0, 544, 545,
	543, 546, 547, 548, 0, 549, 550, 533, 534, 551,
	552, 0, 553, 554, 555, 556, 557, 558, 655, 0,
	559, 0, 560, 561, 562, 564, 535, 565, 570, 571,
	656, 566, 567, 568, 569, 657, 573, 574, 0, 575,
	576, 0, 572, 563, 0, 577, 578, 579, 580, 581,
	582, 583, 353, 584, 0, 585, 658, 659, 660, 661,
	0, 594, 0, 586, 587, 588, 662, 589, 663, 0,
	590, 591, 592, 593, 0, 595, 596, 0, 0, 597,
	598, 599, 601, 602, 600, 603, 0, 604, 0, 0,
	605, 606, 607, 664, 665, 666, 264, 609, 608, 610,
	667, 0, 611, 0, 0, 0, 0, 612, 613, 668,
	614, 615, 616, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 617, 0,
	0, 0, 0, 279, 280, 0, 281, 282, 283, 284,
	285, 286, 618, 619, 0, 287, 620, 288, 621, 0,
	622, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 623, 624, 625, 0, 296, 297, 626, 0, 0,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 326, 327, 0, 328, 627, 628, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 629, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 630, 631, 359, 0,
	267, 0, 0, 0, 0, 0, 360, 361, 362, 632,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 0,
	366, 367, 633, 634, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 635, 0, 636, 378, 0,
	379, 380, 381, 382, 383, 2021, 638, 639, 462, 0,
	384, 385, 0, 386, 387, 388, 389, 390, 0, 0,
	0, 268, 391, 392, 393, 395, 0, 0, 394, 640,
	641, 0, 642, 0, 396, 397, 0, 643, 0, 398,
	399, 400, 0, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 644,
	0, 412, 413, 0, 0, 414, 0, 0, 0, 415,
	416, 419, 0, 0, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 0, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 0, 458, 448, 0,
	269, 0, 459, 460, 0, 645, 461, 646, 463, 464,
	0, 0, 465, 0, 0, 0, 467, 468, 469, 0,
	0, 470, 471, 647, 0, 472, 0, 648, 473, 474,
	466, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 649, 485, 486, 487, 650, 488, 489, 490,
	651, 491, 652, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 653, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 0, 524, 525, 526,
	527, 654, 528, 0, 529, 530, 536, 537, 531, 532,
	538, 539, 540, 541, 542, 0, 544, 545, 543, 546,
	547, 548, 0, 549, 550, 533, 534, 551, 552, 0,
	553, 554, 555, 556, 557, 558, 655, 0, 559, 0,
	560, 561, 562, 564, 535, 565, 570, 571, 656, 566,
	567, 568, 569, 657, 573, 574, 0, 575, 576, 0,
	572, 563, 0, 577, 578, 579, 580, 581, 582, 583,
	353, 584, 0, 585, 658, 659, 660, 661, 0, 594,
	0, 586, 587, 588, 662, 589, 663, 0, 590, 591,
	592, 593, 0, 595, 596, 0, 0, 597, 598, 599,
	601, 602, 600, 603, 0, 604, 0, 0, 605, 606,
	607, 664, 665, 666, 264, 609, 608, 610, 667, 0,
	611, 0, 0, 0, 0, 612, 613, 668, 614, 615,
	616, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 617, 0, 0, 0,
	0, 279, 280, 0, 281, 282, 283, 284, 285, 286,
	618, 619, 0, 287, 620, 288, 621, 0, 622, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 623,
	624, 625, 0, 296, 297, 626, 0, 0, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 0, 323, 324, 325,
	326, 327, 0, 328, 627, 628, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 629, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 630, 631, 359, 0, 267, 0,
	0, 0, 0, 0, 360, 361, 362, 632, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 0, 366, 367,
	633, 634, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 635, 0, 636, 378, 0, 379, 380,
	381, 382, 383, 2015, 638, 639, 462, 0, 384, 385,
	0, 386, 387, 388, 389, 390, 0, 0, 0, 268,
	391, 392, 393, 395, 0, 0, 394, 640, 641, 0,
	642, 0, 396, 397, 0, 643, 0, 398, 399, 400,
	0, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 644, 0, 412,
	413, 0, 0, 414, 0, 0, 0, 415, 416, 419,
	0, 0, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 0, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 0, 458, 448, 0, 269, 0,
	459, 460, 0, 645, 461, 646, 463, 464, 0, 0,
	465, 0, 0, 0, 467, 468, 469, 0, 0, 470,
	471, 647, 0, 472, 0, 648, 473, 474, 466, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	649, 485, 486, 487, 650, 488, 489, 490, 651, 491,
	652, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 653, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 0, 524, 525, 526, 527, 654,
	528, 0, 529, 530, 536, 537, 531, 532, 538, 539,
	540, 541, 542, 0, 544, 545, 543, 546, 547, 548,
	0, 549, 550, 533, 534, 551, 552, 0, 553, 554,
	555, 556, 557, 558, 655, 0, 559, 0, 560, 561,
	562, 564, 535, 565, 570, 571, 656, 566, 567, 568,
	569, 657, 573, 574, 0, 575, 576, 0, 572, 563,
	0, 577, 578, 579, 580, 581, 582, 583, 353, 584,
	0, 585, 658, 659, 660, 661, 0, 594, 0, 586,
	587, 588, 662, 589, 663, 0, 590, 591, 592, 593,
	0, 595, 596, 0, 0, 597, 598, 599, 601, 602,
	600, 603, 0, 604, 0, 0, 605, 606, 607, 664,
	665, 666, 0, 609, 608, 610, 667, 871, 611, 264,
	0, 0, 0, 612, 613, 668, 614, 615, 616, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 617, 0, 0, 0, 0, 279, 280, 0, 281,
	282, 283, 284, 285, 286, 618, 619, 0, 287, 620,
	288, 621, 0, 622, 289, 290, 291, 292, 293, 294,
	0, 0, 0, 295, 623, 624, 625, 0, 296, 297,
	626, 0, 0, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 322, 0, 0, 0, 0, 0,
	0, 0, 323, 324, 325, 326, 327, 0, 328, 627,
	628, 0, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 339, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 629, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 630,
	631, 359, 0, 0, 0, 0, 0, 0, 0, 360,
	361, 362, 632, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 0, 366, 367, 633, 634, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 635, 0,
	636, 378, 0, 379, 380, 381, 382, 383, 637, 638,
	639, 462, 0, 384, 385, 0, 386, 387, 388, 389,
	390, 0, 0, 0, 0, 391, 392, 393, 395, 0,
	0, 394, 640, 641, 0, 642, 870, 396, 397, 0,
	643, 0, 398, 399, 400, 0, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 644, 0, 412, 413, 0, 0, 414, 0,
	0, 0, 415, 416, 419, 0, 0, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 0, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 0,
	458, 448, 0, 0, 0, 459, 460, 0, 645, 461,
	646, 463, 464, 0, 0, 465, 0, 0, 0, 467,
	468, 469, 0, 0, 470, 471, 647, 0, 472, 0,
	648, 473, 474, 466, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 649, 485, 486, 487, 650,
	488, 489, 490, 651, 491, 652, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 653,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 0,
	524, 525, 526, 527, 654, 528, 0, 529, 530, 536,
	537, 531, 532, 538, 539, 540, 541, 542, 0, 544,
	545, 543, 546, 547, 548, 0, 549, 550, 533, 534,
	551, 552, 0, 553, 554, 555, 556, 557, 558, 655,
	0, 559, 0, 560, 561, 562, 564, 535, 565, 570,
	571, 656, 566, 567, 568, 569, 657, 573, 574, 0,
	575, 576, 0, 572, 563, 869, 577, 578, 579, 580,
	581, 582, 583, 353, 584, 0, 585, 658, 659, 660,
	661, 0, 594, 0, 586, 587, 588, 662, 589, 663,
	0, 590, 591, 592, 593, 0, 595, 596, 0, 0,
	597, 598, 599, 601, 602, 600, 603, 0, 604, 0,
	0, 605, 606, 607, 664, 665, 666, 264, 609, 608,
	610, 667, 0, 611, 0, 0, 0, 0, 612, 613,
	668, 614, 615, 616, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 617,
	0, 0, 0, 0, 279, 280, 0, 281, 282, 283,
	284, 285, 286, 618, 619, 0, 287, 620, 288, 621,
	0, 622, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 623, 624, 625, 0, 296, 297, 626, 0,
	0, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 0, 328, 627, 628, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 629, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 630, 631, 359,
	0, 2955, 0, 0, 0, 0, 0, 360, 361, 362,
	632, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	0, 366, 367, 633, 634, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 635, 0, 636, 378,
	0, 379, 380, 381, 382, 383, 637, 638, 639, 462,
	0, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	0, 0, 0, 391, 392, 393, 395, 0, 0, 394,
	640, 641, 0, 642, 0, 396, 397, 0, 643, 0,
	398, 399, 400, 0, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	644, 0, 412, 413, 0, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 0, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 0, 458, 448,
	0, 0, 0, 459, 460, 0, 645, 461, 646, 463,
	464, 0, 0, 465, 0, 0, 0, 467, 468, 469,
	0, 0, 470, 471, 647, 0, 472, 0, 648, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 649, 485, 486, 487, 650, 488, 489,
	490, 651, 491, 652, 492, 493, 4048, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 653, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 0, 524, 525,
	526, 527, 654, 528, 0, 529, 530, 536, 537, 531,
	532, 538, 539, 540, 541, 542, 0, 544, 545, 543,
	546, 547, 548, 0, 549, 550, 533, 534, 551, 552,
	0, 553, 554, 555, 556, 557, 558, 655, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 656,
	566, 567, 568, 569, 657, 573, 574, 0, 575, 576,
	0, 572, 563, 0, 577, 578, 579, 580, 581, 582,
	583, 353, 584, 0, 585, 658, 659, 660, 661, 0,
	594, 0, 586, 587, 588, 662, 589, 663, 0, 590,
	591, 592, 593, 0, 595, 596, 0, 0, 597, 598,
	599, 601, 602, 600, 603, 0, 604, 0, 0, 605,
	606, 607, 664, 665, 666, 0, 609, 608, 610, 667,
	757, 611, 264, 0, 0, 0, 612, 613, 668, 614,
	615, 616, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 617, 0, 0, 0, 0, 279,
	280, 1320, 281, 282, 283, 284, 285, 286, 618, 619,
	0, 287, 620, 288, 621, 0, 622, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 623, 624, 1318,
	0, 296, 297, 626, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 627, 628, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 629, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 630, 631, 359, 0, 0, 0, 0, 0,
	0, 0, 360, 361, 362, 632, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 0, 366, 367, 633, 634,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 635, 0, 636, 378, 0, 379, 380, 381, 382,
	383, 637, 638, 639, 462, 0, 384, 385, 0, 386,
	387, 388, 389, 390, 0, 0, 0, 0, 391, 392,
	393, 395, 0, 0, 394, 640, 641, 0, 642, 0,
	396, 397, 0, 643, 0, 398, 399, 400, 0, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 644, 0, 412, 413, 0,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 758, 0,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 0, 458, 448, 0, 0, 0, 459, 460,
	0, 645, 461, 646, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 647,
	0, 472, 0, 648, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 649, 485,
	486, 487, 650, 488, 489, 490, 651, 491, 652, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 653, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 0, 524, 525, 526, 527, 654, 528, 0,
	529, 530, 536, 537, 531, 532, 754, 539, 540, 541,
	542, 0, 544, 545, 543, 546, 1321, 548, 0, 549,
	550, 533, 534, 551, 552, 0, 553, 554, 555, 556,
	557, 558, 655, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 656, 566, 567, 568, 569, 657,
	573, 574, 0, 575, 576, 0, 572, 563, 0, 577,
	578, 579, 580, 581, 582, 583, 353, 584, 0, 585,
	753, 659, 660, 661, 0, 594, 0, 586, 587, 588,
	662, 589, 663, 0, 590, 591, 592, 593, 0, 595,
	596, 0, 0, 597, 598, 599, 601, 602, 600, 603,
	0, 604, 0, 0, 605, 606, 607, 664, 665, 666,
	0, 609, 608, 610, 667, 757, 611, 264, 0, 0,
	0, 612, 613, 668, 614, 615, 616, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 617,
	0, 0, 0, 0, 279, 280, 1320, 281, 282, 283,
	284, 285, 286, 618, 619, 0, 287, 620, 288, 621,
	0, 622, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 623, 624, 1318, 0, 296, 297, 626, 0,
	0, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 0, 328, 627, 628, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 629, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 630, 631, 359,
	0, 0, 0, 0, 0, 0, 0, 360, 361, 362,
	632, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	0, 366, 367, 633, 634, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 635, 0, 636, 378,
	0, 379, 380, 381, 382, 383, 637, 638, 639, 462,
	0, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	0, 0, 0, 391, 392, 393, 395, 0, 0, 394,
	640, 641, 0, 642, 0, 396, 397, 0, 643, 0,
	398, 399, 400, 0, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	644, 0, 412, 413, 0, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 758, 0, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 0, 458, 448,
	0, 0, 0, 459, 460, 0, 645, 461, 646, 463,
	464, 0, 0, 465, 0, 0, 0, 467, 468, 469,
	0, 0, 470, 471, 647, 0, 472, 0, 648, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 649, 485, 486, 487, 650, 488, 489,
	490, 651, 491, 652, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 653, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 0, 524, 525,
	526, 527, 654, 528, 0, 529, 530, 536, 537, 531,
	532, 754, 539, 540, 541, 542, 0, 544, 545, 543,
	546, 1321, 548, 0, 549, 550, 533, 534, 551, 552,
	0, 553, 554, 555, 556, 557, 558, 655, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 656,
	566, 567, 568, 569, 657, 573, 574, 0, 575, 576,
	0, 572, 563, 0, 577, 578, 579, 580, 581, 582,
	583, 353, 584, 0, 585, 753, 659, 660, 661, 0,
	594, 0, 586, 1319, 588, 662, 589, 663, 0, 590,
	591, 592, 593, 0, 595, 596, 0, 0, 597, 598,
	599, 601, 602, 600, 603, 0, 604, 0, 0, 605,
	606, 607, 664, 665, 666, 0, 609, 608, 610, 667,
	679, 611, 264, 0, 0, 0, 612, 613, 668, 614,
	615, 616, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 678, 277, 278, 0,
	0, 0, 0, 0, 617, 0, 0, 0, 0, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 618, 619,
	0, 287, 620, 288, 621, 0, 622, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 623, 624, 625,
	0, 296, 297, 626, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 627, 628, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 629, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 630, 631, 359, 0, 0, 0, 0, 0,
	0, 0, 360, 361, 362, 632, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 0, 366, 367, 633, 634,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 635, 0, 636, 378, 0, 379, 380, 381, 382,
	383, 637, 638, 639, 462, 0, 384, 385, 0, 386,
	387, 388, 389, 390, 0, 0, 0, 0, 391, 392,
	393, 395, 0, 0, 394, 640, 641, 0, 642, 0,
	396, 397, 0, 643, 0, 398, 399, 400, 0, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 644, 0, 412, 413, 0,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 0,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 0, 458, 448, 0, 0, 0, 459, 460,
	0, 645, 461, 646, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 647,
	0, 472, 0, 648, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 649, 485,
	486, 487, 650, 488, 489, 490, 651, 491, 652, 677,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 653, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 0, 524, 525, 526, 527, 654, 528, 0,
	529, 530, 536, 537, 531, 532, 538, 539, 540, 541,
	542, 0, 544, 545, 543, 546, 547, 548, 0, 549,
	550, 533, 534, 551, 552, 0, 553, 554, 555, 556,
	557, 558, 655, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 656, 566, 567, 568, 569, 657,
	573, 574, 0, 575, 576, 0, 572, 563, 0, 577,
	578, 579, 580, 581, 582, 583, 353, 584, 0, 585,
	658, 659, 660, 661, 0, 594, 0, 586, 587, 588,
	662, 589, 663, 0, 590, 591, 592, 593, 0, 595,
	596, 0, 0, 597, 598, 599, 601, 602, 600, 603,
	0, 604, 0, 0, 605, 606, 607, 664, 665, 666,
	0, 609, 608, 610, 667, 0, 611, 264, 2942, 0,
	0, 612, 613, 668, 614, 615, 616, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 617,
	0, 0, 0, 0, 279, 280, 0, 281, 282, 283,
	284, 285, 286, 618, 619, 0, 287, 620, 288, 621,
	0, 622, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 623, 624, 625, 0, 296, 297, 626, 0,
	0, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 0, 328, 627, 628, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 629, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 630, 631, 359,
	0, 0, 0, 0, 0, 0, 0, 360, 361, 362,
	632, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	0, 366, 367, 633, 634, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 635, 0, 636, 378,
	0, 379, 380, 381, 382, 383, 637, 638, 639, 462,
	0, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	0, 0, 0, 391, 392, 393, 395, 0, 0, 394,
	640, 641, 0, 642, 0, 396, 397, 0, 643, 0,
	398, 399, 400, 0, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	644, 0, 412, 413, 0, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 0, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 0, 458, 448,
	0, 0, 0, 459, 460, 0, 645, 461, 646, 463,
	464, 0, 0, 465, 0, 0, 0, 467, 468, 469,
	0, 0, 470, 471, 647, 0, 472, 0, 648, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 649, 485, 486, 487, 650, 488, 489,
	490, 651, 491, 652, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 653, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 0, 524, 525,
	526, 527, 654, 528, 0, 529, 530, 536, 537, 531,
	532, 538, 539, 540, 541, 542, 0, 544, 545, 543,
	546, 547, 548, 0, 549, 550, 533, 534, 551, 552,
	0, 553, 554, 555, 556, 557, 558, 655, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 656,
	566, 567, 568, 569, 657, 573, 574, 0, 575, 576,
	0, 572, 563, 0, 577, 578, 579, 580, 581, 582,
	583, 353, 584, 0, 585, 658, 659, 660, 661, 0,
	594, 0, 586, 587, 588, 662, 589, 663, 0, 590,
	591, 592, 593, 0, 595, 596, 0, 0, 597, 598,
	599, 601, 602, 600, 603, 0, 604, 0, 0, 605,
	606, 607, 664, 665, 666, 0, 609, 608, 610, 667,
	0, 611, 264, 4058, 0, 0, 612, 613, 668, 614,
	615, 616, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 617, 0, 0, 0, 0, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 618, 619,
	0, 287, 620, 288, 621, 0, 622, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 623, 624, 625,
	0, 296, 297, 626, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 627, 628, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 629, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 630, 631, 359, 0, 0, 0, 0, 0,
	0, 0, 360, 361, 362, 632, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 0, 366, 367, 633, 634,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 635, 0, 636, 378, 0, 379, 380, 381, 382,
	383, 637, 638, 639, 462, 0, 384, 385, 0, 386,
	387, 388, 389, 390, 0, 0, 0, 0, 391, 392,
	393, 395, 0, 0, 394, 640, 641, 0, 642, 0,
	396, 397, 0, 643, 0, 398, 399, 400, 0, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 644, 0, 412, 413, 0,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 0,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 0, 458, 448, 0, 0, 0, 459, 460,
	0, 645, 461, 646, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 647,
	0, 472, 0, 648, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 649, 485,
	486, 487, 650, 488, 489, 490, 651, 491, 652, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 653, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 0, 524, 525, 526, 527, 654, 528, 0,
	529, 530, 536, 537, 531, 532, 538, 539, 540, 541,
	542, 0, 544, 545, 543, 546, 547, 548, 0, 549,
	550, 533, 534, 551, 552, 0, 553, 554, 555, 556,
	557, 558, 655, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 656, 566, 567, 568, 569, 657,
	573, 574, 0, 575, 576, 0, 572, 563, 0, 577,
	578, 579, 580, 581, 582, 583, 353, 584, 0, 585,
	658, 659, 660, 661, 0, 594, 0, 586, 587, 588,
	662, 589, 663, 0, 590, 591, 592, 593, 0, 595,
	596, 0, 0, 597, 598, 599, 601, 602, 600, 603,
	0, 604, 0, 0, 605, 606, 607, 664, 665, 666,
	264, 609, 608, 610, 667, 0, 611, 0, 0, 0,
	0, 612, 613, 668, 614, 615, 616, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 617, 0, 0, 0, 0, 279, 280, 0,
	281, 282, 283, 284, 285, 286, 618, 619, 0, 287,
	620, 288, 621, 0, 622, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 623, 624, 625, 0, 296,
	297, 626, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 326, 327, 0, 328,
	627, 628, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 629,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	630, 631, 359, 0, 0, 0, 0, 0, 0, 0,
	360, 361, 362, 632, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 0, 366, 367, 633, 634, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 635,
	0, 636, 378, 0, 379, 380, 381, 382, 383, 637,
	638, 639, 462, 0, 384, 385, 0, 386, 387, 388,
	389, 390, 0, 0, 0, 0, 391, 392, 393, 395,
	0, 0, 394, 640, 641, 0, 642, 0, 396, 397,
	0, 643, 0, 398, 399, 400, 0, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 644, 0, 412, 413, 0, 0, 414,
	0, 0, 0, 415, 416, 419, 0, 0, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 0, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	0, 458, 448, 0, 0, 0, 459, 460, 0, 645,
	461, 646, 463, 464, 0, 0, 465, 0, 0, 0,
	467, 468, 469, 0, 0, 470, 471, 647, 0, 472,
	0, 648, 473, 474, 466, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 649, 485, 486, 487,
	650, 488, 489, 490, 651, 491, 652, 492, 493, 4319,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	653, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	0, 524, 525, 526, 527, 654, 528, 0, 529, 530,
	536, 537, 531, 532, 538, 539, 540, 541, 542, 0,
	544, 545, 543, 546, 547, 548, 0, 549, 550, 533,
	534, 551, 552, 0, 553, 554, 555, 556, 557, 558,
	655, 0, 559, 0, 560, 561, 562, 564, 535, 565,
	570, 571, 656, 566, 567, 568, 569, 657, 573, 574,
	0, 575, 576, 0, 572, 563, 0, 577, 578, 579,
	580, 581, 582, 583, 353, 584, 0, 585, 658, 659,
	660, 661, 0, 594, 0, 586, 587, 588, 662, 589,
	663, 0, 590, 591, 592, 593, 0, 595, 596, 0,
	0, 597, 598, 599, 601, 602, 600, 603, 0, 604,
	0, 0, 605, 606, 607, 664, 665, 666, 264, 609,
	608, 610, 667, 0, 611, 0, 0, 0, 0, 612,
	613, 668, 614, 615, 616, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	617, 0, 0, 0, 0, 279, 280, 0, 281, 282,
	283, 284, 285, 286, 618, 619, 0, 287, 620, 288,
	621, 0, 622, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 623, 624, 625, 0, 296, 297, 626,
	0, 0, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 326, 327, 0, 328, 627, 628,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 629, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 630, 631,
	359, 0, 0, 0, 0, 0, 0, 0, 360, 361,
	362, 632, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 0, 366, 367, 633, 634, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 635, 0, 636,
	378, 0, 379, 380, 381, 382, 383, 637, 638, 639,
	462, 0, 384, 385, 0, 386, 387, 388, 389, 390,
	0, 0, 0, 0, 391, 392, 393, 395, 0, 0,
	394, 640, 641, 0, 642, 0, 396, 397, 0, 643,
	0, 398, 399, 400, 0, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 644, 0, 412, 413, 0, 0, 414, 0, 0,
	0, 415, 416, 419, 0, 0, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 0, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 0, 458,
	448, 0, 0, 0, 459, 460, 0, 645, 461, 646,
	463, 464, 0, 0, 465, 0, 0, 0, 467, 468,
	469, 0, 0, 470, 471, 647, 0, 472, 0, 648,
	473, 474, 466, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 649, 485, 486, 487, 650, 488,
	489, 490, 651, 491, 652, 492, 493, 3957, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 653, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 0, 524,
	525, 526, 527, 654, 528, 0, 529, 530, 536, 537,
	531, 532, 538, 539, 540, 541, 542, 0, 544, 545,
	543, 546, 547, 548, 0, 549, 550, 533, 534, 551,
	552, 0, 553, 554, 555, 556, 557, 558, 655, 0,
	559, 0, 560, 561, 562, 564, 535, 565, 570, 571,
	656, 566, 567, 568, 569, 657, 573, 574, 0, 575,
	576, 0, 572, 563, 0, 577, 578, 579, 580, 581,
	582, 583, 353, 584, 0, 585, 658, 659, 660, 661,
	0, 594, 0, 586, 587, 588, 662, 589, 663, 0,
	590, 591, 592, 593, 0, 595, 596, 0, 0, 597,
	598, 599, 601, 602, 600, 603, 0, 604, 0, 0,
	605, 606, 607, 664, 665, 666, 264, 609, 608, 610,
	667, 0, 611, 0, 0, 0, 0, 612, 613, 668,
	614, 615, 616, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 617, 0,
	0, 0, 0, 279, 280, 0, 281, 282, 283, 284,
	285, 286, 618, 619, 0, 287, 620, 288, 621, 0,
	622, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 623, 624, 625, 0, 296, 297, 626, 0, 0,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 326, 327, 0, 328, 627, 628, 3734, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 629, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 630, 631, 359, 0,
	0, 0, 0, 0, 0, 0, 360, 361, 362, 632,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 0,
	366, 367, 633, 634, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 635, 0, 636, 378, 0,
	379, 380, 381, 382, 383, 637, 638, 639, 462, 0,
	384, 385, 0, 386, 387, 388, 389, 390, 0, 0,
	0, 0, 391, 392, 393, 395, 0, 0, 394, 640,
	641, 0, 642, 0, 396, 397, 0, 643, 0, 398,
	399, 400, 0, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 644,
	0, 412, 413, 0, 0, 414, 0, 0, 0, 415,
	416, 419, 0, 0, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 0, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 0, 458, 448, 0,
	0, 0, 459, 460, 0, 645, 461, 646, 463, 464,
	0, 0, 465, 0, 0, 0, 467, 468, 469, 0,
	0, 470, 471, 647, 0, 472, 0, 648, 473, 474,
	466, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 649, 485, 486, 487, 650, 488, 489, 490,
	651, 491, 652, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 653, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 0, 524, 525, 526,
	527, 654, 528, 0, 529, 530, 536, 537, 531, 532,
	538, 539, 540, 541, 542, 0, 544, 545, 543, 546,
	547, 548, 0, 549, 550, 533, 534, 551, 552, 0,
	553, 554, 555, 556, 557, 558, 655, 0, 559, 0,
	560, 561, 562, 564, 535, 565, 570, 571, 656, 566,
	567, 568, 569, 657, 573, 574, 0, 575, 576, 0,
	572, 563, 0, 577, 578, 579, 580, 581, 582, 583,
	353, 584, 0, 585, 658, 659, 660, 661, 0, 594,
	0, 586, 587, 588, 662, 589, 663, 0, 590, 591,
	592, 593, 0, 595, 596, 0, 0, 597, 598, 599,
	601, 602, 600, 603, 0, 604, 0, 0, 605, 606,
	607, 664, 665, 666, 264, 609, 608, 610, 667, 0,
	611, 0, 0, 0, 0, 612, 613, 668, 614, 615,
	616, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 617, 0, 2635, 0,
	0, 279, 280, 0, 281, 282, 283, 284, 285, 286,
	618, 619, 0, 287, 620, 288, 621, 0, 622, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 623,
	624, 625, 0, 296, 297, 626, 0, 0, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 0, 323, 324, 325,
	326, 327, 0, 328, 627, 628, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 629, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 630, 631, 359, 0, 0, 0,
	0, 0, 0, 0, 360, 361, 362, 632, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 0, 366, 367,
	633, 634, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 635, 0, 636, 378, 0, 379, 380,
	381, 382, 383, 637, 638, 639, 462, 0, 384, 385,
	0, 386, 387, 388, 389, 390, 0, 0, 0, 0,
	391, 392, 393, 395, 0, 0, 394, 640, 641, 0,
	642, 0, 396, 397, 0, 643, 0, 398, 399, 400,
	0, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 644, 0, 412,
	413, 0, 0, 414, 0, 0, 0, 415, 416, 419,
	0, 0, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 0, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 0, 458, 448, 0, 0, 0,
	459, 460, 0, 645, 461, 646, 463, 464, 0, 0,
	465, 0, 0, 0, 467, 468, 469, 0, 0, 470,
	471, 647, 0, 472, 0, 648, 473, 474, 466, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	649, 485, 486, 487, 650, 488, 489, 490, 651, 491,
	652, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 653, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 0, 524, 525, 526, 527, 654,
	528, 0, 529, 530, 536, 537, 531, 532, 538, 539,
	540, 541, 542, 0, 544, 545, 543, 546, 547, 548,
	0, 549, 550, 533, 534, 551, 552, 0, 553, 554,
	555, 556, 557, 558, 655, 0, 559, 0, 560, 561,
	562, 564, 535, 565, 570, 571, 656, 566, 567, 568,
	569, 657, 573, 574, 0, 575, 576, 0, 572, 563,
	0, 577, 578, 579, 580, 581, 582, 583, 353, 584,
	0, 585, 658, 659, 660, 661, 0, 594, 0, 586,
	587, 588, 662, 589, 663, 0, 590, 591, 592, 593,
	0, 595, 596, 0, 0, 597, 598, 599, 601, 602,
	600, 603, 0, 604, 0, 0, 605, 606, 607, 664,
	665, 666, 0, 609, 608, 610, 667, 0, 611, 264,
	2942, 0, 0, 612, 613, 668, 614, 615, 616, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 617, 0, 0, 0, 0, 279, 280, 0, 281,
	282, 283, 284, 285, 286, 618, 619, 0, 287, 620,
	288, 621, 0, 622, 289, 290, 291, 292, 293, 294,
	0, 0, 0, 295, 623, 624, 625, 0, 296, 297,
	626, 0, 0, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 322, 0, 0, 0, 0, 0,
	0, 0, 323, 324, 325, 326, 327, 0, 328, 627,
	628, 0, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 339, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 629, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 630,
	631, 359, 0, 0, 0, 0, 0, 0, 0, 360,
	361, 362, 632, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 0, 366, 367, 633, 634, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 635, 0,
	636, 378, 0, 379, 380, 381, 382, 383, 637, 638,
	639, 462, 0, 384, 385, 0, 386, 387, 388, 389,
	390, 0, 0, 0, 0, 391, 392, 393, 395, 0,
	0, 394, 640, 641, 0, 642, 0, 396, 397, 0,
	643, 0, 398, 399, 400, 0, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 644, 0, 412, 413, 0, 0, 414, 0,
	0, 0, 415, 416, 419, 0, 0, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 0, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 0,
	458, 448, 0, 0, 0, 459, 460, 0, 645, 461,
	646, 463, 464, 0, 0, 465, 0, 0, 0, 467,
	468, 2939, 0, 0, 470, 471, 647, 0, 472, 0,
	648, 473, 474, 466, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 649, 485, 486, 487, 650,
	488, 489, 490, 651, 491, 652, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 653,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 0,
	524, 525, 526, 527, 654, 528, 0, 529, 530, 536,
	537, 531, 532, 538, 539, 540, 541, 542, 0, 544,
	545, 543, 546, 547, 548, 0, 549, 550, 533, 534,
	551, 552, 0, 553, 554, 555, 556, 557, 558, 655,
	0, 559, 0, 560, 561, 562, 564, 535, 565, 570,
	571, 656, 566, 567, 568, 569, 657, 573, 574, 0,
	575, 576, 0, 572, 563, 0, 577, 578, 579, 580,
	581, 582, 583, 353, 584, 0, 585, 658, 659, 660,
	661, 0, 594, 0, 586, 587, 588, 662, 589, 663,
	0, 590, 591, 592, 593, 0, 595, 596, 0, 0,
	597, 598, 599, 601, 602, 600, 603, 0, 604, 0,
	0, 605, 606, 607, 664, 665, 666, 264, 609, 608,
	610, 667, 0, 611, 0, 0, 0, 0, 612, 613,
	668, 614, 615, 616, 270, 272, 271, 273, 274, 275,
	276, 2268, 277, 278, 0, 0, 0, 0, 0, 617,
	0, 0, 0, 0, 279, 280, 0, 281, 282, 283,
	284, 285, 286, 618, 619, 0, 287, 620, 288, 621,
	0, 622, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 623, 624, 625, 0, 296, 297, 626, 0,
	0, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 0, 328, 627, 628, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 629, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 630, 631, 359,
	0, 0, 0, 0, 0, 0, 0, 360, 361, 362,
	632, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	0, 366, 367, 633, 634, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 635, 0, 636, 378,
	0, 379, 380, 381, 382, 383, 637, 638, 639, 462,
	0, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	0, 0, 0, 391, 392, 393, 395, 0, 0, 394,
	640, 641, 0, 642, 0, 396, 397, 0, 643, 0,
	398, 399, 400, 0, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	644, 0, 412, 413, 0, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 0, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 0, 458, 448,
	0, 0, 0, 459, 460, 0, 645, 461, 646, 463,
	464, 0, 0, 465, 0, 0, 0, 467, 468, 469,
	0, 0, 470, 471, 647, 0, 472, 0, 648, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 649, 485, 486, 487, 650, 488, 489,
	490, 651, 491, 652, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 653, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 0, 524, 525,
	526, 527, 654, 528, 0, 529, 530, 536, 537, 531,
	532, 538, 539, 540, 541, 542, 0, 544, 545, 543,
	546, 547, 548, 0, 549, 550, 533, 534, 551, 552,
	0, 553, 554, 555, 556, 557, 558, 655, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 656,
	566, 567, 568, 569, 657, 573, 574, 0, 575, 576,
	0, 572, 563, 0, 577, 578, 579, 580, 581, 582,
	583, 353, 584, 0, 585, 658, 659, 660, 661, 0,
	594, 0, 586, 587, 588, 662, 589, 663, 0, 590,
	591, 592, 593, 0, 595, 596, 0, 0, 597, 598,
	599, 601, 602, 600, 603, 0, 604, 0, 0, 605,
	606, 607, 664, 665, 666, 0, 609, 608, 610, 667,
	2256, 611, 264, 0, 0, 0, 612, 613, 668, 614,
	615, 616, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 617, 0, 0, 0, 0, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 618, 619,
	0, 287, 620, 288, 621, 0, 622, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 623, 624, 625,
	0, 296, 297, 626, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 627, 628, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 629, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 630, 631, 359, 0, 0, 0, 0, 0,
	0, 0, 360, 361, 362, 632, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 0, 366, 367, 633, 634,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 635, 0, 636, 378, 0, 379, 380, 381, 382,
	383, 637, 638, 639, 462, 0, 384, 385, 0, 386,
	387, 388, 389, 390, 0, 0, 0, 0, 391, 392,
	393, 395, 0, 0, 394, 640, 641, 0, 642, 0,
	396, 397, 0, 643, 0, 398, 399, 400, 0, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 644, 0, 412, 413, 0,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 0,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 0, 458, 448, 0, 0, 0, 459, 460,
	0, 645, 461, 646, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 647,
	0, 472, 0, 648, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 649, 485,
	486, 487, 650, 488, 489, 490, 651, 491, 652, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 653, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 0, 524, 525, 526, 527, 654, 528, 0,
	529, 530, 536, 537, 531, 532, 538, 539, 540, 541,
	542, 0, 544, 545, 543, 546, 547, 548, 0, 549,
	550, 533, 534, 551, 552, 0, 553, 554, 555, 556,
	557, 558, 655, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 656, 566, 567, 568, 569, 657,
	573, 574, 0, 575, 576, 0, 572, 563, 0, 577,
	578, 579, 580, 581, 582, 583, 353, 584, 0, 585,
	658, 659, 660, 661, 0, 594, 0, 586, 587, 588,
	662, 589, 663, 0, 590, 591, 592, 593, 0, 595,
	596, 0, 0, 597, 598, 599, 601, 602, 600, 603,
	0, 604, 0, 0, 605, 606, 607, 664, 665, 666,
	0, 609, 608, 610, 667, 757, 611, 264, 0, 0,
	0, 612, 613, 668, 614, 615, 616, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 617,
	0, 0, 0, 0, 279, 280, 0, 281, 282, 283,
	284, 285, 286, 618, 619, 0, 287, 620, 288, 621,
	0, 622, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 623, 624, 625, 0, 296, 747, 626, 0,
	0, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 0, 328, 627, 628, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 629, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 630, 631, 359,
	0, 0, 0, 0, 0, 0, 0, 360, 361, 362,
	632, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	0, 366, 367, 633, 634, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 635, 0, 636, 378,
	0, 379, 380, 381, 382, 383, 637, 638, 639, 462,
	0, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	0, 0, 0, 391, 392, 393, 395, 0, 0, 394,
	640, 641, 0, 642, 0, 396, 397, 0, 643, 0,
	398, 399, 400, 0, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	644, 0, 412, 413, 0, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 758, 0, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 0, 458, 448,
	0, 0, 0, 459, 460, 0, 645, 461, 646, 463,
	464, 0, 0, 465, 0, 0, 0, 467, 468, 469,
	0, 0, 470, 471, 647, 0, 472, 0, 648, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 649, 485, 486, 487, 650, 488, 489,
	490, 651, 491, 652, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 653, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 0, 524, 525,
	526, 527, 654, 528, 0, 529, 530, 536, 537, 531,
	532, 754, 539, 540, 541, 542, 0, 544, 545, 543,
	546, 1581, 548, 0, 549, 550, 533, 534, 551, 552,
	0, 553, 554, 555, 556, 557, 558, 655, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 656,
	566, 567, 568, 569, 657, 573, 574, 0, 575, 576,
	0, 572, 563, 0, 577, 578, 579, 580, 581, 582,
	583, 353, 584, 0, 585, 753, 659, 660, 661, 0,
	594, 0, 586, 587, 588, 662, 589, 663, 0, 590,
	591, 592, 593, 0, 595, 596, 0, 0, 597, 598,
	599, 601, 602, 600, 603, 0, 604, 0, 0, 605,
	606, 607, 664, 665, 666, 0, 609, 608, 610, 667,
	1554, 611, 264, 0, 0, 0, 612, 613, 668, 614,
	615, 616, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 617, 0, 0, 0, 0, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 618, 619,
	0, 287, 620, 288, 621, 0, 622, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 623, 624, 625,
	0, 296, 297, 626, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 627, 628, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 629, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 630, 631, 359, 0, 0, 0, 0, 0,
	0, 0, 360, 361, 362, 632, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 0, 366, 367, 633, 634,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 635, 0, 636, 378, 0, 379, 380, 381, 382,
	383, 1553, 638, 639, 462, 0, 384, 385, 0, 386,
	387, 388, 389, 390, 0, 0, 0, 0, 391, 392,
	393, 395, 0, 0, 394, 640, 641, 0, 642, 0,
	396, 397, 0, 643, 0, 398, 399, 400, 0, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 644, 0, 412, 413, 0,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 0,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 0, 458, 448, 0, 0, 0, 459, 460,
	0, 645, 461, 646, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 647,
	0, 472, 0, 648, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 649, 485,
	486, 487, 650, 488, 489, 490, 651, 491, 652, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 653, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 0, 524, 525, 526, 527, 654, 528, 0,
	529, 530, 536, 537, 531, 532, 538, 539, 540, 541,
	542, 0, 544, 545, 543, 546, 547, 548, 0, 549,
	550, 533, 534, 551, 552, 0, 553, 554, 555, 556,
	557, 558, 655, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 656, 566, 567, 568, 569, 657,
	573, 574, 0, 575, 576, 0, 572, 563, 0, 577,
	578, 579, 580, 581, 582, 583, 353, 584, 0, 585,
	658, 659, 660, 661, 0, 594, 0, 586, 587, 588,
	662, 589, 663, 0, 590, 591, 592, 593, 0, 595,
	596, 0, 0, 597, 598, 599, 601, 602, 600, 603,
	0, 604, 0, 0, 605, 606, 607, 664, 665, 666,
	0, 609, 608, 610, 667, 1538, 611, 264, 0, 0,
	0, 612, 613, 668, 614, 615, 616, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 617,
	0, 0, 0, 0, 279, 280, 0, 281, 282, 283,
	284, 285, 286, 618, 619, 0, 287, 620, 288, 621,
	0, 622, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 623, 624, 625, 0, 296, 297, 626, 0,
	0, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 0, 328, 627, 628, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 629, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 630, 631, 359,
	0, 0, 0, 0, 0, 0, 0, 360, 361, 362,
	632, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	0, 366, 367, 633, 634, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 635, 0, 636, 378,
	0, 379, 380, 381, 382, 383, 1536, 638, 639, 462,
	0, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	0, 0, 0, 391, 392, 393, 395, 0, 0, 394,
	640, 641, 0, 642, 0, 396, 397, 0, 643, 0,
	398, 399, 400, 0, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	644, 0, 412, 413, 0, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 0, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 0, 458, 448,
	0, 0, 0, 459, 460, 0, 645, 461, 646, 463,
	464, 0, 0, 465, 0, 0, 0, 467, 468, 469,
	0, 0, 470, 471, 647, 0, 472, 0, 648, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 649, 485, 486, 487, 650, 488, 489,
	490, 651, 491, 652, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 653, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 0, 524, 525,
	526, 527, 654, 528, 0, 529, 530, 536, 537, 531,
	532, 538, 539, 540, 541, 542, 0, 544, 545, 543,
	546, 547, 548, 0, 549, 550, 533, 534, 551, 552,
	0, 553, 554, 555, 556, 557, 558, 655, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 656,
	566, 567, 568, 569, 657, 573, 574, 0, 575, 576,
	0, 572, 563, 0, 577, 578, 579, 580, 581, 582,
	583, 353, 584, 0, 585, 658, 659, 660, 661, 0,
	594, 0, 586, 587, 588, 662, 589, 663, 0, 590,
	591, 592, 593, 0, 595, 596, 0, 0, 597, 598,
	599, 601, 602, 600, 603, 0, 604, 0, 0, 605,
	606, 607, 664, 665, 666, 0, 609, 608, 610, 667,
	1531, 611, 264, 0, 0, 0, 612, 613, 668, 614,
	615, 616, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 617, 0, 0, 0, 0, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 618, 619,
	0, 287, 620, 288, 621, 0, 622, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 623, 624, 625,
	0, 296, 297, 626, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 627, 628, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 629, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 630, 631, 359, 0, 0, 0, 0, 0,
	0, 0, 360, 361, 362, 632, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 0, 366, 367, 633, 634,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 635, 0, 636, 378, 0, 379, 380, 381, 382,
	383, 637, 638, 639, 462, 0, 384, 385, 0, 386,
	387, 388, 389, 390, 0, 0, 0, 0, 391, 392,
	393, 395, 0, 0, 394, 640, 641, 0, 642, 0,
	396, 397, 0, 643, 0, 398, 399, 400, 0, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 644, 0, 412, 413, 0,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 0,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 0, 458, 448, 0, 0, 0, 459, 460,
	0, 645, 461, 646, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 647,
	0, 472, 0, 648, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 649, 485,
	486, 487, 650, 488, 489, 490, 651, 491, 652, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 653, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 0, 524, 525, 526, 527, 654, 528, 0,
	529, 530, 536, 537, 531, 532, 538, 539, 540, 541,
	542, 0, 544, 545, 543, 546, 547, 548, 0, 549,
	550, 533, 534, 551, 552, 0, 553, 554, 555, 556,
	557, 558, 655, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 656, 566, 567, 568, 569, 657,
	573, 574, 0, 575, 576, 0, 572, 563, 0, 577,
	578, 579, 580, 581, 582, 583, 353, 584, 0, 585,
	658, 659, 660, 661, 0, 594, 0, 586, 587, 588,
	662, 589, 663, 0, 590, 591, 592, 593, 0, 595,
	596, 0, 0, 597, 598, 599, 601, 602, 600, 603,
	0, 604, 0, 0, 605, 606, 607, 664, 665, 666,
	0, 609, 608, 610, 667, 1508, 611, 264, 0, 0,
	0, 612, 613, 668, 614, 615, 616, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 617,
	0, 0, 0, 0, 279, 280, 0, 281, 282, 283,
	284, 285, 286, 618, 619, 0, 287, 620, 288, 621,
	0, 622, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 623, 624, 625, 0, 296, 297, 626, 0,
	0, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 0, 328, 627, 628, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 629, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 630, 631, 359,
	0, 0, 0, 0, 0, 0, 0, 360, 361, 362,
	632, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	0, 366, 367, 633, 634, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 635, 0, 636, 378,
	0, 379, 380, 381, 382, 383, 1506, 638, 639, 462,
	0, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	0, 0, 0, 391, 392, 393, 395, 0, 0, 394,
	640, 641, 0, 642, 0, 396, 397, 0, 643, 0,
	398, 399, 400, 0, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	644, 0, 412, 413, 0, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 0, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 0, 458, 448,
	0, 0, 0, 459, 460, 0, 645, 461, 646, 463,
	464, 0, 0, 465, 0, 0, 0, 467, 468, 469,
	0, 0, 470, 471, 647, 0, 472, 0, 648, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 649, 485, 486, 487, 650, 488, 489,
	490, 651, 491, 652, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 653, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 0, 524, 525,
	526, 527, 654, 528, 0, 529, 530, 536, 537, 531,
	532, 538, 539, 540, 541, 542, 0, 544, 545, 543,
	546, 547, 548, 0, 549, 550, 533, 534, 551, 552,
	0, 553, 554, 555, 556, 557, 558, 655, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 656,
	566, 567, 568, 569, 657, 573, 574, 0, 575, 576,
	0, 572, 563, 0, 577, 578, 579, 580, 581, 582,
	583, 353, 584, 0, 585, 658, 659, 660, 661, 0,
	594, 0, 586, 587, 588, 662, 589, 663, 0, 590,
	591, 592, 593, 0, 595, 596, 0, 0, 597, 598,
	599, 601, 602, 600, 603, 0, 604, 0, 0, 605,
	606, 607, 664, 665, 666, 0, 609, 608, 610, 667,
	1469, 611, 264, 0, 0, 0, 612, 613, 668, 614,
	615, 616, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 617, 0, 0, 0, 0, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 618, 619,
	0, 287, 620, 288, 621, 0, 622, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 623, 624, 625,
	0, 296, 297, 626, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 627, 628, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 629, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 630, 631, 359, 0, 0, 0, 0, 0,
	0, 0, 360, 361, 362, 632, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 0, 366, 367, 633, 634,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 635, 0, 636, 378, 0, 379, 380, 381, 382,
	383, 637, 638, 639, 462, 0, 384, 385, 0, 386,
	387, 388, 389, 390, 0, 0, 0, 0, 391, 392,
	393, 395, 0, 0, 394, 640, 641, 0, 642, 0,
	396, 397, 0, 643, 0, 398, 399, 400, 0, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 644, 0, 412, 413, 0,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 0,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 0, 458, 448, 0, 0, 0, 459, 460,
	0, 645, 461, 646, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 647,
	0, 472, 0, 648, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 649, 485,
	486, 487, 650, 488, 489, 490, 651, 491, 652, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 653, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 0, 524, 525, 526, 527, 654, 528, 0,
	529, 530, 536, 537, 531, 532, 538, 539, 540, 541,
	542, 0, 544, 545, 543, 546, 547, 548, 0, 549,
	550, 533, 534, 551, 552, 0, 553, 554, 555, 556,
	557, 558, 655, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 656, 566, 567, 568, 569, 657,
	573, 574, 0, 575, 576, 0, 572, 563, 0, 577,
	578, 579, 580, 581, 582, 583, 353, 584, 0, 585,
	658, 659, 660, 661, 0, 594, 0, 586, 587, 588,
	662, 589, 663, 0, 590, 591, 592, 593, 0, 595,
	596, 0, 0, 597, 598, 599, 601, 602, 600, 603,
	0, 604, 0, 0, 605, 606, 607, 664, 665, 666,
	0, 609, 608, 610, 667, 1451, 611, 264, 0, 0,
	0, 612, 613, 668, 614, 615, 616, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 617,
	0, 0, 0, 0, 279, 280, 0, 281, 282, 283,
	284, 285, 286, 618, 619, 0, 287, 620, 288, 621,
	0, 622, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 623, 624, 625, 0, 296, 297, 626, 0,
	0, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 0, 328, 627, 628, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 629, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 630, 631, 359,
	0, 0, 0, 0, 0, 0, 0, 360, 361, 362,
	632, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	0, 366, 367, 633, 634, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 635, 0, 636, 378,
	0, 379, 380, 381, 382, 383, 637, 638, 639, 462,
	0, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	0, 0, 0, 391, 392, 393, 395, 0, 0, 394,
	640, 641, 0, 642, 0, 396, 397, 0, 643, 0,
	398, 399, 400, 0, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	644, 0, 412, 413, 0, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 0, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 0, 458, 448,
	0, 0, 0, 459, 460, 0, 645, 461, 646, 463,
	464, 0, 0, 465, 0, 0, 0, 467, 468, 469,
	0, 0, 470, 471, 647, 0, 472, 0, 648, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 649, 485, 486, 487, 650, 488, 489,
	490, 651, 491, 652, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 653, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 0, 524, 525,
	526, 527, 654, 528, 0, 529, 530, 536, 537, 531,
	532, 538, 539, 540, 541, 542, 0, 544, 545, 543,
	546, 547, 548, 0, 549, 550, 533, 534, 551, 552,
	0, 553, 554, 555, 556, 557, 558, 655, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 656,
	566, 567, 568, 569, 657, 573, 574, 0, 575, 576,
	0, 572, 563, 0, 577, 578, 579, 580, 581, 582,
	583, 353, 584, 0, 585, 658, 659, 660, 661, 0,
	594, 0, 586, 587, 588, 662, 589, 663, 0, 590,
	591, 592, 593, 0, 595, 596, 0, 0, 597, 598,
	599, 601, 602, 600, 603, 0, 604, 0, 0, 605,
	606, 607, 664, 665, 666, 0, 609, 608, 610, 667,
	1288, 611, 264, 0, 0, 0, 612, 613, 668, 614,
	615, 616, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 617, 0, 0, 0, 0, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 618, 619,
	0, 287, 620, 288, 621, 0, 622, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 623, 624, 625,
	0, 296, 297, 626, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 627, 628, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 629, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 630, 631, 359, 0, 0, 0, 0, 0,
	0, 0, 360, 361, 362, 632, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 0, 366, 367, 633, 634,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 635, 0, 636, 378, 0, 379, 380, 381, 382,
	383, 1287, 638, 639, 462, 0, 384, 385, 0, 386,
	387, 388, 389, 390, 0, 0, 0, 0, 391, 392,
	393, 395, 0, 0, 394, 640, 641, 0, 642, 0,
	396, 397, 0, 643, 0, 398, 399, 400, 0, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 644, 0, 412, 413, 0,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 0,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 0, 458, 448, 0, 0, 0, 459, 460,
	0, 645, 461, 646, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 647,
	0, 472, 0, 648, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 649, 485,
	486, 487, 650, 488, 489, 490, 651, 491, 652, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 653, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 0, 524, 525, 526, 527, 654, 528, 0,
	529, 530, 536, 537, 531, 532, 538, 539, 540, 541,
	542, 0, 544, 545, 543, 546, 547, 548, 0, 549,
	550, 533, 534, 551, 552, 0, 553, 554, 555, 556,
	557, 558, 655, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 656, 566, 567, 568, 569, 657,
	573, 574, 0, 575, 576, 0, 572, 563, 0, 577,
	578, 579, 580, 581, 582, 583, 353, 584, 0, 585,
	658, 659, 660, 661, 0, 594, 0, 586, 587, 588,
	662, 589, 663, 0, 590, 591, 592, 593, 0, 595,
	596, 0, 0, 597, 598, 599, 601, 602, 600, 603,
	0, 604, 0, 0, 605, 606, 607, 664, 665, 666,
	0, 609, 608, 610, 667, 1279, 611, 264, 0, 0,
	0, 612, 613, 668, 614, 615, 616, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 617,
	0, 0, 0, 0, 279, 280, 0, 281, 282, 283,
	284, 285, 286, 618, 619, 0, 287, 620, 288, 621,
	0, 622, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 623, 624, 625, 0, 296, 297, 626, 0,
	0, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 0, 328, 627, 628, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 629, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 630, 631, 359,
	0, 0, 0, 0, 0, 0, 0, 360, 361, 362,
	632, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	0, 366, 367, 633, 634, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 635, 0, 636, 378,
	0, 379, 380, 381, 382, 383, 1278, 638, 639, 462,
	0, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	0, 0, 0, 391, 392, 393, 395, 0, 0, 394,
	640, 641, 0, 642, 0, 396, 397, 0, 643, 0,
	398, 399, 400, 0, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	644, 0, 412, 413, 0, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 0, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 0, 458, 448,
	0, 0, 0, 459, 460, 0, 645, 461, 646, 463,
	464, 0, 0, 465, 0, 0, 0, 467, 468, 469,
	0, 0, 470, 471, 647, 0, 472, 0, 648, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 649, 485, 486, 487, 650, 488, 489,
	490, 651, 491, 652, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 653, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 0, 524, 525,
	526, 527, 654, 528, 0, 529, 530, 536, 537, 531,
	532, 538, 539, 540, 541, 542, 0, 544, 545, 543,
	546, 547, 548, 0, 549, 550, 533, 534, 551, 552,
	0, 553, 554, 555, 556, 557, 558, 655, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 656,
	566, 567, 568, 569, 657, 573, 574, 0, 575, 576,
	0, 572, 563, 0, 577, 578, 579, 580, 581, 582,
	583, 353, 584, 0, 585, 658, 659, 660, 661, 0,
	594, 0, 586, 587, 588, 662, 589, 663, 0, 590,
	591, 592, 593, 0, 595, 596, 0, 0, 597, 598,
	599, 601, 602, 600, 603, 0, 604, 0, 0, 605,
	606, 607, 664, 665, 666, 264, 609, 608, 610, 667,
	0, 611, 0, 0, 0, 0, 612, 613, 668, 614,
	615, 616, 270, 272, 271, 273, 274, 275, 276, 1232,
	277, 278, 0, 0, 0, 0, 0, 617, 0, 0,
	0, 0, 279, 280, 0, 281, 282, 283, 284, 285,
	286, 618, 619, 0, 287, 620, 288, 621, 0, 622,
	289, 290, 291, 292, 293, 294, 0, 0, 0, 295,
	623, 624, 625, 0, 296, 297, 626, 0, 0, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 0, 0, 0, 0, 0, 0, 0, 323, 324,
	325, 326, 327, 0, 328, 627, 628, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 629, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 630, 631, 359, 0, 0,
	0, 0, 0, 0, 0, 360, 361, 362, 632, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 0, 366,
	367, 633, 634, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 635, 0, 636, 378, 0, 379,
	380, 381, 382, 383, 637, 638, 639, 462, 0, 384,
	385, 0, 386, 387, 388, 389, 390, 0, 0, 0,
	0, 391, 392, 393, 395, 0, 0, 394, 640, 641,
	0, 642, 0, 396, 397, 0, 643, 0, 398, 399,
	400, 0, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 644, 0,
	412, 413, 0, 0, 414, 0, 0, 0, 415, 416,
	419, 0, 0, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 0, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 0, 458, 448, 0, 0,
	0, 459, 460, 0, 645, 461, 646, 463, 464, 0,
	0, 465, 0, 0, 0, 467, 468, 469, 0, 0,
	470, 471, 647, 0, 472, 0, 648, 473, 474, 466,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 649, 485, 486, 487, 650, 488, 489, 490, 651,
	491, 652, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 653, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 0, 524, 525, 526, 527,
	654, 528, 0, 529, 530, 536, 537, 531, 532, 538,
	539, 540, 541, 542, 0, 544, 545, 543, 546, 547,
	548, 0, 549, 550, 533, 534, 551, 552, 0, 553,
	554, 555, 556, 557, 558, 655, 0, 559, 0, 560,
	561, 562, 564, 535, 565, 570, 571, 656, 566, 567,
	568, 569, 657, 573, 574, 0, 575, 576, 0, 572,
	563, 0, 577, 578, 579, 580, 581, 582, 583, 353,
	584, 0, 585, 658, 659, 660, 661, 0, 594, 0,
	586, 587, 588, 662, 589, 663, 0, 590, 591, 592,
	593, 0, 595, 596, 0, 0, 597, 598, 599, 601,
	602, 600, 603, 0, 604, 0, 0, 605, 606, 607,
	664, 665, 666, 264, 609, 608, 610, 667, 0, 611,
	0, 0, 0, 0, 612, 613, 668, 614, 615, 616,
	270, 272, 271, 273, 274, 275, 276, 763, 277, 278,
	0, 0, 0, 0, 0, 617, 0, 0, 0, 0,
	279, 280, 0, 281, 282, 283, 284, 285, 286, 618,
	619, 0, 287, 620, 288, 621, 0, 622, 289, 290,
	291, 292, 293, 294, 0, 0, 0, 295, 623, 624,
	625, 0, 296, 297, 626, 0, 0, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 0, 323, 324, 325, 326,
	327, 0, 328, 627, 628, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 629, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 630, 631, 359, 0, 0, 0, 0,
	0, 0, 0, 360, 361, 362, 632, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 0, 366, 367, 633,
	634, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 635, 0, 636, 378, 0, 379, 380, 381,
	382, 383, 637, 638, 639, 462, 0, 384, 385, 0,
	386, 387, 388, 389, 390, 0, 0, 0, 0, 391,
	392, 393, 395, 0, 0, 394, 640, 641, 0, 642,
	0, 396, 397, 0, 643, 0, 398, 399, 400, 0,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 644, 0, 412, 413,
	0, 0, 414, 0, 0, 0, 415, 416, 419, 0,
	0, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	0, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 0, 458, 448, 0, 0, 0, 459,
	460, 0, 645, 461, 646, 463, 464, 0, 0, 465,
	0, 0, 0, 467, 468, 469, 0, 0, 470, 471,
	647, 0, 472, 0, 648, 473, 474, 466, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 649,
	485, 486, 487, 650, 488, 489, 490, 651, 491, 652,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 653, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 0, 524, 525, 526, 527, 654, 528,
	0, 529, 530, 536, 537, 531, 532, 538, 539, 540,
	541, 542, 0, 544, 545, 543, 546, 547, 548, 0,
	549, 550, 533, 534, 551, 552, 0, 553, 554, 555,
	556, 557, 558, 655, 0, 559, 0, 560, 561, 562,
	564, 535, 565, 570, 571, 656, 566, 567, 568, 569,
	657, 573, 574, 0, 575, 576, 0, 572, 563, 0,
	577, 578, 579, 580, 581, 582, 583, 353, 584, 0,
	585, 658, 659, 660, 661, 0, 594, 0, 586, 587,
	588, 662, 589, 663, 0, 590, 591, 592, 593, 0,
	595, 596, 0, 0, 597, 598, 599, 601, 602, 600,
	603, 0, 604, 0, 0, 605, 606, 607, 664, 665,
	666, 0, 609, 608, 610, 667, 757, 611, 264, 0,
	0, 0, 612, 613, 668, 614, 615, 616, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	617, 0, 0, 0, 0, 279, 280, 0, 281, 282,
	283, 284, 285, 286, 618, 619, 0, 287, 620, 288,
	621, 0, 622, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 623, 624, 625, 0, 296, 747, 626,
	0, 0, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 745, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 326, 327, 0, 328, 627, 628,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 629, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 630, 631,
	359, 0, 0, 0, 0, 0, 0, 0, 360, 361,
	362, 632, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 0, 366, 367, 633, 634, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 635, 0, 636,
	378, 0, 379, 380, 381, 382, 383, 637, 638, 639,
	462, 0, 384, 385, 0, 386, 387, 388, 389, 390,
	0, 0, 0, 0, 391, 392, 393, 395, 0, 0,
	394, 640, 641, 0, 642, 0, 396, 397, 0, 643,
	0, 398, 399, 400, 0, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 644, 0, 412, 413, 0, 0, 414, 0, 0,
	0, 415, 746, 419, 0, 0, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 758, 0, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 0, 458,
	448, 0, 0, 0, 459, 460, 0, 645, 461, 646,
	463, 464, 0, 0, 465, 0, 0, 0, 467, 468,
	469, 0, 0, 470, 471, 647, 0, 472, 0, 648,
	473, 474, 466, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 649, 485, 486, 487, 650, 488,
	489, 490, 651, 491, 652, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 653, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 0, 524,
	525, 526, 527, 748, 528, 0, 529, 530, 536, 537,
	531, 532, 754, 539, 540, 541, 542, 0, 544, 545,
	543, 546, 749, 548, 0, 549, 550, 533, 534, 551,
	552, 0, 553, 554, 555, 556, 557, 558, 655, 0,
	559, 0, 560, 561, 562, 564, 535, 565, 570, 571,
	656, 566, 567, 568, 569, 657, 573, 574, 0, 575,
	576, 0, 572, 563, 0, 577, 578, 579, 580, 581,
	582, 583, 353, 584, 0, 585, 753, 659, 660, 661,
	0, 594, 0, 586, 751, 588, 662, 589, 663, 0,
	590, 591, 592, 593, 0, 595, 596, 0, 0, 597,
	598, 599, 601, 602, 600, 603, 0, 604, 0, 0,
	605, 606, 607, 664, 665, 666, 0, 609, 608, 610,
	667, 739, 611, 264, 0, 0, 0, 612, 613, 668,
	614, 615, 616, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 617, 0, 0, 0, 0,
	279, 280, 0, 281, 282, 283, 284, 285, 286, 618,
	619, 0, 287, 620, 288, 621, 0, 622, 289, 290,
	291, 292, 293, 294, 0, 0, 0, 295, 623, 624,
	625, 0, 296, 297, 626, 0, 0, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 0, 323, 324, 325, 326,
	327, 0, 328, 627, 628, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 629, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 630, 631, 359, 0, 0, 0, 0,
	0, 0, 0, 360, 361, 362, 632, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 0, 366, 367, 633,
	634, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 635, 0, 636, 378, 0, 379, 380, 381,
	382, 383, 637, 638, 639, 462, 0, 384, 385, 0,
	386, 387, 388, 389, 390, 0, 0, 0, 0, 391,
	392, 393, 395, 0, 0, 394, 640, 641, 0, 642,
	0, 396, 397, 0, 643, 0, 398, 399, 400, 0,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 644, 0, 412, 413,
	0, 0, 414, 0, 0, 0, 415, 416, 419, 0,
	0, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	0, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 0, 458, 448, 0, 0, 0, 459,
	460, 0, 645, 461, 646, 463, 464, 0, 0, 465,
	0, 0, 0, 467, 468, 469, 0, 0, 470, 471,
	647, 0, 472, 0, 648, 473, 474, 466, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 649,
	485, 486, 487, 650, 488, 489, 490, 651, 491, 652,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 653, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 0, 524, 525, 526, 527, 654, 528,
	0, 529, 530, 740, 537, 531, 532, 538, 539, 540,
	541, 542, 0, 544, 545, 543, 546, 547, 548, 0,
	549, 550, 533, 534, 551, 552, 0, 553, 554, 555,
	556, 557, 558, 655, 0, 559, 0, 560, 561, 562,
	564, 535, 565, 570, 571, 656, 566, 567, 568, 569,
	657, 573, 574, 0, 575, 576, 0, 572, 563, 0,
	577, 578, 579, 580, 581, 582, 583, 353, 584, 0,
	585, 658, 659, 660, 661, 0, 594, 0, 586, 587,
	588, 662, 589, 663, 0, 590, 591, 592, 593, 0,
	595, 596, 0, 0, 597, 598, 599, 601, 602, 600,
	603, 0, 604, 0, 0, 605, 606, 607, 664, 665,
	666, 0, 609, 608, 610, 667, 702, 611, 264, 0,
	0, 0, 612, 613, 668, 614, 615, 616, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	617, 0, 0, 0, 0, 279, 280, 0, 281, 282,
	283, 284, 285, 286, 618, 619, 0, 287, 620, 288,
	621, 0, 622, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 623, 624, 625, 0, 296, 297, 626,
	0, 0, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 326, 327, 0, 328, 627, 628,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 629, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 630, 631,
	359, 0, 0, 0, 0, 0, 0, 0, 360, 361,
	362, 632, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 0, 366, 367, 633, 634, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 635, 0, 636,
	378, 0, 379, 380, 381, 382, 383, 637, 638, 639,
	462, 0, 384, 385, 0, 386, 387, 388, 389, 390,
	0, 0, 0, 0, 391, 392, 393, 395, 0, 0,
	394, 640, 641, 0, 642, 0, 396, 397, 0, 643,
	0, 398, 399, 400, 0, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 644, 0, 412, 413, 0, 0, 414, 0, 0,
	0, 415, 416, 419, 0, 0, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 0, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 0, 458,
	448, 0, 0, 0, 459, 460, 0, 645, 461, 646,
	463, 464, 0, 0, 465, 0, 0, 0, 467, 468,
	469, 0, 0, 470, 471, 647, 0, 472, 0, 648,
	473, 474, 466, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 649, 485, 486, 487, 650, 488,
	489, 490, 651, 491, 652, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 653, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 0, 524,
	525, 526, 527, 654, 528, 0, 529, 530, 536, 537,
	531, 532, 538, 539, 540, 541, 542, 0, 544, 545,
	543, 546, 547, 548, 0, 549, 550, 533, 534, 551,
	552, 0, 553, 554, 555, 556, 557, 558, 655, 0,
	559, 0, 560, 561, 562, 564, 535, 565, 570, 571,
	656, 566, 567, 568, 569, 657, 573, 574, 0, 575,
	576, 0, 572, 563, 0, 577, 578, 579, 580, 581,
	582, 583, 353, 584, 0, 585, 658, 659, 660, 661,
	0, 594, 0, 586, 587, 588, 662, 589, 663, 0,
	590, 591, 592, 593, 0, 595, 596, 0, 0, 597,
	598, 599, 601, 602, 600, 603, 0, 604, 0, 0,
	605, 606, 607, 664, 665, 666, 0, 609, 608, 610,
	667, 696, 611, 264, 0, 0, 0, 612, 613, 668,
	614, 615, 616, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 617, 0, 0, 0, 0,
	279, 280, 0, 281, 282, 283, 284, 285, 286, 618,
	619, 0, 287, 620, 288, 621, 0, 622, 289, 290,
	291, 292, 293, 294, 0, 0, 0, 295, 623, 624,
	625, 0, 296, 297, 626, 0, 0, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 0, 323, 324, 325, 326,
	327, 0, 328, 627, 628, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 629, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 630, 631, 359, 0, 0, 0, 0,
	0, 0, 0, 360, 361, 362, 632, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 0, 366, 367, 633,
	634, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 635, 0, 636, 378, 0, 379, 380, 381,
	382, 383, 637, 638, 639, 462, 0, 384, 385, 0,
	386, 387, 388, 389, 390, 0, 0, 0, 0, 391,
	392, 393, 395, 0, 0, 394, 640, 641, 0, 642,
	0, 396, 397, 0, 643, 0, 398, 399, 400, 0,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 644, 0, 412, 413,
	0, 0, 414, 0, 0, 0, 415, 416, 419, 0,
	0, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	0, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 0, 458, 448, 0, 0, 0, 459,
	460, 0, 645, 461, 646, 463, 464, 0, 0, 465,
	0, 0, 0, 467, 468, 469, 0, 0, 470, 471,
	647, 0, 472, 0, 648, 473, 474, 466, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 649,
	485, 486, 487, 650, 488, 489, 490, 651, 491, 652,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 653, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 0, 524, 525, 526, 527, 654, 528,
	0, 529, 530, 536, 537, 531, 532, 538, 539, 540,
	541, 542, 0, 544, 545, 543, 546, 547, 548, 0,
	549, 550, 533, 534, 551, 552, 0, 553, 554, 555,
	556, 557, 558, 655, 0, 559, 0, 560, 561, 562,
	564, 535, 565, 570, 571, 656, 566, 567, 568, 569,
	657, 573, 574, 0, 575, 576, 0, 572, 563, 0,
	577, 578, 579, 580, 581, 582, 583, 353, 584, 0,
	585, 658, 659, 660, 661, 0, 594, 0, 586, 587,
	588, 662, 589, 663, 0, 590, 591, 592, 593, 0,
	595, 596, 0, 0, 597, 598, 599, 601, 602, 600,
	603, 0, 604, 0, 0, 605, 606, 607, 664, 665,
	666, 0, 609, 608, 610, 667, 674, 611, 264, 0,
	0, 0, 612, 613, 668, 614, 615, 616, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	617, 0, 0, 0, 0, 279, 280, 0, 281, 282,
	283, 284, 285, 286, 618, 619, 0, 287, 620, 288,
	621, 0, 622, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 623, 624, 625, 0, 296, 297, 626,
	0, 0, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 326, 327, 0, 328, 627, 628,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 629, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 630, 631,
	359, 0, 0, 0, 0, 0, 0, 0, 360, 361,
	362, 632, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 0, 366, 367, 633, 634, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 635, 0, 636,
	378, 0, 379, 380, 381, 382, 383, 637, 638, 639,
	462, 0, 384, 385, 0, 386, 387, 388, 389, 390,
	0, 0, 0, 0, 391, 392, 393, 395, 0, 0,
	394, 640, 641, 0, 642, 0, 396, 397, 0, 643,
	0, 398, 399, 400, 0, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 644, 0, 412, 413, 0, 0, 414, 0, 0,
	0, 415, 416, 419, 0, 0, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 0, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 0, 458,
	448, 0, 0, 0, 459, 460, 0, 645, 461, 646,
	463, 464, 0, 0, 465, 0, 0, 0, 467, 468,
	469, 0, 0, 470, 471, 647, 0, 472, 0, 648,
	473, 474, 466, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 649, 485, 486, 487, 650, 488,
	489, 490, 651, 491, 652, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 653, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 0, 524,
	525, 526, 527, 654, 528, 0, 529, 530, 536, 537,
	531, 532, 538, 539, 540, 541, 542, 0, 544, 545,
	543, 546, 547, 548, 0, 549, 550, 533, 534, 551,
	552, 0, 553, 554, 555, 556, 557, 558, 655, 0,
	559, 0, 560, 561, 562, 564, 535, 565, 570, 571,
	656, 566, 567, 568, 569, 657, 573, 574, 0, 575,
	576, 0, 572, 563, 0, 577, 578, 579, 580, 581,
	582, 583, 353, 584, 0, 585, 658, 659, 660, 661,
	0, 594, 0, 586, 587, 588, 662, 589, 663, 0,
	590, 591, 592, 593, 0, 595, 596, 0, 0, 597,
	598, 599, 601, 602, 600, 603, 0, 604, 0, 0,
	605, 606, 607, 664, 665, 666, 264, 609, 608, 610,
	667, 0, 611, 0, 0, 0, 0, 612, 613, 668,
	614, 615, 616, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 617, 0,
	0, 0, 0, 279, 280, 0, 281, 282, 283, 284,
	285, 286, 618, 619, 0, 287, 620, 288, 621, 0,
	622, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 623, 624, 625, 0, 296, 297, 626, 0, 0,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 326, 327, 0, 328, 627, 628, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 629, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 630, 631, 359, 0,
	0, 0, 0, 0, 0, 0, 360, 361, 362, 632,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 0,
	366, 367, 633, 634, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 635, 0, 636, 378, 0,
	379, 380, 381, 382, 383, 637, 638, 639, 462, 0,
	384, 385, 0, 386, 387, 388, 389, 390, 0, 0,
	0, 0, 391, 392, 393, 395, 0, 0, 394, 640,
	641, 0, 642, 0, 396, 397, 0, 643, 0, 398,
	399, 400, 0, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 644,
	0, 412, 413, 0, 0, 414, 0, 0, 0, 415,
	416, 419, 0, 0, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 0, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 0, 458, 448, 0,
	0, 0, 459, 460, 0, 645, 461, 646, 463, 464,
	0, 0, 465, 0, 0, 0, 467, 468, 469, 0,
	0, 470, 471, 647, 0, 472, 0, 648, 473, 474,
	466, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 649, 485, 486, 487, 650, 488, 489, 490,
	651, 491, 652, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 653, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 0, 524, 525, 526,
	527, 654, 528, 0, 529, 530, 536, 537, 531, 532,
	538, 539, 540, 541, 542, 0, 544, 545, 543, 546,
	547, 548, 0, 549, 550, 533, 534, 551, 552, 0,
	553, 554, 555, 556, 557, 558, 655, 0, 559, 0,
	560, 561, 562, 564, 535, 565, 570, 571, 656, 566,
	567, 568, 569, 657, 573, 574, 0, 575, 576, 0,
	572, 563, 0, 577, 578, 579, 580, 581, 582, 583,
	353, 584, 0, 585, 658, 659, 660, 661, 0, 594,
	0, 586, 587, 588, 662, 589, 663, 0, 590, 591,
	592, 593, 0, 595, 596, 0, 0, 597, 598, 599,
	601, 602, 600, 603, 0, 604, 0, 0, 605, 606,
	607, 664, 665, 666, 264, 609, 608, 610, 667, 0,
	611, 0, 0, 0, 0, 612, 613, 668, 614, 615,
	616, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 617, 0, 0, 0,
	0, 279, 280, 0, 281, 282, 283, 284, 285, 286,
	618, 619, 0, 287, 620, 288, 621, 0, 622, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 623,
	624, 625, 0, 296, 297, 626, 0, 0, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 0, 323, 324, 325,
	326, 327, 0, 328, 627, 628, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 629, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 630, 631, 359, 0, 0, 0,
	0, 0, 0, 0, 360, 361, 362, 632, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 0, 366, 367,
	633, 634, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 635, 0, 636, 378, 0, 379, 380,
	381, 382, 383, 3442, 638, 639, 462, 0, 384, 385,
	0, 386, 387, 388, 389, 390, 0, 0, 0, 0,
	391, 392, 393, 395, 0, 0, 394, 640, 641, 0,
	642, 0, 396, 397, 0, 643, 0, 398, 399, 400,
	0, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 644, 0, 412,
	413, 0, 0, 414, 0, 0, 0, 415, 416, 419,
	0, 0, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 0, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 0, 458, 448, 0, 0, 0,
	459, 460, 0, 645, 461, 646, 463, 464, 0, 0,
	465, 0, 0, 0, 467, 468, 469, 0, 0, 470,
	471, 647, 0, 472, 0, 648, 473, 474, 466, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	649, 485, 486, 487, 650, 488, 489, 490, 651, 491,
	652, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 653, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 0, 524, 525, 526, 527, 654,
	528, 0, 529, 530, 536, 537, 531, 532, 538, 539,
	540, 541, 542, 0, 544, 545, 543, 546, 547, 548,
	0, 549, 550, 533, 534, 551, 552, 0, 553, 554,
	555, 556, 557, 558, 655, 0, 559, 0, 560, 561,
	562, 564, 535, 565, 570, 571, 656, 566, 567, 568,
	569, 657, 573, 574, 0, 575, 576, 0, 572, 563,
	0, 577, 578, 579, 580, 581, 582, 583, 353, 584,
	0, 585, 658, 659, 660, 661, 0, 594, 0, 586,
	587, 588, 662, 589, 663, 0, 590, 591, 592, 593,
	0, 595, 596, 0, 0, 597, 598, 599, 601, 602,
	600, 603, 0, 604, 0, 0, 605, 606, 607, 664,
	665, 666, 264, 609, 608, 610, 667, 0, 611, 0,
	0, 0, 0, 612, 613, 668, 614, 615, 616, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 617, 0, 0, 0, 0, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 618, 619,
	0, 287, 620, 288, 621, 0, 622, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 623, 624, 625,
	0, 296, 297, 626, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 627, 628, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 629, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 630, 631, 359, 0, 0, 0, 0, 0,
	0, 0, 360, 361, 362, 632, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 0, 366, 367, 633, 634,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 635, 0, 636, 378, 0, 379, 380, 381, 382,
	383, 3379, 638, 639, 462, 0, 384, 385, 0, 386,
	387, 388, 389, 390, 0, 0, 0, 0, 391, 392,
	393, 395, 0, 0, 394, 640, 641, 0, 642, 0,
	396, 397, 0, 643, 0, 398, 399, 400, 0, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 644, 0, 412, 413, 0,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 0,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 0, 458, 448, 0, 0, 0, 459, 460,
	0, 645, 461, 646, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 647,
	0, 472, 0, 648, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 649, 485,
	486, 487, 650, 488, 489, 490, 651, 491, 652, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 653, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 0, 524, 525, 526, 527, 654, 528, 0,
	529, 530, 536, 537, 531, 532, 538, 539, 540, 541,
	542, 0, 544, 545, 543, 546, 547, 548, 0, 549,
	550, 533, 534, 551, 552, 0, 553, 554, 555, 556,
	557, 558, 655, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 656, 566, 567, 568, 569, 657,
	573, 574, 0, 575, 576, 0, 572, 563, 0, 577,
	578, 579, 580, 581, 582, 583, 353, 584, 0, 585,
	658, 659, 660, 661, 0, 594, 0, 586, 587, 588,
	662, 589, 663, 0, 590, 591, 592, 593, 0, 595,
	596, 0, 0, 597, 598, 599, 601, 602, 600, 603,
	0, 604, 0, 0, 605, 606, 607, 664, 665, 666,
	264, 609, 608, 610, 667, 0, 611, 0, 0, 0,
	0, 612, 613, 668, 614, 615, 616, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 617, 0, 0, 0, 0, 279, 280, 0,
	281, 282, 283, 284, 285, 286, 618, 619, 0, 287,
	620, 288, 621, 0, 622, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 623, 624, 625, 0, 296,
	297, 626, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 326, 327, 0, 328,
	627, 628, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 629,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	630, 631, 359, 0, 0, 0, 0, 0, 0, 0,
	360, 361, 362, 632, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 0, 366, 367, 633, 634, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 635,
	0, 636, 378, 0, 379, 380, 381, 382, 383, 3308,
	638, 639, 462, 0, 384, 385, 0, 386, 387, 388,
	389, 390, 0, 0, 0, 0, 391, 392, 393, 395,
	0, 0, 394, 640, 641, 0, 642, 0, 396, 397,
	0, 643, 0, 398, 399, 400, 0, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 644, 0, 412, 413, 0, 0, 414,
	0, 0, 0, 415, 416, 419, 0, 0, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 0, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	0, 458, 448, 0, 0, 0, 459, 460, 0, 645,
	461, 646, 463, 464, 0, 0, 465, 0, 0, 0,
	467, 468, 469, 0, 0, 470, 471, 647, 0, 472,
	0, 648, 473, 474, 466, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 649, 485, 486, 487,
	650, 488, 489, 490, 651, 491, 652, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	653, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	0, 524, 525, 526, 527, 654, 528, 0, 529, 530,
	536, 537, 531, 532, 538, 539, 540, 541, 542, 0,
	544, 545, 543, 546, 547, 548, 0, 549, 550, 533,
	534, 551, 552, 0, 553, 554, 555, 556, 557, 558,
	655, 0, 559, 0, 560, 561, 562, 564, 535, 565,
	570, 571, 656, 566, 567, 568, 569, 657, 573, 574,
	0, 575, 576, 0, 572, 563, 0, 577, 578, 579,
	580, 581, 582, 583, 353, 584, 0, 585, 658, 659,
	660, 661, 0, 594, 0, 586, 587, 588, 662, 589,
	663, 0, 590, 591, 592, 593, 0, 595, 596, 0,
	0, 597, 598, 599, 601, 602, 600, 603, 0, 604,
	0, 0, 605, 606, 607, 664, 665, 666, 264, 609,
	608, 610, 667, 0, 611, 0, 0, 0, 0, 612,
	613, 668, 614, 615, 616, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	617, 0, 0, 0, 0, 279, 280, 0, 281, 282,
	283, 284, 285, 286, 618, 619, 0, 287, 620, 288,
	621, 0, 622, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 623, 624, 625, 0, 296, 297, 626,
	0, 0, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 326, 327, 0, 328, 627, 628,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 629, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 630, 631,
	359, 0, 0, 0, 0, 0, 0, 0, 360, 361,
	362, 632, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 0, 366, 367, 633, 634, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 635, 0, 636,
	378, 0, 379, 380, 381, 382, 383, 3306, 638, 639,
	462, 0, 384, 385, 0, 386, 387, 388, 389, 390,
	0, 0, 0, 0, 391, 392, 393, 395, 0, 0,
	394, 640, 641, 0, 642, 0, 396, 397, 0, 643,
	0, 398, 399, 400, 0, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 644, 0, 412, 413, 0, 0, 414, 0, 0,
	0, 415, 416, 419, 0, 0, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 0, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 0, 458,
	448, 0, 0, 0, 459, 460, 0, 645, 461, 646,
	463, 464, 0, 0, 465, 0, 0, 0, 467, 468,
	469, 0, 0, 470, 471, 647, 0, 472, 0, 648,
	473, 474, 466, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 649, 485, 486, 487, 650, 488,
	489, 490, 651, 491, 652, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 653, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 0, 524,
	525, 526, 527, 654, 528, 0, 529, 530, 536, 537,
	531, 532, 538, 539, 540, 541, 542, 0, 544, 545,
	543, 546, 547, 548, 0, 549, 550, 533, 534, 551,
	552, 0, 553, 554, 555, 556, 557, 558, 655, 0,
	559, 0, 560, 561, 562, 564, 535, 565, 570, 571,
	656, 566, 567, 568, 569, 657, 573, 574, 0, 575,
	576, 0, 572, 563, 0, 577, 578, 579, 580, 581,
	582, 583, 353, 584, 0, 585, 658, 659, 660, 661,
	0, 594, 0, 586, 587, 588, 662, 589, 663, 0,
	590, 591, 592, 593, 0, 595, 596, 0, 0, 597,
	598, 599, 601, 602, 600, 603, 0, 604, 0, 0,
	605, 606, 607, 664, 665, 666, 264, 609, 608, 610,
	667, 0, 611, 0, 0, 0, 0, 612, 613, 668,
	614, 615, 616, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 617, 0,
	0, 0, 0, 279, 280, 0, 281, 282, 283, 284,
	285, 286, 618, 619, 0, 287, 620, 288, 621, 0,
	622, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 623, 624, 625, 0, 296, 297, 626, 0, 0,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 326, 327, 0, 328, 627, 628, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 629, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 630, 631, 359, 0,
	0, 0, 0, 0, 0, 0, 360, 361, 362, 632,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 0,
	366, 367, 633, 634, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 635, 0, 636, 378, 0,
	379, 380, 381, 382, 383, 3291, 638, 639, 462, 0,
	384, 385, 0, 386, 387, 388, 389, 390, 0, 0,
	0, 0, 391, 392, 393, 395, 0, 0, 394, 640,
	641, 0, 642, 0, 396, 397, 0, 643, 0, 398,
	399, 400, 0, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 644,
	0, 412, 413, 0, 0, 414, 0, 0, 0, 415,
	416, 419, 0, 0, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 0, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 0, 458, 448, 0,
	0, 0, 459, 460, 0, 645, 461, 646, 463, 464,
	0, 0, 465, 0, 0, 0, 467, 468, 469, 0,
	0, 470, 471, 647, 0, 472, 0, 648, 473, 474,
	466, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 649, 485, 486, 487, 650, 488, 489, 490,
	651, 491, 652, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 653, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 0, 524, 525, 526,
	527, 654, 528, 0, 529, 530, 536, 537, 531, 532,
	538, 539, 540, 541, 542, 0, 544, 545, 543, 546,
	547, 548, 0, 549, 550, 533, 534, 551, 552, 0,
	553, 554, 555, 556, 557, 558, 655, 0, 559, 0,
	560, 561, 562, 564, 535, 565, 570, 571, 656, 566,
	567, 568, 569, 657, 573, 574, 0, 575, 576, 0,
	572, 563, 0, 577, 578, 579, 580, 581, 582, 583,
	353, 584, 0, 585, 658, 659, 660, 661, 0, 594,
	0, 586, 587, 588, 662, 589, 663, 0, 590, 591,
	592, 593, 0, 595, 596, 0, 0, 597, 598, 599,
	601, 602, 600, 603, 0, 604, 0, 0, 605, 606,
	607, 664, 665, 666, 264, 609, 608, 610, 667, 0,
	611, 0, 0, 0, 0, 612, 613, 668, 614, 615,
	616, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 617, 0, 0, 0,
	0, 279, 280, 0, 281, 282, 283, 284, 285, 286,
	618, 619, 0, 287, 620, 288, 621, 0, 622, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 623,
	624, 625, 0, 296, 297, 626, 0, 0, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 0, 323, 324, 325,
	326, 327, 0, 328, 627, 628, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 629, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 630, 631, 359, 0, 0, 0,
	0, 0, 0, 0, 360, 361, 362, 632, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 0, 366, 367,
	633, 634, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 635, 0, 636, 378, 0, 379, 380,
	381, 382, 383, 2910, 638, 639, 462, 0, 384, 385,
	0, 386, 387, 388, 389, 390, 0, 0, 0, 0,
	391, 392, 393, 395, 0, 0, 394, 640, 641, 0,
	642, 0, 396, 397, 0, 643, 0, 398, 399, 400,
	0, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 644, 0, 412,
	413, 0, 0, 414, 0, 0, 0, 415, 416, 419,
	0, 0, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 0, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 0, 458, 448, 0, 0, 0,
	459, 460, 0, 645, 461, 646, 463, 464, 0, 0,
	465, 0, 0, 0, 467, 468, 469, 0, 0, 470,
	471, 647, 0, 472, 0, 648, 473, 474, 466, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	649, 485, 486, 487, 650, 488, 489, 490, 651, 491,
	652, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 653, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 0, 524, 525, 526, 527, 654,
	528, 0, 529, 530, 536, 537, 531, 532, 538, 539,
	540, 541, 542, 0, 544, 545, 543, 546, 547, 548,
	0, 549, 550, 533, 534, 551, 552, 0, 553, 554,
	555, 556, 557, 558, 655, 0, 559, 0, 560, 561,
	562, 564, 535, 565, 570, 571, 656, 566, 567, 568,
	569, 657, 573, 574, 0, 575, 576, 0, 572, 563,
	0, 577, 578, 579, 580, 581, 582, 583, 353, 584,
	0, 585, 658, 659, 660, 661, 0, 594, 0, 586,
	587, 588, 662, 589, 663, 0, 590, 591, 592, 593,
	0, 595, 596, 0, 0, 597, 598, 599, 601, 602,
	600, 603, 0, 604, 0, 0, 605, 606, 607, 664,
	665, 666, 264, 609, 608, 610, 667, 0, 611, 0,
	0, 0, 0, 612, 613, 668, 614, 615, 616, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 617, 0, 0, 0, 0, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 618, 619,
	0, 287, 620, 288, 621, 0, 622, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 623, 624, 625,
	0, 296, 297, 626, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 627, 628, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 629, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 630, 631, 359, 0, 0, 0, 0, 0,
	0, 0, 360, 361, 362, 632, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 0, 366, 367, 633, 634,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 635, 0, 636, 378, 0, 379, 380, 381, 382,
	383, 637, 638, 639, 462, 0, 384, 385, 0, 386,
	387, 388, 389, 390, 0, 0, 0, 0, 391, 392,
	393, 395, 0, 0, 394, 640, 641, 0, 642, 0,
	396, 397, 0, 643, 0, 398, 399, 400, 0, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 644, 0, 412, 413, 0,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 0,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 0, 458, 448, 0, 0, 0, 459, 460,
	0, 645, 461, 646, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 647,
	0, 472, 0, 648, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 649, 485,
	486, 487, 650, 488, 489, 490, 651, 491, 652, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 653, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 0, 524, 525, 526, 527, 654, 528, 0,
	529, 530, 740, 537, 531, 532, 538, 539, 540, 541,
	542, 0, 544, 545, 543, 546, 547, 548, 0, 549,
	550, 533, 534, 551, 552, 0, 553, 554, 555, 556,
	557, 558, 655, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 656, 566, 567, 568, 569, 657,
	573, 574, 0, 575, 576, 0, 572, 563, 0, 577,
	578, 579, 580, 581, 582, 583, 353, 584, 0, 585,
	658, 659, 660, 661, 0, 594, 0, 586, 587, 588,
	662, 589, 663, 0, 590, 591, 592, 593, 0, 595,
	596, 0, 0, 597, 598, 599, 601, 602, 600, 603,
	0, 604, 0, 0, 605, 606, 607, 664, 665, 666,
	264, 609, 608, 610, 667, 0, 611, 0, 0, 0,
	0, 612, 613, 668, 614, 615, 616, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 617, 0, 2230, 0, 0, 279, 280, 0,
	281, 282, 283, 284, 285, 286, 618, 619, 0, 287,
	620, 288, 621, 0, 622, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 623, 624, 625, 0, 296,
	297, 626, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 326, 327, 0, 328,
	627, 628, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 629,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	630, 631, 359, 0, 0, 0, 0, 0, 0, 0,
	360, 361, 362, 632, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 0, 366, 367, 633, 634, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 635,
	0, 636, 378, 0, 379, 380, 381, 382, 383, 637,
	638, 639, 462, 0, 384, 385, 0, 386, 387, 388,
	389, 390, 0, 0, 0, 0, 391, 392, 393, 395,
	0, 0, 394, 640, 641, 0, 642, 0, 396, 397,
	0, 643, 0, 398, 399, 400, 0, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 644, 0, 412, 413, 0, 0, 414,
	0, 0, 0, 415, 416, 419, 0, 0, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 0, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	0, 458, 448, 0, 0, 0, 459, 460, 0, 645,
	461, 646, 463, 464, 0, 0, 465, 0, 0, 0,
	467, 468, 469, 0, 0, 470, 471, 647, 0, 472,
	0, 648, 473, 474, 466, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 649, 485, 486, 487,
	650, 488, 489, 490, 651, 491, 652, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	653, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	0, 524, 525, 526, 527, 654, 528, 0, 529, 530,
	536, 537, 531, 532, 538, 539, 540, 541, 542, 0,
	544, 545, 543, 546, 547, 548, 0, 0, 550, 533,
	534, 551, 552, 0, 553, 554, 555, 556, 557, 558,
	655, 0, 559, 0, 560, 561, 562, 564, 535, 565,
	570, 571, 656, 566, 567, 568, 569, 657, 573, 574,
	0, 575, 576, 0, 572, 563, 0, 577, 578, 579,
	580, 581, 582, 583, 353, 584, 0, 585, 658, 659,
	660, 661, 0, 594, 0, 586, 587, 588, 662, 589,
	663, 0, 590, 591, 592, 593, 0, 595, 596, 0,
	0, 597, 598, 599, 601, 602, 600, 603, 0, 604,
	0, 0, 605, 606, 607, 664, 665, 666, 264, 609,
	608, 610, 667, 0, 611, 0, 0, 0, 0, 612,
	613, 668, 614, 615, 616, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	617, 0, 0, 0, 0, 279, 280, 0, 281, 282,
	283, 284, 285, 286, 618, 619, 0, 287, 620, 288,
	621, 0, 622, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 623, 624, 625, 0, 296, 297, 626,
	0, 0, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 326, 327, 0, 328, 627, 628,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 629, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 630, 631,
	359, 0, 0, 0, 0, 0, 0, 0, 360, 361,
	362, 632, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 0, 366, 367, 633, 634, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 635, 0, 636,
	378, 0, 379, 380, 381, 382, 383, 1250, 638, 639,
	462, 0, 384, 385, 0, 386, 387, 388, 389, 390,
	0, 0, 0, 0, 391, 392, 393, 395, 0, 0,
	394, 640, 641, 0, 642, 0, 396, 397, 0, 643,
	0, 398, 399, 400, 0, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 644, 0, 412, 413, 0, 0, 414, 0, 0,
	0, 415, 416, 419, 0, 0, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 0, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 0, 458,
	448, 0, 0, 0, 459, 460, 0, 645, 461, 646,
	463, 464, 0, 0, 465, 0, 0, 0, 467, 468,
	469, 0, 0, 470, 471, 647, 0, 472, 0, 648,
	473, 474, 466, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 649, 485, 486, 487, 650, 488,
	489, 490, 651, 491, 652, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 653, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 0, 524,
	525, 526, 527, 654, 528, 0, 529, 530, 536, 537,
	531, 532, 538, 539, 540, 541, 542, 0, 544, 545,
	543, 546, 547, 548, 0, 549, 550, 533, 534, 551,
	552, 0, 553, 554, 555, 556, 557, 558, 655, 0,
	559, 0, 560, 561, 562, 564, 535, 565, 570, 571,
	656, 566, 567, 568, 569, 657, 573, 574, 0, 575,
	576, 0, 572, 563, 0, 577, 578, 579, 580, 581,
	582, 583, 353, 584, 0, 585, 658, 659, 660, 661,
	0, 594, 0, 586, 587, 588, 662, 589, 663, 0,
	590, 591, 592, 593, 0, 595, 596, 0, 0, 597,
	598, 599, 601, 602, 600, 603, 0, 604, 0, 0,
	605, 606, 607, 664, 665, 666, 264, 609, 608, 610,
	667, 0, 611, 0, 0, 0, 0, 612, 613, 668,
	614, 615, 616, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 617, 0,
	0, 0, 0, 279, 280, 0, 281, 282, 283, 284,
	285, 286, 618, 619, 0, 287, 620, 288, 621, 0,
	622, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 623, 624, 625, 0, 296, 297, 626, 0, 0,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 326, 327, 0, 328, 627, 628, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 629, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 630, 631, 359, 0,
	0, 0, 0, 0, 0, 0, 360, 361, 362, 632,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 0,
	366, 367, 633, 634, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 635, 0, 636, 378, 0,
	379, 380, 381, 382, 383, 637, 638, 639, 462, 0,
	384, 385, 0, 386, 387, 388, 389, 390, 0, 0,
	0, 0, 391, 392, 393, 395, 0, 0, 394, 640,
	641, 0, 642, 0, 396, 397, 0, 643, 0, 398,
	399, 400, 0, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 644,
	0, 412, 413, 0, 0, 414, 0, 0, 0, 415,
	416, 419, 0, 0, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 0, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 0, 458, 448, 0,
	0, 0, 459, 460, 0, 645, 461, 646, 463, 464,
	0, 0, 465, 0, 0, 0, 467, 468, 469, 0,
	0, 470, 471, 647, 0, 472, 0, 648, 473, 474,
	466, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 649, 485, 486, 487, 650, 488, 489, 490,
	651, 491, 652, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 653, 503, 1183, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 0, 524, 525, 526,
	527, 654, 528, 0, 529, 530, 536, 537, 531, 532,
	538, 539, 540, 541, 542, 0, 544, 545, 543, 546,
	547, 548, 0, 549, 550, 533, 534, 551, 552, 0,
	553, 554, 555, 556, 557, 558, 655, 0, 559, 0,
	560, 561, 562, 564, 535, 565, 570, 571, 656, 566,
	567, 568, 569, 657, 573, 574, 0, 575, 576, 0,
	572, 563, 0, 577, 578, 579, 580, 581, 582, 583,
	353, 584, 0, 585, 658, 659, 660, 661, 0, 594,
	0, 586, 587, 588, 662, 589, 663, 0, 590, 591,
	592, 593, 0, 595, 596, 0, 0, 597, 598, 599,
	601, 602, 600, 603, 0, 604, 0, 0, 605, 606,
	607, 664, 665, 666, 264, 609, 608, 610, 667, 0,
	611, 0, 0, 0, 0, 612, 613, 668, 614, 615,
	616, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 617, 0, 0, 0,
	0, 279, 280, 0, 281, 282, 283, 284, 285, 286,
	618, 619, 0, 287, 620, 288, 621, 0, 622, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 623,
	624, 625, 0, 296, 297, 626, 0, 0, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 0, 323, 324, 325,
	326, 327, 0, 328, 627, 628, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 629, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 630, 631, 359, 0, 0, 0,
	0, 0, 0, 0, 360, 361, 362, 632, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 0, 366, 367,
	633, 634, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 635, 0, 636, 0, 0, 379, 380,
	381, 382, 383, 637, 638, 639, 462, 0, 384, 385,
	0, 386, 387, 388, 389, 390, 0, 0, 0, 0,
	391, 392, 393, 395, 0, 0, 394, 640, 641, 0,
	642, 0, 396, 397, 0, 643, 0, 398, 399, 400,
	0, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 644, 0, 412,
	413, 0, 0, 414, 0, 0, 0, 415, 416, 419,
	0, 0, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 0, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 0, 458, 448, 0, 0, 0,
	459, 460, 0, 645, 461, 646, 463, 464, 0, 0,
	465, 0, 0, 0, 467, 468, 469, 0, 0, 470,
	471, 647, 0, 472, 0, 648, 473, 474, 466, 475,
	476, 0, 478, 479, 480, 481, 482, 0, 483, 484,
	649, 485, 486, 487, 650, 488, 489, 490, 651, 491,
	652, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 0, 501, 502, 653, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 0, 524, 525, 526, 527, 654,
	0, 0, 529, 530, 536, 537, 531, 532, 538, 539,
	540, 541, 542, 0, 544, 545, 543, 546, 547, 548,
	0, 549, 550, 533, 534, 551, 552, 0, 553, 554,
	555, 556, 557, 558, 655, 0, 559, 0, 560, 561,
	562, 564, 535, 565, 570, 571, 656, 566, 567, 568,
	569, 657, 573, 574, 0, 575, 576, 0, 572, 563,
	0, 577, 578, 579, 580, 581, 582, 583, 353, 584,
	0, 585, 658, 659, 660, 661, 0, 594, 0, 586,
	587, 588, 662, 589, 663, 0, 590, 591, 592, 593,
	0, 595, 596, 0, 0, 597, 598, 599, 601, 602,
	600, 603, 0, 604, 0, 0, 605, 606, 607, 664,
	665, 666, 0, 609, 608, 610, 667, 0, 611, 0,
	0, 0, 0, 612, 613, 668, 614, 615, 616, 1745,
	1746, 0, 1778, 1779, 1780, 1788, 1789, 1790, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1781, 1776, 0, 0, 0, 0, 1745, 1746, 1748,
	1778, 1779, 1780, 1788, 1789, 1790, 0, 0, 1794, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1781,
	1776, 0, 0, 0, 0, 0, 0, 1748, 0, 0,
	0, 0, 0, 0, 1747, 0, 1794, 0, 0, 0,
	0, 0, 0, 0, 1767, 0, 0, 0, 0, 0,
	0, 0, 0, 1764, 0, 0, 0, 0, 0, 0,
	0, 0, 1747, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1767, 0, 0, 0, 0, 0, 0, 0,
	0, 1764, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1770, 1771,
	1772, 1773, 0, 0, 0, 0, 0, 0, 1753, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1770, 1771, 1772, 1773,
	0, 0, 0, 0, 0, 0, 1753, 0, 0, 0,
	0, 0, 0, 0, 0, 1785, 0, 0, 1795, 0,
	0, 0, 0, 0, 0, 1775, 1777, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1791, 1785, 1792, 0, 1795, 0, 0, 0,
	0, 1762, 1763, 1775, 1777, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1783,
	1791, 0, 1792, 0, 0, 0, 0, 0, 0, 1762,
	1763, 0, 0, 0, 1768, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1783, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1768, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1793, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1782, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1793, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1782, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1774, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1745,
	1746, 0, 1778, 1779, 1780, 1788, 1789, 1790, 0, 1769,
	0, 0, 0, 0, 0, 0, 1774, 0, 0, 0,
	0, 1781, 1776, 0, 0, 0, 0, 0, 0, 1748,
	0, 0, 0, 0, 0, 1786, 0, 1769, 1794, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1786, 1747, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1767, 0, 0, 0, 0, 0,
	0, 0, 0, 1764, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1784, 0, 0,
	0, 0, 1759, 1760, 1766, 1787, 1765, 1761, 0, 1758,
	1756, 1757, 1749, 1750, 1751, 1752, 1754, 1755, 1770, 1771,
	1772, 1773, 4133, 0, 0, 1784, 0, 0, 1753, 0,
	1759, 1760, 1766, 1787, 1765, 1761, 0, 1758, 1756, 1757,
	1749, 1750, 1751, 1752, 1754, 1755, 0, 0, 1745, 1746,
	3976, 1778, 1779, 1780, 1788, 1789, 1790, 0, 0, 0,
	0, 0, 0, 0, 0, 1785, 0, 0, 1795, 0,
	1781, 1776, 0, 0, 0, 1775, 1777, 0, 1748, 0,
	0, 0, 0, 0, 0, 0, 0, 1794, 0, 0,
	0, 0, 1791, 0, 1792, 0, 0, 0, 0, 0,
	0, 1762, 1763, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1747, 0, 0, 0, 0, 0, 1783,
	0, 0, 0, 1767, 0, 0, 0, 0, 0, 0,
	0, 0, 1764, 0, 1768, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1793, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1782, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1770, 1771, 1772,
	1773, 0, 0, 0, 0, 0, 0, 1753, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1745,
	1746, 0, 1778, 1779, 1780, 1788, 1789, 1790, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1781, 1776, 0, 1785, 0, 0, 1795, 1774, 1748,
	0, 0, 0, 0, 1775, 1777, 0, 0, 1794, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1769,
	0, 1791, 0, 1792, 0, 0, 0, 0, 0, 0,
	1762, 1763, 0, 0, 1747, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1767, 1786, 0, 0, 1783, 0,
	0, 0, 0, 1764, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1768, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1793, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1782, 0, 0, 0, 1770, 1771,
	1772, 1773, 0, 0, 0, 0, 0, 0, 1753, 0,
	0, 0, 0, 0, 0, 0, 0, 1784, 0, 0,
	0, 0, 1759, 1760, 1766, 1787, 1765, 1761, 0, 1758,
	1756, 1757, 1749, 1750, 1751, 1752, 1754, 1755, 0, 0,
	0, 0, 3912, 0, 0, 1785, 0, 0, 1795, 0,
	0, 0, 0, 0, 0, 1775, 1777, 1774, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1791, 0, 1792, 0, 0, 0, 1769, 0,
	0, 1762, 1763, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1783,
	0, 0, 1745, 1746, 1786, 1778, 1779, 1780, 1788, 1789,
	1790, 0, 0, 0, 1768, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1781, 1776, 0, 0, 0, 0,
	0, 0, 1748, 0, 0, 0, 0, 0, 0, 0,
	0, 1794, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1793, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1747, 0, 0,
	0, 0, 0, 0, 0, 1782, 0, 1767, 0, 0,
	0, 0, 0, 0, 0, 0, 1764, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1784, 0, 0, 0,
	0, 1759, 1760, 1766, 1787, 1765, 1761, 0, 1758, 1756,
	1757, 1749, 1750, 1751, 1752, 1754, 1755, 0, 0, 0,
	0, 3911, 0, 0, 0, 0, 0, 0, 1774, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1769,
	0, 1770, 1771, 1772, 1773, 0, 0, 0, 0, 0,
	0, 1753, 0, 0, 1745, 1746, 0, 1778, 1779, 1780,
	1788, 1789, 1790, 0, 0, 1786, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1781, 1776, 0, 0,
	0, 0, 0, 0, 1748, 0, 0, 0, 1785, 0,
	0, 1795, 0, 1794, 0, 0, 0, 0, 1775, 1777,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1791, 0, 1792, 0, 1747,
	0, 0, 0, 0, 1762, 1763, 0, 0, 0, 1767,
	0, 0, 0, 0, 0, 0, 0, 0, 1764, 0,
	0, 0, 1783, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1768, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1784, 0, 0,
	0, 0, 1759, 1760, 1766, 1787, 1765, 1761, 0, 1758,
	1756, 1757, 1749, 1750, 1751, 1752, 1754, 1755, 0, 0,
	0, 0, 3910, 0, 0, 0, 0, 0, 0, 0,
	1793, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1770, 1771, 1772, 1773, 0, 1782, 0,
	0, 0, 0, 1753, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1785, 0, 0, 1795, 0, 0, 0, 0, 0, 0,
	1775, 1777, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1774, 0, 0, 0, 0, 0, 1791, 0, 1792,
	0, 0, 0, 0, 0, 0, 1762, 1763, 0, 0,
	0, 0, 1769, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1783, 0, 1745, 1746, 0, 1778,
	1779, 1780, 1788, 1789, 1790, 0, 0, 0, 1786, 1768,
	0, 0, 0, 0, 0, 0, 0, 0, 1781, 1776,
	0, 0, 0, 0, 0, 0, 1748, 0, 0, 0,
	0, 0, 0, 0, 0, 1794, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1793, 0, 0, 0, 0, 0, 0, 0,
	0, 1747, 0, 0, 0, 0, 0, 0, 0, 0,
	1782, 1767, 0, 0, 0, 0, 0, 0, 0, 0,
	1764, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1784, 0, 0, 0, 0, 1759, 1760, 1766, 1787, 1765,
	1761, 0, 1758, 1756, 1757, 1749, 1750, 1751, 1752, 1754,
	1755, 0, 0, 1774, 0, 3583, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1769, 1770, 1771, 1772, 1773, 0,
	0, 0, 0, 0, 0, 1753, 0, 0, 1745, 1746,
	0, 1778, 1779, 1780, 1788, 1789, 1790, 0, 0, 0,
	1786, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1781, 1776, 0, 0, 0, 0, 0, 0, 1748, 0,
	0, 0, 1785, 0, 0, 1795, 0, 1794, 0, 0,
	0, 0, 1775, 1777, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1791,
	0, 1792, 0, 1747, 0, 0, 0, 0, 1762, 1763,
	0, 0, 0, 1767, 0, 0, 0, 0, 0, 0,
	0, 0, 1764, 0, 0, 0, 1783, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1768, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1784, 0, 0, 0, 0, 1759, 1760, 1766,
	1787, 1765, 1761, 0, 1758, 1756, 1757, 1749, 1750, 1751,
	1752, 1754, 1755, 0, 0, 0, 0, 3109, 0, 0,
	0, 0, 0, 0, 1793, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1770, 1771, 1772,
	1773, 0, 1782, 0, 0, 0, 0, 1753, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1785, 0, 0, 1795, 0, 0,
	0, 0, 0, 0, 1775, 1777, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1774, 0, 0, 0, 0,
	0, 1791, 0, 1792, 0, 0, 0, 0, 0, 0,
	1762, 1763, 0, 0, 0, 0, 1769, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1783, 0,
	1745, 1746, 0, 1778, 1779, 1780, 1788, 1789, 1790, 0,
	0, 0, 1786, 1768, 0, 0, 0, 0, 0, 0,
	0, 0, 1781, 1776, 0, 0, 0, 0, 0, 0,
	1748, 0, 0, 0, 0, 0, 0, 0, 0, 1794,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1793, 0, 0, 0,
	0, 0, 0, 0, 0, 1747, 0, 0, 0, 0,
	0, 0, 0, 0, 1782, 1767, 0, 0, 0, 0,
	0, 0, 0, 0, 1764, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1784, 0, 0, 0, 0, 1759,
	1760, 1766, 1787, 1765, 1761, 0, 1758, 1756, 1757, 1749,
	1750, 1751, 1752, 1754, 1755, 0, 0, 1774, 0, 3108,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1769, 1770,
	1771, 1772, 1773, 0, 0, 0, 0, 0, 0, 1753,
	0, 0, 1745, 1746, 0, 1778, 1779, 1780, 1788, 1789,
	1790, 0, 0, 0, 1786, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1781, 1776, 0, 0, 0, 0,
	0, 0, 1748, 0, 0, 0, 1785, 0, 0, 1795,
	0, 1794, 0, 0, 0, 0, 1775, 1777, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1791, 0, 1792, 0, 1747, 0, 0,
	0, 0, 1762, 1763, 0, 0, 0, 1767, 0, 0,
	0, 0, 0, 0, 0, 0, 1764, 0, 0, 0,
	1783, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1768, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1784, 0, 0, 0,
	0, 1759, 1760, 1766, 1787, 1765, 1761, 0, 1758, 1756,
	1757, 1749, 1750, 1751, 1752, 1754, 1755, 0, 0, 0,
	0, 3107, 0, 0, 0, 0, 0, 0, 1793, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1770, 1771, 1772, 1773, 0, 1782, 0, 0, 0,
	0, 1753, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1785, 0,
	0, 1795, 0, 0, 0, 0, 0, 0, 1775, 1777,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1774,
	0, 0, 0, 0, 0, 1791, 0, 1792, 0, 0,
	0, 0, 0, 0, 1762, 1763, 0, 0, 0, 0,
	1769, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1783, 0, 1745, 1746, 0, 1778, 1779, 1780,
	1788, 1789, 1790, 0, 0, 0, 1786, 1768, 0, 0,
	0, 0, 0, 0, 0, 0, 1781, 1776, 0, 0,
	0, 0, 0, 0, 1748, 0, 0, 0, 0, 0,
	0, 0, 0, 1794, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1793, 0, 0, 0, 0, 0, 0, 0, 0, 1747,
	0, 0, 0, 0, 0, 0, 0, 0, 1782, 1767,
	0, 0, 0, 0, 0, 0, 0, 0, 1764, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1784, 0,
	0, 0, 0, 1759, 1760, 1766, 1787, 1765, 1761, 0,
	1758, 1756, 1757, 1749, 1750, 1751, 1752, 1754, 1755, 0,
	0, 1774, 0, 3106, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1769, 1770, 1771, 1772, 1773, 0, 0, 0,
	0, 0, 0, 1753, 4560, 0, 1745, 1746, 0, 1778,
	1779, 1780, 1788, 1789, 1790, 0, 0, 0, 1786, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1781, 1776,
	0, 0, 0, 0, 0, 0, 1748, 0, 0, 0,
	1785, 0, 0, 1795, 0, 1794, 0, 0, 0, 0,
	1775, 1777, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1791, 0, 1792,
	0, 1747, 0, 0, 0, 0, 1762, 1763, 0, 0,
	0, 1767, 0, 0, 0, 0, 0, 0, 0, 0,
	1764, 0, 0, 0, 1783, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1768,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1784, 0, 0, 0, 0, 1759, 1760, 1766, 1787, 1765,
	1761, 0, 1758, 1756, 1757, 1749, 1750, 1751, 1752, 1754,
	1755, 0, 0, 3073, 0, 0, 0, 0, 0, 0,
	0, 0, 1793, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1770, 1771, 1772, 1773, 0,
	1782, 0, 0, 0, 0, 1753, 0, 3169, 0, 0,
	0, 3168, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4559, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1785, 0, 0, 1795, 0, 0, 0, 0,
	0, 0, 1775, 1777, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1774, 0, 0, 0, 0, 0, 1791,
	0, 1792, 0, 0, 0, 0, 0, 0, 1762, 1763,
	0, 0, 0, 0, 1769, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1783, 0, 0, 0,
	1745, 1746, 0, 1778, 1779, 1780, 1788, 1789, 1790, 0,
	1786, 1768, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1781, 1776, 0, 0, 0, 0, 3044, 0,
	1748, 0, 0, 0, 0, 0, 0, 0, 0, 1794,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1793, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1747, 0, 0, 0, 0,
	0, 0, 1782, 0, 0, 1767, 0, 0, 0, 0,
	0, 0, 0, 0, 1764, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1784, 0, 0, 0, 0, 1759, 1760, 1766,
	1787, 1765, 1761, 3045, 1758, 1756, 1757, 1749, 1750, 1751,
	1752, 1754, 1755, 0, 0, 1774, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1769, 0, 0, 1770,
	1771, 1772, 1773, 0, 0, 2608, 0, 0, 0, 1753,
	0, 0, 1745, 1746, 0, 1778, 1779, 1780, 1788, 1789,
	1790, 0, 1786, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1781, 1776, 0, 0, 0, 2607,
	0, 0, 1748, 0, 0, 0, 1785, 0, 0, 1795,
	0, 1794, 0, 0, 0, 0, 1775, 1777, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1791, 0, 1792, 0, 1747, 0, 0,
	0, 0, 1762, 1763, 0, 0, 0, 1767, 0, 0,
	0, 0, 0, 0, 0, 0, 1764, 0, 0, 0,
	1783, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1768, 0, 0, 0, 0,
	0, 0, 0, 0, 1784, 0, 0, 0, 0, 1759,
	1760, 1766, 1787, 1765, 1761, 0, 1758, 1756, 1757, 1749,
	1750, 1751, 1752, 1754, 1755, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1793, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1770, 1771, 1772, 1773, 0, 1782, 0, 0, 0,
	0, 1753, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1745, 1746, 0, 1778, 1779, 1780,
	1788, 1789, 1790, 0, 0, 0, 0, 0, 1785, 0,
	0, 1795, 0, 0, 0, 0, 1781, 1776, 1775, 1777,
	0, 0, 0, 0, 1748, 0, 0, 0, 0, 1774,
	0, 0, 0, 1794, 0, 1791, 0, 1792, 0, 0,
	0, 0, 0, 0, 1762, 1763, 0, 0, 0, 0,
	1769, 0, 0, 0, 0, 0, 0, 0, 0, 1747,
	0, 0, 1783, 0, 0, 0, 0, 0, 0, 1767,
	0, 0, 0, 0, 0, 0, 1786, 1768, 1764, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1793, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1782, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1770, 1771, 1772, 1773, 0, 0, 0,
	0, 0, 0, 1753, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1784, 0,
	0, 0, 0, 1759, 1760, 1766, 1787, 1765, 1761, 0,
	1758, 1756, 1757, 1749, 1750, 1751, 1752, 1754, 1755, 0,
	1785, 1774, 0, 1795, 0, 0, 0, 0, 0, 0,
	1775, 1777, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1769, 0, 0, 0, 0, 1791, 0, 1792,
	0, 0, 0, 0, 0, 0, 1762, 1763, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1786, 0,
	0, 0, 0, 0, 1783, 0, 0, 1745, 1746, 0,
	1778, 1779, 1780, 1788, 1789, 1790, 0, 0, 0, 1768,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1781,
	1776, 0, 0, 0, 0, 0, 0, 1748, 0, 0,
	0, 0, 0, 0, 0, 0, 1794, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1793, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1747, 0, 0, 0, 0, 0, 0, 0,
	1782, 1039, 1767, 0, 0, 0, 0, 0, 0, 0,
	0, 1764, 0, 0, 0, 0, 0, 0, 0, 0,
	1784, 0, 0, 0, 0, 1759, 1760, 1766, 1787, 1765,
	1761, 0, 1758, 1756, 1757, 1749, 1750, 1751, 1752, 1754,
	1755, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1774, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1769, 0, 1770, 1771, 1772, 1773,
	0, 0, 0, 0, 0, 0, 1753, 0, 0, 1745,
	1746, 0, 1778, 1779, 1780, 1788, 1789, 1790, 0, 0,
	1786, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1781, 1776, 0, 0, 0, 0, 0, 0, 1748,
	0, 0, 0, 1785, 0, 0, 1795, 0, 1794, 0,
	0, 0, 0, 1775, 1777, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1791, 0, 1792, 0, 1747, 0, 0, 0, 0, 1762,
	1763, 0, 0, 0, 1767, 0, 0, 0, 0, 0,
	0, 0, 0, 1764, 0, 0, 0, 1783, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1768, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1784, 0, 0, 0, 0, 1759, 1760, 1766,
	1787, 1765, 1761, 0, 1758, 1756, 1757, 1749, 1750, 1751,
	1752, 1754, 1755, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1793, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1770, 1771,
	1772, 1773, 0, 1782, 0, 0, 0, 0, 1753, 0,
	0, 0, 0, 0, 3175, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1745, 1746, 0, 1778, 1779, 1780, 1788, 1789, 1790,
	0, 0, 0, 0, 0, 1785, 0, 0, 1795, 0,
	0, 0, 0, 1781, 1776, 1775, 1777, 0, 3170, 0,
	0, 1748, 0, 0, 0, 0, 1774, 0, 0, 0,
	1794, 0, 1791, 0, 1792, 0, 0, 0, 0, 0,
	0, 1762, 1763, 0, 0, 0, 0, 1769, 0, 0,
	0, 0, 0, 0, 0, 0, 1747, 0, 0, 1783,
	0, 0, 0, 0, 0, 0, 1767, 0, 0, 0,
	0, 0, 0, 1786, 1768, 1764, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3564, 1793, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1782, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1770, 1771, 1772, 1773, 0, 0, 0, 0, 0, 0,
	1753, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1784, 0, 0, 0, 0,
	1759, 1760, 1766, 1787, 1765, 1761, 0, 1758, 1756, 1757,
	1749, 1750, 1751, 1752, 1754, 1755, 0, 1785, 1774, 0,
	1795, 0, 0, 0, 0, 0, 0, 1775, 1777, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1769,
	0, 0, 0, 0, 1791, 0, 1792, 0, 0, 0,
	0, 0, 0, 1762, 1763, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1786, 0, 0, 0, 0,
	0, 1783, 0, 1745, 1746, 0, 1778, 1779, 1780, 1788,
	1789, 1790, 0, 0, 0, 0, 1768, 0, 0, 0,
	0, 0, 0, 0, 0, 1781, 1776, 0, 0, 0,
	0, 0, 0, 1748, 0, 0, 0, 0, 0, 0,
	0, 0, 1794, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1793,
	0, 0, 0, 0, 0, 0, 0, 0, 1747, 0,
	0, 0, 0, 0, 0, 0, 0, 1782, 1767, 0,
	0, 0, 0, 0, 0, 0, 0, 1764, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1784, 0, 0,
	0, 0, 1759, 1760, 1766, 1787, 1765, 1761, 0, 1758,
	1756, 1757, 1749, 1750, 1751, 1752, 1754, 1755, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1774, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1769, 1770, 1771, 1772, 1773, 0, 0, 0, 0,
	0, 0, 1753, 0, 0, 1745, 1746, 0, 1778, 1779,
	1780, 1788, 1789, 1790, 0, 0, 0, 1786, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1781, 1776, 0,
	0, 0, 3110, 0, 0, 1748, 0, 0, 0, 1785,
	0, 0, 1795, 0, 1794, 0, 0, 0, 0, 1775,
	1777, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1791, 0, 1792, 0,
	1747, 0, 0, 0, 0, 1762, 1763, 0, 0, 0,
	1767, 0, 0, 0, 0, 0, 0, 0, 0, 1764,
	0, 0, 0, 1783, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1768, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1784,
	0, 0, 0, 0, 1759, 1760, 1766, 1787, 1765, 1761,
	0, 1758, 1756, 1757, 1749, 1750, 1751, 1752, 1754, 1755,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1793, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1770, 1771, 1772, 1773, 0, 1782,
	0, 0, 0, 0, 1753, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3137,
	0, 0, 0, 0, 0, 0, 0, 1745, 1746, 0,
	1778, 1779, 1780, 1788, 1789, 1790, 0, 0, 0, 0,
	0, 1785, 0, 0, 1795, 0, 0, 0, 0, 1781,
	1776, 1775, 1777, 0, 0, 0, 0, 1748, 0, 0,
	0, 0, 1774, 0, 0, 0, 1794, 0, 1791, 0,
	1792, 0, 0, 0, 0, 0, 0, 1762, 1763, 0,
	0, 0, 0, 1769, 0, 0, 0, 0, 0, 0,
	0, 0, 1747, 0, 0, 1783, 0, 0, 0, 0,
	0, 0, 1767, 0, 0, 0, 0, 0, 0, 1786,
	1768, 1764, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1793, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1782, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1770, 1771, 1772, 1773,
	0, 0, 0, 0, 0, 0, 1753, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1784, 0, 0, 0, 0, 1759, 1760, 1766, 1787,
	1765, 1761, 0, 1758, 1756, 1757, 1749, 1750, 1751, 1752,
	1754, 1755, 0, 1785, 1774, 0, 1795, 0, 0, 0,
	0, 0, 0, 1775, 1777, 1745, 1746, 0, 1778, 1779,
	1780, 1788, 1789, 1790, 0, 1769, 0, 0, 0, 0,
	1791, 0, 1792, 0, 0, 0, 0, 1781, 1776, 1762,
	1763, 0, 0, 0, 0, 1748, 0, 0, 0, 0,
	0, 1786, 0, 0, 1794, 0, 0, 1783, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1768, 0, 0, 0, 0, 0, 0, 0,
	1747, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1767, 0, 0, 0, 0, 0, 0, 0, 0, 1764,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1793, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1782, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1784, 0, 0, 0, 0, 1759, 1760,
	1766, 1787, 1765, 1761, 0, 1758, 1756, 1757, 1749, 1750,
	1751, 1752, 1754, 1755, 1770, 1771, 1772, 1773, 0, 0,
	0, 0, 0, 0, 1753, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1774, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1745, 1746, 0,
	1778, 1779, 1780, 1788, 1789, 1790, 0, 1769, 0, 0,
	0, 1785, 0, 0, 1795, 0, 0, 0, 0, 0,
	1776, 1775, 1777, 0, 0, 0, 0, 1748, 0, 0,
	0, 0, 0, 1786, 0, 0, 1794, 0, 1791, 0,
	1792, 0, 0, 0, 0, 0, 0, 1762, 1763, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1747, 0, 0, 1783, 0, 0, 0, 0,
	0, 0, 1767, 0, 0, 0, 0, 0, 0, 0,
	1768, 1764, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1793, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1784, 0, 0, 0, 0,
	1759, 1760, 1766, 1787, 1765, 1761, 0, 1758, 1756, 1757,
	1749, 1750, 1751, 1752, 1754, 1755, 1770, 1771, 1772, 1773,
	0, 0, 0, 0, 0, 0, 1753, 0, 0, 1745,
	1746, 0, 1778, 1779, 1780, 1788, 1789, 1790, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1776, 0, 0, 0, 0, 0, 0, 1748,
	0, 0, 0, 1785, 1774, 0, 1795, 0, 1794, 0,
	0, 0, 0, 1775, 1777, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1769, 0, 0, 0, 0,
	1791, 0, 1792, 0, 1747, 0, 0, 0, 0, 1762,
	1763, 0, 0, 0, 1767, 0, 0, 0, 0, 0,
	0, 1786, 0, 1764, 0, 0, 0, 1783, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1768, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1793, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1770, 1771,
	1772, 1773, 0, 0, 0, 0, 0, 0, 1753, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1784, 0, 0, 0, 0, 1759, 1760,
	1766, 1787, 1765, 1761, 0, 1758, 1756, 1757, 1749, 1750,
	1751, 1752, 1754, 1755, 0, 1785, 0, 0, 1795, 930,
	0, 976, 0, 0, 0, 1775, 1777, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1774, 0, 0, 0,
	0, 0, 0, 0, 0, 938, 0, 0, 0, 0,
	0, 1762, 1763, 0, 0, 0, 0, 1769, 0, 0,
	0, 952, 0, 936, 935, 0, 0, 0, 0, 1783,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1786, 1768, 0, 0, 0, 0, 0,
	0, 937, 0, 0, 0, 0, 940, 0, 0, 0,
	0, 984, 0, 0, 0, 0, 0, 0, 0, 0,
	949, 950, 0, 0, 0, 0, 0, 0, 0, 966,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 977, 942, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 943, 0, 0, 0, 0,
	0, 0, 0, 0, 975, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1784, 0, 0, 0, 0,
	1759, 1760, 1766, 1787, 1765, 1761, 0, 1758, 1756, 1757,
	1749, 1750, 1751, 1752, 1754, 1755, 0, 0, 1774, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 945,
	0, 0, 0, 0, 0, 0, 0, 934, 0, 1769,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 946, 947, 0, 0,
	0, 0, 0, 0, 0, 1786, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 954, 953, 0, 0, 0,
	0, 0, 0, 948, 0, 0, 0, 963, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 981, 974, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 978, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1784, 0, 0,
	0, 0, 1759, 1760, 1766, 1787, 1765, 1761, 0, 1758,
	1756, 1757, 1749, 1750, 1751, 1752, 1754, 1755, 0, 941,
	0, 0, 983, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 939, 0, 0, 0, 970, 971,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 973, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 968, 0, 0, 0, 0, 0, 0,
	982, 964, 0, 957, 955, 0, 960, 0, 0, 0,
	0, 0, 961, 0, 0, 932, 0, 979, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 933, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	972, 0, 962, 0, 0, 0, 0, 0, 959, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 980,
	0, 0, 0, 0, 0, 0, 0, 965, 0, 0,
	0, 0, 0, 0, 0, 0, 944, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	967, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 969,
}

var sqlPact = [...]int{
	6453, -1000, -1000, -1000, -1000, 174, -1000, -1000, 172, 171,
	170, 167, 166, 165, 162, 161, 157, 156, 155, -1000,
	-1000, -1000, -1000, -1000, -1000, 154, -1000, -1000, 152, -1000,
	151, 150, 148, -1000, -1000, 147, -1000, 144, -1000, -1000,
	-1000, -1000, 143, 142, 141, 89206, 88661, 89744, 2183, 109804,
	96228, 1988, 79969, 109259, 79424, 108714, 1987, 10277, 108169, 2633,
	140, -1000, 107624, 139, 138, 137, -1000, 107079, -1000, 1961,
	-1000, 136, -1000, 6079, 64673, 135, 130, 129, 2240, 127,
	-1000, 122, 120, -1000, -1000, 118, -1000, 12790, 1443, -1000,
	115, 114, -1000, 643, 94055, 113, 111, 2332, 108, 104,
	64128, 101, 100, 2312, 2734, -1000, -1000, 1910, -1000, -1000,
	97, 96, 93, 82, 81, 79, 77, 76, 75, 74,
	72, -1000, 71, 70, 69, 68, 67, -1000, 63, 62,
	57, -1000, 56, -1000, 54, 52, 47, 46, 45, 44,
	42, 41, 40, 32, 31, 30, 27, 26, 122007, -1000,
	1730, 1611, 1607, 1605, 1596, 1591, 964, 25, 24, 23,
	22, 21, 20, 19, 18, 17, 16, 15, 13, 10,
	8, 7, 6, 5, 134, 3, 1, 0, -1, -2,
	-5, -7, 2213, -1000, 1492, 869, 30213, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 115722, 110342, -8, -59, -10, -1000, 3107,
	997, 53208, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	263, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 463, 1778, 728, -1000, -1000, -1000, 106541, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2180, -35, -1000, 1848,
	-1000, -1000, -1000, -1000, -1000, 725, -1000, 2178, 293, 2097,
	-1000, -1000, -1000, 3188, 2342, 3577, 3576, 3574, 3572, 3570,
	115184, 1741, 3568, 2417, 3566, 3565, 3562, 3560, 3555, 3554,
	3553, -1000, 88116, 998, 87571, 87026, 3209, 106003, 86481, 105458,
	73440, 45301, 845, 3186, -1000, -1000, -1000, -1000, -1000, -1000,
	110342, -1000, 996, -1000, -1000, 3549, 3538, 2001, 724, 95683,
	-1000, 1590, -1000, 912, 31929, -1000, 1178, -1000, 31929, 256,
	-1000, -1000, -1000, -1000, -1000, -1000, 3533, 3532, 3530, 3528,
	3527, -1000, -1000, 78879, 23297, 78334, 77789, 104913, 22740, 85936,
	85391, 3526, 3523, 3522, 3521, 104368, 72883, 994, 1377, -1000,
	-1000, -1000, -1000, -1000, -1000, -32, 70655, 3344, 110342, -1000,
	239, -1000, -1000, -1000, -1000, -1000, -1000, 44717, 853, 44133,
	662, 43549, 567, -1000, -1000, -1000, -1000, 72326, -1000, 103823,
	2339, 3520, 3519, 1077, 3518, 3087, 1735, 3515, 1707, 1164,
	3511, 3508, 3506, 3505, 3504, 3502, 3500, 1376, 103278, 2777,
	1417, 102733, 1624, 71769, 993, 84846, 89744, 2487, 102188, 1331,
	1214, -1000, -1000, -1000, -1000, 2896, 2724, 2723, 1307, -1000,
	-1000, -1000, -1000, 55927, 5578, 5574, 9886, 101643, 58702, 89744,
	89744, -1000, -1000, -1000, -1000, -1000, 42965, 588, 42381, 678,
	-1000, -1000, 56482, 2736, -1000, -1000, -1000, -1000, 41797, 383,
	41213, 593, 110342, -1000, 2773, 1856, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2249, 1555, 3362, 2583, 71212, 2033, 1375, 3147,
	2886, 2883, 1486, 2879, 3498, 2469, 2876, 2862, 2858, 2853,
	2852, 1208, 2459, 311, 29629, 2754, 1554, 40629, 1480, 1487,
	2850, 2849, 3380, 1816, 1905, 1992, 77244, 3497, 3496, 3118,
	2845, 2843, 2629, 2835, -1000, 2732, -1000, -1000, -1000, -1000,
	1446, -1000, -1000, -1000, -1000, 80507, -1000, -1000, 1268, -1000,
	-1000, 1268, -1000, -1000, -1000, -1000, -1000, 1196, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1492,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1861, -1000, 1975, -1000, -1000, 2368, 3080, 3080, 3080, 3184,
	416, 413, -1000, 134, -1000, -1000, 121206, -1000, -1000, 45873,
	45873, 45873, 45873, 45873, 45873, 45873, 1991, -1000, 722, -1000,
	-1000, 773, -1000, 719, 594, -1000, -1000, -1000, -1000, -1000,
	-1000, 716, -1000, -1000, -1000, -1000, -1000, -1000, 3344, -1000,
	26137, -1000, -1000, -1000, 386, 715, 45873, -1000, -1000, 3398,
	3397, 979, -1000, 215, 924, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2766, 714, 710,
	-1000, 709, 708, 706, 703, 700, -1000, -1000, -1000, 699,
	697, 696, 695, 694, 691, 690, 687, -1000, 1866, -1000,
	-1000, -1000, -1000, -1000, -1000, 635, 630, 630, 630, -1000,
	987, -1000, -1000, -1000, 342, 629, 236, 628, 627, 623,
	-1000, 685, 684, 683, 682, 681, 679, 677, 674, 660,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 984, -1000, -1000,
	-1000, -1000, -33, 110342, -1000, 463, -33, -1000, -1000, 659,
	-1000, 34229, 34229, 34229, -1000, -1000, 2177, 45873, -1000, 2308,
	-1000, -27, -27, 856, 54837, -1000, 52097, 856, 400, 786,
	60333, -1000, 2731, -1000, -1000, 655, 213, -1000, -1000, -1000,
	-1000, 23852, 2727, 110342, 110342, 89744, 89744, 89744, 3495, 2865,
	45873, -1000, -1000, 68462, 110342, 90282, -1000, -1000, 3298, 65211,
	67924, 110342, 2765, 67386, 3493, -1000, -1000, -1000, -1000, -1000,
	2951, 3491, 3485, 3483, -1000, 110342, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 221, 2949, -1000, -1000, 93510, 221, 2947,
	-1000, 221, 2945, -1000, 92972, -1000, -1000, 2073, 2944, -1000,
	-1000, 228, 2943, -1000, -1000, -1000, 223, 2941, -1000, -1000,
	210, -69, 2939, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 121206, -1000, -1000, -1000, 66841,
	-1000, 3123, -1000, -1000, 110342, -1000, 45873, -1000, 3296, 1413,
	74540, 3242, -48, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2396, 2377, 1129, 2226, -1000, 2977, 1328, -1000, 31929, 3075,
	-1000, -1000, -1000, 206, 23852, -1000, -1000, -1000, -1000, -1000,
	-1000, 2121, 2938, 1166, -1000, 2220, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2055, 2937, -1000, 1985, 2935, 1832,
	-1000, -1000, 2826, -1000, 3106, -1000, -1000, 1805, 2934, -25,
	-1000, -1000, 2241, -1000, -1000, -1000, -1000, -1000, 1784, -1000,
	954, 2932, -1000, 84301, 58147, 56482, 70655, -40, -1000, -1000,
	-1000, -1000, -161, -1000, 22183, 121206, -1000, -1000, -1000, -1000,
	1621, 121206, 851, -1000, -1000, 2928, -1000, 121206, 850, -1000,
	-1000, 2918, -1000, 2764, -1000, -1000, 2282, -1000, -1000, 3482,
	-1000, -1000, 3481, -1000, 3479, 3478, 3477, -1000, 1516, 1840,
	3476, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 83763,
	2175, -1000, -1000, 82673, 2761, -1000, 2277, 3214, -1000, 83218,
	992, -1000, 954, 2276, -1000, 92434, 963, 2275, -1000, 3474,
	3206, 2542, 954, 2274, -1000, -1000, -1000, -1000, -1000, 779,
	-1000, 61959, -1000, 61959, -1000, 1491, -1000, 114646, -27, 89744,
	3344, -1000, -66, -1000, -1000, -1000, 997, -1000, 55382, -1000,
	55382, 95138, 73995, 932, 692, 63583, 121206, -1000, -1000, -1000,
	-1000, 121206, -1000, -1000, -1000, -158, 2581, -1000, 73995, 57592,
	121206, -1000, -1000, -1000, -1000, 121206, -1000, -1000, -1000, 73995,
	82673, -1000, 101098, 82135, -1000, -1000, 1346, 2446, -1000, -1000,
	-1000, 73995, 1267, 73995, 73995, 73995, -1000, 100553, -1000, -1000,
	1934, 1199, 3108, 1932, 89744, -1000, 1772, -1000, -1000, -1000,
	3136, 110342, -1000, -1000, 2755, -1000, 66296, 91896, -1000, 91358,
	-1000, 90820, -1000, 89744, -1000, 89744, -1000, 3473, 3472, 3468,
	-1000, -1000, 3467, -1000, 3466, 3128, -1000, 121206, 3127, -1000,
	3464, 3236, 2754, 121206, -1000, 2863, 1613, 1609, 110342, -1000,
	-1000, 110342, -1000, 110342, -1000, -1000, -1000, 1439, -1000, -1000,
	2385, -1000, -1000, -1000, -1000, 89744, 1179, -1000, -1000, -1000,
	-1000, -1000, -1000, 2832, 3463, 1639, -1000, 1770, -1000, 2725,
	3094, -1000, 1255, -1000, -1000, 233, -1000, -1000, -48, -1000,
	114108, -1000, 2368, -1000, 110342, -1000, 2395, 2746, 2753, 1600,
	2201, 2495, -1000, 40045, 2448, 49305, 2217, 134, -1000, -1000,
	134, 134, 31357, -1000, -1000, 65211, 65211, 23852, 1204, 45873,
	45873, 45873, 45873, 45873, 45873, 45873, 45873, 45873, 45873, 45873,
	45873, 45873, 45873, 45873, 45873, 45873, 45873, 45873, 45873, 45873,
	45873, 45873, 45873, 45873, 45873, 45873, 45873, 45873, 45873, 45873,
	45873, 45873, 45873, 45873, 1948, 45873, 1195, 45873, 45873, 45873,
	45873, 1989, -1000, -1000, 1854, 513, 1904, -1000, 3346, 3346,
	3346, 498, 498, 121616, 121616, 564, 3462, 773, -1000, 45873,
	-1000, 98, 45873, 24409, -1000, 413, 8858, 2306, -1000, 412,
	24993, -1000, -1000, -1000, 26137, 594, 39461, 45873, 972, 121206,
	-1000, -1000, 1440, 3360, 21627, 2791, 2626, 653, 820, 805,
	29045, 28461, 27877, 27293, 596, 45873, 45873, 45873, 45873, 45873,
	45873, 45873, 45873, -1000, -1000, 3373, -1000, 3360, -1000, -1000,
	-1000, -1000, 3360, 1203, 1198, 3360, -1000, 3360, 3360, 8084,
	8084, 38889, 38305, 37721, 49877, 37137, 45873, 26709, 36553, 35969,
	-1000, 110342, -33, 3295, 45873, 286, -1000, 119761, -1000, 286,
	286, 645, -72, 121206, 2440, 2440, 53751, 2280, 2009, 2009,
	2009, -1000, 856, 17150, 856, 99470, 2026, 856, 856, 204,
	304, 411, 51554, 2308, 99470, 758, 644, -11, -14, -18,
	-1000, -1000, -19, -20, -1000, -1000, 89744, 642, 24409, 23852,
	201, 1909, -81, 2470, 2467, 2466, -1000, 2465, -1000, 1655,
	-84, 1192, 89744, 110342, 3460, -93, -1000, 5213, -90, -1000,
	1010, 199, 3360, -1000, -1000, -1000, -1000, -1000, 3457, 3456,
	-1000, 981, 638, 636, 403, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 635, 630, 630, 630, -1000, 342, 629,
	236, 628, 627, 623, -1000, -1000, -1000, -1000, -1000, 2722,
	89744, 110342, 3455, -161, 90282, -77, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 110342, -1000, -1000, -1000, 3454, -1000,
	89744, -1000, -1000, 89744, 221, 2910, -1000, 89744, -1000, 89744,
	218, 2903, -1000, -1000, 110342, -1000, 89744, 89744, -1000, 110342,
	110342, 110342, 73995, 73995, 229, -1000, 89744, 865, -92, 1092,
	-48, -1000, -1000, -1000, 1268, -1000, 1746, -1000, -1000, -1000,
	-1000, -1000, -1000, 1385, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 979, -1000, -1000, -1000, -1000, -1000, -1000, 3366,
	3353, -34, -1000, -1000, 23852, -1000, -50, 1561, 1743, 1190,
	-1000, 76699, 2235, 3111, 3452, 2526, 3100, 1489, -1000, 1437,
	-1000, 3200, 80507, 3260, 3272, 1283, -1000, 2720, -1000, -1000,
	903, 1610, 1603, 1189, 1188, 80507, 1985, -1000, 65211, -1000,
	2533, 3179, 1347, 1421, 1347, 1347, 1353, -1000, 80507, 1587,
	1185, 1184, 1183, 1777, 1768, -1000, -1000, 1851, -1000, 1181,
	1180, 822, 1765, -1000, -52, 3256, 3271, 1264, -1000, 2719,
	1177, -1000, -1000, -1000, 3173, 89744, 23852, 1518, 1511, 1506,
	1575, 1176, -36, -1000, 3250, 1174, 1171, -1000, 5109, -1000,
	73995, 1818, 2898, 2580, 824, 2577, -1000, -1000, -1000, 824,
	-40, 70655, 110342, 198, -1000, 98, 45873, 45873, 98, 45873,
	98, 3227, 2884, -1000, -1000, -1000, -1000, -1000, 3451, 1801,
	2415, -1000, -1000, 620, 2273, 2717, 110342, 2499, -42, 89744,
	-1000, 65758, 2880, 69007, 1985, 2270, -1000, -1000, 81590, -1000,
	2870, 463, 2268, -1000, 641, 3449, 2869, -1000, 113570, -1000,
	3123, 1219, 2866, 1035, 742, 3292, -1000, 742, 62497, -1000,
	110342, -1000, -27, 4678, 75623, -97, -104, 406, -1000, 100015,
	110342, 1033, 76161, 110342, 3063, 952, 56482, -1000, 56482, -114,
	-158, 2576, 1407, 932, 932, 824, -1000, 824, -1000, 89744,
	2752, -1000, -1000, 73995, 932, 932, 932, -1000, -1000, -1000,
	-1000, 3448, 3447, 3445, 3443, -1000, -1000, 953, 89744, 110342,
	89744, -1000, 197, -1000, 110342, -1000, 110342, 110342, 89744, -1000,
	953, 110342, 953, 110342, 953, 110342, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 98, 45873, -1000, -1000, 3440, 1520, -1000,
	2749, -1000, 2747, -1000, 12, -1000, -1000, -1000, -1000, -1000,
	-1000, 1792, -1000, -1000, -1000, -1000, 89744, 89744, 89744, 89744,
	110342, 3001, -1000, 110342, 2998, 89744, -1000, 80507, -1000, 2395,
	2746, -1000, -1000, -1000, -1000, -1000, -1000, 1378, 2119, -1000,
	2443, -1000, 1469, -1000, -1000, -1000, 121206, 50432, -1000, -1000,
	121206, 1642, -1000, 48733, 48161, -1000, -1000, 1619, 89744, 2505,
	-1000, 2505, -126, -1000, 119589, 2441, 89744, -1000, -1000, -1000,
	-1000, -1000, 901, 559, 559, 1243, 1243, 1243, 1243, 3211,
	4812, 673, 6202, 261, 261, 6886, 6886, 6886, 6886, 6886,
	261, 5235, 498, 498, 5235, 5235, 5235, 5235, 5235, 498,
	498, 498, 261, 261, 261, 121616, 121424, 8757, 45873, 45873,
	1170, 1853, 513, 8012, 45873, 9371, 9371, 9371, 9371, -1000,
	1729, -1000, -1000, -1000, -1000, 2714, 619, 49877, 49877, -1000,
	-1000, -1000, -1000, 25565, 45873, -1000, -1000, -1000, -1000, 35385,
	-1000, -1000, 118891, -323, 405, -111, -57, -1000, 45873, 45873,
	45873, 397, -1000, 196, 45873, 110342, -1000, 14651, 756, -145,
	-1000, -115, 1371, -1000, 45873, -1000, -1000, 1168, -1000, 1163,
	1161, 1160, -1000, 617, 396, -1000, 192, -1000, 2002, 616,
	613, 45873, -1000, -1000, -1000, -1000, -1000, 118719, -1000, -1000,
	118457, -1000, -1000, 118285, -1000, -1000, 118023, -1000, -1000, -1000,
	121014, 14030, 12458, 11598, 8399, 11216, 10166, -130, 394, -131,
	393, 900, 897, 392, 390, 389, -132, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -133,
	388, -1000, 2713, -111, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 384, -1000, 380, -1000, 120842, -111, 379, 3115,
	-1000, 49877, 49877, 49877, -1000, 378, -1000, 119325, -1000, 120580,
	34813, 34813, 34813, 373, 120388, 45873, -111, -139, -1000, -140,
	-1000, -1000, 543, -146, 967, 34229, 52660, 23852, -1000, 967,
	967, 45873, -1000, 45873, 2457, -1000, -1000, -1000, -1000, 2455,
	2370, 2440, 53751, -1000, -1000, -1000, -1000, 99470, -1000, 3344,
	2539, -1000, 99470, -1000, -1000, 110342, 463, -1000, 99470, 99470,
	23852, 856, -1000, 856, 99470, 766, -1000, -1000, -1000, -1000,
	-1000, 372, 59245, -57, 188, 23852, 954, -1000, -1000, 2561,
	2561, 2561, 2561, -1000, -1000, 110342, 1159, -45, -80, -1000,
	3318, -1000, 1891, -1000, 65211, -1000, 771, 1022, 23852, -1000,
	-1000, -1000, 608, -1000, 3360, 3360, -1000, 3360, 110342, 2703,
	181, -1000, 158, 69007, 69007, 3437, -1000, -1000, 221, -1000,
	89744, 221, 221, -1000, 89744, 89744, 2073, -1000, 228, -1000,
	223, -1000, -1000, -69, -1000, 961, 31929, -1000, 1268, -1000,
	-1000, 1495, -1000, 1808, -1000, 1133, -1000, -1000, -1000, -1000,
	31929, -1000, 2271, 110342, 110342, 89744, -1000, 110342, -1000, 1995,
	69007, -1000, 2263, 113032, 2250, 65211, 110342, -1000, -1000, 607,
	919, 2436, 2435, 1031, 110342, 110342, 2432, 112494, 111956, -1000,
	3435, 110342, 1919, 45873, 3172, 2219, 1990, 98, 98, -1000,
	98, 98, 98, -1000, 606, 1298, 89744, 89744, 110342, 69007,
	89744, 1794, -1000, -1000, -1000, -1000, -1000, 81045, -1000, -1000,
	3370, 3369, -1000, 1347, -1000, -1000, -1000, 1347, 1985, 1723,
	110342, 69007, 89744, 69007, 110342, 110342, -1000, 1570, 110342, 1406,
	-1000, 822, 1906, 98, 98, -1000, 98, 98, 98, 605,
	23852, 1812, -1000, 2800, 110342, 3395, 111418, 3392, 110342, 110342,
	110342, 69007, 3162, 110342, 110342, 69007, 5109, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 70117, 1026,
	954, 1568, 1156, 1152, 80507, 56482, 951, 56482, 2550, -1000,
	-1000, 21071, -1000, 121206, 121206, -1000, 121206, -1000, 65758, 110342,
	-1000, 989, 110342, 76161, 926, 2864, 61421, -161, 932, 73995,
	89744, -42, 2499, 110342, -1000, -1000, 1985, 2859, 463, 2260,
	-1000, 73995, 3291, 2856, 604, 3433, 3431, -1000, 89744, 2170,
	2252, -1000, -1000, 110880, 2867, 822, 110342, 967, 53751, 1791,
	-1000, 59790, 1012, 110342, 1679, 103, -1000, -1000, -1000, -3,
	110342, -1000, 780, -1000, -1000, 4678, 4678, 932, -236, 598,
	-1000, 878, 877, 57037, 73995, -148, -1000, -1000, -1000, -1000,
	2250, 89744, 110342, 1253, 2541, 110342, -149, -1000, 186, 595,
	-1000, 2165, -1000, -158, -1000, 952, 56482, 2698, 2697, -1000,
	-1000, 960, -1000, 1218, 932, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -28, 110342, -161, -161,
	-43, -45, -1000, 953, -1000, 953, -1000, 953, -1000, 121206,
	-1000, -1000, 1514, 1490, 110342, -1000, 23852, 110342, 89744, 23852,
	89744, 2744, 2738, -1000, -1000, -1000, 110342, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1046, -1000, 1642, 2103, -1000, 594,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2361,
	-1000, -46, 31357, 887, -1000, -1000, 89744, -29, 45873, 45873,
	7405, 7194, 45873, 49877, 49877, -1000, 45873, 4750, -1000, -1000,
	-1000, -1000, -1000, 2696, 592, 45873, 65211, 8090, 6129, -1000,
	370, 9573, 5235, -1000, 45873, -1000, 369, 33657, -1000, 119953,
	-67, -160, -1000, 17719, -111, -163, -1000, -1000, 770, -1000,
	2857, -1000, 45873, 120216, 2326, 1771, 1644, 1517, 3360, 3388,
	20515, -1000, 63040, 968, 2068, 117851, -1000, -1000, -1000, -1000,
	65211, 65211, 45873, 45873, -1000, 45873, 45873, 45873, -1000, -1000,
	-1000, 3360, 896, -1000, -1000, -1000, 896, -1000, -1000, 1347,
	-1000, 1347, -1000, 45873, -1000, -1000, 2694, 45873, -1000, 65211,
	65211, 49877, 49877, 49877, 49877, 49877, 49877, 49877, 49877, 49877,
	49877, 49877, 49877, 49877, 49877, 49877, 49877, 49877, 49877, 49877,
	2391, 49877, 3343, 3343, 3343, -1000, 2728, 2694, 45873, 45873,
	65211, 367, 366, 364, -1000, 45873, -111, -1000, -1000, 4678,
	590, -1000, 2349, -1000, 2623, -1000, 45873, -1000, -142, -1000,
	2308, -1000, -1000, 2623, 2623, -166, 121206, 53751, 53751, -1000,
	589, 45873, 2452, -1000, -1000, 748, -313, -1000, 876, -1000,
	-1000, -1000, -1000, -1000, 463, -1000, -1000, -1000, 180, 99470,
	99470, 740, -1000, -169, -1000, -1000, -171, -1000, 3290, 362,
	23852, -1000, 967, 2535, -1000, -1000, -1000, -1000, -1000, -1000,
	-161, 110342, 110342, 2091, 3387, -1000, 3368, 763, 738, 179,
	3360, 361, 359, 358, -161, 110342, 110342, 110342, -1000, -1000,
	-1000, -1000, 221, -1000, -1000, -1000, 218, -1000, -1000, -1000,
	-1000, 2498, -1000, -48, -1000, -1000, -1000, 45873, -1000, -1000,
	3110, 1138, 1135, -1000, -1000, -1000, -1000, 2729, -1000, 2848,
	-1000, 2248, -1000, 1016, -1000, 1733, -1000, 45873, 587, 2536,
	578, 577, 3430, 1960, 3429, 1032, 2847, 2073, 2846, 2073,
	-1000, -1000, -1000, 915, -1000, 121206, 2219, -1000, 575, 574,
	-1000, -50, 1553, 1726, 1134, 959, -1000, -1000, -1000, -1000,
	45873, 45873, 98932, -1000, 447, 3106, -30, -1000, -1000, -1000,
	1562, 1131, 1130, -1000, -1000, -1000, -1000, 1985, 1542, 1126,
	1124, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 958, -1000,
	2811, 2810, 895, 110342, -1000, 957, -1000, -1000, -1000, -1000,
	45873, -1000, -52, 1122, 3235, 2247, 89744, -1000, 2073, 2844,
	1121, -1000, 1117, -1000, -1000, -1000, 3249, 3248, 1125, -1000,
	-1000, -1000, -1000, -1000, 69562, -1000, 110342, 69007, 89744, 1693,
	824, -1000, 2313, 824, 951, 2689, -1000, 2497, 956, 89744,
	3428, 357, -172, -54, 65211, 3289, -1000, 2186, 586, 89744,
	894, -1000, 3344, -1000, -1000, -1000, 955, -1000, 3212, 89744,
	3288, 2842, 954, 98, 89744, 3378, -1000, -1000, 3287, 89744,
	2839, 2168, 2246, 2401, 822, 75085, 954, 2032, -68, -1000,
	1679, 33073, 3104, -174, -1000, -1000, -1000, 967, 62497, 53751,
	45873, 3425, -177, -1000, -1000, -1000, -1000, -1000, 96773, 96773,
	73995, 73995, 73995, 932, 110342, 110342, 76161, -1000, -1000, 570,
	110342, 110342, 568, -1000, 110342, 110342, 3424, 73995, -55, 565,
	-1000, 872, 861, 859, -1000, -1000, -1000, -1000, -1000, 952,
	-1000, -158, 56482, 98, -1000, 2088, 89744, -1000, 19959, -1000,
	-1000, -1000, -1000, -1000, -1000, 953, -1000, -1000, 1947, 2216,
	1947, 1658, 1645, -1000, -1000, 2100, -1000, -1000, -1000, -1000,
	2496, 3071, 23852, 3213, 9371, 45873, 45873, 539, 5133, 1151,
	9371, 45873, 45873, 65211, 121788, -179, 45873, 45873, -1000, 45873,
	736, 121206, 3385, 45873, 356, 352, -1000, -1000, -1000, 3358,
	-1000, -1000, -1000, 121206, 45873, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 344, -1000, 178, -1000, -1000, -1000, 116260, -1000,
	45873, 343, 3170, -1000, 339, 336, 9122, 449, 117588, 117407,
	117218, 321, -1000, -1000, 320, 313, 121206, 2728, 121206, -1000,
	-1000, 750, 750, 1330, 1330, 1330, 1330, 3343, 490, 464,
	922, 337, 337, 337, 802, 791, 791, 337, 337, 337,
	2677, 2416, 563, 5481, -1000, -1000, 121206, 121206, 309, -1000,
	-1000, -1000, -111, 308, 4678, -1000, 2618, 3169, 121206, -1000,
	53751, 2618, 2618, -1000, -1000, 2370, 110342, 121206, 53751, -1000,
	2539, -1000, 18286, -1000, 23852, -1000, -1000, -1000, -1000, 3344,
	-1000, 59245, -1000, 560, -1000, 159, -1000, 2535, -1000, 858,
	-1000, -1000, 73995, 73995, -161, -182, -1000, -1000, 734, 3423,
	743, 23852, 303, -1000, -1000, -1000, -161, -161, -161, -1000,
	-1000, -1000, 3059, 121206, 110342, 110342, 1433, 98394, 110342, 2836,
	-1000, 2070, -1000, 1031, 116836, 54294, -1000, 54294, 110342, -1000,
	-1000, -1000, 1809, 1493, 3419, 1069, -1000, 3140, 110342, -1000,
	110342, -1000, -1000, -1000, 110342, 110342, 89744, 110342, -1000, 69007,
	2821, -186, 121206, -58, -1000, 854, -1000, 1355, -1000, 19403,
	110342, 69007, 89744, 110342, 69007, 89744, 1968, -1000, -1000, 2805,
	-1000, 2818, -187, 23852, -1000, 3384, 3383, 2834, 3144, -1000,
	110342, 3382, 110342, 89744, 3053, -1000, -1000, -1000, -1000, -1000,
	1541, 1115, 1114, 951, -60, 551, -1000, 846, -1000, -1000,
	837, -1000, 951, -1000, 73995, 56482, 3418, 463, -1000, 2523,
	-1000, 94593, 2116, 98, -1000, 3416, 97318, 548, -1000, 2081,
	-1000, 731, -1000, 2301, 69007, 1985, 98, 89744, -1000, -1000,
	463, 302, -64, -1000, 2851, 1024, 23852, 89744, 2831, 2408,
	822, 75085, -1000, 1219, 2495, -1000, -65, -1000, 633, 98,
	2032, -1000, -68, 121206, -1000, 834, -1000, -188, -1000, -1000,
	298, -1000, 3014, 3013, -1000, 2625, 54294, 547, 546, 110342,
	3006, -1000, -1000, -189, 2259, 2259, 73995, 56482, 73995, -1000,
	952, 824, -1000, 2279, -1000, -1000, -1000, -1000, -1000, 23852,
	1594, -1000, 542, 541, -1000, -1000, -1000, -1000, 3071, 9371,
	9371, 45873, 45873, 45873, 9371, 121788, -195, -1000, 9371, 9371,
	-111, -1000, -1000, 119953, -1000, -1000, -1000, 121206, -1000, 18847,
	1954, -1000, 116808, -1000, 31357, -1000, -1000, 45873, 45873, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 49877, 2672, 540,
	65211, -1000, -1000, 282, 965, 45873, 47589, 2308, 965, 965,
	-1000, -197, -1000, -1000, -1000, 3344, 159, -1000, -1000, 3415,
	23852, -1000, 73995, -1000, -1000, 3414, 561, -1000, 3412, -1000,
	-1000, -1000, -1000, -1000, 2575, 3286, -1000, 1760, -1000, 110342,
	-1000, 110342, -1000, 23852, 110342, 2613, 1202, -1000, 919, 2431,
	537, 49877, 89744, 581, -1000, 3311, 2615, -198, -1000, 110342,
	45873, 110342, -200, -205, 2231, -1000, -1000, 1194, 45873, -1000,
	-1000, -1000, 65211, 526, 2073, 2073, -206, -207, -1000, -1000,
	-1000, 45873, 1111, 110342, 32501, -1000, 3411, 3106, -1000, -1000,
	-1000, -1000, -1000, -1000, 110342, -1000, 45873, 1110, -1000, -1000,
	-1000, 3381, 2073, 23852, 2073, -1000, 2073, 3144, 1068, 110342,
	69007, 89744, -1000, 2400, 2400, 73995, 56482, -1000, -69, 951,
	-1000, 3283, 2520, 3410, -1000, -1000, -1000, -1000, 2429, -1000,
	-1000, 110342, 2423, 938, -1000, -208, -1000, 833, 830, 76161,
	926, 904, -1000, -75, 518, -1000, 828, -1000, -1000, -1000,
	-1000, 463, 3281, -1000, 3379, 517, 515, 110342, 2158, 514,
	23852, 3102, 822, 75085, -1000, 2867, 1679, -1000, 2243, 110342,
	3099, -1000, 2495, 513, -1000, 932, 510, 509, 2424, 2424,
	-215, 54294, 54294, -216, 508, 932, -1000, -222, -1000, -1000,
	-1000, -1000, -1000, -82, -1000, 857, 839, -1000, -1000, 89744,
	89744, 45873, 45873, -1000, 9371, 9371, 9371, -1000, 273, -1000,
	-1000, 2032, 3166, -1000, -83, 16439, 16289, 5349, 49877, 65211,
	-223, -1000, -1000, 110342, 121206, -91, -1000, 121206, 507, 506,
	409, -1000, -1000, -1000, 597, -1000, -1000, -1000, 3409, -1000,
	97856, 110342, -1000, -1000, 2004, -1000, -1000, -1000, 110342, 2242,
	-1000, -1000, -1000, 1030, 45873, 5481, 502, 45873, -1000, 3279,
	-1000, 2513, 2679, 1842, 54294, -1000, 3071, -1000, 15858, -1000,
	1021, 1744, -1000, -1000, -1000, 121206, 3144, 54294, -1000, -1000,
	501, 497, 121206, 488, 827, 2671, -1000, -1000, -1000, -1000,
	121206, 478, 3235, -1000, -1000, -1000, -1000, 2073, 89744, -1000,
	-1000, -1000, -1000, -224, -1000, -1000, 1787, 98, 1918, 2573,
	-1000, 2116, 475, -1000, -1000, 2098, 2492, -1000, 97318, 31929,
	31929, 270, 3278, 904, -1000, 3354, -1000, 3003, 3003, 45873,
	3277, 98, -1000, 3378, 54294, -1000, 89744, 54294, 2148, 1851,
	2374, 75085, -1000, 2401, -1000, -1000, -225, 110342, 1679, -1000,
	-1000, 73995, 73995, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1021, -230, -231, -1000, 73995, -1000,
	-1000, 2279, -1000, 110342, -1000, 110342, -1000, -1000, -233, -238,
	-1000, 1890, 45873, 31357, -1000, -1000, 5349, -243, -1000, -103,
	-1000, 3276, 47589, 3407, 3406, 3405, -1000, -1000, -1000, 1752,
	-1000, -1000, -1000, 2830, 2607, 15348, 2352, 110342, 15258, -1000,
	2676, -1000, -1000, 2520, 466, -1000, -1000, -1000, -1000, 887,
	110342, 2520, 2605, 89744, 1027, -245, 1947, 1947, 45873, 30785,
	1967, 45873, -1000, -1000, 3144, -1000, 2644, 3355, -1000, 926,
	-1000, 1964, 110342, -1000, 3133, -1000, 3005, -1000, -1000, -1000,
	2523, 98, -1000, -1000, -1000, -246, 121206, 98, -1000, 267,
	-248, 1024, -253, 89744, 1753, -1000, 822, -1000, 2408, 967,
	-1000, -1000, -254, -255, 1842, 1021, 1906, -256, -1000, -261,
	-262, -1000, -1000, 265, 47017, 47017, 47017, -111, -126, -1000,
	110342, 465, -1000, -1000, -1000, -1000, -1000, 2741, 950, -1000,
	2126, 1800, 262, 1048, -1000, -1000, 1906, 110342, -1000, -1000,
	-1000, 941, 463, -1000, 45873, 1021, -263, -1000, 1011, -264,
	-1000, 1008, -269, -1000, 2660, -1000, -270, 2073, 939, 3216,
	-1000, -1000, -1000, 2098, 89744, -272, -1000, -1000, 2207, -1000,
	2520, 938, -1000, -1000, -1000, 1021, 462, 1842, 461, 1379,
	822, -1000, -1000, 1347, 3102, 2877, 932, 932, 2520, 1842,
	931, -1000, 932, -1000, -1000, -1000, 2837, -1000, 50987, 2128,
	1640, 119153, 2837, 2837, -1000, -1000, 110342, 3196, -1000, 2143,
	2131, 1445, -1000, -1000, -1000, -1000, -1000, -1000, 2615, -278,
	3195, 2352, 121206, 2520, -1000, 1947, 2572, -1000, 1947, 2657,
	-1000, 1912, -1000, -1000, -1000, 1593, 3339, 2365, 446, -1000,
	110342, 1643, 1617, 3404, 1918, 2098, 1842, 54294, 2520, 54294,
	-1000, -1000, 110342, -1000, 1851, 1275, -1000, -1000, 1906, 2520,
	967, 429, -1000, -1000, 1630, 3306, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 819, -1000, 2874, -1000, 1044, 2095,
	2095, 967, -1000, 817, 2126, -1000, -1000, 428, -1000, 426,
	-1000, 2077, -1000, -1000, -1000, -1000, 110342, -1000, -1000, 3403,
	-1000, 926, -1000, 2520, -280, 1906, -281, -1000, -161, 1753,
	-1000, 1474, 931, 1906, -1000, 1631, -1000, -1000, 2018, 46445,
	45873, -1000, 3324, -1000, -1000, 2442, -1000, -1000, 45873, 2615,
	45873, 45873, 60878, -283, -1000, 2098, 1906, 1021, 931, 1842,
	1379, 62497, 967, 931, -1000, -1000, -1000, 121206, -1000, -1000,
	-1000, 121206, -1000, -288, -290, -236, 96773, 2062, 2365, 931,
	1842, 967, 2520, -1000, -279, -1000, 967, 1906, 1108, -298,
	-1000, -1000, -1000, -1000, 967, 2520, -1000, 1906, -1000, -1000,
	-1000, -1000, 419, -1000, -1000, 1906, 931, 45873, 931, 967,
	-300, 967, -1000, 1906, -1000, -1000,
}

var sqlPgo = [...]int{
	0, 4217, 4216, 4214, 4213, 4212, 4211, 4210, 4207, 4206,
	4205, 4203, 4201, 4197, 4194, 4193, 4192, 4191, 4190, 4189,
	4188, 4186, 4184, 4183, 4182, 4176, 4174, 4171, 4169, 4166,
	4163, 4161, 4159, 4157, 4156, 4153, 4151, 4149, 4147, 4146,
	4145, 4137, 4136, 4134, 4133, 4130, 4126, 4125, 4121, 4120,
	4118, 4117, 4111, 4110, 4109, 4108, 4107, 4106, 4104, 4100,
	4099, 4098, 4097, 51, 4096, 4094, 4093, 4092, 4091, 4089,
	4088, 4087, 4086, 4085, 4080, 4079, 4078, 4072, 4070, 4048,
	4046, 4045, 4043, 4042, 76, 4041, 260, 4039, 4038, 4028,
	4027, 4026, 4022, 4016, 4015, 4014, 4013, 4012, 4011, 259,
	4010, 122, 4009, 4008, 4007, 4006, 4003, 258, 4001, 3998,
	3996, 3995, 266, 3994, 3992, 3991, 3985, 3982, 3980, 3976,
	3975, 3974, 3971, 3969, 95, 199, 3967, 3965, 1215, 3960,
	3959, 3956, 3955, 3954, 3952, 3951, 3950, 3949, 3948, 235,
	3945, 256, 3942, 3940, 3939, 3938, 3936, 3935, 3932, 3931,
	3930, 3929, 3928, 3925, 3924, 3919, 3917, 3916, 3915, 3912,
	3911, 3910, 3907, 3906, 3904, 3901, 3899, 3898, 3896, 3895,
	3894, 3893, 3891, 3890, 3889, 3886, 3885, 3880, 231, 264,
	178, 3879, 3878, 254, 253, 3877, 3876, 3875, 3872, 3871,
	134, 12, 52, 3869, 3868, 91, 85, 79, 107, 92,
	88, 3867, 108, 3866, 126, 55, 3864, 21, 2, 206,
	228, 10668, 219, 3863, 3856, 3853, 240, 180, 3852, 225,
	3849, 3848, 3846, 3845, 3844, 67, 49, 163, 165, 161,
	160, 251, 3843, 144, 96, 81, 60, 44, 17, 70,
	202, 22, 3841, 246, 13, 131, 1, 36, 3840, 3838,
	3837, 3836, 3541, 130, 3834, 250, 230, 156, 3833, 3832,
	3830, 1186, 3829, 3828, 48, 3827, 98, 106, 127, 8,
	120, 3826, 137, 31, 3825, 150, 58, 3824, 154, 93,
	111, 10727, 5115, 3823, 109, 71, 170, 2772, 182, 168,
	190, 229, 152, 146, 196, 201, 194, 164, 317, 3821,
	238, 3820, 3271, 78, 171, 3819, 3818, 3815, 84, 188,
	99, 3814, 3813, 72, 19, 3, 4, 6, 124, 23,
	24, 16, 3812, 27, 114, 46, 32, 3811, 28, 3810,
	3807, 3806, 3804, 3803, 43, 148, 3802, 265, 3801, 83,
	47, 26, 3799, 11, 208, 3798, 220, 115, 3797, 3796,
	244, 189, 173, 3795, 73, 218, 3794, 3792, 3791, 3790,
	3789, 121, 9, 118, 3787, 3784, 128, 3782, 50, 233,
	184, 3781, 54, 3774, 3772, 157, 97, 129, 262, 179,
	213, 103, 214, 166, 217, 3770, 3763, 3760, 167, 3758,
	3753, 211, 145, 3752, 3751, 242, 270, 102, 45, 77,
	224, 80, 186, 147, 3750, 193, 3747, 3744, 267, 172,
	205, 14, 7, 117, 116, 3743, 5, 222, 142, 223,
	110, 3741, 6443, 2148, 2701, 3739, 3738, 135, 112, 74,
	113, 138, 248, 69, 3735, 3733, 907, 3732, 3731, 3729,
	3728, 176, 3726, 3725, 3724, 133, 151, 174, 3723, 94,
	59, 53, 29, 139, 236, 255, 105, 212, 155, 241,
	3722, 3721, 3719, 181, 3718, 90, 159, 149, 191, 237,
	62, 3717, 169, 3716, 136, 1258, 64, 143, 3715, 209,
	3714, 3713, 3712, 3711, 3709, 3707, 3705, 239, 221, 3701,
	3700, 3699, 35, 183, 3698, 247, 185, 175, 104, 68,
	3697, 86, 3429, 3696, 123, 3356, 66, 252, 192, 249,
	3685, 2555, 57, 3684, 0, 12895, 7157, 9724, 12311, 3683,
	4739, 3678, 3677, 3676, 203, 132, 3675, 3672, 3671, 100,
	3670, 82, 3669, 3668, 65, 3666, 25, 18, 20, 33,
	30, 1155, 652, 3665, 3664, 40, 119, 140, 3663, 261,
	215, 3660, 3659, 3657, 3656, 89, 3652, 42, 3651, 37,
	3650, 3648, 39, 15, 56, 3647, 3646, 198, 3645, 207,
	227, 3644, 153, 3643, 3256, 125, 3640, 3638, 3637, 63,
	61, 245, 87, 3634, 276, 3633, 3200, 3632, 3631, 34,
	3629, 3628, 226, 197, 162, 210, 3627, 3625, 158, 3624,
	3622, 3621, 274, 3620, 3617, 3615, 38, 3614, 10, 3610,
	3586, 195, 3025, 3585, 3583, 41, 3582, 177,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 11, 11, 7, 7, 7, 7, 8, 8, 8,
	8, 8, 49, 49, 9, 9, 9, 9, 9, 9,
	9, 9, 9, 36, 31, 32, 33, 34, 34, 10,
	10, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	17, 17, 37, 37, 18, 18, 39, 39, 19, 19,
	40, 40, 581, 581, 593, 593, 22, 22, 42, 42,
	23, 43, 16, 582, 582, 582, 582, 35, 24, 44,
	28, 28, 28, 28, 28, 193, 193, 193, 193, 21,
	21, 38, 38, 228, 228, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 577, 577, 230, 230, 229, 223, 223, 224, 224,
	583, 583, 231, 231, 231, 233, 233, 13, 13, 13,
	13, 13, 13, 13, 13, 13, 13, 476, 476, 476,
	509, 509, 508, 508, 508, 507, 507, 597, 597, 598,
	598, 598, 598, 598, 127, 127, 374, 374, 374, 52,
	52, 52, 52, 52, 572, 572, 195, 195, 195, 197,
	197, 196, 196, 196, 196, 196, 75, 75, 588, 588,
	589, 589, 587, 590, 590, 590, 194, 194, 194, 123,
	123, 123, 123, 123, 123, 124, 124, 125, 125, 198,
	198, 198, 200, 200, 199, 199, 199, 199, 199, 199,
	199, 199, 204, 15, 15, 15, 15, 108, 108, 108,
	108, 108, 108, 108, 108, 108, 103, 103, 511, 511,
	512, 512, 189, 189, 190, 190, 190, 190, 191, 191,
	192, 192, 192, 66, 66, 201, 201, 203, 203, 202,
	202, 202, 202, 202, 54, 54, 54, 54, 54, 54,
	54, 55, 55, 55, 55, 55, 56, 56, 56, 56,
	56, 56, 57, 57, 57, 57, 57, 57, 64, 64,
	64, 64, 64, 180, 180, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 72, 72,
	72, 72, 599, 599, 599, 599, 599, 599, 599, 599,
	599, 599, 599, 599, 599, 599, 599, 599, 599, 599,
	599, 600, 600, 601, 601, 602, 602, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 70, 70, 70, 70,
	70, 70, 70, 70, 70, 70, 70, 70, 70, 70,
	70, 70, 70, 81, 81, 336, 336, 301, 301, 82,
	82, 82, 83, 83, 84, 84, 68, 68, 570, 570,
	351, 351, 467, 467, 69, 578, 578, 578, 580, 580,
	579, 579, 86, 86, 373, 373, 87, 87, 87, 87,
	87, 87, 88, 88, 88, 88, 88, 88, 88, 89,
	89, 89, 89, 89, 89, 89, 89, 89, 89, 89,
	89, 89, 89, 96, 96, 96, 96, 96, 97, 97,
	97, 94, 94, 94, 91, 91, 91, 90, 90, 90,
	95, 95, 95, 569, 290, 290, 93, 93, 93, 92,
	92, 92, 352, 352, 98, 98, 98, 98, 302, 99,
	99, 99, 99, 99, 99, 99, 99, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 102, 102,
	102, 102, 102, 102, 102, 102, 102, 102, 102, 102,
	469, 469, 100, 100, 100, 434, 434, 104, 104, 104,
	389, 389, 105, 105, 105, 105, 105, 106, 106, 106,
	106, 106, 106, 106, 106, 126, 126, 126, 126, 126,
	126, 126, 574, 574, 344, 344, 255, 255, 255, 255,
	116, 116, 116, 116, 117, 117, 117, 118, 118, 185,
	185, 133, 133, 133, 133, 133, 132, 132, 132, 132,
	132, 132, 58, 58, 58, 59, 59, 60, 60, 61,
	61, 62, 62, 63, 63, 63, 63, 63, 135, 135,
	594, 594, 137, 134, 134, 134, 136, 136, 136, 136,
	138, 139, 139, 139, 139, 139, 139, 139, 139, 140,
	140, 501, 501, 360, 360, 499, 499, 521, 521, 500,
	500, 306, 306, 306, 306, 306, 307, 307, 307, 510,
	510, 510, 510, 510, 510, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 186, 186, 187, 188, 188, 188, 188,
	188, 164, 164, 164, 179, 179, 179, 179, 179, 179,
	179, 167, 167, 167, 151, 151, 142, 142, 142, 142,
	142, 142, 142, 146, 146, 146, 146, 146, 146, 146,
	146, 143, 143, 153, 153, 153, 153, 153, 147, 147,
	148, 148, 148, 148, 174, 174, 150, 150, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 144, 144, 144,
	144, 155, 155, 155, 155, 396, 396, 396, 178, 178,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 177, 177, 177, 177, 177, 177, 591, 591, 592,
	592, 171, 171, 171, 171, 171, 171, 448, 448, 165,
	165, 165, 165, 170, 170, 170, 170, 173, 173, 173,
	173, 379, 379, 162, 162, 162, 163, 163, 163, 168,
	168, 169, 166, 166, 172, 172, 172, 172, 145, 145,
	145, 145, 604, 604, 604, 175, 175, 161, 161, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	605, 605, 157, 157, 157, 156, 156, 156, 156, 159,
	159, 160, 160, 160, 160, 160, 160, 158, 149, 571,
	571, 567, 567, 567, 567, 567, 567, 567, 567, 568,
	568, 568, 568, 573, 573, 109, 109, 109, 109, 109,
	119, 119, 119, 119, 119, 110, 110, 110, 110, 110,
	112, 112, 111, 111, 111, 111, 76, 76, 76, 76,
	76, 14, 14, 14, 77, 77, 246, 246, 207, 207,
	207, 325, 325, 208, 208, 314, 314, 314, 314, 205,
	205, 206, 206, 78, 78, 606, 606, 606, 584, 584,
	584, 585, 585, 585, 585, 585, 585, 308, 308, 309,
	309, 414, 414, 414, 414, 414, 312, 312, 312, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 315, 315,
	232, 232, 232, 323, 324, 324, 316, 316, 322, 321,
	321, 320, 320, 319, 319, 317, 318, 318, 318, 327,
	327, 326, 329, 329, 328, 413, 530, 530, 532, 532,
	532, 532, 532, 532, 532, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 397, 397, 607,
	607, 528, 528, 528, 529, 524, 524, 525, 525, 525,
	525, 525, 310, 310, 311, 311, 311, 311, 526, 527,
	342, 342, 452, 531, 531, 533, 533, 535, 608, 608,
	608, 608, 608, 608, 609, 609, 609, 412, 412, 411,
	411, 334, 334, 536, 536, 536, 536, 537, 537, 537,
	537, 537, 540, 539, 538, 538, 538, 538, 538, 80,
	80, 80, 376, 376, 375, 375, 377, 377, 377, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 377,
	377, 182, 182, 258, 258, 74, 74, 74, 12, 12,
	12, 586, 586, 586, 79, 79, 79, 79, 79, 79,
	257, 257, 257, 257, 257, 257, 257, 257, 257, 257,
	257, 257, 257, 257, 257, 257, 257, 257, 257, 257,
	576, 576, 575, 575, 259, 259, 611, 611, 85, 85,
	85, 85, 85, 85, 85, 85, 470, 470, 471, 471,
	73, 73, 73, 73, 73, 398, 398, 395, 395, 394,
	394, 341, 341, 450, 450, 450, 451, 263, 263, 264,
	264, 225, 225, 225, 30, 29, 20, 20, 25, 25,
	26, 26, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 27, 27, 46, 46, 46, 46, 47, 47, 47,
	47, 50, 50, 51, 51, 45, 45, 45, 45, 48,
	48, 41, 41, 595, 595, 596, 596, 115, 115, 120,
	120, 120, 120, 120, 121, 121, 121, 121, 122, 122,
	122, 122, 131, 131, 181, 181, 181, 181, 181, 181,
	181, 53, 53, 53, 53, 65, 65, 65, 65, 129,
	613, 613, 613, 130, 130, 130, 612, 612, 256, 256,
	408, 408, 409, 409, 614, 614, 410, 410, 410, 410,
	410, 249, 248, 250, 250, 251, 251, 71, 71, 71,
	241, 241, 240, 238, 238, 513, 513, 243, 243, 243,
	244, 244, 234, 234, 235, 235, 236, 236, 237, 237,
	247, 247, 615, 615, 107, 107, 107, 184, 184, 300,
	300, 300, 405, 405, 405, 335, 335, 270, 270, 407,
	407, 407, 407, 372, 372, 372, 183, 183, 349, 349,
	362, 362, 363, 363, 464, 464, 364, 113, 113, 114,
	114, 128, 128, 211, 211, 209, 209, 209, 209, 209,
	209, 209, 209, 216, 216, 217, 217, 218, 218, 219,
	220, 220, 220, 220, 353, 353, 221, 221, 221, 210,
	210, 210, 212, 212, 212, 212, 212, 212, 212, 215,
	215, 215, 215, 222, 222, 222, 214, 214, 547, 547,
	547, 549, 549, 551, 551, 550, 550, 546, 546, 548,
	548, 610, 610, 378, 378, 378, 332, 333, 330, 330,
	331, 331, 339, 339, 337, 338, 338, 340, 340, 449,
	449, 449, 226, 226, 226, 369, 369, 369, 369, 370,
	370, 401, 401, 399, 399, 399, 399, 400, 400, 402,
	402, 402, 403, 403, 404, 404, 366, 366, 367, 367,
	368, 368, 368, 368, 430, 430, 213, 213, 213, 346,
	346, 346, 347, 347, 420, 420, 420, 420, 420, 420,
	421, 421, 419, 419, 419, 419, 453, 453, 453, 453,
	453, 453, 453, 453, 453, 454, 455, 455, 348, 348,
	456, 406, 406, 565, 565, 565, 566, 566, 447, 447,
	457, 457, 457, 457, 457, 457, 445, 445, 446, 446,
	465, 466, 466, 382, 382, 382, 382, 380, 380, 383,
	383, 383, 383, 383, 381, 381, 458, 458, 458, 458,
	371, 371, 459, 459, 459, 459, 460, 461, 461, 462,
	462, 415, 416, 416, 472, 472, 472, 472, 474, 345,
	345, 345, 345, 345, 523, 522, 522, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 488, 488, 488, 488,
	488, 488, 488, 488, 488, 488, 488, 488, 488, 488,
	488, 488, 488, 488, 488, 488, 488, 488, 488, 488,
	488, 488, 488, 488, 488, 488, 488, 488, 489, 489,
	489, 489, 489, 489, 489, 475, 475, 475, 475, 475,
	479, 479, 479, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 480, 480, 485, 485, 486, 486,
	486, 481, 482, 487, 487, 487, 487, 616, 616, 491,
	491, 483, 483, 483, 483, 483, 483, 483, 483, 483,
	477, 477, 477, 484, 484, 484, 391, 391, 391, 391,
	391, 391, 391, 391, 391, 391, 391, 391, 391, 390,
	390, 392, 392, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 423, 423, 423, 423, 423, 423, 423, 423, 423,
	423, 423, 423, 423, 423, 423, 423, 423, 423, 423,
	423, 423, 423, 423, 423, 423, 423, 423, 423, 423,
	424, 424, 424, 424, 425, 425, 425, 425, 425, 425,
	425, 425, 425, 425, 425, 425, 425, 425, 425, 425,
	425, 425, 425, 425, 425, 425, 425, 425, 425, 541,
	541, 541, 541, 541, 541, 541, 541, 426, 426, 544,
	544, 545, 545, 542, 542, 542, 542, 542, 542, 542,
	542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
	542, 542, 542, 542, 542, 542, 543, 543, 543, 543,
	543, 543, 543, 543, 543, 543, 543, 543, 543, 543,
	543, 543, 543, 543, 543, 543, 543, 543, 543, 543,
	543, 543, 543, 543, 543, 543, 543, 543, 543, 543,
	543, 543, 552, 552, 553, 553, 555, 555, 556, 556,
	557, 558, 558, 558, 559, 560, 560, 554, 554, 561,
	561, 561, 561, 562, 562, 563, 563, 563, 563, 563,
	564, 564, 564, 564, 564, 436, 436, 437, 437, 443,
	443, 443, 305, 305, 305, 305, 305, 305, 305, 305,
	305, 305, 305, 305, 305, 305, 305, 305, 260, 260,
	260, 260, 260, 358, 358, 356, 356, 356, 359, 359,
	357, 357, 355, 355, 354, 354, 433, 433, 431, 431,
	435, 435, 384, 384, 490, 490, 490, 490, 490, 490,
	490, 490, 385, 385, 385, 393, 386, 386, 387, 387,
	387, 387, 387, 427, 428, 388, 388, 388, 429, 429,
	438, 442, 442, 441, 440, 440, 439, 439, 417, 417,
	418, 418, 365, 365, 617, 617, 361, 361, 463, 463,
	463, 463, 304, 304, 350, 350, 303, 303, 295, 295,
	296, 296, 296, 296, 343, 343, 444, 444, 492, 492,
	493, 493, 494, 494, 495, 495, 496, 497, 498, 432,
	432, 280, 279, 267, 268, 278, 277, 276, 266, 269,
	273, 274, 275, 271, 272, 286, 285, 284, 239, 242,
	291, 292, 292, 294, 294, 293, 293, 282, 283, 468,
	265, 297, 297, 298, 298, 298, 299, 299, 299, 299,
	261, 261, 262, 262, 287, 287, 288, 289, 289, 281,
	281, 281, 252, 252, 252, 253, 253, 254, 254, 506,
	506, 503, 503, 503, 504, 504, 504, 505, 505, 505,
	505, 502, 502, 502, 502, 502, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 515, 515, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 517, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 520, 520,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 3, 1, 1, 1,
	1, 3, 4, 6, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 6, 6, 6, 4, 4, 5, 1,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	4, 6, 4, 6, 6, 9, 6, 9, 6, 5,
	6, 5, 1, 1, 1, 0, 6, 6, 6, 6,
	6, 6, 4, 4, 4, 4, 3, 4, 4, 4,
	7, 7, 9, 8, 9, 5, 3, 5, 7, 4,
	12, 4, 12, 1, 3, 5, 5, 2, 5, 3,
	6, 4, 4, 6, 5, 6, 5, 6, 4, 8,
	3, 4, 2, 3, 10, 3, 6, 4, 3, 1,
	3, 2, 1, 1, 3, 1, 3, 2, 2, 3,
	2, 0, 1, 1, 0, 2, 0, 7, 10, 6,
	8, 6, 6, 6, 9, 4, 3, 2, 2, 0,
	1, 3, 1, 1, 1, 1, 1, 1, 3, 6,
	4, 6, 7, 9, 6, 2, 2, 3, 0, 8,
	6, 8, 7, 2, 0, 1, 2, 5, 0, 1,
	3, 3, 1, 1, 3, 1, 12, 3, 1, 0,
	1, 1, 2, 3, 3, 0, 4, 6, 0, 5,
	7, 6, 8, 8, 2, 1, 3, 1, 3, 2,
	5, 0, 1, 3, 3, 3, 3, 1, 1, 1,
	1, 1, 1, 3, 3, 3, 3, 6, 4, 9,
	7, 12, 12, 12, 9, 2, 7, 2, 1, 1,
	1, 3, 3, 0, 3, 1, 3, 1, 1, 3,
	2, 5, 0, 7, 5, 2, 0, 1, 2, 3,
	1, 1, 2, 2, 1, 2, 1, 2, 1, 2,
	2, 3, 3, 3, 3, 3, 3, 5, 3, 3,
	5, 3, 3, 5, 3, 3, 5, 3, 6, 6,
	6, 6, 4, 1, 1, 1, 2, 1, 1, 2,
	1, 2, 1, 1, 1, 2, 1, 2, 6, 3,
	8, 3, 4, 3, 3, 4, 3, 4, 4, 4,
	3, 5, 7, 3, 3, 4, 3, 3, 3, 3,
	3, 2, 0, 1, 0, 1, 0, 4, 3, 3,
	3, 3, 3, 6, 4, 4, 4, 3, 5, 3,
	3, 3, 3, 3, 3, 3, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 4, 1, 2, 1,
	2, 1, 2, 7, 3, 2, 0, 1, 3, 3,
	1, 0, 1, 2, 2, 1, 6, 5, 1, 2,
	1, 3, 2, 0, 7, 2, 5, 0, 1, 3,
	3, 1, 9, 3, 2, 0, 2, 2, 2, 2,
	2, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 4, 6, 5, 7, 3, 4, 6,
	3, 4, 6, 3, 5, 7, 3, 4, 6, 3,
	4, 6, 3, 1, 1, 3, 4, 6, 3, 3,
	5, 3, 1, 3, 2, 2, 2, 2, 1, 2,
	2, 5, 3, 3, 6, 6, 3, 1, 1, 2,
	1, 1, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 2, 1, 1, 2, 1, 1,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 2, 1, 2,
	1, 3, 5, 7, 2, 3, 0, 3, 5, 2,
	3, 0, 2, 3, 2, 3, 2, 6, 4, 7,
	7, 7, 9, 5, 2, 6, 4, 7, 7, 7,
	5, 2, 2, 1, 1, 3, 1, 1, 1, 1,
	1, 2, 1, 2, 2, 3, 2, 4, 3, 2,
	2, 1, 2, 1, 3, 3, 1, 2, 1, 2,
	1, 2, 1, 1, 3, 5, 4, 6, 4, 3,
	0, 1, 3, 2, 4, 2, 4, 1, 6, 3,
	1, 1, 5, 3, 2, 6, 3, 3, 4, 4,
	3, 1, 3, 2, 3, 3, 1, 3, 1, 2,
	1, 1, 2, 2, 3, 1, 1, 1, 1, 1,
	3, 2, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 2, 1, 2, 2, 1, 3, 3, 3, 3,
	3, 2, 3, 3, 1, 1, 1, 1, 1, 2,
	2, 5, 7, 3, 3, 3, 4, 4, 6, 5,
	5, 5, 3, 4, 4, 3, 4, 4, 3, 4,
	4, 5, 3, 5, 5, 5, 7, 3, 3, 3,
	2, 6, 4, 3, 2, 3, 4, 3, 5, 3,
	6, 5, 6, 3, 5, 6, 3, 4, 3, 4,
	3, 3, 4, 4, 5, 0, 1, 1, 1, 1,
	3, 2, 4, 3, 3, 5, 3, 4, 3, 5,
	3, 3, 4, 4, 5, 3, 3, 1, 1, 0,
	2, 5, 4, 6, 4, 6, 4, 1, 0, 3,
	4, 4, 5, 7, 5, 3, 3, 3, 4, 4,
	5, 2, 0, 4, 2, 3, 4, 2, 3, 3,
	3, 4, 3, 3, 4, 3, 3, 3, 3, 4,
	4, 3, 1, 1, 1, 2, 3, 2, 3, 6,
	6, 7, 9, 7, 9, 4, 3, 4, 4, 5,
	1, 1, 10, 10, 3, 5, 5, 5, 3, 5,
	6, 4, 4, 5, 5, 2, 3, 2, 5, 2,
	0, 1, 1, 1, 1, 3, 2, 2, 2, 2,
	2, 2, 1, 2, 0, 1, 2, 1, 2, 2,
	1, 2, 1, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 6, 5, 8,
	3, 6, 6, 3, 13, 16, 1, 0, 1, 2,
	3, 0, 2, 0, 4, 0, 4, 5, 4, 3,
	3, 1, 3, 10, 13, 0, 2, 3, 1, 1,
	0, 1, 2, 2, 2, 2, 1, 1, 0, 1,
	3, 1, 1, 1, 2, 3, 3, 3, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 8, 0,
	1, 1, 0, 2, 1, 0, 1, 0, 1, 1,
	0, 1, 4, 1, 0, 3, 7, 7, 1, 1,
	3, 7, 1, 3, 11, 3, 2, 0, 3, 1,
	2, 2, 3, 2, 6, 2, 1, 2, 2, 2,
	8, 4, 2, 5, 5, 5, 2, 2, 0, 1,
	3, 11, 12, 9, 5, 3, 1, 5, 10, 7,
	11, 3, 3, 0, 2, 4, 3, 3, 1, 5,
	1, 3, 1, 2, 0, 1, 2, 2, 0, 1,
	3, 3, 2, 2, 1, 1, 1, 4, 0, 6,
	0, 3, 0, 2, 2, 2, 0, 1, 1, 2,
	2, 0, 3, 3, 2, 1, 1, 2, 2, 5,
	8, 4, 1, 0, 1, 2, 2, 1, 2, 3,
	3, 2, 2, 3, 2, 2, 2, 2, 2, 3,
	1, 4, 2, 2, 2, 4, 7, 3, 4, 6,
	3, 1, 1, 1, 8, 10, 11, 7, 10, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 0, 3, 3, 0, 1, 8, 11,
	3, 6, 6, 5, 3, 4, 1, 0, 1, 3,
	17, 20, 16, 19, 4, 2, 0, 1, 0, 1,
	0, 1, 3, 2, 4, 2, 3, 1, 0, 2,
	0, 1, 1, 0, 9, 6, 6, 8, 6, 8,
	5, 7, 2, 6, 7, 4, 4, 5, 2, 4,
	6, 6, 8, 6, 7, 8, 9, 6, 7, 8,
	9, 6, 8, 6, 8, 6, 7, 8, 9, 6,
	8, 6, 8, 1, 0, 2, 0, 2, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 2, 1, 2, 1, 2, 1, 2,
	1, 3, 2, 3, 2, 2, 2, 2, 2, 2,
	1, 1, 0, 2, 4, 2, 1, 0, 2, 1,
	1, 0, 1, 3, 1, 0, 1, 1, 1, 1,
	1, 2, 3, 2, 2, 1, 2, 12, 15, 3,
	1, 0, 4, 3, 0, 1, 1, 4, 4, 5,
	1, 0, 3, 0, 3, 0, 3, 0, 3, 0,
	4, 0, 1, 0, 6, 7, 3, 6, 3, 1,
	3, 1, 1, 4, 2, 1, 3, 1, 3, 4,
	8, 11, 5, 2, 2, 0, 10, 3, 2, 0,
	1, 3, 1, 1, 3, 3, 5, 6, 4, 5,
	4, 1, 1, 3, 3, 1, 2, 4, 4, 2,
	3, 5, 5, 1, 3, 1, 0, 1, 2, 3,
	2, 4, 2, 3, 0, 2, 0, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 8,
	8, 8, 2, 4, 4, 4, 2, 2, 2, 2,
	3, 1, 3, 1, 2, 6, 7, 1, 0, 1,
	0, 1, 0, 1, 1, 0, 1, 5, 1, 0,
	1, 0, 1, 0, 3, 3, 5, 1, 3, 3,
	4, 5, 2, 2, 0, 2, 2, 1, 1, 1,
	0, 1, 0, 2, 2, 5, 4, 2, 3, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 1, 3,
	1, 3, 3, 3, 2, 0, 4, 2, 5, 3,
	2, 0, 1, 3, 3, 5, 1, 1, 1, 1,
	1, 3, 2, 4, 4, 0, 4, 4, 3, 4,
	1, 5, 3, 4, 5, 5, 1, 5, 1, 3,
	2, 0, 3, 0, 2, 3, 1, 3, 2, 0,
	3, 5, 6, 4, 6, 4, 3, 2, 1, 0,
	5, 1, 0, 2, 2, 2, 1, 1, 0, 1,
	1, 1, 1, 0, 4, 2, 1, 2, 2, 4,
	1, 3, 1, 2, 3, 2, 4, 1, 0, 1,
	0, 2, 1, 0, 2, 5, 7, 2, 1, 2,
	4, 3, 5, 0, 1, 3, 5, 1, 2, 1,
	1, 1, 1, 1, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 4, 4, 6, 6, 1, 1, 1, 1, 1,
	3, 5, 0, 1, 1, 1, 1, 1, 2, 2,
	2, 2, 2, 1, 3, 0, 5, 4, 1, 2,
	1, 4, 1, 1, 2, 1, 1, 1, 1, 1,
	0, 1, 2, 5, 1, 4, 2, 5, 1, 4,
	3, 3, 0, 1, 2, 4, 1, 1, 1, 1,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 1,
	0, 1, 4, 1, 3, 3, 3, 5, 2, 2,
	2, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 3,
	5, 4, 6, 3, 5, 4, 6, 4, 6, 5,
	7, 3, 3, 3, 3, 3, 4, 3, 2, 4,
	2, 3, 3, 4, 3, 4, 3, 4, 5, 6,
	6, 7, 6, 7, 6, 7, 3, 4, 4, 1,
	3, 1, 3, 3, 2, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 5, 6, 6, 7,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 6,
	1, 1, 1, 1, 1, 1, 2, 1, 5, 5,
	6, 3, 1, 1, 1, 2, 2, 2, 4, 3,
	5, 6, 8, 6, 5, 4, 3, 2, 2, 4,
	1, 1, 1, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 6, 6, 8, 8, 6,
	4, 6, 6, 6, 4, 1, 3, 3, 3, 3,
	3, 4, 3, 3, 4, 3, 3, 4, 3, 3,
	4, 3, 3, 3, 4, 3, 4, 3, 4, 3,
	4, 4, 3, 6, 5, 5, 5, 4, 4, 3,
	4, 3, 5, 0, 5, 0, 2, 0, 1, 3,
	3, 2, 2, 0, 6, 1, 0, 3, 0, 3,
	3, 3, 0, 1, 4, 2, 2, 2, 2, 2,
	3, 2, 2, 3, 0, 4, 1, 1, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 2, 2, 3, 1, 2, 3, 2, 3,
	2, 3, 1, 0, 1, 3, 1, 3, 3, 3,
	1, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 3, 1, 2, 3, 0, 3, 3,
	2, 2, 1, 2, 2, 3, 2, 1, 1, 1,
	5, 1, 2, 4, 2, 0, 1, 0, 3, 5,
	1, 0, 1, 2, 1, 0, 1, 3, 3, 2,
	1, 1, 1, 3, 1, 3, 3, 1, 1, 1,
	1, 5, 3, 1, 1, 3, 1, 1, 1, 1,
	2, 2, 1, 1, 2, 2, 1, 1, 1, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 1, 0, 1, 1, 1,
	1, 1, 1, 3, 5, 7, 1, 7, 5, 3,
	1, 1, 1, 1, 1, 1, 1, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 0, 3, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 586, -101, -98, -66, -64, -104, -105,
	-87, -106, -100, -126, -131, -113, -114, -115, -127, -133,
	-181, -186, -187, -188, -3, -52, -54, -67, -86, -88,
	-99, -108, -107, -109, -116, -123, -119, -103, -58, -128,
	-132, -141, -182, -183, -184, 32, 31, 100, 80, 154,
	128, 137, 201, 381, 423, 434, 395, 142, 415, 400,
	-136, -137, 451, -53, -65, -130, -129, 73, 129, 409,
	-4, -12, -15, 29, 46, -55, -56, -57, 62, -74,
	-70, -81, -75, -68, -69, -72, -599, 102, -548, -89,
	-92, -122, -603, 161, 219, -110, -111, 364, -117, -118,
	417, -120, -121, 419, 162, -60, -59, 156, -209, -211,
	-134, -135, -185, -142, -143, -144, -145, -146, -147, -148,
	-174, -149, -150, -151, -152, -153, -154, -158, -177, -155,
	-156, -157, -160, -159, -161, -166, -162, -163, -164, -165,
	-167, -168, -170, -171, -172, -173, -175, -176, 456, -169,
	516, 49, 470, 82, 146, 427, 21, -5, -6, -7,
	-8, -9, -10, -11, -14, -13, -71, -73, -76, -77,
	-78, -85, -79, -80, -547, -90, -91, -94, -96, -97,
	-93, -95, 416, -212, -210, 583, 531, -17, -22, -23,
	-18, -19, -21, -24, -20, -25, -26, -27, -37, -42,
	-43, -39, -40, -38, -41, -44, -45, -46, -47, -48,
	-49, -50, -51, -29, -35, -36, -30, -31, -32, -33,
	-34, -16, -28, 552, 561, -215, -213, -214, -222, 443,
	539, 490, 586, 586, 586, 586, 586, 586, 586, 586,
	586, 586, 586, 586, 586, 586, 586, 586, 586, 586,
	586, 586, 586, 586, -302, 2, -282, -287, -288, -289,
	-281, -252, -517, -520, 4, -514, -518, 168, 229, 328,
	21, 23, 22, 24, 25, 26, 27, 29, 30, 41,
	42, 44, 45, 46, 47, 48, 49, 53, 55, 59,
	60, 61, 62, 63, 64, 68, 73, 74, 79, 80,
	81, 82, 83, 84, 85, 91, 88, 89, 90, 92,
	94, 96, 97, 98, 99, 100, 101, 103, 104, 105,
	107, 108, 109, 117, 118, 119, 120, 121, 123, 128,
	129, 132, 127, 131, 133, 135, 136, 137, 140, 141,
	142, 144, 145, 147, 148, 149, 151, 152, 154, 155,
	156, 159, 157, 498, 158, 160, 161, 162, 163, 166,
	174, 175, 176, 181, 183, 184, 188, 189, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 202, 206, 208,
	209, 210, 211, 212, 218, 219, 221, 222, 223, 224,
	225, 230, 231, 232, 236, 233, 242, 243, 247, 248,
	249, 251, 255, 256, 257, 258, 259, 260, 262, 264,
	263, 266, 269, 270, 273, 277, 278, 282, 283, 279,
	284, 285, 287, 288, 291, 289, 292, 293, 290, 294,
	296, 297, 298, 299, 300, 301, 302, 303, 304, 305,
	306, 307, 295, 310, 308, 312, 313, 314, 326, 323,
	318, 319, 315, 320, 316, 317, 321, 322, 325, 330,
	331, 334, 216, 336, 337, 340, 358, 344, 345, 346,
	349, 350, 353, 356, 357, 359, 360, 361, 362, 363,
	364, 365, 366, 368, 369, 371, 372, 373, 375, 376,
	377, 379, 381, 382, 384, 385, 387, 388, 389, 390,
	391, 392, 393, 395, 397, 396, 398, 400, 402, 403,
	404, 409, 415, 411, 412, 413, 414, 416, 417, 418,
	419, 421, 422, 423, 425, 426, 427, 428, 430, 432,
	433, 436, 437, 453, 454, 472, 434, 435, 438, 439,
	440, 441, 442, 446, 444, 445, 447, 448, 449, 451,
	452, 455, 456, 458, 459, 460, 461, 462, 463, 466,
	468, 469, 470, 489, 471, 473, 477, 478, 479, 480,
	474, 475, 488, 482, 483, 485, 486, 491, 492, 493,
	494, 495, 496, 497, 499, 501, 509, 510, 511, 513,
	516, 517, 518, 519, 507, 521, 522, 525, 526, 527,
	530, 528, 529, 531, 533, 536, 537, 538, 544, 543,
	545, 548, 553, 554, 556, 557, 558, 36, 50, 51,
	54, 56, 58, 69, 70, 71, 75, 124, 125, 153,
	164, 165, 177, 190, 191, 203, 205, 213, 214, 215,
	237, 238, 240, 245, 267, 333, 335, 351, 355, 370,
	374, 378, 380, 394, 429, 464, 476, 481, 502, 503,
	504, 505, 512, 514, 539, 540, 541, 546, 555, -302,
	2, -282, 342, -275, 2, -252, -252, 381, 28, 2,
	28, 369, 445, 493, 495, 2, -574, -344, 2, 28,
	-255, -252, 102, 201, 443, -275, 2, -574, -344, 25,
	2, -252, 2, 356, 22, 27, 66, 77, 98, 140,
	163, 185, 188, -602, 358, 388, 432, 447, 488, 499,
	513, 2, 543, 288, 444, 490, 229, 120, 518, 438,
	-586, 436, 437, 356, 386, 425, 204, 532, -256, 2,
	434, -252, 288, 2, 586, 94, 278, 74, 429, 448,
	-139, 510, -138, 502, 438, -140, -501, 2, 310, -252,
	586, 586, 586, 28, -265, -252, 490, 229, 438, 120,
	486, 586, 2, 490, 361, 543, 444, 120, 391, 229,
	518, 188, 140, 27, 126, 438, -586, 288, -572, 2,
	-567, 4, -518, -514, -296, -295, 490, 496, 120, -289,
	-281, 576, -288, 586, 586, 586, 2, 248, 249, 390,
	389, 448, 449, 586, 586, 586, 586, 436, 2, 163,
	22, 27, 66, 93, 98, 126, 185, 188, 347, -600,
	358, 388, 447, 488, 492, 499, 513, -585, 471, 68,
	414, 438, -584, -586, 288, 518, 140, -394, 120, 278,
	199, 526, 495, 493, 524, 132, 236, 529, 528, 586,
	586, -101, 2, 583, 32, 31, 142, 451, -204, 490,
	241, 2, -252, 586, 586, 2, 248, 249, 436, 437,
	586, 586, 186, -567, 2, 586, 586, 2, 248, 249,
	436, 437, 241, 2, 68, 440, 586, 586, 586, 586,
	586, 586, 586, 586, 586, 586, 586, 586, 586, 586,
	586, 586, 586, 586, 586, 586, 586, 586, 586, 586,
	586, 586, 586, 586, 586, 586, 586, 586, 586, 586,
	2, -179, 448, 471, 210, 47, 46, 74, 28, 387,
	79, 362, 121, 148, 519, 202, 229, 230, 256, 93,
	94, -396, 44, 249, 248, 437, -591, 436, -448, 491,
	439, 445, 485, 260, 434, 510, 102, 533, 426, 558,
	391, 392, 483, 404, 279, 157, 4, 120, 310, 450,
	502, 278, 433, 365, 84, -610, 2, 490, -612, 2,
	510, 510, 2, -612, 2, -612, 2, -612, 2, -613,
	510, 555, 586, 586, 586, 586, 586, 586, 586, 586,
	586, 586, 586, 586, 586, 586, 586, 586, 586, -210,
	-212, -211, 586, 586, 586, 586, 586, 586, 586, -179,
	448, 2, 74, 28, -337, -339, 523, 239, 150, 348,
	-209, -211, 2, -547, -499, 2, -422, -521, -424, 574,
	575, 567, 487, 67, 327, 559, -436, 126, 524, 342,
	-520, -425, -438, 153, 429, -359, 8, 9, 5, 6,
	7, -261, -426, -432, 515, 167, 332, -299, 587, 10,
	583, -544, -211, -437, 37, 205, 65, -503, -298, -262,
	-475, 240, -297, -281, -541, -542, 4, -514, -515, -504,
	-478, -486, -482, -483, -489, -252, -517, 77, 111, 112,
	110, 115, 114, 281, 280, 116, 113, 450, 532, 66,
	36, 213, 214, 245, 333, 215, 75, -543, 141, -516,
	237, 238, 464, 51, 394, 177, 125, 124, 335, 56,
	54, 540, -487, 122, 502, 503, 504, 505, 190, 191,
	58, 164, 165, 355, 378, 481, 512, 514, 203, 267,
	43, 106, 187, 235, 217, 244, 246, 250, 268, 271,
	311, 324, 329, 352, 354, 424, 457, -616, 541, 476,
	69, 70, -549, 396, -550, -275, -549, 586, 586, 588,
	586, -330, -332, -333, 2, 28, 138, 583, 2, -453,
	2, -454, -458, -211, 261, -457, 583, -455, 581, -282,
	343, -545, 430, -541, -542, -261, -281, -298, 4, -514,
	-516, 585, -334, 583, 120, 490, 78, 229, 163, -389,
	583, -252, 28, 342, 506, 588, -331, 385, -434, 583,
	342, 186, 345, 60, 292, 2, 2, 2, 2, 2,
	213, -252, 490, 119, 2, 259, 2, 2, 2, 2,
	2, 2, 2, -352, 213, 2, -282, 543, -352, 213,
	2, -352, 213, 2, -395, 2, 87, -266, 213, 2,
	-252, -290, 213, 2, -285, -287, -294, 213, 2, -292,
	-252, -512, 213, 2, -511, -506, 10, -505, 5, 4,
	-514, -518, -515, -517, 77, -422, 2, -128, 2, 60,
	-252, 543, 2, 2, 453, 2, 583, -139, 71, 510,
	43, 448, -409, 2, -410, -248, -249, -250, -465, -251,
	247, 384, 393, 562, 130, 327, 558, -499, -594, 186,
	566, 506, -499, -360, 585, 2, 2, 2, 2, 2,
	2, -458, 213, -282, 2, -279, -502, 4, -514, -518,
	-515, -519, 28, 31, 32, 33, 35, 37, 38, 39,
	40, 57, 65, 66, 72, 76, 78, 87, 93, 102,
	110, 111, 113, 112, 114, 115, 116, 126, 130, 134,
	138, 139, 143, 146, 150, 167, 169, 182, 185, 186,
	201, 204, 207, 220, 234, 239, 241, 261, 265, 272,
	280, 281, 327, 332, 338, 342, 343, 347, 348, 367,
	383, 399, 420, 443, 450, 467, 484, 490, 500, 506,
	508, 515, 523, 524, 532, 534, 542, 547, 549, 550,
	551, 552, -520, 2, -458, 213, 2, -284, 213, -458,
	-287, 2, -266, 2, -278, -502, 2, -303, 213, -282,
	-283, -287, -285, 2, 2, 2, 2, 2, -292, 2,
	-511, 213, 2, 543, 241, 506, 588, -350, -295, -296,
	-498, 8, -343, -252, 585, -422, 2, -128, -112, 2,
	182, -422, 213, 2, -128, 213, 2, -422, 213, 2,
	-128, 213, 2, -588, 2, -511, 213, -252, 2, 292,
	2, 2, 513, 2, 98, 490, 119, 2, 413, -601,
	432, 517, 2, 2, 2, 2, 2, 2, 2, 490,
	-271, 2, -252, 182, 474, -292, 213, -293, 2, 444,
	-611, 396, -511, 213, 2, 543, -285, 213, 2, -285,
	229, 243, -266, 213, 2, 495, 493, 495, 493, 186,
	2, 241, 2, 241, 2, -459, 2, -460, -454, -461,
	581, 343, -469, 2, -468, -505, 539, -101, 583, -101,
	583, 448, 583, -511, -282, -282, -422, 2, -128, -112,
	2, -422, 2, -128, 2, -125, -511, -124, 583, 186,
	-422, 2, -128, -112, 2, -422, 2, -128, 2, -204,
	182, 2, 120, 490, -179, 2, 182, 534, 2, 8,
	2, 220, -511, 439, 392, 174, 2, 453, 2, 454,
	74, -396, 558, 74, 186, 2, 186, 2, -379, 2,
	552, 186, 2, 2, -571, 2, 342, 186, 2, 186,
	2, 186, 2, 186, 2, 186, 2, -178, 449, 511,
	489, 389, 249, 2, -128, 549, -112, -422, 549, 2,
	-592, 182, 437, -422, 2, 509, 258, 158, 186, -379,
	2, 186, 2, 186, 2, 5, 2, 390, 472, 2,
	247, 384, 472, 2, -282, -604, 28, 2, 490, 543,
	444, 2, 2, 88, 89, 186, 2, 186, 2, 200,
	186, 2, 186, 558, 2, -371, -458, -408, -409, -408,
	506, -337, -339, -179, 453, 2, -216, -369, -218, 182,
	-399, -400, -219, 272, 169, 338, -220, -378, 28, 138,
	-378, -378, 60, 584, 584, 11, 12, 76, 41, 574,
	575, 576, 577, 180, 578, 579, 572, 573, 571, 564,
	565, 569, 253, 254, 95, 568, 566, 86, 286, 431,
	170, 171, 172, 173, 410, 227, 34, 228, 14, 15,
	16, 33, 347, 271, 559, 217, 457, 567, 17, 18,
	19, 244, 246, 329, 50, 220, -260, -305, -422, -422,
	-422, -422, -422, -422, -422, 354, 583, -365, -417, 581,
	-211, 583, 583, 583, -498, -211, -422, -436, 584, -357,
	583, -211, -436, -431, 583, 429, 581, 583, -439, -422,
	5, 5, 5, 583, 585, -552, 553, 182, 583, 583,
	583, 583, 583, 583, 583, 583, 583, 583, 583, 583,
	583, 583, 583, 380, -480, 583, -479, 583, -479, -479,
	544, -477, 583, 561, 554, 583, -477, 583, 583, 583,
	583, 583, 583, 583, 583, 583, 583, 583, 583, 583,
	544, 588, -549, -334, 583, -361, -463, -422, 576, -361,
	-361, 342, -354, -422, 106, -382, 250, 311, 187, 268,
	424, 235, -419, 587, -419, -447, 561, -211, -455, -281,
	-211, -457, 583, -453, -447, -102, -498, -86, -99, -107,
	-128, -141, -183, -184, 576, -282, 583, 186, 583, 585,
	-502, 186, -343, -266, -282, -297, -298, -303, 2, 137,
	-354, -567, 518, 438, 444, -343, -255, 38, -433, -472,
	-473, -523, 587, -522, -475, -485, -481, -484, 370, 374,
	-504, 54, 540, -487, 240, 4, -514, -516, 237, 238,
	464, 51, 394, 177, 125, 124, 335, 56, 502, 503,
	504, 505, 190, 191, 58, 541, 476, 69, 70, -567,
	518, 438, 444, -343, 182, -509, 2, -508, -507, 116,
	450, -505, 5, 2, 153, 2, 2, 2, -252, -231,
	588, 64, 418, 153, -352, 213, -231, 153, -231, 153,
	-304, 213, -303, -231, 153, -231, 588, 153, -231, 588,
	153, 585, 588, 153, -509, 2, -395, -501, -354, 38,
	-409, 2, 126, -507, -614, 588, 270, -307, 285, 326,
	209, 343, 556, 336, 130, -510, 5, 4, -432, -444,
	126, 278, 240, -492, -494, 8, -493, 9, -495, 574,
	575, -500, -499, 109, 585, -502, -228, 411, 451, 357,
	-227, 24, 29, 142, 231, 314, 537, 159, -320, 232,
	-317, 361, 153, 468, 527, -581, -582, 435, 497, 498,
	90, 336, 451, 357, 411, 153, -375, -377, 38, 118,
	314, 356, 61, 224, 290, 291, 470, 546, 153, 451,
	357, 411, 357, 24, 142, -243, -240, 451, -582, 99,
	411, 482, 383, -582, -230, 468, 527, -581, -582, 435,
	411, -229, -322, -317, 361, 153, 587, 24, 142, 411,
	451, 357, -597, -598, 29, 411, 357, -575, -546, 552,
	153, -458, 213, -589, -124, 262, 5, 10, -511, -124,
	-350, 588, 588, -502, 576, 437, 436, 153, 153, 153,
	153, 182, 327, 2, 2, 2, 2, 2, 188, -584,
	-602, 2, 2, -282, 213, -336, 342, -570, -351, 490,
	-282, 182, 327, 43, -284, 213, 2, -287, 543, -575,
	327, -286, 213, -282, 38, 583, 327, 2, -395, 2,
	229, -546, 327, -459, -300, -282, -454, -300, 451, -275,
	38, -419, -282, 584, 588, -469, -469, -511, -192, 552,
	186, 102, 583, 583, -204, -466, 588, -465, 220, -512,
	-125, -511, 414, -511, -570, -266, 2, -282, 2, 490,
	251, -511, -192, 220, -511, -511, -511, -501, 28, 454,
	2, -178, 449, 511, 89, 454, 2, -282, 490, 120,
	229, 80, -252, -573, 182, -568, 425, 438, 518, -567,
	-282, 120, -282, 120, -282, 120, -282, -282, 2, 2,
	2, 2, 2, 85, 85, 2, 46, -592, 182, 2,
	509, 2, 509, 2, -252, -252, -252, 471, 270, -282,
	491, -605, 2, 186, 182, 2, 490, 229, 490, 229,
	120, 186, 74, 120, 28, 490, -231, 588, -256, -216,
	-369, -501, -370, -369, -217, -216, -219, 182, 393, 528,
	314, 455, 255, -400, -399, 28, -422, -404, 176, 313,
	-422, -402, -424, 574, 575, -493, -495, -353, 336, -210,
	-210, -210, -340, -449, -422, 383, 229, -474, -472, -472,
	-280, -502, 502, -422, -422, -422, -422, -422, -422, -422,
	-422, -422, -422, -422, -422, -422, -422, -422, -422, -422,
	-422, -422, -422, -422, -422, -422, -422, -422, -422, -422,
	-422, -422, -422, -422, -422, -422, -422, -422, 271, 217,
	457, 50, 220, -422, 506, -422, -422, -422, -422, 308,
	327, 332, 515, 167, 525, 138, 336, -617, 484, 40,
	-429, -211, -358, 583, -443, 35, 467, 28, -436, 583,
	2, -417, -422, -418, -355, -354, -354, 584, 542, 28,
	138, 576, 2, 584, 588, 38, 584, -422, -355, -435,
	-431, -354, -442, -441, 549, -390, -391, 557, 295, 123,
	211, 293, -392, 442, -496, 8, -502, 576, -553, 175,
	204, 583, 584, 2, 584, 2, 584, -422, 2, 584,
	-422, 2, 584, -422, 2, 584, -422, 2, 584, 2,
	-422, -422, -422, -422, -422, -422, -422, -354, 8, -496,
	-496, 502, 502, -496, -496, -496, -488, 370, 371, 372,
	373, 273, 274, 275, 276, 374, 375, 376, 377, 300,
	301, 302, 303, 296, 297, 298, 299, 304, 305, 306,
	307, 195, 196, 197, 198, 191, 192, 193, 194, -488,
	-384, 2, -490, -354, 4, 557, 295, 123, 211, 293,
	442, 5, -384, 2, -385, 2, -422, -354, -386, -423,
	-424, 574, 575, 567, -436, -387, 2, -422, -355, -422,
	57, 265, 508, -388, -422, 186, -354, -354, 2, -354,
	2, -550, 38, -354, -346, 588, 186, 38, 4, -346,
	-346, 583, 584, 588, -383, 208, 289, 284, 243, -383,
	-453, -382, 250, -380, 352, -380, -380, -447, -267, 581,
	589, -502, -447, -446, -445, 38, -275, 349, -447, -447,
	585, 584, -446, 582, -565, 583, 586, 586, 586, 586,
	586, -282, 583, -354, -502, 585, 473, 2, 584, 244,
	244, 244, 244, 430, 584, 506, -569, -290, -294, 2,
	552, -101, 344, 584, 588, -345, 37, 581, 585, -496,
	2, 2, -491, 544, 583, 583, -391, 583, 186, -569,
	-294, 2, -344, 588, 506, -252, 2, -282, -352, -231,
	153, -352, -352, -231, 588, 153, -266, -285, -290, -292,
	-294, -252, -511, -512, -231, -286, -594, 584, 510, -410,
	-306, 393, 466, 412, 446, 486, 8, 9, 8, 9,
	588, -502, 588, -595, 93, 506, 78, 438, -245, 279,
	506, -413, 213, 78, -524, -269, 93, -525, -252, 72,
	524, 383, 185, 151, -595, 93, 383, -595, 93, 2,
	231, 93, 451, 471, 28, 60, -458, 41, 41, 28,
	-593, 325, 266, 548, 186, 558, 490, 229, 438, 506,
	506, -458, -377, -472, 118, 290, 291, 60, -497, -492,
	574, 575, -497, 60, -497, -497, -497, 552, -284, -458,
	438, 506, 506, 506, 402, 402, -240, 506, 506, -615,
	566, 402, 588, 41, 41, 28, -593, 325, 266, 186,
	506, -303, -267, 538, 42, 538, 42, 538, 506, 42,
	438, 506, 588, 42, 506, 506, -576, -257, 105, 320,
	283, 321, 97, 317, 96, 316, 103, 318, 104, 319,
	545, 330, 63, 315, 294, 322, -258, -259, 363, 536,
	-511, 451, 357, 411, 153, 220, -466, 220, -466, -295,
	-252, 585, -128, -422, -422, -128, -422, -128, 46, 153,
	2, -611, 259, 583, -310, 327, 186, -343, -467, 241,
	588, -351, -567, 153, -508, -376, -375, 327, -286, 213,
	2, 153, -334, 327, 147, 583, 391, 2, 153, -268,
	213, -253, -252, -395, -234, 494, 153, -373, 534, -405,
	-128, 583, 126, 38, -405, -362, -363, -464, -364, -269,
	583, -275, -419, -101, -468, 584, 584, 584, -191, 346,
	-190, -252, 5, -204, 534, -309, -414, -413, -528, -529,
	-524, 271, 229, 524, 243, 168, -335, -270, -269, 119,
	-198, 552, -124, -125, 584, -466, 220, 474, -192, -192,
	-466, -466, -282, 182, -511, -192, -192, -192, 2, 2,
	2, 2, -379, -282, -266, -303, -282, 585, -343, -343,
	-294, -290, -379, -266, -379, -266, -379, -266, -128, -422,
	2, 448, 182, 182, 585, -379, 391, 120, 490, 361,
	229, -282, -303, -282, -303, -266, 120, -266, 121, -282,
	-458, -370, -217, 343, 255, 455, -402, -403, -424, 429,
	430, -403, 429, 430, 8, 9, 8, 9, -221, 459,
	331, -352, 588, -225, 39, 134, 255, -282, 558, 149,
	-422, -422, 506, -617, 484, -429, 149, -422, 308, 332,
	515, 167, 525, 138, 336, 186, 583, -423, -423, 584,
	-356, -422, -422, 582, 591, 584, -339, 588, -337, -422,
	-354, -354, 584, 585, -354, -343, 582, 582, 588, 584,
	-440, -441, 143, -422, 506, 506, 506, 506, 583, 584,
	585, -558, 353, 583, 583, -422, 584, 584, 584, 584,
	38, 588, 588, 588, 584, 588, 588, 588, 584, 584,
	584, 588, 584, 558, 558, 584, 584, 584, 584, 588,
	584, 588, 584, 186, 584, 584, -393, 367, 584, 11,
	12, 574, 575, 576, 577, 180, 578, 579, 572, 573,
	571, 564, 565, 566, 86, 286, 431, 14, 15, 16,
	244, 220, -423, -423, -423, 584, -427, -428, 186, 182,
	38, -388, -388, -388, 584, 186, -354, 584, 584, 583,
	-551, 288, 327, 584, -416, -415, 550, -463, -347, 2,
	-453, -277, -502, -416, -416, -354, -422, 250, 250, -381,
	534, 342, -383, -453, -446, -498, -421, -420, 184, 39,
	134, 323, 216, -446, -275, -334, -446, -446, -502, -447,
	-447, -445, 584, -566, -498, 584, -348, -456, -545, -339,
	585, -502, -201, -546, -180, 5, 332, -180, -180, -180,
	-343, 506, 506, 25, 368, -472, 581, 582, 8, -502,
	583, -496, -496, -496, -343, 186, 186, 186, -508, -508,
	2, -231, -352, -231, -231, -303, -304, -231, -231, -231,
	-374, 552, -499, -409, 522, 83, 393, 502, -499, -227,
	411, -269, -269, -282, -291, -252, 199, 403, -508, 327,
	-413, 213, -233, 327, -472, -276, -252, 583, -397, 554,
	255, 255, 534, -269, -276, 255, 213, -269, 213, -276,
	2, -276, -577, 393, 337, -422, 60, -318, 277, 391,
	328, -228, 411, 451, 357, -128, -128, -128, -128, -128,
	583, -594, 534, 137, -282, -303, -282, -291, -508, -286,
	451, 357, 411, 324, -297, -497, -497, -375, 451, 357,
	411, -291, -508, -284, -508, -239, -252, -239, 438, -266,
	402, 558, 45, -615, -229, -128, -128, -128, -128, -128,
	583, -267, -230, 411, 5, 213, -269, 5, -269, 213,
	5, -252, -269, -291, -508, -598, 24, 142, -269, -291,
	-508, -257, -511, 332, 530, -575, 438, 506, 506, -458,
	-124, -195, 552, -124, -189, 225, 576, -572, -252, 543,
	-252, -308, -311, -309, -269, -207, -208, 554, 552, 153,
	-301, -282, 581, -192, -511, -282, -467, -292, -293, 153,
	-334, 327, -511, 38, 153, 583, 2, 2, -285, 342,
	327, -268, 213, -235, 144, -615, -266, -416, -347, -372,
	-407, 420, 342, -335, 539, -275, -372, -349, 588, 186,
	566, 585, -335, -462, 576, -101, -101, -192, 588, 583,
	566, 566, 583, -511, -511, 584, 588, -233, -282, -268,
	229, 229, -274, -253, 584, 588, 585, 583, -200, 346,
	-199, 145, 257, 242, 460, 461, 462, 463, 136, -466,
	-198, -125, 186, 186, -61, 552, 490, -192, 587, -252,
	-379, -379, -379, 448, 448, -252, -278, -266, -282, -279,
	-303, 182, 182, -266, 528, -403, 343, 282, -449, -226,
	560, -282, 587, -422, -422, 149, 149, -422, -423, -423,
	-422, 149, 186, 583, -422, -433, 33, 33, 584, 588,
	-418, -422, 584, 542, -339, -339, 584, 576, -502, 587,
	584, -431, 146, -422, 500, 295, 211, 293, -392, 293,
	-392, -392, -496, 5, -502, 576, -559, -272, 583, -252,
	550, -338, 348, 584, -474, -472, -422, -422, -422, -422,
	-422, -496, -477, -477, -492, -492, -422, -427, -422, -474,
	-472, -423, -423, -423, -423, -423, -423, -423, -423, -423,
	-423, -423, -423, -423, -423, -423, -423, -423, -423, -423,
	138, 327, 336, -423, -428, -427, -422, -422, -472, 584,
	584, 584, -354, -101, 583, 288, -366, 204, -422, -466,
	588, -366, -366, 584, -453, -453, 583, -422, 250, 582,
	588, 590, 566, -334, 585, -445, -446, 582, 584, 588,
	584, 588, -406, 38, 584, -502, -416, -203, -202, 135,
	53, 107, 133, 332, -343, -343, 345, 5, 8, 581,
	582, 585, -496, 584, 584, 584, -343, -343, -343, -231,
	-231, 119, 314, -422, 506, 506, 60, 220, 153, 327,
	536, -530, -525, 151, -422, 583, 229, 583, 583, 2,
	-223, -224, 142, 451, 24, -596, 2, 534, 153, -231,
	153, -231, 556, -318, 583, 583, 506, 438, -245, 506,
	552, -354, -422, -193, 126, -501, -582, 587, -582, 587,
	438, 506, 506, 438, 506, 506, 552, 166, 166, 558,
	-239, 552, -354, 506, -476, 48, 26, 327, -285, -231,
	153, 506, 506, 518, 451, -511, 332, -291, -508, -286,
	451, 357, 411, -466, -197, 346, -196, 145, 422, 136,
	257, 222, -466, -195, 186, 241, 552, -286, 2, 584,
	584, 588, -531, 38, 340, 340, 583, -282, -82, 552,
	-465, -498, -578, 552, 43, -284, 38, 153, -575, -128,
	-286, -470, -471, 5, 38, -282, 153, 342, 327, -236,
	264, -615, -506, -546, -339, -372, -361, 328, 91, 584,
	-416, -363, -347, -422, 2, 584, -190, -191, -511, -511,
	-511, -192, -204, -204, -414, -312, 583, -268, -253, 583,
	-204, -270, 2, -512, 588, 583, 566, 566, 566, -198,
	-466, -124, -128, 346, -282, 576, -379, -324, -323, 361,
	336, -324, 429, 429, 343, 176, 260, -225, -267, -422,
	-422, 149, 33, 33, -422, -422, -433, 584, -422, -422,
	-354, 582, 5, -422, 584, 584, 8, -422, 584, 585,
	-560, -252, -422, 584, 60, 584, 584, 588, 588, 584,
	584, 584, 584, 584, 584, 584, -428, 186, 138, 336,
	583, 584, 584, -101, -430, 207, 60, -453, -430, -430,
	-381, -343, -453, -420, -267, 581, -502, -498, -456, 583,
	585, -202, 566, -511, -511, 552, 582, 2, 581, -502,
	584, 119, -269, -269, 490, 429, -239, 383, -413, 153,
	-532, 93, -534, 76, 168, 102, 327, 332, 524, 383,
	72, 126, 399, -607, 38, 563, 584, -341, -450, -545,
	583, -252, -341, -343, 327, 479, 126, 327, 126, 547,
	119, 2, 518, 79, -269, -276, -343, -343, -282, -291,
	-508, 160, 584, 588, 566, 2, 576, 576, -291, -508,
	-286, -291, -508, -284, 359, 166, 160, 584, -267, 5,
	5, 153, -264, 76, -269, 5, -269, -285, 119, 438,
	506, 506, -195, 588, 583, 566, 566, -195, -512, -124,
	2, -334, -325, 231, -269, -529, -526, -527, 383, -533,
	-535, 168, 383, -128, 2, -206, -205, -252, 5, 583,
	-310, 346, 582, -580, 346, -579, 117, 136, -508, -376,
	-128, -286, -334, 584, 588, 147, -398, 534, -267, -282,
	153, -237, 263, -615, -506, -234, -401, -399, 139, 583,
	342, -128, -339, 566, 584, 584, 119, 119, 223, 152,
	-341, 583, 583, -343, 119, 584, -199, -200, -511, -124,
	-511, -198, -466, -62, -63, 229, 93, 366, -279, 490,
	229, 583, 583, -225, -422, -422, -422, 584, -339, -502,
	576, -554, 361, 584, -449, -422, -422, -423, 186, 583,
	-433, 584, -555, 551, -422, -367, -368, -422, 428, 108,
	205, -555, -555, 584, -498, 2, -511, 2, 581, 2,
	220, 38, 402, -413, -276, -280, -273, -252, 168, 213,
	332, 547, -397, 255, 583, -423, -282, 583, 2, 30,
	-608, 130, 234, 584, 588, -451, -263, -252, -422, -451,
	584, 584, 332, 332, 547, -422, -472, 583, -231, -231,
	584, 584, -422, 506, -501, 100, -499, 2, -582, -266,
	-422, 506, 5, -231, -280, -231, -231, -264, 518, -291,
	-508, -286, -196, -197, -511, -124, -195, 38, -315, 233,
	2, -531, 255, -273, 255, -606, 552, 584, 588, 566,
	566, -308, -207, -83, -84, 507, -465, 588, 583, 566,
	-334, 38, 5, 583, 583, -252, 342, 583, -267, -247,
	92, -615, -506, -235, -372, 328, -343, 93, -401, -429,
	-192, 583, 583, -313, 81, 94, 127, 212, 189, 230,
	471, 477, 28, -313, 584, -341, -341, 584, 583, -192,
	584, 588, 28, 583, 28, 583, -282, -303, -354, -354,
	584, -339, 60, 588, 584, 584, -423, -433, 584, -556,
	-557, -272, 588, 583, 583, 452, 582, 2, -239, 383,
	-252, -534, -273, 327, 534, -422, -254, 583, -422, 38,
	234, 131, 218, -412, -609, 101, 480, 221, -450, -225,
	584, -411, 534, 399, -264, -341, 583, 583, 583, 566,
	186, 583, -476, -231, -285, 584, -587, 397, -128, -319,
	-320, 220, 583, -314, 342, 119, 314, -205, -499, -499,
	584, 38, -84, 9, -579, -580, -422, 38, -128, -470,
	-341, -282, -341, 342, -241, -240, 272, -506, -236, 584,
	-276, -372, -512, -512, -411, 584, 584, -512, -63, -343,
	-343, 584, 584, -561, 391, 430, 206, -354, -340, 584,
	588, 38, -368, 2, 2, 2, 402, 153, 208, 584,
	-536, 287, -252, 584, 131, 218, -315, 583, -226, -451,
	-315, 208, -282, -583, 534, 584, -327, -326, -323, -329,
	-328, -323, -354, -499, 100, 359, -354, -264, -590, 187,
	-589, 5, 10, -207, 359, -342, -452, -269, 82, 119,
	-325, -128, 584, -128, 584, 584, -398, 584, -282, -238,
	-513, 402, 404, -615, -237, -416, 584, 584, -412, -411,
	-321, -317, 584, 584, 584, 584, -562, -563, 50, 521,
	109, -422, -562, -562, -557, -559, 168, 552, -537, -540,
	-539, 342, 458, 187, 360, 584, 479, 546, -321, -343,
	552, -334, -422, -411, 584, 588, 539, 584, 588, 539,
	584, 186, 584, -231, -194, 552, 46, -314, -282, 584,
	588, 382, 132, 142, -315, -606, -411, 583, -412, 583,
	-244, -243, -615, -492, -247, 139, -192, -192, -315, -412,
	-208, 552, -192, -564, 151, -563, 379, 181, 429, 379,
	181, -564, -564, -273, 55, -539, 342, -540, 342, 528,
	132, -608, 584, 55, -536, -315, -326, 220, -328, 186,
	359, 436, -589, 30, -246, -245, 583, -452, 430, 430,
	2, -319, -314, -412, -341, -315, -341, -242, -343, -241,
	328, 528, -321, -315, -416, 109, 204, 501, 314, 33,
	566, -538, 314, 418, 64, 451, -538, -416, 566, -537,
	583, 583, 346, -343, 2, -207, -315, 584, -321, 584,
	-238, 451, -208, -321, 429, 350, -563, -422, 23, 332,
	126, -422, -608, -354, -354, -191, 583, 584, -314, -321,
	-411, -208, -412, -244, -362, -416, -208, 584, 584, -191,
	-232, 64, 418, -246, -208, -412, -416, -315, -416, -416,
	-316, -317, 506, 584, -416, -315, -321, 583, -321, -208,
	-354, -208, -416, 584, -416, -316,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 537, 538, 540, 541, 542, 544,
	545, 547, 549, 551, 552, 553, 555, 556, 558, 559,
	560, 561, 562, 564, 566, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	631, 633, 0, 1324, 1326, 1328, 1330, 0, 775, 0,
	36, 37, 39, 0, -2, 324, 326, 328, 0, 355,
	357, 358, 360, 362, 363, 364, 366, -2, 0, 472,
	473, 475, 477, -2, 0, 965, 967, 0, 620, 622,
	0, 970, 972, 0, 0, 642, 643, 0, 1431, -2,
	636, 638, 640, 705, 707, 709, 711, 713, 715, 717,
	719, 721, 722, 724, 726, 728, 730, 732, 733, 735,
	737, 739, 740, 742, 743, 745, 747, 749, 751, 753,
	755, 757, 759, 761, 763, 765, 767, 769, -2, 772,
	-2, -2, 0, -2, -2, -2, 1342, 41, 43, 45,
	47, 49, 51, 53, 55, 57, 416, 418, 420, 422,
	424, 427, 429, 431, 1489, 479, 481, 483, 485, 487,
	489, 491, 0, -2, 1503, 0, 0, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 101, 102,
	103, 104, 105, 106, 107, 108, 73, 74, 75, 77,
	78, 79, 80, 84, 85, 86, 87, 88, 89, 90,
	91, 99, 71, 0, 0, 1462, 1464, 1466, 1468, -2,
	0, 0, 5, 9, 11, 13, 15, 17, 19, 21,
	23, 25, 27, 29, 539, 543, 546, 548, 550, 554,
	557, 563, 565, 567, 524, 525, 528, 2167, 2184, 2185,
	2186, 2189, 2190, 2191, 2192, 2193, 2194, 2635, 2717, 2718,
	2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225,
	2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235,
	2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245,
	2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255,
	2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265,
	2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275,
	2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285,
	2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295,
	2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305,
	2306, 2307, 2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315,
	2316, 2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325,
	2326, 2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335,
	2336, 2337, 2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345,
	2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355,
	2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365,
	2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375,
	2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385,
	2386, 2387, 2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395,
	2396, 2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405,
	2406, 2407, 2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415,
	2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425,
	2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435,
	2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445,
	2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455,
	2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465,
	2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473, 2474, 2475,
	2476, 2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485,
	2486, 2487, 2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495,
	2496, 2497, 2498, 2499, 2500, 2501, 2502, 2503, 2504, 2505,
	2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515,
	2516, 2517, 2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525,
	2526, 2527, 2528, 2529, 2530, 2531, 2532, 2533, 2534, 2535,
	2536, 2537, 2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545,
	2546, 2547, 2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555,
	2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565,
	2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575,
	2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585,
	2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595,
	2596, 2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605,
	2606, 2607, 2608, 2609, 2610, 2611, 2612, 2613, 2614, 526,
	527, 1142, 0, 591, 589, 2152, 592, 2438, 594, 596,
	466, 467, 468, 469, 470, 471, 0, 613, 604, 1501,
	614, 616, 617, 618, 619, 586, 584, 0, 613, 2220,
	611, 1322, 1323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 478, 0, 0, 0, 0, -2, 0, 0, 0,
	0, 0, 0, 0, 395, 1191, 1192, 1193, 1307, 1308,
	2482, 1349, 0, 225, 632, -2, -2, -2, 2600, -2,
	664, -2, 671, 2604, 2484, 676, 0, 678, -2, 681,
	1325, 1327, 1329, 773, 774, 2170, 0, 0, 0, 0,
	0, 38, 40, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	235, -2, -2, -2, -2, 0, 0, 2528, 2272, 2120,
	2186, 2123, 2118, 325, 327, 329, 330, 0, 0, 0,
	0, 0, 0, 356, 359, 361, 365, -2, 367, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, -2, -2, 0, 0, 0, 0, 0, 0, 0,
	0, 1026, 1018, 1019, 1249, 0, 0, 0, -2, 474,
	476, 529, 530, 0, 1490, 1490, -2, 0, 0, 0,
	0, 295, 282, 966, 968, 969, 0, 0, 0, 0,
	621, 623, 0, 0, 264, 971, 973, 974, 0, 0,
	0, 0, 0, 297, 0, 0, 637, 639, 641, 706,
	708, 710, 712, 714, 716, 718, 720, 723, 725, 727,
	729, 731, 734, 736, 738, 741, 744, 746, 748, 750,
	752, 754, 756, 758, 760, 762, 764, 766, 768, 770,
	771, 781, 0, 0, 0, 0, 0, -2, -2, 0,
	0, 0, -2, -2, -2, -2, 0, 0, 0, 0,
	0, 0, 0, -2, 0, 869, 0, 0, 0, -2,
	-2, -2, 0, 0, 0, 0, 0, -2, -2, 0,
	0, 0, 0, -2, 947, 0, 784, 786, 787, 788,
	0, 847, 867, 868, 877, 0, 1182, 1491, 1351, 1332,
	1346, 1351, 1334, 1335, 1336, 1337, 1338, 1343, 1345, 1339,
	1340, 1341, 42, 44, 46, 48, 50, 52, 54, 56,
	58, 417, 419, 421, 423, 425, 428, 430, 432, -2,
	1460, 1461, 480, 482, 484, 486, 488, 490, 492, 624,
	0, 626, 0, 785, -2, 0, 1495, 1495, 1495, 0,
	0, 1461, 1459, 0, 629, 630, 685, 686, 1763, 0,
	0, 0, 0, 0, 0, 0, 2017, 1849, 0, 687,
	-2, 1880, 1882, 2575, 2600, 2016, 1884, 1885, 1886, 1887,
	1888, 0, 1890, 1891, 1892, 1893, 1894, 1895, 0, 1897,
	0, 1902, 1903, 1904, 0, 2582, 2097, 2180, -2, 0,
	0, 2588, 2176, 0, 1983, 1920, -2, -2, 2203, 2182,
	1695, 1696, 1697, 1698, 1699, -2, -2, 2618, 1924, 1925,
	1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 0,
	2563, 2583, 2584, 2589, 2591, 2585, 2572, 1945, 2285, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, 1722, 1731, -2, -2, -2, -2, -2, -2,
	-2, 2576, 2577, 2594, 2597, 2603, 2608, 2609, 2581, 2590,
	2617, 2619, 2620, 2621, 2622, 2623, 2624, 2625, 2626, 2627,
	2628, 2629, 2630, 2631, 2632, 2633, 2634, 1723, -2, -2,
	-2, -2, 1478, 2451, 1481, 1142, 1479, 1463, 1465, 0,
	1467, 0, 0, 0, 1472, 1498, 1496, 0, 1547, 1476,
	1477, 1565, 1565, 1589, 0, 1570, 0, 1589, 1490, 1616,
	0, 1576, 2474, 1921, 1922, 0, 2186, 2181, -2, -2,
	2615, 0, 0, 0, 0, 0, 0, 0, 0, 587,
	0, 593, 595, 0, 0, 0, 612, 1500, 0, 0,
	0, 0, 0, 0, 0, 398, 399, 400, 401, 402,
	2583, 0, 0, 0, 407, 0, 409, 410, 411, 412,
	413, 414, 415, 194, 2583, 497, 522, 0, 194, 2583,
	500, 194, 2583, 503, 0, 506, 1247, 194, 2583, 509,
	2148, 194, 2583, 512, 514, 2156, 194, 2583, 518, 2163,
	2161, 519, 2583, 521, 300, 298, 299, 2199, 2200, 2207,
	2208, 2209, 2210, 2616, 2618, 1318, 1319, 1320, 1321, 0,
	1348, 1248, 634, 635, 0, 659, 0, 663, 2571, -2,
	0, 2493, -2, 667, 1352, 1356, 1357, 1358, 1359, 1360,
	0, 0, 0, 0, 1365, 0, 0, 673, 0, 0,
	660, 661, 679, 682, 0, 776, 777, 778, 779, 780,
	70, 0, 2583, 1616, 72, 0, 2142, 2211, 2212, 2213,
	2214, 2215, 2636, 2637, 2638, 2639, 2640, 2641, 2642, 2643,
	2644, 2645, 2646, 2647, 2648, 2649, 2650, 2651, 2652, 2653,
	2654, 2655, 2656, 2657, 2658, 2659, 2660, 2661, 2662, 2663,
	2664, 2665, 2666, 2667, 2668, 2669, 2670, 2671, 2672, 2673,
	2674, 2675, 2676, 2677, 2678, 2679, 2680, 2681, 2682, 2683,
	2684, 2685, 2686, 2687, 2688, 2689, 2690, 2691, 2692, 2693,
	2694, 2695, 2696, 2697, 2698, 2699, 2700, 2701, 2702, 2703,
	2704, 2705, 2706, 2707, 2708, 2709, 2710, 2711, 2712, 2713,
	2714, 2715, 2716, 76, 0, 2583, 81, 0, 2583, 0,
	-2, 92, 0, 100, 0, 2145, 109, 0, 2583, 0,
	2117, -2, 0, 206, 283, 284, 285, 286, 0, 993,
	-2, 2583, 1190, 0, 0, 0, 0, 956, 2114, 2119,
	957, 2138, 958, 2124, 0, 331, 332, 333, 334, 335,
	0, 336, 2583, 338, 339, 0, 341, 342, 2583, 344,
	345, 0, 347, 0, 247, 248, 2583, 369, 371, 0,
	373, 374, 0, 376, 0, 0, 0, 380, -2, 396,
	0, 393, 383, 384, 386, 387, 388, 389, 390, 0,
	436, 434, 2153, 0, 0, -2, 2583, 0, 990, 0,
	0, 1227, -2, 2583, 1187, 0, 1234, 2583, 1230, 0,
	-2, 0, 1488, 2583, 1369, 1022, 1023, 1024, 1025, 1628,
	463, 0, 1396, 0, 1398, 0, 1417, 1622, 1565, 0,
	0, 1627, 0, -2, 580, 2169, -2, 532, 0, 533,
	0, -2, 0, 312, 0, 0, 975, 976, 977, 978,
	979, 982, 983, 984, 985, 1602, 265, 267, 0, 0,
	1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 0,
	0, 644, 0, 0, 782, 783, 0, 0, 793, 794,
	795, 0, 312, 2485, 2447, 2306, 802, 0, 805, 808,
	-2, 0, 0, 0, 0, 812, 0, 817, 818, 819,
	0, 0, 823, 825, 964, 827, 0, 0, 829, 0,
	833, 0, 836, 0, 838, 0, 840, -2, -2, -2,
	848, 849, -2, 853, -2, 0, 856, 858, 0, 860,
	-2, 0, 869, 865, 866, 0, 0, 0, 0, 885,
	886, 0, 895, 0, 898, 899, 900, 0, 902, 903,
	0, 905, 906, 907, 908, 0, 0, 911, 912, -2,
	-2, 916, 918, 0, -2, 0, 934, 0, 938, 0,
	0, 946, 0, 789, 790, 194, 1620, 1331, -2, 1333,
	0, -2, 0, 625, 0, 628, 1520, 1446, 1443, 0,
	1517, 1518, 1447, 0, 0, 0, 1454, 0, 1493, 1494,
	0, 0, 0, 1433, 1434, 0, 0, 0, 0, 2022,
	2023, 2024, 2025, 2026, 2027, 2030, 2031, 2028, 2029, 2032,
	2033, 0, 0, 0, 0, 0, 2034, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2035, 2036,
	2037, 0, 0, 2039, 0, 2041, 0, 0, 0, 0,
	0, 0, 1828, 1830, 2105, 0, 0, 2038, 1768, 1769,
	1770, 1771, 1772, 1807, 1808, 0, 0, 1881, 2102, 2101,
	1883, 0, 2053, 0, 1896, -2, 0, 2017, 2048, 0,
	0, 1905, 1906, 1907, 0, 0, 2053, 0, 0, 2096,
	1917, 1918, 1760, 0, 0, 1985, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1709, 1708, 0, 1710, 0, 1711, 1712,
	1719, 1732, 0, 0, 0, 0, 1736, 0, 0, 0,
	0, 0, 0, 0, 2077, -2, 0, 0, 0, 0,
	1724, 0, 1480, 0, 0, 1551, 2106, 2110, 2111, 1551,
	1551, 0, 0, 2054, 1613, 1613, 0, 0, 1608, 1608,
	1608, 1606, 1589, 0, 1589, 1599, 0, 1589, 1589, 0,
	-2, 1570, 0, 0, 1599, 0, 1583, 568, 570, 572,
	574, 575, 576, 578, 1617, 1618, 0, 0, 0, 0,
	2187, 0, 0, 0, 0, 0, 2172, 0, 352, 0,
	0, 0, 2538, 2484, -2, 598, 615, 1490, 0, 2056,
	1643, 1647, 0, 1649, 1650, 1651, 1652, 1653, 0, 0,
	1644, -2, 1720, 1722, 1743, 2204, 2205, 2206, 1703, 1704,
	1705, 1706, 1707, 1715, 1702, 1702, 1702, 1713, 1742, 1734,
	1742, 1738, 1688, 1689, 1690, 1725, 1726, 1727, 1728, 0,
	2538, 2484, -2, 606, 0, 0, 1428, 210, 212, 213,
	214, 215, 216, 397, 0, 404, 405, 406, 0, 493,
	0, 192, 193, 0, 194, 2583, 498, 0, 501, 0,
	194, 2583, 2112, 507, 0, 510, 0, 0, 516, 0,
	0, 0, 0, 0, 194, 1430, 0, 0, 0, 0,
	-2, 669, 674, 675, 0, 1354, 0, 1361, 696, 697,
	698, 1363, 1364, 0, 1366, 672, 699, 700, 701, 702,
	703, 704, 0, 2126, 2127, 2128, 2129, 2132, 2133, 0,
	0, 670, 689, 677, 0, 683, 110, 1304, 0, 0,
	153, 0, 1304, 1304, 0, 0, 0, 0, 179, 0,
	1061, 0, 0, 0, 0, 125, 138, 149, 122, 123,
	0, 0, 0, 0, 0, 0, 82, 1164, 0, 1167,
	0, 0, 0, 0, 0, 0, 0, 1180, 0, 0,
	0, 0, 0, 0, 0, 96, 97, 0, 137, 0,
	0, 1393, 0, 132, 112, 0, 0, 125, 139, 151,
	0, 183, 185, 1058, 0, 0, 0, 0, 0, 0,
	0, 0, 205, 217, 0, 0, 0, 1188, 0, 1487,
	0, 0, 2583, 0, 1602, 2354, -2, -2, 265, 1602,
	955, 0, 0, 2187, 2122, 0, 0, 0, 0, 0,
	0, 0, 0, 372, 375, 377, 378, 379, 0, 1226,
	0, 385, 426, 1113, 2583, 0, 0, 453, 448, 0,
	450, 0, 0, 0, 1163, 2583, 1161, 2157, 0, 1185,
	0, 1142, 2583, 2155, 0, 0, 0, 1235, 2196, 1244,
	1248, 1383, 0, 465, 0, 1399, 1401, 0, 0, 1623,
	0, 1625, 1565, 1490, 0, 0, 0, 0, 288, 0,
	0, 0, 0, 0, 0, 271, 0, 1601, 0, 0,
	1602, 265, 2462, 312, 312, 1602, 646, 1602, 648, 0,
	0, 796, 797, 0, 312, 312, 312, 803, 804, 806,
	807, -2, -2, -2, -2, 809, 810, 892, 0, 0,
	0, 891, 822, 826, 0, 949, 2470, 2484, 2538, 962,
	892, 2272, 892, 2272, 892, 2272, 837, 839, 842, 880,
	888, 852, 857, 0, 0, 862, 870, -2, 0, 872,
	0, 874, 0, 876, 892, 893, 896, 901, 904, 909,
	910, 0, 925, 930, 931, 927, 0, 0, 0, 0,
	0, 0, 941, 942, 0, 0, 1181, 0, 1344, 1520,
	1446, 627, 1437, 1519, 1438, 1445, 1448, 0, 0, 1450,
	0, 1452, 0, 1515, 1516, 1523, 1524, 0, 1534, 1535,
	1527, 0, -2, 0, 0, 1530, 1531, 1456, 0, 1473,
	1474, 1475, 1504, 1507, 1263, 0, 2717, 1764, 1638, 1765,
	1766, 2141, 0, 1773, 1774, 1775, 1776, 1777, 1778, 1779,
	1780, 1781, 1782, -2, -2, -2, -2, -2, -2, -2,
	-2, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799,
	1800, 1801, -2, -2, -2, 1805, 1806, -2, 2040, 2042,
	0, 2105, 0, -2, 0, -2, -2, -2, -2, 1825,
	0, 1827, 1832, 1834, 1836, 0, 0, 0, 0, 2104,
	1846, 2088, 2089, 0, 0, 2019, 2020, 2021, 1831, 0,
	1850, 2103, 2100, 0, 0, 2052, 1503, 1909, 0, 0,
	0, 0, 1916, 1901, 2050, 0, 2049, 0, 0, 0,
	2060, 0, 2095, 2091, 0, 2139, 1759, 1746, 1747, 1748,
	1749, 1750, 1751, 1761, 0, 2136, 2173, 2179, 1993, 0,
	0, 0, 1946, 1947, 1948, 1949, 1950, 0, 1952, 1953,
	0, 1955, 1956, 0, 1958, 1959, 0, 1961, 1962, 1963,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1656, 1657, 1658,
	1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668,
	1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678,
	1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 0,
	0, 1965, 0, 2063, -2, -2, -2, -2, -2, -2,
	-2, -2, 0, 1967, 0, 1969, 2054, 2074, 0, 0,
	1851, 0, 0, 0, 2017, 0, 1972, 2054, 2082, 0,
	0, 0, 0, 0, 2054, 0, 2087, 0, 1979, 0,
	1981, 1482, 0, 0, 1633, 0, 0, 0, 2109, 1633,
	1633, 0, 1546, 0, 0, 1609, 1610, 1611, 1612, 0,
	0, 1613, 0, 1603, 1607, 1604, 1605, 1599, 1562, 0,
	0, 2143, 1599, 1568, 1598, 0, 1142, 1588, 1599, 1599,
	0, -2, 1572, 1589, 0, 0, 569, 571, 573, 577,
	579, 0, 0, 1503, -2, 0, -2, 314, 1141, 0,
	0, 0, 0, 588, 590, 0, 0, 513, 0, 603,
	0, 582, 0, 585, 0, 1634, 1637, 0, 0, 1648,
	1654, 1655, 0, -2, 0, 0, 1744, 0, 0, 0,
	0, 610, 0, 0, 0, 0, 408, 523, 194, 495,
	0, 194, 194, 504, 0, 0, 194, 515, 194, 2164,
	194, 2162, 301, 520, 1429, 228, 0, 662, 0, 1353,
	1362, 0, 693, 0, 695, 0, 2130, 2134, 2131, 2135,
	0, 684, 0, 0, 0, 0, 1303, 0, 1270, 0,
	0, 157, 2583, 0, 196, 0, 0, 1106, 2149, 0,
	1098, 0, 0, 2292, 0, 0, 0, 0, 0, 172,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 119,
	0, 0, 0, 124, 0, 0, 0, 0, 0, 0,
	0, 0, 1165, 1166, 1168, 1175, 1177, 0, 1171, 2137,
	0, 0, 1172, 0, 1174, 1176, 1178, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 98, 0, 0, 0,
	1392, 1393, 0, 0, 0, 121, 0, 0, 0, 0,
	0, 0, 2116, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1222, 1220, 1200, 1201,
	1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211,
	1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 0, 0,
	-2, 0, 0, 0, 0, 0, 238, 0, 303, 2115,
	2125, 0, 980, 981, 337, 340, 343, 346, 234, 0,
	381, 0, 0, 1028, 1003, 0, 0, 435, 312, 0,
	0, 449, 453, 2166, 988, 1159, 1162, 0, 1142, 2583,
	1199, 0, 0, 0, 0, 0, 0, 1233, 0, 0,
	2583, 2144, 2195, 2196, 1385, 1393, 0, 1633, 0, 1415,
	1402, 0, 0, 0, 1415, 1419, 1420, 1422, 1423, 0,
	0, 1624, 1630, 531, 581, 1490, 1490, 312, 310, 2415,
	308, 305, 307, 0, 0, 0, 1029, 1031, 1032, 1033,
	196, 0, 2196, 1098, 2343, 2196, 0, 1405, 1407, 0,
	259, 0, 268, 1602, 266, 271, 0, 0, 0, 447,
	645, 650, 791, 0, 312, 799, 800, 801, 844, 882,
	890, 929, 811, 813, 814, 815, 0, 0, 963, 959,
	960, 961, 828, 892, 831, 892, 834, 892, 855, 859,
	864, 871, 0, 0, 0, 884, 0, 0, 0, 0,
	0, 0, 0, 935, 936, 937, 939, 944, 943, 948,
	1621, 1441, 1442, 1444, 0, 1453, 0, 0, 1529, -2,
	-2, 1528, 1532, 1533, -2, -2, -2, -2, 1449, 0,
	1458, 1455, 0, 1514, 1261, 1262, 0, 0, 0, 0,
	-2, -2, 0, 0, 0, 1847, 0, -2, 1826, 1829,
	1833, 1835, 1837, 0, 0, 0, 0, 0, 0, 2043,
	0, 2045, 1848, 2098, 2101, 2015, 0, 0, 1502, 1503,
	1503, 0, 1915, 0, 2051, 0, 2058, 2059, 0, 1908,
	0, 2092, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1919, 0, 0, 0, 0, 1951, 1954, 1957, 1960,
	0, 0, 0, 0, 1940, 0, 0, 0, 1944, 1714,
	1700, 0, 1742, 1740, 1741, 1735, 1742, 1739, 1692, 0,
	1691, 0, 1964, 0, 1966, 1968, 0, 0, 1970, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1854, 1855, 1856, 1971, 2080, 2081, 0, 0,
	0, 0, 0, 0, 1977, 0, 2086, 1978, 1980, 1490,
	0, 1483, 0, 1548, 1537, 1632, 0, 2107, 1602, 1550,
	1552, 2108, 2146, 1537, 1537, 0, 2055, 0, 0, 1593,
	0, 0, 0, 1595, 1566, 0, 0, 1560, 0, 1556,
	1557, 1558, 1559, 1567, 1142, 1597, 1569, 1573, 2173, 0,
	1599, 0, 1584, 0, 1586, 1619, 0, 1578, 1581, 0,
	0, 2188, 1633, 0, 348, 353, 354, 349, 350, 351,
	597, 0, 0, 0, 0, 2057, 0, 1639, 0, 1645,
	0, 0, 0, 0, 605, 0, 0, 0, 211, 1427,
	403, 494, 194, 499, 502, 2113, 194, 508, 511, 517,
	224, 0, 658, -2, 691, 692, 694, 0, 690, 154,
	1304, 0, 0, 1266, 1268, 2160, 1272, 1278, 1281, 0,
	159, 2583, 170, 0, 1077, 0, 2147, 0, 0, 0,
	0, 0, 0, 1306, 0, 0, 2583, 194, 2583, 194,
	173, 175, 178, 0, 182, 180, 0, 1065, 0, 0,
	1068, 111, 1304, 0, 0, 114, 118, 126, 127, 130,
	0, 0, 0, 136, 0, 0, 0, 1283, 1287, 1295,
	0, 0, 0, 1169, 1170, 1173, 1179, 83, 0, 0,
	0, 1291, 1293, 1299, 93, 94, 2158, 95, 0, 1265,
	0, 0, 0, 0, 184, 116, 120, 128, 129, 131,
	0, 1301, 113, 0, 209, 0, 0, 199, 194, 2583,
	0, 201, 0, 202, 203, 218, 0, 0, 0, 991,
	992, 1221, 1183, 1184, 0, 1189, 0, 0, 0, 0,
	1602, 230, 0, 1602, 238, 0, 2121, 0, 368, 0,
	0, 0, 0, 1027, 1124, 0, 998, 0, 0, 0,
	441, 437, 0, 446, 452, 451, 457, -2, 0, 0,
	0, 0, -2, 0, 0, 1237, 1231, 1232, 0, 0,
	0, 0, 2583, 1387, 1393, 0, 1488, 1503, 464, 1394,
	1415, 0, 0, 0, 1404, 1400, 1397, 1633, 0, 0,
	0, 0, 0, 1626, 1629, 534, 535, 287, 0, 0,
	0, 0, 0, 312, 0, 0, 0, 1034, 1038, 0,
	2196, 2196, 0, 2151, 0, 0, 0, 0, 269, 0,
	272, 0, 0, 0, 277, 278, 279, 280, 281, 271,
	261, 1602, 0, 0, 647, 0, 0, 798, 0, 821,
	830, 832, 835, 873, 875, 892, 919, 920, 1055, 0,
	1055, 0, 0, 940, 1451, 0, 1526, 1457, 1508, 1509,
	0, 1263, 0, 1767, 1810, 0, 0, -2, 0, 0,
	1814, 0, 0, 0, -2, 0, 0, 0, 2044, 2046,
	0, 2100, 1910, 0, 0, 0, 1914, 1898, 1899, 0,
	2018, 2061, 2090, 2094, 0, 1752, 1753, 1754, 1755, 1756,
	1757, 1758, 0, 2140, 2174, 2178, 1991, 1992, 1996, 2154,
	0, 0, 0, 1923, 0, 0, 0, 0, 0, 0,
	0, 0, 1733, 1737, 0, 0, 2062, 2073, 2075, 1852,
	1853, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865,
	1866, -2, -2, -2, 1870, 1871, 1872, -2, -2, -2,
	0, 0, 0, 2076, 2078, 2079, 2083, 2084, 0, 1974,
	1975, 1976, 2085, 0, 1490, 1484, 1545, 0, 1631, 1549,
	0, 1545, 1545, 1497, 1591, 0, 0, 1615, 0, 1563,
	0, 1564, 0, 1596, 0, 1571, 1574, 1575, 1585, 0,
	1577, 0, 1580, 0, 1910, -2, 313, 315, 317, 0,
	320, 321, 0, 0, 600, 601, 599, 583, 0, 0,
	1641, 0, 0, 1717, 1721, 1745, 608, 609, 607, 496,
	505, 226, 0, 1600, 0, 0, 0, 0, 0, 0,
	195, 1075, 1105, 0, 0, 0, 1097, 0, 0, 1111,
	161, 162, 0, 0, 0, 0, 171, 0, 0, 168,
	0, 177, 181, 1062, 0, 0, 0, 0, 1271, 0,
	0, 0, 133, 134, 135, 0, 140, 0, 141, 0,
	0, 0, 0, 0, 0, 0, 0, 1377, 1378, 0,
	1372, 0, 0, 0, 197, 0, 0, 0, 1260, 220,
	0, 0, 0, 0, 0, 1224, 1225, 1284, 1288, 1296,
	0, 0, 0, 238, 236, 0, 239, 0, 242, 243,
	0, 245, 238, 232, 0, 0, 0, 1142, 382, 1001,
	1112, 0, 1114, 0, 999, 0, 0, 1113, 433, 0,
	440, 0, 454, 0, 0, 1163, 0, 0, 1186, 1197,
	1142, 0, 1236, 1238, 0, 1246, 0, 0, 0, 1389,
	1393, 0, 1382, 1383, 1522, 1395, 1413, -2, 0, 0,
	1503, 1421, 1418, 1424, 1425, 0, 309, 0, 304, 306,
	0, 290, 0, 0, 1030, 1035, 0, 0, 0, 0,
	0, 1406, 1408, 0, 0, 0, 0, 0, 0, 260,
	271, 1602, 296, 0, 792, 816, 883, 921, 1054, 0,
	0, 923, 0, 0, 1525, 1512, 1513, 1510, 1263, 1812,
	1816, 0, 0, 0, 1818, -2, 0, 1840, -2, -2,
	2047, 2099, 1889, 1503, 1911, 1913, 1900, 2093, 1762, 0,
	1998, 1995, 0, 1982, 0, 1935, 1936, 0, 0, 1939,
	1941, 1942, 1943, 1701, 1694, 1693, 2072, 0, 0, 0,
	0, 1973, 1485, 0, 1987, 0, 0, 1553, 1987, 1987,
	1592, 0, 1594, 1561, 1554, 0, 2174, 1587, 1579, 0,
	0, 318, 0, 322, 323, 0, 1635, 1640, 0, 1646,
	1716, 227, 155, 156, 1275, 1279, 1276, 0, 158, 0,
	1076, 0, 1079, 0, 0, 0, 0, 1086, 1098, 0,
	0, 0, 0, 0, 1099, 0, 1128, 0, 1251, 1258,
	0, -2, 0, 0, 0, 164, 187, 0, 0, 188,
	1305, 166, 0, 0, 194, 194, 0, 0, 1267, 1269,
	1282, 0, 0, 0, 0, 143, 0, 0, 1285, 1289,
	1297, 1292, 1294, 1300, 0, 1379, 0, 0, 1302, 207,
	208, 0, 194, 0, 194, 200, 194, 1260, 0, 0,
	0, 0, 229, 0, 0, 0, 0, 231, 302, 238,
	370, 0, 1049, 0, 1124, 1116, 1117, 1118, 0, 1123,
	1125, 0, 0, 1015, 1000, 0, 1011, 0, 0, 1028,
	1003, 0, 438, 455, 0, 458, 0, 461, 989, 1160,
	1194, 1142, 0, 1228, 0, 0, 0, 0, 0, 0,
	0, 1391, 1393, 0, 1384, 1385, 1415, 1521, 0, 0,
	0, 1403, 1522, 0, 311, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 273, 0, 274, 275,
	276, 262, 263, 649, 651, 0, 0, 657, 1053, 0,
	0, 0, 0, 1511, 1820, -2, -2, 1841, 0, 2175,
	2177, 1503, 0, 1984, 1505, 0, 0, -2, 0, 0,
	0, 1486, 1469, 0, 1544, 1536, 1538, 1540, 2473, 2267,
	2582, 1470, 1471, 1614, 0, 1582, 319, 602, 0, 1642,
	0, 0, 1277, 160, 0, 1080, 1081, 2150, 1083, 0,
	1085, 1087, 1088, 1089, 0, 1092, 2198, 0, 1096, 0,
	1107, 1129, 0, 1138, 0, 1253, 1263, 1257, 0, 1255,
	1140, 0, 163, 165, 189, 186, 1260, 0, 167, 176,
	0, 0, 115, 0, 0, 2261, 146, 144, 142, 1264,
	117, 0, 209, 219, 1259, 221, 204, 194, 0, 1286,
	1290, 1298, 240, 0, 241, 244, 0, 0, 1064, 0,
	1002, 1115, 0, 1126, 1127, 1005, 0, 1004, 0, 0,
	0, 0, 0, 439, 442, 0, 445, 0, 0, 0,
	0, 0, 1239, 1237, 0, 1245, 0, 0, 0, 1371,
	0, 0, 1386, 1387, 462, 1409, 0, 0, 1415, 1426,
	289, 0, 0, 1036, 1039, 1040, 1041, 1042, 1043, 1044,
	1045, 1046, 1047, 1037, 1140, 0, 0, 1104, 0, 294,
	270, 0, 653, 0, 655, 0, 922, 924, 0, 0,
	1912, 2002, 0, 0, 1937, 1938, -2, 0, 1878, 1986,
	1988, 0, 0, 0, 0, 0, 1555, 1636, 1273, 0,
	1280, 1078, 1082, 0, 0, 0, 1146, 0, 0, 1100,
	0, 1132, 1133, 1049, 0, 1134, 1135, 1136, 1252, 1514,
	1258, 1049, 0, 0, 191, 0, 0, 0, 0, 0,
	0, 0, 198, 222, 1260, 237, 255, 0, 1195, 1003,
	1063, 0, 0, 1013, 0, 1016, 0, 1012, 1009, 1010,
	1001, 0, 443, 444, 459, 0, 460, 0, 1198, 0,
	0, 1246, 0, 0, 1374, 1370, 1393, 1388, 1389, 1633,
	1412, 1416, 0, 0, 1138, 1140, 1060, 0, 652, 0,
	0, 932, 933, 0, 0, 0, 0, 1997, 1506, 1879,
	0, 0, 1539, 1541, 1542, 1543, 1274, 0, 0, 1091,
	1151, 0, 0, 0, 1130, 1131, 1060, 0, 1256, 1254,
	1109, 0, 1142, 169, 0, 1140, 0, 1069, 0, 0,
	1072, 0, 0, 147, 2261, 145, 0, 194, 258, 0,
	252, 250, 251, 1005, 0, 0, 1120, 1122, 0, 1017,
	1049, 1015, 456, 1196, 1229, 1140, 0, 1138, 0, 1381,
	1393, 1375, 1376, 0, 1391, 0, 312, 312, 1049, 1138,
	1003, 1059, 312, 654, 656, 1994, 2014, 2003, -2, 2541,
	2268, 0, 2014, 2014, 1989, 1990, 0, 0, 1093, 1147,
	1148, 0, 1143, 1144, 1145, 2197, 1094, 1095, 1128, 0,
	0, 1146, 190, 1049, 1066, 0, 0, 1067, 0, 0,
	150, 0, 152, 223, 246, 0, 0, 997, 0, 1119,
	0, 0, 0, 0, 1064, 1005, 1138, 0, 1049, 0,
	1367, 1380, 0, 1390, 1371, 0, 291, 292, 1060, 1049,
	1633, 0, 293, 1999, 0, 0, 2005, 2006, 2007, 2008,
	2009, 2000, 2001, 1084, 0, 1149, 0, 1150, 0, 0,
	0, 1633, 1137, 0, 1151, 174, 1070, 0, 1073, 0,
	148, 0, 253, 254, 994, 996, 0, 1121, 1006, 0,
	1008, 1003, 1014, 1049, 0, 1060, 0, 1373, 2159, 1374,
	1410, 0, 1003, 1060, 1103, 0, 2011, 2012, 0, 0,
	0, 1152, 0, 1155, 1156, 0, 1153, 1108, 0, 1128,
	0, 0, 0, 0, 1007, 1005, 1060, 1140, 1003, 1138,
	1381, 0, 1633, 1003, 2010, 2013, 2004, 1090, 1154, 1157,
	1158, 1139, 1110, 0, 0, 256, 0, 1052, 997, 1003,
	1138, 1633, 1049, 1368, 1633, 1101, 1633, 1057, 0, 0,
	1048, 1050, 1051, 995, 1633, 1049, 1242, 1060, 1411, 1102,
	1071, 1056, 0, 257, 1240, 1060, 1003, 0, 1003, 1633,
	0, 1633, 1243, 1057, 1241, 1074,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 572, 3, 578, 573, 3,
	583, 584, 576, 574, 588, 575, 585, 577, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 591, 3,
	564, 566, 565, 569, 587, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 581, 3, 582, 579, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 589, 571, 590, 567,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 568, 57907, 570, 57908, 580, 57909, 586,
	0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1303
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1308
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1310
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1313
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1314
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1315
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1316
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1317
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1318
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1319
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1320
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1321
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1322
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1323
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1330
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1339
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1341
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1344
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1345
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1346
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1347
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1348
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1349
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1350
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1351
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1352
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1411
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1437
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 76:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1451
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 81:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1469
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 82:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1473
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 83:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1477
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 92:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1503
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 93:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1507
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.user()}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1513
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1522
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1531
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1540
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1547
		{

			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1572
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1604
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1608
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 111:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1612
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1618
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1622
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1628
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1637
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1648
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1652
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1658
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1666
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1676
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1680
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1689
		{
		}
	case 125:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1690
		{
		}
	case 126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1694
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1703
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:      tree.TableIndexName{Table: name},
				Rows:              sqlDollar[6].union.slct(),
				RelocateNonVoters: true,
			}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1715
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1720
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateNonVoters: true}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1727
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1739
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1746
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 133:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1754
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1759
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1763
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1768
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1774
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 138:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1782
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1793
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 140:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1803
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 141:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1813
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 142:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1822
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 143:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1833
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 144:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1839
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 145:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1847
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1851
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1855
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 148:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1859
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 149:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1865
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1870
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1881
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1885
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1891
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1895
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 155:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1902
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1907
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1912
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1917
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1922
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1927
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1932
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1937
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1942
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1947
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1952
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1956
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 167:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1961
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1970
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1982
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1992
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1999
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 172:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2002
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2008
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 174:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2015
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2023
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2030
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2039
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2048
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2053
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2060
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2068
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2069
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2073
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2077
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2083
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2091
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2095
		{
			sqlVAL.union.val = nil
		}
	case 188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2101
		{
			sqlVAL.union.val = true
		}
	case 189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2105
		{
			sqlVAL.union.val = false
		}
	case 190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2111
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 191:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2115
		{
			sqlVAL.union.val = nil
		}
	case 192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2122
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2126
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 194:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2130
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2136
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 196:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2140
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 197:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2165
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2176
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2187
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2196
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2206
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2215
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2224
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2233
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 205:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2237
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2240
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2244
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2251
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2258
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2264
		{
			sqlVAL.union.val = []security.SQLUsername{sqlDollar[1].union.user()}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2268
		{
			sqlVAL.union.val = append(sqlDollar[1].union.users(), sqlDollar[3].union.user())
		}
	case 212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2273
		{
			sqlVAL.union.val = sqlDollar[1].union.user()
		}
	case 213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2275
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2280
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2287
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2295
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 224:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2319
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2326
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2330
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2334
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 228:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2338
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 229:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2368
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2380
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2390
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 232:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2401
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2410
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 234:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2414
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2418
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 236:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2426
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 237:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2430
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 238:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2434
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2441
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2445
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2454
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2458
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2462
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2466
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2470
		{
			sqlVAL.union.val = &tree.BackupOptions{IncludeDeprecatedInterleaves: true}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2551
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2562
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 249:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2567
		{
			sqlVAL.union.val = nil
		}
	case 250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2575
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2579
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2589
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2597
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2601
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2605
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 256:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2611
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 257:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2615
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 258:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2619
		{
			sqlVAL.union.val = nil
		}
	case 259:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2650
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 260:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2659
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2669
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2678
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2688
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2695
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2699
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2703
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2709
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2713
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 269:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2720
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 270:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2724
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 271:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2728
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2735
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2739
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2748
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2752
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2756
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2760
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2764
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2768
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2772
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2776
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2782
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2788
		{
			return unimplemented(sqllex, "alter function")
		}
	case 284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2792
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2796
		{
			return unimplemented(sqllex, "alter aggregate")
		}
	case 286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2800
		{
			return unimplemented(sqllex, "alter default privileges")
		}
	case 287:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2838
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2843
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2847
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2853
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2858
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2863
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2868
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2873
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2877
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 296:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2893
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2896
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2900
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2904
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2912
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2916
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2922
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 303:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2926
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2932
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2936
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2940
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2944
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2950
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2954
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2960
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 311:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2964
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 312:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2968
		{
			sqlVAL.union.val = nil
		}
	case 313:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2980
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2994
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3000
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 316:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3004
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3010
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3014
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3022
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3026
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3030
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3034
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3038
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3046
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3047
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3048
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 330:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3049
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3059
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3067
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3069
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3073
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3076
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3086
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 337:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3095
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3103
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3105
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 340:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3109
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3112
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3122
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3131
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3139
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3141
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3145
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3148
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3152
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 349:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3156
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3160
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3173
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 352:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3176
		{
			return unimplemented(sqllex, "comment on extension")
		}
	case 353:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3180
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 354:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3185
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 356:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3197
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3199
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3200
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3203
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3204
		{
		}
	case 367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3205
		{
			return helpWith(sqllex, "CREATE")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3212
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3215
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 370:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3218
		{
			return unimplemented(sqllex, "create extension if not exists with")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3219
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3222
		{
			return unimplemented(sqllex, "create access method")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3223
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3224
		{
			return unimplemented(sqllex, "create cast")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3225
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3226
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3227
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3228
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3229
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3230
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3231
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3232
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3233
		{
			return unimplemented(sqllex, "create operator")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3234
		{
			return unimplemented(sqllex, "create publication")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3235
		{
			return unimplemented(sqllex, "create rule")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3236
		{
			return unimplemented(sqllex, "create server")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3237
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3238
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3239
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3240
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3243
		{
		}
	case 392:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3244
		{
		}
	case 393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3247
		{
		}
	case 394:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3248
		{
		}
	case 395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3251
		{
		}
	case 396:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3252
		{
		}
	case 397:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3255
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3256
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3257
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3258
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3259
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3260
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3261
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 404:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3262
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 405:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3263
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3264
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3265
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3266
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3267
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3268
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3269
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3270
		{
			return unimplemented(sqllex, "drop server")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3271
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3272
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3273
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3276
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3277
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3278
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3279
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3280
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3282
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3283
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3284
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3285
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3295
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3303
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3307
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 436:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3311
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3317
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3321
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3330
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 440:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3337
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 441:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3343
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 442:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3349
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3353
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3364
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3376
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 446:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3391
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 447:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3399
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3409
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3413
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3419
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3423
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3430
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 453:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3434
		{

			sqlVAL.union.val = nil
		}
	case 454:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3451
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3462
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 456:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3466
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 457:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3470
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3477
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3481
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3490
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3494
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3507
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3517
		{
			return helpWith(sqllex, "DELETE")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3520
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 465:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3521
		{
		}
	case 466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3529
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3532
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3533
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3534
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3535
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3536
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3545
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3546
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3547
		{
		}
	case 478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3548
		{
			return helpWith(sqllex, "DROP")
		}
	case 480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3551
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3552
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3553
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3554
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3555
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3556
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3557
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 493:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3565
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 494:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3569
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 495:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3573
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 496:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3582
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 497:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3590
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 498:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3598
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 499:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3602
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 500:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3605
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 501:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3613
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 502:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3617
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3620
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 504:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3628
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 505:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3637
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3645
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3653
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 508:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3661
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3668
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 510:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3675
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 511:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3683
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 512:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3690
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3694
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3700
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3704
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 516:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3713
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 517:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3721
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3728
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3736
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 520:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3740
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3743
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3747
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3752
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3765
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3770
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3772
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3777
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3781
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3804
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3811
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 531:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3813
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3821
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3829
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3837
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3845
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3856
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3860
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3863
		{
			return helpWith(sqllex, "DELETE")
		}
	case 546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3865
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3866
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3867
		{
			return helpWith(sqllex, "INSERT")
		}
	case 554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3870
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3872
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 559:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3875
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3880
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3881
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3882
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3887
		{
			return helpWith(sqllex, "DELETE")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3888
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3889
		{
			return helpWith(sqllex, "INSERT")
		}
	case 574:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3891
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3895
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3896
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3900
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3904
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 582:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3914
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 583:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3922
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3930
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 585:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3934
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 586:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3938
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3948
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 588:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3955
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3963
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3967
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 591:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3971
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3981
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3985
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3989
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3993
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3996
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 597:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4018
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 598:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4022
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 599:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4026
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 600:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4030
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 601:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4034
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 602:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4044
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 603:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4048
		{
			return unimplemented(sqllex, "grant privileges on sequence")
		}
	case 604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4051
		{
			return helpWith(sqllex, "GRANT")
		}
	case 605:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4073
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4077
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 607:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4081
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4085
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 609:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4089
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 610:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4099
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4102
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4107
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4111
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4121
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4125
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4139
		{
			return helpWith(sqllex, "RESET")
		}
	case 623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4140
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4148
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4152
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4155
		{
			return helpWith(sqllex, "RESET")
		}
	case 627:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4163
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4166
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4177
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4180
		{
			return helpWith(sqllex, "USE")
		}
	case 632:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4184
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 633:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4185
		{
		}
	case 634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4186
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4187
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 637:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4191
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4192
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4193
		{
			return helpWith(sqllex, "USE")
		}
	case 644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4209
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 645:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4224
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 646:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4227
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 647:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4245
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 648:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4253
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4257
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 650:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4261
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4267
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4271
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4277
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 654:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4281
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4285
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 656:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4289
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 657:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4293
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4304
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4307
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 662:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4317
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4333
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4337
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 665:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4342
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 666:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4361
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 667:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4364
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 668:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4366
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 669:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4369
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 670:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4373
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 672:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4392
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4399
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4404
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4409
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4414
		{
			return unimplemented(sqllex, "set from current")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4415
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4423
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4428
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4435
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4439
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4445
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4449
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4456
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4477
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4481
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4487
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4491
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4495
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4499
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4503
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4509
		{
			sqlVAL.union.val = tree.Low
		}
	case 697:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4513
		{
			sqlVAL.union.val = tree.Normal
		}
	case 698:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4517
		{
			sqlVAL.union.val = tree.High
		}
	case 699:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4528
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 700:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4532
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 701:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4536
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 703:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4541
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4545
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4560
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4561
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4562
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4563
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4564
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4565
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4566
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4567
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4569
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4570
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4571
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4572
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4573
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4575
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4576
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4577
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4579
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4581
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4582
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4583
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4584
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4585
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4586
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4587
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4588
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4589
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4590
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4591
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4592
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4593
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4594
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4595
		{
			return helpWith(sqllex, "SHOW")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4601
		{
		}
	case 774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4602
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4605
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4609
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4614
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4619
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4624
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4629
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4639
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4640
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4641
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4652
		{
			sqlVAL.str = "client_encoding"
		}
	case 789:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4655
		{
			sqlVAL.str = "timezone"
		}
	case 790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4656
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 791:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4670
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 792:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4674
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4678
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4689
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4697
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4705
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4711
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4719
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4728
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 800:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4737
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4746
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4754
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4764
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4768
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4771
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 806:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4773
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4776
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4778
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4782
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4785
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4793
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4796
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 813:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4804
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4808
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4812
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4816
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4819
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4827
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4830
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 820:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4837
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4841
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4851
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4860
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4867
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4870
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 826:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4883
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4891
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 828:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4899
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4902
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 830:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4904
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4908
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4912
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4915
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4917
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4921
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4924
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 837:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4932
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4935
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 839:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4937
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4940
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4948
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4951
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 843:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4953
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4956
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 845:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4960
		{
			sqlVAL.union.val = true
		}
	case 846:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4962
		{
			sqlVAL.union.val = true
		}
	case 847:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4964
		{
			sqlVAL.union.val = false
		}
	case 850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4981
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4985
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4988
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4989
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4991
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4995
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4999
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5002
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5004
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5012
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5020
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5030
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5036
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5038
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5044
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5046
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5052
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 867:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5056
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 868:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5060
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 869:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5066
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 870:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5070
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 871:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5081
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5084
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 873:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5086
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5089
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 875:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5091
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5095
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 877:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5098
		{
			sqlVAL.union.val = true
		}
	case 878:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5099
		{
			sqlVAL.union.val = false
		}
	case 879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5107
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5110
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 881:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5112
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5115
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 883:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5123
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5133
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5143
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5146
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5153
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5156
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 889:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5158
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5161
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 891:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5164
		{
			sqlVAL.union.val = true
		}
	case 892:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5165
		{
			sqlVAL.union.val = false
		}
	case 893:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5172
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5176
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5179
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 896:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5186
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5190
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5193
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5200
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5204
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 901:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5208
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5218
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5221
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 904:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5229
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5234
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5239
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5243
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5253
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5257
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5262
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5265
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 915:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5278
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5281
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 917:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5289
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5292
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 919:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5302
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5306
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5310
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5318
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5326
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5333
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5339
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5341
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5344
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 928:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5346
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5349
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 931:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5353
		{
		}
	case 932:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5362
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5370
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5376
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 935:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5385
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5390
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5394
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5397
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 939:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5406
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5410
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5426
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5432
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5438
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5444
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5451
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5456
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 947:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5460
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5466
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5473
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 950:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5478
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 951:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5598
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5602
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5606
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5645
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5649
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5654
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5658
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5666
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5675
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5679
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5683
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5690
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 964:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5694
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 966:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5707
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 968:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5708
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 969:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5709
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 971:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5719
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 973:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5720
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 974:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5721
		{
			return helpWith(sqllex, "RESUME")
		}
	case 975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5731
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5739
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5741
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5745
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5748
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5753
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5757
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5772
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5780
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5782
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5788
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5796
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5802
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5809
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.user(),
			}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5816
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.user(),
			}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5823
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 991:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5834
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5843
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5851
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 994:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5890
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Interleave:       sqlDollar[9].union.interleave(),
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[10].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[11].union.storageParams(),
				OnCommit:         sqlDollar[12].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[13].union.locality(),
			}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:5906
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Interleave:       sqlDollar[12].union.interleave(),
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[13].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				OnCommit:         sqlDollar[15].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[16].union.locality(),
			}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5924
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 997:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5928
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 999:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5935
		{

			sqlVAL.union.val = nil
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5941
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5947
		{
			sqlVAL.str = ""
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5951
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5957
		{
			sqlVAL.union.val = nil
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5961
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5966
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5970
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5974
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5978
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5984
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5988
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5994
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5998
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6004
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6018
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6033
		{
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6034
		{
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6035
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6053
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6054
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6055
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6059
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6060
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6061
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6062
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6063
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6068
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6074
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6078
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6084
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6090
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6103
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6112
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6116
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6122
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6127
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6128
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6129
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6130
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6131
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6132
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6133
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6134
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6135
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6140
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6149
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6156
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6161
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6166
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6172
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6179
		{
			sqlVAL.str = ""
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6186
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6192
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6200
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6206
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6212
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6218
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6228
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6234
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6240
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6247
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6254
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6260
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6264
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6270
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6280
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6284
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6290
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6304
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6315
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6319
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6325
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6329
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6333
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6337
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6341
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6345
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6349
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6367
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6371
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6375
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6379
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6385
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6389
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6396
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6400
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6404
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6414
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6418
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6422
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6429
		{

			sqlVAL.union.val = true
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6434
		{
			sqlVAL.union.val = false
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6440
		{
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6441
		{
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6446
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				Interleave:       sqlDollar[8].union.interleave(),
				PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				Predicate:        sqlDollar[11].union.expr(),
			}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6459
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					Interleave:       sqlDollar[9].union.interleave(),
					PartitionByIndex: sqlDollar[10].union.partitionByIndex(),
					StorageParams:    sqlDollar[11].union.storageParams(),
					Predicate:        sqlDollar[12].union.expr(),
				},
			}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6474
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6487
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6499
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6504
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6510
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6517
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					Interleave:       sqlDollar[7].union.interleave(),
					PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
					Predicate:        sqlDollar[10].union.expr(),
				},
			}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6530
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6542
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6553
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6560
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6564
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6570
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6580
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6591
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6595
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6602
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6608
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6619
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6623
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6629
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6635
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6639
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6645
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6649
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6655
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6660
		{
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6661
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6662
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6663
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6664
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6665
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6683
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6687
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6693
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6699
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6705
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6709
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6729
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6733
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6737
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6741
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6750
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6754
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6758
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6762
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6766
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6772
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6778
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6786
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6790
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6794
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6798
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6802
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6821
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6830
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6838
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6842
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6845
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6846
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6849
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6850
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6852
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6853
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6854
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6864
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6867
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6869
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6871
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6873
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6874
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6876
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6877
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6879
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6881
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6889
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6892
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6896
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6900
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6910
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6914
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6917
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6925
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6929
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6932
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6938
		{
			sqlVAL.union.val = true
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6942
		{

			sqlVAL.union.val = true
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6947
		{
			sqlVAL.union.val = false
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6957
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6971
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6983
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6995
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7005
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7015
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7019
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7023
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7027
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7031
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7035
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7039
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7043
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7047
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7051
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7055
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7059
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7063
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7067
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7071
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7075
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7079
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7083
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7087
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7096
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7100
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7106
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7110
		{
			sqlVAL.union.val = nil
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7116
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7120
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7125
		{
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7126
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7135
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7143
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7151
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7153
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7155
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7157
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7159
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7161
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7165
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7169
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7175
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7179
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:7199
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				Interleave:       sqlDollar[14].union.interleave(),
				PartitionByIndex: sqlDollar[15].union.partitionByIndex(),
				StorageParams:    sqlDollar[16].union.storageParams(),
				Predicate:        sqlDollar[17].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:7217
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				Interleave:       sqlDollar[17].union.interleave(),
				PartitionByIndex: sqlDollar[18].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[19].union.storageParams(),
				Predicate:        sqlDollar[20].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7236
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				Interleave:       sqlDollar[13].union.interleave(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7253
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				Interleave:       sqlDollar[16].union.interleave(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7270
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7274
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7289
		{
			sqlVAL.union.val = false
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7295
		{
			sqlVAL.union.val = true
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7299
		{
			sqlVAL.union.val = false
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7305
		{
			sqlVAL.union.val = true
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7309
		{
			sqlVAL.union.val = false
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7315
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7319
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7328
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7334
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7340
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7348
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7372
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7373
		{
			sqlVAL.str = ""
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7376
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7377
		{
			sqlVAL.str = ""
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7381
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7385
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7389
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7395
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7401
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7407
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7413
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7421
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7427
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7435
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7443
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7453
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7459
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7466
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7472
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7478
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7485
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7491
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7497
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7503
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7512
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
			}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7520
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
			}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7530
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7536
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7546
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7552
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7564
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7573
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.user(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7583
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7592
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.user(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7604
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7610
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7618
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.user(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7627
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.user(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7638
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7644
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7656
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7662
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7676
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7682
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7690
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7694
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7699
		{
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7700
		{
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7703
		{
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7704
		{
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7712
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7715
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7725
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7733
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7735
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7739
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7742
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7755
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7763
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7765
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7771
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7784
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7792
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7794
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7800
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7808
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7811
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7815
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7816
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7817
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7833
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7836
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7838
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7841
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7851
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7854
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7856
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7859
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7863
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7868
		{
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7869
		{
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7870
		{
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7880
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7884
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7887
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7890
		{
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7891
		{
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7895
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7899
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7905
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7909
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7915
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7919
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7932
		{
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7934
		{
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7938
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7943
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7947
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7951
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7955
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7961
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7967
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7973
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7977
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7983
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7987
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:7997
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
			}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:8011
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
			}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8025
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8030
		{
			sqlVAL.str = ""
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8035
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8041
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8045
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8051
		{

		}
	case 1377:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8058
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8062
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8066
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8075
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8081
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8085
		{
			sqlVAL.str = ""
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8091
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8095
		{
			sqlVAL.str = ""
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8101
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8105
		{
			sqlVAL.str = ""
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8111
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8115
		{
			sqlVAL.str = ""
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8121
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8129
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8134
		{
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8135
		{
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8150
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8157
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8164
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8175
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8182
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8186
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8195
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8200
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8206
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8210
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8214
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8220
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8224
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8244
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8248
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8255
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8263
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8271
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8275
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8280
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8284
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8301
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8313
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8316
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8319
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8325
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8329
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8342
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8345
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8349
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8360
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.users(),
				NewRole:  sqlDollar[6].union.user(),
			}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8366
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8375
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.users(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8381
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8422
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8428
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8432
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8447
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8451
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8455
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8459
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8463
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8467
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8471
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8475
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8480
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8481
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8484
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8485
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8489
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8493
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8499
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8508
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8509
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8510
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8511
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8514
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8515
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8518
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8519
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8520
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8525
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8560
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8561
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8562
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8584
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8597
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8611
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8623
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8627
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8636
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8645
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8660
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8667
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8679
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8683
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8688
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8694
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8698
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8704
		{
			sqlVAL.union.val = true
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8708
		{
			sqlVAL.union.val = false
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8714
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8724
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8736
		{
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8737
		{
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8741
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8745
		{
			sqlVAL.union.val = nil
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8750
		{
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8751
		{
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8755
		{
			sqlVAL.union.val = true
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8759
		{
			sqlVAL.union.val = false
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8763
		{
			sqlVAL.union.val = false
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8769
		{
			sqlVAL.union.val = true
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8775
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8780
		{
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8781
		{
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8784
		{
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8785
		{
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8789
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8793
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8799
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8805
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8809
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8816
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8820
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8826
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8847
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8852
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8864
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8868
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8872
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8881
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8890
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8901
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8902
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8906
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8910
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8914
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8928
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8932
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8940
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8947
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8969
		{
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8970
		{
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8973
		{
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8974
		{
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8991
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8995
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9000
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9001
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9007
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9008
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9009
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9010
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9014
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9018
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9037
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9040
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9042
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9054
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9057
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9059
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9065
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9069
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9075
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9079
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9084
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9089
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9095
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9100
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9107
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9112
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9123
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9127
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9131
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9139
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9170
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9180
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9190
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9198
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9207
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9211
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9215
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9226
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9250
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9256
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9267
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9271
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9277
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9279
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9283
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9289
		{
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9291
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9294
		{
			sqlVAL.union.val = nil
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9295
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9296
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9300
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9304
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9310
		{
			sqlVAL.union.val = true
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9314
		{
			sqlVAL.union.val = false
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9334
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9338
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9342
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9346
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9350
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9354
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9360
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9364
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9371
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9377
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9384
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9390
		{
			sqlVAL.str = tree.AstFull
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9394
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9398
		{
			sqlVAL.str = tree.AstRight
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9402
		{
			sqlVAL.str = tree.AstInner
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9408
		{
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9409
		{
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9433
		{
			sqlVAL.str = tree.AstHash
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9437
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9441
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9445
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9449
		{
			sqlVAL.str = ""
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9462
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9466
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9471
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9472
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9473
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9474
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9478
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9483
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9497
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9501
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9507
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9513
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9523
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9533
		{
			sqlVAL.union.val = true
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9537
		{
			sqlVAL.union.val = false
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9543
		{
			sqlVAL.union.val = true
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9547
		{
			sqlVAL.union.val = false
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9553
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9560
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9572
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9585
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9593
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9594
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9604
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9611
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9612
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9614
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9622
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9623
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9635
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9642
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9651
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9691
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9696
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9703
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9704
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9707
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9708
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9709
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9710
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9711
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9712
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9713
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9714
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9715
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9716
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9717
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9718
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9719
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9720
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9721
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9722
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9723
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9724
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9725
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9726
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9727
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9728
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9729
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9730
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9731
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9732
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9733
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9734
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9735
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9736
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9737
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9738
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9741
		{
			sqlVAL.union.val = types.Geography
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9742
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9743
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9745
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9749
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9753
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9761
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9787
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9795
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9803
		{
			sqlVAL.union.val = nil
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9810
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9814
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9818
		{
			sqlVAL.union.val = types.Int2
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9822
		{
			sqlVAL.union.val = types.Int
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9826
		{
			sqlVAL.union.val = types.Float4
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9830
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9834
		{
			sqlVAL.union.val = types.Float
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9838
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9846
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9854
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9862
		{
			sqlVAL.union.val = types.Bool
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9868
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9881
		{
			sqlVAL.union.val = types.Float
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9887
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9893
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9901
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9905
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9909
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9915
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9927
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9933
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9937
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9941
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9945
		{
			sqlVAL.union.val = types.String
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9954
		{
			sqlVAL.union.val = true
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9955
		{
			sqlVAL.union.val = false
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9960
		{
			sqlVAL.union.val = types.Date
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9964
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9972
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9984
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9986
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9995
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10003
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10016
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10020
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10030
		{
			sqlVAL.union.val = true
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10031
		{
			sqlVAL.union.val = false
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10032
		{
			sqlVAL.union.val = false
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10036
		{
			sqlVAL.union.val = types.Interval
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10040
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10044
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10055
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10063
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10071
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10079
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10087
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10095
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10101
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10110
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10119
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10128
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10134
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10143
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10149
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10159
		{
			sqlVAL.union.val = nil
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10165
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10173
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10210
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10214
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10218
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10222
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10233
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10238
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10242
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10246
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10250
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10254
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10258
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10262
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10266
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10270
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10274
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10278
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10282
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10286
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10290
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10294
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10298
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10302
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10306
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10310
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10314
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10318
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10322
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10326
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10330
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10334
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10338
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10342
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10346
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10350
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10354
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10358
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10362
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10366
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10370
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10374
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10378
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10382
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10386
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10390
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10394
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10398
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10402
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10406
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10410
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10414
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10418
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10422
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10426
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10430
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10434
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10438
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10442
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10446
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10450
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10454
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10458
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10462
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10466
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10470
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10474
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10478
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10482
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10485
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10487
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10491
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10495
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10499
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10503
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10507
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10511
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10515
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10519
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10523
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10527
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10531
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10535
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10539
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10543
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10547
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10551
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10568
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10573
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10585
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10589
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10593
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10597
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10601
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10605
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10609
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10613
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10617
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10621
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10625
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10629
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10633
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10637
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10641
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10645
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10649
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10653
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10657
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10661
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10665
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10669
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10673
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10677
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10681
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10685
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10689
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10693
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10707
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10715
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10751
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10755
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10759
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10763
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10767
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10772
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10774
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10778
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10782
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10786
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10790
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10794
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10798
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10807
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10814
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10818
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10822
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10828
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10833
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10837
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10841
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10845
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10849
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10852
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10856
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10860
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10863
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10864
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10866
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10872
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10876
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10879
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10888
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10941
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10954
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10966
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10975
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10976
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10981
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10985
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10989
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10995
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10999
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11003
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11007
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11011
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11015
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11021
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11025
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11029
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11033
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11037
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11041
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11045
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11049
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11053
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11057
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11061
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11065
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11069
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11076
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11079
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11081
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11084
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11086
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11090
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11093
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11095
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11099
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11102
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11104
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11108
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11111
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11113
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11117
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11120
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11122
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11125
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11127
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11130
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11132
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11135
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11137
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11140
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11142
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11146
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11149
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11150
		{
			return unimplemented(sqllex, "treat")
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11152
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11156
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11160
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11164
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11168
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11171
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11173
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11176
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11182
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11186
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11192
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11196
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11203
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11207
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11213
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11217
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11223
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11231
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11235
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11239
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11246
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11266
		{
			sqlVAL.str = ""
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11272
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11276
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11282
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11290
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11298
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11306
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11312
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11325
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11353
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11357
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11361
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11365
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11372
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11381
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11385
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11389
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11393
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11398
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11411
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11415
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11422
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11434
		{
			sqlVAL.union.val = tree.Any
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11438
		{
			sqlVAL.union.val = tree.Some
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11442
		{
			sqlVAL.union.val = tree.All
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11447
		{
			sqlVAL.union.val = tree.Plus
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11448
		{
			sqlVAL.union.val = tree.Minus
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11449
		{
			sqlVAL.union.val = tree.Mult
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11450
		{
			sqlVAL.union.val = tree.Div
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11451
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11452
		{
			sqlVAL.union.val = tree.Mod
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11453
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11454
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11455
		{
			sqlVAL.union.val = tree.Pow
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11456
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11457
		{
			sqlVAL.union.val = tree.LT
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11458
		{
			sqlVAL.union.val = tree.GT
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11459
		{
			sqlVAL.union.val = tree.EQ
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11460
		{
			sqlVAL.union.val = tree.LE
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11461
		{
			sqlVAL.union.val = tree.GE
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11462
		{
			sqlVAL.union.val = tree.NE
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11466
		{
			sqlVAL.union.val = tree.Like
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11467
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11468
		{
			sqlVAL.union.val = tree.ILike
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11469
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11492
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11496
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11502
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11506
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11510
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11521
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11525
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11531
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11535
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11542
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11548
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11552
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11558
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11562
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11568
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11572
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11578
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11582
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11588
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11592
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11615
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11619
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11623
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11629
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11636
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11640
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11657
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11661
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11665
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11669
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11673
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11679
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11685
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11691
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11695
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11699
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11705
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11717
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11724
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11728
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11734
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11740
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11744
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11751
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11757
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11761
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11768
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11774
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11778
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11783
		{
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11784
		{
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11788
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11792
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11798
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11807
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11811
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11815
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11823
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11827
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11833
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11837
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11856
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11864
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11887
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11896
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11900
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11904
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11908
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11914
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11918
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11933
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11937
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11949
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11953
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11962
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11973
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11982
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11990
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12002
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12083
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12091
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12095
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12101
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12105
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12113
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12138
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12145
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12149
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12153
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12167
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12171
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12175
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12188
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12197
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12215
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12228
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12235
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12260
		{
			sqlVAL.str = ""
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12266
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12270
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
