// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"math"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/security/username"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/pgwire/pgcode"
	"github.com/cockroachdb/cockroach/pkg/sql/pgwire/pgerror"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treebin"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treecmp"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treewindow"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case treebin.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case treecmp.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: treecmp.ComparisonOperator{
					Symbol:             treecmp.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case treebin.BinaryOperator:

		switch op.Symbol {
		case treebin.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case treebin.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case treecmp.ComparisonOperator:
		switch op.Symbol {
		case treecmp.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:170

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() username.SQLUsername {
	return u.val.(username.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *username.SQLUsername {
	return u.val.(*username.SQLUsername)
}
func (u *sqlSymUnion) users() []username.SQLUsername {
	return u.val.([]username.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colTableDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) colDef() tree.ColumnDef {
	return u.val.(tree.ColumnDef)
}
func (u *sqlSymUnion) colDefList() tree.ColumnDefList {
	return u.val.(tree.ColumnDefList)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) storageParamKeys() []tree.Name {
	if params, ok := u.val.([]tree.Name); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) backupTargetList() tree.BackupTargetList {
	return u.val.(tree.BackupTargetList)
}
func (u *sqlSymUnion) backupTargetListPtr() *tree.BackupTargetList {
	return u.val.(*tree.BackupTargetList)
}
func (u *sqlSymUnion) grantTargetList() tree.GrantTargetList {
	return u.val.(tree.GrantTargetList)
}
func (u *sqlSymUnion) grantTargetListPtr() *tree.GrantTargetList {
	return u.val.(*tree.GrantTargetList)
}
func (u *sqlSymUnion) changefeedTargets() tree.ChangefeedTargets {
	return u.val.(tree.ChangefeedTargets)
}
func (u *sqlSymUnion) changefeedTarget() tree.ChangefeedTarget {
	return u.val.(tree.ChangefeedTarget)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() treewindow.WindowFrameExclusion {
	return u.val.(treewindow.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterChangefeedCmd() tree.AlterChangefeedCmd {
	return u.val.(tree.AlterChangefeedCmd)
}
func (u *sqlSymUnion) alterChangefeedCmds() tree.AlterChangefeedCmds {
	return u.val.(tree.AlterChangefeedCmds)
}
func (u *sqlSymUnion) backupKMS() tree.BackupKMS {
	return u.val.(tree.BackupKMS)
}
func (u *sqlSymUnion) alterBackupCmd() tree.AlterBackupCmd {
	return u.val.(tree.AlterBackupCmd)
}
func (u *sqlSymUnion) alterBackupCmds() tree.AlterBackupCmds {
	return u.val.(tree.AlterBackupCmds)
}
func (u *sqlSymUnion) alterBackupScheduleCmd() tree.AlterBackupScheduleCmd {
	return u.val.(tree.AlterBackupScheduleCmd)
}
func (u *sqlSymUnion) alterBackupScheduleCmds() tree.AlterBackupScheduleCmds {
	return u.val.(tree.AlterBackupScheduleCmds)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) relocateSubject() tree.RelocateSubject {
	return u.val.(tree.RelocateSubject)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() treecmp.ComparisonOperator {
	return u.val.(treecmp.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) showBackupDetails() tree.ShowBackupDetails {
	return u.val.(tree.ShowBackupDetails)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) scheduleLabelSpec() *tree.LabelSpec {
	return u.val.(*tree.LabelSpec)
}
func (u *sqlSymUnion) labelSpec() *tree.LabelSpec {
	return u.val.(*tree.LabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) targetObjectType() privilege.TargetObjectType {
	return u.val.(privilege.TargetObjectType)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}
func (u *sqlSymUnion) cursorSensitivity() tree.CursorSensitivity {
	return u.val.(tree.CursorSensitivity)
}
func (u *sqlSymUnion) cursorScrollOption() tree.CursorScrollOption {
	return u.val.(tree.CursorScrollOption)
}
func (u *sqlSymUnion) cursorStmt() tree.CursorStmt {
	return u.val.(tree.CursorStmt)
}
func (u *sqlSymUnion) asTenantClause() tree.TenantID {
	return u.val.(tree.TenantID)
}
func (u *sqlSymUnion) functionOptions() tree.FunctionOptions {
	return u.val.(tree.FunctionOptions)
}
func (u *sqlSymUnion) functionOption() tree.FunctionOption {
	return u.val.(tree.FunctionOption)
}
func (u *sqlSymUnion) functionArgs() tree.FuncArgs {
	return u.val.(tree.FuncArgs)
}
func (u *sqlSymUnion) functionArg() tree.FuncArg {
	return u.val.(tree.FuncArg)
}
func (u *sqlSymUnion) functionArgClass() tree.FuncArgClass {
	return u.val.(tree.FuncArgClass)
}
func (u *sqlSymUnion) stmts() tree.Statements {
	return u.val.(tree.Statements)
}
func (u *sqlSymUnion) routineBody() *tree.RoutineBody {
	return u.val.(*tree.RoutineBody)
}
func (u *sqlSymUnion) functionObj() tree.FuncObj {
	return u.val.(tree.FuncObj)
}
func (u *sqlSymUnion) functionObjs() tree.FuncObjs {
	return u.val.(tree.FuncObjs)
}

//line sql-gen.y:979
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ABSOLUTE = lexbase.ABSOLUTE
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASENSITIVE = lexbase.ASENSITIVE
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATOMIC = lexbase.ATOMIC
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BACKWARD = lexbase.BACKWARD
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CALLED = lexbase.CALLED
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const COMPLETIONS = lexbase.COMPLETIONS
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONNECTIONS = lexbase.CONNECTIONS
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COST = lexbase.COST
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEFINER = lexbase.DEFINER
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DEPENDS = lexbase.DEPENDS
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTED = lexbase.ENCRYPTED
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTERNAL = lexbase.EXTERNAL
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FORWARD = lexbase.FORWARD
const FREEZE = lexbase.FREEZE
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HEADER = lexbase.HEADER
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOLD = lexbase.HOLD
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMMUTABLE = lexbase.IMMUTABLE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INCREMENTAL_LOCATION = lexbase.INCREMENTAL_LOCATION
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INOUT = lexbase.INOUT
const INPUT = lexbase.INPUT
const INSENSITIVE = lexbase.INSENSITIVE
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const INVOKER = lexbase.INVOKER
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LABEL = lexbase.LABEL
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEAKPROOF = lexbase.LEAKPROOF
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MOVE = lexbase.MOVE
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEW_KMS = lexbase.NEW_KMS
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NOSQLLOGIN = lexbase.NOSQLLOGIN
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NONVOTERS = lexbase.NONVOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOVIEWACTIVITYREDACTED = lexbase.NOVIEWACTIVITYREDACTED
const NOVIEWCLUSTERSETTING = lexbase.NOVIEWCLUSTERSETTING
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const OLD_KMS = lexbase.OLD_KMS
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARALLEL = lexbase.PARALLEL
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIOR = lexbase.PRIOR
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const QUOTE = lexbase.QUOTE
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const RELATIVE = lexbase.RELATIVE
const RELOCATE = lexbase.RELOCATE
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTART = lexbase.RESTART
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETURN = lexbase.RETURN
const RETURNS = lexbase.RETURNS
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCROLL = lexbase.SCROLL
const SCHEMA = lexbase.SCHEMA
const SCHEMA_ONLY = lexbase.SCHEMA_ONLY
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SECONDARY = lexbase.SECONDARY
const SECURITY = lexbase.SECURITY
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETOF = lexbase.SETOF
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const SQLLOGIN = lexbase.SQLLOGIN
const STABLE = lexbase.STABLE
const START = lexbase.START
const STATE = lexbase.STATE
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SUPER = lexbase.SUPER
const SUPPORT = lexbase.SUPPORT
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TENANTS = lexbase.TENANTS
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TRANSFER = lexbase.TRANSFER
const TRANSFORM = lexbase.TRANSFORM
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLISTEN = lexbase.UNLISTEN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNSET = lexbase.UNSET
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VERIFY_BACKUP_TABLE_DATA = lexbase.VERIFY_BACKUP_TABLE_DATA
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIEWACTIVITYREDACTED = lexbase.VIEWACTIVITYREDACTED
const VIEWDEBUG = lexbase.VIEWDEBUG
const VIEWCLUSTERMETADATA = lexbase.VIEWCLUSTERMETADATA
const VIEWCLUSTERSETTING = lexbase.VIEWCLUSTERSETTING
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const INVISIBLE = lexbase.INVISIBLE
const VOLATILE = lexbase.VOLATILE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const TENANT_ALL = lexbase.TENANT_ALL
const SET_TRACING = lexbase.SET_TRACING
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const INTERVAL_SIMPLE = lexbase.INTERVAL_SIMPLE
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ABSOLUTE",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASENSITIVE",
	"ASYMMETRIC",
	"AT",
	"ATOMIC",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BACKWARD",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CALLED",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"COMPLETIONS",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONNECTIONS",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COST",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEFINER",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DEPENDS",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPERIMENTAL_RELOCATE",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTERNAL",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FORWARD",
	"FREEZE",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HEADER",
	"HIGH",
	"HISTOGRAM",
	"HOLD",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMMUTABLE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INCREMENTAL_LOCATION",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INITIALLY",
	"INNER",
	"INOUT",
	"INPUT",
	"INSENSITIVE",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"INVOKER",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LABEL",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEAKPROOF",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MOVE",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEW_KMS",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NOSQLLOGIN",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NONVOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOVIEWACTIVITYREDACTED",
	"NOVIEWCLUSTERSETTING",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"OLD_KMS",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARALLEL",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIOR",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"QUOTE",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"RELATIVE",
	"RELOCATE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTART",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETURN",
	"RETURNS",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCROLL",
	"SCHEMA",
	"SCHEMA_ONLY",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SECONDARY",
	"SECURITY",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETOF",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"SQLLOGIN",
	"STABLE",
	"START",
	"STATE",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SUPER",
	"SUPPORT",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TENANTS",
	"TESTING_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TRANSFER",
	"TRANSFORM",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLISTEN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNSET",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VERIFY_BACKUP_TABLE_DATA",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIEWACTIVITYREDACTED",
	"VIEWDEBUG",
	"VIEWCLUSTERMETADATA",
	"VIEWCLUSTERSETTING",
	"VIRTUAL",
	"VISIBLE",
	"INVISIBLE",
	"VOLATILE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"TENANT_ALL",
	"SET_TRACING",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"INTERVAL_SIMPLE",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"';'",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:15875

//line yacctab:1
var sqlExca = [...]int16{
	-1, 0,
	1, 5,
	-2, 1921,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 64,
	284, 583,
	-2, 0,
	-1, 76,
	8, 1056,
	29, 1056,
	652, 1056,
	653, 1056,
	-2, 0,
	-1, 77,
	8, 1056,
	29, 1056,
	652, 1056,
	653, 1056,
	-2, 0,
	-1, 80,
	1, 1768,
	140, 1768,
	271, 1768,
	359, 1768,
	422, 1768,
	432, 1768,
	633, 1768,
	665, 1768,
	-2, 0,
	-1, 81,
	1, 1768,
	665, 1768,
	-2, 0,
	-1, 87,
	264, 296,
	566, 296,
	-2, 0,
	-1, 101,
	205, 483,
	250, 1641,
	266, 1641,
	284, 483,
	424, 483,
	436, 1384,
	480, 483,
	497, 1384,
	550, 1384,
	579, 483,
	608, 1384,
	-2, 0,
	-1, 108,
	142, 1921,
	259, 1921,
	591, 1921,
	592, 1921,
	-2, 0,
	-1, 126,
	162, 1892,
	183, 1892,
	196, 1892,
	262, 1892,
	298, 1892,
	372, 1892,
	383, 1892,
	585, 1892,
	-2, 1863,
	-1, 170,
	170, 1194,
	282, 1194,
	427, 1155,
	502, 1155,
	549, 1155,
	569, 1194,
	571, 1155,
	-2, 0,
	-1, 175,
	4, 1923,
	21, 1923,
	22, 1923,
	23, 1923,
	24, 1923,
	25, 1923,
	26, 1923,
	27, 1923,
	28, 1923,
	30, 1923,
	31, 1923,
	37, 1923,
	41, 1923,
	43, 1923,
	44, 1923,
	45, 1923,
	47, 1923,
	48, 1923,
	49, 1923,
	50, 1923,
	51, 1923,
	52, 1923,
	53, 1923,
	54, 1923,
	55, 1923,
	57, 1923,
	58, 1923,
	59, 1923,
	60, 1923,
	62, 1923,
	63, 1923,
	64, 1923,
	65, 1923,
	66, 1923,
	67, 1923,
	68, 1923,
	69, 1923,
	73, 1923,
	74, 1923,
	75, 1923,
	76, 1923,
	78, 1923,
	79, 1923,
	80, 1923,
	84, 1923,
	85, 1923,
	86, 1923,
	87, 1923,
	88, 1923,
	89, 1923,
	90, 1923,
	91, 1923,
	94, 1923,
	95, 1923,
	96, 1923,
	97, 1923,
	98, 1923,
	99, 1923,
	101, 1923,
	103, 1923,
	104, 1923,
	105, 1923,
	106, 1923,
	107, 1923,
	108, 1923,
	109, 1923,
	111, 1923,
	112, 1923,
	113, 1923,
	115, 1923,
	116, 1923,
	117, 1923,
	125, 1923,
	126, 1923,
	127, 1923,
	128, 1923,
	129, 1923,
	131, 1923,
	132, 1923,
	133, 1923,
	134, 1923,
	136, 1923,
	137, 1923,
	138, 1923,
	139, 1923,
	141, 1923,
	142, 1923,
	143, 1923,
	144, 1923,
	146, 1923,
	147, 1923,
	148, 1923,
	151, 1923,
	152, 1923,
	153, 1923,
	155, 1923,
	156, 1923,
	157, 1923,
	159, 1923,
	160, 1923,
	161, 1923,
	163, 1923,
	164, 1923,
	165, 1923,
	166, 1923,
	167, 1923,
	168, 1923,
	169, 1923,
	170, 1923,
	171, 1923,
	172, 1923,
	173, 1923,
	174, 1923,
	175, 1923,
	176, 1923,
	177, 1923,
	178, 1923,
	179, 1923,
	180, 1923,
	182, 1923,
	188, 1923,
	189, 1923,
	190, 1923,
	191, 1923,
	195, 1923,
	197, 1923,
	198, 1923,
	199, 1923,
	201, 1923,
	202, 1923,
	205, 1923,
	206, 1923,
	207, 1923,
	208, 1923,
	209, 1923,
	210, 1923,
	211, 1923,
	212, 1923,
	213, 1923,
	214, 1923,
	215, 1923,
	216, 1923,
	217, 1923,
	218, 1923,
	220, 1923,
	221, 1923,
	223, 1923,
	224, 1923,
	226, 1923,
	227, 1923,
	228, 1923,
	229, 1923,
	230, 1923,
	231, 1923,
	232, 1923,
	233, 1923,
	234, 1923,
	235, 1923,
	236, 1923,
	238, 1923,
	239, 1923,
	240, 1923,
	242, 1923,
	243, 1923,
	244, 1923,
	245, 1923,
	246, 1923,
	250, 1923,
	251, 1923,
	252, 1923,
	253, 1923,
	256, 1923,
	257, 1923,
	258, 1923,
	259, 1923,
	260, 1923,
	261, 1923,
	263, 1923,
	265, 1923,
	266, 1923,
	267, 1923,
	269, 1923,
	271, 1923,
	272, 1923,
	273, 1923,
	275, 1923,
	279, 1923,
	280, 1923,
	281, 1923,
	282, 1923,
	283, 1923,
	284, 1923,
	285, 1923,
	287, 1923,
	288, 1923,
	289, 1923,
	291, 1923,
	292, 1923,
	293, 1923,
	295, 1923,
	296, 1923,
	299, 1923,
	300, 1923,
	301, 1923,
	302, 1923,
	303, 1923,
	304, 1923,
	305, 1923,
	308, 1923,
	309, 1923,
	310, 1923,
	311, 1923,
	313, 1923,
	314, 1923,
	315, 1923,
	316, 1923,
	317, 1923,
	318, 1923,
	319, 1923,
	320, 1923,
	321, 1923,
	322, 1923,
	323, 1923,
	324, 1923,
	325, 1923,
	326, 1923,
	327, 1923,
	328, 1923,
	329, 1923,
	330, 1923,
	331, 1923,
	332, 1923,
	333, 1923,
	334, 1923,
	335, 1923,
	337, 1923,
	339, 1923,
	340, 1923,
	341, 1923,
	342, 1923,
	343, 1923,
	344, 1923,
	345, 1923,
	346, 1923,
	347, 1923,
	348, 1923,
	349, 1923,
	350, 1923,
	351, 1923,
	352, 1923,
	353, 1923,
	354, 1923,
	355, 1923,
	357, 1923,
	358, 1923,
	360, 1923,
	362, 1923,
	363, 1923,
	364, 1923,
	365, 1923,
	367, 1923,
	368, 1923,
	369, 1923,
	370, 1923,
	371, 1923,
	374, 1923,
	376, 1923,
	378, 1923,
	379, 1923,
	380, 1923,
	381, 1923,
	384, 1923,
	385, 1923,
	386, 1923,
	388, 1923,
	390, 1923,
	391, 1923,
	392, 1923,
	393, 1923,
	394, 1923,
	395, 1923,
	396, 1923,
	397, 1923,
	398, 1923,
	399, 1923,
	400, 1923,
	401, 1923,
	402, 1923,
	403, 1923,
	405, 1923,
	406, 1923,
	407, 1923,
	408, 1923,
	409, 1923,
	410, 1923,
	411, 1923,
	412, 1923,
	413, 1923,
	414, 1923,
	415, 1923,
	416, 1923,
	417, 1923,
	418, 1923,
	419, 1923,
	421, 1923,
	422, 1923,
	423, 1923,
	425, 1923,
	426, 1923,
	427, 1923,
	428, 1923,
	429, 1923,
	430, 1923,
	431, 1923,
	432, 1923,
	433, 1923,
	434, 1923,
	435, 1923,
	436, 1923,
	437, 1923,
	438, 1923,
	440, 1923,
	442, 1923,
	443, 1923,
	444, 1923,
	450, 1923,
	451, 1923,
	452, 1923,
	454, 1923,
	455, 1923,
	456, 1923,
	457, 1923,
	458, 1923,
	459, 1923,
	460, 1923,
	461, 1923,
	462, 1923,
	463, 1923,
	464, 1923,
	466, 1923,
	467, 1923,
	468, 1923,
	469, 1923,
	470, 1923,
	472, 1923,
	473, 1923,
	474, 1923,
	475, 1923,
	476, 1923,
	477, 1923,
	478, 1923,
	480, 1923,
	481, 1923,
	482, 1923,
	483, 1923,
	484, 1923,
	485, 1923,
	486, 1923,
	487, 1923,
	488, 1923,
	489, 1923,
	490, 1923,
	491, 1923,
	492, 1923,
	493, 1923,
	494, 1923,
	495, 1923,
	497, 1923,
	498, 1923,
	499, 1923,
	500, 1923,
	501, 1923,
	502, 1923,
	504, 1923,
	505, 1923,
	506, 1923,
	507, 1923,
	508, 1923,
	509, 1923,
	510, 1923,
	512, 1923,
	513, 1923,
	514, 1923,
	515, 1923,
	516, 1923,
	517, 1923,
	518, 1923,
	519, 1923,
	521, 1923,
	523, 1923,
	524, 1923,
	525, 1923,
	526, 1923,
	527, 1923,
	528, 1923,
	529, 1923,
	530, 1923,
	531, 1923,
	532, 1923,
	533, 1923,
	534, 1923,
	535, 1923,
	536, 1923,
	537, 1923,
	538, 1923,
	539, 1923,
	540, 1923,
	541, 1923,
	542, 1923,
	543, 1923,
	545, 1923,
	546, 1923,
	548, 1923,
	549, 1923,
	551, 1923,
	552, 1923,
	553, 1923,
	554, 1923,
	555, 1923,
	556, 1923,
	558, 1923,
	559, 1923,
	561, 1923,
	562, 1923,
	563, 1923,
	564, 1923,
	565, 1923,
	567, 1923,
	569, 1923,
	570, 1923,
	571, 1923,
	572, 1923,
	573, 1923,
	574, 1923,
	575, 1923,
	576, 1923,
	578, 1923,
	579, 1923,
	580, 1923,
	581, 1923,
	582, 1923,
	583, 1923,
	584, 1923,
	587, 1923,
	588, 1923,
	589, 1923,
	590, 1923,
	591, 1923,
	592, 1923,
	593, 1923,
	594, 1923,
	595, 1923,
	597, 1923,
	600, 1923,
	601, 1923,
	602, 1923,
	603, 1923,
	604, 1923,
	605, 1923,
	607, 1923,
	608, 1923,
	609, 1923,
	610, 1923,
	611, 1923,
	612, 1923,
	613, 1923,
	614, 1923,
	615, 1923,
	616, 1923,
	617, 1923,
	618, 1923,
	619, 1923,
	624, 1923,
	625, 1923,
	626, 1923,
	627, 1923,
	628, 1923,
	629, 1923,
	-2, 0,
	-1, 177,
	1, 1768,
	665, 1768,
	668, 1768,
	-2, 0,
	-1, 178,
	1, 1768,
	566, 1768,
	665, 1768,
	668, 1768,
	-2, 0,
	-1, 214,
	162, 1891,
	183, 1891,
	196, 1891,
	262, 1891,
	298, 1891,
	372, 1891,
	383, 1891,
	585, 1891,
	-2, 1866,
	-1, 275,
	4, 1930,
	5, 1930,
	6, 1930,
	7, 1930,
	8, 1930,
	9, 1930,
	10, 1930,
	21, 1930,
	22, 1930,
	23, 1930,
	24, 1930,
	25, 1930,
	26, 1930,
	27, 1930,
	28, 1930,
	30, 1930,
	31, 1930,
	37, 1930,
	38, 1930,
	41, 1930,
	43, 1930,
	44, 1930,
	45, 1930,
	46, 1930,
	47, 1930,
	48, 1930,
	49, 1930,
	50, 1930,
	51, 1930,
	52, 1930,
	53, 1930,
	54, 1930,
	55, 1930,
	57, 1930,
	58, 1930,
	59, 1930,
	60, 1930,
	62, 1930,
	63, 1930,
	64, 1930,
	65, 1930,
	66, 1930,
	67, 1930,
	68, 1930,
	69, 1930,
	70, 1930,
	71, 1930,
	72, 1930,
	73, 1930,
	74, 1930,
	75, 1930,
	76, 1930,
	78, 1930,
	79, 1930,
	80, 1930,
	82, 1930,
	84, 1930,
	85, 1930,
	86, 1930,
	87, 1930,
	88, 1930,
	89, 1930,
	90, 1930,
	91, 1930,
	94, 1930,
	95, 1930,
	96, 1930,
	97, 1930,
	98, 1930,
	99, 1930,
	101, 1930,
	103, 1930,
	104, 1930,
	105, 1930,
	106, 1930,
	107, 1930,
	108, 1930,
	109, 1930,
	111, 1930,
	112, 1930,
	113, 1930,
	114, 1930,
	115, 1930,
	116, 1930,
	117, 1930,
	118, 1930,
	119, 1930,
	120, 1930,
	121, 1930,
	122, 1930,
	123, 1930,
	124, 1930,
	125, 1930,
	126, 1930,
	127, 1930,
	128, 1930,
	129, 1930,
	130, 1930,
	131, 1930,
	132, 1930,
	133, 1930,
	134, 1930,
	135, 1930,
	136, 1930,
	137, 1930,
	138, 1930,
	139, 1930,
	141, 1930,
	142, 1930,
	143, 1930,
	144, 1930,
	146, 1930,
	147, 1930,
	148, 1930,
	151, 1930,
	152, 1930,
	153, 1930,
	155, 1930,
	156, 1930,
	157, 1930,
	159, 1930,
	160, 1930,
	161, 1930,
	163, 1930,
	164, 1930,
	165, 1930,
	166, 1930,
	167, 1930,
	168, 1930,
	169, 1930,
	170, 1930,
	171, 1930,
	172, 1930,
	173, 1930,
	174, 1930,
	175, 1930,
	176, 1930,
	177, 1930,
	178, 1930,
	179, 1930,
	180, 1930,
	181, 1930,
	182, 1930,
	188, 1930,
	189, 1930,
	190, 1930,
	191, 1930,
	195, 1930,
	197, 1930,
	198, 1930,
	199, 1930,
	201, 1930,
	202, 1930,
	204, 1930,
	205, 1930,
	206, 1930,
	207, 1930,
	208, 1930,
	209, 1930,
	210, 1930,
	211, 1930,
	212, 1930,
	213, 1930,
	214, 1930,
	215, 1930,
	216, 1930,
	217, 1930,
	218, 1930,
	220, 1930,
	221, 1930,
	223, 1930,
	224, 1930,
	226, 1930,
	227, 1930,
	228, 1930,
	229, 1930,
	230, 1930,
	231, 1930,
	232, 1930,
	233, 1930,
	234, 1930,
	235, 1930,
	236, 1930,
	237, 1930,
	238, 1930,
	239, 1930,
	240, 1930,
	242, 1930,
	243, 1930,
	244, 1930,
	245, 1930,
	246, 1930,
	250, 1930,
	251, 1930,
	252, 1930,
	253, 1930,
	255, 1930,
	256, 1930,
	257, 1930,
	258, 1930,
	259, 1930,
	260, 1930,
	261, 1930,
	263, 1930,
	265, 1930,
	266, 1930,
	267, 1930,
	268, 1930,
	269, 1930,
	270, 1930,
	271, 1930,
	272, 1930,
	273, 1930,
	274, 1930,
	275, 1930,
	279, 1930,
	280, 1930,
	281, 1930,
	282, 1930,
	283, 1930,
	284, 1930,
	285, 1930,
	287, 1930,
	288, 1930,
	289, 1930,
	291, 1930,
	292, 1930,
	293, 1930,
	294, 1930,
	295, 1930,
	296, 1930,
	297, 1930,
	299, 1930,
	300, 1930,
	301, 1930,
	302, 1930,
	303, 1930,
	304, 1930,
	305, 1930,
	306, 1930,
	307, 1930,
	308, 1930,
	309, 1930,
	310, 1930,
	311, 1930,
	313, 1930,
	314, 1930,
	315, 1930,
	316, 1930,
	317, 1930,
	318, 1930,
	319, 1930,
	320, 1930,
	321, 1930,
	322, 1930,
	323, 1930,
	324, 1930,
	325, 1930,
	326, 1930,
	327, 1930,
	328, 1930,
	329, 1930,
	330, 1930,
	331, 1930,
	332, 1930,
	333, 1930,
	334, 1930,
	335, 1930,
	337, 1930,
	338, 1930,
	339, 1930,
	340, 1930,
	341, 1930,
	342, 1930,
	343, 1930,
	344, 1930,
	345, 1930,
	346, 1930,
	347, 1930,
	348, 1930,
	349, 1930,
	350, 1930,
	351, 1930,
	352, 1930,
	353, 1930,
	354, 1930,
	355, 1930,
	356, 1930,
	357, 1930,
	358, 1930,
	359, 1930,
	360, 1930,
	361, 1930,
	362, 1930,
	363, 1930,
	364, 1930,
	365, 1930,
	366, 1930,
	367, 1930,
	368, 1930,
	369, 1930,
	370, 1930,
	371, 1930,
	374, 1930,
	376, 1930,
	379, 1930,
	380, 1930,
	381, 1930,
	384, 1930,
	385, 1930,
	386, 1930,
	387, 1930,
	388, 1930,
	389, 1930,
	390, 1930,
	391, 1930,
	392, 1930,
	393, 1930,
	394, 1930,
	395, 1930,
	396, 1930,
	397, 1930,
	398, 1930,
	399, 1930,
	400, 1930,
	401, 1930,
	402, 1930,
	403, 1930,
	405, 1930,
	406, 1930,
	407, 1930,
	408, 1930,
	409, 1930,
	410, 1930,
	411, 1930,
	412, 1930,
	413, 1930,
	414, 1930,
	415, 1930,
	416, 1930,
	417, 1930,
	418, 1930,
	419, 1930,
	421, 1930,
	422, 1930,
	423, 1930,
	425, 1930,
	426, 1930,
	427, 1930,
	428, 1930,
	429, 1930,
	430, 1930,
	431, 1930,
	432, 1930,
	433, 1930,
	434, 1930,
	435, 1930,
	436, 1930,
	437, 1930,
	438, 1930,
	440, 1930,
	442, 1930,
	443, 1930,
	444, 1930,
	450, 1930,
	451, 1930,
	452, 1930,
	454, 1930,
	455, 1930,
	456, 1930,
	457, 1930,
	458, 1930,
	459, 1930,
	460, 1930,
	461, 1930,
	462, 1930,
	463, 1930,
	464, 1930,
	466, 1930,
	467, 1930,
	468, 1930,
	469, 1930,
	470, 1930,
	471, 1930,
	472, 1930,
	473, 1930,
	474, 1930,
	475, 1930,
	476, 1930,
	477, 1930,
	478, 1930,
	480, 1930,
	481, 1930,
	482, 1930,
	483, 1930,
	484, 1930,
	485, 1930,
	486, 1930,
	487, 1930,
	488, 1930,
	489, 1930,
	490, 1930,
	491, 1930,
	492, 1930,
	493, 1930,
	494, 1930,
	495, 1930,
	497, 1930,
	498, 1930,
	499, 1930,
	500, 1930,
	501, 1930,
	502, 1930,
	503, 1930,
	504, 1930,
	505, 1930,
	506, 1930,
	507, 1930,
	508, 1930,
	509, 1930,
	510, 1930,
	511, 1930,
	512, 1930,
	513, 1930,
	514, 1930,
	515, 1930,
	516, 1930,
	517, 1930,
	518, 1930,
	519, 1930,
	521, 1930,
	523, 1930,
	524, 1930,
	525, 1930,
	526, 1930,
	527, 1930,
	528, 1930,
	529, 1930,
	530, 1930,
	531, 1930,
	532, 1930,
	533, 1930,
	534, 1930,
	535, 1930,
	536, 1930,
	537, 1930,
	538, 1930,
	539, 1930,
	540, 1930,
	541, 1930,
	542, 1930,
	543, 1930,
	545, 1930,
	546, 1930,
	547, 1930,
	548, 1930,
	549, 1930,
	551, 1930,
	552, 1930,
	553, 1930,
	554, 1930,
	555, 1930,
	556, 1930,
	558, 1930,
	559, 1930,
	561, 1930,
	562, 1930,
	563, 1930,
	564, 1930,
	565, 1930,
	567, 1930,
	569, 1930,
	570, 1930,
	571, 1930,
	572, 1930,
	573, 1930,
	574, 1930,
	575, 1930,
	576, 1930,
	577, 1930,
	578, 1930,
	579, 1930,
	580, 1930,
	581, 1930,
	582, 1930,
	583, 1930,
	584, 1930,
	586, 1930,
	587, 1930,
	588, 1930,
	589, 1930,
	590, 1930,
	591, 1930,
	592, 1930,
	593, 1930,
	594, 1930,
	595, 1930,
	596, 1930,
	597, 1930,
	600, 1930,
	601, 1930,
	602, 1930,
	603, 1930,
	604, 1930,
	605, 1930,
	607, 1930,
	608, 1930,
	609, 1930,
	610, 1930,
	611, 1930,
	612, 1930,
	613, 1930,
	614, 1930,
	615, 1930,
	616, 1930,
	617, 1930,
	618, 1930,
	619, 1930,
	624, 1930,
	625, 1930,
	626, 1930,
	627, 1930,
	628, 1930,
	629, 1930,
	630, 1930,
	645, 1930,
	652, 1930,
	653, 1930,
	654, 1930,
	662, 1930,
	666, 1930,
	-2, 0,
	-1, 856,
	4, 1639,
	21, 1639,
	22, 1639,
	23, 1639,
	24, 1639,
	25, 1639,
	26, 1639,
	27, 1639,
	28, 1639,
	30, 1639,
	31, 1639,
	37, 1639,
	41, 1639,
	43, 1639,
	44, 1639,
	45, 1639,
	47, 1639,
	48, 1639,
	49, 1639,
	50, 1639,
	51, 1639,
	52, 1639,
	53, 1639,
	54, 1639,
	55, 1639,
	57, 1639,
	58, 1639,
	59, 1639,
	60, 1639,
	62, 1639,
	63, 1639,
	64, 1639,
	65, 1639,
	66, 1639,
	67, 1639,
	68, 1639,
	69, 1639,
	73, 1639,
	74, 1639,
	75, 1639,
	76, 1639,
	78, 1639,
	79, 1639,
	80, 1639,
	84, 1639,
	85, 1639,
	86, 1639,
	87, 1639,
	88, 1639,
	89, 1639,
	90, 1639,
	91, 1639,
	94, 1639,
	95, 1639,
	96, 1639,
	97, 1639,
	98, 1639,
	99, 1639,
	101, 1639,
	103, 1639,
	104, 1639,
	105, 1639,
	106, 1639,
	107, 1639,
	108, 1639,
	109, 1639,
	111, 1639,
	112, 1639,
	113, 1639,
	115, 1639,
	116, 1639,
	117, 1639,
	125, 1639,
	126, 1639,
	127, 1639,
	128, 1639,
	129, 1639,
	131, 1639,
	132, 1639,
	133, 1639,
	134, 1639,
	136, 1639,
	137, 1639,
	138, 1639,
	139, 1639,
	141, 1639,
	142, 1639,
	143, 1639,
	144, 1639,
	146, 1639,
	147, 1639,
	148, 1639,
	151, 1639,
	152, 1639,
	153, 1639,
	155, 1639,
	156, 1639,
	157, 1639,
	159, 1639,
	160, 1639,
	161, 1639,
	163, 1639,
	164, 1639,
	165, 1639,
	166, 1639,
	167, 1639,
	168, 1639,
	169, 1639,
	170, 1639,
	171, 1639,
	172, 1639,
	173, 1639,
	174, 1639,
	175, 1639,
	176, 1639,
	177, 1639,
	178, 1639,
	179, 1639,
	180, 1639,
	182, 1639,
	188, 1639,
	189, 1639,
	190, 1639,
	191, 1639,
	195, 1639,
	197, 1639,
	198, 1639,
	199, 1639,
	201, 1639,
	202, 1639,
	205, 1639,
	206, 1639,
	207, 1639,
	208, 1639,
	209, 1639,
	210, 1639,
	211, 1639,
	212, 1639,
	213, 1639,
	214, 1639,
	215, 1639,
	216, 1639,
	217, 1639,
	218, 1639,
	220, 1639,
	221, 1639,
	223, 1639,
	224, 1639,
	226, 1639,
	227, 1639,
	228, 1639,
	229, 1639,
	230, 1639,
	231, 1639,
	232, 1639,
	233, 1639,
	234, 1639,
	235, 1639,
	236, 1639,
	238, 1639,
	239, 1639,
	240, 1639,
	242, 1639,
	243, 1639,
	244, 1639,
	245, 1639,
	246, 1639,
	250, 1639,
	251, 1639,
	252, 1639,
	253, 1639,
	256, 1639,
	257, 1639,
	258, 1639,
	259, 1639,
	260, 1639,
	261, 1639,
	263, 1639,
	265, 1639,
	266, 1639,
	267, 1639,
	269, 1639,
	271, 1639,
	272, 1639,
	273, 1639,
	275, 1639,
	279, 1639,
	280, 1639,
	281, 1639,
	282, 1639,
	283, 1639,
	284, 1639,
	285, 1639,
	287, 1639,
	288, 1639,
	289, 1639,
	291, 1639,
	292, 1639,
	293, 1639,
	295, 1639,
	296, 1639,
	299, 1639,
	300, 1639,
	301, 1639,
	302, 1639,
	303, 1639,
	304, 1639,
	305, 1639,
	308, 1639,
	309, 1639,
	310, 1639,
	311, 1639,
	313, 1639,
	314, 1639,
	315, 1639,
	316, 1639,
	317, 1639,
	318, 1639,
	319, 1639,
	320, 1639,
	321, 1639,
	322, 1639,
	323, 1639,
	324, 1639,
	325, 1639,
	326, 1639,
	327, 1639,
	328, 1639,
	329, 1639,
	330, 1639,
	331, 1639,
	332, 1639,
	333, 1639,
	334, 1639,
	335, 1639,
	337, 1639,
	339, 1639,
	340, 1639,
	341, 1639,
	342, 1639,
	343, 1639,
	344, 1639,
	345, 1639,
	346, 1639,
	347, 1639,
	348, 1639,
	349, 1639,
	350, 1639,
	351, 1639,
	352, 1639,
	353, 1639,
	354, 1639,
	355, 1639,
	357, 1639,
	358, 1639,
	360, 1639,
	362, 1639,
	363, 1639,
	364, 1639,
	365, 1639,
	367, 1639,
	368, 1639,
	369, 1639,
	370, 1639,
	371, 1639,
	374, 1639,
	376, 1639,
	379, 1639,
	380, 1639,
	381, 1639,
	384, 1639,
	385, 1639,
	386, 1639,
	388, 1639,
	390, 1639,
	391, 1639,
	392, 1639,
	393, 1639,
	394, 1639,
	395, 1639,
	396, 1639,
	397, 1639,
	398, 1639,
	399, 1639,
	400, 1639,
	401, 1639,
	402, 1639,
	403, 1639,
	405, 1639,
	406, 1639,
	407, 1639,
	408, 1639,
	409, 1639,
	410, 1639,
	411, 1639,
	412, 1639,
	413, 1639,
	414, 1639,
	415, 1639,
	416, 1639,
	417, 1639,
	418, 1639,
	419, 1639,
	421, 1639,
	422, 1639,
	423, 1639,
	425, 1639,
	426, 1639,
	427, 1639,
	428, 1639,
	429, 1639,
	430, 1639,
	431, 1639,
	432, 1639,
	433, 1639,
	434, 1639,
	435, 1639,
	436, 1639,
	437, 1639,
	438, 1639,
	440, 1639,
	442, 1639,
	443, 1639,
	444, 1639,
	450, 1639,
	451, 1639,
	452, 1639,
	454, 1639,
	455, 1639,
	456, 1639,
	457, 1639,
	458, 1639,
	459, 1639,
	460, 1639,
	461, 1639,
	462, 1639,
	463, 1639,
	464, 1639,
	466, 1639,
	467, 1639,
	468, 1639,
	469, 1639,
	470, 1639,
	472, 1639,
	473, 1639,
	474, 1639,
	475, 1639,
	476, 1639,
	477, 1639,
	478, 1639,
	480, 1639,
	481, 1639,
	482, 1639,
	483, 1639,
	484, 1639,
	485, 1639,
	486, 1639,
	487, 1639,
	488, 1639,
	489, 1639,
	490, 1639,
	491, 1639,
	492, 1639,
	493, 1639,
	494, 1639,
	495, 1639,
	497, 1639,
	498, 1639,
	499, 1639,
	500, 1639,
	501, 1639,
	502, 1639,
	504, 1639,
	505, 1639,
	506, 1639,
	507, 1639,
	508, 1639,
	509, 1639,
	510, 1639,
	512, 1639,
	513, 1639,
	514, 1639,
	515, 1639,
	516, 1639,
	517, 1639,
	518, 1639,
	519, 1639,
	521, 1639,
	523, 1639,
	524, 1639,
	525, 1639,
	526, 1639,
	527, 1639,
	528, 1639,
	529, 1639,
	530, 1639,
	531, 1639,
	532, 1639,
	533, 1639,
	534, 1639,
	535, 1639,
	536, 1639,
	537, 1639,
	538, 1639,
	539, 1639,
	540, 1639,
	541, 1639,
	542, 1639,
	543, 1639,
	545, 1639,
	546, 1639,
	548, 1639,
	549, 1639,
	551, 1639,
	552, 1639,
	553, 1639,
	554, 1639,
	555, 1639,
	556, 1639,
	558, 1639,
	559, 1639,
	561, 1639,
	562, 1639,
	563, 1639,
	564, 1639,
	565, 1639,
	567, 1639,
	569, 1639,
	570, 1639,
	571, 1639,
	572, 1639,
	573, 1639,
	574, 1639,
	575, 1639,
	576, 1639,
	578, 1639,
	579, 1639,
	580, 1639,
	581, 1639,
	582, 1639,
	583, 1639,
	584, 1639,
	587, 1639,
	588, 1639,
	589, 1639,
	590, 1639,
	591, 1639,
	592, 1639,
	593, 1639,
	594, 1639,
	595, 1639,
	597, 1639,
	600, 1639,
	601, 1639,
	602, 1639,
	603, 1639,
	604, 1639,
	605, 1639,
	607, 1639,
	608, 1639,
	609, 1639,
	610, 1639,
	611, 1639,
	612, 1639,
	613, 1639,
	614, 1639,
	615, 1639,
	616, 1639,
	617, 1639,
	618, 1639,
	619, 1639,
	624, 1639,
	625, 1639,
	626, 1639,
	627, 1639,
	628, 1639,
	629, 1639,
	-2, 0,
	-1, 875,
	203, 2748,
	566, 2748,
	644, 2748,
	664, 2748,
	-2, 0,
	-1, 876,
	203, 2733,
	566, 2733,
	644, 2733,
	664, 2733,
	-2, 0,
	-1, 878,
	203, 3032,
	566, 3032,
	644, 3032,
	664, 3032,
	-2, 0,
	-1, 881,
	203, 2874,
	566, 2874,
	644, 2874,
	664, 2874,
	-2, 0,
	-1, 882,
	203, 3079,
	566, 3079,
	644, 3079,
	664, 3079,
	-2, 0,
	-1, 890,
	203, 2902,
	566, 2902,
	644, 2902,
	664, 2902,
	-2, 918,
	-1, 906,
	8, 1055,
	29, 1055,
	652, 1055,
	653, 1055,
	-2, 1060,
	-1, 910,
	1, 2806,
	665, 2806,
	668, 2806,
	-2, 1060,
	-1, 911,
	1, 2861,
	665, 2861,
	668, 2861,
	-2, 1060,
	-1, 914,
	1, 2907,
	665, 2907,
	668, 2907,
	-2, 1053,
	-1, 915,
	1, 2964,
	665, 2964,
	668, 2964,
	-2, 1054,
	-1, 916,
	1, 2811,
	665, 2811,
	668, 2811,
	-2, 1057,
	-1, 917,
	1, 2719,
	665, 2719,
	668, 2719,
	-2, 1058,
	-1, 960,
	664, 2676,
	667, 2676,
	-2, 1300,
	-1, 961,
	664, 2678,
	667, 2678,
	-2, 1301,
	-1, 962,
	664, 2677,
	667, 2677,
	-2, 1302,
	-1, 963,
	667, 2600,
	-2, 1303,
	-1, 989,
	196, 330,
	-2, 0,
	-1, 1011,
	46, 2649,
	-2, 0,
	-1, 1012,
	608, 1617,
	-2, 1385,
	-1, 1029,
	4, 2078,
	21, 2078,
	22, 2078,
	23, 2078,
	24, 2078,
	25, 2078,
	26, 2078,
	27, 2078,
	28, 2078,
	30, 2078,
	31, 2078,
	37, 2078,
	41, 2078,
	43, 2078,
	44, 2078,
	45, 2078,
	47, 2078,
	48, 2078,
	49, 2078,
	50, 2078,
	51, 2078,
	52, 2078,
	53, 2078,
	54, 2078,
	55, 2078,
	57, 2078,
	58, 2078,
	59, 2078,
	60, 2078,
	62, 2078,
	63, 2078,
	64, 2078,
	65, 2078,
	66, 2078,
	67, 2078,
	68, 2078,
	69, 2078,
	73, 2078,
	74, 2078,
	75, 2078,
	76, 2078,
	78, 2078,
	79, 2078,
	80, 2078,
	84, 2078,
	85, 2078,
	86, 2078,
	87, 2078,
	88, 2078,
	89, 2078,
	90, 2078,
	91, 2078,
	94, 2078,
	95, 2078,
	96, 2078,
	97, 2078,
	98, 2078,
	99, 2078,
	101, 2078,
	103, 2078,
	104, 2078,
	105, 2078,
	106, 2078,
	107, 2078,
	108, 2078,
	109, 2078,
	111, 2078,
	112, 2078,
	113, 2078,
	115, 2078,
	116, 2078,
	117, 2078,
	125, 2078,
	126, 2078,
	127, 2078,
	128, 2078,
	129, 2078,
	131, 2078,
	132, 2078,
	133, 2078,
	134, 2078,
	136, 2078,
	137, 2078,
	138, 2078,
	139, 2078,
	141, 2078,
	142, 2078,
	143, 2078,
	144, 2078,
	146, 2078,
	147, 2078,
	148, 2078,
	151, 2078,
	152, 2078,
	153, 2078,
	155, 2078,
	156, 2078,
	157, 2078,
	159, 2078,
	160, 2078,
	161, 2078,
	163, 2078,
	164, 2078,
	165, 2078,
	166, 2078,
	167, 2078,
	168, 2078,
	169, 2078,
	170, 2078,
	171, 2078,
	172, 2078,
	173, 2078,
	174, 2078,
	175, 2078,
	176, 2078,
	177, 2078,
	178, 2078,
	179, 2078,
	180, 2078,
	182, 2078,
	188, 2078,
	189, 2078,
	190, 2078,
	191, 2078,
	195, 2078,
	197, 2078,
	198, 2078,
	199, 2078,
	201, 2078,
	202, 2078,
	205, 2078,
	206, 2078,
	207, 2078,
	208, 2078,
	209, 2078,
	210, 2078,
	211, 2078,
	212, 2078,
	213, 2078,
	214, 2078,
	215, 2078,
	216, 2078,
	217, 2078,
	218, 2078,
	220, 2078,
	221, 2078,
	223, 2078,
	224, 2078,
	226, 2078,
	227, 2078,
	228, 2078,
	229, 2078,
	230, 2078,
	231, 2078,
	232, 2078,
	233, 2078,
	234, 2078,
	235, 2078,
	236, 2078,
	238, 2078,
	239, 2078,
	240, 2078,
	242, 2078,
	243, 2078,
	244, 2078,
	245, 2078,
	246, 2078,
	250, 2078,
	251, 2078,
	252, 2078,
	253, 2078,
	256, 2078,
	257, 2078,
	258, 2078,
	259, 2078,
	260, 2078,
	261, 2078,
	263, 2078,
	265, 2078,
	266, 2078,
	267, 2078,
	269, 2078,
	271, 2078,
	272, 2078,
	273, 2078,
	275, 2078,
	279, 2078,
	280, 2078,
	281, 2078,
	282, 2078,
	283, 2078,
	284, 2078,
	285, 2078,
	287, 2078,
	288, 2078,
	289, 2078,
	291, 2078,
	292, 2078,
	293, 2078,
	295, 2078,
	296, 2078,
	299, 2078,
	300, 2078,
	301, 2078,
	302, 2078,
	303, 2078,
	304, 2078,
	305, 2078,
	308, 2078,
	309, 2078,
	310, 2078,
	311, 2078,
	313, 2078,
	314, 2078,
	315, 2078,
	316, 2078,
	317, 2078,
	318, 2078,
	319, 2078,
	320, 2078,
	321, 2078,
	322, 2078,
	323, 2078,
	324, 2078,
	325, 2078,
	326, 2078,
	327, 2078,
	328, 2078,
	329, 2078,
	330, 2078,
	331, 2078,
	332, 2078,
	333, 2078,
	334, 2078,
	335, 2078,
	337, 2078,
	339, 2078,
	340, 2078,
	341, 2078,
	342, 2078,
	343, 2078,
	344, 2078,
	345, 2078,
	346, 2078,
	347, 2078,
	348, 2078,
	349, 2078,
	350, 2078,
	351, 2078,
	352, 2078,
	353, 2078,
	354, 2078,
	355, 2078,
	357, 2078,
	358, 2078,
	360, 2078,
	362, 2078,
	363, 2078,
	364, 2078,
	365, 2078,
	367, 2078,
	368, 2078,
	369, 2078,
	370, 2078,
	371, 2078,
	374, 2078,
	376, 2078,
	379, 2078,
	380, 2078,
	381, 2078,
	384, 2078,
	385, 2078,
	386, 2078,
	388, 2078,
	390, 2078,
	391, 2078,
	392, 2078,
	393, 2078,
	394, 2078,
	395, 2078,
	396, 2078,
	397, 2078,
	398, 2078,
	399, 2078,
	400, 2078,
	401, 2078,
	402, 2078,
	403, 2078,
	405, 2078,
	406, 2078,
	407, 2078,
	408, 2078,
	409, 2078,
	410, 2078,
	411, 2078,
	412, 2078,
	413, 2078,
	414, 2078,
	415, 2078,
	416, 2078,
	417, 2078,
	418, 2078,
	419, 2078,
	421, 2078,
	422, 2078,
	423, 2078,
	425, 2078,
	426, 2078,
	427, 2078,
	428, 2078,
	429, 2078,
	430, 2078,
	431, 2078,
	432, 2078,
	433, 2078,
	434, 2078,
	435, 2078,
	436, 2078,
	437, 2078,
	438, 2078,
	440, 2078,
	442, 2078,
	443, 2078,
	444, 2078,
	450, 2078,
	451, 2078,
	452, 2078,
	454, 2078,
	455, 2078,
	456, 2078,
	457, 2078,
	458, 2078,
	459, 2078,
	460, 2078,
	461, 2078,
	462, 2078,
	463, 2078,
	464, 2078,
	466, 2078,
	467, 2078,
	468, 2078,
	469, 2078,
	470, 2078,
	472, 2078,
	473, 2078,
	474, 2078,
	475, 2078,
	476, 2078,
	477, 2078,
	478, 2078,
	480, 2078,
	481, 2078,
	482, 2078,
	483, 2078,
	484, 2078,
	485, 2078,
	486, 2078,
	487, 2078,
	488, 2078,
	489, 2078,
	490, 2078,
	491, 2078,
	492, 2078,
	493, 2078,
	494, 2078,
	495, 2078,
	497, 2078,
	498, 2078,
	499, 2078,
	500, 2078,
	501, 2078,
	502, 2078,
	504, 2078,
	505, 2078,
	506, 2078,
	507, 2078,
	508, 2078,
	509, 2078,
	510, 2078,
	512, 2078,
	513, 2078,
	514, 2078,
	515, 2078,
	516, 2078,
	517, 2078,
	518, 2078,
	519, 2078,
	521, 2078,
	523, 2078,
	524, 2078,
	525, 2078,
	526, 2078,
	527, 2078,
	528, 2078,
	529, 2078,
	530, 2078,
	531, 2078,
	532, 2078,
	533, 2078,
	534, 2078,
	535, 2078,
	536, 2078,
	537, 2078,
	538, 2078,
	539, 2078,
	540, 2078,
	541, 2078,
	542, 2078,
	543, 2078,
	545, 2078,
	546, 2078,
	548, 2078,
	549, 2078,
	551, 2078,
	552, 2078,
	553, 2078,
	554, 2078,
	555, 2078,
	556, 2078,
	558, 2078,
	559, 2078,
	561, 2078,
	562, 2078,
	563, 2078,
	564, 2078,
	565, 2078,
	567, 2078,
	569, 2078,
	570, 2078,
	571, 2078,
	572, 2078,
	573, 2078,
	574, 2078,
	575, 2078,
	576, 2078,
	578, 2078,
	579, 2078,
	580, 2078,
	581, 2078,
	582, 2078,
	583, 2078,
	584, 2078,
	587, 2078,
	588, 2078,
	589, 2078,
	590, 2078,
	591, 2078,
	592, 2078,
	593, 2078,
	594, 2078,
	595, 2078,
	597, 2078,
	600, 2078,
	601, 2078,
	602, 2078,
	603, 2078,
	604, 2078,
	605, 2078,
	607, 2078,
	608, 2078,
	609, 2078,
	610, 2078,
	611, 2078,
	612, 2078,
	613, 2078,
	614, 2078,
	615, 2078,
	616, 2078,
	617, 2078,
	618, 2078,
	619, 2078,
	624, 2078,
	625, 2078,
	626, 2078,
	627, 2078,
	628, 2078,
	629, 2078,
	-2, 0,
	-1, 1040,
	284, 583,
	-2, 0,
	-1, 1120,
	203, 1101,
	-2, 0,
	-1, 1121,
	427, 1156,
	502, 1156,
	549, 1156,
	571, 1156,
	-2, 0,
	-1, 1122,
	427, 1155,
	502, 1155,
	549, 1155,
	571, 1155,
	-2, 1073,
	-1, 1126,
	1, 1212,
	661, 1212,
	663, 1212,
	665, 1212,
	668, 1212,
	-2, 0,
	-1, 1128,
	1, 1129,
	661, 1129,
	663, 1129,
	665, 1129,
	668, 1129,
	-2, 0,
	-1, 1129,
	1, 1133,
	661, 1133,
	663, 1133,
	665, 1133,
	668, 1133,
	-2, 0,
	-1, 1130,
	1, 1289,
	196, 1289,
	661, 1289,
	663, 1289,
	665, 1289,
	668, 1289,
	-2, 0,
	-1, 1139,
	1, 1161,
	661, 1161,
	663, 1161,
	665, 1161,
	668, 1161,
	-2, 0,
	-1, 1146,
	1, 1212,
	661, 1212,
	663, 1212,
	665, 1212,
	668, 1212,
	-2, 0,
	-1, 1147,
	1, 1205,
	661, 1205,
	663, 1205,
	665, 1205,
	668, 1205,
	-2, 0,
	-1, 1148,
	1, 1214,
	661, 1214,
	663, 1214,
	665, 1214,
	668, 1214,
	-2, 0,
	-1, 1149,
	1, 1217,
	661, 1217,
	663, 1217,
	665, 1217,
	668, 1217,
	-2, 0,
	-1, 1157,
	1, 1252,
	661, 1252,
	663, 1252,
	665, 1252,
	668, 1252,
	-2, 0,
	-1, 1158,
	1, 1254,
	661, 1254,
	663, 1254,
	665, 1254,
	668, 1254,
	-2, 0,
	-1, 1163,
	1, 1282,
	661, 1282,
	663, 1282,
	665, 1282,
	668, 1282,
	-2, 0,
	-1, 1217,
	183, 1934,
	196, 1934,
	298, 1934,
	372, 1934,
	-2, 1870,
	-1, 1234,
	183, 1933,
	196, 1933,
	298, 1933,
	372, 1933,
	-2, 1867,
	-1, 1263,
	664, 2675,
	-2, 926,
	-1, 1292,
	5, 2667,
	662, 2665,
	-2, 2656,
	-1, 1300,
	5, 2688,
	662, 2685,
	-2, 2676,
	-1, 1301,
	5, 2689,
	662, 2686,
	-2, 2677,
	-1, 1309,
	664, 2673,
	-2, 2655,
	-1, 1310,
	662, 3195,
	-2, 2674,
	-1, 1333,
	5, 2690,
	38, 2690,
	135, 2690,
	644, 2690,
	660, 2690,
	663, 2690,
	664, 2690,
	667, 2690,
	-2, 3194,
	-1, 1334,
	5, 2153,
	-2, 3164,
	-1, 1335,
	5, 2154,
	-2, 3165,
	-1, 1336,
	5, 2155,
	-2, 3180,
	-1, 1337,
	5, 2156,
	-2, 3142,
	-1, 1338,
	5, 2157,
	-2, 3177,
	-1, 1339,
	5, 2165,
	-2, 3155,
	-1, 1340,
	5, 2152,
	-2, 3151,
	-1, 1341,
	5, 2152,
	-2, 3150,
	-1, 1342,
	5, 2152,
	-2, 3170,
	-1, 1343,
	5, 2163,
	-2, 3144,
	-1, 1344,
	5, 2168,
	-2, 3143,
	-1, 1345,
	5, 2170,
	-2, 3190,
	-1, 1348,
	5, 2192,
	-2, 3183,
	-1, 1349,
	5, 2184,
	-2, 3184,
	-1, 1350,
	5, 2192,
	-2, 3185,
	-1, 1351,
	5, 2188,
	-2, 3186,
	-1, 1352,
	5, 2138,
	-2, 3156,
	-1, 1353,
	5, 2139,
	-2, 3157,
	-1, 1354,
	5, 2140,
	-2, 3145,
	-1, 1382,
	5, 2175,
	-2, 3191,
	-1, 1383,
	5, 2176,
	-2, 3181,
	-1, 1384,
	5, 2177,
	609, 2177,
	-2, 3146,
	-1, 1385,
	5, 2178,
	609, 2178,
	-2, 3147,
	-1, 1423,
	662, 2685,
	-2, 2676,
	-1, 1424,
	662, 2686,
	-2, 2677,
	-1, 1532,
	203, 3079,
	566, 3079,
	644, 3079,
	664, 3079,
	-2, 0,
	-1, 1537,
	1, 902,
	665, 902,
	668, 902,
	-2, 1776,
	-1, 1584,
	1, 1771,
	665, 1771,
	668, 1771,
	-2, 1776,
	-1, 1686,
	392, 2650,
	454, 2650,
	504, 2650,
	654, 2650,
	-2, 2638,
	-1, 1694,
	203, 170,
	291, 170,
	357, 170,
	619, 170,
	-2, 3074,
	-1, 1695,
	203, 171,
	291, 171,
	357, 171,
	619, 171,
	-2, 2796,
	-1, 1696,
	203, 172,
	291, 172,
	357, 172,
	619, 172,
	-2, 2987,
	-1, 1702,
	666, 2650,
	-2, 2652,
	-1, 1705,
	25, 3011,
	241, 3011,
	-2, 0,
	-1, 1726,
	1, 1614,
	459, 1568,
	504, 1568,
	636, 1568,
	641, 1568,
	661, 1614,
	663, 1614,
	665, 1614,
	668, 1614,
	-2, 1919,
	-1, 1732,
	219, 1715,
	241, 1715,
	470, 1715,
	-2, 0,
	-1, 1800,
	46, 2648,
	-2, 1347,
	-1, 1807,
	1, 1614,
	661, 1614,
	663, 1614,
	665, 1614,
	668, 1614,
	-2, 1919,
	-1, 1810,
	436, 1384,
	608, 1384,
	-2, 482,
	-1, 1816,
	4, 1639,
	21, 1639,
	22, 1639,
	23, 1639,
	24, 1639,
	25, 1639,
	26, 1639,
	27, 1639,
	28, 1639,
	30, 1639,
	31, 1639,
	37, 1639,
	41, 1639,
	43, 1639,
	44, 1639,
	45, 1639,
	47, 1639,
	48, 1639,
	49, 1639,
	50, 1639,
	51, 1639,
	52, 1639,
	53, 1639,
	54, 1639,
	55, 1639,
	57, 1639,
	58, 1639,
	59, 1639,
	60, 1639,
	62, 1639,
	63, 1639,
	64, 1639,
	65, 1639,
	66, 1639,
	67, 1639,
	68, 1639,
	69, 1639,
	73, 1639,
	74, 1639,
	75, 1639,
	76, 1639,
	78, 1639,
	79, 1639,
	80, 1639,
	84, 1639,
	85, 1639,
	86, 1639,
	87, 1639,
	88, 1639,
	89, 1639,
	90, 1639,
	91, 1639,
	94, 1639,
	95, 1639,
	96, 1639,
	97, 1639,
	98, 1639,
	99, 1639,
	101, 1639,
	103, 1639,
	104, 1639,
	105, 1639,
	106, 1639,
	107, 1639,
	108, 1639,
	109, 1639,
	111, 1639,
	112, 1639,
	113, 1639,
	115, 1639,
	116, 1639,
	117, 1639,
	125, 1639,
	126, 1639,
	127, 1639,
	128, 1639,
	129, 1639,
	131, 1639,
	132, 1639,
	133, 1639,
	134, 1639,
	136, 1639,
	137, 1639,
	138, 1639,
	139, 1639,
	141, 1639,
	142, 1639,
	143, 1639,
	144, 1639,
	146, 1639,
	147, 1639,
	148, 1639,
	151, 1639,
	152, 1639,
	153, 1639,
	155, 1639,
	156, 1639,
	157, 1639,
	159, 1639,
	160, 1639,
	161, 1639,
	163, 1639,
	164, 1639,
	165, 1639,
	166, 1639,
	167, 1639,
	168, 1639,
	169, 1639,
	170, 1639,
	171, 1639,
	172, 1639,
	173, 1639,
	174, 1639,
	175, 1639,
	176, 1639,
	177, 1639,
	178, 1639,
	179, 1639,
	180, 1639,
	188, 1639,
	189, 1639,
	190, 1639,
	191, 1639,
	195, 1639,
	197, 1639,
	198, 1639,
	199, 1639,
	201, 1639,
	202, 1639,
	205, 1639,
	206, 1639,
	207, 1639,
	208, 1639,
	209, 1639,
	210, 1639,
	211, 1639,
	212, 1639,
	213, 1639,
	214, 1639,
	215, 1639,
	216, 1639,
	217, 1639,
	218, 1639,
	220, 1639,
	221, 1639,
	223, 1639,
	224, 1639,
	226, 1639,
	227, 1639,
	228, 1639,
	229, 1639,
	230, 1639,
	231, 1639,
	232, 1639,
	233, 1639,
	234, 1639,
	235, 1639,
	236, 1639,
	238, 1639,
	239, 1639,
	240, 1639,
	242, 1639,
	243, 1639,
	244, 1639,
	245, 1639,
	246, 1639,
	251, 1639,
	252, 1639,
	253, 1639,
	256, 1639,
	257, 1639,
	258, 1639,
	259, 1639,
	260, 1639,
	261, 1639,
	263, 1639,
	265, 1639,
	266, 1639,
	267, 1639,
	269, 1639,
	271, 1639,
	272, 1639,
	273, 1639,
	275, 1639,
	279, 1639,
	280, 1639,
	281, 1639,
	282, 1639,
	283, 1639,
	284, 1639,
	285, 1639,
	287, 1639,
	288, 1639,
	289, 1639,
	291, 1639,
	292, 1639,
	293, 1639,
	295, 1639,
	296, 1639,
	299, 1639,
	300, 1639,
	301, 1639,
	302, 1639,
	303, 1639,
	304, 1639,
	305, 1639,
	308, 1639,
	309, 1639,
	310, 1639,
	311, 1639,
	313, 1639,
	314, 1639,
	315, 1639,
	316, 1639,
	317, 1639,
	318, 1639,
	319, 1639,
	320, 1639,
	321, 1639,
	322, 1639,
	323, 1639,
	324, 1639,
	325, 1639,
	326, 1639,
	327, 1639,
	328, 1639,
	329, 1639,
	330, 1639,
	331, 1639,
	332, 1639,
	333, 1639,
	334, 1639,
	335, 1639,
	337, 1639,
	339, 1639,
	340, 1639,
	341, 1639,
	342, 1639,
	343, 1639,
	344, 1639,
	345, 1639,
	346, 1639,
	347, 1639,
	348, 1639,
	349, 1639,
	350, 1639,
	351, 1639,
	352, 1639,
	353, 1639,
	354, 1639,
	355, 1639,
	357, 1639,
	358, 1639,
	362, 1639,
	363, 1639,
	364, 1639,
	365, 1639,
	367, 1639,
	368, 1639,
	369, 1639,
	370, 1639,
	371, 1639,
	374, 1639,
	376, 1639,
	377, 1639,
	379, 1639,
	380, 1639,
	381, 1639,
	384, 1639,
	385, 1639,
	386, 1639,
	388, 1639,
	390, 1639,
	391, 1639,
	392, 1639,
	393, 1639,
	394, 1639,
	395, 1639,
	396, 1639,
	397, 1639,
	398, 1639,
	399, 1639,
	400, 1639,
	401, 1639,
	402, 1639,
	403, 1639,
	405, 1639,
	406, 1639,
	407, 1639,
	408, 1639,
	409, 1639,
	410, 1639,
	411, 1639,
	412, 1639,
	413, 1639,
	414, 1639,
	415, 1639,
	416, 1639,
	417, 1639,
	418, 1639,
	419, 1639,
	421, 1639,
	422, 1639,
	423, 1639,
	425, 1639,
	426, 1639,
	427, 1639,
	428, 1639,
	429, 1639,
	430, 1639,
	431, 1639,
	432, 1639,
	433, 1639,
	434, 1639,
	435, 1639,
	436, 1639,
	437, 1639,
	438, 1639,
	440, 1639,
	442, 1639,
	443, 1639,
	444, 1639,
	450, 1639,
	451, 1639,
	452, 1639,
	454, 1639,
	455, 1639,
	456, 1639,
	457, 1639,
	458, 1639,
	459, 1639,
	460, 1639,
	461, 1639,
	462, 1639,
	463, 1639,
	464, 1639,
	466, 1639,
	467, 1639,
	468, 1639,
	469, 1639,
	470, 1639,
	472, 1639,
	473, 1639,
	474, 1639,
	475, 1639,
	476, 1639,
	477, 1639,
	478, 1639,
	480, 1639,
	481, 1639,
	482, 1639,
	483, 1639,
	484, 1639,
	485, 1639,
	486, 1639,
	487, 1639,
	488, 1639,
	489, 1639,
	490, 1639,
	491, 1639,
	492, 1639,
	493, 1639,
	494, 1639,
	495, 1639,
	497, 1639,
	498, 1639,
	499, 1639,
	500, 1639,
	501, 1639,
	502, 1639,
	504, 1639,
	505, 1639,
	506, 1639,
	507, 1639,
	508, 1639,
	509, 1639,
	510, 1639,
	512, 1639,
	513, 1639,
	514, 1639,
	515, 1639,
	516, 1639,
	517, 1639,
	518, 1639,
	519, 1639,
	521, 1639,
	523, 1639,
	524, 1639,
	525, 1639,
	526, 1639,
	527, 1639,
	528, 1639,
	529, 1639,
	530, 1639,
	531, 1639,
	532, 1639,
	533, 1639,
	534, 1639,
	535, 1639,
	536, 1639,
	537, 1639,
	538, 1639,
	539, 1639,
	540, 1639,
	541, 1639,
	542, 1639,
	543, 1639,
	545, 1639,
	546, 1639,
	548, 1639,
	549, 1639,
	551, 1639,
	552, 1639,
	553, 1639,
	554, 1639,
	555, 1639,
	556, 1639,
	558, 1639,
	559, 1639,
	561, 1639,
	562, 1639,
	563, 1639,
	564, 1639,
	565, 1639,
	567, 1639,
	569, 1639,
	570, 1639,
	571, 1639,
	572, 1639,
	573, 1639,
	574, 1639,
	575, 1639,
	576, 1639,
	578, 1639,
	579, 1639,
	580, 1639,
	581, 1639,
	582, 1639,
	583, 1639,
	584, 1639,
	587, 1639,
	588, 1639,
	589, 1639,
	590, 1639,
	591, 1639,
	592, 1639,
	593, 1639,
	594, 1639,
	595, 1639,
	597, 1639,
	600, 1639,
	601, 1639,
	602, 1639,
	603, 1639,
	604, 1639,
	605, 1639,
	607, 1639,
	608, 1639,
	609, 1639,
	610, 1639,
	611, 1639,
	612, 1639,
	613, 1639,
	614, 1639,
	615, 1639,
	616, 1639,
	617, 1639,
	618, 1639,
	619, 1639,
	624, 1639,
	625, 1639,
	626, 1639,
	627, 1639,
	628, 1639,
	629, 1639,
	-2, 0,
	-1, 1839,
	1, 728,
	661, 728,
	663, 728,
	665, 728,
	668, 728,
	-2, 1890,
	-1, 1842,
	4, 3189,
	11, 3189,
	12, 3189,
	14, 3189,
	15, 3189,
	16, 3189,
	17, 3189,
	18, 3189,
	19, 3189,
	21, 3189,
	22, 3189,
	23, 3189,
	24, 3189,
	25, 3189,
	26, 3189,
	27, 3189,
	28, 3189,
	30, 3189,
	31, 3189,
	34, 3189,
	35, 3189,
	37, 3189,
	39, 3189,
	41, 3189,
	43, 3189,
	44, 3189,
	45, 3189,
	47, 3189,
	48, 3189,
	49, 3189,
	50, 3189,
	51, 3189,
	52, 3189,
	53, 3189,
	54, 3189,
	55, 3189,
	57, 3189,
	58, 3189,
	59, 3189,
	60, 3189,
	62, 3189,
	63, 3189,
	64, 3189,
	65, 3189,
	66, 3189,
	67, 3189,
	68, 3189,
	69, 3189,
	72, 3189,
	73, 3189,
	74, 3189,
	75, 3189,
	76, 3189,
	78, 3189,
	79, 3189,
	80, 3189,
	81, 3189,
	84, 3189,
	85, 3189,
	86, 3189,
	87, 3189,
	88, 3189,
	89, 3189,
	90, 3189,
	91, 3189,
	92, 3189,
	94, 3189,
	95, 3189,
	96, 3189,
	97, 3189,
	98, 3189,
	99, 3189,
	101, 3189,
	102, 3189,
	103, 3189,
	104, 3189,
	105, 3189,
	106, 3189,
	107, 3189,
	108, 3189,
	109, 3189,
	111, 3189,
	112, 3189,
	113, 3189,
	114, 3189,
	115, 3189,
	116, 3189,
	117, 3189,
	125, 3189,
	126, 3189,
	127, 3189,
	128, 3189,
	129, 3189,
	131, 3189,
	132, 3189,
	133, 3189,
	134, 3189,
	136, 3189,
	137, 3189,
	138, 3189,
	139, 3189,
	141, 3189,
	142, 3189,
	143, 3189,
	144, 3189,
	146, 3189,
	147, 3189,
	148, 3189,
	151, 3189,
	152, 3189,
	153, 3189,
	155, 3189,
	156, 3189,
	157, 3189,
	159, 3189,
	160, 3189,
	161, 3189,
	163, 3189,
	164, 3189,
	165, 3189,
	166, 3189,
	167, 3189,
	168, 3189,
	169, 3189,
	170, 3189,
	171, 3189,
	172, 3189,
	173, 3189,
	174, 3189,
	175, 3189,
	176, 3189,
	177, 3189,
	178, 3189,
	179, 3189,
	180, 3189,
	184, 3189,
	185, 3189,
	186, 3189,
	187, 3189,
	188, 3189,
	189, 3189,
	190, 3189,
	191, 3189,
	194, 3189,
	195, 3189,
	197, 3189,
	198, 3189,
	199, 3189,
	201, 3189,
	202, 3189,
	204, 3189,
	205, 3189,
	206, 3189,
	207, 3189,
	208, 3189,
	209, 3189,
	210, 3189,
	211, 3189,
	212, 3189,
	213, 3189,
	214, 3189,
	215, 3189,
	216, 3189,
	217, 3189,
	218, 3189,
	220, 3189,
	221, 3189,
	223, 3189,
	224, 3189,
	226, 3189,
	227, 3189,
	228, 3189,
	229, 3189,
	230, 3189,
	231, 3189,
	232, 3189,
	233, 3189,
	234, 3189,
	235, 3189,
	236, 3189,
	237, 3189,
	238, 3189,
	239, 3189,
	240, 3189,
	241, 3189,
	242, 3189,
	243, 3189,
	244, 3189,
	245, 3189,
	246, 3189,
	248, 3189,
	249, 3189,
	251, 3189,
	252, 3189,
	253, 3189,
	255, 3189,
	256, 3189,
	257, 3189,
	258, 3189,
	259, 3189,
	260, 3189,
	261, 3189,
	263, 3189,
	265, 3189,
	266, 3189,
	267, 3189,
	268, 3189,
	269, 3189,
	270, 3189,
	271, 3189,
	272, 3189,
	273, 3189,
	274, 3189,
	275, 3189,
	277, 3189,
	278, 3189,
	279, 3189,
	280, 3189,
	281, 3189,
	282, 3189,
	283, 3189,
	284, 3189,
	285, 3189,
	287, 3189,
	288, 3189,
	289, 3189,
	291, 3189,
	292, 3189,
	293, 3189,
	294, 3189,
	295, 3189,
	296, 3189,
	297, 3189,
	299, 3189,
	300, 3189,
	301, 3189,
	302, 3189,
	303, 3189,
	304, 3189,
	305, 3189,
	308, 3189,
	309, 3189,
	310, 3189,
	311, 3189,
	312, 3189,
	313, 3189,
	314, 3189,
	315, 3189,
	316, 3189,
	317, 3189,
	318, 3189,
	319, 3189,
	320, 3189,
	321, 3189,
	322, 3189,
	323, 3189,
	324, 3189,
	325, 3189,
	326, 3189,
	327, 3189,
	328, 3189,
	329, 3189,
	330, 3189,
	331, 3189,
	332, 3189,
	333, 3189,
	334, 3189,
	335, 3189,
	337, 3189,
	338, 3189,
	339, 3189,
	340, 3189,
	341, 3189,
	342, 3189,
	343, 3189,
	344, 3189,
	345, 3189,
	346, 3189,
	347, 3189,
	348, 3189,
	349, 3189,
	350, 3189,
	351, 3189,
	352, 3189,
	353, 3189,
	354, 3189,
	355, 3189,
	357, 3189,
	358, 3189,
	361, 3189,
	362, 3189,
	363, 3189,
	364, 3189,
	365, 3189,
	367, 3189,
	368, 3189,
	369, 3189,
	370, 3189,
	371, 3189,
	374, 3189,
	376, 3189,
	379, 3189,
	380, 3189,
	381, 3189,
	382, 3189,
	384, 3189,
	385, 3189,
	386, 3189,
	388, 3189,
	390, 3189,
	391, 3189,
	392, 3189,
	393, 3189,
	394, 3189,
	395, 3189,
	396, 3189,
	397, 3189,
	398, 3189,
	399, 3189,
	400, 3189,
	401, 3189,
	402, 3189,
	403, 3189,
	405, 3189,
	406, 3189,
	407, 3189,
	408, 3189,
	409, 3189,
	410, 3189,
	411, 3189,
	412, 3189,
	413, 3189,
	414, 3189,
	415, 3189,
	416, 3189,
	417, 3189,
	418, 3189,
	419, 3189,
	421, 3189,
	422, 3189,
	423, 3189,
	425, 3189,
	426, 3189,
	427, 3189,
	428, 3189,
	429, 3189,
	430, 3189,
	431, 3189,
	432, 3189,
	433, 3189,
	434, 3189,
	435, 3189,
	436, 3189,
	437, 3189,
	438, 3189,
	440, 3189,
	442, 3189,
	443, 3189,
	444, 3189,
	450, 3189,
	451, 3189,
	452, 3189,
	453, 3189,
	454, 3189,
	455, 3189,
	456, 3189,
	457, 3189,
	458, 3189,
	459, 3189,
	460, 3189,
	461, 3189,
	462, 3189,
	463, 3189,
	464, 3189,
	466, 3189,
	467, 3189,
	468, 3189,
	469, 3189,
	470, 3189,
	471, 3189,
	472, 3189,
	473, 3189,
	474, 3189,
	475, 3189,
	476, 3189,
	477, 3189,
	478, 3189,
	479, 3189,
	480, 3189,
	481, 3189,
	482, 3189,
	483, 3189,
	484, 3189,
	485, 3189,
	486, 3189,
	487, 3189,
	488, 3189,
	489, 3189,
	490, 3189,
	491, 3189,
	492, 3189,
	493, 3189,
	494, 3189,
	495, 3189,
	497, 3189,
	498, 3189,
	499, 3189,
	500, 3189,
	501, 3189,
	502, 3189,
	504, 3189,
	505, 3189,
	506, 3189,
	507, 3189,
	508, 3189,
	509, 3189,
	510, 3189,
	511, 3189,
	512, 3189,
	513, 3189,
	514, 3189,
	515, 3189,
	516, 3189,
	517, 3189,
	518, 3189,
	519, 3189,
	521, 3189,
	523, 3189,
	524, 3189,
	525, 3189,
	526, 3189,
	527, 3189,
	528, 3189,
	529, 3189,
	530, 3189,
	531, 3189,
	532, 3189,
	533, 3189,
	534, 3189,
	535, 3189,
	536, 3189,
	537, 3189,
	538, 3189,
	539, 3189,
	540, 3189,
	541, 3189,
	542, 3189,
	543, 3189,
	545, 3189,
	546, 3189,
	547, 3189,
	548, 3189,
	549, 3189,
	551, 3189,
	552, 3189,
	553, 3189,
	554, 3189,
	555, 3189,
	556, 3189,
	558, 3189,
	559, 3189,
	561, 3189,
	562, 3189,
	563, 3189,
	564, 3189,
	565, 3189,
	567, 3189,
	569, 3189,
	570, 3189,
	571, 3189,
	572, 3189,
	573, 3189,
	574, 3189,
	575, 3189,
	576, 3189,
	578, 3189,
	579, 3189,
	580, 3189,
	581, 3189,
	582, 3189,
	583, 3189,
	584, 3189,
	587, 3189,
	588, 3189,
	589, 3189,
	590, 3189,
	591, 3189,
	592, 3189,
	593, 3189,
	594, 3189,
	595, 3189,
	597, 3189,
	600, 3189,
	601, 3189,
	602, 3189,
	603, 3189,
	604, 3189,
	605, 3189,
	607, 3189,
	608, 3189,
	609, 3189,
	610, 3189,
	611, 3189,
	612, 3189,
	613, 3189,
	614, 3189,
	615, 3189,
	616, 3189,
	617, 3189,
	618, 3189,
	619, 3189,
	624, 3189,
	625, 3189,
	626, 3189,
	627, 3189,
	628, 3189,
	629, 3189,
	630, 3189,
	632, 3189,
	642, 3189,
	643, 3189,
	644, 3189,
	645, 3189,
	646, 3189,
	647, 3189,
	649, 3189,
	650, 3189,
	651, 3189,
	652, 3189,
	653, 3189,
	654, 3189,
	655, 3189,
	656, 3189,
	657, 3189,
	660, 3189,
	663, 3189,
	664, 3189,
	666, 3189,
	667, 3189,
	-2, 0,
	-1, 1847,
	203, 3032,
	566, 3032,
	644, 3032,
	664, 3032,
	-2, 0,
	-1, 1895,
	203, 1102,
	-2, 3022,
	-1, 1896,
	203, 1103,
	-2, 2804,
	-1, 1897,
	203, 1104,
	-2, 2973,
	-1, 1898,
	203, 1105,
	-2, 3102,
	-1, 1904,
	427, 1156,
	502, 1156,
	549, 1156,
	571, 1156,
	-2, 0,
	-1, 1915,
	1, 1715,
	241, 1715,
	661, 1715,
	663, 1715,
	665, 1715,
	668, 1715,
	-2, 0,
	-1, 1933,
	1, 1151,
	661, 1151,
	663, 1151,
	665, 1151,
	668, 1151,
	-2, 0,
	-1, 1934,
	1, 1195,
	661, 1195,
	663, 1195,
	665, 1195,
	668, 1195,
	-2, 0,
	-1, 1935,
	1, 1207,
	661, 1207,
	663, 1207,
	665, 1207,
	668, 1207,
	-2, 0,
	-1, 1938,
	1, 1160,
	661, 1160,
	663, 1160,
	665, 1160,
	668, 1160,
	-2, 0,
	-1, 1940,
	1, 1166,
	661, 1166,
	663, 1166,
	665, 1166,
	668, 1166,
	-2, 0,
	-1, 1943,
	1, 1162,
	661, 1162,
	663, 1162,
	665, 1162,
	668, 1162,
	-2, 0,
	-1, 1948,
	1, 1176,
	661, 1176,
	663, 1176,
	665, 1176,
	668, 1176,
	-2, 0,
	-1, 1985,
	1, 3011,
	661, 3011,
	663, 3011,
	664, 3011,
	665, 3011,
	668, 3011,
	-2, 0,
	-1, 1990,
	1, 1263,
	661, 1263,
	663, 1263,
	665, 1263,
	668, 1263,
	-2, 0,
	-1, 2010,
	183, 1933,
	196, 1933,
	298, 1933,
	372, 1933,
	-2, 1871,
	-1, 2112,
	162, 1892,
	183, 1892,
	196, 1892,
	262, 1892,
	298, 1892,
	372, 1892,
	383, 1892,
	585, 1892,
	-2, 2357,
	-1, 2173,
	663, 2532,
	-2, 0,
	-1, 2210,
	162, 1892,
	183, 1892,
	196, 1892,
	262, 1892,
	298, 1892,
	372, 1892,
	383, 1892,
	585, 1892,
	-2, 2033,
	-1, 2249,
	664, 2676,
	667, 2676,
	-2, 1290,
	-1, 2250,
	664, 2678,
	667, 2678,
	-2, 1291,
	-1, 2251,
	664, 2677,
	667, 2677,
	-2, 1292,
	-1, 2252,
	667, 2600,
	-2, 1293,
	-1, 2276,
	662, 2180,
	-2, 2168,
	-1, 2308,
	203, 3029,
	664, 3029,
	667, 3029,
	-2, 0,
	-1, 2359,
	1, 904,
	665, 904,
	668, 904,
	-2, 1776,
	-1, 2563,
	241, 324,
	-2, 2684,
	-1, 2564,
	241, 325,
	-2, 389,
	-1, 2683,
	1, 1153,
	661, 1153,
	663, 1153,
	665, 1153,
	668, 1153,
	-2, 0,
	-1, 2684,
	1, 1197,
	661, 1197,
	663, 1197,
	665, 1197,
	668, 1197,
	-2, 0,
	-1, 2685,
	1, 1209,
	661, 1209,
	663, 1209,
	665, 1209,
	668, 1209,
	-2, 0,
	-1, 2686,
	1, 1265,
	661, 1265,
	663, 1265,
	665, 1265,
	668, 1265,
	-2, 0,
	-1, 2728,
	1, 1178,
	661, 1178,
	663, 1178,
	665, 1178,
	668, 1178,
	-2, 0,
	-1, 2752,
	1, 1244,
	661, 1244,
	663, 1244,
	665, 1244,
	668, 1244,
	-2, 0,
	-1, 2802,
	477, 1960,
	478, 1960,
	-2, 2213,
	-1, 2835,
	14, 0,
	15, 0,
	16, 0,
	642, 0,
	643, 0,
	644, 0,
	-2, 2233,
	-1, 2836,
	14, 0,
	15, 0,
	16, 0,
	642, 0,
	643, 0,
	644, 0,
	-2, 2234,
	-1, 2837,
	102, 0,
	277, 0,
	278, 0,
	646, 0,
	647, 0,
	-2, 2235,
	-1, 2838,
	102, 0,
	277, 0,
	278, 0,
	646, 0,
	647, 0,
	-2, 2236,
	-1, 2839,
	102, 0,
	277, 0,
	278, 0,
	646, 0,
	647, 0,
	-2, 2237,
	-1, 2840,
	102, 0,
	277, 0,
	278, 0,
	646, 0,
	647, 0,
	-2, 2238,
	-1, 2841,
	102, 0,
	277, 0,
	278, 0,
	646, 0,
	647, 0,
	-2, 2239,
	-1, 2842,
	14, 0,
	15, 0,
	16, 0,
	642, 0,
	643, 0,
	644, 0,
	-2, 2240,
	-1, 2854,
	14, 0,
	15, 0,
	16, 0,
	642, 0,
	643, 0,
	644, 0,
	-2, 2252,
	-1, 2855,
	14, 0,
	15, 0,
	16, 0,
	642, 0,
	643, 0,
	644, 0,
	-2, 2253,
	-1, 2856,
	14, 0,
	15, 0,
	16, 0,
	642, 0,
	643, 0,
	644, 0,
	-2, 2254,
	-1, 2860,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	630, 0,
	645, 0,
	-2, 2261,
	-1, 2866,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	630, 0,
	645, 0,
	-2, 2265,
	-1, 2868,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	630, 0,
	645, 0,
	-2, 2273,
	-1, 2869,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	630, 0,
	645, 0,
	-2, 2274,
	-1, 2870,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	630, 0,
	645, 0,
	-2, 2275,
	-1, 2871,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	630, 0,
	645, 0,
	-2, 2276,
	-1, 3045,
	5, 2688,
	203, 2543,
	662, 2685,
	-2, 2676,
	-1, 3046,
	203, 2544,
	-2, 3118,
	-1, 3047,
	203, 2545,
	-2, 2900,
	-1, 3048,
	203, 2546,
	-2, 2767,
	-1, 3049,
	203, 2547,
	-2, 2832,
	-1, 3050,
	203, 2548,
	-2, 2885,
	-1, 3051,
	203, 2549,
	-2, 3025,
	-1, 3052,
	203, 2550,
	-2, 2340,
	-1, 3148,
	1, 2034,
	2, 2034,
	114, 2034,
	162, 2034,
	183, 2034,
	196, 2034,
	204, 2034,
	222, 2034,
	225, 2034,
	255, 2034,
	262, 2034,
	274, 2034,
	294, 2034,
	298, 2034,
	338, 2034,
	372, 2034,
	377, 2034,
	383, 2034,
	465, 2034,
	471, 2034,
	585, 2034,
	598, 2034,
	621, 2034,
	622, 2034,
	623, 2034,
	633, 2034,
	661, 2034,
	663, 2034,
	665, 2034,
	667, 2034,
	668, 2034,
	-2, 2033,
	-1, 3164,
	662, 2657,
	-2, 2671,
	-1, 3166,
	1, 406,
	621, 406,
	668, 406,
	-2, 1919,
	-1, 3204,
	662, 2179,
	-2, 2169,
	-1, 3235,
	38, 2688,
	135, 2688,
	644, 2688,
	660, 2688,
	663, 2688,
	664, 2688,
	667, 2688,
	-2, 2685,
	-1, 3236,
	38, 2689,
	135, 2689,
	644, 2689,
	660, 2689,
	663, 2689,
	664, 2689,
	667, 2689,
	-2, 2686,
	-1, 3466,
	1, 1614,
	459, 1568,
	504, 1568,
	636, 1568,
	641, 1568,
	661, 1614,
	663, 1614,
	665, 1614,
	668, 1614,
	-2, 1919,
	-1, 3628,
	1, 1248,
	661, 1248,
	663, 1248,
	665, 1248,
	668, 1248,
	-2, 0,
	-1, 3656,
	378, 1963,
	-2, 3178,
	-1, 3657,
	378, 1964,
	-2, 3008,
	-1, 3661,
	477, 2611,
	478, 2611,
	-2, 2338,
	-1, 3662,
	477, 2615,
	478, 2615,
	-2, 2339,
	-1, 3663,
	477, 2612,
	478, 2612,
	-2, 2338,
	-1, 3664,
	477, 2616,
	478, 2616,
	-2, 2339,
	-1, 3678,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	630, 0,
	645, 0,
	-2, 2263,
	-1, 3679,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	630, 0,
	645, 0,
	-2, 2267,
	-1, 3685,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	630, 0,
	645, 0,
	-2, 2269,
	-1, 3934,
	1, 899,
	661, 899,
	663, 899,
	665, 899,
	668, 899,
	-2, 1776,
	-1, 4161,
	46, 2648,
	-2, 1348,
	-1, 4166,
	1, 1614,
	661, 1614,
	663, 1614,
	665, 1614,
	668, 1614,
	-2, 1919,
	-1, 4281,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	630, 0,
	645, 0,
	-2, 2271,
	-1, 4288,
	268, 0,
	270, 0,
	361, 0,
	-2, 2290,
	-1, 4356,
	14, 0,
	15, 0,
	16, 0,
	642, 0,
	643, 0,
	644, 0,
	-2, 2319,
	-1, 4357,
	14, 0,
	15, 0,
	16, 0,
	642, 0,
	643, 0,
	644, 0,
	-2, 2320,
	-1, 4358,
	14, 0,
	15, 0,
	16, 0,
	642, 0,
	643, 0,
	644, 0,
	-2, 2321,
	-1, 4362,
	14, 0,
	15, 0,
	16, 0,
	642, 0,
	643, 0,
	644, 0,
	-2, 2325,
	-1, 4363,
	14, 0,
	15, 0,
	16, 0,
	642, 0,
	643, 0,
	644, 0,
	-2, 2326,
	-1, 4364,
	14, 0,
	15, 0,
	16, 0,
	642, 0,
	643, 0,
	644, 0,
	-2, 2327,
	-1, 4416,
	662, 2658,
	-2, 2672,
	-1, 4661,
	664, 3296,
	-2, 1845,
	-1, 4720,
	268, 0,
	270, 0,
	361, 0,
	-2, 2291,
	-1, 4723,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	630, 0,
	645, 0,
	-2, 2294,
	-1, 4724,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	630, 0,
	645, 0,
	-2, 2296,
	-1, 4854,
	664, 2673,
	-2, 1649,
	-1, 5030,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	630, 0,
	645, 0,
	-2, 2295,
	-1, 5031,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	630, 0,
	645, 0,
	-2, 2297,
	-1, 5042,
	268, 0,
	-2, 2330,
	-1, 5246,
	268, 0,
	-2, 2331,
	-1, 5479,
	54, 0,
	237, 0,
	297, 0,
	511, 0,
	630, 0,
	645, 0,
	-2, 3141,
}

const sqlPrivate = 57344

const sqlLast = 163069

var sqlAct = [...]int16{
	317, 5644, 5410, 5698, 1513, 5677, 4148, 5609, 3424, 3541,
	3818, 5550, 5668, 5527, 5300, 5534, 1038, 6, 5478, 5292,
	5107, 5465, 5492, 5623, 5343, 4, 1243, 203, 5409, 1742,
	1039, 10, 5421, 5361, 3386, 2604, 4147, 5448, 2560, 5424,
	5493, 4633, 5494, 5214, 5440, 1416, 5191, 5400, 5559, 3294,
	4703, 1569, 2419, 5490, 5178, 5250, 1708, 5164, 5477, 4850,
	4987, 4982, 4976, 4945, 4321, 4273, 4910, 1292, 1427, 5112,
	5051, 3961, 2812, 3891, 5017, 2216, 4653, 2390, 4645, 5197,
	4184, 5328, 4556, 3077, 1510, 3670, 812, 3510, 962, 4851,
	1865, 4083, 2655, 3228, 2317, 4831, 2883, 2263, 3561, 1235,
	2019, 2653, 4992, 4178, 3964, 3295, 4616, 2822, 1504, 4137,
	4406, 1406, 2630, 2341, 4599, 3967, 887, 962, 4132, 4601,
	5047, 1590, 4213, 4033, 2813, 3530, 3953, 4211, 3498, 3525,
	3948, 4136, 1291, 3527, 4117, 203, 4139, 4129, 2617, 1683,
	4110, 4109, 3425, 3949, 3178, 3402, 3799, 4419, 824, 2428,
	3841, 3950, 4759, 2651, 3833, 4702, 3594, 3867, 3556, 3542,
	2185, 1042, 3824, 3822, 2530, 3415, 2549, 2547, 1863, 3473,
	5535, 3988, 2440, 2478, 1738, 4130, 1737, 2245, 3149, 3140,
	3141, 3858, 3798, 2182, 2819, 4383, 2896, 2159, 925, 5251,
	2120, 1505, 3874, 2090, 3654, 3234, 1802, 2601, 1033, 1407,
	2961, 1508, 957, 3435, 2548, 883, 2528, 3555, 2505, 2524,
	2509, 311, 2963, 1912, 2501, 1296, 2407, 3511, 2411, 1301,
	1584, 2339, 1552, 1480, 1497, 3227, 3074, 3226, 2952, 3184,
	2880, 2186, 2389, 1483, 310, 2801, 2784, 1490, 2386, 2782,
	1571, 3179, 3121, 1710, 1840, 1798, 3535, 1805, 2533, 3319,
	860, 2202, 2600, 5678, 3320, 3143, 2379, 1115, 1567, 5362,
	5445, 3280, 963, 1539, 964, 4140, 1486, 1460, 1494, 125,
	1445, 2154, 1457, 3130, 2955, 1264, 1389, 2195, 1424, 2933,
	3041, 3089, 1410, 3007, 2205, 2104, 2020, 903, 214, 2021,
	215, 963, 2783, 964, 1948, 868, 1246, 2785, 2698, 968,
	2557, 1831, 1012, 1933, 879, 129, 1767, 115, 1838, 2538,
	5551, 843, 799, 1693, 5610, 1564, 822, 1277, 817, 51,
	1412, 1387, 971, 50, 48, 39, 37, 35, 968, 2026,
	813, 3708, 826, 1583, 2001, 1748, 1137, 952, 4397, 3702,
	1741, 4398, 2319, 2319, 1939, 1422, 5714, 3820, 5687, 2319,
	3120, 971, 1013, 5701, 2319, 5685, 5684, 4090, 2319, 3120,
	3120, 2319, 896, 899, 3892, 5643, 5488, 2036, 2037, 5111,
	2069, 2070, 2071, 2080, 2081, 2082, 5641, 5581, 5536, 5518,
	5111, 2569, 5537, 3120, 5516, 5513, 5071, 5487, 3120, 5514,
	2073, 2067, 5510, 4193, 5475, 5070, 5511, 5474, 2569, 2039,
	5473, 2569, 5463, 5461, 3566, 5452, 5111, 5111, 2351, 5111,
	2086, 5451, 5419, 5383, 5376, 5111, 5111, 3195, 3120, 5375,
	5366, 5342, 5339, 3120, 2569, 2569, 5111, 5321, 2092, 5248,
	5228, 4935, 5193, 3195, 4678, 5130, 4475, 2038, 5129, 2569,
	1404, 5118, 2569, 5117, 5079, 2569, 5110, 5111, 2058, 5076,
	5111, 5069, 5075, 5074, 1548, 5058, 5032, 5002, 2055, 2569,
	3195, 3566, 4970, 4969, 4905, 4878, 4090, 4795, 3120, 3120,
	1228, 4774, 4722, 4669, 4663, 4775, 3195, 4206, 4206, 1548,
	4613, 4506, 1239, 1875, 4614, 4507, 1240, 2348, 2652, 1856,
	4194, 4474, 1218, 4412, 1217, 4475, 2348, 4413, 4410, 4390,
	4305, 4301, 4411, 3120, 2569, 3120, 108, 2605, 4205, 3911,
	3914, 2351, 4206, 4387, 3915, 3905, 3817, 3884, 1239, 3815,
	3120, 1799, 3220, 3816, 3810, 1390, 1390, 3809, 3120, 3760,
	3758, 3120, 3750, 3761, 3759, 3748, 3751, 3190, 1750, 3120,
	2061, 2062, 2063, 2064, 3719, 1442, 4090, 1234, 3120, 3717,
	2044, 3503, 2348, 3565, 3552, 3718, 3551, 3566, 2640, 1299,
	2640, 3259, 3194, 3176, 3168, 3120, 3195, 3120, 2569, 3119,
	3091, 2569, 2639, 3120, 1452, 2958, 2640, 1393, 2351, 1394,
	3669, 2351, 3120, 5384, 5252, 5243, 275, 5231, 3566, 1034,
	4387, 3090, 1391, 2077, 4980, 4935, 2348, 2087, 4879, 4678,
	4615, 4608, 3393, 2433, 2066, 2068, 3279, 2365, 2568, 3270,
	2345, 3503, 4079, 2318, 3412, 3185, 2180, 86, 2348, 1037,
	1036, 2332, 1443, 2351, 2083, 1735, 2084, 4524, 4276, 4243,
	2203, 2517, 4195, 2053, 2054, 1914, 87, 3160, 3159, 3158,
	277, 1762, 3157, 3156, 5503, 1395, 1443, 1392, 1227, 2036,
	2037, 275, 4196, 2075, 92, 1226, 1225, 1224, 1223, 3538,
	1222, 1221, 1220, 1216, 1215, 1214, 1213, 1212, 2059, 1211,
	1210, 1209, 1208, 1207, 1206, 2959, 3620, 1750, 1205, 1204,
	1203, 2039, 1202, 1750, 1201, 1200, 1199, 3769, 3770, 1198,
	3787, 3788, 3789, 276, 1197, 1196, 1195, 101, 1194, 1181,
	1113, 1112, 1111, 1110, 1109, 277, 1108, 1107, 1106, 1105,
	4718, 1104, 1103, 269, 1102, 1101, 1100, 2085, 1099, 2038,
	1749, 1098, 270, 3769, 3770, 1097, 3787, 3788, 3789, 1096,
	1095, 1094, 179, 1093, 1092, 2320, 2320, 1091, 2074, 1090,
	1040, 86, 2320, 53, 52, 1089, 1088, 2320, 1087, 2089,
	1086, 2320, 216, 56, 2320, 124, 1085, 1084, 276, 1083,
	87, 108, 121, 2960, 80, 2957, 3120, 1082, 3784, 1081,
	1080, 1079, 1078, 1077, 1076, 3769, 3770, 1075, 92, 1064,
	1063, 1062, 1057, 1056, 1049, 1048, 1047, 1032, 1031, 74,
	1030, 988, 3769, 3770, 987, 986, 55, 985, 177, 984,
	1298, 975, 3707, 974, 3784, 973, 972, 934, 933, 2065,
	894, 893, 892, 874, 305, 304, 303, 216, 54, 302,
	4779, 101, 301, 300, 299, 298, 297, 109, 275, 296,
	2348, 295, 2044, 294, 293, 2060, 292, 1419, 275, 291,
	1275, 290, 170, 289, 1756, 288, 287, 286, 2720, 57,
	75, 2348, 2036, 2037, 285, 284, 3784, 283, 282, 58,
	281, 1515, 1301, 280, 64, 279, 278, 2078, 4734, 81,
	3775, 4994, 1761, 4445, 4402, 3287, 4247, 56, 4207, 124,
	3870, 1879, 277, 3813, 2039, 108, 121, 3730, 1741, 1301,
	1301, 1301, 277, 3713, 76, 3704, 3622, 3597, 3483, 3199,
	3165, 1444, 3147, 2091, 2990, 2988, 3775, 2774, 2348, 3287,
	2974, 2162, 2972, 2348, 1750, 1454, 2348, 2348, 2161, 2392,
	2350, 5502, 2038, 2229, 3503, 3520, 2162, 3090, 3814, 2206,
	59, 2131, 2122, 2161, 2002, 276, 1744, 2962, 1593, 1560,
	2351, 3246, 1426, 1301, 3791, 276, 1713, 2348, 2165, 1301,
	1301, 109, 2345, 1515, 4193, 269, 2318, 1726, 3775, 2777,
	2033, 1860, 1941, 2160, 270, 269, 1556, 1557, 1558, 5234,
	5499, 5476, 5460, 1443, 270, 3775, 5347, 275, 1301, 2348,
	1301, 5240, 1301, 275, 1543, 5046, 2076, 113, 3785, 5232,
	1713, 5102, 5255, 5000, 216, 2122, 3769, 3770, 2050, 2051,
	2057, 2079, 2056, 2052, 216, 2049, 2047, 2048, 2040, 2041,
	2042, 2043, 2045, 2046, 1515, 4979, 4804, 4757, 1807, 4744,
	275, 4756, 4750, 4743, 3785, 4749, 3769, 3770, 4748, 4741,
	1543, 277, 4740, 77, 3090, 2044, 1713, 277, 1443, 4738,
	4733, 4730, 1739, 1713, 4729, 4612, 212, 4626, 116, 4607,
	4449, 120, 1301, 1703, 1301, 4448, 1521, 1698, 4512, 1713,
	4447, 4415, 4377, 203, 203, 4376, 4375, 4297, 1301, 2089,
	1301, 4292, 2956, 3865, 277, 1755, 3785, 3806, 1418, 3797,
	3769, 3770, 3768, 275, 276, 3765, 3764, 1535, 1489, 1493,
	276, 1041, 3285, 3785, 3762, 3757, 3756, 170, 4996, 3755,
	1501, 3752, 3749, 1537, 269, 2089, 3208, 2129, 3729, 3712,
	269, 113, 3705, 270, 3703, 2123, 3553, 2121, 1420, 270,
	3148, 1713, 2945, 2033, 1403, 1812, 1815, 276, 2032, 60,
	3769, 3770, 2620, 5707, 2576, 275, 1586, 277, 1680, 1685,
	5631, 1834, 1301, 216, 5630, 1301, 63, 269, 2124, 216,
	5549, 66, 2574, 1724, 5547, 3786, 270, 2089, 1242, 1428,
	4323, 78, 3769, 3770, 5411, 175, 1690, 1574, 1575, 65,
	212, 4627, 116, 4522, 2089, 120, 5326, 968, 5312, 3775,
	2892, 61, 218, 1529, 5308, 178, 3537, 5307, 5306, 277,
	276, 3786, 1563, 62, 5286, 1736, 3522, 5285, 5283, 5254,
	971, 5253, 5226, 2886, 5212, 5209, 5208, 275, 1688, 3775,
	269, 5189, 5188, 1800, 275, 69, 5126, 5097, 5044, 270,
	5027, 170, 1566, 213, 5026, 1720, 1576, 1577, 217, 4965,
	4961, 3811, 3284, 1880, 2089, 1843, 1845, 4958, 176, 4936,
	4755, 4679, 276, 3786, 1818, 4510, 4509, 4490, 4489, 1035,
	4487, 3284, 1301, 1301, 1301, 1301, 1301, 1301, 1301, 1301,
	3786, 277, 269, 3775, 3859, 2183, 3284, 4393, 277, 4380,
	4287, 270, 2109, 4208, 4170, 4160, 4059, 3999, 3966, 1841,
	3899, 3734, 3733, 2036, 2037, 1301, 3728, 1543, 3694, 175,
	3897, 1301, 2042, 2043, 2045, 2046, 3497, 3785, 3495, 79,
	4881, 216, 3312, 2168, 2167, 1240, 218, 2067, 2166, 2163,
	2155, 2153, 3206, 3775, 276, 2039, 3205, 2011, 3781, 3782,
	3783, 276, 3162, 3155, 3118, 3780, 3778, 3779, 3771, 3772,
	3773, 3774, 3776, 3777, 269, 4627, 2970, 2108, 275, 2323,
	2228, 269, 275, 270, 2092, 3775, 2184, 213, 2177, 2176,
	270, 2175, 217, 2038, 3781, 3782, 3783, 2174, 2111, 2173,
	1957, 3780, 3778, 3779, 3771, 3772, 3773, 3774, 3776, 3777,
	2172, 2171, 2170, 216, 1885, 275, 3, 2169, 2089, 2150,
	216, 3785, 2007, 4995, 2149, 2148, 2147, 2146, 1855, 2145,
	2144, 2143, 277, 2142, 2141, 2140, 277, 1301, 1301, 1301,
	2139, 2138, 2137, 1301, 1874, 2136, 2135, 46, 2089, 2124,
	1424, 2110, 1424, 3780, 3778, 3779, 3771, 3772, 3773, 3774,
	3776, 3777, 2107, 2102, 1528, 1449, 1832, 1593, 3521, 277,
	3780, 3778, 3779, 3771, 3772, 3773, 3774, 3776, 3777, 1301,
	203, 1438, 2251, 1515, 5257, 276, 5256, 4968, 4800, 276,
	2281, 2251, 4726, 1515, 4444, 275, 1515, 1713, 2232, 1905,
	4409, 4396, 2089, 3785, 3786, 269, 2044, 2034, 3716, 269,
	3197, 3153, 1837, 5072, 270, 1942, 4802, 1422, 270, 1422,
	4443, 2123, 276, 3895, 2105, 4199, 2192, 2012, 2224, 3769,
	3770, 4609, 1570, 2040, 2041, 2042, 2043, 2045, 2046, 1553,
	2237, 4002, 269, 3387, 216, 5622, 5316, 5309, 216, 277,
	2003, 270, 1555, 2036, 2037, 4999, 1570, 2385, 1570, 2008,
	2066, 2068, 2244, 1515, 1570, 4921, 4920, 2259, 2016, 1301,
	4919, 4918, 1218, 2015, 1217, 4917, 4880, 2310, 2164, 2239,
	2313, 216, 1570, 3862, 2089, 2039, 5495, 2238, 3786, 2010,
	275, 2377, 2376, 1301, 1240, 1570, 2385, 1570, 2189, 2190,
	4781, 1593, 276, 4686, 4685, 2989, 2987, 2029, 2030, 4684,
	4683, 2973, 4682, 2971, 2213, 2330, 4681, 4680, 1568, 2491,
	3338, 2335, 269, 2038, 2059, 2337, 4476, 4400, 4399, 2422,
	1554, 270, 2342, 4210, 4209, 4092, 2344, 4091, 4088, 4630,
	2347, 5577, 5235, 2383, 277, 5575, 1548, 2353, 5198, 1548,
	2360, 5491, 2357, 2156, 2157, 2206, 2252, 4274, 2254, 2162,
	2005, 216, 5233, 2371, 3433, 2252, 2161, 2254, 2304, 4547,
	3786, 2145, 2234, 4049, 1543, 3778, 3779, 3771, 3772, 3773,
	3774, 3776, 3777, 2356, 1390, 2264, 2958, 3754, 2236, 2145,
	3753, 5101, 275, 968, 2233, 1904, 3676, 276, 3323, 2204,
	1551, 4505, 968, 3968, 2133, 2089, 5278, 3771, 3772, 3773,
	3774, 3776, 3777, 1192, 1548, 1958, 971, 269, 4150, 1913,
	4149, 1240, 2380, 5279, 2605, 971, 270, 4470, 5192, 4471,
	1549, 5279, 3820, 5524, 2211, 4977, 3562, 2214, 4118, 4925,
	1914, 2514, 2551, 4606, 4620, 4553, 277, 4544, 4515, 2333,
	2181, 2550, 2672, 4238, 3932, 2742, 216, 2953, 2649, 2584,
	3779, 3771, 3772, 3773, 3774, 3776, 3777, 5048, 4325, 1193,
	2208, 2510, 3722, 2223, 1713, 1713, 5669, 2222, 2221, 2219,
	2218, 2217, 4865, 5690, 5500, 1593, 2959, 3400, 1549, 5121,
	4862, 2060, 5093, 2359, 1836, 2621, 2490, 3204, 2178, 276,
	4167, 2489, 2260, 3321, 2130, 4481, 2158, 3389, 2613, 2515,
	1811, 1713, 2497, 3773, 3774, 3776, 3777, 1731, 1524, 269,
	1485, 2526, 3409, 5515, 1402, 5512, 4897, 4893, 270, 4189,
	3406, 3404, 5301, 2355, 4983, 5418, 1889, 3971, 4500, 3534,
	1713, 1868, 1837, 3771, 3772, 3773, 3774, 3776, 3777, 4101,
	2382, 5578, 5124, 5120, 5099, 4268, 3596, 2035, 216, 2091,
	5579, 1545, 5501, 1245, 2561, 2566, 4063, 3936, 5153, 2500,
	4566, 3475, 4867, 2500, 2960, 1781, 2957, 3260, 2500, 5157,
	2486, 1026, 2495, 1190, 1955, 1713, 1538, 1713, 2506, 1713,
	2534, 2381, 2397, 1774, 2398, 1188, 1186, 5700, 932, 929,
	3283, 5317, 1555, 2734, 2405, 2406, 5614, 1713, 1713, 2378,
	5146, 5556, 2372, 5132, 2732, 3297, 1956, 3281, 4928, 1545,
	1177, 1713, 4927, 2399, 2400, 2644, 3283, 1733, 5229, 4564,
	2403, 2404, 3938, 1713, 4563, 4555, 1713, 1713, 1713, 1713,
	1713, 2439, 2427, 3281, 1244, 4530, 4565, 4529, 4527, 1550,
	4526, 4514, 2792, 4473, 4472, 4107, 4106, 4051, 3883, 1555,
	3727, 3726, 2251, 2048, 2040, 2041, 2042, 2043, 2045, 2046,
	2673, 2555, 3725, 3724, 2553, 2554, 5169, 1834, 2433, 2632,
	1554, 2632, 2633, 3896, 2609, 1301, 3680, 968, 2498, 2461,
	2483, 4001, 4882, 3431, 3430, 4084, 1954, 3411, 1027, 3399,
	3391, 4484, 3380, 3379, 3367, 2567, 3356, 1550, 3354, 1419,
	971, 1419, 1546, 3349, 4861, 2614, 2790, 3348, 2535, 3328,
	3327, 3288, 1547, 2670, 1549, 2627, 1301, 3177, 2512, 2511,
	1887, 2867, 4863, 5671, 5670, 2261, 2009, 1554, 3300, 5122,
	4610, 2482, 5094, 3003, 3002, 2479, 2496, 2824, 2962, 866,
	3531, 2179, 2504, 2647, 2431, 4081, 5025, 1238, 2679, 1024,
	1824, 1023, 1823, 1301, 866, 1301, 2540, 4047, 2539, 2540,
	1546, 2539, 1301, 2543, 4080, 1301, 2657, 2281, 2281, 1593,
	1547, 1301, 1301, 1301, 1301, 1301, 1301, 1301, 1301, 1301,
	1301, 1301, 1301, 1301, 1301, 1301, 1301, 1301, 1301, 1301,
	1301, 1301, 1301, 1301, 1301, 1301, 1301, 1301, 1301, 1301,
	1301, 1301, 1301, 1301, 1301, 1301, 1301, 2581, 1301, 3968,
	1301, 1301, 1301, 1301, 1836, 2624, 2637, 2588, 1841, 2635,
	1841, 2499, 3198, 2551, 2605, 2499, 2252, 5615, 2254, 2704,
	2499, 2776, 5557, 2792, 4812, 1785, 1301, 3344, 2664, 3325,
	1301, 1301, 2753, 2616, 1240, 1545, 1240, 1237, 1301, 4823,
	2745, 2794, 1301, 1471, 1301, 1301, 2766, 2629, 1776, 2691,
	2781, 2763, 1593, 968, 2663, 3777, 1572, 1573, 1301, 1301,
	1301, 1301, 2791, 2956, 1301, 1301, 1301, 1301, 1301, 1301,
	1301, 1301, 1529, 2641, 4240, 2642, 971, 3342, 3267, 2046,
	2387, 2388, 1572, 1573, 1822, 2882, 1821, 2790, 1572, 1573,
	1301, 1301, 1301, 1301, 1301, 1301, 1301, 1301, 1301, 923,
	1301, 2194, 5617, 1548, 2603, 1301, 1572, 1573, 4086, 1734,
	2772, 1183, 4822, 2934, 2935, 2668, 2000, 1424, 2953, 2387,
	2388, 1572, 1573, 1550, 1593, 1906, 5170, 2934, 2950, 2683,
	1418, 3214, 1418, 1424, 4048, 3183, 2694, 1793, 3299, 1882,
	5168, 2705, 1937, 2493, 2789, 5294, 3378, 1777, 5166, 1301,
	1593, 4864, 2820, 2821, 2998, 5156, 4085, 1974, 1239, 2882,
	3569, 1548, 3368, 1953, 3167, 2728, 811, 2004, 2765, 1970,
	1420, 2692, 1420, 3044, 3044, 3058, 2788, 2934, 2818, 865,
	3078, 3080, 1515, 2806, 1422, 2805, 1546, 2817, 3088, 5578,
	1520, 2198, 3615, 806, 865, 1976, 1547, 3311, 2740, 3192,
	1422, 5165, 3370, 2726, 3652, 1937, 3187, 5618, 5177, 203,
	1029, 1028, 2890, 2541, 2432, 3667, 1914, 2684, 2878, 2888,
	1914, 921, 2898, 3408, 2780, 2778, 2793, 2786, 5497, 2779,
	1902, 5167, 3163, 1515, 2949, 1218, 5024, 2809, 1218, 1218,
	2810, 2811, 2201, 3935, 3236, 2688, 2429, 3263, 2682, 2536,
	2876, 4497, 5647, 2791, 3372, 5616, 1527, 2014, 2542, 3407,
	3369, 2196, 3416, 4511, 1936, 1883, 3191, 3405, 3403, 3135,
	3265, 4591, 1515, 1515, 3310, 2634, 3254, 2962, 5296, 3127,
	1934, 2199, 4159, 4252, 4251, 2425, 2685, 2544, 3000, 3282,
	3617, 3360, 1806, 3001, 4082, 2213, 3004, 1240, 3005, 3006,
	3371, 5679, 5626, 867, 3298, 4314, 1747, 1240, 1754, 2894,
	1760, 1240, 1888, 1593, 3266, 1073, 3216, 3219, 867, 2518,
	2430, 5269, 2864, 2947, 2525, 2197, 5268, 1936, 5620, 3324,
	4926, 930, 4528, 4592, 4525, 2789, 3264, 4019, 2537, 4454,
	4859, 2752, 4453, 930, 1185, 2749, 930, 930, 3241, 1935,
	2733, 2762, 2426, 1804, 3245, 4311, 1390, 3255, 3126, 3180,
	1236, 2731, 2281, 3666, 3835, 4452, 4438, 3941, 3256, 4811,
	3210, 3053, 3040, 3069, 3249, 3082, 3233, 3084, 4437, 4495,
	1854, 3377, 1859, 4590, 4436, 968, 1543, 968, 4244, 2433,
	3152, 3116, 3117, 3132, 3133, 3128, 1873, 1548, 1878, 4020,
	3200, 4113, 1240, 2164, 2872, 3186, 2750, 3134, 971, 3139,
	971, 4105, 3145, 3146, 3257, 2211, 2224, 1432, 3211, 3225,
	5498, 4045, 3410, 3213, 3355, 3347, 1971, 3181, 2873, 1886,
	3326, 1168, 2573, 2572, 1434, 2874, 2751, 1950, 1593, 2879,
	968, 4010, 3289, 4312, 3274, 2383, 2383, 2519, 1784, 4018,
	1713, 3189, 5590, 2773, 3470, 5601, 1232, 1303, 2200, 922,
	5600, 3252, 1429, 971, 5528, 2431, 1470, 1940, 2764, 3175,
	3251, 2690, 5649, 1515, 3207, 3239, 3212, 3466, 2454, 2962,
	3182, 5564, 2156, 2157, 4708, 2436, 4707, 3428, 3248, 4245,
	1489, 4114, 1493, 3691, 1301, 1301, 3244, 1301, 4941, 3258,
	3286, 4111, 3218, 4011, 3138, 2862, 3221, 4846, 3250, 2865,
	1435, 4187, 3345, 4186, 3222, 2441, 3471, 924, 3625, 2036,
	2037, 920, 3632, 3243, 1810, 3689, 5380, 3659, 3660, 1515,
	2036, 2037, 3330, 3509, 3506, 1998, 5496, 4043, 4041, 1436,
	2455, 2445, 2319, 2067, 3315, 4839, 5619, 2437, 3261, 3501,
	3401, 2039, 2546, 4009, 2067, 1169, 5395, 3331, 3329, 3385,
	3955, 1713, 2039, 5085, 4857, 2861, 3469, 5467, 4042, 5468,
	807, 4040, 3346, 1713, 5295, 1713, 5624, 1972, 4039, 5302,
	2092, 1713, 4860, 4036, 1433, 3834, 203, 3682, 3273, 2038,
	2453, 2092, 1713, 1713, 3388, 3302, 3305, 2435, 3292, 4186,
	2038, 1806, 2442, 4840, 3545, 4086, 3518, 3275, 3276, 976,
	3375, 3277, 3278, 3417, 2545, 3381, 3557, 2962, 3572, 3573,
	1515, 3560, 1515, 3559, 3336, 3337, 3339, 3340, 3341, 3343,
	3580, 3581, 3582, 3583, 3584, 3478, 983, 3351, 3983, 3937,
	3480, 1968, 3432, 864, 3635, 1301, 2875, 3467, 3468, 2494,
	3364, 3365, 2510, 1346, 1915, 1732, 2877, 1447, 3374, 1184,
	4573, 2881, 808, 3563, 3373, 3481, 4955, 3283, 2151, 3383,
	4571, 3390, 3513, 2492, 3397, 5563, 1419, 1713, 2727, 3686,
	3893, 2515, 4096, 3579, 3303, 1973, 2522, 1884, 5019, 2480,
	2515, 5588, 1419, 3166, 2485, 5625, 4704, 1969, 5542, 3982,
	968, 3421, 2044, 2423, 3598, 2889, 3599, 3422, 3423, 5543,
	3687, 5037, 3989, 2044, 3692, 1174, 1173, 809, 1301, 810,
	2446, 1975, 5429, 971, 1301, 1301, 3592, 3554, 4899, 3476,
	4496, 3567, 5378, 1074, 5645, 1901, 1903, 5627, 3574, 1301,
	3575, 2220, 4858, 3564, 2541, 2432, 1065, 2508, 2520, 3570,
	832, 2687, 4112, 2101, 2681, 2944, 2066, 2068, 3549, 4575,
	2433, 1526, 2013, 4044, 1170, 4789, 3502, 2066, 2068, 3991,
	2487, 4573, 4790, 1066, 3732, 3131, 3920, 2507, 2198, 2863,
	5379, 4571, 1301, 1301, 3517, 5650, 3956, 3144, 1301, 2542,
	1239, 3634, 2447, 2448, 4574, 4327, 5633, 3637, 2521, 3639,
	3540, 1301, 1301, 4967, 1841, 3550, 4693, 1301, 1301, 4931,
	3548, 4799, 3547, 1301, 3600, 3529, 2502, 2481, 4577, 2443,
	2059, 4439, 1430, 3589, 3631, 1294, 1453, 4835, 1451, 2201,
	4709, 2059, 4270, 3650, 4836, 4788, 3591, 5344, 5018, 3990,
	3605, 1920, 3607, 5435, 3609, 4841, 3611, 3612, 3129, 5360,
	2194, 2430, 3606, 5160, 3608, 5211, 3610, 4625, 1301, 1301,
	1301, 2024, 4930, 1050, 1301, 3604, 3476, 2444, 2199, 3621,
	4575, 4929, 4651, 4174, 1301, 4029, 4027, 5529, 3909, 977,
	978, 3358, 3683, 2503, 1431, 5220, 3174, 3384, 4838, 2599,
	1055, 1301, 2191, 5337, 3715, 1450, 5562, 3647, 1441, 1171,
	798, 2089, 2739, 2023, 4956, 4574, 2023, 4842, 4753, 2512,
	2511, 3640, 2089, 4223, 3642, 4366, 3658, 1418, 4705, 2018,
	2808, 3688, 2434, 2373, 5655, 5119, 3875, 5065, 4221, 4099,
	1172, 3690, 1250, 1418, 4100, 2320, 2450, 3649, 4214, 3648,
	2198, 4533, 3710, 3711, 3633, 4028, 3359, 3714, 3962, 5276,
	5329, 4652, 4559, 3653, 4534, 3706, 2806, 1420, 2805, 4482,
	2370, 4480, 1493, 4175, 4165, 5330, 3668, 3958, 3519, 3512,
	3499, 3675, 2628, 1420, 2622, 5541, 2615, 2607, 2583, 2580,
	5345, 4846, 4572, 1301, 1301, 1301, 1301, 2060, 2798, 1176,
	5020, 2201, 1301, 1301, 1301, 5205, 3420, 1301, 2060, 4310,
	5331, 4466, 3332, 2449, 3304, 4600, 1778, 1462, 4381, 1175,
	2196, 1301, 1424, 1593, 873, 3681, 1067, 1068, 2022, 4839,
	5401, 2022, 4271, 4832, 3287, 5363, 2741, 4225, 2023, 2366,
	2199, 3363, 4654, 4988, 980, 979, 4710, 3496, 1472, 1301,
	5184, 1301, 4830, 2368, 5182, 2200, 4216, 3827, 3828, 5096,
	1424, 3974, 4834, 3970, 4837, 2091, 2477, 3969, 3673, 3651,
	2669, 4395, 4215, 4432, 3832, 3831, 2091, 2492, 1593, 1944,
	1943, 5333, 2661, 2650, 2197, 2578, 1240, 4840, 1938, 1422,
	3808, 3173, 3172, 1424, 2494, 3171, 1593, 3170, 3169, 1830,
	2369, 2451, 2024, 4572, 1816, 2024, 5332, 3122, 1515, 1828,
	3721, 4030, 4847, 4848, 1072, 2101, 3361, 4605, 981, 982,
	1817, 1237, 1797, 2396, 4891, 5334, 2281, 1422, 2488, 4532,
	1593, 4224, 3829, 2491, 4833, 4367, 5289, 4946, 3868, 4754,
	1515, 4711, 3839, 1051, 1052, 3308, 4368, 3125, 3889, 4621,
	2799, 1515, 4488, 2022, 2626, 3912, 5108, 3236, 2281, 4121,
	1422, 3864, 4477, 2531, 5186, 5654, 912, 2049, 2047, 2048,
	2040, 2041, 2042, 2043, 2045, 2046, 5585, 5083, 2484, 2047,
	2048, 2040, 2041, 2042, 2043, 2045, 2046, 2433, 5081, 1301,
	1799, 3124, 3882, 3869, 5080, 3595, 3123, 3474, 4241, 4235,
	3908, 1301, 3333, 3334, 913, 3907, 5346, 3906, 3887, 3886,
	3885, 3568, 2422, 3479, 3477, 5407, 2493, 2200, 2654, 1515,
	5290, 5204, 3837, 3957, 3903, 2281, 1921, 4467, 3803, 3804,
	3805, 2550, 1892, 5091, 3910, 4064, 4538, 5104, 5103, 1069,
	1070, 4031, 1301, 5185, 3838, 4817, 3362, 3913, 2422, 3850,
	3917, 3919, 3821, 4816, 5415, 3853, 3854, 3852, 1515, 3843,
	3945, 3946, 4007, 3873, 3922, 3861, 3933, 5398, 3924, 3925,
	5109, 4760, 4384, 3928, 2969, 3929, 1922, 3930, 3939, 1515,
	4227, 2721, 3972, 4022, 5092, 3976, 5068, 1515, 4440, 3233,
	3926, 4026, 1543, 3877, 3878, 3879, 3880, 3876, 1515, 1995,
	4098, 3836, 4032, 5437, 1997, 4222, 4217, 4218, 4219, 4220,
	2490, 4835, 5408, 2758, 1994, 2489, 5589, 5291, 4836, 1992,
	1964, 3894, 1301, 1301, 1962, 5587, 2514, 968, 3851, 4841,
	1593, 3959, 4543, 2237, 2514, 1960, 872, 3857, 3973, 4478,
	2395, 3978, 1515, 1932, 3980, 3888, 4074, 4226, 3900, 3901,
	971, 3902, 1930, 4050, 5517, 1928, 1053, 1054, 1926, 1924,
	1917, 1829, 1515, 3856, 3844, 1911, 4094, 5319, 3860, 4004,
	1909, 1827, 4838, 5310, 1826, 5078, 1071, 5043, 4808, 2529,
	4752, 4604, 3916, 4006, 4066, 3918, 4068, 4459, 4089, 4072,
	3800, 4842, 4286, 4078, 3986, 4236, 3923, 4008, 4228, 3927,
	4233, 4052, 3904, 5335, 4021, 3763, 3693, 1515, 1713, 5336,
	1713, 3934, 4025, 3500, 1593, 3398, 3392, 3842, 3849, 4023,
	3965, 962, 1713, 1713, 4037, 3322, 3236, 3209, 3942, 2771,
	2767, 2671, 4097, 2730, 2660, 2645, 2312, 2231, 2227, 1999,
	1867, 5172, 2696, 2559, 4815, 3801, 4265, 1515, 4264, 4255,
	2018, 4166, 1591, 3619, 3618, 3848, 3577, 2787, 1949, 2699,
	2579, 2311, 3992, 4065, 2309, 1424, 2134, 4073, 4155, 1881,
	1386, 2968, 5489, 4158, 4182, 4060, 4000, 4135, 4900, 4546,
	4545, 4013, 4531, 4904, 5397, 1713, 4877, 4093, 4986, 4909,
	4895, 4115, 4892, 4017, 4828, 4827, 4180, 1713, 4116, 1713,
	4119, 4650, 4640, 4440, 4562, 1996, 5560, 2760, 203, 203,
	928, 4536, 4164, 4503, 2759, 1993, 4501, 3557, 4307, 4202,
	1991, 1963, 4179, 4981, 4479, 1961, 3557, 4014, 2243, 3060,
	4169, 4015, 1422, 4016, 4055, 4046, 1959, 5555, 4837, 4163,
	4062, 4151, 4239, 3532, 1931, 4242, 4061, 3524, 3516, 3508,
	3493, 4191, 4075, 1929, 3491, 4087, 1927, 3472, 3233, 1925,
	1923, 1916, 1593, 4173, 4103, 1593, 1910, 3247, 4095, 3375,
	3242, 1908, 3845, 3846, 3847, 1825, 2577, 2575, 2552, 2516,
	2452, 1419, 2438, 2424, 2352, 4256, 4847, 4848, 2349, 4176,
	2346, 2343, 931, 2338, 2336, 963, 4231, 964, 2331, 2325,
	1301, 4104, 4108, 2321, 5472, 3357, 2027, 1301, 1301, 5579,
	2374, 1301, 1301, 1301, 3330, 1301, 1259, 4076, 1399, 1419,
	4102, 5288, 2525, 4123, 1301, 2281, 3643, 2729, 4183, 3671,
	3644, 4156, 968, 1301, 3641, 4162, 2695, 2558, 1301, 3465,
	4161, 2362, 2363, 2770, 1593, 1400, 5454, 5354, 4229, 5001,
	4916, 4814, 1419, 1301, 4234, 971, 3558, 3940, 2391, 959,
	1783, 1593, 5222, 3309, 3628, 3283, 3283, 4232, 5215, 3188,
	2756, 2281, 2281, 1301, 1301, 4188, 1301, 1301, 1301, 4263,
	4200, 4201, 3281, 3306, 4197, 1770, 4262, 4181, 1187, 1189,
	2433, 1456, 4662, 2768, 1301, 1989, 1990, 2686, 1301, 2625,
	2281, 2281, 1301, 1301, 1301, 1301, 1301, 1301, 1301, 1301,
	1301, 1301, 1301, 1301, 1301, 1301, 1301, 1301, 1301, 1301,
	1301, 1301, 4289, 1301, 4272, 4190, 2028, 1495, 1496, 2724,
	2719, 1301, 1301, 2281, 3672, 5453, 2693, 1240, 1301, 4299,
	4300, 4339, 2769, 4340, 4868, 4077, 4911, 2036, 2037, 3429,
	4248, 1301, 4249, 1231, 4250, 2036, 2037, 1907, 4379, 3313,
	1565, 5573, 1424, 1424, 5242, 1401, 1301, 901, 203, 5106,
	4761, 4739, 2361, 3987, 3314, 3335, 1059, 2031, 4269, 2039,
	1522, 1455, 4558, 1168, 1562, 3406, 5525, 4260, 4576, 306,
	1496, 3490, 4637, 2608, 3314, 1533, 4266, 3404, 3413, 4267,
	5593, 1593, 3396, 3394, 3316, 1967, 5406, 4557, 1232, 3318,
	5385, 5352, 5621, 4417, 1515, 1515, 3395, 2038, 1496, 4294,
	2264, 4378, 1418, 3317, 5348, 2038, 5287, 5206, 4296, 1422,
	1422, 5203, 5084, 5014, 4648, 1515, 1515, 904, 904, 4306,
	2251, 4639, 1515, 795, 4624, 918, 3236, 2281, 4168, 2281,
	3539, 3505, 4322, 3492, 3085, 4329, 4313, 4315, 4316, 2358,
	1418, 2262, 1420, 4099, 5105, 3382, 2820, 4330, 4100, 1301,
	4337, 4317, 1730, 1729, 4338, 4370, 1723, 4099, 1233, 4342,
	2412, 2531, 4100, 3890, 4344, 2413, 4433, 5653, 5371, 5592,
	3769, 3770, 1741, 1418, 4336, 2820, 4345, 1301, 4434, 4435,
	1420, 5350, 1230, 4922, 1168, 3646, 4386, 1169, 2036, 2037,
	3484, 4099, 4371, 3487, 1740, 3489, 4100, 2275, 1741, 4450,
	4451, 2402, 3269, 1741, 4391, 4392, 4460, 4731, 4374, 1232,
	1301, 1301, 2527, 1420, 2401, 3268, 2964, 4442, 1741, 1891,
	4462, 2230, 4463, 4388, 4389, 1890, 3623, 2999, 4464, 2402,
	2401, 1966, 4465, 5532, 1965, 4647, 5207, 5147, 4913, 4908,
	4907, 4791, 4787, 4786, 4727, 4401, 4701, 4403, 3536, 4404,
	4408, 3536, 4441, 4318, 4070, 4067, 3626, 4414, 3233, 1231,
	2128, 2127, 1301, 1301, 2775, 315, 5638, 5602, 5458, 5389,
	1301, 5388, 5387, 5318, 5262, 5258, 5180, 5136, 5073, 5067,
	4483, 4502, 5066, 4504, 5064, 5063, 4539, 4963, 2414, 4940,
	4866, 1713, 1713, 4516, 2252, 4801, 2254, 4455, 4785, 1713,
	4784, 4461, 1713, 1713, 1419, 4674, 2418, 4668, 1169, 4611,
	4499, 4491, 1713, 4257, 4172, 4171, 3979, 1515, 3921, 3627,
	3616, 4588, 4446, 3588, 3587, 3586, 3585, 3523, 4520, 3494,
	3307, 968, 3238, 3202, 3152, 4578, 3201, 3613, 2893, 2761,
	2725, 2718, 2717, 2716, 2715, 4583, 2281, 1174, 1173, 2714,
	2623, 2594, 2593, 4554, 971, 2393, 2592, 2591, 2590, 2589,
	2328, 2327, 2326, 4521, 4523, 2324, 2242, 2241, 1988, 4508,
	1301, 1987, 1918, 4561, 1792, 4513, 1791, 1790, 1789, 4636,
	1788, 1787, 4569, 1786, 4548, 4560, 1782, 2415, 2420, 4579,
	1780, 1713, 1779, 2278, 1717, 1716, 1170, 1301, 1582, 1581,
	3330, 1580, 1579, 4541, 4542, 1424, 1301, 1578, 4593, 4594,
	1525, 1479, 4570, 4664, 1713, 1478, 1477, 1476, 1475, 1713,
	1713, 1713, 4617, 1474, 4655, 1473, 1467, 1466, 1465, 1464,
	1463, 1381, 2364, 1191, 1182, 5293, 4845, 4844, 4843, 2757,
	4632, 2602, 4587, 4580, 1713, 107, 1713, 4656, 1775, 3350,
	4671, 100, 1713, 3545, 1593, 4567, 4589, 2523, 4498, 5526,
	5634, 5662, 3417, 2585, 4631, 4603, 3557, 2456, 1174, 1173,
	5439, 5438, 1422, 5323, 3223, 2322, 4659, 4128, 2416, 4127,
	4598, 5531, 4619, 4602, 1263, 2460, 5176, 1593, 4586, 4623,
	1301, 1301, 4658, 993, 4597, 5013, 1301, 1301, 2281, 1143,
	5436, 1301, 1301, 1765, 1301, 1008, 5417, 3981, 3434, 1301,
	1919, 4675, 5200, 4638, 2700, 4596, 4642, 1170, 4644, 3863,
	1301, 3154, 5377, 4735, 3731, 5249, 5036, 3995, 2967, 2132,
	4635, 1171, 2423, 3812, 4689, 102, 1301, 1285, 4687, 2570,
	1331, 3965, 4695, 4690, 4641, 1418, 4954, 4953, 4829, 4485,
	4138, 4950, 4949, 2266, 2268, 1249, 1596, 4660, 4657, 3093,
	3095, 5466, 1172, 4665, 2375, 2269, 2384, 3203, 4666, 3043,
	1308, 4712, 1305, 2270, 2272, 4673, 1307, 4672, 1306, 2271,
	2152, 4697, 1304, 2265, 4646, 1420, 4157, 4725, 3543, 3993,
	4198, 1835, 1833, 1145, 2421, 4721, 4688, 3150, 1424, 2887,
	2951, 1419, 1419, 3720, 2125, 1265, 1424, 4758, 1287, 2948,
	1593, 1593, 4698, 1593, 4691, 1448, 1276, 203, 2281, 3840,
	3819, 1176, 4185, 3086, 1424, 4405, 2797, 1018, 3766, 4706,
	2954, 1437, 4713, 4766, 1713, 1713, 3066, 3059, 3055, 3994,
	3931, 1175, 3533, 2006, 5050, 2103, 3544, 1559, 1269, 2885,
	2116, 3698, 1171, 2807, 4192, 3866, 1593, 3196, 5447, 4326,
	3624, 2598, 1398, 1397, 1446, 1422, 1396, 5423, 5420, 3868,
	1515, 2513, 4957, 1422, 4133, 4134, 2367, 4700, 3262, 2897,
	4152, 1229, 1281, 1172, 3601, 3602, 1701, 1301, 2746, 4258,
	3825, 1422, 4622, 2264, 1794, 5113, 1293, 4777, 1424, 4751,
	1424, 2088, 3461, 3460, 5282, 1544, 1542, 1541, 1540, 5611,
	3419, 3414, 2532, 4494, 4493, 4492, 274, 1309, 4793, 4794,
	3665, 2025, 2017, 271, 273, 1515, 272, 3985, 4418, 4876,
	4856, 3872, 4818, 4819, 1893, 1593, 2417, 1515, 5523, 4518,
	1515, 4885, 1176, 4852, 4888, 4852, 4120, 27, 905, 4872,
	4873, 4763, 4764, 906, 4813, 4769, 4771, 4765, 4768, 4855,
	4762, 4869, 1175, 1301, 4821, 1422, 1593, 1422, 4767, 907,
	313, 313, 313, 3272, 801, 802, 4780, 818, 801, 818,
	830, 4778, 2394, 871, 2275, 2275, 1561, 891, 4469, 26,
	25, 24, 898, 898, 898, 898, 23, 313, 130, 4826,
	28, 49, 30, 29, 5, 313, 22, 174, 172, 149,
	169, 4809, 4824, 4776, 168, 1713, 1713, 140, 4870, 3236,
	1301, 1301, 4912, 167, 4914, 4923, 166, 1046, 165, 4820,
	164, 163, 171, 2823, 313, 4792, 162, 161, 4796, 4797,
	4798, 156, 1418, 1418, 160, 159, 1722, 158, 1515, 4875,
	157, 155, 4971, 153, 4805, 4806, 4807, 154, 148, 4810,
	152, 1593, 4884, 151, 150, 4887, 1713, 147, 146, 4871,
	4894, 145, 144, 4896, 4947, 143, 4886, 4898, 142, 141,
	4889, 139, 1420, 1420, 4915, 173, 138, 137, 219, 136,
	135, 1713, 1713, 1713, 1713, 1713, 1713, 1713, 2412, 4989,
	134, 133, 132, 2413, 131, 884, 4939, 4938, 885, 68,
	67, 4906, 127, 128, 21, 1593, 47, 16, 72, 73,
	20, 4975, 4990, 4978, 15, 42, 2965, 1301, 1301, 1301,
	4924, 105, 119, 118, 3996, 3997, 4972, 3998, 117, 43,
	5021, 5022, 114, 4934, 41, 1593, 19, 4937, 4933, 4932,
	1301, 3233, 18, 1301, 1301, 17, 4942, 4952, 112, 111,
	4959, 4948, 110, 1301, 1419, 4960, 2281, 4966, 4964, 4993,
	40, 1301, 1301, 38, 4998, 13, 11, 44, 2215, 4421,
	2278, 2278, 5006, 14, 7, 211, 5010, 801, 801, 4974,
	1593, 208, 1713, 4991, 207, 313, 210, 5012, 206, 209,
	104, 205, 106, 204, 103, 36, 4984, 12, 199, 5028,
	5196, 5003, 4056, 4057, 4629, 4058, 95, 5004, 202, 1515,
	201, 200, 198, 197, 3164, 196, 2414, 193, 96, 93,
	195, 99, 98, 194, 94, 97, 5023, 4422, 5033, 34,
	8, 71, 9, 1593, 2418, 5016, 4237, 122, 123, 45,
	91, 1301, 90, 89, 88, 5015, 5059, 33, 5060, 70,
	32, 268, 266, 5045, 1301, 4423, 267, 265, 4420, 264,
	189, 2275, 244, 1301, 5039, 243, 242, 4431, 2281, 241,
	240, 239, 238, 4429, 237, 5090, 236, 231, 1301, 235,
	233, 1301, 232, 234, 5056, 5057, 5061, 230, 260, 259,
	258, 257, 256, 5077, 255, 254, 253, 247, 246, 252,
	251, 250, 1301, 249, 248, 1301, 245, 263, 84, 4430,
	229, 228, 1593, 227, 4426, 2415, 2420, 225, 1713, 1301,
	221, 1713, 1713, 5139, 5116, 224, 226, 5140, 1515, 223,
	222, 220, 5162, 5087, 262, 5088, 261, 5086, 192, 4427,
	5089, 85, 2269, 2269, 1263, 1263, 1263, 1419, 2422, 187,
	188, 2264, 83, 5095, 186, 1419, 185, 184, 5135, 1424,
	183, 182, 181, 180, 5127, 5128, 82, 191, 190, 31,
	2, 2114, 1, 1419, 0, 2119, 0, 3271, 0, 2275,
	0, 0, 5152, 1286, 126, 0, 0, 1593, 5171, 0,
	1713, 5190, 0, 1677, 0, 1418, 5133, 5183, 5179, 0,
	0, 0, 0, 5195, 4852, 5148, 2416, 5150, 0, 5151,
	0, 5158, 5159, 0, 0, 4135, 5138, 0, 5187, 5149,
	0, 0, 0, 5216, 0, 5221, 1422, 1301, 1301, 0,
	0, 0, 0, 5137, 0, 1420, 5225, 2802, 5227, 0,
	0, 0, 0, 5202, 1301, 2281, 5217, 1419, 5141, 1419,
	0, 5174, 0, 5161, 5181, 5173, 0, 2278, 0, 0,
	2423, 0, 0, 5125, 0, 0, 0, 5163, 0, 5199,
	1515, 1515, 1515, 5219, 5175, 1515, 1515, 1515, 4424, 1515,
	1515, 2632, 5201, 0, 5194, 0, 4425, 0, 0, 0,
	0, 0, 126, 0, 0, 5218, 5224, 0, 1301, 4993,
	1301, 5223, 1301, 5277, 0, 0, 0, 0, 0, 0,
	5238, 5239, 1424, 0, 5230, 0, 0, 3943, 0, 0,
	0, 0, 2421, 0, 5142, 1301, 0, 1424, 0, 0,
	0, 0, 5213, 5275, 0, 0, 5241, 0, 0, 5237,
	0, 4428, 5247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 5259, 5260, 5261, 4852, 0, 5263,
	5264, 5265, 0, 5266, 5267, 0, 0, 3944, 0, 0,
	0, 0, 4852, 0, 0, 2278, 0, 2281, 0, 1422,
	0, 0, 0, 0, 5274, 3061, 5305, 1219, 1418, 1424,
	1424, 5327, 5304, 5273, 1422, 0, 1418, 0, 0, 5298,
	1241, 5297, 0, 0, 0, 0, 0, 5270, 0, 0,
	1424, 5351, 0, 1424, 1418, 5325, 0, 1713, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1713, 1420, 2269,
	5313, 0, 0, 0, 4852, 4852, 1420, 0, 0, 0,
	2264, 0, 0, 1301, 1301, 0, 0, 5314, 5340, 5341,
	0, 0, 0, 1301, 1420, 4852, 1422, 1422, 4852, 5320,
	0, 1408, 5315, 5373, 2417, 5374, 0, 5322, 5338, 5357,
	5324, 0, 5359, 5364, 0, 0, 5349, 1422, 0, 0,
	1422, 0, 0, 0, 0, 0, 0, 5356, 1418, 0,
	1418, 0, 0, 0, 0, 5365, 0, 0, 5199, 0,
	0, 0, 0, 0, 5368, 5370, 5372, 5414, 0, 1301,
	1301, 1439, 0, 1301, 0, 0, 5382, 1713, 1515, 5369,
	1515, 0, 818, 5386, 0, 0, 5381, 5367, 1420, 0,
	1420, 0, 0, 5390, 5391, 5392, 818, 0, 0, 0,
	0, 0, 313, 0, 0, 5396, 0, 2269, 0, 1469,
	5446, 0, 0, 0, 5450, 0, 0, 5422, 5425, 0,
	313, 0, 313, 313, 5412, 1500, 313, 1509, 0, 5413,
	0, 0, 0, 5404, 5405, 0, 5449, 5471, 1523, 1301,
	1301, 1301, 5431, 0, 0, 0, 891, 5427, 0, 891,
	0, 0, 5426, 0, 0, 0, 5430, 0, 5469, 0,
	0, 0, 5433, 0, 5434, 0, 0, 5432, 0, 0,
	0, 5455, 898, 0, 0, 0, 0, 0, 5459, 1301,
	5462, 0, 0, 0, 0, 0, 5470, 0, 0, 0,
	5504, 0, 0, 0, 5509, 0, 0, 0, 5483, 5484,
	5485, 5505, 0, 1713, 313, 0, 313, 313, 313, 1500,
	5486, 313, 313, 0, 0, 0, 0, 0, 2422, 1509,
	5393, 5394, 0, 0, 0, 0, 5539, 0, 0, 5506,
	5538, 0, 0, 313, 0, 1743, 5546, 0, 0, 0,
	1301, 5540, 1677, 5548, 5530, 5507, 0, 0, 1515, 1515,
	0, 1763, 0, 5522, 0, 0, 0, 5572, 5561, 5533,
	1772, 5552, 0, 5545, 0, 0, 0, 5520, 5179, 5558,
	5544, 0, 0, 0, 5554, 5580, 5583, 1796, 1419, 1509,
	0, 5553, 0, 0, 313, 313, 5519, 1500, 0, 5521,
	1301, 5571, 5567, 5568, 0, 5576, 5574, 0, 0, 0,
	0, 0, 0, 5595, 5584, 0, 0, 5599, 1424, 891,
	1424, 313, 313, 0, 5586, 5582, 0, 0, 0, 5598,
	0, 0, 5422, 1861, 5591, 5425, 5605, 5597, 0, 0,
	5604, 0, 5569, 5570, 1869, 5596, 4643, 5607, 0, 1046,
	0, 5603, 5612, 0, 0, 0, 0, 5449, 5613, 0,
	1515, 0, 0, 4852, 0, 4852, 0, 0, 0, 0,
	0, 0, 0, 5628, 5635, 5629, 0, 5606, 1263, 5608,
	5637, 0, 0, 0, 5642, 1422, 1677, 1422, 0, 0,
	0, 0, 1301, 1301, 0, 0, 5648, 5636, 5639, 0,
	0, 1301, 1301, 0, 5640, 5646, 0, 0, 0, 0,
	5651, 0, 5660, 5667, 4692, 0, 5666, 5673, 5665, 0,
	5656, 6, 0, 5675, 0, 5672, 5674, 5682, 5681, 5683,
	5664, 203, 0, 5676, 313, 10, 3545, 0, 0, 0,
	5686, 1419, 0, 0, 5632, 0, 0, 3826, 5689, 5688,
	5680, 1515, 0, 0, 5691, 5695, 1419, 5699, 5693, 5696,
	313, 0, 0, 5697, 5692, 0, 0, 3545, 5706, 0,
	0, 5705, 5702, 0, 5703, 5694, 0, 0, 1301, 0,
	0, 5708, 5710, 0, 5657, 5658, 5709, 5699, 5716, 5712,
	0, 5704, 5713, 0, 0, 5715, 0, 5659, 0, 0,
	0, 0, 3855, 2275, 0, 0, 0, 0, 3769, 3770,
	0, 3787, 3788, 3789, 0, 0, 0, 0, 1419, 1419,
	3871, 0, 0, 0, 0, 0, 0, 0, 0, 1418,
	0, 4717, 0, 0, 2275, 2275, 0, 0, 0, 1419,
	0, 0, 1419, 0, 0, 0, 0, 4223, 0, 0,
	0, 0, 0, 0, 3898, 0, 0, 0, 2891, 0,
	0, 5711, 4221, 0, 0, 0, 0, 0, 0, 1420,
	1677, 0, 4214, 0, 2114, 0, 0, 0, 0, 0,
	3655, 0, 0, 0, 0, 0, 0, 0, 0, 3784,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1722,
	0, 0, 0, 0, 0, 0, 1722, 0, 2412, 0,
	0, 0, 0, 2413, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2036, 2037, 0, 0, 0, 0,
	0, 4225, 0, 3061, 3061, 0, 801, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2067, 0,
	4216, 0, 1418, 0, 0, 0, 2039, 313, 0, 313,
	0, 3775, 0, 313, 0, 0, 4215, 1418, 0, 2278,
	0, 0, 0, 0, 0, 0, 1743, 1500, 1509, 313,
	0, 313, 2240, 0, 0, 2092, 0, 0, 0, 313,
	0, 818, 1420, 0, 2038, 0, 0, 0, 313, 4902,
	2278, 2278, 126, 0, 126, 2058, 126, 1420, 0, 0,
	0, 0, 0, 0, 0, 2055, 5441, 0, 0, 0,
	2329, 0, 0, 0, 0, 4224, 0, 0, 0, 1418,
	1418, 0, 0, 313, 0, 3791, 2414, 0, 0, 0,
	0, 0, 313, 2463, 0, 0, 0, 0, 0, 0,
	1418, 0, 0, 1418, 2418, 0, 0, 0, 0, 1241,
	126, 126, 0, 0, 0, 0, 4212, 0, 2278, 1420,
	1420, 0, 4962, 2275, 891, 0, 126, 0, 126, 3785,
	0, 0, 0, 0, 0, 2473, 0, 4973, 0, 0,
	1420, 0, 126, 1420, 126, 0, 0, 2061, 2062, 2063,
	2064, 0, 0, 0, 0, 0, 0, 2044, 3871, 0,
	0, 4997, 898, 0, 898, 3061, 3061, 3061, 3061, 0,
	0, 0, 0, 0, 898, 898, 2036, 2037, 0, 0,
	1263, 0, 0, 0, 1677, 2415, 2420, 0, 0, 0,
	0, 2269, 0, 0, 0, 0, 0, 1419, 0, 1419,
	2067, 0, 0, 0, 2469, 0, 0, 0, 2039, 0,
	2089, 2066, 2068, 126, 0, 0, 0, 0, 0, 0,
	0, 0, 2269, 2269, 4227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2092, 0, 0,
	2053, 2054, 0, 0, 0, 0, 2038, 0, 0, 4222,
	4217, 4218, 4219, 4220, 0, 0, 0, 0, 0, 2463,
	0, 0, 0, 0, 0, 0, 2466, 0, 0, 0,
	0, 0, 0, 0, 0, 2059, 2416, 1677, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2269, 4226, 0, 0, 0, 0, 3786, 0, 0, 0,
	0, 2473, 0, 0, 0, 0, 4259, 0, 0, 1591,
	0, 5442, 0, 5082, 0, 0, 0, 1219, 0, 2278,
	2471, 0, 2275, 0, 0, 2410, 0, 0, 0, 313,
	2423, 0, 0, 313, 3769, 3770, 0, 3787, 3788, 3789,
	2106, 0, 4228, 0, 0, 0, 0, 0, 0, 1677,
	0, 0, 0, 0, 0, 0, 2089, 4291, 2112, 2044,
	0, 0, 2118, 0, 0, 0, 0, 2565, 2275, 2275,
	2469, 0, 313, 0, 0, 1677, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2472, 2408, 4303, 0,
	0, 313, 2421, 0, 0, 0, 0, 2275, 2275, 0,
	0, 0, 313, 0, 0, 4319, 0, 0, 0, 313,
	0, 0, 0, 2066, 2068, 3784, 2065, 0, 0, 0,
	0, 2476, 0, 0, 0, 313, 0, 313, 0, 0,
	2275, 801, 2466, 313, 0, 0, 0, 2409, 1418, 0,
	1418, 0, 2060, 0, 0, 891, 0, 0, 0, 1046,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3781,
	3782, 3783, 0, 0, 0, 0, 3780, 3778, 3779, 3771,
	3772, 3773, 3774, 3776, 3777, 0, 0, 2059, 1420, 0,
	1420, 1500, 313, 2207, 0, 2210, 2471, 126, 0, 0,
	0, 2269, 0, 0, 2464, 0, 0, 0, 0, 891,
	0, 0, 0, 0, 0, 2474, 313, 0, 0, 0,
	2091, 0, 0, 0, 2697, 0, 0, 3775, 2278, 313,
	0, 313, 2470, 313, 0, 313, 0, 313, 0, 313,
	0, 3353, 0, 0, 2417, 0, 2462, 0, 1677, 0,
	0, 0, 0, 2275, 2275, 4416, 2275, 0, 0, 0,
	0, 0, 2472, 2467, 2735, 0, 0, 2736, 2089, 2737,
	2465, 2738, 0, 0, 2278, 2278, 0, 0, 2475, 0,
	3695, 3696, 0, 0, 1722, 0, 313, 313, 313, 313,
	313, 0, 0, 0, 0, 2459, 0, 2476, 0, 0,
	0, 3791, 0, 2278, 2278, 0, 0, 0, 0, 0,
	5443, 0, 0, 0, 0, 0, 0, 871, 0, 2056,
	2052, 891, 2049, 2047, 2048, 2040, 2041, 2042, 2043, 2045,
	2046, 0, 0, 0, 0, 0, 2278, 0, 0, 0,
	0, 0, 0, 0, 0, 3785, 0, 0, 0, 0,
	0, 0, 5311, 0, 2060, 2468, 0, 2457, 0, 5444,
	0, 0, 0, 0, 0, 0, 0, 1722, 1722, 0,
	2464, 0, 0, 1677, 0, 0, 0, 0, 0, 0,
	0, 2474, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2470, 0,
	2269, 0, 0, 0, 0, 0, 0, 2458, 0, 0,
	0, 5353, 0, 0, 5355, 0, 2899, 0, 0, 0,
	0, 0, 2091, 0, 0, 0, 2089, 0, 0, 2467,
	0, 0, 0, 0, 0, 0, 2465, 0, 0, 0,
	0, 0, 0, 0, 2475, 0, 2269, 2269, 0, 2278,
	2278, 0, 2278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3793, 3794, 3795, 3796, 0, 0, 0, 0,
	0, 0, 0, 2275, 0, 2269, 2269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 801, 0,
	0, 3087, 0, 0, 3061, 3061, 0, 0, 0, 0,
	0, 0, 0, 0, 313, 0, 0, 0, 2269, 0,
	0, 0, 3786, 801, 0, 0, 0, 0, 0, 0,
	313, 2468, 801, 0, 0, 0, 0, 2040, 2041, 2042,
	2043, 2045, 2046, 0, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1722,
	1722, 1722, 1722, 0, 313, 1509, 5456, 0, 0, 0,
	5457, 313, 0, 313, 1743, 0, 313, 0, 3769, 3770,
	0, 3787, 3788, 3789, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3061, 3061, 3061, 3061, 3061, 3061,
	3061, 3061, 3061, 3061, 3061, 3061, 3061, 3061, 3061, 3061,
	3061, 3061, 3061, 3061, 0, 3061, 0, 0, 0, 0,
	0, 0, 0, 313, 1509, 0, 313, 818, 0, 818,
	0, 2269, 2269, 0, 2269, 2275, 313, 0, 1241, 313,
	1241, 0, 0, 3237, 0, 0, 0, 0, 0, 313,
	313, 0, 0, 0, 313, 0, 313, 0, 0, 3784,
	0, 1500, 0, 313, 313, 0, 1509, 1509, 3253, 0,
	0, 0, 0, 313, 0, 0, 0, 0, 0, 2278,
	0, 0, 0, 0, 1263, 3781, 3782, 3783, 0, 0,
	0, 0, 3780, 3778, 3779, 3771, 3772, 3773, 3774, 3776,
	3777, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 898, 898, 0,
	0, 898, 898, 0, 0, 0, 0, 0, 0, 0,
	3296, 0, 0, 0, 0, 0, 0, 126, 0, 0,
	0, 0, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2275, 313, 0, 0, 0,
	0, 3775, 0, 0, 0, 0, 0, 0, 0, 0,
	313, 0, 0, 0, 3036, 3037, 3038, 3039, 3032, 3033,
	3034, 3035, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3366, 0, 0, 0, 4773, 0, 0,
	0, 0, 891, 0, 0, 0, 0, 891, 3792, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1219, 0, 0, 1219, 1219, 0, 0, 0, 0, 0,
	0, 2278, 0, 0, 313, 3791, 0, 0, 0, 0,
	4803, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2269, 0, 0, 3426, 1743, 0, 0, 0, 0,
	0, 0, 0, 0, 3012, 3013, 3014, 3015, 0, 0,
	0, 0, 0, 0, 0, 0, 2036, 2037, 0, 3785,
	0, 2884, 2080, 2081, 2082, 0, 313, 3482, 3024, 3025,
	3026, 3027, 3020, 3021, 3022, 3023, 3028, 3029, 3030, 3031,
	2067, 1241, 0, 0, 0, 0, 0, 0, 2039, 0,
	0, 2112, 0, 2463, 0, 2112, 0, 1743, 0, 2086,
	313, 0, 0, 3426, 0, 0, 0, 1256, 0, 0,
	0, 313, 0, 0, 86, 0, 0, 2092, 0, 0,
	0, 0, 3528, 0, 0, 0, 2038, 0, 0, 0,
	0, 2278, 3296, 87, 801, 2473, 2275, 2058, 1677, 0,
	2089, 0, 0, 1046, 3296, 0, 0, 2055, 0, 0,
	0, 92, 3008, 3009, 3010, 3011, 3016, 3017, 3018, 3019,
	0, 0, 0, 0, 0, 0, 313, 0, 0, 0,
	1408, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2269, 0, 0, 2210, 0, 313, 1500,
	313, 0, 0, 1677, 101, 0, 0, 0, 0, 0,
	3603, 313, 0, 0, 2469, 1500, 0, 1500, 0, 1500,
	0, 1677, 0, 1706, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3786, 0, 0, 2061,
	2062, 2063, 2064, 0, 0, 0, 126, 1040, 0, 2044,
	0, 0, 0, 0, 0, 1677, 0, 0, 0, 0,
	56, 0, 124, 0, 0, 0, 0, 1768, 108, 121,
	313, 313, 313, 313, 1500, 0, 2466, 1500, 0, 0,
	313, 4282, 4283, 0, 0, 313, 0, 0, 0, 1591,
	0, 0, 2077, 2275, 0, 0, 2087, 0, 0, 0,
	0, 0, 0, 2066, 2068, 0, 0, 0, 0, 0,
	0, 0, 0, 2269, 1263, 0, 313, 0, 0, 5034,
	1849, 0, 0, 0, 313, 0, 1263, 0, 0, 0,
	2471, 0, 2053, 2054, 109, 0, 1864, 0, 0, 0,
	0, 0, 2278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2075, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 5034, 0, 0, 2059, 1722, 1722,
	0, 4346, 4347, 4348, 4349, 4350, 4351, 4352, 4353, 4354,
	4355, 4356, 4357, 4358, 4359, 4360, 4361, 4362, 4363, 4364,
	4365, 0, 4369, 0, 0, 0, 2472, 0, 1894, 3781,
	3782, 3783, 0, 0, 0, 2275, 3780, 3778, 3779, 3771,
	3772, 3773, 3774, 3776, 3777, 0, 0, 2823, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2476, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2089, 0,
	0, 0, 1743, 0, 0, 1677, 0, 0, 1722, 1722,
	1722, 1722, 1722, 1722, 1722, 1722, 1722, 1722, 1722, 1722,
	1722, 1722, 1722, 1722, 1722, 1722, 1722, 1722, 0, 1722,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2278,
	0, 0, 0, 0, 113, 0, 2823, 0, 0, 3352,
	0, 0, 0, 0, 2464, 0, 0, 0, 2065, 0,
	0, 0, 0, 0, 2269, 2474, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2470, 0, 2060, 0, 0, 0, 0, 1677,
	0, 3353, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 212, 86, 116, 126, 0, 120, 126,
	0, 126, 0, 2467, 0, 0, 2078, 0, 0, 0,
	2465, 0, 0, 87, 0, 0, 0, 0, 2475, 0,
	0, 0, 2275, 0, 0, 0, 0, 0, 0, 0,
	275, 92, 0, 0, 0, 0, 0, 0, 1041, 313,
	0, 2278, 2091, 0, 170, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 0, 0, 126, 0, 0,
	0, 0, 0, 126, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 101, 3769, 3770, 313, 3787, 3788,
	3789, 0, 801, 0, 277, 0, 0, 801, 0, 0,
	801, 0, 0, 801, 801, 2468, 0, 0, 4290, 801,
	0, 2269, 801, 0, 0, 0, 0, 0, 0, 0,
	313, 0, 175, 0, 0, 0, 0, 1040, 0, 0,
	0, 0, 313, 0, 0, 2076, 0, 1677, 0, 218,
	1677, 0, 124, 313, 0, 0, 1743, 276, 108, 121,
	2079, 2056, 2052, 126, 2049, 2047, 2048, 2040, 2041, 2042,
	2043, 2045, 2046, 0, 2275, 0, 3784, 269, 0, 0,
	0, 0, 0, 0, 0, 818, 270, 0, 0, 0,
	213, 0, 0, 0, 2315, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 0, 0, 0,
	313, 0, 0, 0, 313, 313, 216, 3769, 3770, 0,
	3787, 3788, 3789, 0, 109, 3061, 0, 0, 0, 1677,
	0, 0, 0, 2269, 0, 0, 0, 0, 2278, 0,
	0, 0, 0, 0, 2036, 2037, 1677, 0, 3296, 3296,
	313, 0, 3951, 3954, 0, 0, 0, 0, 0, 3296,
	0, 2240, 0, 0, 0, 0, 0, 0, 2067, 0,
	3296, 2240, 0, 3296, 2240, 0, 2039, 2240, 3775, 0,
	3951, 0, 0, 0, 0, 0, 927, 0, 0, 0,
	0, 0, 313, 313, 3954, 0, 313, 0, 3784, 0,
	0, 0, 0, 0, 0, 2092, 0, 0, 0, 2884,
	0, 0, 0, 3061, 2038, 3954, 0, 313, 935, 0,
	0, 0, 4024, 3954, 0, 2058, 0, 0, 0, 0,
	2112, 0, 0, 0, 0, 2055, 4035, 0, 4035, 0,
	0, 0, 0, 0, 947, 0, 0, 0, 1500, 0,
	0, 0, 3791, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3193, 0, 945, 0, 0, 0, 0,
	2278, 0, 3296, 0, 3296, 0, 4071, 3296, 3954, 0,
	0, 3296, 0, 0, 113, 0, 1677, 0, 0, 948,
	0, 0, 0, 0, 4716, 0, 3785, 0, 3954, 0,
	3775, 891, 0, 0, 0, 0, 0, 0, 0, 0,
	2269, 0, 0, 0, 0, 0, 0, 2061, 2062, 2063,
	2064, 0, 0, 0, 0, 0, 0, 2044, 0, 0,
	0, 0, 0, 1500, 0, 0, 0, 0, 0, 0,
	313, 0, 0, 212, 941, 116, 0, 0, 120, 0,
	0, 956, 0, 0, 0, 0, 0, 0, 313, 0,
	0, 4126, 0, 0, 4131, 3296, 0, 946, 313, 0,
	0, 0, 0, 0, 3791, 0, 1509, 2089, 0, 0,
	275, 2066, 2068, 0, 0, 0, 0, 0, 1041, 0,
	0, 0, 313, 0, 170, 0, 0, 3528, 0, 0,
	1500, 0, 313, 0, 0, 3296, 0, 801, 1768, 0,
	2053, 2054, 0, 0, 3296, 0, 3061, 0, 3785, 0,
	0, 940, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 1408, 0, 2606, 866, 0,
	0, 0, 2269, 0, 0, 2059, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 175, 3786, 0, 4246, 943, 0, 0, 0,
	0, 0, 3061, 1408, 0, 0, 0, 0, 0, 218,
	0, 0, 0, 0, 0, 0, 2643, 276, 4253, 0,
	4254, 0, 0, 1743, 0, 0, 0, 3061, 0, 2089,
	1500, 313, 0, 313, 2656, 2658, 0, 269, 0, 1500,
	0, 0, 1500, 0, 0, 0, 270, 0, 2662, 0,
	213, 0, 0, 0, 0, 217, 2089, 0, 0, 0,
	955, 0, 0, 2674, 2675, 2676, 2677, 2678, 0, 0,
	0, 313, 0, 0, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2909, 2910, 2911, 2928, 2929, 2930,
	0, 0, 0, 0, 0, 3786, 2065, 2193, 0, 0,
	0, 0, 0, 0, 0, 2931, 0, 0, 0, 0,
	4324, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2060, 937, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3781, 3782, 3783, 0,
	0, 0, 2092, 3780, 3778, 3779, 3771, 3772, 3773, 3774,
	3776, 3777, 0, 0, 0, 0, 942, 0, 0, 0,
	0, 0, 2921, 0, 0, 0, 0, 0, 0, 1677,
	126, 126, 2917, 126, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2091, 0, 0, 0, 4382, 0, 0, 0, 865, 0,
	0, 0, 1677, 0, 0, 0, 0, 0, 0, 313,
	313, 0, 0, 0, 951, 0, 0, 0, 0, 0,
	0, 0, 5042, 939, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 801, 0, 2072, 4407, 801, 0,
	0, 0, 0, 0, 0, 0, 801, 0, 126, 126,
	0, 126, 0, 0, 2922, 2923, 2924, 2925, 3781, 3782,
	3783, 0, 0, 0, 2916, 3780, 3778, 3779, 3771, 3772,
	3773, 3774, 3776, 3777, 0, 0, 936, 0, 0, 0,
	0, 0, 949, 0, 0, 0, 0, 313, 0, 2056,
	2052, 0, 2049, 2047, 2048, 2040, 2041, 2042, 2043, 2045,
	2046, 0, 0, 0, 0, 0, 944, 0, 0, 1722,
	5098, 0, 0, 0, 0, 0, 1248, 0, 86, 0,
	0, 0, 867, 0, 0, 1677, 1677, 0, 1677, 0,
	0, 0, 0, 0, 938, 0, 0, 87, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2926, 2927, 0,
	0, 0, 0, 0, 0, 92, 0, 0, 0, 0,
	0, 0, 0, 953, 954, 0, 950, 0, 0, 0,
	0, 1677, 0, 0, 0, 0, 0, 0, 0, 891,
	0, 0, 2919, 0, 0, 0, 0, 0, 1408, 0,
	0, 1241, 0, 0, 0, 0, 0, 1722, 101, 0,
	0, 0, 1263, 0, 0, 126, 126, 0, 0, 0,
	0, 0, 0, 0, 4535, 0, 0, 4537, 0, 0,
	4540, 0, 0, 0, 0, 0, 0, 0, 4035, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1040, 0, 0, 313, 0, 0, 0, 0, 0,
	1677, 1461, 0, 0, 56, 0, 124, 0, 0, 0,
	0, 0, 108, 121, 0, 0, 0, 0, 3426, 1484,
	0, 1484, 1484, 0, 0, 927, 0, 0, 0, 0,
	0, 1677, 0, 3954, 0, 313, 0, 0, 0, 818,
	818, 1509, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2072, 0, 0, 0,
	0, 0, 0, 5246, 0, 0, 0, 0, 0, 313,
	3528, 0, 0, 3528, 2240, 0, 0, 0, 109, 313,
	0, 0, 0, 0, 0, 0, 4634, 0, 3426, 0,
	0, 313, 0, 0, 0, 313, 0, 313, 0, 2920,
	0, 0, 313, 0, 0, 0, 1686, 1461, 0, 0,
	1702, 927, 0, 0, 0, 0, 0, 0, 0, 5281,
	0, 3296, 313, 0, 0, 0, 1677, 0, 0, 0,
	0, 0, 0, 1046, 3296, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 5303, 0, 0, 0, 0, 0,
	1722, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2091, 313, 0,
	0, 0, 3954, 0, 0, 3253, 0, 0, 0, 0,
	1677, 0, 0, 927, 927, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1722, 0, 0, 0,
	1677, 0, 0, 0, 0, 126, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3418, 0, 0,
	2072, 1722, 0, 0, 0, 1408, 1408, 0, 113, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4736, 0, 0, 0, 1677, 2072, 0, 0, 0,
	0, 0, 2906, 2907, 2908, 2932, 2918, 2912, 0, 2914,
	2915, 2913, 2900, 2901, 2902, 2903, 2904, 2905, 0, 0,
	0, 0, 0, 2072, 0, 0, 0, 0, 0, 2072,
	0, 0, 0, 0, 0, 2072, 0, 212, 0, 116,
	0, 0, 120, 0, 0, 0, 0, 0, 1677, 0,
	0, 0, 0, 0, 0, 313, 0, 0, 0, 0,
	0, 1743, 0, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 0, 0, 0, 0, 0,
	0, 313, 1041, 0, 0, 0, 0, 0, 170, 0,
	0, 0, 0, 0, 0, 0, 1263, 0, 3571, 0,
	0, 0, 0, 0, 1509, 1509, 1509, 0, 0, 3578,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1509, 1509, 1509, 0, 313, 1509, 0, 1677, 277, 0,
	2072, 0, 0, 0, 0, 2072, 0, 0, 0, 0,
	3296, 3296, 0, 3951, 0, 0, 4035, 3296, 0, 2072,
	0, 0, 0, 0, 2072, 4854, 175, 4854, 1743, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3296,
	0, 2240, 0, 218, 0, 3951, 0, 1743, 1743, 313,
	3954, 276, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3954, 3629, 313, 3954, 0, 313, 4890,
	0, 269, 1677, 0, 4035, 0, 0, 4035, 0, 0,
	270, 4035, 0, 0, 213, 0, 0, 0, 0, 217,
	0, 0, 0, 2072, 0, 0, 0, 0, 0, 2072,
	3296, 0, 3296, 313, 0, 0, 0, 0, 0, 0,
	1846, 0, 0, 0, 0, 3426, 0, 0, 0, 1518,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1248, 1248, 1248, 0,
	0, 0, 3296, 3296, 0, 0, 0, 0, 3528, 3528,
	0, 0, 0, 0, 0, 3951, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 313, 0,
	0, 0, 126, 0, 0, 0, 0, 0, 0, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1692, 0, 0, 0, 0, 0, 1718, 0, 1408, 0,
	1702, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1745, 0, 1751, 0, 1757,
	0, 2072, 2072, 2072, 2072, 2072, 2072, 2072, 2072, 0,
	126, 2036, 2037, 0, 0, 0, 0, 0, 0, 0,
	0, 2072, 1484, 0, 0, 0, 0, 0, 0, 0,
	0, 1702, 0, 0, 2072, 2067, 0, 0, 0, 0,
	0, 0, 0, 2039, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2036, 2037, 0, 2069, 2070, 2071,
	2080, 2081, 2082, 0, 0, 0, 0, 0, 0, 1852,
	0, 1857, 2092, 4407, 0, 0, 0, 0, 2067, 0,
	3065, 2038, 0, 0, 0, 1871, 2039, 1876, 0, 0,
	0, 0, 2058, 0, 0, 2072, 0, 2086, 0, 0,
	0, 2072, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2092, 0, 0, 0, 0,
	0, 0, 0, 0, 2038, 3296, 2240, 0, 2240, 0,
	0, 4634, 0, 0, 0, 2058, 0, 0, 0, 0,
	313, 0, 0, 0, 0, 2055, 0, 0, 0, 0,
	5114, 0, 5114, 0, 126, 1263, 0, 0, 0, 1945,
	0, 1408, 1951, 0, 0, 0, 0, 0, 0, 1408,
	0, 0, 0, 0, 2036, 2037, 0, 891, 0, 0,
	0, 0, 0, 0, 2061, 2062, 2063, 2064, 0, 0,
	4035, 1743, 0, 0, 2044, 1743, 0, 1500, 2067, 0,
	0, 0, 0, 0, 0, 0, 2039, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3954, 0, 313, 2061, 2062, 2063,
	2064, 0, 0, 0, 0, 2092, 0, 2044, 0, 0,
	0, 0, 0, 0, 2038, 0, 0, 0, 2066, 2068,
	0, 0, 0, 4634, 0, 2058, 4854, 0, 0, 1743,
	0, 0, 0, 3296, 0, 2055, 0, 313, 0, 2093,
	2094, 2095, 2096, 2097, 2098, 2099, 2100, 0, 0, 0,
	2077, 5210, 0, 0, 2087, 0, 0, 0, 0, 0,
	0, 2066, 2068, 1743, 0, 0, 0, 0, 0, 0,
	0, 0, 2113, 0, 0, 0, 0, 0, 2126, 0,
	0, 2587, 2059, 0, 0, 0, 0, 0, 0, 0,
	2053, 2054, 313, 313, 4285, 126, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2075, 2612, 0, 0, 0, 0, 4324, 2061, 2062, 2063,
	2064, 0, 0, 0, 0, 2059, 0, 2044, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4035, 5272, 0, 0, 0, 0, 0, 0, 4634,
	0, 0, 0, 2089, 0, 0, 0, 0, 126, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4854,
	0, 2066, 2068, 126, 2187, 2187, 2187, 0, 0, 0,
	0, 0, 0, 0, 4854, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2089, 126, 0, 0,
	2053, 2054, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 313, 0, 2065, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	818, 0, 0, 0, 0, 2059, 0, 0, 0, 2060,
	0, 0, 0, 0, 0, 0, 4854, 4854, 0, 0,
	0, 0, 0, 0, 0, 0, 2065, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4854, 0, 313,
	4854, 0, 0, 0, 0, 0, 0, 2612, 2747, 2748,
	2240, 0, 2060, 0, 0, 0, 0, 0, 0, 0,
	0, 1743, 0, 1743, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2091, 0, 0,
	0, 0, 0, 0, 2078, 0, 2089, 0, 0, 4124,
	4125, 0, 0, 0, 0, 1414, 1509, 1509, 0, 0,
	1248, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 5402, 0, 0, 0, 0, 0, 0, 0, 126,
	2091, 0, 0, 0, 0, 0, 0, 5114, 0, 0,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2065, 0, 308, 308,
	797, 0, 4204, 0, 3296, 0, 0, 0, 0, 0,
	2072, 0, 0, 0, 4230, 0, 0, 0, 0, 0,
	0, 0, 2060, 0, 0, 0, 0, 0, 0, 2049,
	2047, 2048, 2040, 2041, 2042, 2043, 2045, 2046, 313, 0,
	0, 0, 2072, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2076, 0, 0, 0, 0, 0, 0,
	0, 0, 4324, 0, 0, 2050, 2051, 2057, 2079, 2056,
	2052, 0, 2049, 2047, 2048, 2040, 2041, 2042, 2043, 2045,
	2046, 0, 0, 0, 2072, 0, 0, 0, 2072, 1743,
	2091, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2072, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2072, 2072, 2072, 2072, 2072, 2072, 2072,
	2072, 2072, 2072, 2072, 2072, 2072, 2072, 2072, 2072, 2072,
	2072, 2072, 2072, 2072, 2072, 2072, 2072, 2072, 2072, 2072,
	2072, 2072, 2072, 2072, 2072, 2072, 2072, 2072, 2072, 0,
	0, 0, 0, 2884, 2072, 0, 2072, 2072, 2072, 2072,
	0, 0, 0, 927, 0, 0, 0, 4634, 3065, 3065,
	0, 0, 0, 0, 0, 1461, 0, 0, 0, 0,
	0, 0, 0, 2072, 0, 0, 0, 0, 0, 2056,
	2052, 0, 2049, 2047, 2048, 2040, 2041, 2042, 2043, 2045,
	2046, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3296, 0, 0, 0, 0,
	0, 86, 927, 0, 0, 4854, 0, 4854, 0, 0,
	1743, 0, 0, 0, 2072, 1461, 0, 0, 1461, 0,
	87, 0, 0, 0, 0, 0, 0, 0, 1484, 3240,
	0, 0, 0, 1484, 0, 1484, 0, 0, 92, 0,
	0, 0, 927, 927, 2072, 0, 0, 2072, 0, 0,
	2072, 0, 0, 2072, 0, 0, 0, 0, 0, 2072,
	2072, 2072, 2072, 2072, 2072, 2072, 0, 0, 0, 0,
	0, 0, 0, 0, 3296, 0, 0, 0, 126, 0,
	0, 101, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3426, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3296, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3426,
	0, 0, 2722, 0, 1040, 2072, 0, 0, 3790, 0,
	3065, 3065, 3065, 3065, 0, 0, 2072, 126, 2072, 124,
	126, 0, 0, 2072, 0, 108, 121, 0, 0, 1686,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2754, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2796, 0, 2800, 0, 0, 0, 0, 0, 0, 2814,
	0, 109, 1248, 1702, 0, 0, 0, 0, 2825, 2826,
	2827, 2828, 2829, 2830, 2831, 2832, 2833, 2834, 2835, 2836,
	2837, 2838, 2839, 2840, 2841, 2842, 2843, 2844, 2845, 2846,
	2847, 2848, 2849, 2850, 2851, 2852, 2853, 2854, 2855, 2856,
	2857, 2858, 2859, 2860, 0, 2866, 0, 2868, 2869, 2870,
	2871, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 2895, 0, 0, 126, 0, 0, 0,
	0, 0, 0, 0, 0, 2113, 0, 0, 0, 2946,
	0, 0, 0, 0, 0, 0, 0, 0, 4568, 0,
	0, 0, 0, 0, 0, 2976, 2979, 2982, 2985, 4581,
	4582, 2991, 2992, 2993, 2994, 2995, 2996, 2997, 0, 4584,
	0, 0, 0, 2036, 2037, 0, 2069, 2070, 2071, 2080,
	2081, 2082, 0, 0, 0, 0, 0, 0, 0, 3057,
	0, 3068, 3070, 3075, 0, 0, 2073, 2067, 0, 0,
	0, 3452, 0, 0, 0, 2039, 0, 0, 0, 0,
	0, 113, 0, 0, 0, 0, 2086, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1702,
	0, 0, 0, 0, 2092, 0, 3442, 3440, 0, 0,
	927, 0, 0, 2038, 3444, 3446, 3436, 0, 0, 0,
	0, 0, 0, 0, 2058, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2055, 0, 0, 0, 0, 0,
	212, 4670, 116, 0, 0, 120, 2656, 4676, 4677, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3462,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1702, 0, 1702, 0, 0, 0, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 1041, 0, 0, 0, 0,
	0, 170, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1484, 2061, 2062, 2063, 2064,
	0, 0, 0, 0, 0, 0, 2044, 0, 0, 0,
	0, 277, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 175,
	0, 0, 0, 2072, 2072, 0, 2072, 0, 0, 2077,
	0, 0, 0, 2087, 0, 0, 218, 0, 126, 0,
	2066, 2068, 0, 0, 276, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2083, 0, 2084, 0, 269, 0, 0, 0, 0, 2053,
	2054, 0, 3438, 270, 0, 0, 0, 213, 0, 0,
	0, 0, 217, 3454, 0, 0, 0, 0, 0, 2075,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 216, 2059, 0, 0, 3453, 3443, 3441,
	3445, 3447, 3437, 3439, 3455, 3457, 0, 0, 0, 0,
	0, 4782, 4783, 0, 0, 3449, 3451, 3459, 0, 0,
	0, 0, 1588, 0, 0, 0, 0, 0, 0, 1700,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2072, 2085, 0, 0, 0, 0, 0, 0,
	0, 0, 3463, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2074, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2089, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 86, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2072, 2072, 0, 3065,
	3065, 3485, 3486, 2072, 3488, 87, 0, 0, 0, 0,
	0, 0, 0, 3790, 3790, 0, 0, 2072, 2072, 1850,
	1851, 0, 0, 92, 0, 2065, 0, 2072, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2072, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2060, 0, 2072, 0, 0, 0, 0, 0, 0,
	0, 0, 1297, 0, 0, 0, 101, 0, 3456, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2656, 2078, 0, 0, 0, 0, 0, 3065,
	3065, 3065, 3065, 3065, 3065, 3065, 3065, 3065, 3065, 3065,
	3065, 3065, 3065, 3065, 3065, 3065, 3065, 3065, 3065, 1040,
	3065, 3790, 3790, 3790, 3790, 312, 312, 312, 0, 2091,
	0, 0, 56, 0, 124, 0, 0, 0, 0, 0,
	108, 121, 1977, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 3464, 0, 0, 0, 0, 2072, 0,
	969, 0, 3614, 3448, 3450, 0, 0, 3458, 5005, 0,
	5007, 5008, 5009, 0, 5011, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 969,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1484,
	0, 0, 0, 1702, 1702, 0, 109, 0, 0, 0,
	0, 0, 2076, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2050, 2051, 2057, 2079, 2056, 2052,
	0, 2049, 2047, 2048, 2040, 2041, 2042, 2043, 2045, 2046,
	0, 2093, 2094, 0, 0, 3744, 0, 0, 0, 3745,
	0, 0, 0, 0, 0, 0, 1248, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 5062,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1702, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3678,
	3679, 0, 0, 0, 0, 3685, 2612, 0, 0, 0,
	0, 0, 2072, 2036, 2037, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3699, 3700, 0, 0, 0, 0,
	2946, 0, 0, 0, 0, 0, 0, 2067, 0, 0,
	0, 0, 0, 0, 0, 2039, 0, 0, 0, 0,
	1421, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 113, 0, 0, 0,
	0, 0, 0, 0, 2092, 3709, 0, 0, 0, 0,
	0, 2072, 2072, 2038, 0, 0, 0, 0, 0, 0,
	0, 3723, 0, 0, 2058, 0, 0, 0, 0, 0,
	0, 2225, 0, 0, 2055, 5154, 0, 0, 3735, 0,
	0, 0, 0, 0, 0, 0, 0, 2235, 0, 1700,
	0, 0, 0, 0, 0, 212, 0, 116, 0, 0,
	120, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 4280, 0, 0, 0, 0, 0, 0,
	1041, 0, 0, 0, 0, 0, 170, 0, 0, 0,
	1700, 927, 0, 0, 0, 0, 2061, 2062, 2063, 2064,
	0, 0, 0, 0, 0, 0, 2044, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3075,
	3075, 3075, 0, 0, 0, 0, 277, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2187, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 175, 0, 0, 0, 0, 0,
	2066, 2068, 2036, 2037, 0, 0, 0, 0, 3830, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 0, 276,
	0, 0, 0, 0, 0, 0, 2067, 0, 0, 2053,
	2054, 0, 0, 0, 2039, 0, 0, 0, 0, 269,
	0, 0, 1702, 0, 0, 0, 0, 0, 270, 0,
	0, 0, 213, 0, 0, 2072, 2072, 217, 0, 2072,
	3790, 3790, 2072, 2092, 2059, 0, 2072, 0, 0, 0,
	0, 0, 2038, 2072, 0, 0, 0, 0, 1844, 0,
	0, 0, 0, 2058, 0, 0, 2072, 0, 0, 0,
	0, 0, 0, 2055, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2072,
	2072, 2072, 2072, 2072, 0, 0, 0, 0, 0, 2072,
	0, 2072, 0, 0, 3790, 3790, 3790, 3790, 3790, 3790,
	3790, 3790, 3790, 3790, 3790, 3790, 3790, 3790, 3790, 3790,
	3790, 3790, 3790, 3790, 0, 2089, 1248, 3790, 0, 0,
	2072, 2072, 4279, 0, 0, 0, 0, 0, 1248, 0,
	0, 0, 0, 2072, 2656, 0, 0, 0, 0, 0,
	0, 0, 2072, 0, 0, 2061, 2062, 2063, 2064, 0,
	0, 0, 0, 0, 0, 2044, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3984,
	0, 0, 0, 0, 0, 2065, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2596,
	0, 2060, 0, 0, 0, 0, 0, 0, 0, 2066,
	2068, 0, 0, 0, 0, 0, 2072, 2619, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2631, 2072, 2631, 0, 0, 2053, 2054,
	0, 2638, 0, 0, 0, 0, 0, 0, 0, 4053,
	4054, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2072, 0, 0, 0, 2091,
	0, 0, 0, 2059, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2666, 0, 0, 0, 0, 0, 0, 2072, 2072, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2689, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 2706,
	0, 2708, 0, 2710, 0, 2712, 0, 2713, 0, 0,
	0, 0, 0, 0, 0, 312, 0, 312, 312, 0,
	0, 312, 0, 0, 2089, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2056, 2052,
	0, 2049, 2047, 2048, 2040, 2041, 2042, 2043, 2045, 2046,
	0, 0, 0, 0, 2743, 2744, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2065, 2072, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	0, 312, 312, 312, 0, 0, 312, 312, 0, 0,
	2060, 0, 0, 927, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 969, 0,
	0, 0, 2072, 2072, 0, 0, 0, 2072, 2072, 0,
	0, 2072, 2072, 0, 0, 0, 2072, 0, 0, 0,
	2072, 0, 0, 0, 0, 2072, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3065, 0, 0, 0, 0, 0, 0, 0, 2091, 312,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2814, 0, 0,
	0, 0, 0, 0, 4277, 4278, 312, 312, 4281, 0,
	2612, 0, 4284, 0, 0, 0, 0, 0, 1333, 0,
	0, 4288, 0, 0, 0, 0, 0, 0, 0, 0,
	4295, 0, 0, 0, 0, 3830, 0, 0, 0, 0,
	0, 0, 0, 0, 2036, 2037, 0, 0, 0, 0,
	4308, 0, 0, 0, 0, 0, 0, 0, 3065, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2067, 0,
	4331, 4332, 0, 4333, 4334, 4335, 2039, 2056, 2052, 0,
	2049, 2047, 2048, 2040, 2041, 2042, 2043, 2045, 2046, 0,
	0, 4341, 0, 0, 0, 4343, 0, 0, 0, 0,
	0, 0, 3161, 0, 0, 2092, 0, 0, 0, 0,
	0, 0, 0, 0, 2038, 0, 0, 0, 0, 312,
	0, 2072, 0, 0, 0, 2058, 0, 0, 4372, 4373,
	0, 0, 0, 0, 0, 2055, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 0, 0, 4385, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2072, 2072, 4394, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3684, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2061, 2062, 2063,
	2064, 0, 0, 0, 0, 0, 0, 2044, 0, 0,
	0, 2619, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2072, 2072, 2072,
	0, 0, 0, 0, 0, 0, 0, 0, 2072, 2072,
	3790, 3065, 0, 0, 0, 0, 4468, 2072, 0, 0,
	2072, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2066, 2068, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4486, 0, 1425, 0, 0, 0,
	0, 0, 0, 927, 0, 0, 0, 0, 0, 0,
	2053, 2054, 0, 0, 0, 0, 3790, 3065, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4517, 0,
	0, 0, 0, 2072, 0, 0, 0, 0, 0, 0,
	0, 2072, 3065, 0, 0, 2059, 0, 0, 0, 2072,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2072, 0, 2072, 0, 0, 0, 0, 0, 0,
	0, 0, 2209, 2072, 1421, 0, 0, 2612, 312, 4549,
	4550, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1700, 0, 312, 2209, 312, 0, 0, 0,
	0, 0, 0, 0, 969, 0, 0, 0, 0, 0,
	0, 0, 927, 969, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2089, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 0,
	0, 0, 0, 0, 3790, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3504, 0,
	0, 0, 0, 0, 0, 0, 2065, 2187, 0, 2619,
	0, 0, 2036, 2037, 0, 0, 0, 0, 2072, 3790,
	0, 0, 2072, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2060, 0, 2187, 0, 2067, 0, 0, 0,
	0, 3790, 0, 4667, 2039, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3576, 0, 0, 0, 0, 0,
	0, 0, 0, 2092, 0, 0, 0, 0, 0, 0,
	0, 0, 2038, 0, 0, 0, 3590, 0, 3593, 0,
	0, 0, 0, 2058, 0, 0, 0, 0, 0, 0,
	2091, 0, 0, 2055, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4714, 4715, 0,
	0, 0, 0, 4719, 4720, 0, 0, 0, 4723, 4724,
	0, 0, 0, 0, 0, 0, 4728, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4732, 3636, 1700,
	3638, 1700, 3677, 0, 0, 0, 0, 0, 3645, 0,
	0, 0, 0, 4737, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2061, 2062, 2063, 2064, 0,
	0, 0, 0, 0, 0, 2044, 0, 0, 0, 2056,
	2052, 0, 2049, 2047, 2048, 2040, 2041, 2042, 2043, 2045,
	2046, 0, 3674, 0, 312, 0, 0, 0, 969, 0,
	2072, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2072, 0, 0, 2066,
	2068, 0, 0, 0, 0, 0, 0, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	851, 0, 0, 0, 0, 0, 312, 0, 2053, 2054,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 0,
	0, 835, 0, 0, 312, 0, 836, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 0, 312, 2059, 0, 0, 0, 0, 312, 0,
	0, 0, 0, 0, 1248, 0, 0, 0, 0, 0,
	0, 0, 2072, 0, 0, 0, 0, 0, 0, 837,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	838, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 0,
	0, 0, 0, 839, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2072, 312, 1702, 0, 2089, 0, 857, 0, 0, 0,
	4903, 0, 0, 0, 969, 0, 312, 0, 312, 0,
	312, 0, 312, 0, 312, 0, 0, 0, 0, 840,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 841, 833, 0, 0, 0, 0,
	0, 0, 0, 0, 2065, 0, 0, 4943, 4944, 0,
	0, 312, 312, 312, 312, 312, 0, 0, 842, 0,
	0, 0, 0, 834, 0, 0, 1425, 0, 0, 0,
	2060, 0, 0, 0, 1425, 0, 0, 0, 0, 0,
	866, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 856, 0,
	927, 0, 0, 0, 0, 0, 0, 0, 1425, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2091, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 5029, 5030, 5031, 0, 0, 0,
	3881, 0, 0, 0, 1425, 0, 0, 0, 0, 0,
	0, 1425, 853, 0, 0, 0, 0, 2814, 0, 0,
	5040, 5041, 0, 0, 0, 0, 0, 1425, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 5049, 5052,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1700, 1700, 0, 0, 0, 2056, 2052, 0,
	2049, 2047, 2048, 2040, 2041, 2042, 2043, 2045, 2046, 1425,
	0, 844, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3947, 1421,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 864, 0, 845, 1421, 0, 0, 0, 0,
	0, 5115, 0, 0, 0, 0, 0, 0, 0, 312,
	5123, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4003, 4005, 0, 0, 2619, 5131, 0, 0, 1248, 312,
	0, 0, 0, 0, 0, 0, 969, 0, 969, 0,
	865, 312, 0, 0, 0, 0, 0, 0, 846, 5143,
	0, 0, 5145, 861, 862, 0, 859, 0, 0, 0,
	0, 0, 0, 0, 0, 854, 5155, 0, 847, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 0,
	0, 969, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 0, 0, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 312, 848, 0, 855, 312,
	0, 312, 0, 0, 0, 0, 0, 849, 312, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 0,
	0, 0, 0, 850, 0, 0, 0, 0, 858, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 867, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3094, 0, 852, 0, 0, 0,
	0, 2036, 2037, 0, 2069, 2070, 2071, 2080, 2081, 2082,
	0, 0, 0, 0, 0, 0, 4153, 0, 0, 0,
	0, 0, 0, 0, 2073, 2067, 0, 312, 0, 3092,
	0, 0, 0, 2039, 3096, 0, 0, 0, 0, 0,
	0, 312, 0, 0, 2086, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 3097, 0, 0, 0,
	0, 0, 2092, 0, 0, 5280, 0, 0, 1425, 5284,
	1425, 2038, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2058, 0, 0, 1425, 0, 0, 0, 0,
	0, 0, 2055, 0, 0, 0, 0, 0, 3098, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2282, 0,
	0, 0, 0, 0, 0, 1425, 0, 0, 0, 312,
	0, 0, 0, 0, 0, 0, 0, 3099, 0, 0,
	0, 0, 0, 0, 3100, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4261,
	0, 1700, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3101, 0, 0,
	0, 969, 0, 0, 2061, 2062, 2063, 2064, 0, 0,
	0, 0, 0, 0, 2044, 0, 0, 0, 0, 4275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 0, 0, 0, 0,
	0, 2814, 0, 0, 0, 0, 312, 0, 0, 1425,
	5052, 0, 0, 0, 0, 0, 0, 2077, 0, 3102,
	851, 2087, 0, 0, 0, 0, 0, 0, 2066, 2068,
	0, 0, 0, 0, 0, 0, 0, 3103, 0, 0,
	0, 835, 0, 0, 0, 0, 836, 3104, 2083, 0,
	2084, 0, 0, 0, 0, 0, 0, 2053, 2054, 0,
	0, 312, 0, 0, 0, 0, 0, 1248, 0, 0,
	0, 0, 0, 3105, 0, 0, 0, 2075, 0, 0,
	0, 0, 0, 312, 0, 312, 0, 0, 0, 837,
	0, 0, 2059, 0, 0, 0, 312, 0, 0, 0,
	838, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 839, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 5482, 5482, 5482, 0,
	0, 2085, 0, 0, 0, 0, 857, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 312, 312, 312, 0,
	0, 0, 2074, 0, 0, 312, 0, 0, 0, 840,
	312, 0, 0, 2089, 3106, 0, 5508, 0, 0, 0,
	0, 0, 1425, 1425, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1425, 841, 833, 0, 0, 0, 0,
	0, 312, 0, 0, 0, 0, 0, 0, 3107, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 842, 1425,
	0, 0, 0, 834, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2065, 0, 0, 0, 5482, 0, 0,
	866, 0, 0, 0, 0, 0, 3108, 3109, 1425, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2060,
	0, 0, 0, 0, 0, 0, 0, 0, 856, 0,
	0, 0, 0, 0, 0, 3110, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3115, 0, 5594, 0, 0,
	0, 2078, 0, 1425, 0, 1425, 0, 1425, 0, 0,
	0, 0, 0, 0, 0, 0, 3111, 0, 0, 0,
	0, 0, 0, 0, 0, 1425, 1425, 0, 0, 0,
	0, 3112, 0, 0, 0, 0, 0, 2091, 0, 1425,
	0, 0, 853, 0, 0, 0, 0, 0, 0, 0,
	0, 1425, 0, 0, 1425, 1425, 1425, 1425, 1425, 0,
	0, 0, 0, 3113, 0, 0, 0, 0, 2036, 2037,
	0, 2069, 2070, 2071, 2080, 2081, 2082, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 5482,
	5652, 2073, 2067, 0, 0, 0, 0, 0, 0, 0,
	2039, 0, 0, 0, 0, 0, 0, 0, 3114, 0,
	0, 2086, 0, 0, 0, 0, 0, 0, 0, 863,
	2076, 844, 0, 2619, 0, 0, 0, 0, 0, 2092,
	0, 0, 2050, 2051, 2057, 2079, 2056, 2052, 2038, 2049,
	2047, 2048, 2040, 2041, 2042, 2043, 2045, 2046, 0, 2058,
	0, 0, 864, 0, 845, 0, 0, 4618, 0, 2055,
	0, 0, 0, 0, 0, 0, 0, 4628, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2619, 0, 2619, 0, 0, 0, 0,
	4649, 0, 0, 0, 1421, 2282, 2282, 1425, 0, 0,
	865, 0, 0, 0, 0, 0, 0, 0, 846, 0,
	0, 0, 0, 861, 862, 0, 859, 0, 0, 0,
	0, 0, 0, 0, 0, 854, 0, 0, 847, 0,
	2036, 2037, 1421, 2069, 2070, 2071, 2080, 2081, 2082, 0,
	0, 2061, 2062, 2063, 2064, 0, 0, 0, 0, 0,
	0, 2044, 0, 2073, 2067, 0, 4694, 0, 0, 0,
	0, 0, 2039, 0, 0, 2209, 0, 0, 0, 0,
	0, 0, 0, 2086, 0, 0, 848, 312, 855, 0,
	0, 0, 0, 0, 0, 0, 0, 849, 969, 0,
	1425, 2092, 0, 0, 2077, 0, 0, 0, 2087, 0,
	2038, 0, 0, 850, 0, 2066, 2068, 0, 858, 0,
	0, 2058, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2055, 0, 0, 867, 2083, 0, 2084, 0, 0,
	0, 0, 0, 0, 2053, 2054, 852, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 0, 0, 0, 312,
	312, 0, 0, 0, 2075, 1425, 0, 0, 0, 0,
	0, 0, 1425, 0, 0, 0, 0, 0, 0, 2059,
	0, 1425, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 0, 0, 1425, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2061, 2062, 2063, 2064, 0, 0, 0,
	0, 0, 0, 2044, 0, 0, 0, 0, 2085, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 312, 0,
	0, 312, 0, 0, 0, 0, 0, 0, 2209, 2074,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2089, 0, 312, 0, 0, 0, 2077, 0, 0, 0,
	2087, 0, 0, 0, 0, 0, 0, 2066, 2068, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2083, 0, 2084,
	0, 0, 0, 0, 0, 0, 2053, 2054, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2065, 0, 0, 0, 0, 0, 2075, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4874, 0, 0,
	0, 2059, 0, 0, 0, 0, 2060, 0, 0, 0,
	0, 0, 0, 2619, 0, 0, 0, 0, 0, 0,
	0, 1425, 0, 0, 0, 0, 0, 0, 0, 2036,
	2037, 0, 2069, 2070, 2071, 2080, 2081, 2082, 2078, 0,
	0, 0, 0, 0, 0, 312, 0, 0, 0, 0,
	2085, 0, 2073, 2067, 0, 0, 0, 0, 0, 0,
	0, 2039, 0, 969, 0, 0, 0, 0, 0, 0,
	2282, 2074, 2086, 312, 2091, 0, 0, 0, 0, 0,
	0, 0, 2089, 0, 0, 0, 0, 0, 0, 0,
	2092, 0, 0, 0, 0, 0, 0, 312, 0, 2038,
	0, 0, 0, 0, 0, 0, 0, 1421, 0, 0,
	2058, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2055, 0, 0, 0, 0, 0, 2619, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4985, 0, 0,
	0, 0, 2065, 0, 0, 0, 1425, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2076, 1425, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2060, 2050,
	2051, 2057, 2079, 2056, 2052, 0, 2049, 2047, 2048, 2040,
	2041, 2042, 2043, 2045, 2046, 0, 0, 0, 0, 0,
	2942, 0, 0, 0, 2943, 0, 0, 0, 0, 0,
	2078, 0, 2061, 2062, 2063, 2064, 312, 0, 312, 0,
	0, 0, 2044, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2091, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 2077, 0, 0, 0, 2087,
	0, 0, 0, 0, 0, 0, 2066, 2068, 0, 1425,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1425, 0, 1425, 0, 0, 2083, 0, 2084, 1425,
	0, 0, 0, 0, 0, 2053, 2054, 0, 0, 0,
	1425, 1425, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2075, 0, 0, 0, 2076,
	0, 0, 0, 0, 0, 0, 0, 0, 5100, 0,
	2059, 2050, 2051, 2057, 2079, 2056, 2052, 0, 2049, 2047,
	2048, 2040, 2041, 2042, 2043, 2045, 2046, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4742, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2085,
	0, 0, 0, 0, 0, 1425, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2074, 0, 0, 0, 1421, 1421, 0, 0, 0, 0,
	0, 2089, 0, 0, 2619, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2631, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2065, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 969, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2060, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	5236, 1700, 0, 2036, 2037, 0, 2069, 2070, 2071, 2080,
	2081, 2082, 0, 0, 0, 0, 0, 0, 0, 2078,
	0, 0, 0, 0, 0, 0, 2073, 2067, 0, 0,
	0, 0, 0, 0, 0, 2039, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2086, 0, 0, 0,
	0, 0, 0, 0, 0, 2091, 0, 0, 0, 0,
	0, 0, 0, 0, 2092, 0, 0, 0, 0, 0,
	0, 0, 0, 2038, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2058, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2055, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 2076, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2050, 2051, 2057, 2079, 2056, 2052, 0, 2049, 2047, 2048,
	2040, 2041, 2042, 2043, 2045, 2046, 0, 0, 0, 0,
	312, 0, 0, 0, 0, 4293, 2061, 2062, 2063, 2064,
	0, 0, 0, 0, 0, 0, 2044, 5358, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 0, 0, 0, 0, 0,
	1425, 1425, 0, 0, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 0, 0, 2077,
	312, 0, 312, 2087, 0, 0, 0, 312, 0, 0,
	2066, 2068, 0, 0, 0, 0, 0, 0, 1425, 0,
	0, 0, 0, 0, 0, 0, 0, 1421, 0, 0,
	2083, 0, 2084, 0, 0, 0, 1425, 0, 0, 2053,
	2054, 0, 0, 0, 0, 0, 0, 0, 5416, 0,
	0, 1425, 0, 0, 1425, 0, 0, 1310, 0, 2075,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 2059, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2282, 0, 0, 0, 1425, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 5464, 0, 0, 0,
	314, 314, 314, 0, 0, 0, 2282, 0, 0, 0,
	0, 0, 0, 2085, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 314, 0, 0,
	0, 0, 0, 0, 2074, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2089, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 2282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2065, 0, 0, 0, 0,
	1421, 0, 0, 0, 0, 0, 0, 0, 1421, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2060, 0, 0, 0, 0, 2209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2036, 2037, 0, 2069, 2070, 2071, 2080, 2081,
	2082, 0, 0, 2078, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2073, 2067, 0, 1425, 312,
	0, 0, 0, 0, 2039, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2086, 0, 0, 0, 2091,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2209, 0, 2209, 2092, 0, 0, 0, 0, 0, 0,
	0, 0, 2038, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2058, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 2055, 0, 0, 0, 0, 0, 0,
	312, 0, 0, 312, 0, 0, 1425, 0, 1425, 0,
	0, 0, 1425, 0, 0, 0, 0, 0, 0, 0,
	1425, 1425, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2076, 0, 0, 0, 0, 0, 312, 0,
	0, 0, 0, 0, 2050, 2051, 2057, 2079, 2056, 2052,
	0, 2049, 2047, 2048, 2040, 2041, 2042, 2043, 2045, 2046,
	0, 0, 0, 1425, 0, 0, 0, 0, 0, 3747,
	0, 0, 0, 0, 0, 2061, 2062, 2063, 2064, 0,
	0, 0, 0, 1425, 0, 2044, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1425, 0, 1425, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 0, 0, 0, 2077, 0,
	0, 0, 2087, 0, 0, 0, 0, 0, 0, 2066,
	2068, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2083,
	1425, 2084, 0, 1425, 0, 0, 0, 0, 2053, 2054,
	0, 0, 0, 0, 991, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2075, 0,
	0, 0, 0, 0, 0, 994, 0, 0, 0, 0,
	995, 0, 0, 2059, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1425, 996, 0, 1010, 0, 0, 0, 0,
	0, 0, 2085, 0, 0, 0, 0, 0, 0, 1425,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2282,
	2282, 0, 997, 2074, 0, 0, 0, 998, 0, 0,
	0, 0, 0, 0, 2089, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2282, 2282,
	1019, 0, 0, 0, 0, 0, 0, 999, 0, 0,
	0, 0, 0, 0, 0, 312, 0, 0, 0, 0,
	0, 0, 0, 1017, 318, 0, 0, 0, 0, 0,
	0, 2282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2065, 0, 0, 0, 992, 990,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1425, 1425, 0, 0, 0, 0, 0, 0, 0, 0,
	2060, 0, 1000, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1021,
	0, 0, 0, 0, 866, 0, 0, 0, 0, 1425,
	0, 312, 2078, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 961, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2209, 0, 0, 0, 0, 0, 0, 2091, 0,
	0, 961, 312, 0, 0, 2282, 0, 2282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1020, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1015, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2076, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 314, 2050, 2051, 2057, 2079, 2056, 2052, 0,
	2049, 2047, 2048, 2040, 2041, 2042, 2043, 2045, 2046, 0,
	314, 0, 314, 314, 1014, 0, 314, 0, 3746, 0,
	0, 0, 0, 0, 0, 1001, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1002, 2209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1425,
	1425, 0, 0, 0, 0, 0, 0, 1425, 0, 0,
	1425, 1425, 0, 0, 0, 0, 312, 0, 0, 0,
	1425, 0, 0, 0, 314, 1597, 314, 314, 314, 0,
	0, 314, 314, 1597, 865, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 989, 0, 0,
	1011, 2209, 2209, 314, 2282, 0, 0, 0, 0, 0,
	0, 0, 1003, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2209, 0, 312, 2209, 0, 1597, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1009, 0, 0, 0, 0, 0, 0, 0, 1425,
	0, 0, 0, 0, 314, 314, 0, 0, 0, 0,
	1004, 0, 0, 1425, 1005, 1024, 0, 1023, 0, 0,
	0, 1006, 1425, 1597, 0, 0, 0, 1425, 1425, 1425,
	1597, 314, 314, 0, 0, 0, 0, 1007, 0, 0,
	0, 0, 1016, 0, 0, 0, 1597, 0, 1025, 0,
	0, 1022, 1425, 0, 1425, 0, 0, 0, 867, 0,
	1425, 0, 1425, 0, 0, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1425, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2282, 0, 1597, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1302, 0, 0, 0, 0, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1425, 0, 0, 0,
	0, 0, 0, 0, 1425, 0, 0, 0, 1425, 1425,
	0, 1425, 0, 0, 0, 0, 2282, 0, 0, 0,
	0, 0, 1425, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1425, 1425, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1425, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1425, 0, 1425, 0,
	2209, 0, 2209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1425, 0, 0, 2036, 2037, 0, 2069,
	2070, 2071, 2080, 2081, 2082, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2073,
	2067, 0, 0, 0, 1425, 0, 0, 0, 2039, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2086,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 314, 0, 0, 0, 2092, 0, 0,
	0, 0, 0, 0, 1597, 0, 2038, 0, 0, 314,
	314, 314, 0, 1425, 1425, 0, 0, 2058, 0, 314,
	0, 0, 0, 0, 0, 0, 0, 2055, 314, 0,
	0, 0, 0, 0, 1597, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1425,
	0, 0, 0, 314, 1425, 0, 0, 0, 0, 0,
	0, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1425,
	1425, 1425, 1425, 1425, 1425, 1425, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2061,
	2062, 2063, 2064, 1425, 0, 0, 0, 0, 0, 2044,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1597, 0,
	0, 0, 1594, 1425, 0, 0, 0, 0, 0, 0,
	1714, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2077, 0, 2282, 0, 2087, 0, 0, 0,
	0, 0, 0, 2066, 2068, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1425, 0,
	1425, 0, 0, 2083, 1714, 2084, 0, 0, 0, 0,
	0, 0, 2053, 2054, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2075, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2059, 0, 0,
	1714, 1425, 0, 0, 0, 0, 0, 1714, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1714, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2085, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2074, 0, 314,
	0, 1597, 1597, 314, 0, 0, 0, 0, 2089, 0,
	1425, 0, 1597, 0, 0, 1714, 1425, 0, 0, 1425,
	1425, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1597, 0,
	0, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1425, 0, 0,
	0, 314, 0, 0, 0, 0, 0, 1597, 2065, 0,
	0, 0, 314, 0, 0, 0, 0, 0, 0, 314,
	0, 0, 0, 0, 0, 1425, 0, 0, 1425, 0,
	0, 0, 0, 0, 2060, 314, 0, 314, 0, 0,
	0, 0, 0, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 1597, 0, 1597, 0, 1597, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2078, 0, 0, 0,
	0, 0, 0, 0, 1597, 1597, 0, 0, 0, 0,
	0, 0, 0, 2282, 0, 0, 0, 0, 1597, 0,
	0, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	1597, 0, 2091, 1597, 1597, 1597, 1597, 1597, 0, 0,
	0, 0, 0, 0, 0, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 314,
	0, 314, 0, 314, 0, 314, 0, 314, 0, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1425, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1425, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2076, 314, 314, 314, 314,
	314, 0, 0, 0, 0, 0, 0, 2050, 2051, 2057,
	2079, 2056, 2052, 0, 2049, 2047, 2048, 2040, 2041, 2042,
	2043, 2045, 2046, 0, 179, 2282, 0, 0, 0, 0,
	0, 0, 3743, 86, 0, 53, 52, 1425, 1425, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 87, 0, 0, 0, 1597, 0, 1425, 0,
	0, 1425, 0, 0, 0, 1425, 0, 0, 0, 0,
	92, 1594, 0, 0, 0, 1425, 0, 0, 0, 0,
	0, 74, 0, 0, 0, 0, 2250, 0, 55, 0,
	177, 0, 0, 0, 0, 2250, 0, 0, 0, 0,
	0, 1714, 0, 0, 0, 0, 0, 0, 0, 0,
	54, 0, 0, 101, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1595, 0, 0, 0, 0, 0, 0, 0,
	1715, 57, 75, 0, 0, 0, 0, 0, 0, 1597,
	0, 58, 0, 0, 0, 0, 64, 0, 0, 0,
	0, 5663, 0, 0, 0, 1425, 0, 0, 0, 56,
	0, 124, 0, 0, 0, 0, 0, 108, 121, 0,
	0, 0, 0, 0, 1715, 0, 76, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1594, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1597, 59, 0, 0, 0, 0, 0, 0, 0,
	1715, 0, 0, 0, 0, 0, 0, 1715, 0, 0,
	0, 0, 0, 109, 314, 0, 0, 1597, 0, 0,
	0, 0, 0, 1715, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 0, 0, 0, 0,
	0, 314, 0, 314, 0, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1425, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1715, 0, 0, 0, 0,
	0, 0, 0, 314, 0, 77, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 314, 0, 0, 314,
	0, 1597, 0, 0, 0, 0, 0, 0, 0, 314,
	314, 0, 0, 0, 314, 0, 314, 0, 0, 0,
	0, 0, 0, 314, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 314, 0, 0, 0, 0, 1714, 1714,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1594,
	0, 0, 0, 0, 0, 0, 1425, 0, 1425, 0,
	0, 0, 0, 113, 0, 0, 0, 0, 0, 0,
	1597, 0, 0, 0, 0, 1714, 0, 0, 0, 0,
	0, 60, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 63, 0,
	0, 0, 314, 66, 1714, 0, 0, 0, 0, 0,
	0, 0, 0, 78, 0, 0, 314, 0, 0, 0,
	0, 65, 212, 0, 116, 0, 0, 120, 0, 5529,
	314, 0, 0, 61, 0, 0, 0, 178, 0, 0,
	0, 0, 0, 0, 0, 62, 0, 0, 0, 1714,
	0, 1714, 0, 1714, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 69, 0, 0,
	0, 1714, 1714, 170, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1714, 0, 0, 0, 0,
	176, 0, 0, 0, 314, 1597, 0, 1714, 0, 0,
	1714, 1714, 1714, 1714, 1714, 0, 0, 1597, 0, 0,
	0, 0, 0, 277, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2250, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 175, 0, 0, 0, 0, 314, 0, 0, 0,
	0, 79, 0, 0, 0, 0, 0, 0, 218, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	314, 1595, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 314, 0, 0, 0, 270, 0, 0, 0, 213,
	0, 0, 0, 0, 217, 0, 0, 0, 0, 0,
	0, 1715, 0, 0, 0, 0, 0, 0, 1597, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	1597, 0, 1597, 0, 0, 0, 0, 0, 1597, 0,
	0, 0, 0, 1594, 0, 0, 314, 0, 0, 1597,
	1597, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 314, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	2036, 2037, 0, 2069, 2070, 2071, 2080, 2081, 2082, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2073, 2067, 1595, 0, 0, 0, 0,
	0, 0, 2039, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2086, 1597, 0, 1594, 0, 0, 0,
	314, 314, 314, 314, 0, 0, 0, 0, 0, 0,
	314, 2092, 0, 0, 0, 314, 0, 0, 0, 0,
	2038, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2058, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2055, 0, 0, 0, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1594, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1594, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2061, 2062, 2063, 2064, 0, 0, 0,
	0, 0, 0, 2044, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1715, 1715,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1595,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2077, 0, 0, 0,
	2087, 0, 0, 0, 0, 1715, 0, 2066, 2068, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2083, 0, 2084,
	0, 0, 0, 0, 1715, 0, 2053, 2054, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2075, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2059, 0, 0, 0, 0, 0, 1594, 0, 1715,
	0, 1715, 0, 1715, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1715, 1715, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1715, 0, 0, 0, 0,
	2085, 0, 0, 0, 0, 0, 0, 1715, 0, 0,
	1715, 1715, 1715, 1715, 1715, 0, 0, 0, 0, 0,
	0, 2074, 0, 0, 0, 0, 0, 0, 0, 0,
	1597, 0, 2089, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1594, 0, 0, 1597, 0, 0, 0, 0,
	0, 0, 2065, 0, 1714, 0, 0, 0, 0, 0,
	0, 0, 0, 1597, 0, 0, 0, 0, 0, 0,
	0, 0, 314, 0, 0, 0, 0, 0, 2060, 0,
	0, 0, 0, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1597, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2078, 0, 0, 1595, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1597, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	314, 0, 0, 0, 314, 314, 2091, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1714, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1714, 0, 1714,
	314, 0, 0, 0, 0, 1714, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1714, 1714, 0, 0,
	0, 0, 0, 0, 0, 0, 1595, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 314, 314, 0, 0, 314, 0, 0, 2076,
	0, 0, 0, 314, 0, 0, 0, 0, 0, 0,
	0, 2050, 2051, 2057, 2079, 2056, 2052, 314, 2049, 2047,
	2048, 2040, 2041, 2042, 2043, 2045, 2046, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3742, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1595, 0,
	0, 1714, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1597, 0, 0,
	0, 0, 0, 0, 1595, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2036, 2037, 0, 2069, 2070,
	2071, 2080, 2081, 2082, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2073, 2067,
	0, 0, 0, 0, 0, 0, 0, 2039, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2086, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	314, 0, 0, 0, 0, 1597, 2092, 1597, 0, 0,
	0, 1597, 0, 0, 0, 2038, 0, 0, 314, 1597,
	1597, 0, 0, 1597, 0, 0, 2058, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 2055, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1597, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1597, 0, 1597, 1595, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2061, 2062,
	2063, 2064, 0, 0, 0, 0, 0, 0, 2044, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1597,
	0, 314, 1597, 314, 0, 0, 0, 0, 0, 0,
	0, 2077, 0, 0, 0, 2087, 0, 0, 0, 0,
	0, 0, 2066, 2068, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 314, 2083, 0, 2084, 0, 0, 0, 0, 0,
	0, 2053, 2054, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1595, 0, 0, 0, 0, 0, 0, 0,
	0, 2075, 0, 0, 1715, 0, 0, 0, 0, 0,
	0, 1597, 0, 0, 0, 0, 2059, 1594, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1597, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2085, 0, 0, 0, 0,
	0, 0, 1594, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2074, 0, 0, 0,
	1594, 0, 0, 0, 0, 0, 0, 2089, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1715, 0, 0, 0, 0,
	0, 0, 0, 0, 1594, 0, 0, 1715, 0, 1715,
	0, 0, 0, 0, 0, 1715, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1715, 1715, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2065, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1597, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2060, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 314, 0, 0,
	0, 0, 0, 1597, 0, 2078, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1715, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2091, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1594, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2076, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2050, 2051, 2057, 2079,
	2056, 2052, 0, 2049, 2047, 2048, 2040, 2041, 2042, 2043,
	2045, 2046, 0, 0, 314, 0, 0, 0, 0, 0,
	0, 3741, 0, 0, 0, 0, 0, 0, 1597, 1597,
	0, 0, 0, 0, 0, 0, 1597, 0, 0, 1597,
	1597, 0, 0, 0, 0, 0, 0, 0, 0, 1597,
	0, 0, 1714, 0, 1714, 314, 0, 0, 1594, 0,
	0, 0, 0, 0, 0, 961, 1714, 1714, 0, 2036,
	2037, 0, 2069, 2070, 2071, 2080, 2081, 2082, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 314,
	0, 0, 2073, 2067, 0, 0, 0, 0, 0, 314,
	0, 2039, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 314, 2086, 0, 0, 314, 0, 314, 0, 0,
	0, 0, 314, 0, 0, 0, 0, 0, 1597, 1714,
	2092, 0, 0, 0, 0, 0, 0, 0, 0, 2038,
	0, 1714, 0, 1714, 0, 0, 0, 0, 0, 0,
	2058, 1597, 0, 0, 0, 0, 1597, 1597, 1597, 0,
	2055, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1597, 0, 1597, 0, 0, 0, 0, 314, 1597,
	0, 1597, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1594, 0, 0, 1594,
	0, 0, 0, 0, 0, 0, 0, 1595, 0, 0,
	0, 0, 0, 0, 1597, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2061, 2062, 2063, 2064, 0, 0, 0, 0,
	0, 0, 2044, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1595, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1594, 0,
	1595, 0, 0, 0, 0, 2077, 0, 0, 0, 2087,
	0, 0, 0, 0, 0, 1594, 2066, 2068, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1595, 0, 2083, 0, 2084, 0,
	0, 0, 0, 0, 0, 2053, 2054, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1597, 1597, 0,
	1597, 0, 0, 0, 0, 2075, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2059, 1597, 1597, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1597, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2085,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2074, 0, 0, 0, 0, 1594, 0, 0, 0, 0,
	0, 2089, 0, 0, 0, 0, 0, 0, 0, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1597, 0, 0, 314, 0, 0, 314, 0,
	0, 0, 0, 0, 2250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1597, 0, 0, 0, 0, 0, 0,
	0, 2065, 0, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1595, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2060, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1597, 1597, 0, 0, 1597, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2078,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1597, 314,
	0, 0, 1715, 1597, 1715, 2091, 0, 0, 1595, 0,
	0, 0, 0, 0, 0, 0, 1715, 1715, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1597, 1597,
	1597, 1597, 1597, 1597, 1597, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1597, 0, 0, 1714, 1714, 0, 0, 0,
	0, 0, 0, 1714, 0, 0, 1714, 1714, 0, 0,
	0, 0, 0, 0, 0, 0, 1714, 0, 0, 1715,
	0, 0, 1597, 0, 0, 0, 0, 0, 2076, 0,
	0, 1715, 0, 1715, 0, 0, 0, 0, 0, 0,
	2050, 2051, 2057, 2079, 2056, 2052, 0, 2049, 2047, 2048,
	2040, 2041, 2042, 2043, 2045, 2046, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2943, 0, 1597, 0, 1597,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1714, 1595, 0, 0, 1595,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1714, 0,
	1597, 0, 0, 1714, 1714, 1714, 0, 0, 0, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1714, 0,
	1714, 0, 0, 0, 0, 0, 1714, 0, 1594, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1595, 2036,
	2037, 0, 2069, 2070, 2071, 2080, 2081, 2082, 0, 0,
	0, 1594, 0, 0, 0, 1595, 0, 0, 0, 1597,
	0, 0, 2073, 2067, 0, 1597, 0, 0, 1597, 1597,
	0, 2039, 0, 0, 0, 0, 314, 0, 0, 0,
	0, 0, 2086, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2092, 0, 0, 0, 0, 0, 0, 0, 0, 2038,
	0, 0, 0, 0, 0, 0, 0, 314, 0, 0,
	2058, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2055, 0, 0, 0, 1597, 0, 0, 1597, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 314, 314, 1594, 1594, 0, 1594, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1595, 0, 0, 1714, 1714,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2061, 2062, 2063, 2064, 0, 0, 0, 0,
	1594, 0, 2044, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2077, 0, 0, 0, 2087,
	0, 0, 0, 0, 0, 0, 2066, 2068, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2083, 0, 2084, 1594,
	0, 314, 0, 0, 0, 2053, 2054, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2075, 0, 0, 0, 0,
	1594, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2059, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 314,
	0, 0, 0, 0, 1597, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1597, 0, 0, 0, 0, 1714,
	1714, 0, 0, 0, 0, 0, 0, 0, 0, 2085,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1715, 1715, 0, 0, 0,
	2074, 0, 0, 1715, 0, 0, 1715, 1715, 0, 0,
	0, 2089, 0, 0, 0, 1594, 1715, 0, 0, 0,
	1714, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	314, 0, 0, 0, 0, 1714, 1714, 1714, 1714, 1714,
	1714, 1714, 0, 0, 1597, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1594,
	0, 2065, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1715, 0, 2060, 314, 1594,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1715, 0,
	0, 0, 0, 1715, 1715, 1715, 0, 0, 0, 2078,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1594, 0, 1714, 0, 1715, 0,
	1715, 0, 0, 0, 0, 0, 1715, 0, 1595, 0,
	0, 0, 0, 0, 0, 2091, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1597, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1595, 0, 0, 0, 0, 0, 1594, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2076, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2050, 2051, 2057, 2079, 2056, 2052, 0, 2049, 2047, 2048,
	2040, 2041, 2042, 2043, 2045, 2046, 1594, 0, 0, 0,
	0, 5403, 1714, 0, 0, 1714, 1714, 0, 2036, 2037,
	0, 2069, 2070, 2071, 2080, 2081, 2082, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2073, 2067, 0, 1595, 1595, 0, 1595, 0, 0,
	2039, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2086, 0, 0, 0, 0, 0, 0, 1715, 1715,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2092,
	0, 1594, 0, 0, 1714, 0, 0, 0, 2038, 0,
	1595, 0, 0, 0, 0, 0, 0, 0, 0, 2058,
	0, 0, 0, 0, 0, 0, 0, 2036, 2037, 2055,
	2069, 2070, 2071, 2080, 2081, 2082, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2073, 2067, 0, 0, 0, 0, 0, 0, 0, 2039,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2086, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2092, 1595,
	0, 0, 0, 0, 0, 0, 0, 2038, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2058, 0,
	0, 2061, 2062, 2063, 2064, 0, 0, 0, 2055, 0,
	1595, 2044, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2077, 0, 0, 0, 2087, 1715,
	1715, 0, 0, 0, 0, 2066, 2068, 0, 0, 0,
	0, 0, 2036, 2037, 0, 2069, 2070, 2071, 2080, 2081,
	2082, 0, 0, 0, 0, 2083, 0, 2084, 0, 0,
	2061, 2062, 2063, 2064, 2053, 2054, 2067, 0, 0, 0,
	2044, 0, 0, 0, 2039, 1595, 0, 0, 0, 0,
	1715, 0, 0, 0, 2075, 2086, 0, 0, 0, 0,
	0, 1714, 0, 0, 0, 0, 0, 0, 0, 2059,
	0, 1714, 0, 2092, 0, 1715, 1715, 1715, 1715, 1715,
	1715, 1715, 2038, 2077, 0, 0, 0, 2087, 0, 0,
	0, 0, 0, 2058, 2066, 2068, 0, 0, 0, 1595,
	0, 0, 0, 2055, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2083, 0, 2084, 0, 2085, 0,
	0, 0, 0, 2053, 2054, 0, 0, 0, 0, 1595,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2074,
	0, 0, 0, 2075, 0, 0, 0, 0, 0, 0,
	2089, 0, 0, 0, 0, 0, 0, 0, 2059, 0,
	0, 1714, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1595, 0, 1715, 0, 0, 0,
	0, 0, 0, 0, 0, 2061, 2062, 2063, 2064, 0,
	0, 0, 0, 0, 0, 2044, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2085, 0, 0,
	2065, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1595, 2074, 0,
	0, 0, 0, 0, 0, 0, 2060, 0, 2077, 2089,
	0, 0, 2087, 0, 0, 0, 0, 0, 0, 2066,
	2068, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2078, 2083,
	0, 2084, 0, 0, 0, 0, 0, 0, 2053, 2054,
	0, 0, 0, 0, 0, 0, 0, 1714, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2075, 2065,
	0, 0, 0, 0, 2091, 0, 1595, 0, 0, 0,
	0, 0, 1715, 2059, 0, 1715, 1715, 0, 0, 0,
	0, 0, 0, 0, 0, 2060, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2078, 0, 0,
	0, 0, 2085, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1595, 0, 0, 1715, 0, 0, 2076, 0, 0,
	0, 0, 0, 2091, 2089, 0, 0, 0, 0, 2050,
	2051, 2057, 2079, 2056, 2052, 0, 2049, 2047, 2048, 2040,
	2041, 2042, 2043, 2045, 2046, 0, 0, 0, 0, 0,
	5399, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2065, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2076, 0, 0, 0,
	2060, 0, 0, 0, 0, 0, 0, 0, 2050, 2051,
	2057, 2079, 2056, 2052, 0, 2049, 2047, 2048, 2040, 2041,
	2042, 2043, 2045, 2046, 0, 0, 0, 0, 0, 5299,
	0, 0, 2078, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2091, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1715, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1715, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2076, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2050, 2051, 2057, 2079, 2056, 2052, 0,
	2049, 2047, 2048, 2040, 2041, 2042, 2043, 2045, 2046, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1715, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1592,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 1598, 330, 331, 1599, 1600, 1601,
	0, 1602, 741, 1603, 1604, 1605, 332, 1606, 333, 334,
	335, 1364, 336, 337, 338, 339, 340, 341, 342, 742,
	743, 0, 343, 744, 344, 745, 1607, 746, 345, 346,
	347, 348, 349, 350, 351, 1608, 1609, 0, 352, 747,
	748, 749, 1610, 353, 354, 750, 1611, 1678, 1612, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 1613, 364,
	365, 366, 363, 367, 368, 1614, 369, 1715, 370, 371,
	372, 373, 374, 375, 376, 1615, 377, 378, 379, 1365,
	380, 381, 382, 1616, 1617, 1619, 1618, 1620, 1621, 1622,
	383, 384, 385, 386, 387, 0, 388, 390, 751, 752,
	1623, 393, 395, 389, 391, 1624, 394, 392, 396, 397,
	1625, 398, 399, 400, 1626, 1627, 401, 402, 403, 1628,
	404, 405, 406, 1629, 407, 408, 409, 1630, 410, 411,
	753, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 754, 755, 424, 1631, 319, 1632, 0,
	0, 0, 0, 425, 426, 427, 756, 0, 0, 0,
	428, 1633, 429, 430, 431, 1634, 432, 433, 1635, 1366,
	434, 435, 436, 757, 758, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 1636, 446, 759, 1637, 760, 447,
	1638, 448, 449, 450, 451, 452, 453, 454, 761, 762,
	763, 549, 1368, 455, 456, 457, 1639, 458, 459, 460,
	461, 462, 0, 0, 0, 320, 463, 464, 465, 1640,
	1367, 764, 466, 550, 467, 765, 766, 1641, 767, 1642,
	468, 469, 472, 1369, 768, 1370, 471, 473, 474, 1371,
	475, 0, 0, 0, 476, 477, 478, 479, 480, 481,
	482, 1643, 483, 485, 484, 1644, 487, 769, 486, 1372,
	488, 489, 1373, 1645, 490, 491, 492, 493, 494, 495,
	498, 1646, 1647, 496, 497, 499, 500, 0, 501, 502,
	504, 507, 503, 505, 506, 508, 521, 522, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	524, 0, 523, 1374, 525, 526, 527, 528, 529, 536,
	538, 539, 534, 535, 537, 540, 541, 543, 531, 532,
	533, 1375, 542, 530, 1648, 321, 1376, 544, 545, 546,
	547, 1649, 770, 548, 771, 551, 552, 1650, 0, 553,
	0, 554, 1651, 1652, 556, 557, 558, 1653, 1654, 559,
	560, 772, 1377, 561, 1378, 773, 562, 563, 555, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 1655,
	574, 575, 774, 576, 577, 578, 775, 579, 580, 581,
	776, 582, 777, 583, 584, 1656, 585, 586, 587, 0,
	588, 589, 590, 591, 592, 593, 594, 595, 778, 596,
	597, 599, 598, 600, 1657, 601, 0, 602, 603, 604,
	0, 0, 0, 0, 0, 605, 606, 608, 0, 609,
	610, 611, 612, 607, 613, 614, 615, 616, 617, 618,
	1658, 620, 621, 619, 622, 623, 1379, 624, 625, 626,
	627, 628, 779, 629, 0, 630, 631, 639, 640, 641,
	632, 633, 635, 642, 634, 643, 644, 645, 646, 648,
	647, 1659, 650, 651, 649, 652, 653, 654, 1660, 655,
	780, 656, 636, 637, 657, 658, 1380, 659, 660, 661,
	662, 663, 664, 665, 781, 0, 666, 1661, 667, 668,
	669, 670, 671, 672, 674, 638, 675, 680, 681, 782,
	676, 677, 678, 679, 783, 683, 684, 685, 686, 1662,
	687, 688, 0, 682, 673, 1663, 689, 690, 691, 692,
	693, 694, 0, 695, 696, 1664, 697, 784, 785, 786,
	787, 1665, 709, 1666, 698, 700, 701, 702, 703, 788,
	704, 789, 1667, 705, 706, 707, 708, 699, 710, 711,
	1668, 1669, 712, 713, 714, 716, 718, 719, 715, 717,
	720, 1670, 721, 1671, 0, 722, 723, 724, 790, 791,
	792, 1672, 726, 727, 725, 728, 729, 732, 730, 731,
	793, 733, 470, 734, 735, 1673, 1674, 1675, 1676, 736,
	737, 794, 738, 739, 740, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1592, 0,
	0, 0, 0, 0, 0, 3136, 0, 0, 0, 0,
	0, 0, 0, 0, 3137, 322, 323, 325, 324, 326,
	327, 328, 329, 1598, 330, 331, 1599, 1600, 1601, 0,
	1602, 741, 1603, 1604, 1605, 332, 1606, 333, 334, 335,
	1364, 336, 337, 338, 339, 340, 341, 342, 742, 743,
	0, 343, 744, 344, 745, 1607, 746, 345, 346, 347,
	348, 349, 350, 351, 1608, 1609, 0, 352, 747, 748,
	749, 1610, 353, 354, 750, 1611, 1678, 1612, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 1613, 364, 365,
	366, 363, 367, 368, 1614, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 1615, 377, 378, 379, 1365, 380,
	381, 382, 1616, 1617, 1619, 1618, 1620, 1621, 1622, 383,
	384, 385, 386, 387, 0, 388, 390, 751, 752, 1623,
	393, 395, 389, 391, 1624, 394, 392, 396, 397, 1625,
	398, 399, 400, 1626, 1627, 401, 402, 403, 1628, 404,
	405, 406, 1629, 407, 408, 409, 1630, 410, 411, 753,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 754, 755, 424, 1631, 319, 1632, 0, 0,
	0, 0, 425, 426, 427, 756, 0, 0, 0, 428,
	1633, 429, 430, 431, 1634, 432, 433, 1635, 1366, 434,
	435, 436, 757, 758, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 1636, 446, 759, 1637, 760, 447, 1638,
	448, 449, 450, 451, 452, 453, 454, 761, 762, 763,
	549, 1368, 455, 456, 457, 1639, 458, 459, 460, 461,
	462, 0, 0, 0, 320, 463, 464, 465, 1640, 1367,
	764, 466, 550, 467, 765, 766, 1641, 767, 1642, 468,
	469, 472, 1369, 768, 1370, 471, 473, 474, 1371, 475,
	0, 0, 0, 476, 477, 478, 479, 480, 481, 482,
	1643, 483, 485, 484, 1644, 487, 769, 486, 1372, 488,
	489, 1373, 1645, 490, 491, 492, 493, 494, 495, 498,
	1646, 1647, 496, 497, 499, 500, 0, 501, 502, 504,
	507, 503, 505, 506, 508, 521, 522, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 524,
	0, 523, 1374, 525, 526, 527, 528, 529, 536, 538,
	539, 534, 535, 537, 540, 541, 543, 531, 532, 533,
	1375, 542, 530, 1648, 321, 1376, 544, 545, 546, 547,
	1649, 770, 548, 771, 551, 552, 1650, 0, 553, 0,
	554, 1651, 1652, 556, 557, 558, 1653, 1654, 559, 560,
	772, 1377, 561, 1378, 773, 562, 563, 555, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 1655, 574,
	575, 774, 576, 577, 578, 775, 579, 580, 581, 776,
	582, 777, 583, 584, 1656, 585, 586, 587, 0, 588,
	589, 590, 591, 592, 593, 594, 595, 778, 596, 597,
	599, 598, 600, 1657, 601, 0, 602, 603, 604, 0,
	0, 0, 0, 0, 605, 606, 608, 0, 609, 610,
	611, 612, 607, 613, 614, 615, 616, 617, 618, 1658,
	620, 621, 619, 622, 623, 1379, 624, 625, 626, 627,
	628, 779, 629, 0, 630, 631, 639, 640, 641, 632,
	633, 635, 642, 634, 643, 644, 645, 646, 648, 647,
	1659, 650, 651, 649, 652, 653, 654, 1660, 655, 780,
	656, 636, 637, 657, 658, 1380, 659, 660, 661, 662,
	663, 664, 665, 781, 0, 666, 1661, 667, 668, 669,
	670, 671, 672, 674, 638, 675, 680, 681, 782, 676,
	677, 678, 679, 783, 683, 684, 685, 686, 1662, 687,
	688, 0, 682, 673, 1663, 689, 690, 691, 692, 693,
	694, 0, 695, 696, 1664, 697, 784, 785, 786, 787,
	1665, 709, 1666, 698, 700, 701, 702, 703, 788, 704,
	789, 1667, 705, 706, 707, 708, 699, 710, 711, 1668,
	1669, 712, 713, 714, 716, 718, 719, 715, 717, 720,
	1670, 721, 1671, 0, 722, 723, 724, 790, 791, 792,
	1672, 726, 727, 725, 728, 729, 732, 730, 731, 793,
	733, 470, 734, 735, 1673, 1674, 1675, 1676, 736, 737,
	794, 738, 739, 740, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1592, 0, 0, 0, 4302, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4304, 322, 323, 325, 324, 326, 327, 328, 329, 1598,
	330, 331, 1599, 1600, 1601, 0, 1602, 741, 1603, 1604,
	1605, 332, 1606, 333, 334, 335, 1364, 336, 337, 338,
	339, 340, 341, 342, 742, 743, 0, 343, 744, 344,
	745, 1607, 746, 345, 346, 347, 348, 349, 350, 351,
	1608, 1609, 0, 352, 747, 748, 749, 1610, 353, 354,
	750, 1611, 1678, 1612, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 1613, 364, 365, 366, 363, 367, 368,
	1614, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	1615, 377, 378, 379, 1365, 380, 381, 382, 1616, 1617,
	1619, 1618, 1620, 1621, 1622, 383, 384, 385, 386, 387,
	0, 388, 390, 751, 752, 1623, 393, 395, 389, 391,
	1624, 394, 392, 396, 397, 1625, 398, 399, 400, 1626,
	1627, 401, 402, 403, 1628, 404, 405, 406, 1629, 407,
	408, 409, 1630, 410, 411, 753, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 754, 755,
	424, 1631, 319, 1632, 0, 0, 0, 0, 425, 426,
	427, 756, 0, 0, 0, 428, 1633, 429, 430, 431,
	1634, 432, 433, 1635, 1366, 434, 435, 436, 757, 758,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 1636,
	446, 759, 1637, 760, 447, 1638, 448, 449, 450, 451,
	452, 453, 454, 761, 762, 763, 549, 1368, 455, 456,
	457, 1639, 458, 459, 460, 461, 462, 0, 0, 0,
	320, 463, 464, 465, 1640, 1367, 764, 466, 550, 467,
	765, 766, 1641, 767, 1642, 468, 469, 472, 1369, 768,
	1370, 471, 473, 474, 1371, 475, 0, 0, 0, 476,
	477, 478, 479, 480, 481, 482, 1643, 483, 485, 484,
	1644, 487, 769, 486, 1372, 488, 489, 1373, 1645, 490,
	491, 492, 493, 494, 495, 498, 1646, 1647, 496, 497,
	499, 500, 0, 501, 502, 504, 507, 503, 505, 506,
	508, 521, 522, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 524, 0, 523, 1374, 525,
	526, 527, 528, 529, 536, 538, 539, 534, 535, 537,
	540, 541, 543, 531, 532, 533, 1375, 542, 530, 1648,
	321, 1376, 544, 545, 546, 547, 1649, 770, 548, 771,
	551, 552, 1650, 0, 553, 0, 554, 1651, 1652, 556,
	557, 558, 1653, 1654, 559, 560, 772, 1377, 561, 1378,
	773, 562, 563, 555, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 1655, 574, 575, 774, 576, 577,
	578, 775, 579, 580, 581, 776, 582, 777, 583, 584,
	1656, 585, 586, 587, 0, 588, 589, 590, 591, 592,
	593, 594, 595, 778, 596, 597, 599, 598, 600, 1657,
	601, 0, 602, 603, 604, 0, 0, 0, 0, 0,
	605, 606, 608, 0, 609, 610, 611, 612, 607, 613,
	614, 615, 616, 617, 618, 1658, 620, 621, 619, 622,
	623, 1379, 624, 625, 626, 627, 628, 779, 629, 0,
	630, 631, 639, 640, 641, 632, 633, 635, 642, 634,
	643, 644, 645, 646, 648, 647, 1659, 650, 651, 649,
	652, 653, 654, 1660, 655, 780, 656, 636, 637, 657,
	658, 1380, 659, 660, 661, 662, 663, 664, 665, 781,
	0, 666, 1661, 667, 668, 669, 670, 671, 672, 674,
	638, 675, 680, 681, 782, 676, 677, 678, 679, 783,
	683, 684, 685, 686, 1662, 687, 688, 0, 682, 673,
	1663, 689, 690, 691, 692, 693, 694, 0, 695, 696,
	1664, 697, 784, 785, 786, 787, 1665, 709, 1666, 698,
	700, 701, 702, 703, 788, 704, 789, 1667, 705, 706,
	707, 708, 699, 710, 711, 1668, 1669, 712, 713, 714,
	716, 718, 719, 715, 717, 720, 1670, 721, 1671, 0,
	722, 723, 724, 790, 791, 792, 1672, 726, 727, 725,
	728, 729, 732, 730, 731, 793, 733, 470, 734, 735,
	1673, 1674, 1675, 1676, 736, 737, 794, 738, 739, 740,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1592, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4772, 322, 323, 325, 324, 326, 327, 328, 329, 1598,
	330, 331, 1599, 1600, 1601, 0, 1602, 741, 1603, 1604,
	1605, 332, 1606, 333, 334, 335, 1364, 336, 337, 338,
	339, 340, 341, 342, 742, 743, 0, 343, 744, 344,
	745, 1607, 746, 345, 346, 347, 348, 349, 350, 351,
	1608, 1609, 0, 352, 747, 748, 749, 1610, 353, 354,
	750, 1611, 1678, 1612, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 1613, 364, 365, 366, 363, 367, 368,
	1614, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	1615, 377, 378, 379, 1365, 380, 381, 382, 1616, 1617,
	1619, 1618, 1620, 1621, 1622, 383, 384, 385, 386, 387,
	0, 388, 390, 751, 752, 1623, 393, 395, 389, 391,
	1624, 394, 392, 396, 397, 1625, 398, 399, 400, 1626,
	1627, 401, 402, 403, 1628, 404, 405, 406, 1629, 407,
	408, 409, 1630, 410, 411, 753, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 754, 755,
	424, 1631, 319, 1632, 0, 0, 0, 0, 425, 426,
	427, 756, 0, 0, 0, 428, 1633, 429, 430, 431,
	1634, 432, 433, 1635, 1366, 434, 435, 436, 757, 758,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 1636,
	446, 759, 1637, 760, 447, 1638, 448, 449, 450, 451,
	452, 453, 454, 761, 762, 763, 549, 1368, 455, 456,
	457, 1639, 458, 459, 460, 461, 462, 0, 0, 0,
	320, 463, 464, 465, 1640, 1367, 764, 466, 550, 467,
	765, 766, 1641, 767, 1642, 468, 469, 472, 1369, 768,
	1370, 471, 473, 474, 1371, 475, 0, 0, 0, 476,
	477, 478, 479, 480, 481, 482, 1643, 483, 485, 484,
	1644, 487, 769, 486, 1372, 488, 489, 1373, 1645, 490,
	491, 492, 493, 494, 495, 498, 1646, 1647, 496, 497,
	499, 500, 0, 501, 502, 504, 507, 503, 505, 506,
	508, 521, 522, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 524, 0, 523, 1374, 525,
	526, 527, 528, 529, 536, 538, 539, 534, 535, 537,
	540, 541, 543, 531, 532, 533, 1375, 542, 530, 1648,
	321, 1376, 544, 545, 546, 547, 1649, 770, 548, 771,
	551, 552, 1650, 0, 553, 0, 554, 1651, 1652, 556,
	557, 558, 1653, 1654, 559, 560, 772, 1377, 561, 1378,
	773, 562, 563, 555, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 1655, 574, 575, 774, 576, 577,
	578, 775, 579, 580, 581, 776, 582, 777, 583, 584,
	1656, 585, 586, 587, 0, 588, 589, 590, 591, 592,
	593, 594, 595, 778, 596, 597, 599, 598, 600, 1657,
	601, 0, 602, 603, 604, 0, 0, 0, 0, 0,
	605, 606, 608, 0, 609, 610, 611, 612, 607, 613,
	614, 615, 616, 617, 618, 1658, 620, 621, 619, 622,
	623, 1379, 624, 625, 626, 627, 628, 779, 629, 0,
	630, 631, 639, 640, 641, 632, 633, 635, 642, 634,
	643, 644, 645, 646, 648, 647, 1659, 650, 651, 649,
	652, 653, 654, 1660, 655, 780, 656, 636, 637, 657,
	658, 1380, 659, 660, 661, 662, 663, 664, 665, 781,
	0, 666, 1661, 667, 668, 669, 670, 671, 672, 674,
	638, 675, 680, 681, 782, 676, 677, 678, 679, 783,
	683, 684, 685, 686, 1662, 687, 688, 0, 682, 673,
	1663, 689, 690, 691, 692, 693, 694, 0, 695, 696,
	1664, 697, 784, 785, 786, 787, 1665, 709, 1666, 698,
	700, 701, 702, 703, 788, 704, 789, 1667, 705, 706,
	707, 708, 699, 710, 711, 1668, 1669, 712, 713, 714,
	716, 718, 719, 715, 717, 720, 1670, 721, 1671, 0,
	722, 723, 724, 790, 791, 792, 1672, 726, 727, 725,
	728, 729, 732, 730, 731, 793, 733, 470, 734, 735,
	1673, 1674, 1675, 1676, 736, 737, 794, 738, 739, 740,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1592, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4770, 322, 323, 325, 324, 326, 327, 328, 329, 1598,
	330, 331, 1599, 1600, 1601, 0, 1602, 741, 1603, 1604,
	1605, 332, 1606, 333, 334, 335, 1364, 336, 337, 338,
	339, 340, 341, 342, 742, 743, 0, 343, 744, 344,
	745, 1607, 746, 345, 346, 347, 348, 349, 350, 351,
	1608, 1609, 0, 352, 747, 748, 749, 1610, 353, 354,
	750, 1611, 1678, 1612, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 1613, 364, 365, 366, 363, 367, 368,
	1614, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	1615, 377, 378, 379, 1365, 380, 381, 382, 1616, 1617,
	1619, 1618, 1620, 1621, 1622, 383, 384, 385, 386, 387,
	0, 388, 390, 751, 752, 1623, 393, 395, 389, 391,
	1624, 394, 392, 396, 397, 1625, 398, 399, 400, 1626,
	1627, 401, 402, 403, 1628, 404, 405, 406, 1629, 407,
	408, 409, 1630, 410, 411, 753, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 754, 755,
	424, 1631, 319, 1632, 0, 0, 0, 0, 425, 426,
	427, 756, 0, 0, 0, 428, 1633, 429, 430, 431,
	1634, 432, 433, 1635, 1366, 434, 435, 436, 757, 758,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 1636,
	446, 759, 1637, 760, 447, 1638, 448, 449, 450, 451,
	452, 453, 454, 761, 762, 763, 549, 1368, 455, 456,
	457, 1639, 458, 459, 460, 461, 462, 0, 0, 0,
	320, 463, 464, 465, 1640, 1367, 764, 466, 550, 467,
	765, 766, 1641, 767, 1642, 468, 469, 472, 1369, 768,
	1370, 471, 473, 474, 1371, 475, 0, 0, 0, 476,
	477, 478, 479, 480, 481, 482, 1643, 483, 485, 484,
	1644, 487, 769, 486, 1372, 488, 489, 1373, 1645, 490,
	491, 492, 493, 494, 495, 498, 1646, 1647, 496, 497,
	499, 500, 0, 501, 502, 504, 507, 503, 505, 506,
	508, 521, 522, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 524, 0, 523, 1374, 525,
	526, 527, 528, 529, 536, 538, 539, 534, 535, 537,
	540, 541, 543, 531, 532, 533, 1375, 542, 530, 1648,
	321, 1376, 544, 545, 546, 547, 1649, 770, 548, 771,
	551, 552, 1650, 0, 553, 0, 554, 1651, 1652, 556,
	557, 558, 1653, 1654, 559, 560, 772, 1377, 561, 1378,
	773, 562, 563, 555, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 1655, 574, 575, 774, 576, 577,
	578, 775, 579, 580, 581, 776, 582, 777, 583, 584,
	1656, 585, 586, 587, 0, 588, 589, 590, 591, 592,
	593, 594, 595, 778, 596, 597, 599, 598, 600, 1657,
	601, 0, 602, 603, 604, 0, 0, 0, 0, 0,
	605, 606, 608, 0, 609, 610, 611, 612, 607, 613,
	614, 615, 616, 617, 618, 1658, 620, 621, 619, 622,
	623, 1379, 624, 625, 626, 627, 628, 779, 629, 0,
	630, 631, 639, 640, 641, 632, 633, 635, 642, 634,
	643, 644, 645, 646, 648, 647, 1659, 650, 651, 649,
	652, 653, 654, 1660, 655, 780, 656, 636, 637, 657,
	658, 1380, 659, 660, 661, 662, 663, 664, 665, 781,
	0, 666, 1661, 667, 668, 669, 670, 671, 672, 674,
	638, 675, 680, 681, 782, 676, 677, 678, 679, 783,
	683, 684, 685, 686, 1662, 687, 688, 0, 682, 673,
	1663, 689, 690, 691, 692, 693, 694, 0, 695, 696,
	1664, 697, 784, 785, 786, 787, 1665, 709, 1666, 698,
	700, 701, 702, 703, 788, 704, 789, 1667, 705, 706,
	707, 708, 699, 710, 711, 1668, 1669, 712, 713, 714,
	716, 718, 719, 715, 717, 720, 1670, 721, 1671, 0,
	722, 723, 724, 790, 791, 792, 1672, 726, 727, 725,
	728, 729, 732, 730, 731, 793, 733, 470, 734, 735,
	1673, 1674, 1675, 1676, 736, 737, 794, 738, 739, 740,
	0, 0, 0, 0, 0, 0, 0, 0, 1592, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 5035, 322, 323, 325, 324, 326,
	327, 328, 329, 1598, 330, 331, 1599, 1600, 1601, 0,
	1602, 741, 1603, 1604, 1605, 332, 1606, 333, 334, 335,
	1364, 336, 337, 338, 339, 340, 341, 342, 742, 743,
	0, 343, 744, 344, 745, 1607, 746, 345, 346, 347,
	348, 349, 350, 351, 1608, 1609, 0, 352, 747, 748,
	749, 1610, 353, 354, 750, 1611, 1678, 1612, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 1613, 364, 365,
	366, 363, 367, 368, 1614, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 1615, 377, 378, 379, 1365, 380,
	381, 382, 1616, 1617, 1619, 1618, 1620, 1621, 1622, 383,
	384, 385, 386, 387, 0, 388, 390, 751, 752, 1623,
	393, 395, 389, 391, 1624, 394, 392, 396, 397, 1625,
	398, 399, 400, 1626, 1627, 401, 402, 403, 1628, 404,
	405, 406, 1629, 407, 408, 409, 1630, 410, 411, 753,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 754, 755, 424, 1631, 319, 1632, 0, 0,
	0, 0, 425, 426, 427, 756, 0, 0, 0, 428,
	1633, 429, 430, 431, 1634, 432, 433, 1635, 1366, 434,
	435, 436, 757, 758, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 1636, 446, 759, 1637, 760, 447, 1638,
	448, 449, 450, 451, 452, 453, 454, 761, 762, 763,
	549, 1368, 455, 456, 457, 1639, 458, 459, 460, 461,
	462, 0, 0, 0, 320, 463, 464, 465, 1640, 1367,
	764, 466, 550, 467, 765, 766, 1641, 767, 1642, 468,
	469, 472, 1369, 768, 1370, 471, 473, 474, 1371, 475,
	0, 0, 0, 476, 477, 478, 479, 480, 481, 482,
	1643, 483, 485, 484, 1644, 487, 769, 486, 1372, 488,
	489, 1373, 1645, 490, 491, 492, 493, 494, 495, 498,
	1646, 1647, 496, 497, 499, 500, 0, 501, 502, 504,
	507, 503, 505, 506, 508, 521, 522, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 524,
	0, 523, 1374, 525, 526, 527, 528, 529, 536, 538,
	539, 534, 535, 537, 540, 541, 543, 531, 532, 533,
	1375, 542, 530, 1648, 321, 1376, 544, 545, 546, 547,
	1649, 770, 548, 771, 551, 552, 1650, 0, 553, 0,
	554, 1651, 1652, 556, 557, 558, 1653, 1654, 559, 560,
	772, 1377, 561, 1378, 773, 562, 563, 555, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 1655, 574,
	575, 774, 576, 577, 578, 775, 579, 580, 581, 776,
	582, 777, 583, 584, 1656, 585, 586, 587, 0, 588,
	589, 590, 591, 592, 593, 594, 595, 778, 596, 597,
	599, 598, 600, 1657, 601, 0, 602, 603, 604, 0,
	0, 0, 0, 0, 605, 606, 608, 0, 609, 610,
	611, 612, 607, 613, 614, 615, 616, 617, 618, 1658,
	620, 621, 619, 622, 623, 1379, 624, 625, 626, 627,
	628, 779, 629, 0, 630, 631, 639, 640, 641, 632,
	633, 635, 642, 634, 643, 644, 645, 646, 648, 647,
	1659, 650, 651, 649, 652, 653, 654, 1660, 655, 780,
	656, 636, 637, 657, 658, 1380, 659, 660, 661, 662,
	663, 664, 665, 781, 0, 666, 1661, 667, 668, 669,
	670, 671, 672, 674, 638, 675, 680, 681, 782, 676,
	677, 678, 679, 783, 683, 684, 685, 686, 1662, 687,
	688, 0, 682, 673, 1663, 689, 690, 691, 692, 693,
	694, 0, 695, 696, 1664, 697, 784, 785, 786, 787,
	1665, 709, 1666, 698, 700, 701, 702, 703, 788, 704,
	789, 1667, 705, 706, 707, 708, 699, 710, 711, 1668,
	1669, 712, 713, 714, 716, 718, 719, 715, 717, 720,
	1670, 721, 1671, 0, 722, 723, 724, 790, 791, 792,
	1672, 726, 727, 725, 728, 729, 732, 730, 731, 793,
	733, 470, 734, 735, 1673, 1674, 1675, 1676, 736, 737,
	794, 738, 739, 740, 0, 0, 0, 0, 0, 0,
	0, 0, 1592, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4883, 322,
	323, 325, 324, 326, 327, 328, 329, 1598, 330, 331,
	1599, 1600, 1601, 0, 1602, 741, 1603, 1604, 1605, 332,
	1606, 333, 334, 335, 1364, 336, 337, 338, 339, 340,
	341, 342, 742, 743, 0, 343, 744, 344, 745, 1607,
	746, 345, 346, 347, 348, 349, 350, 351, 1608, 1609,
	0, 352, 747, 748, 749, 1610, 353, 354, 750, 1611,
	1678, 1612, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 1613, 364, 365, 366, 363, 367, 368, 1614, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 1615, 377,
	378, 379, 1365, 380, 381, 382, 1616, 1617, 1619, 1618,
	1620, 1621, 1622, 383, 384, 385, 386, 387, 0, 388,
	390, 751, 752, 1623, 393, 395, 389, 391, 1624, 394,
	392, 396, 397, 1625, 398, 399, 400, 1626, 1627, 401,
	402, 403, 1628, 404, 405, 406, 1629, 407, 408, 409,
	1630, 410, 411, 753, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 754, 755, 424, 1631,
	319, 1632, 0, 0, 0, 0, 425, 426, 427, 756,
	0, 0, 0, 428, 1633, 429, 430, 431, 1634, 432,
	433, 1635, 1366, 434, 435, 436, 757, 758, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 1636, 446, 759,
	1637, 760, 447, 1638, 448, 449, 450, 451, 452, 453,
	454, 761, 762, 763, 549, 1368, 455, 456, 457, 1639,
	458, 459, 460, 461, 462, 0, 0, 0, 320, 463,
	464, 465, 1640, 1367, 764, 466, 550, 467, 765, 766,
	1641, 767, 1642, 468, 469, 472, 1369, 768, 1370, 471,
	473, 474, 1371, 475, 0, 0, 0, 476, 477, 478,
	479, 480, 481, 482, 1643, 483, 485, 484, 1644, 487,
	769, 486, 1372, 488, 489, 1373, 1645, 490, 491, 492,
	493, 494, 495, 498, 1646, 1647, 496, 497, 499, 500,
	0, 501, 502, 504, 507, 503, 505, 506, 508, 521,
	522, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 524, 0, 523, 1374, 525, 526, 527,
	528, 529, 536, 538, 539, 534, 535, 537, 540, 541,
	543, 531, 532, 533, 1375, 542, 530, 1648, 321, 1376,
	544, 545, 546, 547, 1649, 770, 548, 771, 551, 552,
	1650, 0, 553, 0, 554, 1651, 1652, 556, 557, 558,
	1653, 1654, 559, 560, 772, 1377, 561, 1378, 773, 562,
	563, 555, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 1655, 574, 575, 774, 576, 577, 578, 775,
	579, 580, 581, 776, 582, 777, 583, 584, 1656, 585,
	586, 587, 0, 588, 589, 590, 591, 592, 593, 594,
	595, 778, 596, 597, 599, 598, 600, 1657, 601, 0,
	602, 603, 604, 0, 0, 0, 0, 0, 605, 606,
	608, 0, 609, 610, 611, 612, 607, 613, 614, 615,
	616, 617, 618, 1658, 620, 621, 619, 622, 623, 1379,
	624, 625, 626, 627, 628, 779, 629, 0, 630, 631,
	639, 640, 641, 632, 633, 635, 642, 634, 643, 644,
	645, 646, 648, 647, 1659, 650, 651, 649, 652, 653,
	654, 1660, 655, 780, 656, 636, 637, 657, 658, 1380,
	659, 660, 661, 662, 663, 664, 665, 781, 0, 666,
	1661, 667, 668, 669, 670, 671, 672, 674, 638, 675,
	680, 681, 782, 676, 677, 678, 679, 783, 683, 684,
	685, 686, 1662, 687, 688, 0, 682, 673, 1663, 689,
	690, 691, 692, 693, 694, 0, 695, 696, 1664, 697,
	784, 785, 786, 787, 1665, 709, 1666, 698, 700, 701,
	702, 703, 788, 704, 789, 1667, 705, 706, 707, 708,
	699, 710, 711, 1668, 1669, 712, 713, 714, 716, 718,
	719, 715, 717, 720, 1670, 721, 1671, 0, 722, 723,
	724, 790, 791, 792, 1672, 726, 727, 725, 728, 729,
	732, 730, 731, 793, 733, 470, 734, 735, 1673, 1674,
	1675, 1676, 736, 737, 794, 738, 739, 740, 0, 0,
	0, 0, 0, 0, 0, 0, 1592, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4696, 322, 323, 325, 324, 326, 327, 328,
	329, 1598, 330, 331, 1599, 1600, 1601, 0, 1602, 741,
	1603, 1604, 1605, 332, 1606, 333, 334, 335, 1364, 336,
	337, 338, 339, 340, 341, 342, 742, 743, 0, 343,
	744, 344, 745, 1607, 746, 345, 346, 347, 348, 349,
	350, 351, 1608, 1609, 0, 352, 747, 748, 749, 1610,
	353, 354, 750, 1611, 1678, 1612, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 1613, 364, 365, 366, 363,
	367, 368, 1614, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 1615, 377, 378, 379, 1365, 380, 381, 382,
	1616, 1617, 1619, 1618, 1620, 1621, 1622, 383, 384, 385,
	386, 387, 0, 388, 390, 751, 752, 1623, 393, 395,
	389, 391, 1624, 394, 392, 396, 397, 1625, 398, 399,
	400, 1626, 1627, 401, 402, 403, 1628, 404, 405, 406,
	1629, 407, 408, 409, 1630, 410, 411, 753, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	754, 755, 424, 1631, 319, 1632, 0, 0, 0, 0,
	425, 426, 427, 756, 0, 0, 0, 428, 1633, 429,
	430, 431, 1634, 432, 433, 1635, 1366, 434, 435, 436,
	757, 758, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 1636, 446, 759, 1637, 760, 447, 1638, 448, 449,
	450, 451, 452, 453, 454, 761, 762, 763, 549, 1368,
	455, 456, 457, 1639, 458, 459, 460, 461, 462, 0,
	0, 0, 320, 463, 464, 465, 1640, 1367, 764, 466,
	550, 467, 765, 766, 1641, 767, 1642, 468, 469, 472,
	1369, 768, 1370, 471, 473, 474, 1371, 475, 0, 0,
	0, 476, 477, 478, 479, 480, 481, 482, 1643, 483,
	485, 484, 1644, 487, 769, 486, 1372, 488, 489, 1373,
	1645, 490, 491, 492, 493, 494, 495, 498, 1646, 1647,
	496, 497, 499, 500, 0, 501, 502, 504, 507, 503,
	505, 506, 508, 521, 522, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 524, 0, 523,
	1374, 525, 526, 527, 528, 529, 536, 538, 539, 534,
	535, 537, 540, 541, 543, 531, 532, 533, 1375, 542,
	530, 1648, 321, 1376, 544, 545, 546, 547, 1649, 770,
	548, 771, 551, 552, 1650, 0, 553, 0, 554, 1651,
	1652, 556, 557, 558, 1653, 1654, 559, 560, 772, 1377,
	561, 1378, 773, 562, 563, 555, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 1655, 574, 575, 774,
	576, 577, 578, 775, 579, 580, 581, 776, 582, 777,
	583, 584, 1656, 585, 586, 587, 0, 588, 589, 590,
	591, 592, 593, 594, 595, 778, 596, 597, 599, 598,
	600, 1657, 601, 0, 602, 603, 604, 0, 0, 0,
	0, 0, 605, 606, 608, 0, 609, 610, 611, 612,
	607, 613, 614, 615, 616, 617, 618, 1658, 620, 621,
	619, 622, 623, 1379, 624, 625, 626, 627, 628, 779,
	629, 0, 630, 631, 639, 640, 641, 632, 633, 635,
	642, 634, 643, 644, 645, 646, 648, 647, 1659, 650,
	651, 649, 652, 653, 654, 1660, 655, 780, 656, 636,
	637, 657, 658, 1380, 659, 660, 661, 662, 663, 664,
	665, 781, 0, 666, 1661, 667, 668, 669, 670, 671,
	672, 674, 638, 675, 680, 681, 782, 676, 677, 678,
	679, 783, 683, 684, 685, 686, 1662, 687, 688, 0,
	682, 673, 1663, 689, 690, 691, 692, 693, 694, 0,
	695, 696, 1664, 697, 784, 785, 786, 787, 1665, 709,
	1666, 698, 700, 701, 702, 703, 788, 704, 789, 1667,
	705, 706, 707, 708, 699, 710, 711, 1668, 1669, 712,
	713, 714, 716, 718, 719, 715, 717, 720, 1670, 721,
	1671, 0, 722, 723, 724, 790, 791, 792, 1672, 726,
	727, 725, 728, 729, 732, 730, 731, 793, 733, 470,
	734, 735, 1673, 1674, 1675, 1676, 736, 737, 794, 738,
	739, 740, 0, 0, 0, 0, 0, 0, 0, 0,
	1592, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4320, 322, 323, 325,
	324, 326, 327, 328, 329, 1598, 330, 331, 1599, 1600,
	1601, 0, 1602, 741, 1603, 1604, 1605, 332, 1606, 333,
	334, 335, 1364, 336, 337, 338, 339, 340, 341, 342,
	742, 743, 0, 343, 744, 344, 745, 1607, 746, 345,
	346, 347, 348, 349, 350, 351, 1608, 1609, 0, 352,
	747, 748, 749, 1610, 353, 354, 750, 1611, 1678, 1612,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 1613,
	364, 365, 366, 363, 367, 368, 1614, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 1615, 377, 378, 379,
	1365, 380, 381, 382, 1616, 1617, 1619, 1618, 1620, 1621,
	1622, 383, 384, 385, 386, 387, 0, 388, 390, 751,
	752, 1623, 393, 395, 389, 391, 1624, 394, 392, 396,
	397, 1625, 398, 399, 400, 1626, 1627, 401, 402, 403,
	1628, 404, 405, 406, 1629, 407, 408, 409, 1630, 410,
	411, 753, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 754, 755, 424, 1631, 319, 1632,
	0, 0, 0, 0, 425, 426, 427, 756, 0, 0,
	0, 428, 1633, 429, 430, 431, 1634, 432, 433, 1635,
	1366, 434, 435, 436, 757, 758, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 1636, 446, 759, 1637, 760,
	447, 1638, 448, 449, 450, 451, 452, 453, 454, 761,
	762, 763, 549, 1368, 455, 456, 457, 1639, 458, 459,
	460, 461, 462, 0, 0, 0, 320, 463, 464, 465,
	1640, 1367, 764, 466, 550, 467, 765, 766, 1641, 767,
	1642, 468, 469, 472, 1369, 768, 1370, 471, 473, 474,
	1371, 475, 0, 0, 0, 476, 477, 478, 479, 480,
	481, 482, 1643, 483, 485, 484, 1644, 487, 769, 486,
	1372, 488, 489, 1373, 1645, 490, 491, 492, 493, 494,
	495, 498, 1646, 1647, 496, 497, 499, 500, 0, 501,
	502, 504, 507, 503, 505, 506, 508, 521, 522, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 524, 0, 523, 1374, 525, 526, 527, 528, 529,
	536, 538, 539, 534, 535, 537, 540, 541, 543, 531,
	532, 533, 1375, 542, 530, 1648, 321, 1376, 544, 545,
	546, 547, 1649, 770, 548, 771, 551, 552, 1650, 0,
	553, 0, 554, 1651, 1652, 556, 557, 558, 1653, 1654,
	559, 560, 772, 1377, 561, 1378, 773, 562, 563, 555,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	1655, 574, 575, 774, 576, 577, 578, 775, 579, 580,
	581, 776, 582, 777, 583, 584, 1656, 585, 586, 587,
	0, 588, 589, 590, 591, 592, 593, 594, 595, 778,
	596, 597, 599, 598, 600, 1657, 601, 0, 602, 603,
	604, 0, 0, 0, 0, 0, 605, 606, 608, 0,
	609, 610, 611, 612, 607, 613, 614, 615, 616, 617,
	618, 1658, 620, 621, 619, 622, 623, 1379, 624, 625,
	626, 627, 628, 779, 629, 0, 630, 631, 639, 640,
	641, 632, 633, 635, 642, 634, 643, 644, 645, 646,
	648, 647, 1659, 650, 651, 649, 652, 653, 654, 1660,
	655, 780, 656, 636, 637, 657, 658, 1380, 659, 660,
	661, 662, 663, 664, 665, 781, 0, 666, 1661, 667,
	668, 669, 670, 671, 672, 674, 638, 675, 680, 681,
	782, 676, 677, 678, 679, 783, 683, 684, 685, 686,
	1662, 687, 688, 0, 682, 673, 1663, 689, 690, 691,
	692, 693, 694, 0, 695, 696, 1664, 697, 784, 785,
	786, 787, 1665, 709, 1666, 698, 700, 701, 702, 703,
	788, 704, 789, 1667, 705, 706, 707, 708, 699, 710,
	711, 1668, 1669, 712, 713, 714, 716, 718, 719, 715,
	717, 720, 1670, 721, 1671, 0, 722, 723, 724, 790,
	791, 792, 1672, 726, 727, 725, 728, 729, 732, 730,
	731, 793, 733, 470, 734, 735, 1673, 1674, 1675, 1676,
	736, 737, 794, 738, 739, 740, 0, 0, 0, 0,
	0, 0, 0, 0, 1592, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4122, 322, 323, 325, 324, 326, 327, 328, 329, 1598,
	330, 331, 1599, 1600, 1601, 0, 1602, 741, 1603, 1604,
	1605, 332, 1606, 333, 334, 335, 1364, 336, 337, 338,
	339, 340, 341, 342, 742, 743, 0, 343, 744, 344,
	745, 1607, 746, 345, 346, 347, 348, 349, 350, 351,
	1608, 1609, 0, 352, 747, 748, 749, 1610, 353, 354,
	750, 1611, 1678, 1612, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 1613, 364, 365, 366, 363, 367, 368,
	1614, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	1615, 377, 378, 379, 1365, 380, 381, 382, 1616, 1617,
	1619, 1618, 1620, 1621, 1622, 383, 384, 385, 386, 387,
	0, 388, 390, 751, 752, 1623, 393, 395, 389, 391,
	1624, 394, 392, 396, 397, 1625, 398, 399, 400, 1626,
	1627, 401, 402, 403, 1628, 404, 405, 406, 1629, 407,
	408, 409, 1630, 410, 411, 753, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 754, 755,
	424, 1631, 319, 1632, 0, 0, 0, 0, 425, 426,
	427, 756, 0, 0, 0, 428, 1633, 429, 430, 431,
	1634, 432, 433, 1635, 1366, 434, 435, 436, 757, 758,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 1636,
	446, 759, 1637, 760, 447, 1638, 448, 449, 450, 451,
	452, 453, 454, 761, 762, 763, 549, 1368, 455, 456,
	457, 1639, 458, 459, 460, 461, 462, 0, 0, 0,
	320, 463, 464, 465, 1640, 1367, 764, 466, 550, 467,
	765, 766, 1641, 767, 1642, 468, 469, 472, 1369, 768,
	1370, 471, 473, 474, 1371, 475, 0, 0, 0, 476,
	477, 478, 479, 480, 481, 482, 1643, 483, 485, 484,
	1644, 487, 769, 486, 1372, 488, 489, 1373, 1645, 490,
	491, 492, 493, 494, 495, 498, 1646, 1647, 496, 497,
	499, 500, 0, 501, 502, 504, 507, 503, 505, 506,
	508, 521, 522, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 524, 0, 523, 1374, 525,
	526, 527, 528, 529, 536, 538, 539, 534, 535, 537,
	540, 541, 543, 531, 532, 533, 1375, 542, 530, 1648,
	321, 1376, 544, 545, 546, 547, 1649, 770, 548, 771,
	551, 552, 1650, 0, 553, 0, 554, 1651, 1652, 556,
	557, 558, 1653, 1654, 559, 560, 772, 1377, 561, 1378,
	773, 562, 563, 555, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 1655, 574, 575, 774, 576, 577,
	578, 775, 579, 580, 581, 776, 582, 777, 583, 584,
	1656, 585, 586, 587, 0, 588, 589, 590, 591, 592,
	593, 594, 595, 778, 596, 597, 599, 598, 600, 1657,
	601, 0, 602, 603, 604, 0, 0, 0, 0, 0,
	605, 606, 608, 0, 609, 610, 611, 612, 607, 613,
	614, 615, 616, 617, 618, 1658, 620, 621, 619, 622,
	623, 1379, 624, 625, 626, 627, 628, 779, 629, 0,
	630, 631, 639, 640, 641, 632, 633, 635, 642, 634,
	643, 644, 645, 646, 648, 647, 1659, 650, 651, 649,
	652, 653, 654, 1660, 655, 780, 656, 636, 637, 657,
	658, 1380, 659, 660, 661, 662, 663, 664, 665, 781,
	0, 666, 1661, 667, 668, 669, 670, 671, 672, 674,
	638, 675, 680, 681, 782, 676, 677, 678, 679, 783,
	683, 684, 685, 686, 1662, 687, 688, 0, 682, 673,
	1663, 689, 690, 691, 692, 693, 694, 0, 695, 696,
	1664, 697, 784, 785, 786, 787, 1665, 709, 1666, 698,
	700, 701, 702, 703, 788, 704, 789, 1667, 705, 706,
	707, 708, 699, 710, 711, 1668, 1669, 712, 713, 714,
	716, 718, 719, 715, 717, 720, 1670, 721, 1671, 0,
	722, 723, 724, 790, 791, 792, 1672, 726, 727, 725,
	728, 729, 732, 730, 731, 793, 733, 470, 734, 735,
	1673, 1674, 1675, 1676, 736, 737, 794, 738, 739, 740,
	0, 0, 0, 0, 0, 0, 0, 0, 1592, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2966, 322, 323, 325, 324, 326,
	327, 328, 329, 1598, 330, 331, 1599, 1600, 1601, 0,
	1602, 741, 1603, 1604, 1605, 332, 1606, 333, 334, 335,
	1364, 336, 337, 338, 339, 340, 341, 342, 742, 743,
	0, 343, 744, 344, 745, 1607, 746, 345, 346, 347,
	348, 349, 350, 351, 1608, 1609, 0, 352, 747, 748,
	749, 1610, 353, 354, 750, 1611, 1678, 1612, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 1613, 364, 365,
	366, 363, 367, 368, 1614, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 1615, 377, 378, 379, 1365, 380,
	381, 382, 1616, 1617, 1619, 1618, 1620, 1621, 1622, 383,
	384, 385, 386, 387, 0, 388, 390, 751, 752, 1623,
	393, 395, 389, 391, 1624, 394, 392, 396, 397, 1625,
	398, 399, 400, 1626, 1627, 401, 402, 403, 1628, 404,
	405, 406, 1629, 407, 408, 409, 1630, 410, 411, 753,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 754, 755, 424, 1631, 319, 1632, 0, 0,
	0, 0, 425, 426, 427, 756, 0, 0, 0, 428,
	1633, 429, 430, 431, 1634, 432, 433, 1635, 1366, 434,
	435, 436, 757, 758, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 1636, 446, 759, 1637, 760, 447, 1638,
	448, 449, 450, 451, 452, 453, 454, 761, 762, 763,
	549, 1368, 455, 456, 457, 1639, 458, 459, 460, 461,
	462, 0, 0, 0, 320, 463, 464, 465, 1640, 1367,
	764, 466, 550, 467, 765, 766, 1641, 767, 1642, 468,
	469, 472, 1369, 768, 1370, 471, 473, 474, 1371, 475,
	0, 0, 0, 476, 477, 478, 479, 480, 481, 482,
	1643, 483, 485, 484, 1644, 487, 769, 486, 1372, 488,
	489, 1373, 1645, 490, 491, 492, 493, 494, 495, 498,
	1646, 1647, 496, 497, 499, 500, 0, 501, 502, 504,
	507, 503, 505, 506, 508, 521, 522, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 524,
	0, 523, 1374, 525, 526, 527, 528, 529, 536, 538,
	539, 534, 535, 537, 540, 541, 543, 531, 532, 533,
	1375, 542, 530, 1648, 321, 1376, 544, 545, 546, 547,
	1649, 770, 548, 771, 551, 552, 1650, 0, 553, 0,
	554, 1651, 1652, 556, 557, 558, 1653, 1654, 559, 560,
	772, 1377, 561, 1378, 773, 562, 563, 555, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 1655, 574,
	575, 774, 576, 577, 578, 775, 579, 580, 581, 776,
	582, 777, 583, 584, 1656, 585, 586, 587, 0, 588,
	589, 590, 591, 592, 593, 594, 595, 778, 596, 597,
	599, 598, 600, 1657, 601, 0, 602, 603, 604, 0,
	0, 0, 0, 0, 605, 606, 608, 0, 609, 610,
	611, 612, 607, 613, 614, 615, 616, 617, 618, 1658,
	620, 621, 619, 622, 623, 1379, 624, 625, 626, 627,
	628, 779, 629, 0, 630, 631, 639, 640, 641, 632,
	633, 635, 642, 634, 643, 644, 645, 646, 648, 647,
	1659, 650, 651, 649, 652, 653, 654, 1660, 655, 780,
	656, 636, 637, 657, 658, 1380, 659, 660, 661, 662,
	663, 664, 665, 781, 0, 666, 1661, 667, 668, 669,
	670, 671, 672, 674, 638, 675, 680, 681, 782, 676,
	677, 678, 679, 783, 683, 684, 685, 686, 1662, 687,
	688, 0, 682, 673, 1663, 689, 690, 691, 692, 693,
	694, 0, 695, 696, 1664, 697, 784, 785, 786, 787,
	1665, 709, 1666, 698, 700, 701, 702, 703, 788, 704,
	789, 1667, 705, 706, 707, 708, 699, 710, 711, 1668,
	1669, 712, 713, 714, 716, 718, 719, 715, 717, 720,
	1670, 721, 1671, 0, 722, 723, 724, 790, 791, 792,
	1672, 726, 727, 725, 728, 729, 732, 730, 731, 793,
	733, 470, 734, 735, 1673, 1674, 1675, 1676, 736, 737,
	794, 738, 739, 740, 0, 0, 0, 0, 0, 0,
	1589, 0, 1592, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2571, 322,
	323, 325, 324, 326, 327, 328, 329, 1598, 330, 331,
	1599, 1600, 1601, 0, 1602, 741, 1603, 1604, 1605, 332,
	1606, 333, 334, 335, 1364, 336, 337, 338, 339, 340,
	341, 342, 742, 743, 0, 343, 744, 344, 745, 1607,
	746, 345, 346, 347, 348, 349, 350, 351, 1608, 1609,
	0, 352, 747, 748, 749, 1610, 353, 354, 750, 1611,
	1678, 1612, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 1613, 364, 365, 366, 363, 367, 368, 1614, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 1615, 377,
	378, 379, 1365, 380, 381, 382, 1616, 1617, 1619, 1618,
	1620, 1621, 1622, 383, 384, 385, 386, 387, 0, 388,
	390, 751, 752, 1623, 393, 395, 389, 391, 1624, 394,
	392, 396, 397, 1625, 398, 399, 400, 1626, 1627, 401,
	402, 403, 1628, 404, 405, 406, 1629, 407, 408, 409,
	1630, 410, 411, 753, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 754, 755, 424, 1631,
	319, 1632, 0, 0, 0, 0, 425, 426, 427, 756,
	0, 0, 0, 428, 1633, 429, 430, 431, 1634, 432,
	433, 1635, 1366, 434, 435, 436, 757, 758, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 1636, 446, 759,
	1637, 760, 447, 1638, 448, 449, 450, 451, 452, 453,
	454, 761, 762, 763, 549, 1368, 455, 456, 457, 1639,
	458, 459, 460, 461, 462, 0, 0, 0, 320, 463,
	464, 465, 1640, 1367, 764, 466, 550, 467, 765, 766,
	1641, 767, 1642, 468, 469, 472, 1369, 768, 1370, 471,
	473, 474, 1371, 475, 0, 0, 0, 476, 477, 478,
	479, 480, 481, 482, 1643, 483, 485, 484, 1644, 487,
	769, 486, 1372, 488, 489, 1373, 1645, 490, 491, 492,
	493, 494, 495, 498, 1646, 1647, 496, 497, 499, 500,
	0, 501, 502, 504, 507, 503, 505, 506, 508, 521,
	522, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 524, 0, 523, 1374, 525, 526, 527,
	528, 529, 536, 538, 539, 534, 535, 537, 540, 541,
	543, 531, 532, 533, 1375, 542, 530, 1648, 321, 1376,
	544, 545, 546, 547, 1649, 770, 548, 771, 551, 552,
	1650, 0, 553, 0, 554, 1651, 1652, 556, 557, 558,
	1653, 1654, 559, 560, 772, 1377, 561, 1378, 773, 562,
	563, 555, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 1655, 574, 575, 774, 576, 577, 578, 775,
	579, 580, 581, 776, 582, 777, 583, 584, 1656, 585,
	586, 587, 0, 588, 589, 590, 591, 592, 593, 594,
	595, 778, 596, 597, 599, 598, 600, 1657, 601, 0,
	602, 603, 604, 0, 0, 0, 0, 0, 605, 606,
	608, 0, 609, 610, 611, 612, 607, 613, 614, 615,
	616, 617, 618, 1658, 620, 621, 619, 622, 623, 1379,
	624, 625, 626, 627, 628, 779, 629, 0, 630, 631,
	639, 640, 641, 632, 633, 635, 642, 634, 643, 644,
	645, 646, 648, 647, 1659, 650, 651, 649, 652, 653,
	654, 1660, 655, 780, 656, 636, 637, 657, 658, 1380,
	659, 660, 661, 662, 663, 664, 665, 781, 0, 666,
	1661, 667, 668, 669, 670, 671, 672, 674, 638, 675,
	680, 681, 782, 676, 677, 678, 679, 783, 683, 684,
	685, 686, 1662, 687, 688, 0, 682, 673, 1663, 689,
	690, 691, 692, 693, 694, 0, 695, 696, 1664, 697,
	784, 785, 786, 787, 1665, 709, 1666, 698, 700, 701,
	702, 703, 788, 704, 789, 1667, 705, 706, 707, 708,
	699, 710, 711, 1668, 1669, 712, 713, 714, 716, 718,
	719, 715, 717, 720, 1670, 721, 1671, 0, 722, 723,
	724, 790, 791, 792, 1672, 726, 727, 725, 728, 729,
	732, 730, 731, 793, 733, 470, 734, 735, 1673, 1674,
	1675, 1676, 736, 737, 794, 738, 739, 740, 1592, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 1598, 330, 331, 1599, 1600, 1601, 0,
	1602, 741, 1603, 1604, 1605, 332, 1606, 333, 334, 335,
	1364, 336, 337, 338, 339, 340, 341, 342, 742, 743,
	0, 343, 744, 344, 745, 1607, 746, 345, 346, 347,
	348, 349, 350, 351, 1608, 1609, 0, 352, 747, 748,
	749, 1610, 353, 354, 750, 1611, 1678, 1612, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 1613, 364, 365,
	366, 363, 367, 368, 1614, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 1615, 377, 378, 379, 1365, 380,
	381, 382, 1616, 1617, 1619, 1618, 1620, 1621, 1622, 383,
	384, 385, 386, 387, 0, 388, 390, 751, 752, 1623,
	393, 395, 389, 391, 1624, 394, 392, 396, 397, 1625,
	398, 399, 400, 1626, 1627, 401, 402, 403, 1628, 404,
	405, 406, 1629, 407, 408, 409, 1630, 410, 411, 753,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 754, 755, 424, 1631, 319, 1632, 0, 0,
	0, 0, 425, 426, 427, 756, 0, 0, 0, 428,
	1633, 429, 430, 431, 1634, 432, 433, 1635, 1366, 434,
	435, 436, 757, 758, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 1636, 446, 759, 1637, 760, 447, 1638,
	448, 449, 450, 451, 452, 453, 454, 761, 762, 763,
	549, 1368, 455, 456, 457, 1639, 458, 459, 460, 461,
	462, 0, 0, 0, 320, 463, 464, 465, 1640, 1367,
	764, 466, 550, 467, 765, 766, 1641, 767, 1642, 468,
	469, 472, 1369, 768, 1370, 471, 473, 474, 1371, 475,
	0, 0, 0, 476, 477, 478, 479, 480, 481, 482,
	1643, 483, 485, 484, 1644, 487, 769, 486, 1372, 488,
	489, 1373, 1645, 490, 491, 492, 493, 494, 495, 498,
	1646, 1647, 496, 497, 499, 500, 0, 501, 502, 504,
	507, 503, 505, 506, 508, 521, 522, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 524,
	0, 523, 1374, 525, 526, 527, 528, 529, 536, 538,
	539, 534, 535, 537, 540, 541, 543, 531, 532, 533,
	1375, 542, 530, 1648, 321, 1376, 544, 545, 546, 547,
	1649, 770, 548, 771, 551, 552, 1650, 0, 553, 0,
	554, 1651, 1652, 556, 557, 558, 1653, 1654, 559, 560,
	772, 1377, 561, 1378, 773, 562, 563, 555, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 1655, 574,
	575, 774, 576, 577, 578, 775, 579, 580, 581, 776,
	582, 777, 583, 584, 1656, 585, 586, 587, 0, 588,
	589, 590, 591, 592, 593, 594, 595, 778, 596, 597,
	599, 598, 600, 1657, 601, 0, 602, 603, 604, 0,
	0, 0, 0, 0, 605, 606, 608, 0, 609, 610,
	611, 612, 607, 613, 614, 615, 616, 617, 618, 1658,
	620, 621, 619, 622, 623, 1379, 624, 625, 626, 627,
	628, 779, 629, 0, 630, 631, 639, 640, 641, 632,
	633, 635, 642, 634, 643, 644, 645, 646, 648, 647,
	1659, 650, 651, 649, 652, 653, 654, 1660, 655, 780,
	656, 636, 637, 657, 658, 1380, 659, 660, 661, 662,
	663, 664, 665, 781, 0, 666, 1661, 667, 668, 669,
	670, 671, 672, 674, 638, 675, 680, 681, 782, 676,
	677, 678, 679, 783, 683, 684, 685, 686, 1662, 687,
	688, 0, 682, 673, 1663, 689, 690, 691, 692, 693,
	694, 0, 695, 696, 1664, 697, 784, 785, 786, 787,
	1665, 709, 1666, 698, 700, 701, 702, 703, 788, 704,
	789, 1667, 705, 706, 707, 708, 699, 710, 711, 1668,
	1669, 712, 713, 714, 716, 718, 719, 715, 717, 720,
	1670, 721, 1671, 0, 722, 723, 724, 790, 791, 792,
	1672, 726, 727, 725, 728, 729, 732, 730, 731, 793,
	733, 470, 734, 735, 1673, 1674, 1675, 1676, 736, 737,
	794, 738, 739, 740, 2941, 0, 1300, 1272, 1273, 1274,
	1270, 1271, 1283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 2938, 330, 331, 0, 0, 0, 0, 0, 1324,
	1288, 0, 0, 332, 0, 333, 334, 335, 1364, 336,
	337, 338, 339, 340, 341, 342, 742, 1337, 0, 343,
	1344, 344, 1343, 0, 1354, 345, 346, 347, 348, 349,
	350, 351, 1290, 1323, 1255, 352, 1384, 1385, 749, 0,
	353, 354, 1330, 0, 1311, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 1365, 380, 381, 382,
	1314, 1312, 1313, 1320, 1316, 1315, 1319, 383, 384, 385,
	386, 387, 1347, 388, 390, 1341, 1340, 1260, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 2939, 0, 401, 1332, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 1266, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	1355, 1356, 424, 1279, 319, 0, 0, 0, 0, 0,
	425, 426, 427, 1339, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 1366, 434, 435, 436,
	1352, 1353, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 1362, 0, 1289, 447, 0, 448, 449,
	450, 451, 452, 453, 454, 1325, 1326, 1329, 549, 1368,
	455, 456, 457, 0, 458, 459, 460, 461, 462, 0,
	0, 0, 320, 463, 464, 465, 0, 1367, 764, 466,
	550, 467, 1334, 1335, 0, 1295, 0, 468, 469, 472,
	1369, 1327, 1370, 471, 473, 474, 1371, 475, 0, 0,
	0, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	485, 484, 0, 487, 1363, 486, 1372, 488, 489, 1373,
	0, 490, 491, 492, 493, 494, 495, 498, 1318, 1317,
	496, 497, 499, 500, 0, 501, 502, 504, 507, 503,
	505, 506, 508, 521, 522, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 524, 0, 523,
	1374, 525, 526, 527, 528, 529, 536, 538, 539, 534,
	535, 537, 540, 541, 543, 531, 532, 533, 1375, 542,
	530, 1257, 321, 1376, 544, 545, 546, 547, 1280, 1328,
	548, 1342, 551, 552, 0, 0, 553, 0, 554, 0,
	0, 556, 557, 558, 0, 0, 559, 560, 772, 1377,
	561, 1378, 1357, 562, 563, 1267, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 0, 574, 575, 774,
	576, 577, 578, 775, 579, 580, 581, 1358, 582, 777,
	583, 584, 0, 585, 586, 587, 0, 588, 589, 590,
	591, 592, 593, 594, 595, 1338, 596, 597, 599, 598,
	600, 0, 601, 0, 602, 603, 604, 0, 0, 0,
	0, 0, 605, 606, 608, 0, 609, 610, 611, 612,
	607, 613, 614, 615, 616, 617, 618, 0, 620, 621,
	619, 622, 623, 1379, 624, 625, 626, 627, 628, 1268,
	629, 0, 630, 631, 639, 640, 641, 632, 633, 635,
	642, 634, 643, 644, 645, 646, 648, 647, 0, 650,
	651, 649, 652, 653, 654, 1321, 655, 780, 656, 636,
	637, 657, 658, 1380, 659, 660, 661, 662, 663, 664,
	665, 1336, 0, 666, 0, 667, 668, 669, 670, 671,
	672, 674, 638, 675, 680, 681, 1383, 676, 677, 678,
	679, 1359, 683, 684, 685, 686, 0, 687, 688, 1254,
	682, 673, 0, 689, 690, 691, 692, 693, 694, 0,
	695, 696, 0, 697, 1348, 1349, 1350, 1351, 0, 709,
	0, 698, 700, 701, 702, 703, 1360, 704, 1361, 1278,
	705, 706, 707, 708, 699, 710, 711, 0, 1261, 712,
	713, 714, 716, 718, 719, 715, 717, 720, 1322, 721,
	0, 0, 722, 723, 724, 790, 1345, 1382, 2937, 726,
	727, 725, 728, 729, 732, 730, 731, 793, 733, 470,
	734, 735, 0, 0, 0, 0, 736, 737, 794, 738,
	739, 740, 1258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1253, 0, 0,
	0, 0, 0, 0, 1251, 1252, 2940, 0, 0, 0,
	0, 0, 0, 0, 1284, 2936, 0, 1242, 1282, 1300,
	1272, 1273, 1274, 1270, 1271, 1283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 0, 330, 331, 0, 0, 0,
	0, 0, 1324, 1288, 0, 0, 332, 0, 333, 334,
	335, 1364, 336, 337, 338, 339, 340, 341, 342, 742,
	1337, 0, 343, 1344, 344, 1343, 0, 1354, 345, 346,
	347, 348, 349, 350, 351, 1290, 1323, 1255, 352, 1384,
	1385, 749, 0, 353, 354, 1330, 0, 1311, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 1365,
	380, 381, 382, 1314, 1312, 1313, 1320, 1316, 1315, 1319,
	383, 384, 385, 386, 387, 1347, 388, 390, 1341, 1340,
	1260, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 1332, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	1266, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 1355, 1356, 424, 1279, 319, 0, 0,
	0, 0, 0, 425, 426, 427, 1339, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 1366,
	434, 435, 436, 1352, 1353, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 1362, 0, 1289, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 1325, 1326,
	1329, 549, 1368, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 0, 0, 0, 320, 463, 464, 465, 0,
	1367, 764, 466, 550, 467, 1334, 1335, 0, 1295, 0,
	468, 469, 472, 1369, 1327, 1370, 471, 473, 474, 1371,
	475, 0, 0, 0, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 485, 484, 0, 487, 1363, 486, 1372,
	488, 489, 1373, 0, 490, 491, 492, 493, 494, 495,
	498, 1318, 1317, 496, 497, 499, 500, 0, 501, 502,
	504, 507, 503, 505, 506, 508, 521, 522, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	524, 0, 523, 1374, 525, 526, 527, 528, 529, 536,
	538, 539, 534, 535, 537, 540, 541, 543, 531, 532,
	533, 1375, 542, 530, 1257, 321, 1376, 544, 545, 546,
	547, 1280, 1328, 548, 1342, 551, 552, 0, 0, 553,
	0, 554, 0, 0, 556, 557, 558, 0, 0, 559,
	560, 772, 1377, 561, 1378, 1357, 562, 563, 1267, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 0,
	574, 575, 774, 576, 577, 578, 775, 579, 580, 581,
	1358, 582, 777, 583, 584, 0, 585, 586, 587, 0,
	588, 589, 590, 591, 592, 593, 594, 595, 1338, 596,
	597, 599, 598, 600, 0, 601, 0, 602, 603, 604,
	0, 0, 0, 0, 0, 605, 606, 608, 0, 609,
	610, 611, 612, 607, 613, 614, 615, 616, 617, 618,
	0, 620, 621, 619, 622, 623, 1379, 624, 625, 626,
	627, 628, 1268, 629, 0, 630, 631, 639, 640, 641,
	632, 633, 635, 642, 634, 643, 644, 645, 646, 648,
	647, 275, 650, 651, 649, 652, 653, 654, 1321, 655,
	780, 656, 636, 637, 657, 658, 1380, 659, 660, 661,
	662, 663, 664, 665, 1336, 0, 666, 0, 667, 668,
	669, 670, 671, 672, 674, 638, 675, 680, 681, 1383,
	676, 677, 678, 679, 1359, 683, 684, 685, 686, 0,
	687, 688, 1254, 682, 673, 277, 689, 690, 691, 692,
	693, 694, 0, 695, 696, 0, 697, 1348, 1349, 1350,
	1351, 0, 709, 0, 698, 700, 701, 702, 703, 1360,
	704, 1361, 1278, 705, 706, 707, 708, 699, 710, 711,
	0, 1261, 712, 713, 714, 716, 718, 719, 715, 717,
	720, 1322, 721, 0, 0, 722, 723, 724, 1842, 1345,
	1382, 0, 726, 727, 725, 728, 729, 732, 730, 731,
	793, 733, 470, 734, 735, 0, 0, 0, 269, 736,
	737, 794, 738, 739, 740, 1258, 0, 270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1253, 0, 0, 0, 0, 0, 0, 1251, 1252, 1300,
	1272, 1273, 1274, 1270, 1271, 1283, 0, 2117, 2115, 0,
	0, 1282, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 0, 330, 331, 0, 0, 0,
	0, 0, 1324, 1288, 0, 0, 332, 0, 333, 334,
	335, 1364, 336, 337, 338, 339, 340, 341, 342, 742,
	1337, 0, 343, 1344, 344, 1343, 0, 1354, 345, 346,
	347, 348, 349, 350, 351, 1290, 1323, 1255, 352, 1384,
	1385, 749, 0, 353, 354, 1330, 0, 1311, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 1365,
	380, 381, 382, 1314, 1312, 1313, 1320, 1316, 1315, 1319,
	383, 384, 385, 386, 387, 1347, 388, 390, 1341, 1340,
	1260, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 1332, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	1266, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 1355, 1356, 424, 1279, 319, 0, 0,
	0, 0, 0, 425, 426, 427, 1339, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 1366,
	434, 435, 436, 1352, 1353, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 1362, 0, 1289, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 1325, 1326,
	1329, 549, 1368, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 0, 0, 0, 320, 463, 464, 465, 0,
	1367, 764, 466, 550, 467, 1334, 1335, 0, 1295, 0,
	468, 469, 472, 1369, 1327, 1370, 471, 473, 474, 1371,
	475, 0, 0, 0, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 485, 484, 0, 487, 1363, 486, 1372,
	488, 489, 1373, 0, 490, 491, 492, 493, 494, 495,
	498, 1318, 1317, 496, 497, 499, 500, 0, 501, 502,
	504, 507, 503, 505, 506, 508, 521, 522, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	524, 0, 523, 1374, 525, 526, 527, 528, 529, 536,
	538, 539, 534, 535, 537, 540, 541, 543, 531, 532,
	533, 1375, 542, 530, 1257, 321, 1376, 544, 545, 546,
	547, 1280, 1328, 548, 1342, 551, 552, 0, 0, 553,
	0, 554, 0, 0, 556, 557, 558, 0, 0, 559,
	560, 772, 1377, 561, 1378, 1357, 562, 563, 1267, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 0,
	574, 575, 774, 576, 577, 578, 775, 579, 580, 581,
	1358, 582, 777, 583, 584, 0, 585, 586, 587, 0,
	588, 589, 590, 591, 592, 593, 594, 595, 1338, 596,
	597, 599, 598, 600, 0, 601, 0, 602, 603, 604,
	0, 0, 0, 0, 0, 605, 606, 608, 0, 609,
	610, 611, 612, 607, 613, 614, 615, 616, 617, 618,
	0, 620, 621, 619, 622, 623, 1379, 624, 625, 626,
	627, 628, 1268, 629, 0, 630, 631, 639, 640, 641,
	632, 633, 635, 642, 634, 643, 644, 645, 646, 648,
	647, 275, 650, 651, 649, 652, 653, 654, 1321, 655,
	780, 656, 636, 637, 657, 658, 1380, 659, 660, 661,
	662, 663, 664, 665, 1336, 0, 666, 0, 667, 668,
	669, 670, 671, 672, 674, 638, 675, 680, 681, 1383,
	676, 677, 678, 679, 1359, 683, 684, 685, 686, 0,
	687, 688, 1254, 682, 673, 277, 689, 690, 691, 692,
	693, 694, 0, 695, 696, 0, 697, 1348, 1349, 1350,
	1351, 0, 709, 0, 698, 700, 701, 702, 703, 1360,
	704, 1361, 1278, 705, 706, 707, 708, 699, 710, 711,
	0, 1261, 712, 713, 714, 716, 718, 719, 715, 717,
	720, 1322, 721, 0, 0, 722, 723, 724, 1842, 1345,
	1382, 0, 726, 727, 725, 728, 729, 732, 730, 731,
	793, 733, 470, 734, 735, 0, 0, 0, 269, 736,
	737, 794, 738, 739, 740, 1258, 0, 270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1253, 0, 0, 0, 0, 0, 0, 1251, 1252, 1300,
	1272, 1273, 1274, 1270, 1271, 1283, 0, 2117, 3697, 0,
	0, 1282, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 0, 330, 331, 0, 0, 0,
	0, 0, 1324, 1288, 0, 0, 332, 0, 333, 334,
	335, 1364, 336, 337, 338, 339, 340, 341, 342, 742,
	1337, 0, 343, 1344, 344, 1343, 0, 1354, 345, 346,
	347, 348, 349, 350, 351, 1290, 1323, 1255, 352, 1384,
	1385, 749, 0, 353, 354, 1330, 0, 1311, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 1365,
	380, 381, 382, 1314, 1312, 1313, 1320, 1316, 1315, 1319,
	383, 384, 385, 386, 387, 1347, 388, 390, 1341, 1340,
	1260, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 1332, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	1266, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 1355, 1356, 424, 1279, 319, 0, 0,
	0, 0, 0, 425, 426, 427, 1339, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 1366,
	434, 435, 436, 1352, 1353, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 1362, 0, 1289, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 1325, 1326,
	1329, 549, 1368, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 0, 0, 0, 320, 463, 464, 465, 0,
	1367, 764, 466, 550, 467, 1334, 1335, 0, 1295, 0,
	468, 469, 472, 1369, 1327, 1370, 471, 473, 474, 1371,
	475, 0, 0, 0, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 485, 484, 0, 487, 1363, 486, 1372,
	488, 489, 1373, 0, 490, 491, 492, 493, 494, 495,
	498, 1318, 1317, 496, 497, 499, 500, 0, 501, 502,
	504, 507, 503, 505, 506, 508, 521, 522, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	524, 0, 523, 1374, 525, 526, 527, 528, 529, 536,
	538, 539, 534, 535, 537, 540, 541, 543, 531, 532,
	533, 1375, 542, 530, 1257, 321, 1376, 544, 545, 546,
	547, 1280, 1328, 548, 1342, 551, 552, 0, 0, 553,
	0, 554, 0, 0, 556, 557, 558, 0, 0, 559,
	560, 772, 1377, 561, 1378, 1357, 562, 563, 1267, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 0,
	574, 575, 774, 576, 577, 578, 775, 579, 580, 581,
	1358, 582, 777, 583, 584, 0, 585, 586, 587, 0,
	588, 589, 590, 591, 592, 593, 594, 595, 1338, 596,
	597, 599, 598, 600, 0, 601, 0, 602, 603, 604,
	0, 0, 0, 0, 0, 605, 606, 608, 0, 609,
	610, 611, 612, 607, 613, 614, 615, 616, 617, 618,
	0, 620, 621, 619, 622, 623, 1379, 624, 625, 626,
	627, 628, 1268, 629, 0, 630, 631, 639, 640, 641,
	632, 633, 635, 642, 634, 643, 644, 645, 646, 648,
	647, 275, 650, 651, 649, 652, 653, 654, 1321, 655,
	780, 656, 636, 637, 657, 658, 1380, 659, 660, 661,
	662, 663, 664, 665, 1336, 0, 666, 0, 667, 668,
	669, 670, 671, 672, 674, 638, 675, 680, 681, 1383,
	676, 677, 678, 679, 1359, 683, 684, 685, 686, 0,
	687, 688, 1254, 682, 673, 277, 689, 690, 691, 692,
	693, 694, 0, 695, 696, 0, 697, 1348, 1349, 1350,
	1351, 0, 709, 0, 698, 700, 701, 702, 703, 1360,
	704, 1361, 1278, 705, 706, 707, 708, 699, 710, 711,
	0, 1261, 712, 713, 714, 716, 718, 719, 715, 717,
	720, 1322, 721, 0, 0, 722, 723, 724, 1842, 1345,
	1382, 0, 726, 727, 725, 728, 729, 732, 730, 731,
	793, 733, 470, 734, 735, 0, 0, 0, 269, 736,
	737, 794, 738, 739, 740, 1258, 0, 270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1253, 0, 0, 0, 0, 0, 0, 1251, 1252, 1300,
	1272, 1273, 1274, 1270, 1271, 1283, 0, 2117, 2115, 0,
	0, 1282, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 0, 330, 331, 0, 0, 0,
	0, 0, 1324, 1288, 0, 0, 332, 0, 333, 334,
	335, 1364, 336, 337, 338, 339, 340, 341, 342, 742,
	1337, 0, 343, 1344, 344, 1343, 3071, 1354, 345, 346,
	347, 348, 349, 350, 351, 1290, 1323, 1255, 352, 1384,
	1385, 749, 0, 353, 354, 1330, 0, 1311, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 1365,
	380, 381, 382, 1314, 1312, 1313, 1320, 1316, 1315, 1319,
	383, 384, 385, 386, 387, 1347, 388, 390, 1341, 1340,
	1260, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 1332, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	1266, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 1355, 1356, 424, 1279, 319, 0, 0,
	0, 0, 0, 425, 426, 427, 1339, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 3076, 1366,
	434, 435, 436, 1352, 1353, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 1362, 0, 1289, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 1325, 1326,
	1329, 549, 1368, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 0, 0, 0, 320, 463, 464, 465, 0,
	1367, 764, 466, 550, 467, 1334, 1335, 0, 1295, 0,
	468, 469, 472, 1369, 1327, 1370, 471, 473, 474, 1371,
	475, 0, 0, 0, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 485, 484, 3072, 487, 1363, 486, 1372,
	488, 489, 1373, 0, 490, 491, 492, 493, 494, 495,
	498, 1318, 1317, 496, 497, 499, 500, 0, 501, 502,
	504, 507, 503, 505, 506, 508, 521, 522, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	524, 0, 523, 1374, 525, 526, 527, 528, 529, 536,
	538, 539, 534, 535, 537, 540, 541, 543, 531, 532,
	533, 1375, 542, 530, 1257, 321, 1376, 544, 545, 546,
	547, 1280, 1328, 548, 1342, 551, 552, 0, 0, 553,
	0, 554, 0, 0, 556, 557, 558, 0, 0, 559,
	560, 772, 1377, 561, 1378, 1357, 562, 563, 1267, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 0,
	574, 575, 774, 576, 577, 578, 775, 579, 580, 581,
	1358, 582, 777, 583, 584, 0, 585, 586, 587, 0,
	588, 589, 590, 591, 592, 593, 594, 595, 1338, 596,
	597, 599, 598, 600, 0, 601, 0, 602, 603, 604,
	0, 0, 0, 0, 0, 605, 606, 608, 0, 609,
	610, 611, 612, 607, 613, 614, 615, 616, 617, 618,
	0, 620, 621, 619, 622, 623, 1379, 624, 625, 626,
	627, 628, 1268, 629, 0, 630, 631, 639, 640, 641,
	632, 633, 635, 642, 634, 643, 644, 645, 646, 648,
	647, 0, 650, 651, 649, 652, 653, 654, 1321, 655,
	780, 656, 636, 637, 657, 658, 1380, 659, 660, 661,
	662, 663, 664, 665, 1336, 0, 666, 0, 667, 668,
	669, 670, 671, 672, 674, 638, 675, 680, 681, 1383,
	676, 677, 678, 679, 1359, 683, 684, 685, 686, 0,
	687, 688, 1254, 682, 673, 0, 689, 690, 691, 692,
	693, 694, 0, 695, 696, 0, 697, 1348, 1349, 1350,
	1351, 0, 709, 3073, 698, 700, 701, 702, 703, 1360,
	704, 1361, 1278, 705, 706, 707, 708, 699, 710, 711,
	0, 1261, 712, 713, 714, 716, 718, 719, 715, 717,
	720, 1322, 721, 0, 0, 722, 723, 724, 790, 1345,
	1382, 0, 726, 727, 725, 728, 729, 732, 730, 731,
	793, 733, 470, 734, 735, 0, 0, 0, 0, 736,
	737, 794, 738, 739, 740, 1258, 0, 0, 0, 0,
	2986, 0, 1300, 1272, 1273, 1274, 1270, 1271, 1283, 0,
	1253, 0, 0, 0, 0, 0, 0, 1251, 1252, 322,
	323, 325, 324, 326, 327, 328, 329, 1284, 330, 331,
	0, 1282, 0, 0, 0, 1324, 1288, 0, 0, 332,
	0, 333, 334, 335, 1364, 336, 337, 338, 339, 340,
	341, 342, 742, 1337, 0, 343, 1344, 344, 1343, 0,
	1354, 345, 346, 347, 348, 349, 350, 351, 1290, 1323,
	1255, 352, 1384, 1385, 749, 0, 353, 354, 1330, 0,
	1311, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 1365, 380, 381, 382, 1314, 1312, 1313, 1320,
	1316, 1315, 1319, 383, 384, 385, 386, 387, 1347, 388,
	390, 1341, 1340, 1260, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	1332, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 1266, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 1355, 1356, 424, 1279,
	319, 0, 0, 0, 0, 0, 425, 426, 427, 1339,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 1366, 434, 435, 436, 1352, 1353, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 1362,
	0, 1289, 447, 0, 448, 449, 450, 451, 452, 453,
	454, 1325, 1326, 1329, 549, 1368, 455, 456, 457, 0,
	458, 459, 460, 461, 462, 0, 0, 0, 320, 463,
	464, 465, 0, 1367, 764, 466, 550, 467, 1334, 1335,
	0, 1295, 0, 468, 469, 472, 1369, 1327, 1370, 471,
	473, 474, 1371, 475, 0, 0, 0, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 485, 484, 0, 487,
	1363, 486, 1372, 488, 489, 1373, 0, 490, 491, 492,
	493, 494, 495, 498, 1318, 1317, 496, 497, 499, 500,
	0, 501, 502, 504, 507, 503, 505, 506, 508, 521,
	522, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 524, 0, 523, 1374, 525, 526, 527,
	528, 529, 536, 538, 539, 534, 535, 537, 540, 541,
	543, 531, 532, 533, 1375, 542, 530, 1257, 321, 1376,
	544, 545, 546, 547, 1280, 1328, 548, 1342, 551, 552,
	0, 0, 553, 0, 554, 0, 0, 556, 557, 558,
	0, 0, 559, 560, 772, 1377, 561, 1378, 1357, 562,
	563, 1267, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 0, 574, 575, 774, 576, 577, 578, 775,
	579, 580, 581, 1358, 582, 777, 583, 584, 0, 585,
	586, 587, 0, 588, 589, 590, 591, 592, 593, 594,
	595, 1338, 596, 597, 599, 598, 600, 0, 601, 0,
	602, 603, 604, 0, 0, 0, 0, 0, 605, 606,
	608, 0, 609, 610, 611, 612, 607, 613, 614, 615,
	616, 617, 618, 0, 620, 621, 619, 622, 623, 1379,
	624, 625, 626, 627, 628, 1268, 629, 0, 630, 631,
	639, 640, 641, 632, 633, 635, 642, 634, 643, 644,
	645, 646, 648, 647, 0, 650, 651, 649, 652, 653,
	654, 1321, 655, 780, 656, 636, 637, 657, 658, 1380,
	659, 660, 661, 662, 663, 664, 665, 1336, 0, 666,
	0, 667, 668, 669, 670, 671, 672, 674, 638, 675,
	680, 681, 1383, 676, 677, 678, 679, 1359, 683, 684,
	685, 686, 0, 687, 688, 1254, 682, 673, 0, 689,
	690, 691, 692, 693, 694, 0, 695, 696, 0, 697,
	1348, 1349, 1350, 1351, 0, 709, 0, 698, 700, 701,
	702, 703, 1360, 704, 1361, 1278, 705, 706, 707, 708,
	699, 710, 711, 0, 1261, 712, 713, 714, 716, 718,
	719, 715, 717, 720, 1322, 721, 0, 0, 722, 723,
	724, 790, 1345, 1382, 0, 726, 727, 725, 728, 729,
	732, 730, 731, 793, 733, 470, 734, 735, 0, 0,
	0, 0, 736, 737, 794, 738, 739, 740, 1258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1253, 0, 0, 0, 0, 0, 0,
	1251, 1252, 0, 0, 0, 0, 0, 0, 0, 0,
	1284, 2984, 0, 2983, 1282, 1300, 1272, 1273, 1274, 1270,
	1271, 1283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 0, 0, 0, 1324, 1288,
	0, 0, 332, 0, 333, 334, 335, 1364, 336, 337,
	338, 339, 340, 341, 342, 742, 1337, 0, 343, 1344,
	344, 1343, 0, 1354, 345, 346, 347, 348, 349, 350,
	351, 1290, 1323, 1255, 352, 1384, 1385, 749, 0, 353,
	354, 1330, 0, 1311, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 1365, 380, 381, 382, 1314,
	1312, 1313, 1320, 1316, 1315, 1319, 383, 384, 385, 386,
	387, 1347, 388, 390, 1341, 1340, 1260, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 1332, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 1266, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 1355,
	1356, 424, 1279, 319, 0, 0, 0, 0, 0, 425,
	426, 427, 1339, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 1366, 434, 435, 436, 1352,
	1353, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 1362, 0, 1289, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 1325, 1326, 1329, 549, 1368, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 320, 463, 464, 465, 0, 1367, 764, 466, 550,
	467, 1334, 1335, 0, 1295, 0, 468, 469, 472, 1369,
	1327, 1370, 471, 473, 474, 1371, 475, 0, 0, 0,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 485,
	484, 0, 487, 1363, 486, 1372, 488, 489, 1373, 0,
	490, 491, 492, 493, 494, 495, 498, 1318, 1317, 496,
	497, 499, 500, 0, 501, 502, 504, 507, 503, 505,
	506, 508, 521, 522, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 524, 0, 523, 1374,
	525, 526, 527, 528, 529, 536, 538, 539, 534, 535,
	537, 540, 541, 543, 531, 532, 533, 1375, 542, 530,
	1257, 321, 1376, 544, 545, 546, 547, 1280, 1328, 548,
	1342, 551, 552, 0, 0, 553, 0, 554, 0, 0,
	556, 557, 558, 0, 0, 559, 560, 772, 1377, 561,
	1378, 1357, 562, 563, 1267, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 0, 574, 575, 774, 576,
	577, 578, 775, 579, 580, 581, 1358, 582, 777, 583,
	584, 0, 585, 586, 587, 0, 588, 589, 590, 591,
	592, 593, 594, 595, 1338, 596, 597, 599, 598, 600,
	0, 601, 0, 602, 603, 604, 0, 0, 0, 0,
	0, 605, 606, 608, 0, 609, 610, 611, 612, 607,
	613, 614, 615, 616, 617, 618, 0, 620, 621, 619,
	622, 623, 1379, 624, 625, 626, 627, 628, 1268, 629,
	0, 630, 631, 639, 640, 641, 632, 633, 635, 642,
	634, 643, 644, 645, 646, 648, 647, 0, 650, 651,
	649, 652, 653, 654, 1321, 655, 780, 656, 636, 637,
	657, 658, 1380, 659, 660, 661, 662, 663, 664, 665,
	1336, 0, 666, 0, 667, 668, 669, 670, 671, 672,
	674, 638, 675, 680, 681, 1383, 676, 677, 678, 679,
	1359, 683, 684, 685, 686, 0, 687, 688, 1254, 682,
	673, 0, 689, 690, 691, 692, 693, 694, 0, 695,
	696, 0, 697, 1348, 1349, 1350, 1351, 0, 709, 0,
	698, 700, 701, 702, 703, 1360, 704, 1361, 1278, 705,
	706, 707, 708, 699, 710, 711, 0, 1261, 712, 713,
	714, 716, 718, 719, 715, 717, 720, 1322, 721, 0,
	0, 722, 723, 724, 790, 1345, 1382, 0, 726, 727,
	725, 728, 729, 732, 730, 731, 793, 733, 470, 734,
	735, 0, 0, 0, 0, 736, 737, 794, 738, 739,
	740, 1258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1253, 0, 0, 0,
	0, 0, 0, 1251, 1252, 0, 0, 0, 0, 0,
	0, 0, 0, 1284, 2981, 0, 2980, 1282, 1300, 1272,
	1273, 1274, 1270, 1271, 1283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 1324, 1288, 0, 0, 332, 0, 333, 334, 335,
	1364, 336, 337, 338, 339, 340, 341, 342, 742, 1337,
	0, 343, 1344, 344, 1343, 0, 1354, 345, 346, 347,
	348, 349, 350, 351, 1290, 1323, 1255, 352, 1384, 1385,
	749, 0, 353, 354, 1330, 0, 1311, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 1365, 380,
	381, 382, 1314, 1312, 1313, 1320, 1316, 1315, 1319, 383,
	384, 385, 386, 387, 1347, 388, 390, 1341, 1340, 1260,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 1332, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 1266,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 1355, 1356, 424, 1279, 319, 0, 0, 0,
	0, 0, 425, 426, 427, 1339, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 1366, 434,
	435, 436, 1352, 1353, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 1362, 0, 1289, 447, 0,
	448, 449, 450, 451, 452, 453, 454, 1325, 1326, 1329,
	549, 1368, 455, 456, 457, 0, 458, 459, 460, 461,
	462, 0, 0, 0, 320, 463, 464, 465, 0, 1367,
	764, 466, 550, 467, 1334, 1335, 0, 1295, 0, 468,
	469, 472, 1369, 1327, 1370, 471, 473, 474, 1371, 475,
	0, 0, 0, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 485, 484, 0, 487, 1363, 486, 1372, 488,
	489, 1373, 0, 490, 491, 492, 493, 494, 495, 498,
	1318, 1317, 496, 497, 499, 500, 0, 501, 502, 504,
	507, 503, 505, 506, 508, 521, 522, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 524,
	0, 523, 1374, 525, 526, 527, 528, 529, 536, 538,
	539, 534, 535, 537, 540, 541, 543, 531, 532, 533,
	1375, 542, 530, 1257, 321, 1376, 544, 545, 546, 547,
	1280, 1328, 548, 1342, 551, 552, 0, 0, 553, 0,
	554, 0, 0, 556, 557, 558, 0, 0, 559, 560,
	772, 1377, 561, 1378, 1357, 562, 563, 1267, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 0, 574,
	575, 774, 576, 577, 578, 775, 579, 580, 581, 1358,
	582, 777, 583, 584, 0, 585, 586, 587, 0, 588,
	589, 590, 591, 592, 593, 594, 595, 1338, 596, 597,
	599, 598, 600, 0, 601, 0, 602, 603, 604, 0,
	0, 0, 0, 0, 605, 606, 608, 0, 609, 610,
	611, 612, 607, 613, 614, 615, 616, 617, 618, 0,
	620, 621, 619, 622, 623, 1379, 624, 625, 626, 627,
	628, 1268, 629, 0, 630, 631, 639, 640, 641, 632,
	633, 635, 642, 634, 643, 644, 645, 646, 648, 647,
	0, 650, 651, 649, 652, 653, 654, 1321, 655, 780,
	656, 636, 637, 657, 658, 1380, 659, 660, 661, 662,
	663, 664, 665, 1336, 0, 666, 0, 667, 668, 669,
	670, 671, 672, 674, 638, 675, 680, 681, 1383, 676,
	677, 678, 679, 1359, 683, 684, 685, 686, 0, 687,
	688, 1254, 682, 673, 0, 689, 690, 691, 692, 693,
	694, 0, 695, 696, 0, 697, 1348, 1349, 1350, 1351,
	0, 709, 0, 698, 700, 701, 702, 703, 1360, 704,
	1361, 1278, 705, 706, 707, 708, 699, 710, 711, 0,
	1261, 712, 713, 714, 716, 718, 719, 715, 717, 720,
	1322, 721, 0, 0, 722, 723, 724, 790, 1345, 1382,
	0, 726, 727, 725, 728, 729, 732, 730, 731, 793,
	733, 470, 734, 735, 0, 0, 0, 0, 736, 737,
	794, 738, 739, 740, 1258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1253,
	0, 0, 0, 0, 0, 0, 1251, 1252, 0, 0,
	0, 0, 0, 0, 0, 0, 1284, 2978, 0, 2977,
	1282, 1300, 1272, 1273, 1274, 1270, 1271, 1283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	325, 324, 326, 327, 328, 329, 0, 330, 331, 0,
	0, 0, 0, 0, 1324, 1288, 0, 0, 332, 0,
	333, 334, 335, 1364, 336, 337, 338, 339, 340, 341,
	342, 742, 1337, 0, 343, 1344, 344, 1343, 0, 1354,
	345, 346, 347, 348, 349, 350, 351, 1290, 1323, 1255,
	352, 1384, 1385, 749, 0, 353, 354, 1330, 0, 1311,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 1365, 380, 381, 382, 1314, 1312, 1313, 1320, 1316,
	1315, 1319, 383, 384, 385, 386, 387, 1347, 388, 390,
	1341, 1340, 1260, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 1332,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 1266, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 1355, 1356, 424, 1279, 319,
	0, 0, 0, 0, 0, 425, 426, 427, 1339, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 1366, 434, 435, 436, 1352, 1353, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 1362, 0,
	1289, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	1325, 1326, 1329, 549, 1368, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 0, 0, 0, 320, 463, 464,
	465, 0, 1367, 764, 466, 550, 467, 1334, 1335, 0,
	1295, 0, 468, 469, 472, 1369, 1327, 1370, 471, 473,
	474, 1371, 475, 0, 0, 0, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 485, 484, 0, 487, 1363,
	486, 1372, 488, 489, 1373, 0, 490, 491, 492, 493,
	494, 495, 498, 1318, 1317, 496, 497, 499, 500, 0,
	501, 502, 504, 507, 503, 505, 506, 508, 521, 522,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 524, 0, 523, 1374, 525, 526, 527, 528,
	529, 536, 538, 539, 534, 535, 537, 540, 541, 543,
	531, 532, 533, 1375, 542, 530, 1257, 321, 1376, 544,
	545, 546, 547, 1280, 1328, 548, 1342, 551, 552, 0,
	0, 553, 0, 554, 0, 0, 556, 557, 558, 0,
	0, 559, 560, 772, 1377, 561, 1378, 1357, 562, 563,
	1267, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 0, 574, 575, 774, 576, 577, 578, 775, 579,
	580, 581, 1358, 582, 777, 583, 584, 0, 585, 586,
	587, 0, 588, 589, 590, 591, 592, 593, 594, 595,
	1338, 596, 597, 599, 598, 600, 0, 601, 0, 602,
	603, 604, 0, 0, 0, 0, 0, 605, 606, 608,
	0, 609, 610, 611, 612, 607, 613, 614, 615, 616,
	617, 618, 0, 620, 621, 619, 622, 623, 1379, 624,
	625, 626, 627, 628, 1268, 629, 0, 630, 631, 639,
	640, 641, 632, 633, 635, 642, 634, 643, 644, 645,
	646, 648, 647, 0, 650, 651, 649, 652, 653, 654,
	1321, 655, 780, 656, 636, 637, 657, 658, 1380, 659,
	660, 661, 662, 663, 664, 665, 1336, 0, 666, 0,
	667, 668, 669, 670, 671, 672, 674, 638, 675, 680,
	681, 1383, 676, 677, 678, 679, 1359, 683, 684, 685,
	686, 0, 687, 688, 1254, 682, 673, 0, 689, 690,
	691, 692, 693, 694, 0, 695, 696, 0, 697, 1348,
	1349, 1350, 1351, 0, 709, 0, 698, 700, 701, 702,
	703, 1360, 704, 1361, 1278, 705, 706, 707, 708, 699,
	710, 711, 0, 1261, 712, 713, 714, 716, 718, 719,
	715, 717, 720, 1322, 721, 0, 0, 722, 723, 724,
	790, 1345, 1382, 0, 726, 727, 725, 728, 729, 732,
	730, 731, 793, 733, 470, 734, 735, 0, 0, 0,
	0, 736, 737, 794, 738, 739, 740, 1258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1253, 0, 0, 0, 0, 0, 0, 1251,
	1252, 0, 0, 0, 0, 0, 0, 0, 0, 1284,
	2975, 0, 1947, 1282, 1300, 1272, 1273, 1274, 1270, 1271,
	1283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 325, 324, 326, 327, 328, 329, 0,
	330, 331, 0, 0, 0, 0, 0, 1324, 1288, 0,
	0, 332, 0, 333, 334, 335, 1364, 336, 337, 338,
	339, 340, 341, 342, 742, 1337, 0, 343, 1344, 344,
	1343, 0, 1354, 345, 346, 347, 348, 349, 350, 351,
	1290, 1323, 1255, 352, 1384, 1385, 749, 0, 353, 354,
	1330, 0, 1311, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 1365, 380, 381, 382, 1314, 1312,
	1313, 1320, 1316, 1315, 1319, 383, 384, 385, 386, 387,
	1347, 388, 390, 1341, 1340, 1260, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 1332, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 1266, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 1355, 1356,
	424, 1279, 319, 0, 0, 0, 0, 0, 425, 426,
	427, 1339, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 1366, 434, 435, 436, 1352, 1353,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 1362, 0, 1289, 447, 0, 448, 449, 450, 451,
	452, 453, 454, 1325, 1326, 1329, 549, 1368, 455, 456,
	457, 0, 458, 459, 460, 461, 462, 0, 0, 0,
	320, 463, 464, 465, 0, 1367, 764, 466, 550, 467,
	1334, 1335, 0, 1295, 0, 468, 469, 472, 1369, 1327,
	1370, 471, 473, 474, 1371, 475, 0, 0, 0, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 485, 484,
	0, 487, 1363, 486, 1372, 488, 489, 1373, 0, 490,
	491, 492, 493, 494, 495, 498, 1318, 1317, 496, 497,
	499, 500, 0, 501, 502, 504, 507, 503, 505, 506,
	508, 521, 522, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 524, 0, 523, 1374, 525,
	526, 527, 528, 529, 536, 538, 539, 534, 535, 537,
	540, 541, 543, 531, 532, 533, 1375, 542, 530, 1257,
	321, 1376, 544, 545, 546, 547, 1280, 1328, 548, 1342,
	551, 552, 0, 0, 553, 0, 554, 0, 0, 556,
	557, 558, 0, 0, 559, 560, 772, 1377, 561, 1378,
	1357, 562, 563, 1267, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 0, 574, 575, 774, 576, 577,
	578, 775, 579, 580, 581, 1358, 582, 777, 583, 584,
	0, 585, 586, 587, 0, 588, 589, 590, 591, 592,
	593, 594, 595, 1338, 596, 597, 599, 598, 600, 0,
	601, 0, 602, 603, 604, 0, 0, 0, 0, 0,
	605, 606, 608, 0, 609, 610, 611, 612, 607, 613,
	614, 615, 616, 617, 618, 0, 620, 621, 619, 622,
	623, 1379, 624, 625, 626, 627, 628, 1268, 629, 0,
	630, 631, 639, 640, 641, 632, 633, 635, 642, 634,
	643, 644, 645, 646, 648, 647, 0, 650, 651, 649,
	652, 653, 654, 1321, 655, 780, 656, 636, 637, 657,
	658, 1380, 659, 660, 661, 662, 663, 664, 665, 1336,
	0, 666, 0, 667, 668, 669, 670, 671, 672, 674,
	638, 675, 680, 681, 1383, 676, 677, 678, 679, 1359,
	683, 684, 685, 686, 0, 687, 688, 1254, 682, 673,
	0, 689, 690, 691, 692, 693, 694, 0, 695, 696,
	0, 697, 1348, 1349, 1350, 1351, 0, 709, 0, 698,
	700, 701, 702, 703, 1360, 704, 1361, 1278, 705, 706,
	707, 708, 699, 710, 711, 0, 1261, 712, 713, 714,
	716, 718, 719, 715, 717, 720, 1322, 721, 0, 0,
	722, 723, 724, 790, 1345, 1382, 0, 726, 727, 725,
	728, 729, 732, 730, 731, 793, 733, 470, 734, 735,
	1946, 0, 0, 0, 736, 737, 794, 738, 739, 740,
	1258, 0, 0, 0, 0, 1247, 0, 1300, 1272, 1273,
	1274, 1270, 1271, 1283, 0, 1253, 0, 0, 0, 0,
	0, 0, 1251, 1252, 322, 323, 325, 324, 326, 327,
	328, 329, 1284, 330, 331, 0, 1282, 0, 0, 0,
	1324, 1288, 0, 0, 332, 0, 333, 334, 335, 1364,
	336, 337, 338, 339, 340, 341, 342, 742, 1337, 0,
	343, 1344, 344, 1343, 0, 1354, 345, 346, 347, 348,
	349, 350, 351, 1290, 1323, 1255, 352, 1384, 1385, 749,
	0, 353, 354, 1330, 0, 1311, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 1365, 380, 381,
	382, 1314, 1312, 1313, 1320, 1316, 1315, 1319, 383, 384,
	385, 386, 387, 1347, 388, 390, 1341, 1340, 1260, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 1332, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 1266, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 1355, 1356, 424, 1279, 319, 0, 0, 0, 0,
	0, 425, 426, 427, 1339, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 1366, 434, 435,
	436, 1352, 1353, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 1362, 0, 1289, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 1325, 1326, 1329, 549,
	1368, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 320, 463, 464, 465, 0, 1367, 764,
	466, 550, 467, 1334, 1335, 0, 1295, 0, 468, 469,
	472, 1369, 1327, 1370, 471, 473, 474, 1371, 475, 0,
	0, 0, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 485, 484, 0, 487, 1363, 486, 1372, 488, 489,
	1373, 0, 490, 491, 492, 493, 494, 495, 498, 1318,
	1317, 496, 497, 499, 500, 0, 501, 502, 504, 507,
	503, 505, 506, 508, 521, 522, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 524, 0,
	523, 1374, 525, 526, 527, 528, 529, 536, 538, 539,
	534, 535, 537, 540, 541, 543, 531, 532, 533, 1375,
	542, 530, 1257, 321, 1376, 544, 545, 546, 547, 1280,
	1328, 548, 1342, 551, 552, 0, 0, 553, 0, 554,
	1262, 0, 556, 557, 558, 0, 0, 559, 560, 772,
	1377, 561, 1378, 1357, 562, 563, 1267, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 0, 574, 575,
	774, 576, 577, 578, 775, 579, 580, 581, 1358, 582,
	777, 583, 584, 0, 585, 586, 587, 0, 588, 589,
	590, 591, 592, 593, 594, 595, 1338, 596, 597, 599,
	598, 600, 0, 601, 0, 602, 603, 604, 0, 0,
	0, 0, 0, 605, 606, 608, 0, 609, 610, 611,
	612, 607, 613, 614, 615, 616, 617, 618, 0, 620,
	621, 619, 622, 623, 1379, 624, 625, 626, 627, 628,
	1268, 629, 0, 630, 631, 639, 640, 641, 632, 633,
	635, 642, 634, 643, 644, 645, 646, 648, 647, 0,
	650, 651, 649, 652, 653, 654, 1321, 655, 780, 656,
	636, 637, 657, 658, 1380, 659, 660, 661, 662, 663,
	664, 665, 1336, 0, 666, 0, 667, 668, 669, 670,
	671, 672, 674, 638, 675, 680, 681, 1383, 676, 677,
	678, 679, 1359, 683, 684, 685, 686, 0, 687, 688,
	1254, 682, 673, 0, 689, 690, 691, 692, 693, 694,
	0, 695, 696, 0, 697, 1348, 1349, 1350, 1351, 0,
	709, 0, 698, 700, 701, 702, 703, 1360, 704, 1361,
	1278, 705, 706, 707, 708, 699, 710, 711, 0, 1261,
	712, 713, 714, 716, 718, 719, 715, 717, 720, 1322,
	721, 0, 0, 722, 723, 724, 790, 1345, 1382, 0,
	726, 727, 725, 728, 729, 732, 730, 731, 793, 733,
	470, 734, 735, 0, 0, 0, 0, 736, 737, 794,
	738, 739, 740, 1258, 0, 0, 0, 0, 0, 0,
	1300, 1272, 1273, 1274, 1270, 1271, 1283, 0, 1253, 0,
	0, 0, 0, 0, 0, 1251, 1252, 322, 323, 325,
	324, 326, 327, 328, 329, 1284, 330, 331, 0, 1282,
	0, 0, 0, 1324, 1288, 0, 0, 332, 0, 333,
	334, 335, 1364, 336, 337, 338, 339, 340, 341, 342,
	742, 1337, 0, 343, 1344, 344, 1343, 0, 1354, 345,
	346, 347, 348, 349, 350, 351, 1290, 1323, 1255, 352,
	1384, 1385, 749, 0, 353, 354, 1330, 0, 1311, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 5428, 375, 376, 0, 377, 378, 379,
	1365, 380, 381, 382, 1314, 1312, 1313, 1320, 1316, 1315,
	1319, 383, 384, 385, 386, 387, 1347, 388, 390, 1341,
	1340, 1260, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 1332, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 1266, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 1355, 1356, 424, 1279, 319, 0,
	0, 0, 0, 0, 425, 426, 427, 1339, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	1366, 434, 435, 436, 1352, 1353, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 1362, 0, 1289,
	447, 0, 448, 449, 450, 451, 452, 453, 454, 1325,
	1326, 1329, 549, 1368, 455, 456, 457, 0, 458, 459,
	460, 461, 462, 0, 0, 0, 320, 463, 464, 465,
	0, 1367, 764, 466, 550, 467, 1334, 1335, 0, 1295,
	0, 468, 469, 472, 1369, 1327, 1370, 471, 473, 474,
	1371, 475, 0, 0, 0, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 485, 484, 0, 487, 1363, 486,
	1372, 488, 489, 1373, 0, 490, 491, 492, 493, 494,
	495, 498, 1318, 1317, 496, 497, 499, 500, 0, 501,
	502, 504, 507, 503, 505, 506, 508, 521, 522, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 524, 0, 523, 1374, 525, 526, 527, 528, 529,
	536, 538, 539, 534, 535, 537, 540, 541, 543, 531,
	532, 533, 1375, 542, 530, 1257, 321, 1376, 544, 545,
	546, 547, 1280, 1328, 548, 1342, 551, 552, 0, 0,
	553, 0, 554, 1262, 0, 556, 557, 558, 0, 0,
	559, 560, 772, 1377, 561, 1378, 1357, 562, 563, 1267,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	0, 574, 575, 774, 576, 577, 578, 775, 579, 580,
	581, 1358, 582, 777, 583, 584, 0, 585, 586, 587,
	0, 588, 589, 590, 591, 592, 593, 594, 595, 1338,
	596, 597, 599, 598, 600, 0, 601, 0, 602, 603,
	604, 0, 0, 0, 0, 0, 605, 606, 608, 0,
	609, 610, 611, 612, 607, 613, 614, 615, 616, 617,
	618, 0, 620, 621, 619, 622, 623, 1379, 624, 625,
	626, 627, 628, 1268, 629, 0, 630, 631, 639, 640,
	641, 632, 633, 635, 642, 634, 643, 644, 645, 646,
	648, 647, 0, 650, 651, 649, 652, 653, 654, 1321,
	655, 780, 656, 636, 637, 657, 658, 1380, 659, 660,
	661, 662, 663, 664, 665, 1336, 0, 666, 0, 667,
	668, 669, 670, 671, 672, 674, 638, 675, 680, 681,
	1383, 676, 677, 678, 679, 1359, 683, 684, 685, 686,
	0, 687, 688, 1254, 682, 673, 0, 689, 690, 691,
	692, 693, 694, 0, 695, 696, 0, 697, 1348, 1349,
	1350, 1351, 0, 709, 0, 698, 700, 701, 702, 703,
	1360, 704, 1361, 1278, 705, 706, 707, 708, 699, 710,
	711, 0, 1261, 712, 713, 714, 716, 718, 719, 715,
	717, 720, 1322, 721, 0, 0, 722, 723, 724, 790,
	1345, 1382, 0, 726, 727, 725, 728, 729, 732, 730,
	731, 793, 733, 470, 734, 735, 0, 0, 0, 0,
	736, 737, 794, 738, 739, 740, 1258, 0, 0, 0,
	0, 0, 0, 1300, 1272, 1273, 1274, 1270, 1271, 1283,
	0, 1253, 0, 0, 0, 0, 0, 0, 1251, 1252,
	322, 323, 325, 324, 326, 327, 328, 329, 1284, 330,
	331, 0, 1282, 0, 0, 0, 1324, 1288, 0, 0,
	332, 0, 333, 334, 335, 1364, 336, 337, 338, 339,
	340, 341, 342, 742, 1337, 0, 343, 1344, 344, 1343,
	0, 1354, 345, 346, 347, 348, 349, 350, 351, 1290,
	1323, 1255, 352, 1384, 1385, 749, 0, 353, 354, 1330,
	0, 1311, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 1365, 380, 381, 382, 1314, 1312, 1313,
	1320, 1316, 1315, 1319, 383, 384, 385, 386, 387, 1347,
	388, 390, 1341, 1340, 1260, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 1332, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 1266, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 1355, 1356, 424,
	1279, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	1339, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 1366, 434, 435, 436, 1352, 1353, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	1362, 0, 1289, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 1325, 1326, 1329, 549, 1368, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 2816,
	463, 464, 465, 0, 1367, 764, 466, 550, 467, 1334,
	1335, 0, 1295, 0, 468, 469, 472, 1369, 1327, 1370,
	471, 473, 474, 1371, 475, 0, 0, 0, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 485, 484, 0,
	487, 1363, 486, 1372, 488, 489, 1373, 0, 490, 491,
	492, 493, 494, 495, 498, 1318, 1317, 496, 497, 499,
	500, 0, 501, 502, 504, 507, 503, 505, 506, 508,
	521, 522, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 524, 0, 523, 1374, 525, 526,
	527, 528, 529, 536, 538, 539, 534, 535, 537, 540,
	541, 543, 531, 532, 533, 1375, 542, 530, 1257, 321,
	1376, 544, 545, 546, 547, 1280, 1328, 548, 1342, 551,
	552, 0, 0, 553, 0, 554, 0, 0, 556, 557,
	558, 0, 0, 559, 560, 772, 1377, 561, 1378, 1357,
	562, 563, 1267, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 0, 574, 575, 774, 576, 577, 578,
	775, 579, 580, 581, 1358, 582, 777, 583, 584, 2815,
	585, 586, 587, 0, 588, 589, 590, 591, 592, 593,
	594, 595, 1338, 596, 597, 599, 598, 600, 0, 601,
	0, 602, 603, 604, 0, 0, 0, 0, 0, 605,
	606, 608, 0, 609, 610, 611, 612, 607, 613, 614,
	615, 616, 617, 618, 0, 620, 621, 619, 622, 623,
	1379, 624, 625, 626, 627, 628, 1268, 629, 0, 630,
	631, 639, 640, 641, 632, 633, 635, 642, 634, 643,
	644, 645, 646, 648, 647, 0, 650, 651, 649, 652,
	653, 654, 1321, 655, 780, 656, 636, 637, 657, 658,
	1380, 659, 660, 661, 662, 663, 664, 665, 1336, 0,
	666, 0, 667, 668, 669, 670, 671, 672, 674, 638,
	675, 680, 681, 1383, 676, 677, 678, 679, 1359, 683,
	684, 685, 686, 0, 687, 688, 1254, 682, 673, 0,
	689, 690, 691, 692, 693, 694, 0, 695, 696, 0,
	697, 1348, 1349, 1350, 1351, 0, 709, 0, 698, 700,
	701, 702, 703, 1360, 704, 1361, 1278, 705, 706, 707,
	708, 699, 710, 711, 0, 1261, 712, 713, 714, 716,
	718, 719, 715, 717, 720, 1322, 721, 0, 0, 722,
	723, 724, 790, 1345, 1382, 0, 726, 727, 725, 728,
	729, 732, 730, 731, 793, 733, 470, 734, 735, 0,
	0, 0, 0, 736, 737, 794, 738, 739, 740, 1258,
	0, 0, 0, 0, 0, 0, 1300, 1272, 1273, 1274,
	1270, 1271, 1283, 0, 1253, 0, 0, 0, 0, 0,
	0, 1251, 1252, 322, 323, 325, 324, 326, 327, 328,
	329, 1284, 330, 331, 0, 1282, 0, 0, 0, 1324,
	1288, 0, 0, 332, 0, 333, 334, 335, 1364, 336,
	337, 338, 339, 340, 341, 342, 742, 1337, 0, 343,
	1344, 344, 1343, 0, 1354, 345, 346, 347, 348, 349,
	350, 351, 1290, 1323, 1255, 352, 1384, 1385, 749, 0,
	353, 354, 1330, 0, 1311, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 5134,
	375, 376, 0, 377, 378, 379, 1365, 380, 381, 382,
	1314, 1312, 1313, 1320, 1316, 1315, 1319, 383, 384, 385,
	386, 387, 1347, 388, 390, 1341, 1340, 1260, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 1332, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 1266, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	1355, 1356, 424, 1279, 319, 0, 0, 0, 0, 0,
	425, 426, 427, 1339, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 1366, 434, 435, 436,
	1352, 1353, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 1362, 0, 1289, 447, 0, 448, 449,
	450, 451, 452, 453, 454, 1325, 1326, 1329, 549, 1368,
	455, 456, 457, 0, 458, 459, 460, 461, 462, 0,
	0, 0, 320, 463, 464, 465, 0, 1367, 764, 466,
	550, 467, 1334, 1335, 0, 1295, 0, 468, 469, 472,
	1369, 1327, 1370, 471, 473, 474, 1371, 475, 0, 0,
	0, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	485, 484, 0, 487, 1363, 486, 1372, 488, 489, 1373,
	0, 490, 491, 492, 493, 494, 495, 498, 1318, 1317,
	496, 497, 499, 500, 0, 501, 502, 504, 507, 503,
	505, 506, 508, 521, 522, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 524, 0, 523,
	1374, 525, 526, 527, 528, 529, 536, 538, 539, 534,
	535, 537, 540, 541, 543, 531, 532, 533, 1375, 542,
	530, 1257, 321, 1376, 544, 545, 546, 547, 1280, 1328,
	548, 1342, 551, 552, 0, 0, 553, 0, 554, 1262,
	0, 556, 557, 558, 0, 0, 559, 560, 772, 1377,
	561, 1378, 1357, 562, 563, 1267, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 0, 574, 575, 774,
	576, 577, 578, 775, 579, 580, 581, 1358, 582, 777,
	583, 584, 0, 585, 586, 587, 0, 588, 589, 590,
	591, 592, 593, 594, 595, 1338, 596, 597, 599, 598,
	600, 0, 601, 0, 602, 603, 604, 0, 0, 0,
	0, 0, 605, 606, 608, 0, 609, 610, 611, 612,
	607, 613, 614, 615, 616, 617, 618, 0, 620, 621,
	619, 622, 623, 1379, 624, 625, 626, 627, 628, 1268,
	629, 0, 630, 631, 639, 640, 641, 632, 633, 635,
	642, 634, 643, 644, 645, 646, 648, 647, 0, 650,
	651, 649, 652, 653, 654, 1321, 655, 780, 656, 636,
	637, 657, 658, 1380, 659, 660, 661, 662, 663, 664,
	665, 1336, 0, 666, 0, 667, 668, 669, 670, 671,
	672, 674, 638, 675, 680, 681, 1383, 676, 677, 678,
	679, 1359, 683, 684, 685, 686, 0, 687, 688, 1254,
	682, 673, 0, 689, 690, 691, 692, 693, 694, 0,
	695, 696, 0, 697, 1348, 1349, 1350, 1351, 0, 709,
	0, 698, 700, 701, 702, 703, 1360, 704, 1361, 1278,
	705, 706, 707, 708, 699, 710, 711, 0, 1261, 712,
	713, 714, 716, 718, 719, 715, 717, 720, 1322, 721,
	0, 0, 722, 723, 724, 790, 1345, 1382, 0, 726,
	727, 725, 728, 729, 732, 730, 731, 793, 733, 470,
	734, 735, 0, 0, 0, 0, 736, 737, 794, 738,
	739, 740, 1258, 0, 0, 0, 0, 0, 0, 1300,
	1272, 1273, 1274, 1270, 1271, 1283, 0, 1253, 0, 0,
	0, 0, 0, 0, 1251, 1252, 322, 323, 325, 324,
	326, 327, 328, 329, 1284, 330, 331, 0, 1282, 0,
	0, 0, 1324, 1288, 0, 0, 332, 0, 333, 334,
	335, 1364, 336, 337, 338, 339, 340, 341, 342, 742,
	1337, 0, 343, 1344, 344, 1343, 0, 1354, 345, 346,
	347, 348, 349, 350, 351, 1290, 1323, 1255, 352, 1384,
	1385, 749, 0, 353, 354, 1330, 0, 1311, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 1365,
	380, 381, 382, 1314, 1312, 1313, 1320, 1316, 1315, 1319,
	383, 384, 385, 386, 387, 1347, 388, 390, 1341, 1340,
	1260, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 1332, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	1266, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 1355, 1356, 424, 1279, 319, 0, 0,
	0, 0, 0, 425, 426, 427, 1339, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 1366,
	434, 435, 436, 1352, 1353, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 1362, 0, 1289, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 1325, 1326,
	1329, 549, 1368, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 0, 0, 0, 320, 463, 464, 465, 0,
	1367, 764, 466, 550, 467, 1334, 1335, 0, 1295, 0,
	468, 469, 472, 1369, 1327, 1370, 471, 473, 474, 1371,
	475, 0, 0, 0, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 485, 484, 0, 487, 1363, 486, 1372,
	488, 489, 1373, 0, 490, 491, 492, 493, 494, 495,
	498, 1318, 1317, 496, 497, 499, 500, 0, 501, 502,
	504, 507, 503, 505, 506, 508, 521, 522, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	524, 0, 523, 1374, 525, 526, 527, 528, 529, 536,
	538, 539, 534, 535, 537, 540, 541, 543, 531, 532,
	533, 1375, 542, 530, 1257, 321, 1376, 544, 545, 546,
	547, 1280, 1328, 548, 1342, 551, 552, 0, 0, 553,
	0, 554, 1262, 0, 556, 557, 558, 0, 0, 559,
	560, 772, 1377, 561, 1378, 1357, 562, 563, 1267, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 0,
	574, 575, 774, 576, 577, 578, 775, 579, 580, 581,
	1358, 582, 777, 583, 584, 0, 585, 586, 587, 0,
	588, 589, 590, 591, 592, 593, 594, 595, 1338, 596,
	597, 599, 598, 600, 0, 601, 0, 602, 603, 604,
	0, 0, 0, 0, 0, 605, 606, 608, 0, 609,
	610, 611, 612, 607, 613, 614, 615, 616, 617, 618,
	0, 620, 621, 619, 622, 623, 1379, 624, 625, 626,
	627, 628, 1268, 629, 0, 630, 631, 639, 640, 641,
	632, 633, 635, 642, 634, 643, 644, 645, 646, 648,
	647, 0, 650, 651, 649, 652, 653, 654, 1321, 655,
	780, 656, 636, 637, 657, 658, 1380, 659, 660, 661,
	662, 663, 664, 665, 1336, 0, 666, 0, 667, 668,
	669, 670, 671, 672, 674, 638, 675, 680, 681, 1383,
	676, 677, 678, 679, 1359, 683, 684, 685, 686, 0,
	687, 688, 1254, 682, 673, 0, 689, 690, 691, 692,
	693, 694, 0, 695, 696, 0, 697, 1348, 1349, 1350,
	1351, 0, 709, 0, 698, 700, 701, 702, 703, 1360,
	704, 1361, 1278, 705, 706, 707, 708, 699, 710, 711,
	0, 1261, 712, 713, 714, 716, 718, 719, 715, 717,
	720, 1322, 721, 0, 0, 722, 723, 724, 790, 1345,
	1382, 0, 726, 727, 725, 728, 729, 732, 730, 731,
	793, 733, 470, 734, 735, 0, 0, 0, 0, 736,
	737, 794, 738, 739, 740, 1258, 0, 0, 0, 0,
	0, 0, 1300, 1272, 1273, 1274, 1270, 1271, 1283, 0,
	1253, 0, 0, 0, 0, 0, 0, 1251, 1252, 322,
	323, 325, 324, 326, 327, 328, 329, 1284, 330, 331,
	0, 1282, 0, 0, 0, 1324, 1288, 0, 0, 332,
	0, 333, 334, 335, 1364, 336, 337, 338, 339, 340,
	341, 342, 742, 1337, 0, 343, 1344, 344, 1343, 0,
	1354, 345, 346, 347, 348, 349, 350, 351, 1290, 1323,
	1255, 352, 1384, 1385, 749, 0, 353, 354, 1330, 0,
	1311, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 1365, 380, 381, 382, 1314, 1312, 1313, 1320,
	1316, 1315, 1319, 383, 384, 385, 386, 387, 1347, 388,
	390, 1341, 1340, 1260, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	1332, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 1266, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 1355, 1356, 424, 1279,
	319, 0, 0, 0, 0, 0, 425, 426, 427, 1339,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 1366, 434, 435, 436, 1352, 1353, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 1362,
	0, 1289, 447, 0, 448, 449, 450, 451, 452, 453,
	454, 1325, 1326, 1329, 549, 1368, 455, 456, 457, 0,
	458, 459, 460, 461, 462, 0, 0, 0, 320, 463,
	464, 465, 0, 1367, 764, 466, 550, 467, 1334, 1335,
	0, 1295, 0, 468, 469, 472, 1369, 1327, 1370, 471,
	473, 474, 1371, 475, 0, 0, 0, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 485, 484, 0, 487,
	1363, 486, 1372, 488, 489, 1373, 0, 490, 491, 492,
	493, 494, 495, 498, 1318, 1317, 496, 497, 499, 500,
	0, 501, 502, 504, 507, 503, 505, 506, 508, 521,
	522, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 524, 0, 523, 1374, 525, 526, 527,
	528, 529, 536, 538, 539, 534, 535, 537, 540, 541,
	543, 531, 532, 533, 1375, 542, 530, 1257, 4661, 1376,
	544, 545, 546, 547, 1280, 1328, 548, 1342, 551, 552,
	0, 0, 553, 0, 554, 0, 0, 556, 557, 558,
	0, 0, 559, 560, 772, 1377, 561, 1378, 1357, 562,
	563, 1267, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 0, 574, 575, 774, 576, 577, 578, 775,
	579, 580, 581, 1358, 582, 777, 583, 584, 0, 585,
	586, 587, 0, 588, 589, 590, 591, 592, 593, 594,
	595, 1338, 596, 597, 599, 598, 600, 0, 601, 0,
	602, 603, 604, 0, 0, 0, 0, 0, 605, 606,
	608, 0, 609, 610, 611, 612, 607, 613, 614, 615,
	616, 617, 618, 0, 620, 621, 619, 622, 623, 1379,
	624, 625, 626, 627, 628, 1268, 629, 0, 630, 631,
	639, 640, 641, 632, 633, 635, 642, 634, 643, 644,
	645, 646, 648, 647, 0, 650, 651, 649, 652, 653,
	654, 1321, 655, 780, 656, 636, 637, 657, 658, 1380,
	659, 660, 661, 662, 663, 664, 665, 1336, 0, 666,
	0, 667, 668, 669, 670, 671, 672, 674, 638, 675,
	680, 681, 1383, 676, 677, 678, 679, 1359, 683, 684,
	685, 686, 0, 687, 688, 1254, 682, 673, 0, 689,
	690, 691, 692, 693, 694, 0, 695, 696, 0, 697,
	1348, 1349, 1350, 1351, 0, 709, 0, 698, 700, 701,
	702, 703, 1360, 704, 1361, 1278, 705, 706, 707, 708,
	699, 710, 711, 0, 1261, 712, 713, 714, 716, 718,
	719, 715, 717, 720, 1322, 721, 0, 0, 722, 723,
	724, 790, 1345, 1382, 0, 726, 727, 725, 728, 729,
	732, 730, 731, 793, 733, 470, 734, 735, 0, 0,
	0, 0, 736, 737, 794, 738, 739, 740, 1258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1253, 0, 0, 0, 0, 0, 0,
	1251, 1252, 2188, 1300, 1272, 1273, 1274, 1270, 1271, 1283,
	1284, 0, 0, 0, 1282, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 0, 0, 0, 1324, 1288, 0, 0,
	332, 0, 333, 334, 335, 1364, 336, 337, 338, 339,
	340, 341, 342, 742, 1337, 0, 343, 1344, 344, 1343,
	0, 1354, 345, 346, 347, 348, 349, 350, 351, 1290,
	1323, 1255, 352, 1384, 1385, 749, 0, 353, 354, 1330,
	0, 1311, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 1365, 380, 381, 382, 1314, 1312, 1313,
	1320, 1316, 1315, 1319, 383, 384, 385, 386, 387, 1347,
	388, 390, 1341, 1340, 1260, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 1332, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 1266, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 1355, 1356, 424,
	1279, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	1339, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 1366, 434, 435, 436, 1352, 1353, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	1362, 0, 1289, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 1325, 1326, 1329, 549, 1368, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 320,
	463, 464, 465, 0, 1367, 764, 466, 550, 467, 1334,
	1335, 0, 1295, 0, 468, 469, 472, 1369, 1327, 1370,
	471, 473, 474, 1371, 475, 0, 0, 0, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 485, 484, 0,
	487, 1363, 486, 1372, 488, 489, 1373, 0, 490, 491,
	492, 493, 494, 495, 498, 1318, 1317, 496, 497, 499,
	500, 0, 501, 502, 504, 507, 503, 505, 506, 508,
	521, 522, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 524, 0, 523, 1374, 525, 526,
	527, 528, 529, 536, 538, 539, 534, 535, 537, 540,
	541, 543, 531, 532, 533, 1375, 542, 530, 1257, 321,
	1376, 544, 545, 546, 547, 1280, 1328, 548, 1342, 551,
	552, 0, 0, 553, 0, 554, 0, 0, 556, 557,
	558, 0, 0, 559, 560, 772, 1377, 561, 1378, 1357,
	562, 563, 1267, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 0, 574, 575, 774, 576, 577, 578,
	775, 579, 580, 581, 1358, 582, 777, 583, 584, 0,
	585, 586, 587, 0, 588, 589, 590, 591, 592, 593,
	594, 595, 1338, 596, 597, 599, 598, 600, 0, 601,
	0, 602, 603, 604, 0, 0, 0, 0, 0, 605,
	606, 608, 0, 609, 610, 611, 612, 607, 613, 614,
	615, 616, 617, 618, 0, 620, 621, 619, 622, 623,
	1379, 624, 625, 626, 627, 628, 1268, 629, 0, 630,
	631, 639, 640, 641, 632, 633, 635, 642, 634, 643,
	644, 645, 646, 648, 647, 0, 650, 651, 649, 652,
	653, 654, 1321, 655, 780, 656, 636, 637, 657, 658,
	1380, 659, 660, 661, 662, 663, 664, 665, 1336, 0,
	666, 0, 667, 668, 669, 670, 671, 672, 674, 638,
	675, 680, 681, 1383, 676, 677, 678, 679, 1359, 683,
	684, 685, 686, 0, 687, 688, 1254, 682, 673, 0,
	689, 690, 691, 692, 693, 694, 0, 695, 696, 0,
	697, 1348, 1349, 1350, 1351, 0, 709, 0, 698, 700,
	701, 702, 703, 1360, 704, 1361, 1278, 705, 706, 707,
	708, 699, 710, 711, 0, 1261, 712, 713, 714, 716,
	718, 719, 715, 717, 720, 1322, 721, 0, 0, 722,
	723, 724, 790, 1345, 1382, 0, 726, 727, 725, 728,
	729, 732, 730, 731, 793, 733, 470, 734, 735, 0,
	0, 0, 0, 736, 737, 794, 738, 739, 740, 1258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1253, 0, 0, 0, 0, 0,
	0, 1251, 1252, 2188, 1300, 1272, 1273, 1274, 1270, 1271,
	1283, 1284, 0, 0, 0, 1282, 0, 0, 0, 0,
	0, 322, 323, 325, 324, 326, 327, 328, 329, 0,
	330, 331, 0, 0, 0, 0, 0, 1324, 1288, 0,
	0, 332, 0, 333, 334, 335, 1364, 336, 337, 338,
	339, 340, 341, 342, 742, 1337, 0, 343, 1344, 344,
	1343, 0, 1354, 345, 346, 347, 348, 349, 350, 351,
	1290, 1323, 1255, 352, 1384, 1385, 749, 0, 353, 354,
	1330, 0, 1311, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 1365, 380, 381, 382, 1314, 1312,
	1313, 1320, 1316, 1315, 1319, 383, 384, 385, 386, 387,
	1347, 388, 390, 1341, 1340, 1260, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 1332, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 1266, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 1355, 1356,
	424, 1279, 319, 0, 0, 0, 0, 0, 425, 426,
	427, 1339, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 1366, 434, 435, 436, 1352, 1353,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 1362, 0, 1289, 447, 0, 448, 449, 450, 451,
	452, 453, 454, 1325, 1326, 1329, 549, 1368, 455, 456,
	457, 0, 458, 459, 460, 461, 462, 0, 0, 0,
	320, 463, 464, 465, 0, 1367, 764, 466, 550, 467,
	1334, 1335, 0, 1295, 0, 468, 469, 472, 1369, 1327,
	1370, 471, 473, 474, 1371, 475, 0, 0, 0, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 485, 484,
	0, 487, 1363, 486, 1372, 488, 489, 1373, 0, 490,
	491, 492, 493, 494, 495, 498, 1318, 1317, 496, 497,
	499, 500, 0, 501, 502, 504, 507, 503, 505, 506,
	508, 521, 522, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 524, 0, 523, 1374, 525,
	526, 527, 528, 529, 536, 538, 539, 534, 535, 537,
	540, 541, 543, 531, 532, 533, 1375, 542, 530, 1257,
	321, 1376, 544, 545, 546, 547, 1280, 1328, 548, 1342,
	551, 552, 0, 0, 553, 0, 554, 0, 0, 556,
	557, 558, 0, 0, 559, 560, 772, 1377, 561, 1378,
	1357, 562, 563, 1267, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 0, 574, 575, 774, 576, 577,
	578, 775, 579, 580, 581, 1358, 582, 777, 583, 584,
	0, 585, 586, 587, 0, 588, 589, 590, 591, 592,
	593, 594, 595, 1338, 596, 597, 599, 598, 600, 0,
	601, 0, 602, 603, 604, 0, 0, 0, 0, 0,
	605, 606, 608, 0, 609, 610, 611, 612, 607, 613,
	614, 615, 616, 617, 618, 0, 620, 621, 619, 622,
	623, 1379, 624, 625, 626, 627, 628, 1268, 629, 0,
	630, 631, 639, 640, 641, 632, 633, 635, 642, 634,
	643, 644, 645, 646, 648, 647, 0, 650, 651, 649,
	652, 653, 654, 1321, 655, 780, 656, 636, 637, 657,
	658, 1380, 659, 660, 661, 662, 663, 664, 665, 1336,
	0, 666, 0, 667, 668, 669, 670, 671, 672, 674,
	638, 675, 680, 681, 1383, 676, 677, 678, 679, 1359,
	683, 684, 685, 686, 0, 687, 688, 1254, 682, 673,
	0, 689, 690, 691, 692, 693, 694, 0, 695, 696,
	0, 697, 1348, 1349, 1350, 1351, 0, 709, 0, 698,
	700, 701, 702, 703, 1360, 704, 1361, 1278, 705, 706,
	707, 708, 699, 710, 711, 0, 1261, 712, 713, 714,
	716, 718, 719, 715, 717, 720, 1322, 721, 0, 0,
	722, 723, 724, 790, 1345, 1382, 4298, 726, 727, 725,
	728, 729, 732, 730, 731, 793, 733, 470, 734, 735,
	0, 0, 0, 0, 736, 737, 794, 738, 739, 740,
	1258, 0, 0, 0, 0, 0, 0, 1300, 1272, 1273,
	1274, 1270, 1271, 1283, 0, 1253, 0, 0, 0, 0,
	0, 0, 1251, 1252, 322, 323, 325, 324, 326, 327,
	328, 329, 1284, 330, 331, 0, 1282, 0, 0, 0,
	1324, 1288, 0, 0, 332, 0, 333, 334, 335, 1364,
	336, 337, 338, 339, 340, 341, 342, 742, 1337, 0,
	343, 1344, 344, 1343, 0, 1354, 345, 346, 347, 348,
	349, 350, 351, 1290, 1323, 1255, 352, 1384, 1385, 749,
	0, 353, 354, 1330, 0, 1311, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 1365, 380, 381,
	382, 1314, 1312, 1313, 1320, 1316, 1315, 1319, 383, 384,
	385, 386, 387, 1347, 388, 390, 1341, 1340, 1260, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 1332, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 1266, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 1355, 1356, 424, 1279, 319, 0, 0, 0, 0,
	0, 425, 426, 427, 1339, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 3076, 1366, 434, 435,
	436, 1352, 1353, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 1362, 0, 1289, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 1325, 1326, 1329, 549,
	1368, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 320, 463, 464, 465, 0, 1367, 764,
	466, 550, 467, 1334, 1335, 0, 1295, 0, 468, 469,
	472, 1369, 1327, 1370, 471, 473, 474, 1371, 475, 0,
	0, 0, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 485, 484, 0, 487, 1363, 486, 1372, 488, 489,
	1373, 0, 490, 491, 492, 493, 494, 495, 498, 1318,
	1317, 496, 497, 499, 500, 0, 501, 502, 504, 507,
	503, 505, 506, 508, 521, 522, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 524, 0,
	523, 1374, 525, 526, 527, 528, 529, 536, 538, 539,
	534, 535, 537, 540, 541, 543, 531, 532, 533, 1375,
	542, 530, 1257, 321, 1376, 544, 545, 546, 547, 1280,
	1328, 548, 1342, 551, 552, 0, 0, 553, 0, 554,
	0, 0, 556, 557, 558, 0, 0, 559, 560, 772,
	1377, 561, 1378, 1357, 562, 563, 1267, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 0, 574, 575,
	774, 576, 577, 578, 775, 579, 580, 581, 1358, 582,
	777, 583, 584, 0, 585, 586, 587, 0, 588, 589,
	590, 591, 592, 593, 594, 595, 1338, 596, 597, 599,
	598, 600, 0, 601, 0, 602, 603, 604, 0, 0,
	0, 0, 0, 605, 606, 608, 0, 609, 610, 611,
	612, 607, 613, 614, 615, 616, 617, 618, 0, 620,
	621, 619, 622, 623, 1379, 624, 625, 626, 627, 628,
	1268, 629, 0, 630, 631, 639, 640, 641, 632, 633,
	635, 642, 634, 643, 644, 645, 646, 648, 647, 0,
	650, 651, 649, 652, 653, 654, 1321, 655, 780, 656,
	636, 637, 657, 658, 1380, 659, 660, 661, 662, 663,
	664, 665, 1336, 0, 666, 0, 667, 668, 669, 670,
	671, 672, 674, 638, 675, 680, 681, 1383, 676, 677,
	678, 679, 1359, 683, 684, 685, 686, 0, 687, 688,
	1254, 682, 673, 0, 689, 690, 691, 692, 693, 694,
	0, 695, 696, 0, 697, 1348, 1349, 1350, 1351, 0,
	709, 0, 698, 700, 701, 702, 703, 1360, 704, 1361,
	1278, 705, 706, 707, 708, 699, 710, 711, 0, 1261,
	712, 713, 714, 716, 718, 719, 715, 717, 720, 1322,
	721, 0, 0, 722, 723, 724, 790, 1345, 1382, 0,
	726, 727, 725, 728, 729, 732, 730, 731, 793, 733,
	470, 734, 735, 0, 0, 0, 0, 736, 737, 794,
	738, 739, 740, 1258, 0, 0, 0, 0, 0, 0,
	1300, 1272, 1273, 1274, 1270, 1271, 1283, 0, 1253, 0,
	0, 0, 0, 0, 0, 1251, 1252, 322, 323, 325,
	324, 326, 327, 328, 329, 1284, 330, 331, 0, 1282,
	0, 0, 0, 1324, 1288, 0, 0, 332, 0, 333,
	334, 335, 1364, 336, 337, 338, 339, 340, 341, 342,
	742, 1337, 0, 343, 1344, 344, 1343, 0, 1354, 345,
	346, 347, 348, 349, 350, 351, 1290, 1323, 1255, 352,
	1384, 1385, 749, 0, 353, 354, 1330, 0, 1311, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	1365, 380, 381, 382, 1314, 1312, 1313, 1320, 1316, 1315,
	1319, 383, 384, 385, 386, 387, 1347, 388, 390, 1341,
	1340, 1260, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 1332, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 1266, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 1355, 1356, 424, 1279, 319, 0,
	0, 0, 0, 0, 425, 426, 427, 1339, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	1366, 434, 435, 436, 1352, 1353, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 1362, 0, 1289,
	447, 0, 448, 449, 450, 451, 452, 453, 454, 1325,
	1326, 1329, 549, 1368, 455, 456, 457, 0, 458, 459,
	460, 461, 462, 0, 0, 0, 320, 463, 464, 465,
	0, 1367, 764, 466, 550, 467, 1334, 1335, 0, 1295,
	0, 468, 469, 472, 1369, 1327, 1370, 471, 473, 474,
	1371, 475, 0, 0, 0, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 485, 484, 0, 487, 1363, 486,
	1372, 488, 489, 1373, 0, 490, 491, 492, 493, 494,
	495, 498, 1318, 1317, 496, 497, 499, 500, 0, 501,
	502, 504, 507, 503, 505, 506, 508, 521, 522, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 524, 0, 523, 1374, 525, 526, 527, 528, 529,
	536, 538, 539, 534, 535, 537, 540, 541, 543, 531,
	532, 533, 1375, 542, 530, 1257, 321, 1376, 544, 545,
	546, 547, 1280, 1328, 548, 1342, 551, 552, 0, 0,
	553, 0, 554, 0, 0, 556, 557, 558, 0, 0,
	559, 560, 772, 1377, 561, 1378, 1357, 562, 563, 1267,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	0, 574, 575, 774, 576, 577, 578, 775, 579, 580,
	581, 1358, 582, 777, 583, 584, 0, 585, 586, 587,
	0, 588, 589, 590, 591, 592, 593, 594, 595, 1338,
	596, 597, 599, 598, 600, 0, 601, 0, 602, 603,
	604, 0, 0, 0, 0, 0, 605, 606, 608, 0,
	609, 610, 611, 612, 607, 613, 614, 615, 616, 617,
	618, 0, 620, 621, 619, 622, 623, 1379, 624, 625,
	626, 627, 628, 1268, 629, 0, 630, 631, 639, 640,
	641, 632, 633, 635, 642, 634, 643, 644, 645, 646,
	648, 647, 0, 650, 651, 649, 652, 653, 654, 1321,
	655, 780, 656, 636, 637, 657, 658, 1380, 659, 660,
	661, 662, 663, 664, 665, 1336, 0, 666, 0, 667,
	668, 669, 670, 671, 672, 674, 638, 675, 680, 681,
	1383, 676, 677, 678, 679, 1359, 683, 684, 685, 686,
	0, 687, 688, 1254, 682, 673, 0, 689, 690, 691,
	692, 693, 694, 0, 695, 696, 0, 697, 1348, 1349,
	1350, 1351, 0, 709, 0, 698, 700, 701, 702, 703,
	1360, 704, 1361, 1278, 705, 706, 707, 708, 699, 710,
	711, 0, 1261, 712, 713, 714, 716, 718, 719, 715,
	717, 720, 1322, 721, 0, 0, 722, 723, 724, 790,
	1345, 1382, 0, 726, 727, 725, 728, 729, 732, 730,
	731, 793, 733, 470, 734, 735, 0, 0, 0, 0,
	736, 737, 794, 738, 739, 740, 1258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1253, 0, 0, 0, 0, 0, 0, 1251, 1252,
	0, 0, 0, 0, 0, 0, 0, 0, 1284, 2115,
	0, 3081, 1282, 1300, 1272, 1273, 1274, 1270, 1271, 1283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 0, 0, 0, 1324, 1288, 0, 0,
	332, 0, 333, 334, 335, 1364, 336, 337, 338, 339,
	340, 341, 342, 742, 1337, 0, 343, 1344, 344, 1343,
	0, 1354, 345, 346, 347, 348, 349, 350, 351, 1290,
	1323, 1255, 352, 1384, 1385, 749, 0, 353, 354, 1330,
	0, 1311, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 1365, 380, 381, 382, 1314, 1312, 1313,
	1320, 1316, 1315, 1319, 383, 384, 385, 386, 387, 1347,
	388, 390, 1341, 1340, 1260, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 1332, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 1266, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 1355, 1356, 424,
	1279, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	1339, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 1366, 434, 435, 436, 1352, 1353, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	1362, 0, 1289, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 1325, 1326, 1329, 549, 1368, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 320,
	463, 464, 465, 0, 1367, 764, 466, 550, 467, 1334,
	1335, 0, 1295, 0, 468, 469, 472, 1369, 1327, 1370,
	471, 473, 474, 1371, 475, 0, 0, 0, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 485, 484, 0,
	487, 1363, 486, 1372, 488, 489, 1373, 0, 490, 491,
	492, 493, 494, 495, 498, 1318, 1317, 496, 497, 499,
	500, 0, 501, 502, 504, 507, 503, 505, 506, 508,
	521, 522, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 524, 0, 523, 1374, 525, 526,
	527, 528, 529, 536, 538, 539, 534, 535, 537, 540,
	541, 543, 531, 532, 533, 1375, 542, 530, 1257, 321,
	1376, 544, 545, 546, 547, 1280, 1328, 548, 1342, 551,
	552, 0, 0, 553, 0, 554, 0, 0, 556, 557,
	558, 0, 0, 559, 560, 772, 1377, 561, 1378, 1357,
	562, 563, 1267, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 0, 574, 575, 774, 576, 577, 578,
	775, 579, 580, 581, 1358, 582, 777, 583, 584, 0,
	585, 586, 587, 0, 588, 589, 590, 591, 592, 593,
	594, 595, 1338, 596, 597, 599, 598, 600, 0, 601,
	0, 602, 603, 604, 0, 0, 0, 0, 0, 605,
	606, 608, 0, 609, 610, 611, 612, 607, 613, 614,
	615, 616, 617, 618, 0, 620, 621, 619, 622, 623,
	1379, 624, 625, 626, 627, 628, 1268, 629, 0, 630,
	631, 639, 640, 641, 632, 633, 635, 642, 634, 643,
	644, 645, 646, 648, 647, 0, 650, 651, 649, 652,
	653, 654, 1321, 655, 780, 656, 636, 637, 657, 658,
	1380, 659, 660, 661, 662, 663, 664, 665, 1336, 0,
	666, 0, 667, 668, 669, 670, 671, 672, 674, 638,
	675, 680, 681, 1383, 676, 677, 678, 679, 1359, 683,
	684, 685, 686, 0, 687, 688, 1254, 682, 673, 0,
	689, 690, 691, 692, 693, 694, 0, 695, 696, 0,
	697, 1348, 1349, 1350, 1351, 0, 709, 0, 698, 700,
	701, 702, 703, 1360, 704, 1361, 1278, 705, 706, 707,
	708, 699, 710, 711, 0, 1261, 712, 713, 714, 716,
	718, 719, 715, 717, 720, 1322, 721, 0, 0, 722,
	723, 724, 790, 1345, 1382, 0, 726, 727, 725, 728,
	729, 732, 730, 731, 793, 733, 470, 734, 735, 0,
	0, 0, 0, 736, 737, 794, 738, 739, 740, 1258,
	0, 0, 0, 0, 3079, 0, 1300, 1272, 1273, 1274,
	1270, 1271, 1283, 0, 1253, 0, 0, 0, 0, 0,
	0, 1251, 1252, 322, 323, 325, 324, 326, 327, 328,
	329, 1284, 330, 331, 0, 1282, 0, 0, 0, 1324,
	1288, 0, 0, 332, 0, 333, 334, 335, 1364, 336,
	337, 338, 339, 340, 341, 342, 742, 1337, 0, 343,
	1344, 344, 1343, 0, 1354, 345, 346, 347, 348, 349,
	350, 351, 1290, 1323, 1255, 352, 1384, 1385, 749, 0,
	353, 354, 1330, 0, 1311, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 1365, 380, 381, 382,
	1314, 1312, 1313, 1320, 1316, 1315, 1319, 383, 384, 385,
	386, 387, 1347, 388, 390, 1341, 1340, 1260, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 1332, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 1266, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	1355, 1356, 424, 1279, 319, 0, 0, 0, 0, 0,
	425, 426, 427, 1339, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 1366, 434, 435, 436,
	1352, 1353, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 1362, 0, 1289, 447, 0, 448, 449,
	450, 451, 452, 453, 454, 1325, 1326, 1329, 549, 1368,
	455, 456, 457, 0, 458, 459, 460, 461, 462, 0,
	0, 0, 320, 463, 464, 465, 0, 1367, 764, 466,
	550, 467, 1334, 1335, 0, 1295, 0, 468, 469, 472,
	1369, 1327, 1370, 471, 473, 474, 1371, 475, 0, 0,
	0, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	485, 484, 0, 487, 1363, 486, 1372, 488, 489, 1373,
	0, 490, 491, 492, 493, 494, 495, 498, 1318, 1317,
	496, 497, 499, 500, 0, 501, 502, 504, 507, 503,
	505, 506, 508, 521, 522, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 524, 0, 523,
	1374, 525, 526, 527, 528, 529, 536, 538, 539, 534,
	535, 537, 540, 541, 543, 531, 532, 533, 1375, 542,
	530, 1257, 321, 1376, 544, 545, 546, 547, 1280, 1328,
	548, 1342, 551, 552, 0, 0, 553, 0, 554, 0,
	0, 556, 557, 558, 0, 0, 559, 560, 772, 1377,
	561, 1378, 1357, 562, 563, 1267, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 0, 574, 575, 774,
	576, 577, 578, 775, 579, 580, 581, 1358, 582, 777,
	583, 584, 0, 585, 586, 587, 0, 588, 589, 590,
	591, 592, 593, 594, 595, 1338, 596, 597, 599, 598,
	600, 0, 601, 0, 602, 603, 604, 0, 0, 0,
	0, 0, 605, 606, 608, 0, 609, 610, 611, 612,
	607, 613, 614, 615, 616, 617, 618, 0, 620, 621,
	619, 622, 623, 1379, 624, 625, 626, 627, 628, 1268,
	629, 0, 630, 631, 639, 640, 641, 632, 633, 635,
	642, 634, 643, 644, 645, 646, 648, 647, 0, 650,
	651, 649, 652, 653, 654, 1321, 655, 780, 656, 636,
	637, 657, 658, 1380, 659, 660, 661, 662, 663, 664,
	665, 1336, 0, 666, 0, 667, 668, 669, 670, 671,
	672, 674, 638, 675, 680, 681, 1383, 676, 677, 678,
	679, 1359, 683, 684, 685, 686, 0, 687, 688, 1254,
	682, 673, 0, 689, 690, 691, 692, 693, 694, 0,
	695, 696, 0, 697, 1348, 1349, 1350, 1351, 0, 709,
	0, 698, 700, 701, 702, 703, 1360, 704, 1361, 1278,
	705, 706, 707, 708, 699, 710, 711, 0, 1261, 712,
	713, 714, 716, 718, 719, 715, 717, 720, 1322, 721,
	0, 0, 722, 723, 724, 790, 1345, 1382, 0, 726,
	727, 725, 728, 729, 732, 730, 731, 793, 733, 470,
	734, 735, 0, 0, 0, 0, 736, 737, 794, 738,
	739, 740, 1258, 0, 0, 0, 0, 3067, 0, 1300,
	1272, 1273, 1274, 1270, 1271, 1283, 0, 1253, 0, 0,
	0, 0, 0, 0, 1251, 1252, 322, 323, 325, 324,
	326, 327, 328, 329, 1284, 330, 331, 0, 1282, 0,
	0, 0, 1324, 1288, 0, 0, 332, 0, 333, 334,
	335, 1364, 336, 337, 338, 339, 340, 341, 342, 742,
	1337, 0, 343, 1344, 344, 1343, 0, 1354, 345, 346,
	347, 348, 349, 350, 351, 1290, 1323, 1255, 352, 1384,
	1385, 749, 0, 353, 354, 1330, 0, 1311, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 1365,
	380, 381, 382, 1314, 1312, 1313, 1320, 1316, 1315, 1319,
	383, 384, 385, 386, 387, 1347, 388, 390, 1341, 1340,
	1260, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 1332, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	1266, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 1355, 1356, 424, 1279, 319, 0, 0,
	0, 0, 0, 425, 426, 427, 1339, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 1366,
	434, 435, 436, 1352, 1353, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 1362, 0, 1289, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 1325, 1326,
	1329, 549, 1368, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 0, 0, 0, 320, 463, 464, 465, 0,
	1367, 764, 466, 550, 467, 1334, 1335, 0, 1295, 0,
	468, 469, 472, 1369, 1327, 1370, 471, 473, 474, 1371,
	475, 0, 0, 0, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 485, 484, 0, 487, 1363, 486, 1372,
	488, 489, 1373, 0, 490, 491, 492, 493, 494, 495,
	498, 1318, 1317, 496, 497, 499, 500, 0, 501, 502,
	504, 507, 503, 505, 506, 508, 521, 522, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	524, 0, 523, 1374, 525, 526, 527, 528, 529, 536,
	538, 539, 534, 535, 537, 540, 541, 543, 531, 532,
	533, 1375, 542, 530, 1257, 321, 1376, 544, 545, 546,
	547, 1280, 1328, 548, 1342, 551, 552, 0, 0, 553,
	0, 554, 0, 0, 556, 557, 558, 0, 0, 559,
	560, 772, 1377, 561, 1378, 1357, 562, 563, 1267, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 0,
	574, 575, 774, 576, 577, 578, 775, 579, 580, 581,
	1358, 582, 777, 583, 584, 0, 585, 586, 587, 0,
	588, 589, 590, 591, 592, 593, 594, 595, 1338, 596,
	597, 599, 598, 600, 0, 601, 0, 602, 603, 604,
	0, 0, 0, 0, 0, 605, 606, 608, 0, 609,
	610, 611, 612, 607, 613, 614, 615, 616, 617, 618,
	0, 620, 621, 619, 622, 623, 1379, 624, 625, 626,
	627, 628, 1268, 629, 0, 630, 631, 639, 640, 641,
	632, 633, 635, 642, 634, 643, 644, 645, 646, 648,
	647, 0, 650, 651, 649, 652, 653, 654, 1321, 655,
	780, 656, 636, 637, 657, 658, 1380, 659, 660, 661,
	662, 663, 664, 665, 1336, 0, 666, 0, 667, 668,
	669, 670, 671, 672, 674, 638, 675, 680, 681, 1383,
	676, 677, 678, 679, 1359, 683, 684, 685, 686, 0,
	687, 688, 1254, 682, 673, 0, 689, 690, 691, 692,
	693, 694, 0, 695, 696, 0, 697, 1348, 1349, 1350,
	1351, 0, 709, 0, 698, 700, 701, 702, 703, 1360,
	704, 1361, 1278, 705, 706, 707, 708, 699, 710, 711,
	0, 1261, 712, 713, 714, 716, 718, 719, 715, 717,
	720, 1322, 721, 0, 0, 722, 723, 724, 790, 1345,
	1382, 0, 726, 727, 725, 728, 729, 732, 730, 731,
	793, 733, 470, 734, 735, 0, 0, 0, 0, 736,
	737, 794, 738, 739, 740, 1258, 0, 0, 0, 0,
	3056, 0, 1300, 1272, 1273, 1274, 1270, 1271, 1283, 0,
	1253, 0, 0, 0, 0, 0, 0, 1251, 1252, 322,
	323, 325, 324, 326, 327, 328, 329, 1284, 330, 331,
	0, 1282, 0, 0, 0, 1324, 1288, 0, 0, 332,
	0, 333, 334, 335, 1364, 336, 337, 338, 339, 340,
	341, 342, 742, 1337, 0, 343, 1344, 344, 1343, 0,
	1354, 345, 346, 347, 348, 349, 350, 351, 1290, 1323,
	1255, 352, 1384, 1385, 749, 0, 353, 354, 1330, 0,
	1311, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 1365, 380, 381, 382, 1314, 1312, 1313, 1320,
	1316, 1315, 1319, 383, 384, 385, 386, 387, 1347, 388,
	390, 1341, 1340, 1260, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	1332, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 1266, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 1355, 1356, 424, 1279,
	319, 0, 0, 0, 0, 0, 425, 426, 427, 1339,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 1366, 434, 435, 436, 1352, 1353, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 1362,
	0, 1289, 447, 0, 448, 449, 450, 451, 452, 453,
	454, 1325, 1326, 1329, 549, 1368, 455, 456, 457, 0,
	458, 459, 460, 461, 462, 0, 0, 0, 320, 463,
	464, 465, 0, 1367, 764, 466, 550, 467, 1334, 1335,
	0, 1295, 0, 468, 469, 472, 1369, 1327, 1370, 471,
	473, 474, 1371, 475, 0, 0, 0, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 485, 484, 0, 487,
	1363, 486, 1372, 488, 489, 1373, 0, 490, 491, 492,
	493, 494, 495, 498, 1318, 1317, 496, 497, 499, 500,
	0, 501, 502, 504, 507, 503, 505, 506, 508, 521,
	522, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 524, 0, 523, 1374, 525, 526, 527,
	528, 529, 536, 538, 539, 534, 535, 537, 540, 541,
	543, 531, 532, 533, 1375, 542, 530, 1257, 321, 1376,
	544, 545, 546, 547, 1280, 1328, 548, 1342, 551, 552,
	0, 0, 553, 0, 554, 0, 0, 556, 557, 558,
	0, 0, 559, 560, 772, 1377, 561, 1378, 1357, 562,
	563, 1267, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 0, 574, 575, 774, 576, 577, 578, 775,
	579, 580, 581, 1358, 582, 777, 583, 584, 0, 585,
	586, 587, 0, 588, 589, 590, 591, 592, 593, 594,
	595, 1338, 596, 597, 599, 598, 600, 0, 601, 0,
	602, 603, 604, 0, 0, 0, 0, 0, 605, 606,
	608, 0, 609, 610, 611, 612, 607, 613, 614, 615,
	616, 617, 618, 0, 620, 621, 619, 622, 623, 1379,
	624, 625, 626, 627, 628, 1268, 629, 0, 630, 631,
	639, 640, 641, 632, 633, 635, 642, 634, 643, 644,
	645, 646, 648, 647, 0, 650, 651, 649, 652, 653,
	654, 1321, 655, 780, 656, 636, 637, 657, 658, 1380,
	659, 660, 661, 662, 663, 664, 665, 1336, 0, 666,
	0, 667, 668, 669, 670, 671, 672, 674, 638, 675,
	680, 681, 1383, 676, 677, 678, 679, 1359, 683, 684,
	685, 686, 0, 687, 688, 1254, 682, 673, 0, 689,
	690, 691, 692, 693, 694, 0, 695, 696, 0, 697,
	1348, 1349, 1350, 1351, 0, 709, 0, 698, 700, 701,
	702, 703, 1360, 704, 1361, 1278, 705, 706, 707, 708,
	699, 710, 711, 0, 1261, 712, 713, 714, 716, 718,
	719, 715, 717, 720, 1322, 721, 0, 0, 722, 723,
	724, 790, 1345, 1382, 0, 726, 727, 725, 728, 729,
	732, 730, 731, 793, 733, 470, 734, 735, 0, 0,
	0, 0, 736, 737, 794, 738, 739, 740, 1258, 0,
	0, 0, 0, 3054, 0, 3045, 3052, 1273, 1274, 1270,
	1271, 1283, 0, 1253, 0, 0, 0, 0, 0, 0,
	1251, 1252, 322, 323, 325, 324, 326, 327, 328, 329,
	1284, 330, 331, 0, 1282, 0, 0, 0, 1324, 1288,
	0, 0, 332, 0, 333, 334, 335, 1364, 336, 337,
	338, 339, 340, 341, 342, 742, 1337, 0, 343, 1344,
	344, 1343, 0, 1354, 345, 346, 347, 348, 349, 350,
	351, 1290, 1323, 1255, 352, 1384, 1385, 749, 0, 353,
	354, 1330, 0, 1311, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 1365, 380, 381, 382, 1314,
	1312, 1313, 1320, 1316, 1315, 1319, 383, 384, 385, 386,
	387, 1347, 3048, 390, 1341, 1340, 1260, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 1332, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 1266, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 1355,
	1356, 424, 1279, 319, 0, 0, 0, 0, 0, 425,
	426, 427, 1339, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 1366, 434, 435, 436, 1352,
	1353, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 1362, 0, 1289, 447, 0, 448, 449, 450,
	451, 452, 3049, 454, 1325, 1326, 1329, 549, 1368, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 320, 463, 464, 465, 0, 1367, 764, 466, 550,
	467, 1334, 1335, 0, 1295, 0, 468, 469, 472, 1369,
	1327, 1370, 471, 473, 474, 1371, 475, 0, 0, 0,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 485,
	484, 0, 487, 1363, 486, 1372, 488, 489, 1373, 0,
	490, 491, 492, 493, 494, 495, 498, 1318, 1317, 496,
	497, 499, 500, 0, 501, 502, 504, 507, 503, 505,
	3050, 508, 3047, 522, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 524, 0, 523, 1374,
	525, 526, 527, 528, 529, 536, 538, 539, 534, 535,
	537, 540, 541, 543, 531, 532, 533, 1375, 542, 530,
	1257, 321, 1376, 544, 545, 546, 547, 1280, 1328, 548,
	1342, 551, 552, 0, 0, 553, 0, 554, 0, 0,
	556, 557, 558, 0, 0, 559, 560, 772, 1377, 561,
	1378, 1357, 562, 563, 1267, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 0, 574, 575, 774, 576,
	577, 578, 775, 579, 580, 581, 1358, 582, 777, 583,
	584, 0, 585, 586, 587, 0, 588, 589, 590, 591,
	592, 593, 594, 595, 1338, 596, 597, 599, 598, 600,
	0, 601, 0, 602, 603, 604, 0, 0, 0, 0,
	0, 605, 606, 608, 0, 609, 610, 611, 612, 607,
	613, 614, 615, 616, 617, 618, 0, 620, 621, 619,
	622, 623, 1379, 624, 625, 626, 627, 628, 1268, 629,
	0, 630, 631, 639, 640, 641, 632, 633, 635, 642,
	634, 643, 644, 645, 3051, 648, 647, 0, 650, 651,
	649, 652, 653, 654, 1321, 655, 780, 656, 636, 637,
	657, 658, 1380, 659, 660, 661, 662, 663, 664, 665,
	1336, 0, 666, 0, 667, 668, 669, 670, 671, 672,
	674, 638, 675, 680, 681, 1383, 676, 677, 678, 679,
	1359, 683, 684, 685, 686, 0, 687, 688, 1254, 682,
	673, 0, 689, 690, 691, 692, 693, 694, 0, 695,
	696, 0, 697, 1348, 1349, 1350, 1351, 0, 709, 0,
	698, 700, 701, 702, 703, 1360, 704, 1361, 1278, 705,
	706, 707, 708, 699, 710, 711, 0, 1261, 712, 713,
	714, 716, 718, 719, 715, 717, 720, 1322, 721, 0,
	0, 722, 723, 724, 790, 1345, 1382, 0, 726, 727,
	725, 728, 729, 732, 730, 731, 793, 733, 470, 734,
	735, 0, 0, 0, 0, 736, 737, 794, 738, 3046,
	740, 1258, 0, 0, 0, 0, 3042, 0, 3045, 3052,
	1273, 1274, 1270, 1271, 1283, 0, 1253, 0, 0, 0,
	0, 0, 0, 1251, 1252, 322, 323, 325, 324, 326,
	327, 328, 329, 1284, 330, 331, 0, 1282, 0, 0,
	0, 1324, 1288, 0, 0, 332, 0, 333, 334, 335,
	1364, 336, 337, 338, 339, 340, 341, 342, 742, 1337,
	0, 343, 1344, 344, 1343, 0, 1354, 345, 346, 347,
	348, 349, 350, 351, 1290, 1323, 1255, 352, 1384, 1385,
	749, 0, 353, 354, 1330, 0, 1311, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 1365, 380,
	381, 382, 1314, 1312, 1313, 1320, 1316, 1315, 1319, 383,
	384, 385, 386, 387, 1347, 3048, 390, 1341, 1340, 1260,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 1332, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 1266,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 1355, 1356, 424, 1279, 319, 0, 0, 0,
	0, 0, 425, 426, 427, 1339, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 1366, 434,
	435, 436, 1352, 1353, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 1362, 0, 1289, 447, 0,
	448, 449, 450, 451, 452, 3049, 454, 1325, 1326, 1329,
	549, 1368, 455, 456, 457, 0, 458, 459, 460, 461,
	462, 0, 0, 0, 320, 463, 464, 465, 0, 1367,
	764, 466, 550, 467, 1334, 1335, 0, 1295, 0, 468,
	469, 472, 1369, 1327, 1370, 471, 473, 474, 1371, 475,
	0, 0, 0, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 485, 484, 0, 487, 1363, 486, 1372, 488,
	489, 1373, 0, 490, 491, 492, 493, 494, 495, 498,
	1318, 1317, 496, 497, 499, 500, 0, 501, 502, 504,
	507, 503, 505, 3050, 508, 3047, 522, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 524,
	0, 523, 1374, 525, 526, 527, 528, 529, 536, 538,
	539, 534, 535, 537, 540, 541, 543, 531, 532, 533,
	1375, 542, 530, 1257, 321, 1376, 544, 545, 546, 547,
	1280, 1328, 548, 1342, 551, 552, 0, 0, 553, 0,
	554, 0, 0, 556, 557, 558, 0, 0, 559, 560,
	772, 1377, 561, 1378, 1357, 562, 563, 1267, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 0, 574,
	575, 774, 576, 577, 578, 775, 579, 580, 581, 1358,
	582, 777, 583, 584, 0, 585, 586, 587, 0, 588,
	589, 590, 591, 592, 593, 594, 595, 1338, 596, 597,
	599, 598, 600, 0, 601, 0, 602, 603, 604, 0,
	0, 0, 0, 0, 605, 606, 608, 0, 609, 610,
	611, 612, 607, 613, 614, 615, 616, 617, 618, 0,
	620, 621, 619, 622, 623, 1379, 624, 625, 626, 627,
	628, 1268, 629, 0, 630, 631, 639, 640, 641, 632,
	633, 635, 642, 634, 643, 644, 645, 3051, 648, 647,
	0, 650, 651, 649, 652, 653, 654, 1321, 655, 780,
	656, 636, 637, 657, 658, 1380, 659, 660, 661, 662,
	663, 664, 665, 1336, 0, 666, 0, 667, 668, 669,
	670, 671, 672, 674, 638, 675, 680, 681, 1383, 676,
	677, 678, 679, 1359, 683, 684, 685, 686, 0, 687,
	688, 1254, 682, 673, 0, 689, 690, 691, 692, 693,
	694, 0, 695, 696, 0, 697, 1348, 1349, 1350, 1351,
	0, 709, 0, 698, 700, 701, 702, 703, 1360, 704,
	1361, 1278, 705, 706, 707, 708, 699, 710, 711, 0,
	1261, 712, 713, 714, 716, 718, 719, 715, 717, 720,
	1322, 721, 0, 0, 722, 723, 724, 790, 1345, 1382,
	0, 726, 727, 725, 728, 729, 732, 730, 731, 793,
	733, 470, 734, 735, 0, 0, 0, 0, 736, 737,
	794, 738, 3046, 740, 1258, 0, 0, 0, 0, 0,
	0, 1300, 1272, 1273, 1274, 1270, 1271, 1283, 0, 1253,
	0, 0, 0, 0, 0, 0, 1251, 1252, 322, 323,
	325, 324, 326, 327, 328, 329, 1284, 330, 331, 0,
	1282, 0, 0, 0, 1324, 1288, 0, 0, 332, 0,
	333, 334, 335, 1364, 336, 337, 338, 339, 340, 341,
	342, 742, 1337, 0, 343, 1344, 344, 1343, 0, 1354,
	345, 346, 347, 348, 349, 350, 351, 1290, 1323, 1255,
	352, 1384, 1385, 749, 0, 353, 354, 1330, 0, 1311,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 1365, 380, 381, 382, 1314, 1312, 1313, 1320, 1316,
	1315, 1319, 383, 384, 385, 386, 387, 1347, 388, 390,
	1341, 1340, 1260, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 1332,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 1266, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 1355, 1356, 424, 1279, 319,
	0, 0, 0, 0, 0, 425, 426, 427, 1339, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 1366, 434, 435, 436, 1352, 1353, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 1362, 0,
	1289, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	1325, 1326, 1329, 549, 1368, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 0, 0, 0, 320, 463, 464,
	465, 0, 1367, 764, 466, 550, 467, 1334, 1335, 0,
	1295, 0, 468, 469, 472, 1369, 1327, 1370, 471, 473,
	474, 1371, 475, 0, 0, 0, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 485, 484, 0, 487, 1363,
	486, 1372, 488, 489, 1373, 0, 490, 491, 492, 493,
	494, 495, 498, 1318, 1317, 496, 497, 499, 500, 0,
	501, 502, 504, 507, 503, 505, 506, 508, 521, 522,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 524, 0, 523, 1374, 525, 526, 527, 528,
	529, 536, 538, 539, 534, 535, 537, 540, 541, 543,
	531, 532, 533, 1375, 542, 530, 1257, 321, 1376, 544,
	545, 546, 547, 1280, 1328, 548, 1342, 551, 552, 0,
	0, 553, 0, 554, 0, 0, 556, 557, 558, 0,
	0, 559, 560, 772, 1377, 561, 1378, 1357, 562, 563,
	1267, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 0, 574, 575, 774, 576, 577, 578, 775, 579,
	580, 581, 1358, 582, 777, 583, 584, 0, 585, 586,
	587, 0, 588, 589, 590, 591, 592, 593, 594, 595,
	1338, 596, 597, 599, 598, 600, 0, 601, 0, 602,
	603, 604, 0, 0, 0, 0, 0, 605, 606, 608,
	0, 609, 610, 611, 612, 607, 613, 614, 615, 616,
	617, 618, 0, 620, 621, 619, 622, 623, 1379, 624,
	625, 626, 627, 628, 1268, 629, 0, 630, 631, 639,
	640, 641, 632, 633, 635, 642, 634, 643, 644, 645,
	646, 648, 647, 0, 650, 651, 649, 652, 653, 654,
	1321, 655, 780, 656, 636, 637, 657, 658, 1380, 659,
	660, 661, 662, 663, 664, 665, 1336, 0, 666, 0,
	667, 668, 669, 670, 671, 672, 674, 638, 675, 680,
	681, 1383, 676, 677, 678, 679, 1359, 683, 684, 685,
	686, 0, 687, 688, 1254, 682, 673, 0, 689, 690,
	691, 692, 693, 694, 0, 695, 696, 0, 697, 1348,
	1349, 1350, 1351, 0, 709, 0, 698, 700, 701, 702,
	703, 1360, 704, 1361, 1278, 705, 706, 707, 708, 699,
	710, 711, 0, 1261, 712, 713, 714, 716, 718, 719,
	715, 717, 720, 1322, 721, 0, 0, 722, 723, 724,
	790, 1345, 1382, 0, 726, 727, 725, 728, 729, 732,
	730, 731, 793, 733, 470, 734, 735, 0, 0, 0,
	0, 736, 737, 794, 738, 739, 740, 1258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1253, 0, 0, 0, 0, 0, 0, 1251,
	1252, 0, 0, 0, 0, 0, 0, 2123, 0, 1284,
	0, 0, 0, 1282, 1300, 1272, 1273, 1274, 1270, 1271,
	1283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 325, 324, 326, 327, 328, 329, 2795,
	330, 331, 0, 0, 0, 0, 0, 1324, 1288, 0,
	0, 332, 0, 333, 334, 335, 1364, 336, 337, 338,
	339, 340, 341, 342, 742, 1337, 0, 343, 1344, 344,
	1343, 0, 1354, 345, 346, 347, 348, 349, 350, 351,
	1290, 1323, 1255, 352, 1384, 1385, 749, 0, 353, 354,
	1330, 0, 1311, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 1365, 380, 381, 382, 1314, 1312,
	1313, 1320, 1316, 1315, 1319, 383, 384, 385, 386, 387,
	1347, 388, 390, 1341, 1340, 1260, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 1332, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 1266, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 1355, 1356,
	424, 1279, 319, 0, 0, 0, 0, 0, 425, 426,
	427, 1339, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 1366, 434, 435, 436, 1352, 1353,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 1362, 0, 1289, 447, 0, 448, 449, 450, 451,
	452, 453, 454, 1325, 1326, 1329, 549, 1368, 455, 456,
	457, 0, 458, 459, 460, 461, 462, 0, 0, 0,
	320, 463, 464, 465, 0, 1367, 764, 466, 550, 467,
	1334, 1335, 0, 1295, 0, 468, 469, 472, 1369, 1327,
	1370, 471, 473, 474, 1371, 475, 0, 0, 0, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 485, 484,
	0, 487, 1363, 486, 1372, 488, 489, 1373, 0, 490,
	491, 492, 493, 494, 495, 498, 1318, 1317, 496, 497,
	499, 500, 0, 501, 502, 504, 507, 503, 505, 506,
	508, 521, 522, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 524, 0, 523, 1374, 525,
	526, 527, 528, 529, 536, 538, 539, 534, 535, 537,
	540, 541, 543, 531, 532, 533, 1375, 542, 530, 1257,
	321, 1376, 544, 545, 546, 547, 1280, 1328, 548, 1342,
	551, 552, 0, 0, 553, 0, 554, 0, 0, 556,
	557, 558, 0, 0, 559, 560, 772, 1377, 561, 1378,
	1357, 562, 563, 1267, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 0, 574, 575, 774, 576, 577,
	578, 775, 579, 580, 581, 1358, 582, 777, 583, 584,
	0, 585, 586, 587, 0, 588, 589, 590, 591, 592,
	593, 594, 595, 1338, 596, 597, 599, 598, 600, 0,
	601, 0, 602, 603, 604, 0, 0, 0, 0, 0,
	605, 606, 608, 0, 609, 610, 611, 612, 607, 613,
	614, 615, 616, 617, 618, 0, 620, 621, 619, 622,
	623, 1379, 624, 625, 626, 627, 628, 1268, 629, 0,
	630, 631, 639, 640, 641, 632, 633, 635, 642, 634,
	643, 644, 645, 646, 648, 647, 0, 650, 651, 649,
	652, 653, 654, 1321, 655, 780, 656, 636, 637, 657,
	658, 1380, 659, 660, 661, 662, 663, 664, 665, 1336,
	0, 666, 0, 667, 668, 669, 670, 671, 672, 674,
	638, 675, 680, 681, 1383, 676, 677, 678, 679, 1359,
	683, 684, 685, 686, 0, 687, 688, 1254, 682, 673,
	0, 689, 690, 691, 692, 693, 694, 0, 695, 696,
	0, 697, 1348, 1349, 1350, 1351, 0, 709, 0, 698,
	700, 701, 702, 703, 1360, 704, 1361, 1278, 705, 706,
	707, 708, 699, 710, 711, 0, 1261, 712, 713, 714,
	716, 718, 719, 715, 717, 720, 1322, 721, 0, 0,
	722, 723, 724, 790, 1345, 1382, 0, 726, 727, 725,
	728, 729, 732, 730, 731, 793, 733, 470, 734, 735,
	0, 0, 0, 0, 736, 737, 794, 738, 739, 740,
	1258, 0, 0, 0, 0, 2755, 0, 1300, 1272, 1273,
	1274, 1270, 1271, 1283, 0, 1253, 0, 0, 0, 0,
	0, 0, 1251, 1252, 322, 323, 325, 324, 326, 327,
	328, 329, 1284, 330, 331, 0, 1282, 0, 0, 0,
	1324, 1288, 0, 0, 332, 0, 333, 334, 335, 1364,
	336, 337, 338, 339, 340, 341, 342, 742, 1337, 0,
	343, 1344, 344, 1343, 0, 1354, 345, 346, 347, 348,
	349, 350, 351, 1290, 1323, 1255, 352, 1384, 1385, 749,
	0, 353, 354, 1330, 0, 1311, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 1365, 380, 381,
	382, 1314, 1312, 1313, 1320, 1316, 1315, 1319, 383, 384,
	385, 386, 387, 1347, 388, 390, 1341, 1340, 1260, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 1332, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 1266, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 1355, 1356, 424, 1279, 319, 0, 0, 0, 0,
	0, 425, 426, 427, 1339, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 1366, 434, 435,
	436, 1352, 1353, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 1362, 0, 1289, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 1325, 1326, 1329, 549,
	1368, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 320, 463, 464, 465, 0, 1367, 764,
	466, 550, 467, 1334, 1335, 0, 1295, 0, 468, 469,
	472, 1369, 1327, 1370, 471, 473, 474, 1371, 475, 0,
	0, 0, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 485, 484, 0, 487, 1363, 486, 1372, 488, 489,
	1373, 0, 490, 491, 492, 493, 494, 495, 498, 1318,
	1317, 496, 497, 499, 500, 0, 501, 502, 504, 507,
	503, 505, 506, 508, 521, 522, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 524, 0,
	523, 1374, 525, 526, 527, 528, 529, 536, 538, 539,
	534, 535, 537, 540, 541, 543, 531, 532, 533, 1375,
	542, 530, 1257, 321, 1376, 544, 545, 546, 547, 1280,
	1328, 548, 1342, 551, 552, 0, 0, 553, 0, 554,
	0, 0, 556, 557, 558, 0, 0, 559, 560, 772,
	1377, 561, 1378, 1357, 562, 563, 1267, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 0, 574, 575,
	774, 576, 577, 578, 775, 579, 580, 581, 1358, 582,
	777, 583, 584, 0, 585, 586, 587, 0, 588, 589,
	590, 591, 592, 593, 594, 595, 1338, 596, 597, 599,
	598, 600, 0, 601, 0, 602, 603, 604, 0, 0,
	0, 0, 0, 605, 606, 608, 0, 609, 610, 611,
	612, 607, 613, 614, 615, 616, 617, 618, 0, 620,
	621, 619, 622, 623, 1379, 624, 625, 626, 627, 628,
	1268, 629, 0, 630, 631, 639, 640, 641, 632, 633,
	635, 642, 634, 643, 644, 645, 646, 648, 647, 0,
	650, 651, 649, 652, 653, 654, 1321, 655, 780, 656,
	636, 637, 657, 658, 1380, 659, 660, 661, 662, 663,
	664, 665, 1336, 0, 666, 0, 667, 668, 669, 670,
	671, 672, 674, 638, 675, 680, 681, 1383, 676, 677,
	678, 679, 1359, 683, 684, 685, 686, 0, 687, 688,
	1254, 682, 673, 0, 689, 690, 691, 692, 693, 694,
	0, 695, 696, 0, 697, 1348, 1349, 1350, 1351, 0,
	709, 0, 698, 700, 701, 702, 703, 1360, 704, 1361,
	1278, 705, 706, 707, 708, 699, 710, 711, 0, 1261,
	712, 713, 714, 716, 718, 719, 715, 717, 720, 1322,
	721, 0, 0, 722, 723, 724, 790, 1345, 1382, 0,
	726, 727, 725, 728, 729, 732, 730, 731, 793, 733,
	470, 734, 735, 0, 0, 0, 0, 736, 737, 794,
	738, 739, 740, 1258, 0, 0, 0, 0, 2723, 0,
	1300, 1272, 1273, 1274, 1270, 1271, 1283, 0, 1253, 0,
	0, 0, 0, 0, 0, 1251, 1252, 322, 323, 325,
	324, 326, 327, 328, 329, 1284, 330, 331, 0, 1282,
	0, 0, 0, 1324, 1288, 0, 0, 332, 0, 333,
	334, 335, 1364, 336, 337, 338, 339, 340, 341, 342,
	742, 1337, 0, 343, 1344, 344, 1343, 0, 1354, 345,
	346, 347, 348, 349, 350, 351, 1290, 1323, 1255, 352,
	1384, 1385, 749, 0, 353, 354, 1330, 0, 1311, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	1365, 380, 381, 382, 1314, 1312, 1313, 1320, 1316, 1315,
	1319, 383, 384, 385, 386, 387, 1347, 388, 390, 1341,
	1340, 1260, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 1332, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 1266, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 1355, 1356, 424, 1279, 319, 0,
	0, 0, 0, 0, 425, 426, 427, 1339, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	1366, 434, 435, 436, 1352, 1353, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 1362, 0, 1289,
	447, 0, 448, 449, 450, 451, 452, 453, 454, 1325,
	1326, 1329, 549, 1368, 455, 456, 457, 0, 458, 459,
	460, 461, 462, 0, 0, 0, 320, 463, 464, 465,
	0, 1367, 764, 466, 550, 467, 1334, 1335, 0, 1295,
	0, 468, 469, 472, 1369, 1327, 1370, 471, 473, 474,
	1371, 475, 0, 0, 0, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 485, 484, 0, 487, 1363, 486,
	1372, 488, 489, 1373, 0, 490, 491, 492, 493, 494,
	495, 498, 1318, 1317, 496, 497, 499, 500, 0, 501,
	502, 504, 507, 503, 505, 506, 508, 521, 522, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 524, 0, 523, 1374, 525, 526, 527, 528, 529,
	536, 538, 539, 534, 535, 537, 540, 541, 543, 531,
	532, 533, 1375, 542, 530, 1257, 321, 1376, 544, 545,
	546, 547, 1280, 1328, 548, 1342, 551, 552, 0, 0,
	553, 0, 554, 0, 0, 556, 557, 558, 0, 0,
	559, 560, 772, 1377, 561, 1378, 1357, 562, 563, 1267,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	0, 574, 575, 774, 576, 577, 578, 775, 579, 580,
	581, 1358, 582, 777, 583, 584, 0, 585, 586, 587,
	0, 588, 589, 590, 591, 592, 593, 594, 595, 1338,
	596, 597, 599, 598, 600, 0, 601, 0, 602, 603,
	604, 0, 0, 0, 0, 0, 605, 606, 608, 0,
	609, 610, 611, 612, 607, 613, 614, 615, 616, 617,
	618, 0, 620, 621, 619, 622, 623, 1379, 624, 625,
	626, 627, 628, 1268, 629, 0, 630, 631, 639, 640,
	641, 632, 633, 635, 642, 634, 643, 644, 645, 646,
	648, 647, 0, 650, 651, 649, 652, 653, 654, 1321,
	655, 780, 656, 636, 637, 657, 658, 1380, 659, 660,
	661, 662, 663, 664, 665, 1336, 0, 666, 0, 667,
	668, 669, 670, 671, 672, 674, 638, 675, 680, 681,
	1383, 676, 677, 678, 679, 1359, 683, 684, 685, 686,
	0, 687, 688, 1254, 682, 673, 0, 689, 690, 691,
	692, 693, 694, 0, 695, 696, 0, 697, 1348, 1349,
	1350, 1351, 0, 709, 0, 698, 700, 701, 702, 703,
	1360, 704, 1361, 1278, 705, 706, 707, 708, 699, 710,
	711, 0, 1261, 712, 713, 714, 716, 718, 719, 715,
	717, 720, 1322, 721, 0, 0, 722, 723, 724, 790,
	1345, 1382, 0, 726, 727, 725, 728, 729, 732, 730,
	731, 793, 733, 470, 734, 735, 0, 0, 0, 0,
	736, 737, 794, 738, 739, 740, 1258, 0, 0, 0,
	0, 1952, 0, 1300, 1272, 1273, 1274, 1270, 1271, 1283,
	0, 1253, 0, 0, 0, 0, 0, 0, 1251, 1252,
	322, 323, 325, 324, 326, 327, 328, 329, 1284, 330,
	331, 0, 1282, 0, 0, 0, 1324, 1288, 0, 0,
	332, 0, 333, 334, 335, 1364, 336, 337, 338, 339,
	340, 341, 342, 742, 1337, 0, 343, 1344, 344, 1343,
	0, 1354, 345, 346, 347, 348, 349, 350, 351, 1290,
	1323, 1255, 352, 1384, 1385, 749, 0, 353, 354, 1330,
	0, 1311, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 1365, 380, 381, 382, 1314, 1312, 1313,
	1320, 1316, 1315, 1319, 383, 384, 385, 386, 387, 1347,
	388, 390, 1341, 1340, 1260, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 1332, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 1266, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 1355, 1356, 424,
	1279, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	1339, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 1366, 434, 435, 436, 1352, 1353, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	1362, 0, 1289, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 1325, 1326, 1329, 549, 1368, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 320,
	463, 464, 465, 0, 1367, 764, 466, 550, 467, 1334,
	1335, 0, 1295, 0, 468, 469, 472, 1369, 1327, 1370,
	471, 473, 474, 1371, 475, 0, 0, 0, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 485, 484, 0,
	487, 1363, 486, 1372, 488, 489, 1373, 0, 490, 491,
	492, 493, 494, 495, 498, 1318, 1317, 496, 497, 499,
	500, 0, 501, 502, 504, 507, 503, 505, 506, 508,
	521, 522, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 524, 0, 523, 1374, 525, 526,
	527, 528, 529, 536, 538, 539, 534, 535, 537, 540,
	541, 543, 531, 532, 533, 1375, 542, 530, 1257, 321,
	1376, 544, 545, 546, 547, 1280, 1328, 548, 1342, 551,
	552, 0, 0, 553, 0, 554, 0, 0, 556, 557,
	558, 0, 0, 559, 560, 772, 1377, 561, 1378, 1357,
	562, 563, 1267, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 0, 574, 575, 774, 576, 577, 578,
	775, 579, 580, 581, 1358, 582, 777, 583, 584, 0,
	585, 586, 587, 0, 588, 589, 590, 591, 592, 593,
	594, 595, 1338, 596, 597, 599, 598, 600, 0, 601,
	0, 602, 603, 604, 0, 0, 0, 0, 0, 605,
	606, 608, 0, 609, 610, 611, 612, 607, 613, 614,
	615, 616, 617, 618, 0, 620, 621, 619, 622, 623,
	1379, 624, 625, 626, 627, 628, 1268, 629, 0, 630,
	631, 639, 640, 641, 632, 633, 635, 642, 634, 643,
	644, 645, 646, 648, 647, 0, 650, 651, 649, 652,
	653, 654, 1321, 655, 780, 656, 636, 637, 657, 658,
	1380, 659, 660, 661, 662, 663, 664, 665, 1336, 0,
	666, 0, 667, 668, 669, 670, 671, 672, 674, 638,
	675, 680, 681, 1383, 676, 677, 678, 679, 1359, 683,
	684, 685, 686, 0, 687, 688, 1254, 682, 673, 0,
	689, 690, 691, 692, 693, 694, 0, 695, 696, 0,
	697, 1348, 1349, 1350, 1351, 0, 709, 0, 698, 700,
	701, 702, 703, 1360, 704, 1361, 1278, 705, 706, 707,
	708, 699, 710, 711, 0, 1261, 712, 713, 714, 716,
	718, 719, 715, 717, 720, 1322, 721, 0, 0, 722,
	723, 724, 790, 1345, 1382, 0, 726, 727, 725, 728,
	729, 732, 730, 731, 793, 733, 470, 734, 735, 0,
	0, 0, 0, 736, 737, 794, 738, 739, 740, 1258,
	0, 0, 0, 0, 1877, 0, 1300, 1272, 1273, 1274,
	1270, 1271, 1283, 0, 1253, 0, 0, 0, 0, 0,
	0, 1251, 1252, 322, 323, 325, 324, 326, 327, 328,
	329, 1284, 330, 331, 0, 1282, 0, 0, 0, 1324,
	1288, 0, 0, 332, 0, 333, 334, 335, 1364, 336,
	337, 338, 339, 340, 341, 342, 742, 1337, 0, 343,
	1344, 344, 1343, 0, 1354, 345, 346, 347, 348, 349,
	350, 351, 1290, 1323, 1255, 352, 1384, 1385, 749, 0,
	353, 354, 1330, 0, 1311, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 1365, 380, 381, 382,
	1314, 1312, 1313, 1320, 1316, 1315, 1319, 383, 384, 385,
	386, 387, 1347, 388, 390, 1341, 1340, 1260, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 1332, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 1266, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	1355, 1356, 424, 1279, 319, 0, 0, 0, 0, 0,
	425, 426, 427, 1339, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 1366, 434, 435, 436,
	1352, 1353, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 1362, 0, 1289, 447, 0, 448, 449,
	450, 451, 452, 453, 454, 1325, 1326, 1329, 549, 1368,
	455, 456, 457, 0, 458, 459, 460, 461, 462, 0,
	0, 0, 320, 463, 464, 465, 0, 1367, 764, 466,
	550, 467, 1334, 1335, 0, 1295, 0, 468, 469, 472,
	1369, 1327, 1370, 471, 473, 474, 1371, 475, 0, 0,
	0, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	485, 484, 0, 487, 1363, 486, 1372, 488, 489, 1373,
	0, 490, 491, 492, 493, 494, 495, 498, 1318, 1317,
	496, 497, 499, 500, 0, 501, 502, 504, 507, 503,
	505, 506, 508, 521, 522, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 524, 0, 523,
	1374, 525, 526, 527, 528, 529, 536, 538, 539, 534,
	535, 537, 540, 541, 543, 531, 532, 533, 1375, 542,
	530, 1257, 321, 1376, 544, 545, 546, 547, 1280, 1328,
	548, 1342, 551, 552, 0, 0, 553, 0, 554, 0,
	0, 556, 557, 558, 0, 0, 559, 560, 772, 1377,
	561, 1378, 1357, 562, 563, 1267, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 0, 574, 575, 774,
	576, 577, 578, 775, 579, 580, 581, 1358, 582, 777,
	583, 584, 0, 585, 586, 587, 0, 588, 589, 590,
	591, 592, 593, 594, 595, 1338, 596, 597, 599, 598,
	600, 0, 601, 0, 602, 603, 604, 0, 0, 0,
	0, 0, 605, 606, 608, 0, 609, 610, 611, 612,
	607, 613, 614, 615, 616, 617, 618, 0, 620, 621,
	619, 622, 623, 1379, 624, 625, 626, 627, 628, 1268,
	629, 0, 630, 631, 639, 640, 641, 632, 633, 635,
	642, 634, 643, 644, 645, 646, 648, 647, 0, 650,
	651, 649, 652, 653, 654, 1321, 655, 780, 656, 636,
	637, 657, 658, 1380, 659, 660, 661, 662, 663, 664,
	665, 1336, 0, 666, 0, 667, 668, 669, 670, 671,
	672, 674, 638, 675, 680, 681, 1383, 676, 677, 678,
	679, 1359, 683, 684, 685, 686, 0, 687, 688, 1254,
	682, 673, 0, 689, 690, 691, 692, 693, 694, 0,
	695, 696, 0, 697, 1348, 1349, 1350, 1351, 0, 709,
	0, 698, 700, 701, 702, 703, 1360, 704, 1361, 1278,
	705, 706, 707, 708, 699, 710, 711, 0, 1261, 712,
	713, 714, 716, 718, 719, 715, 717, 720, 1322, 721,
	0, 0, 722, 723, 724, 790, 1345, 1382, 0, 726,
	727, 725, 728, 729, 732, 730, 731, 793, 733, 470,
	734, 735, 0, 0, 0, 0, 736, 737, 794, 738,
	739, 740, 1258, 0, 0, 0, 0, 1872, 0, 1300,
	1272, 1273, 1274, 1270, 1271, 1283, 0, 1253, 0, 0,
	0, 0, 0, 0, 1251, 1252, 322, 323, 325, 324,
	326, 327, 328, 329, 1284, 330, 331, 0, 1282, 0,
	0, 0, 1324, 1288, 0, 0, 332, 0, 333, 334,
	335, 1364, 336, 337, 338, 339, 340, 341, 342, 742,
	1337, 0, 343, 1344, 344, 1343, 0, 1354, 345, 346,
	347, 348, 349, 350, 351, 1290, 1323, 1255, 352, 1384,
	1385, 749, 0, 353, 354, 1330, 0, 1311, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 1365,
	380, 381, 382, 1314, 1312, 1313, 1320, 1316, 1315, 1319,
	383, 384, 385, 386, 387, 1347, 388, 390, 1341, 1340,
	1260, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 1332, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	1266, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 1355, 1356, 424, 1279, 319, 0, 0,
	0, 0, 0, 425, 426, 427, 1339, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 1366,
	434, 435, 436, 1352, 1353, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 1362, 0, 1289, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 1325, 1326,
	1329, 549, 1368, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 0, 0, 0, 320, 463, 464, 465, 0,
	1367, 764, 466, 550, 467, 1334, 1335, 0, 1295, 0,
	468, 469, 472, 1369, 1327, 1370, 471, 473, 474, 1371,
	475, 0, 0, 0, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 485, 484, 0, 487, 1363, 486, 1372,
	488, 489, 1373, 0, 490, 491, 492, 493, 494, 495,
	498, 1318, 1317, 496, 497, 499, 500, 0, 501, 502,
	504, 507, 503, 505, 506, 508, 521, 522, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	524, 0, 523, 1374, 525, 526, 527, 528, 529, 536,
	538, 539, 534, 535, 537, 540, 541, 543, 531, 532,
	533, 1375, 542, 530, 1257, 321, 1376, 544, 545, 546,
	547, 1280, 1328, 548, 1342, 551, 552, 0, 0, 553,
	0, 554, 0, 0, 556, 557, 558, 0, 0, 559,
	560, 772, 1377, 561, 1378, 1357, 562, 563, 1267, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 0,
	574, 575, 774, 576, 577, 578, 775, 579, 580, 581,
	1358, 582, 777, 583, 584, 0, 585, 586, 587, 0,
	588, 589, 590, 591, 592, 593, 594, 595, 1338, 596,
	597, 599, 598, 600, 0, 601, 0, 602, 603, 604,
	0, 0, 0, 0, 0, 605, 606, 608, 0, 609,
	610, 611, 612, 607, 613, 614, 615, 616, 617, 618,
	0, 620, 621, 619, 622, 623, 1379, 624, 625, 626,
	627, 628, 1268, 629, 0, 630, 631, 639, 640, 641,
	632, 633, 635, 642, 634, 643, 644, 645, 646, 648,
	647, 0, 650, 651, 649, 652, 653, 654, 1321, 655,
	780, 656, 636, 637, 657, 658, 1380, 659, 660, 661,
	662, 663, 664, 665, 1336, 0, 666, 0, 667, 668,
	669, 670, 671, 672, 674, 638, 675, 680, 681, 1383,
	676, 677, 678, 679, 1359, 683, 684, 685, 686, 0,
	687, 688, 1254, 682, 673, 0, 689, 690, 691, 692,
	693, 694, 0, 695, 696, 0, 697, 1348, 1349, 1350,
	1351, 0, 709, 0, 698, 700, 701, 702, 703, 1360,
	704, 1361, 1278, 705, 706, 707, 708, 699, 710, 711,
	0, 1261, 712, 713, 714, 716, 718, 719, 715, 717,
	720, 1322, 721, 0, 0, 722, 723, 724, 790, 1345,
	1382, 0, 726, 727, 725, 728, 729, 732, 730, 731,
	793, 733, 470, 734, 735, 0, 0, 0, 0, 736,
	737, 794, 738, 739, 740, 1258, 0, 0, 0, 0,
	1858, 0, 1300, 1272, 1273, 1274, 1270, 1271, 1283, 0,
	1253, 0, 0, 0, 0, 0, 0, 1251, 1252, 322,
	323, 325, 324, 326, 327, 328, 329, 1284, 330, 331,
	0, 1282, 0, 0, 0, 1324, 1288, 0, 0, 332,
	0, 333, 334, 335, 1364, 336, 337, 338, 339, 340,
	341, 342, 742, 1337, 0, 343, 1344, 344, 1343, 0,
	1354, 345, 346, 347, 348, 349, 350, 351, 1290, 1323,
	1255, 352, 1384, 1385, 749, 0, 353, 354, 1330, 0,
	1311, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 1365, 380, 381, 382, 1314, 1312, 1313, 1320,
	1316, 1315, 1319, 383, 384, 385, 386, 387, 1347, 388,
	390, 1341, 1340, 1260, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	1332, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 1266, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 1355, 1356, 424, 1279,
	319, 0, 0, 0, 0, 0, 425, 426, 427, 1339,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 1366, 434, 435, 436, 1352, 1353, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 1362,
	0, 1289, 447, 0, 448, 449, 450, 451, 452, 453,
	454, 1325, 1326, 1329, 549, 1368, 455, 456, 457, 0,
	458, 459, 460, 461, 462, 0, 0, 0, 320, 463,
	464, 465, 0, 1367, 764, 466, 550, 467, 1334, 1335,
	0, 1295, 0, 468, 469, 472, 1369, 1327, 1370, 471,
	473, 474, 1371, 475, 0, 0, 0, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 485, 484, 0, 487,
	1363, 486, 1372, 488, 489, 1373, 0, 490, 491, 492,
	493, 494, 495, 498, 1318, 1317, 496, 497, 499, 500,
	0, 501, 502, 504, 507, 503, 505, 506, 508, 521,
	522, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 524, 0, 523, 1374, 525, 526, 527,
	528, 529, 536, 538, 539, 534, 535, 537, 540, 541,
	543, 531, 532, 533, 1375, 542, 530, 1257, 321, 1376,
	544, 545, 546, 547, 1280, 1328, 548, 1342, 551, 552,
	0, 0, 553, 0, 554, 0, 0, 556, 557, 558,
	0, 0, 559, 560, 772, 1377, 561, 1378, 1357, 562,
	563, 1267, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 0, 574, 575, 774, 576, 577, 578, 775,
	579, 580, 581, 1358, 582, 777, 583, 584, 0, 585,
	586, 587, 0, 588, 589, 590, 591, 592, 593, 594,
	595, 1338, 596, 597, 599, 598, 600, 0, 601, 0,
	602, 603, 604, 0, 0, 0, 0, 0, 605, 606,
	608, 0, 609, 610, 611, 612, 607, 613, 614, 615,
	616, 617, 618, 0, 620, 621, 619, 622, 623, 1379,
	624, 625, 626, 627, 628, 1268, 629, 0, 630, 631,
	639, 640, 641, 632, 633, 635, 642, 634, 643, 644,
	645, 646, 648, 647, 0, 650, 651, 649, 652, 653,
	654, 1321, 655, 780, 656, 636, 637, 657, 658, 1380,
	659, 660, 661, 662, 663, 664, 665, 1336, 0, 666,
	0, 667, 668, 669, 670, 671, 672, 674, 638, 675,
	680, 681, 1383, 676, 677, 678, 679, 1359, 683, 684,
	685, 686, 0, 687, 688, 1254, 682, 673, 0, 689,
	690, 691, 692, 693, 694, 0, 695, 696, 0, 697,
	1348, 1349, 1350, 1351, 0, 709, 0, 698, 700, 701,
	702, 703, 1360, 704, 1361, 1278, 705, 706, 707, 708,
	699, 710, 711, 0, 1261, 712, 713, 714, 716, 718,
	719, 715, 717, 720, 1322, 721, 0, 0, 722, 723,
	724, 790, 1345, 1382, 0, 726, 727, 725, 728, 729,
	732, 730, 731, 793, 733, 470, 734, 735, 0, 0,
	0, 0, 736, 737, 794, 738, 739, 740, 1258, 0,
	0, 0, 0, 1853, 0, 1300, 1272, 1273, 1274, 1270,
	1271, 1283, 0, 1253, 0, 0, 0, 0, 0, 0,
	1251, 1252, 322, 323, 325, 324, 326, 327, 328, 329,
	1284, 330, 331, 0, 1282, 0, 0, 0, 1324, 1288,
	0, 0, 332, 0, 333, 334, 335, 1364, 336, 337,
	338, 339, 340, 341, 342, 742, 1337, 0, 343, 1344,
	344, 1343, 0, 1354, 345, 346, 347, 348, 349, 350,
	351, 1290, 1323, 1255, 352, 1384, 1385, 749, 0, 353,
	354, 1330, 0, 1311, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 1365, 380, 381, 382, 1314,
	1312, 1313, 1320, 1316, 1315, 1319, 383, 384, 385, 386,
	387, 1347, 388, 390, 1341, 1340, 1260, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 1332, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 1266, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 1355,
	1356, 424, 1279, 319, 0, 0, 0, 0, 0, 425,
	426, 427, 1339, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 1366, 434, 435, 436, 1352,
	1353, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 1362, 0, 1289, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 1325, 1326, 1329, 549, 1368, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 320, 463, 464, 465, 0, 1367, 764, 466, 550,
	467, 1334, 1335, 0, 1295, 0, 468, 469, 472, 1369,
	1327, 1370, 471, 473, 474, 1371, 475, 0, 0, 0,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 485,
	484, 0, 487, 1363, 486, 1372, 488, 489, 1373, 0,
	490, 491, 492, 493, 494, 495, 498, 1318, 1317, 496,
	497, 499, 500, 0, 501, 502, 504, 507, 503, 505,
	506, 508, 521, 522, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 524, 0, 523, 1374,
	525, 526, 527, 528, 529, 536, 538, 539, 534, 535,
	537, 540, 541, 543, 531, 532, 533, 1375, 542, 530,
	1257, 321, 1376, 544, 545, 546, 547, 1280, 1328, 548,
	1342, 551, 552, 0, 0, 553, 0, 554, 0, 0,
	556, 557, 558, 0, 0, 559, 560, 772, 1377, 561,
	1378, 1357, 562, 563, 1267, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 0, 574, 575, 774, 576,
	577, 578, 775, 579, 580, 581, 1358, 582, 777, 583,
	584, 0, 585, 586, 587, 0, 588, 589, 590, 591,
	592, 593, 594, 595, 1338, 596, 597, 599, 598, 600,
	0, 601, 0, 602, 603, 604, 0, 0, 0, 0,
	0, 605, 606, 608, 0, 609, 610, 611, 612, 607,
	613, 614, 615, 616, 617, 618, 0, 620, 621, 619,
	622, 623, 1379, 624, 625, 626, 627, 628, 1268, 629,
	0, 630, 631, 639, 640, 641, 632, 633, 635, 642,
	634, 643, 644, 645, 646, 648, 647, 0, 650, 651,
	649, 652, 653, 654, 1321, 655, 780, 656, 636, 637,
	657, 658, 1380, 659, 660, 661, 662, 663, 664, 665,
	1336, 0, 666, 0, 667, 668, 669, 670, 671, 672,
	674, 638, 675, 680, 681, 1383, 676, 677, 678, 679,
	1359, 683, 684, 685, 686, 0, 687, 688, 1254, 682,
	673, 0, 689, 690, 691, 692, 693, 694, 0, 695,
	696, 0, 697, 1348, 1349, 1350, 1351, 0, 709, 0,
	698, 700, 701, 702, 703, 1360, 704, 1361, 1278, 705,
	706, 707, 708, 699, 710, 711, 0, 1261, 712, 713,
	714, 716, 718, 719, 715, 717, 720, 1322, 721, 0,
	0, 722, 723, 724, 790, 1345, 1382, 0, 726, 727,
	725, 728, 729, 732, 730, 731, 793, 733, 470, 734,
	735, 0, 0, 0, 0, 736, 737, 794, 738, 739,
	740, 1258, 0, 0, 0, 0, 1759, 0, 1300, 1272,
	1273, 1274, 1270, 1271, 1283, 0, 1253, 0, 0, 0,
	0, 0, 0, 1251, 1252, 322, 323, 325, 324, 326,
	327, 328, 329, 1284, 330, 331, 0, 1282, 0, 0,
	0, 1324, 1288, 0, 0, 332, 0, 333, 334, 335,
	1364, 336, 337, 338, 339, 340, 341, 342, 742, 1337,
	0, 343, 1344, 344, 1343, 0, 1354, 345, 346, 347,
	348, 349, 350, 351, 1290, 1323, 1255, 352, 1384, 1385,
	749, 0, 353, 354, 1330, 0, 1311, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 1365, 380,
	381, 382, 1314, 1312, 1313, 1320, 1316, 1315, 1319, 383,
	384, 385, 386, 387, 1347, 388, 390, 1341, 1340, 1260,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 1332, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 1266,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 1355, 1356, 424, 1279, 319, 0, 0, 0,
	0, 0, 425, 426, 427, 1339, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 1366, 434,
	435, 436, 1352, 1353, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 1362, 0, 1289, 447, 0,
	448, 449, 450, 451, 452, 453, 454, 1758, 1326, 1329,
	549, 1368, 455, 456, 457, 0, 458, 459, 460, 461,
	462, 0, 0, 0, 320, 463, 464, 465, 0, 1367,
	764, 466, 550, 467, 1334, 1335, 0, 1295, 0, 468,
	469, 472, 1369, 1327, 1370, 471, 473, 474, 1371, 475,
	0, 0, 0, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 485, 484, 0, 487, 1363, 486, 1372, 488,
	489, 1373, 0, 490, 491, 492, 493, 494, 495, 498,
	1318, 1317, 496, 497, 499, 500, 0, 501, 502, 504,
	507, 503, 505, 506, 508, 521, 522, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 524,
	0, 523, 1374, 525, 526, 527, 528, 529, 536, 538,
	539, 534, 535, 537, 540, 541, 543, 531, 532, 533,
	1375, 542, 530, 1257, 321, 1376, 544, 545, 546, 547,
	1280, 1328, 548, 1342, 551, 552, 0, 0, 553, 0,
	554, 0, 0, 556, 557, 558, 0, 0, 559, 560,
	772, 1377, 561, 1378, 1357, 562, 563, 1267, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 0, 574,
	575, 774, 576, 577, 578, 775, 579, 580, 581, 1358,
	582, 777, 583, 584, 0, 585, 586, 587, 0, 588,
	589, 590, 591, 592, 593, 594, 595, 1338, 596, 597,
	599, 598, 600, 0, 601, 0, 602, 603, 604, 0,
	0, 0, 0, 0, 605, 606, 608, 0, 609, 610,
	611, 612, 607, 613, 614, 615, 616, 617, 618, 0,
	620, 621, 619, 622, 623, 1379, 624, 625, 626, 627,
	628, 1268, 629, 0, 630, 631, 639, 640, 641, 632,
	633, 635, 642, 634, 643, 644, 645, 646, 648, 647,
	0, 650, 651, 649, 652, 653, 654, 1321, 655, 780,
	656, 636, 637, 657, 658, 1380, 659, 660, 661, 662,
	663, 664, 665, 1336, 0, 666, 0, 667, 668, 669,
	670, 671, 672, 674, 638, 675, 680, 681, 1383, 676,
	677, 678, 679, 1359, 683, 684, 685, 686, 0, 687,
	688, 1254, 682, 673, 0, 689, 690, 691, 692, 693,
	694, 0, 695, 696, 0, 697, 1348, 1349, 1350, 1351,
	0, 709, 0, 698, 700, 701, 702, 703, 1360, 704,
	1361, 1278, 705, 706, 707, 708, 699, 710, 711, 0,
	1261, 712, 713, 714, 716, 718, 719, 715, 717, 720,
	1322, 721, 0, 0, 722, 723, 724, 790, 1345, 1382,
	0, 726, 727, 725, 728, 729, 732, 730, 731, 793,
	733, 470, 734, 735, 0, 0, 0, 0, 736, 737,
	794, 738, 739, 740, 1258, 0, 0, 0, 0, 1753,
	0, 1300, 1272, 1273, 1274, 1270, 1271, 1283, 0, 1253,
	0, 0, 0, 0, 0, 0, 1251, 1252, 322, 323,
	325, 324, 326, 327, 328, 329, 1284, 330, 331, 0,
	1282, 0, 0, 0, 1324, 1288, 0, 0, 332, 0,
	333, 334, 335, 1364, 336, 337, 338, 339, 340, 341,
	342, 742, 1337, 0, 343, 1344, 344, 1343, 0, 1354,
	345, 346, 347, 348, 349, 350, 351, 1290, 1323, 1255,
	352, 1384, 1385, 749, 0, 353, 354, 1330, 0, 1311,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 1365, 380, 381, 382, 1314, 1312, 1313, 1320, 1316,
	1315, 1319, 383, 384, 385, 386, 387, 1347, 388, 390,
	1341, 1340, 1260, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 1332,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 1266, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 1355, 1356, 424, 1279, 319,
	0, 0, 0, 0, 0, 425, 426, 427, 1339, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 1366, 434, 435, 436, 1352, 1353, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 1362, 0,
	1289, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	1752, 1326, 1329, 549, 1368, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 0, 0, 0, 320, 463, 464,
	465, 0, 1367, 764, 466, 550, 467, 1334, 1335, 0,
	1295, 0, 468, 469, 472, 1369, 1327, 1370, 471, 473,
	474, 1371, 475, 0, 0, 0, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 485, 484, 0, 487, 1363,
	486, 1372, 488, 489, 1373, 0, 490, 491, 492, 493,
	494, 495, 498, 1318, 1317, 496, 497, 499, 500, 0,
	501, 502, 504, 507, 503, 505, 506, 508, 521, 522,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 524, 0, 523, 1374, 525, 526, 527, 528,
	529, 536, 538, 539, 534, 535, 537, 540, 541, 543,
	531, 532, 533, 1375, 542, 530, 1257, 321, 1376, 544,
	545, 546, 547, 1280, 1328, 548, 1342, 551, 552, 0,
	0, 553, 0, 554, 0, 0, 556, 557, 558, 0,
	0, 559, 560, 772, 1377, 561, 1378, 1357, 562, 563,
	1267, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 0, 574, 575, 774, 576, 577, 578, 775, 579,
	580, 581, 1358, 582, 777, 583, 584, 0, 585, 586,
	587, 0, 588, 589, 590, 591, 592, 593, 594, 595,
	1338, 596, 597, 599, 598, 600, 0, 601, 0, 602,
	603, 604, 0, 0, 0, 0, 0, 605, 606, 608,
	0, 609, 610, 611, 612, 607, 613, 614, 615, 616,
	617, 618, 0, 620, 621, 619, 622, 623, 1379, 624,
	625, 626, 627, 628, 1268, 629, 0, 630, 631, 639,
	640, 641, 632, 633, 635, 642, 634, 643, 644, 645,
	646, 648, 647, 0, 650, 651, 649, 652, 653, 654,
	1321, 655, 780, 656, 636, 637, 657, 658, 1380, 659,
	660, 661, 662, 663, 664, 665, 1336, 0, 666, 0,
	667, 668, 669, 670, 671, 672, 674, 638, 675, 680,
	681, 1383, 676, 677, 678, 679, 1359, 683, 684, 685,
	686, 0, 687, 688, 1254, 682, 673, 0, 689, 690,
	691, 692, 693, 694, 0, 695, 696, 0, 697, 1348,
	1349, 1350, 1351, 0, 709, 0, 698, 700, 701, 702,
	703, 1360, 704, 1361, 1278, 705, 706, 707, 708, 699,
	710, 711, 0, 1261, 712, 713, 714, 716, 718, 719,
	715, 717, 720, 1322, 721, 0, 0, 722, 723, 724,
	790, 1345, 1382, 0, 726, 727, 725, 728, 729, 732,
	730, 731, 793, 733, 470, 734, 735, 0, 0, 0,
	0, 736, 737, 794, 738, 739, 740, 1258, 0, 0,
	0, 0, 1746, 0, 1300, 1272, 1273, 1274, 1270, 1271,
	1283, 0, 1253, 0, 0, 0, 0, 0, 0, 1251,
	1252, 322, 323, 325, 324, 326, 327, 328, 329, 1284,
	330, 331, 0, 1282, 0, 0, 0, 1324, 1288, 0,
	0, 332, 0, 333, 334, 335, 1364, 336, 337, 338,
	339, 340, 341, 342, 742, 1337, 0, 343, 1344, 344,
	1343, 0, 1354, 345, 346, 347, 348, 349, 350, 351,
	1290, 1323, 1255, 352, 1384, 1385, 749, 0, 353, 354,
	1330, 0, 1311, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 1365, 380, 381, 382, 1314, 1312,
	1313, 1320, 1316, 1315, 1319, 383, 384, 385, 386, 387,
	1347, 388, 390, 1341, 1340, 1260, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 1332, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 1266, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 1355, 1356,
	424, 1279, 319, 0, 0, 0, 0, 0, 425, 426,
	427, 1339, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 1366, 434, 435, 436, 1352, 1353,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 1362, 0, 1289, 447, 0, 448, 449, 450, 451,
	452, 453, 454, 1325, 1326, 1329, 549, 1368, 455, 456,
	457, 0, 458, 459, 460, 461, 462, 0, 0, 0,
	320, 463, 464, 465, 0, 1367, 764, 466, 550, 467,
	1334, 1335, 0, 1295, 0, 468, 469, 472, 1369, 1327,
	1370, 471, 473, 474, 1371, 475, 0, 0, 0, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 485, 484,
	0, 487, 1363, 486, 1372, 488, 489, 1373, 0, 490,
	491, 492, 493, 494, 495, 498, 1318, 1317, 496, 497,
	499, 500, 0, 501, 502, 504, 507, 503, 505, 506,
	508, 521, 522, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 524, 0, 523, 1374, 525,
	526, 527, 528, 529, 536, 538, 539, 534, 535, 537,
	540, 541, 543, 531, 532, 533, 1375, 542, 530, 1257,
	321, 1376, 544, 545, 546, 547, 1280, 1328, 548, 1342,
	551, 552, 0, 0, 553, 0, 554, 0, 0, 556,
	557, 558, 0, 0, 559, 560, 772, 1377, 561, 1378,
	1357, 562, 563, 1267, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 0, 574, 575, 774, 576, 577,
	578, 775, 579, 580, 581, 1358, 582, 777, 583, 584,
	0, 585, 586, 587, 0, 588, 589, 590, 591, 592,
	593, 594, 595, 1338, 596, 597, 599, 598, 600, 0,
	601, 0, 602, 603, 604, 0, 0, 0, 0, 0,
	605, 606, 608, 0, 609, 610, 611, 612, 607, 613,
	614, 615, 616, 617, 618, 0, 620, 621, 619, 622,
	623, 1379, 624, 625, 626, 627, 628, 1268, 629, 0,
	630, 631, 639, 640, 641, 632, 633, 635, 642, 634,
	643, 644, 645, 646, 648, 647, 0, 650, 651, 649,
	652, 653, 654, 1321, 655, 780, 656, 636, 637, 657,
	658, 1380, 659, 660, 661, 662, 663, 664, 665, 1336,
	0, 666, 0, 667, 668, 669, 670, 671, 672, 674,
	638, 675, 680, 681, 1383, 676, 677, 678, 679, 1359,
	683, 684, 685, 686, 0, 687, 688, 1254, 682, 673,
	0, 689, 690, 691, 692, 693, 694, 0, 695, 696,
	0, 697, 1348, 1349, 1350, 1351, 0, 709, 0, 698,
	700, 701, 702, 703, 1360, 704, 1361, 1278, 705, 706,
	707, 708, 699, 710, 711, 0, 1261, 712, 713, 714,
	716, 718, 719, 715, 717, 720, 1322, 721, 0, 0,
	722, 723, 724, 790, 1345, 1382, 0, 726, 727, 725,
	728, 729, 732, 730, 731, 793, 733, 470, 734, 735,
	0, 0, 0, 0, 736, 737, 794, 738, 739, 740,
	1258, 0, 0, 0, 0, 1719, 0, 1300, 1272, 1273,
	1274, 1270, 1271, 1283, 0, 1253, 0, 0, 0, 0,
	0, 0, 1251, 1252, 322, 323, 325, 324, 326, 327,
	328, 329, 1284, 330, 331, 0, 1282, 0, 0, 0,
	1324, 1288, 0, 0, 332, 0, 333, 334, 335, 1364,
	336, 337, 338, 339, 340, 341, 342, 742, 1337, 0,
	343, 1344, 344, 1343, 0, 1354, 345, 346, 347, 348,
	349, 350, 351, 1290, 1323, 1255, 352, 1384, 1385, 749,
	0, 353, 354, 1330, 0, 1311, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 1365, 380, 381,
	382, 1314, 1312, 1313, 1320, 1316, 1315, 1319, 383, 384,
	385, 386, 387, 1347, 388, 390, 1341, 1340, 1260, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 1332, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 1266, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 1355, 1356, 424, 1279, 319, 0, 0, 0, 0,
	0, 425, 426, 427, 1339, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 1366, 434, 435,
	436, 1352, 1353, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 1362, 0, 1289, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 1325, 1326, 1329, 549,
	1368, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 320, 463, 464, 465, 0, 1367, 764,
	466, 550, 467, 1334, 1335, 0, 1295, 0, 468, 469,
	472, 1369, 1327, 1370, 471, 473, 474, 1371, 475, 0,
	0, 0, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 485, 484, 0, 487, 1363, 486, 1372, 488, 489,
	1373, 0, 490, 491, 492, 493, 494, 495, 498, 1318,
	1317, 496, 497, 499, 500, 0, 501, 502, 504, 507,
	503, 505, 506, 508, 521, 522, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 524, 0,
	523, 1374, 525, 526, 527, 528, 529, 536, 538, 539,
	534, 535, 537, 540, 541, 543, 531, 532, 533, 1375,
	542, 530, 1257, 321, 1376, 544, 545, 546, 547, 1280,
	1328, 548, 1342, 551, 552, 0, 0, 553, 0, 554,
	0, 0, 556, 557, 558, 0, 0, 559, 560, 772,
	1377, 561, 1378, 1357, 562, 563, 1267, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 0, 574, 575,
	774, 576, 577, 578, 775, 579, 580, 581, 1358, 582,
	777, 583, 584, 0, 585, 586, 587, 0, 588, 589,
	590, 591, 592, 593, 594, 595, 1338, 596, 597, 599,
	598, 600, 0, 601, 0, 602, 603, 604, 0, 0,
	0, 0, 0, 605, 606, 608, 0, 609, 610, 611,
	612, 607, 613, 614, 615, 616, 617, 618, 0, 620,
	621, 619, 622, 623, 1379, 624, 625, 626, 627, 628,
	1268, 629, 0, 630, 631, 639, 640, 641, 632, 633,
	635, 642, 634, 643, 644, 645, 646, 648, 647, 0,
	650, 651, 649, 652, 653, 654, 1321, 655, 780, 656,
	636, 637, 657, 658, 1380, 659, 660, 661, 662, 663,
	664, 665, 1336, 0, 666, 0, 667, 668, 669, 670,
	671, 672, 674, 638, 675, 680, 681, 1383, 676, 677,
	678, 679, 1359, 683, 684, 685, 686, 0, 687, 688,
	1254, 682, 673, 0, 689, 690, 691, 692, 693, 694,
	0, 695, 696, 0, 697, 1348, 1349, 1350, 1351, 0,
	709, 0, 698, 700, 701, 702, 703, 1360, 704, 1361,
	1278, 705, 706, 707, 708, 699, 710, 711, 0, 1261,
	712, 713, 714, 716, 718, 719, 715, 717, 720, 1322,
	721, 0, 0, 722, 723, 724, 790, 1345, 1382, 0,
	726, 727, 725, 728, 729, 732, 730, 731, 793, 733,
	470, 734, 735, 0, 0, 0, 0, 736, 737, 794,
	738, 739, 740, 1258, 0, 0, 0, 0, 1691, 0,
	1300, 1272, 1273, 1274, 1270, 1271, 1283, 0, 1253, 0,
	0, 0, 0, 0, 0, 1251, 1252, 322, 323, 325,
	324, 326, 327, 328, 329, 1284, 330, 331, 0, 1282,
	0, 0, 0, 1324, 1288, 0, 0, 332, 0, 333,
	334, 335, 1364, 336, 337, 338, 339, 340, 341, 342,
	742, 1337, 0, 343, 1344, 344, 1343, 0, 1354, 345,
	346, 347, 348, 349, 350, 351, 1290, 1323, 1255, 352,
	1384, 1385, 749, 0, 353, 354, 1330, 0, 1311, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	1365, 380, 381, 382, 1314, 1312, 1313, 1320, 1316, 1315,
	1319, 383, 384, 385, 386, 387, 1347, 388, 390, 1341,
	1340, 1260, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 1332, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 1266, 412, 413, 414, 416, 418, 415, 1695, 419,
	420, 421, 422, 423, 1355, 1356, 424, 1279, 319, 0,
	0, 0, 0, 0, 425, 426, 427, 1339, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	1366, 434, 435, 436, 1352, 1353, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 1362, 0, 1289,
	447, 0, 448, 449, 450, 451, 452, 453, 454, 1325,
	1326, 1329, 549, 1368, 455, 456, 457, 0, 458, 459,
	460, 461, 462, 0, 0, 0, 320, 463, 464, 465,
	0, 1367, 764, 466, 550, 467, 1334, 1335, 0, 1295,
	0, 468, 469, 472, 1369, 1327, 1370, 471, 473, 474,
	1371, 475, 0, 0, 0, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 485, 484, 0, 487, 1363, 486,
	1372, 488, 489, 1373, 0, 490, 491, 492, 493, 494,
	495, 498, 1318, 1317, 496, 497, 499, 500, 0, 501,
	502, 504, 507, 503, 505, 506, 508, 521, 522, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 524, 0, 523, 1374, 525, 526, 527, 528, 529,
	536, 538, 539, 534, 535, 537, 540, 541, 543, 531,
	532, 533, 1375, 542, 530, 1257, 321, 1376, 544, 545,
	546, 547, 1280, 1328, 548, 1342, 551, 552, 0, 0,
	553, 0, 554, 0, 0, 556, 557, 558, 0, 0,
	559, 560, 772, 1377, 561, 1378, 1357, 562, 563, 1267,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	0, 574, 575, 774, 576, 577, 578, 775, 579, 580,
	581, 1358, 582, 777, 583, 584, 0, 585, 586, 587,
	0, 588, 589, 590, 591, 592, 593, 594, 595, 1338,
	596, 597, 599, 598, 600, 0, 601, 0, 602, 603,
	604, 0, 0, 0, 0, 0, 605, 606, 1696, 0,
	609, 610, 611, 612, 607, 613, 614, 615, 616, 617,
	618, 0, 620, 621, 619, 622, 623, 1379, 624, 625,
	626, 627, 628, 1268, 629, 0, 630, 631, 639, 640,
	641, 632, 633, 635, 642, 634, 643, 644, 645, 646,
	648, 647, 0, 650, 651, 649, 652, 653, 654, 1321,
	655, 780, 656, 636, 637, 657, 658, 1380, 659, 660,
	661, 662, 663, 664, 665, 1336, 0, 666, 0, 667,
	668, 669, 670, 671, 672, 674, 638, 675, 680, 681,
	1383, 676, 677, 678, 679, 1359, 683, 684, 685, 686,
	0, 687, 688, 1254, 682, 673, 0, 689, 690, 691,
	692, 693, 694, 0, 1694, 696, 0, 697, 1348, 1349,
	1350, 1351, 0, 709, 0, 698, 700, 701, 702, 703,
	1360, 704, 1361, 1278, 705, 706, 707, 708, 699, 710,
	711, 0, 1261, 712, 713, 714, 716, 718, 719, 715,
	717, 720, 1322, 721, 0, 0, 722, 723, 724, 790,
	1345, 1382, 0, 726, 727, 725, 728, 729, 732, 730,
	731, 793, 733, 470, 734, 735, 0, 0, 0, 0,
	736, 737, 794, 738, 739, 740, 1258, 0, 0, 0,
	0, 1519, 0, 1300, 1272, 1273, 1274, 1270, 1271, 1283,
	0, 1253, 0, 0, 0, 0, 0, 0, 1251, 1252,
	322, 323, 325, 324, 326, 327, 328, 329, 1284, 330,
	331, 0, 1282, 0, 0, 0, 1324, 1288, 0, 0,
	332, 0, 333, 334, 335, 1364, 336, 337, 338, 339,
	340, 341, 342, 742, 1337, 0, 343, 1344, 344, 1343,
	0, 1354, 345, 346, 347, 348, 349, 350, 351, 1290,
	1323, 1255, 352, 1384, 1385, 749, 0, 353, 354, 1330,
	0, 1311, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 1365, 380, 381, 382, 1314, 1312, 1313,
	1320, 1316, 1315, 1319, 383, 384, 385, 386, 387, 1347,
	388, 390, 1341, 1340, 1260, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 1332, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 1266, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 1355, 1356, 424,
	1279, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	1339, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 1366, 434, 435, 436, 1352, 1353, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	1362, 0, 1289, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 1325, 1326, 1329, 549, 1368, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 320,
	463, 464, 465, 0, 1367, 764, 466, 550, 467, 1334,
	1335, 0, 1295, 0, 468, 469, 472, 1369, 1327, 1370,
	471, 473, 474, 1371, 475, 0, 0, 0, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 485, 484, 0,
	487, 1363, 486, 1372, 488, 489, 1373, 0, 490, 491,
	492, 493, 494, 495, 498, 1318, 1317, 496, 497, 499,
	500, 0, 501, 502, 504, 507, 503, 505, 506, 508,
	521, 522, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 524, 0, 523, 1374, 525, 526,
	527, 528, 529, 536, 538, 539, 534, 535, 537, 540,
	541, 543, 531, 532, 533, 1375, 542, 530, 1257, 321,
	1376, 544, 545, 546, 547, 1280, 1328, 548, 1342, 551,
	552, 0, 0, 553, 0, 554, 0, 0, 556, 557,
	558, 0, 0, 559, 560, 772, 1377, 561, 1378, 1357,
	562, 563, 1267, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 0, 574, 575, 774, 576, 577, 578,
	775, 579, 580, 581, 1358, 582, 777, 583, 584, 0,
	585, 586, 587, 0, 588, 589, 590, 591, 592, 593,
	594, 595, 1338, 596, 597, 599, 598, 600, 0, 601,
	0, 602, 603, 604, 0, 0, 0, 0, 0, 605,
	606, 608, 0, 609, 610, 611, 612, 607, 613, 614,
	615, 616, 617, 618, 0, 620, 621, 619, 622, 623,
	1379, 624, 625, 626, 627, 628, 1268, 629, 0, 630,
	631, 639, 640, 641, 632, 633, 635, 642, 634, 643,
	644, 645, 646, 648, 647, 0, 650, 651, 649, 652,
	653, 654, 1321, 655, 780, 656, 636, 637, 657, 658,
	1380, 659, 660, 661, 662, 663, 664, 665, 1336, 0,
	666, 0, 667, 668, 669, 670, 671, 672, 674, 638,
	675, 680, 681, 1383, 676, 677, 678, 679, 1359, 683,
	684, 685, 686, 0, 687, 688, 1254, 682, 673, 0,
	689, 690, 691, 692, 693, 694, 0, 695, 696, 0,
	697, 1348, 1349, 1350, 1351, 0, 709, 0, 698, 700,
	701, 702, 703, 1360, 704, 1361, 1278, 705, 706, 707,
	708, 699, 710, 711, 0, 1261, 712, 713, 714, 716,
	718, 719, 715, 717, 720, 1322, 721, 0, 0, 722,
	723, 724, 790, 1345, 1382, 0, 726, 727, 725, 728,
	729, 732, 730, 731, 793, 733, 470, 734, 735, 0,
	0, 0, 0, 736, 737, 794, 738, 739, 740, 1258,
	0, 0, 0, 0, 0, 0, 1300, 1272, 1273, 1274,
	1270, 1271, 1283, 0, 1253, 0, 0, 0, 0, 0,
	0, 1251, 1252, 322, 323, 325, 324, 326, 327, 328,
	329, 1284, 330, 331, 0, 1282, 0, 0, 0, 1324,
	1288, 0, 0, 332, 0, 333, 334, 335, 1364, 336,
	337, 338, 339, 340, 341, 342, 742, 1337, 0, 343,
	1344, 344, 1343, 0, 1354, 345, 346, 347, 348, 349,
	350, 351, 1290, 1323, 1255, 352, 1384, 1385, 749, 0,
	353, 354, 1330, 0, 1311, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 1365, 380, 381, 382,
	1314, 1312, 1313, 1320, 1316, 1315, 1319, 383, 384, 385,
	386, 387, 1347, 388, 390, 1341, 1340, 1260, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 1332, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 1266, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	1355, 1356, 424, 1279, 319, 0, 0, 0, 0, 0,
	425, 426, 427, 1339, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 1366, 434, 435, 436,
	1352, 1353, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 1362, 0, 1289, 447, 0, 448, 449,
	450, 451, 452, 453, 454, 1325, 1326, 1329, 549, 1368,
	455, 456, 457, 0, 458, 459, 460, 461, 462, 0,
	0, 0, 320, 463, 464, 465, 0, 1367, 764, 466,
	550, 467, 1334, 1335, 0, 1295, 0, 468, 469, 472,
	1369, 1327, 1370, 471, 473, 474, 1371, 475, 0, 0,
	0, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	485, 484, 0, 487, 1363, 486, 1372, 488, 489, 1373,
	0, 490, 491, 492, 493, 494, 495, 498, 1318, 1317,
	496, 497, 499, 500, 0, 501, 502, 504, 507, 503,
	505, 506, 508, 521, 522, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 524, 0, 523,
	1374, 525, 526, 527, 528, 529, 536, 538, 539, 534,
	535, 537, 540, 541, 543, 531, 532, 533, 1375, 542,
	530, 1257, 321, 1376, 544, 545, 546, 547, 1280, 1328,
	548, 1342, 551, 552, 0, 0, 553, 0, 554, 0,
	0, 556, 557, 558, 0, 0, 559, 560, 772, 1377,
	561, 1378, 1357, 562, 563, 1267, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 0, 574, 575, 774,
	576, 577, 578, 775, 579, 580, 581, 1358, 582, 777,
	583, 584, 0, 585, 586, 587, 0, 588, 589, 590,
	591, 592, 593, 594, 595, 1338, 596, 597, 599, 598,
	600, 0, 601, 0, 602, 603, 604, 0, 0, 0,
	0, 0, 605, 606, 608, 0, 609, 610, 611, 612,
	607, 613, 614, 615, 616, 617, 618, 0, 620, 621,
	619, 622, 623, 1379, 624, 625, 626, 627, 628, 1268,
	629, 0, 630, 631, 639, 640, 641, 632, 633, 635,
	642, 634, 643, 644, 645, 646, 648, 647, 0, 650,
	651, 649, 652, 653, 654, 1321, 655, 780, 656, 636,
	637, 657, 658, 1380, 659, 660, 661, 662, 663, 664,
	665, 1336, 0, 666, 0, 667, 668, 669, 670, 671,
	672, 674, 638, 675, 680, 681, 1383, 676, 677, 678,
	679, 1359, 683, 684, 685, 686, 0, 687, 688, 1254,
	682, 673, 0, 689, 690, 691, 692, 693, 694, 0,
	695, 696, 0, 697, 1348, 1349, 1350, 1351, 0, 709,
	0, 698, 700, 701, 702, 703, 1360, 704, 1361, 1278,
	705, 706, 707, 708, 699, 710, 711, 0, 1261, 712,
	713, 714, 716, 718, 719, 715, 717, 720, 1322, 721,
	0, 0, 722, 723, 724, 790, 1345, 1382, 0, 726,
	727, 725, 728, 729, 732, 730, 731, 793, 733, 470,
	734, 735, 0, 0, 0, 0, 736, 737, 794, 738,
	739, 740, 1258, 0, 0, 0, 0, 0, 0, 1300,
	1272, 1273, 1274, 1270, 1271, 1283, 0, 1253, 0, 0,
	0, 0, 0, 0, 1251, 1252, 322, 323, 325, 324,
	326, 327, 328, 329, 1284, 330, 331, 0, 1282, 0,
	0, 0, 1324, 1288, 0, 0, 332, 0, 333, 334,
	335, 1364, 336, 337, 338, 339, 340, 341, 342, 742,
	1337, 0, 343, 1344, 344, 1343, 0, 1354, 345, 346,
	347, 348, 349, 350, 351, 1290, 1323, 1255, 352, 1384,
	1385, 749, 0, 353, 354, 1330, 0, 1311, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 1365,
	380, 381, 5481, 1314, 1312, 1313, 1320, 1316, 1315, 1319,
	383, 384, 385, 386, 387, 1347, 388, 390, 1341, 1340,
	1260, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 1332, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	1266, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 1355, 1356, 424, 1279, 319, 0, 0,
	0, 0, 0, 425, 426, 427, 1339, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 1366,
	434, 435, 436, 1352, 1353, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 1362, 0, 1289, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 1325, 1326,
	1329, 549, 1368, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 0, 0, 0, 320, 463, 464, 465, 0,
	1367, 764, 466, 550, 467, 1334, 1335, 0, 1295, 0,
	468, 469, 472, 1369, 1327, 1370, 471, 473, 474, 1371,
	475, 0, 0, 0, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 485, 484, 0, 487, 1363, 486, 1372,
	488, 489, 1373, 0, 490, 491, 492, 493, 494, 495,
	498, 1318, 1317, 496, 497, 499, 500, 0, 501, 502,
	504, 507, 503, 505, 506, 508, 521, 522, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	524, 0, 523, 1374, 525, 526, 527, 528, 529, 536,
	538, 539, 534, 535, 537, 540, 541, 543, 531, 532,
	533, 1375, 542, 530, 1257, 321, 1376, 544, 545, 546,
	547, 1280, 1328, 548, 1342, 551, 552, 0, 0, 553,
	0, 554, 0, 0, 556, 557, 558, 0, 0, 559,
	560, 772, 1377, 561, 1378, 1357, 562, 563, 1267, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 0,
	574, 575, 774, 576, 577, 578, 775, 579, 580, 581,
	1358, 582, 777, 583, 584, 0, 585, 586, 587, 0,
	588, 589, 590, 591, 592, 593, 594, 595, 1338, 596,
	597, 599, 598, 600, 0, 601, 0, 602, 603, 604,
	0, 0, 0, 0, 0, 605, 606, 608, 0, 609,
	610, 611, 612, 607, 613, 614, 615, 616, 617, 618,
	0, 620, 621, 619, 622, 623, 1379, 624, 625, 626,
	627, 628, 1268, 629, 0, 630, 631, 639, 640, 641,
	632, 633, 635, 642, 634, 643, 644, 645, 646, 648,
	647, 0, 650, 651, 649, 652, 653, 654, 1321, 655,
	780, 656, 636, 637, 657, 658, 1380, 659, 660, 661,
	662, 663, 664, 665, 1336, 0, 666, 0, 667, 668,
	669, 670, 671, 672, 674, 638, 675, 680, 681, 1383,
	676, 677, 678, 679, 1359, 683, 684, 685, 686, 0,
	687, 688, 1254, 682, 673, 0, 689, 690, 691, 692,
	693, 694, 0, 695, 696, 0, 697, 1348, 1349, 1350,
	1351, 0, 709, 0, 698, 700, 701, 702, 703, 1360,
	704, 1361, 1278, 705, 706, 707, 708, 699, 5480, 711,
	0, 1261, 712, 713, 714, 716, 718, 719, 715, 717,
	720, 1322, 721, 0, 0, 722, 723, 724, 790, 1345,
	1382, 0, 726, 727, 725, 728, 729, 732, 730, 731,
	793, 733, 470, 734, 735, 0, 0, 0, 0, 736,
	737, 794, 738, 739, 740, 1258, 0, 0, 0, 0,
	0, 0, 1300, 1272, 1273, 1274, 1270, 1271, 1283, 0,
	1253, 0, 0, 0, 0, 0, 0, 1251, 1252, 322,
	323, 325, 324, 326, 327, 328, 329, 1284, 330, 331,
	0, 1282, 0, 0, 0, 1324, 1288, 0, 0, 332,
	0, 333, 334, 335, 1364, 336, 337, 338, 339, 340,
	341, 342, 5479, 1337, 0, 343, 1344, 344, 1343, 0,
	1354, 345, 346, 347, 348, 349, 350, 351, 1290, 1323,
	1255, 352, 1384, 1385, 749, 0, 353, 354, 1330, 0,
	1311, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 1365, 380, 381, 5481, 1314, 1312, 1313, 1320,
	1316, 1315, 1319, 383, 384, 385, 386, 387, 1347, 388,
	390, 1341, 1340, 1260, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	1332, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 1266, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 1355, 1356, 424, 1279,
	319, 0, 0, 0, 0, 0, 425, 426, 427, 1339,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 1366, 434, 435, 436, 1352, 1353, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 1362,
	0, 1289, 447, 0, 448, 449, 450, 451, 452, 453,
	454, 1325, 1326, 1329, 549, 1368, 455, 456, 457, 0,
	458, 459, 460, 461, 462, 0, 0, 0, 320, 463,
	464, 465, 0, 1367, 764, 466, 550, 467, 1334, 1335,
	0, 1295, 0, 468, 469, 472, 1369, 1327, 1370, 471,
	473, 474, 1371, 475, 0, 0, 0, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 485, 484, 0, 487,
	1363, 486, 1372, 488, 489, 1373, 0, 490, 491, 492,
	493, 494, 495, 498, 1318, 1317, 496, 497, 499, 500,
	0, 501, 502, 504, 507, 503, 505, 506, 508, 521,
	522, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 524, 0, 523, 1374, 525, 526, 527,
	528, 529, 536, 538, 539, 534, 535, 537, 540, 541,
	543, 531, 532, 533, 1375, 542, 530, 1257, 321, 1376,
	544, 545, 546, 547, 1280, 1328, 548, 1342, 551, 552,
	0, 0, 553, 0, 554, 0, 0, 556, 557, 558,
	0, 0, 559, 560, 772, 1377, 561, 1378, 1357, 562,
	563, 1267, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 0, 574, 575, 774, 576, 577, 578, 775,
	579, 580, 581, 1358, 582, 777, 583, 584, 0, 585,
	586, 587, 0, 588, 589, 590, 591, 592, 593, 594,
	595, 1338, 596, 597, 599, 598, 600, 0, 601, 0,
	602, 603, 604, 0, 0, 0, 0, 0, 605, 606,
	608, 0, 609, 610, 611, 612, 607, 613, 614, 615,
	616, 617, 618, 0, 620, 621, 619, 622, 623, 1379,
	624, 625, 626, 627, 628, 1268, 629, 0, 630, 631,
	639, 640, 641, 632, 633, 635, 642, 634, 643, 644,
	645, 646, 648, 647, 0, 650, 651, 649, 652, 653,
	654, 1321, 655, 780, 656, 636, 637, 657, 658, 1380,
	659, 660, 661, 662, 663, 664, 665, 1336, 0, 666,
	0, 667, 668, 669, 670, 671, 672, 674, 638, 675,
	680, 681, 1383, 676, 677, 678, 679, 1359, 683, 684,
	685, 686, 0, 687, 688, 1254, 682, 673, 0, 689,
	690, 691, 692, 693, 694, 0, 695, 696, 0, 697,
	1348, 1349, 1350, 1351, 0, 709, 0, 698, 700, 701,
	702, 703, 1360, 704, 1361, 1278, 705, 706, 707, 708,
	699, 5480, 711, 0, 1261, 712, 713, 714, 716, 718,
	719, 715, 717, 720, 1322, 721, 0, 0, 722, 723,
	724, 790, 1345, 1382, 0, 726, 727, 725, 728, 729,
	732, 730, 731, 793, 733, 470, 734, 735, 0, 0,
	0, 0, 736, 737, 794, 738, 739, 740, 1258, 0,
	0, 0, 0, 0, 0, 1300, 1272, 1273, 1274, 1270,
	1271, 1283, 0, 1253, 0, 0, 0, 0, 0, 0,
	1251, 1252, 322, 323, 325, 324, 326, 327, 328, 329,
	1284, 330, 331, 0, 1282, 0, 0, 0, 1324, 1288,
	0, 0, 332, 0, 333, 334, 335, 1364, 336, 337,
	338, 339, 340, 341, 342, 742, 1337, 0, 343, 1344,
	344, 1343, 0, 1354, 345, 346, 347, 348, 349, 350,
	351, 1290, 1323, 1255, 352, 1384, 1385, 749, 0, 353,
	354, 1330, 0, 1311, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 1365, 380, 5054, 382, 1314,
	1312, 1313, 1320, 1316, 1315, 1319, 383, 384, 385, 386,
	387, 1347, 388, 390, 1341, 1340, 1260, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 1332, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 1266, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 1355,
	1356, 424, 1279, 319, 0, 0, 0, 0, 0, 425,
	426, 427, 1339, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 1366, 434, 435, 436, 1352,
	1353, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 1362, 0, 5055, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 1325, 1326, 1329, 549, 1368, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 320, 463, 464, 465, 0, 1367, 764, 466, 550,
	467, 1334, 1335, 0, 1295, 0, 468, 469, 472, 1369,
	1327, 1370, 471, 473, 474, 1371, 475, 0, 0, 0,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 485,
	484, 0, 487, 1363, 486, 1372, 488, 489, 1373, 0,
	490, 491, 492, 493, 494, 495, 498, 1318, 1317, 496,
	497, 499, 500, 0, 501, 502, 504, 507, 503, 505,
	506, 508, 521, 522, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 524, 0, 523, 1374,
	525, 526, 527, 528, 529, 536, 538, 539, 534, 535,
	537, 540, 541, 543, 531, 532, 533, 1375, 542, 530,
	1257, 321, 1376, 544, 545, 546, 547, 1280, 1328, 548,
	1342, 551, 552, 0, 0, 553, 0, 554, 0, 0,
	556, 557, 558, 0, 0, 559, 560, 772, 1377, 561,
	1378, 1357, 562, 563, 1267, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 0, 574, 575, 774, 576,
	577, 578, 775, 579, 580, 581, 1358, 582, 777, 583,
	584, 0, 585, 586, 587, 0, 588, 589, 590, 591,
	592, 593, 594, 595, 1338, 596, 597, 599, 598, 600,
	0, 601, 0, 602, 603, 604, 0, 0, 0, 0,
	0, 605, 606, 608, 0, 609, 610, 611, 612, 607,
	613, 614, 615, 616, 617, 618, 0, 620, 621, 619,
	622, 623, 1379, 624, 625, 626, 5053, 628, 1268, 629,
	0, 630, 631, 639, 640, 641, 632, 633, 635, 642,
	634, 643, 644, 645, 646, 648, 647, 0, 650, 651,
	649, 652, 653, 654, 1321, 655, 780, 656, 636, 637,
	657, 658, 1380, 659, 660, 661, 662, 663, 664, 665,
	1336, 0, 666, 0, 667, 668, 669, 670, 671, 672,
	674, 638, 675, 680, 681, 1383, 676, 677, 678, 679,
	1359, 683, 684, 685, 686, 0, 687, 688, 1254, 682,
	673, 0, 689, 690, 691, 692, 693, 694, 0, 695,
	696, 0, 697, 1348, 1349, 1350, 1351, 0, 709, 0,
	698, 700, 701, 702, 703, 1360, 704, 1361, 1278, 705,
	706, 707, 708, 699, 710, 711, 0, 1261, 712, 713,
	714, 716, 718, 719, 715, 717, 720, 1322, 721, 0,
	0, 722, 723, 724, 790, 1345, 1382, 0, 726, 727,
	725, 728, 729, 732, 730, 731, 793, 733, 470, 734,
	735, 0, 0, 0, 0, 736, 737, 794, 738, 739,
	740, 1258, 0, 0, 0, 0, 0, 0, 1300, 1272,
	1273, 1274, 3663, 3664, 1283, 0, 1253, 0, 0, 0,
	0, 0, 0, 1251, 1252, 322, 323, 325, 324, 326,
	327, 328, 329, 1284, 330, 331, 0, 1282, 0, 0,
	0, 1324, 1288, 0, 0, 332, 0, 333, 334, 335,
	1364, 336, 337, 338, 339, 340, 341, 342, 742, 1337,
	0, 343, 1344, 344, 1343, 0, 1354, 345, 346, 347,
	348, 349, 350, 351, 1290, 1323, 1255, 352, 1384, 1385,
	749, 0, 353, 354, 1330, 0, 1311, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 1365, 380,
	381, 382, 1314, 1312, 1313, 1320, 1316, 1315, 1319, 383,
	384, 385, 386, 387, 1347, 388, 390, 1341, 1340, 1260,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 1332, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 1266,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 1355, 1356, 424, 1279, 319, 0, 0, 0,
	0, 0, 425, 426, 427, 1339, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 1366, 434,
	435, 436, 1352, 1353, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 1362, 0, 1289, 447, 0,
	448, 449, 450, 451, 452, 453, 454, 1325, 1326, 1329,
	549, 1368, 455, 456, 457, 0, 458, 459, 460, 461,
	462, 0, 0, 0, 320, 463, 464, 465, 0, 1367,
	764, 466, 550, 467, 1334, 1335, 0, 1295, 0, 468,
	469, 472, 1369, 1327, 1370, 471, 473, 474, 1371, 475,
	0, 0, 0, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 485, 484, 0, 487, 1363, 486, 1372, 488,
	489, 1373, 0, 490, 491, 492, 493, 494, 495, 498,
	1318, 1317, 496, 497, 499, 500, 0, 501, 502, 504,
	507, 503, 505, 506, 508, 521, 522, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 524,
	0, 523, 1374, 525, 526, 527, 528, 529, 536, 538,
	539, 534, 535, 537, 540, 541, 543, 531, 532, 533,
	1375, 542, 530, 1257, 321, 1376, 544, 545, 546, 547,
	1280, 1328, 548, 1342, 551, 552, 0, 0, 553, 0,
	554, 0, 0, 556, 557, 558, 0, 0, 559, 560,
	772, 1377, 561, 1378, 1357, 562, 563, 1267, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 0, 574,
	575, 774, 576, 577, 578, 775, 579, 580, 581, 1358,
	582, 777, 583, 584, 0, 585, 586, 587, 0, 588,
	589, 590, 591, 592, 593, 594, 595, 1338, 596, 597,
	599, 598, 600, 0, 601, 0, 602, 603, 604, 0,
	0, 0, 0, 0, 605, 606, 608, 0, 609, 610,
	611, 612, 607, 613, 614, 615, 616, 617, 618, 0,
	620, 621, 619, 622, 623, 1379, 624, 625, 626, 627,
	628, 1268, 629, 0, 630, 631, 639, 640, 641, 632,
	633, 635, 642, 634, 643, 644, 645, 646, 648, 647,
	0, 650, 651, 649, 652, 653, 654, 1321, 655, 780,
	656, 636, 637, 657, 658, 1380, 659, 660, 661, 662,
	663, 664, 665, 1336, 0, 666, 0, 667, 668, 669,
	670, 671, 672, 674, 638, 675, 680, 681, 1383, 676,
	677, 678, 679, 1359, 683, 684, 685, 686, 0, 687,
	688, 1254, 682, 673, 0, 689, 690, 691, 692, 693,
	694, 0, 695, 696, 0, 697, 1348, 1349, 1350, 1351,
	0, 709, 0, 698, 700, 701, 702, 703, 1360, 704,
	1361, 1278, 705, 706, 707, 708, 699, 710, 711, 0,
	1261, 712, 713, 714, 716, 718, 719, 715, 717, 720,
	1322, 721, 0, 0, 722, 723, 724, 790, 1345, 1382,
	0, 726, 727, 725, 728, 729, 732, 730, 731, 793,
	733, 470, 734, 735, 0, 0, 0, 0, 736, 737,
	794, 738, 739, 740, 1258, 0, 0, 0, 0, 0,
	0, 1300, 1272, 1273, 1274, 3661, 3662, 1283, 0, 1253,
	0, 0, 0, 0, 0, 0, 1251, 1252, 322, 323,
	325, 324, 326, 327, 328, 329, 1284, 330, 331, 0,
	1282, 0, 0, 0, 1324, 1288, 0, 0, 332, 0,
	333, 334, 335, 1364, 336, 337, 338, 339, 340, 341,
	342, 742, 1337, 0, 343, 1344, 344, 1343, 0, 1354,
	345, 346, 347, 348, 349, 350, 351, 1290, 1323, 1255,
	352, 1384, 1385, 749, 0, 353, 354, 1330, 0, 1311,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 1365, 380, 381, 382, 1314, 1312, 1313, 1320, 1316,
	1315, 1319, 383, 384, 385, 386, 387, 1347, 388, 390,
	1341, 1340, 1260, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 1332,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 1266, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 1355, 1356, 424, 1279, 319,
	0, 0, 0, 0, 0, 425, 426, 427, 1339, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 1366, 434, 435, 436, 1352, 1353, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 1362, 0,
	1289, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	1325, 1326, 1329, 549, 1368, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 0, 0, 0, 320, 463, 464,
	465, 0, 1367, 764, 466, 550, 467, 1334, 1335, 0,
	1295, 0, 468, 469, 472, 1369, 1327, 1370, 471, 473,
	474, 1371, 475, 0, 0, 0, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 485, 484, 0, 487, 1363,
	486, 1372, 488, 489, 1373, 0, 490, 491, 492, 493,
	494, 495, 498, 1318, 1317, 496, 497, 499, 500, 0,
	501, 502, 504, 507, 503, 505, 506, 508, 521, 522,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 524, 0, 523, 1374, 525, 526, 527, 528,
	529, 536, 538, 539, 534, 535, 537, 540, 541, 543,
	531, 532, 533, 1375, 542, 530, 1257, 321, 1376, 544,
	545, 546, 547, 1280, 1328, 548, 1342, 551, 552, 0,
	0, 553, 0, 554, 0, 0, 556, 557, 558, 0,
	0, 559, 560, 772, 1377, 561, 1378, 1357, 562, 563,
	1267, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 0, 574, 575, 774, 576, 577, 578, 775, 579,
	580, 581, 1358, 582, 777, 583, 584, 0, 585, 586,
	587, 0, 588, 589, 590, 591, 592, 593, 594, 595,
	1338, 596, 597, 599, 598, 600, 0, 601, 0, 602,
	603, 604, 0, 0, 0, 0, 0, 605, 606, 608,
	0, 609, 610, 611, 612, 607, 613, 614, 615, 616,
	617, 618, 0, 620, 621, 619, 622, 623, 1379, 624,
	625, 626, 627, 628, 1268, 629, 0, 630, 631, 639,
	640, 641, 632, 633, 635, 642, 634, 643, 644, 645,
	646, 648, 647, 0, 650, 651, 649, 652, 653, 654,
	1321, 655, 780, 656, 636, 637, 657, 658, 1380, 659,
	660, 661, 662, 663, 664, 665, 1336, 0, 666, 0,
	667, 668, 669, 670, 671, 672, 674, 638, 675, 680,
	681, 1383, 676, 677, 678, 679, 1359, 683, 684, 685,
	686, 0, 687, 688, 1254, 682, 673, 0, 689, 690,
	691, 692, 693, 694, 0, 695, 696, 0, 697, 1348,
	1349, 1350, 1351, 0, 709, 0, 698, 700, 701, 702,
	703, 1360, 704, 1361, 1278, 705, 706, 707, 708, 699,
	710, 711, 0, 1261, 712, 713, 714, 716, 718, 719,
	715, 717, 720, 1322, 721, 0, 0, 722, 723, 724,
	790, 1345, 1382, 0, 726, 727, 725, 728, 729, 732,
	730, 731, 793, 733, 470, 734, 735, 0, 0, 0,
	0, 736, 737, 794, 738, 739, 740, 1258, 0, 0,
	0, 0, 0, 0, 1300, 1272, 1273, 1274, 1270, 1271,
	1283, 0, 1253, 0, 0, 0, 0, 0, 0, 1251,
	1252, 322, 323, 325, 324, 326, 327, 328, 329, 1284,
	330, 331, 0, 1282, 0, 0, 0, 1324, 1288, 0,
	0, 332, 0, 333, 334, 335, 1364, 336, 337, 338,
	339, 340, 341, 342, 742, 1337, 0, 343, 1344, 344,
	1343, 0, 1354, 345, 346, 347, 348, 349, 350, 351,
	1290, 1323, 1255, 352, 1384, 1385, 749, 0, 353, 354,
	1330, 0, 1311, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 1365, 380, 381, 382, 1314, 1312,
	1313, 1320, 1316, 1315, 1319, 383, 384, 385, 386, 387,
	1347, 388, 390, 1341, 1340, 1260, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 1332, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 1266, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 1355, 1356,
	424, 1279, 319, 0, 0, 0, 0, 0, 425, 426,
	427, 1339, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 1366, 434, 435, 436, 1352, 1353,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 1362, 0, 1289, 447, 0, 448, 449, 450, 451,
	452, 453, 454, 1325, 1326, 1329, 549, 1368, 455, 456,
	457, 0, 458, 459, 460, 461, 462, 0, 0, 0,
	320, 463, 464, 465, 0, 1367, 764, 466, 550, 467,
	1334, 1335, 0, 1295, 0, 468, 469, 472, 1369, 1327,
	1370, 471, 473, 474, 1371, 475, 0, 0, 0, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 485, 484,
	0, 487, 1363, 486, 1372, 488, 489, 1373, 0, 490,
	491, 492, 493, 494, 495, 498, 1318, 1317, 496, 497,
	499, 500, 0, 501, 502, 504, 507, 503, 505, 506,
	508, 521, 522, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 524, 0, 523, 1374, 525,
	526, 527, 528, 529, 536, 538, 539, 534, 535, 537,
	540, 541, 543, 531, 532, 533, 1375, 542, 530, 1257,
	321, 1376, 544, 545, 546, 547, 1280, 1328, 548, 1342,
	551, 552, 0, 0, 553, 0, 554, 0, 0, 556,
	557, 558, 0, 0, 559, 560, 772, 1377, 561, 1378,
	1357, 562, 563, 1267, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 0, 574, 575, 774, 576, 577,
	578, 775, 579, 580, 581, 1358, 582, 777, 583, 584,
	0, 585, 586, 587, 0, 588, 589, 590, 591, 592,
	593, 594, 595, 1338, 596, 597, 599, 598, 600, 0,
	601, 0, 602, 603, 604, 0, 0, 0, 0, 0,
	605, 606, 608, 0, 609, 610, 611, 612, 607, 613,
	614, 615, 616, 617, 618, 0, 620, 621, 619, 622,
	623, 1379, 624, 625, 626, 627, 628, 1268, 629, 0,
	630, 631, 639, 640, 641, 632, 633, 635, 642, 634,
	643, 644, 645, 646, 648, 647, 0, 650, 651, 649,
	652, 653, 654, 1321, 655, 780, 656, 636, 637, 657,
	658, 1380, 659, 660, 661, 662, 663, 664, 665, 1336,
	0, 666, 0, 667, 668, 669, 670, 671, 672, 674,
	638, 675, 680, 681, 1383, 676, 677, 678, 679, 1359,
	683, 684, 685, 686, 0, 687, 688, 1254, 682, 673,
	0, 689, 690, 691, 692, 693, 694, 0, 695, 696,
	0, 697, 1348, 1349, 1350, 1351, 0, 709, 0, 698,
	700, 701, 702, 703, 1360, 704, 1361, 1278, 705, 706,
	707, 708, 699, 710, 711, 0, 1261, 712, 713, 714,
	716, 718, 719, 715, 717, 720, 1322, 721, 0, 0,
	722, 723, 724, 790, 1345, 1382, 0, 726, 727, 725,
	728, 729, 732, 730, 731, 793, 733, 470, 734, 735,
	0, 0, 0, 0, 736, 737, 794, 738, 739, 740,
	1258, 0, 0, 0, 0, 0, 0, 1300, 1272, 1273,
	1274, 1270, 1271, 1283, 0, 1253, 0, 0, 0, 0,
	0, 0, 2803, 2804, 322, 323, 325, 324, 326, 327,
	328, 329, 1284, 330, 331, 0, 1282, 0, 0, 0,
	1324, 1288, 0, 0, 332, 0, 333, 334, 335, 1364,
	336, 337, 338, 339, 340, 341, 342, 742, 1337, 0,
	343, 1344, 344, 1343, 0, 1354, 345, 346, 347, 348,
	349, 350, 351, 1290, 1323, 0, 352, 1384, 1385, 749,
	0, 353, 354, 1330, 0, 1311, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 1365, 380, 381,
	382, 1314, 1312, 1313, 1320, 1316, 1315, 1319, 383, 384,
	385, 386, 387, 1347, 388, 390, 1341, 1340, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 1332, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 1266, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 1355, 1356, 424, 1279, 319, 0, 0, 0, 0,
	0, 425, 426, 427, 1339, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 1366, 434, 435,
	436, 1352, 1353, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 1362, 0, 1289, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 1325, 1326, 1329, 549,
	1368, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 320, 463, 464, 465, 0, 1367, 764,
	466, 550, 467, 1334, 1335, 0, 1295, 0, 468, 469,
	472, 1369, 1327, 1370, 471, 473, 474, 1371, 475, 0,
	0, 0, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 485, 484, 0, 487, 1363, 486, 1372, 488, 489,
	1373, 0, 490, 491, 492, 493, 494, 495, 498, 1318,
	1317, 496, 497, 499, 500, 0, 501, 502, 504, 507,
	503, 505, 506, 508, 521, 522, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 524, 0,
	523, 1374, 525, 526, 527, 528, 529, 536, 538, 539,
	534, 535, 537, 540, 541, 543, 531, 532, 533, 1375,
	542, 530, 0, 321, 1376, 544, 545, 546, 547, 1280,
	1328, 548, 1342, 551, 552, 0, 0, 553, 0, 554,
	0, 0, 556, 557, 558, 0, 0, 559, 560, 772,
	1377, 561, 1378, 1357, 562, 563, 1267, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 0, 574, 575,
	774, 576, 577, 578, 775, 579, 580, 581, 1358, 582,
	777, 583, 584, 0, 585, 586, 587, 0, 588, 589,
	590, 591, 592, 593, 594, 595, 1338, 596, 597, 599,
	598, 600, 0, 601, 0, 602, 603, 604, 0, 0,
	0, 0, 0, 605, 606, 608, 0, 609, 610, 611,
	612, 607, 613, 614, 615, 616, 617, 618, 0, 620,
	621, 619, 622, 623, 1379, 624, 625, 626, 627, 628,
	1268, 629, 0, 630, 631, 639, 640, 641, 632, 633,
	635, 642, 634, 643, 644, 645, 646, 648, 647, 0,
	650, 651, 649, 652, 653, 654, 1321, 655, 780, 656,
	636, 637, 657, 658, 1380, 659, 660, 661, 662, 663,
	664, 665, 1336, 0, 666, 0, 667, 668, 669, 670,
	671, 672, 674, 638, 675, 680, 681, 1383, 676, 677,
	678, 679, 1359, 683, 684, 685, 686, 0, 687, 688,
	0, 682, 673, 0, 689, 690, 691, 692, 693, 694,
	0, 695, 696, 0, 697, 1348, 1349, 1350, 1351, 0,
	709, 0, 698, 700, 701, 702, 703, 1360, 704, 1361,
	1278, 705, 706, 707, 708, 699, 710, 711, 0, 0,
	712, 713, 714, 716, 718, 719, 715, 717, 720, 1322,
	721, 0, 0, 722, 723, 724, 790, 1345, 1382, 0,
	726, 727, 725, 728, 729, 732, 730, 731, 793, 733,
	470, 734, 735, 0, 0, 0, 0, 736, 737, 794,
	738, 739, 740, 0, 0, 0, 0, 0, 0, 0,
	1300, 1272, 1273, 1274, 1270, 1271, 1283, 0, 3064, 0,
	0, 0, 0, 0, 0, 3062, 3063, 322, 323, 325,
	324, 326, 327, 328, 329, 1284, 330, 331, 0, 1282,
	0, 0, 0, 1324, 1288, 0, 0, 332, 0, 333,
	334, 335, 1364, 336, 337, 338, 339, 340, 341, 342,
	742, 1337, 0, 343, 1344, 344, 1343, 0, 1354, 345,
	346, 347, 348, 349, 350, 351, 1290, 1323, 0, 352,
	1384, 1385, 749, 0, 353, 354, 1330, 0, 1311, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	1365, 380, 381, 382, 1314, 1312, 1313, 1320, 1316, 1315,
	1319, 383, 384, 385, 386, 387, 1347, 388, 390, 1341,
	1340, 0, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 1332, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 1266, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 1355, 1356, 424, 1279, 319, 0,
	0, 0, 0, 0, 425, 426, 427, 1339, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	1366, 434, 435, 436, 1352, 1353, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 1362, 0, 1289,
	447, 0, 448, 449, 450, 451, 452, 453, 454, 1325,
	1326, 1329, 549, 1368, 455, 456, 457, 0, 458, 459,
	460, 461, 462, 0, 0, 0, 320, 463, 464, 465,
	0, 1367, 764, 466, 550, 467, 1334, 1335, 0, 1295,
	0, 468, 469, 472, 1369, 1327, 1370, 471, 473, 474,
	1371, 475, 0, 0, 0, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 485, 484, 0, 487, 1363, 486,
	1372, 488, 489, 1373, 0, 490, 491, 492, 493, 494,
	495, 498, 1318, 1317, 496, 497, 499, 500, 0, 501,
	502, 504, 507, 503, 505, 506, 508, 521, 522, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 524, 0, 523, 1374, 525, 526, 527, 528, 529,
	536, 538, 539, 534, 535, 537, 540, 541, 543, 531,
	532, 533, 1375, 542, 530, 0, 321, 1376, 544, 545,
	546, 547, 1280, 1328, 548, 1342, 551, 552, 0, 0,
	553, 0, 554, 0, 0, 556, 557, 558, 0, 0,
	559, 560, 772, 1377, 561, 1378, 1357, 562, 563, 555,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	0, 574, 575, 774, 576, 577, 578, 775, 579, 580,
	581, 1358, 582, 777, 583, 584, 0, 585, 586, 587,
	0, 588, 589, 590, 591, 592, 593, 594, 595, 1338,
	596, 597, 599, 598, 600, 0, 601, 0, 602, 603,
	604, 0, 0, 0, 0, 0, 605, 606, 608, 0,
	609, 610, 611, 612, 607, 613, 614, 615, 616, 617,
	618, 0, 620, 621, 619, 622, 623, 1379, 624, 625,
	626, 627, 628, 3656, 3657, 0, 630, 631, 639, 640,
	641, 632, 633, 635, 642, 634, 643, 644, 645, 646,
	648, 647, 0, 650, 651, 649, 652, 653, 654, 1321,
	655, 780, 656, 636, 637, 657, 658, 1380, 659, 660,
	661, 662, 663, 664, 665, 1336, 0, 666, 0, 667,
	668, 669, 670, 671, 672, 674, 638, 675, 680, 681,
	1383, 676, 677, 678, 679, 1359, 683, 684, 685, 686,
	0, 687, 688, 0, 682, 673, 0, 689, 690, 691,
	692, 693, 694, 0, 695, 696, 0, 697, 1348, 1349,
	1350, 1351, 0, 709, 0, 698, 700, 701, 702, 703,
	1360, 704, 1361, 1278, 705, 706, 707, 708, 699, 710,
	711, 0, 0, 712, 713, 714, 716, 718, 719, 715,
	717, 720, 1322, 721, 0, 0, 722, 723, 724, 790,
	1345, 1382, 0, 726, 727, 725, 728, 729, 732, 730,
	731, 793, 733, 470, 734, 735, 0, 0, 0, 0,
	736, 737, 794, 738, 739, 740, 0, 0, 0, 0,
	0, 0, 0, 1300, 1272, 1273, 1274, 1270, 1271, 1283,
	0, 0, 0, 0, 0, 0, 0, 0, 2387, 2388,
	322, 323, 325, 324, 326, 327, 328, 329, 1284, 330,
	331, 0, 1282, 0, 0, 0, 1324, 1288, 0, 0,
	332, 0, 333, 334, 335, 1364, 336, 337, 338, 339,
	340, 341, 342, 0, 1337, 0, 343, 1344, 344, 1343,
	0, 1354, 345, 346, 347, 348, 349, 350, 351, 1290,
	1323, 1255, 352, 1384, 1385, 749, 0, 353, 354, 1330,
	0, 1311, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 1365, 380, 381, 5481, 1314, 1312, 1313,
	1320, 1316, 1315, 1319, 383, 384, 385, 386, 387, 1347,
	388, 390, 1341, 1340, 1260, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 1332, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 1266, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 1355, 1356, 424,
	1279, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	1339, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 1366, 434, 435, 436, 1352, 1353, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	1362, 0, 1289, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 1325, 1326, 1329, 549, 0, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 320,
	463, 464, 465, 0, 1367, 764, 466, 550, 467, 1334,
	1335, 0, 1295, 0, 468, 469, 472, 0, 1327, 0,
	471, 473, 474, 1371, 475, 0, 0, 0, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 485, 484, 0,
	487, 1363, 486, 1372, 488, 489, 0, 0, 490, 491,
	492, 493, 494, 495, 498, 1318, 1317, 496, 497, 499,
	500, 0, 501, 502, 504, 507, 503, 505, 506, 508,
	521, 522, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 524, 0, 523, 1374, 525, 526,
	527, 528, 529, 536, 538, 539, 534, 535, 537, 540,
	541, 543, 531, 532, 533, 1375, 542, 530, 1257, 321,
	0, 544, 545, 546, 547, 1280, 1328, 548, 1342, 551,
	552, 0, 0, 553, 0, 554, 0, 0, 556, 557,
	558, 0, 0, 559, 560, 772, 1377, 561, 1378, 1357,
	562, 563, 1267, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 0, 574, 575, 774, 576, 577, 578,
	775, 579, 580, 581, 1358, 582, 777, 583, 584, 0,
	585, 586, 587, 0, 588, 589, 590, 591, 592, 593,
	594, 595, 1338, 596, 597, 599, 598, 600, 0, 601,
	0, 602, 603, 604, 0, 0, 0, 0, 0, 605,
	606, 608, 0, 609, 610, 611, 612, 607, 613, 614,
	615, 616, 617, 618, 0, 620, 621, 619, 622, 623,
	1379, 624, 625, 626, 627, 628, 1268, 629, 0, 630,
	631, 639, 640, 641, 632, 633, 635, 642, 634, 643,
	644, 645, 646, 648, 647, 0, 650, 651, 649, 652,
	653, 654, 1321, 655, 780, 656, 636, 637, 657, 658,
	0, 659, 660, 661, 662, 663, 664, 665, 1336, 0,
	666, 0, 667, 668, 669, 670, 671, 672, 674, 638,
	675, 680, 681, 1383, 676, 677, 678, 679, 1359, 683,
	684, 685, 686, 0, 687, 688, 1254, 682, 673, 0,
	689, 690, 691, 692, 693, 694, 0, 695, 696, 0,
	697, 1348, 1349, 1350, 1351, 0, 709, 0, 698, 700,
	701, 702, 703, 1360, 704, 1361, 1278, 705, 706, 707,
	708, 699, 5480, 711, 0, 1261, 712, 713, 714, 716,
	718, 719, 715, 717, 720, 1322, 721, 0, 0, 722,
	723, 724, 790, 1345, 1382, 0, 726, 727, 725, 728,
	729, 732, 730, 731, 793, 733, 470, 734, 735, 0,
	0, 0, 0, 736, 737, 794, 738, 739, 740, 0,
	0, 0, 0, 0, 3083, 0, 1300, 1272, 1273, 1274,
	1270, 1271, 1283, 0, 0, 0, 0, 0, 0, 0,
	0, 1251, 1252, 322, 323, 325, 324, 326, 327, 328,
	329, 1284, 330, 331, 0, 1282, 0, 0, 0, 1324,
	1288, 0, 0, 332, 0, 333, 334, 335, 1364, 336,
	337, 338, 339, 340, 341, 342, 742, 1337, 0, 343,
	1344, 344, 1343, 0, 1354, 345, 346, 347, 348, 349,
	350, 351, 0, 1323, 0, 352, 1384, 1385, 749, 0,
	353, 354, 1330, 0, 1311, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 1365, 380, 381, 382,
	1314, 1312, 1313, 1320, 1316, 1315, 1319, 383, 384, 385,
	386, 387, 1347, 388, 390, 1341, 1340, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 1332, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 753, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	1355, 1356, 424, 1279, 319, 0, 0, 0, 0, 0,
	425, 426, 427, 1339, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 1366, 434, 435, 436,
	1352, 1353, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 1362, 0, 1289, 447, 0, 448, 449,
	450, 451, 452, 453, 454, 1325, 1326, 1329, 549, 1368,
	455, 456, 457, 0, 458, 459, 460, 461, 462, 0,
	0, 0, 320, 463, 464, 465, 0, 1367, 764, 466,
	550, 467, 1334, 1335, 0, 1295, 0, 468, 469, 472,
	1369, 1327, 1370, 471, 473, 474, 1371, 475, 0, 0,
	0, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	485, 484, 0, 487, 1363, 486, 1372, 488, 489, 1373,
	0, 490, 491, 492, 493, 494, 495, 498, 1318, 1317,
	496, 497, 499, 500, 0, 501, 502, 504, 507, 503,
	505, 506, 508, 521, 522, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 524, 0, 523,
	1374, 525, 526, 527, 528, 529, 536, 538, 539, 534,
	535, 537, 540, 541, 543, 531, 532, 533, 1375, 542,
	530, 0, 321, 1376, 544, 545, 546, 547, 1280, 1328,
	548, 1342, 551, 552, 0, 0, 553, 0, 554, 0,
	0, 556, 557, 558, 0, 0, 559, 560, 772, 1377,
	561, 1378, 1357, 562, 563, 555, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 0, 574, 575, 774,
	576, 577, 578, 775, 579, 580, 581, 1358, 582, 777,
	583, 584, 0, 585, 586, 587, 0, 588, 589, 590,
	591, 592, 593, 594, 595, 1338, 596, 597, 599, 598,
	600, 0, 601, 0, 602, 603, 604, 0, 0, 0,
	0, 0, 605, 606, 608, 0, 609, 610, 611, 612,
	607, 613, 614, 615, 616, 617, 618, 0, 620, 621,
	619, 622, 623, 1379, 624, 625, 626, 627, 628, 1268,
	629, 0, 630, 631, 639, 640, 641, 632, 633, 635,
	642, 634, 643, 644, 645, 646, 648, 647, 0, 650,
	651, 649, 652, 653, 654, 1321, 655, 780, 656, 636,
	637, 657, 658, 1380, 659, 660, 661, 662, 663, 664,
	665, 1336, 0, 666, 0, 667, 668, 669, 670, 671,
	672, 674, 638, 675, 680, 681, 1383, 676, 677, 678,
	679, 1359, 683, 684, 685, 686, 0, 687, 688, 0,
	682, 673, 0, 689, 690, 691, 692, 693, 694, 0,
	695, 696, 0, 697, 1348, 1349, 1350, 1351, 0, 709,
	0, 698, 700, 701, 702, 703, 1360, 704, 1361, 1278,
	705, 706, 707, 708, 699, 710, 711, 0, 0, 712,
	713, 714, 716, 718, 719, 715, 717, 720, 1322, 721,
	0, 0, 722, 723, 724, 790, 1345, 1382, 0, 726,
	727, 725, 728, 729, 732, 730, 731, 793, 733, 470,
	734, 735, 0, 0, 0, 0, 736, 737, 794, 738,
	739, 740, 0, 0, 1721, 0, 1300, 1272, 1273, 1274,
	1270, 1271, 1283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 1284, 0, 0, 0, 1282, 1324,
	1288, 0, 0, 332, 0, 333, 334, 335, 1364, 336,
	337, 338, 339, 340, 341, 342, 742, 1337, 0, 343,
	1344, 344, 1343, 0, 1354, 345, 346, 347, 348, 349,
	350, 351, 0, 1323, 0, 352, 1384, 1385, 749, 0,
	353, 354, 1330, 0, 1311, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 1365, 380, 381, 382,
	1314, 1312, 1313, 1320, 1316, 1315, 1319, 383, 384, 385,
	386, 387, 1347, 388, 390, 1341, 1340, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 1332, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 753, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	1355, 1356, 424, 1279, 319, 0, 0, 0, 0, 0,
	425, 426, 427, 1339, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 1366, 434, 435, 436,
	1352, 1353, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 1362, 0, 1289, 447, 0, 448, 449,
	450, 451, 452, 453, 454, 1325, 1326, 1329, 549, 1368,
	455, 456, 457, 0, 458, 459, 460, 461, 462, 0,
	0, 0, 320, 463, 464, 465, 0, 1367, 764, 466,
	550, 467, 1334, 1335, 0, 1295, 0, 468, 469, 472,
	1369, 1327, 1370, 471, 473, 474, 1371, 475, 0, 0,
	0, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	485, 484, 0, 487, 1363, 486, 1372, 488, 489, 1373,
	0, 490, 491, 492, 493, 494, 495, 498, 1318, 1317,
	496, 497, 499, 500, 0, 501, 502, 504, 507, 503,
	505, 506, 508, 521, 522, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 524, 0, 523,
	1374, 525, 526, 527, 528, 529, 536, 538, 539, 534,
	535, 537, 540, 541, 543, 531, 532, 533, 1375, 542,
	530, 0, 321, 1376, 544, 545, 546, 547, 1280, 1328,
	548, 1342, 551, 552, 0, 0, 553, 0, 554, 0,
	0, 556, 557, 558, 0, 0, 559, 560, 772, 1377,
	561, 1378, 1357, 562, 563, 555, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 0, 574, 575, 774,
	576, 577, 578, 775, 579, 580, 581, 1358, 582, 777,
	583, 584, 0, 585, 586, 587, 0, 588, 589, 590,
	591, 592, 593, 594, 595, 1338, 596, 597, 599, 598,
	600, 0, 601, 0, 602, 603, 604, 0, 0, 0,
	0, 0, 605, 606, 608, 0, 609, 610, 611, 612,
	607, 613, 614, 615, 616, 617, 618, 0, 620, 621,
	619, 622, 623, 1379, 624, 625, 626, 627, 628, 1268,
	629, 0, 630, 631, 639, 640, 641, 632, 633, 635,
	642, 634, 643, 644, 645, 646, 648, 647, 0, 650,
	651, 649, 652, 653, 654, 1321, 655, 780, 656, 636,
	637, 657, 658, 1380, 659, 660, 661, 662, 663, 664,
	665, 1336, 0, 666, 0, 667, 668, 669, 670, 671,
	672, 674, 638, 675, 680, 681, 1383, 676, 677, 678,
	679, 1359, 683, 684, 685, 686, 0, 687, 688, 0,
	682, 673, 0, 689, 690, 691, 692, 693, 694, 0,
	695, 696, 0, 697, 1348, 1349, 1350, 1351, 0, 709,
	0, 698, 700, 701, 702, 703, 1360, 704, 1361, 1278,
	705, 706, 707, 708, 699, 710, 711, 0, 0, 712,
	713, 714, 716, 718, 719, 715, 717, 720, 1322, 721,
	0, 0, 722, 723, 724, 790, 1345, 1382, 0, 726,
	727, 725, 728, 729, 732, 730, 731, 793, 733, 470,
	734, 735, 0, 0, 0, 0, 736, 737, 794, 738,
	739, 740, 1242, 0, 1423, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 325, 324, 326, 327, 328, 329, 0,
	330, 331, 0, 0, 1284, 0, 0, 1324, 1282, 0,
	0, 332, 0, 333, 334, 335, 1364, 336, 337, 338,
	339, 340, 341, 342, 742, 743, 0, 343, 744, 344,
	745, 0, 746, 345, 346, 347, 348, 349, 350, 351,
	0, 1323, 0, 352, 747, 748, 749, 0, 353, 354,
	1330, 0, 1311, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 1365, 380, 381, 382, 1314, 1312,
	1313, 1320, 1316, 1315, 1319, 383, 384, 385, 386, 387,
	0, 388, 390, 751, 752, 0, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 753, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 1355, 1356,
	424, 0, 319, 0, 0, 0, 0, 0, 425, 426,
	427, 756, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 1366, 434, 435, 436, 757, 758,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 1362, 0, 760, 447, 0, 448, 449, 450, 451,
	452, 453, 454, 1325, 1326, 1329, 549, 1368, 455, 456,
	457, 0, 458, 459, 460, 461, 462, 0, 0, 0,
	320, 463, 464, 465, 0, 1367, 764, 466, 550, 467,
	765, 766, 0, 767, 0, 468, 469, 472, 1369, 1327,
	1370, 471, 473, 474, 1371, 475, 0, 0, 0, 476,
	477, 478, 479, 480, 481, 482, 1409, 483, 485, 484,
	0, 487, 1363, 486, 1372, 488, 489, 1373, 0, 490,
	491, 492, 493, 494, 495, 498, 1318, 1317, 496, 497,
	499, 500, 0, 501, 502, 504, 507, 503, 505, 506,
	508, 521, 522, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 524, 0, 523, 1374, 525,
	526, 527, 528, 529, 536, 538, 539, 534, 535, 537,
	540, 541, 543, 531, 532, 533, 1375, 542, 530, 0,
	321, 1376, 544, 545, 546, 547, 0, 1328, 548, 771,
	551, 552, 0, 0, 553, 0, 554, 0, 1415, 556,
	557, 558, 0, 0, 559, 560, 772, 1377, 561, 1378,
	1357, 562, 563, 555, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 0, 574, 575, 774, 576, 577,
	578, 775, 579, 580, 581, 1358, 582, 777, 583, 584,
	0, 585, 586, 587, 0, 588, 589, 590, 591, 592,
	593, 594, 595, 778, 596, 597, 599, 598, 600, 0,
	601, 0, 602, 603, 604, 0, 0, 0, 0, 0,
	605, 606, 608, 0, 609, 610, 611, 612, 607, 613,
	614, 615, 616, 617, 618, 0, 620, 621, 619, 622,
	623, 1379, 624, 625, 626, 627, 628, 779, 1417, 0,
	630, 631, 639, 640, 641, 632, 633, 635, 642, 634,
	643, 644, 645, 646, 648, 647, 275, 650, 651, 649,
	652, 653, 654, 1321, 655, 780, 656, 636, 637, 657,
	658, 1380, 659, 660, 661, 662, 663, 664, 665, 781,
	0, 666, 0, 667, 668, 669, 670, 671, 672, 674,
	638, 675, 680, 681, 782, 676, 677, 678, 679, 1359,
	683, 684, 685, 686, 0, 687, 688, 0, 682, 673,
	277, 689, 690, 691, 692, 693, 694, 0, 695, 696,
	0, 697, 784, 785, 786, 787, 0, 709, 0, 698,
	700, 701, 702, 703, 1360, 704, 1361, 0, 705, 706,
	707, 708, 699, 710, 711, 0, 0, 712, 713, 714,
	716, 718, 719, 715, 717, 720, 1322, 721, 0, 0,
	722, 723, 724, 1842, 791, 792, 0, 726, 727, 725,
	728, 729, 732, 730, 731, 793, 733, 470, 734, 735,
	0, 0, 0, 269, 736, 737, 794, 738, 739, 740,
	1423, 0, 270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 325,
	324, 326, 327, 328, 329, 0, 330, 331, 0, 0,
	1413, 0, 2212, 1324, 0, 0, 0, 332, 0, 333,
	334, 335, 1364, 336, 337, 338, 339, 340, 341, 342,
	742, 743, 0, 343, 744, 344, 745, 0, 746, 345,
	346, 347, 348, 349, 350, 351, 0, 1323, 0, 352,
	747, 748, 749, 0, 353, 354, 1330, 0, 1311, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	1365, 380, 381, 382, 1314, 1312, 1313, 1320, 1316, 1315,
	1319, 383, 384, 385, 386, 387, 0, 388, 390, 751,
	752, 0, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 753, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 1355, 1356, 424, 0, 319, 0,
	0, 0, 0, 0, 425, 426, 427, 756, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	1366, 434, 435, 436, 757, 758, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 1362, 0, 760,
	447, 0, 448, 449, 450, 451, 452, 453, 454, 1325,
	1326, 1329, 549, 1368, 455, 456, 457, 0, 458, 459,
	460, 461, 462, 0, 0, 0, 320, 463, 464, 465,
	0, 1367, 764, 466, 550, 467, 765, 766, 0, 767,
	0, 468, 469, 472, 1369, 1327, 1370, 471, 473, 474,
	1371, 475, 0, 0, 0, 476, 477, 478, 479, 480,
	481, 482, 1409, 483, 485, 484, 0, 487, 1363, 486,
	1372, 488, 489, 1373, 0, 490, 491, 492, 493, 494,
	495, 498, 1318, 1317, 496, 497, 499, 500, 0, 501,
	502, 504, 507, 503, 505, 506, 508, 521, 522, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 524, 0, 523, 1374, 525, 526, 527, 528, 529,
	536, 538, 539, 534, 535, 537, 540, 541, 543, 531,
	532, 533, 1375, 542, 530, 0, 321, 1376, 544, 545,
	546, 547, 0, 1328, 548, 771, 551, 552, 0, 0,
	553, 0, 554, 0, 1415, 556, 557, 558, 0, 0,
	559, 560, 772, 1377, 561, 1378, 1357, 562, 563, 555,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	0, 574, 575, 774, 576, 577, 578, 775, 579, 580,
	581, 1358, 582, 777, 583, 584, 0, 585, 586, 587,
	0, 588, 589, 590, 591, 592, 593, 594, 595, 778,
	596, 597, 599, 598, 600, 0, 601, 0, 602, 603,
	604, 0, 0, 0, 0, 0, 605, 606, 608, 0,
	609, 610, 611, 612, 607, 613, 614, 615, 616, 617,
	618, 0, 620, 621, 619, 622, 623, 1379, 624, 625,
	626, 627, 628, 779, 1417, 0, 630, 631, 639, 640,
	641, 632, 633, 635, 642, 634, 643, 644, 645, 646,
	648, 647, 275, 650, 651, 649, 652, 653, 654, 1321,
	655, 780, 656, 636, 637, 657, 658, 1380, 659, 660,
	661, 662, 663, 664, 665, 781, 0, 666, 0, 667,
	668, 669, 670, 671, 672, 674, 638, 675, 680, 681,
	782, 676, 677, 678, 679, 1359, 683, 684, 685, 686,
	0, 687, 688, 0, 682, 673, 277, 689, 690, 691,
	692, 693, 694, 0, 695, 696, 0, 697, 784, 785,
	786, 787, 0, 709, 0, 698, 700, 701, 702, 703,
	1360, 704, 1361, 0, 705, 706, 707, 708, 699, 710,
	711, 0, 0, 712, 713, 714, 716, 718, 719, 715,
	717, 720, 1322, 721, 0, 0, 722, 723, 724, 1842,
	791, 792, 0, 726, 727, 725, 728, 729, 732, 730,
	731, 793, 733, 470, 734, 735, 0, 0, 0, 269,
	736, 737, 794, 738, 739, 740, 0, 0, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3823, 0, 1423, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1413, 0, 2212, 322,
	323, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	0, 0, 0, 0, 0, 1324, 0, 0, 0, 332,
	0, 333, 334, 335, 1364, 336, 337, 338, 339, 340,
	341, 342, 742, 743, 0, 343, 744, 344, 745, 0,
	746, 345, 346, 347, 348, 349, 350, 351, 0, 1323,
	0, 352, 747, 748, 749, 0, 353, 354, 1330, 0,
	1311, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 1365, 380, 381, 382, 1314, 1312, 1313, 1320,
	1316, 1315, 1319, 383, 384, 385, 386, 387, 0, 388,
	390, 751, 752, 0, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 753, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 1355, 1356, 424, 0,
	319, 0, 0, 0, 0, 0, 425, 426, 427, 756,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 1366, 434, 435, 436, 757, 758, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 1362,
	0, 760, 447, 0, 448, 449, 450, 451, 452, 453,
	454, 1325, 1326, 1329, 549, 1368, 455, 456, 457, 0,
	458, 459, 460, 461, 462, 0, 0, 0, 320, 463,
	464, 465, 0, 1367, 764, 466, 550, 467, 765, 766,
	0, 767, 0, 468, 469, 472, 1369, 1327, 1370, 471,
	473, 474, 1371, 475, 0, 0, 0, 476, 477, 478,
	479, 480, 481, 482, 1409, 483, 485, 484, 0, 487,
	1363, 486, 1372, 488, 489, 1373, 0, 490, 491, 492,
	493, 494, 495, 498, 1318, 1317, 496, 497, 499, 500,
	0, 501, 502, 504, 507, 503, 505, 506, 508, 521,
	522, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 524, 0, 523, 1374, 525, 526, 527,
	528, 529, 536, 538, 539, 534, 535, 537, 540, 541,
	543, 531, 532, 533, 1375, 542, 530, 0, 321, 1376,
	544, 545, 546, 547, 0, 1328, 548, 771, 551, 552,
	0, 0, 553, 0, 554, 0, 1415, 556, 557, 558,
	0, 0, 559, 560, 772, 1377, 561, 1378, 1357, 562,
	563, 555, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 0, 574, 575, 774, 576, 577, 578, 775,
	579, 580, 581, 1358, 582, 777, 583, 584, 0, 585,
	586, 587, 0, 588, 589, 590, 591, 592, 593, 594,
	595, 778, 596, 597, 599, 598, 600, 0, 601, 0,
	602, 603, 604, 0, 0, 0, 0, 0, 605, 606,
	608, 0, 609, 610, 611, 612, 607, 613, 614, 615,
	616, 617, 618, 0, 620, 621, 619, 622, 623, 1379,
	624, 625, 626, 627, 628, 779, 1417, 0, 630, 631,
	639, 640, 641, 632, 633, 635, 642, 634, 643, 644,
	645, 646, 648, 647, 0, 650, 651, 649, 652, 653,
	654, 1321, 655, 780, 656, 636, 637, 657, 658, 1380,
	659, 660, 661, 662, 663, 664, 665, 781, 0, 666,
	0, 667, 668, 669, 670, 671, 672, 674, 638, 675,
	680, 681, 782, 676, 677, 678, 679, 1359, 683, 684,
	685, 686, 0, 687, 688, 0, 682, 673, 0, 689,
	690, 691, 692, 693, 694, 0, 695, 696, 0, 697,
	784, 785, 786, 787, 0, 709, 0, 698, 700, 701,
	702, 703, 1360, 704, 1361, 0, 705, 706, 707, 708,
	699, 710, 711, 0, 0, 712, 713, 714, 716, 718,
	719, 715, 717, 720, 1322, 721, 0, 0, 722, 723,
	724, 790, 791, 792, 0, 726, 727, 725, 728, 729,
	732, 730, 731, 793, 733, 470, 734, 735, 0, 0,
	0, 0, 736, 737, 794, 738, 739, 740, 1405, 0,
	1423, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 325,
	324, 326, 327, 328, 329, 0, 330, 331, 1413, 0,
	1411, 0, 0, 1324, 0, 0, 0, 332, 0, 333,
	334, 335, 1364, 336, 337, 338, 339, 340, 341, 342,
	742, 743, 0, 343, 744, 344, 745, 0, 746, 345,
	346, 347, 348, 349, 350, 351, 0, 1323, 0, 352,
	747, 748, 749, 0, 353, 354, 1330, 0, 1311, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	1365, 380, 381, 382, 1314, 1312, 1313, 1320, 1316, 1315,
	1319, 383, 384, 385, 386, 387, 0, 388, 390, 751,
	752, 0, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 753, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 1355, 1356, 424, 0, 319, 0,
	0, 0, 0, 0, 425, 426, 427, 756, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	1366, 434, 435, 436, 757, 758, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 1362, 0, 760,
	447, 0, 448, 449, 450, 451, 452, 453, 454, 1325,
	1326, 1329, 549, 1368, 455, 456, 457, 0, 458, 459,
	460, 461, 462, 0, 0, 0, 320, 463, 464, 465,
	0, 1367, 764, 466, 550, 467, 765, 766, 0, 767,
	0, 468, 469, 472, 1369, 1327, 1370, 471, 473, 474,
	1371, 475, 0, 0, 0, 476, 477, 478, 479, 480,
	481, 482, 1409, 483, 485, 484, 0, 487, 1363, 486,
	1372, 488, 489, 1373, 0, 490, 491, 492, 493, 494,
	495, 498, 1318, 1317, 496, 497, 499, 500, 0, 501,
	502, 504, 507, 503, 505, 506, 508, 521, 522, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 524, 0, 523, 1374, 525, 526, 527, 528, 529,
	536, 538, 539, 534, 535, 537, 540, 541, 543, 531,
	532, 533, 1375, 542, 530, 0, 321, 1376, 544, 545,
	546, 547, 0, 1328, 548, 771, 551, 552, 0, 0,
	553, 0, 554, 0, 1415, 556, 557, 558, 0, 0,
	559, 560, 772, 1377, 561, 1378, 1357, 562, 563, 555,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	0, 574, 575, 774, 576, 577, 578, 775, 579, 580,
	581, 1358, 582, 777, 583, 584, 0, 585, 586, 587,
	0, 588, 589, 590, 591, 592, 593, 594, 595, 778,
	596, 597, 599, 598, 600, 0, 601, 0, 602, 603,
	604, 0, 0, 0, 0, 0, 605, 606, 608, 0,
	609, 610, 611, 612, 607, 613, 614, 615, 616, 617,
	618, 0, 620, 621, 619, 622, 623, 1379, 624, 625,
	626, 627, 628, 779, 1417, 0, 630, 631, 639, 640,
	641, 632, 633, 635, 642, 634, 643, 644, 645, 646,
	648, 647, 0, 650, 651, 649, 652, 653, 654, 1321,
	655, 780, 656, 636, 637, 657, 658, 1380, 659, 660,
	661, 662, 663, 664, 665, 781, 0, 666, 0, 667,
	668, 669, 670, 671, 672, 674, 638, 675, 680, 681,
	782, 676, 677, 678, 679, 1359, 683, 684, 685, 686,
	0, 687, 688, 0, 682, 673, 0, 689, 690, 691,
	692, 693, 694, 0, 695, 696, 0, 697, 784, 785,
	786, 787, 0, 709, 0, 698, 700, 701, 702, 703,
	1360, 704, 1361, 0, 705, 706, 707, 708, 699, 710,
	711, 0, 0, 712, 713, 714, 716, 718, 719, 715,
	717, 720, 1322, 721, 0, 0, 722, 723, 724, 790,
	791, 792, 0, 726, 727, 725, 728, 729, 732, 730,
	731, 793, 733, 470, 734, 735, 0, 0, 0, 0,
	736, 737, 794, 738, 739, 740, 1423, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 1413, 0, 1411, 1324,
	0, 0, 0, 332, 0, 333, 334, 335, 1364, 336,
	337, 338, 339, 340, 341, 342, 742, 743, 0, 343,
	744, 344, 745, 0, 746, 345, 346, 347, 348, 349,
	350, 351, 0, 1323, 0, 352, 747, 748, 749, 0,
	353, 354, 1330, 0, 1311, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 1365, 380, 381, 382,
	1314, 1312, 1313, 1320, 1316, 1315, 1319, 383, 384, 385,
	386, 387, 0, 388, 390, 751, 752, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 753, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	1355, 1356, 424, 0, 319, 0, 0, 0, 0, 0,
	425, 426, 427, 756, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 1366, 434, 435, 436,
	757, 758, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 1362, 0, 760, 447, 0, 448, 449,
	450, 451, 452, 453, 454, 1325, 1326, 1329, 549, 1368,
	455, 456, 457, 0, 458, 459, 460, 461, 462, 0,
	0, 0, 320, 463, 464, 465, 0, 1367, 764, 466,
	550, 467, 765, 766, 0, 767, 0, 468, 469, 472,
	1369, 1327, 1370, 471, 473, 474, 1371, 475, 0, 0,
	0, 476, 477, 478, 479, 480, 481, 482, 1409, 483,
	485, 484, 0, 487, 1363, 486, 1372, 488, 489, 1373,
	0, 490, 491, 492, 493, 494, 495, 498, 1318, 1317,
	496, 497, 499, 500, 0, 501, 502, 504, 507, 503,
	505, 506, 508, 521, 522, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 524, 0, 523,
	1374, 525, 526, 527, 528, 529, 536, 538, 539, 534,
	535, 537, 540, 541, 543, 531, 532, 533, 1375, 542,
	530, 0, 321, 1376, 544, 545, 546, 547, 0, 1328,
	548, 771, 551, 552, 0, 0, 553, 0, 554, 0,
	1415, 556, 557, 558, 0, 0, 559, 560, 772, 1377,
	561, 1378, 1357, 562, 563, 555, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 0, 574, 575, 774,
	576, 577, 578, 775, 579, 580, 581, 1358, 582, 777,
	583, 584, 0, 585, 586, 587, 0, 588, 589, 590,
	591, 592, 593, 594, 595, 778, 596, 597, 599, 598,
	600, 0, 601, 0, 602, 603, 604, 0, 0, 0,
	0, 0, 605, 606, 608, 0, 609, 610, 611, 612,
	607, 613, 614, 615, 616, 617, 618, 0, 620, 621,
	619, 622, 623, 1379, 624, 625, 626, 627, 628, 779,
	1417, 0, 630, 631, 639, 640, 641, 632, 633, 635,
	642, 634, 643, 644, 645, 646, 648, 647, 0, 650,
	651, 649, 652, 653, 654, 1321, 655, 780, 656, 636,
	637, 657, 658, 1380, 659, 660, 661, 662, 663, 664,
	665, 781, 0, 666, 0, 667, 668, 669, 670, 671,
	672, 674, 638, 675, 680, 681, 782, 676, 677, 678,
	679, 1359, 683, 684, 685, 686, 0, 687, 688, 0,
	682, 673, 0, 689, 690, 691, 692, 693, 694, 0,
	695, 696, 0, 697, 784, 785, 786, 787, 0, 709,
	0, 698, 700, 701, 702, 703, 1360, 704, 1361, 0,
	705, 706, 707, 708, 699, 710, 711, 0, 0, 712,
	713, 714, 716, 718, 719, 715, 717, 720, 1322, 721,
	0, 0, 722, 723, 724, 790, 791, 792, 0, 726,
	727, 725, 728, 729, 732, 730, 731, 793, 733, 470,
	734, 735, 0, 0, 0, 0, 736, 737, 794, 738,
	739, 740, 1423, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	0, 0, 1413, 0, 1411, 1324, 0, 0, 0, 332,
	0, 333, 334, 335, 1364, 336, 337, 338, 339, 340,
	341, 342, 742, 743, 0, 343, 744, 344, 745, 0,
	746, 345, 346, 347, 348, 349, 350, 351, 0, 1323,
	0, 352, 747, 748, 749, 0, 353, 354, 1330, 0,
	1311, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 1365, 380, 381, 382, 1314, 1312, 1313, 1320,
	1316, 1315, 1319, 383, 384, 385, 386, 387, 0, 388,
	390, 751, 752, 0, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 753, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 1355, 1356, 424, 0,
	319, 0, 0, 0, 0, 0, 425, 426, 427, 756,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 1366, 434, 435, 436, 757, 758, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 1362,
	0, 760, 447, 0, 448, 449, 450, 451, 452, 453,
	454, 1325, 1326, 1329, 549, 1368, 455, 456, 457, 0,
	458, 459, 460, 461, 462, 0, 0, 0, 320, 463,
	464, 465, 0, 1367, 764, 466, 550, 467, 765, 766,
	0, 767, 0, 468, 469, 472, 1369, 1327, 1370, 471,
	473, 474, 1371, 475, 0, 0, 0, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 485, 484, 0, 487,
	1363, 486, 1372, 488, 489, 1373, 0, 490, 491, 492,
	493, 494, 495, 498, 1318, 1317, 496, 497, 499, 500,
	0, 501, 502, 504, 507, 503, 505, 506, 508, 521,
	522, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 524, 0, 523, 1374, 525, 526, 527,
	528, 529, 536, 538, 539, 534, 535, 537, 540, 541,
	543, 531, 532, 533, 1375, 542, 530, 0, 321, 1376,
	544, 545, 546, 547, 0, 1328, 548, 771, 551, 552,
	0, 0, 553, 0, 554, 0, 0, 556, 557, 558,
	0, 0, 559, 560, 772, 1377, 561, 1378, 1357, 562,
	563, 555, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 0, 574, 575, 774, 576, 577, 578, 775,
	579, 580, 581, 1358, 582, 777, 583, 584, 0, 585,
	586, 587, 0, 588, 589, 590, 591, 592, 593, 594,
	595, 778, 596, 597, 599, 598, 600, 0, 601, 0,
	602, 603, 604, 0, 0, 0, 0, 0, 605, 606,
	608, 0, 609, 610, 611, 612, 607, 613, 614, 615,
	616, 617, 618, 0, 620, 621, 619, 622, 623, 1379,
	624, 625, 626, 627, 628, 779, 629, 0, 630, 631,
	639, 640, 641, 632, 633, 635, 642, 634, 643, 644,
	645, 646, 648, 647, 0, 650, 651, 649, 652, 653,
	654, 1321, 655, 780, 656, 636, 637, 657, 658, 1380,
	659, 660, 661, 662, 663, 664, 665, 781, 0, 666,
	0, 667, 668, 669, 670, 671, 672, 674, 638, 675,
	680, 681, 782, 676, 677, 678, 679, 1359, 683, 684,
	685, 686, 0, 687, 688, 0, 682, 673, 0, 689,
	690, 691, 692, 693, 694, 0, 695, 696, 0, 697,
	784, 785, 786, 787, 0, 709, 0, 698, 700, 701,
	702, 703, 1360, 704, 1361, 0, 705, 706, 707, 708,
	699, 710, 711, 0, 0, 712, 713, 714, 716, 718,
	719, 715, 717, 720, 1322, 721, 0, 0, 722, 723,
	724, 790, 791, 792, 0, 726, 727, 725, 728, 729,
	732, 730, 731, 793, 733, 470, 734, 735, 0, 0,
	0, 0, 736, 737, 794, 738, 739, 740, 1423, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	4853, 1324, 0, 0, 0, 332, 0, 333, 334, 335,
	1364, 336, 337, 338, 339, 340, 341, 342, 742, 743,
	0, 343, 744, 344, 745, 0, 746, 345, 346, 347,
	348, 349, 350, 351, 0, 1323, 0, 352, 747, 748,
	749, 0, 353, 354, 1330, 0, 1311, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 1365, 380,
	381, 382, 1314, 1312, 1313, 1320, 1316, 1315, 1319, 383,
	384, 385, 386, 387, 0, 388, 390, 751, 752, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 753,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 1355, 1356, 424, 0, 319, 0, 0, 0,
	0, 0, 425, 426, 427, 756, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 1366, 434,
	435, 436, 757, 758, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 1362, 0, 760, 447, 0,
	448, 449, 450, 451, 452, 453, 454, 1325, 1326, 1329,
	549, 1368, 455, 456, 457, 0, 458, 459, 460, 461,
	462, 0, 0, 0, 320, 463, 464, 465, 0, 1367,
	764, 466, 550, 467, 765, 766, 0, 767, 0, 468,
	469, 472, 1369, 1327, 1370, 471, 473, 474, 1371, 475,
	0, 0, 0, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 485, 484, 0, 487, 1363, 486, 1372, 488,
	489, 1373, 0, 490, 491, 492, 493, 494, 495, 498,
	1318, 1317, 496, 497, 499, 500, 0, 501, 502, 504,
	507, 503, 505, 506, 508, 521, 522, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 524,
	0, 523, 1374, 525, 526, 527, 528, 529, 536, 538,
	539, 534, 535, 537, 540, 541, 543, 531, 532, 533,
	1375, 542, 530, 0, 321, 1376, 544, 545, 546, 547,
	0, 1328, 548, 771, 551, 552, 0, 0, 553, 0,
	554, 0, 0, 556, 557, 558, 0, 0, 559, 560,
	772, 1377, 561, 1378, 1357, 562, 563, 555, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 0, 574,
	575, 774, 576, 577, 578, 775, 579, 580, 581, 1358,
	582, 777, 583, 584, 0, 585, 586, 587, 0, 588,
	589, 590, 591, 592, 593, 594, 595, 778, 596, 597,
	599, 598, 600, 0, 601, 0, 602, 603, 604, 0,
	0, 0, 0, 0, 605, 606, 608, 0, 609, 610,
	611, 612, 607, 613, 614, 615, 616, 617, 618, 0,
	620, 621, 619, 622, 623, 1379, 624, 625, 626, 627,
	628, 779, 1417, 0, 630, 631, 639, 640, 641, 632,
	633, 635, 642, 634, 643, 644, 645, 646, 648, 647,
	0, 650, 651, 649, 652, 653, 654, 1321, 655, 780,
	656, 636, 637, 657, 658, 1380, 659, 660, 661, 662,
	663, 664, 665, 781, 0, 666, 0, 667, 668, 669,
	670, 671, 672, 674, 638, 675, 680, 681, 782, 676,
	677, 678, 679, 1359, 683, 684, 685, 686, 0, 687,
	688, 0, 682, 673, 0, 689, 690, 691, 692, 693,
	694, 0, 695, 696, 0, 697, 784, 785, 786, 787,
	0, 709, 0, 698, 700, 701, 702, 703, 1360, 704,
	1361, 0, 705, 706, 707, 708, 699, 710, 711, 0,
	0, 712, 713, 714, 716, 718, 719, 715, 717, 720,
	1322, 721, 0, 0, 722, 723, 724, 790, 791, 792,
	0, 726, 727, 725, 728, 729, 732, 730, 731, 793,
	733, 470, 734, 735, 316, 0, 0, 0, 736, 737,
	794, 738, 739, 740, 2909, 2910, 2911, 2928, 2929, 2930,
	0, 322, 323, 325, 324, 326, 327, 328, 329, 0,
	330, 331, 0, 0, 0, 2931, 0, 741, 0, 0,
	0, 332, 0, 333, 334, 335, 2107, 336, 337, 338,
	339, 340, 341, 342, 742, 743, 0, 343, 744, 344,
	745, 0, 746, 345, 346, 347, 348, 349, 350, 351,
	0, 0, 2092, 352, 747, 748, 749, 0, 353, 354,
	750, 0, 0, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 2921, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 2917, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 0, 380, 381, 382, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 385, 386, 387,
	0, 388, 390, 751, 752, 0, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 753, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 754, 755,
	424, 0, 0, 0, 2922, 2923, 2924, 2925, 425, 426,
	427, 756, 0, 0, 2916, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 0, 434, 435, 436, 757, 758,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 759, 0, 760, 447, 0, 448, 449, 450, 451,
	452, 453, 454, 761, 762, 763, 549, 0, 455, 456,
	457, 0, 458, 459, 460, 461, 462, 0, 0, 0,
	0, 463, 464, 465, 0, 0, 764, 466, 550, 467,
	765, 766, 0, 767, 0, 468, 469, 472, 0, 768,
	0, 471, 473, 474, 0, 475, 0, 2926, 2927, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 485, 484,
	0, 487, 769, 486, 0, 488, 489, 0, 0, 490,
	491, 492, 493, 494, 495, 498, 0, 0, 496, 497,
	499, 500, 2919, 501, 502, 504, 507, 503, 505, 506,
	508, 521, 522, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 524, 0, 523, 0, 525,
	526, 527, 528, 529, 536, 538, 539, 534, 535, 537,
	540, 541, 543, 531, 532, 533, 0, 542, 530, 0,
	0, 0, 544, 545, 546, 547, 0, 770, 548, 771,
	551, 552, 0, 0, 553, 0, 554, 0, 0, 556,
	557, 558, 0, 0, 559, 560, 772, 0, 561, 0,
	773, 562, 563, 555, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 0, 574, 575, 774, 576, 577,
	578, 775, 579, 580, 581, 776, 582, 777, 583, 584,
	0, 585, 586, 587, 0, 588, 589, 590, 591, 592,
	593, 594, 595, 778, 596, 597, 599, 598, 600, 0,
	601, 0, 602, 603, 604, 0, 0, 0, 0, 0,
	605, 606, 608, 0, 609, 610, 611, 612, 607, 613,
	614, 615, 616, 617, 618, 0, 620, 621, 619, 622,
	623, 0, 624, 625, 626, 627, 628, 779, 629, 2920,
	630, 631, 639, 640, 641, 632, 633, 635, 642, 634,
	643, 644, 645, 646, 648, 647, 0, 650, 651, 649,
	652, 653, 654, 0, 655, 780, 656, 636, 637, 657,
	658, 0, 659, 660, 661, 662, 663, 664, 665, 781,
	0, 666, 0, 667, 668, 669, 670, 671, 672, 674,
	638, 675, 680, 681, 782, 676, 677, 678, 679, 783,
	683, 684, 685, 686, 0, 687, 688, 2091, 682, 673,
	0, 689, 690, 691, 692, 693, 694, 0, 695, 696,
	0, 697, 784, 785, 786, 787, 0, 709, 0, 698,
	700, 701, 702, 703, 788, 704, 789, 0, 705, 706,
	707, 708, 699, 710, 711, 0, 0, 712, 713, 714,
	716, 718, 719, 715, 717, 720, 0, 721, 0, 0,
	722, 723, 724, 790, 791, 792, 0, 726, 727, 725,
	728, 729, 732, 730, 731, 793, 733, 470, 734, 735,
	0, 0, 0, 0, 736, 737, 794, 738, 739, 740,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1242,
	0, 1712, 2906, 2907, 2908, 2932, 2918, 2912, 0, 2914,
	2915, 2913, 2900, 2901, 2902, 2903, 2904, 2905, 322, 323,
	325, 324, 326, 327, 328, 329, 0, 330, 331, 0,
	0, 0, 0, 0, 741, 0, 0, 0, 332, 0,
	333, 334, 335, 1364, 336, 337, 338, 339, 340, 341,
	342, 742, 743, 0, 343, 744, 344, 745, 0, 746,
	345, 346, 347, 348, 349, 350, 351, 0, 0, 0,
	352, 747, 748, 749, 0, 353, 354, 750, 0, 1678,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 1365, 380, 381, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 386, 387, 0, 388, 390,
	751, 752, 0, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 753, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 754, 755, 424, 0, 319,
	0, 0, 0, 0, 0, 425, 426, 427, 756, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 1366, 434, 435, 436, 757, 758, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 759, 0,
	760, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	761, 762, 763, 549, 1368, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 0, 0, 0, 0, 463, 464,
	465, 0, 1367, 764, 466, 550, 467, 765, 766, 0,
	767, 0, 468, 469, 472, 1369, 768, 1370, 471, 473,
	474, 1371, 475, 0, 0, 0, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 485, 484, 0, 487, 769,
	486, 1372, 488, 489, 1373, 0, 490, 491, 492, 493,
	494, 495, 498, 0, 0, 496, 497, 499, 500, 0,
	501, 502, 504, 507, 503, 505, 506, 508, 521, 522,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 524, 0, 523, 1374, 525, 526, 527, 528,
	529, 536, 538, 539, 534, 535, 537, 540, 541, 543,
	531, 532, 533, 1375, 542, 530, 0, 0, 1376, 544,
	545, 546, 547, 0, 770, 548, 771, 551, 552, 0,
	0, 553, 0, 554, 0, 0, 556, 557, 558, 0,
	0, 559, 560, 772, 1377, 561, 1378, 773, 562, 563,
	555, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 0, 574, 575, 774, 576, 577, 578, 775, 579,
	580, 581, 776, 582, 777, 583, 584, 0, 585, 586,
	587, 0, 588, 589, 590, 591, 592, 593, 594, 595,
	778, 596, 597, 599, 598, 600, 0, 601, 0, 602,
	603, 604, 0, 0, 0, 0, 0, 605, 606, 608,
	0, 609, 610, 611, 612, 607, 613, 614, 615, 616,
	617, 618, 0, 620, 621, 619, 622, 623, 1379, 624,
	625, 626, 627, 628, 779, 629, 0, 630, 631, 639,
	640, 641, 632, 633, 635, 642, 634, 643, 644, 645,
	646, 648, 647, 275, 650, 651, 649, 652, 653, 654,
	0, 655, 780, 656, 636, 637, 657, 658, 1380, 659,
	660, 661, 662, 663, 664, 665, 781, 0, 666, 0,
	667, 668, 669, 670, 671, 672, 674, 638, 675, 680,
	681, 782, 676, 677, 678, 679, 783, 683, 684, 685,
	686, 0, 687, 688, 0, 682, 673, 277, 689, 690,
	691, 692, 693, 694, 0, 695, 696, 0, 697, 784,
	785, 786, 787, 0, 709, 0, 698, 700, 701, 702,
	703, 788, 704, 789, 0, 705, 706, 707, 708, 699,
	710, 711, 0, 0, 712, 713, 714, 716, 718, 719,
	715, 717, 720, 0, 721, 0, 0, 722, 723, 724,
	1842, 791, 792, 0, 726, 727, 725, 728, 729, 732,
	730, 731, 793, 733, 470, 734, 735, 0, 0, 0,
	269, 736, 737, 794, 738, 739, 740, 0, 1839, 270,
	1712, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 325,
	324, 326, 327, 328, 329, 0, 330, 331, 0, 216,
	0, 0, 0, 741, 0, 0, 0, 332, 0, 333,
	334, 335, 1364, 336, 337, 338, 339, 340, 341, 342,
	742, 743, 0, 343, 744, 344, 745, 0, 746, 345,
	346, 347, 348, 349, 350, 351, 0, 0, 0, 352,
	747, 748, 749, 0, 353, 354, 750, 0, 1678, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	1365, 380, 381, 382, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 385, 386, 387, 0, 388, 390, 751,
	752, 0, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 753, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 754, 755, 424, 0, 319, 0,
	0, 0, 0, 0, 425, 426, 427, 756, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	1366, 434, 435, 436, 757, 758, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 759, 0, 760,
	447, 0, 448, 449, 450, 451, 452, 453, 454, 761,
	762, 763, 549, 1368, 455, 456, 457, 0, 458, 459,
	460, 461, 462, 0, 0, 0, 0, 463, 464, 465,
	0, 1367, 764, 466, 550, 467, 765, 766, 0, 767,
	0, 468, 469, 472, 1369, 768, 1370, 471, 473, 474,
	1371, 475, 0, 0, 0, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 485, 484, 0, 487, 769, 486,
	1372, 488, 489, 1373, 0, 490, 491, 492, 493, 494,
	495, 498, 0, 0, 496, 497, 499, 500, 0, 501,
	502, 504, 507, 503, 505, 506, 508, 521, 522, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 524, 0, 523, 1374, 525, 526, 527, 528, 529,
	536, 538, 539, 534, 535, 537, 540, 541, 543, 531,
	532, 533, 1375, 542, 530, 0, 0, 1376, 544, 545,
	546, 547, 0, 770, 548, 771, 551, 552, 0, 0,
	553, 0, 554, 0, 0, 556, 557, 558, 0, 0,
	559, 560, 772, 1377, 561, 1378, 773, 562, 563, 555,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	0, 574, 575, 774, 576, 577, 578, 775, 579, 580,
	581, 776, 582, 777, 583, 584, 0, 585, 586, 587,
	0, 588, 589, 590, 591, 592, 593, 594, 595, 778,
	596, 597, 599, 598, 600, 0, 601, 0, 602, 603,
	604, 0, 0, 0, 0, 0, 605, 606, 608, 0,
	609, 610, 611, 612, 607, 613, 614, 615, 616, 617,
	618, 0, 620, 621, 619, 622, 623, 1379, 624, 625,
	626, 627, 628, 779, 629, 0, 630, 631, 639, 640,
	641, 632, 633, 635, 642, 634, 643, 644, 645, 646,
	648, 647, 275, 650, 651, 649, 652, 653, 654, 0,
	655, 780, 656, 636, 637, 657, 658, 1380, 659, 660,
	661, 662, 663, 664, 665, 781, 0, 666, 0, 667,
	668, 669, 670, 671, 672, 674, 638, 675, 680, 681,
	782, 676, 677, 678, 679, 783, 683, 684, 685, 686,
	0, 687, 688, 0, 682, 673, 277, 689, 690, 691,
	692, 693, 694, 0, 695, 696, 0, 697, 784, 785,
	786, 787, 0, 709, 0, 698, 700, 701, 702, 703,
	788, 704, 789, 0, 705, 706, 707, 708, 699, 710,
	711, 0, 0, 712, 713, 714, 716, 718, 719, 715,
	717, 720, 0, 721, 0, 0, 722, 723, 724, 1842,
	791, 792, 0, 726, 727, 725, 728, 729, 732, 730,
	731, 793, 733, 470, 734, 735, 0, 0, 0, 269,
	736, 737, 794, 738, 739, 740, 1712, 1711, 270, 0,
	0, 0, 1709, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 0, 0, 216, 741,
	0, 0, 0, 332, 0, 333, 334, 335, 1364, 336,
	337, 338, 339, 340, 341, 342, 742, 743, 0, 343,
	744, 344, 745, 0, 746, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 747, 748, 749, 0,
	353, 354, 750, 0, 1678, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 1365, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	386, 387, 0, 388, 390, 751, 752, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 753, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	754, 755, 424, 0, 319, 0, 0, 0, 0, 0,
	425, 426, 427, 756, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 1366, 434, 435, 436,
	757, 758, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 759, 0, 760, 447, 0, 448, 449,
	450, 451, 452, 453, 454, 761, 762, 763, 549, 1368,
	455, 456, 457, 0, 458, 459, 460, 461, 462, 0,
	0, 0, 0, 463, 464, 465, 0, 1367, 764, 466,
	550, 467, 765, 766, 0, 767, 0, 468, 469, 472,
	1369, 768, 1370, 471, 473, 474, 1371, 475, 0, 0,
	0, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	485, 484, 0, 487, 769, 486, 1372, 488, 489, 1373,
	0, 490, 491, 492, 493, 494, 495, 498, 0, 0,
	496, 497, 499, 500, 0, 501, 502, 504, 507, 503,
	505, 506, 508, 521, 522, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 524, 0, 523,
	1374, 525, 526, 527, 528, 529, 536, 538, 539, 534,
	535, 537, 540, 541, 543, 531, 532, 533, 1375, 542,
	530, 0, 0, 1376, 544, 545, 546, 547, 0, 770,
	548, 771, 551, 552, 0, 0, 553, 0, 554, 0,
	0, 556, 557, 558, 0, 0, 559, 560, 772, 1377,
	561, 1378, 773, 562, 563, 555, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 0, 574, 575, 774,
	576, 577, 578, 775, 579, 580, 581, 776, 582, 777,
	583, 584, 0, 585, 586, 587, 0, 588, 589, 590,
	591, 592, 593, 594, 595, 778, 596, 597, 599, 598,
	600, 0, 601, 0, 602, 603, 604, 0, 0, 0,
	0, 0, 605, 606, 608, 0, 609, 610, 611, 612,
	607, 613, 614, 615, 616, 617, 618, 0, 620, 621,
	619, 622, 623, 1379, 624, 625, 626, 627, 628, 779,
	629, 0, 630, 631, 639, 640, 641, 632, 633, 635,
	642, 634, 643, 644, 645, 646, 648, 647, 0, 650,
	651, 649, 652, 653, 654, 0, 655, 780, 656, 636,
	637, 657, 658, 1380, 659, 660, 661, 662, 663, 664,
	665, 781, 0, 666, 0, 667, 668, 669, 670, 671,
	672, 674, 638, 675, 680, 681, 782, 676, 677, 678,
	679, 783, 683, 684, 685, 686, 0, 687, 688, 0,
	682, 673, 0, 689, 690, 691, 692, 693, 694, 0,
	695, 696, 0, 697, 784, 785, 786, 787, 0, 709,
	0, 698, 700, 701, 702, 703, 788, 704, 789, 0,
	705, 706, 707, 708, 699, 710, 711, 0, 0, 712,
	713, 714, 716, 718, 719, 715, 717, 720, 0, 721,
	0, 0, 722, 723, 724, 790, 791, 792, 0, 726,
	727, 725, 728, 729, 732, 730, 731, 793, 733, 470,
	734, 735, 0, 0, 0, 0, 736, 737, 794, 738,
	739, 740, 1712, 1711, 0, 0, 0, 0, 1709, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	0, 0, 0, 0, 1866, 741, 0, 0, 0, 332,
	0, 333, 334, 335, 1364, 336, 337, 338, 339, 340,
	341, 342, 742, 743, 0, 343, 744, 344, 745, 0,
	746, 345, 346, 347, 348, 349, 350, 351, 0, 0,
	0, 352, 747, 748, 749, 0, 353, 354, 750, 0,
	1678, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 1365, 380, 381, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 386, 387, 0, 388,
	390, 751, 752, 0, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 753, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 754, 755, 424, 0,
	319, 0, 0, 0, 0, 0, 425, 426, 427, 756,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 1366, 434, 435, 436, 757, 758, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 759,
	0, 760, 447, 0, 448, 449, 450, 451, 452, 453,
	454, 761, 762, 763, 549, 1368, 455, 456, 457, 0,
	458, 459, 460, 461, 462, 0, 0, 0, 0, 463,
	464, 465, 0, 1367, 764, 466, 550, 467, 765, 766,
	0, 767, 0, 468, 469, 472, 1369, 768, 1370, 471,
	473, 474, 1371, 475, 0, 0, 0, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 485, 484, 0, 487,
	769, 486, 1372, 488, 489, 1373, 0, 490, 491, 492,
	493, 494, 495, 498, 0, 0, 496, 497, 499, 500,
	0, 501, 502, 504, 507, 503, 505, 506, 508, 521,
	522, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 524, 0, 523, 1374, 525, 526, 527,
	528, 529, 536, 538, 539, 534, 535, 537, 540, 541,
	543, 531, 532, 533, 1375, 542, 530, 0, 0, 1376,
	544, 545, 546, 547, 0, 770, 548, 771, 551, 552,
	0, 0, 553, 0, 554, 0, 0, 556, 557, 558,
	0, 0, 559, 560, 772, 1377, 561, 1378, 773, 562,
	563, 555, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 0, 574, 575, 774, 576, 577, 578, 775,
	579, 580, 581, 776, 582, 777, 583, 584, 0, 585,
	586, 587, 0, 588, 589, 590, 591, 592, 593, 594,
	595, 778, 596, 597, 599, 598, 600, 0, 601, 0,
	602, 603, 604, 0, 0, 0, 0, 0, 605, 606,
	608, 0, 609, 610, 611, 612, 607, 613, 614, 615,
	616, 617, 618, 0, 620, 621, 619, 622, 623, 1379,
	624, 625, 626, 627, 628, 779, 629, 0, 630, 631,
	639, 640, 641, 632, 633, 635, 642, 634, 643, 644,
	645, 646, 648, 647, 0, 650, 651, 649, 652, 653,
	654, 0, 655, 780, 656, 636, 637, 657, 658, 1380,
	659, 660, 661, 662, 663, 664, 665, 781, 0, 666,
	0, 667, 668, 669, 670, 671, 672, 674, 638, 675,
	680, 681, 782, 676, 677, 678, 679, 783, 683, 684,
	685, 686, 0, 687, 688, 0, 682, 673, 0, 689,
	690, 691, 692, 693, 694, 0, 695, 696, 0, 697,
	784, 785, 786, 787, 0, 709, 0, 698, 700, 701,
	702, 703, 788, 704, 789, 0, 705, 706, 707, 708,
	699, 710, 711, 0, 0, 712, 713, 714, 716, 718,
	719, 715, 717, 720, 0, 721, 0, 0, 722, 723,
	724, 790, 791, 792, 0, 726, 727, 725, 728, 729,
	732, 730, 731, 793, 733, 470, 734, 735, 0, 0,
	0, 0, 736, 737, 794, 738, 739, 740, 1712, 1711,
	0, 0, 0, 0, 1709, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	4203, 741, 0, 0, 0, 332, 0, 333, 334, 335,
	1364, 336, 337, 338, 339, 340, 341, 342, 742, 743,
	0, 343, 744, 344, 745, 0, 746, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 747, 748,
	749, 0, 353, 354, 750, 0, 1678, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 1365, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 751, 752, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 753,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 754, 755, 424, 0, 319, 0, 0, 0,
	0, 0, 425, 426, 427, 756, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 1366, 434,
	435, 436, 757, 758, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 759, 0, 760, 447, 0,
	448, 449, 450, 451, 452, 453, 454, 761, 762, 763,
	549, 1368, 455, 456, 457, 0, 458, 459, 460, 461,
	462, 0, 0, 0, 0, 463, 464, 465, 0, 1367,
	764, 466, 550, 467, 765, 766, 0, 767, 0, 468,
	469, 472, 1369, 768, 1370, 471, 473, 474, 1371, 475,
	0, 0, 0, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 485, 484, 0, 487, 769, 486, 1372, 488,
	489, 1373, 0, 490, 491, 492, 493, 494, 495, 498,
	0, 0, 496, 497, 499, 500, 0, 501, 502, 504,
	507, 503, 505, 506, 508, 521, 522, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 524,
	0, 523, 1374, 525, 526, 527, 528, 529, 536, 538,
	539, 534, 535, 537, 540, 541, 543, 531, 532, 533,
	1375, 542, 530, 0, 0, 1376, 544, 545, 546, 547,
	0, 770, 548, 771, 551, 552, 0, 0, 553, 0,
	554, 0, 0, 556, 557, 558, 0, 0, 559, 560,
	772, 1377, 561, 1378, 773, 562, 563, 555, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 0, 574,
	575, 774, 576, 577, 578, 775, 579, 580, 581, 776,
	582, 777, 583, 584, 0, 585, 586, 587, 0, 588,
	589, 590, 591, 592, 593, 594, 595, 778, 596, 597,
	599, 598, 600, 0, 601, 0, 602, 603, 604, 0,
	0, 0, 0, 0, 605, 606, 608, 0, 609, 610,
	611, 2659, 607, 613, 614, 615, 616, 617, 618, 0,
	620, 621, 619, 622, 623, 1379, 624, 625, 626, 627,
	628, 779, 629, 0, 630, 631, 639, 640, 641, 632,
	633, 635, 642, 634, 643, 644, 645, 646, 648, 647,
	0, 650, 651, 649, 652, 653, 654, 0, 655, 780,
	656, 636, 637, 657, 658, 1380, 659, 660, 661, 662,
	663, 664, 665, 781, 0, 666, 0, 667, 668, 669,
	670, 671, 672, 674, 638, 675, 680, 681, 782, 676,
	677, 678, 679, 783, 683, 684, 685, 686, 0, 687,
	688, 0, 682, 673, 0, 689, 690, 691, 692, 693,
	694, 0, 695, 696, 0, 697, 784, 785, 786, 787,
	0, 709, 0, 698, 700, 701, 702, 703, 788, 704,
	789, 0, 705, 706, 707, 708, 699, 710, 711, 0,
	0, 712, 713, 714, 716, 718, 719, 715, 717, 720,
	0, 721, 0, 0, 722, 723, 724, 790, 791, 792,
	0, 726, 727, 725, 728, 729, 732, 730, 731, 793,
	733, 470, 734, 735, 0, 0, 0, 0, 736, 737,
	794, 738, 739, 740, 1712, 2563, 0, 0, 0, 0,
	2564, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 325, 324, 326, 327, 328, 329, 0,
	330, 331, 0, 0, 0, 0, 1866, 741, 0, 0,
	0, 332, 0, 333, 334, 335, 1364, 336, 337, 338,
	339, 340, 341, 342, 742, 743, 0, 343, 744, 344,
	745, 0, 746, 345, 346, 347, 348, 349, 350, 351,
	0, 0, 0, 352, 747, 748, 749, 0, 353, 354,
	750, 0, 1678, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 1365, 380, 381, 382, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 385, 386, 387,
	0, 388, 390, 751, 752, 0, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 753, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 754, 755,
	424, 0, 319, 0, 0, 0, 0, 0, 425, 426,
	427, 756, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 1366, 434, 435, 436, 757, 758,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 759, 0, 760, 447, 0, 448, 449, 450, 451,
	452, 453, 454, 761, 762, 763, 549, 1368, 455, 456,
	457, 0, 458, 459, 460, 461, 462, 0, 0, 0,
	0, 463, 464, 465, 0, 1367, 764, 466, 550, 467,
	765, 766, 0, 767, 0, 468, 469, 472, 1369, 768,
	1370, 471, 473, 474, 1371, 475, 0, 0, 0, 476,
	477, 478, 479, 480, 481, 482, 0, 2562, 485, 484,
	0, 487, 769, 486, 1372, 488, 489, 1373, 0, 490,
	491, 492, 493, 494, 495, 498, 0, 0, 496, 497,
	499, 500, 0, 501, 502, 504, 507, 503, 505, 506,
	508, 521, 522, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 524, 0, 523, 1374, 525,
	526, 527, 528, 529, 536, 538, 539, 534, 535, 537,
	540, 541, 543, 531, 532, 533, 1375, 542, 530, 0,
	0, 1376, 544, 545, 546, 547, 0, 770, 548, 771,
	551, 552, 0, 0, 553, 0, 554, 0, 0, 556,
	557, 558, 0, 0, 559, 560, 772, 1377, 561, 1378,
	773, 562, 563, 555, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 0, 574, 575, 774, 576, 577,
	578, 775, 579, 580, 581, 776, 582, 777, 583, 584,
	0, 585, 586, 587, 0, 588, 589, 590, 591, 592,
	593, 594, 595, 778, 596, 597, 599, 598, 600, 0,
	601, 0, 602, 603, 604, 0, 0, 0, 0, 0,
	605, 606, 608, 0, 609, 610, 611, 612, 607, 613,
	614, 615, 616, 617, 618, 0, 620, 621, 619, 622,
	623, 1379, 624, 625, 626, 627, 628, 779, 629, 0,
	630, 631, 639, 640, 641, 632, 633, 635, 642, 634,
	643, 644, 645, 646, 648, 647, 0, 650, 651, 649,
	652, 653, 654, 0, 655, 780, 656, 636, 637, 657,
	658, 1380, 659, 660, 661, 662, 663, 664, 665, 781,
	0, 666, 0, 667, 668, 669, 670, 671, 672, 674,
	638, 675, 680, 681, 782, 676, 677, 678, 679, 783,
	683, 684, 685, 686, 0, 687, 688, 0, 682, 673,
	0, 689, 690, 691, 692, 693, 694, 0, 695, 696,
	0, 697, 784, 785, 786, 787, 0, 709, 0, 698,
	700, 701, 702, 703, 788, 704, 789, 0, 705, 706,
	707, 708, 699, 710, 711, 0, 0, 712, 713, 714,
	716, 718, 719, 715, 717, 720, 0, 721, 0, 0,
	722, 723, 724, 790, 791, 792, 0, 726, 727, 725,
	728, 729, 732, 730, 731, 793, 733, 470, 734, 735,
	0, 0, 0, 0, 736, 737, 794, 738, 739, 740,
	1712, 1711, 0, 0, 0, 0, 1709, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 325,
	324, 326, 327, 328, 329, 0, 330, 331, 0, 0,
	0, 0, 1866, 741, 0, 0, 0, 332, 0, 333,
	334, 335, 1364, 336, 337, 338, 339, 340, 341, 342,
	742, 743, 0, 343, 744, 344, 745, 0, 746, 345,
	346, 347, 348, 349, 350, 351, 0, 0, 0, 352,
	747, 748, 749, 0, 353, 354, 750, 0, 1678, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	1365, 380, 381, 382, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 385, 386, 387, 0, 388, 390, 751,
	752, 0, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 753, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 754, 755, 424, 0, 319, 0,
	0, 0, 0, 0, 425, 426, 427, 756, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	1366, 434, 435, 436, 757, 758, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 759, 0, 760,
	447, 0, 448, 449, 450, 451, 452, 453, 454, 761,
	762, 763, 549, 1368, 455, 456, 457, 0, 458, 459,
	460, 461, 462, 0, 0, 0, 0, 463, 464, 465,
	0, 1367, 764, 466, 550, 467, 765, 766, 0, 767,
	0, 468, 469, 472, 1369, 768, 1370, 471, 473, 474,
	1371, 475, 0, 0, 0, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 485, 484, 0, 487, 769, 486,
	1372, 488, 489, 1373, 0, 490, 491, 492, 493, 494,
	495, 498, 0, 0, 496, 497, 499, 500, 0, 501,
	502, 504, 507, 503, 505, 506, 508, 521, 522, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 524, 0, 523, 1374, 525, 526, 527, 528, 529,
	536, 538, 539, 534, 535, 537, 540, 541, 543, 531,
	532, 533, 1375, 542, 530, 0, 0, 1376, 544, 545,
	546, 547, 0, 770, 548, 771, 551, 552, 0, 0,
	553, 0, 554, 0, 0, 556, 557, 558, 0, 0,
	559, 560, 772, 1377, 561, 1378, 773, 562, 563, 555,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	0, 574, 575, 774, 576, 577, 578, 775, 579, 580,
	581, 776, 582, 777, 583, 584, 0, 585, 586, 587,
	0, 588, 589, 590, 591, 592, 593, 594, 595, 778,
	596, 597, 599, 598, 600, 0, 601, 0, 602, 603,
	604, 0, 0, 0, 0, 0, 605, 606, 608, 0,
	609, 610, 611, 612, 607, 613, 614, 615, 616, 617,
	618, 0, 620, 621, 619, 622, 623, 1379, 624, 625,
	626, 627, 628, 779, 629, 0, 630, 631, 639, 640,
	641, 632, 633, 635, 642, 634, 643, 644, 645, 646,
	648, 647, 0, 650, 651, 649, 652, 653, 654, 0,
	655, 780, 656, 636, 637, 657, 658, 1380, 659, 660,
	661, 662, 663, 664, 665, 781, 0, 666, 0, 667,
	668, 669, 670, 671, 672, 674, 638, 675, 680, 681,
	782, 676, 677, 678, 679, 783, 683, 684, 685, 686,
	0, 687, 688, 0, 682, 673, 0, 689, 690, 691,
	692, 693, 694, 0, 695, 696, 0, 697, 784, 785,
	786, 787, 0, 709, 0, 698, 700, 701, 702, 703,
	788, 704, 789, 0, 705, 706, 707, 708, 699, 710,
	711, 0, 0, 712, 713, 714, 716, 718, 719, 715,
	717, 720, 0, 721, 0, 0, 722, 723, 724, 790,
	791, 792, 0, 726, 727, 725, 728, 729, 732, 730,
	731, 793, 733, 470, 734, 735, 0, 0, 0, 0,
	736, 737, 794, 738, 739, 740, 1242, 0, 316, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 1848, 0,
	0, 741, 0, 0, 0, 332, 0, 333, 334, 335,
	0, 336, 337, 338, 339, 340, 341, 342, 742, 743,
	0, 343, 744, 344, 745, 0, 746, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 747, 748,
	749, 0, 353, 354, 750, 0, 0, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 751, 752, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 753,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 754, 755, 424, 0, 0, 0, 0, 0,
	0, 0, 425, 426, 427, 756, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 0, 434,
	435, 436, 757, 758, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 759, 0, 760, 447, 0,
	448, 449, 450, 451, 452, 453, 454, 761, 762, 763,
	549, 0, 455, 456, 457, 0, 458, 459, 460, 461,
	462, 0, 0, 0, 0, 463, 464, 465, 0, 0,
	764, 466, 550, 467, 765, 766, 0, 767, 0, 468,
	469, 472, 0, 768, 0, 471, 473, 474, 0, 475,
	0, 0, 0, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 485, 484, 0, 487, 769, 486, 0, 488,
	489, 0, 0, 490, 491, 492, 493, 494, 495, 498,
	0, 0, 496, 497, 499, 500, 0, 501, 502, 504,
	507, 503, 505, 506, 508, 521, 522, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 524,
	0, 523, 0, 525, 526, 527, 528, 529, 536, 538,
	539, 534, 535, 537, 540, 541, 543, 531, 532, 533,
	0, 542, 530, 0, 0, 0, 544, 545, 546, 547,
	0, 770, 548, 771, 551, 552, 0, 0, 553, 0,
	554, 0, 0, 556, 557, 558, 0, 0, 559, 560,
	772, 0, 561, 0, 773, 562, 563, 555, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 0, 574,
	575, 774, 576, 577, 578, 775, 579, 580, 581, 776,
	582, 777, 583, 584, 0, 585, 586, 587, 0, 588,
	589, 590, 591, 592, 593, 594, 595, 778, 596, 597,
	599, 598, 600, 0, 601, 0, 602, 603, 604, 0,
	0, 0, 0, 0, 605, 606, 608, 0, 609, 610,
	611, 612, 607, 613, 614, 615, 616, 617, 618, 0,
	620, 621, 619, 622, 623, 0, 624, 625, 626, 627,
	628, 779, 629, 0, 630, 631, 639, 640, 641, 632,
	633, 635, 642, 634, 643, 644, 645, 646, 648, 647,
	275, 650, 651, 649, 652, 653, 654, 0, 655, 780,
	656, 636, 637, 657, 658, 0, 659, 660, 661, 662,
	663, 664, 665, 781, 0, 666, 0, 667, 668, 669,
	670, 671, 672, 674, 638, 675, 680, 681, 782, 676,
	677, 678, 679, 783, 683, 684, 685, 686, 0, 687,
	688, 0, 682, 673, 277, 689, 690, 691, 692, 693,
	694, 0, 695, 696, 0, 697, 784, 785, 786, 787,
	0, 709, 0, 698, 700, 701, 702, 703, 788, 704,
	789, 0, 705, 706, 707, 708, 699, 710, 711, 0,
	0, 712, 713, 714, 716, 718, 719, 715, 717, 720,
	0, 721, 0, 0, 722, 723, 724, 1842, 791, 792,
	0, 726, 727, 725, 728, 729, 732, 730, 731, 793,
	733, 470, 734, 735, 316, 0, 0, 269, 736, 737,
	794, 738, 739, 740, 0, 0, 270, 0, 0, 0,
	0, 322, 323, 325, 324, 326, 327, 328, 329, 0,
	330, 331, 0, 0, 0, 0, 0, 741, 0, 0,
	0, 332, 0, 333, 334, 335, 216, 336, 337, 338,
	339, 340, 341, 342, 742, 743, 0, 343, 744, 344,
	745, 0, 746, 345, 346, 347, 348, 349, 350, 351,
	0, 0, 0, 352, 747, 748, 749, 0, 353, 354,
	750, 0, 0, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 0, 380, 381, 382, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 385, 386, 387,
	0, 388, 390, 751, 752, 0, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 753, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 754, 755,
	424, 0, 319, 0, 0, 0, 0, 0, 425, 426,
	427, 756, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 0, 434, 435, 436, 757, 758,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 759, 0, 760, 447, 0, 448, 449, 450, 451,
	452, 453, 454, 761, 762, 763, 549, 0, 455, 456,
	457, 0, 458, 459, 460, 461, 462, 0, 0, 0,
	320, 463, 464, 465, 0, 0, 764, 466, 550, 467,
	765, 766, 0, 767, 0, 468, 469, 472, 0, 768,
	0, 471, 473, 474, 0, 475, 0, 0, 0, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 485, 484,
	0, 487, 769, 486, 0, 488, 489, 0, 0, 490,
	491, 492, 493, 494, 495, 498, 0, 0, 496, 497,
	499, 500, 0, 501, 502, 504, 507, 503, 505, 506,
	508, 521, 522, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 524, 0, 523, 0, 525,
	526, 527, 528, 529, 536, 538, 539, 534, 535, 537,
	540, 541, 543, 531, 532, 533, 0, 542, 530, 0,
	321, 0, 544, 545, 546, 547, 0, 770, 548, 771,
	551, 552, 0, 0, 553, 0, 554, 0, 0, 556,
	557, 558, 0, 0, 559, 560, 772, 0, 561, 0,
	773, 562, 563, 555, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 0, 574, 575, 774, 576, 577,
	578, 775, 579, 580, 581, 776, 582, 777, 583, 584,
	0, 585, 586, 587, 0, 588, 589, 590, 591, 592,
	593, 594, 595, 778, 596, 597, 599, 598, 600, 0,
	601, 0, 602, 603, 604, 0, 0, 0, 0, 0,
	605, 606, 608, 0, 609, 610, 611, 612, 607, 613,
	614, 615, 616, 617, 618, 0, 620, 621, 619, 622,
	623, 0, 624, 625, 626, 627, 628, 779, 629, 0,
	630, 631, 639, 640, 641, 632, 633, 635, 642, 634,
	643, 644, 645, 646, 648, 647, 0, 650, 651, 649,
	652, 653, 654, 0, 655, 780, 656, 636, 637, 657,
	658, 0, 659, 660, 661, 662, 663, 664, 665, 781,
	0, 666, 0, 667, 668, 669, 670, 671, 672, 674,
	638, 675, 680, 681, 782, 676, 677, 678, 679, 783,
	683, 684, 685, 686, 0, 687, 688, 0, 682, 673,
	0, 689, 690, 691, 692, 693, 694, 0, 695, 696,
	0, 697, 784, 785, 786, 787, 0, 709, 0, 698,
	700, 701, 702, 703, 788, 704, 789, 0, 705, 706,
	707, 708, 699, 710, 711, 0, 0, 712, 713, 714,
	716, 718, 719, 715, 717, 720, 0, 721, 0, 0,
	722, 723, 724, 790, 791, 792, 0, 726, 727, 725,
	728, 729, 732, 730, 731, 793, 733, 470, 734, 735,
	316, 3427, 0, 0, 736, 737, 794, 738, 739, 740,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 325,
	324, 326, 327, 328, 329, 0, 330, 331, 0, 0,
	0, 0, 0, 741, 0, 0, 0, 332, 0, 333,
	334, 335, 2226, 336, 337, 338, 339, 340, 341, 342,
	742, 743, 0, 343, 744, 344, 745, 0, 746, 345,
	346, 347, 348, 349, 350, 351, 0, 0, 0, 352,
	747, 748, 749, 0, 353, 354, 750, 0, 0, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 382, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 385, 386, 387, 0, 388, 390, 751,
	752, 0, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 753, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 754, 755, 424, 0, 0, 0,
	0, 0, 0, 0, 425, 426, 427, 756, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	0, 434, 435, 436, 757, 758, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 759, 0, 760,
	447, 0, 448, 449, 450, 451, 452, 453, 454, 761,
	762, 763, 549, 0, 455, 456, 457, 0, 458, 459,
	460, 461, 462, 0, 0, 0, 0, 463, 464, 465,
	0, 0, 764, 466, 550, 467, 765, 766, 0, 767,
	0, 468, 469, 472, 0, 768, 0, 471, 473, 474,
	0, 475, 0, 0, 0, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 485, 484, 0, 487, 769, 486,
	0, 488, 489, 0, 0, 490, 491, 492, 493, 494,
	495, 498, 0, 0, 496, 497, 499, 500, 0, 501,
	502, 504, 507, 503, 505, 506, 508, 521, 522, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 524, 0, 523, 0, 525, 526, 527, 528, 529,
	536, 538, 539, 534, 535, 537, 540, 541, 543, 531,
	532, 533, 0, 542, 530, 0, 0, 0, 544, 545,
	546, 547, 0, 770, 548, 771, 551, 552, 0, 0,
	553, 0, 554, 0, 0, 556, 557, 558, 0, 0,
	559, 560, 772, 0, 561, 0, 773, 562, 563, 555,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	0, 574, 575, 774, 576, 577, 578, 775, 579, 580,
	581, 776, 582, 777, 583, 584, 0, 585, 586, 587,
	0, 588, 589, 590, 591, 592, 593, 594, 595, 778,
	596, 597, 599, 598, 600, 0, 601, 0, 602, 603,
	604, 0, 0, 0, 0, 0, 605, 606, 608, 0,
	609, 610, 611, 612, 607, 613, 614, 615, 616, 617,
	618, 0, 620, 621, 619, 622, 623, 0, 624, 625,
	626, 627, 628, 779, 629, 0, 630, 631, 639, 640,
	641, 632, 633, 635, 642, 634, 643, 644, 645, 646,
	648, 647, 0, 650, 651, 649, 652, 653, 654, 0,
	655, 780, 656, 636, 637, 657, 658, 0, 659, 660,
	661, 662, 663, 664, 665, 781, 0, 666, 0, 667,
	668, 669, 670, 671, 672, 674, 638, 675, 680, 681,
	782, 676, 677, 678, 679, 783, 683, 684, 685, 686,
	0, 687, 688, 0, 682, 673, 0, 689, 690, 691,
	692, 693, 694, 0, 695, 696, 0, 697, 784, 785,
	786, 787, 0, 709, 0, 698, 700, 701, 702, 703,
	788, 704, 789, 0, 705, 706, 707, 708, 699, 710,
	711, 0, 0, 712, 713, 714, 716, 718, 719, 715,
	717, 720, 0, 721, 0, 0, 722, 723, 724, 790,
	791, 792, 0, 726, 727, 725, 728, 729, 732, 730,
	731, 793, 733, 470, 734, 735, 316, 0, 0, 0,
	736, 737, 794, 738, 739, 740, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 0, 0, 0, 741,
	0, 0, 0, 332, 0, 333, 334, 335, 5661, 336,
	337, 338, 339, 340, 341, 342, 742, 743, 0, 343,
	744, 344, 745, 0, 746, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 747, 748, 749, 0,
	353, 354, 750, 0, 0, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	386, 387, 0, 388, 390, 751, 752, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 753, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	754, 755, 424, 0, 319, 0, 0, 0, 0, 0,
	425, 426, 427, 756, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 0, 434, 435, 436,
	757, 758, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 759, 0, 760, 447, 0, 448, 449,
	450, 451, 452, 453, 454, 761, 762, 763, 549, 0,
	455, 456, 457, 0, 458, 459, 460, 461, 462, 0,
	0, 0, 320, 463, 464, 465, 0, 0, 764, 466,
	550, 467, 765, 766, 0, 767, 0, 468, 469, 472,
	0, 768, 0, 471, 473, 474, 0, 475, 0, 0,
	0, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	485, 484, 0, 487, 769, 486, 0, 488, 489, 0,
	0, 490, 491, 492, 493, 494, 495, 498, 0, 0,
	496, 497, 499, 500, 0, 501, 502, 504, 507, 503,
	505, 506, 508, 521, 522, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 524, 0, 523,
	0, 525, 526, 527, 528, 529, 536, 538, 539, 534,
	535, 537, 540, 541, 543, 531, 532, 533, 0, 542,
	530, 0, 321, 0, 544, 545, 546, 547, 0, 770,
	548, 771, 551, 552, 0, 0, 553, 0, 554, 0,
	0, 556, 557, 558, 0, 0, 559, 560, 772, 0,
	561, 0, 773, 562, 563, 555, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 0, 574, 575, 774,
	576, 577, 578, 775, 579, 580, 581, 776, 582, 777,
	583, 584, 0, 585, 586, 587, 0, 588, 589, 590,
	591, 592, 593, 594, 595, 778, 596, 597, 599, 598,
	600, 0, 601, 0, 602, 603, 604, 0, 0, 0,
	0, 0, 605, 606, 608, 0, 609, 610, 611, 612,
	607, 613, 614, 615, 616, 617, 618, 0, 620, 621,
	619, 622, 623, 0, 624, 625, 626, 627, 628, 779,
	629, 0, 630, 631, 639, 640, 641, 632, 633, 635,
	642, 634, 643, 644, 645, 646, 648, 647, 0, 650,
	651, 649, 652, 653, 654, 0, 655, 780, 656, 636,
	637, 657, 658, 0, 659, 660, 661, 662, 663, 664,
	665, 781, 0, 666, 0, 667, 668, 669, 670, 671,
	672, 674, 638, 675, 680, 681, 782, 676, 677, 678,
	679, 783, 683, 684, 685, 686, 0, 687, 688, 0,
	682, 673, 0, 689, 690, 691, 692, 693, 694, 0,
	695, 696, 0, 697, 784, 785, 786, 787, 0, 709,
	0, 698, 700, 701, 702, 703, 788, 704, 789, 0,
	705, 706, 707, 708, 699, 710, 711, 0, 0, 712,
	713, 714, 716, 718, 719, 715, 717, 720, 0, 721,
	0, 0, 722, 723, 724, 790, 791, 792, 0, 726,
	727, 725, 728, 729, 732, 730, 731, 793, 733, 470,
	734, 735, 0, 0, 316, 0, 736, 737, 794, 738,
	739, 740, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 325, 324, 326, 327, 328, 329, 0,
	330, 331, 0, 0, 0, 0, 0, 741, 0, 0,
	0, 332, 1836, 333, 334, 335, 0, 336, 337, 338,
	339, 340, 341, 342, 742, 743, 0, 343, 744, 344,
	745, 0, 746, 345, 346, 347, 348, 349, 350, 351,
	0, 0, 0, 352, 747, 748, 749, 0, 353, 354,
	750, 0, 0, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 0, 380, 381, 382, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 385, 386, 387,
	0, 388, 390, 751, 752, 0, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 753, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 754, 755,
	424, 0, 319, 0, 0, 0, 0, 0, 425, 426,
	427, 756, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 0, 434, 435, 436, 757, 758,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 759, 0, 760, 447, 0, 448, 449, 450, 451,
	452, 453, 454, 761, 762, 763, 549, 0, 455, 456,
	457, 0, 458, 459, 460, 461, 462, 0, 0, 0,
	320, 463, 464, 465, 0, 0, 764, 466, 550, 467,
	765, 766, 0, 767, 0, 468, 469, 472, 0, 768,
	0, 471, 473, 474, 0, 475, 0, 0, 0, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 485, 484,
	0, 487, 769, 486, 0, 488, 489, 0, 0, 490,
	491, 492, 493, 494, 495, 498, 0, 0, 496, 497,
	499, 500, 0, 501, 502, 504, 507, 503, 505, 506,
	508, 521, 522, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 524, 0, 523, 0, 525,
	526, 527, 528, 529, 536, 538, 539, 534, 535, 537,
	540, 541, 543, 531, 532, 533, 0, 542, 530, 0,
	321, 0, 544, 545, 546, 547, 0, 770, 548, 771,
	551, 552, 0, 0, 553, 0, 554, 0, 0, 556,
	557, 558, 0, 0, 559, 560, 772, 0, 561, 0,
	773, 562, 563, 555, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 0, 574, 575, 774, 576, 577,
	578, 775, 579, 580, 581, 776, 582, 777, 583, 584,
	0, 585, 586, 587, 0, 588, 589, 590, 591, 592,
	593, 594, 595, 778, 596, 597, 599, 598, 600, 0,
	601, 0, 602, 603, 604, 0, 0, 0, 0, 0,
	605, 606, 608, 0, 609, 610, 611, 612, 607, 613,
	614, 615, 616, 617, 618, 0, 620, 621, 619, 622,
	623, 0, 624, 625, 626, 627, 628, 779, 629, 0,
	630, 631, 639, 640, 641, 632, 633, 635, 642, 634,
	643, 644, 645, 646, 648, 647, 0, 650, 651, 649,
	652, 653, 654, 0, 655, 780, 656, 636, 637, 657,
	658, 0, 659, 660, 661, 662, 663, 664, 665, 781,
	0, 666, 0, 667, 668, 669, 670, 671, 672, 674,
	638, 675, 680, 681, 782, 676, 677, 678, 679, 783,
	683, 684, 685, 686, 0, 687, 688, 0, 682, 673,
	0, 689, 690, 691, 692, 693, 694, 0, 695, 696,
	0, 697, 784, 785, 786, 787, 0, 709, 0, 698,
	700, 701, 702, 703, 788, 704, 789, 0, 705, 706,
	707, 708, 699, 710, 711, 0, 0, 712, 713, 714,
	716, 718, 719, 715, 717, 720, 0, 721, 0, 0,
	722, 723, 724, 790, 791, 792, 0, 726, 727, 725,
	728, 729, 732, 730, 731, 793, 733, 470, 734, 735,
	0, 0, 3235, 0, 736, 737, 794, 738, 739, 740,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 332,
	4154, 333, 334, 335, 1364, 336, 337, 338, 339, 340,
	341, 342, 0, 2286, 0, 343, 2276, 344, 2292, 0,
	2299, 345, 346, 347, 348, 349, 350, 351, 0, 0,
	0, 352, 2302, 2303, 0, 0, 353, 354, 0, 0,
	1678, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 1365, 380, 381, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 386, 387, 1347, 388,
	390, 2290, 2289, 0, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	1332, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 0, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 0, 0, 424, 0,
	319, 0, 0, 0, 0, 0, 425, 426, 427, 2288,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 1366, 434, 435, 436, 2297, 2298, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 0,
	0, 0, 447, 0, 448, 449, 450, 451, 452, 453,
	454, 0, 0, 0, 549, 1368, 455, 456, 457, 3229,
	458, 459, 460, 461, 462, 0, 0, 0, 0, 463,
	464, 465, 0, 1367, 3231, 466, 550, 467, 2283, 2284,
	0, 2279, 0, 468, 469, 472, 1369, 0, 1370, 471,
	473, 474, 1371, 475, 0, 0, 0, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 485, 484, 0, 487,
	0, 486, 1372, 488, 489, 1373, 0, 490, 491, 492,
	493, 494, 495, 498, 0, 0, 496, 497, 499, 500,
	0, 501, 502, 504, 507, 503, 505, 506, 508, 521,
	522, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 524, 0, 523, 1374, 525, 526, 527,
	528, 529, 536, 538, 539, 534, 535, 537, 540, 541,
	543, 531, 532, 533, 1375, 542, 530, 0, 0, 1376,
	544, 545, 546, 547, 0, 0, 548, 2291, 551, 552,
	0, 0, 553, 0, 554, 0, 0, 556, 557, 558,
	0, 0, 559, 560, 3230, 1377, 561, 1378, 0, 562,
	563, 555, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 0, 574, 575, 2273, 576, 577, 578, 2274,
	579, 580, 581, 0, 582, 0, 583, 584, 0, 585,
	586, 587, 0, 588, 589, 590, 591, 592, 593, 594,
	595, 2287, 596, 597, 599, 598, 600, 0, 601, 0,
	602, 603, 604, 0, 0, 0, 0, 0, 605, 606,
	608, 0, 609, 610, 611, 612, 607, 613, 614, 615,
	616, 617, 618, 0, 620, 621, 619, 622, 623, 1379,
	624, 625, 626, 627, 628, 0, 629, 0, 630, 631,
	639, 640, 641, 632, 633, 635, 642, 634, 643, 644,
	645, 646, 648, 647, 0, 650, 651, 649, 652, 653,
	654, 0, 655, 0, 656, 636, 637, 657, 658, 1380,
	659, 660, 661, 662, 663, 664, 665, 2285, 0, 666,
	0, 667, 668, 669, 670, 671, 672, 674, 638, 675,
	680, 681, 2301, 676, 677, 678, 679, 0, 683, 684,
	685, 686, 0, 687, 688, 0, 682, 673, 0, 689,
	690, 691, 692, 693, 694, 0, 695, 696, 0, 697,
	2293, 2294, 2295, 2296, 0, 709, 0, 698, 700, 701,
	702, 703, 0, 704, 0, 0, 705, 706, 707, 708,
	699, 710, 711, 0, 0, 712, 713, 714, 716, 718,
	719, 715, 717, 720, 0, 721, 0, 0, 722, 723,
	724, 0, 2277, 2300, 3232, 726, 727, 725, 728, 729,
	732, 730, 731, 0, 733, 470, 734, 735, 0, 0,
	0, 0, 736, 737, 0, 738, 739, 740, 0, 316,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 0, 330, 331, 0, 0, 0,
	0, 3224, 741, 0, 2267, 0, 332, 0, 333, 334,
	335, 0, 336, 337, 338, 339, 340, 341, 342, 742,
	743, 0, 343, 744, 344, 745, 0, 746, 345, 346,
	347, 348, 349, 350, 351, 0, 0, 0, 352, 747,
	748, 749, 0, 353, 354, 750, 0, 0, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 0,
	380, 381, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 386, 387, 0, 388, 390, 751, 752,
	0, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	753, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 754, 755, 424, 0, 0, 0, 0,
	0, 0, 0, 425, 426, 427, 756, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 0,
	434, 435, 436, 757, 758, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 759, 0, 760, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 761, 762,
	763, 549, 0, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 0, 0, 0, 0, 463, 464, 465, 0,
	0, 764, 466, 550, 467, 765, 766, 0, 767, 0,
	468, 469, 472, 0, 768, 0, 471, 473, 474, 0,
	475, 0, 0, 0, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 485, 484, 0, 487, 769, 486, 0,
	488, 489, 0, 0, 490, 491, 492, 493, 494, 495,
	498, 0, 0, 496, 497, 499, 500, 0, 501, 502,
	504, 507, 503, 505, 506, 508, 521, 522, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	524, 0, 523, 0, 525, 526, 527, 528, 529, 536,
	538, 539, 534, 535, 537, 540, 541, 543, 531, 532,
	533, 0, 542, 530, 0, 0, 0, 544, 545, 546,
	547, 0, 770, 548, 771, 551, 552, 0, 0, 553,
	0, 554, 0, 0, 556, 557, 558, 0, 0, 559,
	560, 772, 0, 561, 0, 773, 562, 563, 555, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 0,
	574, 575, 774, 576, 577, 578, 775, 579, 580, 581,
	776, 582, 777, 583, 584, 0, 585, 586, 587, 0,
	588, 589, 590, 591, 592, 593, 594, 595, 778, 596,
	597, 599, 598, 600, 0, 601, 0, 602, 603, 604,
	0, 0, 0, 0, 0, 605, 606, 608, 0, 609,
	610, 611, 612, 607, 613, 614, 615, 616, 617, 618,
	0, 620, 621, 619, 622, 623, 0, 624, 625, 626,
	627, 628, 779, 629, 0, 630, 631, 639, 640, 641,
	632, 633, 635, 642, 634, 643, 644, 645, 646, 648,
	647, 0, 650, 651, 649, 652, 653, 654, 0, 655,
	780, 656, 636, 637, 657, 658, 0, 659, 660, 661,
	662, 663, 664, 665, 781, 0, 666, 0, 667, 668,
	669, 670, 671, 672, 674, 638, 675, 680, 681, 782,
	676, 677, 678, 679, 783, 683, 684, 685, 686, 0,
	687, 688, 0, 682, 673, 0, 689, 690, 691, 692,
	693, 694, 0, 695, 696, 0, 697, 784, 785, 786,
	787, 0, 709, 0, 698, 700, 701, 702, 703, 788,
	704, 789, 0, 705, 706, 707, 708, 699, 710, 711,
	0, 0, 712, 713, 714, 716, 718, 719, 715, 717,
	720, 0, 721, 0, 0, 722, 723, 724, 790, 791,
	792, 0, 726, 727, 725, 728, 729, 732, 730, 731,
	793, 733, 470, 734, 735, 0, 0, 0, 0, 736,
	737, 794, 738, 739, 740, 3235, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 0, 0, 3546, 0, 0,
	0, 0, 332, 0, 333, 334, 335, 1364, 336, 337,
	338, 339, 340, 341, 342, 0, 2286, 0, 343, 2276,
	344, 2292, 0, 2299, 345, 346, 347, 348, 349, 350,
	351, 0, 0, 0, 352, 2302, 2303, 0, 0, 353,
	354, 0, 0, 1678, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 1365, 380, 381, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 386,
	387, 1347, 388, 390, 2290, 2289, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 1332, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 0, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 0,
	0, 424, 0, 319, 0, 0, 0, 0, 0, 425,
	426, 427, 2288, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 1366, 434, 435, 436, 2297,
	2298, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 0, 0, 0, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 0, 0, 0, 549, 1368, 455,
	456, 457, 3229, 458, 459, 460, 461, 462, 0, 0,
	0, 0, 463, 464, 465, 0, 1367, 3231, 466, 550,
	467, 2283, 2284, 0, 2279, 0, 468, 469, 472, 1369,
	0, 1370, 471, 473, 474, 1371, 475, 0, 0, 0,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 485,
	484, 0, 487, 0, 486, 1372, 488, 489, 1373, 0,
	490, 491, 492, 493, 494, 495, 498, 0, 0, 496,
	497, 499, 500, 0, 501, 502, 504, 507, 503, 505,
	506, 508, 521, 522, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 524, 0, 523, 1374,
	525, 526, 527, 528, 529, 536, 538, 539, 534, 535,
	537, 540, 541, 543, 531, 532, 533, 1375, 542, 530,
	0, 0, 1376, 544, 545, 546, 547, 0, 0, 548,
	2291, 551, 552, 0, 0, 553, 0, 554, 0, 0,
	556, 557, 558, 0, 0, 559, 560, 3230, 1377, 561,
	1378, 0, 562, 563, 555, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 0, 574, 575, 2273, 576,
	577, 578, 2274, 579, 580, 581, 0, 582, 0, 583,
	584, 0, 585, 586, 587, 0, 588, 589, 590, 591,
	592, 593, 594, 595, 2287, 596, 597, 599, 598, 600,
	0, 601, 0, 602, 603, 604, 0, 0, 0, 0,
	0, 605, 606, 608, 0, 609, 610, 611, 612, 607,
	613, 614, 615, 616, 617, 618, 0, 620, 621, 619,
	622, 623, 1379, 624, 625, 626, 627, 628, 0, 629,
	0, 630, 631, 639, 640, 641, 632, 633, 635, 642,
	634, 643, 644, 645, 646, 648, 647, 0, 650, 651,
	649, 652, 653, 654, 0, 655, 0, 656, 636, 637,
	657, 658, 1380, 659, 660, 661, 662, 663, 664, 665,
	2285, 0, 666, 0, 667, 668, 669, 670, 671, 672,
	674, 638, 675, 680, 681, 2301, 676, 677, 678, 679,
	0, 683, 684, 685, 686, 0, 687, 688, 0, 682,
	673, 0, 689, 690, 691, 692, 693, 694, 0, 695,
	696, 0, 697, 2293, 2294, 2295, 2296, 0, 709, 0,
	698, 700, 701, 702, 703, 0, 704, 0, 0, 705,
	706, 707, 708, 699, 710, 711, 0, 0, 712, 713,
	714, 716, 718, 719, 715, 717, 720, 0, 721, 0,
	0, 722, 723, 724, 0, 2277, 2300, 3232, 726, 727,
	725, 728, 729, 732, 730, 731, 0, 733, 470, 734,
	735, 0, 0, 0, 0, 736, 737, 0, 738, 739,
	740, 316, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	325, 324, 326, 327, 328, 329, 0, 330, 331, 0,
	0, 0, 0, 0, 741, 0, 0, 2267, 332, 0,
	333, 334, 335, 0, 336, 337, 338, 339, 340, 341,
	342, 742, 743, 0, 343, 744, 344, 745, 0, 746,
	345, 346, 347, 348, 349, 350, 351, 0, 0, 0,
	352, 747, 748, 749, 0, 353, 354, 750, 0, 0,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 0, 380, 381, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 386, 387, 0, 388, 390,
	751, 752, 0, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 753, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 754, 755, 424, 0, 0,
	0, 0, 0, 0, 0, 425, 426, 427, 756, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 0, 434, 435, 436, 757, 758, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 759, 0,
	760, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	761, 762, 763, 549, 0, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 0, 0, 0, 0, 463, 464,
	465, 0, 0, 764, 466, 550, 467, 765, 766, 0,
	767, 0, 468, 469, 472, 0, 768, 0, 471, 473,
	474, 0, 475, 0, 0, 0, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 485, 484, 0, 487, 769,
	486, 0, 488, 489, 0, 0, 490, 491, 492, 493,
	494, 495, 498, 0, 0, 496, 497, 499, 500, 0,
	501, 502, 504, 507, 503, 505, 506, 508, 521, 522,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 524, 0, 523, 0, 525, 526, 527, 528,
	529, 536, 538, 539, 534, 535, 537, 540, 541, 543,
	531, 532, 533, 0, 542, 530, 0, 0, 0, 544,
	545, 546, 547, 0, 770, 548, 771, 551, 552, 0,
	0, 553, 0, 554, 0, 0, 556, 557, 558, 0,
	0, 559, 560, 772, 0, 561, 0, 773, 562, 563,
	555, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 0, 574, 575, 774, 576, 577, 578, 775, 579,
	580, 581, 776, 582, 777, 583, 584, 0, 585, 586,
	587, 0, 588, 589, 590, 591, 592, 593, 594, 595,
	778, 596, 597, 599, 598, 600, 0, 601, 0, 602,
	603, 604, 0, 0, 0, 0, 0, 605, 606, 608,
	0, 609, 610, 611, 612, 607, 613, 614, 615, 616,
	617, 618, 0, 620, 621, 619, 622, 623, 0, 624,
	625, 626, 627, 628, 779, 629, 0, 630, 631, 639,
	640, 641, 632, 633, 635, 642, 634, 643, 644, 645,
	646, 648, 647, 0, 650, 651, 649, 652, 653, 654,
	0, 655, 780, 656, 636, 637, 657, 658, 0, 659,
	660, 661, 662, 663, 664, 665, 781, 0, 666, 0,
	667, 668, 669, 670, 671, 672, 674, 638, 675, 680,
	681, 782, 676, 677, 678, 679, 783, 683, 684, 685,
	686, 0, 687, 688, 0, 682, 673, 0, 689, 690,
	691, 692, 693, 694, 0, 695, 696, 0, 697, 784,
	785, 786, 787, 0, 709, 0, 698, 700, 701, 702,
	703, 788, 704, 789, 0, 705, 706, 707, 708, 699,
	710, 711, 0, 0, 712, 713, 714, 716, 718, 719,
	715, 717, 720, 0, 721, 0, 0, 722, 723, 724,
	790, 791, 792, 0, 726, 727, 725, 728, 729, 732,
	730, 731, 793, 733, 470, 734, 735, 316, 0, 0,
	0, 736, 737, 794, 738, 739, 740, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 0, 0, 0,
	741, 0, 0, 0, 332, 0, 333, 334, 335, 4323,
	336, 337, 338, 339, 340, 341, 342, 742, 743, 0,
	343, 744, 344, 745, 0, 746, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 747, 748, 749,
	0, 353, 354, 750, 0, 0, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 0, 380, 381,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 386, 387, 0, 388, 390, 751, 752, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 753, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 754, 755, 424, 0, 0, 0, 0, 0, 0,
	0, 425, 426, 427, 756, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 0, 434, 435,
	436, 757, 758, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 759, 0, 760, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 761, 762, 763, 549,
	0, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 0, 463, 464, 465, 0, 0, 764,
	466, 550, 467, 765, 766, 0, 767, 0, 468, 469,
	472, 0, 768, 0, 471, 473, 474, 0, 475, 0,
	0, 0, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 485, 484, 0, 487, 769, 486, 0, 488, 489,
	0, 0, 490, 491, 492, 493, 494, 495, 498, 0,
	0, 496, 497, 499, 500, 0, 501, 502, 504, 507,
	503, 505, 506, 508, 521, 522, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 524, 0,
	523, 0, 525, 526, 527, 528, 529, 536, 538, 539,
	534, 535, 537, 540, 541, 543, 531, 532, 533, 0,
	542, 530, 0, 0, 0, 544, 545, 546, 547, 0,
	770, 548, 771, 551, 552, 0, 0, 553, 0, 554,
	0, 0, 556, 557, 558, 0, 0, 559, 560, 772,
	0, 561, 0, 773, 562, 563, 555, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 0, 574, 575,
	774, 576, 577, 578, 775, 579, 580, 581, 776, 582,
	777, 583, 584, 0, 585, 586, 587, 0, 588, 589,
	590, 591, 592, 593, 594, 595, 778, 596, 597, 599,
	598, 600, 0, 601, 0, 602, 603, 604, 0, 0,
	0, 0, 0, 605, 606, 608, 0, 609, 610, 611,
	612, 607, 613, 614, 615, 616, 617, 618, 0, 620,
	621, 619, 622, 623, 0, 624, 625, 626, 627, 628,
	779, 629, 0, 630, 631, 639, 640, 641, 632, 633,
	635, 642, 634, 643, 644, 645, 646, 648, 647, 0,
	650, 651, 649, 652, 653, 654, 0, 655, 780, 656,
	636, 637, 657, 658, 0, 659, 660, 661, 662, 663,
	664, 665, 781, 0, 666, 0, 667, 668, 669, 670,
	671, 672, 674, 638, 675, 680, 681, 782, 676, 677,
	678, 679, 783, 683, 684, 685, 686, 0, 687, 688,
	0, 682, 673, 0, 689, 690, 691, 692, 693, 694,
	0, 695, 696, 0, 697, 784, 785, 786, 787, 0,
	709, 0, 698, 700, 701, 702, 703, 788, 704, 789,
	0, 705, 706, 707, 708, 699, 710, 711, 0, 0,
	712, 713, 714, 716, 718, 719, 715, 717, 720, 0,
	721, 0, 0, 722, 723, 724, 790, 791, 792, 0,
	726, 727, 725, 728, 729, 732, 730, 731, 793, 733,
	470, 734, 735, 0, 0, 0, 0, 736, 737, 794,
	738, 739, 740, 1423, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 0, 0, 2646, 1324, 0, 0, 0,
	332, 0, 333, 334, 335, 1364, 336, 337, 338, 339,
	340, 341, 342, 742, 743, 0, 343, 744, 344, 745,
	0, 746, 345, 346, 347, 348, 349, 350, 351, 0,
	1323, 0, 352, 747, 748, 749, 0, 353, 354, 1330,
	0, 1311, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 1365, 380, 381, 382, 1314, 1312, 1313,
	1320, 1316, 1315, 1319, 383, 384, 385, 386, 387, 0,
	388, 390, 751, 752, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 753, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 1355, 1356, 424,
	0, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	756, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 1366, 434, 435, 436, 757, 758, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	1362, 0, 760, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 1325, 1326, 1329, 549, 1368, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 320,
	463, 464, 465, 0, 1367, 764, 466, 550, 467, 765,
	766, 0, 767, 0, 468, 469, 472, 1369, 1327, 1370,
	471, 473, 474, 1371, 475, 0, 0, 0, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 485, 484, 0,
	487, 1363, 486, 1372, 488, 489, 1373, 0, 490, 491,
	492, 493, 494, 495, 498, 1318, 1317, 496, 497, 499,
	500, 0, 501, 502, 504, 507, 503, 505, 506, 508,
	521, 522, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 524, 0, 523, 1374, 525, 526,
	527, 528, 529, 536, 538, 539, 534, 535, 537, 540,
	541, 543, 531, 532, 533, 1375, 542, 530, 0, 321,
	1376, 544, 545, 546, 547, 0, 1328, 548, 771, 551,
	552, 0, 0, 553, 0, 554, 0, 0, 556, 557,
	558, 0, 0, 559, 560, 772, 1377, 561, 1378, 1357,
	562, 563, 555, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 0, 574, 575, 774, 576, 577, 578,
	775, 579, 580, 581, 1358, 582, 777, 583, 584, 0,
	585, 586, 587, 0, 588, 589, 590, 591, 592, 593,
	594, 595, 778, 596, 597, 599, 598, 600, 0, 601,
	0, 602, 603, 604, 0, 0, 0, 0, 0, 605,
	606, 608, 0, 609, 610, 611, 612, 607, 613, 614,
	615, 616, 617, 618, 0, 620, 621, 619, 622, 623,
	1379, 624, 625, 626, 627, 628, 779, 629, 0, 630,
	631, 639, 640, 641, 632, 633, 635, 642, 634, 643,
	644, 645, 646, 648, 647, 0, 650, 651, 649, 652,
	653, 654, 1321, 655, 780, 656, 636, 637, 657, 658,
	1380, 659, 660, 661, 662, 663, 664, 665, 781, 0,
	666, 0, 667, 668, 669, 670, 671, 672, 674, 638,
	675, 680, 681, 782, 676, 677, 678, 679, 1359, 683,
	684, 685, 686, 0, 687, 688, 0, 682, 673, 0,
	689, 690, 691, 692, 693, 694, 0, 695, 696, 0,
	697, 784, 785, 786, 787, 0, 709, 0, 698, 700,
	701, 702, 703, 1360, 704, 1361, 0, 705, 706, 707,
	708, 699, 710, 711, 0, 0, 712, 713, 714, 716,
	718, 719, 715, 717, 720, 1322, 721, 0, 0, 722,
	723, 724, 790, 791, 792, 0, 726, 727, 725, 728,
	729, 732, 730, 731, 793, 733, 470, 734, 735, 2280,
	0, 0, 0, 736, 737, 794, 738, 739, 740, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 0, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 332, 0, 333, 334,
	335, 1364, 336, 337, 338, 339, 340, 341, 342, 0,
	2286, 0, 343, 2276, 344, 2292, 0, 2299, 345, 346,
	347, 348, 349, 350, 351, 0, 0, 0, 352, 2302,
	2303, 0, 0, 353, 354, 0, 0, 1678, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 1365,
	380, 381, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 386, 387, 1347, 388, 390, 2290, 2289,
	0, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 1332, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	0, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 0, 0, 424, 0, 0, 0, 0,
	0, 0, 0, 425, 426, 427, 2288, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 1366,
	434, 435, 436, 2297, 2298, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 0, 0, 0, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 0, 0,
	0, 549, 1368, 455, 456, 457, 3229, 458, 459, 460,
	461, 462, 0, 0, 0, 0, 463, 464, 465, 0,
	1367, 3231, 466, 550, 467, 2283, 2284, 0, 2279, 0,
	468, 469, 472, 1369, 0, 1370, 471, 473, 474, 1371,
	475, 0, 0, 0, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 485, 484, 0, 487, 0, 486, 1372,
	488, 489, 1373, 0, 490, 491, 492, 493, 494, 495,
	498, 0, 0, 496, 497, 499, 500, 0, 501, 502,
	504, 507, 503, 505, 506, 508, 521, 522, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	524, 0, 523, 1374, 525, 526, 527, 528, 529, 536,
	538, 539, 534, 535, 537, 540, 541, 543, 531, 532,
	533, 1375, 542, 530, 0, 0, 1376, 544, 545, 546,
	547, 0, 0, 548, 2291, 551, 552, 0, 0, 553,
	0, 554, 0, 0, 556, 557, 558, 0, 0, 559,
	560, 3230, 1377, 561, 1378, 0, 562, 563, 555, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 0,
	574, 575, 2273, 576, 577, 578, 2274, 579, 580, 581,
	0, 582, 0, 583, 584, 0, 585, 586, 587, 0,
	588, 589, 590, 591, 592, 593, 594, 595, 2287, 596,
	597, 599, 598, 600, 0, 601, 0, 602, 603, 604,
	0, 0, 0, 0, 0, 605, 606, 608, 0, 609,
	610, 611, 612, 607, 613, 614, 615, 616, 617, 618,
	0, 620, 621, 619, 622, 623, 1379, 624, 625, 626,
	627, 628, 0, 629, 0, 630, 631, 639, 640, 641,
	632, 633, 635, 642, 634, 643, 644, 645, 646, 648,
	647, 0, 650, 651, 649, 652, 653, 654, 0, 655,
	0, 656, 636, 637, 657, 658, 1380, 659, 660, 661,
	662, 663, 664, 665, 2285, 0, 666, 0, 667, 668,
	669, 670, 671, 672, 674, 638, 675, 680, 681, 2301,
	676, 677, 678, 679, 0, 683, 684, 685, 686, 0,
	687, 688, 0, 682, 673, 0, 689, 690, 691, 692,
	693, 694, 0, 695, 696, 0, 697, 2293, 2294, 2295,
	2296, 0, 709, 0, 698, 700, 701, 702, 703, 0,
	704, 0, 0, 705, 706, 707, 708, 699, 710, 711,
	0, 0, 712, 713, 714, 716, 718, 719, 715, 717,
	720, 0, 721, 0, 0, 722, 723, 724, 0, 2277,
	2300, 3232, 726, 727, 725, 728, 729, 732, 730, 731,
	0, 733, 470, 734, 735, 0, 0, 0, 0, 736,
	737, 0, 738, 739, 740, 1061, 0, 960, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 0, 0, 0,
	741, 2267, 0, 0, 332, 0, 333, 334, 335, 0,
	336, 337, 338, 339, 340, 341, 342, 742, 743, 0,
	343, 744, 344, 745, 0, 746, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 747, 748, 749,
	0, 353, 354, 750, 0, 0, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 0, 380, 381,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 967, 387, 0, 388, 390, 751, 752, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 753, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 754, 755, 424, 0, 319, 0, 0, 0, 0,
	0, 425, 426, 427, 756, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 1058, 0, 434, 435,
	436, 757, 758, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 759, 0, 760, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 761, 762, 763, 549,
	0, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 320, 463, 464, 465, 0, 0, 764,
	466, 550, 467, 765, 766, 0, 767, 0, 468, 469,
	472, 0, 768, 0, 471, 473, 474, 0, 475, 0,
	0, 0, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 485, 484, 0, 487, 769, 486, 0, 488, 489,
	0, 0, 490, 491, 492, 493, 494, 495, 498, 0,
	0, 496, 497, 499, 500, 0, 501, 502, 504, 507,
	503, 505, 506, 508, 521, 522, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 524, 0,
	523, 0, 525, 526, 527, 528, 529, 536, 538, 539,
	534, 535, 537, 540, 541, 543, 531, 532, 533, 0,
	542, 530, 0, 321, 0, 544, 545, 546, 547, 0,
	770, 548, 771, 551, 552, 0, 0, 553, 0, 554,
	0, 0, 556, 557, 558, 0, 0, 559, 560, 772,
	0, 561, 0, 773, 562, 563, 555, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 0, 574, 575,
	774, 576, 577, 578, 775, 579, 580, 581, 776, 582,
	777, 583, 584, 0, 585, 586, 587, 0, 588, 589,
	590, 591, 592, 593, 594, 595, 778, 596, 597, 599,
	598, 600, 0, 601, 0, 602, 603, 604, 0, 0,
	0, 0, 0, 605, 606, 608, 0, 609, 610, 611,
	612, 607, 613, 614, 615, 616, 617, 618, 0, 620,
	621, 619, 622, 623, 0, 624, 625, 626, 627, 628,
	779, 629, 0, 630, 631, 639, 640, 641, 632, 633,
	635, 642, 634, 643, 644, 645, 646, 648, 647, 0,
	650, 651, 649, 652, 653, 654, 0, 655, 780, 656,
	636, 637, 657, 658, 0, 659, 660, 661, 662, 663,
	664, 665, 781, 0, 666, 0, 667, 668, 669, 670,
	671, 672, 674, 638, 675, 680, 681, 782, 676, 677,
	678, 679, 783, 683, 684, 685, 686, 0, 687, 1060,
	0, 682, 673, 965, 689, 690, 691, 692, 693, 966,
	0, 695, 696, 0, 697, 784, 785, 786, 787, 0,
	709, 0, 698, 700, 701, 702, 703, 788, 704, 789,
	0, 705, 706, 707, 708, 699, 710, 711, 0, 0,
	712, 713, 714, 716, 718, 719, 715, 717, 720, 0,
	721, 0, 0, 722, 723, 724, 790, 791, 792, 0,
	726, 727, 725, 728, 729, 732, 730, 731, 793, 733,
	470, 734, 735, 2249, 0, 0, 0, 736, 737, 794,
	738, 739, 740, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 4458, 330,
	331, 0, 0, 0, 0, 0, 741, 970, 0, 0,
	332, 0, 333, 334, 335, 0, 336, 337, 338, 339,
	340, 341, 342, 742, 743, 0, 343, 744, 344, 745,
	0, 746, 345, 346, 347, 348, 349, 350, 351, 0,
	0, 0, 352, 747, 748, 749, 0, 353, 354, 750,
	0, 0, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 0, 380, 381, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 2256, 387, 0,
	388, 390, 751, 752, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 753, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 2257, 754, 755, 424,
	0, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	756, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 0, 2258, 435, 436, 757, 758, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	759, 0, 760, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 761, 762, 763, 549, 0, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 320,
	463, 464, 465, 0, 0, 764, 466, 550, 467, 765,
	766, 0, 767, 0, 468, 469, 472, 0, 768, 0,
	471, 473, 474, 0, 475, 0, 0, 0, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 485, 484, 0,
	487, 769, 486, 0, 488, 489, 0, 0, 490, 491,
	492, 493, 494, 495, 498, 0, 0, 496, 497, 499,
	500, 0, 501, 502, 504, 507, 503, 505, 506, 508,
	521, 522, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 524, 0, 523, 0, 525, 526,
	527, 528, 529, 536, 538, 539, 534, 535, 537, 540,
	541, 543, 531, 532, 533, 0, 542, 530, 0, 321,
	0, 544, 545, 546, 547, 0, 770, 548, 771, 551,
	552, 0, 0, 553, 0, 554, 0, 0, 556, 557,
	558, 0, 0, 559, 560, 772, 0, 561, 0, 773,
	562, 563, 555, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 0, 574, 575, 774, 576, 577, 578,
	775, 579, 580, 581, 776, 582, 777, 583, 584, 0,
	585, 586, 587, 0, 588, 589, 590, 591, 592, 593,
	594, 595, 778, 596, 597, 599, 598, 600, 0, 601,
	0, 602, 603, 604, 0, 0, 0, 0, 0, 605,
	606, 608, 0, 609, 610, 611, 612, 607, 613, 614,
	615, 616, 617, 618, 0, 620, 621, 619, 622, 623,
	0, 624, 625, 626, 627, 628, 779, 629, 0, 630,
	631, 639, 640, 641, 632, 633, 635, 4457, 634, 643,
	644, 645, 646, 648, 647, 0, 2253, 651, 649, 652,
	653, 654, 0, 655, 780, 656, 636, 637, 657, 658,
	0, 659, 660, 661, 662, 663, 664, 665, 781, 0,
	666, 0, 667, 668, 669, 670, 671, 672, 674, 638,
	675, 680, 681, 782, 676, 677, 678, 679, 783, 683,
	684, 685, 686, 0, 687, 688, 0, 682, 673, 2255,
	689, 690, 691, 692, 693, 694, 0, 695, 696, 0,
	697, 784, 785, 786, 787, 0, 709, 0, 698, 700,
	701, 702, 703, 788, 704, 789, 0, 705, 706, 4456,
	708, 699, 710, 711, 0, 0, 712, 713, 714, 716,
	718, 719, 715, 717, 720, 0, 721, 0, 0, 722,
	723, 724, 790, 791, 792, 0, 726, 727, 725, 728,
	729, 732, 730, 731, 793, 733, 470, 734, 735, 2249,
	0, 0, 0, 736, 737, 794, 738, 739, 740, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 2307, 330, 331, 0, 0, 0,
	0, 0, 741, 970, 0, 0, 332, 0, 333, 334,
	335, 0, 336, 337, 338, 339, 340, 341, 342, 742,
	743, 0, 343, 744, 344, 745, 0, 746, 345, 346,
	347, 348, 349, 350, 351, 0, 0, 0, 352, 747,
	748, 749, 0, 353, 354, 750, 0, 0, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 0,
	380, 381, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 2256, 387, 0, 388, 390, 751, 752,
	0, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	753, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 2257, 754, 755, 424, 0, 319, 0, 0,
	0, 0, 0, 425, 426, 427, 756, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 0,
	2258, 435, 436, 757, 758, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 759, 0, 760, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 761, 762,
	763, 549, 0, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 0, 0, 0, 320, 463, 464, 465, 0,
	0, 764, 466, 550, 467, 765, 766, 0, 767, 0,
	468, 469, 472, 0, 768, 0, 471, 473, 474, 0,
	475, 0, 0, 0, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 485, 484, 0, 487, 769, 486, 0,
	488, 489, 0, 0, 490, 491, 492, 493, 494, 495,
	498, 0, 0, 496, 497, 499, 500, 0, 501, 502,
	504, 507, 503, 505, 506, 508, 521, 522, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	524, 0, 523, 0, 525, 526, 527, 528, 529, 536,
	538, 539, 534, 535, 537, 540, 541, 543, 531, 532,
	533, 0, 542, 530, 0, 321, 0, 544, 545, 546,
	547, 0, 770, 548, 771, 551, 552, 0, 0, 553,
	0, 554, 0, 0, 556, 557, 558, 0, 0, 559,
	560, 772, 0, 561, 0, 773, 562, 563, 555, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 0,
	574, 575, 774, 576, 577, 578, 775, 579, 580, 581,
	776, 582, 777, 583, 584, 0, 585, 586, 587, 0,
	588, 589, 590, 591, 592, 593, 594, 595, 778, 596,
	597, 599, 598, 600, 0, 601, 0, 602, 603, 604,
	0, 0, 0, 0, 0, 605, 606, 608, 0, 609,
	610, 611, 612, 607, 613, 614, 615, 616, 617, 618,
	0, 620, 621, 619, 622, 623, 0, 624, 625, 626,
	627, 628, 779, 629, 0, 630, 631, 639, 640, 641,
	632, 633, 635, 2306, 634, 643, 644, 645, 646, 648,
	647, 0, 2308, 651, 649, 652, 653, 654, 0, 655,
	780, 656, 636, 637, 657, 658, 0, 659, 660, 661,
	662, 663, 664, 665, 781, 0, 666, 0, 667, 668,
	669, 670, 671, 672, 674, 638, 675, 680, 681, 782,
	676, 677, 678, 679, 783, 683, 684, 685, 686, 0,
	687, 688, 0, 682, 673, 2255, 689, 690, 691, 692,
	693, 694, 0, 695, 696, 0, 697, 784, 785, 786,
	787, 0, 709, 0, 698, 700, 701, 702, 703, 788,
	704, 789, 0, 705, 706, 2305, 708, 699, 710, 711,
	0, 0, 712, 713, 714, 716, 718, 719, 715, 717,
	720, 0, 721, 0, 0, 722, 723, 724, 790, 791,
	792, 0, 726, 727, 725, 728, 729, 732, 730, 731,
	793, 733, 470, 734, 735, 2249, 0, 0, 0, 736,
	737, 794, 738, 739, 740, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	2248, 330, 331, 0, 0, 0, 0, 0, 741, 970,
	0, 0, 332, 0, 333, 334, 335, 0, 336, 337,
	338, 339, 340, 341, 342, 742, 743, 0, 343, 744,
	344, 745, 0, 746, 345, 346, 347, 348, 349, 350,
	351, 0, 0, 0, 352, 747, 748, 749, 0, 353,
	354, 750, 0, 0, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 0, 380, 381, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 2256,
	387, 0, 388, 390, 751, 752, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 753, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 2257, 754,
	755, 424, 0, 319, 0, 0, 0, 0, 0, 425,
	426, 427, 756, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 0, 2258, 435, 436, 757,
	758, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 759, 0, 760, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 761, 762, 763, 549, 0, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 320, 463, 464, 465, 0, 0, 764, 466, 550,
	467, 765, 766, 0, 767, 0, 468, 469, 472, 0,
	768, 0, 471, 473, 474, 0, 475, 0, 0, 0,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 485,
	484, 0, 487, 769, 486, 0, 488, 489, 0, 0,
	490, 491, 492, 493, 494, 495, 498, 0, 0, 496,
	497, 499, 500, 0, 501, 502, 504, 507, 503, 505,
	506, 508, 521, 522, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 524, 0, 523, 0,
	525, 526, 527, 528, 529, 536, 538, 539, 534, 535,
	537, 540, 541, 543, 531, 532, 533, 0, 542, 530,
	0, 321, 0, 544, 545, 546, 547, 0, 770, 548,
	771, 551, 552, 0, 0, 553, 0, 554, 0, 0,
	556, 557, 558, 0, 0, 559, 560, 772, 0, 561,
	0, 773, 562, 563, 555, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 0, 574, 575, 774, 576,
	577, 578, 775, 579, 580, 581, 776, 582, 777, 583,
	584, 0, 585, 586, 587, 0, 588, 589, 590, 591,
	592, 593, 594, 595, 778, 596, 597, 599, 598, 600,
	0, 601, 0, 602, 603, 604, 0, 0, 0, 0,
	0, 605, 606, 608, 0, 609, 610, 611, 612, 607,
	613, 614, 615, 616, 617, 618, 0, 620, 621, 619,
	622, 623, 0, 624, 625, 626, 627, 628, 779, 629,
	0, 630, 631, 639, 640, 641, 632, 633, 635, 2247,
	634, 643, 644, 645, 646, 648, 647, 0, 2253, 651,
	649, 652, 653, 654, 0, 655, 780, 656, 636, 637,
	657, 658, 0, 659, 660, 661, 662, 663, 664, 665,
	781, 0, 666, 0, 667, 668, 669, 670, 671, 672,
	674, 638, 675, 680, 681, 782, 676, 677, 678, 679,
	783, 683, 684, 685, 686, 0, 687, 688, 0, 682,
	673, 2255, 689, 690, 691, 692, 693, 694, 0, 695,
	696, 0, 697, 784, 785, 786, 787, 0, 709, 0,
	698, 700, 701, 702, 703, 788, 704, 789, 0, 705,
	706, 2246, 708, 699, 710, 711, 0, 0, 712, 713,
	714, 716, 718, 719, 715, 717, 720, 0, 721, 0,
	0, 722, 723, 724, 790, 791, 792, 0, 726, 727,
	725, 728, 729, 732, 730, 731, 793, 733, 470, 734,
	735, 958, 0, 960, 0, 736, 737, 794, 738, 739,
	740, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 0, 0, 970, 741, 0, 0, 0,
	332, 0, 333, 334, 335, 0, 336, 337, 338, 339,
	340, 341, 342, 742, 743, 0, 343, 744, 344, 745,
	0, 746, 345, 346, 347, 348, 349, 350, 351, 0,
	0, 0, 352, 747, 748, 749, 0, 353, 354, 750,
	0, 0, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 0, 380, 381, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 967, 387, 0,
	388, 390, 751, 752, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 753, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 754, 755, 424,
	0, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	756, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 0, 434, 435, 436, 757, 758, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	759, 0, 760, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 761, 762, 763, 549, 0, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 320,
	463, 464, 465, 0, 0, 764, 466, 550, 467, 765,
	766, 0, 767, 0, 468, 469, 472, 0, 768, 0,
	471, 473, 474, 0, 475, 0, 0, 0, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 485, 484, 0,
	487, 769, 486, 0, 488, 489, 0, 0, 490, 491,
	492, 493, 494, 495, 498, 0, 0, 496, 497, 499,
	500, 0, 501, 502, 504, 507, 503, 505, 506, 508,
	521, 522, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 524, 0, 523, 0, 525, 526,
	527, 528, 529, 536, 538, 539, 534, 535, 537, 540,
	541, 543, 531, 532, 533, 0, 542, 530, 0, 321,
	0, 544, 545, 546, 547, 0, 770, 548, 771, 551,
	552, 0, 0, 553, 0, 554, 0, 0, 556, 557,
	558, 0, 0, 559, 560, 772, 0, 561, 0, 773,
	562, 563, 555, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 0, 574, 575, 774, 576, 577, 578,
	775, 579, 580, 581, 776, 582, 777, 583, 584, 0,
	585, 586, 587, 0, 588, 589, 590, 591, 592, 593,
	594, 595, 778, 596, 597, 599, 598, 600, 0, 601,
	0, 602, 603, 604, 0, 0, 0, 0, 0, 605,
	606, 608, 0, 609, 610, 611, 612, 607, 613, 614,
	615, 616, 617, 618, 0, 620, 621, 619, 622, 623,
	0, 624, 625, 626, 627, 628, 779, 629, 0, 630,
	631, 639, 640, 641, 632, 633, 635, 642, 634, 643,
	644, 645, 646, 648, 647, 0, 650, 651, 649, 652,
	653, 654, 0, 655, 780, 656, 636, 637, 657, 658,
	0, 659, 660, 661, 662, 663, 664, 665, 781, 0,
	666, 0, 667, 668, 669, 670, 671, 672, 674, 638,
	675, 680, 681, 782, 676, 677, 678, 679, 783, 683,
	684, 685, 686, 0, 687, 688, 0, 682, 673, 965,
	689, 690, 691, 692, 693, 966, 0, 695, 696, 0,
	697, 784, 785, 786, 787, 0, 709, 0, 698, 700,
	701, 702, 703, 788, 704, 789, 0, 705, 706, 707,
	708, 699, 710, 711, 0, 0, 712, 713, 714, 716,
	718, 719, 715, 717, 720, 0, 721, 0, 0, 722,
	723, 724, 790, 791, 792, 0, 726, 727, 725, 728,
	729, 732, 730, 731, 793, 733, 470, 734, 735, 960,
	0, 0, 0, 736, 737, 794, 738, 739, 740, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 0, 330, 331, 0, 0, 0,
	0, 0, 741, 970, 0, 0, 332, 0, 333, 334,
	335, 0, 336, 337, 338, 339, 340, 341, 342, 742,
	743, 0, 343, 744, 344, 745, 0, 746, 345, 346,
	347, 348, 349, 350, 351, 0, 0, 0, 352, 747,
	748, 749, 0, 353, 354, 750, 0, 0, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 0,
	380, 381, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 967, 387, 0, 388, 390, 751, 752,
	0, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	753, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 754, 755, 424, 0, 319, 0, 0,
	0, 0, 0, 425, 426, 427, 756, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 0,
	434, 435, 436, 757, 758, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 759, 0, 760, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 761, 762,
	763, 549, 0, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 0, 0, 0, 320, 463, 464, 465, 0,
	0, 764, 466, 550, 467, 765, 766, 0, 767, 0,
	468, 469, 472, 0, 768, 0, 471, 473, 474, 0,
	475, 0, 0, 0, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 485, 484, 0, 487, 769, 486, 0,
	488, 489, 0, 0, 490, 491, 492, 493, 494, 495,
	498, 0, 0, 496, 497, 499, 500, 0, 501, 502,
	504, 507, 503, 505, 506, 508, 521, 522, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	524, 0, 523, 0, 525, 526, 527, 528, 529, 536,
	538, 539, 534, 535, 537, 540, 541, 543, 531, 532,
	533, 0, 542, 530, 0, 321, 0, 544, 545, 546,
	547, 0, 770, 548, 771, 551, 552, 0, 0, 553,
	0, 554, 0, 0, 556, 557, 558, 0, 0, 559,
	560, 772, 0, 561, 0, 773, 562, 563, 555, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 0,
	574, 575, 774, 576, 577, 578, 775, 579, 580, 581,
	776, 582, 777, 583, 584, 0, 585, 586, 587, 0,
	588, 589, 590, 591, 592, 593, 594, 595, 778, 596,
	597, 599, 598, 600, 0, 601, 0, 602, 603, 604,
	0, 0, 0, 0, 0, 605, 606, 608, 0, 609,
	610, 611, 612, 607, 613, 614, 615, 616, 617, 618,
	0, 620, 621, 619, 622, 623, 0, 624, 625, 626,
	627, 628, 779, 629, 0, 630, 631, 639, 640, 641,
	632, 633, 635, 642, 634, 643, 644, 645, 646, 648,
	647, 0, 650, 651, 649, 652, 653, 654, 0, 655,
	780, 656, 636, 637, 657, 658, 0, 659, 660, 661,
	662, 663, 664, 665, 781, 0, 666, 0, 667, 668,
	669, 670, 671, 672, 674, 638, 675, 680, 681, 782,
	676, 677, 678, 679, 783, 683, 684, 685, 686, 0,
	687, 688, 0, 682, 673, 965, 689, 690, 691, 692,
	693, 966, 0, 695, 696, 0, 697, 784, 785, 786,
	787, 0, 709, 0, 698, 700, 701, 702, 703, 788,
	704, 789, 0, 705, 706, 707, 708, 699, 710, 711,
	0, 0, 712, 713, 714, 716, 718, 719, 715, 717,
	720, 0, 721, 0, 0, 722, 723, 724, 790, 791,
	792, 0, 726, 727, 725, 728, 729, 732, 730, 731,
	793, 733, 470, 734, 735, 3235, 0, 0, 0, 736,
	737, 794, 738, 739, 740, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 0, 0, 0, 0, 970,
	0, 0, 332, 0, 333, 334, 335, 1364, 336, 337,
	338, 339, 340, 341, 342, 0, 2286, 0, 343, 2276,
	344, 2292, 0, 2299, 345, 346, 347, 348, 349, 350,
	351, 0, 0, 0, 352, 2302, 2303, 0, 0, 353,
	354, 0, 0, 1678, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 1365, 380, 381, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 386,
	387, 1347, 388, 390, 2290, 2289, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 1332, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 0, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 0,
	0, 424, 0, 319, 0, 0, 0, 0, 0, 425,
	426, 427, 2288, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 1366, 434, 435, 436, 2297,
	2298, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 0, 0, 0, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 0, 0, 0, 549, 1368, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 0, 463, 464, 465, 0, 1367, 0, 466, 550,
	467, 2283, 2284, 0, 2279, 0, 468, 469, 472, 1369,
	0, 1370, 471, 473, 474, 1371, 475, 0, 0, 0,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 485,
	484, 0, 487, 0, 486, 1372, 488, 489, 1373, 0,
	490, 491, 492, 493, 494, 495, 498, 0, 0, 496,
	497, 499, 500, 0, 501, 502, 504, 507, 503, 505,
	506, 508, 521, 522, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 524, 0, 523, 1374,
	525, 526, 527, 528, 529, 536, 538, 539, 534, 535,
	537, 540, 541, 543, 531, 532, 533, 1375, 542, 530,
	0, 0, 1376, 544, 545, 546, 547, 0, 0, 548,
	2291, 551, 552, 0, 0, 553, 0, 554, 0, 0,
	556, 557, 558, 0, 0, 559, 560, 0, 1377, 561,
	1378, 0, 562, 563, 555, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 0, 574, 575, 2273, 576,
	577, 578, 2274, 579, 580, 581, 0, 582, 0, 583,
	584, 0, 585, 586, 587, 0, 588, 589, 590, 591,
	592, 593, 594, 595, 2287, 596, 597, 599, 598, 600,
	0, 601, 0, 602, 603, 604, 0, 0, 0, 0,
	0, 605, 606, 608, 0, 609, 610, 611, 612, 607,
	613, 614, 615, 616, 617, 618, 0, 620, 621, 619,
	622, 623, 1379, 624, 625, 626, 627, 628, 0, 629,
	0, 630, 631, 639, 640, 641, 632, 633, 635, 642,
	634, 643, 644, 645, 646, 648, 647, 0, 650, 651,
	649, 652, 653, 654, 0, 655, 0, 656, 636, 637,
	657, 658, 1380, 659, 660, 661, 662, 663, 664, 665,
	2285, 0, 666, 0, 667, 668, 669, 670, 671, 672,
	674, 638, 675, 680, 681, 2301, 676, 677, 678, 679,
	0, 683, 684, 685, 686, 0, 687, 688, 0, 682,
	673, 0, 689, 690, 691, 692, 693, 694, 0, 695,
	696, 0, 697, 2293, 2294, 2295, 2296, 0, 709, 0,
	698, 700, 701, 702, 703, 0, 704, 0, 0, 705,
	706, 707, 708, 699, 710, 711, 0, 0, 712, 713,
	714, 716, 718, 719, 715, 717, 720, 0, 721, 0,
	0, 722, 723, 724, 0, 2277, 2300, 0, 726, 727,
	725, 728, 729, 732, 730, 731, 0, 733, 470, 734,
	735, 0, 0, 0, 0, 736, 737, 0, 738, 739,
	740, 3215, 0, 316, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 0, 0, 0, 741, 2267, 0, 0,
	332, 0, 333, 334, 335, 0, 336, 337, 338, 339,
	340, 341, 342, 742, 743, 0, 343, 744, 344, 745,
	0, 746, 345, 346, 347, 348, 349, 350, 351, 0,
	0, 0, 352, 747, 748, 749, 0, 353, 354, 750,
	0, 0, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 0, 380, 381, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 386, 387, 0,
	388, 390, 751, 752, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 753, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 754, 755, 424,
	0, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	756, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 0, 434, 435, 436, 757, 758, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	759, 0, 760, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 761, 762, 763, 549, 0, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 320,
	463, 464, 465, 0, 0, 764, 466, 550, 467, 765,
	766, 0, 767, 0, 468, 469, 472, 0, 768, 0,
	471, 473, 474, 0, 475, 0, 0, 0, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 485, 484, 0,
	487, 769, 486, 0, 488, 489, 0, 0, 490, 491,
	492, 493, 494, 495, 498, 0, 0, 496, 497, 499,
	500, 0, 501, 502, 504, 507, 503, 505, 506, 508,
	521, 522, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 524, 0, 523, 0, 525, 526,
	527, 528, 529, 536, 538, 539, 534, 535, 537, 540,
	541, 543, 531, 532, 533, 0, 542, 530, 0, 321,
	0, 544, 545, 546, 547, 0, 770, 548, 771, 551,
	552, 0, 0, 553, 0, 554, 0, 0, 556, 557,
	558, 0, 0, 559, 560, 772, 0, 561, 0, 773,
	562, 563, 555, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 0, 574, 575, 774, 576, 577, 578,
	775, 579, 580, 581, 776, 582, 777, 583, 584, 0,
	585, 586, 587, 0, 588, 589, 590, 591, 592, 593,
	594, 595, 778, 596, 597, 599, 598, 600, 0, 601,
	0, 602, 603, 604, 0, 0, 0, 0, 0, 605,
	606, 608, 0, 609, 610, 611, 612, 607, 613, 614,
	615, 616, 617, 618, 0, 620, 621, 619, 622, 623,
	0, 624, 625, 626, 627, 628, 779, 629, 0, 630,
	631, 639, 640, 641, 632, 633, 635, 642, 634, 643,
	644, 645, 646, 648, 647, 0, 650, 651, 649, 652,
	653, 654, 0, 655, 780, 656, 636, 637, 657, 658,
	0, 659, 660, 661, 662, 663, 664, 665, 781, 0,
	666, 0, 667, 668, 669, 670, 671, 672, 674, 638,
	675, 680, 681, 782, 676, 677, 678, 679, 783, 683,
	684, 685, 686, 0, 687, 688, 0, 682, 673, 0,
	689, 690, 691, 692, 693, 694, 0, 695, 696, 0,
	697, 784, 785, 786, 787, 0, 709, 0, 698, 700,
	701, 702, 703, 788, 704, 789, 0, 705, 706, 707,
	708, 699, 710, 711, 0, 0, 712, 713, 714, 716,
	718, 719, 715, 717, 720, 0, 721, 0, 0, 722,
	723, 724, 790, 791, 792, 0, 726, 727, 725, 728,
	729, 732, 730, 731, 793, 733, 470, 734, 735, 2249,
	0, 0, 0, 736, 737, 794, 738, 739, 740, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 0, 330, 331, 0, 0, 0,
	0, 0, 741, 970, 0, 0, 332, 0, 333, 334,
	335, 0, 336, 337, 338, 339, 340, 341, 342, 742,
	743, 0, 343, 744, 344, 745, 0, 746, 345, 346,
	347, 348, 349, 350, 351, 0, 0, 0, 352, 747,
	748, 749, 0, 353, 354, 750, 0, 0, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 0,
	380, 381, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 2256, 387, 0, 388, 390, 751, 752,
	0, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	753, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 2257, 754, 755, 424, 0, 319, 0, 0,
	0, 0, 0, 425, 426, 427, 756, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 0,
	2258, 435, 436, 757, 758, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 759, 0, 760, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 761, 762,
	763, 549, 0, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 0, 0, 0, 320, 463, 464, 465, 0,
	0, 764, 466, 550, 467, 765, 766, 0, 767, 0,
	468, 469, 472, 0, 768, 0, 471, 473, 474, 0,
	475, 0, 0, 0, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 485, 484, 0, 487, 769, 486, 0,
	488, 489, 0, 0, 490, 491, 492, 493, 494, 495,
	498, 0, 0, 496, 497, 499, 500, 0, 501, 502,
	504, 507, 503, 505, 506, 508, 521, 522, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	524, 0, 523, 0, 525, 526, 527, 528, 529, 536,
	538, 539, 534, 535, 537, 540, 541, 543, 531, 532,
	533, 0, 542, 530, 0, 321, 0, 544, 545, 546,
	547, 0, 770, 548, 771, 551, 552, 0, 0, 553,
	0, 554, 0, 0, 556, 557, 558, 0, 0, 559,
	560, 772, 0, 561, 0, 773, 562, 563, 555, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 0,
	574, 575, 774, 576, 577, 578, 775, 579, 580, 581,
	776, 582, 777, 583, 584, 0, 585, 586, 587, 0,
	588, 589, 590, 591, 592, 593, 594, 595, 778, 596,
	597, 599, 598, 600, 0, 601, 0, 602, 603, 604,
	0, 0, 0, 0, 0, 605, 606, 608, 0, 609,
	610, 611, 612, 607, 613, 614, 615, 616, 617, 618,
	0, 620, 621, 619, 622, 623, 0, 2701, 625, 626,
	627, 628, 779, 629, 0, 630, 631, 639, 640, 641,
	632, 633, 635, 2702, 634, 643, 644, 645, 646, 648,
	647, 0, 2253, 651, 649, 652, 653, 654, 0, 655,
	780, 656, 636, 637, 657, 658, 0, 659, 660, 661,
	662, 663, 664, 665, 781, 0, 666, 0, 667, 668,
	669, 670, 671, 672, 674, 638, 675, 680, 681, 782,
	676, 677, 678, 679, 783, 683, 684, 685, 686, 0,
	687, 688, 0, 682, 673, 2255, 689, 690, 691, 692,
	693, 694, 0, 695, 696, 0, 697, 784, 785, 786,
	787, 0, 709, 0, 698, 700, 701, 702, 703, 788,
	704, 789, 0, 705, 706, 2703, 708, 699, 710, 711,
	0, 0, 712, 713, 714, 716, 718, 719, 715, 717,
	720, 0, 721, 0, 0, 722, 723, 724, 790, 791,
	792, 0, 726, 727, 725, 728, 729, 732, 730, 731,
	793, 733, 470, 734, 735, 2280, 0, 0, 0, 736,
	737, 794, 738, 739, 740, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 0, 0, 0, 0, 970,
	0, 0, 332, 0, 333, 334, 335, 1364, 336, 337,
	338, 339, 340, 341, 342, 0, 2286, 0, 343, 2276,
	344, 2292, 0, 2299, 345, 346, 347, 348, 349, 350,
	351, 0, 0, 0, 352, 2302, 2303, 0, 0, 353,
	354, 0, 0, 1678, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 1365, 380, 381, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 386,
	387, 1347, 388, 390, 2290, 2289, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 1332, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 0, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 0,
	0, 424, 0, 0, 0, 0, 0, 0, 0, 425,
	426, 427, 2288, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 1366, 434, 435, 436, 2297,
	2298, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 0, 0, 0, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 0, 0, 0, 549, 1368, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 0, 463, 464, 465, 0, 1367, 0, 466, 550,
	467, 2283, 2284, 0, 2279, 0, 468, 469, 472, 1369,
	0, 1370, 471, 473, 474, 1371, 475, 0, 0, 0,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 485,
	484, 0, 487, 0, 486, 1372, 488, 489, 1373, 0,
	490, 491, 492, 493, 494, 495, 498, 0, 0, 496,
	497, 499, 500, 0, 501, 502, 504, 507, 503, 505,
	506, 508, 521, 522, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 524, 0, 523, 1374,
	525, 526, 527, 528, 529, 536, 538, 539, 534, 535,
	537, 540, 541, 543, 531, 532, 533, 1375, 542, 530,
	0, 0, 1376, 544, 545, 546, 547, 0, 0, 548,
	2291, 551, 552, 0, 0, 553, 0, 554, 0, 0,
	556, 557, 558, 0, 0, 559, 560, 0, 1377, 561,
	1378, 0, 562, 563, 555, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 0, 574, 575, 2273, 576,
	577, 578, 2274, 579, 580, 581, 0, 582, 0, 583,
	584, 0, 585, 586, 587, 0, 588, 589, 590, 591,
	592, 593, 594, 595, 2287, 596, 597, 599, 598, 600,
	0, 601, 0, 602, 603, 604, 0, 0, 0, 0,
	0, 605, 606, 608, 0, 609, 610, 611, 612, 607,
	613, 614, 615, 616, 617, 618, 0, 620, 621, 619,
	622, 623, 1379, 624, 625, 626, 627, 628, 0, 629,
	0, 630, 631, 639, 640, 641, 632, 633, 635, 642,
	634, 643, 644, 645, 646, 648, 647, 0, 650, 651,
	649, 652, 653, 654, 0, 655, 0, 656, 636, 637,
	657, 658, 1380, 659, 660, 661, 662, 663, 664, 665,
	2285, 0, 666, 0, 667, 668, 669, 670, 671, 672,
	674, 638, 675, 680, 681, 2301, 676, 677, 678, 679,
	0, 683, 684, 685, 686, 0, 687, 688, 0, 682,
	673, 0, 689, 690, 691, 692, 693, 694, 0, 695,
	696, 0, 697, 2293, 2294, 2295, 2296, 0, 709, 0,
	698, 700, 701, 702, 703, 0, 704, 0, 0, 705,
	706, 707, 708, 699, 710, 711, 0, 0, 712, 713,
	714, 716, 718, 719, 715, 717, 720, 0, 721, 0,
	0, 722, 723, 724, 0, 2277, 2300, 0, 726, 727,
	725, 728, 729, 732, 730, 731, 0, 733, 470, 734,
	735, 0, 0, 0, 0, 736, 737, 0, 738, 739,
	740, 316, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	325, 324, 326, 327, 328, 329, 0, 330, 331, 0,
	0, 0, 0, 0, 741, 0, 0, 2267, 332, 0,
	333, 334, 335, 0, 336, 337, 338, 339, 340, 341,
	342, 742, 743, 0, 343, 744, 344, 745, 0, 746,
	345, 346, 347, 348, 349, 350, 351, 0, 0, 0,
	352, 747, 748, 749, 0, 353, 354, 750, 0, 0,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 0, 380, 381, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 386, 387, 0, 388, 390,
	751, 752, 0, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 753, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 754, 755, 424, 0, 319,
	0, 0, 0, 0, 0, 425, 426, 427, 756, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 0, 434, 435, 436, 757, 758, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 759, 0,
	760, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	761, 762, 763, 549, 0, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 0, 0, 0, 320, 463, 464,
	465, 0, 0, 764, 466, 550, 467, 765, 766, 0,
	767, 0, 468, 469, 472, 0, 768, 0, 471, 473,
	474, 0, 475, 0, 0, 0, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 485, 484, 0, 487, 769,
	486, 0, 488, 489, 0, 0, 490, 491, 492, 493,
	494, 495, 498, 0, 0, 496, 497, 499, 500, 0,
	501, 502, 504, 507, 503, 505, 506, 508, 521, 522,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 524, 0, 523, 0, 525, 526, 527, 528,
	529, 536, 538, 539, 534, 535, 537, 540, 541, 543,
	531, 532, 533, 0, 542, 530, 0, 321, 0, 544,
	545, 546, 547, 0, 770, 548, 771, 551, 552, 0,
	0, 553, 0, 554, 0, 0, 556, 557, 558, 0,
	0, 559, 560, 772, 0, 561, 0, 773, 562, 563,
	555, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 0, 574, 575, 774, 576, 577, 578, 775, 579,
	580, 581, 776, 582, 777, 583, 584, 0, 585, 586,
	587, 0, 588, 589, 590, 591, 592, 593, 594, 595,
	778, 596, 597, 599, 598, 600, 0, 601, 0, 602,
	603, 604, 0, 0, 0, 0, 0, 605, 606, 608,
	0, 609, 610, 611, 612, 607, 613, 614, 615, 616,
	617, 618, 0, 620, 621, 619, 622, 623, 0, 624,
	625, 626, 627, 628, 779, 629, 0, 630, 631, 639,
	640, 641, 632, 633, 635, 642, 634, 643, 644, 645,
	646, 648, 647, 0, 650, 651, 649, 652, 653, 654,
	0, 655, 780, 656, 636, 637, 657, 658, 0, 659,
	660, 661, 662, 663, 664, 665, 781, 0, 666, 0,
	667, 668, 669, 670, 671, 672, 674, 638, 675, 680,
	681, 782, 676, 677, 678, 679, 783, 683, 684, 685,
	686, 0, 687, 688, 0, 682, 673, 0, 689, 690,
	691, 692, 693, 694, 0, 695, 696, 0, 697, 784,
	785, 786, 787, 0, 709, 0, 698, 700, 701, 702,
	703, 788, 704, 789, 0, 705, 706, 707, 708, 699,
	710, 711, 0, 0, 712, 713, 714, 716, 718, 719,
	715, 717, 720, 0, 721, 0, 0, 722, 723, 724,
	790, 791, 792, 0, 726, 727, 725, 728, 729, 732,
	730, 731, 793, 733, 470, 734, 735, 316, 0, 0,
	0, 736, 737, 794, 738, 739, 740, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 0, 0, 0,
	741, 970, 0, 0, 332, 0, 333, 334, 335, 0,
	336, 337, 338, 339, 340, 341, 342, 742, 743, 0,
	343, 744, 344, 745, 0, 746, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 747, 748, 749,
	0, 353, 354, 750, 0, 0, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 0, 380, 381,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 386, 387, 0, 388, 390, 751, 752, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 753, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 754, 755, 424, 0, 319, 0, 0, 0, 0,
	0, 425, 426, 427, 756, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 0, 434, 435,
	436, 757, 758, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 759, 0, 760, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 761, 762, 763, 549,
	0, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 320, 463, 464, 465, 0, 0, 764,
	466, 550, 467, 765, 766, 0, 767, 0, 468, 469,
	472, 0, 768, 0, 471, 473, 474, 0, 475, 0,
	0, 0, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 485, 484, 0, 487, 769, 486, 0, 488, 489,
	0, 0, 490, 491, 492, 493, 494, 495, 498, 0,
	0, 496, 497, 499, 500, 0, 501, 502, 504, 507,
	503, 505, 506, 508, 521, 522, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 524, 0,
	523, 0, 525, 526, 527, 528, 529, 536, 538, 539,
	534, 535, 537, 540, 541, 543, 531, 532, 533, 0,
	542, 530, 0, 321, 0, 544, 545, 546, 547, 0,
	770, 548, 771, 551, 552, 0, 0, 553, 0, 554,
	0, 0, 556, 557, 558, 0, 0, 559, 560, 772,
	0, 561, 0, 773, 562, 563, 555, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 0, 574, 575,
	774, 576, 577, 578, 775, 579, 580, 581, 776, 582,
	777, 583, 584, 0, 585, 586, 587, 0, 588, 589,
	590, 591, 592, 593, 594, 595, 778, 596, 597, 599,
	598, 600, 0, 601, 0, 602, 603, 604, 0, 0,
	0, 0, 0, 605, 606, 608, 0, 609, 610, 611,
	612, 607, 613, 614, 615, 616, 617, 618, 0, 620,
	621, 619, 622, 623, 0, 624, 625, 626, 627, 628,
	779, 629, 0, 630, 631, 639, 640, 641, 632, 633,
	635, 642, 634, 643, 644, 645, 646, 648, 647, 0,
	650, 651, 649, 652, 653, 654, 0, 655, 780, 656,
	636, 637, 657, 658, 0, 659, 660, 661, 662, 663,
	664, 665, 781, 0, 666, 0, 667, 668, 669, 670,
	671, 672, 674, 638, 675, 680, 681, 782, 676, 677,
	678, 679, 783, 683, 684, 685, 686, 0, 687, 688,
	0, 682, 673, 0, 689, 690, 691, 692, 693, 694,
	0, 695, 696, 0, 697, 784, 785, 786, 787, 0,
	709, 0, 698, 700, 701, 702, 703, 788, 704, 789,
	0, 705, 706, 707, 708, 699, 710, 711, 0, 0,
	712, 713, 714, 716, 718, 719, 715, 717, 720, 0,
	721, 0, 0, 722, 723, 724, 790, 791, 792, 0,
	726, 727, 725, 728, 729, 732, 730, 731, 793, 733,
	470, 734, 735, 316, 0, 0, 0, 736, 737, 794,
	738, 739, 740, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 0, 0, 0, 741, 926, 0, 0,
	332, 0, 333, 334, 335, 0, 336, 337, 338, 339,
	340, 341, 342, 742, 743, 0, 343, 744, 344, 745,
	0, 746, 345, 346, 347, 348, 349, 350, 351, 0,
	0, 0, 352, 747, 748, 749, 0, 353, 354, 750,
	0, 0, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 0, 380, 381, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 386, 387, 0,
	388, 390, 751, 752, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 753, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 754, 755, 424,
	0, 0, 0, 0, 0, 0, 0, 425, 426, 427,
	756, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 0, 434, 435, 436, 757, 758, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	759, 0, 760, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 761, 762, 763, 549, 0, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 0,
	463, 464, 465, 0, 0, 764, 466, 550, 467, 765,
	766, 0, 767, 0, 468, 469, 472, 0, 768, 0,
	471, 473, 474, 0, 475, 0, 0, 0, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 485, 484, 0,
	487, 769, 486, 0, 488, 489, 0, 0, 490, 491,
	492, 493, 494, 495, 498, 0, 0, 496, 497, 499,
	500, 0, 501, 502, 504, 507, 503, 505, 506, 508,
	521, 522, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 524, 0, 523, 0, 525, 526,
	527, 528, 529, 536, 538, 539, 534, 535, 537, 540,
	541, 543, 531, 532, 533, 0, 542, 530, 0, 0,
	0, 544, 545, 546, 547, 0, 770, 548, 771, 551,
	552, 0, 0, 553, 0, 554, 0, 0, 556, 557,
	558, 0, 0, 559, 560, 772, 0, 561, 0, 773,
	562, 563, 555, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 0, 574, 575, 774, 576, 577, 578,
	775, 579, 580, 581, 776, 582, 777, 583, 584, 0,
	585, 586, 587, 0, 588, 589, 590, 591, 592, 593,
	594, 595, 778, 596, 597, 599, 598, 600, 0, 601,
	0, 602, 603, 604, 0, 0, 0, 0, 0, 605,
	606, 608, 0, 609, 610, 611, 612, 607, 613, 614,
	615, 616, 617, 618, 0, 620, 621, 619, 622, 623,
	0, 624, 625, 626, 627, 628, 779, 629, 0, 630,
	631, 639, 640, 641, 632, 633, 635, 642, 634, 643,
	644, 645, 646, 648, 647, 0, 650, 651, 649, 652,
	653, 654, 0, 655, 780, 656, 636, 637, 657, 658,
	0, 659, 660, 661, 662, 663, 664, 665, 781, 0,
	666, 0, 667, 668, 669, 670, 671, 672, 674, 638,
	675, 680, 681, 782, 676, 677, 678, 679, 783, 683,
	684, 685, 686, 0, 687, 688, 0, 682, 673, 0,
	689, 690, 691, 692, 693, 694, 0, 695, 696, 0,
	697, 784, 785, 786, 787, 0, 709, 0, 698, 700,
	701, 702, 703, 788, 704, 789, 0, 705, 706, 707,
	708, 699, 710, 711, 0, 0, 712, 713, 714, 716,
	718, 719, 715, 717, 720, 0, 721, 0, 0, 722,
	723, 724, 790, 791, 792, 0, 726, 727, 725, 728,
	729, 732, 730, 731, 793, 733, 470, 734, 735, 0,
	0, 0, 0, 736, 737, 794, 738, 739, 740, 0,
	0, 0, 0, 0, 0, 0, 0, 1712, 1711, 0,
	0, 0, 0, 1709, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4699, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 0, 0, 0,
	741, 0, 0, 0, 332, 0, 333, 334, 335, 1364,
	336, 337, 338, 339, 340, 341, 342, 742, 743, 0,
	343, 744, 344, 745, 0, 746, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 747, 748, 749,
	0, 353, 354, 750, 0, 1678, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 1365, 380, 381,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 386, 387, 0, 388, 390, 751, 752, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 753, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 754, 755, 424, 0, 319, 0, 0, 0, 0,
	0, 425, 426, 427, 756, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 1366, 434, 435,
	436, 757, 758, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 759, 0, 760, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 761, 762, 763, 549,
	1368, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 0, 463, 464, 465, 0, 1367, 764,
	466, 550, 467, 765, 766, 0, 767, 0, 468, 469,
	472, 1369, 768, 1370, 471, 473, 474, 1371, 475, 0,
	0, 0, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 485, 484, 0, 487, 769, 486, 1372, 488, 489,
	1373, 0, 490, 491, 492, 493, 494, 495, 498, 0,
	0, 496, 497, 499, 500, 0, 501, 502, 504, 507,
	503, 505, 506, 508, 521, 522, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 524, 0,
	523, 1374, 525, 526, 527, 528, 529, 536, 538, 539,
	534, 535, 537, 540, 541, 543, 531, 532, 533, 1375,
	542, 530, 0, 0, 1376, 544, 545, 546, 547, 4585,
	770, 548, 771, 551, 552, 0, 0, 553, 0, 554,
	0, 0, 556, 557, 558, 0, 0, 559, 560, 772,
	1377, 561, 1378, 773, 562, 563, 555, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 0, 574, 575,
	774, 576, 577, 578, 775, 579, 580, 581, 776, 582,
	777, 583, 584, 0, 585, 586, 587, 0, 588, 589,
	590, 591, 592, 593, 594, 595, 778, 596, 597, 599,
	598, 600, 0, 601, 0, 602, 603, 604, 0, 0,
	0, 0, 0, 605, 606, 608, 0, 609, 610, 611,
	612, 607, 613, 614, 615, 616, 617, 618, 0, 620,
	621, 619, 622, 623, 1379, 624, 625, 626, 627, 628,
	779, 629, 0, 630, 631, 639, 640, 641, 632, 633,
	635, 642, 634, 643, 644, 645, 646, 648, 647, 0,
	650, 651, 649, 652, 653, 654, 0, 655, 780, 656,
	636, 637, 657, 658, 1380, 659, 660, 661, 662, 663,
	664, 665, 781, 0, 666, 0, 667, 668, 669, 670,
	671, 672, 674, 638, 675, 680, 681, 782, 676, 677,
	678, 679, 783, 683, 684, 685, 686, 0, 687, 688,
	0, 682, 673, 0, 689, 690, 691, 692, 693, 694,
	0, 695, 696, 0, 697, 784, 785, 786, 787, 0,
	709, 0, 698, 700, 701, 702, 703, 788, 704, 789,
	0, 705, 706, 707, 708, 699, 710, 711, 0, 0,
	712, 713, 714, 716, 718, 719, 715, 717, 720, 0,
	721, 0, 0, 722, 723, 724, 790, 791, 792, 0,
	726, 727, 725, 728, 729, 732, 730, 731, 793, 733,
	470, 734, 735, 0, 0, 0, 0, 736, 737, 794,
	738, 739, 740, 3630, 0, 1712, 1711, 0, 0, 0,
	0, 1709, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 0, 0, 0, 741, 0,
	0, 0, 332, 0, 333, 334, 335, 1364, 336, 337,
	338, 339, 340, 341, 342, 742, 743, 0, 343, 744,
	344, 745, 0, 746, 345, 346, 347, 348, 349, 350,
	351, 0, 0, 0, 352, 747, 748, 749, 0, 353,
	354, 750, 0, 1678, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 1365, 380, 381, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 386,
	387, 0, 388, 390, 751, 752, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 753, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 754,
	755, 424, 0, 319, 0, 0, 0, 0, 0, 425,
	426, 427, 756, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 1366, 434, 435, 436, 757,
	758, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 759, 0, 760, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 761, 762, 763, 549, 1368, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 0, 463, 464, 465, 0, 1367, 764, 466, 550,
	467, 765, 766, 0, 767, 0, 468, 469, 472, 1369,
	768, 1370, 471, 473, 474, 1371, 475, 0, 0, 0,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 485,
	484, 0, 487, 769, 486, 1372, 488, 489, 1373, 0,
	490, 491, 492, 493, 494, 495, 498, 0, 0, 496,
	497, 499, 500, 0, 501, 502, 504, 507, 503, 505,
	506, 508, 521, 522, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 524, 0, 523, 1374,
	525, 526, 527, 528, 529, 536, 538, 539, 534, 535,
	537, 540, 541, 543, 531, 532, 533, 1375, 542, 530,
	0, 0, 1376, 544, 545, 546, 547, 0, 770, 548,
	771, 551, 552, 0, 0, 553, 0, 554, 0, 0,
	556, 557, 558, 0, 0, 559, 560, 772, 1377, 561,
	1378, 773, 562, 563, 555, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 0, 574, 575, 774, 576,
	577, 578, 775, 579, 580, 581, 776, 582, 777, 583,
	584, 0, 585, 586, 587, 0, 588, 589, 590, 591,
	592, 593, 594, 595, 778, 596, 597, 599, 598, 600,
	0, 601, 0, 602, 603, 604, 0, 0, 0, 0,
	0, 605, 606, 608, 0, 609, 610, 611, 612, 607,
	613, 614, 615, 616, 617, 618, 0, 620, 621, 619,
	622, 623, 1379, 624, 625, 626, 627, 628, 779, 629,
	0, 630, 631, 639, 640, 641, 632, 633, 635, 642,
	634, 643, 644, 645, 646, 648, 647, 0, 650, 651,
	649, 652, 653, 654, 0, 655, 780, 656, 636, 637,
	657, 658, 1380, 659, 660, 661, 662, 663, 664, 665,
	781, 0, 666, 0, 667, 668, 669, 670, 671, 672,
	674, 638, 675, 680, 681, 782, 676, 677, 678, 679,
	783, 683, 684, 685, 686, 0, 687, 688, 0, 682,
	673, 0, 689, 690, 691, 692, 693, 694, 0, 695,
	696, 0, 697, 784, 785, 786, 787, 0, 709, 0,
	698, 700, 701, 702, 703, 788, 704, 789, 0, 705,
	706, 707, 708, 699, 710, 711, 0, 0, 712, 713,
	714, 716, 718, 719, 715, 717, 720, 0, 721, 0,
	0, 722, 723, 724, 790, 791, 792, 0, 726, 727,
	725, 728, 729, 732, 730, 731, 793, 733, 470, 734,
	735, 0, 0, 0, 0, 736, 737, 794, 738, 739,
	740, 2582, 0, 1712, 1711, 0, 0, 0, 0, 1709,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 0, 0, 0, 741, 0, 0, 0,
	332, 0, 333, 334, 335, 1364, 336, 337, 338, 339,
	340, 341, 342, 742, 743, 0, 343, 744, 344, 745,
	0, 746, 345, 346, 347, 348, 349, 350, 351, 0,
	0, 0, 352, 747, 748, 749, 0, 353, 354, 750,
	0, 1678, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 1365, 380, 381, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 386, 387, 0,
	388, 390, 751, 752, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 753, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 754, 755, 424,
	0, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	756, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 1366, 434, 435, 436, 757, 758, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	759, 0, 760, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 1769, 762, 763, 549, 1368, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 0,
	463, 464, 465, 0, 1367, 764, 466, 550, 467, 765,
	766, 0, 767, 0, 468, 469, 472, 1369, 768, 1370,
	471, 473, 474, 1371, 475, 0, 0, 0, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 485, 484, 0,
	487, 769, 486, 1372, 488, 489, 1373, 0, 490, 491,
	492, 493, 494, 495, 498, 0, 0, 496, 497, 499,
	500, 0, 501, 502, 504, 507, 503, 505, 506, 508,
	521, 522, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 524, 0, 523, 1374, 525, 526,
	527, 528, 529, 536, 538, 539, 534, 535, 537, 540,
	541, 543, 531, 532, 533, 1375, 542, 530, 0, 0,
	1376, 544, 545, 546, 547, 0, 770, 548, 771, 551,
	552, 0, 0, 553, 0, 554, 0, 0, 556, 557,
	558, 0, 0, 559, 560, 772, 1377, 561, 1378, 773,
	562, 563, 555, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 0, 574, 575, 774, 576, 577, 578,
	775, 579, 580, 581, 776, 582, 777, 583, 584, 0,
	585, 586, 587, 0, 588, 589, 590, 591, 592, 593,
	594, 595, 778, 596, 597, 599, 598, 600, 0, 601,
	0, 602, 603, 604, 0, 0, 0, 0, 0, 605,
	606, 608, 0, 609, 610, 611, 612, 607, 613, 614,
	615, 616, 617, 618, 0, 620, 621, 619, 622, 623,
	1379, 624, 625, 626, 627, 628, 779, 629, 0, 630,
	631, 639, 640, 641, 632, 633, 635, 642, 634, 643,
	644, 645, 646, 648, 647, 0, 650, 651, 649, 652,
	653, 654, 0, 655, 780, 656, 636, 637, 657, 658,
	1380, 659, 660, 661, 662, 663, 664, 665, 781, 0,
	666, 0, 667, 668, 669, 670, 671, 672, 674, 638,
	675, 680, 681, 782, 676, 677, 678, 679, 783, 683,
	684, 685, 686, 0, 687, 688, 0, 682, 673, 0,
	689, 690, 691, 692, 693, 694, 0, 695, 696, 0,
	697, 784, 785, 786, 787, 0, 709, 0, 698, 700,
	701, 702, 703, 788, 704, 789, 0, 705, 706, 707,
	708, 699, 710, 711, 0, 0, 712, 713, 714, 716,
	718, 719, 715, 717, 720, 0, 721, 0, 0, 722,
	723, 724, 790, 791, 792, 0, 726, 727, 725, 728,
	729, 732, 730, 731, 793, 733, 470, 734, 735, 0,
	0, 0, 0, 736, 737, 794, 738, 739, 740, 2316,
	0, 1712, 1711, 0, 0, 0, 0, 1709, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	325, 324, 326, 327, 328, 329, 0, 330, 331, 0,
	0, 0, 0, 0, 741, 0, 0, 0, 332, 0,
	333, 334, 335, 1364, 336, 337, 338, 339, 340, 341,
	342, 742, 743, 0, 343, 744, 344, 745, 0, 746,
	345, 346, 347, 348, 349, 350, 351, 0, 0, 0,
	352, 747, 748, 749, 0, 353, 354, 750, 0, 1678,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 1365, 380, 381, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 386, 387, 0, 388, 390,
	751, 752, 0, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 753, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 754, 755, 424, 0, 319,
	0, 0, 0, 0, 0, 425, 426, 427, 756, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 1366, 434, 435, 436, 757, 758, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 759, 0,
	760, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	761, 762, 763, 549, 1368, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 0, 0, 0, 0, 463, 464,
	465, 0, 1367, 764, 466, 550, 467, 765, 766, 0,
	767, 0, 468, 469, 472, 1369, 768, 1370, 471, 473,
	474, 1371, 475, 0, 0, 0, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 485, 484, 0, 487, 769,
	486, 1372, 488, 489, 1373, 0, 490, 491, 492, 493,
	494, 495, 498, 0, 0, 496, 497, 499, 500, 0,
	501, 502, 504, 507, 503, 505, 506, 508, 521, 522,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 524, 0, 523, 1374, 525, 526, 527, 528,
	529, 536, 538, 539, 534, 535, 537, 540, 541, 543,
	531, 532, 533, 1375, 542, 530, 0, 0, 1376, 544,
	545, 546, 547, 0, 770, 548, 771, 551, 552, 0,
	0, 553, 0, 554, 0, 0, 556, 557, 558, 0,
	0, 559, 560, 772, 1377, 561, 1378, 773, 562, 563,
	555, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 0, 574, 575, 774, 576, 577, 578, 775, 579,
	580, 581, 776, 582, 777, 583, 584, 0, 585, 586,
	587, 0, 588, 589, 590, 591, 592, 593, 594, 595,
	778, 596, 597, 599, 598, 600, 0, 601, 0, 602,
	603, 604, 0, 0, 0, 0, 0, 605, 606, 608,
	0, 609, 610, 611, 612, 607, 613, 614, 615, 616,
	617, 618, 0, 620, 621, 619, 622, 623, 1379, 624,
	625, 626, 627, 628, 779, 629, 0, 630, 631, 639,
	640, 641, 632, 633, 635, 642, 634, 643, 644, 645,
	646, 648, 647, 0, 650, 651, 649, 652, 653, 654,
	0, 655, 780, 656, 636, 637, 657, 658, 1380, 659,
	660, 661, 662, 663, 664, 665, 781, 0, 666, 0,
	667, 668, 669, 670, 671, 672, 674, 638, 675, 680,
	681, 782, 676, 677, 678, 679, 783, 683, 684, 685,
	686, 0, 687, 688, 0, 682, 673, 0, 689, 690,
	691, 692, 693, 694, 0, 695, 696, 0, 697, 784,
	785, 786, 787, 0, 709, 0, 698, 700, 701, 702,
	703, 788, 704, 789, 0, 705, 706, 707, 708, 699,
	710, 711, 0, 0, 712, 713, 714, 716, 718, 719,
	715, 717, 720, 0, 721, 0, 0, 722, 723, 724,
	790, 791, 792, 0, 726, 727, 725, 728, 729, 732,
	730, 731, 793, 733, 470, 734, 735, 0, 0, 0,
	0, 736, 737, 794, 738, 739, 740, 1900, 0, 1712,
	1711, 0, 0, 0, 0, 1709, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 0, 330, 331, 0, 0, 0,
	0, 0, 741, 0, 0, 0, 332, 0, 333, 334,
	335, 1364, 336, 337, 338, 339, 340, 341, 342, 742,
	743, 0, 343, 744, 344, 745, 0, 746, 345, 346,
	347, 348, 349, 350, 351, 0, 0, 0, 352, 747,
	748, 749, 0, 353, 354, 750, 0, 1678, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 1899, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 1365,
	380, 381, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 386, 387, 0, 388, 390, 751, 752,
	0, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	753, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 754, 755, 424, 0, 319, 0, 0,
	0, 0, 0, 1896, 426, 427, 756, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 1366,
	434, 435, 436, 757, 758, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 759, 0, 760, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 761, 762,
	763, 549, 1368, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 0, 0, 0, 0, 463, 464, 465, 0,
	1367, 764, 466, 550, 467, 765, 766, 0, 767, 0,
	468, 469, 472, 1369, 768, 1370, 471, 473, 474, 1371,
	475, 0, 0, 0, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 485, 484, 0, 487, 769, 486, 1372,
	488, 489, 1373, 0, 490, 491, 492, 493, 494, 495,
	498, 0, 0, 496, 497, 499, 500, 0, 501, 502,
	504, 507, 503, 505, 506, 508, 521, 522, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	524, 0, 523, 1374, 525, 526, 527, 528, 529, 536,
	538, 539, 534, 535, 537, 540, 541, 543, 531, 532,
	533, 1375, 542, 530, 0, 0, 1376, 544, 545, 546,
	547, 0, 770, 548, 771, 551, 552, 0, 0, 553,
	0, 554, 0, 0, 556, 557, 558, 0, 0, 559,
	560, 772, 1377, 561, 1378, 773, 562, 563, 555, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 0,
	574, 575, 774, 576, 577, 578, 775, 579, 580, 581,
	776, 582, 777, 583, 584, 0, 585, 586, 587, 0,
	588, 589, 590, 591, 592, 593, 1897, 595, 778, 596,
	597, 599, 598, 600, 0, 601, 0, 602, 603, 604,
	0, 0, 0, 0, 0, 605, 606, 608, 0, 609,
	610, 611, 612, 607, 613, 614, 615, 616, 617, 618,
	0, 620, 621, 619, 622, 623, 1379, 624, 625, 626,
	627, 628, 779, 629, 0, 630, 631, 639, 640, 641,
	632, 633, 635, 642, 634, 1895, 644, 645, 646, 648,
	647, 0, 650, 651, 649, 652, 653, 654, 0, 655,
	780, 656, 636, 637, 657, 658, 1380, 659, 660, 661,
	662, 663, 664, 665, 781, 0, 666, 0, 667, 668,
	669, 670, 671, 672, 674, 638, 675, 680, 681, 782,
	676, 677, 678, 679, 783, 683, 684, 685, 686, 0,
	687, 688, 0, 682, 673, 0, 689, 690, 691, 692,
	693, 694, 0, 695, 696, 0, 697, 784, 785, 786,
	787, 0, 709, 0, 698, 700, 701, 702, 703, 788,
	704, 789, 0, 705, 706, 707, 708, 699, 710, 711,
	0, 0, 712, 713, 714, 716, 718, 719, 715, 717,
	720, 0, 721, 0, 0, 722, 1898, 724, 790, 791,
	792, 0, 726, 727, 725, 728, 729, 732, 730, 731,
	793, 733, 470, 734, 735, 0, 0, 0, 0, 736,
	737, 794, 738, 739, 740, 1766, 0, 1712, 1711, 0,
	0, 0, 0, 1709, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 0, 0, 0,
	741, 0, 0, 0, 332, 0, 333, 334, 335, 1364,
	336, 337, 338, 339, 340, 341, 342, 742, 743, 0,
	343, 744, 344, 745, 0, 746, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 747, 748, 749,
	0, 353, 354, 750, 0, 1678, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 1365, 380, 381,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 386, 387, 0, 388, 390, 751, 752, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 753, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 754, 755, 424, 0, 319, 0, 0, 0, 0,
	0, 425, 426, 427, 756, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 1366, 434, 435,
	436, 757, 758, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 759, 0, 760, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 1769, 762, 763, 549,
	1368, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 0, 463, 464, 465, 0, 1367, 764,
	466, 550, 467, 765, 766, 0, 767, 0, 468, 469,
	472, 1369, 768, 1370, 471, 473, 474, 1371, 475, 0,
	0, 0, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 485, 484, 0, 487, 769, 486, 1372, 488, 489,
	1373, 0, 490, 491, 492, 493, 494, 495, 498, 0,
	0, 496, 497, 499, 500, 0, 501, 502, 504, 507,
	503, 505, 506, 508, 521, 522, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 524, 0,
	523, 1374, 525, 526, 527, 528, 529, 536, 538, 539,
	534, 535, 537, 540, 541, 543, 531, 532, 533, 1375,
	542, 530, 0, 0, 1376, 544, 545, 546, 547, 0,
	770, 548, 771, 551, 552, 0, 0, 553, 0, 554,
	0, 0, 556, 557, 558, 0, 0, 559, 560, 772,
	1377, 561, 1378, 773, 562, 563, 555, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 0, 574, 575,
	774, 576, 577, 578, 775, 579, 580, 581, 776, 582,
	777, 583, 584, 0, 585, 586, 587, 0, 588, 589,
	590, 591, 592, 593, 594, 595, 778, 596, 597, 599,
	598, 600, 0, 601, 0, 602, 603, 604, 0, 0,
	0, 0, 0, 605, 606, 608, 0, 609, 610, 611,
	612, 607, 613, 614, 615, 616, 617, 618, 0, 620,
	621, 619, 622, 623, 1379, 624, 625, 626, 627, 628,
	779, 629, 0, 630, 631, 639, 640, 641, 632, 633,
	635, 642, 634, 643, 644, 645, 646, 648, 647, 0,
	650, 651, 649, 652, 653, 654, 0, 655, 780, 656,
	636, 637, 657, 658, 1380, 659, 660, 661, 662, 663,
	664, 665, 781, 0, 666, 0, 667, 668, 669, 670,
	671, 672, 674, 638, 675, 680, 681, 782, 676, 677,
	678, 679, 783, 683, 684, 685, 686, 0, 687, 688,
	0, 682, 673, 0, 689, 690, 691, 692, 693, 694,
	0, 695, 696, 0, 697, 784, 785, 786, 787, 0,
	709, 0, 698, 700, 701, 702, 703, 788, 704, 789,
	0, 705, 706, 707, 708, 699, 710, 711, 0, 0,
	712, 713, 714, 716, 718, 719, 715, 717, 720, 0,
	721, 0, 0, 722, 723, 724, 790, 791, 792, 0,
	726, 727, 725, 728, 729, 732, 730, 731, 793, 733,
	470, 734, 735, 0, 0, 0, 0, 736, 737, 794,
	738, 739, 740, 1707, 0, 1712, 1711, 0, 0, 0,
	0, 1709, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 0, 0, 0, 741, 0,
	0, 0, 332, 0, 333, 334, 335, 1364, 336, 337,
	338, 339, 340, 341, 342, 742, 743, 0, 343, 744,
	344, 745, 0, 746, 345, 346, 347, 348, 349, 350,
	351, 0, 0, 0, 352, 747, 748, 749, 0, 353,
	354, 750, 0, 1678, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 1365, 380, 381, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 386,
	387, 0, 388, 390, 751, 752, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 753, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 754,
	755, 424, 0, 319, 0, 0, 0, 0, 0, 425,
	426, 427, 756, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 1366, 434, 435, 436, 757,
	758, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 759, 0, 760, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 761, 762, 763, 549, 1368, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 0, 463, 464, 465, 0, 1367, 764, 466, 550,
	467, 765, 766, 0, 767, 0, 468, 469, 472, 1369,
	768, 1370, 471, 473, 474, 1371, 475, 0, 0, 0,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 485,
	484, 0, 487, 769, 486, 1372, 488, 489, 1373, 0,
	490, 491, 492, 493, 494, 495, 498, 0, 0, 496,
	497, 499, 500, 0, 501, 502, 504, 507, 503, 505,
	506, 508, 521, 522, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 524, 0, 523, 1374,
	525, 526, 527, 528, 529, 536, 538, 539, 534, 535,
	537, 540, 541, 543, 531, 532, 533, 1375, 542, 530,
	0, 0, 1376, 544, 545, 546, 547, 0, 770, 548,
	771, 551, 552, 0, 0, 553, 0, 554, 0, 0,
	556, 557, 558, 0, 0, 559, 560, 772, 1377, 561,
	1378, 773, 562, 563, 555, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 0, 574, 575, 774, 576,
	577, 578, 775, 579, 580, 581, 776, 582, 777, 583,
	584, 0, 585, 586, 587, 0, 588, 589, 590, 591,
	592, 593, 594, 595, 778, 596, 597, 599, 598, 600,
	0, 601, 0, 602, 603, 604, 0, 0, 0, 0,
	0, 605, 606, 608, 0, 609, 610, 611, 612, 607,
	613, 614, 615, 616, 617, 618, 0, 620, 621, 619,
	622, 623, 1379, 624, 625, 626, 627, 628, 779, 629,
	0, 630, 631, 639, 640, 641, 1705, 633, 635, 642,
	634, 643, 644, 645, 646, 648, 647, 0, 650, 651,
	649, 652, 653, 654, 0, 655, 780, 656, 636, 637,
	657, 658, 1380, 659, 660, 661, 662, 663, 664, 665,
	781, 0, 666, 0, 667, 668, 669, 670, 671, 672,
	674, 638, 675, 680, 681, 782, 676, 677, 678, 679,
	783, 683, 684, 685, 686, 0, 687, 688, 0, 682,
	673, 0, 689, 690, 691, 692, 693, 694, 0, 695,
	696, 0, 697, 784, 785, 786, 787, 0, 709, 0,
	698, 700, 701, 702, 703, 788, 704, 789, 0, 705,
	706, 707, 708, 699, 710, 711, 0, 0, 712, 713,
	714, 716, 718, 719, 715, 717, 720, 0, 721, 0,
	0, 722, 723, 724, 790, 791, 792, 0, 726, 727,
	725, 728, 729, 732, 730, 731, 793, 733, 470, 734,
	735, 0, 0, 0, 0, 736, 737, 794, 738, 739,
	740, 1712, 1711, 0, 0, 0, 0, 1709, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	325, 324, 326, 327, 328, 329, 0, 330, 331, 0,
	0, 0, 0, 0, 741, 0, 0, 0, 332, 0,
	333, 334, 335, 1364, 336, 337, 338, 339, 340, 341,
	342, 742, 743, 0, 343, 744, 344, 745, 0, 746,
	345, 346, 347, 348, 349, 350, 351, 0, 0, 0,
	352, 747, 748, 749, 0, 353, 354, 750, 0, 1678,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 1365, 380, 381, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 386, 387, 0, 388, 390,
	751, 752, 0, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 753, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 754, 755, 424, 0, 319,
	0, 0, 0, 0, 0, 425, 426, 427, 756, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 1366, 434, 435, 436, 757, 758, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 759, 0,
	760, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	761, 762, 763, 549, 1368, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 0, 0, 0, 0, 463, 464,
	465, 0, 1367, 764, 466, 550, 467, 765, 766, 0,
	767, 0, 468, 469, 472, 1369, 768, 1370, 471, 473,
	474, 1371, 475, 0, 0, 0, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 485, 484, 0, 487, 769,
	486, 1372, 488, 489, 1373, 0, 490, 491, 492, 493,
	494, 495, 498, 0, 0, 496, 497, 499, 500, 0,
	501, 502, 504, 507, 503, 505, 506, 508, 521, 522,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 524, 0, 523, 1374, 525, 526, 527, 528,
	529, 536, 538, 539, 534, 535, 537, 540, 541, 543,
	531, 532, 533, 1375, 542, 530, 0, 0, 1376, 544,
	545, 546, 547, 0, 770, 548, 771, 551, 552, 0,
	0, 553, 0, 554, 0, 0, 556, 557, 558, 0,
	0, 559, 560, 772, 1377, 561, 1378, 773, 562, 563,
	555, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 0, 574, 575, 774, 576, 577, 578, 775, 579,
	580, 581, 776, 582, 777, 583, 584, 0, 585, 586,
	587, 0, 588, 589, 590, 591, 592, 593, 594, 595,
	778, 596, 597, 599, 598, 600, 0, 601, 0, 602,
	603, 604, 0, 0, 0, 0, 0, 605, 606, 608,
	0, 609, 610, 611, 612, 607, 613, 614, 615, 616,
	617, 618, 0, 620, 621, 619, 622, 623, 1379, 624,
	625, 626, 627, 628, 779, 629, 0, 630, 631, 639,
	640, 641, 632, 633, 635, 642, 634, 643, 644, 645,
	646, 648, 647, 0, 650, 651, 649, 652, 653, 654,
	0, 655, 780, 656, 636, 637, 657, 658, 1380, 659,
	660, 661, 662, 663, 664, 665, 781, 0, 666, 0,
	667, 668, 669, 670, 671, 672, 674, 638, 675, 680,
	681, 782, 676, 677, 678, 679, 783, 683, 684, 685,
	686, 0, 687, 688, 0, 682, 673, 0, 689, 690,
	691, 692, 693, 694, 0, 695, 696, 0, 697, 784,
	785, 786, 787, 0, 709, 0, 698, 700, 701, 702,
	703, 788, 704, 789, 0, 705, 706, 707, 708, 699,
	710, 711, 0, 0, 712, 713, 714, 716, 718, 719,
	715, 717, 720, 0, 721, 0, 0, 722, 723, 724,
	790, 791, 792, 0, 726, 727, 725, 728, 729, 732,
	730, 731, 793, 733, 470, 734, 735, 1712, 1711, 0,
	0, 736, 737, 794, 738, 739, 740, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 0, 0, 0,
	741, 0, 0, 0, 332, 0, 333, 334, 335, 1364,
	336, 337, 338, 339, 340, 341, 342, 742, 743, 0,
	343, 744, 344, 745, 0, 746, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 747, 748, 749,
	0, 353, 354, 750, 0, 1678, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 1365, 380, 381,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 386, 387, 0, 388, 390, 751, 752, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 753, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 754, 755, 424, 0, 319, 0, 0, 0, 0,
	0, 425, 426, 427, 756, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 1366, 434, 435,
	436, 757, 758, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 759, 0, 760, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 761, 762, 763, 549,
	1368, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 0, 463, 464, 465, 0, 1367, 764,
	466, 550, 467, 765, 766, 0, 767, 0, 468, 469,
	472, 1369, 768, 1370, 471, 473, 474, 1371, 475, 0,
	0, 0, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 485, 484, 0, 487, 769, 486, 1372, 488, 489,
	1373, 0, 490, 491, 492, 493, 494, 495, 498, 0,
	0, 496, 497, 499, 500, 0, 501, 502, 504, 507,
	503, 505, 506, 508, 521, 522, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 524, 0,
	523, 1374, 525, 526, 527, 528, 529, 536, 538, 539,
	534, 535, 537, 540, 541, 543, 531, 532, 533, 1375,
	542, 530, 0, 0, 1376, 544, 545, 546, 547, 0,
	770, 548, 771, 551, 552, 0, 0, 553, 0, 554,
	0, 0, 556, 557, 558, 0, 0, 559, 560, 772,
	1377, 561, 1378, 773, 562, 563, 555, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 0, 574, 575,
	774, 576, 577, 578, 775, 579, 580, 581, 776, 582,
	777, 583, 584, 0, 585, 586, 587, 0, 588, 589,
	590, 591, 592, 593, 594, 595, 778, 596, 597, 599,
	598, 600, 0, 601, 0, 602, 603, 604, 0, 0,
	0, 0, 0, 605, 606, 608, 0, 609, 610, 611,
	612, 607, 613, 614, 615, 616, 617, 618, 0, 620,
	621, 619, 622, 623, 1379, 624, 625, 626, 627, 628,
	779, 629, 0, 630, 631, 639, 640, 641, 632, 633,
	635, 642, 634, 643, 644, 645, 646, 648, 647, 0,
	650, 651, 649, 652, 653, 654, 0, 655, 780, 656,
	636, 637, 657, 658, 1380, 659, 660, 661, 662, 663,
	664, 665, 781, 0, 666, 0, 667, 668, 669, 670,
	671, 672, 674, 638, 675, 680, 681, 782, 676, 677,
	678, 679, 783, 683, 684, 685, 686, 0, 687, 688,
	0, 682, 673, 0, 689, 690, 691, 692, 693, 694,
	0, 695, 696, 0, 697, 784, 785, 786, 787, 0,
	709, 0, 698, 700, 701, 702, 703, 788, 704, 789,
	0, 705, 706, 707, 708, 699, 710, 711, 0, 0,
	712, 713, 714, 716, 718, 719, 715, 717, 720, 0,
	721, 0, 0, 722, 723, 724, 790, 791, 792, 0,
	726, 727, 725, 728, 729, 732, 730, 731, 793, 733,
	470, 734, 735, 1712, 0, 0, 0, 736, 737, 794,
	738, 739, 740, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 0, 0, 0, 741, 0, 0, 0,
	332, 0, 333, 334, 335, 1364, 336, 337, 338, 339,
	340, 341, 342, 742, 743, 0, 343, 744, 344, 745,
	0, 746, 345, 346, 347, 348, 349, 350, 351, 0,
	0, 0, 352, 747, 748, 749, 0, 353, 354, 750,
	0, 1678, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 1365, 380, 381, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 386, 387, 0,
	388, 390, 751, 752, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 753, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 754, 755, 424,
	0, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	756, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 1366, 434, 435, 436, 757, 758, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	759, 0, 760, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 761, 762, 763, 549, 1368, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 0,
	463, 464, 465, 0, 1367, 764, 466, 550, 467, 765,
	766, 0, 767, 0, 468, 469, 472, 1369, 768, 1370,
	471, 473, 474, 1371, 475, 0, 0, 0, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 485, 484, 0,
	487, 769, 486, 1372, 488, 489, 1373, 0, 490, 491,
	492, 493, 494, 495, 498, 0, 0, 496, 497, 499,
	500, 0, 501, 502, 504, 507, 503, 505, 506, 508,
	521, 522, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 524, 0, 523, 1374, 525, 526,
	527, 528, 529, 536, 538, 539, 534, 535, 537, 540,
	541, 543, 531, 532, 533, 1375, 542, 530, 0, 0,
	1376, 544, 545, 546, 547, 0, 770, 548, 771, 551,
	552, 0, 0, 553, 0, 554, 0, 0, 556, 557,
	558, 0, 0, 559, 560, 772, 1377, 561, 1378, 773,
	562, 563, 555, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 0, 574, 575, 774, 576, 577, 578,
	775, 579, 580, 581, 776, 582, 777, 583, 584, 0,
	585, 586, 587, 0, 588, 589, 590, 591, 592, 593,
	594, 595, 778, 596, 597, 599, 598, 600, 0, 601,
	0, 602, 603, 604, 0, 0, 0, 0, 0, 605,
	606, 608, 0, 609, 610, 611, 612, 607, 613, 614,
	615, 616, 617, 618, 0, 620, 621, 619, 622, 623,
	1379, 624, 625, 626, 627, 628, 779, 629, 0, 630,
	631, 639, 640, 641, 632, 633, 635, 642, 634, 643,
	644, 645, 646, 648, 647, 0, 650, 651, 649, 652,
	653, 654, 0, 655, 780, 656, 636, 637, 657, 658,
	1380, 659, 660, 661, 662, 663, 664, 665, 781, 0,
	666, 0, 667, 668, 669, 670, 671, 672, 674, 638,
	675, 680, 681, 782, 676, 677, 678, 679, 783, 683,
	684, 685, 686, 0, 687, 688, 0, 682, 673, 0,
	689, 690, 691, 692, 693, 694, 0, 695, 696, 0,
	697, 784, 785, 786, 787, 0, 709, 0, 698, 700,
	701, 702, 703, 788, 704, 789, 0, 705, 706, 707,
	708, 699, 710, 711, 0, 0, 712, 713, 714, 716,
	718, 719, 715, 717, 720, 0, 721, 0, 0, 722,
	723, 724, 790, 791, 792, 0, 726, 727, 725, 728,
	729, 732, 730, 731, 793, 733, 470, 734, 735, 316,
	0, 0, 0, 736, 737, 794, 738, 739, 740, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 0, 330, 331, 0, 0, 0,
	0, 0, 741, 0, 0, 0, 332, 0, 333, 334,
	335, 0, 336, 337, 338, 339, 340, 341, 342, 742,
	743, 0, 343, 744, 344, 745, 0, 746, 345, 346,
	347, 348, 349, 350, 351, 0, 0, 0, 352, 747,
	748, 749, 3297, 353, 354, 750, 0, 0, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 4146, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 0,
	380, 381, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 386, 387, 0, 388, 390, 751, 752,
	0, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 3301, 411,
	753, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 754, 755, 424, 0, 4145, 0, 0,
	0, 0, 0, 425, 426, 427, 756, 0, 0, 0,
	428, 0, 429, 430, 431, 3300, 432, 433, 0, 0,
	434, 435, 436, 757, 758, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 759, 0, 760, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 761, 762,
	763, 549, 0, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 0, 0, 0, 4142, 463, 464, 465, 0,
	0, 764, 466, 550, 467, 765, 766, 0, 767, 0,
	468, 4144, 472, 0, 768, 0, 471, 473, 474, 0,
	475, 0, 0, 0, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 485, 484, 0, 487, 769, 486, 0,
	488, 489, 4141, 0, 490, 491, 492, 493, 494, 495,
	498, 0, 0, 496, 497, 499, 500, 0, 501, 502,
	504, 507, 503, 505, 506, 508, 521, 522, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	524, 0, 523, 0, 525, 526, 527, 528, 529, 536,
	538, 539, 534, 535, 537, 540, 541, 543, 531, 532,
	533, 0, 542, 530, 0, 0, 0, 544, 545, 546,
	547, 0, 770, 548, 771, 551, 552, 0, 0, 553,
	0, 554, 0, 0, 556, 557, 558, 0, 0, 559,
	560, 772, 0, 561, 0, 773, 562, 563, 555, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 0,
	574, 575, 774, 576, 577, 578, 775, 579, 580, 581,
	776, 582, 777, 583, 584, 3299, 585, 586, 587, 0,
	588, 589, 590, 591, 592, 593, 594, 595, 778, 596,
	597, 599, 598, 600, 0, 601, 0, 602, 603, 604,
	0, 0, 0, 0, 0, 605, 606, 608, 0, 609,
	610, 611, 612, 607, 613, 614, 615, 616, 617, 618,
	0, 620, 621, 619, 622, 623, 0, 624, 625, 626,
	627, 628, 779, 629, 0, 630, 631, 639, 640, 641,
	632, 633, 635, 642, 634, 643, 644, 645, 646, 648,
	647, 0, 650, 651, 649, 652, 653, 654, 0, 655,
	780, 656, 636, 637, 657, 658, 0, 659, 660, 661,
	662, 663, 664, 665, 781, 0, 666, 0, 667, 668,
	669, 670, 671, 672, 674, 638, 675, 680, 681, 782,
	676, 677, 678, 679, 783, 683, 684, 685, 686, 0,
	687, 688, 0, 682, 673, 0, 689, 690, 691, 692,
	693, 694, 0, 695, 696, 0, 697, 784, 785, 786,
	787, 0, 709, 0, 698, 700, 701, 702, 703, 788,
	704, 789, 0, 705, 706, 707, 708, 699, 710, 711,
	0, 4143, 712, 713, 714, 716, 718, 719, 715, 717,
	720, 0, 721, 0, 0, 722, 723, 724, 790, 791,
	792, 0, 726, 727, 725, 728, 729, 732, 730, 731,
	793, 733, 470, 734, 735, 316, 0, 0, 0, 736,
	737, 794, 738, 739, 740, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 0, 0, 0, 741, 0,
	0, 0, 332, 0, 333, 334, 335, 0, 336, 337,
	338, 339, 340, 341, 342, 742, 743, 0, 343, 744,
	344, 745, 0, 746, 345, 346, 347, 348, 349, 350,
	351, 0, 0, 0, 352, 747, 748, 749, 3297, 353,
	354, 750, 0, 0, 3291, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 3293, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 0, 380, 381, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 386,
	387, 0, 388, 390, 751, 752, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 3301, 411, 753, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 754,
	755, 424, 0, 0, 0, 0, 0, 0, 0, 425,
	426, 427, 756, 0, 0, 0, 428, 0, 429, 430,
	431, 3300, 432, 433, 0, 0, 434, 435, 436, 757,
	758, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 759, 0, 760, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 3290, 762, 763, 549, 0, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 0, 463, 464, 465, 0, 0, 764, 466, 550,
	467, 765, 766, 0, 767, 0, 468, 469, 472, 0,
	768, 0, 471, 473, 474, 0, 475, 0, 0, 0,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 485,
	484, 0, 487, 769, 486, 0, 488, 489, 0, 0,
	490, 491, 492, 493, 494, 495, 498, 0, 0, 496,
	497, 499, 500, 0, 501, 502, 504, 507, 503, 505,
	506, 508, 521, 522, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 524, 0, 523, 0,
	525, 526, 527, 528, 529, 536, 538, 539, 534, 535,
	537, 540, 541, 543, 531, 532, 533, 0, 542, 530,
	0, 0, 0, 544, 545, 546, 547, 0, 770, 548,
	771, 551, 552, 0, 0, 553, 0, 554, 0, 0,
	556, 557, 558, 0, 0, 559, 560, 772, 0, 561,
	0, 773, 562, 563, 555, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 0, 574, 575, 774, 576,
	577, 578, 775, 579, 580, 581, 776, 582, 777, 583,
	584, 3299, 585, 586, 587, 0, 588, 589, 590, 591,
	592, 593, 594, 595, 778, 596, 597, 599, 598, 600,
	0, 601, 0, 602, 603, 604, 0, 0, 0, 0,
	0, 605, 606, 608, 0, 609, 610, 611, 612, 607,
	613, 614, 615, 616, 617, 618, 0, 620, 621, 619,
	622, 623, 0, 624, 625, 626, 627, 628, 779, 629,
	0, 630, 631, 639, 640, 641, 632, 633, 635, 642,
	634, 643, 644, 645, 646, 648, 647, 0, 650, 651,
	649, 652, 653, 654, 0, 655, 780, 656, 636, 637,
	657, 658, 0, 659, 660, 661, 662, 663, 664, 665,
	781, 0, 666, 0, 667, 668, 669, 670, 671, 672,
	674, 638, 675, 680, 681, 782, 676, 677, 678, 679,
	783, 683, 684, 685, 686, 0, 687, 688, 0, 682,
	673, 0, 689, 690, 691, 692, 693, 694, 0, 695,
	696, 0, 697, 784, 785, 786, 787, 0, 709, 0,
	698, 700, 701, 702, 703, 788, 704, 789, 0, 705,
	706, 707, 708, 699, 710, 711, 0, 3298, 712, 713,
	714, 716, 718, 719, 715, 717, 720, 0, 721, 0,
	0, 722, 723, 724, 790, 791, 792, 0, 726, 727,
	725, 728, 729, 732, 730, 731, 793, 733, 470, 734,
	735, 1984, 0, 316, 0, 736, 737, 794, 738, 739,
	740, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 1983, 330,
	331, 0, 0, 0, 0, 0, 741, 0, 0, 0,
	332, 0, 333, 334, 335, 0, 336, 337, 338, 339,
	340, 341, 342, 742, 743, 0, 343, 744, 344, 745,
	0, 746, 345, 346, 347, 348, 349, 350, 351, 0,
	0, 0, 352, 747, 748, 749, 0, 353, 354, 750,
	0, 0, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 0, 380, 381, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 1981, 387, 0,
	388, 390, 751, 752, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 753, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 1986, 754, 755, 424,
	0, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	756, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 0, 1982, 435, 436, 757, 758, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	759, 0, 760, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 761, 762, 763, 549, 0, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 320,
	463, 464, 465, 0, 0, 764, 466, 550, 467, 765,
	766, 0, 767, 0, 468, 469, 472, 0, 768, 0,
	471, 473, 474, 0, 475, 0, 0, 0, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 485, 484, 0,
	487, 769, 486, 0, 488, 489, 0, 0, 490, 491,
	492, 493, 494, 495, 498, 0, 0, 496, 497, 499,
	500, 0, 501, 502, 504, 507, 503, 505, 506, 508,
	521, 522, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 524, 0, 523, 0, 525, 526,
	527, 528, 529, 536, 538, 539, 534, 535, 537, 540,
	541, 543, 531, 532, 533, 0, 542, 530, 0, 321,
	0, 544, 545, 546, 547, 0, 770, 548, 771, 551,
	552, 0, 0, 553, 0, 554, 0, 0, 556, 557,
	558, 0, 0, 559, 560, 772, 0, 561, 0, 773,
	562, 563, 555, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 0, 574, 575, 774, 576, 577, 578,
	775, 579, 580, 581, 776, 582, 777, 583, 584, 0,
	585, 586, 587, 0, 588, 589, 590, 591, 592, 593,
	594, 595, 778, 596, 597, 599, 598, 600, 0, 601,
	0, 602, 603, 604, 0, 0, 0, 0, 0, 605,
	606, 608, 0, 609, 610, 611, 612, 607, 613, 614,
	615, 616, 617, 618, 0, 620, 621, 619, 622, 623,
	0, 624, 625, 626, 627, 628, 779, 629, 0, 630,
	631, 639, 640, 641, 1985, 633, 635, 642, 634, 643,
	644, 645, 646, 648, 647, 0, 1980, 651, 649, 652,
	653, 654, 0, 655, 780, 656, 636, 637, 657, 658,
	0, 659, 660, 661, 662, 663, 664, 665, 781, 0,
	666, 0, 667, 668, 669, 670, 671, 672, 674, 638,
	675, 680, 681, 782, 676, 677, 678, 679, 783, 683,
	684, 685, 686, 0, 687, 688, 0, 682, 673, 1978,
	689, 690, 691, 692, 693, 694, 0, 695, 696, 0,
	697, 784, 785, 786, 787, 0, 709, 0, 698, 700,
	701, 702, 703, 788, 704, 789, 0, 705, 706, 707,
	708, 699, 710, 711, 0, 0, 712, 713, 714, 716,
	718, 719, 715, 717, 720, 0, 721, 0, 0, 722,
	723, 724, 790, 791, 792, 0, 726, 1979, 725, 728,
	729, 732, 730, 731, 793, 733, 470, 734, 735, 1682,
	0, 316, 0, 736, 737, 794, 738, 739, 740, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	325, 324, 326, 327, 328, 329, 0, 330, 331, 0,
	0, 0, 0, 0, 741, 0, 0, 0, 332, 0,
	333, 334, 335, 0, 336, 337, 338, 339, 340, 341,
	342, 742, 743, 0, 343, 744, 344, 745, 0, 746,
	345, 346, 347, 348, 349, 350, 351, 0, 0, 0,
	352, 747, 748, 749, 0, 353, 354, 750, 0, 0,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 0, 380, 381, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 386, 387, 0, 388, 390,
	751, 752, 0, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 753, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 754, 755, 424, 0, 319,
	0, 0, 0, 0, 0, 425, 426, 427, 756, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 0, 434, 435, 436, 757, 758, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 759, 0,
	760, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	1684, 762, 763, 549, 0, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 0, 0, 0, 320, 463, 464,
	465, 0, 0, 764, 466, 550, 467, 765, 766, 0,
	767, 0, 468, 469, 472, 0, 768, 0, 471, 473,
	474, 0, 475, 0, 0, 0, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 485, 484, 0, 487, 769,
	486, 0, 488, 489, 0, 0, 490, 491, 492, 493,
	494, 495, 498, 0, 0, 496, 497, 499, 500, 0,
	501, 502, 504, 507, 503, 505, 506, 508, 521, 522,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 524, 0, 523, 0, 525, 526, 527, 528,
	529, 536, 538, 539, 534, 535, 537, 540, 541, 543,
	531, 532, 533, 0, 542, 530, 0, 321, 0, 544,
	545, 546, 547, 0, 770, 548, 771, 551, 552, 0,
	0, 553, 0, 554, 0, 1415, 556, 557, 558, 0,
	0, 559, 560, 772, 0, 561, 0, 773, 562, 563,
	555, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 0, 574, 575, 774, 576, 577, 578, 775, 579,
	580, 581, 776, 582, 777, 583, 584, 0, 585, 586,
	587, 0, 588, 589, 590, 591, 592, 593, 594, 595,
	778, 596, 597, 599, 598, 600, 0, 601, 0, 602,
	603, 604, 0, 0, 0, 0, 0, 605, 606, 608,
	0, 609, 610, 611, 612, 607, 613, 614, 615, 616,
	617, 618, 0, 620, 621, 619, 622, 623, 0, 624,
	625, 626, 627, 628, 779, 629, 0, 630, 631, 639,
	640, 641, 632, 633, 635, 642, 634, 643, 644, 645,
	646, 648, 647, 0, 650, 651, 649, 652, 653, 654,
	0, 655, 780, 656, 636, 637, 657, 658, 0, 659,
	660, 661, 662, 663, 664, 665, 781, 0, 666, 0,
	667, 668, 669, 670, 671, 672, 674, 638, 675, 680,
	681, 782, 676, 677, 678, 679, 783, 683, 684, 685,
	686, 0, 687, 688, 0, 682, 673, 0, 689, 690,
	691, 692, 693, 694, 0, 695, 696, 0, 697, 784,
	785, 786, 787, 0, 709, 0, 698, 700, 701, 702,
	703, 788, 704, 789, 0, 705, 706, 707, 708, 699,
	710, 711, 0, 0, 712, 713, 714, 716, 718, 719,
	715, 717, 720, 0, 721, 0, 0, 722, 723, 724,
	790, 791, 792, 0, 726, 727, 725, 728, 729, 732,
	730, 731, 793, 733, 470, 734, 735, 1679, 0, 316,
	0, 736, 737, 794, 738, 739, 740, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 0, 330, 331, 0, 0, 0,
	0, 0, 741, 0, 0, 0, 332, 0, 333, 334,
	335, 0, 336, 337, 338, 339, 340, 341, 342, 742,
	743, 0, 343, 744, 344, 745, 0, 746, 345, 346,
	347, 348, 349, 350, 351, 0, 0, 0, 352, 747,
	748, 749, 0, 353, 354, 750, 0, 0, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 0,
	380, 381, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 386, 387, 0, 388, 390, 751, 752,
	0, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	753, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 754, 755, 424, 0, 319, 0, 0,
	0, 0, 0, 425, 426, 427, 756, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 0,
	434, 435, 436, 757, 758, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 759, 0, 760, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 1681, 762,
	763, 549, 0, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 0, 0, 0, 320, 463, 464, 465, 0,
	0, 764, 466, 550, 467, 765, 766, 0, 767, 0,
	468, 469, 472, 0, 768, 0, 471, 473, 474, 0,
	475, 0, 0, 0, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 485, 484, 0, 487, 769, 486, 0,
	488, 489, 0, 0, 490, 491, 492, 493, 494, 495,
	498, 0, 0, 496, 497, 499, 500, 0, 501, 502,
	504, 507, 503, 505, 506, 508, 521, 522, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	524, 0, 523, 0, 525, 526, 527, 528, 529, 536,
	538, 539, 534, 535, 537, 540, 541, 543, 531, 532,
	533, 0, 542, 530, 0, 321, 0, 544, 545, 546,
	547, 0, 770, 548, 771, 551, 552, 0, 0, 553,
	0, 554, 0, 1415, 556, 557, 558, 0, 0, 559,
	560, 772, 0, 561, 0, 773, 562, 563, 555, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 0,
	574, 575, 774, 576, 577, 578, 775, 579, 580, 581,
	776, 582, 777, 583, 584, 0, 585, 586, 587, 0,
	588, 589, 590, 591, 592, 593, 594, 595, 778, 596,
	597, 599, 598, 600, 0, 601, 0, 602, 603, 604,
	0, 0, 0, 0, 0, 605, 606, 608, 0, 609,
	610, 611, 612, 607, 613, 614, 615, 616, 617, 618,
	0, 620, 621, 619, 622, 623, 0, 624, 625, 626,
	627, 628, 779, 629, 0, 630, 631, 639, 640, 641,
	632, 633, 635, 642, 634, 643, 644, 645, 646, 648,
	647, 0, 650, 651, 649, 652, 653, 654, 0, 655,
	780, 656, 636, 637, 657, 658, 0, 659, 660, 661,
	662, 663, 664, 665, 781, 0, 666, 0, 667, 668,
	669, 670, 671, 672, 674, 638, 675, 680, 681, 782,
	676, 677, 678, 679, 783, 683, 684, 685, 686, 0,
	687, 688, 0, 682, 673, 0, 689, 690, 691, 692,
	693, 694, 0, 695, 696, 0, 697, 784, 785, 786,
	787, 0, 709, 0, 698, 700, 701, 702, 703, 788,
	704, 789, 0, 705, 706, 707, 708, 699, 710, 711,
	0, 0, 712, 713, 714, 716, 718, 719, 715, 717,
	720, 0, 721, 0, 0, 722, 723, 724, 790, 791,
	792, 0, 726, 727, 725, 728, 729, 732, 730, 731,
	793, 733, 470, 734, 735, 1585, 0, 316, 0, 736,
	737, 794, 738, 739, 740, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 0, 0, 0,
	741, 0, 0, 0, 332, 0, 333, 334, 335, 0,
	336, 337, 338, 339, 340, 341, 342, 742, 743, 0,
	343, 744, 344, 745, 0, 746, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 747, 748, 749,
	0, 353, 354, 750, 0, 0, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 0, 380, 381,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 386, 387, 0, 388, 390, 751, 752, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 753, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 754, 755, 424, 0, 319, 0, 0, 0, 0,
	0, 425, 426, 427, 756, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 0, 434, 435,
	436, 757, 758, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 759, 0, 760, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 1587, 762, 763, 549,
	0, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 320, 463, 464, 465, 0, 0, 764,
	466, 550, 467, 765, 766, 0, 767, 0, 468, 469,
	472, 0, 768, 0, 471, 473, 474, 0, 475, 0,
	0, 0, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 485, 484, 0, 487, 769, 486, 0, 488, 489,
	0, 0, 490, 491, 492, 493, 494, 495, 498, 0,
	0, 496, 497, 499, 500, 0, 501, 502, 504, 507,
	503, 505, 506, 508, 521, 522, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 524, 0,
	523, 0, 525, 526, 527, 528, 529, 536, 538, 539,
	534, 535, 537, 540, 541, 543, 531, 532, 533, 0,
	542, 530, 0, 321, 0, 544, 545, 546, 547, 0,
	770, 548, 771, 551, 552, 0, 0, 553, 0, 554,
	0, 1415, 556, 557, 558, 0, 0, 559, 560, 772,
	0, 561, 0, 773, 562, 563, 555, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 0, 574, 575,
	774, 576, 577, 578, 775, 579, 580, 581, 776, 582,
	777, 583, 584, 0, 585, 586, 587, 0, 588, 589,
	590, 591, 592, 593, 594, 595, 778, 596, 597, 599,
	598, 600, 0, 601, 0, 602, 603, 604, 0, 0,
	0, 0, 0, 605, 606, 608, 0, 609, 610, 611,
	612, 607, 613, 614, 615, 616, 617, 618, 0, 620,
	621, 619, 622, 623, 0, 624, 625, 626, 627, 628,
	779, 629, 0, 630, 631, 639, 640, 641, 632, 633,
	635, 642, 634, 643, 644, 645, 646, 648, 647, 0,
	650, 651, 649, 652, 653, 654, 0, 655, 780, 656,
	636, 637, 657, 658, 0, 659, 660, 661, 662, 663,
	664, 665, 781, 0, 666, 0, 667, 668, 669, 670,
	671, 672, 674, 638, 675, 680, 681, 782, 676, 677,
	678, 679, 783, 683, 684, 685, 686, 0, 687, 688,
	0, 682, 673, 0, 689, 690, 691, 692, 693, 694,
	0, 695, 696, 0, 697, 784, 785, 786, 787, 0,
	709, 0, 698, 700, 701, 702, 703, 788, 704, 789,
	0, 705, 706, 707, 708, 699, 710, 711, 0, 0,
	712, 713, 714, 716, 718, 719, 715, 717, 720, 0,
	721, 0, 0, 722, 723, 724, 790, 791, 792, 0,
	726, 727, 725, 728, 729, 732, 730, 731, 793, 733,
	470, 734, 735, 829, 0, 316, 0, 736, 737, 794,
	738, 739, 740, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 827, 328, 329,
	816, 330, 331, 0, 0, 0, 0, 0, 741, 0,
	0, 0, 332, 0, 333, 334, 335, 0, 336, 337,
	338, 339, 340, 341, 342, 742, 743, 0, 343, 744,
	344, 745, 0, 746, 345, 346, 347, 348, 349, 350,
	351, 0, 0, 0, 352, 747, 748, 749, 0, 353,
	354, 750, 0, 0, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 819, 377, 378, 379, 0, 380, 381, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 386,
	387, 0, 388, 390, 751, 752, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 753, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 754,
	755, 424, 0, 0, 0, 0, 0, 0, 0, 425,
	426, 427, 756, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 0, 434, 435, 436, 757,
	758, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	825, 446, 759, 0, 760, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 761, 762, 763, 549, 0, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 0, 463, 464, 465, 0, 0, 764, 466, 550,
	467, 765, 766, 0, 767, 0, 468, 469, 472, 0,
	768, 0, 471, 473, 474, 0, 475, 0, 0, 0,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 485,
	484, 0, 487, 769, 486, 0, 488, 489, 0, 0,
	490, 491, 492, 493, 494, 495, 498, 0, 0, 496,
	497, 499, 500, 0, 501, 502, 504, 507, 503, 505,
	506, 508, 521, 522, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 524, 0, 523, 0,
	525, 526, 527, 528, 529, 536, 538, 539, 534, 535,
	537, 540, 541, 543, 531, 532, 533, 0, 542, 530,
	0, 0, 0, 544, 545, 546, 547, 0, 770, 548,
	771, 551, 552, 0, 0, 553, 0, 554, 0, 0,
	556, 557, 558, 0, 0, 559, 560, 772, 0, 561,
	0, 773, 562, 563, 555, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 0, 574, 575, 774, 576,
	577, 578, 775, 579, 580, 581, 776, 582, 777, 583,
	584, 0, 585, 586, 587, 0, 588, 589, 590, 591,
	592, 593, 594, 595, 778, 596, 597, 599, 598, 600,
	0, 601, 0, 602, 603, 604, 0, 0, 0, 0,
	0, 605, 606, 608, 0, 609, 610, 611, 612, 607,
	613, 614, 615, 616, 617, 618, 0, 620, 621, 619,
	622, 623, 0, 624, 625, 626, 627, 628, 779, 629,
	0, 630, 631, 639, 640, 641, 632, 633, 635, 642,
	634, 643, 644, 645, 646, 648, 647, 821, 650, 651,
	649, 652, 653, 654, 0, 655, 780, 656, 636, 637,
	657, 658, 0, 659, 660, 661, 662, 663, 664, 665,
	781, 0, 666, 0, 667, 668, 669, 670, 671, 672,
	674, 638, 675, 680, 681, 782, 676, 677, 678, 679,
	783, 683, 684, 685, 686, 0, 687, 828, 0, 682,
	673, 0, 689, 690, 691, 692, 693, 694, 0, 695,
	696, 0, 697, 784, 785, 786, 787, 0, 709, 0,
	698, 700, 701, 702, 703, 788, 704, 789, 0, 705,
	706, 707, 708, 699, 710, 711, 0, 0, 712, 713,
	714, 716, 718, 719, 715, 717, 720, 0, 721, 0,
	0, 722, 723, 724, 790, 791, 792, 0, 726, 727,
	725, 728, 729, 732, 730, 731, 793, 733, 470, 734,
	735, 815, 0, 316, 0, 736, 737, 794, 738, 739,
	740, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 816, 330,
	331, 0, 0, 0, 0, 0, 741, 0, 0, 0,
	332, 0, 333, 334, 335, 0, 336, 337, 338, 339,
	340, 341, 342, 742, 743, 0, 343, 744, 344, 745,
	0, 746, 345, 346, 347, 348, 349, 350, 351, 0,
	0, 0, 352, 747, 748, 749, 0, 353, 354, 750,
	0, 0, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 819,
	377, 378, 379, 0, 380, 381, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 386, 387, 0,
	388, 390, 751, 752, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 753, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 754, 755, 424,
	0, 0, 0, 0, 0, 0, 0, 425, 426, 427,
	756, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 0, 434, 435, 436, 757, 758, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 820, 446,
	759, 0, 760, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 761, 762, 763, 549, 0, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 0,
	463, 464, 465, 0, 0, 764, 466, 550, 467, 765,
	766, 0, 767, 0, 468, 469, 472, 0, 768, 0,
	471, 473, 474, 0, 475, 0, 0, 0, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 485, 484, 0,
	487, 769, 486, 0, 488, 489, 0, 0, 490, 491,
	492, 493, 494, 495, 498, 0, 0, 496, 497, 499,
	500, 0, 501, 502, 504, 507, 503, 505, 506, 508,
	521, 522, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 524, 0, 523, 0, 525, 526,
	527, 528, 529, 536, 538, 539, 534, 535, 537, 540,
	541, 543, 531, 532, 533, 0, 542, 530, 0, 0,
	0, 544, 545, 546, 547, 0, 770, 548, 771, 551,
	552, 0, 0, 553, 0, 554, 0, 0, 556, 557,
	558, 0, 0, 559, 560, 772, 0, 561, 0, 773,
	562, 563, 555, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 0, 574, 575, 774, 576, 577, 578,
	775, 579, 580, 581, 776, 582, 777, 583, 584, 0,
	585, 586, 587, 0, 588, 589, 590, 591, 592, 593,
	594, 595, 778, 596, 597, 599, 598, 600, 0, 601,
	0, 602, 603, 604, 0, 0, 0, 0, 0, 605,
	606, 608, 0, 609, 610, 611, 612, 607, 613, 614,
	615, 616, 617, 618, 0, 620, 621, 619, 622, 623,
	0, 624, 625, 626, 627, 628, 779, 629, 0, 630,
	631, 639, 640, 641, 632, 633, 635, 642, 634, 643,
	644, 645, 646, 648, 647, 821, 650, 651, 649, 652,
	653, 654, 0, 655, 780, 656, 636, 637, 657, 658,
	0, 659, 660, 661, 662, 663, 664, 665, 781, 0,
	666, 0, 667, 668, 669, 670, 671, 672, 674, 638,
	675, 680, 681, 782, 676, 677, 678, 679, 783, 683,
	684, 685, 686, 0, 687, 814, 0, 682, 673, 0,
	689, 690, 691, 692, 693, 694, 0, 695, 696, 0,
	697, 784, 785, 786, 787, 0, 709, 0, 698, 700,
	701, 702, 703, 788, 704, 789, 0, 705, 706, 707,
	708, 699, 710, 711, 0, 0, 712, 713, 714, 716,
	718, 719, 715, 717, 720, 0, 721, 0, 0, 722,
	723, 724, 790, 791, 792, 0, 726, 727, 725, 728,
	729, 732, 730, 731, 793, 733, 470, 734, 735, 316,
	0, 0, 0, 736, 737, 794, 738, 739, 740, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 816, 330, 331, 0, 0, 0,
	0, 0, 741, 0, 0, 0, 332, 0, 333, 334,
	335, 0, 336, 337, 338, 339, 340, 341, 342, 742,
	743, 0, 343, 744, 344, 745, 0, 746, 345, 346,
	347, 348, 349, 350, 351, 0, 0, 0, 352, 747,
	748, 749, 0, 353, 354, 750, 0, 0, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 819, 377, 378, 379, 0,
	380, 381, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 386, 387, 0, 388, 390, 751, 752,
	0, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	753, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 754, 755, 424, 0, 0, 0, 0,
	0, 0, 0, 425, 426, 427, 756, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 0,
	434, 435, 436, 757, 758, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 820, 446, 759, 0, 760, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 761, 762,
	763, 549, 0, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 0, 0, 0, 0, 463, 464, 465, 0,
	0, 764, 466, 550, 467, 765, 766, 0, 767, 0,
	468, 469, 472, 0, 768, 0, 471, 473, 474, 0,
	475, 0, 0, 0, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 485, 484, 0, 487, 769, 486, 0,
	488, 489, 0, 0, 490, 491, 492, 493, 494, 495,
	498, 0, 0, 496, 497, 499, 500, 0, 501, 502,
	504, 507, 503, 505, 506, 508, 521, 522, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	524, 0, 523, 0, 525, 526, 527, 528, 529, 536,
	538, 539, 534, 535, 537, 540, 541, 543, 531, 532,
	533, 0, 542, 530, 0, 0, 0, 544, 545, 546,
	547, 0, 770, 548, 771, 551, 552, 0, 0, 553,
	0, 554, 0, 0, 556, 557, 558, 0, 0, 559,
	560, 772, 0, 561, 0, 773, 562, 563, 555, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 0,
	574, 575, 774, 576, 577, 578, 775, 579, 580, 581,
	776, 582, 777, 583, 584, 0, 585, 586, 587, 0,
	588, 589, 590, 591, 592, 593, 594, 595, 778, 596,
	597, 599, 598, 600, 0, 601, 0, 602, 603, 604,
	0, 0, 0, 0, 0, 605, 606, 608, 0, 609,
	610, 611, 612, 607, 613, 614, 615, 616, 617, 618,
	0, 620, 621, 619, 622, 623, 0, 624, 625, 626,
	627, 628, 779, 629, 0, 630, 631, 639, 640, 641,
	632, 633, 635, 642, 634, 643, 644, 645, 646, 648,
	647, 821, 650, 651, 649, 652, 653, 654, 0, 655,
	780, 656, 636, 637, 657, 658, 0, 659, 660, 661,
	662, 663, 664, 665, 781, 0, 666, 0, 667, 668,
	669, 670, 671, 672, 674, 638, 675, 680, 681, 782,
	676, 677, 678, 679, 783, 683, 684, 685, 686, 0,
	687, 688, 0, 682, 673, 0, 689, 690, 691, 692,
	693, 694, 0, 695, 696, 0, 697, 784, 785, 786,
	787, 0, 709, 0, 698, 700, 701, 702, 703, 788,
	704, 789, 0, 705, 706, 707, 708, 699, 710, 711,
	0, 0, 712, 713, 714, 716, 718, 719, 715, 717,
	720, 0, 721, 0, 0, 722, 723, 724, 790, 791,
	792, 0, 726, 727, 725, 728, 729, 732, 730, 731,
	793, 733, 470, 734, 735, 316, 0, 0, 0, 736,
	737, 794, 738, 739, 740, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	816, 330, 331, 0, 0, 0, 0, 0, 741, 0,
	0, 0, 332, 0, 333, 334, 335, 0, 336, 337,
	338, 339, 340, 341, 342, 742, 743, 0, 343, 744,
	344, 745, 0, 746, 345, 346, 347, 348, 349, 350,
	351, 0, 0, 0, 352, 747, 748, 749, 0, 353,
	354, 750, 0, 0, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 819, 377, 378, 379, 0, 380, 381, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 386,
	387, 0, 388, 390, 751, 752, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 753, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 754,
	755, 424, 0, 0, 0, 0, 0, 0, 0, 425,
	426, 427, 756, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 0, 434, 435, 436, 757,
	758, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	4595, 446, 759, 0, 760, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 761, 762, 763, 549, 0, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 0, 463, 464, 465, 0, 0, 764, 466, 550,
	467, 765, 766, 0, 767, 0, 468, 469, 472, 0,
	768, 0, 471, 473, 474, 0, 475, 0, 0, 0,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 485,
	484, 0, 487, 769, 486, 0, 488, 489, 0, 0,
	490, 491, 492, 493, 494, 495, 498, 0, 0, 496,
	497, 499, 500, 0, 501, 502, 504, 507, 503, 505,
	506, 508, 521, 522, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 524, 0, 523, 0,
	525, 526, 527, 528, 529, 536, 538, 539, 534, 535,
	537, 540, 541, 543, 531, 532, 533, 0, 542, 530,
	0, 0, 0, 544, 545, 546, 547, 0, 770, 548,
	771, 551, 552, 0, 0, 553, 0, 554, 0, 0,
	556, 557, 558, 0, 0, 559, 560, 772, 0, 561,
	0, 773, 562, 563, 555, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 0, 574, 575, 774, 576,
	577, 578, 775, 579, 580, 581, 776, 582, 777, 583,
	584, 0, 585, 586, 587, 0, 588, 589, 590, 591,
	592, 593, 594, 595, 778, 596, 597, 599, 598, 600,
	0, 601, 0, 602, 603, 604, 0, 0, 0, 0,
	0, 605, 606, 608, 0, 609, 610, 611, 612, 607,
	613, 614, 615, 616, 617, 618, 0, 620, 621, 619,
	622, 623, 0, 624, 625, 626, 627, 628, 779, 629,
	0, 630, 631, 639, 640, 641, 632, 633, 635, 642,
	634, 643, 644, 645, 646, 648, 647, 821, 650, 651,
	649, 652, 653, 654, 0, 655, 780, 656, 636, 637,
	657, 658, 0, 659, 660, 661, 662, 663, 664, 665,
	781, 0, 666, 0, 667, 668, 669, 670, 671, 672,
	674, 638, 675, 680, 681, 782, 676, 677, 678, 679,
	783, 683, 684, 685, 686, 0, 687, 688, 0, 682,
	673, 0, 689, 690, 691, 692, 693, 694, 0, 695,
	696, 0, 697, 784, 785, 786, 787, 0, 709, 0,
	698, 700, 701, 702, 703, 788, 704, 789, 0, 705,
	706, 707, 708, 699, 710, 711, 0, 0, 712, 713,
	714, 716, 718, 719, 715, 717, 720, 0, 721, 0,
	0, 722, 723, 724, 790, 791, 792, 0, 726, 727,
	725, 728, 729, 732, 730, 731, 793, 733, 470, 734,
	735, 316, 0, 0, 0, 736, 737, 794, 738, 739,
	740, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	325, 324, 326, 327, 328, 329, 0, 330, 331, 0,
	0, 0, 0, 0, 741, 0, 0, 0, 332, 0,
	333, 334, 335, 0, 336, 337, 338, 339, 340, 341,
	342, 742, 743, 0, 343, 744, 344, 745, 0, 746,
	345, 346, 347, 348, 349, 350, 351, 0, 0, 0,
	352, 747, 748, 749, 0, 353, 354, 750, 0, 0,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 0, 380, 381, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 386, 387, 0, 388, 390,
	751, 752, 0, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 753, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 754, 755, 424, 0, 319,
	0, 0, 0, 0, 0, 425, 426, 427, 756, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 0, 434, 435, 436, 757, 758, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 759, 0,
	760, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	761, 762, 763, 549, 0, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 0, 0, 0, 320, 463, 464,
	465, 0, 0, 764, 466, 550, 467, 765, 766, 0,
	767, 0, 468, 469, 472, 0, 768, 0, 471, 473,
	474, 0, 475, 0, 0, 0, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 485, 484, 0, 487, 769,
	486, 0, 488, 489, 0, 0, 490, 491, 492, 493,
	494, 495, 498, 0, 0, 496, 497, 499, 500, 0,
	501, 502, 504, 507, 503, 505, 506, 508, 521, 522,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 524, 0, 523, 0, 525, 526, 527, 528,
	529, 536, 538, 539, 534, 535, 537, 540, 541, 543,
	531, 532, 533, 0, 542, 530, 0, 321, 0, 544,
	545, 546, 547, 0, 770, 548, 771, 551, 552, 0,
	0, 553, 0, 554, 0, 1415, 556, 557, 558, 0,
	0, 559, 560, 772, 0, 561, 0, 773, 562, 563,
	555, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 0, 574, 575, 774, 576, 577, 578, 775, 579,
	580, 581, 776, 582, 777, 583, 584, 0, 585, 586,
	587, 0, 588, 589, 590, 591, 592, 593, 594, 595,
	778, 596, 597, 599, 598, 600, 0, 601, 0, 602,
	603, 604, 0, 0, 0, 0, 0, 605, 606, 608,
	0, 609, 610, 611, 612, 607, 613, 614, 615, 616,
	617, 618, 0, 620, 621, 619, 622, 623, 0, 624,
	625, 626, 627, 628, 779, 629, 0, 630, 631, 639,
	640, 641, 632, 633, 635, 642, 634, 643, 644, 645,
	646, 648, 647, 0, 650, 651, 649, 652, 653, 654,
	0, 655, 780, 656, 636, 637, 657, 658, 0, 659,
	660, 661, 662, 663, 664, 665, 781, 0, 666, 0,
	667, 668, 669, 670, 671, 672, 674, 638, 675, 680,
	681, 782, 676, 677, 678, 679, 783, 683, 684, 685,
	686, 0, 687, 688, 0, 682, 673, 0, 689, 690,
	691, 692, 693, 694, 0, 695, 696, 0, 697, 784,
	785, 786, 787, 0, 709, 0, 698, 700, 701, 702,
	703, 788, 704, 789, 0, 705, 706, 707, 708, 699,
	710, 711, 0, 0, 712, 713, 714, 716, 718, 719,
	715, 717, 720, 0, 721, 0, 0, 722, 723, 724,
	790, 791, 792, 0, 726, 727, 725, 728, 729, 732,
	730, 731, 793, 733, 470, 734, 735, 316, 0, 0,
	0, 736, 737, 794, 738, 739, 740, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 0, 0, 0,
	741, 0, 0, 0, 332, 0, 333, 334, 335, 0,
	336, 337, 338, 339, 340, 341, 342, 742, 743, 0,
	343, 744, 344, 745, 0, 746, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 747, 748, 749,
	0, 353, 354, 750, 0, 0, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 0, 380, 381,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 386, 387, 0, 388, 390, 751, 752, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 753, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 754, 755, 424, 0, 319, 0, 0, 0, 0,
	0, 425, 426, 427, 756, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 0, 434, 435,
	436, 757, 758, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 759, 0, 760, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 761, 762, 763, 549,
	0, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 320, 463, 464, 465, 0, 0, 764,
	466, 550, 467, 765, 766, 0, 767, 0, 468, 469,
	472, 0, 768, 0, 471, 473, 474, 0, 475, 0,
	0, 0, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 485, 484, 0, 487, 769, 486, 0, 488, 489,
	0, 0, 490, 491, 492, 493, 494, 495, 498, 0,
	0, 496, 497, 499, 500, 0, 501, 502, 504, 507,
	503, 505, 506, 508, 521, 522, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 524, 0,
	523, 0, 525, 526, 527, 528, 529, 536, 538, 539,
	534, 535, 537, 540, 541, 543, 531, 532, 533, 4012,
	542, 530, 0, 321, 0, 544, 545, 546, 547, 0,
	770, 548, 771, 551, 552, 0, 0, 553, 0, 554,
	0, 0, 556, 557, 558, 0, 0, 559, 560, 772,
	0, 561, 0, 773, 562, 563, 555, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 0, 574, 575,
	774, 576, 577, 578, 775, 579, 580, 581, 776, 582,
	777, 583, 584, 0, 585, 586, 587, 0, 588, 589,
	590, 591, 592, 593, 594, 595, 778, 596, 597, 599,
	598, 600, 0, 601, 0, 602, 603, 604, 0, 0,
	0, 0, 0, 605, 606, 608, 0, 609, 610, 611,
	612, 607, 613, 614, 615, 616, 617, 618, 0, 620,
	621, 619, 622, 623, 0, 624, 625, 626, 627, 628,
	779, 629, 0, 630, 631, 639, 640, 641, 632, 633,
	635, 642, 634, 643, 644, 645, 646, 648, 647, 0,
	650, 651, 649, 652, 653, 654, 0, 655, 780, 656,
	636, 637, 657, 658, 0, 659, 660, 661, 662, 663,
	664, 665, 781, 0, 666, 0, 667, 668, 669, 670,
	671, 672, 674, 638, 675, 680, 681, 782, 676, 677,
	678, 679, 783, 683, 684, 685, 686, 0, 687, 688,
	0, 682, 673, 0, 689, 690, 691, 692, 693, 694,
	0, 695, 696, 0, 697, 784, 785, 786, 787, 0,
	709, 0, 698, 700, 701, 702, 703, 788, 704, 789,
	0, 705, 706, 707, 708, 699, 710, 711, 0, 0,
	712, 713, 714, 716, 718, 719, 715, 717, 720, 0,
	721, 0, 0, 722, 723, 724, 790, 791, 792, 0,
	726, 727, 725, 728, 729, 732, 730, 731, 793, 733,
	470, 734, 735, 3515, 0, 316, 0, 736, 737, 794,
	738, 739, 740, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 0, 0, 0, 741, 0,
	0, 0, 332, 0, 333, 334, 335, 0, 336, 337,
	338, 339, 340, 341, 342, 742, 743, 0, 343, 744,
	344, 745, 0, 746, 345, 346, 347, 348, 349, 350,
	351, 0, 0, 0, 352, 747, 748, 749, 0, 353,
	354, 750, 0, 0, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 0, 380, 381, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 386,
	387, 0, 388, 390, 751, 752, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 753, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 754,
	755, 424, 0, 319, 0, 0, 0, 0, 0, 425,
	426, 427, 756, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 0, 434, 435, 436, 757,
	758, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 759, 0, 760, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 3514, 762, 763, 549, 0, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 320, 463, 464, 465, 0, 0, 764, 466, 550,
	467, 765, 766, 0, 767, 0, 468, 469, 472, 0,
	768, 0, 471, 473, 474, 0, 475, 0, 0, 0,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 485,
	484, 0, 487, 769, 486, 0, 488, 489, 0, 0,
	490, 491, 492, 493, 494, 495, 498, 0, 0, 496,
	497, 499, 500, 0, 501, 502, 504, 507, 503, 505,
	506, 508, 521, 522, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 524, 0, 523, 0,
	525, 526, 527, 528, 529, 536, 538, 539, 534, 535,
	537, 540, 541, 543, 531, 532, 533, 0, 542, 530,
	0, 321, 0, 544, 545, 546, 547, 0, 770, 548,
	771, 551, 552, 0, 0, 553, 0, 554, 0, 0,
	556, 557, 558, 0, 0, 559, 560, 772, 0, 561,
	0, 773, 562, 563, 555, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 0, 574, 575, 774, 576,
	577, 578, 775, 579, 580, 581, 776, 582, 777, 583,
	584, 0, 585, 586, 587, 0, 588, 589, 590, 591,
	592, 593, 594, 595, 778, 596, 597, 599, 598, 600,
	0, 601, 0, 602, 603, 604, 0, 0, 0, 0,
	0, 605, 606, 608, 0, 609, 610, 611, 612, 607,
	613, 614, 615, 616, 617, 618, 0, 620, 621, 619,
	622, 623, 0, 624, 625, 626, 627, 628, 779, 629,
	0, 630, 631, 639, 640, 641, 632, 633, 635, 642,
	634, 643, 644, 645, 646, 648, 647, 0, 650, 651,
	649, 652, 653, 654, 0, 655, 780, 656, 636, 637,
	657, 658, 0, 659, 660, 661, 662, 663, 664, 665,
	781, 0, 666, 0, 667, 668, 669, 670, 671, 672,
	674, 638, 675, 680, 681, 782, 676, 677, 678, 679,
	783, 683, 684, 685, 686, 0, 687, 688, 0, 682,
	673, 0, 689, 690, 691, 692, 693, 694, 0, 695,
	696, 0, 697, 784, 785, 786, 787, 0, 709, 0,
	698, 700, 701, 702, 703, 788, 704, 789, 0, 705,
	706, 707, 708, 699, 710, 711, 0, 0, 712, 713,
	714, 716, 718, 719, 715, 717, 720, 0, 721, 0,
	0, 722, 723, 724, 790, 791, 792, 0, 726, 727,
	725, 728, 729, 732, 730, 731, 793, 733, 470, 734,
	735, 316, 0, 0, 0, 736, 737, 794, 738, 739,
	740, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	325, 324, 326, 327, 328, 329, 816, 330, 331, 0,
	0, 0, 0, 0, 741, 0, 0, 0, 332, 0,
	333, 334, 335, 0, 336, 337, 338, 339, 340, 341,
	342, 742, 743, 0, 343, 744, 344, 745, 0, 746,
	345, 346, 347, 348, 349, 350, 351, 0, 0, 0,
	352, 747, 748, 749, 0, 353, 354, 750, 0, 0,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 819, 377, 378,
	379, 0, 380, 381, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 386, 387, 0, 388, 390,
	751, 752, 0, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 753, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 754, 755, 424, 0, 0,
	0, 0, 0, 0, 0, 425, 426, 427, 756, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 0, 434, 435, 436, 757, 758, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 820, 446, 759, 0,
	760, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	761, 762, 763, 549, 0, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 0, 0, 0, 0, 463, 464,
	465, 0, 0, 764, 466, 550, 467, 765, 766, 0,
	767, 0, 468, 469, 472, 0, 768, 0, 471, 473,
	474, 0, 475, 0, 0, 0, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 485, 484, 0, 487, 769,
	486, 0, 488, 489, 0, 0, 490, 491, 492, 493,
	494, 495, 498, 0, 0, 496, 497, 499, 500, 0,
	501, 502, 504, 507, 503, 505, 506, 508, 521, 522,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 524, 0, 523, 0, 525, 526, 527, 528,
	529, 536, 538, 539, 534, 535, 537, 540, 541, 543,
	531, 532, 533, 0, 542, 530, 0, 0, 0, 544,
	545, 546, 547, 0, 770, 548, 771, 551, 552, 0,
	0, 553, 0, 554, 0, 0, 556, 557, 558, 0,
	0, 559, 560, 772, 0, 561, 0, 773, 562, 563,
	555, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 0, 574, 575, 774, 576, 577, 578, 775, 579,
	580, 581, 776, 582, 777, 583, 584, 0, 585, 586,
	587, 0, 588, 589, 590, 591, 592, 593, 594, 595,
	778, 596, 597, 599, 598, 600, 0, 601, 0, 602,
	603, 604, 0, 0, 0, 0, 0, 605, 606, 608,
	0, 609, 610, 611, 612, 607, 613, 614, 615, 616,
	617, 618, 0, 620, 621, 619, 622, 623, 0, 624,
	625, 626, 627, 628, 779, 629, 0, 630, 631, 639,
	640, 641, 632, 633, 635, 642, 634, 643, 644, 645,
	646, 648, 647, 821, 650, 651, 649, 652, 653, 654,
	0, 655, 780, 656, 636, 637, 657, 658, 0, 659,
	660, 661, 662, 663, 664, 665, 781, 0, 666, 0,
	667, 668, 669, 670, 671, 672, 674, 638, 675, 680,
	681, 782, 676, 677, 678, 679, 783, 683, 684, 685,
	686, 0, 687, 3217, 0, 682, 673, 0, 689, 690,
	691, 692, 693, 694, 0, 695, 696, 0, 697, 784,
	785, 786, 787, 0, 709, 0, 698, 700, 701, 702,
	703, 788, 704, 789, 0, 705, 706, 707, 708, 699,
	710, 711, 0, 0, 712, 713, 714, 716, 718, 719,
	715, 717, 720, 0, 721, 0, 0, 722, 723, 724,
	790, 791, 792, 0, 726, 727, 725, 728, 729, 732,
	730, 731, 793, 733, 470, 734, 735, 2667, 0, 316,
	0, 736, 737, 794, 738, 739, 740, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 0, 330, 331, 0, 0, 0,
	0, 0, 741, 0, 0, 0, 332, 0, 333, 334,
	335, 0, 336, 337, 338, 339, 340, 341, 342, 742,
	743, 0, 343, 744, 344, 745, 0, 746, 345, 346,
	347, 348, 349, 350, 351, 0, 0, 0, 352, 747,
	748, 749, 0, 353, 354, 750, 0, 0, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 0,
	380, 381, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 386, 387, 0, 388, 390, 751, 752,
	0, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	753, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 754, 755, 424, 0, 319, 0, 0,
	0, 0, 0, 425, 426, 427, 756, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 0,
	434, 435, 436, 757, 758, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 759, 0, 760, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 761, 762,
	763, 549, 0, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 0, 0, 0, 320, 463, 464, 465, 0,
	0, 764, 466, 550, 467, 765, 766, 0, 767, 0,
	468, 469, 472, 0, 768, 0, 471, 473, 474, 0,
	475, 0, 0, 0, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 485, 484, 0, 487, 769, 486, 0,
	488, 489, 0, 0, 490, 491, 492, 493, 494, 495,
	498, 0, 0, 496, 497, 499, 500, 0, 501, 502,
	504, 507, 503, 505, 506, 508, 521, 522, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	524, 0, 523, 0, 525, 526, 527, 528, 529, 536,
	538, 539, 534, 535, 537, 540, 541, 543, 531, 532,
	533, 0, 542, 530, 0, 321, 0, 544, 545, 546,
	547, 0, 770, 548, 771, 551, 552, 0, 0, 553,
	0, 554, 0, 0, 556, 557, 558, 0, 0, 559,
	560, 772, 0, 561, 0, 773, 562, 563, 555, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 0,
	574, 575, 774, 576, 577, 578, 775, 579, 580, 581,
	776, 582, 777, 583, 584, 0, 585, 586, 587, 0,
	588, 589, 590, 591, 592, 593, 594, 595, 778, 596,
	597, 599, 598, 600, 0, 601, 0, 602, 603, 604,
	0, 0, 0, 0, 0, 605, 606, 608, 0, 609,
	610, 611, 612, 607, 613, 614, 615, 616, 617, 618,
	0, 620, 621, 619, 622, 623, 0, 624, 625, 626,
	627, 628, 779, 629, 0, 630, 631, 639, 640, 641,
	632, 633, 635, 642, 634, 643, 644, 645, 646, 648,
	647, 0, 650, 651, 649, 652, 653, 654, 0, 655,
	780, 656, 636, 637, 657, 658, 0, 659, 660, 661,
	662, 663, 664, 665, 781, 0, 666, 0, 667, 668,
	669, 670, 671, 672, 674, 638, 675, 680, 681, 782,
	676, 677, 678, 679, 783, 683, 684, 685, 686, 0,
	687, 688, 0, 682, 673, 0, 689, 690, 691, 692,
	693, 694, 0, 695, 696, 0, 697, 784, 785, 786,
	787, 0, 709, 0, 698, 700, 701, 702, 703, 788,
	704, 789, 0, 705, 706, 707, 708, 699, 710, 711,
	0, 0, 712, 713, 714, 716, 718, 719, 715, 717,
	720, 0, 721, 0, 0, 722, 723, 724, 790, 791,
	792, 0, 726, 727, 725, 728, 729, 732, 730, 731,
	793, 733, 470, 734, 735, 2611, 0, 316, 0, 736,
	737, 794, 738, 739, 740, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 0, 0, 0,
	741, 0, 0, 0, 332, 0, 333, 334, 335, 0,
	336, 337, 338, 339, 340, 341, 342, 742, 743, 0,
	343, 744, 344, 745, 0, 746, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 747, 748, 749,
	0, 353, 354, 750, 0, 0, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 0, 380, 381,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 386, 387, 0, 388, 390, 751, 752, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 753, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 754, 755, 424, 0, 319, 0, 0, 0, 0,
	0, 425, 426, 427, 756, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 0, 434, 435,
	436, 757, 758, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 759, 0, 760, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 2610, 762, 763, 549,
	0, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 320, 463, 464, 465, 0, 0, 764,
	466, 550, 467, 765, 766, 0, 767, 0, 468, 469,
	472, 0, 768, 0, 471, 473, 474, 0, 475, 0,
	0, 0, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 485, 484, 0, 487, 769, 486, 0, 488, 489,
	0, 0, 490, 491, 492, 493, 494, 495, 498, 0,
	0, 496, 497, 499, 500, 0, 501, 502, 504, 507,
	503, 505, 506, 508, 521, 522, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 524, 0,
	523, 0, 525, 526, 527, 528, 529, 536, 538, 539,
	534, 535, 537, 540, 541, 543, 531, 532, 533, 0,
	542, 530, 0, 321, 0, 544, 545, 546, 547, 0,
	770, 548, 771, 551, 552, 0, 0, 553, 0, 554,
	0, 0, 556, 557, 558, 0, 0, 559, 560, 772,
	0, 561, 0, 773, 562, 563, 555, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 0, 574, 575,
	774, 576, 577, 578, 775, 579, 580, 581, 776, 582,
	777, 583, 584, 0, 585, 586, 587, 0, 588, 589,
	590, 591, 592, 593, 594, 595, 778, 596, 597, 599,
	598, 600, 0, 601, 0, 602, 603, 604, 0, 0,
	0, 0, 0, 605, 606, 608, 0, 609, 610, 611,
	612, 607, 613, 614, 615, 616, 617, 618, 0, 620,
	621, 619, 622, 623, 0, 624, 625, 626, 627, 628,
	779, 629, 0, 630, 631, 639, 640, 641, 632, 633,
	635, 642, 634, 643, 644, 645, 646, 648, 647, 0,
	650, 651, 649, 652, 653, 654, 0, 655, 780, 656,
	636, 637, 657, 658, 0, 659, 660, 661, 662, 663,
	664, 665, 781, 0, 666, 0, 667, 668, 669, 670,
	671, 672, 674, 638, 675, 680, 681, 782, 676, 677,
	678, 679, 783, 683, 684, 685, 686, 0, 687, 688,
	0, 682, 673, 0, 689, 690, 691, 692, 693, 694,
	0, 695, 696, 0, 697, 784, 785, 786, 787, 0,
	709, 0, 698, 700, 701, 702, 703, 788, 704, 789,
	0, 705, 706, 707, 708, 699, 710, 711, 0, 0,
	712, 713, 714, 716, 718, 719, 715, 717, 720, 0,
	721, 0, 0, 722, 723, 724, 790, 791, 792, 0,
	726, 727, 725, 728, 729, 732, 730, 731, 793, 733,
	470, 734, 735, 2595, 0, 316, 0, 736, 737, 794,
	738, 739, 740, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 0, 0, 0, 741, 0,
	0, 0, 332, 0, 333, 334, 335, 0, 336, 337,
	338, 339, 340, 341, 342, 742, 743, 0, 343, 744,
	344, 745, 0, 746, 345, 346, 347, 348, 349, 350,
	351, 0, 0, 0, 352, 747, 748, 749, 0, 353,
	354, 750, 0, 0, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 0, 380, 381, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 386,
	387, 0, 388, 390, 751, 752, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 753, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 754,
	755, 424, 0, 319, 0, 0, 0, 0, 0, 425,
	426, 427, 756, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 0, 434, 435, 436, 757,
	758, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 759, 0, 760, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 2597, 762, 763, 549, 0, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 320, 463, 464, 465, 0, 0, 764, 466, 550,
	467, 765, 766, 0, 767, 0, 468, 469, 472, 0,
	768, 0, 471, 473, 474, 0, 475, 0, 0, 0,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 485,
	484, 0, 487, 769, 486, 0, 488, 489, 0, 0,
	490, 491, 492, 493, 494, 495, 498, 0, 0, 496,
	497, 499, 500, 0, 501, 502, 504, 507, 503, 505,
	506, 508, 521, 522, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 524, 0, 523, 0,
	525, 526, 527, 528, 529, 536, 538, 539, 534, 535,
	537, 540, 541, 543, 531, 532, 533, 0, 542, 530,
	0, 321, 0, 544, 545, 546, 547, 0, 770, 548,
	771, 551, 552, 0, 0, 553, 0, 554, 0, 0,
	556, 557, 558, 0, 0, 559, 560, 772, 0, 561,
	0, 773, 562, 563, 555, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 0, 574, 575, 774, 576,
	577, 578, 775, 579, 580, 581, 776, 582, 777, 583,
	584, 0, 585, 586, 587, 0, 588, 589, 590, 591,
	592, 593, 594, 595, 778, 596, 597, 599, 598, 600,
	0, 601, 0, 602, 603, 604, 0, 0, 0, 0,
	0, 605, 606, 608, 0, 609, 610, 611, 612, 607,
	613, 614, 615, 616, 617, 618, 0, 620, 621, 619,
	622, 623, 0, 624, 625, 626, 627, 628, 779, 629,
	0, 630, 631, 639, 640, 641, 632, 633, 635, 642,
	634, 643, 644, 645, 646, 648, 647, 0, 650, 651,
	649, 652, 653, 654, 0, 655, 780, 656, 636, 637,
	657, 658, 0, 659, 660, 661, 662, 663, 664, 665,
	781, 0, 666, 0, 667, 668, 669, 670, 671, 672,
	674, 638, 675, 680, 681, 782, 676, 677, 678, 679,
	783, 683, 684, 685, 686, 0, 687, 688, 0, 682,
	673, 0, 689, 690, 691, 692, 693, 694, 0, 695,
	696, 0, 697, 784, 785, 786, 787, 0, 709, 0,
	698, 700, 701, 702, 703, 788, 704, 789, 0, 705,
	706, 707, 708, 699, 710, 711, 0, 0, 712, 713,
	714, 716, 718, 719, 715, 717, 720, 0, 721, 0,
	0, 722, 723, 724, 790, 791, 792, 0, 726, 727,
	725, 728, 729, 732, 730, 731, 793, 733, 470, 734,
	735, 2586, 0, 316, 0, 736, 737, 794, 738, 739,
	740, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 0, 0, 0, 741, 0, 0, 0,
	332, 0, 333, 334, 335, 0, 336, 337, 338, 339,
	340, 341, 342, 742, 743, 0, 343, 744, 344, 745,
	0, 746, 345, 346, 347, 348, 349, 350, 351, 0,
	0, 0, 352, 747, 748, 749, 0, 353, 354, 750,
	0, 0, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 0, 380, 381, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 386, 387, 0,
	388, 390, 751, 752, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 753, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 754, 755, 424,
	0, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	756, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 0, 434, 435, 436, 757, 758, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	759, 0, 760, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 761, 762, 763, 549, 0, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 320,
	463, 464, 465, 0, 0, 764, 466, 550, 467, 765,
	766, 0, 767, 0, 468, 469, 472, 0, 768, 0,
	471, 473, 474, 0, 475, 0, 0, 0, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 485, 484, 0,
	487, 769, 486, 0, 488, 489, 0, 0, 490, 491,
	492, 493, 494, 495, 498, 0, 0, 496, 497, 499,
	500, 0, 501, 502, 504, 507, 503, 505, 506, 508,
	521, 522, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 524, 0, 523, 0, 525, 526,
	527, 528, 529, 536, 538, 539, 534, 535, 537, 540,
	541, 543, 531, 532, 533, 0, 542, 530, 0, 321,
	0, 544, 545, 546, 547, 0, 770, 548, 771, 551,
	552, 0, 0, 553, 0, 554, 0, 0, 556, 557,
	558, 0, 0, 559, 560, 772, 0, 561, 0, 773,
	562, 563, 555, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 0, 574, 575, 774, 576, 577, 578,
	775, 579, 580, 581, 776, 582, 777, 583, 584, 0,
	585, 586, 587, 0, 588, 589, 590, 591, 592, 593,
	594, 595, 778, 596, 597, 599, 598, 600, 0, 601,
	0, 602, 603, 604, 0, 0, 0, 0, 0, 605,
	606, 608, 0, 609, 610, 611, 612, 607, 613, 614,
	615, 616, 617, 618, 0, 620, 621, 619, 622, 623,
	0, 624, 625, 626, 627, 628, 779, 629, 0, 630,
	631, 639, 640, 641, 632, 633, 635, 642, 634, 643,
	644, 645, 646, 648, 647, 0, 650, 651, 649, 652,
	653, 654, 0, 655, 780, 656, 636, 637, 657, 658,
	0, 659, 660, 661, 662, 663, 664, 665, 781, 0,
	666, 0, 667, 668, 669, 670, 671, 672, 674, 638,
	675, 680, 681, 782, 676, 677, 678, 679, 783, 683,
	684, 685, 686, 0, 687, 688, 0, 682, 673, 0,
	689, 690, 691, 692, 693, 694, 0, 695, 696, 0,
	697, 784, 785, 786, 787, 0, 709, 0, 698, 700,
	701, 702, 703, 788, 704, 789, 0, 705, 706, 707,
	708, 699, 710, 711, 0, 0, 712, 713, 714, 716,
	718, 719, 715, 717, 720, 0, 721, 0, 0, 722,
	723, 724, 790, 791, 792, 0, 726, 727, 725, 728,
	729, 732, 730, 731, 793, 733, 470, 734, 735, 316,
	0, 0, 0, 736, 737, 794, 738, 739, 740, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 0, 330, 331, 0, 0, 0,
	0, 0, 741, 0, 0, 0, 332, 0, 333, 334,
	335, 0, 336, 337, 338, 339, 340, 341, 342, 742,
	743, 0, 343, 744, 344, 745, 0, 746, 345, 346,
	347, 348, 349, 350, 351, 0, 0, 0, 352, 747,
	748, 749, 0, 353, 354, 750, 0, 0, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 0,
	380, 381, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 386, 387, 0, 388, 390, 751, 752,
	0, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	753, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 754, 755, 424, 0, 319, 0, 0,
	0, 0, 0, 425, 426, 427, 756, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 0,
	434, 435, 436, 757, 758, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 759, 0, 760, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 2556, 762,
	763, 549, 0, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 0, 0, 0, 320, 463, 464, 465, 0,
	0, 764, 466, 550, 467, 765, 766, 0, 767, 0,
	468, 469, 472, 0, 768, 0, 471, 473, 474, 0,
	475, 0, 0, 0, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 485, 484, 0, 487, 769, 486, 0,
	488, 489, 0, 0, 490, 491, 492, 493, 494, 495,
	498, 0, 0, 496, 497, 499, 500, 0, 501, 502,
	504, 507, 503, 505, 506, 508, 521, 522, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	524, 0, 523, 0, 525, 526, 527, 528, 529, 536,
	538, 539, 534, 535, 537, 540, 541, 543, 531, 532,
	533, 0, 542, 530, 0, 321, 0, 544, 545, 546,
	547, 0, 770, 548, 771, 551, 552, 0, 0, 553,
	0, 554, 0, 1415, 556, 557, 558, 0, 0, 559,
	560, 772, 0, 561, 0, 773, 562, 563, 555, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 0,
	574, 575, 774, 576, 577, 578, 775, 579, 580, 581,
	776, 582, 777, 583, 584, 0, 585, 586, 587, 0,
	588, 589, 590, 591, 592, 593, 594, 595, 778, 596,
	597, 599, 598, 600, 0, 601, 0, 602, 603, 604,
	0, 0, 0, 0, 0, 605, 606, 608, 0, 609,
	610, 611, 612, 607, 613, 614, 615, 616, 617, 618,
	0, 620, 621, 619, 622, 623, 0, 624, 625, 626,
	627, 628, 779, 629, 0, 630, 631, 639, 640, 641,
	632, 633, 635, 642, 634, 643, 644, 645, 646, 648,
	647, 0, 650, 651, 649, 652, 653, 654, 0, 655,
	780, 656, 636, 637, 657, 658, 0, 659, 660, 661,
	662, 663, 664, 665, 781, 0, 666, 0, 667, 668,
	669, 670, 671, 672, 674, 638, 675, 680, 681, 782,
	676, 677, 678, 679, 783, 683, 684, 685, 686, 0,
	687, 688, 0, 682, 673, 0, 689, 690, 691, 692,
	693, 694, 0, 695, 696, 0, 697, 784, 785, 786,
	787, 0, 709, 0, 698, 700, 701, 702, 703, 788,
	704, 789, 0, 705, 706, 707, 708, 699, 710, 711,
	0, 0, 712, 713, 714, 716, 718, 719, 715, 717,
	720, 0, 721, 0, 0, 722, 723, 724, 790, 791,
	792, 0, 726, 727, 725, 728, 729, 732, 730, 731,
	793, 733, 470, 734, 735, 1814, 0, 316, 0, 736,
	737, 794, 738, 739, 740, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 0, 0, 0,
	741, 0, 0, 0, 332, 0, 333, 334, 335, 0,
	336, 337, 338, 339, 340, 341, 342, 742, 743, 0,
	343, 744, 344, 745, 0, 746, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 747, 748, 749,
	0, 353, 354, 750, 0, 0, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 0, 380, 381,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 386, 387, 0, 388, 390, 751, 752, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 753, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 754, 755, 424, 0, 319, 0, 0, 0, 0,
	0, 425, 426, 427, 756, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 0, 434, 435,
	436, 757, 758, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 759, 0, 760, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 1813, 762, 763, 549,
	0, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 320, 463, 464, 465, 0, 0, 764,
	466, 550, 467, 765, 766, 0, 767, 0, 468, 469,
	472, 0, 768, 0, 471, 473, 474, 0, 475, 0,
	0, 0, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 485, 484, 0, 487, 769, 486, 0, 488, 489,
	0, 0, 490, 491, 492, 493, 494, 495, 498, 0,
	0, 496, 497, 499, 500, 0, 501, 502, 504, 507,
	503, 505, 506, 508, 521, 522, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 524, 0,
	523, 0, 525, 526, 527, 528, 529, 536, 538, 539,
	534, 535, 537, 540, 541, 543, 531, 532, 533, 0,
	542, 530, 0, 321, 0, 544, 545, 546, 547, 0,
	770, 548, 771, 551, 552, 0, 0, 553, 0, 554,
	0, 0, 556, 557, 558, 0, 0, 559, 560, 772,
	0, 561, 0, 773, 562, 563, 555, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 0, 574, 575,
	774, 576, 577, 578, 775, 579, 580, 581, 776, 582,
	777, 583, 584, 0, 585, 586, 587, 0, 588, 589,
	590, 591, 592, 593, 594, 595, 778, 596, 597, 599,
	598, 600, 0, 601, 0, 602, 603, 604, 0, 0,
	0, 0, 0, 605, 606, 608, 0, 609, 610, 611,
	612, 607, 613, 614, 615, 616, 617, 618, 0, 620,
	621, 619, 622, 623, 0, 624, 625, 626, 627, 628,
	779, 629, 0, 630, 631, 639, 640, 641, 632, 633,
	635, 642, 634, 643, 644, 645, 646, 648, 647, 0,
	650, 651, 649, 652, 653, 654, 0, 655, 780, 656,
	636, 637, 657, 658, 0, 659, 660, 661, 662, 663,
	664, 665, 781, 0, 666, 0, 667, 668, 669, 670,
	671, 672, 674, 638, 675, 680, 681, 782, 676, 677,
	678, 679, 783, 683, 684, 685, 686, 0, 687, 688,
	0, 682, 673, 0, 689, 690, 691, 692, 693, 694,
	0, 695, 696, 0, 697, 784, 785, 786, 787, 0,
	709, 0, 698, 700, 701, 702, 703, 788, 704, 789,
	0, 705, 706, 707, 708, 699, 710, 711, 0, 0,
	712, 713, 714, 716, 718, 719, 715, 717, 720, 0,
	721, 0, 0, 722, 723, 724, 790, 791, 792, 0,
	726, 727, 725, 728, 729, 732, 730, 731, 793, 733,
	470, 734, 735, 1704, 0, 316, 0, 736, 737, 794,
	738, 739, 740, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 0, 0, 0, 741, 0,
	0, 0, 332, 0, 333, 334, 335, 0, 336, 337,
	338, 339, 340, 341, 342, 742, 743, 0, 343, 744,
	344, 745, 0, 746, 345, 346, 347, 348, 349, 350,
	351, 0, 0, 0, 352, 747, 748, 749, 0, 353,
	354, 750, 0, 0, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 0, 380, 381, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 386,
	387, 0, 388, 390, 751, 752, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 753, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 754,
	755, 424, 0, 319, 0, 0, 0, 0, 0, 425,
	426, 427, 756, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 0, 434, 435, 436, 757,
	758, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 759, 0, 760, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 761, 762, 763, 549, 0, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 320, 463, 464, 465, 0, 0, 764, 466, 550,
	467, 765, 766, 0, 767, 0, 468, 469, 472, 0,
	768, 0, 471, 473, 474, 0, 475, 0, 0, 0,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 485,
	484, 0, 487, 769, 486, 0, 488, 489, 0, 0,
	490, 491, 492, 493, 494, 495, 498, 0, 0, 496,
	497, 499, 500, 0, 501, 502, 504, 507, 503, 505,
	506, 508, 521, 522, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 524, 0, 523, 0,
	525, 526, 527, 528, 529, 536, 538, 539, 534, 535,
	537, 540, 541, 543, 531, 532, 533, 0, 542, 530,
	0, 321, 0, 544, 545, 546, 547, 0, 770, 548,
	771, 551, 552, 0, 0, 553, 0, 554, 0, 0,
	556, 557, 558, 0, 0, 559, 560, 772, 0, 561,
	0, 773, 562, 563, 555, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 0, 574, 575, 774, 576,
	577, 578, 775, 579, 580, 581, 776, 582, 777, 583,
	584, 0, 585, 586, 587, 0, 588, 589, 590, 591,
	592, 593, 594, 595, 778, 596, 597, 599, 598, 600,
	0, 601, 0, 602, 603, 604, 0, 0, 0, 0,
	0, 605, 606, 608, 0, 609, 610, 611, 612, 607,
	613, 614, 615, 616, 617, 618, 0, 620, 621, 619,
	622, 623, 0, 624, 625, 626, 627, 628, 779, 629,
	0, 630, 631, 639, 640, 641, 632, 633, 635, 642,
	634, 643, 644, 645, 646, 648, 647, 0, 650, 651,
	649, 652, 653, 654, 0, 655, 780, 656, 636, 637,
	657, 658, 0, 659, 660, 661, 662, 663, 664, 665,
	781, 0, 666, 0, 667, 668, 669, 670, 671, 672,
	674, 638, 675, 680, 681, 782, 676, 677, 678, 679,
	783, 683, 684, 685, 686, 0, 687, 688, 0, 682,
	673, 0, 689, 690, 691, 692, 693, 694, 0, 695,
	696, 0, 697, 784, 785, 786, 787, 0, 709, 0,
	698, 700, 701, 702, 703, 788, 704, 789, 0, 705,
	706, 707, 708, 699, 710, 711, 0, 0, 712, 713,
	714, 716, 718, 719, 715, 717, 720, 0, 721, 0,
	0, 722, 723, 724, 790, 791, 792, 0, 726, 727,
	725, 728, 729, 732, 730, 731, 793, 733, 470, 734,
	735, 1697, 0, 316, 0, 736, 737, 794, 738, 739,
	740, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 0, 0, 0, 741, 0, 0, 0,
	332, 0, 333, 334, 335, 0, 336, 337, 338, 339,
	340, 341, 342, 742, 743, 0, 343, 744, 344, 745,
	0, 746, 345, 346, 347, 348, 349, 350, 351, 0,
	0, 0, 352, 747, 748, 749, 0, 353, 354, 750,
	0, 0, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 0, 380, 381, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 386, 387, 0,
	388, 390, 751, 752, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 753, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 754, 755, 424,
	0, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	756, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 0, 434, 435, 436, 757, 758, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	759, 0, 760, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 1699, 762, 763, 549, 0, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 320,
	463, 464, 465, 0, 0, 764, 466, 550, 467, 765,
	766, 0, 767, 0, 468, 469, 472, 0, 768, 0,
	471, 473, 474, 0, 475, 0, 0, 0, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 485, 484, 0,
	487, 769, 486, 0, 488, 489, 0, 0, 490, 491,
	492, 493, 494, 495, 498, 0, 0, 496, 497, 499,
	500, 0, 501, 502, 504, 507, 503, 505, 506, 508,
	521, 522, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 524, 0, 523, 0, 525, 526,
	527, 528, 529, 536, 538, 539, 534, 535, 537, 540,
	541, 543, 531, 532, 533, 0, 542, 530, 0, 321,
	0, 544, 545, 546, 547, 0, 770, 548, 771, 551,
	552, 0, 0, 553, 0, 554, 0, 0, 556, 557,
	558, 0, 0, 559, 560, 772, 0, 561, 0, 773,
	562, 563, 555, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 0, 574, 575, 774, 576, 577, 578,
	775, 579, 580, 581, 776, 582, 777, 583, 584, 0,
	585, 586, 587, 0, 588, 589, 590, 591, 592, 593,
	594, 595, 778, 596, 597, 599, 598, 600, 0, 601,
	0, 602, 603, 604, 0, 0, 0, 0, 0, 605,
	606, 608, 0, 609, 610, 611, 612, 607, 613, 614,
	615, 616, 617, 618, 0, 620, 621, 619, 622, 623,
	0, 624, 625, 626, 627, 628, 779, 629, 0, 630,
	631, 639, 640, 641, 632, 633, 635, 642, 634, 643,
	644, 645, 646, 648, 647, 0, 650, 651, 649, 652,
	653, 654, 0, 655, 780, 656, 636, 637, 657, 658,
	0, 659, 660, 661, 662, 663, 664, 665, 781, 0,
	666, 0, 667, 668, 669, 670, 671, 672, 674, 638,
	675, 680, 681, 782, 676, 677, 678, 679, 783, 683,
	684, 685, 686, 0, 687, 688, 0, 682, 673, 0,
	689, 690, 691, 692, 693, 694, 0, 695, 696, 0,
	697, 784, 785, 786, 787, 0, 709, 0, 698, 700,
	701, 702, 703, 788, 704, 789, 0, 705, 706, 707,
	708, 699, 710, 711, 0, 0, 712, 713, 714, 716,
	718, 719, 715, 717, 720, 0, 721, 0, 0, 722,
	723, 724, 790, 791, 792, 0, 726, 727, 725, 728,
	729, 732, 730, 731, 793, 733, 470, 734, 735, 1687,
	0, 316, 0, 736, 737, 794, 738, 739, 740, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	325, 324, 326, 327, 328, 329, 0, 330, 331, 0,
	0, 0, 0, 0, 741, 0, 0, 0, 332, 0,
	333, 334, 335, 0, 336, 337, 338, 339, 340, 341,
	342, 742, 743, 0, 343, 744, 344, 745, 0, 746,
	345, 346, 347, 348, 349, 350, 351, 0, 0, 0,
	352, 747, 748, 749, 0, 353, 354, 750, 0, 0,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 0, 380, 381, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 386, 387, 0, 388, 390,
	751, 752, 0, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 753, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 754, 755, 424, 0, 319,
	0, 0, 0, 0, 0, 425, 426, 427, 756, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 0, 434, 435, 436, 757, 758, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 759, 0,
	760, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	761, 762, 763, 549, 0, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 0, 0, 0, 320, 463, 464,
	465, 0, 0, 764, 466, 550, 467, 765, 766, 0,
	767, 0, 468, 469, 472, 0, 768, 0, 471, 473,
	474, 0, 475, 0, 0, 0, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 485, 484, 0, 487, 769,
	486, 0, 488, 489, 0, 0, 490, 491, 492, 493,
	494, 495, 498, 0, 0, 496, 497, 499, 500, 0,
	501, 502, 504, 507, 503, 505, 506, 508, 521, 522,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 524, 0, 523, 0, 525, 526, 527, 528,
	529, 536, 538, 539, 534, 535, 537, 540, 541, 543,
	531, 532, 533, 0, 542, 530, 0, 321, 0, 544,
	545, 546, 547, 0, 770, 548, 771, 551, 552, 0,
	0, 553, 0, 554, 0, 0, 556, 557, 558, 0,
	0, 559, 560, 772, 0, 561, 0, 773, 562, 563,
	555, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 0, 574, 575, 774, 576, 577, 578, 775, 579,
	580, 581, 776, 582, 777, 583, 584, 0, 585, 586,
	587, 0, 588, 589, 590, 591, 592, 593, 594, 595,
	778, 596, 597, 599, 598, 600, 0, 601, 0, 602,
	603, 604, 0, 0, 0, 0, 0, 605, 606, 608,
	0, 609, 610, 611, 612, 607, 613, 614, 615, 616,
	617, 618, 0, 620, 621, 619, 622, 623, 0, 624,
	625, 626, 627, 628, 779, 629, 0, 630, 631, 639,
	640, 641, 632, 633, 635, 642, 634, 643, 644, 645,
	646, 648, 647, 0, 650, 651, 649, 652, 653, 654,
	0, 655, 780, 656, 636, 637, 657, 658, 0, 659,
	660, 661, 662, 663, 664, 665, 781, 0, 666, 0,
	667, 668, 669, 670, 671, 672, 674, 638, 675, 680,
	681, 782, 676, 677, 678, 679, 783, 683, 684, 685,
	686, 0, 687, 688, 0, 682, 673, 0, 689, 690,
	691, 692, 693, 694, 0, 695, 696, 0, 697, 784,
	785, 786, 787, 0, 709, 0, 698, 700, 701, 702,
	703, 788, 704, 789, 0, 705, 706, 707, 708, 699,
	710, 711, 0, 0, 712, 713, 714, 716, 718, 719,
	715, 717, 720, 0, 721, 0, 0, 722, 723, 724,
	790, 791, 792, 0, 726, 727, 725, 728, 729, 732,
	730, 731, 793, 733, 470, 734, 735, 1503, 0, 316,
	0, 736, 737, 794, 738, 739, 740, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 0, 330, 331, 0, 0, 0,
	0, 0, 741, 0, 0, 0, 332, 0, 333, 334,
	335, 0, 336, 337, 338, 339, 340, 341, 342, 742,
	743, 0, 343, 744, 344, 745, 0, 746, 345, 346,
	347, 348, 349, 350, 351, 0, 0, 0, 352, 747,
	748, 749, 0, 353, 354, 750, 0, 0, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 0,
	380, 381, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 386, 387, 0, 388, 390, 751, 752,
	0, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	753, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 754, 755, 424, 0, 319, 0, 0,
	0, 0, 0, 425, 426, 427, 756, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 0,
	434, 435, 436, 757, 758, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 759, 0, 760, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 1502, 762,
	763, 549, 0, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 0, 0, 0, 320, 463, 464, 465, 0,
	0, 764, 466, 550, 467, 765, 766, 0, 767, 0,
	468, 469, 472, 0, 768, 0, 471, 473, 474, 0,
	475, 0, 0, 0, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 485, 484, 0, 487, 769, 486, 0,
	488, 489, 0, 0, 490, 491, 492, 493, 494, 495,
	498, 0, 0, 496, 497, 499, 500, 0, 501, 502,
	504, 507, 503, 505, 506, 508, 521, 522, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	524, 0, 523, 0, 525, 526, 527, 528, 529, 536,
	538, 539, 534, 535, 537, 540, 541, 543, 531, 532,
	533, 0, 542, 530, 0, 321, 0, 544, 545, 546,
	547, 0, 770, 548, 771, 551, 552, 0, 0, 553,
	0, 554, 0, 0, 556, 557, 558, 0, 0, 559,
	560, 772, 0, 561, 0, 773, 562, 563, 555, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 0,
	574, 575, 774, 576, 577, 578, 775, 579, 580, 581,
	776, 582, 777, 583, 584, 0, 585, 586, 587, 0,
	588, 589, 590, 591, 592, 593, 594, 595, 778, 596,
	597, 599, 598, 600, 0, 601, 0, 602, 603, 604,
	0, 0, 0, 0, 0, 605, 606, 608, 0, 609,
	610, 611, 612, 607, 613, 614, 615, 616, 617, 618,
	0, 620, 621, 619, 622, 623, 0, 624, 625, 626,
	627, 628, 779, 629, 0, 630, 631, 639, 640, 641,
	632, 633, 635, 642, 634, 643, 644, 645, 646, 648,
	647, 0, 650, 651, 649, 652, 653, 654, 0, 655,
	780, 656, 636, 637, 657, 658, 0, 659, 660, 661,
	662, 663, 664, 665, 781, 0, 666, 0, 667, 668,
	669, 670, 671, 672, 674, 638, 675, 680, 681, 782,
	676, 677, 678, 679, 783, 683, 684, 685, 686, 0,
	687, 688, 0, 682, 673, 0, 689, 690, 691, 692,
	693, 694, 0, 695, 696, 0, 697, 784, 785, 786,
	787, 0, 709, 0, 698, 700, 701, 702, 703, 788,
	704, 789, 0, 705, 706, 707, 708, 699, 710, 711,
	0, 0, 712, 713, 714, 716, 718, 719, 715, 717,
	720, 0, 721, 0, 0, 722, 723, 724, 790, 791,
	792, 0, 726, 727, 725, 728, 729, 732, 730, 731,
	793, 733, 470, 734, 735, 1492, 0, 316, 0, 736,
	737, 794, 738, 739, 740, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 0, 0, 0,
	741, 0, 0, 0, 332, 0, 333, 334, 335, 0,
	336, 337, 338, 339, 340, 341, 342, 742, 743, 0,
	343, 744, 344, 745, 0, 746, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 747, 748, 749,
	0, 353, 354, 750, 0, 0, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 0, 380, 381,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 386, 387, 0, 388, 390, 751, 752, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 753, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 754, 755, 424, 0, 319, 0, 0, 0, 0,
	0, 425, 426, 427, 756, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 0, 434, 435,
	436, 757, 758, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 759, 0, 760, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 1491, 762, 763, 549,
	0, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 320, 463, 464, 465, 0, 0, 764,
	466, 550, 467, 765, 766, 0, 767, 0, 468, 469,
	472, 0, 768, 0, 471, 473, 474, 0, 475, 0,
	0, 0, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 485, 484, 0, 487, 769, 486, 0, 488, 489,
	0, 0, 490, 491, 492, 493, 494, 495, 498, 0,
	0, 496, 497, 499, 500, 0, 501, 502, 504, 507,
	503, 505, 506, 508, 521, 522, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 524, 0,
	523, 0, 525, 526, 527, 528, 529, 536, 538, 539,
	534, 535, 537, 540, 541, 543, 531, 532, 533, 0,
	542, 530, 0, 321, 0, 544, 545, 546, 547, 0,
	770, 548, 771, 551, 552, 0, 0, 553, 0, 554,
	0, 0, 556, 557, 558, 0, 0, 559, 560, 772,
	0, 561, 0, 773, 562, 563, 555, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 0, 574, 575,
	774, 576, 577, 578, 775, 579, 580, 581, 776, 582,
	777, 583, 584, 0, 585, 586, 587, 0, 588, 589,
	590, 591, 592, 593, 594, 595, 778, 596, 597, 599,
	598, 600, 0, 601, 0, 602, 603, 604, 0, 0,
	0, 0, 0, 605, 606, 608, 0, 609, 610, 611,
	612, 607, 613, 614, 615, 616, 617, 618, 0, 620,
	621, 619, 622, 623, 0, 624, 625, 626, 627, 628,
	779, 629, 0, 630, 631, 639, 640, 641, 632, 633,
	635, 642, 634, 643, 644, 645, 646, 648, 647, 0,
	650, 651, 649, 652, 653, 654, 0, 655, 780, 656,
	636, 637, 657, 658, 0, 659, 660, 661, 662, 663,
	664, 665, 781, 0, 666, 0, 667, 668, 669, 670,
	671, 672, 674, 638, 675, 680, 681, 782, 676, 677,
	678, 679, 783, 683, 684, 685, 686, 0, 687, 688,
	0, 682, 673, 0, 689, 690, 691, 692, 693, 694,
	0, 695, 696, 0, 697, 784, 785, 786, 787, 0,
	709, 0, 698, 700, 701, 702, 703, 788, 704, 789,
	0, 705, 706, 707, 708, 699, 710, 711, 0, 0,
	712, 713, 714, 716, 718, 719, 715, 717, 720, 0,
	721, 0, 0, 722, 723, 724, 790, 791, 792, 0,
	726, 727, 725, 728, 729, 732, 730, 731, 793, 733,
	470, 734, 735, 1488, 0, 316, 0, 736, 737, 794,
	738, 739, 740, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 0, 0, 0, 741, 0,
	0, 0, 332, 0, 333, 334, 335, 0, 336, 337,
	338, 339, 340, 341, 342, 742, 743, 0, 343, 744,
	344, 745, 0, 746, 345, 346, 347, 348, 349, 350,
	351, 0, 0, 0, 352, 747, 748, 749, 0, 353,
	354, 750, 0, 0, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 0, 380, 381, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 386,
	387, 0, 388, 390, 751, 752, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 753, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 754,
	755, 424, 0, 319, 0, 0, 0, 0, 0, 425,
	426, 427, 756, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 0, 434, 435, 436, 757,
	758, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 759, 0, 760, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 1487, 762, 763, 549, 0, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 320, 463, 464, 465, 0, 0, 764, 466, 550,
	467, 765, 766, 0, 767, 0, 468, 469, 472, 0,
	768, 0, 471, 473, 474, 0, 475, 0, 0, 0,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 485,
	484, 0, 487, 769, 486, 0, 488, 489, 0, 0,
	490, 491, 492, 493, 494, 495, 498, 0, 0, 496,
	497, 499, 500, 0, 501, 502, 504, 507, 503, 505,
	506, 508, 521, 522, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 524, 0, 523, 0,
	525, 526, 527, 528, 529, 536, 538, 539, 534, 535,
	537, 540, 541, 543, 531, 532, 533, 0, 542, 530,
	0, 321, 0, 544, 545, 546, 547, 0, 770, 548,
	771, 551, 552, 0, 0, 553, 0, 554, 0, 0,
	556, 557, 558, 0, 0, 559, 560, 772, 0, 561,
	0, 773, 562, 563, 555, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 0, 574, 575, 774, 576,
	577, 578, 775, 579, 580, 581, 776, 582, 777, 583,
	584, 0, 585, 586, 587, 0, 588, 589, 590, 591,
	592, 593, 594, 595, 778, 596, 597, 599, 598, 600,
	0, 601, 0, 602, 603, 604, 0, 0, 0, 0,
	0, 605, 606, 608, 0, 609, 610, 611, 612, 607,
	613, 614, 615, 616, 617, 618, 0, 620, 621, 619,
	622, 623, 0, 624, 625, 626, 627, 628, 779, 629,
	0, 630, 631, 639, 640, 641, 632, 633, 635, 642,
	634, 643, 644, 645, 646, 648, 647, 0, 650, 651,
	649, 652, 653, 654, 0, 655, 780, 656, 636, 637,
	657, 658, 0, 659, 660, 661, 662, 663, 664, 665,
	781, 0, 666, 0, 667, 668, 669, 670, 671, 672,
	674, 638, 675, 680, 681, 782, 676, 677, 678, 679,
	783, 683, 684, 685, 686, 0, 687, 688, 0, 682,
	673, 0, 689, 690, 691, 692, 693, 694, 0, 695,
	696, 0, 697, 784, 785, 786, 787, 0, 709, 0,
	698, 700, 701, 702, 703, 788, 704, 789, 0, 705,
	706, 707, 708, 699, 710, 711, 0, 0, 712, 713,
	714, 716, 718, 719, 715, 717, 720, 0, 721, 0,
	0, 722, 723, 724, 790, 791, 792, 0, 726, 727,
	725, 728, 729, 732, 730, 731, 793, 733, 470, 734,
	735, 1482, 0, 316, 0, 736, 737, 794, 738, 739,
	740, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 0, 0, 0, 741, 0, 0, 0,
	332, 0, 333, 334, 335, 0, 336, 337, 338, 339,
	340, 341, 342, 742, 743, 0, 343, 744, 344, 745,
	0, 746, 345, 346, 347, 348, 349, 350, 351, 0,
	0, 0, 352, 747, 748, 749, 0, 353, 354, 750,
	0, 0, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 0, 380, 381, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 386, 387, 0,
	388, 390, 751, 752, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 753, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 754, 755, 424,
	0, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	756, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 0, 434, 435, 436, 757, 758, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	759, 0, 760, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 1481, 762, 763, 549, 0, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 320,
	463, 464, 465, 0, 0, 764, 466, 550, 467, 765,
	766, 0, 767, 0, 468, 469, 472, 0, 768, 0,
	471, 473, 474, 0, 475, 0, 0, 0, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 485, 484, 0,
	487, 769, 486, 0, 488, 489, 0, 0, 490, 491,
	492, 493, 494, 495, 498, 0, 0, 496, 497, 499,
	500, 0, 501, 502, 504, 507, 503, 505, 506, 508,
	521, 522, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 524, 0, 523, 0, 525, 526,
	527, 528, 529, 536, 538, 539, 534, 535, 537, 540,
	541, 543, 531, 532, 533, 0, 542, 530, 0, 321,
	0, 544, 545, 546, 547, 0, 770, 548, 771, 551,
	552, 0, 0, 553, 0, 554, 0, 0, 556, 557,
	558, 0, 0, 559, 560, 772, 0, 561, 0, 773,
	562, 563, 555, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 0, 574, 575, 774, 576, 577, 578,
	775, 579, 580, 581, 776, 582, 777, 583, 584, 0,
	585, 586, 587, 0, 588, 589, 590, 591, 592, 593,
	594, 595, 778, 596, 597, 599, 598, 600, 0, 601,
	0, 602, 603, 604, 0, 0, 0, 0, 0, 605,
	606, 608, 0, 609, 610, 611, 612, 607, 613, 614,
	615, 616, 617, 618, 0, 620, 621, 619, 622, 623,
	0, 624, 625, 626, 627, 628, 779, 629, 0, 630,
	631, 639, 640, 641, 632, 633, 635, 642, 634, 643,
	644, 645, 646, 648, 647, 0, 650, 651, 649, 652,
	653, 654, 0, 655, 780, 656, 636, 637, 657, 658,
	0, 659, 660, 661, 662, 663, 664, 665, 781, 0,
	666, 0, 667, 668, 669, 670, 671, 672, 674, 638,
	675, 680, 681, 782, 676, 677, 678, 679, 783, 683,
	684, 685, 686, 0, 687, 688, 0, 682, 673, 0,
	689, 690, 691, 692, 693, 694, 0, 695, 696, 0,
	697, 784, 785, 786, 787, 0, 709, 0, 698, 700,
	701, 702, 703, 788, 704, 789, 0, 705, 706, 707,
	708, 699, 710, 711, 0, 0, 712, 713, 714, 716,
	718, 719, 715, 717, 720, 0, 721, 0, 0, 722,
	723, 724, 790, 791, 792, 0, 726, 727, 725, 728,
	729, 732, 730, 731, 793, 733, 470, 734, 735, 1459,
	0, 316, 0, 736, 737, 794, 738, 739, 740, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	325, 324, 326, 327, 328, 329, 0, 330, 331, 0,
	0, 0, 0, 0, 741, 0, 0, 0, 332, 0,
	333, 334, 335, 0, 336, 337, 338, 339, 340, 341,
	342, 742, 743, 0, 343, 744, 344, 745, 0, 746,
	345, 346, 347, 348, 349, 350, 351, 0, 0, 0,
	352, 747, 748, 749, 0, 353, 354, 750, 0, 0,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 0, 380, 381, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 386, 387, 0, 388, 390,
	751, 752, 0, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 753, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 754, 755, 424, 0, 319,
	0, 0, 0, 0, 0, 425, 426, 427, 756, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 0, 434, 435, 436, 757, 758, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 759, 0,
	760, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	1458, 762, 763, 549, 0, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 0, 0, 0, 320, 463, 464,
	465, 0, 0, 764, 466, 550, 467, 765, 766, 0,
	767, 0, 468, 469, 472, 0, 768, 0, 471, 473,
	474, 0, 475, 0, 0, 0, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 485, 484, 0, 487, 769,
	486, 0, 488, 489, 0, 0, 490, 491, 492, 493,
	494, 495, 498, 0, 0, 496, 497, 499, 500, 0,
	501, 502, 504, 507, 503, 505, 506, 508, 521, 522,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 524, 0, 523, 0, 525, 526, 527, 528,
	529, 536, 538, 539, 534, 535, 537, 540, 541, 543,
	531, 532, 533, 0, 542, 530, 0, 321, 0, 544,
	545, 546, 547, 0, 770, 548, 771, 551, 552, 0,
	0, 553, 0, 554, 0, 0, 556, 557, 558, 0,
	0, 559, 560, 772, 0, 561, 0, 773, 562, 563,
	555, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 0, 574, 575, 774, 576, 577, 578, 775, 579,
	580, 581, 776, 582, 777, 583, 584, 0, 585, 586,
	587, 0, 588, 589, 590, 591, 592, 593, 594, 595,
	778, 596, 597, 599, 598, 600, 0, 601, 0, 602,
	603, 604, 0, 0, 0, 0, 0, 605, 606, 608,
	0, 609, 610, 611, 612, 607, 613, 614, 615, 616,
	617, 618, 0, 620, 621, 619, 622, 623, 0, 624,
	625, 626, 627, 628, 779, 629, 0, 630, 631, 639,
	640, 641, 632, 633, 635, 642, 634, 643, 644, 645,
	646, 648, 647, 0, 650, 651, 649, 652, 653, 654,
	0, 655, 780, 656, 636, 637, 657, 658, 0, 659,
	660, 661, 662, 663, 664, 665, 781, 0, 666, 0,
	667, 668, 669, 670, 671, 672, 674, 638, 675, 680,
	681, 782, 676, 677, 678, 679, 783, 683, 684, 685,
	686, 0, 687, 688, 0, 682, 673, 0, 689, 690,
	691, 692, 693, 694, 0, 695, 696, 0, 697, 784,
	785, 786, 787, 0, 709, 0, 698, 700, 701, 702,
	703, 788, 704, 789, 0, 705, 706, 707, 708, 699,
	710, 711, 0, 0, 712, 713, 714, 716, 718, 719,
	715, 717, 720, 0, 721, 0, 0, 722, 723, 724,
	790, 791, 792, 0, 726, 727, 725, 728, 729, 732,
	730, 731, 793, 733, 470, 734, 735, 796, 0, 316,
	0, 736, 737, 794, 738, 739, 740, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 0, 330, 331, 0, 0, 0,
	0, 0, 741, 0, 0, 0, 332, 0, 333, 334,
	335, 0, 336, 337, 338, 339, 340, 341, 342, 742,
	743, 0, 343, 744, 344, 745, 0, 746, 345, 346,
	347, 348, 349, 350, 351, 0, 0, 0, 352, 747,
	748, 749, 0, 353, 354, 750, 0, 0, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 0,
	380, 381, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 386, 387, 0, 388, 390, 751, 752,
	0, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	753, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 754, 755, 424, 0, 319, 0, 0,
	0, 0, 0, 425, 426, 427, 756, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 0,
	434, 435, 436, 757, 758, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 759, 0, 760, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 761, 762,
	763, 549, 0, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 0, 0, 0, 320, 463, 464, 465, 0,
	0, 764, 466, 550, 467, 765, 766, 0, 767, 0,
	468, 469, 472, 0, 768, 0, 471, 473, 474, 0,
	475, 0, 0, 0, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 485, 484, 0, 487, 769, 486, 0,
	488, 489, 0, 0, 490, 491, 492, 493, 494, 495,
	498, 0, 0, 496, 497, 499, 500, 0, 501, 502,
	504, 507, 503, 505, 506, 508, 521, 522, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	524, 0, 523, 0, 525, 526, 527, 528, 529, 536,
	538, 539, 534, 535, 537, 540, 541, 543, 531, 532,
	533, 0, 542, 530, 0, 321, 0, 544, 545, 546,
	547, 0, 770, 548, 771, 551, 552, 0, 0, 553,
	0, 554, 0, 0, 556, 557, 558, 0, 0, 559,
	560, 772, 0, 561, 0, 773, 562, 563, 555, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 0,
	574, 575, 774, 576, 577, 578, 775, 579, 580, 581,
	776, 582, 777, 583, 584, 0, 585, 586, 587, 0,
	588, 589, 590, 591, 592, 593, 594, 595, 778, 596,
	597, 599, 598, 600, 0, 601, 0, 602, 603, 604,
	0, 0, 0, 0, 0, 605, 606, 608, 0, 609,
	610, 611, 612, 607, 613, 614, 615, 616, 617, 618,
	0, 620, 621, 619, 622, 623, 0, 624, 625, 626,
	627, 628, 779, 629, 0, 630, 631, 639, 640, 641,
	632, 633, 635, 642, 634, 643, 644, 645, 646, 648,
	647, 0, 650, 651, 649, 652, 653, 654, 0, 655,
	780, 656, 636, 637, 657, 658, 0, 659, 660, 661,
	662, 663, 664, 665, 781, 0, 666, 0, 667, 668,
	669, 670, 671, 672, 674, 638, 675, 680, 681, 782,
	676, 677, 678, 679, 783, 683, 684, 685, 686, 0,
	687, 688, 0, 682, 673, 0, 689, 690, 691, 692,
	693, 694, 0, 695, 696, 0, 697, 784, 785, 786,
	787, 0, 709, 0, 698, 700, 701, 702, 703, 788,
	704, 789, 0, 705, 706, 707, 708, 699, 710, 711,
	0, 0, 712, 713, 714, 716, 718, 719, 715, 717,
	720, 0, 721, 0, 0, 722, 723, 724, 790, 791,
	792, 0, 726, 727, 725, 728, 729, 732, 730, 731,
	793, 733, 470, 734, 735, 307, 0, 316, 0, 736,
	737, 794, 738, 739, 740, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 0, 0, 0,
	741, 0, 0, 0, 332, 0, 333, 334, 335, 0,
	336, 337, 338, 339, 340, 341, 342, 742, 743, 0,
	343, 744, 344, 745, 0, 746, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 747, 748, 749,
	0, 353, 354, 750, 0, 0, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 0, 380, 381,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 386, 387, 0, 388, 390, 751, 752, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 753, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 754, 755, 424, 0, 319, 0, 0, 0, 0,
	0, 425, 426, 427, 756, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 0, 434, 435,
	436, 757, 758, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 759, 0, 760, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 761, 762, 763, 549,
	0, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 320, 463, 464, 465, 0, 0, 764,
	466, 550, 467, 765, 766, 0, 767, 0, 468, 469,
	472, 0, 768, 0, 471, 473, 474, 0, 475, 0,
	0, 0, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 485, 484, 0, 487, 769, 486, 0, 488, 489,
	0, 0, 490, 491, 492, 493, 494, 495, 498, 0,
	0, 496, 497, 499, 500, 0, 501, 502, 504, 507,
	503, 505, 506, 508, 521, 522, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 524, 0,
	523, 0, 525, 526, 527, 528, 529, 536, 538, 539,
	534, 535, 537, 540, 541, 543, 531, 532, 533, 0,
	542, 530, 0, 321, 0, 544, 545, 546, 547, 0,
	770, 548, 771, 551, 552, 0, 0, 553, 0, 554,
	0, 0, 556, 557, 558, 0, 0, 559, 560, 772,
	0, 561, 0, 773, 562, 563, 555, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 0, 574, 575,
	774, 576, 577, 578, 775, 579, 580, 581, 776, 582,
	777, 583, 584, 0, 585, 586, 587, 0, 588, 589,
	590, 591, 592, 593, 594, 595, 778, 596, 597, 599,
	598, 600, 0, 601, 0, 602, 603, 604, 0, 0,
	0, 0, 0, 605, 606, 608, 0, 609, 610, 611,
	612, 607, 613, 614, 615, 616, 617, 618, 0, 620,
	621, 619, 622, 623, 0, 624, 625, 626, 627, 628,
	779, 629, 0, 630, 631, 639, 640, 641, 632, 633,
	635, 642, 634, 643, 644, 645, 646, 648, 647, 0,
	650, 651, 649, 652, 653, 654, 0, 655, 780, 656,
	636, 637, 657, 658, 0, 659, 660, 661, 662, 663,
	664, 665, 781, 0, 666, 0, 667, 668, 669, 670,
	671, 672, 674, 638, 675, 680, 681, 782, 676, 677,
	678, 679, 783, 683, 684, 685, 686, 0, 687, 688,
	0, 682, 673, 0, 689, 690, 691, 692, 693, 694,
	0, 695, 696, 0, 697, 784, 785, 786, 787, 0,
	709, 0, 698, 700, 701, 702, 703, 788, 704, 789,
	0, 705, 706, 707, 708, 699, 710, 711, 0, 0,
	712, 713, 714, 716, 718, 719, 715, 717, 720, 0,
	721, 0, 0, 722, 723, 724, 790, 791, 792, 0,
	726, 727, 725, 728, 729, 732, 730, 731, 793, 733,
	470, 734, 735, 316, 0, 0, 0, 736, 737, 794,
	738, 739, 740, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 0, 0, 0, 741, 0, 0, 0,
	332, 0, 333, 334, 335, 0, 336, 337, 338, 339,
	340, 341, 342, 742, 743, 0, 343, 744, 344, 745,
	0, 746, 345, 346, 347, 348, 349, 350, 351, 0,
	0, 0, 352, 747, 748, 749, 0, 353, 354, 750,
	0, 0, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 0, 380, 381, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 386, 387, 0,
	388, 390, 751, 752, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 753, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 754, 755, 424,
	0, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	756, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 0, 434, 435, 436, 757, 758, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	759, 0, 760, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 761, 762, 763, 549, 0, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 320,
	463, 464, 465, 0, 0, 764, 466, 550, 467, 765,
	766, 0, 767, 0, 468, 469, 472, 0, 768, 0,
	471, 473, 474, 0, 475, 0, 0, 0, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 485, 484, 0,
	487, 769, 486, 0, 488, 489, 0, 0, 490, 491,
	492, 493, 494, 495, 498, 0, 0, 496, 497, 499,
	500, 0, 501, 502, 504, 507, 503, 505, 506, 508,
	521, 522, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 524, 0, 523, 0, 525, 526,
	527, 528, 529, 536, 538, 539, 534, 535, 537, 540,
	541, 543, 531, 532, 533, 0, 542, 530, 0, 321,
	0, 544, 545, 546, 547, 0, 770, 548, 771, 551,
	552, 0, 0, 553, 0, 554, 0, 0, 556, 557,
	558, 0, 0, 559, 560, 772, 0, 561, 0, 773,
	562, 563, 555, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 0, 574, 575, 774, 576, 577, 578,
	775, 579, 580, 581, 776, 582, 777, 583, 584, 0,
	585, 586, 587, 0, 588, 589, 590, 591, 592, 593,
	594, 595, 778, 596, 597, 599, 598, 600, 0, 601,
	0, 602, 603, 604, 0, 0, 0, 0, 0, 605,
	606, 608, 0, 609, 610, 611, 612, 607, 613, 614,
	615, 616, 617, 618, 0, 620, 621, 619, 622, 623,
	0, 624, 625, 626, 627, 628, 779, 629, 0, 630,
	631, 639, 640, 641, 632, 633, 635, 642, 634, 643,
	644, 645, 646, 648, 647, 0, 650, 651, 649, 652,
	653, 654, 0, 655, 780, 656, 636, 637, 657, 658,
	0, 659, 660, 661, 662, 663, 664, 665, 781, 0,
	666, 0, 667, 668, 669, 670, 671, 672, 674, 638,
	675, 680, 681, 782, 676, 677, 678, 679, 783, 683,
	684, 685, 686, 0, 687, 688, 0, 682, 673, 0,
	689, 690, 691, 692, 693, 694, 0, 695, 696, 0,
	697, 784, 785, 786, 787, 0, 709, 0, 698, 700,
	701, 702, 703, 788, 704, 789, 0, 705, 706, 707,
	708, 699, 710, 711, 0, 0, 712, 713, 714, 716,
	718, 719, 715, 717, 720, 0, 721, 0, 0, 722,
	723, 724, 790, 791, 792, 0, 726, 727, 725, 728,
	729, 732, 730, 731, 793, 733, 470, 734, 735, 316,
	0, 0, 0, 736, 737, 794, 738, 739, 740, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 0, 330, 331, 0, 0, 0,
	0, 0, 741, 0, 0, 0, 332, 0, 333, 334,
	335, 0, 336, 337, 338, 339, 340, 341, 342, 742,
	743, 0, 343, 744, 344, 745, 0, 746, 345, 346,
	347, 348, 349, 350, 351, 0, 0, 0, 352, 747,
	748, 749, 0, 353, 354, 750, 0, 0, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 819, 377, 378, 379, 0,
	380, 381, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 386, 387, 0, 388, 390, 751, 752,
	0, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	753, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 754, 755, 424, 0, 0, 0, 0,
	0, 0, 0, 425, 426, 427, 756, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 0,
	434, 435, 436, 757, 758, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 820, 446, 759, 0, 760, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 761, 762,
	763, 549, 0, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 0, 0, 0, 0, 463, 464, 465, 0,
	0, 764, 466, 550, 467, 765, 766, 0, 767, 0,
	468, 469, 472, 0, 768, 0, 471, 473, 474, 0,
	475, 0, 0, 0, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 485, 484, 0, 487, 769, 486, 0,
	488, 489, 0, 0, 490, 491, 492, 493, 494, 495,
	498, 0, 0, 496, 497, 499, 500, 0, 501, 502,
	504, 507, 503, 505, 506, 508, 521, 522, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	524, 0, 523, 0, 525, 526, 527, 528, 529, 536,
	538, 539, 534, 535, 537, 540, 541, 543, 531, 532,
	533, 0, 542, 530, 0, 0, 0, 544, 545, 546,
	547, 0, 770, 548, 771, 551, 552, 0, 0, 553,
	0, 554, 0, 0, 556, 557, 558, 0, 0, 559,
	560, 772, 0, 561, 0, 773, 562, 563, 555, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 0,
	574, 575, 774, 576, 577, 578, 775, 579, 580, 581,
	776, 582, 777, 583, 584, 0, 585, 586, 587, 0,
	588, 589, 590, 591, 592, 593, 594, 595, 778, 596,
	597, 599, 598, 600, 0, 601, 0, 602, 603, 604,
	0, 0, 0, 0, 0, 605, 606, 608, 0, 609,
	610, 611, 612, 607, 613, 614, 615, 616, 617, 618,
	0, 620, 621, 619, 622, 623, 0, 624, 625, 626,
	627, 628, 779, 629, 0, 630, 631, 639, 640, 641,
	632, 633, 635, 642, 634, 643, 644, 645, 646, 648,
	647, 821, 650, 651, 649, 652, 653, 654, 0, 655,
	780, 656, 636, 637, 657, 658, 0, 659, 660, 661,
	662, 663, 664, 665, 781, 0, 666, 0, 667, 668,
	669, 670, 671, 672, 674, 638, 675, 680, 681, 782,
	676, 677, 678, 679, 783, 683, 684, 685, 686, 0,
	687, 688, 0, 682, 673, 0, 689, 690, 691, 692,
	693, 694, 0, 695, 696, 0, 697, 784, 785, 786,
	787, 0, 709, 0, 698, 700, 701, 702, 703, 788,
	704, 789, 0, 705, 706, 707, 708, 699, 710, 711,
	0, 0, 712, 713, 714, 716, 718, 719, 715, 717,
	720, 0, 721, 0, 0, 722, 723, 724, 790, 791,
	792, 0, 726, 727, 725, 728, 729, 732, 730, 731,
	793, 733, 470, 734, 735, 316, 0, 0, 0, 736,
	737, 794, 738, 739, 740, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 0, 0, 0, 741, 0,
	0, 0, 332, 0, 333, 334, 335, 0, 336, 337,
	338, 339, 340, 341, 342, 742, 743, 0, 343, 744,
	344, 745, 0, 746, 345, 346, 347, 348, 349, 350,
	351, 0, 0, 0, 352, 747, 748, 749, 0, 353,
	354, 750, 0, 0, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 0, 380, 381, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 2711,
	387, 0, 388, 390, 751, 752, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 753, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 754,
	755, 424, 0, 319, 0, 0, 0, 0, 0, 425,
	426, 427, 756, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 0, 434, 435, 436, 757,
	758, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 759, 0, 760, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 761, 762, 763, 549, 0, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 320, 463, 464, 465, 0, 0, 764, 466, 550,
	467, 765, 766, 0, 767, 0, 468, 469, 472, 0,
	768, 0, 471, 473, 474, 0, 475, 0, 0, 0,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 485,
	484, 0, 487, 769, 486, 0, 488, 489, 0, 0,
	490, 491, 492, 493, 494, 495, 498, 0, 0, 496,
	497, 499, 500, 0, 501, 502, 504, 507, 503, 505,
	506, 508, 521, 522, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 524, 0, 523, 0,
	525, 526, 527, 528, 529, 536, 538, 539, 534, 535,
	537, 540, 541, 543, 531, 532, 533, 0, 542, 530,
	0, 321, 0, 544, 545, 546, 547, 0, 770, 548,
	771, 551, 552, 0, 0, 553, 0, 554, 0, 0,
	556, 557, 558, 0, 0, 559, 560, 772, 0, 561,
	0, 773, 562, 563, 555, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 0, 574, 575, 774, 576,
	577, 578, 775, 579, 580, 581, 776, 582, 777, 583,
	584, 0, 585, 586, 587, 0, 588, 589, 590, 591,
	592, 593, 594, 595, 778, 596, 597, 599, 598, 600,
	0, 601, 0, 602, 603, 604, 0, 0, 0, 0,
	0, 605, 606, 608, 0, 609, 610, 611, 612, 607,
	613, 614, 615, 616, 617, 618, 0, 620, 621, 619,
	622, 623, 0, 624, 625, 626, 627, 628, 779, 629,
	0, 630, 631, 639, 640, 641, 632, 633, 635, 642,
	634, 643, 644, 645, 646, 648, 647, 0, 650, 651,
	649, 652, 653, 654, 0, 655, 780, 656, 636, 637,
	657, 658, 0, 659, 660, 661, 662, 663, 664, 665,
	781, 0, 666, 0, 667, 668, 669, 670, 671, 672,
	674, 638, 675, 680, 681, 782, 676, 677, 678, 679,
	783, 683, 684, 685, 686, 0, 687, 688, 0, 682,
	673, 0, 689, 690, 691, 692, 693, 694, 0, 695,
	696, 0, 697, 784, 785, 786, 787, 0, 709, 0,
	698, 700, 701, 702, 703, 788, 704, 789, 0, 705,
	706, 707, 708, 699, 710, 711, 0, 0, 712, 713,
	714, 716, 718, 719, 715, 717, 720, 0, 721, 0,
	0, 722, 723, 724, 790, 791, 792, 0, 726, 727,
	725, 728, 729, 732, 730, 731, 793, 733, 470, 734,
	735, 316, 0, 0, 0, 736, 737, 794, 738, 739,
	740, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	325, 324, 326, 327, 328, 329, 0, 330, 331, 0,
	0, 0, 0, 0, 741, 0, 0, 0, 332, 0,
	333, 334, 335, 0, 336, 337, 338, 339, 340, 341,
	342, 742, 743, 0, 343, 744, 344, 745, 0, 746,
	345, 346, 347, 348, 349, 350, 351, 0, 0, 0,
	352, 747, 748, 749, 0, 353, 354, 750, 0, 0,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 0, 380, 381, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 2709, 387, 0, 388, 390,
	751, 752, 0, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 753, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 754, 755, 424, 0, 319,
	0, 0, 0, 0, 0, 425, 426, 427, 756, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 0, 434, 435, 436, 757, 758, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 759, 0,
	760, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	761, 762, 763, 549, 0, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 0, 0, 0, 320, 463, 464,
	465, 0, 0, 764, 466, 550, 467, 765, 766, 0,
	767, 0, 468, 469, 472, 0, 768, 0, 471, 473,
	474, 0, 475, 0, 0, 0, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 485, 484, 0, 487, 769,
	486, 0, 488, 489, 0, 0, 490, 491, 492, 493,
	494, 495, 498, 0, 0, 496, 497, 499, 500, 0,
	501, 502, 504, 507, 503, 505, 506, 508, 521, 522,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 524, 0, 523, 0, 525, 526, 527, 528,
	529, 536, 538, 539, 534, 535, 537, 540, 541, 543,
	531, 532, 533, 0, 542, 530, 0, 321, 0, 544,
	545, 546, 547, 0, 770, 548, 771, 551, 552, 0,
	0, 553, 0, 554, 0, 0, 556, 557, 558, 0,
	0, 559, 560, 772, 0, 561, 0, 773, 562, 563,
	555, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 0, 574, 575, 774, 576, 577, 578, 775, 579,
	580, 581, 776, 582, 777, 583, 584, 0, 585, 586,
	587, 0, 588, 589, 590, 591, 592, 593, 594, 595,
	778, 596, 597, 599, 598, 600, 0, 601, 0, 602,
	603, 604, 0, 0, 0, 0, 0, 605, 606, 608,
	0, 609, 610, 611, 612, 607, 613, 614, 615, 616,
	617, 618, 0, 620, 621, 619, 622, 623, 0, 624,
	625, 626, 627, 628, 779, 629, 0, 630, 631, 639,
	640, 641, 632, 633, 635, 642, 634, 643, 644, 645,
	646, 648, 647, 0, 650, 651, 649, 652, 653, 654,
	0, 655, 780, 656, 636, 637, 657, 658, 0, 659,
	660, 661, 662, 663, 664, 665, 781, 0, 666, 0,
	667, 668, 669, 670, 671, 672, 674, 638, 675, 680,
	681, 782, 676, 677, 678, 679, 783, 683, 684, 685,
	686, 0, 687, 688, 0, 682, 673, 0, 689, 690,
	691, 692, 693, 694, 0, 695, 696, 0, 697, 784,
	785, 786, 787, 0, 709, 0, 698, 700, 701, 702,
	703, 788, 704, 789, 0, 705, 706, 707, 708, 699,
	710, 711, 0, 0, 712, 713, 714, 716, 718, 719,
	715, 717, 720, 0, 721, 0, 0, 722, 723, 724,
	790, 791, 792, 0, 726, 727, 725, 728, 729, 732,
	730, 731, 793, 733, 470, 734, 735, 316, 0, 0,
	0, 736, 737, 794, 738, 739, 740, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 0, 0, 0,
	741, 0, 0, 0, 332, 0, 333, 334, 335, 0,
	336, 337, 338, 339, 340, 341, 342, 742, 743, 0,
	343, 744, 344, 745, 0, 746, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 747, 748, 749,
	0, 353, 354, 750, 0, 0, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 0, 380, 381,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 2707, 387, 0, 388, 390, 751, 752, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 753, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 754, 755, 424, 0, 319, 0, 0, 0, 0,
	0, 425, 426, 427, 756, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 0, 434, 435,
	436, 757, 758, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 759, 0, 760, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 761, 762, 763, 549,
	0, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 320, 463, 464, 465, 0, 0, 764,
	466, 550, 467, 765, 766, 0, 767, 0, 468, 469,
	472, 0, 768, 0, 471, 473, 474, 0, 475, 0,
	0, 0, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 485, 484, 0, 487, 769, 486, 0, 488, 489,
	0, 0, 490, 491, 492, 493, 494, 495, 498, 0,
	0, 496, 497, 499, 500, 0, 501, 502, 504, 507,
	503, 505, 506, 508, 521, 522, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 524, 0,
	523, 0, 525, 526, 527, 528, 529, 536, 538, 539,
	534, 535, 537, 540, 541, 543, 531, 532, 533, 0,
	542, 530, 0, 321, 0, 544, 545, 546, 547, 0,
	770, 548, 771, 551, 552, 0, 0, 553, 0, 554,
	0, 0, 556, 557, 558, 0, 0, 559, 560, 772,
	0, 561, 0, 773, 562, 563, 555, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 0, 574, 575,
	774, 576, 577, 578, 775, 579, 580, 581, 776, 582,
	777, 583, 584, 0, 585, 586, 587, 0, 588, 589,
	590, 591, 592, 593, 594, 595, 778, 596, 597, 599,
	598, 600, 0, 601, 0, 602, 603, 604, 0, 0,
	0, 0, 0, 605, 606, 608, 0, 609, 610, 611,
	612, 607, 613, 614, 615, 616, 617, 618, 0, 620,
	621, 619, 622, 623, 0, 624, 625, 626, 627, 628,
	779, 629, 0, 630, 631, 639, 640, 641, 632, 633,
	635, 642, 634, 643, 644, 645, 646, 648, 647, 0,
	650, 651, 649, 652, 653, 654, 0, 655, 780, 656,
	636, 637, 657, 658, 0, 659, 660, 661, 662, 663,
	664, 665, 781, 0, 666, 0, 667, 668, 669, 670,
	671, 672, 674, 638, 675, 680, 681, 782, 676, 677,
	678, 679, 783, 683, 684, 685, 686, 0, 687, 688,
	0, 682, 673, 0, 689, 690, 691, 692, 693, 694,
	0, 695, 696, 0, 697, 784, 785, 786, 787, 0,
	709, 0, 698, 700, 701, 702, 703, 788, 704, 789,
	0, 705, 706, 707, 708, 699, 710, 711, 0, 0,
	712, 713, 714, 716, 718, 719, 715, 717, 720, 0,
	721, 0, 0, 722, 723, 724, 790, 791, 792, 0,
	726, 727, 725, 728, 729, 732, 730, 731, 793, 733,
	470, 734, 735, 316, 0, 0, 0, 736, 737, 794,
	738, 739, 740, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 0, 0, 0, 741, 0, 0, 0,
	332, 0, 333, 334, 335, 0, 336, 337, 338, 339,
	340, 341, 342, 742, 743, 0, 343, 744, 344, 745,
	0, 746, 345, 346, 347, 348, 349, 350, 351, 0,
	0, 0, 352, 747, 748, 749, 0, 353, 354, 750,
	0, 0, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 0, 380, 381, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 386, 387, 0,
	388, 390, 751, 752, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 753, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 754, 755, 424,
	0, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	756, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 0, 434, 435, 436, 757, 758, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	759, 0, 760, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 2618, 762, 763, 549, 0, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 320,
	463, 464, 465, 0, 0, 764, 466, 550, 467, 765,
	766, 0, 767, 0, 468, 469, 472, 0, 768, 0,
	471, 473, 474, 0, 475, 0, 0, 0, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 485, 484, 0,
	487, 769, 486, 0, 488, 489, 0, 0, 490, 491,
	492, 493, 494, 495, 498, 0, 0, 496, 497, 499,
	500, 0, 501, 502, 504, 507, 503, 505, 506, 508,
	521, 522, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 524, 0, 523, 0, 525, 526,
	527, 528, 529, 536, 538, 539, 534, 535, 537, 540,
	541, 543, 531, 532, 533, 0, 542, 530, 0, 321,
	0, 544, 545, 546, 547, 0, 770, 548, 771, 551,
	552, 0, 0, 553, 0, 554, 0, 0, 556, 557,
	558, 0, 0, 559, 560, 772, 0, 561, 0, 773,
	562, 563, 555, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 0, 574, 575, 774, 576, 577, 578,
	775, 579, 580, 581, 776, 582, 777, 583, 584, 0,
	585, 586, 587, 0, 588, 589, 590, 591, 592, 593,
	594, 595, 778, 596, 597, 599, 598, 600, 0, 601,
	0, 602, 603, 604, 0, 0, 0, 0, 0, 605,
	606, 608, 0, 609, 610, 611, 612, 607, 613, 614,
	615, 616, 617, 618, 0, 620, 621, 619, 622, 623,
	0, 624, 625, 626, 627, 628, 779, 629, 0, 630,
	631, 639, 640, 641, 632, 633, 635, 642, 634, 643,
	644, 645, 646, 648, 647, 0, 650, 651, 649, 652,
	653, 654, 0, 655, 780, 656, 636, 637, 657, 658,
	0, 659, 660, 661, 662, 663, 664, 665, 781, 0,
	666, 0, 667, 668, 669, 670, 671, 672, 674, 638,
	675, 680, 681, 782, 676, 677, 678, 679, 783, 683,
	684, 685, 686, 0, 687, 688, 0, 682, 673, 0,
	689, 690, 691, 692, 693, 694, 0, 695, 696, 0,
	697, 784, 785, 786, 787, 0, 709, 0, 698, 700,
	701, 702, 703, 788, 704, 789, 0, 705, 706, 707,
	708, 699, 710, 711, 0, 0, 712, 713, 714, 716,
	718, 719, 715, 717, 720, 0, 721, 0, 0, 722,
	723, 724, 790, 791, 792, 0, 726, 727, 725, 728,
	729, 732, 730, 731, 793, 733, 470, 734, 735, 316,
	0, 0, 0, 736, 737, 794, 738, 739, 740, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 0, 330, 331, 0, 0, 0,
	0, 0, 741, 0, 0, 0, 332, 0, 333, 334,
	335, 0, 336, 337, 338, 339, 340, 341, 342, 742,
	743, 0, 343, 744, 344, 745, 0, 746, 345, 346,
	347, 348, 349, 350, 351, 0, 0, 0, 352, 747,
	748, 749, 0, 353, 354, 750, 0, 0, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 0,
	380, 381, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 386, 387, 0, 388, 390, 751, 752,
	0, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	753, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 754, 755, 424, 0, 319, 0, 0,
	0, 0, 0, 425, 426, 427, 756, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 0,
	434, 435, 436, 757, 758, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 759, 0, 760, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 2340, 762,
	763, 549, 0, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 0, 0, 0, 320, 463, 464, 465, 0,
	0, 764, 466, 550, 467, 765, 766, 0, 767, 0,
	468, 469, 472, 0, 768, 0, 471, 473, 474, 0,
	475, 0, 0, 0, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 485, 484, 0, 487, 769, 486, 0,
	488, 489, 0, 0, 490, 491, 492, 493, 494, 495,
	498, 0, 0, 496, 497, 499, 500, 0, 501, 502,
	504, 507, 503, 505, 506, 508, 521, 522, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	524, 0, 523, 0, 525, 526, 527, 528, 529, 536,
	538, 539, 534, 535, 537, 540, 541, 543, 531, 532,
	533, 0, 542, 530, 0, 321, 0, 544, 545, 546,
	547, 0, 770, 548, 771, 551, 552, 0, 0, 553,
	0, 554, 0, 0, 556, 557, 558, 0, 0, 559,
	560, 772, 0, 561, 0, 773, 562, 563, 555, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 0,
	574, 575, 774, 576, 577, 578, 775, 579, 580, 581,
	776, 582, 777, 583, 584, 0, 585, 586, 587, 0,
	588, 589, 590, 591, 592, 593, 594, 595, 778, 596,
	597, 599, 598, 600, 0, 601, 0, 602, 603, 604,
	0, 0, 0, 0, 0, 605, 606, 608, 0, 609,
	610, 611, 612, 607, 613, 614, 615, 616, 617, 618,
	0, 620, 621, 619, 622, 623, 0, 624, 625, 626,
	627, 628, 779, 629, 0, 630, 631, 639, 640, 641,
	632, 633, 635, 642, 634, 643, 644, 645, 646, 648,
	647, 0, 650, 651, 649, 652, 653, 654, 0, 655,
	780, 656, 636, 637, 657, 658, 0, 659, 660, 661,
	662, 663, 664, 665, 781, 0, 666, 0, 667, 668,
	669, 670, 671, 672, 674, 638, 675, 680, 681, 782,
	676, 677, 678, 679, 783, 683, 684, 685, 686, 0,
	687, 688, 0, 682, 673, 0, 689, 690, 691, 692,
	693, 694, 0, 695, 696, 0, 697, 784, 785, 786,
	787, 0, 709, 0, 698, 700, 701, 702, 703, 788,
	704, 789, 0, 705, 706, 707, 708, 699, 710, 711,
	0, 0, 712, 713, 714, 716, 718, 719, 715, 717,
	720, 0, 721, 0, 0, 722, 723, 724, 790, 791,
	792, 0, 726, 727, 725, 728, 729, 732, 730, 731,
	793, 733, 470, 734, 735, 316, 0, 0, 0, 736,
	737, 794, 738, 739, 740, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 0, 0, 0, 741, 0,
	0, 0, 332, 0, 333, 334, 335, 0, 336, 337,
	338, 339, 340, 341, 342, 742, 743, 0, 343, 744,
	344, 745, 0, 746, 345, 346, 347, 348, 349, 350,
	351, 0, 0, 0, 352, 747, 748, 749, 0, 353,
	354, 750, 0, 0, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 0, 380, 381, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 386,
	387, 0, 388, 390, 751, 752, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 753, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 754,
	755, 424, 0, 319, 0, 0, 0, 0, 0, 425,
	426, 427, 756, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 0, 434, 435, 436, 757,
	758, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 759, 0, 760, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 2334, 762, 763, 549, 0, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 320, 463, 464, 465, 0, 0, 764, 466, 550,
	467, 765, 766, 0, 767, 0, 468, 469, 472, 0,
	768, 0, 471, 473, 474, 0, 475, 0, 0, 0,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 485,
	484, 0, 487, 769, 486, 0, 488, 489, 0, 0,
	490, 491, 492, 493, 494, 495, 498, 0, 0, 496,
	497, 499, 500, 0, 501, 502, 504, 507, 503, 505,
	506, 508, 521, 522, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 524, 0, 523, 0,
	525, 526, 527, 528, 529, 536, 538, 539, 534, 535,
	537, 540, 541, 543, 531, 532, 533, 0, 542, 530,
	0, 321, 0, 544, 545, 546, 547, 0, 770, 548,
	771, 551, 552, 0, 0, 553, 0, 554, 0, 0,
	556, 557, 558, 0, 0, 559, 560, 772, 0, 561,
	0, 773, 562, 563, 555, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 0, 574, 575, 774, 576,
	577, 578, 775, 579, 580, 581, 776, 582, 777, 583,
	584, 0, 585, 586, 587, 0, 588, 589, 590, 591,
	592, 593, 594, 595, 778, 596, 597, 599, 598, 600,
	0, 601, 0, 602, 603, 604, 0, 0, 0, 0,
	0, 605, 606, 608, 0, 609, 610, 611, 612, 607,
	613, 614, 615, 616, 617, 618, 0, 620, 621, 619,
	622, 623, 0, 624, 625, 626, 627, 628, 779, 629,
	0, 630, 631, 639, 640, 641, 632, 633, 635, 642,
	634, 643, 644, 645, 646, 648, 647, 0, 650, 651,
	649, 652, 653, 654, 0, 655, 780, 656, 636, 637,
	657, 658, 0, 659, 660, 661, 662, 663, 664, 665,
	781, 0, 666, 0, 667, 668, 669, 670, 671, 672,
	674, 638, 675, 680, 681, 782, 676, 677, 678, 679,
	783, 683, 684, 685, 686, 0, 687, 688, 0, 682,
	673, 0, 689, 690, 691, 692, 693, 694, 0, 695,
	696, 0, 697, 784, 785, 786, 787, 0, 709, 0,
	698, 700, 701, 702, 703, 788, 704, 789, 0, 705,
	706, 707, 708, 699, 710, 711, 0, 0, 712, 713,
	714, 716, 718, 719, 715, 717, 720, 0, 721, 0,
	0, 722, 723, 724, 790, 791, 792, 0, 726, 727,
	725, 728, 729, 732, 730, 731, 793, 733, 470, 734,
	735, 1045, 0, 316, 0, 736, 737, 794, 738, 739,
	740, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 0, 0, 0, 741, 0, 0, 0,
	332, 0, 333, 334, 335, 0, 336, 337, 338, 339,
	340, 341, 342, 742, 743, 0, 343, 744, 344, 745,
	0, 746, 345, 346, 347, 348, 349, 350, 351, 0,
	0, 0, 352, 747, 748, 749, 0, 353, 354, 750,
	0, 0, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 0, 380, 381, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 386, 387, 0,
	388, 390, 751, 752, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 753, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 754, 755, 424,
	0, 0, 0, 0, 0, 0, 0, 425, 426, 427,
	756, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 0, 434, 435, 436, 757, 758, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	759, 0, 760, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 761, 762, 763, 549, 0, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 0,
	463, 464, 465, 0, 0, 764, 466, 550, 467, 765,
	766, 0, 767, 1044, 468, 469, 472, 0, 768, 0,
	471, 473, 474, 0, 475, 0, 0, 0, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 485, 484, 0,
	487, 769, 486, 0, 488, 489, 0, 0, 490, 491,
	492, 493, 494, 495, 498, 0, 0, 496, 497, 499,
	500, 0, 501, 502, 504, 507, 503, 505, 506, 508,
	521, 522, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 524, 0, 523, 0, 525, 526,
	527, 528, 529, 536, 538, 539, 534, 535, 537, 540,
	541, 543, 531, 532, 533, 0, 542, 530, 0, 0,
	0, 544, 545, 546, 547, 0, 770, 548, 771, 551,
	552, 0, 0, 553, 0, 554, 0, 0, 556, 557,
	558, 0, 0, 559, 560, 772, 0, 561, 0, 773,
	562, 563, 555, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 0, 574, 575, 774, 576, 577, 578,
	775, 579, 580, 581, 776, 582, 777, 583, 584, 0,
	585, 586, 587, 0, 588, 589, 590, 591, 592, 593,
	594, 595, 778, 596, 597, 599, 598, 600, 0, 601,
	0, 602, 603, 604, 0, 0, 0, 0, 0, 605,
	606, 608, 0, 609, 610, 611, 612, 607, 613, 614,
	615, 616, 617, 618, 0, 620, 621, 619, 622, 623,
	0, 624, 625, 626, 627, 628, 779, 629, 0, 630,
	631, 639, 640, 641, 632, 633, 635, 642, 634, 643,
	644, 645, 646, 648, 647, 0, 650, 651, 649, 652,
	653, 654, 0, 655, 780, 656, 636, 637, 657, 658,
	0, 659, 660, 661, 662, 663, 664, 665, 781, 0,
	666, 0, 667, 668, 669, 670, 671, 672, 674, 638,
	675, 680, 681, 782, 676, 677, 678, 679, 783, 683,
	684, 685, 686, 0, 687, 688, 0, 682, 673, 1043,
	689, 690, 691, 692, 693, 694, 0, 695, 696, 0,
	697, 784, 785, 786, 787, 0, 709, 0, 698, 700,
	701, 702, 703, 788, 704, 789, 0, 705, 706, 707,
	708, 699, 710, 711, 0, 0, 712, 713, 714, 716,
	718, 719, 715, 717, 720, 0, 721, 0, 0, 722,
	723, 724, 790, 791, 792, 0, 726, 727, 725, 728,
	729, 732, 730, 731, 793, 733, 470, 734, 735, 919,
	0, 316, 0, 736, 737, 794, 738, 739, 740, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 908,
	325, 324, 326, 327, 328, 329, 0, 330, 331, 0,
	0, 0, 0, 0, 741, 0, 0, 0, 332, 0,
	333, 334, 335, 0, 336, 337, 338, 339, 917, 341,
	342, 742, 743, 0, 343, 744, 344, 745, 0, 746,
	345, 346, 347, 348, 349, 350, 351, 0, 0, 0,
	352, 747, 748, 749, 0, 353, 354, 750, 0, 0,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 0, 380, 381, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 386, 387, 0, 388, 390,
	751, 752, 0, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 753, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 754, 755, 424, 0, 0,
	0, 0, 0, 0, 0, 425, 426, 910, 756, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 916, 433,
	912, 0, 434, 435, 436, 757, 758, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 759, 0,
	760, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	761, 762, 763, 549, 0, 455, 456, 457, 913, 458,
	459, 460, 461, 462, 0, 0, 0, 0, 463, 464,
	465, 0, 0, 764, 466, 550, 467, 765, 766, 0,
	767, 0, 468, 469, 472, 0, 768, 0, 471, 473,
	474, 0, 475, 0, 0, 0, 476, 477, 478, 479,
	480, 481, 911, 0, 483, 485, 484, 0, 487, 769,
	486, 0, 488, 489, 0, 0, 490, 491, 492, 493,
	494, 495, 498, 0, 0, 496, 497, 499, 500, 0,
	501, 502, 504, 507, 503, 505, 506, 508, 521, 522,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 524, 0, 523, 0, 525, 526, 527, 914,
	529, 536, 538, 539, 534, 535, 537, 540, 541, 543,
	531, 532, 533, 0, 542, 530, 0, 0, 0, 544,
	545, 546, 547, 0, 770, 548, 771, 551, 552, 0,
	0, 553, 0, 554, 0, 0, 556, 557, 558, 0,
	0, 559, 560, 772, 0, 561, 0, 773, 562, 563,
	555, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 0, 574, 575, 774, 576, 577, 578, 775, 579,
	580, 581, 776, 582, 777, 583, 584, 0, 915, 586,
	587, 0, 588, 589, 590, 591, 592, 593, 594, 595,
	778, 596, 597, 599, 598, 600, 0, 601, 0, 602,
	603, 604, 0, 0, 0, 0, 0, 605, 909, 608,
	0, 609, 610, 611, 612, 607, 613, 614, 615, 616,
	617, 618, 0, 620, 621, 619, 622, 623, 0, 624,
	625, 626, 627, 628, 779, 629, 0, 630, 631, 639,
	640, 641, 632, 633, 635, 642, 634, 643, 644, 645,
	646, 648, 647, 0, 650, 651, 649, 652, 653, 654,
	0, 655, 780, 656, 636, 637, 657, 658, 0, 659,
	660, 661, 662, 663, 664, 665, 781, 0, 666, 0,
	667, 668, 669, 670, 671, 672, 674, 638, 675, 680,
	681, 782, 676, 677, 678, 679, 783, 683, 684, 685,
	686, 0, 687, 688, 0, 682, 673, 0, 689, 690,
	691, 692, 693, 694, 0, 695, 696, 0, 697, 784,
	785, 786, 787, 0, 709, 0, 698, 700, 701, 702,
	703, 788, 704, 789, 0, 705, 706, 707, 708, 699,
	710, 711, 0, 0, 712, 713, 714, 716, 718, 719,
	715, 717, 720, 0, 721, 0, 0, 722, 723, 724,
	790, 791, 792, 0, 726, 727, 725, 728, 729, 732,
	730, 731, 793, 733, 470, 734, 735, 902, 0, 316,
	0, 736, 737, 794, 738, 739, 740, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 908, 325, 324,
	326, 327, 328, 329, 0, 330, 331, 0, 0, 0,
	0, 0, 741, 0, 0, 0, 332, 0, 333, 334,
	335, 0, 336, 337, 338, 339, 917, 341, 342, 742,
	743, 0, 343, 744, 344, 745, 0, 746, 345, 346,
	347, 348, 349, 350, 351, 0, 0, 0, 352, 747,
	748, 749, 0, 353, 354, 750, 0, 0, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 0,
	380, 381, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 386, 387, 0, 388, 390, 751, 752,
	0, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	753, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 754, 755, 424, 0, 0, 0, 0,
	0, 0, 0, 425, 426, 910, 756, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 916, 433, 912, 0,
	434, 435, 436, 757, 758, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 759, 0, 760, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 761, 762,
	763, 549, 0, 455, 456, 457, 913, 458, 459, 460,
	461, 462, 0, 0, 0, 0, 463, 464, 465, 0,
	0, 764, 466, 550, 467, 765, 766, 0, 767, 0,
	468, 469, 472, 0, 768, 0, 471, 473, 474, 0,
	475, 0, 0, 0, 476, 477, 478, 479, 480, 481,
	911, 0, 483, 485, 484, 0, 487, 769, 486, 0,
	488, 489, 0, 0, 490, 491, 492, 493, 494, 495,
	498, 0, 0, 496, 497, 499, 500, 0, 501, 502,
	504, 507, 503, 505, 506, 508, 521, 522, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	524, 0, 523, 0, 525, 526, 527, 914, 529, 536,
	538, 539, 534, 535, 537, 540, 541, 543, 531, 532,
	533, 0, 542, 530, 0, 0, 0, 544, 545, 546,
	547, 0, 770, 548, 771, 551, 552, 0, 0, 553,
	0, 554, 0, 0, 556, 557, 558, 0, 0, 559,
	560, 772, 0, 561, 0, 773, 562, 563, 555, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 0,
	574, 575, 774, 576, 577, 578, 775, 579, 580, 581,
	776, 582, 777, 583, 584, 0, 915, 586, 587, 0,
	588, 589, 590, 591, 592, 593, 594, 595, 778, 596,
	597, 599, 598, 600, 0, 601, 0, 602, 603, 604,
	0, 0, 0, 0, 0, 605, 909, 608, 0, 609,
	610, 611, 612, 607, 613, 614, 615, 616, 617, 618,
	0, 620, 621, 619, 622, 623, 0, 624, 625, 626,
	627, 628, 779, 629, 0, 630, 631, 639, 640, 641,
	632, 633, 635, 642, 634, 643, 644, 645, 646, 648,
	647, 0, 650, 651, 649, 652, 653, 654, 0, 655,
	780, 656, 636, 637, 657, 658, 0, 659, 660, 661,
	662, 663, 664, 665, 781, 0, 666, 0, 667, 668,
	669, 670, 671, 672, 674, 638, 675, 680, 681, 782,
	676, 677, 678, 679, 783, 683, 684, 685, 686, 0,
	687, 688, 0, 682, 673, 0, 689, 690, 691, 692,
	693, 694, 0, 695, 696, 0, 697, 784, 785, 786,
	787, 0, 709, 0, 698, 700, 701, 702, 703, 788,
	704, 789, 0, 705, 706, 707, 708, 699, 710, 711,
	0, 0, 712, 713, 714, 716, 718, 719, 715, 717,
	720, 0, 721, 0, 0, 722, 723, 724, 790, 791,
	792, 0, 726, 727, 725, 728, 729, 732, 730, 731,
	793, 733, 470, 734, 735, 316, 0, 0, 0, 736,
	737, 794, 738, 739, 740, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 0, 0, 0, 741, 0,
	0, 0, 332, 0, 333, 334, 335, 0, 336, 337,
	338, 339, 340, 341, 342, 742, 743, 0, 343, 744,
	344, 745, 0, 746, 345, 346, 347, 348, 349, 350,
	351, 0, 0, 0, 352, 747, 748, 749, 0, 353,
	354, 750, 0, 0, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 0, 380, 381, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 386,
	387, 0, 388, 390, 751, 752, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 753, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 754,
	755, 424, 0, 4145, 0, 0, 0, 0, 0, 425,
	426, 427, 756, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 0, 434, 435, 436, 757,
	758, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 759, 0, 760, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 761, 762, 763, 549, 0, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 0, 463, 464, 465, 0, 0, 764, 466, 550,
	467, 765, 766, 0, 767, 0, 468, 469, 472, 0,
	768, 0, 471, 473, 474, 0, 475, 0, 0, 0,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 485,
	484, 0, 487, 769, 486, 0, 488, 489, 0, 0,
	490, 491, 492, 493, 494, 495, 498, 0, 0, 496,
	497, 499, 500, 0, 501, 502, 504, 507, 503, 505,
	506, 508, 521, 522, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 524, 0, 523, 0,
	525, 526, 527, 528, 529, 536, 538, 539, 534, 535,
	537, 540, 541, 543, 531, 532, 533, 0, 542, 530,
	0, 0, 0, 544, 545, 546, 547, 0, 770, 548,
	771, 551, 552, 0, 0, 553, 0, 554, 0, 0,
	556, 557, 558, 0, 0, 559, 560, 772, 0, 561,
	0, 773, 562, 563, 555, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 0, 574, 575, 774, 576,
	577, 578, 775, 579, 580, 581, 776, 582, 777, 583,
	584, 4951, 585, 586, 587, 0, 588, 589, 590, 591,
	592, 593, 594, 595, 778, 596, 597, 599, 598, 600,
	0, 601, 0, 602, 603, 604, 0, 0, 0, 0,
	0, 605, 606, 608, 0, 609, 610, 611, 612, 607,
	613, 614, 615, 616, 617, 618, 0, 620, 621, 619,
	622, 623, 0, 624, 625, 626, 627, 628, 779, 629,
	0, 630, 631, 639, 640, 641, 632, 633, 635, 642,
	634, 643, 644, 645, 646, 648, 647, 0, 650, 651,
	649, 652, 653, 654, 0, 655, 780, 656, 636, 637,
	657, 658, 0, 659, 660, 661, 662, 663, 664, 665,
	781, 0, 666, 0, 667, 668, 669, 670, 671, 672,
	674, 638, 675, 680, 681, 782, 676, 677, 678, 679,
	783, 683, 684, 685, 686, 0, 687, 688, 0, 682,
	673, 0, 689, 690, 691, 692, 693, 694, 0, 695,
	696, 0, 697, 784, 785, 786, 787, 0, 709, 0,
	698, 700, 701, 702, 703, 788, 704, 789, 0, 705,
	706, 707, 708, 699, 710, 711, 0, 0, 712, 713,
	714, 716, 718, 719, 715, 717, 720, 0, 721, 0,
	0, 722, 723, 724, 790, 791, 792, 0, 726, 727,
	725, 728, 729, 732, 730, 731, 793, 733, 470, 734,
	735, 1530, 0, 316, 0, 736, 737, 794, 738, 739,
	740, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 0, 0, 0, 741, 0, 0, 0,
	332, 0, 333, 334, 335, 1533, 336, 337, 338, 339,
	340, 341, 342, 742, 743, 0, 343, 744, 344, 745,
	0, 746, 345, 346, 347, 348, 349, 350, 351, 0,
	0, 0, 352, 747, 748, 1531, 0, 353, 354, 750,
	0, 0, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 0, 380, 381, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 386, 387, 0,
	388, 390, 751, 752, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 753, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 754, 755, 424,
	0, 0, 0, 0, 0, 0, 0, 425, 426, 427,
	756, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 0, 434, 435, 436, 757, 758, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	759, 0, 760, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 761, 762, 763, 549, 0, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 0,
	463, 464, 465, 0, 0, 764, 466, 550, 467, 765,
	766, 0, 767, 0, 468, 469, 472, 0, 768, 0,
	471, 473, 474, 0, 475, 0, 0, 0, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 485, 484, 0,
	487, 769, 486, 0, 488, 489, 0, 0, 490, 491,
	492, 493, 494, 495, 498, 0, 0, 496, 497, 499,
	500, 0, 501, 502, 504, 507, 503, 505, 506, 508,
	521, 522, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 524, 0, 890, 0, 525, 526,
	527, 528, 529, 536, 538, 539, 534, 535, 537, 540,
	541, 543, 531, 532, 533, 0, 542, 530, 0, 0,
	0, 544, 545, 546, 547, 0, 770, 548, 771, 551,
	552, 0, 0, 553, 0, 554, 0, 0, 556, 557,
	558, 0, 0, 559, 560, 772, 0, 561, 0, 773,
	562, 563, 555, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 0, 574, 575, 774, 576, 577, 578,
	775, 579, 580, 581, 776, 582, 777, 583, 584, 0,
	585, 586, 587, 0, 588, 589, 590, 591, 592, 593,
	594, 595, 778, 596, 597, 599, 598, 600, 0, 601,
	0, 602, 603, 604, 0, 0, 0, 0, 0, 605,
	606, 608, 0, 609, 610, 611, 612, 607, 613, 614,
	615, 616, 617, 618, 0, 620, 621, 619, 622, 623,
	0, 889, 625, 626, 627, 628, 779, 629, 0, 630,
	631, 639, 640, 641, 632, 633, 635, 888, 634, 643,
	644, 645, 646, 648, 647, 0, 650, 651, 649, 652,
	1534, 654, 0, 655, 780, 656, 636, 637, 657, 658,
	0, 659, 660, 661, 662, 663, 664, 665, 781, 0,
	666, 0, 667, 668, 669, 670, 671, 672, 674, 638,
	675, 680, 681, 782, 676, 677, 678, 679, 783, 683,
	684, 685, 686, 0, 687, 688, 0, 682, 673, 0,
	689, 690, 691, 692, 693, 694, 0, 695, 696, 0,
	697, 886, 785, 786, 787, 0, 709, 0, 698, 700,
	701, 702, 703, 788, 704, 789, 0, 705, 706, 707,
	708, 699, 710, 711, 0, 0, 712, 713, 714, 716,
	718, 719, 715, 717, 720, 0, 721, 0, 0, 722,
	723, 724, 790, 791, 792, 0, 726, 727, 725, 728,
	729, 732, 730, 731, 793, 733, 470, 734, 735, 1530,
	0, 316, 0, 736, 737, 794, 738, 739, 740, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	325, 324, 326, 327, 328, 329, 0, 330, 331, 0,
	0, 0, 0, 0, 741, 0, 0, 0, 332, 0,
	333, 334, 335, 1533, 336, 337, 338, 339, 340, 341,
	342, 742, 743, 0, 343, 744, 344, 745, 0, 746,
	345, 346, 347, 348, 349, 350, 351, 0, 0, 0,
	352, 747, 748, 1531, 0, 353, 354, 750, 0, 0,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 0, 380, 381, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 386, 387, 0, 388, 390,
	751, 752, 0, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 753, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 754, 755, 424, 0, 0,
	0, 0, 0, 0, 0, 425, 426, 427, 756, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 0, 434, 435, 436, 757, 758, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 759, 0,
	760, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	761, 762, 763, 549, 0, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 0, 0, 0, 0, 463, 464,
	465, 0, 0, 764, 466, 550, 467, 765, 766, 0,
	767, 0, 468, 469, 472, 0, 768, 0, 471, 473,
	474, 0, 475, 0, 0, 0, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 485, 484, 0, 487, 769,
	486, 0, 488, 489, 0, 0, 490, 491, 492, 493,
	494, 495, 498, 0, 0, 496, 497, 499, 500, 0,
	501, 502, 504, 507, 503, 505, 506, 508, 521, 522,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 524, 0, 890, 0, 525, 526, 527, 528,
	529, 536, 538, 539, 534, 535, 537, 540, 541, 543,
	531, 532, 533, 0, 542, 530, 0, 0, 0, 544,
	545, 546, 547, 0, 770, 548, 771, 551, 552, 0,
	0, 553, 0, 554, 0, 0, 556, 557, 558, 0,
	0, 559, 560, 772, 0, 561, 0, 773, 562, 563,
	555, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 0, 574, 575, 774, 576, 577, 578, 775, 579,
	580, 581, 776, 582, 777, 583, 584, 0, 585, 586,
	587, 0, 588, 589, 590, 591, 592, 593, 594, 595,
	778, 596, 597, 599, 598, 600, 0, 601, 0, 602,
	603, 604, 0, 0, 0, 0, 0, 605, 606, 608,
	0, 609, 610, 611, 612, 607, 613, 614, 615, 616,
	617, 618, 0, 620, 621, 619, 622, 623, 0, 889,
	625, 626, 627, 628, 779, 629, 0, 630, 631, 639,
	640, 641, 632, 633, 635, 888, 634, 643, 644, 645,
	646, 648, 647, 0, 650, 651, 649, 652, 1534, 654,
	0, 655, 780, 656, 636, 637, 657, 658, 0, 659,
	660, 661, 662, 663, 664, 665, 781, 0, 666, 0,
	667, 668, 669, 670, 671, 672, 674, 638, 675, 680,
	681, 782, 676, 677, 678, 679, 783, 683, 684, 685,
	686, 0, 687, 688, 0, 682, 673, 0, 689, 690,
	691, 692, 693, 694, 0, 695, 696, 0, 697, 886,
	785, 786, 787, 0, 709, 0, 698, 1532, 701, 702,
	703, 788, 704, 789, 0, 705, 706, 707, 708, 699,
	710, 711, 0, 0, 712, 713, 714, 716, 718, 719,
	715, 717, 720, 0, 721, 0, 0, 722, 723, 724,
	790, 791, 792, 0, 726, 727, 725, 728, 729, 732,
	730, 731, 793, 733, 470, 734, 735, 897, 0, 316,
	0, 736, 737, 794, 738, 739, 740, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 895, 330, 331, 0, 0, 0,
	0, 0, 741, 0, 0, 0, 332, 0, 333, 334,
	335, 0, 336, 337, 338, 339, 340, 341, 342, 742,
	743, 0, 343, 744, 344, 745, 0, 746, 345, 346,
	347, 348, 349, 350, 351, 0, 0, 0, 352, 747,
	748, 749, 0, 353, 354, 750, 0, 0, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 0,
	380, 381, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 386, 387, 0, 388, 390, 751, 752,
	0, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	753, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 754, 755, 424, 0, 0, 0, 0,
	0, 0, 0, 425, 426, 427, 756, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 0,
	434, 435, 436, 757, 758, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 759, 0, 760, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 761, 762,
	763, 549, 0, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 0, 0, 0, 0, 463, 464, 465, 0,
	0, 764, 466, 550, 467, 765, 766, 0, 767, 0,
	468, 469, 472, 0, 768, 0, 471, 473, 474, 0,
	475, 0, 0, 0, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 485, 484, 0, 487, 769, 486, 0,
	488, 489, 0, 0, 490, 491, 492, 493, 494, 495,
	498, 0, 0, 496, 497, 499, 500, 0, 501, 502,
	504, 507, 503, 505, 506, 508, 521, 522, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	524, 0, 523, 0, 525, 526, 527, 528, 529, 536,
	538, 539, 534, 535, 537, 540, 541, 543, 531, 532,
	533, 0, 542, 530, 0, 0, 0, 544, 545, 546,
	547, 0, 770, 548, 771, 551, 552, 0, 0, 553,
	0, 554, 0, 0, 556, 557, 558, 0, 0, 559,
	560, 772, 0, 561, 0, 773, 562, 563, 555, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 0,
	574, 575, 774, 576, 577, 578, 775, 579, 580, 581,
	776, 582, 777, 583, 584, 0, 585, 586, 587, 0,
	588, 589, 590, 591, 592, 593, 594, 595, 778, 596,
	597, 599, 598, 600, 0, 601, 0, 602, 603, 604,
	0, 0, 0, 0, 0, 605, 606, 608, 0, 609,
	610, 611, 612, 607, 613, 614, 615, 616, 617, 618,
	0, 620, 621, 619, 622, 623, 0, 624, 625, 626,
	627, 628, 779, 629, 0, 630, 631, 639, 640, 641,
	632, 633, 635, 642, 634, 643, 644, 645, 646, 648,
	647, 0, 650, 651, 649, 652, 653, 654, 0, 655,
	780, 656, 636, 637, 657, 658, 0, 659, 660, 661,
	662, 663, 664, 665, 781, 0, 666, 0, 667, 668,
	669, 670, 671, 672, 674, 638, 675, 680, 681, 782,
	676, 677, 678, 679, 783, 683, 684, 685, 686, 0,
	687, 688, 0, 682, 673, 0, 689, 690, 691, 692,
	693, 694, 0, 695, 696, 0, 697, 784, 785, 786,
	787, 0, 709, 0, 698, 700, 701, 702, 703, 788,
	704, 789, 0, 705, 706, 707, 708, 699, 710, 711,
	0, 0, 712, 713, 714, 716, 718, 719, 715, 717,
	720, 0, 721, 0, 0, 722, 723, 724, 790, 791,
	792, 0, 726, 727, 725, 728, 729, 732, 730, 731,
	793, 733, 470, 734, 735, 805, 0, 316, 0, 736,
	737, 794, 738, 739, 740, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 804, 330, 331, 0, 0, 0, 0, 0,
	741, 0, 0, 0, 332, 0, 333, 334, 335, 0,
	336, 337, 338, 339, 340, 341, 342, 742, 743, 0,
	343, 744, 344, 745, 0, 746, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 747, 748, 749,
	0, 353, 354, 750, 0, 0, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 0, 380, 381,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 386, 387, 0, 388, 390, 751, 752, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 753, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 754, 755, 424, 0, 0, 0, 0, 0, 0,
	0, 425, 426, 427, 756, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 0, 434, 435,
	436, 757, 758, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 759, 0, 760, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 761, 762, 763, 549,
	0, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 0, 463, 464, 465, 0, 0, 764,
	466, 550, 467, 765, 766, 0, 767, 0, 468, 469,
	472, 0, 768, 0, 471, 473, 474, 0, 475, 0,
	0, 0, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 485, 484, 0, 487, 769, 486, 0, 488, 489,
	0, 0, 490, 491, 492, 493, 494, 495, 498, 0,
	0, 496, 497, 499, 500, 0, 501, 502, 504, 507,
	503, 505, 506, 508, 521, 522, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 524, 0,
	523, 0, 525, 526, 527, 528, 529, 536, 538, 539,
	534, 535, 537, 540, 541, 543, 531, 532, 533, 0,
	542, 530, 0, 0, 0, 544, 545, 546, 547, 0,
	770, 548, 771, 551, 552, 0, 0, 553, 0, 554,
	0, 0, 556, 557, 558, 0, 0, 559, 560, 772,
	0, 561, 0, 773, 562, 563, 555, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 0, 574, 575,
	774, 576, 577, 578, 775, 579, 580, 581, 776, 582,
	777, 803, 584, 0, 585, 586, 587, 0, 588, 589,
	590, 591, 592, 593, 594, 595, 778, 596, 597, 599,
	598, 600, 0, 601, 0, 602, 603, 604, 0, 0,
	0, 0, 0, 605, 606, 608, 0, 609, 610, 611,
	612, 607, 613, 614, 615, 616, 617, 618, 0, 620,
	621, 619, 622, 623, 0, 624, 625, 626, 627, 628,
	779, 629, 0, 630, 631, 639, 640, 641, 632, 633,
	635, 642, 634, 643, 644, 645, 646, 648, 647, 0,
	650, 651, 649, 652, 653, 654, 0, 655, 780, 656,
	636, 637, 657, 658, 0, 659, 660, 661, 662, 663,
	664, 665, 781, 0, 666, 0, 667, 668, 669, 670,
	671, 672, 674, 638, 675, 680, 681, 782, 676, 677,
	678, 679, 783, 683, 684, 685, 686, 0, 687, 688,
	0, 682, 673, 0, 689, 690, 691, 692, 693, 694,
	0, 695, 696, 0, 697, 784, 785, 786, 787, 0,
	709, 0, 698, 700, 701, 702, 703, 788, 704, 789,
	0, 705, 706, 707, 708, 699, 710, 711, 0, 0,
	712, 713, 714, 716, 718, 719, 715, 717, 720, 0,
	721, 0, 0, 722, 723, 724, 790, 791, 792, 0,
	726, 727, 725, 728, 729, 732, 730, 731, 793, 733,
	470, 734, 735, 316, 3427, 0, 0, 736, 737, 794,
	738, 739, 740, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 0, 0, 0, 741, 0, 0, 0,
	332, 0, 333, 334, 335, 0, 336, 337, 338, 339,
	340, 341, 342, 742, 743, 0, 343, 744, 344, 745,
	0, 746, 345, 346, 347, 348, 349, 350, 351, 0,
	0, 0, 352, 747, 748, 749, 0, 353, 354, 750,
	0, 0, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 0, 380, 381, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 386, 387, 0,
	388, 390, 751, 752, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 753, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 754, 755, 424,
	0, 0, 0, 0, 0, 0, 0, 425, 426, 427,
	756, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 0, 434, 435, 436, 757, 758, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	759, 0, 760, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 761, 762, 763, 549, 0, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 0,
	463, 464, 465, 0, 0, 764, 466, 550, 467, 765,
	766, 0, 767, 0, 468, 469, 472, 0, 768, 0,
	471, 473, 474, 0, 475, 0, 0, 0, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 485, 484, 0,
	487, 769, 486, 0, 488, 489, 0, 0, 490, 491,
	492, 493, 494, 495, 498, 0, 0, 496, 497, 499,
	500, 0, 501, 502, 504, 507, 503, 505, 506, 508,
	521, 522, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 524, 0, 523, 0, 525, 526,
	527, 528, 529, 536, 538, 539, 534, 535, 537, 540,
	541, 543, 531, 532, 533, 0, 542, 530, 0, 0,
	0, 544, 545, 546, 547, 0, 770, 548, 771, 551,
	552, 0, 0, 553, 0, 554, 0, 0, 556, 557,
	558, 0, 0, 559, 560, 772, 0, 561, 0, 773,
	562, 563, 555, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 0, 574, 575, 774, 576, 577, 578,
	775, 579, 580, 581, 776, 582, 777, 583, 584, 0,
	585, 586, 587, 0, 588, 589, 590, 591, 592, 593,
	594, 595, 778, 596, 597, 599, 598, 600, 0, 601,
	0, 602, 603, 604, 0, 0, 0, 0, 0, 605,
	606, 608, 0, 609, 610, 611, 612, 607, 613, 614,
	615, 616, 617, 618, 0, 620, 621, 619, 622, 623,
	0, 624, 625, 626, 627, 628, 779, 629, 0, 630,
	631, 639, 640, 641, 632, 633, 635, 642, 634, 643,
	644, 645, 646, 648, 647, 0, 650, 651, 649, 652,
	653, 654, 0, 655, 780, 656, 636, 637, 657, 658,
	0, 659, 660, 661, 662, 663, 664, 665, 781, 0,
	666, 0, 667, 668, 669, 670, 671, 672, 674, 638,
	675, 680, 681, 782, 676, 677, 678, 679, 783, 683,
	684, 685, 686, 0, 687, 688, 0, 682, 673, 0,
	689, 690, 691, 692, 693, 694, 0, 695, 696, 0,
	697, 784, 785, 786, 787, 0, 709, 0, 698, 700,
	701, 702, 703, 788, 704, 789, 0, 705, 706, 707,
	708, 699, 710, 711, 0, 0, 712, 713, 714, 716,
	718, 719, 715, 717, 720, 0, 721, 0, 0, 722,
	723, 724, 790, 791, 792, 0, 726, 727, 725, 728,
	729, 732, 730, 731, 793, 733, 470, 734, 735, 316,
	0, 0, 0, 736, 737, 794, 738, 739, 740, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 0, 330, 331, 0, 0, 0,
	0, 0, 741, 0, 0, 0, 332, 0, 333, 334,
	335, 0, 336, 337, 338, 339, 340, 341, 342, 742,
	743, 0, 343, 744, 344, 745, 0, 746, 345, 346,
	347, 348, 349, 350, 351, 0, 0, 0, 352, 747,
	748, 749, 0, 353, 354, 750, 0, 0, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 0,
	380, 381, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 386, 387, 0, 388, 390, 751, 752,
	0, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	753, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 754, 755, 424, 0, 0, 0, 0,
	0, 0, 0, 425, 426, 427, 756, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 0,
	434, 435, 436, 757, 758, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 759, 0, 760, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 761, 762,
	763, 549, 0, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 0, 0, 0, 0, 463, 464, 465, 0,
	0, 764, 466, 550, 467, 765, 766, 0, 767, 0,
	468, 469, 472, 0, 768, 0, 471, 473, 474, 0,
	475, 0, 0, 0, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 485, 484, 0, 487, 769, 486, 0,
	488, 489, 0, 0, 490, 491, 492, 493, 494, 495,
	498, 0, 0, 496, 497, 499, 500, 0, 501, 502,
	504, 507, 503, 505, 506, 508, 521, 522, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	524, 0, 523, 0, 525, 526, 527, 528, 529, 536,
	538, 539, 534, 535, 537, 540, 541, 543, 531, 532,
	533, 0, 542, 530, 0, 0, 0, 544, 545, 546,
	547, 0, 770, 548, 771, 551, 552, 0, 0, 553,
	0, 554, 0, 0, 556, 557, 558, 0, 0, 559,
	560, 772, 0, 561, 0, 773, 562, 563, 555, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 0,
	574, 575, 774, 576, 577, 578, 775, 579, 580, 581,
	776, 582, 777, 583, 584, 5271, 585, 586, 587, 0,
	588, 589, 590, 591, 592, 593, 594, 595, 778, 596,
	597, 599, 598, 600, 0, 601, 0, 602, 603, 604,
	0, 0, 0, 0, 0, 605, 606, 608, 0, 609,
	610, 611, 612, 607, 613, 614, 615, 616, 617, 618,
	0, 620, 621, 619, 622, 623, 0, 624, 625, 626,
	627, 628, 779, 629, 0, 630, 631, 639, 640, 641,
	632, 633, 635, 642, 634, 643, 644, 645, 646, 648,
	647, 0, 650, 651, 649, 652, 653, 654, 0, 655,
	780, 656, 636, 637, 657, 658, 0, 659, 660, 661,
	662, 663, 664, 665, 781, 0, 666, 0, 667, 668,
	669, 670, 671, 672, 674, 638, 675, 680, 681, 782,
	676, 677, 678, 679, 783, 683, 684, 685, 686, 0,
	687, 688, 0, 682, 673, 0, 689, 690, 691, 692,
	693, 694, 0, 695, 696, 0, 697, 784, 785, 786,
	787, 0, 709, 0, 698, 700, 701, 702, 703, 788,
	704, 789, 0, 705, 706, 707, 708, 699, 710, 711,
	0, 0, 712, 713, 714, 716, 718, 719, 715, 717,
	720, 0, 721, 0, 0, 722, 723, 724, 790, 791,
	792, 0, 726, 727, 725, 728, 729, 732, 730, 731,
	793, 733, 470, 734, 735, 316, 3952, 0, 0, 736,
	737, 794, 738, 739, 740, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 0, 0, 0, 741, 0,
	0, 0, 332, 0, 333, 334, 335, 0, 336, 337,
	338, 339, 340, 341, 342, 742, 743, 0, 343, 744,
	344, 745, 0, 746, 345, 346, 347, 348, 349, 350,
	351, 0, 0, 0, 352, 747, 748, 749, 0, 353,
	354, 750, 0, 0, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 0, 380, 381, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 386,
	387, 0, 388, 390, 751, 752, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 753, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 754,
	755, 424, 0, 0, 0, 0, 0, 0, 0, 425,
	426, 427, 756, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 0, 434, 435, 436, 757,
	758, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 759, 0, 760, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 761, 762, 763, 549, 0, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 0, 463, 464, 465, 0, 0, 764, 466, 550,
	467, 765, 766, 0, 767, 0, 468, 469, 472, 0,
	768, 0, 471, 473, 474, 0, 475, 0, 0, 0,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 485,
	484, 0, 487, 769, 486, 0, 488, 489, 0, 0,
	490, 491, 492, 493, 494, 495, 498, 0, 0, 496,
	497, 499, 500, 0, 501, 502, 504, 507, 503, 505,
	506, 508, 521, 522, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 524, 0, 523, 0,
	525, 526, 527, 528, 529, 536, 538, 539, 534, 535,
	537, 540, 541, 543, 531, 532, 533, 0, 542, 530,
	0, 0, 0, 544, 545, 546, 547, 0, 770, 548,
	771, 551, 552, 0, 0, 553, 0, 554, 0, 0,
	556, 557, 558, 0, 0, 559, 560, 772, 0, 561,
	0, 773, 562, 563, 555, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 0, 574, 575, 774, 576,
	577, 578, 775, 579, 580, 581, 776, 582, 777, 583,
	584, 0, 585, 586, 587, 0, 588, 589, 590, 591,
	592, 593, 594, 595, 778, 596, 597, 599, 598, 600,
	0, 601, 0, 602, 603, 604, 0, 0, 0, 0,
	0, 605, 606, 608, 0, 609, 610, 611, 612, 607,
	613, 614, 615, 616, 617, 618, 0, 620, 621, 619,
	622, 623, 0, 624, 625, 626, 627, 628, 779, 629,
	0, 630, 631, 639, 640, 641, 632, 633, 635, 642,
	634, 643, 644, 645, 646, 648, 647, 0, 650, 651,
	649, 652, 653, 654, 0, 655, 780, 656, 636, 637,
	657, 658, 0, 659, 660, 661, 662, 663, 664, 665,
	781, 0, 666, 0, 667, 668, 669, 670, 671, 672,
	674, 638, 675, 680, 681, 782, 676, 677, 678, 679,
	783, 683, 684, 685, 686, 0, 687, 688, 0, 682,
	673, 0, 689, 690, 691, 692, 693, 694, 0, 695,
	696, 0, 697, 784, 785, 786, 787, 0, 709, 0,
	698, 700, 701, 702, 703, 788, 704, 789, 0, 705,
	706, 707, 708, 699, 710, 711, 0, 0, 712, 713,
	714, 716, 718, 719, 715, 717, 720, 0, 721, 0,
	0, 722, 723, 724, 790, 791, 792, 0, 726, 727,
	725, 728, 729, 732, 730, 731, 793, 733, 470, 734,
	735, 316, 0, 0, 0, 736, 737, 794, 738, 739,
	740, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	325, 324, 326, 327, 328, 329, 0, 330, 331, 0,
	0, 0, 0, 0, 741, 0, 0, 0, 332, 0,
	333, 334, 335, 0, 336, 337, 338, 339, 340, 341,
	342, 742, 743, 0, 343, 744, 344, 745, 0, 746,
	345, 346, 347, 348, 349, 350, 351, 0, 0, 0,
	352, 747, 748, 749, 0, 353, 354, 750, 0, 0,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 0, 380, 381, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 386, 387, 0, 388, 390,
	751, 752, 0, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 753, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 754, 755, 424, 0, 0,
	0, 0, 0, 0, 0, 425, 426, 427, 756, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 0, 434, 435, 436, 757, 758, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 759, 0,
	760, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	761, 762, 763, 549, 0, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 0, 0, 0, 0, 463, 464,
	465, 0, 0, 764, 466, 550, 467, 765, 766, 0,
	767, 0, 468, 469, 472, 0, 768, 0, 471, 473,
	474, 0, 475, 0, 0, 0, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 485, 484, 0, 487, 769,
	486, 0, 488, 489, 0, 0, 490, 491, 492, 493,
	494, 495, 498, 0, 0, 496, 497, 499, 500, 0,
	501, 502, 504, 507, 503, 505, 506, 508, 521, 522,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 524, 0, 523, 0, 525, 526, 527, 528,
	529, 536, 538, 539, 534, 535, 537, 540, 541, 543,
	531, 532, 533, 0, 542, 530, 0, 0, 0, 544,
	545, 546, 547, 0, 770, 548, 771, 551, 552, 0,
	0, 553, 0, 554, 0, 0, 556, 557, 558, 0,
	0, 559, 560, 772, 0, 561, 0, 773, 562, 563,
	555, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 0, 574, 575, 774, 576, 577, 578, 775, 579,
	580, 581, 776, 582, 777, 583, 584, 4825, 585, 586,
	587, 0, 588, 589, 590, 591, 592, 593, 594, 595,
	778, 596, 597, 599, 598, 600, 0, 601, 0, 602,
	603, 604, 0, 0, 0, 0, 0, 605, 606, 608,
	0, 609, 610, 611, 612, 607, 613, 614, 615, 616,
	617, 618, 0, 620, 621, 619, 622, 623, 0, 624,
	625, 626, 627, 628, 779, 629, 0, 630, 631, 639,
	640, 641, 632, 633, 635, 642, 634, 643, 644, 645,
	646, 648, 647, 0, 650, 651, 649, 652, 653, 654,
	0, 655, 780, 656, 636, 637, 657, 658, 0, 659,
	660, 661, 662, 663, 664, 665, 781, 0, 666, 0,
	667, 668, 669, 670, 671, 672, 674, 638, 675, 680,
	681, 782, 676, 677, 678, 679, 783, 683, 684, 685,
	686, 0, 687, 688, 0, 682, 673, 0, 689, 690,
	691, 692, 693, 694, 0, 695, 696, 0, 697, 784,
	785, 786, 787, 0, 709, 0, 698, 700, 701, 702,
	703, 788, 704, 789, 0, 705, 706, 707, 708, 699,
	710, 711, 0, 0, 712, 713, 714, 716, 718, 719,
	715, 717, 720, 0, 721, 0, 0, 722, 723, 724,
	790, 791, 792, 0, 726, 727, 725, 728, 729, 732,
	730, 731, 793, 733, 470, 734, 735, 316, 0, 0,
	0, 736, 737, 794, 738, 739, 740, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 0, 0, 0,
	741, 0, 0, 0, 332, 0, 333, 334, 335, 0,
	336, 337, 338, 339, 340, 341, 342, 742, 743, 0,
	343, 744, 344, 745, 0, 746, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 747, 748, 749,
	0, 353, 354, 750, 0, 0, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 0, 380, 381,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 386, 387, 0, 388, 390, 751, 752, 4519, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 753, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 754, 755, 424, 0, 0, 0, 0, 0, 0,
	0, 425, 426, 427, 756, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 0, 434, 435,
	436, 757, 758, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 759, 0, 760, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 761, 762, 763, 549,
	0, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 0, 463, 464, 465, 0, 0, 764,
	466, 550, 467, 765, 766, 0, 767, 0, 468, 469,
	472, 0, 768, 0, 471, 473, 474, 0, 475, 0,
	0, 0, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 485, 484, 0, 487, 769, 486, 0, 488, 489,
	0, 0, 490, 491, 492, 493, 494, 495, 498, 0,
	0, 496, 497, 499, 500, 0, 501, 502, 504, 507,
	503, 505, 506, 508, 521, 522, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 524, 0,
	523, 0, 525, 526, 527, 528, 529, 536, 538, 539,
	534, 535, 537, 540, 541, 543, 531, 532, 533, 0,
	542, 530, 0, 0, 0, 544, 545, 546, 547, 0,
	770, 548, 771, 551, 552, 0, 0, 553, 0, 554,
	0, 0, 556, 557, 558, 0, 0, 559, 560, 772,
	0, 561, 0, 773, 562, 563, 555, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 0, 574, 575,
	774, 576, 577, 578, 775, 579, 580, 581, 776, 582,
	777, 583, 584, 0, 585, 586, 587, 0, 588, 589,
	590, 591, 592, 593, 594, 595, 778, 596, 597, 599,
	598, 600, 0, 601, 0, 602, 603, 604, 0, 0,
	0, 0, 0, 605, 606, 608, 0, 609, 610, 611,
	612, 607, 613, 614, 615, 616, 617, 618, 0, 620,
	621, 619, 622, 623, 0, 624, 625, 626, 627, 628,
	779, 629, 0, 630, 631, 639, 640, 641, 632, 633,
	635, 642, 634, 643, 644, 645, 646, 648, 647, 0,
	650, 651, 649, 652, 653, 654, 0, 655, 780, 656,
	636, 637, 657, 658, 0, 659, 660, 661, 662, 663,
	664, 665, 781, 0, 666, 0, 667, 668, 669, 670,
	671, 672, 674, 638, 675, 680, 681, 782, 676, 677,
	678, 679, 783, 683, 684, 685, 686, 0, 687, 688,
	0, 682, 673, 0, 689, 690, 691, 692, 693, 694,
	0, 695, 696, 0, 697, 784, 785, 786, 787, 0,
	709, 0, 698, 700, 701, 702, 703, 788, 704, 789,
	0, 705, 706, 707, 708, 699, 710, 711, 0, 0,
	712, 713, 714, 716, 718, 719, 715, 717, 720, 0,
	721, 0, 0, 722, 723, 724, 790, 791, 792, 0,
	726, 727, 725, 728, 729, 732, 730, 731, 793, 733,
	470, 734, 735, 316, 0, 0, 0, 736, 737, 794,
	738, 739, 740, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 0, 0, 0, 741, 0, 3151, 0,
	332, 0, 333, 334, 335, 0, 336, 337, 338, 339,
	340, 341, 342, 742, 743, 0, 343, 744, 344, 745,
	0, 746, 345, 346, 347, 348, 349, 350, 351, 0,
	0, 0, 352, 747, 748, 749, 0, 353, 354, 750,
	0, 0, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 0, 380, 381, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 386, 387, 0,
	388, 390, 751, 752, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 753, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 754, 755, 424,
	0, 0, 0, 0, 0, 0, 0, 425, 426, 427,
	756, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 0, 434, 435, 436, 757, 758, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	759, 0, 760, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 761, 762, 763, 549, 0, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 0,
	463, 464, 465, 0, 0, 764, 466, 550, 467, 765,
	766, 0, 767, 0, 468, 469, 472, 0, 768, 0,
	471, 473, 474, 0, 475, 0, 0, 0, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 485, 484, 0,
	487, 769, 486, 0, 488, 489, 0, 0, 490, 491,
	492, 493, 494, 495, 498, 0, 0, 496, 497, 499,
	500, 0, 501, 502, 504, 507, 503, 505, 506, 508,
	521, 522, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 524, 0, 523, 0, 525, 526,
	527, 528, 529, 536, 538, 539, 534, 535, 537, 540,
	541, 543, 531, 532, 533, 0, 542, 530, 0, 0,
	0, 544, 545, 546, 547, 0, 770, 548, 771, 551,
	552, 0, 0, 553, 0, 554, 0, 0, 556, 557,
	558, 0, 0, 559, 560, 772, 0, 561, 0, 773,
	562, 563, 555, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 0, 574, 575, 774, 576, 577, 578,
	775, 579, 580, 581, 776, 582, 777, 583, 584, 0,
	585, 586, 587, 0, 588, 589, 590, 591, 592, 593,
	594, 595, 778, 596, 597, 599, 598, 600, 0, 601,
	0, 602, 603, 604, 0, 0, 0, 0, 0, 605,
	606, 608, 0, 609, 610, 611, 612, 607, 613, 614,
	615, 616, 617, 618, 0, 620, 621, 619, 622, 623,
	0, 624, 625, 626, 627, 628, 779, 629, 0, 630,
	631, 639, 640, 641, 632, 633, 635, 642, 634, 643,
	644, 645, 646, 648, 647, 0, 650, 651, 649, 652,
	653, 654, 0, 655, 780, 656, 636, 637, 657, 658,
	0, 659, 660, 661, 662, 663, 664, 665, 781, 0,
	666, 0, 667, 668, 669, 670, 671, 672, 674, 638,
	675, 680, 681, 782, 676, 677, 678, 679, 783, 683,
	684, 685, 686, 0, 687, 688, 0, 682, 673, 0,
	689, 690, 691, 692, 693, 694, 0, 695, 696, 0,
	697, 784, 785, 786, 787, 0, 709, 0, 698, 700,
	701, 702, 703, 788, 704, 789, 0, 705, 706, 707,
	708, 699, 710, 711, 0, 0, 712, 713, 714, 716,
	718, 719, 715, 717, 720, 0, 721, 0, 0, 722,
	723, 724, 790, 791, 792, 0, 726, 727, 725, 728,
	729, 732, 730, 731, 793, 733, 470, 734, 735, 316,
	0, 0, 0, 736, 737, 794, 738, 739, 740, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 0, 330, 331, 0, 0, 0,
	0, 0, 741, 0, 3142, 0, 332, 0, 333, 334,
	335, 0, 336, 337, 338, 339, 340, 341, 342, 742,
	743, 0, 343, 744, 344, 745, 0, 746, 345, 346,
	347, 348, 349, 350, 351, 0, 0, 0, 352, 747,
	748, 749, 0, 353, 354, 750, 0, 0, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 0,
	380, 381, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 386, 387, 0, 388, 390, 751, 752,
	0, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	753, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 754, 755, 424, 0, 0, 0, 0,
	0, 0, 0, 425, 426, 427, 756, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 0,
	434, 435, 436, 757, 758, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 759, 0, 760, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 761, 762,
	763, 549, 0, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 0, 0, 0, 0, 463, 464, 465, 0,
	0, 764, 466, 550, 467, 765, 766, 0, 767, 0,
	468, 469, 472, 0, 768, 0, 471, 473, 474, 0,
	475, 0, 0, 0, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 485, 484, 0, 487, 769, 486, 0,
	488, 489, 0, 0, 490, 491, 492, 493, 494, 495,
	498, 0, 0, 496, 497, 499, 500, 0, 501, 502,
	504, 507, 503, 505, 506, 508, 521, 522, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	524, 0, 523, 0, 525, 526, 527, 528, 529, 536,
	538, 539, 534, 535, 537, 540, 541, 543, 531, 532,
	533, 0, 542, 530, 0, 0, 0, 544, 545, 546,
	547, 0, 770, 548, 771, 551, 552, 0, 0, 553,
	0, 554, 0, 0, 556, 557, 558, 0, 0, 559,
	560, 772, 0, 561, 0, 773, 562, 563, 555, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 0,
	574, 575, 774, 576, 577, 578, 775, 579, 580, 581,
	776, 582, 777, 583, 584, 0, 585, 586, 587, 0,
	588, 589, 590, 591, 592, 593, 594, 595, 778, 596,
	597, 599, 598, 600, 0, 601, 0, 602, 603, 604,
	0, 0, 0, 0, 0, 605, 606, 608, 0, 609,
	610, 611, 612, 607, 613, 614, 615, 616, 617, 618,
	0, 620, 621, 619, 622, 623, 0, 624, 625, 626,
	627, 628, 779, 629, 0, 630, 631, 639, 640, 641,
	632, 633, 635, 642, 634, 643, 644, 645, 646, 648,
	647, 0, 650, 651, 649, 652, 653, 654, 0, 655,
	780, 656, 636, 637, 657, 658, 0, 659, 660, 661,
	662, 663, 664, 665, 781, 0, 666, 0, 667, 668,
	669, 670, 671, 672, 674, 638, 675, 680, 681, 782,
	676, 677, 678, 679, 783, 683, 684, 685, 686, 0,
	687, 688, 0, 682, 673, 0, 689, 690, 691, 692,
	693, 694, 0, 695, 696, 0, 697, 784, 785, 786,
	787, 0, 709, 0, 698, 700, 701, 702, 703, 788,
	704, 789, 0, 705, 706, 707, 708, 699, 710, 711,
	0, 0, 712, 713, 714, 716, 718, 719, 715, 717,
	720, 0, 721, 0, 0, 722, 723, 724, 790, 791,
	792, 0, 726, 727, 725, 728, 729, 732, 730, 731,
	793, 733, 470, 734, 735, 316, 3427, 0, 0, 736,
	737, 794, 738, 739, 740, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 0, 0, 0, 741, 0,
	0, 0, 332, 0, 333, 334, 335, 0, 336, 337,
	338, 339, 340, 341, 342, 742, 743, 0, 343, 744,
	344, 745, 0, 746, 345, 346, 347, 348, 349, 350,
	351, 0, 0, 0, 352, 747, 748, 749, 0, 353,
	354, 750, 0, 0, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 0, 380, 381, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 386,
	387, 0, 388, 390, 751, 752, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 753, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 754,
	755, 424, 0, 0, 0, 0, 0, 0, 0, 425,
	426, 427, 756, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 0, 434, 435, 436, 757,
	758, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 759, 0, 760, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 761, 762, 763, 549, 0, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 0, 463, 464, 465, 0, 0, 764, 466, 550,
	467, 765, 766, 0, 767, 0, 468, 469, 472, 0,
	768, 0, 471, 473, 474, 0, 475, 0, 0, 0,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 485,
	484, 0, 487, 769, 486, 0, 488, 489, 0, 0,
	490, 491, 492, 493, 494, 495, 498, 0, 0, 496,
	497, 499, 500, 0, 501, 502, 504, 507, 503, 505,
	506, 508, 521, 522, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 524, 0, 523, 0,
	525, 526, 527, 528, 529, 536, 538, 539, 534, 535,
	537, 540, 541, 543, 531, 532, 533, 0, 542, 530,
	0, 0, 0, 544, 545, 546, 547, 0, 770, 548,
	771, 551, 552, 0, 0, 553, 0, 554, 0, 0,
	556, 557, 3507, 0, 0, 559, 560, 772, 0, 561,
	0, 773, 562, 563, 555, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 0, 574, 575, 774, 576,
	577, 578, 775, 579, 580, 581, 776, 582, 777, 583,
	584, 0, 585, 586, 587, 0, 588, 589, 590, 591,
	592, 593, 594, 595, 778, 596, 597, 599, 598, 600,
	0, 601, 0, 602, 603, 604, 0, 0, 0, 0,
	0, 605, 606, 608, 0, 609, 610, 611, 612, 607,
	613, 614, 615, 616, 617, 618, 0, 620, 621, 619,
	622, 623, 0, 624, 625, 626, 627, 628, 779, 629,
	0, 630, 631, 639, 640, 641, 632, 633, 635, 642,
	634, 643, 644, 645, 646, 648, 647, 0, 650, 651,
	649, 652, 653, 654, 0, 655, 780, 656, 636, 637,
	657, 658, 0, 659, 660, 661, 662, 663, 664, 665,
	781, 0, 666, 0, 667, 668, 669, 670, 671, 672,
	674, 638, 675, 680, 681, 782, 676, 677, 678, 679,
	783, 683, 684, 685, 686, 0, 687, 688, 0, 682,
	673, 0, 689, 690, 691, 692, 693, 694, 0, 695,
	696, 0, 697, 784, 785, 786, 787, 0, 709, 0,
	698, 700, 701, 702, 703, 788, 704, 789, 0, 705,
	706, 707, 708, 699, 710, 711, 0, 0, 712, 713,
	714, 716, 718, 719, 715, 717, 720, 0, 721, 0,
	0, 722, 723, 724, 790, 791, 792, 0, 726, 727,
	725, 728, 729, 732, 730, 731, 793, 733, 470, 734,
	735, 316, 0, 0, 0, 736, 737, 794, 738, 739,
	740, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	325, 324, 326, 327, 328, 329, 0, 330, 331, 0,
	0, 0, 0, 0, 741, 0, 0, 0, 332, 0,
	333, 334, 335, 0, 336, 337, 338, 339, 340, 341,
	342, 742, 743, 0, 343, 744, 344, 745, 0, 746,
	345, 346, 347, 348, 349, 350, 351, 0, 0, 0,
	352, 747, 748, 749, 0, 353, 354, 750, 0, 0,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 0, 380, 381, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 386, 387, 0, 388, 390,
	751, 752, 0, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 753, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 754, 755, 424, 0, 0,
	0, 0, 0, 0, 0, 425, 426, 427, 756, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 0, 434, 435, 436, 757, 758, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 759, 0,
	760, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	761, 762, 763, 549, 0, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 0, 0, 0, 0, 463, 464,
	465, 0, 0, 764, 466, 550, 467, 765, 766, 0,
	767, 0, 468, 469, 472, 0, 768, 0, 471, 473,
	474, 0, 475, 0, 0, 0, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 485, 484, 0, 487, 769,
	486, 0, 488, 489, 0, 0, 490, 491, 492, 493,
	494, 495, 498, 0, 0, 496, 497, 499, 500, 0,
	501, 502, 504, 507, 503, 505, 506, 508, 521, 522,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 524, 0, 523, 0, 525, 526, 527, 528,
	529, 536, 538, 539, 534, 535, 537, 540, 541, 543,
	531, 532, 533, 0, 542, 530, 0, 0, 0, 544,
	545, 546, 547, 0, 770, 548, 771, 551, 552, 0,
	0, 553, 0, 554, 0, 0, 556, 557, 558, 0,
	0, 559, 560, 772, 0, 561, 0, 773, 562, 563,
	555, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 0, 574, 575, 774, 576, 577, 578, 775, 579,
	580, 581, 776, 582, 777, 583, 584, 2494, 585, 586,
	587, 0, 588, 589, 590, 591, 592, 593, 594, 595,
	778, 596, 597, 599, 598, 600, 0, 601, 0, 602,
	603, 604, 0, 0, 0, 0, 0, 605, 606, 608,
	0, 609, 610, 611, 612, 607, 613, 614, 615, 616,
	617, 618, 0, 620, 621, 619, 622, 623, 0, 889,
	625, 626, 627, 628, 779, 629, 0, 630, 631, 639,
	640, 641, 632, 633, 635, 888, 634, 643, 644, 645,
	646, 3376, 647, 0, 650, 651, 649, 652, 653, 654,
	0, 655, 780, 656, 636, 637, 657, 658, 0, 659,
	660, 661, 662, 663, 664, 665, 781, 0, 666, 0,
	667, 668, 669, 670, 671, 672, 674, 638, 675, 680,
	681, 782, 676, 677, 678, 679, 783, 683, 684, 685,
	686, 0, 687, 688, 0, 682, 673, 0, 689, 690,
	691, 692, 693, 694, 0, 695, 696, 0, 697, 886,
	785, 786, 787, 0, 709, 0, 698, 700, 701, 702,
	703, 788, 704, 789, 0, 705, 706, 707, 708, 699,
	710, 711, 0, 0, 712, 713, 714, 716, 718, 719,
	715, 717, 720, 0, 721, 0, 0, 722, 723, 724,
	790, 791, 792, 0, 726, 727, 725, 728, 729, 732,
	730, 731, 793, 733, 470, 734, 735, 316, 0, 0,
	0, 736, 737, 794, 738, 739, 740, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 2680, 330, 331, 0, 0, 0, 0, 0,
	741, 0, 0, 0, 332, 0, 333, 334, 335, 0,
	336, 337, 338, 339, 340, 341, 342, 742, 743, 0,
	343, 744, 344, 745, 0, 746, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 747, 748, 749,
	0, 353, 354, 750, 0, 0, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 0, 380, 381,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 386, 387, 0, 388, 390, 751, 752, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 753, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 754, 755, 424, 0, 0, 0, 0, 0, 0,
	0, 425, 426, 427, 756, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 0, 434, 435,
	436, 757, 758, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 759, 0, 760, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 761, 762, 763, 549,
	0, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 0, 463, 464, 465, 0, 0, 764,
	466, 550, 467, 765, 766, 0, 767, 0, 468, 469,
	472, 0, 768, 0, 471, 473, 474, 0, 475, 0,
	0, 0, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 485, 484, 0, 487, 769, 486, 0, 488, 489,
	0, 0, 490, 491, 492, 493, 494, 495, 498, 0,
	0, 496, 497, 499, 500, 0, 501, 502, 504, 507,
	503, 505, 506, 508, 521, 522, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 524, 0,
	523, 0, 525, 526, 527, 528, 529, 536, 538, 539,
	534, 535, 537, 540, 541, 543, 531, 532, 533, 0,
	542, 530, 0, 0, 0, 544, 545, 546, 547, 0,
	770, 548, 771, 551, 552, 0, 0, 553, 0, 554,
	0, 0, 556, 557, 558, 0, 0, 559, 560, 772,
	0, 561, 0, 773, 562, 563, 555, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 0, 574, 575,
	774, 576, 577, 578, 775, 579, 580, 581, 776, 582,
	777, 583, 584, 0, 585, 586, 587, 0, 588, 589,
	590, 591, 592, 593, 594, 595, 778, 596, 597, 599,
	598, 600, 0, 601, 0, 602, 603, 604, 0, 0,
	0, 0, 0, 605, 606, 608, 0, 609, 610, 611,
	612, 607, 613, 614, 615, 616, 617, 618, 0, 620,
	621, 619, 622, 623, 0, 624, 625, 626, 627, 628,
	779, 629, 0, 630, 631, 639, 640, 641, 632, 633,
	635, 642, 634, 643, 644, 645, 646, 648, 647, 0,
	650, 651, 649, 652, 653, 654, 0, 655, 780, 656,
	636, 637, 657, 658, 0, 659, 660, 661, 662, 663,
	664, 665, 781, 0, 666, 0, 667, 668, 669, 670,
	671, 672, 674, 638, 675, 680, 681, 782, 676, 677,
	678, 679, 783, 683, 684, 685, 686, 0, 687, 688,
	0, 682, 673, 0, 689, 690, 691, 692, 693, 694,
	0, 695, 696, 0, 697, 784, 785, 786, 787, 0,
	709, 0, 698, 700, 701, 702, 703, 788, 704, 789,
	0, 705, 706, 707, 708, 699, 710, 711, 0, 0,
	712, 713, 714, 716, 718, 719, 715, 717, 720, 0,
	721, 0, 0, 722, 723, 724, 790, 791, 792, 0,
	726, 727, 725, 728, 729, 732, 730, 731, 793, 733,
	470, 734, 735, 2665, 0, 316, 0, 736, 737, 794,
	738, 739, 740, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 0, 0, 0, 741, 0,
	0, 0, 332, 0, 333, 334, 335, 0, 336, 337,
	338, 339, 340, 341, 342, 742, 743, 0, 343, 744,
	344, 745, 0, 746, 345, 346, 347, 348, 349, 350,
	351, 0, 0, 0, 352, 747, 748, 749, 0, 353,
	354, 750, 0, 0, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 0, 380, 381, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 386,
	387, 0, 388, 390, 751, 752, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 753, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 754,
	755, 424, 0, 0, 0, 0, 0, 0, 0, 425,
	426, 427, 756, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 0, 434, 435, 436, 757,
	758, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 759, 0, 760, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 761, 762, 763, 549, 0, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 0, 463, 464, 465, 0, 0, 764, 466, 550,
	467, 765, 766, 0, 767, 0, 468, 469, 472, 0,
	768, 0, 471, 473, 474, 0, 475, 0, 0, 0,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 485,
	484, 0, 487, 769, 486, 0, 488, 489, 0, 0,
	490, 491, 492, 493, 494, 495, 498, 0, 0, 496,
	497, 499, 500, 0, 501, 502, 504, 507, 503, 505,
	506, 508, 521, 522, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 524, 0, 523, 0,
	525, 526, 527, 528, 529, 536, 538, 539, 534, 535,
	537, 540, 541, 543, 531, 532, 533, 0, 542, 530,
	0, 0, 0, 544, 545, 546, 547, 0, 770, 548,
	771, 551, 552, 0, 0, 553, 0, 554, 0, 0,
	556, 557, 558, 0, 0, 559, 560, 772, 0, 561,
	0, 773, 562, 563, 555, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 0, 574, 575, 774, 576,
	577, 578, 775, 579, 580, 581, 776, 582, 777, 583,
	584, 0, 585, 586, 587, 0, 588, 589, 590, 591,
	592, 593, 594, 595, 778, 596, 597, 599, 598, 600,
	0, 601, 0, 602, 603, 604, 0, 0, 0, 0,
	0, 605, 606, 608, 0, 609, 610, 611, 612, 607,
	613, 614, 615, 616, 617, 618, 0, 620, 621, 619,
	622, 623, 0, 624, 625, 626, 627, 628, 779, 629,
	0, 630, 631, 639, 640, 641, 632, 633, 635, 642,
	634, 643, 644, 645, 646, 648, 647, 0, 650, 651,
	649, 652, 653, 654, 0, 655, 780, 656, 636, 637,
	657, 658, 0, 659, 660, 661, 662, 663, 664, 665,
	781, 0, 666, 0, 667, 668, 669, 670, 671, 672,
	674, 638, 675, 680, 681, 782, 676, 677, 678, 679,
	783, 683, 684, 685, 686, 0, 687, 688, 0, 682,
	673, 0, 689, 690, 691, 692, 693, 694, 0, 695,
	696, 0, 697, 784, 785, 786, 787, 0, 709, 0,
	698, 700, 701, 702, 703, 788, 704, 789, 0, 705,
	706, 707, 708, 699, 710, 711, 0, 0, 712, 713,
	714, 716, 718, 719, 715, 717, 720, 0, 721, 0,
	0, 722, 723, 724, 790, 791, 792, 0, 726, 727,
	725, 728, 729, 732, 730, 731, 793, 733, 470, 734,
	735, 1870, 0, 316, 0, 736, 737, 794, 738, 739,
	740, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 0, 0, 0, 741, 0, 0, 0,
	332, 0, 333, 334, 335, 0, 336, 337, 338, 339,
	340, 341, 342, 742, 743, 0, 343, 744, 344, 745,
	0, 746, 345, 346, 347, 348, 349, 350, 351, 0,
	0, 0, 352, 747, 748, 749, 0, 353, 354, 750,
	0, 0, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 0, 380, 381, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 386, 387, 0,
	388, 390, 751, 752, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 753, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 754, 755, 424,
	0, 0, 0, 0, 0, 0, 0, 425, 426, 427,
	756, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 0, 434, 435, 436, 757, 758, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	759, 0, 760, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 761, 762, 763, 549, 0, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 0,
	463, 464, 465, 0, 0, 764, 466, 550, 467, 765,
	766, 0, 767, 0, 468, 469, 472, 0, 768, 0,
	471, 473, 474, 0, 475, 0, 0, 0, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 485, 484, 0,
	487, 769, 486, 0, 488, 489, 0, 0, 490, 491,
	492, 493, 494, 495, 498, 0, 0, 496, 497, 499,
	500, 0, 501, 502, 504, 507, 503, 505, 506, 508,
	521, 522, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 524, 0, 523, 0, 525, 526,
	527, 528, 529, 536, 538, 539, 534, 535, 537, 540,
	541, 543, 531, 532, 533, 0, 542, 530, 0, 0,
	0, 544, 545, 546, 547, 0, 770, 548, 771, 551,
	552, 0, 0, 553, 0, 554, 0, 0, 556, 557,
	558, 0, 0, 559, 560, 772, 0, 561, 0, 773,
	562, 563, 555, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 0, 574, 575, 774, 576, 577, 578,
	775, 579, 580, 581, 776, 582, 777, 583, 584, 0,
	585, 586, 587, 0, 588, 589, 590, 591, 592, 593,
	594, 595, 778, 596, 597, 599, 598, 600, 0, 601,
	0, 602, 603, 604, 0, 0, 0, 0, 0, 605,
	606, 608, 0, 609, 610, 611, 612, 607, 613, 614,
	615, 616, 617, 618, 0, 620, 621, 619, 622, 623,
	0, 624, 625, 626, 627, 628, 779, 629, 0, 630,
	631, 639, 640, 641, 632, 633, 635, 642, 634, 643,
	644, 645, 646, 648, 647, 0, 650, 651, 649, 652,
	653, 654, 0, 655, 780, 656, 636, 637, 657, 658,
	0, 659, 660, 661, 662, 663, 664, 665, 781, 0,
	666, 0, 667, 668, 669, 670, 671, 672, 674, 638,
	675, 680, 681, 782, 676, 677, 678, 679, 783, 683,
	684, 685, 686, 0, 687, 688, 0, 682, 673, 0,
	689, 690, 691, 692, 693, 694, 0, 695, 696, 0,
	697, 784, 785, 786, 787, 0, 709, 0, 698, 700,
	701, 702, 703, 788, 704, 789, 0, 705, 706, 707,
	708, 699, 710, 711, 0, 0, 712, 713, 714, 716,
	718, 719, 715, 717, 720, 0, 721, 0, 0, 722,
	723, 724, 790, 791, 792, 0, 726, 727, 725, 728,
	729, 732, 730, 731, 793, 733, 470, 734, 735, 1862,
	0, 316, 0, 736, 737, 794, 738, 739, 740, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	325, 324, 326, 327, 328, 329, 0, 330, 331, 0,
	0, 0, 0, 0, 741, 0, 0, 0, 332, 0,
	333, 334, 335, 0, 336, 337, 338, 339, 340, 341,
	342, 742, 743, 0, 343, 744, 344, 745, 0, 746,
	345, 346, 347, 348, 349, 350, 351, 0, 0, 0,
	352, 747, 748, 749, 0, 353, 354, 750, 0, 0,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 0, 380, 381, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 386, 387, 0, 388, 390,
	751, 752, 0, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 753, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 754, 755, 424, 0, 0,
	0, 0, 0, 0, 0, 425, 426, 427, 756, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 0, 434, 435, 436, 757, 758, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 759, 0,
	760, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	761, 762, 763, 549, 0, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 0, 0, 0, 0, 463, 464,
	465, 0, 0, 764, 466, 550, 467, 765, 766, 0,
	767, 0, 468, 469, 472, 0, 768, 0, 471, 473,
	474, 0, 475, 0, 0, 0, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 485, 484, 0, 487, 769,
	486, 0, 488, 489, 0, 0, 490, 491, 492, 493,
	494, 495, 498, 0, 0, 496, 497, 499, 500, 0,
	501, 502, 504, 507, 503, 505, 506, 508, 521, 522,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 524, 0, 523, 0, 525, 526, 527, 528,
	529, 536, 538, 539, 534, 535, 537, 540, 541, 543,
	531, 532, 533, 0, 542, 530, 0, 0, 0, 544,
	545, 546, 547, 0, 770, 548, 771, 551, 552, 0,
	0, 553, 0, 554, 0, 0, 556, 557, 558, 0,
	0, 559, 560, 772, 0, 561, 0, 773, 562, 563,
	555, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 0, 574, 575, 774, 576, 577, 578, 775, 579,
	580, 581, 776, 582, 777, 583, 584, 0, 585, 586,
	587, 0, 588, 589, 590, 591, 592, 593, 594, 595,
	778, 596, 597, 599, 598, 600, 0, 601, 0, 602,
	603, 604, 0, 0, 0, 0, 0, 605, 606, 608,
	0, 609, 610, 611, 612, 607, 613, 614, 615, 616,
	617, 618, 0, 620, 621, 619, 622, 623, 0, 624,
	625, 626, 627, 628, 779, 629, 0, 630, 631, 639,
	640, 641, 632, 633, 635, 642, 634, 643, 644, 645,
	646, 648, 647, 0, 650, 651, 649, 652, 653, 654,
	0, 655, 780, 656, 636, 637, 657, 658, 0, 659,
	660, 661, 662, 663, 664, 665, 781, 0, 666, 0,
	667, 668, 669, 670, 671, 672, 674, 638, 675, 680,
	681, 782, 676, 677, 678, 679, 783, 683, 684, 685,
	686, 0, 687, 688, 0, 682, 673, 0, 689, 690,
	691, 692, 693, 694, 0, 695, 696, 0, 697, 784,
	785, 786, 787, 0, 709, 0, 698, 700, 701, 702,
	703, 788, 704, 789, 0, 705, 706, 707, 708, 699,
	710, 711, 0, 0, 712, 713, 714, 716, 718, 719,
	715, 717, 720, 0, 721, 0, 0, 722, 723, 724,
	790, 791, 792, 0, 726, 727, 725, 728, 729, 732,
	730, 731, 793, 733, 470, 734, 735, 880, 0, 316,
	0, 736, 737, 794, 738, 739, 740, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 0, 330, 331, 0, 0, 0,
	0, 0, 741, 0, 0, 0, 332, 0, 333, 334,
	335, 0, 336, 337, 338, 339, 340, 341, 342, 742,
	743, 0, 343, 744, 344, 745, 0, 746, 345, 346,
	347, 348, 349, 350, 351, 0, 0, 0, 352, 747,
	748, 749, 0, 353, 876, 750, 0, 0, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 0,
	380, 381, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 386, 387, 0, 388, 390, 751, 752,
	0, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	753, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 754, 755, 424, 0, 0, 0, 0,
	0, 0, 0, 425, 426, 427, 756, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 0,
	434, 435, 436, 757, 758, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 759, 0, 760, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 761, 762,
	763, 549, 0, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 0, 0, 0, 0, 463, 464, 465, 0,
	0, 764, 466, 550, 467, 765, 766, 0, 767, 0,
	468, 469, 472, 0, 768, 0, 471, 473, 474, 0,
	475, 0, 0, 0, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 485, 484, 0, 487, 769, 486, 0,
	488, 489, 0, 0, 490, 491, 492, 493, 494, 881,
	498, 0, 0, 496, 497, 499, 500, 0, 501, 502,
	504, 507, 503, 505, 506, 508, 521, 522, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	524, 0, 890, 0, 525, 526, 527, 528, 529, 536,
	538, 539, 534, 535, 537, 540, 541, 543, 531, 532,
	533, 0, 542, 530, 0, 0, 0, 544, 545, 546,
	547, 0, 770, 548, 771, 551, 552, 0, 0, 553,
	0, 554, 0, 0, 556, 557, 558, 0, 0, 559,
	560, 772, 0, 561, 0, 773, 562, 563, 555, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 0,
	574, 575, 774, 576, 577, 578, 775, 579, 580, 581,
	776, 582, 777, 583, 584, 0, 585, 586, 587, 0,
	588, 589, 590, 591, 592, 593, 594, 595, 778, 596,
	597, 599, 598, 600, 0, 601, 0, 602, 603, 604,
	0, 0, 0, 0, 0, 605, 606, 608, 0, 609,
	610, 611, 612, 607, 613, 614, 615, 616, 617, 618,
	0, 620, 621, 619, 622, 623, 0, 889, 625, 626,
	627, 628, 779, 629, 0, 630, 631, 639, 640, 641,
	632, 633, 635, 888, 634, 643, 644, 645, 646, 648,
	647, 0, 650, 651, 649, 652, 1847, 654, 0, 655,
	780, 656, 636, 637, 657, 658, 0, 659, 660, 661,
	662, 663, 664, 665, 781, 0, 666, 0, 667, 668,
	669, 670, 671, 672, 674, 638, 675, 680, 681, 782,
	676, 677, 678, 679, 783, 683, 684, 685, 686, 0,
	687, 688, 0, 682, 673, 0, 689, 690, 691, 692,
	693, 694, 0, 695, 696, 0, 697, 886, 785, 786,
	787, 0, 709, 0, 698, 700, 701, 702, 703, 788,
	704, 789, 0, 705, 706, 707, 708, 699, 710, 711,
	0, 0, 712, 713, 714, 716, 718, 719, 715, 717,
	720, 0, 721, 0, 0, 722, 723, 724, 790, 791,
	792, 0, 726, 727, 725, 728, 729, 732, 730, 731,
	793, 733, 470, 734, 735, 1820, 0, 316, 0, 736,
	737, 794, 738, 739, 740, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 0, 0, 0,
	741, 0, 0, 0, 332, 0, 333, 334, 335, 0,
	336, 337, 338, 339, 340, 341, 342, 742, 743, 0,
	343, 744, 344, 745, 0, 746, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 747, 748, 749,
	0, 353, 354, 750, 0, 0, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 0, 380, 381,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 386, 387, 0, 388, 390, 751, 752, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 753, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 754, 755, 424, 0, 0, 0, 0, 0, 0,
	0, 425, 426, 427, 756, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 0, 434, 435,
	436, 757, 758, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 759, 0, 760, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 1819, 762, 763, 549,
	0, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 0, 463, 464, 465, 0, 0, 764,
	466, 550, 467, 765, 766, 0, 767, 0, 468, 469,
	472, 0, 768, 0, 471, 473, 474, 0, 475, 0,
	0, 0, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 485, 484, 0, 487, 769, 486, 0, 488, 489,
	0, 0, 490, 491, 492, 493, 494, 495, 498, 0,
	0, 496, 497, 499, 500, 0, 501, 502, 504, 507,
	503, 505, 506, 508, 521, 522, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 524, 0,
	523, 0, 525, 526, 527, 528, 529, 536, 538, 539,
	534, 535, 537, 540, 541, 543, 531, 532, 533, 0,
	542, 530, 0, 0, 0, 544, 545, 546, 547, 0,
	770, 548, 771, 551, 552, 0, 0, 553, 0, 554,
	0, 0, 556, 557, 558, 0, 0, 559, 560, 772,
	0, 561, 0, 773, 562, 563, 555, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 0, 574, 575,
	774, 576, 577, 578, 775, 579, 580, 581, 776, 582,
	777, 583, 584, 0, 585, 586, 587, 0, 588, 589,
	590, 591, 592, 593, 594, 595, 778, 596, 597, 599,
	598, 600, 0, 601, 0, 602, 603, 604, 0, 0,
	0, 0, 0, 605, 606, 608, 0, 609, 610, 611,
	612, 607, 613, 614, 615, 616, 617, 618, 0, 620,
	621, 619, 622, 623, 0, 624, 625, 626, 627, 628,
	779, 629, 0, 630, 631, 639, 640, 641, 632, 633,
	635, 642, 634, 643, 644, 645, 646, 648, 647, 0,
	650, 651, 649, 652, 653, 654, 0, 655, 780, 656,
	636, 637, 657, 658, 0, 659, 660, 661, 662, 663,
	664, 665, 781, 0, 666, 0, 667, 668, 669, 670,
	671, 672, 674, 638, 675, 680, 681, 782, 676, 677,
	678, 679, 783, 683, 684, 685, 686, 0, 687, 688,
	0, 682, 673, 0, 689, 690, 691, 692, 693, 694,
	0, 695, 696, 0, 697, 784, 785, 786, 787, 0,
	709, 0, 698, 700, 701, 702, 703, 788, 704, 789,
	0, 705, 706, 707, 708, 699, 710, 711, 0, 0,
	712, 713, 714, 716, 718, 719, 715, 717, 720, 0,
	721, 0, 0, 722, 723, 724, 790, 791, 792, 0,
	726, 727, 725, 728, 729, 732, 730, 731, 793, 733,
	470, 734, 735, 1803, 0, 316, 0, 736, 737, 794,
	738, 739, 740, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 0, 0, 0, 741, 0,
	0, 0, 332, 0, 333, 334, 335, 0, 336, 337,
	338, 339, 340, 341, 342, 742, 743, 0, 343, 744,
	344, 745, 0, 746, 345, 346, 347, 348, 349, 350,
	351, 0, 0, 0, 352, 747, 748, 749, 0, 353,
	354, 750, 0, 0, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 0, 380, 381, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 386,
	387, 0, 388, 390, 751, 752, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 753, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 754,
	755, 424, 0, 0, 0, 0, 0, 0, 0, 425,
	426, 427, 756, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 0, 434, 435, 436, 757,
	758, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 759, 0, 760, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 1801, 762, 763, 549, 0, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 0, 463, 464, 465, 0, 0, 764, 466, 550,
	467, 765, 766, 0, 767, 0, 468, 469, 472, 0,
	768, 0, 471, 473, 474, 0, 475, 0, 0, 0,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 485,
	484, 0, 487, 769, 486, 0, 488, 489, 0, 0,
	490, 491, 492, 493, 494, 495, 498, 0, 0, 496,
	497, 499, 500, 0, 501, 502, 504, 507, 503, 505,
	506, 508, 521, 522, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 524, 0, 523, 0,
	525, 526, 527, 528, 529, 536, 538, 539, 534, 535,
	537, 540, 541, 543, 531, 532, 533, 0, 542, 530,
	0, 0, 0, 544, 545, 546, 547, 0, 770, 548,
	771, 551, 552, 0, 0, 553, 0, 554, 0, 0,
	556, 557, 558, 0, 0, 559, 560, 772, 0, 561,
	0, 773, 562, 563, 555, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 0, 574, 575, 774, 576,
	577, 578, 775, 579, 580, 581, 776, 582, 777, 583,
	584, 0, 585, 586, 587, 0, 588, 589, 590, 591,
	592, 593, 594, 595, 778, 596, 597, 599, 598, 600,
	0, 601, 0, 602, 603, 604, 0, 0, 0, 0,
	0, 605, 606, 608, 0, 609, 610, 611, 612, 607,
	613, 614, 615, 616, 617, 618, 0, 620, 621, 619,
	622, 623, 0, 624, 625, 626, 627, 628, 779, 629,
	0, 630, 631, 639, 640, 641, 632, 633, 635, 642,
	634, 643, 644, 645, 646, 648, 647, 0, 650, 651,
	649, 652, 653, 654, 0, 655, 780, 656, 636, 637,
	657, 658, 0, 659, 660, 661, 662, 663, 664, 665,
	781, 0, 666, 0, 667, 668, 669, 670, 671, 672,
	674, 638, 675, 680, 681, 782, 676, 677, 678, 679,
	783, 683, 684, 685, 686, 0, 687, 688, 0, 682,
	673, 0, 689, 690, 691, 692, 693, 694, 0, 695,
	696, 0, 697, 784, 785, 786, 787, 0, 709, 0,
	698, 700, 701, 702, 703, 788, 704, 789, 0, 705,
	706, 707, 708, 699, 710, 711, 0, 0, 712, 713,
	714, 716, 718, 719, 715, 717, 720, 0, 721, 0,
	0, 722, 723, 724, 790, 791, 792, 0, 726, 727,
	725, 728, 729, 732, 730, 731, 793, 733, 470, 734,
	735, 1795, 0, 316, 0, 736, 737, 794, 738, 739,
	740, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 0, 0, 0, 741, 0, 0, 0,
	332, 0, 333, 334, 335, 0, 336, 337, 338, 339,
	340, 341, 342, 742, 743, 0, 343, 744, 344, 745,
	0, 746, 345, 346, 347, 348, 349, 350, 351, 0,
	0, 0, 352, 747, 748, 749, 0, 353, 354, 750,
	0, 0, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 0, 380, 381, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 386, 387, 0,
	388, 390, 751, 752, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 753, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 754, 755, 424,
	0, 0, 0, 0, 0, 0, 0, 425, 426, 427,
	756, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 0, 434, 435, 436, 757, 758, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	759, 0, 760, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 761, 762, 763, 549, 0, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 0,
	463, 464, 465, 0, 0, 764, 466, 550, 467, 765,
	766, 0, 767, 0, 468, 469, 472, 0, 768, 0,
	471, 473, 474, 0, 475, 0, 0, 0, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 485, 484, 0,
	487, 769, 486, 0, 488, 489, 0, 0, 490, 491,
	492, 493, 494, 495, 498, 0, 0, 496, 497, 499,
	500, 0, 501, 502, 504, 507, 503, 505, 506, 508,
	521, 522, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 524, 0, 523, 0, 525, 526,
	527, 528, 529, 536, 538, 539, 534, 535, 537, 540,
	541, 543, 531, 532, 533, 0, 542, 530, 0, 0,
	0, 544, 545, 546, 547, 0, 770, 548, 771, 551,
	552, 0, 0, 553, 0, 554, 0, 0, 556, 557,
	558, 0, 0, 559, 560, 772, 0, 561, 0, 773,
	562, 563, 555, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 0, 574, 575, 774, 576, 577, 578,
	775, 579, 580, 581, 776, 582, 777, 583, 584, 0,
	585, 586, 587, 0, 588, 589, 590, 591, 592, 593,
	594, 595, 778, 596, 597, 599, 598, 600, 0, 601,
	0, 602, 603, 604, 0, 0, 0, 0, 0, 605,
	606, 608, 0, 609, 610, 611, 612, 607, 613, 614,
	615, 616, 617, 618, 0, 620, 621, 619, 622, 623,
	0, 624, 625, 626, 627, 628, 779, 629, 0, 630,
	631, 639, 640, 641, 632, 633, 635, 642, 634, 643,
	644, 645, 646, 648, 647, 0, 650, 651, 649, 652,
	653, 654, 0, 655, 780, 656, 636, 637, 657, 658,
	0, 659, 660, 661, 662, 663, 664, 665, 781, 0,
	666, 0, 667, 668, 669, 670, 671, 672, 674, 638,
	675, 680, 681, 782, 676, 677, 678, 679, 783, 683,
	684, 685, 686, 0, 687, 688, 0, 682, 673, 0,
	689, 690, 691, 692, 693, 694, 0, 695, 696, 0,
	697, 784, 785, 786, 787, 0, 709, 0, 698, 700,
	701, 702, 703, 788, 704, 789, 0, 705, 706, 707,
	708, 699, 710, 711, 0, 0, 712, 713, 714, 716,
	718, 719, 715, 717, 720, 0, 721, 0, 0, 722,
	723, 724, 790, 791, 792, 0, 726, 727, 725, 728,
	729, 732, 730, 731, 793, 733, 470, 734, 735, 1773,
	0, 316, 0, 736, 737, 794, 738, 739, 740, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	325, 324, 326, 327, 328, 329, 0, 330, 331, 0,
	0, 0, 0, 0, 741, 0, 0, 0, 332, 0,
	333, 334, 335, 0, 336, 337, 338, 339, 340, 341,
	342, 742, 743, 0, 343, 744, 344, 745, 0, 746,
	345, 346, 347, 348, 349, 350, 351, 0, 0, 0,
	352, 747, 748, 749, 0, 353, 354, 750, 0, 0,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 0, 380, 381, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 386, 387, 0, 388, 390,
	751, 752, 0, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 753, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 754, 755, 424, 0, 0,
	0, 0, 0, 0, 0, 425, 426, 427, 756, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 0, 434, 435, 436, 757, 758, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 759, 0,
	760, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	1771, 762, 763, 549, 0, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 0, 0, 0, 0, 463, 464,
	465, 0, 0, 764, 466, 550, 467, 765, 766, 0,
	767, 0, 468, 469, 472, 0, 768, 0, 471, 473,
	474, 0, 475, 0, 0, 0, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 485, 484, 0, 487, 769,
	486, 0, 488, 489, 0, 0, 490, 491, 492, 493,
	494, 495, 498, 0, 0, 496, 497, 499, 500, 0,
	501, 502, 504, 507, 503, 505, 506, 508, 521, 522,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 524, 0, 523, 0, 525, 526, 527, 528,
	529, 536, 538, 539, 534, 535, 537, 540, 541, 543,
	531, 532, 533, 0, 542, 530, 0, 0, 0, 544,
	545, 546, 547, 0, 770, 548, 771, 551, 552, 0,
	0, 553, 0, 554, 0, 0, 556, 557, 558, 0,
	0, 559, 560, 772, 0, 561, 0, 773, 562, 563,
	555, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 0, 574, 575, 774, 576, 577, 578, 775, 579,
	580, 581, 776, 582, 777, 583, 584, 0, 585, 586,
	587, 0, 588, 589, 590, 591, 592, 593, 594, 595,
	778, 596, 597, 599, 598, 600, 0, 601, 0, 602,
	603, 604, 0, 0, 0, 0, 0, 605, 606, 608,
	0, 609, 610, 611, 612, 607, 613, 614, 615, 616,
	617, 618, 0, 620, 621, 619, 622, 623, 0, 624,
	625, 626, 627, 628, 779, 629, 0, 630, 631, 639,
	640, 641, 632, 633, 635, 642, 634, 643, 644, 645,
	646, 648, 647, 0, 650, 651, 649, 652, 653, 654,
	0, 655, 780, 656, 636, 637, 657, 658, 0, 659,
	660, 661, 662, 663, 664, 665, 781, 0, 666, 0,
	667, 668, 669, 670, 671, 672, 674, 638, 675, 680,
	681, 782, 676, 677, 678, 679, 783, 683, 684, 685,
	686, 0, 687, 688, 0, 682, 673, 0, 689, 690,
	691, 692, 693, 694, 0, 695, 696, 0, 697, 784,
	785, 786, 787, 0, 709, 0, 698, 700, 701, 702,
	703, 788, 704, 789, 0, 705, 706, 707, 708, 699,
	710, 711, 0, 0, 712, 713, 714, 716, 718, 719,
	715, 717, 720, 0, 721, 0, 0, 722, 723, 724,
	790, 791, 792, 0, 726, 727, 725, 728, 729, 732,
	730, 731, 793, 733, 470, 734, 735, 1764, 0, 316,
	0, 736, 737, 794, 738, 739, 740, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 0, 330, 331, 0, 0, 0,
	0, 0, 741, 0, 0, 0, 332, 0, 333, 334,
	335, 0, 336, 337, 338, 339, 340, 341, 342, 742,
	743, 0, 343, 744, 344, 745, 0, 746, 345, 346,
	347, 348, 349, 350, 351, 0, 0, 0, 352, 747,
	748, 749, 0, 353, 354, 750, 0, 0, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 0,
	380, 381, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 386, 387, 0, 388, 390, 751, 752,
	0, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	753, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 754, 755, 424, 0, 0, 0, 0,
	0, 0, 0, 425, 426, 427, 756, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 0,
	434, 435, 436, 757, 758, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 759, 0, 760, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 761, 762,
	763, 549, 0, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 0, 0, 0, 0, 463, 464, 465, 0,
	0, 764, 466, 550, 467, 765, 766, 0, 767, 0,
	468, 469, 472, 0, 768, 0, 471, 473, 474, 0,
	475, 0, 0, 0, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 485, 484, 0, 487, 769, 486, 0,
	488, 489, 0, 0, 490, 491, 492, 493, 494, 495,
	498, 0, 0, 496, 497, 499, 500, 0, 501, 502,
	504, 507, 503, 505, 506, 508, 521, 522, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	524, 0, 523, 0, 525, 526, 527, 528, 529, 536,
	538, 539, 534, 535, 537, 540, 541, 543, 531, 532,
	533, 0, 542, 530, 0, 0, 0, 544, 545, 546,
	547, 0, 770, 548, 771, 551, 552, 0, 0, 553,
	0, 554, 0, 0, 556, 557, 558, 0, 0, 559,
	560, 772, 0, 561, 0, 773, 562, 563, 555, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 0,
	574, 575, 774, 576, 577, 578, 775, 579, 580, 581,
	776, 582, 777, 583, 584, 0, 585, 586, 587, 0,
	588, 589, 590, 591, 592, 593, 594, 595, 778, 596,
	597, 599, 598, 600, 0, 601, 0, 602, 603, 604,
	0, 0, 0, 0, 0, 605, 606, 608, 0, 609,
	610, 611, 612, 607, 613, 614, 615, 616, 617, 618,
	0, 620, 621, 619, 622, 623, 0, 624, 625, 626,
	627, 628, 779, 629, 0, 630, 631, 639, 640, 641,
	632, 633, 635, 642, 634, 643, 644, 645, 646, 648,
	647, 0, 650, 651, 649, 652, 653, 654, 0, 655,
	780, 656, 636, 637, 657, 658, 0, 659, 660, 661,
	662, 663, 664, 665, 781, 0, 666, 0, 667, 668,
	669, 670, 671, 672, 674, 638, 675, 680, 681, 782,
	676, 677, 678, 679, 783, 683, 684, 685, 686, 0,
	687, 688, 0, 682, 673, 0, 689, 690, 691, 692,
	693, 694, 0, 695, 696, 0, 697, 784, 785, 786,
	787, 0, 709, 0, 698, 700, 701, 702, 703, 788,
	704, 789, 0, 705, 706, 707, 708, 699, 710, 711,
	0, 0, 712, 713, 714, 716, 718, 719, 715, 717,
	720, 0, 721, 0, 0, 722, 723, 724, 790, 791,
	792, 0, 726, 727, 725, 728, 729, 732, 730, 731,
	793, 733, 470, 734, 735, 1725, 0, 316, 0, 736,
	737, 794, 738, 739, 740, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 0, 0, 0,
	741, 0, 0, 0, 332, 0, 333, 334, 335, 0,
	336, 337, 338, 339, 340, 341, 342, 742, 743, 0,
	343, 744, 344, 745, 0, 746, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 747, 748, 749,
	0, 353, 354, 750, 0, 0, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 0, 380, 381,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 386, 387, 0, 388, 390, 751, 752, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 753, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 754, 755, 424, 0, 0, 0, 0, 0, 0,
	0, 425, 426, 427, 756, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 0, 434, 435,
	436, 757, 758, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 759, 0, 760, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 761, 762, 763, 549,
	0, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 0, 463, 464, 465, 0, 0, 764,
	466, 550, 467, 765, 766, 0, 767, 0, 468, 469,
	472, 0, 768, 0, 471, 473, 474, 0, 475, 0,
	0, 0, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 485, 484, 0, 487, 769, 486, 0, 488, 489,
	0, 0, 490, 491, 492, 493, 494, 495, 498, 0,
	0, 496, 497, 499, 500, 0, 501, 502, 504, 507,
	503, 505, 506, 508, 521, 522, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 524, 0,
	523, 0, 525, 526, 527, 528, 529, 536, 538, 539,
	534, 535, 537, 540, 541, 543, 531, 532, 533, 0,
	542, 530, 0, 0, 0, 544, 545, 546, 547, 0,
	770, 548, 771, 551, 552, 0, 0, 553, 0, 554,
	0, 0, 556, 557, 558, 0, 0, 559, 560, 772,
	0, 561, 0, 773, 562, 563, 555, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 0, 574, 575,
	774, 576, 577, 578, 775, 579, 580, 581, 776, 582,
	777, 583, 584, 0, 585, 586, 587, 0, 588, 589,
	590, 591, 592, 593, 594, 595, 778, 596, 597, 599,
	598, 600, 0, 601, 0, 602, 603, 604, 0, 0,
	0, 0, 0, 605, 606, 608, 0, 609, 610, 611,
	612, 607, 613, 614, 615, 616, 617, 618, 0, 620,
	621, 619, 622, 623, 0, 624, 625, 626, 627, 628,
	779, 629, 0, 630, 631, 639, 640, 641, 632, 633,
	635, 642, 634, 643, 644, 645, 646, 648, 647, 0,
	650, 651, 649, 652, 653, 654, 0, 655, 780, 656,
	636, 637, 657, 658, 0, 659, 660, 661, 662, 663,
	664, 665, 781, 0, 666, 0, 667, 668, 669, 670,
	671, 672, 674, 638, 675, 680, 681, 782, 676, 677,
	678, 679, 783, 683, 684, 685, 686, 0, 687, 688,
	0, 682, 673, 0, 689, 690, 691, 692, 693, 694,
	0, 695, 696, 0, 697, 784, 785, 786, 787, 0,
	709, 0, 698, 700, 701, 702, 703, 788, 704, 789,
	0, 705, 706, 707, 708, 699, 710, 711, 0, 0,
	712, 713, 714, 716, 718, 719, 715, 717, 720, 0,
	721, 0, 0, 722, 723, 724, 790, 791, 792, 0,
	726, 727, 725, 728, 729, 732, 730, 731, 793, 733,
	470, 734, 735, 1689, 0, 316, 0, 736, 737, 794,
	738, 739, 740, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 0, 0, 0, 741, 0,
	0, 0, 332, 0, 333, 334, 335, 0, 336, 337,
	338, 339, 340, 341, 342, 742, 743, 0, 343, 744,
	344, 745, 0, 746, 345, 346, 347, 348, 349, 350,
	351, 0, 0, 0, 352, 747, 748, 749, 0, 353,
	354, 750, 0, 0, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 0, 380, 381, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 386,
	387, 0, 388, 390, 751, 752, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 753, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 754,
	755, 424, 0, 0, 0, 0, 0, 0, 0, 425,
	426, 427, 756, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 0, 434, 435, 436, 757,
	758, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 759, 0, 760, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 761, 762, 763, 549, 0, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 0, 463, 464, 465, 0, 0, 764, 466, 550,
	467, 765, 766, 0, 767, 0, 468, 469, 472, 0,
	768, 0, 471, 473, 474, 0, 475, 0, 0, 0,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 485,
	484, 0, 487, 769, 486, 0, 488, 489, 0, 0,
	490, 491, 492, 493, 494, 495, 498, 0, 0, 496,
	497, 499, 500, 0, 501, 502, 504, 507, 503, 505,
	506, 508, 521, 522, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 524, 0, 523, 0,
	525, 526, 527, 528, 529, 536, 538, 539, 534, 535,
	537, 540, 541, 543, 531, 532, 533, 0, 542, 530,
	0, 0, 0, 544, 545, 546, 547, 0, 770, 548,
	771, 551, 552, 0, 0, 553, 0, 554, 0, 0,
	556, 557, 558, 0, 0, 559, 560, 772, 0, 561,
	0, 773, 562, 563, 555, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 0, 574, 575, 774, 576,
	577, 578, 775, 579, 580, 581, 776, 582, 777, 583,
	584, 0, 585, 586, 587, 0, 588, 589, 590, 591,
	592, 593, 594, 595, 778, 596, 597, 599, 598, 600,
	0, 601, 0, 602, 603, 604, 0, 0, 0, 0,
	0, 605, 606, 608, 0, 609, 610, 611, 612, 607,
	613, 614, 615, 616, 617, 618, 0, 620, 621, 619,
	622, 623, 0, 624, 625, 626, 627, 628, 779, 629,
	0, 630, 631, 639, 640, 641, 632, 633, 635, 642,
	634, 643, 644, 645, 646, 648, 647, 0, 650, 651,
	649, 652, 653, 654, 0, 655, 780, 656, 636, 637,
	657, 658, 0, 659, 660, 661, 662, 663, 664, 665,
	781, 0, 666, 0, 667, 668, 669, 670, 671, 672,
	674, 638, 675, 680, 681, 782, 676, 677, 678, 679,
	783, 683, 684, 685, 686, 0, 687, 688, 0, 682,
	673, 0, 689, 690, 691, 692, 693, 694, 0, 695,
	696, 0, 697, 784, 785, 786, 787, 0, 709, 0,
	698, 700, 701, 702, 703, 788, 704, 789, 0, 705,
	706, 707, 708, 699, 710, 711, 0, 0, 712, 713,
	714, 716, 718, 719, 715, 717, 720, 0, 721, 0,
	0, 722, 723, 724, 790, 791, 792, 0, 726, 727,
	725, 728, 729, 732, 730, 731, 793, 733, 470, 734,
	735, 1536, 0, 316, 0, 736, 737, 794, 738, 739,
	740, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 0, 0, 0, 741, 0, 0, 0,
	332, 0, 333, 334, 335, 0, 336, 337, 338, 339,
	340, 341, 342, 742, 743, 0, 343, 744, 344, 745,
	0, 746, 345, 346, 347, 348, 349, 350, 351, 0,
	0, 0, 352, 747, 748, 749, 0, 353, 354, 750,
	0, 0, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 0, 380, 381, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 386, 387, 0,
	388, 390, 751, 752, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 753, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 754, 755, 424,
	0, 0, 0, 0, 0, 0, 0, 425, 426, 427,
	756, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 0, 434, 435, 436, 757, 758, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	759, 0, 760, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 761, 762, 763, 549, 0, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 0,
	463, 464, 465, 0, 0, 764, 466, 550, 467, 765,
	766, 0, 767, 0, 468, 469, 472, 0, 768, 0,
	471, 473, 474, 0, 475, 0, 0, 0, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 485, 484, 0,
	487, 769, 486, 0, 488, 489, 0, 0, 490, 491,
	492, 493, 494, 495, 498, 0, 0, 496, 497, 499,
	500, 0, 501, 502, 504, 507, 503, 505, 506, 508,
	521, 522, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 524, 0, 523, 0, 525, 526,
	527, 528, 529, 536, 538, 539, 534, 535, 537, 540,
	541, 543, 531, 532, 533, 0, 542, 530, 0, 0,
	0, 544, 545, 546, 547, 0, 770, 548, 771, 551,
	552, 0, 0, 553, 0, 554, 0, 0, 556, 557,
	558, 0, 0, 559, 560, 772, 0, 561, 0, 773,
	562, 563, 555, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 0, 574, 575, 774, 576, 577, 578,
	775, 579, 580, 581, 776, 582, 777, 583, 584, 0,
	585, 586, 587, 0, 588, 589, 590, 591, 592, 593,
	594, 595, 778, 596, 597, 599, 598, 600, 0, 601,
	0, 602, 603, 604, 0, 0, 0, 0, 0, 605,
	606, 608, 0, 609, 610, 611, 612, 607, 613, 614,
	615, 616, 617, 618, 0, 620, 621, 619, 622, 623,
	0, 889, 625, 626, 627, 628, 779, 629, 0, 630,
	631, 639, 640, 641, 632, 633, 635, 888, 634, 643,
	644, 645, 646, 648, 647, 0, 650, 651, 649, 652,
	653, 654, 0, 655, 780, 656, 636, 637, 657, 658,
	0, 659, 660, 661, 662, 663, 664, 665, 781, 0,
	666, 0, 667, 668, 669, 670, 671, 672, 674, 638,
	675, 680, 681, 782, 676, 677, 678, 679, 783, 683,
	684, 685, 686, 0, 687, 688, 0, 682, 673, 0,
	689, 690, 691, 692, 693, 694, 0, 695, 696, 0,
	697, 886, 785, 786, 787, 0, 709, 0, 698, 700,
	701, 702, 703, 788, 704, 789, 0, 705, 706, 707,
	708, 699, 710, 711, 0, 0, 712, 713, 714, 716,
	718, 719, 715, 717, 720, 0, 721, 0, 0, 722,
	723, 724, 790, 791, 792, 0, 726, 727, 725, 728,
	729, 732, 730, 731, 793, 733, 470, 734, 735, 1507,
	0, 316, 0, 736, 737, 794, 738, 739, 740, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	325, 324, 326, 327, 328, 329, 0, 330, 331, 0,
	0, 0, 0, 0, 741, 0, 0, 0, 332, 0,
	333, 334, 335, 0, 336, 337, 338, 339, 340, 341,
	342, 742, 743, 0, 343, 744, 344, 745, 0, 746,
	345, 346, 347, 348, 349, 350, 351, 0, 0, 0,
	352, 747, 748, 749, 0, 353, 354, 750, 0, 0,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 0, 380, 381, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 386, 387, 0, 388, 390,
	751, 752, 0, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 753, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 754, 755, 424, 0, 0,
	0, 0, 0, 0, 0, 425, 426, 427, 756, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 0, 434, 435, 436, 757, 758, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 759, 0,
	760, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	1506, 762, 763, 549, 0, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 0, 0, 0, 0, 463, 464,
	465, 0, 0, 764, 466, 550, 467, 765, 766, 0,
	767, 0, 468, 469, 472, 0, 768, 0, 471, 473,
	474, 0, 475, 0, 0, 0, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 485, 484, 0, 487, 769,
	486, 0, 488, 489, 0, 0, 490, 491, 492, 493,
	494, 495, 498, 0, 0, 496, 497, 499, 500, 0,
	501, 502, 504, 507, 503, 505, 506, 508, 521, 522,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 524, 0, 523, 0, 525, 526, 527, 528,
	529, 536, 538, 539, 534, 535, 537, 540, 541, 543,
	531, 532, 533, 0, 542, 530, 0, 0, 0, 544,
	545, 546, 547, 0, 770, 548, 771, 551, 552, 0,
	0, 553, 0, 554, 0, 0, 556, 557, 558, 0,
	0, 559, 560, 772, 0, 561, 0, 773, 562, 563,
	555, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 0, 574, 575, 774, 576, 577, 578, 775, 579,
	580, 581, 776, 582, 777, 583, 584, 0, 585, 586,
	587, 0, 588, 589, 590, 591, 592, 593, 594, 595,
	778, 596, 597, 599, 598, 600, 0, 601, 0, 602,
	603, 604, 0, 0, 0, 0, 0, 605, 606, 608,
	0, 609, 610, 611, 612, 607, 613, 614, 615, 616,
	617, 618, 0, 620, 621, 619, 622, 623, 0, 624,
	625, 626, 627, 628, 779, 629, 0, 630, 631, 639,
	640, 641, 632, 633, 635, 642, 634, 643, 644, 645,
	646, 648, 647, 0, 650, 651, 649, 652, 653, 654,
	0, 655, 780, 656, 636, 637, 657, 658, 0, 659,
	660, 661, 662, 663, 664, 665, 781, 0, 666, 0,
	667, 668, 669, 670, 671, 672, 674, 638, 675, 680,
	681, 782, 676, 677, 678, 679, 783, 683, 684, 685,
	686, 0, 687, 688, 0, 682, 673, 0, 689, 690,
	691, 692, 693, 694, 0, 695, 696, 0, 697, 784,
	785, 786, 787, 0, 709, 0, 698, 700, 701, 702,
	703, 788, 704, 789, 0, 705, 706, 707, 708, 699,
	710, 711, 0, 0, 712, 713, 714, 716, 718, 719,
	715, 717, 720, 0, 721, 0, 0, 722, 723, 724,
	790, 791, 792, 0, 726, 727, 725, 728, 729, 732,
	730, 731, 793, 733, 470, 734, 735, 1499, 0, 316,
	0, 736, 737, 794, 738, 739, 740, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 0, 330, 331, 0, 0, 0,
	0, 0, 741, 0, 0, 0, 332, 0, 333, 334,
	335, 0, 336, 337, 338, 339, 340, 341, 342, 742,
	743, 0, 343, 744, 344, 745, 0, 746, 345, 346,
	347, 348, 349, 350, 351, 0, 0, 0, 352, 747,
	748, 749, 0, 353, 354, 750, 0, 0, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 0,
	380, 381, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 386, 387, 0, 388, 390, 751, 752,
	0, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	753, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 754, 755, 424, 0, 0, 0, 0,
	0, 0, 0, 425, 426, 427, 756, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 0,
	434, 435, 436, 757, 758, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 759, 0, 760, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 1498, 762,
	763, 549, 0, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 0, 0, 0, 0, 463, 464, 465, 0,
	0, 764, 466, 550, 467, 765, 766, 0, 767, 0,
	468, 469, 472, 0, 768, 0, 471, 473, 474, 0,
	475, 0, 0, 0, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 485, 484, 0, 487, 769, 486, 0,
	488, 489, 0, 0, 490, 491, 492, 493, 494, 495,
	498, 0, 0, 496, 497, 499, 500, 0, 501, 502,
	504, 507, 503, 505, 506, 508, 521, 522, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	524, 0, 523, 0, 525, 526, 527, 528, 529, 536,
	538, 539, 534, 535, 537, 540, 541, 543, 531, 532,
	533, 0, 542, 530, 0, 0, 0, 544, 545, 546,
	547, 0, 770, 548, 771, 551, 552, 0, 0, 553,
	0, 554, 0, 0, 556, 557, 558, 0, 0, 559,
	560, 772, 0, 561, 0, 773, 562, 563, 555, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 0,
	574, 575, 774, 576, 577, 578, 775, 579, 580, 581,
	776, 582, 777, 583, 584, 0, 585, 586, 587, 0,
	588, 589, 590, 591, 592, 593, 594, 595, 778, 596,
	597, 599, 598, 600, 0, 601, 0, 602, 603, 604,
	0, 0, 0, 0, 0, 605, 606, 608, 0, 609,
	610, 611, 612, 607, 613, 614, 615, 616, 617, 618,
	0, 620, 621, 619, 622, 623, 0, 624, 625, 626,
	627, 628, 779, 629, 0, 630, 631, 639, 640, 641,
	632, 633, 635, 642, 634, 643, 644, 645, 646, 648,
	647, 0, 650, 651, 649, 652, 653, 654, 0, 655,
	780, 656, 636, 637, 657, 658, 0, 659, 660, 661,
	662, 663, 664, 665, 781, 0, 666, 0, 667, 668,
	669, 670, 671, 672, 674, 638, 675, 680, 681, 782,
	676, 677, 678, 679, 783, 683, 684, 685, 686, 0,
	687, 688, 0, 682, 673, 0, 689, 690, 691, 692,
	693, 694, 0, 695, 696, 0, 697, 784, 785, 786,
	787, 0, 709, 0, 698, 700, 701, 702, 703, 788,
	704, 789, 0, 705, 706, 707, 708, 699, 710, 711,
	0, 0, 712, 713, 714, 716, 718, 719, 715, 717,
	720, 0, 721, 0, 0, 722, 723, 724, 790, 791,
	792, 0, 726, 727, 725, 728, 729, 732, 730, 731,
	793, 733, 470, 734, 735, 316, 0, 0, 0, 736,
	737, 794, 738, 739, 740, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	1440, 330, 331, 0, 0, 0, 0, 0, 741, 0,
	0, 0, 332, 0, 333, 334, 335, 0, 336, 337,
	338, 339, 340, 341, 342, 742, 743, 0, 343, 744,
	344, 745, 0, 746, 345, 346, 347, 348, 349, 350,
	351, 0, 0, 0, 352, 747, 748, 749, 0, 353,
	354, 750, 0, 0, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 0, 380, 381, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 386,
	387, 0, 388, 390, 751, 752, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 753, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 754,
	755, 424, 0, 0, 0, 0, 0, 0, 0, 425,
	426, 427, 756, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 0, 434, 435, 436, 757,
	758, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 759, 0, 760, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 761, 762, 763, 549, 0, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 0, 463, 464, 465, 0, 0, 764, 466, 550,
	467, 765, 766, 0, 767, 0, 468, 469, 472, 0,
	768, 0, 471, 473, 474, 0, 475, 0, 0, 0,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 485,
	484, 0, 487, 769, 486, 0, 488, 489, 0, 0,
	490, 491, 492, 493, 494, 495, 498, 0, 0, 496,
	497, 499, 500, 0, 501, 502, 504, 507, 503, 505,
	506, 508, 521, 522, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 524, 0, 523, 0,
	525, 526, 527, 528, 529, 536, 538, 539, 534, 535,
	537, 540, 541, 543, 531, 532, 533, 0, 542, 530,
	0, 0, 0, 544, 545, 546, 547, 0, 770, 548,
	771, 551, 552, 0, 0, 553, 0, 554, 0, 0,
	556, 557, 558, 0, 0, 559, 560, 772, 0, 561,
	0, 773, 562, 563, 555, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 0, 574, 575, 774, 576,
	577, 578, 775, 579, 580, 581, 776, 582, 777, 583,
	584, 0, 585, 586, 587, 0, 588, 589, 590, 591,
	592, 593, 594, 595, 778, 596, 597, 599, 598, 600,
	0, 601, 0, 602, 603, 604, 0, 0, 0, 0,
	0, 605, 606, 608, 0, 609, 610, 611, 612, 607,
	613, 614, 615, 616, 617, 618, 0, 620, 621, 619,
	622, 623, 0, 624, 625, 626, 627, 628, 779, 629,
	0, 630, 631, 639, 640, 641, 632, 633, 635, 642,
	634, 643, 644, 645, 646, 648, 647, 0, 650, 651,
	649, 652, 653, 654, 0, 655, 780, 656, 636, 637,
	657, 658, 0, 659, 660, 661, 662, 663, 664, 665,
	781, 0, 666, 0, 667, 668, 669, 670, 671, 672,
	674, 638, 675, 680, 681, 782, 676, 677, 678, 679,
	783, 683, 684, 685, 686, 0, 687, 688, 0, 682,
	673, 0, 689, 690, 691, 692, 693, 694, 0, 695,
	696, 0, 697, 784, 785, 786, 787, 0, 709, 0,
	698, 700, 701, 702, 703, 788, 704, 789, 0, 705,
	706, 707, 708, 699, 710, 711, 0, 0, 712, 713,
	714, 716, 718, 719, 715, 717, 720, 0, 721, 0,
	0, 722, 723, 724, 790, 791, 792, 0, 726, 727,
	725, 728, 729, 732, 730, 731, 793, 733, 470, 734,
	735, 900, 0, 316, 0, 736, 737, 794, 738, 739,
	740, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 0, 0, 0, 741, 0, 0, 0,
	332, 0, 333, 334, 335, 0, 336, 337, 338, 339,
	340, 341, 342, 742, 743, 0, 343, 744, 344, 745,
	0, 746, 345, 346, 347, 348, 349, 350, 351, 0,
	0, 0, 352, 747, 748, 749, 0, 353, 354, 750,
	0, 0, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 0, 380, 381, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 386, 387, 0,
	388, 390, 751, 752, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 753, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 754, 755, 424,
	0, 0, 0, 0, 0, 0, 0, 425, 426, 427,
	756, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 0, 434, 435, 436, 757, 758, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	759, 0, 760, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 761, 762, 763, 549, 0, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 0,
	463, 464, 465, 0, 0, 764, 466, 550, 467, 765,
	766, 0, 767, 0, 468, 469, 472, 0, 768, 0,
	471, 473, 474, 0, 475, 0, 0, 0, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 485, 484, 0,
	487, 769, 486, 0, 488, 489, 0, 0, 490, 491,
	492, 493, 494, 495, 498, 0, 0, 496, 497, 499,
	500, 0, 501, 502, 504, 507, 503, 505, 506, 508,
	521, 522, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 524, 0, 523, 0, 525, 526,
	527, 528, 529, 536, 538, 539, 534, 535, 537, 540,
	541, 543, 531, 532, 533, 0, 542, 530, 0, 0,
	0, 544, 545, 546, 547, 0, 770, 548, 771, 551,
	552, 0, 0, 553, 0, 554, 0, 0, 556, 557,
	558, 0, 0, 559, 560, 772, 0, 561, 0, 773,
	562, 563, 555, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 0, 574, 575, 774, 576, 577, 578,
	775, 579, 580, 581, 776, 582, 777, 583, 584, 0,
	585, 586, 587, 0, 588, 589, 590, 591, 592, 593,
	594, 595, 778, 596, 597, 599, 598, 600, 0, 601,
	0, 602, 603, 604, 0, 0, 0, 0, 0, 605,
	606, 608, 0, 609, 610, 611, 612, 607, 613, 614,
	615, 616, 617, 618, 0, 620, 621, 619, 622, 623,
	0, 624, 625, 626, 627, 628, 779, 629, 0, 630,
	631, 639, 640, 641, 632, 633, 635, 642, 634, 643,
	644, 645, 646, 648, 647, 0, 650, 651, 649, 652,
	653, 654, 0, 655, 780, 656, 636, 637, 657, 658,
	0, 659, 660, 661, 662, 663, 664, 665, 781, 0,
	666, 0, 667, 668, 669, 670, 671, 672, 674, 638,
	675, 680, 681, 782, 676, 677, 678, 679, 783, 683,
	684, 685, 686, 0, 687, 688, 0, 682, 673, 0,
	689, 690, 691, 692, 693, 694, 0, 695, 696, 0,
	697, 784, 785, 786, 787, 0, 709, 0, 698, 700,
	701, 702, 703, 788, 704, 789, 0, 705, 706, 707,
	708, 699, 710, 711, 0, 0, 712, 713, 714, 716,
	718, 719, 715, 717, 720, 0, 721, 0, 0, 722,
	723, 724, 790, 791, 792, 0, 726, 727, 725, 728,
	729, 732, 730, 731, 793, 733, 470, 734, 735, 880,
	0, 316, 0, 736, 737, 794, 738, 739, 740, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	325, 324, 326, 327, 328, 329, 0, 330, 331, 0,
	0, 0, 0, 0, 741, 0, 0, 0, 332, 0,
	333, 334, 335, 0, 336, 337, 338, 339, 340, 341,
	342, 742, 743, 0, 343, 744, 344, 745, 0, 746,
	345, 346, 347, 348, 349, 350, 351, 0, 0, 0,
	352, 747, 748, 749, 0, 353, 876, 750, 0, 0,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 875, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 0, 380, 381, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 386, 387, 0, 388, 390,
	751, 752, 0, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 753, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 754, 755, 424, 0, 0,
	0, 0, 0, 0, 0, 425, 426, 427, 756, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 0, 434, 435, 436, 757, 758, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 759, 0,
	760, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	761, 762, 763, 549, 0, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 0, 0, 0, 0, 463, 464,
	465, 0, 0, 764, 466, 550, 467, 765, 766, 0,
	767, 0, 468, 469, 472, 0, 768, 0, 471, 473,
	474, 0, 475, 0, 0, 0, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 485, 484, 0, 487, 769,
	486, 0, 488, 489, 0, 0, 490, 491, 492, 493,
	494, 881, 498, 0, 0, 496, 497, 499, 500, 0,
	501, 502, 504, 507, 503, 505, 506, 508, 521, 522,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 524, 0, 890, 0, 525, 526, 527, 528,
	529, 536, 538, 539, 534, 535, 537, 540, 541, 543,
	531, 532, 533, 0, 542, 530, 0, 0, 0, 544,
	545, 546, 547, 0, 770, 548, 771, 551, 552, 0,
	0, 553, 0, 554, 0, 0, 556, 557, 558, 0,
	0, 559, 560, 772, 0, 561, 0, 773, 562, 563,
	555, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 0, 574, 575, 774, 576, 577, 578, 775, 579,
	580, 581, 776, 582, 777, 583, 584, 0, 585, 586,
	587, 0, 588, 589, 590, 591, 592, 593, 594, 595,
	778, 596, 597, 599, 598, 600, 0, 601, 0, 602,
	603, 604, 0, 0, 0, 0, 0, 605, 606, 608,
	0, 609, 610, 611, 612, 607, 613, 614, 615, 616,
	617, 618, 0, 620, 621, 619, 622, 623, 0, 889,
	625, 626, 627, 628, 877, 629, 0, 630, 631, 639,
	640, 641, 632, 633, 635, 888, 634, 643, 644, 645,
	646, 648, 647, 0, 650, 651, 649, 652, 878, 654,
	0, 655, 780, 656, 636, 637, 657, 658, 0, 659,
	660, 661, 662, 663, 664, 665, 781, 0, 666, 0,
	667, 668, 669, 670, 671, 672, 674, 638, 675, 680,
	681, 782, 676, 677, 678, 679, 783, 683, 684, 685,
	686, 0, 687, 688, 0, 682, 673, 0, 689, 690,
	691, 692, 693, 694, 0, 695, 696, 0, 697, 886,
	785, 786, 787, 0, 709, 0, 698, 882, 701, 702,
	703, 788, 704, 789, 0, 705, 706, 707, 708, 699,
	710, 711, 0, 0, 712, 713, 714, 716, 718, 719,
	715, 717, 720, 0, 721, 0, 0, 722, 723, 724,
	790, 791, 792, 0, 726, 727, 725, 728, 729, 732,
	730, 731, 793, 733, 470, 734, 735, 869, 0, 316,
	0, 736, 737, 794, 738, 739, 740, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 0, 330, 331, 0, 0, 0,
	0, 0, 741, 0, 0, 0, 332, 0, 333, 334,
	335, 0, 336, 337, 338, 339, 340, 341, 342, 742,
	743, 0, 343, 744, 344, 745, 0, 746, 345, 346,
	347, 348, 349, 350, 351, 0, 0, 0, 352, 747,
	748, 749, 0, 353, 354, 750, 0, 0, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 0,
	380, 381, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 386, 387, 0, 388, 390, 751, 752,
	0, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	753, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 754, 755, 424, 0, 0, 0, 0,
	0, 0, 0, 425, 426, 427, 756, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 0,
	434, 435, 436, 757, 758, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 759, 0, 760, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 761, 762,
	763, 549, 0, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 0, 0, 0, 0, 463, 464, 465, 0,
	0, 764, 466, 550, 467, 765, 766, 0, 767, 0,
	468, 469, 472, 0, 768, 0, 471, 473, 474, 0,
	475, 0, 0, 0, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 485, 484, 0, 487, 769, 486, 0,
	488, 489, 0, 0, 490, 491, 492, 493, 494, 495,
	498, 0, 0, 496, 497, 499, 500, 0, 501, 502,
	504, 507, 503, 505, 506, 508, 521, 522, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	524, 0, 523, 0, 525, 526, 527, 528, 529, 536,
	538, 539, 534, 535, 537, 540, 541, 543, 531, 532,
	533, 0, 542, 530, 0, 0, 0, 544, 545, 546,
	547, 0, 770, 548, 771, 551, 552, 0, 0, 553,
	0, 554, 0, 0, 556, 557, 558, 0, 0, 559,
	560, 772, 0, 561, 0, 773, 562, 563, 555, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 0,
	574, 575, 774, 576, 577, 578, 775, 579, 580, 581,
	776, 582, 777, 583, 584, 0, 585, 586, 587, 0,
	588, 589, 590, 591, 592, 593, 594, 595, 778, 596,
	597, 599, 598, 600, 0, 601, 0, 602, 603, 604,
	0, 0, 0, 0, 0, 605, 606, 608, 0, 609,
	610, 611, 612, 607, 613, 614, 615, 616, 617, 618,
	0, 620, 621, 619, 622, 623, 0, 624, 625, 626,
	627, 628, 779, 629, 0, 630, 631, 870, 640, 641,
	632, 633, 635, 642, 634, 643, 644, 645, 646, 648,
	647, 0, 650, 651, 649, 652, 653, 654, 0, 655,
	780, 656, 636, 637, 657, 658, 0, 659, 660, 661,
	662, 663, 664, 665, 781, 0, 666, 0, 667, 668,
	669, 670, 671, 672, 674, 638, 675, 680, 681, 782,
	676, 677, 678, 679, 783, 683, 684, 685, 686, 0,
	687, 688, 0, 682, 673, 0, 689, 690, 691, 692,
	693, 694, 0, 695, 696, 0, 697, 784, 785, 786,
	787, 0, 709, 0, 698, 700, 701, 702, 703, 788,
	704, 789, 0, 705, 706, 707, 708, 699, 710, 711,
	0, 0, 712, 713, 714, 716, 718, 719, 715, 717,
	720, 0, 721, 0, 0, 722, 723, 724, 790, 791,
	792, 0, 726, 727, 725, 728, 729, 732, 730, 731,
	793, 733, 470, 734, 735, 831, 0, 316, 0, 736,
	737, 794, 738, 739, 740, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 0, 0, 0,
	741, 0, 0, 0, 332, 0, 333, 334, 335, 0,
	336, 337, 338, 339, 340, 341, 342, 742, 743, 0,
	343, 744, 344, 745, 0, 746, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 747, 748, 749,
	0, 353, 354, 750, 0, 0, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 0, 380, 381,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 386, 387, 0, 388, 390, 751, 752, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 753, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 754, 755, 424, 0, 0, 0, 0, 0, 0,
	0, 425, 426, 427, 756, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 0, 434, 435,
	436, 757, 758, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 759, 0, 760, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 761, 762, 763, 549,
	0, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 0, 463, 464, 465, 0, 0, 764,
	466, 550, 467, 765, 766, 0, 767, 0, 468, 469,
	472, 0, 768, 0, 471, 473, 474, 0, 475, 0,
	0, 0, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 485, 484, 0, 487, 769, 486, 0, 488, 489,
	0, 0, 490, 491, 492, 493, 494, 495, 498, 0,
	0, 496, 497, 499, 500, 0, 501, 502, 504, 507,
	503, 505, 506, 508, 521, 522, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 524, 0,
	523, 0, 525, 526, 527, 528, 529, 536, 538, 539,
	534, 535, 537, 540, 541, 543, 531, 532, 533, 0,
	542, 530, 0, 0, 0, 544, 545, 546, 547, 0,
	770, 548, 771, 551, 552, 0, 0, 553, 0, 554,
	0, 0, 556, 557, 558, 0, 0, 559, 560, 772,
	0, 561, 0, 773, 562, 563, 555, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 0, 574, 575,
	774, 576, 577, 578, 775, 579, 580, 581, 776, 582,
	777, 583, 584, 0, 585, 586, 587, 0, 588, 589,
	590, 591, 592, 593, 594, 595, 778, 596, 597, 599,
	598, 600, 0, 601, 0, 602, 603, 604, 0, 0,
	0, 0, 0, 605, 606, 608, 0, 609, 610, 611,
	612, 607, 613, 614, 615, 616, 617, 618, 0, 620,
	621, 619, 622, 623, 0, 624, 625, 626, 627, 628,
	779, 629, 0, 630, 631, 639, 640, 641, 632, 633,
	635, 642, 634, 643, 644, 645, 646, 648, 647, 0,
	650, 651, 649, 652, 653, 654, 0, 655, 780, 656,
	636, 637, 657, 658, 0, 659, 660, 661, 662, 663,
	664, 665, 781, 0, 666, 0, 667, 668, 669, 670,
	671, 672, 674, 638, 675, 680, 681, 782, 676, 677,
	678, 679, 783, 683, 684, 685, 686, 0, 687, 688,
	0, 682, 673, 0, 689, 690, 691, 692, 693, 694,
	0, 695, 696, 0, 697, 784, 785, 786, 787, 0,
	709, 0, 698, 700, 701, 702, 703, 788, 704, 789,
	0, 705, 706, 707, 708, 699, 710, 711, 0, 0,
	712, 713, 714, 716, 718, 719, 715, 717, 720, 0,
	721, 0, 0, 722, 723, 724, 790, 791, 792, 0,
	726, 727, 725, 728, 729, 732, 730, 731, 793, 733,
	470, 734, 735, 823, 0, 316, 0, 736, 737, 794,
	738, 739, 740, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 0, 0, 0, 741, 0,
	0, 0, 332, 0, 333, 334, 335, 0, 336, 337,
	338, 339, 340, 341, 342, 742, 743, 0, 343, 744,
	344, 745, 0, 746, 345, 346, 347, 348, 349, 350,
	351, 0, 0, 0, 352, 747, 748, 749, 0, 353,
	354, 750, 0, 0, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 0, 380, 381, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 386,
	387, 0, 388, 390, 751, 752, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 753, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 754,
	755, 424, 0, 0, 0, 0, 0, 0, 0, 425,
	426, 427, 756, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 0, 434, 435, 436, 757,
	758, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 759, 0, 760, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 761, 762, 763, 549, 0, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 0, 463, 464, 465, 0, 0, 764, 466, 550,
	467, 765, 766, 0, 767, 0, 468, 469, 472, 0,
	768, 0, 471, 473, 474, 0, 475, 0, 0, 0,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 485,
	484, 0, 487, 769, 486, 0, 488, 489, 0, 0,
	490, 491, 492, 493, 494, 495, 498, 0, 0, 496,
	497, 499, 500, 0, 501, 502, 504, 507, 503, 505,
	506, 508, 521, 522, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 524, 0, 523, 0,
	525, 526, 527, 528, 529, 536, 538, 539, 534, 535,
	537, 540, 541, 543, 531, 532, 533, 0, 542, 530,
	0, 0, 0, 544, 545, 546, 547, 0, 770, 548,
	771, 551, 552, 0, 0, 553, 0, 554, 0, 0,
	556, 557, 558, 0, 0, 559, 560, 772, 0, 561,
	0, 773, 562, 563, 555, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 0, 574, 575, 774, 576,
	577, 578, 775, 579, 580, 581, 776, 582, 777, 583,
	584, 0, 585, 586, 587, 0, 588, 589, 590, 591,
	592, 593, 594, 595, 778, 596, 597, 599, 598, 600,
	0, 601, 0, 602, 603, 604, 0, 0, 0, 0,
	0, 605, 606, 608, 0, 609, 610, 611, 612, 607,
	613, 614, 615, 616, 617, 618, 0, 620, 621, 619,
	622, 623, 0, 624, 625, 626, 627, 628, 779, 629,
	0, 630, 631, 639, 640, 641, 632, 633, 635, 642,
	634, 643, 644, 645, 646, 648, 647, 0, 650, 651,
	649, 652, 653, 654, 0, 655, 780, 656, 636, 637,
	657, 658, 0, 659, 660, 661, 662, 663, 664, 665,
	781, 0, 666, 0, 667, 668, 669, 670, 671, 672,
	674, 638, 675, 680, 681, 782, 676, 677, 678, 679,
	783, 683, 684, 685, 686, 0, 687, 688, 0, 682,
	673, 0, 689, 690, 691, 692, 693, 694, 0, 695,
	696, 0, 697, 784, 785, 786, 787, 0, 709, 0,
	698, 700, 701, 702, 703, 788, 704, 789, 0, 705,
	706, 707, 708, 699, 710, 711, 0, 0, 712, 713,
	714, 716, 718, 719, 715, 717, 720, 0, 721, 0,
	0, 722, 723, 724, 790, 791, 792, 0, 726, 727,
	725, 728, 729, 732, 730, 731, 793, 733, 470, 734,
	735, 800, 0, 316, 0, 736, 737, 794, 738, 739,
	740, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 0, 0, 0, 741, 0, 0, 0,
	332, 0, 333, 334, 335, 0, 336, 337, 338, 339,
	340, 341, 342, 742, 743, 0, 343, 744, 344, 745,
	0, 746, 345, 346, 347, 348, 349, 350, 351, 0,
	0, 0, 352, 747, 748, 749, 0, 353, 354, 750,
	0, 0, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 0, 380, 381, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 386, 387, 0,
	388, 390, 751, 752, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 753, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 754, 755, 424,
	0, 0, 0, 0, 0, 0, 0, 425, 426, 427,
	756, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 0, 434, 435, 436, 757, 758, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	759, 0, 760, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 761, 762, 763, 549, 0, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 0,
	463, 464, 465, 0, 0, 764, 466, 550, 467, 765,
	766, 0, 767, 0, 468, 469, 472, 0, 768, 0,
	471, 473, 474, 0, 475, 0, 0, 0, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 485, 484, 0,
	487, 769, 486, 0, 488, 489, 0, 0, 490, 491,
	492, 493, 494, 495, 498, 0, 0, 496, 497, 499,
	500, 0, 501, 502, 504, 507, 503, 505, 506, 508,
	521, 522, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 524, 0, 523, 0, 525, 526,
	527, 528, 529, 536, 538, 539, 534, 535, 537, 540,
	541, 543, 531, 532, 533, 0, 542, 530, 0, 0,
	0, 544, 545, 546, 547, 0, 770, 548, 771, 551,
	552, 0, 0, 553, 0, 554, 0, 0, 556, 557,
	558, 0, 0, 559, 560, 772, 0, 561, 0, 773,
	562, 563, 555, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 0, 574, 575, 774, 576, 577, 578,
	775, 579, 580, 581, 776, 582, 777, 583, 584, 0,
	585, 586, 587, 0, 588, 589, 590, 591, 592, 593,
	594, 595, 778, 596, 597, 599, 598, 600, 0, 601,
	0, 602, 603, 604, 0, 0, 0, 0, 0, 605,
	606, 608, 0, 609, 610, 611, 612, 607, 613, 614,
	615, 616, 617, 618, 0, 620, 621, 619, 622, 623,
	0, 624, 625, 626, 627, 628, 779, 629, 0, 630,
	631, 639, 640, 641, 632, 633, 635, 642, 634, 643,
	644, 645, 646, 648, 647, 0, 650, 651, 649, 652,
	653, 654, 0, 655, 780, 656, 636, 637, 657, 658,
	0, 659, 660, 661, 662, 663, 664, 665, 781, 0,
	666, 0, 667, 668, 669, 670, 671, 672, 674, 638,
	675, 680, 681, 782, 676, 677, 678, 679, 783, 683,
	684, 685, 686, 0, 687, 688, 0, 682, 673, 0,
	689, 690, 691, 692, 693, 694, 0, 695, 696, 0,
	697, 784, 785, 786, 787, 0, 709, 0, 698, 700,
	701, 702, 703, 788, 704, 789, 0, 705, 706, 707,
	708, 699, 710, 711, 0, 0, 712, 713, 714, 716,
	718, 719, 715, 717, 720, 0, 721, 0, 0, 722,
	723, 724, 790, 791, 792, 0, 726, 727, 725, 728,
	729, 732, 730, 731, 793, 733, 470, 734, 735, 316,
	0, 0, 0, 736, 737, 794, 738, 739, 740, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 0, 330, 331, 0, 0, 0,
	0, 0, 741, 0, 0, 0, 332, 0, 333, 334,
	335, 0, 336, 337, 338, 339, 340, 341, 342, 742,
	743, 0, 343, 744, 344, 745, 0, 746, 345, 346,
	347, 348, 349, 350, 351, 0, 0, 0, 352, 747,
	748, 749, 0, 353, 354, 750, 0, 0, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 0,
	380, 381, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 386, 387, 0, 388, 390, 751, 752,
	0, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	753, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 754, 755, 424, 0, 0, 0, 0,
	0, 0, 0, 425, 426, 427, 756, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 0,
	434, 435, 436, 757, 758, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 759, 0, 760, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 761, 762,
	763, 549, 0, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 0, 0, 0, 0, 463, 464, 465, 0,
	0, 764, 466, 550, 467, 765, 766, 0, 767, 0,
	468, 469, 472, 0, 768, 0, 471, 473, 474, 0,
	475, 0, 0, 0, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 485, 484, 0, 487, 769, 486, 0,
	488, 489, 0, 0, 490, 491, 492, 493, 494, 495,
	498, 0, 0, 496, 497, 499, 500, 0, 501, 502,
	504, 507, 503, 505, 506, 508, 521, 522, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	524, 0, 523, 0, 525, 526, 527, 528, 529, 536,
	538, 539, 534, 535, 537, 540, 541, 543, 531, 532,
	533, 0, 542, 530, 0, 0, 0, 544, 545, 546,
	547, 0, 770, 548, 771, 551, 552, 0, 0, 553,
	0, 554, 0, 0, 556, 557, 558, 0, 0, 559,
	560, 772, 0, 561, 0, 773, 562, 563, 555, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 0,
	574, 575, 774, 576, 577, 578, 775, 579, 580, 581,
	776, 582, 777, 583, 584, 0, 585, 586, 587, 0,
	588, 589, 590, 591, 592, 593, 594, 595, 778, 596,
	597, 599, 598, 600, 0, 601, 0, 602, 603, 604,
	0, 0, 0, 0, 0, 605, 606, 608, 0, 609,
	610, 611, 612, 607, 613, 614, 615, 616, 617, 618,
	0, 620, 621, 619, 622, 623, 0, 624, 625, 626,
	627, 628, 779, 629, 0, 630, 631, 639, 640, 641,
	632, 633, 635, 642, 634, 643, 644, 645, 646, 648,
	647, 0, 650, 651, 649, 652, 653, 654, 0, 655,
	780, 656, 636, 637, 657, 658, 0, 659, 660, 661,
	662, 663, 664, 665, 781, 0, 666, 0, 667, 668,
	669, 670, 671, 672, 674, 638, 675, 680, 681, 782,
	676, 677, 678, 679, 783, 683, 684, 685, 686, 0,
	687, 688, 0, 682, 673, 0, 689, 690, 691, 692,
	693, 694, 0, 695, 696, 0, 697, 784, 785, 786,
	787, 0, 709, 0, 698, 700, 701, 702, 703, 788,
	704, 789, 0, 705, 706, 707, 708, 699, 710, 711,
	0, 0, 712, 713, 714, 716, 718, 719, 715, 717,
	720, 0, 721, 0, 0, 722, 723, 724, 790, 791,
	792, 0, 726, 727, 725, 728, 729, 732, 730, 731,
	793, 733, 470, 734, 735, 316, 0, 0, 0, 736,
	737, 794, 738, 739, 740, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 0, 0, 0, 741, 0,
	0, 0, 332, 0, 333, 334, 335, 0, 336, 337,
	338, 339, 340, 341, 342, 742, 743, 0, 343, 744,
	344, 745, 0, 746, 345, 346, 347, 348, 349, 350,
	351, 0, 0, 0, 352, 747, 748, 749, 0, 353,
	354, 750, 0, 0, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 0, 380, 381, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 386,
	387, 0, 388, 390, 751, 752, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 753, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 754,
	755, 424, 0, 0, 0, 0, 0, 0, 0, 425,
	426, 427, 756, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 0, 434, 435, 436, 757,
	758, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 759, 0, 760, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 4177, 762, 763, 549, 0, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 0, 463, 464, 465, 0, 0, 764, 466, 550,
	467, 765, 766, 0, 767, 0, 468, 469, 472, 0,
	768, 0, 471, 473, 474, 0, 475, 0, 0, 0,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 485,
	484, 0, 487, 769, 486, 0, 488, 489, 0, 0,
	490, 491, 492, 493, 494, 495, 498, 0, 0, 496,
	497, 499, 500, 0, 501, 502, 504, 507, 503, 505,
	506, 508, 521, 522, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 524, 0, 523, 0,
	525, 526, 527, 528, 529, 536, 538, 539, 534, 535,
	537, 540, 541, 543, 531, 532, 533, 0, 542, 530,
	0, 0, 0, 544, 545, 546, 547, 0, 770, 548,
	771, 551, 552, 0, 0, 553, 0, 554, 0, 0,
	556, 557, 558, 0, 0, 559, 560, 772, 0, 561,
	0, 773, 562, 563, 555, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 0, 574, 575, 774, 576,
	577, 578, 775, 579, 580, 581, 776, 582, 777, 583,
	584, 0, 585, 586, 587, 0, 588, 589, 590, 591,
	592, 593, 594, 595, 778, 596, 597, 599, 598, 600,
	0, 601, 0, 602, 603, 604, 0, 0, 0, 0,
	0, 605, 606, 608, 0, 609, 610, 611, 612, 607,
	613, 614, 615, 616, 617, 618, 0, 620, 621, 619,
	622, 623, 0, 624, 625, 626, 627, 628, 779, 629,
	0, 630, 631, 639, 640, 641, 632, 633, 635, 642,
	634, 643, 644, 645, 646, 648, 647, 0, 650, 651,
	649, 652, 653, 654, 0, 655, 780, 656, 636, 637,
	657, 658, 0, 659, 660, 661, 662, 663, 664, 665,
	781, 0, 666, 0, 667, 668, 669, 670, 671, 672,
	674, 638, 675, 680, 681, 782, 676, 677, 678, 679,
	783, 683, 684, 685, 686, 0, 687, 688, 0, 682,
	673, 0, 689, 690, 691, 692, 693, 694, 0, 695,
	696, 0, 697, 784, 785, 786, 787, 0, 709, 0,
	698, 700, 701, 702, 703, 788, 704, 789, 0, 705,
	706, 707, 708, 699, 710, 711, 0, 0, 712, 713,
	714, 716, 718, 719, 715, 717, 720, 0, 721, 0,
	0, 722, 723, 724, 790, 791, 792, 0, 726, 727,
	725, 728, 729, 732, 730, 731, 793, 733, 470, 734,
	735, 316, 0, 0, 0, 736, 737, 794, 738, 739,
	740, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	325, 324, 326, 327, 328, 329, 0, 330, 331, 0,
	0, 0, 0, 0, 741, 0, 0, 0, 332, 0,
	333, 334, 335, 0, 336, 337, 338, 339, 340, 341,
	342, 742, 743, 0, 343, 744, 344, 745, 0, 746,
	345, 346, 347, 348, 349, 350, 351, 0, 0, 0,
	352, 747, 748, 749, 0, 353, 354, 750, 0, 0,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 0, 380, 381, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 386, 387, 0, 388, 390,
	751, 752, 0, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 753, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 754, 755, 424, 0, 0,
	0, 0, 0, 0, 0, 425, 426, 427, 756, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 0, 434, 435, 436, 757, 758, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 759, 0,
	760, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	761, 762, 763, 549, 0, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 0, 0, 0, 0, 463, 464,
	465, 0, 0, 764, 466, 550, 467, 765, 766, 0,
	767, 0, 468, 469, 472, 0, 768, 0, 471, 473,
	474, 0, 475, 0, 0, 0, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 485, 484, 0, 487, 769,
	486, 0, 488, 489, 0, 0, 490, 491, 492, 493,
	494, 495, 498, 0, 0, 496, 497, 499, 500, 0,
	501, 502, 504, 507, 503, 505, 506, 508, 521, 522,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 524, 0, 523, 0, 525, 526, 527, 528,
	529, 536, 538, 539, 534, 535, 537, 540, 541, 543,
	531, 532, 533, 0, 542, 530, 0, 0, 0, 544,
	545, 546, 547, 0, 770, 548, 771, 551, 552, 0,
	0, 553, 0, 554, 0, 0, 556, 557, 558, 0,
	0, 559, 560, 772, 0, 561, 0, 773, 562, 563,
	555, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 0, 574, 575, 774, 576, 577, 578, 775, 579,
	580, 581, 776, 582, 777, 583, 584, 0, 585, 586,
	587, 0, 588, 589, 590, 591, 592, 593, 594, 595,
	778, 596, 597, 599, 598, 600, 0, 601, 0, 602,
	603, 604, 0, 0, 0, 0, 0, 605, 606, 608,
	0, 609, 610, 611, 612, 607, 613, 614, 615, 616,
	617, 618, 0, 620, 621, 619, 622, 623, 0, 889,
	625, 626, 627, 628, 779, 629, 0, 630, 631, 639,
	640, 641, 632, 633, 635, 888, 634, 643, 644, 645,
	646, 648, 647, 0, 650, 651, 649, 652, 653, 654,
	0, 655, 780, 656, 636, 637, 657, 658, 0, 659,
	660, 661, 662, 663, 664, 665, 781, 0, 666, 0,
	667, 668, 669, 670, 671, 672, 674, 638, 675, 680,
	681, 782, 676, 677, 678, 679, 783, 683, 684, 685,
	686, 0, 687, 688, 0, 682, 673, 0, 689, 690,
	691, 692, 693, 694, 0, 695, 696, 0, 697, 886,
	785, 786, 787, 0, 709, 0, 698, 700, 701, 702,
	703, 788, 704, 789, 0, 705, 706, 707, 708, 699,
	710, 711, 0, 0, 712, 713, 714, 716, 718, 719,
	715, 717, 720, 0, 721, 0, 0, 722, 723, 724,
	790, 791, 792, 0, 726, 727, 725, 728, 729, 732,
	730, 731, 793, 733, 470, 734, 735, 316, 0, 0,
	0, 736, 737, 794, 738, 739, 740, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 0, 0, 0,
	741, 0, 0, 0, 332, 0, 333, 334, 335, 0,
	336, 337, 338, 339, 340, 341, 342, 742, 743, 0,
	343, 744, 344, 745, 0, 746, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 747, 748, 749,
	0, 353, 354, 750, 0, 0, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 0, 380, 381,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 386, 387, 0, 388, 390, 751, 752, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 753, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 754, 755, 424, 0, 0, 0, 0, 0, 0,
	0, 425, 426, 427, 756, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 0, 434, 435,
	436, 757, 758, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 759, 0, 760, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 4069, 762, 763, 549,
	0, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 0, 463, 464, 465, 0, 0, 764,
	466, 550, 467, 765, 766, 0, 767, 0, 468, 469,
	472, 0, 768, 0, 471, 473, 474, 0, 475, 0,
	0, 0, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 485, 484, 0, 487, 769, 486, 0, 488, 489,
	0, 0, 490, 491, 492, 493, 494, 495, 498, 0,
	0, 496, 497, 499, 500, 0, 501, 502, 504, 507,
	503, 505, 506, 508, 521, 522, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 524, 0,
	523, 0, 525, 526, 527, 528, 529, 536, 538, 539,
	534, 535, 537, 540, 541, 543, 531, 532, 533, 0,
	542, 530, 0, 0, 0, 544, 545, 546, 547, 0,
	770, 548, 771, 551, 552, 0, 0, 553, 0, 554,
	0, 0, 556, 557, 558, 0, 0, 559, 560, 772,
	0, 561, 0, 773, 562, 563, 555, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 0, 574, 575,
	774, 576, 577, 578, 775, 579, 580, 581, 776, 582,
	777, 583, 584, 0, 585, 586, 587, 0, 588, 589,
	590, 591, 592, 593, 594, 595, 778, 596, 597, 599,
	598, 600, 0, 601, 0, 602, 603, 604, 0, 0,
	0, 0, 0, 605, 606, 608, 0, 609, 610, 611,
	612, 607, 613, 614, 615, 616, 617, 618, 0, 620,
	621, 619, 622, 623, 0, 624, 625, 626, 627, 628,
	779, 629, 0, 630, 631, 639, 640, 641, 632, 633,
	635, 642, 634, 643, 644, 645, 646, 648, 647, 0,
	650, 651, 649, 652, 653, 654, 0, 655, 780, 656,
	636, 637, 657, 658, 0, 659, 660, 661, 662, 663,
	664, 665, 781, 0, 666, 0, 667, 668, 669, 670,
	671, 672, 674, 638, 675, 680, 681, 782, 676, 677,
	678, 679, 783, 683, 684, 685, 686, 0, 687, 688,
	0, 682, 673, 0, 689, 690, 691, 692, 693, 694,
	0, 695, 696, 0, 697, 784, 785, 786, 787, 0,
	709, 0, 698, 700, 701, 702, 703, 788, 704, 789,
	0, 705, 706, 707, 708, 699, 710, 711, 0, 0,
	712, 713, 714, 716, 718, 719, 715, 717, 720, 0,
	721, 0, 0, 722, 723, 724, 790, 791, 792, 0,
	726, 727, 725, 728, 729, 732, 730, 731, 793, 733,
	470, 734, 735, 316, 0, 0, 0, 736, 737, 794,
	738, 739, 740, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 0, 0, 0, 741, 0, 0, 0,
	332, 0, 333, 334, 335, 0, 336, 337, 338, 339,
	340, 341, 342, 742, 743, 0, 343, 744, 344, 745,
	0, 746, 345, 346, 347, 348, 349, 350, 351, 0,
	0, 0, 352, 747, 748, 749, 0, 353, 354, 750,
	0, 0, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 0, 380, 381, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 386, 387, 0,
	388, 390, 751, 752, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 753, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 754, 755, 424,
	0, 0, 0, 0, 0, 0, 0, 425, 426, 427,
	756, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 0, 434, 435, 436, 757, 758, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	759, 0, 760, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 4038, 762, 763, 549, 0, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 0,
	463, 464, 465, 0, 0, 764, 466, 550, 467, 765,
	766, 0, 767, 0, 468, 469, 472, 0, 768, 0,
	471, 473, 474, 0, 475, 0, 0, 0, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 485, 484, 0,
	487, 769, 486, 0, 488, 489, 0, 0, 490, 491,
	492, 493, 494, 495, 498, 0, 0, 496, 497, 499,
	500, 0, 501, 502, 504, 507, 503, 505, 506, 508,
	521, 522, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 524, 0, 523, 0, 525, 526,
	527, 528, 529, 536, 538, 539, 534, 535, 537, 540,
	541, 543, 531, 532, 533, 0, 542, 530, 0, 0,
	0, 544, 545, 546, 547, 0, 770, 548, 771, 551,
	552, 0, 0, 553, 0, 554, 0, 0, 556, 557,
	558, 0, 0, 559, 560, 772, 0, 561, 0, 773,
	562, 563, 555, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 0, 574, 575, 774, 576, 577, 578,
	775, 579, 580, 581, 776, 582, 777, 583, 584, 0,
	585, 586, 587, 0, 588, 589, 590, 591, 592, 593,
	594, 595, 778, 596, 597, 599, 598, 600, 0, 601,
	0, 602, 603, 604, 0, 0, 0, 0, 0, 605,
	606, 608, 0, 609, 610, 611, 612, 607, 613, 614,
	615, 616, 617, 618, 0, 620, 621, 619, 622, 623,
	0, 624, 625, 626, 627, 628, 779, 629, 0, 630,
	631, 639, 640, 641, 632, 633, 635, 642, 634, 643,
	644, 645, 646, 648, 647, 0, 650, 651, 649, 652,
	653, 654, 0, 655, 780, 656, 636, 637, 657, 658,
	0, 659, 660, 661, 662, 663, 664, 665, 781, 0,
	666, 0, 667, 668, 669, 670, 671, 672, 674, 638,
	675, 680, 681, 782, 676, 677, 678, 679, 783, 683,
	684, 685, 686, 0, 687, 688, 0, 682, 673, 0,
	689, 690, 691, 692, 693, 694, 0, 695, 696, 0,
	697, 784, 785, 786, 787, 0, 709, 0, 698, 700,
	701, 702, 703, 788, 704, 789, 0, 705, 706, 707,
	708, 699, 710, 711, 0, 0, 712, 713, 714, 716,
	718, 719, 715, 717, 720, 0, 721, 0, 0, 722,
	723, 724, 790, 791, 792, 0, 726, 727, 725, 728,
	729, 732, 730, 731, 793, 733, 470, 734, 735, 316,
	0, 0, 0, 736, 737, 794, 738, 739, 740, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 0, 330, 331, 0, 0, 0,
	0, 0, 741, 0, 0, 0, 332, 0, 333, 334,
	335, 0, 336, 337, 338, 339, 340, 341, 342, 742,
	743, 0, 343, 744, 344, 745, 0, 746, 345, 346,
	347, 348, 349, 350, 351, 0, 0, 0, 352, 747,
	748, 749, 0, 353, 354, 750, 0, 0, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 0,
	380, 381, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 386, 387, 0, 388, 390, 751, 752,
	0, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	753, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 754, 755, 424, 0, 0, 0, 0,
	0, 0, 0, 425, 426, 427, 756, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 0,
	434, 435, 436, 757, 758, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 759, 0, 760, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 4034, 762,
	763, 549, 0, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 0, 0, 0, 0, 463, 464, 465, 0,
	0, 764, 466, 550, 467, 765, 766, 0, 767, 0,
	468, 469, 472, 0, 768, 0, 471, 473, 474, 0,
	475, 0, 0, 0, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 485, 484, 0, 487, 769, 486, 0,
	488, 489, 0, 0, 490, 491, 492, 493, 494, 495,
	498, 0, 0, 496, 497, 499, 500, 0, 501, 502,
	504, 507, 503, 505, 506, 508, 521, 522, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	524, 0, 523, 0, 525, 526, 527, 528, 529, 536,
	538, 539, 534, 535, 537, 540, 541, 543, 531, 532,
	533, 0, 542, 530, 0, 0, 0, 544, 545, 546,
	547, 0, 770, 548, 771, 551, 552, 0, 0, 553,
	0, 554, 0, 0, 556, 557, 558, 0, 0, 559,
	560, 772, 0, 561, 0, 773, 562, 563, 555, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 0,
	574, 575, 774, 576, 577, 578, 775, 579, 580, 581,
	776, 582, 777, 583, 584, 0, 585, 586, 587, 0,
	588, 589, 590, 591, 592, 593, 594, 595, 778, 596,
	597, 599, 598, 600, 0, 601, 0, 602, 603, 604,
	0, 0, 0, 0, 0, 605, 606, 608, 0, 609,
	610, 611, 612, 607, 613, 614, 615, 616, 617, 618,
	0, 620, 621, 619, 622, 623, 0, 624, 625, 626,
	627, 628, 779, 629, 0, 630, 631, 639, 640, 641,
	632, 633, 635, 642, 634, 643, 644, 645, 646, 648,
	647, 0, 650, 651, 649, 652, 653, 654, 0, 655,
	780, 656, 636, 637, 657, 658, 0, 659, 660, 661,
	662, 663, 664, 665, 781, 0, 666, 0, 667, 668,
	669, 670, 671, 672, 674, 638, 675, 680, 681, 782,
	676, 677, 678, 679, 783, 683, 684, 685, 686, 0,
	687, 688, 0, 682, 673, 0, 689, 690, 691, 692,
	693, 694, 0, 695, 696, 0, 697, 784, 785, 786,
	787, 0, 709, 0, 698, 700, 701, 702, 703, 788,
	704, 789, 0, 705, 706, 707, 708, 699, 710, 711,
	0, 0, 712, 713, 714, 716, 718, 719, 715, 717,
	720, 0, 721, 0, 0, 722, 723, 724, 790, 791,
	792, 0, 726, 727, 725, 728, 729, 732, 730, 731,
	793, 733, 470, 734, 735, 316, 0, 0, 0, 736,
	737, 794, 738, 739, 740, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 0, 0, 0, 741, 0,
	0, 0, 332, 0, 333, 334, 335, 0, 336, 337,
	338, 339, 340, 341, 342, 742, 743, 0, 343, 744,
	344, 745, 0, 746, 345, 346, 347, 348, 349, 350,
	351, 0, 0, 0, 352, 747, 748, 749, 0, 353,
	354, 750, 0, 0, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 0, 380, 381, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 386,
	387, 0, 388, 390, 751, 752, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 753, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 754,
	755, 424, 0, 0, 0, 0, 0, 0, 0, 425,
	426, 427, 756, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 0, 434, 435, 436, 757,
	758, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 759, 0, 760, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 3977, 762, 763, 549, 0, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 0, 463, 464, 465, 0, 0, 764, 466, 550,
	467, 765, 766, 0, 767, 0, 468, 469, 472, 0,
	768, 0, 471, 473, 474, 0, 475, 0, 0, 0,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 485,
	484, 0, 487, 769, 486, 0, 488, 489, 0, 0,
	490, 491, 492, 493, 494, 495, 498, 0, 0, 496,
	497, 499, 500, 0, 501, 502, 504, 507, 503, 505,
	506, 508, 521, 522, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 524, 0, 523, 0,
	525, 526, 527, 528, 529, 536, 538, 539, 534, 535,
	537, 540, 541, 543, 531, 532, 533, 0, 542, 530,
	0, 0, 0, 544, 545, 546, 547, 0, 770, 548,
	771, 551, 552, 0, 0, 553, 0, 554, 0, 0,
	556, 557, 558, 0, 0, 559, 560, 772, 0, 561,
	0, 773, 562, 563, 555, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 0, 574, 575, 774, 576,
	577, 578, 775, 579, 580, 581, 776, 582, 777, 583,
	584, 0, 585, 586, 587, 0, 588, 589, 590, 591,
	592, 593, 594, 595, 778, 596, 597, 599, 598, 600,
	0, 601, 0, 602, 603, 604, 0, 0, 0, 0,
	0, 605, 606, 608, 0, 609, 610, 611, 612, 607,
	613, 614, 615, 616, 617, 618, 0, 620, 621, 619,
	622, 623, 0, 624, 625, 626, 627, 628, 779, 629,
	0, 630, 631, 639, 640, 641, 632, 633, 635, 642,
	634, 643, 644, 645, 646, 648, 647, 0, 650, 651,
	649, 652, 653, 654, 0, 655, 780, 656, 636, 637,
	657, 658, 0, 659, 660, 661, 662, 663, 664, 665,
	781, 0, 666, 0, 667, 668, 669, 670, 671, 672,
	674, 638, 675, 680, 681, 782, 676, 677, 678, 679,
	783, 683, 684, 685, 686, 0, 687, 688, 0, 682,
	673, 0, 689, 690, 691, 692, 693, 694, 0, 695,
	696, 0, 697, 784, 785, 786, 787, 0, 709, 0,
	698, 700, 701, 702, 703, 788, 704, 789, 0, 705,
	706, 707, 708, 699, 710, 711, 0, 0, 712, 713,
	714, 716, 718, 719, 715, 717, 720, 0, 721, 0,
	0, 722, 723, 724, 790, 791, 792, 0, 726, 727,
	725, 728, 729, 732, 730, 731, 793, 733, 470, 734,
	735, 316, 0, 0, 0, 736, 737, 794, 738, 739,
	740, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	325, 324, 326, 327, 328, 329, 0, 330, 331, 0,
	0, 0, 0, 0, 741, 0, 0, 0, 332, 0,
	333, 334, 335, 0, 336, 337, 338, 339, 340, 341,
	342, 742, 743, 0, 343, 744, 344, 745, 0, 746,
	345, 346, 347, 348, 349, 350, 351, 0, 0, 0,
	352, 747, 748, 749, 0, 353, 354, 750, 0, 0,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 0, 380, 381, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 386, 387, 0, 388, 390,
	751, 752, 0, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 753, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 754, 755, 424, 0, 0,
	0, 0, 0, 0, 0, 425, 426, 427, 756, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 0, 434, 435, 436, 757, 758, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 759, 0,
	760, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	3975, 762, 763, 549, 0, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 0, 0, 0, 0, 463, 464,
	465, 0, 0, 764, 466, 550, 467, 765, 766, 0,
	767, 0, 468, 469, 472, 0, 768, 0, 471, 473,
	474, 0, 475, 0, 0, 0, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 485, 484, 0, 487, 769,
	486, 0, 488, 489, 0, 0, 490, 491, 492, 493,
	494, 495, 498, 0, 0, 496, 497, 499, 500, 0,
	501, 502, 504, 507, 503, 505, 506, 508, 521, 522,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 524, 0, 523, 0, 525, 526, 527, 528,
	529, 536, 538, 539, 534, 535, 537, 540, 541, 543,
	531, 532, 533, 0, 542, 530, 0, 0, 0, 544,
	545, 546, 547, 0, 770, 548, 771, 551, 552, 0,
	0, 553, 0, 554, 0, 0, 556, 557, 558, 0,
	0, 559, 560, 772, 0, 561, 0, 773, 562, 563,
	555, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 0, 574, 575, 774, 576, 577, 578, 775, 579,
	580, 581, 776, 582, 777, 583, 584, 0, 585, 586,
	587, 0, 588, 589, 590, 591, 592, 593, 594, 595,
	778, 596, 597, 599, 598, 600, 0, 601, 0, 602,
	603, 604, 0, 0, 0, 0, 0, 605, 606, 608,
	0, 609, 610, 611, 612, 607, 613, 614, 615, 616,
	617, 618, 0, 620, 621, 619, 622, 623, 0, 624,
	625, 626, 627, 628, 779, 629, 0, 630, 631, 639,
	640, 641, 632, 633, 635, 642, 634, 643, 644, 645,
	646, 648, 647, 0, 650, 651, 649, 652, 653, 654,
	0, 655, 780, 656, 636, 637, 657, 658, 0, 659,
	660, 661, 662, 663, 664, 665, 781, 0, 666, 0,
	667, 668, 669, 670, 671, 672, 674, 638, 675, 680,
	681, 782, 676, 677, 678, 679, 783, 683, 684, 685,
	686, 0, 687, 688, 0, 682, 673, 0, 689, 690,
	691, 692, 693, 694, 0, 695, 696, 0, 697, 784,
	785, 786, 787, 0, 709, 0, 698, 700, 701, 702,
	703, 788, 704, 789, 0, 705, 706, 707, 708, 699,
	710, 711, 0, 0, 712, 713, 714, 716, 718, 719,
	715, 717, 720, 0, 721, 0, 0, 722, 723, 724,
	790, 791, 792, 0, 726, 727, 725, 728, 729, 732,
	730, 731, 793, 733, 470, 734, 735, 316, 0, 0,
	0, 736, 737, 794, 738, 739, 740, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 0, 0, 0,
	741, 0, 0, 0, 332, 0, 333, 334, 335, 0,
	336, 337, 338, 339, 340, 341, 342, 742, 743, 0,
	343, 744, 344, 745, 0, 746, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 747, 748, 749,
	0, 353, 354, 750, 0, 0, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 0, 380, 381,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 386, 387, 0, 388, 390, 751, 752, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 753, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 754, 755, 424, 0, 0, 0, 0, 0, 0,
	0, 425, 426, 427, 756, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 0, 434, 435,
	436, 757, 758, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 759, 0, 760, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 3963, 762, 763, 549,
	0, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 0, 463, 464, 465, 0, 0, 764,
	466, 550, 467, 765, 766, 0, 767, 0, 468, 469,
	472, 0, 768, 0, 471, 473, 474, 0, 475, 0,
	0, 0, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 485, 484, 0, 487, 769, 486, 0, 488, 489,
	0, 0, 490, 491, 492, 493, 494, 495, 498, 0,
	0, 496, 497, 499, 500, 0, 501, 502, 504, 507,
	503, 505, 506, 508, 521, 522, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 524, 0,
	523, 0, 525, 526, 527, 528, 529, 536, 538, 539,
	534, 535, 537, 540, 541, 543, 531, 532, 533, 0,
	542, 530, 0, 0, 0, 544, 545, 546, 547, 0,
	770, 548, 771, 551, 552, 0, 0, 553, 0, 554,
	0, 0, 556, 557, 558, 0, 0, 559, 560, 772,
	0, 561, 0, 773, 562, 563, 555, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 0, 574, 575,
	774, 576, 577, 578, 775, 579, 580, 581, 776, 582,
	777, 583, 584, 0, 585, 586, 587, 0, 588, 589,
	590, 591, 592, 593, 594, 595, 778, 596, 597, 599,
	598, 600, 0, 601, 0, 602, 603, 604, 0, 0,
	0, 0, 0, 605, 606, 608, 0, 609, 610, 611,
	612, 607, 613, 614, 615, 616, 617, 618, 0, 620,
	621, 619, 622, 623, 0, 624, 625, 626, 627, 628,
	779, 629, 0, 630, 631, 639, 640, 641, 632, 633,
	635, 642, 634, 643, 644, 645, 646, 648, 647, 0,
	650, 651, 649, 652, 653, 654, 0, 655, 780, 656,
	636, 637, 657, 658, 0, 659, 660, 661, 662, 663,
	664, 665, 781, 0, 666, 0, 667, 668, 669, 670,
	671, 672, 674, 638, 675, 680, 681, 782, 676, 677,
	678, 679, 783, 683, 684, 685, 686, 0, 687, 688,
	0, 682, 673, 0, 689, 690, 691, 692, 693, 694,
	0, 695, 696, 0, 697, 784, 785, 786, 787, 0,
	709, 0, 698, 700, 701, 702, 703, 788, 704, 789,
	0, 705, 706, 707, 708, 699, 710, 711, 0, 0,
	712, 713, 714, 716, 718, 719, 715, 717, 720, 0,
	721, 0, 0, 722, 723, 724, 790, 791, 792, 0,
	726, 727, 725, 728, 729, 732, 730, 731, 793, 733,
	470, 734, 735, 316, 0, 0, 0, 736, 737, 794,
	738, 739, 740, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 0, 0, 0, 741, 0, 0, 0,
	332, 0, 333, 334, 335, 0, 336, 337, 338, 339,
	340, 341, 342, 742, 743, 0, 343, 744, 344, 745,
	0, 746, 345, 346, 347, 348, 349, 350, 351, 0,
	0, 0, 352, 747, 748, 749, 0, 353, 354, 750,
	0, 0, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 0, 380, 381, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 386, 387, 0,
	388, 390, 751, 752, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 753, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 754, 755, 424,
	0, 0, 0, 0, 0, 0, 0, 425, 426, 427,
	756, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 0, 434, 435, 436, 757, 758, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	759, 0, 760, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 3960, 762, 763, 549, 0, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 0,
	463, 464, 465, 0, 0, 764, 466, 550, 467, 765,
	766, 0, 767, 0, 468, 469, 472, 0, 768, 0,
	471, 473, 474, 0, 475, 0, 0, 0, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 485, 484, 0,
	487, 769, 486, 0, 488, 489, 0, 0, 490, 491,
	492, 493, 494, 495, 498, 0, 0, 496, 497, 499,
	500, 0, 501, 502, 504, 507, 503, 505, 506, 508,
	521, 522, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 524, 0, 523, 0, 525, 526,
	527, 528, 529, 536, 538, 539, 534, 535, 537, 540,
	541, 543, 531, 532, 533, 0, 542, 530, 0, 0,
	0, 544, 545, 546, 547, 0, 770, 548, 771, 551,
	552, 0, 0, 553, 0, 554, 0, 0, 556, 557,
	558, 0, 0, 559, 560, 772, 0, 561, 0, 773,
	562, 563, 555, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 0, 574, 575, 774, 576, 577, 578,
	775, 579, 580, 581, 776, 582, 777, 583, 584, 0,
	585, 586, 587, 0, 588, 589, 590, 591, 592, 593,
	594, 595, 778, 596, 597, 599, 598, 600, 0, 601,
	0, 602, 603, 604, 0, 0, 0, 0, 0, 605,
	606, 608, 0, 609, 610, 611, 612, 607, 613, 614,
	615, 616, 617, 618, 0, 620, 621, 619, 622, 623,
	0, 624, 625, 626, 627, 628, 779, 629, 0, 630,
	631, 639, 640, 641, 632, 633, 635, 642, 634, 643,
	644, 645, 646, 648, 647, 0, 650, 651, 649, 652,
	653, 654, 0, 655, 780, 656, 636, 637, 657, 658,
	0, 659, 660, 661, 662, 663, 664, 665, 781, 0,
	666, 0, 667, 668, 669, 670, 671, 672, 674, 638,
	675, 680, 681, 782, 676, 677, 678, 679, 783, 683,
	684, 685, 686, 0, 687, 688, 0, 682, 673, 0,
	689, 690, 691, 692, 693, 694, 0, 695, 696, 0,
	697, 784, 785, 786, 787, 0, 709, 0, 698, 700,
	701, 702, 703, 788, 704, 789, 0, 705, 706, 707,
	708, 699, 710, 711, 0, 0, 712, 713, 714, 716,
	718, 719, 715, 717, 720, 0, 721, 0, 0, 722,
	723, 724, 790, 791, 792, 0, 726, 727, 725, 728,
	729, 732, 730, 731, 793, 733, 470, 734, 735, 316,
	0, 0, 0, 736, 737, 794, 738, 739, 740, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 0, 330, 331, 0, 0, 0,
	0, 0, 741, 0, 0, 0, 332, 0, 333, 334,
	335, 0, 336, 337, 338, 339, 340, 341, 342, 742,
	743, 0, 343, 744, 344, 745, 0, 746, 345, 346,
	347, 348, 349, 350, 351, 0, 0, 0, 352, 747,
	748, 749, 0, 353, 354, 750, 0, 0, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 0,
	380, 381, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 386, 387, 0, 388, 390, 751, 752,
	0, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	753, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 754, 755, 424, 0, 0, 0, 0,
	0, 0, 0, 425, 426, 427, 756, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 0,
	434, 435, 436, 757, 758, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 759, 0, 760, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 3526, 762,
	763, 549, 0, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 0, 0, 0, 0, 463, 464, 465, 0,
	0, 764, 466, 550, 467, 765, 766, 0, 767, 0,
	468, 469, 472, 0, 768, 0, 471, 473, 474, 0,
	475, 0, 0, 0, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 485, 484, 0, 487, 769, 486, 0,
	488, 489, 0, 0, 490, 491, 492, 493, 494, 495,
	498, 0, 0, 496, 497, 499, 500, 0, 501, 502,
	504, 507, 503, 505, 506, 508, 521, 522, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	524, 0, 523, 0, 525, 526, 527, 528, 529, 536,
	538, 539, 534, 535, 537, 540, 541, 543, 531, 532,
	533, 0, 542, 530, 0, 0, 0, 544, 545, 546,
	547, 0, 770, 548, 771, 551, 552, 0, 0, 553,
	0, 554, 0, 0, 556, 557, 558, 0, 0, 559,
	560, 772, 0, 561, 0, 773, 562, 563, 555, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 0,
	574, 575, 774, 576, 577, 578, 775, 579, 580, 581,
	776, 582, 777, 583, 584, 0, 585, 586, 587, 0,
	588, 589, 590, 591, 592, 593, 594, 595, 778, 596,
	597, 599, 598, 600, 0, 601, 0, 602, 603, 604,
	0, 0, 0, 0, 0, 605, 606, 608, 0, 609,
	610, 611, 612, 607, 613, 614, 615, 616, 617, 618,
	0, 620, 621, 619, 622, 623, 0, 624, 625, 626,
	627, 628, 779, 629, 0, 630, 631, 639, 640, 641,
	632, 633, 635, 642, 634, 643, 644, 645, 646, 648,
	647, 0, 650, 651, 649, 652, 653, 654, 0, 655,
	780, 656, 636, 637, 657, 658, 0, 659, 660, 661,
	662, 663, 664, 665, 781, 0, 666, 0, 667, 668,
	669, 670, 671, 672, 674, 638, 675, 680, 681, 782,
	676, 677, 678, 679, 783, 683, 684, 685, 686, 0,
	687, 688, 0, 682, 673, 0, 689, 690, 691, 692,
	693, 694, 0, 695, 696, 0, 697, 784, 785, 786,
	787, 0, 709, 0, 698, 700, 701, 702, 703, 788,
	704, 789, 0, 705, 706, 707, 708, 699, 710, 711,
	0, 0, 712, 713, 714, 716, 718, 719, 715, 717,
	720, 0, 721, 0, 0, 722, 723, 724, 790, 791,
	792, 0, 726, 727, 725, 728, 729, 732, 730, 731,
	793, 733, 470, 734, 735, 316, 0, 0, 0, 736,
	737, 794, 738, 739, 740, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 0, 0, 0, 741, 0,
	0, 0, 332, 0, 333, 334, 335, 0, 336, 337,
	338, 339, 340, 341, 342, 742, 743, 0, 343, 744,
	344, 745, 0, 746, 345, 346, 347, 348, 349, 350,
	351, 0, 0, 0, 352, 747, 748, 749, 0, 353,
	354, 750, 0, 0, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 0, 380, 381, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 386,
	387, 0, 388, 390, 751, 752, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 753, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 754,
	755, 424, 0, 0, 0, 0, 0, 0, 0, 425,
	426, 427, 756, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 0, 434, 435, 436, 757,
	758, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 759, 0, 760, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 761, 762, 763, 549, 0, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 0, 463, 464, 465, 0, 0, 764, 466, 550,
	467, 765, 766, 0, 767, 0, 468, 469, 472, 0,
	768, 0, 471, 473, 474, 0, 475, 0, 0, 0,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 485,
	484, 0, 487, 769, 486, 0, 488, 489, 0, 0,
	490, 491, 492, 493, 494, 495, 498, 0, 0, 496,
	497, 499, 500, 0, 501, 502, 504, 507, 503, 505,
	506, 508, 521, 522, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 524, 0, 523, 0,
	525, 526, 527, 528, 529, 536, 538, 539, 534, 535,
	537, 540, 541, 543, 531, 532, 533, 0, 542, 530,
	0, 0, 0, 544, 545, 546, 547, 0, 770, 548,
	771, 551, 552, 0, 0, 553, 0, 554, 0, 0,
	556, 557, 558, 0, 0, 559, 560, 772, 0, 561,
	0, 773, 562, 563, 555, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 0, 574, 575, 774, 576,
	577, 578, 775, 579, 580, 581, 776, 582, 777, 583,
	584, 0, 585, 586, 587, 0, 588, 589, 590, 591,
	592, 593, 594, 595, 778, 596, 597, 599, 598, 600,
	0, 601, 0, 602, 603, 604, 0, 0, 0, 0,
	0, 605, 606, 608, 0, 609, 610, 611, 612, 607,
	613, 614, 615, 616, 617, 618, 0, 620, 621, 619,
	622, 623, 0, 624, 625, 626, 627, 628, 779, 629,
	0, 630, 631, 870, 640, 641, 632, 633, 635, 642,
	634, 643, 644, 645, 646, 648, 647, 0, 650, 651,
	649, 652, 653, 654, 0, 655, 780, 656, 636, 637,
	657, 658, 0, 659, 660, 661, 662, 663, 664, 665,
	781, 0, 666, 0, 667, 668, 669, 670, 671, 672,
	674, 638, 675, 680, 681, 782, 676, 677, 678, 679,
	783, 683, 684, 685, 686, 0, 687, 688, 0, 682,
	673, 0, 689, 690, 691, 692, 693, 694, 0, 695,
	696, 0, 697, 784, 785, 786, 787, 0, 709, 0,
	698, 700, 701, 702, 703, 788, 704, 789, 0, 705,
	706, 707, 708, 699, 710, 711, 0, 0, 712, 713,
	714, 716, 718, 719, 715, 717, 720, 0, 721, 0,
	0, 722, 723, 724, 790, 791, 792, 0, 726, 727,
	725, 728, 729, 732, 730, 731, 793, 733, 470, 734,
	735, 316, 0, 0, 0, 736, 737, 794, 738, 739,
	740, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	325, 324, 326, 327, 328, 329, 0, 330, 331, 0,
	0, 0, 0, 0, 741, 0, 2636, 0, 332, 0,
	333, 334, 335, 0, 336, 337, 338, 339, 340, 341,
	342, 742, 743, 0, 343, 744, 344, 745, 0, 746,
	345, 346, 347, 348, 349, 350, 351, 0, 0, 0,
	352, 747, 748, 749, 0, 353, 354, 750, 0, 0,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 0, 380, 381, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 386, 387, 0, 388, 390,
	751, 752, 0, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 753, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 754, 755, 424, 0, 0,
	0, 0, 0, 0, 0, 425, 426, 427, 756, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 0, 434, 435, 436, 757, 758, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 759, 0,
	760, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	761, 762, 763, 549, 0, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 0, 0, 0, 0, 463, 464,
	465, 0, 0, 764, 466, 550, 467, 765, 766, 0,
	767, 0, 468, 469, 472, 0, 768, 0, 471, 473,
	474, 0, 475, 0, 0, 0, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 485, 484, 0, 487, 769,
	486, 0, 488, 489, 0, 0, 490, 491, 492, 493,
	494, 495, 498, 0, 0, 496, 497, 499, 500, 0,
	501, 502, 504, 507, 503, 505, 506, 508, 521, 522,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 524, 0, 523, 0, 525, 526, 527, 528,
	529, 536, 538, 539, 534, 535, 537, 540, 541, 543,
	531, 532, 533, 0, 542, 530, 0, 0, 0, 544,
	545, 546, 547, 0, 770, 548, 771, 551, 552, 0,
	0, 553, 0, 554, 0, 0, 556, 557, 558, 0,
	0, 559, 560, 772, 0, 561, 0, 773, 562, 563,
	555, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 0, 574, 575, 774, 576, 577, 578, 775, 579,
	580, 581, 776, 582, 777, 583, 584, 0, 585, 586,
	587, 0, 588, 589, 590, 591, 592, 593, 594, 595,
	778, 596, 597, 599, 598, 600, 0, 601, 0, 602,
	603, 604, 0, 0, 0, 0, 0, 605, 606, 608,
	0, 609, 610, 611, 612, 607, 613, 614, 615, 616,
	617, 618, 0, 620, 621, 619, 622, 623, 0, 624,
	625, 626, 627, 628, 779, 629, 0, 630, 631, 639,
	640, 641, 632, 633, 635, 642, 634, 643, 644, 645,
	646, 648, 647, 0, 650, 651, 649, 652, 653, 654,
	0, 0, 780, 656, 636, 637, 657, 658, 0, 659,
	660, 661, 662, 663, 664, 665, 781, 0, 666, 0,
	667, 668, 669, 670, 671, 672, 674, 638, 675, 680,
	681, 782, 676, 677, 678, 679, 783, 683, 684, 685,
	686, 0, 687, 688, 0, 682, 673, 0, 689, 690,
	691, 692, 693, 694, 0, 695, 696, 0, 697, 784,
	785, 786, 787, 0, 709, 0, 698, 700, 701, 702,
	703, 788, 704, 789, 0, 705, 706, 707, 708, 699,
	710, 711, 0, 0, 712, 713, 714, 716, 718, 719,
	715, 717, 720, 0, 721, 0, 0, 722, 723, 724,
	790, 791, 792, 0, 726, 727, 725, 728, 729, 732,
	730, 731, 793, 733, 470, 734, 735, 316, 0, 0,
	0, 736, 737, 794, 738, 739, 740, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 0, 0, 0,
	741, 0, 0, 0, 332, 0, 333, 334, 335, 0,
	336, 337, 338, 339, 340, 341, 342, 742, 743, 0,
	343, 744, 344, 745, 0, 746, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 747, 748, 749,
	0, 353, 354, 750, 0, 0, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 0, 380, 381,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 386, 387, 0, 388, 390, 751, 752, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 753, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 754, 755, 424, 0, 0, 0, 0, 0, 0,
	0, 425, 426, 427, 756, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 0, 434, 435,
	436, 757, 758, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 759, 0, 760, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 1468, 762, 763, 549,
	0, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 0, 463, 464, 465, 0, 0, 764,
	466, 550, 467, 765, 766, 0, 767, 0, 468, 469,
	472, 0, 768, 0, 471, 473, 474, 0, 475, 0,
	0, 0, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 485, 484, 0, 487, 769, 486, 0, 488, 489,
	0, 0, 490, 491, 492, 493, 494, 495, 498, 0,
	0, 496, 497, 499, 500, 0, 501, 502, 504, 507,
	503, 505, 506, 508, 521, 522, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 524, 0,
	523, 0, 525, 526, 527, 528, 529, 536, 538, 539,
	534, 535, 537, 540, 541, 543, 531, 532, 533, 0,
	542, 530, 0, 0, 0, 544, 545, 546, 547, 0,
	770, 548, 771, 551, 552, 0, 0, 553, 0, 554,
	0, 0, 556, 557, 558, 0, 0, 559, 560, 772,
	0, 561, 0, 773, 562, 563, 555, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 0, 574, 575,
	774, 576, 577, 578, 775, 579, 580, 581, 776, 582,
	777, 583, 584, 0, 585, 586, 587, 0, 588, 589,
	590, 591, 592, 593, 594, 595, 778, 596, 597, 599,
	598, 600, 0, 601, 0, 602, 603, 604, 0, 0,
	0, 0, 0, 605, 606, 608, 0, 609, 610, 611,
	612, 607, 613, 614, 615, 616, 617, 618, 0, 620,
	621, 619, 622, 623, 0, 624, 625, 626, 627, 628,
	779, 629, 0, 630, 631, 639, 640, 641, 632, 633,
	635, 642, 634, 643, 644, 645, 646, 648, 647, 0,
	650, 651, 649, 652, 653, 654, 0, 655, 780, 656,
	636, 637, 657, 658, 0, 659, 660, 661, 662, 663,
	664, 665, 781, 0, 666, 0, 667, 668, 669, 670,
	671, 672, 674, 638, 675, 680, 681, 782, 676, 677,
	678, 679, 783, 683, 684, 685, 686, 0, 687, 688,
	0, 682, 673, 0, 689, 690, 691, 692, 693, 694,
	0, 695, 696, 0, 697, 784, 785, 786, 787, 0,
	709, 0, 698, 700, 701, 702, 703, 788, 704, 789,
	0, 705, 706, 707, 708, 699, 710, 711, 0, 0,
	712, 713, 714, 716, 718, 719, 715, 717, 720, 0,
	721, 0, 0, 722, 723, 724, 790, 791, 792, 0,
	726, 727, 725, 728, 729, 732, 730, 731, 793, 733,
	470, 734, 735, 316, 0, 0, 0, 736, 737, 794,
	738, 739, 740, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 0, 0, 0, 741, 0, 0, 0,
	332, 0, 333, 334, 335, 0, 336, 337, 338, 339,
	340, 341, 342, 742, 743, 0, 343, 744, 344, 745,
	0, 746, 345, 346, 347, 348, 349, 350, 351, 0,
	0, 0, 352, 747, 748, 749, 0, 353, 354, 750,
	0, 0, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 0, 380, 381, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 386, 387, 0,
	388, 390, 751, 752, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 753, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 754, 755, 424,
	0, 0, 0, 0, 0, 0, 0, 425, 426, 427,
	756, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 0, 434, 435, 436, 757, 758, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	759, 0, 760, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 761, 762, 763, 549, 0, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 0,
	463, 464, 465, 0, 0, 764, 466, 550, 467, 765,
	766, 0, 767, 0, 468, 469, 472, 0, 768, 0,
	471, 473, 474, 0, 475, 0, 0, 0, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 485, 484, 0,
	487, 769, 486, 0, 488, 489, 0, 0, 490, 491,
	492, 493, 494, 495, 498, 0, 0, 496, 497, 499,
	500, 0, 501, 502, 504, 507, 503, 505, 506, 508,
	521, 522, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 524, 0, 523, 0, 525, 526,
	527, 528, 529, 536, 538, 539, 534, 535, 537, 540,
	541, 543, 531, 532, 533, 0, 542, 530, 0, 0,
	0, 544, 545, 546, 547, 0, 770, 548, 771, 551,
	552, 0, 0, 553, 0, 554, 0, 0, 556, 557,
	558, 0, 0, 559, 560, 772, 0, 561, 0, 773,
	562, 563, 555, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 0, 574, 575, 774, 576, 577, 578,
	775, 579, 580, 581, 776, 582, 777, 583, 584, 0,
	585, 586, 587, 0, 588, 589, 590, 591, 592, 593,
	594, 595, 778, 596, 597, 1388, 598, 600, 0, 601,
	0, 602, 603, 604, 0, 0, 0, 0, 0, 605,
	606, 608, 0, 609, 610, 611, 612, 607, 613, 614,
	615, 616, 617, 618, 0, 620, 621, 619, 622, 623,
	0, 624, 625, 626, 627, 628, 779, 629, 0, 630,
	631, 639, 640, 641, 632, 633, 635, 642, 634, 643,
	644, 645, 646, 648, 647, 0, 650, 651, 649, 652,
	653, 654, 0, 655, 780, 656, 636, 637, 657, 658,
	0, 659, 660, 661, 662, 663, 664, 665, 781, 0,
	666, 0, 667, 668, 669, 670, 671, 672, 674, 638,
	675, 680, 681, 782, 676, 677, 678, 679, 783, 683,
	684, 685, 686, 0, 687, 688, 0, 682, 673, 0,
	689, 690, 691, 692, 693, 694, 0, 695, 696, 0,
	697, 784, 785, 786, 787, 0, 709, 0, 698, 700,
	701, 702, 703, 788, 704, 789, 0, 705, 706, 707,
	708, 699, 710, 711, 0, 0, 712, 713, 714, 716,
	718, 719, 715, 717, 720, 0, 721, 0, 0, 722,
	723, 724, 790, 791, 792, 0, 726, 727, 725, 728,
	729, 732, 730, 731, 793, 733, 470, 734, 735, 316,
	0, 0, 0, 736, 737, 794, 738, 739, 740, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 0, 330, 331, 0, 0, 0,
	0, 0, 741, 0, 0, 0, 332, 0, 333, 334,
	335, 0, 336, 337, 338, 339, 340, 341, 342, 742,
	743, 0, 343, 744, 344, 745, 0, 746, 345, 346,
	347, 348, 349, 350, 351, 0, 0, 0, 352, 747,
	748, 749, 0, 353, 354, 750, 0, 0, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 0,
	380, 381, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 386, 387, 0, 388, 390, 751, 752,
	0, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	753, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 754, 755, 424, 0, 0, 0, 0,
	0, 0, 0, 425, 426, 427, 756, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 0,
	434, 435, 436, 757, 758, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 759, 0, 760, 0,
	0, 448, 449, 450, 451, 452, 453, 454, 761, 762,
	763, 549, 0, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 0, 0, 0, 0, 463, 464, 465, 0,
	0, 764, 466, 550, 467, 765, 766, 0, 767, 0,
	468, 469, 472, 0, 768, 0, 471, 473, 474, 0,
	475, 0, 0, 0, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 485, 484, 0, 487, 769, 486, 0,
	488, 489, 0, 0, 490, 491, 492, 493, 494, 495,
	498, 0, 0, 496, 497, 499, 500, 0, 501, 502,
	504, 507, 503, 505, 506, 508, 521, 522, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	524, 0, 523, 0, 525, 526, 527, 528, 529, 536,
	538, 539, 534, 535, 537, 540, 541, 543, 531, 532,
	533, 0, 542, 530, 0, 0, 0, 544, 545, 546,
	547, 0, 770, 548, 771, 551, 552, 0, 0, 553,
	0, 554, 0, 0, 556, 557, 558, 0, 0, 559,
	560, 772, 0, 561, 0, 773, 562, 563, 555, 564,
	565, 566, 0, 568, 569, 570, 571, 572, 573, 0,
	574, 575, 774, 576, 577, 578, 775, 579, 580, 581,
	776, 582, 777, 583, 584, 0, 585, 586, 587, 0,
	588, 589, 590, 591, 592, 0, 594, 595, 778, 596,
	597, 599, 598, 600, 0, 601, 0, 602, 603, 604,
	0, 0, 0, 0, 0, 605, 606, 608, 0, 609,
	610, 611, 612, 607, 613, 614, 615, 616, 617, 618,
	0, 620, 621, 619, 622, 623, 0, 624, 625, 626,
	627, 628, 779, 0, 0, 630, 631, 639, 640, 641,
	632, 633, 635, 642, 634, 643, 644, 645, 646, 648,
	647, 0, 650, 651, 649, 652, 653, 654, 0, 655,
	780, 656, 636, 637, 657, 658, 0, 659, 660, 661,
	662, 663, 664, 665, 781, 0, 666, 0, 667, 668,
	669, 670, 671, 672, 674, 638, 675, 680, 681, 782,
	676, 677, 678, 679, 783, 683, 684, 685, 686, 0,
	687, 688, 0, 682, 673, 0, 689, 690, 691, 692,
	693, 694, 0, 695, 696, 0, 697, 784, 785, 786,
	787, 0, 709, 0, 698, 700, 701, 702, 703, 788,
	704, 789, 0, 705, 706, 707, 708, 699, 710, 711,
	0, 0, 712, 713, 714, 716, 718, 719, 715, 717,
	720, 0, 721, 0, 0, 722, 723, 724, 790, 791,
	792, 0, 726, 727, 725, 728, 729, 732, 730, 731,
	793, 733, 470, 734, 735, 1809, 0, 1514, 0, 736,
	737, 794, 738, 739, 740, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 332, 0, 333, 334, 335, 0,
	336, 337, 338, 339, 340, 341, 342, 0, 0, 0,
	343, 0, 344, 0, 0, 0, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 0, 0, 0,
	0, 353, 354, 0, 0, 0, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 0, 380, 381,
	382, 0, 0, 0, 0, 0, 0, 1516, 383, 384,
	385, 386, 387, 0, 388, 390, 0, 0, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 0, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 0, 0, 424, 0, 0, 0, 0, 0, 0,
	0, 425, 426, 427, 0, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 0, 434, 435,
	436, 0, 0, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 0, 0, 0, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 1808, 0, 0, 549,
	0, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 0, 463, 464, 465, 0, 0, 0,
	466, 550, 467, 0, 0, 0, 0, 0, 468, 469,
	472, 0, 0, 0, 471, 473, 474, 0, 475, 0,
	0, 0, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 485, 484, 0, 487, 0, 486, 0, 488, 489,
	0, 0, 490, 491, 492, 493, 494, 495, 498, 0,
	0, 496, 497, 499, 500, 0, 501, 502, 504, 507,
	503, 505, 506, 508, 521, 522, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 524, 0,
	523, 0, 525, 526, 527, 528, 529, 536, 538, 539,
	534, 535, 537, 540, 541, 543, 531, 532, 533, 0,
	542, 530, 0, 0, 0, 544, 545, 546, 547, 0,
	0, 548, 0, 551, 552, 0, 0, 553, 0, 554,
	0, 0, 556, 557, 558, 0, 0, 559, 560, 0,
	0, 561, 0, 0, 562, 563, 555, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 0, 574, 575,
	0, 576, 577, 578, 0, 579, 580, 581, 0, 582,
	0, 583, 584, 0, 585, 586, 587, 0, 588, 589,
	590, 591, 592, 593, 594, 595, 0, 596, 597, 599,
	598, 600, 0, 601, 0, 602, 603, 604, 0, 0,
	0, 0, 0, 605, 606, 608, 0, 609, 610, 611,
	612, 607, 613, 614, 615, 616, 617, 618, 0, 620,
	621, 619, 622, 623, 0, 624, 625, 626, 627, 628,
	0, 629, 0, 630, 631, 639, 640, 641, 632, 633,
	635, 642, 634, 643, 644, 645, 646, 648, 647, 0,
	650, 651, 649, 652, 653, 654, 1517, 655, 0, 656,
	636, 637, 657, 658, 0, 659, 660, 661, 662, 663,
	664, 665, 0, 0, 666, 0, 667, 668, 669, 670,
	671, 672, 674, 638, 675, 680, 681, 0, 676, 677,
	678, 679, 0, 683, 684, 685, 686, 0, 687, 688,
	0, 682, 673, 0, 689, 690, 691, 692, 693, 694,
	0, 695, 696, 0, 697, 0, 0, 0, 0, 0,
	709, 0, 698, 700, 701, 702, 703, 0, 704, 0,
	0, 705, 706, 707, 708, 699, 710, 711, 0, 0,
	712, 713, 714, 716, 718, 719, 715, 717, 720, 0,
	721, 0, 0, 722, 723, 724, 0, 0, 0, 0,
	726, 727, 725, 728, 729, 732, 730, 731, 0, 733,
	470, 734, 735, 1728, 0, 1514, 0, 736, 737, 0,
	738, 739, 740, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 332, 0, 333, 334, 335, 0, 336, 337,
	338, 339, 340, 341, 342, 0, 0, 0, 343, 0,
	344, 0, 0, 0, 345, 346, 347, 348, 349, 350,
	351, 0, 0, 0, 352, 0, 0, 0, 0, 353,
	354, 0, 0, 0, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 0, 380, 381, 382, 0,
	0, 0, 0, 0, 0, 1516, 383, 384, 385, 386,
	387, 0, 388, 390, 0, 0, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 0, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 0,
	0, 424, 0, 0, 0, 0, 0, 0, 0, 425,
	426, 427, 0, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 0, 434, 435, 436, 0,
	0, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 0, 0, 0, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 1727, 0, 0, 549, 0, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 0, 463, 464, 465, 0, 0, 0, 466, 550,
	467, 0, 0, 0, 0, 0, 468, 469, 472, 0,
	0, 0, 471, 473, 474, 0, 475, 0, 0, 0,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 485,
	484, 0, 487, 0, 486, 0, 488, 489, 0, 0,
	490, 491, 492, 493, 494, 495, 498, 0, 0, 496,
	497, 499, 500, 0, 501, 502, 504, 507, 503, 505,
	506, 508, 521, 522, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 524, 0, 523, 0,
	525, 526, 527, 528, 529, 536, 538, 539, 534, 535,
	537, 540, 541, 543, 531, 532, 533, 0, 542, 530,
	0, 0, 0, 544, 545, 546, 547, 0, 0, 548,
	0, 551, 552, 0, 0, 553, 0, 554, 0, 0,
	556, 557, 558, 0, 0, 559, 560, 0, 0, 561,
	0, 0, 562, 563, 555, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 0, 574, 575, 0, 576,
	577, 578, 0, 579, 580, 581, 0, 582, 0, 583,
	584, 0, 585, 586, 587, 0, 588, 589, 590, 591,
	592, 593, 594, 595, 0, 596, 597, 599, 598, 600,
	0, 601, 0, 602, 603, 604, 0, 0, 0, 0,
	0, 605, 606, 608, 0, 609, 610, 611, 612, 607,
	613, 614, 615, 616, 617, 618, 0, 620, 621, 619,
	622, 623, 0, 624, 625, 626, 627, 628, 0, 629,
	0, 630, 631, 639, 640, 641, 632, 633, 635, 642,
	634, 643, 644, 645, 646, 648, 647, 0, 650, 651,
	649, 652, 653, 654, 1517, 655, 0, 656, 636, 637,
	657, 658, 0, 659, 660, 661, 662, 663, 664, 665,
	0, 0, 666, 0, 667, 668, 669, 670, 671, 672,
	674, 638, 675, 680, 681, 0, 676, 677, 678, 679,
	0, 683, 684, 685, 686, 0, 687, 688, 0, 682,
	673, 0, 689, 690, 691, 692, 693, 694, 0, 695,
	696, 0, 697, 0, 0, 0, 0, 0, 709, 0,
	698, 700, 701, 702, 703, 0, 704, 0, 0, 705,
	706, 707, 708, 699, 710, 711, 0, 0, 712, 713,
	714, 716, 718, 719, 715, 717, 720, 0, 721, 0,
	0, 722, 723, 724, 0, 0, 0, 0, 726, 727,
	725, 728, 729, 732, 730, 731, 0, 733, 470, 734,
	735, 1512, 0, 1514, 0, 736, 737, 0, 738, 739,
	740, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	332, 0, 333, 334, 335, 0, 336, 337, 338, 339,
	340, 341, 342, 0, 0, 0, 343, 0, 344, 0,
	0, 0, 345, 346, 347, 348, 349, 350, 351, 0,
	0, 0, 352, 0, 0, 0, 0, 353, 354, 0,
	0, 0, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 0, 380, 381, 382, 0, 0, 0,
	0, 0, 0, 1516, 383, 384, 385, 386, 387, 0,
	388, 390, 0, 0, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 0, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 0, 0, 424,
	0, 0, 0, 0, 0, 0, 0, 425, 426, 427,
	0, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 0, 434, 435, 436, 0, 0, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	0, 0, 0, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 1511, 0, 0, 549, 0, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 0,
	463, 464, 465, 0, 0, 0, 466, 550, 467, 0,
	0, 0, 0, 0, 468, 469, 472, 0, 0, 0,
	471, 473, 474, 0, 475, 0, 0, 0, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 485, 484, 0,
	487, 0, 486, 0, 488, 489, 0, 0, 490, 491,
	492, 493, 494, 495, 498, 0, 0, 496, 497, 499,
	500, 0, 501, 502, 504, 507, 503, 505, 506, 508,
	521, 522, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 524, 0, 523, 0, 525, 526,
	527, 528, 529, 536, 538, 539, 534, 535, 537, 540,
	541, 543, 531, 532, 533, 0, 542, 530, 0, 0,
	0, 544, 545, 546, 547, 0, 0, 548, 0, 551,
	552, 0, 0, 553, 0, 554, 0, 0, 556, 557,
	558, 0, 0, 559, 560, 0, 0, 561, 0, 0,
	562, 563, 555, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 0, 574, 575, 0, 576, 577, 578,
	0, 579, 580, 581, 0, 582, 0, 583, 584, 0,
	585, 586, 587, 0, 588, 589, 590, 591, 592, 593,
	594, 595, 0, 596, 597, 599, 598, 600, 0, 601,
	0, 602, 603, 604, 0, 0, 0, 0, 0, 605,
	606, 608, 0, 609, 610, 611, 612, 607, 613, 614,
	615, 616, 617, 618, 0, 620, 621, 619, 622, 623,
	0, 624, 625, 626, 627, 628, 0, 629, 0, 630,
	631, 639, 640, 641, 632, 633, 635, 642, 634, 643,
	644, 645, 646, 648, 647, 0, 650, 651, 649, 652,
	653, 654, 1517, 655, 0, 656, 636, 637, 657, 658,
	0, 659, 660, 661, 662, 663, 664, 665, 0, 0,
	666, 0, 667, 668, 669, 670, 671, 672, 674, 638,
	675, 680, 681, 0, 676, 677, 678, 679, 0, 683,
	684, 685, 686, 0, 687, 688, 0, 682, 673, 0,
	689, 690, 691, 692, 693, 694, 0, 695, 696, 0,
	697, 0, 0, 0, 0, 0, 709, 0, 698, 700,
	701, 702, 703, 0, 704, 0, 0, 705, 706, 707,
	708, 699, 710, 711, 0, 0, 712, 713, 714, 716,
	718, 719, 715, 717, 720, 0, 721, 0, 0, 722,
	723, 724, 0, 0, 0, 0, 726, 727, 725, 728,
	729, 732, 730, 731, 0, 733, 470, 734, 735, 2354,
	0, 1514, 0, 736, 737, 0, 738, 739, 740, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	325, 324, 326, 327, 328, 329, 0, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 332, 0,
	333, 334, 335, 0, 336, 337, 338, 339, 340, 341,
	342, 0, 0, 0, 343, 0, 344, 0, 0, 0,
	345, 346, 347, 348, 349, 350, 351, 0, 0, 0,
	352, 0, 0, 0, 0, 353, 354, 0, 0, 0,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 0, 380, 381, 382, 0, 0, 0, 0, 0,
	0, 1516, 383, 384, 385, 386, 387, 0, 388, 390,
	0, 0, 0, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 0, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 0, 0, 424, 0, 0,
	0, 0, 0, 0, 0, 425, 426, 427, 0, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 0, 434, 435, 436, 0, 0, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 0, 0,
	0, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	0, 0, 0, 549, 0, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 0, 0, 0, 0, 463, 464,
	465, 0, 0, 0, 466, 550, 467, 0, 0, 0,
	0, 0, 468, 469, 472, 0, 0, 0, 471, 473,
	474, 0, 475, 0, 0, 0, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 485, 484, 0, 487, 0,
	486, 0, 488, 489, 0, 0, 490, 491, 492, 493,
	494, 495, 498, 0, 0, 496, 497, 499, 500, 0,
	501, 502, 504, 507, 503, 505, 506, 508, 521, 522,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 524, 0, 523, 0, 525, 526, 527, 528,
	529, 536, 538, 539, 534, 535, 537, 540, 541, 543,
	531, 532, 533, 0, 542, 530, 0, 0, 0, 544,
	545, 546, 547, 0, 0, 548, 0, 551, 552, 0,
	0, 553, 0, 554, 0, 0, 556, 557, 558, 0,
	0, 559, 560, 0, 0, 561, 0, 0, 562, 563,
	555, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 0, 574, 575, 0, 576, 577, 578, 0, 579,
	580, 581, 0, 582, 0, 583, 584, 0, 585, 586,
	587, 0, 588, 589, 590, 591, 592, 593, 594, 595,
	0, 596, 597, 599, 598, 600, 0, 601, 0, 602,
	603, 604, 0, 0, 0, 0, 0, 605, 606, 608,
	0, 609, 610, 611, 612, 607, 613, 614, 615, 616,
	617, 618, 0, 620, 621, 619, 622, 623, 0, 624,
	625, 626, 627, 628, 0, 629, 0, 630, 631, 639,
	640, 641, 632, 633, 635, 642, 634, 643, 644, 645,
	646, 648, 647, 0, 650, 651, 649, 652, 653, 654,
	1517, 655, 0, 656, 636, 637, 657, 658, 0, 659,
	660, 661, 662, 663, 664, 665, 0, 0, 666, 0,
	667, 668, 669, 670, 671, 672, 674, 638, 675, 680,
	681, 0, 676, 677, 678, 679, 0, 683, 684, 685,
	686, 0, 687, 688, 0, 682, 673, 0, 689, 690,
	691, 692, 693, 694, 0, 695, 696, 0, 697, 0,
	0, 0, 0, 0, 709, 0, 698, 700, 701, 702,
	703, 0, 704, 0, 0, 705, 706, 707, 708, 699,
	710, 711, 0, 0, 712, 713, 714, 716, 718, 719,
	715, 717, 720, 0, 721, 0, 0, 722, 723, 724,
	0, 0, 0, 0, 726, 727, 725, 728, 729, 732,
	730, 731, 0, 733, 470, 734, 735, 2314, 0, 1514,
	0, 736, 737, 0, 738, 739, 740, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 0, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 332, 0, 333, 334,
	335, 0, 336, 337, 338, 339, 340, 341, 342, 0,
	0, 0, 343, 0, 344, 0, 0, 0, 345, 346,
	347, 348, 349, 350, 351, 0, 0, 0, 352, 0,
	0, 0, 0, 353, 354, 0, 0, 0, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 0,
	380, 381, 382, 0, 0, 0, 0, 0, 0, 1516,
	383, 384, 385, 386, 387, 0, 388, 390, 0, 0,
	0, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	0, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 0, 0, 424, 0, 0, 0, 0,
	0, 0, 0, 425, 426, 427, 0, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 0,
	434, 435, 436, 0, 0, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 0, 0, 0, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 0, 0,
	0, 549, 0, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 0, 0, 0, 0, 463, 464, 465, 0,
	0, 0, 466, 550, 467, 0, 0, 0, 0, 0,
	468, 469, 472, 0, 0, 0, 471, 473, 474, 0,
	475, 0, 0, 0, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 485, 484, 0, 487, 0, 486, 0,
	488, 489, 0, 0, 490, 491, 492, 493, 494, 495,
	498, 0, 0, 496, 497, 499, 500, 0, 501, 502,
	504, 507, 503, 505, 506, 508, 521, 522, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	524, 0, 523, 0, 525, 526, 527, 528, 529, 536,
	538, 539, 534, 535, 537, 540, 541, 543, 531, 532,
	533, 0, 542, 530, 0, 0, 0, 544, 545, 546,
	547, 0, 0, 548, 0, 551, 552, 0, 0, 553,
	0, 554, 0, 0, 556, 557, 558, 0, 0, 559,
	560, 0, 0, 561, 0, 0, 562, 563, 555, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 0,
	574, 575, 0, 576, 577, 578, 0, 579, 580, 581,
	0, 582, 0, 583, 584, 0, 585, 586, 587, 0,
	588, 589, 590, 591, 592, 593, 594, 595, 0, 596,
	597, 599, 598, 600, 0, 601, 0, 602, 603, 604,
	0, 0, 0, 0, 0, 605, 606, 608, 0, 609,
	610, 611, 612, 607, 613, 614, 615, 616, 617, 618,
	0, 620, 621, 619, 622, 623, 0, 624, 625, 626,
	627, 628, 0, 629, 0, 630, 631, 639, 640, 641,
	632, 633, 635, 642, 634, 643, 644, 645, 646, 648,
	647, 0, 650, 651, 649, 652, 653, 654, 1517, 655,
	0, 656, 636, 637, 657, 658, 0, 659, 660, 661,
	662, 663, 664, 665, 0, 0, 666, 0, 667, 668,
	669, 670, 671, 672, 674, 638, 675, 680, 681, 0,
	676, 677, 678, 679, 0, 683, 684, 685, 686, 0,
	687, 688, 0, 682, 673, 0, 689, 690, 691, 692,
	693, 694, 0, 695, 696, 0, 697, 0, 0, 0,
	0, 0, 709, 0, 698, 700, 701, 702, 703, 0,
	704, 0, 0, 705, 706, 707, 708, 699, 710, 711,
	0, 0, 712, 713, 714, 716, 718, 719, 715, 717,
	720, 0, 721, 0, 0, 722, 723, 724, 0, 0,
	0, 0, 726, 727, 725, 728, 729, 732, 730, 731,
	1514, 733, 470, 734, 735, 0, 0, 0, 0, 736,
	737, 0, 738, 739, 740, 0, 0, 322, 323, 325,
	324, 326, 327, 328, 329, 0, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 332, 0, 333,
	334, 335, 0, 336, 337, 338, 339, 340, 341, 342,
	0, 0, 0, 343, 0, 344, 0, 0, 0, 345,
	346, 347, 348, 349, 350, 351, 0, 0, 0, 352,
	0, 0, 0, 0, 353, 354, 0, 0, 0, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 382, 0, 0, 0, 0, 0, 0,
	1516, 383, 384, 385, 386, 387, 0, 388, 390, 0,
	0, 0, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 0, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 0, 0, 424, 0, 0, 0,
	0, 0, 0, 0, 425, 426, 427, 0, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	0, 434, 435, 436, 0, 0, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 0, 0, 0,
	447, 0, 448, 449, 450, 451, 452, 453, 454, 0,
	0, 0, 549, 0, 455, 456, 457, 0, 458, 459,
	460, 461, 462, 0, 0, 0, 0, 463, 464, 465,
	0, 0, 0, 466, 550, 467, 0, 0, 0, 0,
	0, 468, 469, 472, 0, 0, 0, 471, 473, 474,
	0, 475, 0, 0, 0, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 485, 484, 0, 487, 0, 486,
	0, 488, 489, 0, 0, 490, 491, 492, 493, 494,
	495, 498, 0, 0, 496, 497, 499, 500, 0, 501,
	502, 504, 507, 503, 505, 506, 508, 521, 522, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 524, 0, 523, 0, 525, 526, 527, 528, 529,
	536, 538, 539, 534, 535, 537, 540, 541, 543, 531,
	532, 533, 0, 542, 530, 0, 0, 0, 544, 545,
	546, 547, 0, 0, 548, 0, 551, 552, 0, 0,
	553, 0, 554, 0, 0, 556, 557, 558, 0, 0,
	559, 560, 0, 0, 561, 0, 0, 562, 563, 555,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	0, 574, 575, 0, 576, 577, 578, 0, 579, 580,
	581, 0, 582, 0, 583, 584, 0, 585, 586, 587,
	0, 588, 589, 590, 591, 592, 593, 594, 595, 0,
	596, 597, 599, 598, 600, 0, 601, 0, 602, 603,
	604, 0, 0, 0, 0, 0, 605, 606, 608, 0,
	609, 610, 611, 612, 607, 613, 614, 615, 616, 617,
	618, 0, 620, 621, 619, 622, 623, 0, 624, 625,
	626, 627, 628, 0, 629, 0, 630, 631, 639, 640,
	641, 632, 633, 635, 642, 634, 643, 644, 645, 646,
	648, 647, 0, 650, 651, 649, 652, 653, 654, 1517,
	655, 0, 656, 636, 637, 657, 658, 0, 659, 660,
	661, 662, 663, 664, 665, 0, 0, 666, 0, 667,
	668, 669, 670, 671, 672, 674, 638, 675, 680, 681,
	0, 676, 677, 678, 679, 0, 683, 684, 685, 686,
	0, 687, 688, 0, 682, 673, 0, 689, 690, 691,
	692, 693, 694, 0, 695, 696, 0, 697, 0, 0,
	0, 0, 0, 709, 0, 698, 700, 701, 702, 703,
	0, 704, 0, 0, 705, 706, 707, 708, 699, 710,
	711, 0, 0, 712, 713, 714, 716, 718, 719, 715,
	717, 720, 0, 721, 0, 0, 722, 723, 724, 0,
	0, 0, 0, 726, 727, 725, 728, 729, 732, 730,
	731, 0, 733, 470, 734, 735, 0, 0, 0, 0,
	736, 737, 0, 738, 739, 740, 2036, 2037, 0, 2069,
	2070, 2071, 2080, 2081, 2082, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2073,
	2067, 0, 0, 0, 0, 0, 0, 0, 2039, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2086,
	0, 2036, 2037, 0, 2069, 2070, 2071, 2080, 2081, 2082,
	0, 0, 0, 0, 0, 0, 0, 2092, 0, 0,
	0, 0, 0, 0, 2073, 2067, 2038, 0, 0, 0,
	0, 0, 0, 2039, 0, 0, 0, 2058, 0, 0,
	0, 0, 0, 0, 2086, 0, 0, 2055, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2092, 0, 0, 0, 0, 0, 0, 0,
	0, 2038, 0, 2036, 2037, 0, 2069, 2070, 2071, 2080,
	2081, 2082, 2058, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2055, 0, 0, 0, 2073, 2067, 0, 0,
	0, 0, 0, 0, 0, 2039, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2086, 0, 2036, 2037,
	0, 2069, 2070, 2071, 2080, 2081, 2082, 0, 0, 2061,
	2062, 2063, 2064, 0, 2092, 0, 0, 0, 0, 2044,
	0, 2073, 2067, 2038, 0, 0, 0, 0, 0, 0,
	2039, 0, 0, 0, 2058, 0, 0, 0, 0, 0,
	0, 2086, 0, 0, 2055, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2061, 2062, 2063, 2064, 0, 2092,
	0, 0, 2077, 0, 2044, 0, 2087, 0, 2038, 0,
	0, 0, 0, 2066, 2068, 0, 0, 0, 0, 2058,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2055,
	0, 0, 0, 2083, 0, 2084, 0, 0, 0, 0,
	0, 0, 2053, 2054, 0, 0, 0, 2077, 0, 0,
	0, 2087, 0, 0, 0, 0, 0, 0, 2066, 2068,
	0, 0, 2075, 0, 0, 0, 2061, 2062, 2063, 2064,
	0, 0, 0, 0, 0, 0, 2044, 2059, 2083, 0,
	2084, 0, 0, 0, 0, 0, 0, 2053, 2054, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2075, 0, 0,
	0, 2061, 2062, 2063, 2064, 0, 0, 0, 0, 2077,
	0, 2044, 2059, 2087, 0, 0, 2085, 0, 0, 0,
	2066, 2068, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2074, 0, 0,
	2083, 0, 2084, 0, 0, 0, 0, 0, 2089, 2053,
	2054, 0, 0, 0, 2077, 0, 0, 0, 2087, 0,
	0, 2085, 0, 0, 0, 2066, 2068, 0, 0, 2075,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2074, 0, 2059, 2083, 0, 2084, 0, 0,
	0, 0, 0, 2089, 2053, 2054, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2065, 0,
	0, 0, 0, 0, 2075, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2059,
	0, 0, 0, 2085, 2060, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2065, 2074, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2089, 2078, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2085, 2060,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2074,
	0, 0, 2091, 0, 0, 0, 0, 0, 0, 0,
	2089, 2078, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2065, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2091, 0, 0,
	0, 2060, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2065, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2078, 0, 2076, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2060, 2050, 2051, 2057,
	2079, 2056, 2052, 0, 2049, 2047, 2048, 2040, 2041, 2042,
	2043, 2045, 2046, 0, 0, 0, 0, 0, 5245, 2091,
	0, 0, 0, 0, 0, 0, 0, 0, 2078, 0,
	2076, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2050, 2051, 2057, 2079, 2056, 2052, 0, 2049,
	2047, 2048, 2040, 2041, 2042, 2043, 2045, 2046, 0, 0,
	0, 0, 0, 5244, 2091, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2076, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2050, 2051, 2057, 2079, 2056, 2052,
	0, 2049, 2047, 2048, 2040, 2041, 2042, 2043, 2045, 2046,
	0, 0, 0, 2036, 2037, 5038, 2069, 2070, 2071, 2080,
	2081, 2082, 0, 0, 0, 0, 0, 2076, 0, 0,
	0, 0, 0, 0, 0, 0, 2073, 2067, 0, 2050,
	2051, 2057, 2079, 2056, 2052, 2039, 2049, 2047, 2048, 2040,
	2041, 2042, 2043, 2045, 2046, 0, 2086, 0, 2036, 2037,
	4849, 2069, 2070, 2071, 2080, 2081, 2082, 0, 0, 0,
	0, 0, 0, 0, 2092, 0, 0, 0, 0, 0,
	0, 2073, 2067, 2038, 0, 0, 0, 0, 0, 0,
	2039, 0, 0, 0, 2058, 0, 0, 0, 0, 0,
	0, 2086, 0, 0, 2055, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2092,
	0, 0, 0, 0, 0, 0, 0, 0, 2038, 0,
	2036, 2037, 0, 2069, 2070, 2071, 2080, 2081, 2082, 2058,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2055,
	0, 0, 0, 2073, 2067, 0, 0, 0, 0, 0,
	0, 0, 2039, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2086, 0, 2036, 2037, 0, 2069, 2070,
	2071, 2080, 2081, 2082, 0, 0, 2061, 2062, 2063, 2064,
	0, 2092, 0, 0, 0, 0, 2044, 0, 2073, 2067,
	2038, 0, 0, 0, 0, 0, 0, 2039, 0, 0,
	0, 2058, 0, 0, 0, 0, 0, 0, 2086, 0,
	0, 2055, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2061, 2062, 2063, 2064, 0, 2092, 0, 0, 2077,
	0, 2044, 0, 2087, 0, 2038, 0, 0, 0, 0,
	2066, 2068, 0, 0, 0, 0, 2058, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2055, 0, 0, 0,
	2083, 0, 2084, 0, 0, 0, 0, 0, 0, 2053,
	2054, 0, 0, 0, 2077, 0, 0, 0, 2087, 0,
	0, 0, 0, 0, 0, 2066, 2068, 0, 0, 2075,
	0, 0, 0, 2061, 2062, 2063, 2064, 0, 0, 0,
	0, 0, 0, 2044, 2059, 2083, 0, 2084, 0, 0,
	0, 0, 0, 0, 2053, 2054, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2075, 0, 0, 0, 2061, 2062,
	2063, 2064, 0, 0, 0, 0, 2077, 0, 2044, 2059,
	2087, 0, 0, 2085, 0, 0, 0, 2066, 2068, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2074, 0, 0, 2083, 0, 2084,
	0, 0, 0, 0, 0, 2089, 2053, 2054, 0, 0,
	0, 2077, 0, 0, 0, 2087, 0, 0, 2085, 0,
	0, 0, 2066, 2068, 0, 0, 2075, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2074,
	0, 2059, 2083, 0, 2084, 0, 0, 0, 0, 0,
	2089, 2053, 2054, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2065, 0, 0, 0, 0,
	0, 2075, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2059, 0, 0, 0,
	2085, 2060, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2065, 2074, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2089, 2078, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2085, 2060, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2074, 0, 0, 2091,
	0, 0, 0, 0, 0, 0, 0, 2089, 2078, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2065, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2091, 0, 0, 0, 2060, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2065, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2078, 0, 2076, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2060, 2050, 2051, 2057, 2079, 2056, 2052,
	0, 2049, 2047, 2048, 2040, 2041, 2042, 2043, 2045, 2046,
	0, 0, 0, 0, 0, 4747, 2091, 0, 0, 0,
	0, 0, 0, 0, 0, 2078, 0, 2076, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2050,
	2051, 2057, 2079, 2056, 2052, 0, 2049, 2047, 2048, 2040,
	2041, 2042, 2043, 2045, 2046, 0, 0, 0, 0, 0,
	4746, 2091, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2076,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2050, 2051, 2057, 2079, 2056, 2052, 0, 2049, 2047,
	2048, 2040, 2041, 2042, 2043, 2045, 2046, 0, 0, 0,
	2036, 2037, 4745, 2069, 2070, 2071, 2080, 2081, 2082, 0,
	0, 0, 0, 0, 2076, 0, 0, 0, 0, 0,
	0, 0, 0, 2073, 2067, 0, 2050, 2051, 2057, 2079,
	2056, 2052, 2039, 2049, 2047, 2048, 2040, 2041, 2042, 2043,
	2045, 2046, 0, 2086, 0, 2036, 2037, 4328, 2069, 2070,
	2071, 2080, 2081, 2082, 0, 0, 0, 0, 0, 0,
	0, 2092, 0, 0, 0, 0, 0, 0, 2073, 2067,
	2038, 0, 0, 0, 0, 0, 0, 2039, 0, 0,
	0, 2058, 0, 0, 0, 0, 0, 0, 2086, 0,
	0, 2055, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2092, 0, 0, 0,
	0, 0, 0, 0, 0, 2038, 0, 2036, 2037, 0,
	2069, 2070, 2071, 2080, 2081, 2082, 2058, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2055, 0, 0, 0,
	2073, 2067, 0, 0, 0, 0, 0, 0, 0, 2039,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2086, 0, 2036, 2037, 0, 2069, 2070, 2071, 2080, 2081,
	2082, 0, 0, 2061, 2062, 2063, 2064, 0, 2092, 0,
	0, 0, 0, 2044, 0, 2073, 2067, 2038, 0, 0,
	0, 0, 0, 0, 2039, 0, 0, 0, 2058, 0,
	0, 0, 0, 0, 0, 2086, 0, 0, 2055, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2061, 2062,
	2063, 2064, 0, 2092, 0, 0, 2077, 0, 2044, 0,
	2087, 0, 2038, 0, 0, 0, 0, 2066, 2068, 0,
	0, 0, 0, 2058, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2055, 0, 0, 0, 2083, 0, 2084,
	0, 0, 0, 0, 0, 0, 2053, 2054, 0, 0,
	0, 2077, 0, 0, 0, 2087, 0, 0, 0, 0,
	0, 0, 2066, 2068, 0, 0, 2075, 0, 0, 0,
	2061, 2062, 2063, 2064, 0, 0, 0, 0, 0, 0,
	2044, 2059, 2083, 0, 2084, 0, 0, 0, 0, 0,
	0, 2053, 2054, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2075, 0, 0, 0, 2061, 2062, 2063, 2064, 0,
	0, 0, 0, 2077, 0, 2044, 2059, 2087, 0, 0,
	2085, 0, 0, 0, 2066, 2068, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2074, 0, 0, 2083, 0, 2084, 0, 0, 0,
	0, 0, 2089, 2053, 2054, 0, 0, 0, 2077, 0,
	0, 0, 2087, 0, 0, 2085, 0, 0, 0, 2066,
	2068, 0, 0, 2075, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2074, 0, 2059, 2083,
	0, 2084, 0, 0, 0, 0, 0, 2089, 2053, 2054,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2065, 0, 0, 0, 0, 0, 2075, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2059, 0, 0, 0, 2085, 2060, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2065, 2074, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2089,
	2078, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2085, 2060, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2074, 0, 0, 2091, 0, 0, 0,
	0, 0, 0, 0, 2089, 2078, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2065,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2091, 0, 0, 0, 2060, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2065, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2078, 0, 2076,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2060, 2050, 2051, 2057, 2079, 2056, 2052, 0, 2049, 2047,
	2048, 2040, 2041, 2042, 2043, 2045, 2046, 0, 0, 0,
	0, 0, 3739, 2091, 0, 0, 0, 0, 0, 0,
	0, 0, 2078, 0, 2076, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2050, 2051, 2057, 2079,
	2056, 2052, 0, 2049, 2047, 2048, 2040, 2041, 2042, 2043,
	2045, 2046, 0, 0, 0, 0, 0, 3738, 2091, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2076, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2050, 2051,
	2057, 2079, 2056, 2052, 0, 2049, 2047, 2048, 2040, 2041,
	2042, 2043, 2045, 2046, 0, 0, 0, 2036, 2037, 3737,
	2069, 2070, 2071, 2080, 2081, 2082, 0, 0, 0, 0,
	0, 2076, 0, 0, 0, 0, 0, 0, 0, 0,
	2073, 2067, 0, 2050, 2051, 2057, 2079, 2056, 2052, 2039,
	2049, 2047, 2048, 2040, 2041, 2042, 2043, 2045, 2046, 0,
	2086, 0, 2036, 2037, 3736, 2069, 2070, 2071, 2080, 2081,
	2082, 0, 0, 0, 0, 0, 2534, 0, 2092, 0,
	0, 0, 0, 0, 0, 2073, 2067, 2038, 0, 0,
	0, 0, 0, 0, 2039, 0, 0, 0, 2058, 0,
	0, 0, 0, 0, 0, 2086, 0, 0, 2055, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2092, 0, 0, 0, 0, 0, 0,
	0, 0, 2038, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2058, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2055, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2036,
	2037, 0, 2069, 2070, 2071, 2080, 2081, 2082, 0, 0,
	2061, 2062, 2063, 2064, 0, 0, 0, 0, 0, 0,
	2044, 0, 2073, 2067, 2535, 0, 0, 0, 0, 0,
	0, 2039, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2086, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2061, 2062, 2063, 2064, 0,
	2092, 0, 0, 2077, 0, 2044, 0, 2087, 0, 2038,
	0, 0, 0, 0, 2066, 2068, 0, 0, 0, 0,
	2058, 0, 0, 0, 2433, 0, 0, 0, 0, 0,
	2055, 0, 0, 0, 2083, 0, 2084, 0, 0, 0,
	0, 0, 0, 2053, 2054, 0, 0, 0, 2077, 0,
	0, 0, 2087, 0, 0, 0, 0, 0, 0, 2066,
	2068, 0, 0, 2075, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2059, 2083,
	0, 2084, 0, 0, 0, 0, 0, 0, 2053, 2054,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2431, 0, 0, 0, 0, 0, 0, 0, 2075, 0,
	0, 0, 2061, 2062, 2063, 2064, 0, 0, 0, 0,
	0, 0, 2044, 2059, 0, 0, 0, 2085, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2074, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2089,
	0, 0, 0, 0, 0, 2077, 0, 0, 0, 2087,
	0, 0, 2085, 0, 0, 0, 2066, 2068, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2074, 0, 0, 2083, 0, 2084, 0,
	0, 0, 0, 0, 2089, 2053, 2054, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2065,
	0, 0, 0, 0, 0, 2075, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2059, 0, 0, 0, 0, 2060, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2036, 2037, 2065, 2069, 2070, 2071, 2080, 2081,
	2082, 0, 0, 0, 0, 0, 0, 2078, 0, 0,
	0, 0, 0, 0, 0, 2073, 2067, 0, 0, 2085,
	2060, 0, 0, 0, 2039, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2086, 0, 0, 0, 0,
	2074, 0, 0, 2091, 0, 2536, 0, 0, 0, 0,
	0, 2089, 2078, 2092, 0, 0, 0, 0, 0, 0,
	0, 0, 2038, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2058, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2055, 0, 0, 0, 0, 2091, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2432, 2065, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2076, 0, 0, 0,
	0, 0, 0, 0, 2537, 0, 0, 2060, 2050, 2051,
	2057, 2079, 2056, 2052, 0, 2049, 2047, 2048, 2040, 2041,
	2042, 2043, 2045, 2046, 0, 0, 0, 3701, 0, 0,
	0, 0, 0, 0, 0, 2061, 2062, 2063, 2064, 2078,
	0, 2076, 0, 0, 0, 2044, 5566, 0, 0, 0,
	0, 0, 0, 2050, 2051, 2057, 2079, 2056, 2052, 0,
	2049, 2047, 2048, 2040, 2041, 2042, 2043, 2045, 2046, 0,
	0, 0, 0, 0, 0, 2091, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2430, 0, 2077, 0,
	0, 0, 2087, 0, 0, 0, 0, 0, 0, 2066,
	2068, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2083,
	0, 2084, 0, 0, 0, 0, 0, 0, 2053, 2054,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2075, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2076, 0,
	0, 0, 0, 2059, 0, 0, 0, 0, 0, 0,
	2050, 2051, 2057, 2079, 2056, 2052, 0, 2049, 2047, 2048,
	2040, 2041, 2042, 2043, 2045, 2046, 0, 0, 0, 0,
	0, 2036, 2037, 0, 2069, 2070, 2071, 2080, 2081, 2082,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2085, 0, 2073, 2067, 0, 0, 0, 0,
	0, 0, 0, 2039, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2074, 2086, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2089, 0, 0, 0, 0, 0,
	0, 0, 2092, 0, 0, 0, 0, 0, 0, 0,
	0, 2038, 0, 0, 0, 0, 0, 5565, 0, 0,
	0, 0, 2058, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2055, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2065, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2060, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2036, 2037, 0, 2069,
	2070, 2071, 2080, 2081, 2082, 0, 0, 0, 0, 0,
	0, 0, 2078, 0, 2061, 2062, 2063, 2064, 0, 2073,
	2067, 0, 0, 0, 2044, 3671, 3801, 0, 2039, 0,
	0, 0, 0, 3800, 0, 0, 0, 0, 0, 2086,
	0, 0, 0, 0, 0, 0, 0, 0, 2091, 0,
	0, 0, 0, 0, 0, 0, 0, 2092, 0, 0,
	0, 0, 0, 0, 0, 0, 2038, 2077, 0, 0,
	0, 2087, 0, 0, 0, 0, 0, 2058, 2066, 2068,
	0, 0, 0, 0, 0, 0, 0, 2055, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2083, 0,
	2084, 0, 0, 0, 0, 0, 0, 2053, 2054, 0,
	0, 0, 0, 0, 0, 0, 0, 2036, 2037, 0,
	2069, 2070, 2071, 2080, 2081, 2082, 0, 2075, 0, 0,
	3672, 2076, 0, 0, 0, 0, 0, 0, 0, 0,
	2073, 2067, 2059, 2050, 2051, 2057, 2079, 2056, 2052, 2039,
	2049, 2047, 2048, 2040, 2041, 2042, 2043, 2045, 2046, 0,
	2086, 0, 0, 0, 0, 0, 0, 0, 0, 2061,
	2062, 2063, 2064, 0, 0, 0, 0, 0, 2092, 2044,
	0, 0, 0, 0, 0, 0, 0, 2038, 0, 0,
	0, 2085, 0, 0, 0, 0, 0, 0, 2058, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2055, 0,
	0, 0, 2074, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2077, 2089, 0, 0, 2087, 0, 0, 0,
	0, 0, 0, 2066, 2068, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2083, 0, 2084, 0, 0, 0, 0,
	0, 0, 2053, 2054, 0, 0, 0, 0, 0, 0,
	0, 0, 2036, 2037, 0, 2069, 2070, 2071, 2080, 2081,
	2082, 0, 2075, 2065, 0, 0, 0, 0, 0, 0,
	2061, 2062, 2063, 2064, 0, 2073, 2067, 2059, 0, 0,
	2044, 0, 5144, 0, 2039, 0, 0, 0, 0, 2060,
	0, 0, 0, 0, 0, 2086, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2092, 0, 0, 0, 0, 0, 0,
	0, 2078, 2038, 2077, 0, 0, 2085, 2087, 0, 0,
	0, 0, 0, 2058, 2066, 2068, 0, 0, 0, 0,
	0, 0, 0, 2055, 0, 0, 0, 2074, 0, 0,
	0, 0, 0, 0, 2083, 0, 2084, 2091, 2089, 0,
	0, 0, 0, 2053, 2054, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2075, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2059, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2065, 0,
	0, 0, 0, 0, 0, 2061, 2062, 2063, 2064, 0,
	0, 0, 0, 0, 0, 2044, 0, 0, 0, 0,
	2076, 0, 0, 0, 2060, 0, 0, 2085, 0, 0,
	0, 0, 2050, 2051, 2057, 2079, 2056, 2052, 0, 2049,
	2047, 2048, 2040, 2041, 2042, 2043, 2045, 2046, 2074, 0,
	0, 0, 0, 0, 0, 0, 2078, 0, 2077, 2089,
	0, 0, 2087, 0, 0, 0, 0, 0, 0, 2066,
	2068, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2083,
	0, 2084, 2091, 0, 0, 0, 0, 0, 2053, 2054,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2075, 2065,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2059, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2060, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2076, 0, 2078, 0, 0,
	0, 0, 2085, 0, 0, 0, 0, 2050, 2051, 2057,
	2079, 2056, 2052, 0, 2049, 2047, 2048, 2040, 2041, 2042,
	2043, 2045, 2046, 2074, 1239, 0, 0, 0, 0, 0,
	0, 0, 0, 2091, 2089, 0, 0, 0, 0, 0,
	0, 0, 0, 2036, 2037, 0, 2069, 2070, 2071, 2080,
	2081, 2082, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2073, 2067, 0, 0,
	0, 0, 0, 0, 0, 2039, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2086, 0, 0, 0,
	0, 0, 0, 0, 2065, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2092, 0, 0, 0, 0, 0,
	0, 0, 0, 2038, 0, 0, 2076, 0, 0, 0,
	2060, 0, 0, 0, 2058, 0, 0, 0, 2050, 2051,
	2057, 2079, 2056, 2052, 2055, 2049, 2047, 2048, 2040, 2041,
	2042, 2043, 2045, 2046, 0, 0, 0, 0, 0, 0,
	0, 0, 2078, 0, 0, 0, 0, 0, 0, 0,
	2036, 2037, 0, 2069, 2070, 2071, 2080, 2081, 2082, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2073, 2067, 0, 0, 0, 2091, 0,
	0, 0, 2039, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2086, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2061, 2062, 2063, 2064,
	0, 2092, 0, 0, 0, 0, 2044, 0, 0, 0,
	2038, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2058, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2055, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2077,
	0, 2076, 0, 2087, 0, 0, 0, 0, 0, 0,
	2066, 2068, 0, 2050, 2051, 2057, 2079, 2056, 2052, 0,
	2049, 2047, 2048, 2040, 2041, 2042, 2043, 2045, 2046, 0,
	2083, 0, 2084, 0, 0, 0, 0, 0, 0, 2053,
	2054, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2075,
	0, 0, 0, 2061, 2062, 2063, 2064, 0, 0, 0,
	0, 0, 0, 2044, 2059, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2077, 0, 0, 0,
	2087, 0, 0, 2085, 0, 0, 0, 2066, 2068, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2074, 0, 0, 2083, 0, 2084,
	0, 0, 0, 0, 0, 2089, 2053, 2054, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2075, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2059, 0, 0, 2036, 2037, 0, 2069, 2070, 2071,
	2080, 2081, 2082, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2065, 0, 2073, 2067, 0,
	0, 0, 0, 0, 0, 0, 2039, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2086, 0, 0,
	2085, 2060, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2092, 0, 0, 0, 0,
	0, 2074, 0, 0, 2038, 0, 0, 0, 0, 0,
	0, 0, 2089, 2078, 0, 2058, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2055, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2091,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4901, 0,
	0, 0, 2065, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2060, 0,
	0, 0, 0, 0, 0, 0, 0, 2061, 2062, 2063,
	2064, 0, 0, 0, 0, 0, 0, 2044, 0, 4551,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2078, 0, 2076, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2050, 2051, 2057, 2079, 2056, 2052,
	0, 2049, 2047, 2048, 2040, 2041, 2042, 2043, 2045, 2046,
	2077, 0, 0, 0, 2087, 0, 2091, 0, 0, 0,
	0, 2066, 2068, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4552, 0, 0, 0, 0,
	0, 2083, 0, 2084, 0, 0, 0, 0, 0, 0,
	2053, 2054, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2075, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2059, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2076,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2050, 2051, 2057, 2079, 2056, 2052, 0, 2049, 2047,
	2048, 2040, 2041, 2042, 2043, 2045, 2046, 0, 0, 0,
	0, 0, 0, 0, 2085, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2074, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2089, 0, 0, 0,
	0, 0, 0, 0, 2036, 2037, 0, 2069, 2070, 2071,
	2080, 2081, 2082, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2073, 2067, 0,
	0, 0, 0, 0, 0, 0, 2039, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2086, 0, 0,
	0, 0, 0, 0, 0, 0, 2065, 0, 0, 0,
	0, 0, 0, 0, 0, 2092, 0, 0, 0, 0,
	0, 0, 0, 0, 2038, 0, 0, 0, 0, 0,
	0, 0, 2060, 0, 0, 2058, 0, 0, 0, 0,
	0, 0, 0, 2036, 2037, 2055, 2069, 2070, 2071, 2080,
	2081, 2082, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2078, 0, 2073, 2067, 0, 0,
	0, 0, 0, 0, 0, 2039, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2086, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2091, 0, 0, 0, 2092, 0, 0, 0, 0, 0,
	0, 0, 0, 2038, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2058, 0, 0, 2061, 2062, 2063,
	2064, 0, 0, 0, 2055, 0, 0, 2044, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2077, 0, 0, 2076, 2087, 0, 0, 0, 0, 0,
	0, 2066, 2068, 0, 0, 2050, 2051, 2057, 2079, 2056,
	2052, 0, 2049, 2047, 2048, 2040, 2041, 2042, 2043, 2045,
	2046, 2083, 0, 2084, 0, 0, 2061, 2062, 2063, 2064,
	2053, 2054, 0, 0, 0, 0, 2044, 0, 0, 0,
	0, 0, 0, 0, 0, 3807, 0, 0, 0, 0,
	2075, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2059, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2077,
	0, 0, 0, 2087, 0, 0, 0, 0, 0, 0,
	2066, 2068, 0, 0, 0, 0, 0, 0, 0, 0,
	2036, 2037, 0, 2069, 2070, 2071, 2080, 2081, 2082, 0,
	2083, 0, 2084, 0, 2085, 0, 0, 0, 0, 2053,
	2054, 0, 0, 2073, 2067, 0, 0, 0, 3802, 0,
	0, 0, 2039, 0, 0, 2074, 0, 0, 0, 2075,
	0, 0, 0, 2086, 0, 0, 2089, 0, 0, 0,
	0, 0, 0, 0, 2059, 0, 0, 0, 0, 0,
	0, 2092, 0, 0, 0, 0, 0, 0, 0, 0,
	2038, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2058, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2055, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2085, 0, 0, 2065, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2074, 0, 0, 0, 0, 0,
	0, 0, 2060, 0, 0, 2089, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2078, 0, 0, 0, 0, 0,
	0, 0, 0, 2061, 2062, 2063, 2064, 0, 0, 0,
	0, 0, 0, 2044, 2036, 2037, 0, 2069, 2070, 2071,
	2080, 2081, 2082, 0, 0, 2065, 0, 0, 0, 0,
	2091, 0, 0, 0, 0, 0, 0, 2073, 2067, 0,
	0, 0, 0, 4309, 0, 0, 2039, 0, 0, 0,
	0, 2060, 0, 0, 0, 0, 2077, 2086, 0, 0,
	2087, 0, 0, 0, 0, 0, 0, 2066, 2068, 0,
	0, 0, 0, 0, 0, 2092, 0, 0, 0, 0,
	0, 0, 0, 2078, 2038, 0, 0, 2083, 0, 2084,
	0, 0, 0, 0, 0, 2058, 2053, 2054, 0, 0,
	0, 0, 0, 0, 0, 2055, 0, 0, 0, 0,
	0, 0, 0, 2076, 0, 0, 2075, 0, 0, 2091,
	0, 0, 0, 0, 0, 2050, 2051, 2057, 2079, 2056,
	2052, 2059, 2049, 2047, 2048, 2040, 2041, 2042, 2043, 2045,
	2046, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2085, 0, 0, 0, 0, 0, 0, 2061, 2062, 2063,
	2064, 0, 0, 0, 0, 0, 0, 2044, 0, 0,
	0, 2074, 2076, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2089, 0, 2050, 2051, 2057, 2079, 2056, 2052,
	0, 2049, 2047, 2048, 2040, 2041, 2042, 2043, 2045, 2046,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2077, 0, 0, 0, 2087, 0, 0, 0, 0, 0,
	0, 2066, 2068, 0, 0, 0, 0, 0, 0, 2036,
	2037, 0, 2069, 2070, 2071, 2080, 2081, 2082, 0, 0,
	0, 2083, 2065, 2084, 0, 0, 0, 0, 0, 0,
	2053, 2054, 2073, 2067, 0, 0, 0, 3740, 0, 0,
	0, 2039, 0, 0, 0, 0, 0, 0, 2060, 0,
	2075, 0, 2086, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2059, 0, 0, 0, 0,
	2092, 0, 0, 0, 0, 0, 0, 0, 0, 2038,
	2078, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2058, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2055, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2085, 0, 2091, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2074, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2089, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3767, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2061, 2062, 2063, 2064, 0, 0, 0, 0,
	0, 0, 2044, 0, 0, 0, 0, 0, 0, 2076,
	0, 0, 0, 0, 0, 0, 2065, 0, 0, 0,
	0, 2050, 2051, 2057, 2079, 2056, 2052, 0, 2049, 2047,
	2048, 2040, 2041, 2042, 2043, 2045, 2046, 0, 0, 0,
	0, 0, 2060, 0, 0, 2077, 0, 0, 0, 2087,
	0, 0, 0, 0, 0, 0, 2066, 2068, 2036, 2037,
	0, 2069, 2070, 2071, 2080, 2081, 2082, 0, 0, 0,
	0, 0, 0, 0, 2078, 0, 2083, 0, 2084, 0,
	0, 2073, 2067, 0, 0, 2053, 2054, 0, 0, 0,
	2039, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2086, 0, 0, 0, 2075, 0, 0, 0, 0,
	2091, 0, 0, 0, 0, 0, 0, 0, 0, 2092,
	2059, 0, 0, 0, 0, 0, 0, 0, 2038, 0,
	2036, 2037, 0, 2069, 2070, 2071, 2080, 2081, 2082, 2058,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2055,
	0, 0, 0, 2073, 2067, 0, 0, 0, 0, 0,
	0, 0, 2039, 0, 0, 0, 0, 0, 0, 2085,
	0, 0, 0, 2086, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2074, 2092, 0, 2076, 0, 0, 0, 0, 0, 0,
	2038, 2089, 0, 0, 0, 2050, 2051, 2057, 2079, 2056,
	2052, 2058, 2049, 2047, 2048, 2040, 2041, 2042, 2043, 2045,
	2046, 2055, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2061, 2062, 2063, 2064, 0, 0, 0, 0, 0,
	0, 2044, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2065, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2077, 0, 0, 2060, 2087, 0,
	0, 0, 0, 0, 0, 2066, 2068, 0, 0, 0,
	0, 0, 0, 2061, 2062, 2063, 2064, 0, 0, 0,
	0, 0, 0, 2044, 0, 2083, 0, 2084, 0, 2078,
	0, 0, 0, 0, 2053, 2054, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2075, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2091, 2077, 0, 0, 2059,
	2087, 0, 0, 0, 0, 0, 0, 2066, 2068, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2083, 0, 2084,
	0, 0, 0, 0, 0, 0, 2053, 2054, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2085, 0,
	0, 0, 0, 0, 0, 0, 2075, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2074,
	0, 2059, 0, 0, 0, 0, 0, 0, 2076, 0,
	2089, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2050, 2051, 2057, 2079, 2056, 2052, 0, 2049, 2047, 2048,
	2040, 2041, 2042, 2043, 2045, 2046, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2085, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2065, 2074, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2089, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2060, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2036, 2037, 2078, 2069,
	2070, 2071, 2080, 2081, 2082, 0, 0, 0, 0, 0,
	0, 0, 2065, 0, 0, 0, 0, 0, 0, 2073,
	2067, 0, 0, 0, 0, 0, 0, 0, 2039, 0,
	0, 0, 0, 0, 2091, 0, 0, 0, 2060, 2086,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2092, 0, 0,
	0, 0, 0, 0, 0, 0, 2038, 0, 0, 0,
	2078, 0, 0, 0, 0, 0, 0, 2058, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2055, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2091, 0, 0, 0,
	2648, 0, 0, 0, 0, 0, 0, 2076, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2050,
	2051, 2057, 2079, 2056, 2052, 0, 2049, 2047, 2048, 2040,
	2041, 2042, 2043, 2045, 2046, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2061,
	2062, 2063, 2064, 0, 0, 0, 0, 0, 0, 2044,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2076,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2050, 2051, 2057, 2079, 2056, 2052, 0, 2049, 2047,
	2048, 2040, 2041, 2042, 2043, 2045, 2046, 0, 0, 0,
	0, 1114, 2077, 1168, 0, 0, 2087, 0, 0, 0,
	0, 0, 0, 2066, 2068, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1122, 0,
	0, 0, 0, 2083, 0, 2084, 0, 0, 0, 0,
	0, 0, 2053, 2054, 0, 0, 1138, 0, 1120, 1119,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2075, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1140, 0, 0, 0, 0, 2059, 1121, 0,
	0, 0, 0, 1124, 0, 0, 0, 0, 1180, 0,
	1151, 0, 0, 0, 0, 0, 0, 0, 0, 1135,
	1136, 0, 0, 0, 0, 0, 0, 0, 0, 1156,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2085, 1169, 1126, 0,
	0, 0, 0, 0, 1127, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2089, 1128,
	0, 0, 0, 0, 0, 0, 0, 0, 1166, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1167, 0, 1147, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2065, 1130,
	0, 0, 0, 0, 0, 0, 0, 0, 1118, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2060, 0, 0, 0, 0, 1132,
	1133, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1141, 1139, 0, 0, 0, 2078, 0, 0, 1134,
	0, 0, 0, 0, 1152, 0, 0, 1174, 1173, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1177, 1165, 0, 0, 0, 0, 0,
	0, 0, 2091, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2076, 0, 1125, 0, 0,
	1179, 0, 0, 0, 0, 0, 0, 2050, 2051, 2057,
	2079, 2056, 2052, 0, 2049, 2047, 2048, 2040, 2041, 2042,
	2043, 2045, 2046, 0, 1123, 0, 0, 0, 0, 1160,
	1161, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1163, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1171, 1158, 0, 0, 0, 0, 0, 0, 0,
	1178, 1153, 0, 0, 1144, 1142, 0, 0, 0, 1148,
	0, 0, 0, 0, 0, 0, 0, 1149, 0, 0,
	1116, 0, 1172, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1117, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1164,
	0, 0, 1162, 0, 1150, 1131, 0, 0, 0, 0,
	1146, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1176, 0, 0, 0, 0, 0, 0, 0, 1154,
	0, 1155, 0, 0, 0, 0, 0, 0, 0, 0,
	1129, 1175, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1157, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1159,
}

var sqlPact = [...]int32{
	711, -1000, -1000, -1000, -1000, -1000, -1000, 201, -1000, -1000,
	200, 198, 195, 193, 192, 190, 189, 182, 181, 180,
	178, -1000, -1000, 176, 174, 171, 169, -1000, -1000, 168,
	166, -1000, 164, -1000, -1000, 161, -1000, 160, 159, 158,
	-1000, -1000, 157, -1000, 154, -1000, -1000, -1000, -1000, 151,
	150, 149, 112773, 112155, 113389, 2603, 141779, 122643, 2244, 99189,
	141161, 98571, 140543, 2439, 13488, 139925, 3092, 148, -1000, 139307,
	147, 146, 145, -1000, 122025, 138689, 119555, 118937, 2051, 87373,
	1857, 1856, -1000, 143, 142, -1000, 7856, 83039, 141, 140,
	138, 136, 2687, 134, -1000, 132, 130, -1000, 129, 126,
	-1000, 15562, 1699, -1000, 125, 123, 122, -1000, 587, 118319,
	121, 120, 119, 2941, 118, 117, 80573, 116, 115, 114,
	2824, 3182, -1000, -1000, 2322, -1000, -1000, 112, 109, 108,
	107, 106, 105, 104, 102, 94, 92, 91, 85, 83,
	81, -1000, 80, 74, 72, 69, 68, 66, -1000, 65,
	64, 60, -1000, 56, -1000, 53, 51, 50, 49, 47,
	46, 44, 43, 42, 41, 39, 38, 37, 36, 35,
	162439, -1000, -1000, 34, -1000, 2189, 1854, 1853, 1841, 1103,
	33, 31, 30, 29, 24, 21, 20, 19, 17, 15,
	14, 13, 9, 8, 7, 6, 5, 4, 2, 1,
	0, -1, -2, 155, -3, -4, -5, -7, -8, -9,
	-10, -17, 3970, 3919, -1000, 1855, 1156, 1322, 36403, 3344,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 151019,
	142395, -18, -88, -20, -1000, 3686, 1122, 65606, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 278, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 497, 2414, 779,
	-1000, -1000, -1000, 138071, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2601, -21, 99805, -1000, 2314, -1000, -1000, -1000,
	-1000, -1000, 763, -1000, 2598, 2528, 371, 2526, 99805, -1000,
	-1000, -1000, 3787, 3663, 111537, 2769, 4218, 4217, 4216, 4215,
	4214, 150403, 1996, 2834, 4213, 4211, 4206, 4205, 4204, 4203,
	4199, -1000, 110919, 1172, 110301, 109683, 3795, 137455, 109065, 136837,
	153489, 55489, 1054, 3786, -1000, -1000, -1000, -1000, -1000, -1000,
	142395, -1000, 1170, -1000, -1000, 4198, 2334, 762, 121407, -1000,
	-1000, 136219, 1844, -1000, -1000, -1000, 1031, 1296, 38935, 38935,
	38935, 275, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3797,
	-1000, -1000, -1000, -1000, 142395, 3033, 3033, 1549, 1510, 1510,
	3033, 3033, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	4195, 4190, 4189, 4187, 4186, -1000, -1000, -1000, 1550, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 97953, 28618, 97335, 96717,
	108447, 135601, 54856, 107829, 107211, 92391, 4183, 4182, 54223, 63082,
	3917, 134983, 152871, 3914, 3913, 1169, 2312, 1623, -1000, -1000,
	-1000, -1000, -1000, -1000, -42, 86757, 3980, 142395, -1000, 272,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 53590, 718, 52957,
	842, 52324, 639, 134365, -1000, -1000, -1000, -1000, -1000, 91763,
	3657, -1000, 133747, 1648, 2768, 4180, 4178, 1260, 4174, 3625,
	1978, 4171, 4169, 4168, 4166, 4165, 4164, 4162, 1667, 133129,
	2996, 132511, 1936, 152253, 2148, 1162, 106593, 113389, 2924, 131893,
	1611, 1467, -1000, -1000, -1000, -1000, 3442, 3177, 3167, 1424,
	-1000, -1000, -1000, -1000, -1000, 69366, 10756, 8418, -1000, -1000,
	12648, 131275, 72496, 113389, 113389, -1000, -1000, -1000, -1000, -1000,
	-1000, 51691, 487, 51058, 959, 130657, -1000, -1000, 69992, 3307,
	1204, -1000, -1000, -1000, -1000, -1000, 130039, 50425, 481, 49792,
	879, 142395, -1000, 3343, 2217, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2507, 1794, 4007, 3061,
	91135, 2308, 1576, 3748, 3438, 3433, 1677, 2311, 3428, 4160,
	2919, 3126, 3427, 3426, 3423, 3420, 3411, 1858, 2885, 342,
	2877, 35770, 3332, 2031, 49159, 1674, 1673, 3403, 3392, 3388,
	4019, 3832, 2293, 2247, 2235, 2273, 96099, 4159, 4156, 3671,
	3387, 3382, 3151, 3372, 2171, -1000, 3306, 1646, 270, -1000,
	-1000, -1000, -1000, -1000, -1000, 270, 1618, -1000, -1000, -1000,
	-1000, -1000, 101037, -1000, -1000, 1550, -1000, -1000, -1000, 1430,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1855, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3849,
	-1000, 2335, -1000, -1000, -1000, 2803, 3647, 3647, 3647, 3783,
	465, 460, -1000, 155, 946, 1235, -1000, -1000, 161779, -1000,
	-1000, 56122, 56122, 56122, 56122, 56122, 56122, 56122, 56122, 2444,
	-1000, 761, -1000, -1000, 824, -1000, 760, 675, 610, -1000,
	-1000, -1000, -1000, -1000, -1000, 749, -1000, -1000, -1000, -1000,
	-1000, -1000, 3985, -1000, 31835, -1000, -1000, -1000, 455, 747,
	56122, -1000, -1000, 4046, 4045, 1102, -1000, 267, 1040, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 3340, 744, 743, -1000, 740, 739, 738, 733, 732,
	-1000, 731, -1000, 729, 728, 727, 725, 724, 723, 722,
	717, -1000, 2331, -1000, -1000, -1000, -1000, -1000, -1000, 649,
	648, 648, 648, -1000, 1157, -1000, -1000, -1000, 301, 647,
	286, 646, 642, 641, -1000, 715, 710, 709, 708, 697,
	695, 689, 687, 686, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1149, -1000, -1000, -1000, -1000, 1455, -51, 142395, -1000,
	603, -51, -1000, -1000, 684, -1000, 40219, 40219, 40219, -1000,
	-1000, 2595, 56122, -1000, 2816, -1000, -36, -36, 983, 67484,
	-1000, 64336, 983, 332, 834, 73740, -1000, 3305, -1000, -1000,
	678, 259, -1000, -1000, -1000, -1000, 29244, 3304, 142395, 142395,
	142395, 113389, 113389, 113389, 142395, 4155, 4154, 3450, 56122, -1000,
	-1000, 82421, 155336, 114005, 1429, -45, -1000, -1000, 3892, 86131,
	81805, 3338, 155336, 3335, 3303, 154725, 90507, 289, 3508, -1000,
	-1000, 677, 4153, -1000, -1000, -1000, -1000, -1000, 3504, 4150,
	4149, 4148, 142395, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2553, 3503, -1000, -46, -1000, 117701, 2553, 3499, -1000, -46,
	2553, 3498, -1000, -46, 117085, -1000, -1000, 2553, 3496, -1000,
	-1000, 285, 3495, -1000, -1000, 280, 3493, -1000, -1000, 256,
	-89, 3489, -1000, -1000, -1000, -1000, -1000, -1000, 161779, -1000,
	-1000, -1000, 154107, -1000, 3705, -1000, 142395, -1000, 56122, -1000,
	-1000, 3890, 1608, 3707, 3819, -1000, -1000, -60, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2813, 2812, 1245, 2633, -1000,
	3540, 1547, 38935, 3611, -1000, -1000, -1000, -1000, -1000, 255,
	29244, 3152, -1000, -1000, 142395, -1000, 142395, 3033, 3033, -1000,
	-1000, -1000, 4012, 4011, 3033, 3033, 142395, 142395, -1000, -1000,
	-1000, -1000, -1000, -1000, -60, -1000, 5843, 3488, 1842, -1000,
	2632, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2173, 3487, -1000, 2556, 3485, 2166, -1000, -1000, 6103, -1000,
	2744, -1000, 158418, 1481, -1000, -1000, -1000, -1000, 2373, 3484,
	-35, -1000, -1000, 2374, -1000, 4000, 3208, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 158301, -1000,
	1834, -1000, -1000, 2365, 2240, -1000, 1470, 3483, -1000, 3060,
	3060, 105975, 3511, 71870, 69992, 86757, -59, -1000, -1000, -1000,
	-1000, -1000, -96, -1000, 27984, 161779, -1000, -1000, -1000, -1000,
	2027, 161779, 987, -1000, -1000, 3482, -1000, 161779, 969, -1000,
	-1000, 3481, -1000, 2882, -1000, 3334, -1000, -1000, -1000, 2700,
	89879, 2699, 1096, -1000, 105359, 2299, 4147, -1000, 4146, -1000,
	-1000, 4145, -1000, 4144, 4140, 4139, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 104741, 2592, -1000, -1000, 1634, 1061, 93017,
	-1000, 2698, 3817, -1000, 104123, 1160, -1000, 1079, 2697, -1000,
	1466, 116469, 1093, 2695, -1000, 4138, 3767, 2974, 1079, 2693,
	-1000, -1000, -1000, -1000, -1000, 1094, -1000, 74972, -1000, 74972,
	-1000, 1851, -1000, 149787, -36, 113389, 3985, -1000, -91, -1000,
	-1000, -1000, 1122, -1000, 68737, -1000, 68737, 120789, 93017, 1061,
	3302, 78703, 161707, -1000, 1095, -1000, -1000, 161779, -1000, -1000,
	-1000, 2880, -1000, -179, 3047, -1000, 93017, 71244, 3301, 2879,
	-1000, 161779, -1000, -1000, -1000, -1000, 161779, -1000, -1000, -1000,
	93017, 1634, -1000, 129421, 103505, -1000, -1000, 1645, 2865, -1000,
	-1000, -1000, 69992, 3298, 1471, 93017, 93017, 93017, 93017, 93017,
	-1000, 128803, -1000, -1000, 2326, 1795, 3672, 2323, 113389, -1000,
	2001, -1000, -1000, -1000, 3721, 3510, 142395, -1000, -1000, 3333,
	-1000, 85515, 3333, 115853, -1000, 115237, -1000, 114621, -1000, 113389,
	-1000, 113389, -1000, 4137, 4132, 4131, -1000, -1000, 4130, -1000,
	4129, 3710, -1000, 846, 48526, 161779, 3709, -1000, 4128, 2234,
	3332, 161779, -1000, 3501, 1872, 1861, 142395, -1000, -1000, 142395,
	-1000, 142395, -1000, 142395, -1000, -1000, -1000, 2610, 1749, -1000,
	-1000, 2810, -1000, -1000, -1000, 1092, -1000, -1000, 113389, 113389,
	113389, 113389, 113389, 1935, -1000, 47893, 3642, -1000, -1000, 3381,
	4127, 1881, -1000, 1998, -1000, 3297, 3684, -1000, 3296, 1640,
	2050, 243, 4050, 243, -1000, -1000, 292, -1000, -1000, 149171,
	-1000, 2803, -1000, 142395, -1000, 2800, 3324, 3331, 1824, 2569,
	2925, -1000, 47260, 2878, 59920, 2630, 155, -1000, -1000, 155,
	155, 37669, -1000, -1000, 38935, 946, 86131, 86131, 29244, 1445,
	56122, 56122, 56122, 56122, 56122, 56122, 56122, 56122, 56122, 56122,
	56122, 56122, 56122, 56122, 56122, 56122, 56122, 56122, 56122, 56122,
	56122, 56122, 56122, 56122, 56122, 56122, 56122, 56122, 56122, 56122,
	56122, 56122, 56122, 56122, 56122, 56122, 2348, 56122, 1425, 56122,
	56122, 56122, 56122, 2149, -1000, -1000, 2197, 541, 2263, 675,
	-1000, -1000, -1000, 3967, 3967, 3967, 841, 841, 841, 20871,
	20871, 518, 4126, 824, -1000, 56122, -1000, 90, 68100, 56122,
	29872, -1000, 460, 13817, 2796, -1000, 459, 30535, -1000, -1000,
	-1000, 31835, 610, 46597, 56122, 1097, 161779, -1000, -1000, 1515,
	3998, 27350, 3352, 3122, 674, 910, 908, 35107, 34444, 33781,
	33118, 903, 902, 56122, 56122, 56122, 56122, 56122, 56122, 56122,
	56122, -1000, -1000, 4009, -1000, 3998, -1000, -1000, -1000, -1000,
	3998, 1442, 1441, 3998, -1000, 3998, 3998, 6755, 6755, 45964,
	45331, 44698, 60553, 44065, 56122, 32485, 43432, 42799, -1000, 62452,
	142395, -51, 3885, 142395, 56122, 367, -1000, 13250, -1000, 367,
	367, 662, -94, 161779, 2951, 2951, 66232, 2654, 2468, 2468,
	2468, -1000, 983, 21605, 983, 126955, 2483, 983, 983, 238,
	297, 457, 63710, 2816, 126339, 810, 661, -22, -23, -26,
	-1000, -1000, -27, -28, -1000, -1000, 113389, 660, 29872, 29244,
	236, 2242, -99, 2900, 2899, 2897, 2894, -1000, 2893, 2589,
	-1000, -1000, -1000, 2071, -100, 1421, 113389, 142395, 2009, -1000,
	-1000, -1000, -1000, 86757, -52, 86757, 142395, 3641, 113389, -86,
	-1000, 155336, 7524, -101, -1000, 1432, 235, 3998, -1000, -1000,
	-1000, -1000, -1000, 4124, 4121, -1000, 1148, 654, 650, 444,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 649, 648,
	648, 648, -1000, 301, 647, 286, 646, 642, 641, -1000,
	-1000, -1000, -1000, -1000, 3294, 113389, 142395, 2005, 84899, 102887,
	-89, 114005, 155336, -44, -1000, -1000, -1000, -1000, 113389, -1000,
	-1000, 113389, -1000, 76208, -1000, 142395, -1000, -1000, -1000, 4120,
	-1000, 113389, 113389, 2553, 3475, -1000, 113389, -1000, 113389, 274,
	3472, -1000, -1000, 142395, -1000, 113389, 113389, -1000, 142395, 142395,
	142395, 155336, 155336, 273, -1000, 113389, 946, -102, 1267, -60,
	-1000, -1000, -1000, -1000, 1550, -1000, 1895, -1000, -1000, -1000,
	-1000, -1000, -1000, 1612, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1102, -1000, -1000, -1000, -1000, 3996, 3983, -58,
	-1000, -1000, 29244, -1000, 2181, -1000, -1000, -1000, -1000, 142395,
	142395, -1000, -1000, 142395, 142395, -1000, -1000, -61, 1803, 604,
	1415, -1000, 95481, 2664, 3653, 4118, 2963, 3633, 1850, -1000,
	1748, 640, -1000, 3800, 101037, 3831, 3850, 1472, -1000, 3292,
	-1000, -1000, -1000, 1029, 1859, 2022, 1414, 1413, 101037, 2556,
	-1000, 86131, -1000, 2956, 3781, 1510, 1516, 1510, 1510, 1534,
	1484, -1000, 101037, 2017, 1411, 1407, 7037, 1402, 2016, 1400,
	3531, -1000, -1000, 2584, 2660, -1000, -1000, -1000, -1000, 1876,
	3049, -1000, 2818, 1508, 1508, 142395, -1000, 1398, -1000, -1000,
	1800, 1840, -1000, -1000, 128187, 1921, -1000, 1397, 1396, 143627,
	3906, 3849, 2504, 859, 2232, -1000, 1476, 1394, 3283, -1000,
	-1000, -65, 3830, 3843, 1472, -1000, -1000, 3282, 1393, -1000,
	1131, -1000, -1000, -1000, -1000, 3780, 113389, 29244, 1746, 1745,
	1737, 2014, 1391, -53, -1000, 3823, 1838, -1000, 3926, 93017,
	-1000, 2735, 1825, -1000, 1634, 1634, 123259, 142395, -1000, -1000,
	-1000, 3744, 3740, -1000, -1000, 1388, 1387, -1000, 1120, 10343,
	3581, -1000, 155336, 1120, 1120, 2142, 3462, 3026, 1802, -1000,
	3043, 973, 3042, -1000, -1000, -1000, 973, -59, 86757, 142395,
	234, -1000, 90, 56122, 56122, 90, 56122, 90, -1000, 3812,
	3459, 3884, -1000, 3455, 4117, 636, -1000, -1000, 2833, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 634, 2691, 3280, 142395,
	257, -1000, 113389, -1000, 3882, 127571, -1000, 3454, 155336, 2556,
	2690, -1000, -1000, 102271, -1000, 3453, 2245, 497, 2689, -1000,
	766, 4115, 3452, -1000, 148555, -1000, 3705, 1456, 3448, 1201,
	524, 3881, -1000, 524, 76835, -1000, 142395, -1000, -36, 7094,
	94249, -107, -109, 453, -1000, 142395, 142395, 3599, 2269, 2267,
	-1000, 1073, 69992, -1000, 69992, -110, -1000, -179, 3040, 1708,
	69992, -1000, 1061, -116, 973, -1000, 973, -1000, 113389, 3330,
	-1000, 93017, 69992, -1000, 1061, 1061, 1061, 1061, 1061, -1000,
	-1000, -1000, -1000, 4114, 4113, 4112, 4111, -1000, -1000, 1077,
	113389, 142395, 113389, -1000, 3024, 1787, -1000, 233, -1000, 155336,
	-1000, 155336, 142395, 113389, -1000, -1000, 1077, 142395, 1077, 142395,
	1077, 142395, 1077, 1077, -1000, -1000, -1000, -1000, -1000, 90,
	-1000, -1000, 161779, -1000, 56122, -1000, -1000, 1743, 4108, 1869,
	-1000, 3328, -1000, 3327, -1000, 12, 232, -1000, -1000, 4008,
	2133, -1000, 4041, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 4107, 3635, 161779, -1000, 89251, 2474, -1000, -1000,
	-1000, -1000, 113389, 113389, 113389, 113389, 142395, 3576, -1000, 142395,
	3567, 3572, 113389, -1000, 3971, -1000, -1000, 101037, -1000, 2800,
	3324, -1000, -1000, -1000, -1000, -1000, -1000, 1633, 2535, -1000,
	2860, -1000, 1775, -1000, -1000, -1000, 161779, 61186, -1000, -1000,
	161779, 2130, -1000, 59287, 58654, -1000, -1000, 1930, 113389, 2929,
	-1000, 2929, -87, -1000, 159225, 2859, 113389, -58, 38935, -1000,
	-1000, -1000, -1000, -1000, 1027, 638, 638, 1502, 1502, 1502,
	1502, 3806, 1272, 6075, 2599, 7055, 7055, 9210, 9210, 9210,
	9210, 9210, 7055, 2588, 841, 841, 2588, 2588, 2588, 2588,
	2588, 841, 841, 841, 7055, 7055, 7055, 841, 20871, 162205,
	12381, 56122, 56122, 1380, 2123, 541, 11933, 56122, 5873, 5873,
	5873, 5873, -1000, 2424, -1000, -1000, -1000, -1000, 3273, 626,
	60553, 60553, -1000, -1000, -1000, -1000, 31185, 56122, -1000, -1000,
	-1000, -1000, 42136, -1000, -1000, 158256, -332, 451, -1000, 231,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 449, -85, 135, -1000, 56122, 56122, 56122,
	446, -1000, 229, 56122, 142395, -1000, 19198, 807, -112, -1000,
	-119, 1578, -1000, 56122, -1000, -1000, 1367, -1000, 1366, 1355,
	1354, -1000, 624, 445, -1000, 223, -1000, 2466, 620, 619,
	56122, -1000, -1000, -1000, -1000, -1000, 157651, -1000, -1000, 157606,
	-1000, -1000, 157534, -1000, -1000, 157489, -1000, -1000, -1000, -1000,
	-1000, 161468, 18494, 17789, 16435, 10372, 15281, 14792, -128, 439,
	-131, 438, 1021, 1018, 436, 433, 432, -133, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-134, 431, -1000, 3272, -85, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 423, -1000, 422, -1000, 161223, -85, 419,
	6757, -1000, 60553, 60553, 60553, 60553, 416, -1000, 159070, -1000,
	161039, 41503, 41503, 41503, 414, 160792, 56122, -85, -136, -1000,
	-139, -1000, -1000, -1000, -1000, 569, -144, -1000, -147, 1071,
	40219, 64978, 29244, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1071, 1071, 56122, -1000,
	56122, 2871, -1000, -1000, -1000, -1000, 2870, 2067, 2951, 66232,
	-1000, -1000, -1000, -1000, 126955, -1000, 3985, 3289, -1000, 126955,
	-1000, -1000, 142395, 603, -1000, 126955, 126955, 29244, 983, -1000,
	-1000, 142395, 602, 983, 126955, 880, -1000, -1000, -1000, -1000,
	-1000, 410, 79329, 135, 216, 29244, 1079, -1000, -1000, 3001,
	3001, 3001, 3001, 3001, 113389, -1000, -1000, 155336, 1352, -57,
	-49, 3039, 3038, 3037, -59, 86757, -59, -96, 142395, -54,
	3927, -259, -1000, 2355, -1000, 86131, -1000, 823, 1282, 29244,
	-1000, -1000, -1000, 618, -1000, 3998, 3998, -1000, 3998, 155336,
	3269, 312, 3036, 3034, 3029, -1000, 2581, 99805, 306, -89,
	155336, -1000, 289, -153, -1000, -1000, 84271, 79945, -1000, 2470,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 4106, -1000, 2553,
	-1000, -1000, 113389, 2553, 2553, -1000, 113389, 113389, 2553, -1000,
	285, -1000, 280, -1000, -1000, -89, -1000, 1091, 38935, -1000,
	1550, -1000, -1000, 1739, -1000, 2287, -1000, 1330, -1000, -1000,
	38935, -1000, 3602, -1000, 1960, -1000, -1000, -1000, -1000, 4663,
	142395, 142395, 113389, -1000, 124491, 142395, -1000, 2423, 155336, -1000,
	2688, 147939, 2669, 147323, 86131, -1000, -1000, 616, 1038, 2858,
	2854, 1199, 142395, 142395, 2852, 146707, 146091, -1000, 4104, 142395,
	2347, 56122, 124491, 3779, 2489, 3925, 90, 90, -1000, 90,
	-1000, -1000, 615, 1353, 113389, 113389, 142395, 155336, 113389, 2129,
	-1000, -1000, -1000, -1000, -1000, 101653, -1000, -1000, 1510, -1000,
	-1000, -1000, 1510, -1000, 1510, 2556, 2025, 142395, 155336, 113389,
	-1000, -1000, -1000, -1000, 142395, 142395, 155336, 2579, 2659, 2578,
	3044, -1000, -1000, -1000, -1000, -1000, -1000, 155336, 145475, 2221,
	144859, 2216, 2209, -1000, -1000, -1000, 2176, 2206, 2400, 2013,
	142395, -1000, -1000, -1000, -1000, -1000, 1585, -1000, 859, 1351,
	3268, 56122, 56122, 2364, 90, 90, -1000, 90, 614, 29244,
	-1000, 1372, -1000, 3300, 142395, 4040, 144243, 4039, 142395, 142395,
	142395, 155336, 3662, 142395, -55, -1000, 1751, -1000, 3926, -1000,
	954, -1000, -116, -56, -121, -1000, 953, 951, -96, 2334,
	142395, 155336, -1000, 143627, 10343, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2363, 3004, 1215, 142395, 1470, -1000, -1000, 2003,
	1350, 1349, 101037, 2362, 1993, 2098, 155336, 69992, 1075, 69992,
	2984, -1000, -1000, 26716, -1000, 161779, 161779, -1000, 161779, -1000,
	83655, 93017, 93017, 142395, -1000, 77461, 142395, 94865, 1055, 3446,
	75590, -96, 1061, 1634, 3361, 1866, -121, 613, 142395, -1000,
	-1000, 2556, 3444, 497, 2685, -1000, 155336, 1152, 3879, 3435,
	612, 4103, 4102, -1000, 113389, 2576, 2684, -1000, -1000, 143011,
	3437, 859, 142395, 1071, 66232, 2214, -1000, 73124, 1186, 142395,
	2128, 287, -1000, -1000, -1000, -12, 142395, -1000, 831, -1000,
	-1000, 7094, 7094, 1061, 70618, -155, -1000, 214, 611, 950,
	949, -1000, 5645, -1000, -179, -1000, 93017, 1073, 69992, 3267,
	-179, 3028, 3262, -1000, -1000, 1090, 1061, 1604, 3027, 1061,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -37, -1000, 1980, 2096, 142395, -89, -89,
	-71, -1000, -1000, 212, -57, -1000, 1077, -1000, 1077, -1000,
	1077, -1000, -1000, -1000, 161779, -1000, -1000, -1000, 1863, 1862,
	142395, -1000, 142395, 3323, -1000, 142395, -1000, -1000, 4101, -1000,
	-1000, 29244, 142395, 113389, 29244, 113389, 3322, 3320, -1000, -1000,
	-1000, 142395, -1000, -1000, 142395, -1000, -1000, -1000, -1000, -1000,
	-1000, 1224, -1000, 2130, 2534, -1000, 610, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2794, -1000, -1000, 37669,
	986, -1000, -1000, 113389, -38, -58, 56122, 56122, 11331, 11092,
	56122, 60553, 60553, -1000, 56122, 9373, -1000, -1000, -1000, -1000,
	-1000, 3259, 608, 56122, 86131, 7624, 6233, -1000, 408, 14308,
	2588, -1000, 56122, -1000, 8200, -1000, 404, 40870, -1000, 159501,
	99, -162, -1000, 22254, -85, -163, -1000, -1000, 821, -1000,
	3430, -1000, 56122, 160703, 2758, 2204, 2066, 1864, 3998, 4038,
	26082, -1000, 78087, 1107, 2492, 156884, -1000, -1000, -1000, -1000,
	86131, 86131, 56122, 56122, -1000, 56122, 56122, 56122, -1000, -1000,
	-1000, 3998, 994, -1000, -1000, -1000, 994, -1000, -1000, 1510,
	-1000, 1510, -1000, 56122, -1000, -1000, 3257, 56122, -1000, 86131,
	86131, 60553, 60553, 60553, 60553, 60553, 60553, 60553, 60553, 60553,
	60553, 60553, 60553, 60553, 60553, 60553, 60553, 60553, 60553, 60553,
	60553, 2846, 60553, 3949, 3949, 3949, 1015, -1000, 3319, 3257,
	56122, 56122, 86131, 403, 402, 399, -1000, 56122, -85, -1000,
	-1000, 10021, 607, -1000, 2774, -1000, 142395, -1000, 3120, -1000,
	56122, -1000, -154, -1000, 2816, -1000, -1000, 3120, 3120, -164,
	161779, 66232, 66232, -1000, 605, 56122, 2867, -1000, -1000, 800,
	-329, -1000, 944, -1000, -1000, -1000, -1000, -1000, -1000, 943,
	-1000, 603, -1000, -1000, -1000, 210, 126955, 602, -1000, 142395,
	126955, 799, -1000, -165, -1000, -1000, -170, -1000, 126339, 398,
	29244, -1000, 1071, 4712, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2875, -259, 155336, 155336, 1976, 1970, 1958, -59, -96,
	2521, -1000, 3139, 4037, -1000, 3999, 820, 793, 209, 3998,
	397, 392, 387, -89, 155336, 155336, 1957, 1934, 1931, 81189,
	3254, 155336, -1000, -1000, -1000, 77461, 86131, -1000, 86131, -1000,
	-1000, -1000, -1000, 2553, -1000, -1000, -1000, 274, -1000, -1000,
	-1000, -1000, 2954, -1000, -60, -1000, -1000, -1000, 56122, -1000,
	1064, -1000, -1000, 3652, 589, 1348, 1347, -1000, -172, -1000,
	942, -1000, -1000, -1000, -1000, -1000, 3168, -1000, 3429, -1000,
	2682, -1000, 1165, 2680, 1798, -1000, 56122, 588, 2972, 586,
	585, 4099, 2306, 4098, 1200, 3421, 2553, 3418, 2553, -1000,
	-1000, -1000, 1034, -1000, 161779, -182, -1000, 2489, -1000, 584,
	583, -1000, -61, 1777, 570, 1345, 1085, -1000, -1000, 56122,
	56122, 125723, -1000, 507, 3664, -39, -1000, -1000, -1000, 1926,
	1344, 1342, -1000, -1000, -1000, -1000, -1000, 2556, 1924, 1341,
	1339, -1000, -1000, -1000, -1000, -1000, -1000, 3376, 2942, 2655,
	-1000, -1000, -1000, -1000, 2675, -1000, 142395, -1000, 3416, 142395,
	3073, 859, 142395, 3664, 3161, 1084, -1000, 3370, 3369, 1000,
	142395, 56122, 56122, 160313, 160009, -1000, 1082, -1000, -1000, 56122,
	-1000, -65, -1000, 1329, 3825, 2673, 113389, -1000, 2553, 3409,
	1328, -1000, 1323, -1000, -1000, -1000, 3822, 3810, 1326, 1838,
	93017, 69992, 2593, -1000, 3809, 2518, 3976, 3926, 69992, -1000,
	123259, 93017, 93017, -1000, -1000, -1000, 3976, -1000, -1000, -1000,
	-1000, 88623, -1000, -1000, 1120, 142395, 155336, 113389, 1959, -1000,
	-1000, 99805, 100421, 142395, 3026, -89, 973, -1000, 2704, 973,
	1075, 3248, -1000, 2923, -1000, -1000, 1080, 386, -66, -1000,
	1356, 4097, 382, -183, -67, 86131, -1000, -1000, -1000, -1000,
	2669, 113389, 142395, 1454, 2969, 142395, 142395, 3875, -1000, 2563,
	673, 113389, 976, -1000, 3985, -1000, -1000, -1000, 142395, 40219,
	123259, -1000, 3816, 113389, 3872, 3407, 1079, 113389, 90, 113389,
	4020, -1000, -1000, 3865, 113389, 3406, 2575, 2672, 2823, 859,
	93633, 1079, 2487, -77, -1000, 2128, 39568, 3665, -189, -1000,
	-1000, -1000, 1071, 76835, 66232, 56122, 4095, -190, -1000, -1000,
	-1000, -1000, -1000, 93017, 1061, 142395, 142395, 4093, 93017, 93017,
	93017, -68, 579, -1000, 933, 932, 928, -1000, -1000, -1000,
	-1000, -1000, -1000, 926, 925, 920, 919, -1000, -1000, 1073,
	-1000, -1000, -179, 69992, 1073, 69992, 90, -1000, 2505, -1000,
	113389, 69992, -1000, 25448, 142395, 3024, -1000, 87989, -1000, -1000,
	-1000, -1000, -1000, 1077, -1000, 4031, -96, -1000, -1000, -1000,
	-1000, 2379, 2628, 2379, 2089, 2087, -1000, -1000, -1000, 2532,
	-1000, -1000, -1000, -1000, 2926, 3659, 29244, 3814, 5873, 56122,
	56122, 7773, 5727, 676, 5873, 56122, 56122, 86131, 9253, -191,
	56122, 56122, -1000, 56122, 791, 161779, -1000, 4029, 56122, 381,
	378, -1000, -1000, -1000, 3989, -1000, -1000, -1000, 161779, 56122,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 377, -1000, 204,
	-1000, -1000, -1000, 151635, -1000, 56122, 376, 3777, -1000, 369,
	366, 13979, 356, 156839, 156767, 156722, 365, -1000, -1000, 362,
	359, 161779, 3319, 161779, -1000, -1000, 1119, 1119, 1478, 1478,
	1478, 1478, 3949, 1069, 1151, 985, 764, 764, 764, 781,
	1015, 1015, 764, 764, 764, 1015, 3247, 2839, 578, 7746,
	-1000, -1000, 161779, 161779, 358, -1000, -1000, -1000, -85, 354,
	10021, -1000, -1000, 3116, 3776, 161779, -1000, 66232, 3116, 3116,
	-1000, -1000, 2067, 142395, 161779, 66232, -1000, 3289, -1000, 23540,
	22900, -1000, 29244, -1000, -1000, -192, -1000, 86131, -1000, -1000,
	-1000, 3985, -1000, 79329, -1000, -1000, 156, -1000, 4712, -1000,
	916, -1000, -1000, 93017, 93017, 4088, 4086, -1000, 4028, 4027,
	2486, 4026, 3001, -1000, -259, -156, 142395, 142395, 142395, -1000,
	2511, -1000, 787, 4083, 816, 29244, 353, -1000, -1000, -1000,
	-89, -89, 142395, 142395, 142395, 3245, 113389, 142395, 1898, 155336,
	-89, -1000, -1000, -1000, -1000, -1000, -1000, 3594, 161779, 3318,
	3093, 3085, 142395, 142395, -1000, 124491, 38935, 1642, 125107, 142395,
	3400, -1000, 3399, -1000, 1199, 3022, 156117, 66858, -1000, 66858,
	142395, -1000, -1000, -1000, -1000, 2285, 1615, 4078, 1252, -1000,
	3730, 142395, -1000, 142395, -1000, -1000, -1000, 124491, -1000, 142395,
	142395, 113389, 142395, -1000, 155336, 3383, -198, 161779, -69, -1000,
	892, -1000, 1298, -1000, 24814, 142395, 155336, 113389, 142395, 155336,
	113389, 142395, -1000, 2937, 3397, 1184, 142395, -1000, 3395, 142395,
	1183, -1000, -1000, 142395, 2413, -1000, -1000, 3368, -1000, 161779,
	159892, 90, 56122, 3380, -199, 29244, -1000, 4025, 4024, 3394,
	3735, -1000, 142395, 4023, 142395, 113389, 3593, -1000, -1000, -1000,
	-1000, 891, 887, 886, 882, 881, 3942, 123259, -1000, 1076,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1922, 1316, 1312, 2574, 2565, 2509, -71, 2362, 1075, -72,
	577, -1000, 1075, -1000, 93017, 69992, 4077, 2111, 77461, 56122,
	56122, -1000, 2955, -1000, 120171, 94865, 2564, -1000, -1000, 575,
	142395, 142395, 568, -1000, 90, -1000, 4075, 124491, 567, -1000,
	2502, -1000, 786, -1000, -1000, 260, -201, 155336, 2556, 90,
	113389, -1000, 497, 1072, 497, 352, -73, -1000, 3434, 1196,
	29244, 113389, 3393, 2825, 859, 93633, -1000, 1456, 2925, -1000,
	-76, -1000, 721, 90, 2487, -1000, -77, 161779, -1000, 871,
	330, -1000, 3592, -1000, -1000, -206, -1000, -1000, 2861, 2861,
	93017, 69992, 93017, 93017, 93017, 69992, 93017, -1000, 1073, 3864,
	-1000, -179, -1000, 2668, 1061, 1061, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 29244, 1766, -1000, 562, 558, -1000,
	-1000, -1000, -1000, 3659, 5873, 5873, 56122, 56122, 56122, 5873,
	9253, -207, -1000, 5873, 5873, -85, -1000, -1000, 159501, -1000,
	-1000, -1000, 161779, -1000, 24180, 2394, -1000, 156072, -1000, 37669,
	-1000, -1000, 56122, 56122, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 60553, 3244, 556, 86131, -1000, -1000, 322, 1105,
	56122, 58021, 2816, 1105, 1105, -1000, -208, -1000, -1000, -1000,
	3985, -1000, 3985, 156, -1000, 142395, -1000, -1000, -1000, 29244,
	-1000, 93017, -1000, -1000, -1000, -1000, -1000, 4073, 4072, 2641,
	4070, 4067, -1000, -1000, -1000, 3354, -115, -171, -180, -1000,
	813, -1000, 4066, -1000, -1000, 250, 249, 246, 155336, 3242,
	241, 3023, 3017, -89, -1000, 90, -1000, -1000, -1000, -1000,
	-1000, -1000, 3006, 3863, -1000, 2201, -1000, 142395, 142395, -1000,
	142395, -1000, 29244, 142395, 3121, 1386, -1000, 1038, 2850, 555,
	60553, 1223, 113389, 989, 3076, 3075, -1000, 3903, 3775, 3086,
	-217, -1000, 142395, 56122, 142395, -220, -222, 2639, -1000, -1000,
	1222, 1383, 56122, 1221, -1000, -1000, -1000, 86131, 554, 2553,
	2553, -1000, -225, -228, -1000, -1000, -1000, 56122, 1307, 142395,
	38302, -1000, 4065, 3664, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 142395, 142395, -1000, -1000, -1000, 142395, 3664, 142395,
	-1000, 56122, -1000, 159346, 56122, 1304, -1000, -1000, -1000, 4022,
	2553, 29244, 2553, -1000, 2553, 3735, 1248, 93017, 56122, 1658,
	69992, 69992, -1000, -1000, -1000, 2557, 142395, 155336, 113389, 1730,
	1730, 3315, -1000, -1000, -1000, 2593, 2593, -1000, -79, 1075,
	-1000, 1783, -1000, 161779, 161779, 2386, 4064, -1000, -1000, -1000,
	-1000, 2845, -1000, -1000, -1000, 142395, 2841, 3070, 66858, 550,
	549, 142395, 1065, -1000, -231, 94865, 1055, 1041, -1000, 74972,
	-1000, -1000, -1000, -1000, 497, 3862, -1000, 2948, 3858, -1000,
	4021, 544, 543, 142395, 2558, 542, 29244, 3640, 859, 93633,
	-1000, 3437, 2128, -1000, 2605, 142395, 3632, -1000, 2925, 541,
	1061, 540, 1061, -1000, -233, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1332, 1073, -80, -1000, 960, 940,
	-1000, -1000, -1000, -1000, 113389, 113389, 56122, 56122, -1000, 5873,
	5873, 5873, -1000, 318, -1000, -1000, 2487, 3770, -1000, -82,
	156000, 155955, 712, 60553, 86131, -234, -1000, -1000, 142395, 161779,
	-83, -1000, 161779, 539, 537, 486, -1000, -1000, -1000, 785,
	783, -1000, -1000, -1000, -1000, 4063, -1000, -1000, -1000, 155336,
	155336, 155336, 4062, -1000, 155336, 155336, 155336, -89, 155336, 155336,
	1918, 1913, -1000, 123875, 142395, -1000, -1000, 1798, 2548, -1000,
	-1000, 142395, 2670, -1000, -1000, -1000, 1068, 56122, 7746, 60553,
	536, 56122, -1000, 535, 532, 3857, 3556, -1000, 2952, 3149,
	2116, 66858, -1000, 3659, -1000, 20716, -1000, 1194, 2220, -1000,
	-1000, -1000, -1000, 161779, 60553, 3735, 66858, -1000, -1000, 526,
	525, 161779, 522, 863, 3240, -1000, -1000, -1000, -1000, -96,
	-96, -1000, -1000, 161779, 90, 161779, 516, 3825, -1000, -1000,
	-1000, -1000, 2553, 113389, -1000, 161779, -1000, -1000, -1000, -1000,
	862, -1000, -1000, -1000, 1295, -1000, -1000, -1000, -1000, -1000,
	4061, 3234, 99805, -1000, -236, 2248, 86131, -1000, 1055, -1000,
	-1000, 2564, 514, -1000, 1060, 2944, 2944, -241, 66858, 66858,
	-242, 2540, 2933, -1000, 313, 3855, 1041, -1000, 3962, -1000,
	1071, -1000, 3842, 90, 3590, -1000, 90, -1000, 4020, 66858,
	-1000, 113389, 66858, 2552, 2309, 2807, 93633, -1000, 2823, -1000,
	-1000, -243, 142395, 2128, -1000, -1000, 93017, -1000, -1000, 3954,
	-1000, 2668, -1000, 142395, -1000, 142395, -1000, -1000, -244, -249,
	-1000, 2382, 56122, 37669, -1000, -1000, 712, -250, -1000, -84,
	-1000, 3841, 58021, 4060, 4059, 4057, -1000, -1000, -1000, -259,
	-259, -259, -1000, -89, -89, -89, -89, -89, 142395, 142395,
	-1000, 2194, -1000, 2669, -1000, -1000, 3389, -1000, 3111, 509,
	20627, 7746, 2787, 142395, 19968, 2556, 2556, -1000, 3837, 3144,
	-1000, -1000, 2364, 502, -1000, -1000, -1000, -1000, 986, 142395,
	1060, 3098, 113389, 7746, 1197, -251, 2379, 2379, 56122, 37036,
	2407, -1000, 56122, -1000, -1000, 3735, 69992, 155336, -1000, 155336,
	2546, -1000, 3169, 5937, -1000, 2540, 142395, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1194,
	-252, -258, -1000, -1000, 3718, -1000, 3589, 2955, 90, -1000,
	-1000, -1000, 90, -1000, 4056, 1072, 309, -260, 1196, -261,
	113389, 2205, -1000, 859, -1000, 2825, 1071, 3524, -1000, -263,
	-1000, -1000, -1000, -266, -269, -1000, -1000, 308, 57388, 57388,
	57388, -85, -87, -1000, 142395, 498, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 184, 163, -1000, -1000, 3360, 979, -1000,
	907, 2104, 307, 1207, 258, -19, -1000, -1000, -1000, 3086,
	-1000, 142395, -1000, -1000, -1000, 979, 497, -1000, 56122, 1194,
	-271, -1000, 1182, -278, -1000, 1180, -279, -1000, 3221, -1000,
	-284, 2553, -1000, -259, 273, 1730, 1070, 3807, 2491, 5937,
	-1000, 4018, 93633, -1000, -1000, -1000, 2799, -285, -1000, -1000,
	2116, 1194, 2364, 2636, -1000, 2386, 1065, -1000, -1000, -1000,
	-1000, 1194, 492, 2116, 488, 1681, 859, -1000, -1000, 1510,
	3640, 3457, 1511, 1061, -1000, -1000, -1000, 3413, -1000, 61819,
	2560, 2084, 158741, 3413, 3413, -1000, -1000, 155336, 155336, 142395,
	1060, 3772, -1000, 966, 962, 1678, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1071, -286, -1000, 2787, 161779, 1060,
	-1000, 2379, 3005, -1000, 2379, 3192, -1000, 2376, -1000, -1000,
	-1000, -1000, 3183, -1000, 2047, 3928, -1000, -1000, 3826, 56122,
	-1000, -1000, -1000, -1000, -1000, -1000, 1060, 142395, 2364, 2116,
	1060, 2062, 2057, 4055, 1055, 2540, 2116, 66858, 2364, 66858,
	2350, -1000, 142395, -1000, 2309, 1506, -1000, 1831, -1000, -1000,
	2065, 3848, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -89,
	-89, -1000, -1000, 861, -1000, 3537, -1000, 1220, 2313, 2313,
	-1000, -1000, 907, -1000, -1000, 482, -1000, 478, -1000, 155336,
	2495, -1000, -1000, -1000, 161779, -1000, -1000, 1060, 2364, 1071,
	-1000, 4054, -1000, 2540, -1000, 2364, -287, 1060, -298, 2422,
	-1000, -1000, -96, 2205, -1000, 1828, 76835, 2075, -1000, -1000,
	2480, 56755, 56122, -1000, 3933, -1000, -1000, 2869, -1000, 3086,
	56122, 56122, 273, 74356, 17073, 1071, 1060, 1377, -1000, 2799,
	1060, 1194, 1071, 2116, 1887, 859, 1681, 76835, -274, -1000,
	-1000, -1000, 161779, -1000, -1000, -1000, -1000, -307, -308, -1000,
	-121, 123259, -320, -1000, -1000, -1000, 1377, 1071, -1000, 1127,
	-1000, -1000, -1000, 1071, 2116, 1377, 2364, -1000, -1000, 2176,
	155336, 2350, -274, -1000, 2364, 1291, -310, -1000, -1000, 1377,
	-1000, 1377, 2364, -1000, 1060, -1000, 2422, -1000, -1000, -1000,
	471, -1000, -1000, -1000, 1060, 1071, 1887, 56122, 1071, 1377,
	-1000, -317, 1377, -1000, 2364, -1000, -1000,
}

var sqlPgo = [...]int16{
	0, 4972, 4970, 25, 4969, 4968, 4967, 4966, 4963, 4962,
	4961, 4960, 4957, 4956, 4954, 4952, 173, 4950, 4949, 4941,
	4938, 4936, 4934, 4931, 4930, 4929, 4926, 4925, 4920, 4917,
	4913, 4911, 4910, 4908, 4907, 4906, 4904, 4903, 4901, 4900,
	4899, 4898, 4897, 4896, 4895, 4894, 4892, 4891, 4890, 4889,
	4888, 4887, 4883, 4882, 4880, 4879, 4877, 4876, 4874, 4872,
	4871, 4870, 4869, 4866, 4865, 4862, 4860, 4859, 4857, 4856,
	4852, 4851, 4850, 4849, 4847, 4844, 4843, 4842, 4840, 4839,
	4838, 4837, 4836, 4835, 74, 4832, 4831, 4830, 4829, 4825,
	4824, 4823, 4822, 4821, 4820, 4819, 4818, 4817, 4815, 4813,
	4812, 4811, 4810, 4808, 4806, 4804, 4800, 79, 4798, 327,
	4797, 4795, 4794, 4793, 4792, 4791, 4790, 4789, 4788, 4786,
	4784, 4781, 4775, 4774, 326, 4773, 16, 198, 4768, 4767,
	30, 4766, 4765, 325, 4763, 4760, 4752, 4749, 4748, 335,
	4745, 4742, 4736, 4734, 4732, 307, 4729, 4728, 4723, 4722,
	4721, 4715, 90, 168, 4714, 4710, 1407, 4709, 4708, 4707,
	4706, 4704, 4703, 4702, 305, 309, 4700, 4699, 4698, 304,
	205, 4695, 324, 4694, 4692, 4691, 4690, 4680, 4679, 4678,
	4677, 4676, 4675, 4671, 4669, 4668, 4665, 4662, 4661, 4658,
	4657, 4654, 4653, 4650, 4648, 4647, 4643, 4641, 4640, 4637,
	4635, 4634, 4631, 4627, 4626, 4622, 4621, 4620, 4618, 4616,
	4613, 4607, 4604, 4600, 4599, 4598, 4597, 303, 257, 192,
	4596, 4594, 4593, 4592, 4591, 4590, 323, 319, 4588, 4586,
	4581, 4580, 4579, 3837, 4578, 4576, 4572, 4563, 4559, 4543,
	4538, 4537, 4536, 142, 8, 35, 4529, 4528, 134, 119,
	114, 98, 122, 127, 4524, 4521, 147, 4518, 161, 151,
	4517, 143, 130, 36, 6, 269, 290, 4983, 288, 4516,
	4514, 4513, 297, 236, 4512, 289, 4511, 4510, 4506, 4505,
	4504, 4503, 85, 65, 248, 4502, 165, 4501, 4500, 164,
	206, 218, 216, 210, 214, 94, 71, 125, 103, 76,
	60, 21, 123, 259, 33, 253, 5, 7, 314, 4499,
	310, 11, 170, 15, 43, 4498, 4497, 4496, 4495, 4507,
	133, 4494, 318, 295, 203, 4493, 4492, 4491, 840, 4486,
	4485, 66, 287, 224, 145, 129, 49, 158, 4484, 189,
	204, 41, 4482, 255, 104, 4480, 4479, 121, 107, 10862,
	9775, 4478, 4476, 139, 108, 138, 7746, 234, 211, 241,
	126, 156, 201, 196, 4475, 191, 4474, 176, 174, 215,
	67, 4472, 112, 4470, 3859, 113, 221, 193, 7117, 4469,
	4468, 4466, 118, 4465, 128, 4464, 4462, 81, 24, 3,
	2, 171, 54, 52, 28, 4461, 50, 155, 63, 32,
	4458, 39, 4457, 4456, 4454, 4453, 62, 4452, 68, 207,
	4451, 4450, 331, 4449, 99, 72, 59, 4448, 29, 270,
	4447, 281, 163, 4445, 4444, 229, 233, 237, 223, 266,
	4443, 83, 279, 4441, 4440, 4439, 4438, 4437, 334, 160,
	9, 159, 4436, 4435, 185, 4434, 70, 292, 239, 4433,
	80, 4432, 4430, 217, 87, 172, 329, 213, 273, 154,
	277, 242, 280, 4428, 4427, 4426, 226, 4421, 4420, 274,
	200, 4418, 4417, 268, 336, 115, 61, 12, 208, 100,
	286, 102, 235, 194, 4416, 246, 181, 4415, 183, 4413,
	110, 4412, 333, 220, 263, 53, 14, 19, 109, 131,
	4410, 10, 285, 186, 251, 150, 4409, 8227, 3599, 3012,
	275, 4406, 182, 146, 96, 152, 190, 317, 97, 4405,
	4399, 3686, 4398, 4395, 4394, 4393, 228, 4390, 4389, 256,
	180, 179, 4387, 178, 284, 4383, 124, 89, 69, 37,
	162, 111, 320, 157, 282, 199, 301, 4382, 4381, 4380,
	231, 4378, 101, 153, 245, 4376, 244, 308, 78, 4374,
	195, 4373, 184, 2905, 82, 187, 4372, 271, 4370, 4369,
	4368, 4366, 4364, 4363, 4362, 2733, 283, 4360, 4359, 4357,
	51, 240, 4356, 238, 212, 258, 75, 77, 232, 116,
	2584, 132, 2537, 243, 56, 4, 1, 84, 4354, 6277,
	92, 4351, 0, 16264, 11918, 15087, 4350, 4349, 15714, 4346,
	4055, 4345, 4344, 4343, 265, 105, 4342, 4341, 4340, 136,
	4339, 106, 4338, 4337, 95, 4336, 47, 22, 23, 42,
	40, 800, 559, 4330, 4327, 45, 166, 26, 4325, 321,
	276, 4323, 4319, 4318, 4316, 120, 4315, 55, 4314, 64,
	4313, 4312, 58, 18, 48, 4311, 4309, 252, 197, 3729,
	202, 177, 4304, 144, 4302, 4300, 298, 86, 167, 4298,
	4297, 313, 249, 254, 149, 4296, 302, 4295, 250, 4293,
	91, 38, 4290, 4289, 294, 141, 140, 73, 300, 169,
	57, 4285, 4283, 4276, 4275, 225, 4271, 4269, 4267, 4265,
	4264, 137, 175, 4263, 93, 4261, 4260, 4257, 44, 260,
	227, 4253, 13, 4251, 4250, 4249, 267, 272, 306, 222,
	261, 4248, 4247, 209, 4241, 4239, 4238, 311, 4235, 4231,
	3830, 315, 4229, 46, 4228, 4227, 4226, 20, 4225, 4224,
	247, 3580, 4223, 4222, 34, 4221, 230,
}

var sqlR1 = [...]int16{
	0, 1, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 4, 4, 4, 4, 4,
	4, 4, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
	8, 14, 14, 10, 10, 10, 10, 11, 11, 11,
	11, 11, 63, 63, 12, 12, 12, 12, 12, 12,
	12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
	20, 20, 20, 20, 20, 20, 20, 42, 44, 43,
	37, 37, 38, 38, 39, 40, 40, 45, 47, 46,
	48, 49, 49, 50, 50, 50, 13, 13, 13, 9,
	9, 9, 9, 9, 9, 9, 9, 9, 23, 23,
	51, 51, 24, 24, 53, 53, 25, 25, 54, 54,
	671, 671, 671, 672, 672, 673, 673, 673, 28, 56,
	58, 58, 478, 478, 478, 21, 22, 22, 22, 22,
	674, 674, 674, 674, 41, 29, 57, 34, 34, 34,
	34, 34, 246, 246, 246, 246, 27, 27, 52, 52,
	292, 292, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 670, 670, 294, 294, 293, 279, 279, 280,
	280, 281, 281, 675, 675, 295, 295, 295, 296, 296,
	17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
	564, 564, 564, 595, 595, 595, 595, 597, 597, 722,
	722, 723, 723, 723, 723, 723, 155, 155, 452, 452,
	452, 72, 72, 72, 72, 72, 660, 660, 248, 248,
	248, 250, 250, 249, 249, 249, 249, 249, 249, 249,
	249, 96, 96, 97, 97, 287, 287, 286, 286, 286,
	286, 286, 286, 286, 681, 681, 680, 718, 718, 679,
	679, 682, 682, 682, 247, 247, 247, 93, 93, 114,
	114, 151, 151, 151, 151, 151, 151, 151, 151, 152,
	152, 153, 153, 691, 691, 691, 251, 251, 251, 253,
	253, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 258, 19, 19, 134,
	134, 134, 134, 134, 134, 134, 129, 129, 599, 599,
	600, 600, 242, 242, 243, 243, 243, 243, 244, 244,
	245, 245, 245, 87, 87, 255, 255, 257, 257, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 256, 74, 74, 74, 74, 74, 74, 74,
	74, 74, 75, 75, 75, 75, 75, 76, 76, 76,
	76, 76, 76, 77, 77, 77, 77, 77, 77, 78,
	78, 85, 85, 85, 85, 85, 85, 85, 85, 219,
	219, 88, 88, 88, 88, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 88, 92, 92, 92, 92, 92,
	103, 103, 692, 692, 693, 693, 711, 697, 697, 698,
	698, 701, 701, 701, 702, 702, 702, 702, 702, 710,
	710, 710, 710, 710, 704, 703, 705, 705, 706, 706,
	708, 708, 708, 708, 708, 709, 709, 709, 709, 709,
	709, 709, 709, 709, 709, 709, 709, 709, 709, 709,
	709, 709, 696, 712, 713, 713, 714, 714, 715, 715,
	715, 122, 122, 122, 717, 717, 716, 716, 699, 699,
	700, 700, 67, 707, 707, 725, 725, 68, 69, 70,
	71, 694, 694, 724, 724, 724, 724, 724, 724, 724,
	724, 724, 724, 724, 724, 724, 724, 724, 724, 724,
	726, 726, 727, 727, 728, 728, 728, 728, 728, 728,
	728, 728, 728, 728, 728, 728, 728, 728, 728, 728,
	728, 728, 90, 90, 90, 90, 90, 90, 90, 90,
	90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
	90, 104, 104, 410, 410, 373, 373, 105, 105, 105,
	106, 106, 107, 107, 89, 89, 89, 657, 657, 658,
	664, 729, 729, 555, 555, 554, 554, 109, 109, 451,
	451, 110, 110, 110, 110, 110, 110, 111, 111, 111,
	111, 111, 111, 111, 111, 111, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 120, 120, 120, 120, 120, 121, 121, 121,
	118, 118, 118, 115, 115, 115, 113, 113, 113, 119,
	119, 119, 663, 359, 359, 117, 117, 117, 116, 116,
	116, 426, 426, 427, 429, 428, 123, 123, 123, 123,
	374, 124, 124, 124, 124, 124, 124, 124, 124, 127,
	127, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 557, 557, 5, 5, 285, 285,
	284, 284, 284, 284, 6, 6, 6, 290, 290, 289,
	288, 125, 125, 125, 519, 519, 130, 130, 130, 467,
	467, 131, 131, 131, 131, 131, 132, 132, 132, 132,
	132, 132, 132, 132, 132, 132, 132, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 667, 667, 419, 419, 322, 322,
	322, 322, 143, 143, 143, 143, 144, 144, 144, 144,
	145, 145, 228, 228, 161, 161, 161, 161, 160, 160,
	160, 160, 160, 160, 160, 160, 79, 79, 79, 80,
	80, 81, 81, 82, 82, 83, 83, 84, 84, 84,
	84, 84, 164, 164, 33, 33, 33, 33, 165, 165,
	719, 719, 167, 163, 163, 163, 163, 163, 163, 163,
	162, 162, 166, 166, 166, 166, 168, 170, 170, 170,
	170, 170, 169, 169, 169, 169, 169, 171, 171, 589,
	589, 437, 437, 587, 587, 611, 611, 588, 588, 380,
	380, 380, 380, 380, 381, 381, 381, 598, 598, 598,
	598, 598, 598, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 229, 229, 229, 230, 230, 235, 235,
	236, 236, 236, 237, 237, 237, 234, 234, 234, 231,
	231, 232, 232, 233, 233, 233, 233, 233, 233, 233,
	233, 233, 233, 240, 240, 238, 238, 239, 239, 731,
	731, 730, 730, 241, 241, 241, 241, 241, 200, 200,
	200, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 438, 438, 203, 203, 203, 187,
	187, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 254, 254, 254, 254, 254, 179, 179, 179, 179,
	179, 179, 179, 179, 180, 180, 180, 174, 174, 189,
	189, 189, 189, 189, 181, 181, 182, 182, 182, 183,
	183, 183, 183, 211, 211, 186, 186, 186, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 175, 175, 175,
	175, 191, 191, 191, 191, 474, 474, 474, 217, 217,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 214, 214, 214, 214,
	214, 214, 683, 683, 684, 684, 684, 207, 207, 207,
	207, 207, 207, 535, 535, 201, 201, 201, 201, 206,
	206, 206, 206, 185, 185, 185, 185, 209, 209, 209,
	209, 457, 457, 198, 198, 198, 199, 199, 199, 204,
	204, 216, 205, 411, 411, 202, 202, 208, 208, 208,
	208, 210, 210, 210, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 177, 177, 177, 177, 178, 178,
	178, 178, 212, 212, 197, 197, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 732, 732, 193,
	193, 193, 192, 192, 192, 192, 195, 195, 196, 196,
	196, 196, 196, 196, 196, 194, 184, 215, 665, 665,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	659, 659, 659, 659, 659, 659, 659, 659, 659, 662,
	662, 662, 662, 662, 666, 666, 135, 135, 135, 135,
	135, 135, 135, 146, 146, 146, 146, 146, 146, 146,
	149, 149, 136, 136, 136, 136, 136, 136, 136, 139,
	139, 137, 137, 137, 137, 138, 138, 98, 98, 98,
	98, 98, 18, 18, 18, 99, 99, 313, 313, 263,
	263, 263, 398, 398, 264, 264, 388, 388, 388, 388,
	259, 259, 260, 260, 261, 262, 262, 100, 100, 733,
	733, 733, 676, 676, 676, 677, 677, 677, 677, 677,
	677, 382, 382, 383, 383, 499, 499, 499, 499, 499,
	386, 386, 386, 387, 387, 387, 387, 387, 387, 387,
	387, 387, 396, 397, 397, 389, 389, 395, 394, 394,
	393, 393, 392, 392, 390, 391, 391, 391, 400, 400,
	399, 402, 402, 401, 498, 620, 620, 622, 622, 622,
	622, 622, 622, 622, 624, 624, 624, 624, 624, 624,
	624, 624, 624, 624, 624, 624, 624, 624, 624, 624,
	624, 475, 475, 734, 734, 735, 736, 618, 618, 618,
	619, 614, 614, 615, 615, 615, 615, 615, 384, 384,
	385, 385, 385, 385, 616, 617, 417, 417, 539, 621,
	621, 623, 623, 625, 737, 737, 737, 737, 737, 737,
	738, 738, 738, 497, 497, 496, 496, 495, 495, 408,
	408, 626, 626, 626, 626, 627, 627, 627, 627, 627,
	630, 629, 628, 628, 628, 628, 628, 102, 102, 102,
	454, 454, 453, 453, 455, 455, 455, 455, 455, 455,
	455, 455, 455, 455, 455, 455, 455, 455, 455, 455,
	455, 455, 224, 224, 325, 325, 325, 95, 95, 95,
	15, 15, 15, 15, 15, 15, 15, 340, 340, 16,
	16, 16, 16, 678, 678, 678, 101, 101, 101, 101,
	101, 101, 406, 406, 406, 324, 324, 324, 324, 324,
	324, 324, 324, 324, 324, 324, 324, 324, 324, 324,
	324, 324, 324, 324, 324, 324, 324, 324, 324, 324,
	324, 669, 669, 668, 668, 326, 326, 740, 740, 108,
	108, 108, 108, 108, 108, 108, 108, 558, 558, 559,
	559, 94, 94, 94, 94, 94, 476, 476, 473, 473,
	472, 472, 416, 416, 537, 537, 537, 538, 330, 330,
	331, 331, 282, 282, 282, 477, 477, 477, 477, 36,
	35, 26, 26, 30, 30, 31, 31, 312, 312, 312,
	312, 312, 312, 312, 312, 312, 32, 32, 60, 60,
	60, 60, 61, 61, 61, 61, 64, 64, 65, 65,
	59, 59, 59, 59, 62, 62, 55, 55, 66, 66,
	66, 66, 66, 685, 687, 687, 686, 686, 690, 690,
	690, 690, 690, 690, 688, 688, 361, 361, 689, 689,
	720, 720, 721, 721, 142, 142, 147, 147, 147, 147,
	147, 148, 148, 148, 148, 150, 150, 150, 150, 159,
	159, 220, 220, 220, 220, 220, 220, 220, 73, 73,
	86, 86, 157, 742, 742, 742, 158, 158, 158, 221,
	221, 221, 221, 222, 222, 223, 223, 741, 741, 323,
	323, 492, 492, 493, 493, 743, 743, 494, 494, 494,
	494, 494, 316, 315, 317, 317, 318, 318, 91, 91,
	91, 304, 304, 303, 306, 306, 305, 307, 307, 308,
	308, 301, 301, 601, 601, 310, 310, 310, 311, 311,
	297, 297, 298, 298, 299, 299, 300, 300, 314, 314,
	596, 596, 744, 744, 133, 133, 133, 227, 227, 372,
	372, 372, 485, 485, 485, 409, 409, 337, 337, 491,
	491, 491, 491, 491, 450, 450, 450, 226, 226, 424,
	424, 440, 440, 441, 441, 551, 551, 442, 140, 140,
	141, 141, 156, 156, 267, 267, 265, 265, 265, 265,
	265, 265, 265, 265, 272, 272, 273, 273, 274, 274,
	275, 276, 276, 276, 276, 430, 430, 277, 277, 277,
	266, 266, 266, 268, 268, 268, 268, 268, 268, 268,
	271, 271, 271, 271, 278, 278, 278, 270, 270, 637,
	637, 637, 639, 639, 641, 641, 640, 640, 636, 636,
	638, 638, 739, 739, 456, 456, 456, 405, 407, 403,
	403, 404, 404, 414, 414, 412, 413, 413, 415, 415,
	536, 536, 536, 283, 283, 283, 447, 447, 447, 447,
	448, 448, 481, 481, 479, 479, 479, 479, 480, 480,
	482, 482, 482, 483, 483, 484, 484, 444, 444, 445,
	445, 446, 446, 446, 446, 515, 515, 269, 269, 269,
	421, 421, 421, 422, 422, 505, 505, 505, 505, 505,
	505, 505, 505, 505, 505, 505, 506, 506, 504, 504,
	504, 504, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 541, 542, 542, 423, 423, 543, 488, 488, 489,
	489, 486, 486, 487, 487, 490, 490, 655, 655, 655,
	656, 656, 534, 534, 544, 544, 544, 544, 544, 544,
	530, 530, 531, 531, 532, 532, 533, 533, 552, 553,
	553, 460, 460, 460, 460, 458, 458, 461, 461, 461,
	461, 461, 459, 459, 545, 545, 545, 545, 449, 449,
	225, 225, 546, 546, 546, 546, 547, 548, 548, 549,
	549, 500, 501, 501, 560, 560, 560, 560, 562, 420,
	420, 420, 420, 420, 613, 612, 612, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 577, 577,
	577, 577, 577, 577, 577, 563, 563, 563, 563, 563,
	567, 567, 567, 566, 566, 566, 566, 566, 566, 566,
	566, 566, 566, 566, 568, 568, 573, 573, 574, 574,
	574, 569, 570, 575, 575, 575, 575, 745, 745, 579,
	579, 571, 571, 571, 571, 571, 571, 571, 571, 571,
	565, 565, 565, 572, 572, 572, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 468,
	468, 470, 470, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 509, 509, 509, 509, 510, 510,
	510, 510, 510, 510, 510, 510, 510, 510, 510, 510,
	510, 510, 510, 510, 510, 510, 510, 510, 510, 510,
	510, 510, 510, 631, 631, 631, 631, 631, 631, 631,
	631, 511, 511, 634, 634, 635, 635, 632, 632, 632,
	632, 632, 632, 632, 632, 632, 632, 632, 632, 632,
	632, 632, 632, 632, 632, 632, 632, 632, 632, 632,
	633, 633, 633, 633, 633, 633, 633, 633, 633, 633,
	633, 633, 633, 633, 633, 633, 633, 633, 633, 633,
	633, 633, 633, 633, 633, 633, 633, 633, 633, 633,
	633, 633, 633, 633, 633, 633, 633, 633, 642, 642,
	643, 643, 645, 645, 646, 646, 647, 648, 648, 648,
	649, 650, 650, 644, 644, 651, 651, 651, 651, 652,
	652, 653, 653, 653, 653, 653, 654, 654, 654, 654,
	654, 521, 521, 522, 522, 528, 528, 528, 377, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 377,
	377, 377, 377, 379, 379, 378, 327, 327, 327, 327,
	327, 327, 435, 435, 433, 433, 433, 436, 436, 434,
	434, 432, 432, 431, 431, 518, 518, 516, 516, 520,
	520, 462, 462, 578, 578, 578, 578, 578, 578, 578,
	578, 463, 463, 463, 471, 464, 464, 465, 465, 465,
	465, 465, 512, 513, 466, 466, 466, 514, 514, 523,
	527, 527, 526, 525, 525, 524, 524, 502, 502, 503,
	503, 443, 443, 746, 746, 439, 439, 550, 550, 550,
	550, 607, 607, 376, 376, 425, 425, 375, 375, 367,
	367, 368, 368, 368, 368, 418, 418, 529, 529, 580,
	580, 581, 581, 582, 582, 583, 583, 584, 585, 586,
	517, 517, 348, 347, 334, 335, 346, 345, 344, 333,
	336, 341, 342, 343, 338, 339, 355, 354, 353, 302,
	309, 360, 362, 362, 365, 365, 366, 364, 363, 363,
	350, 351, 352, 556, 332, 369, 369, 370, 370, 370,
	371, 371, 371, 371, 328, 328, 329, 329, 356, 356,
	357, 358, 358, 349, 349, 349, 319, 319, 319, 320,
	320, 321, 321, 594, 594, 591, 591, 591, 592, 592,
	592, 695, 593, 593, 593, 593, 590, 590, 590, 590,
	590, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 608, 603, 603, 604, 604, 604, 604,
	604, 604, 604, 604, 604, 604, 604, 604, 604, 604,
	604, 604, 604, 604, 605, 609, 609, 609, 609, 609,
	609, 609, 609, 609, 609, 609, 609, 609, 609, 609,
	609, 609, 609, 609, 609, 609, 609, 609, 609, 609,
	609, 609, 609, 609, 609, 609, 609, 609, 609, 609,
	609, 609, 609, 609, 609, 609, 609, 609, 609, 609,
	609, 609, 609, 609, 609, 609, 609, 609, 609, 609,
	609, 609, 609, 609, 609, 609, 609, 609, 609, 609,
	609, 609, 609, 609, 609, 609, 609, 609, 609, 609,
	609, 609, 609, 609, 609, 610, 610,
}

var sqlR2 = [...]int8{
	0, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 3, 1, 1, 1,
	1, 3, 4, 6, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 3, 6, 4, 4,
	6, 9, 6, 8, 4, 4, 5, 9, 7, 9,
	5, 6, 8, 7, 7, 9, 1, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 4, 6,
	4, 6, 6, 9, 6, 9, 6, 5, 6, 5,
	1, 1, 1, 1, 1, 1, 0, 1, 6, 6,
	4, 6, 2, 1, 1, 4, 8, 7, 10, 9,
	4, 4, 4, 3, 4, 4, 4, 7, 7, 9,
	8, 9, 5, 3, 5, 7, 4, 12, 4, 12,
	1, 3, 5, 5, 2, 5, 3, 6, 4, 4,
	4, 6, 5, 6, 5, 6, 4, 8, 3, 8,
	4, 2, 3, 10, 3, 6, 4, 3, 1, 3,
	4, 4, 2, 1, 1, 3, 1, 3, 2, 4,
	3, 2, 3, 2, 0, 1, 1, 0, 2, 0,
	7, 10, 6, 8, 6, 6, 6, 9, 4, 3,
	2, 2, 0, 1, 1, 1, 1, 1, 3, 1,
	3, 6, 4, 6, 7, 9, 6, 2, 2, 3,
	0, 8, 6, 8, 7, 2, 0, 1, 2, 5,
	0, 1, 3, 3, 1, 3, 1, 3, 3, 3,
	3, 12, 3, 5, 4, 1, 3, 3, 3, 3,
	2, 4, 4, 4, 1, 1, 2, 1, 4, 1,
	0, 3, 3, 0, 4, 6, 0, 6, 4, 4,
	4, 5, 7, 6, 8, 7, 9, 8, 2, 1,
	3, 1, 3, 3, 3, 0, 2, 5, 0, 1,
	3, 3, 3, 3, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 1, 1, 1, 3, 3, 6,
	4, 9, 7, 12, 9, 2, 7, 2, 1, 1,
	1, 3, 3, 0, 3, 1, 3, 1, 1, 3,
	2, 5, 0, 7, 5, 2, 0, 1, 2, 3,
	1, 1, 2, 2, 2, 2, 1, 2, 3, 3,
	4, 3, 3, 1, 2, 1, 2, 1, 2, 1,
	2, 2, 3, 3, 3, 3, 3, 3, 5, 3,
	3, 5, 3, 3, 5, 3, 3, 5, 3, 4,
	3, 6, 6, 6, 6, 6, 8, 4, 4, 1,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 6, 3, 8, 5, 3,
	12, 4, 2, 0, 1, 0, 1, 1, 0, 1,
	3, 1, 3, 3, 3, 3, 2, 2, 1, 1,
	1, 1, 2, 1, 1, 1, 1, 0, 1, 2,
	2, 2, 1, 1, 1, 4, 5, 1, 1, 1,
	1, 3, 3, 2, 2, 1, 2, 2, 2, 2,
	1, 1, 1, 2, 1, 1, 3, 0, 1, 4,
	0, 4, 6, 3, 1, 3, 2, 1, 3, 2,
	1, 3, 5, 1, 2, 1, 0, 6, 6, 6,
	8, 1, 0, 4, 3, 3, 4, 3, 4, 4,
	4, 7, 3, 3, 4, 3, 3, 3, 3, 3,
	1, 0, 1, 0, 4, 3, 3, 3, 3, 3,
	6, 4, 4, 4, 5, 3, 3, 3, 3, 3,
	3, 3, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 4, 1, 2, 1, 2, 1, 2, 1,
	2, 7, 3, 2, 0, 1, 3, 3, 1, 0,
	1, 2, 2, 1, 6, 10, 5, 1, 3, 3,
	1, 1, 0, 2, 0, 2, 0, 9, 3, 2,
	0, 2, 2, 2, 2, 2, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 4, 6, 5, 7, 3, 4, 6, 3,
	4, 6, 3, 5, 7, 3, 4, 6, 3, 4,
	6, 3, 1, 1, 3, 4, 6, 3, 3, 5,
	3, 1, 3, 1, 1, 1, 2, 2, 2, 2,
	1, 2, 2, 5, 3, 3, 6, 6, 3, 1,
	1, 1, 1, 2, 1, 1, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 1, 1, 2, 1,
	1, 2, 1, 1, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 2, 1, 2, 1, 3, 4, 3, 1, 2,
	3, 2, 2, 2, 4, 6, 3, 1, 2, 2,
	7, 5, 7, 2, 3, 0, 3, 5, 2, 3,
	0, 2, 3, 2, 3, 2, 7, 4, 7, 8,
	8, 9, 11, 11, 11, 6, 2, 6, 9, 4,
	7, 7, 10, 7, 10, 10, 10, 13, 10, 13,
	5, 8, 5, 2, 2, 1, 1, 3, 1, 1,
	1, 1, 1, 2, 1, 2, 2, 3, 2, 2,
	4, 3, 2, 2, 1, 2, 1, 3, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 3, 5,
	4, 6, 4, 3, 0, 1, 3, 2, 4, 2,
	4, 1, 6, 3, 4, 4, 3, 4, 1, 1,
	1, 1, 5, 4, 5, 3, 3, 2, 2, 6,
	3, 3, 3, 3, 4, 4, 3, 1, 3, 3,
	2, 2, 1, 3, 3, 3, 1, 2, 1, 1,
	2, 2, 3, 1, 1, 1, 1, 1, 3, 2,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 1, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 2, 1, 1,
	1, 2, 1, 2, 2, 2, 9, 2, 1, 0,
	1, 1, 0, 1, 2, 0, 2, 2, 0, 2,
	2, 2, 2, 1, 2, 3, 3, 4, 4, 4,
	4, 3, 3, 1, 1, 1, 0, 1, 1, 1,
	0, 1, 1, 3, 3, 3, 3, 3, 2, 3,
	3, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 3, 6, 8, 3, 3,
	3, 4, 8, 6, 4, 5, 5, 5, 5, 5,
	3, 0, 1, 1, 1, 1, 4, 4, 3, 4,
	4, 3, 4, 4, 1, 4, 4, 5, 3, 5,
	5, 5, 7, 3, 3, 3, 5, 7, 4, 2,
	6, 4, 3, 2, 3, 4, 4, 3, 5, 3,
	6, 5, 6, 3, 5, 6, 3, 5, 3, 5,
	3, 3, 4, 4, 5, 0, 1, 1, 1, 1,
	3, 2, 3, 4, 3, 4, 3, 5, 3, 4,
	4, 3, 4, 5, 3, 4, 3, 4, 4, 5,
	3, 3, 1, 1, 0, 2, 3, 5, 4, 6,
	4, 6, 4, 1, 0, 3, 4, 4, 5, 7,
	5, 3, 3, 6, 4, 2, 3, 3, 4, 4,
	5, 2, 0, 4, 2, 3, 4, 2, 3, 3,
	3, 7, 5, 2, 0, 3, 3, 4, 3, 3,
	3, 5, 3, 3, 3, 4, 4, 4, 4, 4,
	4, 4, 4, 3, 4, 5, 4, 4, 5, 6,
	5, 5, 2, 3, 2, 3, 6, 6, 7, 9,
	7, 9, 4, 3, 4, 4, 5, 1, 1, 10,
	10, 3, 5, 5, 5, 3, 5, 6, 4, 4,
	5, 5, 2, 6, 3, 2, 5, 4, 2, 0,
	1, 1, 1, 1, 2, 3, 2, 2, 3, 2,
	1, 1, 1, 1, 3, 2, 2, 2, 2, 2,
	2, 2, 2, 1, 2, 0, 1, 2, 1, 2,
	1, 2, 2, 1, 2, 1, 2, 1, 2, 2,
	4, 3, 3, 7, 3, 3, 7, 3, 3, 3,
	3, 3, 3, 3, 3, 4, 3, 3, 6, 5,
	8, 3, 6, 6, 3, 12, 15, 1, 0, 1,
	2, 3, 0, 2, 0, 4, 0, 4, 5, 4,
	1, 1, 1, 3, 3, 1, 3, 10, 13, 0,
	2, 3, 1, 1, 0, 1, 2, 2, 2, 2,
	1, 1, 0, 1, 3, 1, 1, 1, 2, 3,
	3, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 1, 0, 1, 0, 1, 1, 0,
	1, 4, 1, 0, 3, 7, 7, 1, 1, 3,
	7, 1, 3, 11, 3, 2, 0, 3, 1, 2,
	2, 3, 2, 6, 2, 1, 2, 2, 3, 6,
	4, 2, 3, 5, 5, 5, 2, 5, 5, 2,
	2, 2, 0, 1, 1, 3, 4, 11, 12, 10,
	5, 3, 1, 5, 9, 7, 11, 3, 3, 0,
	2, 4, 3, 3, 1, 6, 1, 3, 1, 2,
	0, 1, 2, 3, 0, 1, 3, 3, 2, 2,
	1, 1, 1, 4, 0, 3, 0, 4, 0, 3,
	0, 2, 2, 2, 0, 1, 1, 2, 2, 0,
	3, 3, 2, 1, 1, 2, 2, 5, 8, 4,
	1, 0, 1, 2, 2, 1, 2, 3, 3, 2,
	2, 3, 2, 2, 2, 2, 2, 3, 1, 2,
	3, 1, 4, 2, 3, 2, 2, 4, 7, 3,
	4, 6, 5, 7, 5, 5, 3, 3, 0, 2,
	2, 2, 2, 1, 1, 1, 8, 10, 11, 8,
	11, 5, 4, 2, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 0, 3, 3, 0, 1, 8,
	11, 3, 6, 6, 5, 3, 4, 1, 0, 1,
	3, 17, 20, 16, 19, 4, 2, 0, 1, 0,
	1, 0, 1, 3, 2, 4, 2, 3, 1, 0,
	2, 0, 1, 1, 0, 2, 1, 1, 0, 9,
	6, 6, 8, 6, 8, 5, 7, 2, 6, 7,
	4, 4, 5, 2, 4, 6, 6, 8, 6, 7,
	8, 9, 6, 7, 8, 9, 6, 8, 6, 8,
	6, 7, 8, 9, 6, 8, 6, 8, 6, 6,
	8, 8, 4, 7, 3, 0, 7, 10, 1, 1,
	1, 1, 1, 2, 3, 0, 3, 0, 3, 0,
	1, 0, 2, 0, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	2, 1, 2, 1, 2, 1, 2, 1, 3, 2,
	2, 2, 2, 1, 1, 0, 2, 4, 2, 1,
	2, 1, 2, 3, 2, 2, 2, 1, 0, 2,
	1, 1, 0, 1, 3, 1, 0, 1, 1, 1,
	1, 1, 2, 3, 2, 2, 1, 2, 15, 18,
	3, 1, 0, 4, 1, 0, 4, 1, 0, 2,
	2, 3, 0, 1, 1, 4, 4, 5, 1, 0,
	3, 0, 3, 0, 3, 0, 3, 0, 4, 0,
	3, 0, 1, 0, 6, 7, 3, 6, 3, 1,
	3, 1, 1, 4, 2, 1, 3, 1, 3, 4,
	8, 11, 7, 10, 2, 2, 0, 10, 3, 2,
	0, 1, 3, 1, 1, 3, 3, 5, 6, 4,
	5, 4, 1, 1, 3, 3, 1, 2, 4, 4,
	2, 3, 5, 5, 1, 3, 1, 0, 1, 2,
	3, 2, 4, 2, 3, 0, 2, 0, 2, 1,
	2, 1, 1, 1, 2, 1, 2, 1, 2, 1,
	8, 8, 8, 2, 4, 4, 4, 2, 2, 2,
	2, 3, 1, 3, 1, 2, 6, 7, 1, 0,
	1, 0, 1, 0, 1, 1, 0, 1, 5, 1,
	0, 1, 0, 1, 0, 3, 3, 5, 1, 3,
	3, 4, 5, 2, 2, 0, 2, 2, 1, 1,
	1, 0, 1, 0, 2, 2, 5, 4, 2, 3,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 1,
	3, 1, 3, 3, 3, 2, 0, 4, 2, 5,
	3, 2, 0, 1, 3, 3, 5, 1, 1, 1,
	1, 1, 1, 1, 3, 5, 1, 3, 2, 4,
	4, 0, 4, 4, 3, 4, 1, 5, 3, 4,
	5, 5, 1, 5, 1, 3, 2, 3, 0, 1,
	3, 0, 3, 1, 3, 1, 2, 0, 2, 3,
	1, 3, 2, 0, 3, 5, 6, 4, 6, 4,
	3, 2, 1, 0, 3, 2, 1, 0, 5, 1,
	0, 2, 2, 2, 1, 1, 0, 1, 1, 1,
	1, 0, 4, 2, 1, 2, 2, 4, 1, 3,
	2, 2, 1, 2, 3, 2, 4, 1, 0, 1,
	0, 2, 1, 0, 2, 5, 7, 2, 1, 2,
	4, 3, 5, 0, 1, 3, 5, 1, 2, 1,
	1, 1, 1, 1, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 4, 4, 6, 6, 1, 1, 1, 1, 1,
	3, 5, 0, 1, 1, 1, 1, 1, 2, 2,
	2, 2, 2, 1, 3, 0, 5, 4, 1, 2,
	1, 4, 1, 1, 2, 1, 1, 1, 1, 1,
	0, 1, 2, 5, 1, 4, 2, 5, 1, 4,
	3, 3, 0, 1, 2, 4, 1, 1, 1, 1,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 1,
	0, 1, 4, 1, 3, 3, 3, 5, 2, 2,
	2, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 3, 3, 3, 2,
	2, 3, 5, 4, 6, 3, 5, 4, 6, 4,
	6, 5, 7, 3, 3, 3, 3, 3, 4, 3,
	2, 4, 2, 3, 3, 4, 3, 4, 3, 4,
	5, 6, 6, 7, 6, 7, 6, 7, 3, 4,
	4, 1, 3, 1, 3, 3, 2, 2, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 3,
	5, 6, 6, 7, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 6, 1, 1, 1, 1, 1, 1,
	2, 1, 5, 5, 6, 3, 1, 1, 1, 2,
	2, 2, 4, 3, 5, 6, 8, 6, 5, 4,
	3, 2, 2, 4, 1, 1, 1, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 6,
	6, 8, 8, 6, 4, 6, 6, 6, 4, 1,
	3, 3, 3, 3, 3, 4, 3, 3, 4, 3,
	3, 4, 3, 3, 4, 3, 3, 3, 3, 3,
	4, 3, 4, 3, 4, 3, 4, 4, 3, 6,
	5, 5, 5, 4, 4, 3, 4, 3, 5, 0,
	5, 0, 2, 0, 1, 3, 3, 2, 2, 0,
	6, 1, 0, 3, 0, 3, 3, 3, 0, 1,
	4, 2, 2, 2, 2, 2, 3, 2, 2, 3,
	0, 4, 1, 1, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 1, 1, 1, 2,
	1, 2, 2, 3, 1, 2, 3, 2, 3, 2,
	3, 1, 0, 1, 3, 1, 3, 3, 3, 1,
	3, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 4, 3, 1, 2, 3, 0, 3, 3, 2,
	2, 1, 2, 2, 3, 2, 1, 1, 1, 5,
	1, 2, 4, 2, 0, 1, 0, 3, 5, 1,
	0, 1, 2, 1, 0, 1, 3, 3, 2, 1,
	1, 1, 1, 1, 3, 1, 3, 3, 1, 1,
	1, 1, 5, 3, 1, 1, 3, 1, 1, 1,
	1, 2, 2, 1, 1, 2, 2, 1, 1, 1,
	3, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 1, 3, 1, 0,
	1, 1, 1, 1, 1, 1, 1, 3, 5, 7,
	1, 7, 5, 3, 1, 1, 1, 1, 1, 1,
	1, 3, 5, 1, 1, 1, 1, 1, 1, 1,
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1,
}

var sqlChk = [...]int16{
	-1000, -1, -2, 665, -3, -221, -126, -123, -87, -85,
	-130, -131, -110, -132, -125, -154, -159, -140, -141, -142,
	-155, -161, -220, -229, -230, -231, -232, -241, -225, -222,
	-223, -4, -72, -74, -88, -109, -111, -124, -134, -133,
	-135, -143, -151, -146, -129, -79, -156, -160, -172, -224,
	-226, -227, 33, 32, 107, 85, 166, 138, 148, 219,
	418, 470, 482, 435, 153, 458, 440, -166, -167, 504,
	-73, -86, -158, -157, 78, 139, 183, 322, 450, 588,
	53, 158, -7, -15, -33, -19, 30, 49, -75, -76,
	-77, -78, 67, -95, -90, -104, -96, -89, -92, -93,
	-724, 110, -638, -112, -116, -150, -114, -728, 174, 240,
	-136, -137, -138, 400, -144, -145, 461, -147, -148, -149,
	464, 175, -81, -80, 168, -265, -267, -163, -162, -164,
	-228, -173, -174, -175, -176, -177, -178, -180, -181, -183,
	-211, -184, -185, -186, -187, -188, -189, -190, -194, -214,
	-191, -192, -193, -196, -195, -197, -202, -198, -199, -200,
	-201, -203, -204, -206, -207, -208, -209, -210, -212, -213,
	510, -205, -215, -182, -216, 578, 527, 87, 474, 21,
	-8, -9, -10, -11, -12, -13, -14, -18, -17, -66,
	-5, -6, -20, -97, -91, -94, -98, -99, -100, -108,
	-101, -102, -103, -637, -113, -115, -118, -120, -121, -117,
	-119, -122, 459, 636, -268, -266, 662, 641, 595, -179,
	-23, -28, -24, -25, -27, -29, -26, -30, -31, -32,
	-51, -56, -53, -54, -52, -55, -57, -58, -59, -60,
	-61, -62, -63, -64, -65, -35, -41, -42, -36, -37,
	-38, -39, -40, -43, -44, -45, -46, -47, -48, -49,
	-50, -21, -22, -34, -67, -68, -70, -69, -71, 623,
	632, -271, -269, -270, -278, 496, 603, 550, 665, 665,
	665, 665, 665, 665, 665, 665, 665, 665, 665, 665,
	665, 665, 665, 665, 665, 665, 665, 665, 665, 665,
	665, 665, 665, 665, 665, 665, -374, 2, -350, -356,
	-357, -358, -349, -319, -605, -610, 4, -602, -608, 182,
	250, 360, 21, 22, 24, 23, 25, 26, 27, 28,
	30, 31, 41, 43, 44, 45, 47, 48, 49, 50,
	51, 52, 53, 57, 59, 63, 64, 65, 66, 67,
	68, 69, 73, 78, 79, 84, 85, 86, 87, 88,
	89, 90, 91, 97, 94, 95, 96, 98, 99, 101,
	103, 104, 105, 106, 107, 108, 109, 111, 112, 113,
	115, 116, 117, 125, 126, 127, 128, 129, 131, 138,
	132, 139, 142, 136, 141, 137, 143, 144, 146, 147,
	148, 151, 152, 153, 155, 156, 157, 159, 160, 161,
	163, 164, 166, 167, 168, 171, 169, 172, 170, 173,
	174, 175, 176, 177, 180, 188, 189, 190, 195, 197,
	198, 199, 201, 202, 205, 206, 207, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 220, 224, 226, 227,
	228, 229, 230, 231, 232, 238, 239, 240, 242, 243,
	244, 245, 246, 251, 252, 253, 257, 259, 265, 266,
	617, 271, 267, 272, 273, 275, 279, 280, 281, 282,
	283, 284, 285, 287, 289, 288, 293, 291, 295, 296,
	299, 300, 301, 302, 303, 304, 308, 309, 305, 310,
	311, 313, 314, 317, 315, 318, 319, 316, 320, 323,
	324, 325, 326, 327, 328, 329, 330, 331, 332, 333,
	334, 321, 322, 337, 335, 339, 340, 341, 342, 343,
	358, 353, 354, 355, 347, 348, 344, 349, 345, 346,
	350, 351, 357, 352, 362, 363, 364, 365, 368, 236,
	258, 370, 371, 374, 376, 393, 379, 380, 381, 384,
	385, 388, 391, 392, 394, 395, 396, 397, 398, 399,
	400, 401, 402, 403, 405, 406, 408, 409, 410, 412,
	413, 414, 416, 418, 419, 421, 422, 423, 425, 426,
	427, 428, 429, 430, 431, 432, 434, 435, 437, 436,
	438, 440, 442, 443, 444, 450, 451, 458, 452, 454,
	455, 456, 457, 459, 460, 461, 462, 463, 464, 468,
	466, 467, 469, 470, 472, 473, 474, 475, 476, 478,
	480, 481, 485, 486, 489, 487, 507, 508, 530, 482,
	483, 484, 488, 490, 491, 492, 493, 495, 494, 499,
	497, 498, 500, 501, 502, 504, 506, 509, 510, 512,
	513, 514, 515, 516, 517, 518, 521, 523, 524, 525,
	526, 527, 528, 549, 529, 531, 535, 536, 537, 538,
	532, 533, 548, 540, 541, 542, 543, 545, 546, 551,
	552, 553, 554, 555, 556, 558, 559, 561, 569, 582,
	570, 571, 572, 573, 575, 578, 579, 580, 581, 567,
	583, 584, 587, 588, 589, 593, 590, 594, 591, 592,
	595, 597, 600, 601, 602, 609, 607, 608, 610, 611,
	613, 614, 612, 616, 618, 619, 624, 625, 627, 628,
	629, 37, 54, 55, 58, 60, 62, 74, 75, 76,
	80, 133, 134, 165, 178, 179, 191, 208, 209, 221,
	223, 233, 234, 235, 256, 260, 261, 263, 269, 292,
	367, 369, 386, 390, 407, 411, 415, 417, 433, 477,
	505, 519, 534, 539, 562, 563, 564, 565, 574, 576,
	603, 604, 605, 615, 626, -374, 2, -350, 377, -343,
	2, -319, -319, 418, 29, 2, 29, 406, 498, 553,
	555, 2, -667, -419, 546, 2, 29, -322, -319, 110,
	219, 496, -343, 2, -667, 219, -419, 26, 546, 2,
	-319, 2, 391, 177, 205, 23, 28, 71, 82, 105,
	151, 176, 200, -727, 393, 426, 480, 500, 548, 559,
	575, 2, 608, 314, 497, 550, 250, 128, 580, 488,
	-678, 485, 486, 391, 424, 472, 222, 596, -323, 2,
	482, -319, 314, 2, 665, 101, 79, 477, 501, -169,
	2, 304, 570, -170, -171, -168, 562, -589, 488, 472,
	337, -319, 665, 665, 665, 29, -332, 2, -319, -332,
	2, -233, 2, -332, -730, -240, -239, -238, 22, 451,
	190, 285, 203, 241, 342, 421, 201, 51, -233, 2,
	550, 250, 488, 128, 546, -354, 654, -356, -741, 2,
	570, -741, 2, 665, 665, 2, 550, 397, 608, 497,
	205, 128, 430, 250, 580, 49, 151, 28, 73, 556,
	640, 488, -678, 637, 638, 314, 135, -660, 2, -659,
	4, -608, -602, -368, -367, 550, 556, 128, -358, -349,
	654, -357, 665, 665, 665, 665, 2, 272, 273, 428,
	427, 501, 502, 29, 665, 665, 665, 665, 665, 485,
	177, 2, 176, -692, 23, 28, 71, 100, 105, 135,
	200, 393, 426, 500, 548, 552, 559, 575, -677, 529,
	73, 488, -676, -678, 382, 314, 580, 151, -472, 128,
	304, 217, 589, 555, 553, 586, 142, 259, 592, 591,
	665, 665, 665, -127, 2, 662, 33, 32, -126, -130,
	153, 504, -258, 550, 264, 2, -319, 665, 665, 665,
	2, 272, 273, 485, 486, 29, 665, 665, 203, -659,
	546, 2, 665, 665, 665, 2, 29, 272, 273, 485,
	486, 264, 2, 73, 491, 665, 665, 665, 665, 665,
	665, 665, 665, 665, 665, 665, 665, 665, 665, 665,
	665, 665, 665, 665, 665, 665, 665, 665, 665, 665,
	665, 665, 665, 665, 665, 665, 665, 665, 665, 665,
	665, 665, 665, 665, 2, -218, 501, 529, 229, 50,
	49, 79, 29, 425, 84, 398, 129, 135, 160, 581,
	220, 546, 250, 251, 280, 100, 101, -474, 47, 273,
	73, 272, 486, -683, 485, -535, 551, 206, 490, 498,
	545, 91, 285, 482, 570, 572, 110, 597, 473, 629,
	430, 431, 543, 444, 540, 305, 169, 204, 4, 128,
	337, 472, 503, 289, 288, 582, 562, 304, 481, 401,
	89, 665, -739, 2, 550, 570, 2, -741, 2, -741,
	2, -742, 570, 626, 665, 665, 665, 665, 665, 665,
	665, 665, 665, 665, 665, 665, 665, 665, 665, 665,
	665, 665, 665, 665, 665, 665, 665, -266, -268, -267,
	665, 665, 665, 665, 665, 665, 665, 665, -218, 501,
	2, 79, 29, 29, -412, -414, 585, 262, 162, 383,
	-265, -267, 2, -637, 582, 501, -587, 2, -507, -611,
	-509, 652, 653, 645, 547, 72, -378, 359, 630, -521,
	135, 586, 377, -610, -510, -523, 165, 393, 477, -436,
	8, 9, 5, 6, 7, -328, -511, -517, 577, 181,
	366, -371, 666, 10, 662, -634, -267, -522, 38, 223,
	70, -591, -370, -329, -563, 263, -369, -349, -631, -632,
	4, -602, -603, -592, -566, -574, -570, -571, -577, -319,
	-605, 82, 119, 120, 118, 123, 122, 307, 306, 124,
	121, 503, 596, 71, 37, 233, 234, 269, 367, 235,
	80, -633, 152, -604, 260, 261, 519, 55, 433, 191,
	134, 133, 369, 60, 58, 604, -575, 130, 562, 563,
	564, 565, 208, 209, 62, 178, 179, 390, 415, 539,
	574, 576, 221, 292, 46, 114, 204, 255, 237, 268,
	270, 274, 294, 297, 338, 356, 361, 387, 389, 471,
	511, -745, 605, 534, 74, 75, 196, -639, 436, -640,
	-343, -639, 665, 665, 667, 665, -403, -405, -407, 2,
	29, 149, 662, 2, -540, 2, -541, -545, -267, 286,
	-544, 662, -542, 660, -350, 378, -635, 478, -631, -632,
	-328, -349, -370, 4, -602, -604, 664, -408, 662, 128,
	488, 550, 83, 250, 100, 176, 205, -467, 662, -319,
	29, 377, 566, 667, -667, -419, -404, 423, -519, 662,
	377, 380, 203, 380, -667, 64, 98, -717, 233, 2,
	-716, -356, 318, 2, 2, 2, 2, 2, 233, -319,
	550, 127, 284, 2, 2, 2, 2, 2, 2, 2,
	-428, 233, 2, -426, -356, 608, -429, 233, 2, -426,
	-427, 233, 2, -426, -473, 2, 93, -333, 233, 2,
	-319, -359, 233, 2, -354, -365, 233, 2, -362, -319,
	-597, 233, 2, -595, 4, -602, 124, 503, -507, 2,
	-156, 2, 64, -319, 608, 2, 507, 2, 662, -169,
	2, 76, 570, 46, 501, -170, 2, -493, 2, -494,
	-315, -316, -317, -552, -318, 271, 422, 432, 633, 140,
	359, 629, -719, 203, 644, 566, -587, -587, -587, -437,
	664, -235, 57, -332, -731, -730, -731, -585, 29, -580,
	8, -581, 652, 653, -585, -585, -731, -731, 2, 2,
	2, 2, 2, -492, -493, 2, -545, 233, -350, 2,
	-347, -590, 4, -602, -608, -603, -609, -605, 29, 32,
	33, 34, 36, 38, 39, 40, 42, 61, 70, 71,
	77, 81, 83, 93, 100, 110, 118, 119, 121, 120,
	122, 123, 124, 135, 140, 145, 149, 150, 154, 158,
	162, 181, 183, 196, 200, 203, 219, 222, 225, 241,
	254, 262, 264, 286, 290, 298, 306, 307, 359, 366,
	372, 377, 378, 382, 383, 404, 420, 439, 465, 496,
	503, 522, 544, 550, 560, 566, 568, 577, 585, 586,
	596, 598, 606, 620, 621, 622, 623, -610, 82, 2,
	-545, 233, 2, -353, 233, -545, -356, 2, -716, 2,
	-333, 2, -507, -671, 558, 172, 452, 2, -375, 233,
	-350, -352, -356, -354, 2, 485, -599, 2, -594, 10,
	-593, 5, 4, -602, -608, -603, 2, 2, -507, 2,
	-510, 2, -521, 29, -362, 2, -595, 233, 2, 29,
	29, 608, 423, 264, 566, 667, -425, -367, -368, -586,
	4, 8, -418, -319, 664, -507, 2, -156, -139, 2,
	196, -507, 233, 2, -156, 233, 2, -507, 233, 2,
	-156, 233, 2, -319, 2, -679, 2, -718, -599, 233,
	98, 233, -319, 2, 205, -726, 480, 579, 318, 2,
	2, 575, 2, 105, 550, 127, 2, 2, 2, 2,
	2, 2, 2, 550, -338, 2, -319, 196, -554, 264,
	-362, 233, -363, 2, 497, -740, 436, -595, 233, 2,
	456, 608, -354, 233, 2, -354, 250, 266, -333, 233,
	2, 555, 553, 555, 553, 203, 2, 264, 2, 264,
	2, -546, 2, -547, -541, -548, 660, 378, -557, 2,
	-556, -593, 603, -127, 662, -127, 662, 501, 662, -599,
	-350, -350, -507, 2, -156, -139, 2, -507, 2, -156,
	2, -319, 2, -153, -599, -152, 662, 203, 597, -319,
	2, -507, 2, -156, -139, 2, -507, 2, -156, 2,
	-258, 196, 2, 128, 550, -218, 2, 196, 598, 2,
	8, 2, 241, -254, -599, 490, 188, 431, 601, 98,
	2, 507, 2, 508, 79, -474, 629, 79, 203, 2,
	203, 2, -457, 2, 623, 423, 203, 2, 2, -665,
	2, 377, 220, 203, 2, 203, 2, 203, 2, 203,
	2, 203, 2, -217, 502, 571, 549, 427, 273, 2,
	-156, 620, -139, 273, 272, -507, 620, 2, -684, 196,
	486, -507, 2, 569, 282, 170, 203, -457, 2, 203,
	2, 203, 2, 203, 2, 5, 2, 43, 428, 530,
	2, 271, 422, 530, 2, 528, 2, -350, 550, 608,
	497, 128, 205, 29, 2, 485, 177, 2, 2, 94,
	95, 203, 2, 203, 2, 218, 203, 2, 444, 203,
	550, -438, 664, -438, 629, 2, -449, -545, -492, 566,
	-412, -414, -218, 507, 2, -272, -447, -274, 196, -479,
	-480, -275, 298, 183, 372, -276, -456, 29, 149, -456,
	-456, 64, 663, 663, -719, 582, 11, 12, 81, 43,
	652, 653, 654, 655, 194, 656, 657, 650, 651, 649,
	642, 643, 647, 277, 278, 102, 646, 644, 92, 312,
	479, 184, 185, 186, 187, 453, 248, 35, 249, 14,
	15, 16, -378, 34, 382, 297, 630, 237, 511, 645,
	17, 18, 19, 268, 270, 361, 54, 241, -327, 393,
	-377, 547, 72, -507, -507, -507, -507, -507, -507, -507,
	-507, 389, 662, -443, -502, 660, -267, 662, 662, 662,
	662, -586, -267, -507, -521, 663, -434, 662, -267, -521,
	-516, 662, 477, 660, 662, -524, -507, 5, 5, 5,
	662, 664, -642, 624, 196, 662, 662, 662, 662, 662,
	662, 662, 662, 662, 662, 662, 662, 662, 662, 662,
	662, 417, -568, 662, -567, 662, -567, -567, 609, -565,
	662, 632, 625, 662, -565, 662, 662, 662, 662, 662,
	662, 662, 662, 662, 662, 662, 662, 662, 609, 556,
	667, -639, -488, 662, 662, -439, -550, -507, 654, -439,
	-439, 377, -431, -507, 114, -460, 274, 338, 204, 294,
	471, 255, -504, 666, -504, -534, 632, -267, -542, -349,
	-267, -544, 662, -540, -534, -128, -586, -109, -124, -133,
	-156, -172, -226, -227, 654, -350, 662, 203, 662, 664,
	-590, 203, -418, -333, -362, -350, -369, -370, -375, -344,
	-319, 2, 2, 148, -431, -661, 580, 488, 29, 4,
	-608, -602, -368, 497, -367, 550, 128, 177, 205, -597,
	-322, 566, 39, -518, -560, -561, -613, 666, -612, -563,
	-573, -569, -572, 407, 411, -592, 58, 604, -575, 263,
	4, -602, -604, 260, 261, 519, 55, 433, 191, 134,
	133, 369, 60, 562, 563, 564, 565, 208, 209, 62,
	605, 534, 74, 75, -661, 580, 488, 29, 497, 196,
	-597, 196, 203, -597, 2, -599, 2, -295, 667, 69,
	462, 165, -699, 662, 2, 165, 2, 2, 2, -319,
	-295, 165, 667, -428, 233, -295, 165, -295, 165, -376,
	233, -375, -295, 165, -295, 667, 165, -295, 667, 165,
	664, 667, 165, -597, 2, -473, -589, -431, 39, -493,
	2, 135, 4, 5, -743, 667, 296, -381, 311, 358,
	228, 378, 627, 370, 140, -598, 5, 4, -517, -529,
	135, 304, 263, -580, -582, 9, -583, 652, 653, -588,
	-587, 117, 664, -590, -236, 258, 41, -332, -332, -731,
	-731, 8, 8, -731, -731, -332, -332, -292, 454, 504,
	392, -291, 25, 30, 153, 252, 343, 601, 171, -393,
	253, 459, -390, 397, 165, 523, 590, -671, -674, 484,
	558, 172, 452, 96, 370, 504, 392, 454, 165, -453,
	-455, 39, 126, 343, 391, 65, 244, 316, 317, 527,
	460, 615, 165, 504, 392, 454, -707, 454, 504, 392,
	-694, -709, 343, 66, 467, 533, 239, 526, 618, 177,
	495, 293, 359, 108, 478, 541, 394, 392, -16, -308,
	25, 153, -310, -303, 504, 30, -674, 106, 454, 641,
	636, 459, 403, 542, 420, -674, -671, 291, -673, 619,
	357, -294, 523, 590, -671, -478, -674, 484, 454, -293,
	359, 617, 616, -395, -390, 397, 165, 666, 25, 153,
	454, 504, 392, -722, -723, 30, -586, 2, -290, 241,
	-289, 25, -285, -284, 25, 153, 504, 593, -165, -145,
	-164, 459, 504, -165, 2, 454, 392, -668, -340, -636,
	241, 623, 165, -340, -340, -545, 233, -688, 196, 2,
	-681, -152, 287, 5, 10, -599, -152, -425, 667, 667,
	-590, 654, 486, 485, 165, 165, 165, 165, 273, 196,
	359, -718, 2, 359, 623, -711, 2, -356, -727, 2,
	2, 2, 2, 2, 2, 2, -350, 233, -410, 377,
	-657, -658, -729, 550, -245, 623, -599, 359, 46, -353,
	233, 2, -356, 608, -668, 359, -676, -355, 233, -350,
	39, 662, 359, 2, -473, 2, 250, -636, 359, -546,
	-372, -350, -541, -372, 504, -343, 39, -504, -350, 663,
	667, -557, -557, -599, -245, 203, 662, -258, 623, 623,
	273, -553, 667, -552, 241, -600, -599, -153, -599, 457,
	203, 273, -599, -657, -333, 2, -350, 2, 550, 275,
	-152, 203, 241, -245, -599, -599, -599, -599, -599, -589,
	29, 508, 2, -217, 502, 571, 95, 508, 2, -350,
	550, 128, 250, 85, -688, 196, 2, -319, -666, 196,
	-662, 472, 488, 580, -661, -666, -350, 128, -350, 128,
	-350, 128, -350, -350, 2, 2, 2, 2, 2, 90,
	2, -156, -507, 2, 90, 2, 49, 524, -684, 196,
	2, 569, 2, 569, 2, -319, -319, -319, -319, 372,
	529, 296, 623, -350, -350, -353, -351, -356, -356, 490,
	551, 581, 486, 177, -507, 2, 98, -732, 2, 203,
	196, 2, 550, 250, 550, 250, 128, 203, 79, 128,
	29, 203, 550, 483, 664, 4, -295, 667, -323, -272,
	-447, -589, -448, -447, -273, -272, -275, 196, 432, 591,
	343, 509, 279, -480, -479, 29, -507, -484, 190, 342,
	-507, -482, -509, 652, 653, -581, -583, -430, 370, -266,
	-266, -266, -415, -536, -507, 420, 250, -588, -719, -562,
	-560, -560, -348, -590, 562, -507, -507, -507, -507, -507,
	-507, -507, -507, -507, -507, -507, -507, -507, -507, -507,
	-507, -507, -507, -507, -507, -507, -507, -507, -507, -507,
	-507, -507, -507, -507, -507, -507, -507, -507, -507, -507,
	-507, 297, 237, 511, 54, 241, -507, 566, -507, -507,
	-507, -507, 335, 359, 366, 577, 181, 587, 149, 370,
	-746, 544, 42, -514, -267, -435, 662, -528, 36, 522,
	29, -521, 662, 2, -502, -507, -503, -379, -377, -319,
	652, 653, 654, 655, 656, 657, 642, 643, 644, 14,
	15, 16, 647, 651, 649, 650, 194, 102, 646, 312,
	479, 92, 184, 185, 186, 187, 277, 278, 17, 18,
	19, 35, 645, -432, -431, -431, 663, 606, 29, 149,
	654, 2, 663, 667, 39, 663, -507, -432, -520, -516,
	-431, -527, -526, 620, -468, -469, 628, 321, 131, 231,
	319, -470, 493, -584, 8, -590, 654, -643, 189, 222,
	662, 663, 2, 663, 2, 663, -507, 2, 663, -507,
	2, 663, -507, 2, 663, -507, 2, 663, 2, 663,
	2, -507, -507, -507, -507, -507, -507, -507, -431, 8,
	-584, -584, 562, 562, -584, -584, -584, -576, 407, 408,
	409, 410, 299, 300, 301, 302, 411, 412, 413, 414,
	327, 328, 329, 330, 323, 324, 325, 326, 331, 332,
	333, 334, 213, 214, 215, 216, 209, 210, 211, 212,
	-576, -462, 2, -578, -431, 4, 628, 321, 131, 231,
	319, 493, 5, -462, 2, -463, 2, -507, -431, -464,
	-508, -509, 652, 653, 645, -378, -465, 2, -507, -432,
	-507, 61, 290, 568, -466, -507, 203, -431, -431, 2,
	-431, 2, -510, 2, -640, 39, -489, -319, -431, -421,
	667, 203, 39, -607, 4, -606, 44, 66, 108, 137,
	144, 177, 239, 257, 267, 293, 394, 428, 466, 467,
	495, 526, 541, 573, 618, 505, -421, -421, 662, 663,
	667, -461, 226, 315, 310, 266, -461, -540, -460, 274,
	-458, 387, -458, -458, -534, -334, 660, 669, -590, -534,
	-531, -530, 39, -343, 384, -534, -534, 664, 663, -533,
	-532, 39, -343, 661, -655, 662, 665, 665, 665, 665,
	665, -350, 662, -431, -590, 664, 531, 2, 663, 268,
	268, 268, 268, 268, 377, 478, 663, 566, -663, -359,
	-365, 498, 551, 206, -425, 667, -425, -418, 98, -717,
	623, -597, -126, 379, 663, 667, -420, 38, 660, 664,
	-584, 2, 2, -579, 609, 662, 662, -469, 662, 203,
	-663, -365, 551, 498, 206, 2, -667, 546, -419, -597,
	566, -716, -717, -700, 663, -702, -710, -695, -704, 241,
	386, 256, 606, -591, -560, 4, -602, -319, 2, -428,
	-356, -295, 165, -429, -427, -295, 667, 165, -333, -354,
	-359, -362, -365, -319, -595, -597, -295, -355, -719, 663,
	570, -494, -380, 432, 521, 455, 499, 546, 9, 9,
	667, -590, -237, 487, 343, -332, -332, -332, -332, 667,
	-720, 100, 566, 83, 662, 488, -312, 305, 566, -498,
	233, 83, -614, 100, -336, -615, -319, 77, 586, 420,
	200, 163, -720, 100, 420, -720, 100, 2, 252, 100,
	504, 529, 662, 29, 64, -545, 43, 43, 29, -672,
	-673, 291, 203, 629, 550, 250, 488, 566, 566, -545,
	-455, -560, 126, 316, 317, 64, -585, -585, 64, -585,
	-585, -585, 623, -585, 623, -353, -545, 488, 566, 566,
	-725, -709, 462, 504, 566, 488, 566, 144, 377, 366,
	495, 137, 267, 293, -529, -529, -319, 566, 442, 540,
	442, 540, 494, -303, -305, -170, 494, 540, 305, 566,
	566, -170, 29, -218, 463, 135, -744, 644, 442, 291,
	-673, 566, 203, 667, 43, 43, 29, -672, 203, 566,
	616, -375, -334, 602, 45, 602, 45, 602, 566, 45,
	488, 566, 667, 45, -287, -286, 504, -289, -599, -288,
	341, -284, -657, -657, -244, -243, -319, 5, -418, 79,
	566, 566, -16, 504, -669, -324, 113, 349, 309, 350,
	104, 346, 103, 345, 111, 347, 112, 348, 610, 362,
	611, 363, 68, 344, 320, 351, 525, 352, 614, 364,
	-325, -326, 156, 399, 600, 128, -595, -16, -16, 504,
	392, 454, 165, -689, 241, 29, -678, 241, -553, 241,
	-553, -367, -319, 664, -156, -507, -507, -156, -507, -156,
	49, 165, 39, 165, 2, 662, 284, 662, -384, 359,
	203, -418, -554, 667, -350, 39, -244, 381, 165, -595,
	-454, -453, 359, -355, 233, 2, 165, -740, -408, 359,
	159, 662, 430, 2, 165, -335, 233, -320, -319, -473,
	-297, 554, 165, -451, 598, -485, -156, 662, 135, 39,
	-485, -440, -441, -551, -442, -336, 662, -343, -504, -127,
	-556, 663, 663, 663, -258, -409, -337, -336, 127, 434,
	434, -251, 623, -152, -153, 663, 667, -553, 241, 532,
	-153, -599, -245, -245, -553, -553, -350, 196, -599, -152,
	-245, -245, -245, -245, -245, 2, 2, 2, 2, -457,
	-350, -333, -375, -350, -361, 241, 29, 664, -597, -597,
	-365, -366, -364, -319, -359, -457, -333, -457, -333, -457,
	-333, -457, -457, -156, -507, 529, 2, 501, 196, 196,
	664, -457, 664, 8, -411, 465, 5, 2, 99, -599,
	2, 430, 128, 550, 397, 250, -350, -375, -350, -375,
	-333, 128, -333, 129, 128, -350, 4, -545, -448, -273,
	378, 279, 509, -482, -483, -509, 477, 478, -483, 477,
	478, 8, 9, 8, 9, -277, 513, 365, -427, 667,
	-282, 40, 145, 279, -350, -588, 629, 161, -507, -507,
	566, -746, 544, -514, 161, -507, 335, 366, 577, 181,
	587, 149, 370, 203, 662, -508, -508, 663, -433, -507,
	-507, 661, 671, 663, 664, 663, -414, 667, -412, -507,
	-431, -431, 663, 664, -431, -418, 661, 661, 667, 663,
	-525, -526, 154, -507, 566, 566, 566, 566, 662, 663,
	664, -648, 388, 662, 662, -507, 663, 663, 663, 663,
	39, 667, 667, 667, 663, 667, 667, 667, 663, 663,
	663, 667, 663, 629, 629, 663, 663, 663, 663, 667,
	663, 667, 663, 203, 663, 663, -471, 404, 663, 11,
	12, 652, 653, 654, 655, 194, 656, 657, 650, 651,
	649, 642, 643, 644, 92, 312, 479, 14, 15, 16,
	-378, 268, 241, -508, -508, -508, -508, 663, -512, -513,
	203, 196, 39, -466, -466, -466, 663, 203, -431, 663,
	663, 662, -641, 314, 359, 663, 667, 663, -501, -500,
	621, -550, -422, 2, -540, -345, -590, -501, -501, -431,
	-507, 274, 274, -459, 598, 377, -461, -540, -531, -586,
	-506, -505, 198, 40, 145, 353, 354, 355, 236, 199,
	-531, -343, -488, -531, -531, -590, -534, -343, -486, 662,
	-534, -530, 663, -656, -586, 663, -423, -543, -635, -414,
	664, -590, -255, -636, -219, 5, 366, -219, -219, -219,
	-219, -350, -597, 566, 566, 241, 241, 241, -425, -418,
	26, -687, 623, 405, -560, 660, 661, 8, -590, 662,
	-584, -584, -584, -597, 203, 203, 241, 241, 241, 377,
	-667, 203, -595, -295, 663, 667, -695, -704, -710, -704,
	386, 2, -295, -428, -295, -295, -375, -376, -295, -295,
	-295, -452, 623, -587, -493, 584, 88, 432, 562, -587,
	125, 487, -291, 454, 504, -336, -336, -350, -262, -261,
	-259, -319, 5, -360, -319, 217, 443, -595, 359, -498,
	233, -296, 359, 233, -344, -560, 662, -475, 625, 279,
	279, 598, -336, -344, 279, 233, -336, 233, -344, 2,
	-344, -670, 432, 371, -507, -260, -259, 64, -391, 303,
	430, 360, -292, 454, 504, 392, -156, -156, -156, 662,
	-719, 598, 148, -350, -375, -350, -360, -595, -355, 504,
	392, 454, 356, -369, -585, -585, -585, -453, 504, 392,
	454, -360, -595, -353, -319, -360, -595, 377, 366, 377,
	137, 267, -595, -302, 233, -319, 442, -302, 233, 442,
	442, 442, 442, 217, 443, 488, -333, 442, 629, 48,
	-744, 566, 203, -507, -507, -293, -156, -156, -156, 662,
	-334, -294, -478, 454, 5, 233, -336, 5, -336, 233,
	5, -319, -336, -360, -595, -723, 25, 153, -336, 667,
	283, 264, 623, -680, 204, 485, 437, -290, 644, -245,
	667, 644, 644, -360, -595, -324, 399, -681, 366, 5,
	10, 594, -333, -668, -340, 488, 566, 566, -545, -685,
	-686, 219, 470, 488, 473, -597, -152, -248, 623, -152,
	-242, 245, 654, -660, -599, -599, -319, -697, -698, -701,
	-702, -319, -382, -385, -383, -336, -499, -498, -618, -619,
	-614, 297, 250, 586, 266, 182, 100, -263, -264, 625,
	623, 165, -373, -350, 660, -245, -658, -555, 182, 496,
	662, -362, -363, 165, -408, 359, -595, 608, 39, 165,
	662, 2, 2, -354, 377, 359, -335, 233, -298, 155,
	-744, -333, -501, -422, -450, -491, 465, 377, -409, 603,
	-343, -450, -424, 667, 203, 644, 664, -409, -549, 654,
	-127, -127, -245, 662, -599, 663, 667, 664, 662, 644,
	644, -253, 381, -252, 157, 281, 265, 515, 516, 517,
	518, 147, 514, 132, 340, 246, 556, 489, 607, -553,
	-599, -251, -153, 203, -553, 241, 203, -82, 623, -245,
	550, 241, -245, 666, 488, 473, -319, 664, -457, -457,
	-457, 501, 501, -319, -319, 196, -418, 2, -346, -590,
	-333, -350, -347, -375, 196, 196, -333, -333, 591, -483,
	378, 308, -536, -283, 631, -350, 666, -507, -507, 161,
	161, -507, -508, -508, -507, 161, 203, 662, -507, -518,
	34, 34, 663, 667, -503, -507, -377, 663, 606, -414,
	-414, 663, 654, -590, 666, 663, -516, 158, -507, 560,
	321, 231, 319, -470, 319, -470, -470, -584, 5, -590,
	654, -649, -339, 662, -319, 621, -413, 383, 663, -562,
	-560, -507, -507, -507, -507, -507, -584, -565, -565, -580,
	-580, -507, -512, -507, -562, -560, -508, -508, -508, -508,
	-508, -508, -508, -508, -508, -508, -508, -508, -508, -508,
	-508, -508, -508, -508, -508, -508, 149, 359, 370, -508,
	-513, -512, -507, -507, -560, 663, 663, 663, -431, -126,
	662, 314, -319, -444, 222, -507, -553, 667, -444, -444,
	663, -540, -540, 662, -507, 274, 661, 667, 670, 644,
	644, -488, 664, -530, -486, -487, -490, -319, -531, 661,
	663, 667, 663, 667, -533, 663, -590, -501, -257, -256,
	146, 57, 115, 143, 366, 374, 202, 227, 429, 161,
	197, 155, 268, -687, -597, -597, 488, 488, 488, 380,
	219, 5, 8, 660, 661, 664, -584, 663, 663, 663,
	-597, -597, 488, 488, 488, -661, 580, 488, 29, 203,
	-597, -702, -704, -704, -295, -295, 127, 343, -507, -234,
	623, 625, 566, 566, 663, 667, 644, 64, 241, 165,
	359, 600, 359, -615, 163, -620, -507, 662, 250, 662,
	662, 2, -279, -280, -281, 153, 504, 25, -721, 2,
	598, 165, -295, 165, -295, 627, 663, 667, -391, 662,
	662, 566, 488, -312, 566, 623, -431, -507, -246, 135,
	-589, -674, 666, -674, 666, 488, 566, 566, 488, 566,
	566, 176, 257, 366, 359, -319, 165, -319, 233, -744,
	-319, -674, -674, 241, 623, 180, 180, 629, -302, -507,
	-507, 196, 566, 623, -431, 566, -564, 52, 27, 359,
	-354, -295, 165, 566, 566, 580, 504, -286, -599, -152,
	-249, 157, 469, 147, 281, 246, 49, 380, -681, -152,
	-243, -599, -599, -681, -599, 366, -16, -360, -595, -355,
	504, 392, 454, -667, -667, 219, -365, -689, -553, -250,
	381, -249, -553, -248, 203, 264, 623, 663, 667, 135,
	644, 2, 663, 663, 667, 667, -621, -296, -350, -335,
	250, 250, -342, -320, 39, 374, 374, 662, -350, -105,
	623, -552, -586, -341, -319, -439, -244, 46, -353, 39,
	165, -668, -355, -156, -355, -558, -559, 5, 39, -350,
	165, 377, 359, -299, 289, -744, -594, -636, -414, -450,
	-439, 360, 97, 663, -501, -441, -422, -507, 2, 663,
	-599, -245, -258, -337, 2, -600, -599, -599, 667, 662,
	644, 644, 644, 644, 644, 644, 644, -251, -553, -152,
	-251, -153, -156, 381, -350, -152, 654, -360, -361, 654,
	-457, 5, -397, -396, 397, 370, -397, 477, 477, 378,
	190, 285, -282, -334, -507, -507, 161, 34, 34, -507,
	-507, -518, 663, -507, -507, -431, 661, 5, -507, 663,
	663, 8, -507, 663, 664, -650, -319, -507, 663, 64,
	663, 663, 667, 667, 663, 663, 663, 663, 663, 663,
	663, -513, 203, 149, 370, 662, 663, 663, -126, -515,
	225, 64, -540, -515, -515, -459, -418, -540, -505, -334,
	660, -334, 660, -590, 663, 667, -560, -586, -543, 664,
	-256, 644, -599, -599, 2, 2, 5, 5, 429, 359,
	366, 5, -219, -687, -687, 623, -365, -365, -365, 380,
	661, 2, 660, -590, 663, -365, -365, -365, 203, -663,
	-365, 551, 206, -597, 127, 196, 230, 230, -336, -336,
	-261, -587, 550, 477, -302, 420, -498, 165, 165, -622,
	100, -624, 81, 182, 110, 359, 366, 586, 420, 77,
	135, 377, 439, -734, -735, -736, 39, 634, 635, 663,
	-416, -537, -635, 662, -319, -416, -418, 359, 537, 135,
	377, 359, 135, 377, 616, 127, 2, 580, 84, -336,
	-344, -259, -418, -418, -350, -360, -595, 173, 663, 667,
	644, 2, 654, 654, -360, -595, -355, -360, -595, -353,
	-319, 257, 165, 603, -302, 165, -302, 603, -302, 395,
	180, 566, -156, -507, 173, 663, -334, 5, 5, 165,
	-331, 81, -336, 5, -336, -354, 127, 644, 644, 644,
	644, 644, 31, -681, -243, 623, 488, 566, 566, 377,
	377, 380, -685, -686, -248, 667, 662, -248, -600, -152,
	2, 467, -701, -507, -507, -398, 252, -336, -619, -616,
	-617, 420, -499, -623, -625, 182, 420, -386, 662, -335,
	-320, 662, -156, 2, -262, 662, -384, 381, 661, 203,
	663, -595, -454, -156, -355, -408, -406, 623, -408, 663,
	667, 159, -476, 598, -334, -350, 165, -300, 288, -744,
	-594, -297, -481, -479, 150, 662, 377, -156, -414, 644,
	663, 127, 663, -252, -253, -599, -152, -599, -599, -599,
	-152, -599, -251, -691, 39, -553, -83, -84, 250, 100,
	402, -245, -245, -347, 550, 250, 662, 662, -282, -507,
	-507, -507, 663, -414, -590, 654, -644, 397, 663, -536,
	-507, -507, -508, 203, 662, -518, 663, -645, 622, -507,
	-445, -446, -507, 475, 116, 223, -645, -645, 663, -586,
	-586, -490, -599, 2, 2, 366, 2, 2, 2, 566,
	566, 566, 660, 2, 203, 203, 203, -597, 203, 203,
	241, 241, -156, 241, 39, 442, -498, -344, -344, -348,
	-341, 182, 233, 366, 616, -475, 279, 662, -508, 591,
	-350, 662, 2, 232, 232, 31, 64, -737, 140, 254,
	663, 667, -538, -330, -319, -507, -538, 663, 663, 366,
	591, 366, 616, -507, 591, -560, 662, -295, -295, 663,
	663, -507, 566, -589, 107, -587, 2, -674, -302, -418,
	-418, -674, -333, -507, 196, -507, 566, 5, -295, -348,
	-295, -295, -331, 580, -599, -507, 577, 181, -152, -152,
	376, -360, -595, -355, -690, 551, 498, 581, 490, 206,
	476, -690, 196, -249, -250, -248, -693, 505, -392, -393,
	2, -621, 279, -341, 279, 243, 164, -416, 662, 662,
	-418, -733, 623, 663, -382, -263, -106, -107, 567, -552,
	-664, -372, -408, 39, 343, 127, 39, 5, 662, 662,
	-319, 377, 662, -334, -314, 98, -744, -594, -298, -450,
	360, -418, 100, -481, -514, -245, 662, -245, 663, 556,
	-251, 667, 29, 662, 29, 662, -350, -375, -431, -431,
	663, -414, 64, 667, 663, 663, -508, -518, 663, -646,
	-647, -339, 667, 662, 662, 506, 661, 661, 2, -597,
	-597, -597, 2, -597, -597, -597, -597, -597, 488, 488,
	-302, 420, -319, -615, -624, -341, 359, -264, 598, 623,
	-507, -508, -321, 662, -507, 662, 662, 39, 135, 254,
	141, 238, -497, -738, 109, 538, 242, -537, -282, 663,
	-496, 598, 439, -508, -331, -416, 662, 662, 662, 644,
	203, -156, 662, -564, -295, -354, 644, 566, 2, 203,
	-667, 663, -680, -703, -704, -263, 662, -264, -387, 86,
	101, 136, 232, 207, 251, 529, 535, 29, -387, 663,
	-416, -416, 663, -388, 377, 127, 343, 663, 39, -107,
	9, -501, 39, -156, 127, -156, -558, -416, -350, -416,
	377, -304, -303, 298, -594, -299, 663, -344, -450, -600,
	-586, 4, -84, -418, -418, 663, 663, -651, 430, 478,
	224, -431, -415, 663, 667, 39, -446, 2, 2, 2,
	-687, -687, -687, -365, -365, 442, -296, 165, 226, 663,
	-626, 313, -319, 663, -454, -454, 39, 141, 238, -394,
	-390, 662, -283, -538, -264, 226, -350, -675, 598, 663,
	-400, -399, -396, -402, -401, -396, -431, -587, 107, 395,
	-431, -331, -152, -597, -597, 377, -682, 204, -705, -706,
	-708, 39, 284, 573, 622, -709, -388, -417, -539, -336,
	-496, 663, 663, 87, 127, -398, -156, -156, 2, -406,
	663, 663, -476, 663, -350, -301, -601, 442, 444, -744,
	-300, -501, 150, 663, 663, 663, 663, -652, -653, 54,
	583, 117, -507, -652, -652, -647, -649, 203, 203, 182,
	-495, 632, -627, -630, -629, 639, 512, 204, 396, 663,
	537, 615, 663, 663, -737, -418, -495, -408, -507, -496,
	663, 667, 603, 663, 667, 603, 663, 203, 663, -295,
	-687, -295, -690, -247, 623, 49, -715, -712, 53, 466,
	-708, -696, 5, -594, -313, -312, 663, 667, -497, -496,
	-394, 419, 142, 153, -392, -733, -496, 662, -497, 662,
	-311, -310, -744, -580, -314, 150, 360, 591, -245, -654,
	163, -653, 416, 195, 477, 416, 195, -654, -654, -597,
	-597, -341, -264, 59, -629, 639, -630, 639, 591, 142,
	-501, 663, -626, -264, -399, 241, -401, 203, 395, 203,
	485, -681, 31, 44, -507, -264, -539, -394, -497, -264,
	478, 478, 2, -263, -388, -497, -416, -394, -416, -307,
	-308, -309, -418, -304, 360, 591, 504, 117, 222, 561,
	343, 34, 644, -628, 343, 462, 69, 504, -628, -627,
	662, 662, -597, 381, -714, -264, -394, -501, 2, -388,
	-394, 663, -264, 663, -596, 392, -301, 504, -440, 477,
	385, -653, -507, 24, 366, 135, -737, -431, -431, -295,
	-244, 662, -713, 158, -3, -712, -501, -264, -477, 359,
	617, 616, -313, -264, -496, -501, -497, -306, -305, 494,
	-744, -311, -440, -501, 663, 663, -244, 668, -477, -501,
	616, -501, -497, -477, -394, -595, -307, -501, -389, -390,
	566, 663, -477, -477, -394, -264, -596, 662, -264, -501,
	-306, -431, -501, -477, 663, -477, -389,
}

var sqlDef = [...]int16{
	-2, -2, 1, 2, 3, 4, 6, 7, 9, 10,
	11, 13, 15, 17, 19, 21, 23, 25, 27, 29,
	31, 33, 34, 35, 37, 39, 41, 43, 44, 1759,
	1761, 731, 732, 734, 735, 736, 738, 739, 741, 743,
	745, 746, 747, 749, 750, 752, 753, 754, 755, 756,
	758, 760, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, -2, 0, 0, 854, 856, 0,
	1741, 1743, 1745, 1747, 0, 0, -2, -2, 0, 0,
	-2, -2, 45, 46, 48, 50, 0, -2, 423, 425,
	427, 429, 0, 461, 463, 464, 466, 468, 469, 471,
	473, -2, 0, 657, 658, 660, 662, 664, -2, 0,
	1316, 1318, 1320, 0, 842, 844, 0, 1323, 1325, 1327,
	0, 0, 866, 867, 0, 1862, -2, 858, 860, 862,
	864, 943, 945, 947, 949, 951, 953, 955, 957, 959,
	961, 963, 964, 966, 968, 970, 972, 974, 976, 977,
	979, 981, 983, 984, 986, 987, 989, 991, 993, 995,
	997, 999, 1001, 1003, 1005, 1007, 1009, 1011, 1013, 1015,
	-2, 1018, 1019, 1020, 1022, -2, 0, -2, -2, 1755,
	52, 54, 56, 58, 60, 62, 64, 66, 68, 70,
	72, 74, 76, 78, 602, 604, 606, 608, 610, 613,
	615, 617, 619, 1920, 666, 668, 670, 672, 674, 676,
	678, 680, 0, 0, -2, 1934, 0, 0, 0, 1114,
	80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
	149, 150, 151, 152, 153, 154, 155, 156, 93, 94,
	95, 97, 98, 99, 100, 104, 105, 106, 107, 108,
	109, 110, 111, 112, 113, 114, 115, 116, 117, 118,
	119, 146, 147, 91, 120, 121, 122, 123, 124, 0,
	0, 1893, 1895, 1897, 1899, -2, 0, 0, 8, 12,
	14, 16, 18, 20, 22, 24, 26, 28, 30, 32,
	36, 38, 40, 42, 1760, 1762, 733, 737, 740, 742,
	744, 748, 751, 757, 759, 761, 716, 717, 720, 2650,
	2668, 2669, 2670, 2673, 2674, 2675, 2676, 2677, 2678, 3214,
	3295, 3296, 2701, 2702, 2703, 2704, 2705, 2706, 2707, 2708,
	2709, 2710, 2711, 2712, 2713, 2714, 2715, 2716, 2717, 2718,
	2719, 2720, 2721, 2722, 2723, 2724, 2725, 2726, 2727, 2728,
	2729, 2730, 2731, 2732, 2733, 2734, 2735, 2736, 2737, 2738,
	2739, 2740, 2741, 2742, 2743, 2744, 2745, 2746, 2747, 2748,
	2749, 2750, 2751, 2752, 2753, 2754, 2755, 2756, 2757, 2758,
	2759, 2760, 2761, 2762, 2763, 2764, 2765, 2766, 2767, 2768,
	2769, 2770, 2771, 2772, 2773, 2774, 2775, 2776, 2777, 2778,
	2779, 2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788,
	2789, 2790, 2791, 2792, 2793, 2794, 2795, 2796, 2797, 2798,
	2799, 2800, 2801, 2802, 2803, 2804, 2805, 2806, 2807, 2808,
	2809, 2810, 2811, 2812, 2813, 2814, 2815, 2816, 2817, 2818,
	2819, 2820, 2821, 2822, 2823, 2824, 2825, 2826, 2827, 2828,
	2829, 2830, 2831, 2832, 2833, 2834, 2835, 2836, 2837, 2838,
	2839, 2840, 2841, 2842, 2843, 2844, 2845, 2846, 2847, 2848,
	2849, 2850, 2851, 2852, 2853, 2854, 2855, 2856, 2857, 2858,
	2859, 2860, 2861, 2862, 2863, 2864, 2865, 2866, 2867, 2868,
	2869, 2870, 2871, 2872, 2873, 2874, 2875, 2876, 2877, 2878,
	2879, 2880, 2881, 2882, 2883, 2884, 2885, 2886, 2887, 2888,
	2889, 2890, 2891, 2892, 2893, 2894, 2895, 2896, 2897, 2898,
	2899, 2900, 2901, 2902, 2903, 2904, 2905, 2906, 2907, 2908,
	2909, 2910, 2911, 2912, 2913, 2914, 2915, 2916, 2917, 2918,
	2919, 2920, 2921, 2922, 2923, 2924, 2925, 2926, 2927, 2928,
	2929, 2930, 2931, 2932, 2933, 2934, 2935, 2936, 2937, 2938,
	2939, 2940, 2941, 2942, 2943, 2944, 2945, 2946, 2947, 2948,
	2949, 2950, 2951, 2952, 2953, 2954, 2955, 2956, 2957, 2958,
	2959, 2960, 2961, 2962, 2963, 2964, 2965, 2966, 2967, 2968,
	2969, 2970, 2971, 2972, 2973, 2974, 2975, 2976, 2977, 2978,
	2979, 2980, 2981, 2982, 2983, 2984, 2985, 2986, 2987, 2988,
	2989, 2990, 2991, 2992, 2993, 2994, 2995, 2996, 2997, 2998,
	2999, 3000, 3001, 3002, 3003, 3004, 3005, 3006, 3007, 3008,
	3009, 3010, 3011, 3012, 3013, 3014, 3015, 3016, 3017, 3018,
	3019, 3020, 3021, 3022, 3023, 3024, 3025, 3026, 3027, 3028,
	3029, 3030, 3031, 3032, 3033, 3034, 3035, 3036, 3037, 3038,
	3039, 3040, 3041, 3042, 3043, 3044, 3045, 3046, 3047, 3048,
	3049, 3050, 3051, 3052, 3053, 3054, 3055, 3056, 3057, 3058,
	3059, 3060, 3061, 3062, 3063, 3064, 3065, 3066, 3067, 3068,
	3069, 3070, 3071, 3072, 3073, 3074, 3075, 3076, 3077, 3078,
	3079, 3080, 3081, 3082, 3083, 3084, 3085, 3086, 3087, 3088,
	3089, 3090, 3091, 3092, 3093, 3094, 3095, 3096, 3097, 3098,
	3099, 3100, 3101, 3102, 3103, 3104, 3105, 3106, 3107, 3108,
	3109, 3110, 3111, 3112, 3113, 3114, 3115, 3116, 3117, 3118,
	3119, 3140, 3141, 3142, 3143, 3144, 3145, 3146, 3147, 3148,
	3149, 3150, 3151, 3152, 3153, 3154, 3155, 3156, 3157, 3158,
	3159, 3160, 3161, 3162, 3163, 3164, 3165, 3166, 3167, 3168,
	3169, 3170, 3171, 3172, 3173, 3174, 3175, 3176, 3177, 3178,
	3179, 3180, 3181, 3182, 3183, 3184, 3185, 3186, 3187, 3188,
	3189, 3190, 3191, 3192, 3193, 718, 719, 1510, 0, 800,
	798, 2633, 801, 2962, 803, 805, 651, 652, 653, 654,
	655, 656, 0, 835, 3067, 816, 1932, 836, 838, 839,
	840, 841, 795, 793, 0, 840, 835, 2706, 3067, 833,
	1739, 1740, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 665, 0, 0, 0, 0, -2, 0, 0, 0,
	0, 0, 0, 0, 582, 1573, 1574, 1575, 1724, 1725,
	3018, 1770, 0, 287, 855, -2, -2, 3178, -2, 897,
	898, -2, -2, 912, 916, 907, 3183, 0, 3021, 3003,
	-2, 919, 1742, 1744, 1746, 1023, 1024, 1025, 2654, 1029,
	1027, 1039, 1040, 1043, 0, 1060, -2, 0, 2702, 2985,
	-2, -2, 1061, 1062, -2, -2, -2, -2, 1041, 1042,
	0, 0, 0, 0, 0, 2070, 2071, 2637, 1772, 1764,
	1767, 1765, 1766, 47, 49, 51, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 297,
	-2, -2, -2, -2, 0, 0, 3073, 2765, 2601, 2670,
	2604, 2599, 424, 426, 428, 430, 431, 0, 0, 0,
	0, 0, 0, 0, 462, 465, 467, 470, 472, -2,
	0, 474, 0, 581, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	646, -2, -2, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1390, 1382, 1383, 1640, 0, 0, 0, -2,
	659, 661, 663, 721, 722, 0, 1921, 1921, 729, 730,
	-2, 0, 0, 0, 0, 385, 376, 1317, 1319, 1321,
	1322, 0, 0, 0, 0, 0, 843, 845, 0, 0,
	3067, 348, 1324, 1326, 1328, 1329, 0, 0, 0, 0,
	0, 0, 387, 0, 0, 859, 861, 863, 865, 944,
	946, 948, 950, 952, 954, 956, 958, 960, 962, 965,
	967, 969, 971, 973, 975, 978, 980, 982, 985, 988,
	990, 992, 994, 996, 998, 1000, 1002, 1004, 1006, 1008,
	1010, 1012, 1014, 1016, 1017, 1068, 0, 0, 0, 0,
	-2, -2, -2, 0, 0, 0, -2, 0, -2, -2,
	-2, 0, 0, 0, 0, 0, 0, 0, 0, -2,
	0, 0, 1184, 0, 0, 0, -2, -2, -2, -2,
	0, 0, 0, 0, 0, 0, 0, -2, -2, 0,
	0, 0, 0, -2, 0, 1285, 0, 0, 1071, 1074,
	1075, 1076, 1077, 1078, 1079, 1080, 0, 1157, 1182, 1183,
	1193, 1021, 0, 1553, 1922, 1772, 1749, 1750, 1751, 1756,
	1758, 1752, 1753, 1754, 53, 55, 57, 59, 61, 63,
	65, 67, 69, 71, 73, 75, 77, 79, 603, 605,
	607, 609, 611, 614, 616, 618, 620, -2, 1891, 1892,
	667, 669, 671, 673, 675, 677, 679, 681, 846, 0,
	849, 0, 1073, 848, -2, 0, 1926, 1926, 1926, 0,
	0, 1892, 1890, 0, 0, 0, 852, 853, 923, 924,
	2213, 0, 0, 0, 0, 0, 0, 0, 0, 2473,
	2301, 0, 925, -2, 2334, 2336, 3152, 2934, 3178, 2472,
	2338, 2339, 2340, 2341, 2342, 0, 2344, 2345, 2346, 2347,
	2348, 2349, 0, 2351, 0, 2356, 2357, 2358, 0, 3159,
	2576, 2664, -2, 0, 0, 3166, 2660, 0, 2439, 2374,
	-2, -2, 2687, 2666, 2145, 2146, 2147, 2148, 2149, -2,
	-2, 3197, 2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385,
	2386, 2387, 2388, 0, 3140, 3160, 3161, 3167, 3169, 3162,
	3149, 2399, 2781, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, 2172, 2181, -2, -2,
	-2, -2, -2, -2, -2, 3153, 3154, 3172, 3175, 3182,
	3187, 3188, 3158, 3168, 3196, 3198, 3199, 3200, 3201, 3202,
	3203, 3204, 3205, 3206, 3207, 3208, 3209, 3210, 3211, 3212,
	3213, 2173, -2, -2, -2, -2, 0, 1909, 2978, 1912,
	2018, 1910, 1894, 1896, 0, 1898, 0, 0, 0, 1903,
	1929, 1927, 0, 1978, 1907, 1908, 2001, 2001, 2033, 0,
	2006, 0, 2033, 1921, 2064, 0, 2012, 3008, 2375, 2376,
	0, 2670, 2665, -2, -2, 3194, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 796, 0, 802,
	804, 0, 0, 0, 0, 835, 834, 1931, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 257, 3160, 543,
	544, 547, 0, 585, 586, 587, 588, 589, 3160, 0,
	0, 0, 0, 595, 596, 597, 598, 599, 600, 601,
	257, 3160, 686, 715, 711, 0, 257, 3160, 689, 714,
	257, 3160, 692, 713, 0, 695, 1638, 257, 3160, 698,
	2629, 257, 3160, 701, 703, 257, 3160, 707, 2644, 2642,
	708, 0, 710, 277, 273, 274, 275, 276, 1735, 1736,
	1737, 1738, 0, 1769, 1639, 857, 0, 883, 0, 895,
	896, 3148, -2, 0, 3032, 900, 901, -2, 903, 1773,
	1777, 1778, 1779, 1780, 1781, 0, 0, 0, 0, 1786,
	0, 0, 0, 0, 890, 891, 910, 911, 917, 920,
	0, 1032, 1028, 1044, 0, 1059, 0, 1060, 1060, 2618,
	2609, 2610, 0, 0, 1060, 1060, 0, 0, 1063, 1064,
	1065, 1066, 1067, 1763, -2, 90, 0, 3160, 2064, 92,
	0, 2623, 2696, 2697, 2698, 2699, 2700, 3195, 3215, 3216,
	3217, 3218, 3219, 3220, 3221, 3222, 3223, 3224, 3225, 3226,
	3227, 3228, 3229, 3230, 3231, 3232, 3233, 3234, 3235, 3236,
	3237, 3238, 3239, 3240, 3241, 3242, 3243, 3244, 3245, 3246,
	3247, 3248, 3249, 3250, 3251, 3252, 3253, 3254, 3255, 3256,
	3257, 3258, 3259, 3260, 3261, 3262, 3263, 3264, 3265, 3266,
	3267, 3268, 3269, 3270, 3271, 3272, 3273, 3274, 3275, 3276,
	3277, 3278, 3279, 3280, 3281, 3282, 3283, 3284, 3285, 3286,
	3287, 3288, 3289, 3290, 3291, 3292, 3293, 3294, 3197, 96,
	0, 3160, 101, 0, 3160, 0, -2, 125, 562, 126,
	0, 148, 0, 176, -2, -2, -2, 157, 0, 3160,
	0, 2598, -2, 0, 269, -2, 0, 786, 388, 389,
	2683, 2684, 2692, 2693, 2694, 2695, 377, 378, 0, 777,
	0, 886, 2473, 0, 0, 1354, -2, 0, 1566, 1568,
	1568, 0, -2, 0, 0, 0, 1305, 2595, 2600, 1306,
	1307, 2619, 1308, 2605, 0, 432, 433, 434, 435, 436,
	0, 437, 3160, 439, 440, 0, 442, 443, 3160, 445,
	446, 0, 448, 0, 450, 0, 312, 329, 327, 3160,
	0, 3160, 476, 479, 0, 583, 0, 580, 0, 564,
	565, 0, 567, 0, 0, 0, 572, 573, 575, 576,
	577, 578, 579, 0, 624, 622, 2634, 642, 402, 0,
	-2, 3160, 0, 1351, 0, 0, 1618, -2, 0, 1559,
	-2, 0, 1625, 3160, 1621, 0, -2, 0, 1919, 3160,
	1790, 1386, 1387, 1388, 1389, 2078, 648, 0, 1826, 0,
	1828, 0, 1848, 2072, 2001, 0, 0, 2077, 0, -2,
	774, 2653, -2, 724, 0, 725, 0, -2, 0, 402,
	0, 0, 1332, 1334, 1335, 1337, 1338, 1341, 1342, 1343,
	1344, 0, 1346, 2050, 349, 351, 0, 0, 0, 0,
	1331, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734,
	0, 642, 868, 0, 0, 1069, 1070, 0, 0, 1088,
	1089, 1090, 0, 0, 402, -2, -2, -2, -2, 2746,
	1100, 0, 1108, 1111, -2, 0, 0, 0, 0, 1118,
	0, 1123, 1124, 1125, 0, -2, 0, 1132, 1134, 1315,
	1137, 0, 1315, 0, 1139, 0, 1143, 0, 1146, 0,
	1148, 0, 1150, -2, -2, -2, 1158, 1159, -2, 1164,
	-2, 0, 1168, -2, 0, 1171, 0, 1174, -2, 0,
	1184, 1180, 1181, 0, 0, 0, 0, 1201, 1202, 0,
	1206, 0, 1215, 0, 1218, 1219, 1220, 0, 0, 1225,
	1226, 0, 1228, 1229, 1230, 1232, 1233, 1234, 0, 3106,
	3029, 2765, 2813, 0, 1243, -2, 2802, 1253, 1255, 0,
	-2, 0, 1271, 0, 1275, 0, 0, 1284, 0, 0,
	0, 1072, 0, 1081, 1082, 1083, 257, 2068, 1748, 0,
	-2, 0, 847, 0, 851, 1951, 1877, 1874, 0, 1948,
	1949, 1878, 0, 0, 0, 1885, 0, 1924, 1925, 0,
	0, 0, 1864, 1865, 0, 0, 0, 0, 0, 0,
	2478, 2479, 2480, 2481, 2494, 2482, 2483, 2493, 2491, 2492,
	2484, 2485, 2490, 2504, 2505, 2495, 2496, 2486, 2499, 2497,
	2498, 2500, 2501, 2502, 2503, 0, 0, 2509, 0, 2487,
	2488, 2489, 2517, 0, 0, 2518, 0, 2520, 0, 2510,
	2506, 2507, 2508, 0, 2280, 2282, 2584, 0, 0, 0,
	2516, 2511, 2512, 2218, 2219, 2220, 2221, 2222, 2255, 2259,
	2260, 0, 0, 2335, 2581, 2580, 2337, 0, 0, 2532,
	0, 2350, -2, 0, 2473, 2527, 0, 0, 2359, 2360,
	2361, 0, 0, 2532, 0, 0, 2575, 2371, 2372, 2210,
	0, 0, 2441, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2159, 2158, 0, 2160, 0, 2161, 2162, 2169, 2182,
	0, 0, 0, 0, 2186, 0, 0, 0, 0, 0,
	0, 0, 2556, -2, 0, 0, 0, 0, 2174, 0,
	0, 1911, 0, 0, 0, 1982, 2585, 2589, 2590, 1982,
	1982, 0, 0, 2533, 2061, 2061, 0, 0, 2056, 2056,
	2056, 2054, 2033, 0, 2033, 2043, 0, 2033, 2033, 0,
	-2, 2006, 0, 0, 2047, 0, 2027, 762, 764, 766,
	768, 769, 770, 772, 2065, 2066, 0, 0, 0, 0,
	2671, 0, 0, 0, 0, 0, 0, 2656, 0, 0,
	2628, 457, 458, 0, 0, 0, 3086, 3021, 0, -2,
	-2, -2, -2, 3029, 0, 0, 2765, 2802, 2813, 807,
	837, 0, 1921, 0, 2535, 2093, 2097, 0, 2099, 2100,
	2101, 2102, 2103, 0, 0, 2094, -2, 2170, 2172, 2193,
	2688, 2689, 2690, 2153, 2154, 2155, 2156, 2157, 2165, 2152,
	2152, 2152, 2163, 2192, 2184, 2192, 2188, 2138, 2139, 2140,
	2175, 2176, 2177, 2178, 0, 3086, 3021, 0, -2, 0,
	819, 0, 0, 0, 1859, 339, 340, 541, 0, 255,
	256, 0, 546, 0, 584, 0, 591, 592, 593, 0,
	682, 0, 0, 257, 3160, 687, 0, 690, 0, 257,
	3160, 2593, 696, 0, 699, 0, 0, 705, 0, 0,
	0, 0, 0, 257, 1861, 0, 0, 0, 0, -2,
	905, 913, 914, 915, 0, 1775, 0, 1782, 934, 935,
	936, 1784, 1785, 0, 1787, 908, 937, 938, 939, 940,
	941, 942, 0, 2607, 2608, 2613, 2614, 0, 0, 906,
	927, 909, 0, 921, 1035, 1030, 1031, 1045, 1046, 0,
	0, 2611, 2612, 0, 0, 1051, 1052, 158, 1721, 0,
	0, 210, 0, 1721, 1721, 0, 0, 0, 0, 238,
	0, 0, 1420, 0, 0, 0, 0, 176, 195, 206,
	170, 171, 172, 0, 0, 0, 0, 0, 0, 102,
	1532, 0, 1535, 0, 0, 0, 0, 0, 0, 0,
	1548, 1551, 0, 0, 0, 0, 556, 0, 530, 0,
	0, 553, 561, 0, 0, 517, 518, 519, 520, 0,
	0, 525, 0, 0, 0, 0, 531, 0, 128, 129,
	0, 0, 134, 135, 0, 0, 194, 0, 0, 0,
	0, 0, 0, 1823, 0, 185, 176, 0, 0, 175,
	177, 160, 0, 0, 176, 180, 196, 208, 0, 244,
	0, 183, 184, 246, 1417, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 279, 0, 0, 314, 784, 0,
	787, 0, 776, 778, 642, 642, 0, 0, 884, 888,
	889, 0, 0, 885, 887, 0, 0, 1560, 0, 0,
	0, 1918, 0, 0, 0, 0, 3160, 1719, 0, 1702,
	0, 2050, 2862, -2, -2, 349, 2050, 1304, 0, 0,
	2671, 2603, 0, 0, 0, 0, 0, 0, 449, 0,
	0, 0, 338, 0, 0, 0, 481, 486, 0, 574,
	563, 566, 568, 569, 570, 612, 1479, 3160, 0, 0,
	646, 637, 0, 641, 0, 0, 645, 0, 0, 1531,
	3160, 1529, 2638, 0, 1557, 0, 1617, 1510, 3160, 2636,
	0, 0, 0, 1626, 2680, 1635, 1639, 1811, 0, 650,
	0, 1829, 1831, 0, 0, 2073, 0, 2075, 2001, 1921,
	0, 0, 0, 0, 380, 0, 0, 0, 0, 0,
	1345, 358, 0, 2049, 0, 0, 390, 2050, 349, 2991,
	0, 1330, 402, 402, 2050, 870, 2050, 872, 0, 0,
	1091, 0, 0, 1094, 402, 402, 402, 402, 402, 1106,
	1107, 1109, 1110, -2, -2, -2, -2, 1112, 1113, 1212,
	0, 0, 0, 1211, 1717, 0, 1128, 1131, 1135, 0,
	1288, 3003, 3021, 3086, 1313, 1136, 1212, 2765, 1212, 2765,
	1212, 2765, 1212, 1212, 1152, 1196, 1208, 1163, 1170, 0,
	1165, 1169, 1172, 1175, 0, 1177, 1185, 0, -2, 0,
	1188, 0, 1190, 0, 1192, 1212, 1204, 1213, 1216, 0,
	1224, 1227, 0, 1235, 1236, 1237, 1238, 2651, 1239, 1240,
	1241, 1242, -2, 0, 1246, 1247, 0, 0, 1262, 1267,
	1268, 1264, 0, 0, 0, 0, 0, 0, 1278, 1279,
	0, 0, 0, 1287, 0, 1084, 1552, 0, 1757, 1951,
	1877, 850, 1868, 1950, 1869, 1876, 1879, 0, 0, 1881,
	0, 1883, 0, 1946, 1947, 1954, 1955, 0, 1965, 1966,
	1958, 0, -2, 0, 0, 1961, 1962, 1887, 0, 1904,
	1905, 1906, 1935, 1938, 1654, 0, 3295, 893, 0, 2214,
	2088, 2215, 2216, 2622, 0, 2223, 2224, 2225, 2226, 2227,
	2228, 2229, 2230, 2231, 2232, -2, -2, -2, -2, -2,
	-2, -2, -2, 2241, 2242, 2243, 2244, 2245, 2246, 2247,
	2248, 2249, 2250, 2251, -2, -2, -2, 2256, 2257, 2258,
	-2, 2519, 2521, 0, 2584, 0, -2, 0, -2, -2,
	-2, -2, 2277, 0, 2279, 2284, 2286, 2288, 0, 0,
	0, 0, 2583, 2298, 2567, 2568, 0, 0, 2475, 2476,
	2477, 2283, 0, 2302, 2582, 2579, 0, 0, 2513, 0,
	2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486, 2487,
	2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497,
	2498, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507,
	2508, 2509, 2510, 0, 2531, 1934, 2363, 0, 0, 0,
	0, 2370, 2355, 2529, 0, 2528, 0, 0, 0, 2539,
	0, 2574, 2570, 0, 2620, 2209, 2196, 2197, 2198, 2199,
	2200, 2201, 2211, 0, 2617, 2657, 2663, 2449, 0, 0,
	0, 2400, 2401, 2402, 2403, 2404, 0, 2406, 2407, 0,
	2409, 2410, 0, 2412, 2413, 0, 2415, 2416, 2417, 2418,
	2419, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2106, 2107,
	2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117,
	2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127,
	2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137,
	0, 0, 2421, 0, 2542, -2, -2, -2, -2, -2,
	-2, -2, -2, 0, 2423, 0, 2425, 2533, 2553, 0,
	0, 2303, 0, 0, 0, 0, 0, 2428, 2533, 2561,
	0, 0, 0, 0, 0, 2533, 0, 2566, 0, 2435,
	0, 2437, 1115, 1116, 1913, 0, 0, 2019, 0, 2083,
	0, 0, 0, 2588, 2591, 2592, 3120, 3121, 3122, 3123,
	3124, 3125, 3126, 3127, 3128, 3129, 3130, 3131, 3132, 3133,
	3134, 3135, 3136, 3137, 3138, 3139, 2083, 2083, 0, 1977,
	0, 0, 2057, 2058, 2059, 2060, 0, 0, 2061, 0,
	2051, 2055, 2052, 2053, 2043, 1998, 0, 0, 2624, 2043,
	2004, 2042, 0, 2018, 2032, 2043, 2043, 0, -2, 2008,
	2046, 0, 2021, 2033, 0, 0, 763, 765, 767, 771,
	773, 0, 0, 1934, -2, 0, -2, 404, 1509, 0,
	0, 0, 0, 0, 0, 797, 799, 0, 0, 702,
	0, 0, 0, 0, 1294, 0, 1296, 1297, 0, 1299,
	0, 1705, 791, 0, 794, 0, 2084, 2087, 0, 0,
	2098, 2104, 2105, 0, -2, 0, 0, 2194, 0, 0,
	0, 0, 0, 0, 0, 832, 0, 3067, 0, 830,
	0, 545, 257, 0, 549, 550, 0, 0, 498, 499,
	500, 501, 503, 2691, 504, -2, -2, 0, 594, 257,
	712, 684, 0, 257, 257, 693, 0, 0, 257, 704,
	257, 2645, 257, 2643, 278, 709, 1860, 290, 0, 892,
	0, 1774, 1783, 0, 931, 0, 933, 0, 2615, 2616,
	0, 922, 0, 1033, 0, 1047, 1048, 1049, 1050, 0,
	0, 0, 0, 1720, 0, 0, 1665, 0, 0, 214,
	3160, 0, 259, 0, 0, 1472, 2630, 0, 1462, 0,
	0, 2789, 0, 0, 0, 0, 0, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 167, 0,
	173, 174, 0, 0, 0, 0, 0, 0, 0, 0,
	1533, 1534, 1536, 1543, 1545, 0, 1539, 1540, 0, 1542,
	1544, 1546, 0, 1549, 0, 0, 0, 0, 0, 0,
	552, 554, 555, 530, 0, 0, 0, 0, 0, 0,
	0, 523, 524, 526, 527, 528, 529, 0, 0, 0,
	0, 0, 0, 136, 140, 1569, 3027, 0, 0, 0,
	0, 1570, 1571, 1572, 1799, 1800, 0, 1822, 1823, 0,
	0, 0, 0, 0, 0, 0, 169, 0, 0, 0,
	182, 0, 2597, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 313, 315, 0, 788, 0, 789,
	0, 779, 402, 781, 782, 398, 395, 397, 783, 0,
	0, 0, 1562, 0, 1613, 1611, 1585, 1586, 1587, 1588,
	1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598,
	1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608,
	1609, 1610, 0, 0, 0, 0, -2, 1564, 1565, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 0,
	393, 2596, 2606, 0, 1339, 1340, 438, 441, 444, 447,
	296, 0, 0, 0, 478, 488, 0, 1392, 1364, 0,
	0, 623, 402, 642, 644, 0, 400, 2937, 2649, 1349,
	1527, 1530, 0, 1510, 3160, 1581, 0, 0, 0, 0,
	0, 0, 0, 1624, 0, 0, 3160, 2625, 2679, 2680,
	1813, 1823, 0, 2083, 0, 1846, 1832, 0, 0, 0,
	1846, 1850, 1851, 1853, 1854, 0, 0, 2074, 2080, 723,
	775, 1921, 1921, 402, 0, 0, 1835, 1837, 0, 0,
	0, 341, 0, 352, 2050, 350, 0, 358, 0, 0,
	2050, 349, 0, 636, 869, 874, 402, 0, 0, 402,
	1095, 1096, 1097, 1098, 1099, 1154, 1198, 1210, 1266, 1117,
	1119, 1120, 1121, 0, 1126, 0, 0, 0, 1314, 1309,
	1310, 1311, 2646, 2642, 1312, 1138, 1212, 1141, 1212, 1144,
	1212, 1147, 1149, 1167, 1173, 1186, 1179, 1187, 0, 0,
	0, 1200, 0, 0, 1222, 0, 1231, 1245, -2, 1250,
	1251, 0, 0, 0, 0, 0, 0, 0, 1272, 1273,
	1274, 1276, 1281, 1280, 0, 1286, 1085, 2069, 1872, 1873,
	1875, 0, 1884, 0, 0, 1960, -2, -2, 1959, 1963,
	1964, -2, -2, -2, -2, 1880, 0, 1889, 1886, 0,
	1945, 1652, 1653, 0, 0, 894, 0, 0, -2, -2,
	0, 0, 0, 2299, 0, -2, 2278, 2281, 2285, 2287,
	2289, 0, 0, 0, 0, 0, 0, 2522, 0, 2524,
	2300, 2577, 2580, 2515, 0, 2471, 0, 0, 1933, 1934,
	1934, 0, 2369, 0, 2530, 0, 2537, 2538, 0, 2362,
	0, 2571, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2373, 0, 0, 0, 0, 2405, 2408, 2411, 2414,
	0, 0, 0, 0, 2394, 0, 0, 0, 2398, 2164,
	2150, 0, 2192, 2190, 2191, 2185, 2192, 2189, 2142, 0,
	2141, 0, 2420, 0, 2422, 2424, 0, 0, 2426, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2306, 2307, 2308, 2328, 2427, 2559, 2560,
	0, 0, 0, 0, 0, 0, 2433, 0, 2565, 2434,
	2436, 1921, 0, 1914, 0, 2017, 0, 1979, 1968, 2082,
	0, 2586, 2050, 1981, 1983, 2587, 2627, 1968, 1968, 0,
	2534, 0, 0, 2037, 0, 0, 0, 2039, 2002, 0,
	0, 1996, 0, 1987, 1988, 1989, 1990, 1991, 1992, 1993,
	2003, 2018, 2041, 2005, 2009, 2657, 0, 2021, 2045, 0,
	2043, 0, 2028, 0, 2030, 2067, 0, 2014, 2047, 0,
	0, 2672, 2083, 0, 451, 459, 460, 452, 453, 454,
	455, 0, 1705, 0, 0, 0, 0, 0, 1295, 1298,
	0, 815, 0, 0, 2536, 0, 2089, 0, 2095, 0,
	0, 0, 0, 817, 0, 0, 0, 0, 0, 0,
	0, 0, 1858, 542, 548, 0, 0, 497, 0, 496,
	502, 590, 683, 257, 688, 691, 2594, 257, 697, 700,
	706, 286, 0, 882, -2, 929, 930, 932, 0, 928,
	1038, 1034, 211, 1721, 0, 0, 0, 1661, 0, 1375,
	0, 1370, 1371, 1663, 2641, 1667, 1673, 1676, 0, 216,
	3160, 228, 0, 3160, 0, 1436, 0, 0, 0, 0,
	0, 0, 1723, 0, 0, 3160, 257, 3160, 257, 232,
	234, 237, 0, 243, 239, 0, 1372, 0, 1424, 0,
	0, 1427, 159, 1721, 0, 0, 162, 166, 178, 0,
	0, 0, 193, 0, 0, 0, 1678, 1682, 1690, 0,
	0, 0, 1537, 1538, 1541, 1547, 1550, 103, 0, 0,
	0, 1686, 1688, 1694, 557, 558, 559, 0, 0, 0,
	521, 522, 127, 130, 3160, 2639, 0, 132, 3160, 0,
	141, 1823, 0, 0, 0, 0, 1660, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 164, 168, 179, 0,
	1696, 161, 181, 0, 272, 0, 0, 262, 257, 3160,
	0, 264, 0, 265, 266, 280, 0, 0, 0, 0,
	0, 0, 0, 320, 0, 0, 0, 785, 0, 780,
	0, 0, 0, 1352, 1353, 1612, 0, 1555, 1556, 324,
	325, 0, 1567, 1561, 0, 0, 0, 0, 0, 1698,
	1699, 0, 0, 0, 1719, 1714, 2050, 292, 0, 2050,
	300, 0, 2602, 0, 328, 337, 475, 0, 487, 489,
	491, 0, 0, 0, 1391, 1490, 1393, 1395, 1396, 1397,
	259, 0, 2680, 1462, 2848, 2680, 0, 0, 1359, 0,
	0, 0, 629, 625, 0, 634, 638, 639, 0, 0,
	0, -2, 0, 0, 0, 0, -2, 0, 0, 0,
	1628, 1622, 1623, 0, 0, 0, 0, 3160, 1815, 1823,
	0, 1919, 1934, 649, 1824, 1846, 0, 0, 0, 1834,
	1830, 1827, 2083, 0, 0, 0, 0, 0, 2076, 2079,
	726, 727, 379, 0, 402, 0, 0, 0, 0, 0,
	0, 356, 0, 359, 0, 0, 0, 364, 365, 366,
	367, 368, 369, 0, 0, 0, 0, 374, 375, 358,
	391, 343, 2050, 0, 358, 0, 0, 871, 0, 1086,
	0, 0, 1093, 0, 0, 1717, 1130, 0, 1140, 1142,
	1145, 1189, 1191, 1212, 1203, 0, 1223, 1249, 1256, 2626,
	1257, 1414, 0, 1414, 0, 0, 1277, 1283, 1882, 0,
	1957, 1888, 1939, 1940, 0, 1654, 0, 2217, 2262, 0,
	0, -2, 0, 0, 2266, 0, 0, 0, -2, 0,
	0, 0, 2523, 2525, 0, 2579, 2514, 2364, 0, 0,
	0, 2368, 2352, 2353, 0, 2474, 2540, 2569, 2573, 0,
	2202, 2203, 2204, 2205, 2206, 2207, 2208, 0, 2621, 2658,
	2662, 2447, 2448, 2452, 2635, 0, 0, 0, 2377, 0,
	0, 0, 0, 0, 0, 0, 0, 2183, 2187, 0,
	0, 2541, 2552, 2554, 2304, 2305, 2309, 2310, 2311, 2312,
	2313, 2314, 2315, 2316, 2317, 2318, -2, -2, -2, 2322,
	2323, 2324, -2, -2, -2, 2329, 0, 0, 0, 2555,
	2557, 2558, 2562, 2563, 0, 2430, 2431, 2432, 2564, 0,
	1921, 1915, 2020, 1976, 0, 2081, 1980, 0, 1976, 1976,
	1928, 2035, 0, 0, 2063, 0, 1999, 0, 2000, 0,
	0, 2040, 0, 2007, 2044, 0, 2023, 2025, 2010, 2011,
	2029, 0, 2013, 0, 2016, 2364, -2, 403, 405, 407,
	0, 410, 411, 0, 0, 0, 0, 416, 0, 0,
	0, 0, 0, 806, 1705, 1705, 0, 0, 0, 808,
	0, 792, 0, 0, 2091, 0, 0, 2167, 2171, 2195,
	821, 823, 0, 0, 0, 0, 3086, 3021, 0, 0,
	820, 551, 494, 495, 685, 694, 288, 0, 2048, 0,
	0, 0, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 258, 0, 1471, 0, 1434, 0, 0, 1461, 0,
	0, 1477, 218, 219, 220, 0, 0, 0, 0, 230,
	0, 0, 226, 0, 236, 242, 241, 0, 1421, 0,
	0, 0, 0, 1666, 0, 0, 0, 190, 191, 192,
	0, 197, 0, 198, 0, 0, 0, 0, 0, 0,
	0, 0, 515, 0, 0, 0, 0, 138, 0, 0,
	0, 143, 144, 0, 0, 1805, 1806, 0, 1793, 187,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	1651, 282, 0, 0, 0, 0, 0, 316, 317, 318,
	319, 0, 304, 306, 0, 0, 0, 0, 326, 0,
	399, 394, 396, 1554, 1615, 1616, 1563, 1679, 1683, 1691,
	0, 0, 0, 0, 0, 840, 1718, 0, 300, 298,
	0, 301, 300, 294, 0, 0, 0, 0, 0, 0,
	0, 571, 1362, 1478, 0, 0, 1480, 1398, 1402, 0,
	2680, 2680, 0, 2632, 0, 1360, 0, 0, 1479, 621,
	0, 628, 0, 643, 2631, 0, 0, 0, 1531, 0,
	0, 1558, 1510, 1584, 1510, 0, 1627, 1629, 0, 1637,
	0, 0, 0, 1817, 1823, 0, 1810, 1811, 1953, 1825,
	1844, -2, 0, 0, 1934, 1852, 1849, 1855, 1856, 0,
	0, 382, 0, 1836, 1838, 0, 1333, 1336, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 358, 355,
	345, 2050, 386, 0, 402, 402, 1122, 1716, 1127, 2647,
	1199, 1221, 1258, 1413, 0, 0, 1260, 0, 0, 1956,
	1943, 1944, 1941, 1654, 2264, 2268, 0, 0, 0, 2270,
	-2, 0, 2292, -2, -2, 2526, 2578, 2343, 1934, 2365,
	2367, 2354, 2572, 2212, 0, 2454, 2451, 0, 2438, 0,
	2389, 2390, 0, 0, 2393, 2395, 2396, 2397, 2151, 2144,
	2143, 2551, 0, 0, 0, 0, 2429, 1916, 0, 2443,
	0, 0, 1984, 2443, 2443, 2036, 0, 2038, 1997, 1985,
	0, 1994, 0, 2658, 2022, 0, 2026, 2031, 2015, 0,
	408, 0, 412, 413, 414, 415, 417, 0, 0, 0,
	0, 0, 456, 809, 810, 0, 0, 0, 0, 1704,
	2085, 2090, 0, 2096, 2166, 0, 0, 0, 0, 0,
	0, 0, 0, 831, 289, 0, 1036, 1037, 212, 213,
	1376, 1374, 1670, 1674, 1671, 0, 215, 0, 0, 1435,
	0, 1438, 0, 0, 0, 0, 1445, 1462, 0, 0,
	0, 0, 0, 0, 1464, 0, 1463, 0, 0, 1494,
	0, 1642, 1649, 0, -2, 0, 0, 0, 222, 248,
	0, 0, 0, 0, 251, 1722, 224, 0, 0, 257,
	257, 1373, 0, 0, 1662, 1664, 1677, 0, 0, 0,
	0, 200, 0, 0, 1680, 1684, 1692, 1687, 1689, 1695,
	560, 516, 0, 0, 133, 142, 1796, 0, 0, 0,
	1807, 0, 186, 0, 0, 0, 1697, 270, 271, 0,
	257, 0, 257, 263, 257, 1651, 0, 0, 0, 0,
	0, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 1700, 1701, 291, 0, 0, 293, 392, 300,
	477, 485, 490, 492, 493, 1423, 0, 1490, 1482, 1483,
	1484, 0, 1394, 1489, 1491, 0, 0, 1399, 0, 0,
	0, 0, 1379, 1361, 0, 1392, 1364, 0, 626, 0,
	401, 1350, 1528, 1576, 1510, 0, 1579, 0, 0, 1619,
	0, 0, 0, 0, 0, 0, 0, 1819, 1823, 0,
	1812, 1813, 1846, 1952, 0, 0, 0, 1833, 1953, 0,
	402, 0, 402, 360, 0, 361, 362, 363, 370, 371,
	372, 373, 344, 347, 0, 358, 873, 875, 0, 0,
	881, 1087, 1092, 1412, 0, 0, 0, 0, 1942, 2272,
	-2, -2, 2293, 0, 2659, 2661, 1934, 0, 2440, 1936,
	0, 0, -2, 0, 0, 0, 1917, 1900, 0, 1975,
	1967, 1969, 1971, 3006, 2760, 3159, 1901, 1902, 2062, 0,
	0, 2024, 409, 418, 419, 0, 421, 422, 811, 0,
	0, 0, 0, 2092, 0, 0, 0, 818, 0, 0,
	0, 0, 1026, 0, 0, 1672, 217, 0, 0, 1439,
	1440, 1442, 0, 1444, 1446, 1447, 1364, 0, 1451, 0,
	2682, 0, 1456, 1459, 1460, 0, 0, 1473, 1495, 0,
	1504, 0, 1644, 1654, 1648, 0, 1646, 1506, 0, 221,
	250, 223, 252, 247, 0, 1651, 0, 225, 235, 0,
	0, 163, 0, 0, 2753, 203, 201, 199, 131, 137,
	139, 145, 1659, 189, 0, 165, 0, 272, 281, 1650,
	283, 267, 257, 0, 303, 305, 307, 308, 309, 310,
	0, 1681, 1685, 1693, 0, 1708, 1709, 1710, 1711, 1712,
	0, 0, 0, 302, 0, 0, 0, 484, 1364, 1422,
	1363, 1481, 0, 1492, 1364, 0, 0, 0, 0, 0,
	0, 1366, 0, 1365, 0, 0, 627, 630, 0, 633,
	2083, 640, 0, 0, 0, 1583, 0, 1630, 1628, 0,
	1636, 0, 0, 0, 1792, 0, 0, 1814, 1815, 647,
	1839, 0, 0, 1846, 1857, 381, 0, 384, 357, 0,
	346, 0, 877, 0, 879, 0, 1259, 1261, 0, 0,
	2366, 2458, 0, 0, 2391, 2392, -2, 0, 2332, 2442,
	2444, 0, 0, 0, 0, 0, 1986, 1995, 420, 1705,
	1705, 1705, 2086, 825, 826, 828, 822, 824, 0, 0,
	1668, 0, 1675, 259, 1437, 1441, 0, 1448, 0, 0,
	0, 1452, 1514, 0, 0, 1531, 1531, 1465, 0, 0,
	1498, 1499, 1419, 0, 1500, 1501, 1502, 1643, 1945, 1649,
	1364, 0, 0, 249, 254, 0, 0, 0, 0, 0,
	0, 188, 0, 261, 284, 1651, 0, 0, 1713, 0,
	0, 299, 333, 507, 505, 1366, 0, 1493, 1400, 1403,
	1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1401, 1506,
	0, 0, 1470, 1377, 0, 1380, 0, 1362, 0, 631,
	632, 635, 0, 1577, 0, 1584, 0, 0, 1637, 0,
	0, 1802, 1791, 1823, 1816, 1817, 2083, 0, 1847, 0,
	353, 354, 876, 0, 0, 1269, 1270, 0, 0, 0,
	0, 2453, 1937, 2333, 0, 0, 1970, 1972, 1973, 1974,
	812, 813, 814, 0, 0, 1669, 229, 0, 1508, 1450,
	1519, 0, 0, 0, 0, 0, 1466, 1496, 1497, 1494,
	1418, 0, 1647, 1645, 1475, 1508, 1510, 227, 0, 1506,
	0, 1428, 0, 0, 1431, 0, 0, 204, 2753, 202,
	0, 257, 790, 1705, 257, 0, 336, 0, 540, 506,
	508, 0, 0, 512, 513, 514, 1358, 0, 1486, 1488,
	1504, 1506, 1419, 0, 1381, 1423, 1379, 1578, 1582, 1580,
	1620, 1506, 0, 1504, 0, 1809, 1823, 1803, 1804, 0,
	1819, 0, 0, 402, 878, 880, 2450, 2470, 2459, -2,
	3089, 2761, 0, 2470, 2470, 2445, 2446, 0, 0, 0,
	1364, 0, 1453, 1515, 1516, 0, 1511, 1512, 1513, 2681,
	1454, 1455, 1457, 1458, 2083, 0, 1505, 1514, 253, 1364,
	1425, 0, 0, 1426, 0, 0, 207, 0, 209, 285,
	1703, 1706, 0, 311, 0, 0, 480, 538, 0, 0,
	509, 510, 532, 511, 1355, 1357, 1364, 0, 1419, 1504,
	1364, 0, 0, 0, 1364, 1366, 1504, 0, 1419, 0,
	1798, 1808, 0, 1818, 1792, 0, 1842, 0, 383, 2455,
	0, 0, 2461, 2462, 2463, 2464, 2465, 2456, 2457, 827,
	829, 1443, 1449, 0, 1517, 0, 1518, 0, 0, 0,
	1474, 1503, 1519, 233, 1429, 0, 1432, 0, 205, 0,
	0, 331, 332, 537, 533, 1485, 1487, 1364, 1419, 2083,
	1367, 0, 1369, 1366, 1378, 1419, 0, 1364, 0, 1821,
	1797, 1801, 2640, 1802, 1840, 0, 0, 0, 2467, 2468,
	0, 0, 0, 1520, 0, 1523, 1524, 0, 1521, 1494,
	0, 0, 257, 0, 1921, 2083, 1364, 1658, 1368, 1358,
	1364, 1506, 2083, 1504, 1795, 1823, 1809, 0, 2083, 2466,
	2469, 2460, 1507, 1522, 1525, 1526, 1476, 0, 0, 1707,
	334, 0, 0, 539, 534, 535, 1658, 2083, 1469, 0,
	1656, 1657, 1356, 2083, 1504, 1658, 1419, 1788, 1794, 0,
	0, 1798, 2083, 1843, 1416, 0, 0, 536, 1467, 1658,
	1655, 1658, 1419, 1633, 1364, 1820, 1821, 1841, 1430, 1415,
	0, 335, 1468, 1631, 1364, 2083, 1795, 0, 2083, 1658,
	1789, 0, 1658, 1634, 1416, 1632, 1433,
}

var sqlTok1 = [...]int16{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 650, 3, 656, 651, 3,
	662, 663, 654, 652, 667, 653, 664, 655, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 671, 668,
	642, 644, 643, 647, 666, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 660, 3, 661, 657, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 669, 649, 670, 645,
}

var sqlTok2 = [...]int16{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]uint16{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 582,
	57925, 583, 57926, 584, 57927, 585, 57928, 586, 57929, 587,
	57930, 588, 57931, 589, 57932, 590, 57933, 591, 57934, 592,
	57935, 593, 57936, 594, 57937, 595, 57938, 596, 57939, 597,
	57940, 598, 57941, 599, 57942, 600, 57943, 601, 57944, 602,
	57945, 603, 57946, 604, 57947, 605, 57948, 606, 57949, 607,
	57950, 608, 57951, 609, 57952, 610, 57953, 611, 57954, 612,
	57955, 613, 57956, 614, 57957, 615, 57958, 616, 57959, 617,
	57960, 618, 57961, 619, 57962, 620, 57963, 621, 57964, 622,
	57965, 623, 57966, 624, 57967, 625, 57968, 626, 57969, 627,
	57970, 628, 57971, 629, 57972, 630, 57973, 631, 57974, 632,
	57975, 633, 57976, 634, 57977, 635, 57978, 636, 57979, 637,
	57980, 638, 57981, 639, 57982, 640, 57983, 641, 57984, 646,
	57985, 648, 57986, 658, 57987, 659, 57988, 665, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := int(sqlPact[state])
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && int(sqlChk[int(sqlAct[n])]) == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || int(sqlExca[i+1]) != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := int(sqlExca[i])
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = int(sqlTok1[0])
		goto out
	}
	if char < len(sqlTok1) {
		token = int(sqlTok1[char])
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = int(sqlTok2[char-sqlPrivate])
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = int(sqlTok3[i+0])
		if token == char {
			token = int(sqlTok3[i+1])
			goto out
		}
	}

out:
	if token == 0 {
		token = int(sqlTok2[1]) /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = int(sqlPact[sqlstate])
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = int(sqlAct[sqln])
	if int(sqlChk[sqln]) == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = int(sqlDef[sqlstate])
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && int(sqlExca[xi+1]) == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = int(sqlExca[xi+0])
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = int(sqlExca[xi+1])
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = int(sqlPact[sqlS[sqlp].yys]) + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = int(sqlAct[sqln]) /* simulate a shift of "error" */
					if int(sqlChk[sqlstate]) == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= int(sqlR2[sqln])
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = int(sqlR1[sqln])
	sqlg := int(sqlPgo[sqln])
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = int(sqlAct[sqlg])
	} else {
		sqlstate = int(sqlAct[sqlj])
		if int(sqlChk[sqlstate]) != -sqln {
			sqlstate = int(sqlAct[sqlg])
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1661
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1666
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1670
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 8:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1676
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 12:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1679
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 14:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1680
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 16:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1681
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 18:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1682
		{
			return helpWith(sqllex, "GRANT")
		}
	case 20:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1683
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 22:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1684
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 24:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1685
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 26:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1686
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 28:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1687
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 30:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1688
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 32:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1689
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 36:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1692
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1693
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1694
		{
			return helpWith(sqllex, "FETCH")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1695
		{
			return helpWith(sqllex, "MOVE")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1704
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1705
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1707
		{
			return helpWith(sqllex, "ALTER")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1710
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 55:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1711
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 57:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1712
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 59:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1713
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 61:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1714
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 63:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1715
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 65:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1716
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 67:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1717
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 69:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1718
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 71:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1719
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 73:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1720
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 75:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1721
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 77:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1722
		{
			return helpWith(sqllex, "ALTER FUNCTION")
		}
	case 79:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1723
		{
			return helpWith(sqllex, "ALTER BACKUP SCHEDULE")
		}
	case 90:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1784
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 92:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1810
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 96:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1824
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1844
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 102:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1848
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1852
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1915
		{
			return helpWith(sqllex, "ALTER FUNCTION")
		}
	case 126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1919
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 127:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1923
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1930
		{
			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1941
		{
			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1950
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1957
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1967
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1974
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1984
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1993
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2000
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2009
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2019
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2028
		{
			sqlVAL.union.val = &tree.AlterDatabaseAlterSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2038
		{
			sqlVAL.union.val = &tree.AlterDatabaseSecondaryRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SecondaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2047
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSecondaryRegion{
				DatabaseName: tree.Name(sqlDollar[3].str),
				IfExists:     false,
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2055
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSecondaryRegion{
				DatabaseName: tree.Name(sqlDollar[3].str),
				IfExists:     true,
			}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2064
		{
			s := sqlDollar[7].union.setZoneConfig()
			sqlVAL.union.val = &tree.AlterDatabaseSetZoneConfigExtension{
				DatabaseName:  tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelGlobal,
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: s.SetDefault,
					YAMLConfig: s.YAMLConfig,
					Options:    s.Options,
				},
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2077
		{
			s := sqlDollar[7].union.setZoneConfig()
			sqlVAL.union.val = &tree.AlterDatabaseSetZoneConfigExtension{
				DatabaseName:  tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelTable,
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: s.SetDefault,
					YAMLConfig: s.YAMLConfig,
					Options:    s.Options,
				},
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2090
		{
			s := sqlDollar[9].union.setZoneConfig()
			sqlVAL.union.val = &tree.AlterDatabaseSetZoneConfigExtension{
				DatabaseName:  tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelTable,
				RegionName:    tree.Name(sqlDollar[8].str),
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: s.SetDefault,
					YAMLConfig: s.YAMLConfig,
					Options:    s.Options,
				},
			}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2126
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2160
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 158:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2164
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2168
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2174
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2178
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2184
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2193
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2204
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2208
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2214
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2222
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2232
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2236
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2248
		{
			sqlVAL.union.val = tree.RelocateLease
		}
	case 175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2254
		{
			sqlVAL.union.val = tree.RelocateVoters
		}
	case 176:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2258
		{

			sqlVAL.union.val = tree.RelocateVoters
		}
	case 177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2263
		{
			sqlVAL.union.val = tree.RelocateNonVoters
		}
	case 178:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2269
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    tree.TableIndexName{Table: name},
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2281
		{

			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    sqlDollar[3].union.tableIndexName(),
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2292
		{
			sqlVAL.union.val = &tree.AlterIndexVisible{Index: sqlDollar[3].union.tableIndexName(), NotVisible: sqlDollar[4].union.bool(), IfExists: false}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2296
		{
			sqlVAL.union.val = &tree.AlterIndexVisible{Index: sqlDollar[5].union.tableIndexName(), NotVisible: sqlDollar[6].union.bool(), IfExists: true}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2302
		{
			sqlVAL.union.val = true
		}
	case 183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2306
		{
			sqlVAL.union.val = true
		}
	case 184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2310
		{
			sqlVAL.union.val = false
		}
	case 185:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2326
		{
			var zoneName string
			switch e := sqlDollar[3].union.expr().(type) {
			case *tree.UnresolvedName:
				if e.NumParts != 1 {
					return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
				}
				zoneName = e.Parts[0]
			case tree.DefaultVal:
				zoneName = "default"
			default:
				return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
			}
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(zoneName)}
			sqlVAL.union.val = s
		}
	case 186:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2346
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[8].union.slct(),
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[6].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2355
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[7].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2366
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[10].union.slct(),
				FromStoreID:     sqlDollar[6].union.expr(),
				ToStoreID:       sqlDollar[8].union.expr(),
				SubjectReplicas: sqlDollar[4].union.relocateSubject(),
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2375
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     sqlDollar[7].union.expr(),
				ToStoreID:       sqlDollar[9].union.expr(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2388
		{

			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					YAMLConfig: sqlDollar[4].union.expr(),
				},
			}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2397
		{
			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					Options: sqlDollar[4].union.kvOptions(),
				},
			}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2405
		{

			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: true,
				},
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2414
		{
			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					YAMLConfig: tree.DNull,
				},
			}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2424
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 195:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2432
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 196:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2443
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 197:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2453
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 198:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2463
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 199:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2472
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 200:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2483
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 201:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2489
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 202:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2497
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2501
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2505
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 205:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2509
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 206:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2515
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2520
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2531
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2535
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2541
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2545
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 212:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2552
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2557
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2562
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colTableDef()}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2567
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colTableDef()}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2572
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colTableDef()}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2577
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colTableDef()}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2582
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2587
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2592
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 221:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2597
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2602
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2607
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 224:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2611
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 225:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2616
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2625
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 227:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2637
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2647
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2655
		{
			def := sqlDollar[7].union.constraintDef()
			def.SetName(tree.Name(sqlDollar[6].str))
			def.SetIfNotExists()
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      def,
				ValidationBehavior: sqlDollar[8].union.validationBehavior(),
			}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2665
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2668
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2674
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 233:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2680
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:       sqlDollar[7].union.idxElems(),
				Sharded:       sqlDollar[9].union.shardedIndexDef(),
				StorageParams: sqlDollar[10].union.storageParams(),
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2689
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2696
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2705
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2714
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2719
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2726
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2733
		{
			sqlVAL.union.val = &tree.AlterTableSetStorageParams{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2739
		{
			sqlVAL.union.val = &tree.AlterTableResetStorageParams{
				Params: sqlDollar[3].union.storageParamKeys(),
			}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2746
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2747
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2751
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2755
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2761
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2769
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 248:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2773
		{
			sqlVAL.union.val = nil
		}
	case 249:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2779
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2783
		{
			sqlVAL.union.val = nil
		}
	case 251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2789
		{
			sqlVAL.union.val = true
		}
	case 252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2793
		{
			sqlVAL.union.val = false
		}
	case 253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2799
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 254:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2803
		{
			sqlVAL.union.val = nil
		}
	case 255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2810
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2814
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 257:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2818
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2824
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 259:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2828
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 260:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2853
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2864
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2875
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2884
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2894
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2903
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2912
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2921
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 268:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2925
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2928
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2932
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2939
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2946
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2952
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2959
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2966
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2972
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2980
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2984
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 286:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3005
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3012
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 288:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3016
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3020
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 290:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3024
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 291:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3067
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.backupTargetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3079
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.backupTargetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3089
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.backupTargetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3100
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.backupTargetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3109
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 296:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3113
		{
			sqlVAL.union.val = (*tree.BackupTargetList)(nil)
		}
	case 297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3117
		{
			t := sqlDollar[1].union.backupTargetList()
			sqlVAL.union.val = &t
		}
	case 298:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3125
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 299:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3129
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 300:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3133
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3140
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3144
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3153
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3157
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: tree.MakeDBool(true)}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3161
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: sqlDollar[3].union.expr()}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3165
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: tree.MakeDBool(true)}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3169
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: tree.MakeDBool(true)}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3173
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: tree.MakeDBool(false)}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3177
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3181
		{
			sqlVAL.union.val = &tree.BackupOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3263
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.backupTargetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3274
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 313:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3293
		{
			sqlVAL.union.val = &tree.AlterBackupSchedule{
				ScheduleID: uint64(sqlDollar[4].union.int64()),
				Cmds:       sqlDollar[5].union.alterBackupScheduleCmds(),
			}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3299
		{
			return helpWith(sqllex, "ALTER BACKUP SCHEDULE")
		}
	case 315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3304
		{
			sqlVAL.union.val = tree.AlterBackupScheduleCmds{sqlDollar[1].union.alterBackupScheduleCmd()}
		}
	case 316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3308
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupScheduleCmds(), sqlDollar[3].union.alterBackupScheduleCmd())
		}
	case 317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3315
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetLabel{
				Label: sqlDollar[3].union.expr(),
			}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3321
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetInto{
				Into: sqlDollar[3].union.stringOrPlaceholderOptList(),
			}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3327
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetWith{
				With: sqlDollar[3].union.backupOptions(),
			}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3333
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetRecurring{
				Recurrence: sqlDollar[2].union.expr(),
			}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3339
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetFullBackup{
				FullBackup: tree.FullBackupClause{AlwaysFull: true},
			}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3345
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetFullBackup{
				FullBackup: tree.FullBackupClause{Recurrence: sqlDollar[4].union.expr()},
			}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3351
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetScheduleOption{
				Option: sqlDollar[4].union.kvOption(),
			}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3360
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3364
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3374
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3380
		{
			sqlVAL.union.val = &tree.LabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3384
		{
			sqlVAL.union.val = &tree.LabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3390
		{
			sqlVAL.union.val = sqlDollar[1].union.labelSpec()
		}
	case 330:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3394
		{
			sqlVAL.union.val = &tree.LabelSpec{IfNotExists: false}
		}
	case 331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3403
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3407
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3411
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 334:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3417
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 335:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3421
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 336:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3425
		{
			sqlVAL.union.val = nil
		}
	case 337:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3442
		{
			sqlVAL.union.val = &tree.CreateExternalConnection{
				ConnectionLabelSpec: *(sqlDollar[4].union.labelSpec()),
				As:                  sqlDollar[6].union.expr(),
			}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3448
		{
			return helpWith(sqllex, "CREATE EXTERNAL CONNECTION")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3459
		{
			sqlVAL.union.val = &tree.DropExternalConnection{
				ConnectionLabel: sqlDollar[4].union.expr(),
			}
		}
	case 340:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3464
		{
			return helpWith(sqllex, "DROP EXTERNAL CONNECTION")
		}
	case 341:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3499
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 342:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3508
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3518
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.backupTargetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3527
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.backupTargetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3537
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.SystemUsers,
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3546
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.SystemUsers,
				Subdir:             sqlDollar[5].union.expr(),
				From:               sqlDollar[7].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[8].union.asOfClause(),
				Options:            *(sqlDollar[9].union.restoreOptions()),
			}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3556
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets:  sqlDollar[2].union.backupTargetList(),
				From:     sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsTenant: sqlDollar[8].union.asTenantClause(),
			}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3563
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3567
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3571
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3577
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3581
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3588
		{
			tenID := uint64(sqlDollar[3].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TenantID{Specified: true, ID: tenID}
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3596
		{
			if sqlDollar[3].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.TenantID{Specified: true}
		}
	case 355:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3603
		{
			sqlVAL.union.val = tree.TenantID{Specified: false}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3610
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 357:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3614
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 358:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3618
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3625
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3629
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3638
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3642
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3646
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3650
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3654
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3658
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3662
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3666
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3670
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3674
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3678
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3682
		{
			sqlVAL.union.val = &tree.RestoreOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3686
		{
			sqlVAL.union.val = &tree.RestoreOptions{AsTenant: sqlDollar[3].union.expr()}
		}
	case 374:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3690
		{
			sqlVAL.union.val = &tree.RestoreOptions{SchemaOnly: true}
		}
	case 375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3694
		{
			sqlVAL.union.val = &tree.RestoreOptions{VerifyData: true}
		}
	case 376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3699
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3705
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3709
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "alter aggregate")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3736
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 380:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3741
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 381:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3745
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 382:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3751
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 383:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3756
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 384:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3761
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 385:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3765
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3782
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 387:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3785
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3789
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3793
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3801
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3805
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3811
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 393:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3815
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3821
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3825
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3829
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3833
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3839
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3843
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3849
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 401:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3853
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 402:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3857
		{
			sqlVAL.union.val = nil
		}
	case 403:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3869
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 404:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3883
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3889
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 406:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3893
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3899
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3903
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3911
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3915
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3919
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3923
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3927
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3931
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "oids")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3935
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "freeze")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3939
		{
			sqlVAL.union.val = &tree.CopyOptions{Header: true}
		}
	case 417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3943
		{
			sqlVAL.union.val = &tree.CopyOptions{Quote: tree.NewStrVal(sqlDollar[2].str)}
		}
	case 418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3947
		{
			sqlVAL.union.val = &tree.CopyOptions{Escape: tree.NewStrVal(sqlDollar[2].str)}
		}
	case 419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3951
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force quote")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3955
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force not null")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3959
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force null")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3963
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "encoding")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3971
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3972
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3973
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3974
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3975
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3985
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3993
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3995
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3999
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4002
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4012
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 438:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4021
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4029
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4031
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 441:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4035
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4038
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4048
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 444:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4057
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4065
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4067
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 447:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4071
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4074
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 449:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4082
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4085
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 451:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4089
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4093
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: sqlDollar[4].union.objectNamePrefix(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 453:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4097
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4101
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4114
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 456:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4119
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4122
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "comment on extension")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4123
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "comment on function")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4127
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4132
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4144
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4146
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4147
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4149
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4150
		{
			return helpWith(sqllex, "CREATE EXTERNAL CONNECTION")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4151
		{
		}
	case 474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4152
		{
			return helpWith(sqllex, "CREATE")
		}
	case 475:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4159
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 476:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4162
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4166
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension if not exists with")
		}
	case 478:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4169
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension with")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4172
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 480:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:4190
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToFunctionName()
			sqlVAL.union.val = &tree.CreateFunction{
				IsProcedure: false,
				Replace:     sqlDollar[2].union.bool(),
				FuncName:    name,
				Args:        sqlDollar[6].union.functionArgs(),
				ReturnType: tree.FuncReturnType{
					Type:  sqlDollar[10].union.typeReference(),
					IsSet: sqlDollar[9].union.bool(),
				},
				Options:     sqlDollar[11].union.functionOptions(),
				RoutineBody: sqlDollar[12].union.routineBody(),
			}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4205
		{
			return helpWith(sqllex, "CREATE FUNCTION")
		}
	case 482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4208
		{
			sqlVAL.union.val = true
		}
	case 483:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4209
		{
			sqlVAL.union.val = false
		}
	case 484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4212
		{
			sqlVAL.union.val = true
		}
	case 485:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4213
		{
			sqlVAL.union.val = false
		}
	case 487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4219
		{
			sqlVAL.union.val = sqlDollar[1].union.functionArgs()
		}
	case 488:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4220
		{
			sqlVAL.union.val = tree.FuncArgs{}
		}
	case 489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4223
		{
			sqlVAL.union.val = tree.FuncArgs{sqlDollar[1].union.functionArg()}
		}
	case 490:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4225
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionArgs(), sqlDollar[3].union.functionArg())
		}
	case 492:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4232
		{
			arg := sqlDollar[1].union.functionArg()
			arg.DefaultVal = sqlDollar[3].union.expr()
			sqlVAL.union.val = arg
		}
	case 493:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4238
		{
			arg := sqlDollar[1].union.functionArg()
			arg.DefaultVal = sqlDollar[3].union.expr()
			sqlVAL.union.val = arg
		}
	case 494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4246
		{
			sqlVAL.union.val = tree.FuncArg{
				Name:  tree.Name(sqlDollar[2].str),
				Type:  sqlDollar[3].union.typeReference(),
				Class: sqlDollar[1].union.functionArgClass(),
			}
		}
	case 495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4254
		{
			sqlVAL.union.val = tree.FuncArg{
				Name:  tree.Name(sqlDollar[1].str),
				Type:  sqlDollar[3].union.typeReference(),
				Class: sqlDollar[2].union.functionArgClass(),
			}
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4262
		{
			sqlVAL.union.val = tree.FuncArg{
				Name:  tree.Name(sqlDollar[1].str),
				Type:  sqlDollar[2].union.typeReference(),
				Class: tree.FunctionArgIn,
			}
		}
	case 497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4270
		{
			sqlVAL.union.val = tree.FuncArg{
				Type:  sqlDollar[2].union.typeReference(),
				Class: sqlDollar[1].union.functionArgClass(),
			}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4277
		{
			sqlVAL.union.val = tree.FuncArg{
				Type:  sqlDollar[1].union.typeReference(),
				Class: tree.FunctionArgIn,
			}
		}
	case 499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4285
		{
			sqlVAL.union.val = tree.FunctionArgIn
		}
	case 500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4286
		{
			return unimplemented(sqllex, "create function with 'OUT' argument class")
		}
	case 501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4287
		{
			return unimplemented(sqllex, "create function with 'INOUT' argument class")
		}
	case 502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4288
		{
			return unimplemented(sqllex, "create function with 'IN OUT' argument class")
		}
	case 503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4289
		{
			return unimplementedWithIssueDetail(sqllex, 88947, "variadic user-defined functions")
		}
	case 506:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4298
		{
			sqlVAL.union.val = sqlDollar[1].union.functionOptions()
		}
	case 507:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4299
		{
			sqlVAL.union.val = tree.FunctionOptions{}
		}
	case 508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4302
		{
			sqlVAL.union.val = tree.FunctionOptions{sqlDollar[1].union.functionOption()}
		}
	case 509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4304
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionOptions(), sqlDollar[2].union.functionOption())
		}
	case 510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4310
		{
			sqlVAL.union.val = tree.FunctionBodyStr(sqlDollar[2].str)
		}
	case 511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4314
		{
			lang, err := tree.AsFunctionLanguage(sqlDollar[2].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = lang
		}
	case 512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4321
		{
			return unimplemented(sqllex, "create transform function")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4322
		{
			return unimplemented(sqllex, "create window function")
		}
	case 514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4324
		{
			sqlVAL.union.val = sqlDollar[1].union.functionOption()
		}
	case 515:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4330
		{
			sqlVAL.union.val = tree.FunctionCalledOnNullInput
		}
	case 516:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4334
		{
			sqlVAL.union.val = tree.FunctionReturnsNullOnNullInput
		}
	case 517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4338
		{
			sqlVAL.union.val = tree.FunctionStrict
		}
	case 518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4342
		{
			sqlVAL.union.val = tree.FunctionImmutable
		}
	case 519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4346
		{
			sqlVAL.union.val = tree.FunctionStable
		}
	case 520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4350
		{
			sqlVAL.union.val = tree.FunctionVolatile
		}
	case 521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4354
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4358
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4362
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4366
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4370
		{
			sqlVAL.union.val = tree.FunctionLeakproof(true)
		}
	case 526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4374
		{
			sqlVAL.union.val = tree.FunctionLeakproof(false)
		}
	case 527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4378
		{
			return unimplemented(sqllex, "create function...cost")
		}
	case 528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4382
		{
			return unimplemented(sqllex, "create function...rows")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4386
		{
			return unimplemented(sqllex, "create function...support")
		}
	case 530:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4393
		{
			return unimplemented(sqllex, "create function...set")
		}
	case 531:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4394
		{
			return unimplemented(sqllex, "create function...parallel")
		}
	case 533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4401
		{
			sqlVAL.union.val = &tree.RoutineReturn{
				ReturnVal: sqlDollar[2].union.expr(),
			}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4413
		{
			sqlVAL.union.val = append(sqlDollar[1].union.stmts(), sqlDollar[2].union.stmt())
		}
	case 537:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4417
		{
			sqlVAL.union.val = tree.Statements{}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4423
		{
			sqlVAL.union.val = &tree.RoutineBody{
				Stmts: tree.Statements{sqlDollar[1].union.stmt()},
			}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4429
		{
			sqlVAL.union.val = &tree.RoutineBody{
				Stmts: sqlDollar[3].union.stmts(),
			}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4435
		{
			sqlVAL.union.val = (*tree.RoutineBody)(nil)
		}
	case 541:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4447
		{
			sqlVAL.union.val = &tree.DropFunction{
				Functions:    sqlDollar[3].union.functionObjs(),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4454
		{
			sqlVAL.union.val = &tree.DropFunction{
				IfExists:     true,
				Functions:    sqlDollar[5].union.functionObjs(),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4461
		{
			return helpWith(sqllex, "DROP FUNCTION")
		}
	case 544:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4465
		{
			sqlVAL.union.val = tree.FuncObjs{sqlDollar[1].union.functionObj()}
		}
	case 545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4469
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionObjs(), sqlDollar[3].union.functionObj())
		}
	case 546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4475
		{
			sqlVAL.union.val = tree.FuncObj{
				FuncName: sqlDollar[1].union.unresolvedObjectName().ToFunctionName(),
				Args:     sqlDollar[2].union.functionArgs(),
			}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4482
		{
			sqlVAL.union.val = tree.FuncObj{
				FuncName: sqlDollar[1].union.unresolvedObjectName().ToFunctionName(),
			}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4490
		{
			sqlVAL.union.val = sqlDollar[2].union.functionArgs()
		}
	case 549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4494
		{
			sqlVAL.union.val = tree.FuncArgs{}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4500
		{
			sqlVAL.union.val = tree.FuncArgs{sqlDollar[1].union.functionArg()}
		}
	case 551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4504
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionArgs(), sqlDollar[3].union.functionArg())
		}
	case 552:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4510
		{
			sqlVAL.union.val = &tree.AlterFunctionOptions{
				Function: sqlDollar[3].union.functionObj(),
				Options:  sqlDollar[4].union.functionOptions(),
			}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4519
		{
			sqlVAL.union.val = tree.FunctionOptions{sqlDollar[1].union.functionOption()}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4523
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionOptions(), sqlDollar[2].union.functionOption())
		}
	case 555:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4528
		{
		}
	case 556:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4529
		{
		}
	case 557:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4533
		{
			sqlVAL.union.val = &tree.AlterFunctionRename{
				Function: sqlDollar[3].union.functionObj(),
				NewName:  tree.Name(sqlDollar[6].str),
			}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4542
		{
			sqlVAL.union.val = &tree.AlterFunctionSetSchema{
				Function:      sqlDollar[3].union.functionObj(),
				NewSchemaName: tree.Name(sqlDollar[6].str),
			}
		}
	case 559:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4551
		{
			sqlVAL.union.val = &tree.AlterFunctionSetOwner{
				Function: sqlDollar[3].union.functionObj(),
				NewOwner: sqlDollar[6].union.roleSpec(),
			}
		}
	case 560:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4560
		{
			sqlVAL.union.val = &tree.AlterFunctionDepExtension{
				Function:  sqlDollar[3].union.functionObj(),
				Remove:    sqlDollar[4].union.bool(),
				Extension: tree.Name(sqlDollar[8].str),
			}
		}
	case 561:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4570
		{
			sqlVAL.union.val = true
		}
	case 562:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4574
		{
			sqlVAL.union.val = false
		}
	case 563:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4579
		{
			return unimplemented(sqllex, "create access method")
		}
	case 564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4580
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "create aggregate")
		}
	case 565:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4581
		{
			return unimplemented(sqllex, "create cast")
		}
	case 566:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4582
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4583
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 568:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4584
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 569:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4585
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 570:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4586
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4587
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4588
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4589
		{
			return unimplemented(sqllex, "create publication")
		}
	case 574:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4590
		{
			return unimplemented(sqllex, "create rule")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4591
		{
			return unimplemented(sqllex, "create server")
		}
	case 576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4592
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4593
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4594
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4595
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4598
		{
		}
	case 581:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4599
		{
		}
	case 582:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4602
		{
		}
	case 583:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4603
		{
		}
	case 584:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4606
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 585:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4607
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "drop aggregate")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4608
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4609
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4610
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4611
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4612
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension if exists")
		}
	case 591:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4613
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension")
		}
	case 592:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4614
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 593:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4615
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 594:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4616
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4617
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4618
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4619
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4620
		{
			return unimplemented(sqllex, "drop server")
		}
	case 599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4621
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4622
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4623
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4626
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 605:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4627
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4628
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4629
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4630
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 612:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4632
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4633
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4634
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4635
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4636
		{
			return helpWith(sqllex, "CREATE FUNCTION")
		}
	case 621:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4646
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4654
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4658
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 624:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4662
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4668
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4672
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 627:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4681
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4688
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4694
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4700
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4704
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 632:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4715
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4727
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 634:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4742
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4751
		{
			target, err := tree.ChangefeedTargetFromTableExpr(sqlDollar[9].union.tblExpr())
			if err != nil {
				return setErr(sqllex, err)
			}

			sqlVAL.union.val = &tree.CreateChangefeed{
				SinkURI: sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
				Targets: tree.ChangefeedTargets{target},
				Select: &tree.SelectClause{
					Exprs: sqlDollar[7].union.selExprs(),
					From:  tree.From{Tables: tree.TableExprs{sqlDollar[9].union.tblExpr()}},
					Where: tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
				},
			}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4769
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4779
		{
			sqlVAL.union.val = tree.ChangefeedTargets{sqlDollar[1].union.changefeedTarget()}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4783
		{
			sqlVAL.union.val = append(sqlDollar[1].union.changefeedTargets(), sqlDollar[3].union.changefeedTarget())
		}
	case 639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4789
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName:  sqlDollar[2].union.unresolvedObjectName().ToUnresolvedName(),
				FamilyName: tree.Name(sqlDollar[3].str),
			}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4800
		{
		}
	case 642:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4802
		{
		}
	case 643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4806
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 644:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4810
		{
			sqlVAL.str = ""
		}
	case 645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4816
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 646:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4820
		{

			sqlVAL.union.val = nil
		}
	case 647:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4834
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4844
		{
			return helpWith(sqllex, "DELETE")
		}
	case 649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4847
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 650:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4848
		{
		}
	case 651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4856
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4859
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4861
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeSequences}
		}
	case 654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4865
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeTemp}
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4869
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeTemp}
		}
	case 656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4872
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4881
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4882
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4883
		{
			return helpWith(sqllex, "DROP EXTERNAL CONNECTION")
		}
	case 664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4884
		{
		}
	case 665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4885
		{
			return helpWith(sqllex, "DROP")
		}
	case 667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4888
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4889
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4890
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4891
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4892
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4893
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4894
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4895
		{
			return helpWith(sqllex, "DROP FUNCTION")
		}
	case 682:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4903
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4907
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 684:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4911
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 685:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4920
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4928
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 687:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4936
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 688:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4940
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4943
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 690:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4951
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 691:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4955
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4958
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 693:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4966
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 694:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4975
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4983
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 696:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4991
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 697:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4999
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5006
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5013
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 700:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5021
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5028
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5032
		{
			sqlVAL.union.val = tree.GrantTargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 703:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5038
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5042
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 705:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5051
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 706:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5059
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5066
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5074
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 709:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5078
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 710:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5081
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5085
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5090
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5112
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5117
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5119
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5124
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5128
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5151
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5158
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 723:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5160
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5168
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 725:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5176
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 726:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5184
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 727:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5192
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5203
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5211
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 737:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5214
		{
			return helpWith(sqllex, "DELETE")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5216
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5217
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5218
		{
			return helpWith(sqllex, "INSERT")
		}
	case 748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5221
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5223
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 753:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5226
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5231
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5232
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5233
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5238
		{
			return helpWith(sqllex, "DELETE")
		}
	case 765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5239
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5240
		{
			return helpWith(sqllex, "INSERT")
		}
	case 768:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5242
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5246
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5247
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 774:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5251
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5255
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 776:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5265
		{
			sqlVAL.union.val = &tree.AlterChangefeed{
				Jobs: sqlDollar[3].union.expr(),
				Cmds: sqlDollar[4].union.alterChangefeedCmds(),
			}
		}
	case 777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5271
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5275
		{
			sqlVAL.union.val = tree.AlterChangefeedCmds{sqlDollar[1].union.alterChangefeedCmd()}
		}
	case 779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5279
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterChangefeedCmds(), sqlDollar[2].union.alterChangefeedCmd())
		}
	case 780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5286
		{
			sqlVAL.union.val = &tree.AlterChangefeedAddTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
				Options: sqlDollar[3].union.kvOptions(),
			}
		}
	case 781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5294
		{
			sqlVAL.union.val = &tree.AlterChangefeedDropTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
			}
		}
	case 782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5300
		{
			sqlVAL.union.val = &tree.AlterChangefeedSetOptions{
				Options: sqlDollar[2].union.kvOptions(),
			}
		}
	case 783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5306
		{
			sqlVAL.union.val = &tree.AlterChangefeedUnsetOptions{
				Options: sqlDollar[2].union.nameList(),
			}
		}
	case 784:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5325
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Backup: sqlDollar[3].union.expr(),
				Cmds:   sqlDollar[4].union.alterBackupCmds(),
			}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5332
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Subdir: sqlDollar[3].union.expr(),
				Backup: sqlDollar[5].union.expr(),
				Cmds:   sqlDollar[6].union.alterBackupCmds(),
			}
		}
	case 786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5339
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5343
		{
			sqlVAL.union.val = tree.AlterBackupCmds{sqlDollar[1].union.alterBackupCmd()}
		}
	case 788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5347
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupCmds(), sqlDollar[2].union.alterBackupCmd())
		}
	case 789:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5353
		{
			sqlVAL.union.val = &tree.AlterBackupKMS{
				KMSInfo: sqlDollar[2].union.backupKMS(),
			}
		}
	case 790:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5361
		{
			sqlVAL.union.val = tree.BackupKMS{
				NewKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList(),
				OldKMSURI: sqlDollar[7].union.stringOrPlaceholderOptList(),
			}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5374
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 792:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5382
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5390
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5394
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 795:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5398
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5408
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5415
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5423
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5427
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 800:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5431
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 801:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5441
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5445
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5449
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5453
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5456
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 806:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5480
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.grantTargetList(), WithGrantOption: sqlDollar[7].union.bool()}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5484
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5488
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5492
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.grantTargetList(), Grantees: sqlDollar[7].union.roleSpecList(), WithGrantOption: sqlDollar[8].union.bool()}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5496
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:        sqlDollar[7].union.roleSpecList(),
				WithGrantOption: sqlDollar[8].union.bool(),
			}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5507
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 812:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5511
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllSequencesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5523
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5535
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllFunctionsInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5547
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[3].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees:        sqlDollar[5].union.roleSpecList(),
				WithGrantOption: sqlDollar[6].union.bool(),
			}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5557
		{
			return helpWith(sqllex, "GRANT")
		}
	case 817:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5581
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.grantTargetList(), GrantOptionFor: false}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5585
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Grantees: sqlDollar[9].union.roleSpecList(), Targets: sqlDollar[7].union.grantTargetList(), GrantOptionFor: true}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5589
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5593
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5597
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.grantTargetList(), Grantees: sqlDollar[7].union.roleSpecList(), GrantOptionFor: false}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5601
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Targets: sqlDollar[8].union.grantTargetList(), Grantees: sqlDollar[10].union.roleSpecList(), GrantOptionFor: true}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5605
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[7].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5616
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[8].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5627
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5639
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllSequencesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5651
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[11].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5663
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllFunctionsInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5675
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[11].union.objectNamePrefixList(),
					AllFunctionsInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5687
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[3].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees: sqlDollar[5].union.roleSpecList(),
			}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5697
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[6].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees:       sqlDollar[8].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5708
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 833:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5711
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5717
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5721
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 836:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5731
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5735
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 843:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5749
		{
			return helpWith(sqllex, "RESET")
		}
	case 845:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5750
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 846:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5758
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5762
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5766
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true, Reset: true}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5769
		{
			return helpWith(sqllex, "RESET")
		}
	case 850:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5777
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5780
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 852:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5791
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5794
		{
			return helpWith(sqllex, "USE")
		}
	case 855:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5798
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 856:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5799
		{
		}
	case 857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5800
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5804
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5805
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5806
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 865:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5807
		{
			return helpWith(sqllex, "USE")
		}
	case 868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5823
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 869:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5838
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5841
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 871:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5859
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5867
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5871
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 874:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5875
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5881
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5885
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 877:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5891
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5895
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5899
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5903
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5907
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5918
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5921
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 884:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5931
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantID:          sqlDollar[3].union.expr(),
			}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5939
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantAll:         true,
			}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5946
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 887:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5947
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 892:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5961
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5977
		{

			sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[4].union.exprs()}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5983
		{

			sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[5].union.exprs()}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5989
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5992
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 897:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5994
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 898:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5997
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 899:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6000
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6014
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6019
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6036
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6039
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 904:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6041
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6044
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6048
		{
			sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6060
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6064
		{
			return unimplemented(sqllex, "set from current")
		}
	case 910:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6068
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6073
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6082
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6087
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6091
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 917:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6103
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6108
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6115
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6119
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 921:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6125
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6129
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6136
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 927:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6157
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6161
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 929:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6167
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 930:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6171
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 931:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6175
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 932:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6179
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 933:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6183
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6189
		{
			sqlVAL.union.val = tree.Low
		}
	case 935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6193
		{
			sqlVAL.union.val = tree.Normal
		}
	case 936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6197
		{
			sqlVAL.union.val = tree.High
		}
	case 937:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6208
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6212
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 939:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6216
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 941:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6221
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6225
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 944:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6242
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 946:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6243
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 948:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6244
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 950:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6245
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 952:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6246
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 954:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6247
		{
			return helpWith(sqllex, "SHOW CREATE EXTERNAL CONNECTIONS")
		}
	case 956:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6248
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 958:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6249
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 960:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6250
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 962:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6251
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 965:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6253
		{
			return helpWith(sqllex, "SHOW FUNCTIONS")
		}
	case 967:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6254
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 969:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6255
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 971:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6256
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 973:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6257
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 975:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6258
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 978:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6260
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 980:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6261
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6262
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 985:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6264
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 988:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6266
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 990:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6267
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 992:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6268
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 994:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6269
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 996:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6270
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 998:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6271
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6272
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6273
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6274
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6275
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6276
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6277
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6278
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6279
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6280
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6281
		{
			return helpWith(sqllex, "SHOW")
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6284
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6293
		{
			sqlVAL.union.val = &tree.CloseCursor{
				All: true,
			}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6299
		{
			sqlVAL.union.val = &tree.CloseCursor{
				Name: tree.Name(sqlDollar[2].str),
			}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6304
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6314
		{
			sqlVAL.union.val = &tree.DeclareCursor{
				Binary:      sqlDollar[3].union.bool(),
				Name:        tree.Name(sqlDollar[2].str),
				Sensitivity: sqlDollar[4].union.cursorSensitivity(),
				Scroll:      sqlDollar[5].union.cursorScrollOption(),
				Hold:        sqlDollar[7].union.bool(),
				Select:      sqlDollar[9].union.slct(),
			}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6324
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6328
		{
			sqlVAL.union.val = true
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6332
		{
			sqlVAL.union.val = false
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6338
		{
			sqlVAL.union.val = tree.Insensitive
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6342
		{
			sqlVAL.union.val = tree.Asensitive
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6346
		{
			sqlVAL.union.val = tree.UnspecifiedSensitivity
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6352
		{
			sqlVAL.union.val = tree.Scroll
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6356
		{
			sqlVAL.union.val = tree.NoScroll
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6360
		{
			sqlVAL.union.val = tree.UnspecifiedScroll
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6366
		{
			sqlVAL.union.val = true
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6370
		{
			sqlVAL.union.val = false
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6374
		{
			sqlVAL.union.val = false
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6384
		{
			sqlVAL.union.val = &tree.FetchCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6389
		{
			return helpWith(sqllex, "FETCH")
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6397
		{
			sqlVAL.union.val = &tree.MoveCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6402
		{
			return helpWith(sqllex, "MOVE")
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6406
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[1].str),
				Count: 1,
			}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6413
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[2].str),
				Count: 1,
			}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6420
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6427
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6434
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[4].str),
				Count: sqlDollar[2].union.int64() * sqlDollar[1].union.int64(),
			}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6441
		{
			fetchType := tree.FetchAll
			count := sqlDollar[1].union.int64()
			if count < 0 {
				fetchType = tree.FetchBackwardAll
			}
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: fetchType,
			}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6453
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchAbsolute,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6461
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchRelative,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6469
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchFirst,
			}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6476
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchLast,
			}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6484
		{
			sqlVAL.union.val = int64(1)
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6485
		{
			sqlVAL.union.val = int64(-1)
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6488
		{
			sqlVAL.union.val = sqlDollar[1].union.int64()
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6489
		{
			sqlVAL.union.val = int64(1)
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6492
		{
			sqlVAL.union.val = int64(1)
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6493
		{
			sqlVAL.union.val = int64(-1)
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6496
		{
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6497
		{
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6500
		{
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6501
		{
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6505
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6510
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6515
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6520
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6525
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6535
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6536
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6537
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6542
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6552
		{
			sqlVAL.str = "client_encoding"
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6557
		{
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6559
		{

			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6564
		{
			sqlVAL.str = "timezone"
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6565
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6569
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6573
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6593
		{
			sqlVAL.union.val = &tree.ShowTableStats{
				Table:   sqlDollar[5].union.unresolvedObjectName(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6600
		{

			sqlVAL.union.val = &tree.ShowTableStats{
				Table:     sqlDollar[7].union.unresolvedObjectName(),
				UsingJSON: true,
				Options:   sqlDollar[8].union.kvOptions(),
			}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6608
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6621
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6629
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6637
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.stringOrPlaceholderOptList(),
			}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6643
		{
			sqlVAL.union.val = &tree.ShowBackup{
				From:         true,
				Details:      sqlDollar[3].union.showBackupDetails(),
				Path:         sqlDollar[5].union.expr(),
				InCollection: sqlDollar[7].union.stringOrPlaceholderOptList(),
				Options:      sqlDollar[8].union.kvOptions(),
			}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6653
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.stringOrPlaceholderOptList(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6662
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6670
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupSchemaDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6678
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6686
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6694
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupValidateDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6702
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupConnectionTest,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6709
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6713
		{
			sqlVAL.union.val = tree.BackupDefaultDetails
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6717
		{
			sqlVAL.union.val = tree.BackupSchemaDetails
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6721
		{
			sqlVAL.union.val = tree.BackupFileDetails
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6725
		{
			sqlVAL.union.val = tree.BackupRangeDetails
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6729
		{
			sqlVAL.union.val = tree.BackupValidateDetails
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6741
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6745
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6748
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6750
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6753
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6755
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6759
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6762
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6766
		{
			sqlVAL.union.val = sqlDollar[1].union.stmt()
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6768
		{
			switch t := sqlDollar[1].union.stmt().(type) {
			case *tree.ShowClusterSetting:
				sqlVAL.union.val = &tree.ShowTenantClusterSetting{
					ShowClusterSetting: t,
					TenantID:           sqlDollar[4].union.expr(),
				}
			case *tree.ShowClusterSettingList:
				sqlVAL.union.val = &tree.ShowTenantClusterSettingList{
					ShowClusterSettingList: t,
					TenantID:               sqlDollar[4].union.expr(),
				}
			}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6782
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6790
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6793
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6801
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6805
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6809
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6813
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6816
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6824
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6827
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6833
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles:  sqlDollar[4].union.roleSpecList(),
				Schema: tree.Name(sqlDollar[5].str),
			}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6839
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
				Schema:      tree.Name(sqlDollar[7].str),
			}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6845
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6852
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6856
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6866
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6875
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6882
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6885
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6898
		{
			lst := sqlDollar[3].union.grantTargetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6907
		{
			sqlVAL.union.val = &tree.ShowGrants{
				Targets:  &tree.GrantTargetList{System: true},
				Grantees: sqlDollar[4].union.roleSpecList(),
			}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6913
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6921
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6924
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6926
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6930
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6934
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6937
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6939
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6943
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6946
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6954
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6957
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6959
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6962
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6970
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6973
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6975
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6978
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6982
		{
			sqlVAL.union.val = true
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6984
		{
			sqlVAL.union.val = true
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6986
		{
			sqlVAL.union.val = false
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7003
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7007
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7011
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7014
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7015
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7016
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7018
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7022
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7026
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7030
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7033
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7035
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7043
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7051
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7059
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7060
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7070
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7076
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7078
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7084
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7086
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7092
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7096
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7100
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7106
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7110
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7114
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7125
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7128
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7130
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7133
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7135
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7139
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7142
		{
			sqlVAL.union.val = true
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7143
		{
			sqlVAL.union.val = false
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7151
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7154
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7156
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7159
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7167
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7177
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7187
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7190
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7197
		{
			sqlVAL.union.val = &tree.ShowFunctions{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			}}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7206
		{
			sqlVAL.union.val = &tree.ShowFunctions{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			}}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7215
		{
			sqlVAL.union.val = &tree.ShowFunctions{}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7218
		{
			return helpWith(sqllex, "SHOW FUNCTIONS")
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7225
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7228
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7230
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7233
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7236
		{
			sqlVAL.union.val = true
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7237
		{
			sqlVAL.union.val = false
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7244
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7248
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7251
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7258
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7262
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7265
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7272
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7276
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7280
		{

			sqlVAL.union.val = &tree.ShowCompletions{
				Statement: tree.NewStrVal(sqlDollar[7].str),
				Offset:    sqlDollar[5].union.numVal(),
			}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7290
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7297
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7301
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7312
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7315
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7323
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7328
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7333
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7337
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7344
		{
			sqlVAL.union.val = &tree.ShowTransferState{TransferKey: tree.NewStrVal(sqlDollar[5].str)}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7348
		{
			sqlVAL.union.val = &tree.ShowTransferState{}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7351
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7363
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7367
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7372
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7377
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7382
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7387
		{

			sqlVAL.union.val = &tree.ShowCreateFunction{
				Name: tree.ResolvableFunctionReference{
					FunctionReference: sqlDollar[4].union.unresolvedObjectName().ToUnresolvedName(),
				},
			}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7396
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7400
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7404
		{
			sqlVAL.union.val = &tree.ShowCreateAllTypes{}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7407
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7417
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7420
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7422
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7425
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7434
		{
			sqlVAL.union.val = &tree.ShowCreateExternalConnections{}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7437
		{
			return helpWith(sqllex, "SHOW CREATE EXTERNAL CONNECTIONS")
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7439
		{
			sqlVAL.union.val = &tree.ShowCreateExternalConnections{ConnectionLabel: sqlDollar[5].union.expr()}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7442
		{
			return helpWith(sqllex, "SHOW CREATE EXTERNAL CONNECTIONS")
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7450
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7453
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7461
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7464
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7474
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7478
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7482
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7490
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7498
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7505
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7511
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7513
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7516
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7518
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7521
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7525
		{
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7534
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7542
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7548
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7557
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7562
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7566
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7569
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7578
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7582
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7598
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7604
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7610
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7616
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7623
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7629
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowSuperRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[6].str),
			}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7635
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7639
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7645
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7652
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7658
		{
			tmp := sqlDollar[2].union.grantTargetList()
			sqlVAL.union.val = &tmp
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7663
		{
			sqlVAL.union.val = (*tree.GrantTargetList)(nil)
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7785
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7789
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7793
		{

			sqlVAL.union.val = tree.GrantTargetList{
				Tables:   tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7832
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7836
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: true, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7840
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7845
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7849
		{
			sqlVAL.union.val = tree.GrantTargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7853
		{
			sqlVAL.union.val = tree.GrantTargetList{ExternalConnections: sqlDollar[3].union.nameList()}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7857
		{
			sqlVAL.union.val = tree.GrantTargetList{Functions: sqlDollar[2].union.functionObjs()}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7867
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7871
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7875
		{
			sqlVAL.union.val = tree.BackupTargetList{
				Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}},
			}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7881
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7885
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7890
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7896
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.BackupTargetList{TenantID: tree.TenantID{Specified: true, ID: tenID}}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7904
		{

			if sqlDollar[2].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.BackupTargetList{TenantID: tree.TenantID{Specified: true}}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7913
		{
			sqlVAL.union.val = tree.BackupTargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7922
		{
			sqlVAL.union.val = tree.GrantTargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7926
		{
			sqlVAL.union.val = tree.GrantTargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7930
		{
			sqlVAL.union.val = tree.GrantTargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7934
		{
			sqlVAL.union.val = tree.GrantTargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7942
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7946
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7955
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7956
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7957
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7958
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7964
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7965
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7966
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7967
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7975
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7978
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7988
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7997
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8006
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8008
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8012
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8016
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8019
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8024
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8028
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8043
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8051
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8053
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8059
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8067
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8070
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8079
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8085
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8092
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8099
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8106
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8117
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8126
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8134
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:8170
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[9].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				OnCommit:         sqlDollar[11].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[12].union.locality(),
			}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:8185
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[12].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[13].union.storageParams(),
				OnCommit:         sqlDollar[14].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[15].union.locality(),
			}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8202
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8206
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8213
		{

			sqlVAL.union.val = nil
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8219
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8225
		{
			sqlVAL.str = ""
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8229
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8235
		{
			sqlVAL.union.val = nil
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8239
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8244
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8248
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8252
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8256
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8266
		{
			sqlVAL.union.val = []tree.Name{tree.Name(sqlDollar[1].str)}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8270
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParamKeys(), tree.Name(sqlDollar[3].str))
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8276
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8282
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8286
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8292
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:8305
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8319
		{
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8320
		{
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8321
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8339
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8340
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8341
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8345
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8346
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8347
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8348
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8349
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8354
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8360
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8364
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8370
		{
			sqlVAL.union.val = sqlDollar[1].union.colTableDef()
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8376
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8389
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8398
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8402
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8408
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8413
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8414
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8415
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8416
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8417
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8418
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8419
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8420
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8421
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8426
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8433
		{
			sqlVAL.str = ""
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8440
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8446
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8454
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8460
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8466
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8472
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8482
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8488
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8494
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8501
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8508
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8514
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8518
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8524
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8534
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8538
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8544
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8558
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8569
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8573
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8579
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8583
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8587
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8591
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8595
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8599
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8603
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8621
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8625
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8629
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8633
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8639
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8645
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:       true,
				ShardBuckets:  sqlDollar[5].union.expr(),
				StorageParams: sqlDollar[6].union.storageParams(),
			}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8653
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8657
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8661
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8665
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8675
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8679
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8683
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8688
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8694
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8700
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8704
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8710
		{

			sqlVAL.union.val = true
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8715
		{
			sqlVAL.union.val = false
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8720
		{
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8724
		{
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8727
		{
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8731
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
				StorageParams:    sqlDollar[9].union.storageParams(),
				Predicate:        sqlDollar[10].union.expr(),
				NotVisible:       sqlDollar[11].union.bool(),
			}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:8744
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
					StorageParams:    sqlDollar[10].union.storageParams(),
					Predicate:        sqlDollar[11].union.expr(),
					NotVisible:       sqlDollar[12].union.bool(),
				},
			}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8759
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
				NotVisible:       sqlDollar[10].union.bool(),
			}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8773
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8785
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8790
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8796
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8803
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
					Predicate:        sqlDollar[9].union.expr(),
				},
			}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8815
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					Sharded:       sqlDollar[6].union.shardedIndexDef(),
					StorageParams: sqlDollar[7].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8827
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8838
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8845
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8849
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8855
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8865
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8876
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8880
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8887
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8893
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					StorageParams: sqlDollar[6].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8905
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8909
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8915
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8921
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8925
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8931
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8935
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8941
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8948
		{
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8949
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8950
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8951
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8952
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8953
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8971
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8975
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8981
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[3].union.expr(),
			}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8987
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8993
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8997
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9003
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9007
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9027
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9031
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9035
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9039
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9048
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9052
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9056
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9060
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9064
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9070
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9076
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9084
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9088
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9092
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9096
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9100
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9120
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9129
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9137
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9141
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9144
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9145
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9148
		{

			parsedType := sqlDollar[2].union.colType()
			if parsedType == nil {
				sqllex.(*lexer).lastError = pgerror.Newf(pgcode.UndefinedObject, "type %q does not exist", sqlDollar[2].union.val)
				sqllex.(*lexer).populateErrorDetails()
				return 1
			}
			if parsedType.Family() != types.IntFamily {
				sqllex.Error(fmt.Sprintf("invalid integer type: %s", parsedType.SQLString()))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptAs, AsIntegerType: parsedType}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9162
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9164
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9165
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9166
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9176
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9178
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9180
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9182
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9184
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9185
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9187
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9188
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9190
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9192
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9193
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart, IntVal: &x}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9195
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart, IntVal: &x, OptionalWord: true}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9198
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9206
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9209
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9213
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9219
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9223
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9233
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9237
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9240
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9251
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9255
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9259
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9263
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9267
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9271
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9274
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9278
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9282
		{
			sqlVAL.str = ""
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9290
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9294
		{

			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9301
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9305
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9313
		{
			sqlVAL.union.val = true
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9317
		{

			sqlVAL.union.val = true
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9322
		{
			sqlVAL.union.val = false
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9334
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9348
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9360
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9372
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
				WithData:     sqlDollar[8].union.bool(),
			}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9383
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
				WithData:     sqlDollar[11].union.bool(),
			}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9394
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9398
		{
			sqlVAL.union.val = false
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9402
		{
			sqlVAL.union.val = true
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9406
		{
			sqlVAL.union.val = true
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9412
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9416
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9420
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9424
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9428
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9432
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9436
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9440
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9444
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9448
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9452
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9456
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9460
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9464
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9468
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9472
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9476
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9480
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9484
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9488
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9492
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9496
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9500
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9504
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9512
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9516
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9522
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9526
		{
			sqlVAL.union.val = nil
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9532
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: sqlDollar[3].union.expr()}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9536
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: tree.DNull}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9541
		{
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9542
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9551
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9559
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9567
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9569
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9571
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9573
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9575
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9577
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9581
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9585
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9591
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9595
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:9612
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
				NotVisible:       sqlDollar[17].union.bool(),
			}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:9630
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
				NotVisible:       sqlDollar[20].union.bool(),
			}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:9649
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				PartitionByIndex: sqlDollar[13].union.partitionByIndex(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				Predicate:        sqlDollar[15].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
				NotVisible:       sqlDollar[16].union.bool(),
			}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:9666
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				PartitionByIndex: sqlDollar[16].union.partitionByIndex(),
				StorageParams:    sqlDollar[17].union.storageParams(),
				Predicate:        sqlDollar[18].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
				NotVisible:       sqlDollar[19].union.bool(),
			}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9683
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9687
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9702
		{
			sqlVAL.union.val = false
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9708
		{
			sqlVAL.union.val = true
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9712
		{
			sqlVAL.union.val = false
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9718
		{
			sqlVAL.union.val = true
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9722
		{
			sqlVAL.union.val = false
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9728
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9732
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9741
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9747
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9753
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9761
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder, OpClass: tree.Name(opClass)}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9779
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9780
		{
			sqlVAL.str = ""
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9783
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9784
		{
			sqlVAL.str = ""
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9788
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9792
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9796
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9802
		{
			sqlVAL.union.val = true
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9806
		{
			sqlVAL.union.val = true
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9810
		{
			sqlVAL.union.val = false
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9814
		{
			sqlVAL.union.val = false
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9820
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9826
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9832
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9838
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9846
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9852
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9860
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9868
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9878
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9884
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9891
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9897
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9903
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9910
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9916
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9922
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9928
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9937
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9945
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9955
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9961
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9971
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9977
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9989
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9998
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10008
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:10017
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10029
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10035
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10043
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10052
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10063
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10069
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10081
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:10087
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10101
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10107
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10115
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10119
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10131
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10140
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10149
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10158
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10166
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10170
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.targetObjectType(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10181
		{
			sqlVAL.union.val = true
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10185
		{
			sqlVAL.union.val = false
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10191
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.targetObjectType(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:10199
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.targetObjectType(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10210
		{
			sqlVAL.union.val = privilege.Tables
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10214
		{
			sqlVAL.union.val = privilege.Sequences
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10218
		{
			sqlVAL.union.val = privilege.Types
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10222
		{
			sqlVAL.union.val = privilege.Schemas
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10226
		{
			sqlVAL.union.val = privilege.Functions
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10230
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON ROUTINES ...")
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10236
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10239
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10245
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10249
		{
			sqlVAL.str = ""
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10256
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10260
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10265
		{
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10266
		{
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10269
		{
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10270
		{
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10278
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10281
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10291
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10299
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10301
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10305
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10308
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10321
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10329
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10331
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10337
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10350
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10358
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10360
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10366
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10374
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10377
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10381
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10382
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10383
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10399
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10402
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10412
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10415
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10419
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10424
		{
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10425
		{
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10426
		{
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10436
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10440
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10443
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10449
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10450
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10454
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10457
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10461
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10464
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10468
		{
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10469
		{
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10473
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10477
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10483
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10487
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10493
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10497
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10510
		{
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10512
		{
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10516
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10521
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10525
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10529
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10533
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10539
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10545
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10551
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10555
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10561
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10565
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:10575
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
				Owner:           sqlDollar[14].union.roleSpec(),
				SecondaryRegion: tree.Name(sqlDollar[15].str),
			}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:10592
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
				Owner:           sqlDollar[17].union.roleSpec(),
				SecondaryRegion: tree.Name(sqlDollar[18].str),
			}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10609
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10614
		{
			sqlVAL.str = ""
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10619
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10626
		{
			sqlVAL.str = ""
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10631
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10638
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10644
		{
			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10648
		{
			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10654
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10658
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10664
		{

		}
	case 1805:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10671
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10675
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10679
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10688
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10694
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10698
		{
			sqlVAL.str = ""
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10704
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10708
		{
			sqlVAL.str = ""
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10714
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10718
		{
			sqlVAL.str = ""
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10724
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10728
		{
			sqlVAL.str = ""
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10734
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10742
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10748
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10752
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10759
		{
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10760
		{
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10775
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10782
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10789
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10800
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10807
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10811
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10820
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10825
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10831
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10835
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10839
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10845
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10849
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10869
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10873
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10880
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:10888
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10897
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				DoNothing:  true,
			}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:10904
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				Exprs:      sqlDollar[9].union.updateExprs(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
			}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10914
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10919
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10923
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:10940
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10952
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10955
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10958
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10964
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10968
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10981
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10984
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10988
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10999
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11005
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11014
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11020
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11061
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11067
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11071
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11086
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11090
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11094
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11098
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11102
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11106
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11110
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11114
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11119
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11120
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11123
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11124
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11128
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11132
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11138
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11147
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11148
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11149
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11150
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11153
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11154
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11157
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11158
		{
			sqlVAL.union.val = tree.LockWaitSkipLocked
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11159
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11164
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11199
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11200
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11201
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11223
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11236
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11250
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11262
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11266
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11275
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11284
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11299
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11306
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11318
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11322
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11327
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11333
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11337
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11343
		{
			sqlVAL.union.val = true
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11347
		{
			sqlVAL.union.val = false
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11353
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.colDefList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11363
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.colDefList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11375
		{
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11376
		{
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11380
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11384
		{
			sqlVAL.union.val = nil
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11389
		{
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11390
		{
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11394
		{
			sqlVAL.union.val = true
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11398
		{
			sqlVAL.union.val = false
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11402
		{
			sqlVAL.union.val = false
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11408
		{
			sqlVAL.union.val = true
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11414
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11419
		{
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11420
		{
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11423
		{
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11424
		{
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11428
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11432
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11438
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11444
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11448
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11455
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11459
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11465
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11477
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11482
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11494
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11498
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11502
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11508
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11517
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11528
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11529
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11533
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11537
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11541
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11555
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11559
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11567
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11574
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11596
		{
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11597
		{
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11600
		{
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11601
		{
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11618
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11622
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11627
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11628
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11634
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11635
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11636
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11637
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11641
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11645
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11664
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11667
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11669
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11681
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11684
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11686
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11692
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11696
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11702
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11706
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11711
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11716
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11722
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11727
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11732
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11737
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11743
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11748
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11753
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11760
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11765
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11776
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11780
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11784
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11792
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11826
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11836
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11846
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11854
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11863
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11867
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11871
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11882
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11906
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11912
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11923
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11927
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11933
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11935
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11939
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11945
		{
			sqlVAL.union.val = sqlDollar[2].union.colDefList()
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11949
		{
			sqlVAL.union.val = tree.ColumnDefList(nil)
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11955
		{
			sqlVAL.union.val = tree.ColumnDefList{tree.ColumnDef{Name: tree.Name(sqlDollar[1].str)}}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11959
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colDefList(), tree.ColumnDef{Name: tree.Name(sqlDollar[3].str)})
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11966
		{
			sqlVAL.union.val = tree.ColumnDefList(nil)
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11970
		{
			sqlVAL.union.val = sqlDollar[2].union.colDefList()
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11976
		{
			sqlVAL.union.val = tree.ColumnDefList{sqlDollar[1].union.colDef()}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11980
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colDefList(), sqlDollar[3].union.colDef())
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11986
		{
			sqlVAL.union.val = tree.ColumnDef{Name: tree.Name(sqlDollar[1].str)}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11990
		{
			sqlVAL.union.val = tree.ColumnDef{Name: tree.Name(sqlDollar[1].str), Type: sqlDollar[2].union.typeReference()}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11995
		{
			sqlVAL.union.val = nil
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11996
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11997
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12001
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12005
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12011
		{
			sqlVAL.union.val = true
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12015
		{
			sqlVAL.union.val = false
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12035
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12039
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12043
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12047
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12051
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12055
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12061
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.colDefList()}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12065
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.colDefList()}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12072
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12078
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.colDefList()}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12082
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.colDefList()}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12089
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12095
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12102
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12108
		{
			sqlVAL.str = tree.AstFull
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12112
		{
			sqlVAL.str = tree.AstLeft
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12116
		{
			sqlVAL.str = tree.AstRight
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12120
		{
			sqlVAL.str = tree.AstInner
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12126
		{
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12127
		{
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12151
		{
			sqlVAL.str = tree.AstHash
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12155
		{
			sqlVAL.str = tree.AstMerge
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12159
		{
			sqlVAL.str = tree.AstLookup
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12163
		{
			sqlVAL.str = tree.AstInverted
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12167
		{
			sqlVAL.str = ""
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12180
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12184
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12189
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12190
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12191
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12192
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12196
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12201
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12209
		{
			sqlVAL.union.val = &tree.Unlisten{ChannelName: sqlDollar[2].union.unresolvedObjectName(), Star: false}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12213
		{
			sqlVAL.union.val = &tree.Unlisten{ChannelName: nil, Star: true}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12227
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12231
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12237
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12243
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12253
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12263
		{
			sqlVAL.union.val = true
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12267
		{
			sqlVAL.union.val = false
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12273
		{
			sqlVAL.union.val = true
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12277
		{
			sqlVAL.union.val = false
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12283
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12290
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12302
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12315
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12323
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12324
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12334
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12341
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12342
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12344
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12352
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12353
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12365
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12372
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12381
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12421
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12426
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12433
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12434
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12437
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12438
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12439
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12440
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12441
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12442
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12443
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12444
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12445
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12446
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12447
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12448
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12449
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12450
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12451
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12452
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12453
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12454
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12455
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12456
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12457
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12458
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12459
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12460
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12461
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12462
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12463
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12464
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12465
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12466
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12467
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12468
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12471
		{
			sqlVAL.union.val = types.Geography
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12472
		{
			sqlVAL.union.val = types.Geometry
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12473
		{
			sqlVAL.union.val = types.Box2D
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12475
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12479
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12483
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12491
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12517
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12525
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12533
		{
			sqlVAL.union.val = nil
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12540
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12544
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12548
		{
			sqlVAL.union.val = types.Int2
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12552
		{
			sqlVAL.union.val = types.Int
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12556
		{
			sqlVAL.union.val = types.Float4
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12560
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12564
		{
			sqlVAL.union.val = types.Float
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12568
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12576
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12584
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12592
		{
			sqlVAL.union.val = types.Bool
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12598
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12611
		{
			sqlVAL.union.val = types.Float
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12617
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12623
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12631
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12635
		{
			sqlVAL.union.val = types.VarBit
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12639
		{
			sqlVAL.union.val = types.VarBit
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12645
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12657
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12663
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12667
		{
			sqlVAL.union.val = types.VarChar
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12671
		{
			sqlVAL.union.val = types.VarChar
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12675
		{
			sqlVAL.union.val = types.String
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12684
		{
			sqlVAL.union.val = true
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12685
		{
			sqlVAL.union.val = false
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12690
		{
			sqlVAL.union.val = types.Date
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12694
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12702
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12714
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12716
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12725
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12733
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12746
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12750
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12760
		{
			sqlVAL.union.val = true
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12761
		{
			sqlVAL.union.val = false
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12762
		{
			sqlVAL.union.val = false
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12766
		{
			sqlVAL.union.val = types.Interval
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12770
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12774
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12785
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12793
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12801
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12809
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12817
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12825
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12831
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12840
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12849
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12858
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12864
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12873
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12879
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12889
		{
			sqlVAL.union.val = nil
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12895
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12903
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12940
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12944
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12948
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12952
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12963
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12968
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12972
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12976
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12980
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12984
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12988
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12992
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12996
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13000
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13004
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13008
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13012
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13016
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13020
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13024
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13028
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13032
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13036
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13040
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13044
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13048
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13052
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13056
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13060
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13064
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13068
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13072
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13076
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13080
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13084
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13088
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13092
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13096
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13100
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13104
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13108
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13112
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13120
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13130
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13134
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13138
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13142
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13146
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13150
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13154
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13158
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13162
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13166
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13170
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13174
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13178
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13182
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13186
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13190
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13194
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13198
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13202
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13206
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13210
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.EQ),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2278:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13218
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.NE),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13226
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13230
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2281:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13234
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13238
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13242
		{
			t1, t2 := sqlDollar[1].union.tuple(), sqlDollar[3].union.tuple()
			if len(t1.Exprs) != 2 {
				sqllex.Error("wrong number of parameters on left side of OVERLAPS expression")
				return 1
			}
			if len(t2.Exprs) != 2 {
				sqllex.Error("wrong number of parameters on right side of OVERLAPS expression")
				return 1
			}
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("overlaps"), Exprs: tree.Exprs{t1.Exprs[0], t1.Exprs[1], t2.Exprs[0], t2.Exprs[1]}}
		}
	case 2284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13255
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2285:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13259
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13263
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2287:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13267
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13271
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2289:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13275
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2290:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13279
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2291:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13283
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2292:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13287
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2293:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13291
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2294:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13295
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2295:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13299
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2296:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13303
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2297:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13307
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13311
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2299:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13315
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2300:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13319
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(treecmp.ComparisonOperator)
			if !ok {

				if tree.IsUnaryComplement(subOp) {
					subOp = treecmp.MakeComparisonOperator(treecmp.RegMatch)
				} else {
					sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
						subOp, op, subOp))
					return 1
				}
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 2301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13343
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 2302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13348
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 2304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13360
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13364
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13368
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13372
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13376
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13380
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13384
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13388
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13392
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13396
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13400
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13404
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13408
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13412
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13416
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13420
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13424
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13428
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13432
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13436
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13440
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13444
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13448
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13452
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13456
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13464
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2330:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13474
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2331:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13478
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2332:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13482
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2333:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13486
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13500
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 2337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13508
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 2338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13544
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2339:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13548
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13552
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13556
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13560
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2343:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13565
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13567
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13571
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13575
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13579
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2348:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13583
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2349:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13587
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2350:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13591
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13600
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2352:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13607
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2353:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13611
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2354:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13615
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if idx <= 0 {
				err := errors.New("invalid numeric tuple index: indexes must be > 0")
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13625
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13630
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13634
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2359:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13638
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13642
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13646
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2362:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13649
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13653
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2364:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13657
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2365:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13660
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2366:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:13661
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2367:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13663
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2368:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13669
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2369:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13673
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13676
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13685
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							un, err := name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
							typ = &un
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2372:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13738
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2373:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13751
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2374:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13763
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13772
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13773
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2377:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13778
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2378:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13782
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13786
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13792
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2381:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13796
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13800
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2383:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13804
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2384:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13808
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13812
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2386:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13818
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13822
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13826
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2389:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13830
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2390:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13834
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2391:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:13838
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2392:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:13842
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2393:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13846
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2394:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13850
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2395:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13854
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2396:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13858
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2397:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13862
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2398:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13866
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13873
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13876
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13878
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13881
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13883
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2405:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13887
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13890
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13892
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2408:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13896
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13899
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13901
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2411:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13905
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13908
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13910
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2414:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13914
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13917
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13919
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13922
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13924
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13927
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2420:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13929
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13932
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2422:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13934
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13937
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2424:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13939
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13942
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2426:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13944
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2427:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13948
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13951
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2429:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13952
		{
			return unimplemented(sqllex, "treat")
		}
	case 2430:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13954
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2431:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13958
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2432:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13962
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2433:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13966
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2434:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13970
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13973
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2436:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13975
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13978
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2438:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13984
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2439:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13988
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2440:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13994
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2441:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13998
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14005
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2443:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14009
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2444:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14015
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14019
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14025
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14033
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14037
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2449:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14041
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2450:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:14048
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2452:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14068
		{
			sqlVAL.str = ""
		}
	case 2453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14074
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2454:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14078
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14084
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14092
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14100
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2458:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14108
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14114
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2460:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14127
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == treewindow.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == treewindow.CurrentRow && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14155
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedPreceding}
		}
	case 2462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14159
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedFollowing}
		}
	case 2463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14163
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.CurrentRow}
		}
	case 2464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14167
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetPreceding,
			}
		}
	case 2465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14174
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetFollowing,
			}
		}
	case 2466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14183
		{
			sqlVAL.union.val = treewindow.ExcludeCurrentRow
		}
	case 2467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14187
		{
			sqlVAL.union.val = treewindow.ExcludeGroup
		}
	case 2468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14191
		{
			sqlVAL.union.val = treewindow.ExcludeTies
		}
	case 2469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14195
		{

			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2470:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14200
		{
			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2471:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14213
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14217
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2474:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14224
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14236
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Any)
		}
	case 2476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14240
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Some)
		}
	case 2477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14244
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.All)
		}
	case 2478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14260
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Plus)
		}
	case 2479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14261
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Minus)
		}
	case 2480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14262
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mult)
		}
	case 2481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14263
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Div)
		}
	case 2482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14264
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mod)
		}
	case 2483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14265
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Pow)
		}
	case 2484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14266
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LT)
		}
	case 2485:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14267
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GT)
		}
	case 2486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14268
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.EQ)
		}
	case 2487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14269
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LE)
		}
	case 2488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14270
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GE)
		}
	case 2489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14271
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NE)
		}
	case 2490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14273
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONExists)
		}
	case 2491:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14274
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitand)
		}
	case 2492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14275
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitor)
		}
	case 2493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14276
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitxor)
		}
	case 2494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14277
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.FloorDiv)
		}
	case 2495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14278
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Contains)
		}
	case 2496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14279
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ContainedBy)
		}
	case 2497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14280
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.LShift)
		}
	case 2498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14281
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.RShift)
		}
	case 2499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14282
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Concat)
		}
	case 2500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14283
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchVal)
		}
	case 2501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14284
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchText)
		}
	case 2502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14285
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchValPath)
		}
	case 2503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14286
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchTextPath)
		}
	case 2504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14287
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONSomeExists)
		}
	case 2505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14288
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONAllExists)
		}
	case 2506:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14289
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegMatch)
		}
	case 2507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14290
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.RegIMatch)
		}
	case 2508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14291
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegIMatch)
		}
	case 2509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14292
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Overlaps)
		}
	case 2510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14293
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14294
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14295
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2514:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14300
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2515:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14316
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14323
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Like)
		}
	case 2519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14324
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotLike)
		}
	case 2520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14325
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ILike)
		}
	case 2521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14326
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotILike)
		}
	case 2522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14349
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14353
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14359
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14363
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14367
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14378
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14382
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14388
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14392
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2532:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14399
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2533:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14405
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14409
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2535:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14415
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14419
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14425
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14429
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2539:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14435
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14439
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14445
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2542:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14449
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2551:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14472
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14476
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2553:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14480
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14486
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14493
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2556:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14497
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14514
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14518
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14522
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14526
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2561:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14530
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14536
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14542
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14548
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14552
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2566:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14556
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2567:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14562
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2569:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14574
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2570:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14581
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14585
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2572:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14591
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14597
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2574:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14601
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2576:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14608
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14614
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2578:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14618
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2580:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14625
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2581:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14631
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14635
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2583:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14640
		{
		}
	case 2584:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14641
		{
		}
	case 2585:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14645
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14649
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14655
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14664
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2589:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14668
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14672
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2593:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14684
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14688
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14694
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2596:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14698
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14717
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14725
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14748
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14757
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2602:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14761
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14765
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14769
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2605:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14775
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14779
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14794
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14798
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14810
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14814
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14823
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2618:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14834
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14843
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14851
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2621:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14868
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14953
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14961
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14965
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14971
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14975
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14981
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14987
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name('*'), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2649:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14994
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2655:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15021
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15028
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2658:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:15032
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2659:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:15036
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2661:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:15050
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2662:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:15054
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15058
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15071
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15080
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15098
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15111
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2672:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:15118
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2680:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:15143
		{
			sqlVAL.str = ""
		}
	case 2681:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15149
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2682:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:15153
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
